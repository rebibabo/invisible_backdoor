<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11746.c" pos:tabs="8"><function pos:start="1:1" pos:end="70:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">cpu_alpha_store_fpcr</name> <parameter_list pos:start="1:27" pos:end="1:55">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:35">CPUState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">env</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:50">uint64_t</name></type> <name pos:start="1:52" pos:end="1:54">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="70:1">{<block_content pos:start="5:5" pos:end="68:57">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">round_mode</name></decl>, <decl pos:start="5:21" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:24">mask</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:67"><expr pos:start="9:5" pos:end="9:66"><call pos:start="9:5" pos:end="9:66"><name pos:start="9:5" pos:end="9:29">set_float_exception_flags</name><argument_list pos:start="9:30" pos:end="9:66">(<argument pos:start="9:31" pos:end="9:48"><expr pos:start="9:31" pos:end="9:48"><operator pos:start="9:31" pos:end="9:31">(</operator><name pos:start="9:32" pos:end="9:34">val</name> <operator pos:start="9:36" pos:end="9:37">&gt;&gt;</operator> <literal type="number" pos:start="9:39" pos:end="9:40">52</literal><operator pos:start="9:41" pos:end="9:41">)</operator> <operator pos:start="9:43" pos:end="9:43">&amp;</operator> <literal type="number" pos:start="9:45" pos:end="9:48">0x3F</literal></expr></argument>, <argument pos:start="9:51" pos:end="9:65"><expr pos:start="9:51" pos:end="9:65"><operator pos:start="9:51" pos:end="9:51">&amp;</operator><name pos:start="9:52" pos:end="9:65"><name pos:start="9:52" pos:end="9:54">env</name><operator pos:start="9:55" pos:end="9:56">-&gt;</operator><name pos:start="9:57" pos:end="9:65">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:13"><expr pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:8">mask</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <literal type="number" pos:start="13:12" pos:end="13:12">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:35"><if pos:start="15:5" pos:end="17:35">if <condition pos:start="15:8" pos:end="15:24">(<expr pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:11">val</name> <operator pos:start="15:13" pos:end="15:13">&amp;</operator> <name pos:start="15:15" pos:end="15:23">FPCR_INVD</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:35"><block_content pos:start="17:9" pos:end="17:35">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:12">mask</name> <operator pos:start="17:14" pos:end="17:15">|=</operator> <name pos:start="17:17" pos:end="17:34">float_flag_invalid</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:37"><if pos:start="19:5" pos:end="21:37">if <condition pos:start="19:8" pos:end="19:24">(<expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:11">val</name> <operator pos:start="19:13" pos:end="19:13">&amp;</operator> <name pos:start="19:15" pos:end="19:23">FPCR_DZED</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:37"><block_content pos:start="21:9" pos:end="21:37">

        <expr_stmt pos:start="21:9" pos:end="21:37"><expr pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:12">mask</name> <operator pos:start="21:14" pos:end="21:15">|=</operator> <name pos:start="21:17" pos:end="21:36">float_flag_divbyzero</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="25:36"><if pos:start="23:5" pos:end="25:36">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:11">val</name> <operator pos:start="23:13" pos:end="23:13">&amp;</operator> <name pos:start="23:15" pos:end="23:23">FPCR_OVFD</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:36"><block_content pos:start="25:9" pos:end="25:36">

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:12">mask</name> <operator pos:start="25:14" pos:end="25:15">|=</operator> <name pos:start="25:17" pos:end="25:35">float_flag_overflow</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="29:37"><if pos:start="27:5" pos:end="29:37">if <condition pos:start="27:8" pos:end="27:24">(<expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:11">val</name> <operator pos:start="27:13" pos:end="27:13">&amp;</operator> <name pos:start="27:15" pos:end="27:23">FPCR_UNFD</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:37"><block_content pos:start="29:9" pos:end="29:37">

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:12">mask</name> <operator pos:start="29:14" pos:end="29:15">|=</operator> <name pos:start="29:17" pos:end="29:36">float_flag_underflow</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="33:35"><if pos:start="31:5" pos:end="33:35">if <condition pos:start="31:8" pos:end="31:24">(<expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:11">val</name> <operator pos:start="31:13" pos:end="31:13">&amp;</operator> <name pos:start="31:15" pos:end="31:23">FPCR_INED</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:35"><block_content pos:start="33:9" pos:end="33:35">

        <expr_stmt pos:start="33:9" pos:end="33:35"><expr pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:12">mask</name> <operator pos:start="33:14" pos:end="33:15">|=</operator> <name pos:start="33:17" pos:end="33:34">float_flag_inexact</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:47"><expr pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:7">env</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:18">fp_status</name><operator pos:start="35:19" pos:end="35:19">.</operator><name pos:start="35:20" pos:end="35:39">float_exception_mask</name></name> <operator pos:start="35:41" pos:end="35:41">=</operator> <name pos:start="35:43" pos:end="35:46">mask</name></expr>;</expr_stmt>



    <switch pos:start="39:5" pos:end="66:5">switch <condition pos:start="39:12" pos:end="39:40">(<expr pos:start="39:13" pos:end="39:39"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:16">val</name> <operator pos:start="39:18" pos:end="39:19">&gt;&gt;</operator> <name pos:start="39:21" pos:end="39:34">FPCR_DYN_SHIFT</name><operator pos:start="39:35" pos:end="39:35">)</operator> <operator pos:start="39:37" pos:end="39:37">&amp;</operator> <literal type="number" pos:start="39:39" pos:end="39:39">3</literal></expr>)</condition> <block pos:start="39:42" pos:end="66:5">{<block_content pos:start="41:5" pos:end="64:14">

    <case pos:start="41:5" pos:end="41:11">case <expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">0</literal></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:18">round_mode</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:40">float_round_to_zero</name></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">1</literal></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:18">round_mode</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:37">float_round_down</name></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">2</literal></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:46"><expr pos:start="55:9" pos:end="55:45"><name pos:start="55:9" pos:end="55:18">round_mode</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:45">float_round_nearest_even</name></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:11">case <expr pos:start="59:10" pos:end="59:10"><literal type="number" pos:start="59:10" pos:end="59:10">3</literal></expr>:</case>


        <expr_stmt pos:start="62:9" pos:end="62:36"><expr pos:start="62:9" pos:end="62:35"><name pos:start="62:9" pos:end="62:18">round_mode</name> <operator pos:start="62:20" pos:end="62:20">=</operator> <name pos:start="62:22" pos:end="62:35">float_round_up</name></expr>;</expr_stmt>

        <break pos:start="64:9" pos:end="64:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="68:5" pos:end="68:57"><expr pos:start="68:5" pos:end="68:56"><call pos:start="68:5" pos:end="68:56"><name pos:start="68:5" pos:end="68:27">set_float_rounding_mode</name><argument_list pos:start="68:28" pos:end="68:56">(<argument pos:start="68:29" pos:end="68:38"><expr pos:start="68:29" pos:end="68:38"><name pos:start="68:29" pos:end="68:38">round_mode</name></expr></argument>, <argument pos:start="68:41" pos:end="68:55"><expr pos:start="68:41" pos:end="68:55"><operator pos:start="68:41" pos:end="68:41">&amp;</operator><name pos:start="68:42" pos:end="68:55"><name pos:start="68:42" pos:end="68:44">env</name><operator pos:start="68:45" pos:end="68:46">-&gt;</operator><name pos:start="68:47" pos:end="68:55">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
