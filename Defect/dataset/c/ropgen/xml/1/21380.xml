<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21380.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">compute_pkt_fields2</name><parameter_list pos:start="1:31" pos:end="1:79">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:59">AVStream</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">st</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:78"><decl pos:start="1:66" pos:end="1:78"><type pos:start="1:66" pos:end="1:78"><name pos:start="1:66" pos:end="1:73">AVPacket</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:78">pkt</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="63:13">{<block_content pos:start="3:5" pos:end="63:13">
    <decl_stmt pos:start="3:5" pos:end="3:76"><decl pos:start="3:5" pos:end="3:75"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:13">delay</name> <init pos:start="3:15" pos:end="3:75">= <expr pos:start="3:17" pos:end="3:75"><call pos:start="3:17" pos:end="3:75"><name pos:start="3:17" pos:end="3:21">FFMAX</name><argument_list pos:start="3:22" pos:end="3:75">(<argument pos:start="3:23" pos:end="3:45"><expr pos:start="3:23" pos:end="3:45"><name pos:start="3:23" pos:end="3:45"><name pos:start="3:23" pos:end="3:24">st</name><operator pos:start="3:25" pos:end="3:26">-&gt;</operator><name pos:start="3:27" pos:end="3:31">codec</name><operator pos:start="3:32" pos:end="3:33">-&gt;</operator><name pos:start="3:34" pos:end="3:45">has_b_frames</name></name></expr></argument>, <argument pos:start="3:48" pos:end="3:74"><expr pos:start="3:48" pos:end="3:74"><name pos:start="3:48" pos:end="3:70"><name pos:start="3:48" pos:end="3:49">st</name><operator pos:start="3:50" pos:end="3:51">-&gt;</operator><name pos:start="3:52" pos:end="3:56">codec</name><operator pos:start="3:57" pos:end="3:58">-&gt;</operator><name pos:start="3:59" pos:end="3:70">max_b_frames</name></name> <operator pos:start="3:72" pos:end="3:72">&gt;</operator> <literal type="number" pos:start="3:74" pos:end="3:74">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:32"><decl pos:start="4:5" pos:end="4:11"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:11">num</name></decl>, <decl pos:start="4:14" pos:end="4:16"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:14" pos:end="4:16">den</name></decl>, <decl pos:start="4:19" pos:end="4:28"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:19" pos:end="4:28">frame_size</name></decl>, <decl pos:start="4:31" pos:end="4:31"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:31" pos:end="4:31">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="6:115"><expr pos:start="5:5" pos:end="6:114"><call pos:start="5:5" pos:end="6:114"><name pos:start="5:5" pos:end="5:11">av_dlog</name><argument_list pos:start="5:12" pos:end="6:114">(<argument pos:start="5:13" pos:end="5:13"><expr pos:start="5:13" pos:end="5:13"><name pos:start="5:13" pos:end="5:13">s</name></expr></argument>, <argument pos:start="5:16" pos:end="5:83"><expr pos:start="5:16" pos:end="5:83"><literal type="string" pos:start="5:16" pos:end="5:83">"compute_pkt_fields2: pts:%s dts:%s cur_dts:%s b:%d size:%d st:%d\n"</literal></expr></argument>,
            <argument pos:start="6:13" pos:end="6:31"><expr pos:start="6:13" pos:end="6:31"><call pos:start="6:13" pos:end="6:31"><name pos:start="6:13" pos:end="6:21">av_ts2str</name><argument_list pos:start="6:22" pos:end="6:31">(<argument pos:start="6:23" pos:end="6:30"><expr pos:start="6:23" pos:end="6:30"><name pos:start="6:23" pos:end="6:30"><name pos:start="6:23" pos:end="6:25">pkt</name><operator pos:start="6:26" pos:end="6:27">-&gt;</operator><name pos:start="6:28" pos:end="6:30">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="6:34" pos:end="6:52"><expr pos:start="6:34" pos:end="6:52"><call pos:start="6:34" pos:end="6:52"><name pos:start="6:34" pos:end="6:42">av_ts2str</name><argument_list pos:start="6:43" pos:end="6:52">(<argument pos:start="6:44" pos:end="6:51"><expr pos:start="6:44" pos:end="6:51"><name pos:start="6:44" pos:end="6:51"><name pos:start="6:44" pos:end="6:46">pkt</name><operator pos:start="6:47" pos:end="6:48">-&gt;</operator><name pos:start="6:49" pos:end="6:51">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="6:55" pos:end="6:76"><expr pos:start="6:55" pos:end="6:76"><call pos:start="6:55" pos:end="6:76"><name pos:start="6:55" pos:end="6:63">av_ts2str</name><argument_list pos:start="6:64" pos:end="6:76">(<argument pos:start="6:65" pos:end="6:75"><expr pos:start="6:65" pos:end="6:75"><name pos:start="6:65" pos:end="6:75"><name pos:start="6:65" pos:end="6:66">st</name><operator pos:start="6:67" pos:end="6:68">-&gt;</operator><name pos:start="6:69" pos:end="6:75">cur_dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="6:79" pos:end="6:83"><expr pos:start="6:79" pos:end="6:83"><name pos:start="6:79" pos:end="6:83">delay</name></expr></argument>, <argument pos:start="6:86" pos:end="6:94"><expr pos:start="6:86" pos:end="6:94"><name pos:start="6:86" pos:end="6:94"><name pos:start="6:86" pos:end="6:88">pkt</name><operator pos:start="6:89" pos:end="6:90">-&gt;</operator><name pos:start="6:91" pos:end="6:94">size</name></name></expr></argument>, <argument pos:start="6:97" pos:end="6:113"><expr pos:start="6:97" pos:end="6:113"><name pos:start="6:97" pos:end="6:113"><name pos:start="6:97" pos:end="6:99">pkt</name><operator pos:start="6:100" pos:end="6:101">-&gt;</operator><name pos:start="6:102" pos:end="6:113">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="7:5" pos:end="7:24">/* duration field */</comment>
    <if_stmt pos:start="8:5" pos:end="63:13"><if pos:start="8:5" pos:end="63:13">if <condition pos:start="8:8" pos:end="8:27">(<expr pos:start="8:9" pos:end="8:26"><name pos:start="8:9" pos:end="8:21"><name pos:start="8:9" pos:end="8:11">pkt</name><operator pos:start="8:12" pos:end="8:13">-&gt;</operator><name pos:start="8:14" pos:end="8:21">duration</name></name> <operator pos:start="8:23" pos:end="8:24">==</operator> <literal type="number" pos:start="8:26" pos:end="8:26">0</literal></expr>)</condition> <block pos:start="8:29" pos:end="63:13">{<block_content pos:start="9:9" pos:end="63:13">
        <expr_stmt pos:start="9:9" pos:end="9:61"><expr pos:start="9:9" pos:end="9:60"><call pos:start="9:9" pos:end="9:60"><name pos:start="9:9" pos:end="9:33">ff_compute_frame_duration</name><argument_list pos:start="9:34" pos:end="9:60">(<argument pos:start="9:35" pos:end="9:38"><expr pos:start="9:35" pos:end="9:38"><operator pos:start="9:35" pos:end="9:35">&amp;</operator><name pos:start="9:36" pos:end="9:38">num</name></expr></argument>, <argument pos:start="9:41" pos:end="9:44"><expr pos:start="9:41" pos:end="9:44"><operator pos:start="9:41" pos:end="9:41">&amp;</operator><name pos:start="9:42" pos:end="9:44">den</name></expr></argument>, <argument pos:start="9:47" pos:end="9:48"><expr pos:start="9:47" pos:end="9:48"><name pos:start="9:47" pos:end="9:48">st</name></expr></argument>, <argument pos:start="9:51" pos:end="9:54"><expr pos:start="9:51" pos:end="9:54"><name pos:start="9:51" pos:end="9:54">NULL</name></expr></argument>, <argument pos:start="9:57" pos:end="9:59"><expr pos:start="9:57" pos:end="9:59"><name pos:start="9:57" pos:end="9:59">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="10:9" pos:end="63:13"><if pos:start="10:9" pos:end="63:13">if <condition pos:start="10:12" pos:end="10:23">(<expr pos:start="10:13" pos:end="10:22"><name pos:start="10:13" pos:end="10:15">den</name> <operator pos:start="10:17" pos:end="10:18">&amp;&amp;</operator> <name pos:start="10:20" pos:end="10:22">num</name></expr>)</condition> <block pos:start="10:25" pos:end="63:13">{<block_content pos:start="11:13" pos:end="63:13">
            <expr_stmt pos:start="11:13" pos:end="11:139"><expr pos:start="11:13" pos:end="11:138"><name pos:start="11:13" pos:end="11:25"><name pos:start="11:13" pos:end="11:15">pkt</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:25">duration</name></name> <operator pos:start="11:27" pos:end="11:27">=</operator> <call pos:start="11:29" pos:end="11:138"><name pos:start="11:29" pos:end="11:38">av_rescale</name><argument_list pos:start="11:39" pos:end="11:138">(<argument pos:start="11:40" pos:end="11:40"><expr pos:start="11:40" pos:end="11:40"><literal type="number" pos:start="11:40" pos:end="11:40">1</literal></expr></argument>, <argument pos:start="11:43" pos:end="11:103"><expr pos:start="11:43" pos:end="11:103"><name pos:start="11:43" pos:end="11:45">num</name> <operator pos:start="11:47" pos:end="11:47">*</operator> <operator pos:start="11:49" pos:end="11:49">(</operator><name pos:start="11:50" pos:end="11:56">int64_t</name><operator pos:start="11:57" pos:end="11:57">)</operator><name pos:start="11:58" pos:end="11:74"><name pos:start="11:58" pos:end="11:59">st</name><operator pos:start="11:60" pos:end="11:61">-&gt;</operator><name pos:start="11:62" pos:end="11:70">time_base</name><operator pos:start="11:71" pos:end="11:71">.</operator><name pos:start="11:72" pos:end="11:74">den</name></name> <operator pos:start="11:76" pos:end="11:76">*</operator> <name pos:start="11:78" pos:end="11:103"><name pos:start="11:78" pos:end="11:79">st</name><operator pos:start="11:80" pos:end="11:81">-&gt;</operator><name pos:start="11:82" pos:end="11:86">codec</name><operator pos:start="11:87" pos:end="11:88">-&gt;</operator><name pos:start="11:89" pos:end="11:103">ticks_per_frame</name></name></expr></argument>, <argument pos:start="11:106" pos:end="11:137"><expr pos:start="11:106" pos:end="11:137"><name pos:start="11:106" pos:end="11:108">den</name> <operator pos:start="11:110" pos:end="11:110">*</operator> <operator pos:start="11:112" pos:end="11:112">(</operator><name pos:start="11:113" pos:end="11:119">int64_t</name><operator pos:start="11:120" pos:end="11:120">)</operator><name pos:start="11:121" pos:end="11:137"><name pos:start="11:121" pos:end="11:122">st</name><operator pos:start="11:123" pos:end="11:124">-&gt;</operator><name pos:start="11:125" pos:end="11:133">time_base</name><operator pos:start="11:134" pos:end="11:134">.</operator><name pos:start="11:135" pos:end="11:137">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="13:28"><if pos:start="12:5" pos:end="13:28">if <condition pos:start="12:8" pos:end="12:79">(<expr pos:start="12:9" pos:end="12:78"><name pos:start="12:9" pos:end="12:16"><name pos:start="12:9" pos:end="12:11">pkt</name><operator pos:start="12:12" pos:end="12:13">-&gt;</operator><name pos:start="12:14" pos:end="12:16">pts</name></name> <operator pos:start="12:18" pos:end="12:19">==</operator> <name pos:start="12:21" pos:end="12:34">AV_NOPTS_VALUE</name> <operator pos:start="12:36" pos:end="12:37">&amp;&amp;</operator> <name pos:start="12:39" pos:end="12:46"><name pos:start="12:39" pos:end="12:41">pkt</name><operator pos:start="12:42" pos:end="12:43">-&gt;</operator><name pos:start="12:44" pos:end="12:46">dts</name></name> <operator pos:start="12:48" pos:end="12:49">!=</operator> <name pos:start="12:51" pos:end="12:64">AV_NOPTS_VALUE</name> <operator pos:start="12:66" pos:end="12:67">&amp;&amp;</operator> <name pos:start="12:69" pos:end="12:73">delay</name> <operator pos:start="12:75" pos:end="12:76">==</operator> <literal type="number" pos:start="12:78" pos:end="12:78">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:28"><block_content pos:start="13:9" pos:end="13:28">
        <expr_stmt pos:start="13:9" pos:end="13:28"><expr pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:11">pkt</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:16">pts</name></name> <operator pos:start="13:18" pos:end="13:18">=</operator> <name pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:22">pkt</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:27">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="line" pos:start="14:5" pos:end="14:70">//XXX/FIXME this is a temporary hack until all encoders output pts</comment>
    <if_stmt pos:start="15:5" pos:end="63:13"><if pos:start="15:5" pos:end="63:13">if <condition pos:start="15:8" pos:end="15:94">(<expr pos:start="15:9" pos:end="15:93"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:17"><name pos:start="15:10" pos:end="15:12">pkt</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:17">pts</name></name> <operator pos:start="15:19" pos:end="15:20">==</operator> <literal type="number" pos:start="15:22" pos:end="15:22">0</literal> <operator pos:start="15:24" pos:end="15:25">||</operator> <name pos:start="15:27" pos:end="15:34"><name pos:start="15:27" pos:end="15:29">pkt</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:34">pts</name></name> <operator pos:start="15:36" pos:end="15:37">==</operator> <name pos:start="15:39" pos:end="15:52">AV_NOPTS_VALUE</name><operator pos:start="15:53" pos:end="15:53">)</operator> <operator pos:start="15:55" pos:end="15:56">&amp;&amp;</operator> <name pos:start="15:58" pos:end="15:65"><name pos:start="15:58" pos:end="15:60">pkt</name><operator pos:start="15:61" pos:end="15:62">-&gt;</operator><name pos:start="15:63" pos:end="15:65">dts</name></name> <operator pos:start="15:67" pos:end="15:68">==</operator> <name pos:start="15:70" pos:end="15:83">AV_NOPTS_VALUE</name> <operator pos:start="15:85" pos:end="15:86">&amp;&amp;</operator> <operator pos:start="15:88" pos:end="15:88">!</operator><name pos:start="15:89" pos:end="15:93">delay</name></expr>)</condition> <block pos:start="15:96" pos:end="63:13">{<block_content pos:start="16:9" pos:end="63:13">
        <decl_stmt pos:start="16:9" pos:end="16:26"><decl pos:start="16:9" pos:end="16:25"><type pos:start="16:9" pos:end="16:18"><specifier pos:start="16:9" pos:end="16:14">static</specifier> <name pos:start="16:16" pos:end="16:18">int</name></type> <name pos:start="16:20" pos:end="16:25">warned</name></decl>;</decl_stmt>
        <if_stmt pos:start="17:9" pos:end="63:13"><if pos:start="17:9" pos:end="63:13">if <condition pos:start="17:12" pos:end="17:20">(<expr pos:start="17:13" pos:end="17:19"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:19">warned</name></expr>)</condition> <block pos:start="17:22" pos:end="63:13">{<block_content pos:start="18:13" pos:end="63:13">
            <expr_stmt pos:start="18:13" pos:end="18:95"><expr pos:start="18:13" pos:end="18:94"><call pos:start="18:13" pos:end="18:94"><name pos:start="18:13" pos:end="18:18">av_log</name><argument_list pos:start="18:19" pos:end="18:94">(<argument pos:start="18:20" pos:end="18:20"><expr pos:start="18:20" pos:end="18:20"><name pos:start="18:20" pos:end="18:20">s</name></expr></argument>, <argument pos:start="18:23" pos:end="18:36"><expr pos:start="18:23" pos:end="18:36"><name pos:start="18:23" pos:end="18:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="18:39" pos:end="18:93"><expr pos:start="18:39" pos:end="18:93"><literal type="string" pos:start="18:39" pos:end="18:93">"Encoder did not produce proper pts, making some up.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="19:13" pos:end="19:23"><expr pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:18">warned</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:22">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="20:9" pos:end="22:35"><expr pos:start="20:9" pos:end="22:34"><name pos:start="20:9" pos:end="20:16"><name pos:start="20:9" pos:end="20:11">pkt</name><operator pos:start="20:12" pos:end="20:13">-&gt;</operator><name pos:start="20:14" pos:end="20:16">dts</name></name> <operator pos:start="20:18" pos:end="20:18">=</operator>
<comment type="line" pos:start="21:1" pos:end="21:32">//        pkt-&gt;pts= st-&gt;cur_dts;</comment>
            <name pos:start="22:13" pos:end="22:20"><name pos:start="22:13" pos:end="22:15">pkt</name><operator pos:start="22:16" pos:end="22:17">-&gt;</operator><name pos:start="22:18" pos:end="22:20">pts</name></name> <operator pos:start="22:22" pos:end="22:22">=</operator> <name pos:start="22:24" pos:end="22:34"><name pos:start="22:24" pos:end="22:25">st</name><operator pos:start="22:26" pos:end="22:27">-&gt;</operator><name pos:start="22:28" pos:end="22:30">pts</name><operator pos:start="22:31" pos:end="22:31">.</operator><name pos:start="22:32" pos:end="22:34">val</name></name></expr>;</expr_stmt>
    <comment type="line" pos:start="23:5" pos:end="23:28">//calculate dts from pts</comment>
    <if_stmt pos:start="24:5" pos:end="63:13"><if pos:start="24:5" pos:end="63:13">if <condition pos:start="24:8" pos:end="24:95">(<expr pos:start="24:9" pos:end="24:94"><name pos:start="24:9" pos:end="24:16"><name pos:start="24:9" pos:end="24:11">pkt</name><operator pos:start="24:12" pos:end="24:13">-&gt;</operator><name pos:start="24:14" pos:end="24:16">pts</name></name> <operator pos:start="24:18" pos:end="24:19">!=</operator> <name pos:start="24:21" pos:end="24:34">AV_NOPTS_VALUE</name> <operator pos:start="24:36" pos:end="24:37">&amp;&amp;</operator> <name pos:start="24:39" pos:end="24:46"><name pos:start="24:39" pos:end="24:41">pkt</name><operator pos:start="24:42" pos:end="24:43">-&gt;</operator><name pos:start="24:44" pos:end="24:46">dts</name></name> <operator pos:start="24:48" pos:end="24:49">==</operator> <name pos:start="24:51" pos:end="24:64">AV_NOPTS_VALUE</name> <operator pos:start="24:66" pos:end="24:67">&amp;&amp;</operator> <name pos:start="24:69" pos:end="24:73">delay</name> <operator pos:start="24:75" pos:end="24:76">&lt;=</operator> <name pos:start="24:78" pos:end="24:94">MAX_REORDER_DELAY</name></expr>)</condition> <block pos:start="24:97" pos:end="63:13">{<block_content pos:start="25:9" pos:end="63:13">
        <expr_stmt pos:start="25:9" pos:end="25:37"><expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:10">st</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:22">pts_buffer</name><index pos:start="25:23" pos:end="25:25">[<expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr>]</index></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:31">pkt</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:36">pts</name></name></expr>;</expr_stmt>
        <for pos:start="26:9" pos:end="27:75">for <control pos:start="26:13" pos:end="26:78">(<init pos:start="26:14" pos:end="26:19"><expr pos:start="26:14" pos:end="26:18"><name pos:start="26:14" pos:end="26:14">i</name> <operator pos:start="26:16" pos:end="26:16">=</operator> <literal type="number" pos:start="26:18" pos:end="26:18">1</literal></expr>;</init> <condition pos:start="26:21" pos:end="26:73"><expr pos:start="26:21" pos:end="26:72"><name pos:start="26:21" pos:end="26:21">i</name> <operator pos:start="26:23" pos:end="26:23">&lt;</operator> <name pos:start="26:25" pos:end="26:29">delay</name> <operator pos:start="26:31" pos:end="26:31">+</operator> <literal type="number" pos:start="26:33" pos:end="26:33">1</literal> <operator pos:start="26:35" pos:end="26:36">&amp;&amp;</operator> <name pos:start="26:38" pos:end="26:54"><name pos:start="26:38" pos:end="26:39">st</name><operator pos:start="26:40" pos:end="26:41">-&gt;</operator><name pos:start="26:42" pos:end="26:51">pts_buffer</name><index pos:start="26:52" pos:end="26:54">[<expr pos:start="26:53" pos:end="26:53"><name pos:start="26:53" pos:end="26:53">i</name></expr>]</index></name> <operator pos:start="26:56" pos:end="26:57">==</operator> <name pos:start="26:59" pos:end="26:72">AV_NOPTS_VALUE</name></expr>;</condition> <incr pos:start="26:75" pos:end="26:77"><expr pos:start="26:75" pos:end="26:77"><name pos:start="26:75" pos:end="26:75">i</name><operator pos:start="26:76" pos:end="26:77">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:13" pos:end="27:75"><block_content pos:start="27:13" pos:end="27:75">
            <expr_stmt pos:start="27:13" pos:end="27:75"><expr pos:start="27:13" pos:end="27:74"><name pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:14">st</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:26">pts_buffer</name><index pos:start="27:27" pos:end="27:29">[<expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">i</name></expr>]</index></name> <operator pos:start="27:31" pos:end="27:31">=</operator> <name pos:start="27:33" pos:end="27:40"><name pos:start="27:33" pos:end="27:35">pkt</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:40">pts</name></name> <operator pos:start="27:42" pos:end="27:42">+</operator> <operator pos:start="27:44" pos:end="27:44">(</operator><name pos:start="27:45" pos:end="27:45">i</name> <operator pos:start="27:47" pos:end="27:47">-</operator> <name pos:start="27:49" pos:end="27:53">delay</name> <operator pos:start="27:55" pos:end="27:55">-</operator> <literal type="number" pos:start="27:57" pos:end="27:57">1</literal><operator pos:start="27:58" pos:end="27:58">)</operator> <operator pos:start="27:60" pos:end="27:60">*</operator> <name pos:start="27:62" pos:end="27:74"><name pos:start="27:62" pos:end="27:64">pkt</name><operator pos:start="27:65" pos:end="27:66">-&gt;</operator><name pos:start="27:67" pos:end="27:74">duration</name></name></expr>;</expr_stmt></block_content></block></for>
        <for pos:start="28:9" pos:end="29:70">for <control pos:start="28:13" pos:end="28:78">(<init pos:start="28:14" pos:end="28:19"><expr pos:start="28:14" pos:end="28:18"><name pos:start="28:14" pos:end="28:14">i</name> <operator pos:start="28:16" pos:end="28:16">=</operator> <literal type="number" pos:start="28:18" pos:end="28:18">0</literal></expr>;</init> <condition pos:start="28:21" pos:end="28:73"><expr pos:start="28:21" pos:end="28:72"><name pos:start="28:21" pos:end="28:50"><name pos:start="28:21" pos:end="28:21">i</name><argument_list type="generic" pos:start="28:22" pos:end="28:50">&lt;<argument pos:start="28:23" pos:end="28:48"><expr pos:start="28:23" pos:end="28:48"><name pos:start="28:23" pos:end="28:27">delay</name> <operator pos:start="28:29" pos:end="28:30">&amp;&amp;</operator> <name pos:start="28:32" pos:end="28:48"><name pos:start="28:32" pos:end="28:33">st</name><operator pos:start="28:34" pos:end="28:35">-&gt;</operator><name pos:start="28:36" pos:end="28:45">pts_buffer</name><index pos:start="28:46" pos:end="28:48">[<expr pos:start="28:47" pos:end="28:47"><name pos:start="28:47" pos:end="28:47">i</name></expr>]</index></name></expr></argument> &gt;</argument_list></name> <name pos:start="28:52" pos:end="28:72"><name pos:start="28:52" pos:end="28:53">st</name><operator pos:start="28:54" pos:end="28:55">-&gt;</operator><name pos:start="28:56" pos:end="28:65">pts_buffer</name><index pos:start="28:66" pos:end="28:72">[<expr pos:start="28:67" pos:end="28:71"><name pos:start="28:67" pos:end="28:67">i</name> <operator pos:start="28:69" pos:end="28:69">+</operator> <literal type="number" pos:start="28:71" pos:end="28:71">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="28:75" pos:end="28:77"><expr pos:start="28:75" pos:end="28:77"><name pos:start="28:75" pos:end="28:75">i</name><operator pos:start="28:76" pos:end="28:77">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:13" pos:end="29:70"><block_content pos:start="29:13" pos:end="29:70">
            <expr_stmt pos:start="29:13" pos:end="29:70"><expr pos:start="29:13" pos:end="29:69"><call pos:start="29:13" pos:end="29:69"><name pos:start="29:13" pos:end="29:18">FFSWAP</name><argument_list pos:start="29:19" pos:end="29:69">(<argument pos:start="29:20" pos:end="29:26"><expr pos:start="29:20" pos:end="29:26"><name pos:start="29:20" pos:end="29:26">int64_t</name></expr></argument>, <argument pos:start="29:29" pos:end="29:45"><expr pos:start="29:29" pos:end="29:45"><name pos:start="29:29" pos:end="29:45"><name pos:start="29:29" pos:end="29:30">st</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:42">pts_buffer</name><index pos:start="29:43" pos:end="29:45">[<expr pos:start="29:44" pos:end="29:44"><name pos:start="29:44" pos:end="29:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="29:48" pos:end="29:68"><expr pos:start="29:48" pos:end="29:68"><name pos:start="29:48" pos:end="29:68"><name pos:start="29:48" pos:end="29:49">st</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:61">pts_buffer</name><index pos:start="29:62" pos:end="29:68">[<expr pos:start="29:63" pos:end="29:67"><name pos:start="29:63" pos:end="29:63">i</name> <operator pos:start="29:65" pos:end="29:65">+</operator> <literal type="number" pos:start="29:67" pos:end="29:67">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
        <expr_stmt pos:start="30:9" pos:end="30:37"><expr pos:start="30:9" pos:end="30:36"><name pos:start="30:9" pos:end="30:16"><name pos:start="30:9" pos:end="30:11">pkt</name><operator pos:start="30:12" pos:end="30:13">-&gt;</operator><name pos:start="30:14" pos:end="30:16">dts</name></name> <operator pos:start="30:18" pos:end="30:18">=</operator> <name pos:start="30:20" pos:end="30:36"><name pos:start="30:20" pos:end="30:21">st</name><operator pos:start="30:22" pos:end="30:23">-&gt;</operator><name pos:start="30:24" pos:end="30:33">pts_buffer</name><index pos:start="30:34" pos:end="30:36">[<expr pos:start="30:35" pos:end="30:35"><literal type="number" pos:start="30:35" pos:end="30:35">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <if_stmt pos:start="31:5" pos:end="63:13"><if pos:start="31:5" pos:end="63:13">if <condition pos:start="31:8" pos:end="33:62">(<expr pos:start="31:9" pos:end="33:61"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:10">st</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:19">cur_dts</name></name> <operator pos:start="31:21" pos:end="31:22">&amp;&amp;</operator> <name pos:start="31:24" pos:end="31:34"><name pos:start="31:24" pos:end="31:25">st</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:34">cur_dts</name></name> <operator pos:start="31:36" pos:end="31:37">!=</operator> <name pos:start="31:39" pos:end="31:52">AV_NOPTS_VALUE</name> <operator pos:start="31:54" pos:end="31:55">&amp;&amp;</operator>
        <operator pos:start="32:9" pos:end="32:9">(</operator><operator pos:start="32:10" pos:end="32:10">(</operator><operator pos:start="32:11" pos:end="32:11">!</operator><operator pos:start="32:12" pos:end="32:12">(</operator><name pos:start="32:13" pos:end="32:29"><name pos:start="32:13" pos:end="32:13">s</name><operator pos:start="32:14" pos:end="32:15">-&gt;</operator><name pos:start="32:16" pos:end="32:22">oformat</name><operator pos:start="32:23" pos:end="32:24">-&gt;</operator><name pos:start="32:25" pos:end="32:29">flags</name></name> <operator pos:start="32:31" pos:end="32:31">&amp;</operator> <name pos:start="32:33" pos:end="32:50">AVFMT_TS_NONSTRICT</name><operator pos:start="32:51" pos:end="32:51">)</operator> <operator pos:start="32:53" pos:end="32:54">&amp;&amp;</operator>
          <name pos:start="33:11" pos:end="33:21"><name pos:start="33:11" pos:end="33:12">st</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:21">cur_dts</name></name> <operator pos:start="33:23" pos:end="33:24">&gt;=</operator> <name pos:start="33:26" pos:end="33:33"><name pos:start="33:26" pos:end="33:28">pkt</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:33">dts</name></name><operator pos:start="33:34" pos:end="33:34">)</operator> <operator pos:start="33:36" pos:end="33:37">||</operator> <name pos:start="33:39" pos:end="33:49"><name pos:start="33:39" pos:end="33:40">st</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:49">cur_dts</name></name> <operator pos:start="33:51" pos:end="33:51">&gt;</operator> <name pos:start="33:53" pos:end="33:60"><name pos:start="33:53" pos:end="33:55">pkt</name><operator pos:start="33:56" pos:end="33:57">-&gt;</operator><name pos:start="33:58" pos:end="33:60">dts</name></name><operator pos:start="33:61" pos:end="33:61">)</operator></expr>)</condition> <block pos:start="33:64" pos:end="63:13">{<block_content pos:start="34:9" pos:end="63:13">
        <expr_stmt pos:start="34:9" pos:end="36:71"><expr pos:start="34:9" pos:end="36:70"><call pos:start="34:9" pos:end="36:70"><name pos:start="34:9" pos:end="34:14">av_log</name><argument_list pos:start="34:15" pos:end="36:70">(<argument pos:start="34:16" pos:end="34:16"><expr pos:start="34:16" pos:end="34:16"><name pos:start="34:16" pos:end="34:16">s</name></expr></argument>, <argument pos:start="34:19" pos:end="34:30"><expr pos:start="34:19" pos:end="34:30"><name pos:start="34:19" pos:end="34:30">AV_LOG_ERROR</name></expr></argument>,
               <argument pos:start="35:16" pos:end="35:113"><expr pos:start="35:16" pos:end="35:113"><literal type="string" pos:start="35:16" pos:end="35:113">"Application provided invalid, non monotonically increasing dts to muxer in stream %d: %s &gt;= %s\n"</literal></expr></argument>,
               <argument pos:start="36:16" pos:end="36:24"><expr pos:start="36:16" pos:end="36:24"><name pos:start="36:16" pos:end="36:24"><name pos:start="36:16" pos:end="36:17">st</name><operator pos:start="36:18" pos:end="36:19">-&gt;</operator><name pos:start="36:20" pos:end="36:24">index</name></name></expr></argument>, <argument pos:start="36:27" pos:end="36:48"><expr pos:start="36:27" pos:end="36:48"><call pos:start="36:27" pos:end="36:48"><name pos:start="36:27" pos:end="36:35">av_ts2str</name><argument_list pos:start="36:36" pos:end="36:48">(<argument pos:start="36:37" pos:end="36:47"><expr pos:start="36:37" pos:end="36:47"><name pos:start="36:37" pos:end="36:47"><name pos:start="36:37" pos:end="36:38">st</name><operator pos:start="36:39" pos:end="36:40">-&gt;</operator><name pos:start="36:41" pos:end="36:47">cur_dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="36:51" pos:end="36:69"><expr pos:start="36:51" pos:end="36:69"><call pos:start="36:51" pos:end="36:69"><name pos:start="36:51" pos:end="36:59">av_ts2str</name><argument_list pos:start="36:60" pos:end="36:69">(<argument pos:start="36:61" pos:end="36:68"><expr pos:start="36:61" pos:end="36:68"><name pos:start="36:61" pos:end="36:68"><name pos:start="36:61" pos:end="36:63">pkt</name><operator pos:start="36:64" pos:end="36:65">-&gt;</operator><name pos:start="36:66" pos:end="36:68">dts</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>
    <if_stmt pos:start="38:5" pos:end="63:13"><if pos:start="38:5" pos:end="63:13">if <condition pos:start="38:8" pos:end="38:88">(<expr pos:start="38:9" pos:end="38:87"><name pos:start="38:9" pos:end="38:16"><name pos:start="38:9" pos:end="38:11">pkt</name><operator pos:start="38:12" pos:end="38:13">-&gt;</operator><name pos:start="38:14" pos:end="38:16">dts</name></name> <operator pos:start="38:18" pos:end="38:19">!=</operator> <name pos:start="38:21" pos:end="38:34">AV_NOPTS_VALUE</name> <operator pos:start="38:36" pos:end="38:37">&amp;&amp;</operator> <name pos:start="38:39" pos:end="38:46"><name pos:start="38:39" pos:end="38:41">pkt</name><operator pos:start="38:42" pos:end="38:43">-&gt;</operator><name pos:start="38:44" pos:end="38:46">pts</name></name> <operator pos:start="38:48" pos:end="38:49">!=</operator> <name pos:start="38:51" pos:end="38:64">AV_NOPTS_VALUE</name> <operator pos:start="38:66" pos:end="38:67">&amp;&amp;</operator> <name pos:start="38:69" pos:end="38:76"><name pos:start="38:69" pos:end="38:71">pkt</name><operator pos:start="38:72" pos:end="38:73">-&gt;</operator><name pos:start="38:74" pos:end="38:76">pts</name></name> <operator pos:start="38:78" pos:end="38:78">&lt;</operator> <name pos:start="38:80" pos:end="38:87"><name pos:start="38:80" pos:end="38:82">pkt</name><operator pos:start="38:83" pos:end="38:84">-&gt;</operator><name pos:start="38:85" pos:end="38:87">dts</name></name></expr>)</condition> <block pos:start="38:90" pos:end="63:13">{<block_content pos:start="39:9" pos:end="63:13">
        <expr_stmt pos:start="39:9" pos:end="40:68"><expr pos:start="39:9" pos:end="40:67"><call pos:start="39:9" pos:end="40:67"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="40:67">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">s</name></expr></argument>, <argument pos:start="39:19" pos:end="39:30"><expr pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:33" pos:end="39:68"><expr pos:start="39:33" pos:end="39:68"><literal type="string" pos:start="39:33" pos:end="39:68">"pts (%s) &lt; dts (%s) in stream %d\n"</literal></expr></argument>,
               <argument pos:start="40:16" pos:end="40:34"><expr pos:start="40:16" pos:end="40:34"><call pos:start="40:16" pos:end="40:34"><name pos:start="40:16" pos:end="40:24">av_ts2str</name><argument_list pos:start="40:25" pos:end="40:34">(<argument pos:start="40:26" pos:end="40:33"><expr pos:start="40:26" pos:end="40:33"><name pos:start="40:26" pos:end="40:33"><name pos:start="40:26" pos:end="40:28">pkt</name><operator pos:start="40:29" pos:end="40:30">-&gt;</operator><name pos:start="40:31" pos:end="40:33">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="40:37" pos:end="40:55"><expr pos:start="40:37" pos:end="40:55"><call pos:start="40:37" pos:end="40:55"><name pos:start="40:37" pos:end="40:45">av_ts2str</name><argument_list pos:start="40:46" pos:end="40:55">(<argument pos:start="40:47" pos:end="40:54"><expr pos:start="40:47" pos:end="40:54"><name pos:start="40:47" pos:end="40:54"><name pos:start="40:47" pos:end="40:49">pkt</name><operator pos:start="40:50" pos:end="40:51">-&gt;</operator><name pos:start="40:52" pos:end="40:54">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="40:58" pos:end="40:66"><expr pos:start="40:58" pos:end="40:66"><name pos:start="40:58" pos:end="40:66"><name pos:start="40:58" pos:end="40:59">st</name><operator pos:start="40:60" pos:end="40:61">-&gt;</operator><name pos:start="40:62" pos:end="40:66">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><call pos:start="41:16" pos:end="41:30"><name pos:start="41:16" pos:end="41:22">AVERROR</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>
    <expr_stmt pos:start="42:5" pos:end="43:54"><expr pos:start="42:5" pos:end="43:53"><call pos:start="42:5" pos:end="43:53"><name pos:start="42:5" pos:end="42:11">av_dlog</name><argument_list pos:start="42:12" pos:end="43:53">(<argument pos:start="42:13" pos:end="42:13"><expr pos:start="42:13" pos:end="42:13"><name pos:start="42:13" pos:end="42:13">s</name></expr></argument>, <argument pos:start="42:16" pos:end="42:50"><expr pos:start="42:16" pos:end="42:50"><literal type="string" pos:start="42:16" pos:end="42:50">"av_write_frame: pts2:%s dts2:%s\n"</literal></expr></argument>,
            <argument pos:start="43:13" pos:end="43:31"><expr pos:start="43:13" pos:end="43:31"><call pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:21">av_ts2str</name><argument_list pos:start="43:22" pos:end="43:31">(<argument pos:start="43:23" pos:end="43:30"><expr pos:start="43:23" pos:end="43:30"><name pos:start="43:23" pos:end="43:30"><name pos:start="43:23" pos:end="43:25">pkt</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:30">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:34" pos:end="43:52"><expr pos:start="43:34" pos:end="43:52"><call pos:start="43:34" pos:end="43:52"><name pos:start="43:34" pos:end="43:42">av_ts2str</name><argument_list pos:start="43:43" pos:end="43:52">(<argument pos:start="43:44" pos:end="43:51"><expr pos:start="43:44" pos:end="43:51"><name pos:start="43:44" pos:end="43:51"><name pos:start="43:44" pos:end="43:46">pkt</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:51">dts</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:27"><expr pos:start="44:5" pos:end="44:26"><name pos:start="44:5" pos:end="44:15"><name pos:start="44:5" pos:end="44:6">st</name><operator pos:start="44:7" pos:end="44:8">-&gt;</operator><name pos:start="44:9" pos:end="44:15">cur_dts</name></name> <operator pos:start="44:17" pos:end="44:17">=</operator> <name pos:start="44:19" pos:end="44:26"><name pos:start="44:19" pos:end="44:21">pkt</name><operator pos:start="44:22" pos:end="44:23">-&gt;</operator><name pos:start="44:24" pos:end="44:26">dts</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:27"><expr pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:6">st</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:11">pts</name><operator pos:start="45:12" pos:end="45:12">.</operator><name pos:start="45:13" pos:end="45:15">val</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:26"><name pos:start="45:19" pos:end="45:21">pkt</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:26">dts</name></name></expr>;</expr_stmt>
    <comment type="block" pos:start="46:5" pos:end="46:20">/* update pts */</comment>
    <switch pos:start="47:5" pos:end="63:13">switch <condition pos:start="47:12" pos:end="47:34">(<expr pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:14">st</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:21">codec</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:33">codec_type</name></name></expr>)</condition> <block pos:start="47:36" pos:end="63:13">{<block_content pos:start="48:5" pos:end="63:13">
    <case pos:start="48:5" pos:end="48:28">case <expr pos:start="48:10" pos:end="48:27"><name pos:start="48:10" pos:end="48:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>
        <expr_stmt pos:start="49:9" pos:end="51:70"><expr pos:start="49:9" pos:end="51:69"><name pos:start="49:9" pos:end="49:18">frame_size</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <ternary pos:start="49:22" pos:end="51:69"><condition pos:start="49:22" pos:end="49:63"><expr pos:start="49:22" pos:end="49:61"><operator pos:start="49:22" pos:end="49:22">(</operator><name pos:start="49:23" pos:end="49:32"><name pos:start="49:23" pos:end="49:25">pkt</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:32">flags</name></name> <operator pos:start="49:34" pos:end="49:34">&amp;</operator> <name pos:start="49:36" pos:end="49:60">AV_PKT_FLAG_UNCODED_FRAME</name><operator pos:start="49:61" pos:end="49:61">)</operator></expr> ?</condition><then pos:start="50:22" pos:end="50:55">
                     <expr pos:start="50:22" pos:end="50:55"><operator pos:start="50:22" pos:end="50:22">(</operator><operator pos:start="50:23" pos:end="50:23">(</operator><name pos:start="50:24" pos:end="50:30">AVFrame</name> <operator pos:start="50:32" pos:end="50:32">*</operator><operator pos:start="50:33" pos:end="50:33">)</operator><name pos:start="50:34" pos:end="50:42"><name pos:start="50:34" pos:end="50:36">pkt</name><operator pos:start="50:37" pos:end="50:38">-&gt;</operator><name pos:start="50:39" pos:end="50:42">data</name></name><operator pos:start="50:43" pos:end="50:43">)</operator><operator pos:start="50:44" pos:end="50:45">-&gt;</operator><name pos:start="50:46" pos:end="50:55">nb_samples</name></expr> </then><else pos:start="50:57" pos:end="51:69">:
                     <expr pos:start="51:22" pos:end="51:69"><call pos:start="51:22" pos:end="51:69"><name pos:start="51:22" pos:end="51:44">ff_get_audio_frame_size</name><argument_list pos:start="51:45" pos:end="51:69">(<argument pos:start="51:46" pos:end="51:54"><expr pos:start="51:46" pos:end="51:54"><name pos:start="51:46" pos:end="51:54"><name pos:start="51:46" pos:end="51:47">st</name><operator pos:start="51:48" pos:end="51:49">-&gt;</operator><name pos:start="51:50" pos:end="51:54">codec</name></name></expr></argument>, <argument pos:start="51:57" pos:end="51:65"><expr pos:start="51:57" pos:end="51:65"><name pos:start="51:57" pos:end="51:65"><name pos:start="51:57" pos:end="51:59">pkt</name><operator pos:start="51:60" pos:end="51:61">-&gt;</operator><name pos:start="51:62" pos:end="51:65">size</name></name></expr></argument>, <argument pos:start="51:68" pos:end="51:68"><expr pos:start="51:68" pos:end="51:68"><literal type="number" pos:start="51:68" pos:end="51:68">1</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
        <comment type="block" pos:start="52:9" pos:end="54:54">/* HACK/FIXME, we skip the initial 0 size packets as they are most
         * likely equal to the encoder delay, but it would be better if we
         * had the real timestamps from the encoder */</comment>
        <if_stmt pos:start="55:9" pos:end="63:13"><if pos:start="55:9" pos:end="63:13">if <condition pos:start="55:12" pos:end="55:93">(<expr pos:start="55:13" pos:end="55:92"><name pos:start="55:13" pos:end="55:22">frame_size</name> <operator pos:start="55:24" pos:end="55:25">&gt;=</operator> <literal type="number" pos:start="55:27" pos:end="55:27">0</literal> <operator pos:start="55:29" pos:end="55:30">&amp;&amp;</operator> <operator pos:start="55:32" pos:end="55:32">(</operator><name pos:start="55:33" pos:end="55:41"><name pos:start="55:33" pos:end="55:35">pkt</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:41">size</name></name> <operator pos:start="55:43" pos:end="55:44">||</operator> <name pos:start="55:46" pos:end="55:56"><name pos:start="55:46" pos:end="55:47">st</name><operator pos:start="55:48" pos:end="55:49">-&gt;</operator><name pos:start="55:50" pos:end="55:52">pts</name><operator pos:start="55:53" pos:end="55:53">.</operator><name pos:start="55:54" pos:end="55:56">num</name></name> <operator pos:start="55:58" pos:end="55:59">!=</operator> <name pos:start="55:61" pos:end="55:71"><name pos:start="55:61" pos:end="55:62">st</name><operator pos:start="55:63" pos:end="55:64">-&gt;</operator><name pos:start="55:65" pos:end="55:67">pts</name><operator pos:start="55:68" pos:end="55:68">.</operator><name pos:start="55:69" pos:end="55:71">den</name></name> <operator pos:start="55:73" pos:end="55:74">&gt;&gt;</operator> <literal type="number" pos:start="55:76" pos:end="55:76">1</literal> <operator pos:start="55:78" pos:end="55:79">||</operator> <name pos:start="55:81" pos:end="55:91"><name pos:start="55:81" pos:end="55:82">st</name><operator pos:start="55:83" pos:end="55:84">-&gt;</operator><name pos:start="55:85" pos:end="55:87">pts</name><operator pos:start="55:88" pos:end="55:88">.</operator><name pos:start="55:89" pos:end="55:91">val</name></name><operator pos:start="55:92" pos:end="55:92">)</operator></expr>)</condition> <block pos:start="55:95" pos:end="63:13">{<block_content pos:start="56:13" pos:end="63:13">
            <expr_stmt pos:start="56:13" pos:end="56:72"><expr pos:start="56:13" pos:end="56:71"><call pos:start="56:13" pos:end="56:71"><name pos:start="56:13" pos:end="56:20">frac_add</name><argument_list pos:start="56:21" pos:end="56:71">(<argument pos:start="56:22" pos:end="56:29"><expr pos:start="56:22" pos:end="56:29"><operator pos:start="56:22" pos:end="56:22">&amp;</operator><name pos:start="56:23" pos:end="56:29"><name pos:start="56:23" pos:end="56:24">st</name><operator pos:start="56:25" pos:end="56:26">-&gt;</operator><name pos:start="56:27" pos:end="56:29">pts</name></name></expr></argument>, <argument pos:start="56:32" pos:end="56:70"><expr pos:start="56:32" pos:end="56:70"><operator pos:start="56:32" pos:end="56:32">(</operator><name pos:start="56:33" pos:end="56:39">int64_t</name><operator pos:start="56:40" pos:end="56:40">)</operator><name pos:start="56:41" pos:end="56:57"><name pos:start="56:41" pos:end="56:42">st</name><operator pos:start="56:43" pos:end="56:44">-&gt;</operator><name pos:start="56:45" pos:end="56:53">time_base</name><operator pos:start="56:54" pos:end="56:54">.</operator><name pos:start="56:55" pos:end="56:57">den</name></name> <operator pos:start="56:59" pos:end="56:59">*</operator> <name pos:start="56:61" pos:end="56:70">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="57:9" pos:end="57:14">break;</break>
    <case pos:start="58:5" pos:end="58:28">case <expr pos:start="58:10" pos:end="58:27"><name pos:start="58:10" pos:end="58:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>
        <expr_stmt pos:start="59:9" pos:end="59:82"><expr pos:start="59:9" pos:end="59:81"><call pos:start="59:9" pos:end="59:81"><name pos:start="59:9" pos:end="59:16">frac_add</name><argument_list pos:start="59:17" pos:end="59:81">(<argument pos:start="59:18" pos:end="59:25"><expr pos:start="59:18" pos:end="59:25"><operator pos:start="59:18" pos:end="59:18">&amp;</operator><name pos:start="59:19" pos:end="59:25"><name pos:start="59:19" pos:end="59:20">st</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:25">pts</name></name></expr></argument>, <argument pos:start="59:28" pos:end="59:80"><expr pos:start="59:28" pos:end="59:80"><operator pos:start="59:28" pos:end="59:28">(</operator><name pos:start="59:29" pos:end="59:35">int64_t</name><operator pos:start="59:36" pos:end="59:36">)</operator><name pos:start="59:37" pos:end="59:53"><name pos:start="59:37" pos:end="59:38">st</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:49">time_base</name><operator pos:start="59:50" pos:end="59:50">.</operator><name pos:start="59:51" pos:end="59:53">den</name></name> <operator pos:start="59:55" pos:end="59:55">*</operator> <name pos:start="59:57" pos:end="59:80"><name pos:start="59:57" pos:end="59:58">st</name><operator pos:start="59:59" pos:end="59:60">-&gt;</operator><name pos:start="59:61" pos:end="59:65">codec</name><operator pos:start="59:66" pos:end="59:67">-&gt;</operator><name pos:start="59:68" pos:end="59:76">time_base</name><operator pos:start="59:77" pos:end="59:77">.</operator><name pos:start="59:78" pos:end="59:80">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="60:9" pos:end="60:14">break;</break>
    <default pos:start="61:5" pos:end="61:12">default:</default>
        <break pos:start="62:9" pos:end="62:14">break;</break>
    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
