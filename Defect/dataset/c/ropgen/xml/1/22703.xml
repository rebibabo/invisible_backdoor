<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22703.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">rtl8139_io_writel</name><parameter_list pos:start="1:30" pos:end="1:71">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:51">uint8_t</name></type> <name pos:start="1:53" pos:end="1:56">addr</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:66">uint32_t</name></type> <name pos:start="1:68" pos:end="1:70">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:5">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">RTL8139State</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:17"><expr pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:8">addr</name> <operator pos:start="9:10" pos:end="9:11">&amp;=</operator> <literal type="number" pos:start="9:13" pos:end="9:16">0xfc</literal></expr>;</expr_stmt>



    <switch pos:start="13:5" pos:end="131:5">switch <condition pos:start="13:12" pos:end="13:17">(<expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">addr</name></expr>)</condition>

    <block pos:start="15:5" pos:end="131:5">{<block_content pos:start="17:9" pos:end="129:18">

        <case pos:start="17:9" pos:end="17:22">case <expr pos:start="17:14" pos:end="17:21"><name pos:start="17:14" pos:end="17:21">RxMissed</name></expr>:</case>

            <expr_stmt pos:start="19:13" pos:end="19:52"><expr pos:start="19:13" pos:end="19:51"><call pos:start="19:13" pos:end="19:51"><name pos:start="19:13" pos:end="19:19">DPRINTF</name><argument_list pos:start="19:20" pos:end="19:51">(<argument pos:start="19:21" pos:end="19:50"><expr pos:start="19:21" pos:end="19:50"><literal type="string" pos:start="19:21" pos:end="19:50">"RxMissed clearing on write\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:28"><expr pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">RxMissed</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr>;</expr_stmt>

            <break pos:start="23:13" pos:end="23:18">break;</break>



        <case pos:start="27:9" pos:end="27:22">case <expr pos:start="27:14" pos:end="27:21"><name pos:start="27:14" pos:end="27:21">TxConfig</name></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:43"><expr pos:start="29:13" pos:end="29:42"><call pos:start="29:13" pos:end="29:42"><name pos:start="29:13" pos:end="29:34">rtl8139_TxConfig_write</name><argument_list pos:start="29:35" pos:end="29:42">(<argument pos:start="29:36" pos:end="29:36"><expr pos:start="29:36" pos:end="29:36"><name pos:start="29:36" pos:end="29:36">s</name></expr></argument>, <argument pos:start="29:39" pos:end="29:41"><expr pos:start="29:39" pos:end="29:41"><name pos:start="29:39" pos:end="29:41">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>



        <case pos:start="35:9" pos:end="35:22">case <expr pos:start="35:14" pos:end="35:21"><name pos:start="35:14" pos:end="35:21">RxConfig</name></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:43"><expr pos:start="37:13" pos:end="37:42"><call pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:34">rtl8139_RxConfig_write</name><argument_list pos:start="37:35" pos:end="37:42">(<argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><name pos:start="37:36" pos:end="37:36">s</name></expr></argument>, <argument pos:start="37:39" pos:end="37:41"><expr pos:start="37:39" pos:end="37:41"><name pos:start="37:39" pos:end="37:41">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>



        <case pos:start="43:9" pos:end="43:43">case <expr pos:start="43:14" pos:end="43:42"><name pos:start="43:14" pos:end="43:22">TxStatus0</name> <operator pos:start="43:24" pos:end="43:26">...</operator> <name pos:start="43:28" pos:end="43:36">TxStatus0</name><operator pos:start="43:37" pos:end="43:37">+</operator><literal type="number" pos:start="43:38" pos:end="43:38">4</literal><operator pos:start="43:39" pos:end="43:39">*</operator><literal type="number" pos:start="43:40" pos:end="43:41">4</literal><operator pos:start="43:41" pos:end="43:41">-</operator><literal type="number" pos:start="43:42" pos:end="43:42">1</literal></expr>:</case>

            <expr_stmt pos:start="45:13" pos:end="45:59"><expr pos:start="45:13" pos:end="45:58"><call pos:start="45:13" pos:end="45:58"><name pos:start="45:13" pos:end="45:34">rtl8139_TxStatus_write</name><argument_list pos:start="45:35" pos:end="45:58">(<argument pos:start="45:36" pos:end="45:36"><expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">s</name></expr></argument>, <argument pos:start="45:39" pos:end="45:52"><expr pos:start="45:39" pos:end="45:52"><name pos:start="45:39" pos:end="45:42">addr</name><operator pos:start="45:43" pos:end="45:43">-</operator><name pos:start="45:44" pos:end="45:52">TxStatus0</name></expr></argument>, <argument pos:start="45:55" pos:end="45:57"><expr pos:start="45:55" pos:end="45:57"><name pos:start="45:55" pos:end="45:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>



        <case pos:start="51:9" pos:end="51:39">case <expr pos:start="51:14" pos:end="51:38"><name pos:start="51:14" pos:end="51:20">TxAddr0</name> <operator pos:start="51:22" pos:end="51:24">...</operator> <name pos:start="51:26" pos:end="51:32">TxAddr0</name><operator pos:start="51:33" pos:end="51:33">+</operator><literal type="number" pos:start="51:34" pos:end="51:34">4</literal><operator pos:start="51:35" pos:end="51:35">*</operator><literal type="number" pos:start="51:36" pos:end="51:37">4</literal><operator pos:start="51:37" pos:end="51:37">-</operator><literal type="number" pos:start="51:38" pos:end="51:38">1</literal></expr>:</case>

            <expr_stmt pos:start="53:13" pos:end="53:55"><expr pos:start="53:13" pos:end="53:54"><call pos:start="53:13" pos:end="53:54"><name pos:start="53:13" pos:end="53:32">rtl8139_TxAddr_write</name><argument_list pos:start="53:33" pos:end="53:54">(<argument pos:start="53:34" pos:end="53:34"><expr pos:start="53:34" pos:end="53:34"><name pos:start="53:34" pos:end="53:34">s</name></expr></argument>, <argument pos:start="53:37" pos:end="53:48"><expr pos:start="53:37" pos:end="53:48"><name pos:start="53:37" pos:end="53:40">addr</name><operator pos:start="53:41" pos:end="53:41">-</operator><name pos:start="53:42" pos:end="53:48">TxAddr0</name></expr></argument>, <argument pos:start="53:51" pos:end="53:53"><expr pos:start="53:51" pos:end="53:53"><name pos:start="53:51" pos:end="53:53">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>



        <case pos:start="59:9" pos:end="59:19">case <expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:18">RxBuf</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:40"><expr pos:start="61:13" pos:end="61:39"><call pos:start="61:13" pos:end="61:39"><name pos:start="61:13" pos:end="61:31">rtl8139_RxBuf_write</name><argument_list pos:start="61:32" pos:end="61:39">(<argument pos:start="61:33" pos:end="61:33"><expr pos:start="61:33" pos:end="61:33"><name pos:start="61:33" pos:end="61:33">s</name></expr></argument>, <argument pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><name pos:start="61:36" pos:end="61:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>



        <case pos:start="67:9" pos:end="67:26">case <expr pos:start="67:14" pos:end="67:25"><name pos:start="67:14" pos:end="67:25">RxRingAddrLO</name></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:66"><expr pos:start="69:13" pos:end="69:65"><call pos:start="69:13" pos:end="69:65"><name pos:start="69:13" pos:end="69:19">DPRINTF</name><argument_list pos:start="69:20" pos:end="69:65">(<argument pos:start="69:21" pos:end="69:59"><expr pos:start="69:21" pos:end="69:59"><literal type="string" pos:start="69:21" pos:end="69:59">"C+ RxRing low bits write val=0x%08x\n"</literal></expr></argument>, <argument pos:start="69:62" pos:end="69:64"><expr pos:start="69:62" pos:end="69:64"><name pos:start="69:62" pos:end="69:64">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:34"><expr pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:27">RxRingAddrLO</name></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <name pos:start="71:31" pos:end="71:33">val</name></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>



        <case pos:start="77:9" pos:end="77:26">case <expr pos:start="77:14" pos:end="77:25"><name pos:start="77:14" pos:end="77:25">RxRingAddrHI</name></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:67"><expr pos:start="79:13" pos:end="79:66"><call pos:start="79:13" pos:end="79:66"><name pos:start="79:13" pos:end="79:19">DPRINTF</name><argument_list pos:start="79:20" pos:end="79:66">(<argument pos:start="79:21" pos:end="79:60"><expr pos:start="79:21" pos:end="79:60"><literal type="string" pos:start="79:21" pos:end="79:60">"C+ RxRing high bits write val=0x%08x\n"</literal></expr></argument>, <argument pos:start="79:63" pos:end="79:65"><expr pos:start="79:63" pos:end="79:65"><name pos:start="79:63" pos:end="79:65">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:34"><expr pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:27"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:27">RxRingAddrHI</name></name> <operator pos:start="81:29" pos:end="81:29">=</operator> <name pos:start="81:31" pos:end="81:33">val</name></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>



        <case pos:start="87:9" pos:end="87:19">case <expr pos:start="87:14" pos:end="87:18"><name pos:start="87:14" pos:end="87:18">Timer</name></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:51"><expr pos:start="89:13" pos:end="89:50"><call pos:start="89:13" pos:end="89:50"><name pos:start="89:13" pos:end="89:19">DPRINTF</name><argument_list pos:start="89:20" pos:end="89:50">(<argument pos:start="89:21" pos:end="89:49"><expr pos:start="89:21" pos:end="89:49"><literal type="string" pos:start="89:21" pos:end="89:49">"TCTR Timer reset on write\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:55"><expr pos:start="91:13" pos:end="91:54"><name pos:start="91:13" pos:end="91:24"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:24">TCTR_base</name></name> <operator pos:start="91:26" pos:end="91:26">=</operator> <call pos:start="91:28" pos:end="91:54"><name pos:start="91:28" pos:end="91:44">qemu_get_clock_ns</name><argument_list pos:start="91:45" pos:end="91:54">(<argument pos:start="91:46" pos:end="91:53"><expr pos:start="91:46" pos:end="91:53"><name pos:start="91:46" pos:end="91:53">vm_clock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:56"><expr pos:start="93:13" pos:end="93:55"><call pos:start="93:13" pos:end="93:55"><name pos:start="93:13" pos:end="93:38">rtl8139_set_next_tctr_time</name><argument_list pos:start="93:39" pos:end="93:55">(<argument pos:start="93:40" pos:end="93:40"><expr pos:start="93:40" pos:end="93:40"><name pos:start="93:40" pos:end="93:40">s</name></expr></argument>, <argument pos:start="93:43" pos:end="93:54"><expr pos:start="93:43" pos:end="93:54"><name pos:start="93:43" pos:end="93:54"><name pos:start="93:43" pos:end="93:43">s</name><operator pos:start="93:44" pos:end="93:45">-&gt;</operator><name pos:start="93:46" pos:end="93:54">TCTR_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>



        <case pos:start="99:9" pos:end="99:22">case <expr pos:start="99:14" pos:end="99:21"><name pos:start="99:14" pos:end="99:21">FlashReg</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:65"><expr pos:start="101:13" pos:end="101:64"><call pos:start="101:13" pos:end="101:64"><name pos:start="101:13" pos:end="101:19">DPRINTF</name><argument_list pos:start="101:20" pos:end="101:64">(<argument pos:start="101:21" pos:end="101:58"><expr pos:start="101:21" pos:end="101:58"><literal type="string" pos:start="101:21" pos:end="101:58">"FlashReg TimerInt write val=0x%08x\n"</literal></expr></argument>, <argument pos:start="101:61" pos:end="101:63"><expr pos:start="101:61" pos:end="101:63"><name pos:start="101:61" pos:end="101:63">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="109:13"><if pos:start="103:13" pos:end="109:13">if <condition pos:start="103:16" pos:end="103:35">(<expr pos:start="103:17" pos:end="103:34"><name pos:start="103:17" pos:end="103:27"><name pos:start="103:17" pos:end="103:17">s</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:27">TimerInt</name></name> <operator pos:start="103:29" pos:end="103:30">!=</operator> <name pos:start="103:32" pos:end="103:34">val</name></expr>)</condition> <block pos:start="103:37" pos:end="109:13">{<block_content pos:start="105:17" pos:end="107:75">

                <expr_stmt pos:start="105:17" pos:end="105:34"><expr pos:start="105:17" pos:end="105:33"><name pos:start="105:17" pos:end="105:27"><name pos:start="105:17" pos:end="105:17">s</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:27">TimerInt</name></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <name pos:start="105:31" pos:end="105:33">val</name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:75"><expr pos:start="107:17" pos:end="107:74"><call pos:start="107:17" pos:end="107:74"><name pos:start="107:17" pos:end="107:42">rtl8139_set_next_tctr_time</name><argument_list pos:start="107:43" pos:end="107:74">(<argument pos:start="107:44" pos:end="107:44"><expr pos:start="107:44" pos:end="107:44"><name pos:start="107:44" pos:end="107:44">s</name></expr></argument>, <argument pos:start="107:47" pos:end="107:73"><expr pos:start="107:47" pos:end="107:73"><call pos:start="107:47" pos:end="107:73"><name pos:start="107:47" pos:end="107:63">qemu_get_clock_ns</name><argument_list pos:start="107:64" pos:end="107:73">(<argument pos:start="107:65" pos:end="107:72"><expr pos:start="107:65" pos:end="107:72"><name pos:start="107:65" pos:end="107:72">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="111:13" pos:end="111:18">break;</break>



        <default pos:start="115:9" pos:end="115:16">default:</default>

            <expr_stmt pos:start="117:13" pos:end="119:27"><expr pos:start="117:13" pos:end="119:26"><call pos:start="117:13" pos:end="119:26"><name pos:start="117:13" pos:end="117:19">DPRINTF</name><argument_list pos:start="117:20" pos:end="119:26">(<argument pos:start="117:21" pos:end="117:73"><expr pos:start="117:21" pos:end="117:73"><literal type="string" pos:start="117:21" pos:end="117:73">"ioport write(l) addr=0x%x val=0x%08x via write(b)\n"</literal></expr></argument>,

                <argument pos:start="119:17" pos:end="119:20"><expr pos:start="119:17" pos:end="119:20"><name pos:start="119:17" pos:end="119:20">addr</name></expr></argument>, <argument pos:start="119:23" pos:end="119:25"><expr pos:start="119:23" pos:end="119:25"><name pos:start="119:23" pos:end="119:25">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:56"><expr pos:start="121:13" pos:end="121:55"><call pos:start="121:13" pos:end="121:55"><name pos:start="121:13" pos:end="121:29">rtl8139_io_writeb</name><argument_list pos:start="121:30" pos:end="121:55">(<argument pos:start="121:31" pos:end="121:36"><expr pos:start="121:31" pos:end="121:36"><name pos:start="121:31" pos:end="121:36">opaque</name></expr></argument>, <argument pos:start="121:39" pos:end="121:42"><expr pos:start="121:39" pos:end="121:42"><name pos:start="121:39" pos:end="121:42">addr</name></expr></argument>, <argument pos:start="121:45" pos:end="121:54"><expr pos:start="121:45" pos:end="121:54"><name pos:start="121:45" pos:end="121:47">val</name> <operator pos:start="121:49" pos:end="121:49">&amp;</operator> <literal type="number" pos:start="121:51" pos:end="121:54">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:67"><expr pos:start="123:13" pos:end="123:66"><call pos:start="123:13" pos:end="123:66"><name pos:start="123:13" pos:end="123:29">rtl8139_io_writeb</name><argument_list pos:start="123:30" pos:end="123:66">(<argument pos:start="123:31" pos:end="123:36"><expr pos:start="123:31" pos:end="123:36"><name pos:start="123:31" pos:end="123:36">opaque</name></expr></argument>, <argument pos:start="123:39" pos:end="123:46"><expr pos:start="123:39" pos:end="123:46"><name pos:start="123:39" pos:end="123:42">addr</name> <operator pos:start="123:44" pos:end="123:44">+</operator> <literal type="number" pos:start="123:46" pos:end="123:46">1</literal></expr></argument>, <argument pos:start="123:49" pos:end="123:65"><expr pos:start="123:49" pos:end="123:65"><operator pos:start="123:49" pos:end="123:49">(</operator><name pos:start="123:50" pos:end="123:52">val</name> <operator pos:start="123:54" pos:end="123:55">&gt;&gt;</operator> <literal type="number" pos:start="123:57" pos:end="123:57">8</literal><operator pos:start="123:58" pos:end="123:58">)</operator> <operator pos:start="123:60" pos:end="123:60">&amp;</operator> <literal type="number" pos:start="123:62" pos:end="123:65">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:68"><expr pos:start="125:13" pos:end="125:67"><call pos:start="125:13" pos:end="125:67"><name pos:start="125:13" pos:end="125:29">rtl8139_io_writeb</name><argument_list pos:start="125:30" pos:end="125:67">(<argument pos:start="125:31" pos:end="125:36"><expr pos:start="125:31" pos:end="125:36"><name pos:start="125:31" pos:end="125:36">opaque</name></expr></argument>, <argument pos:start="125:39" pos:end="125:46"><expr pos:start="125:39" pos:end="125:46"><name pos:start="125:39" pos:end="125:42">addr</name> <operator pos:start="125:44" pos:end="125:44">+</operator> <literal type="number" pos:start="125:46" pos:end="125:46">2</literal></expr></argument>, <argument pos:start="125:49" pos:end="125:66"><expr pos:start="125:49" pos:end="125:66"><operator pos:start="125:49" pos:end="125:49">(</operator><name pos:start="125:50" pos:end="125:52">val</name> <operator pos:start="125:54" pos:end="125:55">&gt;&gt;</operator> <literal type="number" pos:start="125:57" pos:end="125:58">16</literal><operator pos:start="125:59" pos:end="125:59">)</operator> <operator pos:start="125:61" pos:end="125:61">&amp;</operator> <literal type="number" pos:start="125:63" pos:end="125:66">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:68"><expr pos:start="127:13" pos:end="127:67"><call pos:start="127:13" pos:end="127:67"><name pos:start="127:13" pos:end="127:29">rtl8139_io_writeb</name><argument_list pos:start="127:30" pos:end="127:67">(<argument pos:start="127:31" pos:end="127:36"><expr pos:start="127:31" pos:end="127:36"><name pos:start="127:31" pos:end="127:36">opaque</name></expr></argument>, <argument pos:start="127:39" pos:end="127:46"><expr pos:start="127:39" pos:end="127:46"><name pos:start="127:39" pos:end="127:42">addr</name> <operator pos:start="127:44" pos:end="127:44">+</operator> <literal type="number" pos:start="127:46" pos:end="127:46">3</literal></expr></argument>, <argument pos:start="127:49" pos:end="127:66"><expr pos:start="127:49" pos:end="127:66"><operator pos:start="127:49" pos:end="127:49">(</operator><name pos:start="127:50" pos:end="127:52">val</name> <operator pos:start="127:54" pos:end="127:55">&gt;&gt;</operator> <literal type="number" pos:start="127:57" pos:end="127:58">24</literal><operator pos:start="127:59" pos:end="127:59">)</operator> <operator pos:start="127:61" pos:end="127:61">&amp;</operator> <literal type="number" pos:start="127:63" pos:end="127:66">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
