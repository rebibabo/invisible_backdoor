<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16002.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">ir2_decode_plane_inter</name><parameter_list pos:start="1:35" pos:end="3:50">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><name pos:start="1:36" pos:end="1:45">Ir2Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:61"><decl pos:start="1:53" pos:end="1:61"><type pos:start="1:53" pos:end="1:61"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:61">width</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:73"><decl pos:start="1:64" pos:end="1:73"><type pos:start="1:64" pos:end="1:73"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:73">height</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:87"><decl pos:start="1:76" pos:end="1:87"><type pos:start="1:76" pos:end="1:87"><name pos:start="1:76" pos:end="1:82">uint8_t</name> <modifier pos:start="1:84" pos:end="1:84">*</modifier></type><name pos:start="1:85" pos:end="1:87">dst</name></decl></parameter>, <parameter pos:start="1:90" pos:end="1:99"><decl pos:start="1:90" pos:end="1:99"><type pos:start="1:90" pos:end="1:99"><name pos:start="1:90" pos:end="1:92">int</name></type> <name pos:start="1:94" pos:end="1:99">stride</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:49"><decl pos:start="3:30" pos:end="3:49"><type pos:start="3:30" pos:end="3:49"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:49">table</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:5">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">out</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">t</name></decl>;</decl_stmt>

    

    <for pos:start="17:5" pos:end="55:5">for <control pos:start="17:9" pos:end="17:32">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">j</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:27"><expr pos:start="17:17" pos:end="17:26"><name pos:start="17:17" pos:end="17:17">j</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:26">height</name></expr>;</condition> <incr pos:start="17:29" pos:end="17:31"><expr pos:start="17:29" pos:end="17:31"><name pos:start="17:29" pos:end="17:29">j</name><operator pos:start="17:30" pos:end="17:31">++</operator></expr></incr>)</control><block pos:start="17:33" pos:end="55:5">{<block_content pos:start="19:9" pos:end="53:22">

        <expr_stmt pos:start="19:9" pos:end="19:16"><expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">out</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>;</expr_stmt>

        <while pos:start="21:9" pos:end="51:9">while <condition pos:start="21:15" pos:end="21:27">(<expr pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:18">out</name> <operator pos:start="21:20" pos:end="21:20">&lt;</operator> <name pos:start="21:22" pos:end="21:26">width</name></expr>)</condition><block pos:start="21:28" pos:end="51:9">{<block_content pos:start="23:13" pos:end="49:13">

            <expr_stmt pos:start="23:13" pos:end="23:39"><expr pos:start="23:13" pos:end="23:38"><name pos:start="23:13" pos:end="23:13">c</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:38"><name pos:start="23:17" pos:end="23:28">ir2_get_code</name><argument_list pos:start="23:29" pos:end="23:38">(<argument pos:start="23:30" pos:end="23:37"><expr pos:start="23:30" pos:end="23:37"><operator pos:start="23:30" pos:end="23:30">&amp;</operator><name pos:start="23:31" pos:end="23:37"><name pos:start="23:31" pos:end="23:33">ctx</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="49:13"><if pos:start="25:13" pos:end="31:13">if<condition pos:start="25:15" pos:end="25:24">(<expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">c</name> <operator pos:start="25:18" pos:end="25:18">&gt;</operator> <literal type="number" pos:start="25:20" pos:end="25:23">0x80</literal></expr>)</condition> <block pos:start="25:26" pos:end="31:13">{<block_content pos:start="27:17" pos:end="29:29"> <comment type="block" pos:start="25:28" pos:end="25:47">/* we have a skip */</comment>

                <expr_stmt pos:start="27:17" pos:end="27:26"><expr pos:start="27:17" pos:end="27:25"><name pos:start="27:17" pos:end="27:17">c</name> <operator pos:start="27:19" pos:end="27:20">-=</operator> <literal type="number" pos:start="27:22" pos:end="27:25">0x80</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:29"><expr pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:19">out</name> <operator pos:start="29:21" pos:end="29:22">+=</operator> <name pos:start="29:24" pos:end="29:24">c</name> <operator pos:start="29:26" pos:end="29:26">*</operator> <literal type="number" pos:start="29:28" pos:end="29:28">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="31:15" pos:end="49:13">else <block pos:start="31:20" pos:end="49:13">{<block_content pos:start="33:17" pos:end="47:22"> <comment type="block" pos:start="31:22" pos:end="31:52">/* add two deltas from table */</comment>

                <expr_stmt pos:start="33:17" pos:end="33:52"><expr pos:start="33:17" pos:end="33:51"><name pos:start="33:17" pos:end="33:17">t</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:23">dst</name><index pos:start="33:24" pos:end="33:28">[<expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">out</name></expr>]</index></name> <operator pos:start="33:30" pos:end="33:30">+</operator> <operator pos:start="33:32" pos:end="33:32">(</operator><name pos:start="33:33" pos:end="33:44"><name pos:start="33:33" pos:end="33:37">table</name><index pos:start="33:38" pos:end="33:44">[<expr pos:start="33:39" pos:end="33:43"><name pos:start="33:39" pos:end="33:39">c</name> <operator pos:start="33:41" pos:end="33:41">*</operator> <literal type="number" pos:start="33:43" pos:end="33:43">2</literal></expr>]</index></name> <operator pos:start="33:46" pos:end="33:46">-</operator> <literal type="number" pos:start="33:48" pos:end="33:50">128</literal><operator pos:start="33:51" pos:end="33:51">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:33"><expr pos:start="35:17" pos:end="35:32"><call pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:29">CLAMP_TO_BYTE</name><argument_list pos:start="35:30" pos:end="35:32">(<argument pos:start="35:31" pos:end="35:31"><expr pos:start="35:31" pos:end="35:31"><name pos:start="35:31" pos:end="35:31">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:29"><expr pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:19">dst</name><index pos:start="37:20" pos:end="37:24">[<expr pos:start="37:21" pos:end="37:23"><name pos:start="37:21" pos:end="37:23">out</name></expr>]</index></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:28">t</name></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:22"><expr pos:start="39:17" pos:end="39:21"><name pos:start="39:17" pos:end="39:19">out</name><operator pos:start="39:20" pos:end="39:21">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:58"><expr pos:start="41:17" pos:end="41:57"><name pos:start="41:17" pos:end="41:17">t</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:28"><name pos:start="41:21" pos:end="41:23">dst</name><index pos:start="41:24" pos:end="41:28">[<expr pos:start="41:25" pos:end="41:27"><name pos:start="41:25" pos:end="41:27">out</name></expr>]</index></name> <operator pos:start="41:30" pos:end="41:30">+</operator> <operator pos:start="41:32" pos:end="41:32">(</operator><name pos:start="41:33" pos:end="41:50"><name pos:start="41:33" pos:end="41:37">table</name><index pos:start="41:38" pos:end="41:50">[<expr pos:start="41:39" pos:end="41:49"><operator pos:start="41:39" pos:end="41:39">(</operator><name pos:start="41:40" pos:end="41:40">c</name> <operator pos:start="41:42" pos:end="41:42">*</operator> <literal type="number" pos:start="41:44" pos:end="41:44">2</literal><operator pos:start="41:45" pos:end="41:45">)</operator> <operator pos:start="41:47" pos:end="41:47">+</operator> <literal type="number" pos:start="41:49" pos:end="41:49">1</literal></expr>]</index></name> <operator pos:start="41:52" pos:end="41:52">-</operator> <literal type="number" pos:start="41:54" pos:end="41:56">128</literal><operator pos:start="41:57" pos:end="41:57">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:33"><expr pos:start="43:17" pos:end="43:32"><call pos:start="43:17" pos:end="43:32"><name pos:start="43:17" pos:end="43:29">CLAMP_TO_BYTE</name><argument_list pos:start="43:30" pos:end="43:32">(<argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><name pos:start="43:31" pos:end="43:31">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:29"><expr pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:19">dst</name><index pos:start="45:20" pos:end="45:24">[<expr pos:start="45:21" pos:end="45:23"><name pos:start="45:21" pos:end="45:23">out</name></expr>]</index></name> <operator pos:start="45:26" pos:end="45:26">=</operator> <name pos:start="45:28" pos:end="45:28">t</name></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:22"><expr pos:start="47:17" pos:end="47:21"><name pos:start="47:17" pos:end="47:19">out</name><operator pos:start="47:20" pos:end="47:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:11">dst</name> <operator pos:start="53:13" pos:end="53:14">+=</operator> <name pos:start="53:16" pos:end="53:21">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
