<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/336.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">ahci_pci_enable</name><parameter_list pos:start="1:28" pos:end="1:45">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:38">AHCIQState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">ahci</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="33:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:15">reg</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:28"><expr pos:start="9:5" pos:end="9:27"><call pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:21">start_ahci_device</name><argument_list pos:start="9:22" pos:end="9:27">(<argument pos:start="9:23" pos:end="9:26"><expr pos:start="9:23" pos:end="9:26"><name pos:start="9:23" pos:end="9:26">ahci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="13:5" pos:end="33:5">switch <condition pos:start="13:12" pos:end="13:30">(<expr pos:start="13:13" pos:end="13:29"><name pos:start="13:13" pos:end="13:29"><name pos:start="13:13" pos:end="13:16">ahci</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:29">fingerprint</name></name></expr>)</condition> <block pos:start="13:32" pos:end="33:5">{<block_content pos:start="15:5" pos:end="31:14">

    <case pos:start="15:5" pos:end="15:25">case <expr pos:start="15:10" pos:end="15:24"><name pos:start="15:10" pos:end="15:24">AHCI_INTEL_ICH9</name></expr>:</case>

        <comment type="block" pos:start="17:9" pos:end="19:49">/* ICH9 has a register at PCI 0x92 that

         * acts as a master port enabler mask. */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:49"><expr pos:start="21:9" pos:end="21:48"><name pos:start="21:9" pos:end="21:11">reg</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:48"><name pos:start="21:15" pos:end="21:31">qpci_config_readb</name><argument_list pos:start="21:32" pos:end="21:48">(<argument pos:start="21:33" pos:end="21:41"><expr pos:start="21:33" pos:end="21:41"><name pos:start="21:33" pos:end="21:41"><name pos:start="21:33" pos:end="21:36">ahci</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:41">dev</name></name></expr></argument>, <argument pos:start="21:44" pos:end="21:47"><expr pos:start="21:44" pos:end="21:47"><literal type="number" pos:start="21:44" pos:end="21:47">0x92</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:20"><expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:11">reg</name> <operator pos:start="23:13" pos:end="23:14">|=</operator> <literal type="number" pos:start="23:16" pos:end="23:19">0x3F</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><call pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:26">qpci_config_writeb</name><argument_list pos:start="25:27" pos:end="25:48">(<argument pos:start="25:28" pos:end="25:36"><expr pos:start="25:28" pos:end="25:36"><name pos:start="25:28" pos:end="25:36"><name pos:start="25:28" pos:end="25:31">ahci</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:36">dev</name></name></expr></argument>, <argument pos:start="25:39" pos:end="25:42"><expr pos:start="25:39" pos:end="25:42"><literal type="number" pos:start="25:39" pos:end="25:42">0x92</literal></expr></argument>, <argument pos:start="25:45" pos:end="25:47"><expr pos:start="25:45" pos:end="25:47"><name pos:start="25:45" pos:end="25:47">reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="27:9" pos:end="27:65">/* 0...0111111b -- bit significant, ports 0-5 enabled. */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:65"><expr pos:start="29:9" pos:end="29:64"><call pos:start="29:9" pos:end="29:64"><name pos:start="29:9" pos:end="29:22">ASSERT_BIT_SET</name><argument_list pos:start="29:23" pos:end="29:64">(<argument pos:start="29:24" pos:end="29:57"><expr pos:start="29:24" pos:end="29:57"><call pos:start="29:24" pos:end="29:57"><name pos:start="29:24" pos:end="29:40">qpci_config_readb</name><argument_list pos:start="29:41" pos:end="29:57">(<argument pos:start="29:42" pos:end="29:50"><expr pos:start="29:42" pos:end="29:50"><name pos:start="29:42" pos:end="29:50"><name pos:start="29:42" pos:end="29:45">ahci</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:50">dev</name></name></expr></argument>, <argument pos:start="29:53" pos:end="29:56"><expr pos:start="29:53" pos:end="29:56"><literal type="number" pos:start="29:53" pos:end="29:56">0x92</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:60" pos:end="29:63"><expr pos:start="29:60" pos:end="29:63"><literal type="number" pos:start="29:60" pos:end="29:63">0x3F</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    </block_content>}</block></switch>



</block_content>}</block></function>
</unit>
