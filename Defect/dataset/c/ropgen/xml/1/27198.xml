<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27198.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">srt_write_packet</name><parameter_list pos:start="1:28" pos:end="1:64">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">avf</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">AVPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SRTContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">srt</name> <init pos:start="5:21" pos:end="5:36">= <expr pos:start="5:23" pos:end="5:36"><name pos:start="5:23" pos:end="5:36"><name pos:start="5:23" pos:end="5:25">avf</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:71"><decl pos:start="7:5" pos:end="7:70"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">write_ts</name> <init pos:start="7:18" pos:end="7:70">= <expr pos:start="7:20" pos:end="7:70"><name pos:start="7:20" pos:end="7:34"><name pos:start="7:20" pos:end="7:22">avf</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:31">streams</name><index pos:start="7:32" pos:end="7:34">[<expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">0</literal></expr>]</index></name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:51"><name pos:start="7:37" pos:end="7:41">codec</name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:51">codec_id</name></name> <operator pos:start="7:53" pos:end="7:54">!=</operator> <name pos:start="7:56" pos:end="7:70">AV_CODEC_ID_SRT</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:7">srt</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:14">index</name></name><operator pos:start="11:15" pos:end="11:16">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="47:5"><if pos:start="13:5" pos:end="47:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:16">write_ts</name></expr>)</condition> <block pos:start="13:19" pos:end="47:5">{<block_content pos:start="15:9" pos:end="45:66">

        <decl_stmt pos:start="15:9" pos:end="15:51"><decl pos:start="15:9" pos:end="15:28"><type pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:15">int64_t</name></type> <name pos:start="15:17" pos:end="15:17">s</name> <init pos:start="15:19" pos:end="15:28">= <expr pos:start="15:21" pos:end="15:28"><name pos:start="15:21" pos:end="15:28"><name pos:start="15:21" pos:end="15:23">pkt</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:28">pts</name></name></expr></init></decl>, <decl pos:start="15:31" pos:end="15:31"><type ref="prev" pos:start="15:9" pos:end="15:15"/><name pos:start="15:31" pos:end="15:31">e</name></decl>, <decl pos:start="15:34" pos:end="15:50"><type ref="prev" pos:start="15:9" pos:end="15:15"/><name pos:start="15:34" pos:end="15:34">d</name> <init pos:start="15:36" pos:end="15:50">= <expr pos:start="15:38" pos:end="15:50"><name pos:start="15:38" pos:end="15:50"><name pos:start="15:38" pos:end="15:40">pkt</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:50">duration</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="23:42"><if pos:start="19:9" pos:end="23:42">if <condition pos:start="19:12" pos:end="19:19">(<expr pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:13">d</name> <operator pos:start="19:15" pos:end="19:16">&lt;=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:42"><block_content pos:start="23:13" pos:end="23:42">

            <comment type="block" pos:start="21:13" pos:end="21:79">/* For backward compatibility, fallback to convergence_duration. */</comment>

            <expr_stmt pos:start="23:13" pos:end="23:42"><expr pos:start="23:13" pos:end="23:41"><name pos:start="23:13" pos:end="23:13">d</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:41"><name pos:start="23:17" pos:end="23:19">pkt</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:41">convergence_duration</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:41">(<expr pos:start="25:13" pos:end="25:40"><name pos:start="25:13" pos:end="25:13">s</name> <operator pos:start="25:15" pos:end="25:16">==</operator> <name pos:start="25:18" pos:end="25:31">AV_NOPTS_VALUE</name> <operator pos:start="25:33" pos:end="25:34">||</operator> <name pos:start="25:36" pos:end="25:36">d</name> <operator pos:start="25:38" pos:end="25:38">&lt;</operator> <literal type="number" pos:start="25:40" pos:end="25:40">0</literal></expr>)</condition> <block pos:start="25:43" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:35">

            <expr_stmt pos:start="27:13" pos:end="27:68"><expr pos:start="27:13" pos:end="27:67"><call pos:start="27:13" pos:end="27:67"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="27:67">(<argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">avf</name></expr></argument>, <argument pos:start="27:25" pos:end="27:36"><expr pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:39" pos:end="27:66"><expr pos:start="27:39" pos:end="27:66"><literal type="string" pos:start="27:39" pos:end="27:66">"Insufficient timestamps.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:35">return <expr pos:start="29:20" pos:end="29:34"><call pos:start="29:20" pos:end="29:34"><name pos:start="29:20" pos:end="29:26">AVERROR</name><argument_list pos:start="29:27" pos:end="29:34">(<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:9">e</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <name pos:start="33:13" pos:end="33:13">s</name> <operator pos:start="33:15" pos:end="33:15">+</operator> <name pos:start="33:17" pos:end="33:17">d</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="45:66"><expr pos:start="35:9" pos:end="45:65"><call pos:start="35:9" pos:end="45:65"><name pos:start="35:9" pos:end="35:19">avio_printf</name><argument_list pos:start="35:20" pos:end="45:65">(<argument pos:start="35:21" pos:end="35:27"><expr pos:start="35:21" pos:end="35:27"><name pos:start="35:21" pos:end="35:27"><name pos:start="35:21" pos:end="35:23">avf</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:27">pb</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:80"><expr pos:start="35:30" pos:end="35:80"><literal type="string" pos:start="35:30" pos:end="35:80">"%d\n%02d:%02d:%02d,%03d --&gt; %02d:%02d:%02d,%03d\n"</literal></expr></argument>,

                       <argument pos:start="37:24" pos:end="37:33"><expr pos:start="37:24" pos:end="37:33"><name pos:start="37:24" pos:end="37:33"><name pos:start="37:24" pos:end="37:26">srt</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:33">index</name></name></expr></argument>,

                       <argument pos:start="39:24" pos:end="39:41"><expr pos:start="39:24" pos:end="39:41"><operator pos:start="39:24" pos:end="39:24">(</operator><name pos:start="39:25" pos:end="39:27">int</name><operator pos:start="39:28" pos:end="39:28">)</operator><operator pos:start="39:29" pos:end="39:29">(</operator><name pos:start="39:30" pos:end="39:30">s</name> <operator pos:start="39:32" pos:end="39:32">/</operator> <literal type="number" pos:start="39:34" pos:end="39:40">3600000</literal><operator pos:start="39:41" pos:end="39:41">)</operator></expr></argument>,      <argument pos:start="39:49" pos:end="39:69"><expr pos:start="39:49" pos:end="39:69"><operator pos:start="39:49" pos:end="39:49">(</operator><name pos:start="39:50" pos:end="39:52">int</name><operator pos:start="39:53" pos:end="39:53">)</operator><operator pos:start="39:54" pos:end="39:54">(</operator><name pos:start="39:55" pos:end="39:55">s</name> <operator pos:start="39:57" pos:end="39:57">/</operator> <literal type="number" pos:start="39:59" pos:end="39:63">60000</literal><operator pos:start="39:64" pos:end="39:64">)</operator> <operator pos:start="39:66" pos:end="39:66">%</operator> <literal type="number" pos:start="39:68" pos:end="39:69">60</literal></expr></argument>,

                       <argument pos:start="41:24" pos:end="41:46"><expr pos:start="41:24" pos:end="41:46"><operator pos:start="41:24" pos:end="41:24">(</operator><name pos:start="41:25" pos:end="41:27">int</name><operator pos:start="41:28" pos:end="41:28">)</operator><operator pos:start="41:29" pos:end="41:29">(</operator><name pos:start="41:30" pos:end="41:30">s</name> <operator pos:start="41:32" pos:end="41:32">/</operator>    <literal type="number" pos:start="41:37" pos:end="41:40">1000</literal><operator pos:start="41:41" pos:end="41:41">)</operator> <operator pos:start="41:43" pos:end="41:43">%</operator> <literal type="number" pos:start="41:45" pos:end="41:46">60</literal></expr></argument>, <argument pos:start="41:49" pos:end="41:64"><expr pos:start="41:49" pos:end="41:64"><operator pos:start="41:49" pos:end="41:49">(</operator><name pos:start="41:50" pos:end="41:52">int</name><operator pos:start="41:53" pos:end="41:53">)</operator><operator pos:start="41:54" pos:end="41:54">(</operator><name pos:start="41:55" pos:end="41:55">s</name> <operator pos:start="41:57" pos:end="41:57">%</operator>  <literal type="number" pos:start="41:60" pos:end="41:63">1000</literal><operator pos:start="41:64" pos:end="41:64">)</operator></expr></argument>,

                       <argument pos:start="43:24" pos:end="43:41"><expr pos:start="43:24" pos:end="43:41"><operator pos:start="43:24" pos:end="43:24">(</operator><name pos:start="43:25" pos:end="43:27">int</name><operator pos:start="43:28" pos:end="43:28">)</operator><operator pos:start="43:29" pos:end="43:29">(</operator><name pos:start="43:30" pos:end="43:30">e</name> <operator pos:start="43:32" pos:end="43:32">/</operator> <literal type="number" pos:start="43:34" pos:end="43:40">3600000</literal><operator pos:start="43:41" pos:end="43:41">)</operator></expr></argument>,      <argument pos:start="43:49" pos:end="43:69"><expr pos:start="43:49" pos:end="43:69"><operator pos:start="43:49" pos:end="43:49">(</operator><name pos:start="43:50" pos:end="43:52">int</name><operator pos:start="43:53" pos:end="43:53">)</operator><operator pos:start="43:54" pos:end="43:54">(</operator><name pos:start="43:55" pos:end="43:55">e</name> <operator pos:start="43:57" pos:end="43:57">/</operator> <literal type="number" pos:start="43:59" pos:end="43:63">60000</literal><operator pos:start="43:64" pos:end="43:64">)</operator> <operator pos:start="43:66" pos:end="43:66">%</operator> <literal type="number" pos:start="43:68" pos:end="43:69">60</literal></expr></argument>,

                       <argument pos:start="45:24" pos:end="45:46"><expr pos:start="45:24" pos:end="45:46"><operator pos:start="45:24" pos:end="45:24">(</operator><name pos:start="45:25" pos:end="45:27">int</name><operator pos:start="45:28" pos:end="45:28">)</operator><operator pos:start="45:29" pos:end="45:29">(</operator><name pos:start="45:30" pos:end="45:30">e</name> <operator pos:start="45:32" pos:end="45:32">/</operator>    <literal type="number" pos:start="45:37" pos:end="45:40">1000</literal><operator pos:start="45:41" pos:end="45:41">)</operator> <operator pos:start="45:43" pos:end="45:43">%</operator> <literal type="number" pos:start="45:45" pos:end="45:46">60</literal></expr></argument>, <argument pos:start="45:49" pos:end="45:64"><expr pos:start="45:49" pos:end="45:64"><operator pos:start="45:49" pos:end="45:49">(</operator><name pos:start="45:50" pos:end="45:52">int</name><operator pos:start="45:53" pos:end="45:53">)</operator><operator pos:start="45:54" pos:end="45:54">(</operator><name pos:start="45:55" pos:end="45:55">e</name> <operator pos:start="45:57" pos:end="45:57">%</operator>  <literal type="number" pos:start="45:60" pos:end="45:63">1000</literal><operator pos:start="45:64" pos:end="45:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:46"><expr pos:start="49:5" pos:end="49:45"><call pos:start="49:5" pos:end="49:45"><name pos:start="49:5" pos:end="49:14">avio_write</name><argument_list pos:start="49:15" pos:end="49:45">(<argument pos:start="49:16" pos:end="49:22"><expr pos:start="49:16" pos:end="49:22"><name pos:start="49:16" pos:end="49:22"><name pos:start="49:16" pos:end="49:18">avf</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:22">pb</name></name></expr></argument>, <argument pos:start="49:25" pos:end="49:33"><expr pos:start="49:25" pos:end="49:33"><name pos:start="49:25" pos:end="49:33"><name pos:start="49:25" pos:end="49:27">pkt</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:33">data</name></name></expr></argument>, <argument pos:start="49:36" pos:end="49:44"><expr pos:start="49:36" pos:end="49:44"><name pos:start="49:36" pos:end="49:44"><name pos:start="49:36" pos:end="49:38">pkt</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:44">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:39"><if pos:start="51:5" pos:end="53:39">if <condition pos:start="51:8" pos:end="51:17">(<expr pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:16">write_ts</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:39"><block_content pos:start="53:9" pos:end="53:39">

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><call pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:18">avio_write</name><argument_list pos:start="53:19" pos:end="53:38">(<argument pos:start="53:20" pos:end="53:26"><expr pos:start="53:20" pos:end="53:26"><name pos:start="53:20" pos:end="53:26"><name pos:start="53:20" pos:end="53:22">avf</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:26">pb</name></name></expr></argument>, <argument pos:start="53:29" pos:end="53:34"><expr pos:start="53:29" pos:end="53:34"><literal type="string" pos:start="53:29" pos:end="53:34">"\n\n"</literal></expr></argument>, <argument pos:start="53:37" pos:end="53:37"><expr pos:start="53:37" pos:end="53:37"><literal type="number" pos:start="53:37" pos:end="53:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:24"><expr pos:start="55:5" pos:end="55:23"><call pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:14">avio_flush</name><argument_list pos:start="55:15" pos:end="55:23">(<argument pos:start="55:16" pos:end="55:22"><expr pos:start="55:16" pos:end="55:22"><name pos:start="55:16" pos:end="55:22"><name pos:start="55:16" pos:end="55:18">avf</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:22">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
