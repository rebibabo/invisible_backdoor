<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10913.c" pos:tabs="8"><function pos:start="1:1" pos:end="333:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">search_for_quantizers_faac</name><parameter_list pos:start="1:39" pos:end="5:58">(<parameter pos:start="1:40" pos:end="1:60"><decl pos:start="1:40" pos:end="1:60"><type pos:start="1:40" pos:end="1:60"><name pos:start="1:40" pos:end="1:53">AVCodecContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">avctx</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:78"><decl pos:start="1:63" pos:end="1:78"><type pos:start="1:63" pos:end="1:78"><name pos:start="1:63" pos:end="1:75">AACEncContext</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:78">s</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:64"><decl pos:start="3:40" pos:end="3:64"><type pos:start="3:40" pos:end="3:64"><name pos:start="3:40" pos:end="3:59">SingleChannelElement</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:64">sce</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:57"><decl pos:start="5:40" pos:end="5:57"><type pos:start="5:40" pos:end="5:57"><specifier pos:start="5:40" pos:end="5:44">const</specifier> <name pos:start="5:46" pos:end="5:50">float</name></type> <name pos:start="5:52" pos:end="5:57">lambda</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="333:1">{<block_content pos:start="9:5" pos:end="331:5">

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">start</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>, <decl pos:start="9:20" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:20">i</name></decl>, <decl pos:start="9:23" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:23">w</name></decl>, <decl pos:start="9:26" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:27">w2</name></decl>, <decl pos:start="9:30" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:30">g</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">float</name></type> <name pos:start="11:11" pos:end="11:20"><name pos:start="11:11" pos:end="11:15">uplim</name><index pos:start="11:16" pos:end="11:20">[<expr pos:start="11:17" pos:end="11:19"><literal type="number" pos:start="11:17" pos:end="11:19">128</literal></expr>]</index></name></decl>, <decl pos:start="11:23" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:9"/><name pos:start="11:23" pos:end="11:31"><name pos:start="11:23" pos:end="11:26">maxq</name><index pos:start="11:27" pos:end="11:31">[<expr pos:start="11:28" pos:end="11:30"><literal type="number" pos:start="11:28" pos:end="11:30">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">minq</name></decl>, <decl pos:start="13:15" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:19">maxsf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:76"><decl pos:start="15:5" pos:end="15:75"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">float</name></type> <name pos:start="15:11" pos:end="15:18">distfact</name> <init pos:start="15:20" pos:end="15:75">= <expr pos:start="15:22" pos:end="15:75"><operator pos:start="15:22" pos:end="15:22">(</operator><ternary pos:start="15:23" pos:end="15:65"><condition pos:start="15:23" pos:end="15:50"><expr pos:start="15:23" pos:end="15:48"><operator pos:start="15:23" pos:end="15:23">(</operator><name pos:start="15:24" pos:end="15:43"><name pos:start="15:24" pos:end="15:26">sce</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:31">ics</name><operator pos:start="15:32" pos:end="15:32">.</operator><name pos:start="15:33" pos:end="15:43">num_windows</name></name> <operator pos:start="15:45" pos:end="15:45">&gt;</operator> <literal type="number" pos:start="15:47" pos:end="15:47">1</literal><operator pos:start="15:48" pos:end="15:48">)</operator></expr> ?</condition><then pos:start="15:52" pos:end="15:56"> <expr pos:start="15:52" pos:end="15:56"><literal type="number" pos:start="15:52" pos:end="15:56">85.80</literal></expr> </then><else pos:start="15:58" pos:end="15:65">: <expr pos:start="15:60" pos:end="15:65"><literal type="number" pos:start="15:60" pos:end="15:65">147.84</literal></expr></else></ternary><operator pos:start="15:66" pos:end="15:66">)</operator> <operator pos:start="15:68" pos:end="15:68">/</operator> <name pos:start="15:70" pos:end="15:75">lambda</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:44"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">last</name> <init pos:start="17:14" pos:end="17:16">= <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr></init></decl>, <decl pos:start="17:19" pos:end="17:30"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:19" pos:end="17:26">lastband</name> <init pos:start="17:28" pos:end="17:30">= <expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr></init></decl>, <decl pos:start="17:33" pos:end="17:43"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:33" pos:end="17:39">curband</name> <init pos:start="17:41" pos:end="17:43">= <expr pos:start="17:43" pos:end="17:43"><literal type="number" pos:start="17:43" pos:end="17:43">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:26"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:9">float</name></type> <name pos:start="19:11" pos:end="19:20">avg_energy</name> <init pos:start="19:22" pos:end="19:26">= <expr pos:start="19:24" pos:end="19:26"><literal type="number" pos:start="19:24" pos:end="19:26">0.0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="21:5" pos:end="79:5"><if pos:start="21:5" pos:end="47:5">if <condition pos:start="21:8" pos:end="21:34">(<expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:11">sce</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:16">ics</name><operator pos:start="21:17" pos:end="21:17">.</operator><name pos:start="21:18" pos:end="21:28">num_windows</name></name> <operator pos:start="21:30" pos:end="21:31">==</operator> <literal type="number" pos:start="21:33" pos:end="21:33">1</literal></expr>)</condition> <block pos:start="21:36" pos:end="47:5">{<block_content pos:start="23:9" pos:end="45:9">

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:13">start</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>;</expr_stmt>

        <for pos:start="25:9" pos:end="45:9">for <control pos:start="25:13" pos:end="25:34">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">i</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:29"><expr pos:start="25:21" pos:end="25:28"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <literal type="number" pos:start="25:25" pos:end="25:28">1024</literal></expr>;</condition> <incr pos:start="25:31" pos:end="25:33"><expr pos:start="25:31" pos:end="25:33"><name pos:start="25:31" pos:end="25:31">i</name><operator pos:start="25:32" pos:end="25:33">++</operator></expr></incr>)</control> <block pos:start="25:36" pos:end="45:9">{<block_content pos:start="27:13" pos:end="43:13">

            <if_stmt pos:start="27:13" pos:end="33:13"><if pos:start="27:13" pos:end="33:13">if <condition pos:start="27:16" pos:end="27:57">(<expr pos:start="27:17" pos:end="27:56"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">-</operator> <name pos:start="27:21" pos:end="27:25">start</name> <operator pos:start="27:27" pos:end="27:28">&gt;=</operator> <name pos:start="27:30" pos:end="27:56"><name pos:start="27:30" pos:end="27:32">sce</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:37">ics</name><operator pos:start="27:38" pos:end="27:38">.</operator><name pos:start="27:39" pos:end="27:47">swb_sizes</name><index pos:start="27:48" pos:end="27:56">[<expr pos:start="27:49" pos:end="27:55"><name pos:start="27:49" pos:end="27:55">curband</name></expr>]</index></name></expr>)</condition> <block pos:start="27:59" pos:end="33:13">{<block_content pos:start="29:17" pos:end="31:26">

                <expr_stmt pos:start="29:17" pos:end="29:53"><expr pos:start="29:17" pos:end="29:52"><name pos:start="29:17" pos:end="29:21">start</name> <operator pos:start="29:23" pos:end="29:24">+=</operator> <name pos:start="29:26" pos:end="29:52"><name pos:start="29:26" pos:end="29:28">sce</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:33">ics</name><operator pos:start="29:34" pos:end="29:34">.</operator><name pos:start="29:35" pos:end="29:43">swb_sizes</name><index pos:start="29:44" pos:end="29:52">[<expr pos:start="29:45" pos:end="29:51"><name pos:start="29:45" pos:end="29:51">curband</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="31:17" pos:end="31:26"><expr pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:23">curband</name><operator pos:start="31:24" pos:end="31:25">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="35:13" pos:end="43:13"><if pos:start="35:13" pos:end="43:13">if <condition pos:start="35:16" pos:end="35:31">(<expr pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:19">sce</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:27">coeffs</name><index pos:start="35:28" pos:end="35:30">[<expr pos:start="35:29" pos:end="35:29"><name pos:start="35:29" pos:end="35:29">i</name></expr>]</index></name></expr>)</condition> <block pos:start="35:33" pos:end="43:13">{<block_content pos:start="37:17" pos:end="41:35">

                <expr_stmt pos:start="37:17" pos:end="37:62"><expr pos:start="37:17" pos:end="37:61"><name pos:start="37:17" pos:end="37:26">avg_energy</name> <operator pos:start="37:28" pos:end="37:29">+=</operator> <name pos:start="37:31" pos:end="37:44"><name pos:start="37:31" pos:end="37:33">sce</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:41">coeffs</name><index pos:start="37:42" pos:end="37:44">[<expr pos:start="37:43" pos:end="37:43"><name pos:start="37:43" pos:end="37:43">i</name></expr>]</index></name> <operator pos:start="37:46" pos:end="37:46">*</operator> <name pos:start="37:48" pos:end="37:61"><name pos:start="37:48" pos:end="37:50">sce</name><operator pos:start="37:51" pos:end="37:52">-&gt;</operator><name pos:start="37:53" pos:end="37:58">coeffs</name><index pos:start="37:59" pos:end="37:61">[<expr pos:start="37:60" pos:end="37:60"><name pos:start="37:60" pos:end="37:60">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:25"><expr pos:start="39:17" pos:end="39:24"><name pos:start="39:17" pos:end="39:20">last</name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:24">i</name></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:35"><expr pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:24">lastband</name> <operator pos:start="41:26" pos:end="41:26">=</operator> <name pos:start="41:28" pos:end="41:34">curband</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="79:5">else <block pos:start="47:12" pos:end="79:5">{<block_content pos:start="49:9" pos:end="77:9">

        <for pos:start="49:9" pos:end="77:9">for <control pos:start="49:13" pos:end="49:31">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">w</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:26"><expr pos:start="49:21" pos:end="49:25"><name pos:start="49:21" pos:end="49:21">w</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <literal type="number" pos:start="49:25" pos:end="49:25">8</literal></expr>;</condition> <incr pos:start="49:28" pos:end="49:30"><expr pos:start="49:28" pos:end="49:30"><name pos:start="49:28" pos:end="49:28">w</name><operator pos:start="49:29" pos:end="49:30">++</operator></expr></incr>)</control> <block pos:start="49:33" pos:end="77:9">{<block_content pos:start="51:13" pos:end="75:13">

            <decl_stmt pos:start="51:13" pos:end="51:54"><decl pos:start="51:13" pos:end="51:53"><type pos:start="51:13" pos:end="51:25"><specifier pos:start="51:13" pos:end="51:17">const</specifier> <name pos:start="51:19" pos:end="51:23">float</name> <modifier pos:start="51:25" pos:end="51:25">*</modifier></type><name pos:start="51:26" pos:end="51:31">coeffs</name> <init pos:start="51:33" pos:end="51:53">= <expr pos:start="51:35" pos:end="51:53"><name pos:start="51:35" pos:end="51:45"><name pos:start="51:35" pos:end="51:37">sce</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:45">coeffs</name></name> <operator pos:start="51:47" pos:end="51:47">+</operator> <name pos:start="51:49" pos:end="51:49">w</name><operator pos:start="51:50" pos:end="51:50">*</operator><literal type="number" pos:start="51:51" pos:end="51:53">128</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:32"><expr pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:19">curband</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:27">start</name> <operator pos:start="53:29" pos:end="53:29">=</operator> <literal type="number" pos:start="53:31" pos:end="53:31">0</literal></expr>;</expr_stmt>

            <for pos:start="55:13" pos:end="75:13">for <control pos:start="55:17" pos:end="55:37">(<init pos:start="55:18" pos:end="55:23"><expr pos:start="55:18" pos:end="55:22"><name pos:start="55:18" pos:end="55:18">i</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>;</init> <condition pos:start="55:25" pos:end="55:32"><expr pos:start="55:25" pos:end="55:31"><name pos:start="55:25" pos:end="55:25">i</name> <operator pos:start="55:27" pos:end="55:27">&lt;</operator> <literal type="number" pos:start="55:29" pos:end="55:31">128</literal></expr>;</condition> <incr pos:start="55:34" pos:end="55:36"><expr pos:start="55:34" pos:end="55:36"><name pos:start="55:34" pos:end="55:34">i</name><operator pos:start="55:35" pos:end="55:36">++</operator></expr></incr>)</control> <block pos:start="55:39" pos:end="75:13">{<block_content pos:start="57:17" pos:end="73:17">

                <if_stmt pos:start="57:17" pos:end="63:17"><if pos:start="57:17" pos:end="63:17">if <condition pos:start="57:20" pos:end="57:61">(<expr pos:start="57:21" pos:end="57:60"><name pos:start="57:21" pos:end="57:21">i</name> <operator pos:start="57:23" pos:end="57:23">-</operator> <name pos:start="57:25" pos:end="57:29">start</name> <operator pos:start="57:31" pos:end="57:32">&gt;=</operator> <name pos:start="57:34" pos:end="57:60"><name pos:start="57:34" pos:end="57:36">sce</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:41">ics</name><operator pos:start="57:42" pos:end="57:42">.</operator><name pos:start="57:43" pos:end="57:51">swb_sizes</name><index pos:start="57:52" pos:end="57:60">[<expr pos:start="57:53" pos:end="57:59"><name pos:start="57:53" pos:end="57:59">curband</name></expr>]</index></name></expr>)</condition> <block pos:start="57:63" pos:end="63:17">{<block_content pos:start="59:21" pos:end="61:30">

                    <expr_stmt pos:start="59:21" pos:end="59:57"><expr pos:start="59:21" pos:end="59:56"><name pos:start="59:21" pos:end="59:25">start</name> <operator pos:start="59:27" pos:end="59:28">+=</operator> <name pos:start="59:30" pos:end="59:56"><name pos:start="59:30" pos:end="59:32">sce</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:37">ics</name><operator pos:start="59:38" pos:end="59:38">.</operator><name pos:start="59:39" pos:end="59:47">swb_sizes</name><index pos:start="59:48" pos:end="59:56">[<expr pos:start="59:49" pos:end="59:55"><name pos:start="59:49" pos:end="59:55">curband</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:30"><expr pos:start="61:21" pos:end="61:29"><name pos:start="61:21" pos:end="61:27">curband</name><operator pos:start="61:28" pos:end="61:29">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="65:17" pos:end="73:17"><if pos:start="65:17" pos:end="73:17">if <condition pos:start="65:20" pos:end="65:30">(<expr pos:start="65:21" pos:end="65:29"><name pos:start="65:21" pos:end="65:29"><name pos:start="65:21" pos:end="65:26">coeffs</name><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><name pos:start="65:28" pos:end="65:28">i</name></expr>]</index></name></expr>)</condition> <block pos:start="65:32" pos:end="73:17">{<block_content pos:start="67:21" pos:end="71:56">

                    <expr_stmt pos:start="67:21" pos:end="67:56"><expr pos:start="67:21" pos:end="67:55"><name pos:start="67:21" pos:end="67:30">avg_energy</name> <operator pos:start="67:32" pos:end="67:33">+=</operator> <name pos:start="67:35" pos:end="67:43"><name pos:start="67:35" pos:end="67:40">coeffs</name><index pos:start="67:41" pos:end="67:43">[<expr pos:start="67:42" pos:end="67:42"><name pos:start="67:42" pos:end="67:42">i</name></expr>]</index></name> <operator pos:start="67:45" pos:end="67:45">*</operator> <name pos:start="67:47" pos:end="67:55"><name pos:start="67:47" pos:end="67:52">coeffs</name><index pos:start="67:53" pos:end="67:55">[<expr pos:start="67:54" pos:end="67:54"><name pos:start="67:54" pos:end="67:54">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:42"><expr pos:start="69:21" pos:end="69:41"><name pos:start="69:21" pos:end="69:24">last</name> <operator pos:start="69:26" pos:end="69:26">=</operator> <call pos:start="69:28" pos:end="69:41"><name pos:start="69:28" pos:end="69:32">FFMAX</name><argument_list pos:start="69:33" pos:end="69:41">(<argument pos:start="69:34" pos:end="69:37"><expr pos:start="69:34" pos:end="69:37"><name pos:start="69:34" pos:end="69:37">last</name></expr></argument>, <argument pos:start="69:40" pos:end="69:40"><expr pos:start="69:40" pos:end="69:40"><name pos:start="69:40" pos:end="69:40">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:56"><expr pos:start="71:21" pos:end="71:55"><name pos:start="71:21" pos:end="71:28">lastband</name> <operator pos:start="71:30" pos:end="71:30">=</operator> <call pos:start="71:32" pos:end="71:55"><name pos:start="71:32" pos:end="71:36">FFMAX</name><argument_list pos:start="71:37" pos:end="71:55">(<argument pos:start="71:38" pos:end="71:45"><expr pos:start="71:38" pos:end="71:45"><name pos:start="71:38" pos:end="71:45">lastband</name></expr></argument>, <argument pos:start="71:48" pos:end="71:54"><expr pos:start="71:48" pos:end="71:54"><name pos:start="71:48" pos:end="71:54">curband</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:11"><expr pos:start="81:5" pos:end="81:10"><name pos:start="81:5" pos:end="81:8">last</name><operator pos:start="81:9" pos:end="81:10">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:23"><expr pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:14">avg_energy</name> <operator pos:start="83:16" pos:end="83:17">/=</operator> <name pos:start="83:19" pos:end="83:22">last</name></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:27">(<expr pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:18">avg_energy</name> <operator pos:start="85:20" pos:end="85:21">==</operator> <literal type="number" pos:start="85:23" pos:end="85:26">0.0f</literal></expr>)</condition> <block pos:start="85:29" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:15">

        <for pos:start="87:9" pos:end="89:43">for <control pos:start="87:13" pos:end="87:57">(<init pos:start="87:14" pos:end="87:19"><expr pos:start="87:14" pos:end="87:18"><name pos:start="87:14" pos:end="87:14">i</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr>;</init> <condition pos:start="87:21" pos:end="87:52"><expr pos:start="87:21" pos:end="87:51"><name pos:start="87:21" pos:end="87:21">i</name> <operator pos:start="87:23" pos:end="87:23">&lt;</operator> <call pos:start="87:25" pos:end="87:51"><name pos:start="87:25" pos:end="87:38">FF_ARRAY_ELEMS</name><argument_list pos:start="87:39" pos:end="87:51">(<argument pos:start="87:40" pos:end="87:50"><expr pos:start="87:40" pos:end="87:50"><name pos:start="87:40" pos:end="87:50"><name pos:start="87:40" pos:end="87:42">sce</name><operator pos:start="87:43" pos:end="87:44">-&gt;</operator><name pos:start="87:45" pos:end="87:50">sf_idx</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="87:54" pos:end="87:56"><expr pos:start="87:54" pos:end="87:56"><name pos:start="87:54" pos:end="87:54">i</name><operator pos:start="87:55" pos:end="87:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:13" pos:end="89:43"><block_content pos:start="89:13" pos:end="89:43">

            <expr_stmt pos:start="89:13" pos:end="89:43"><expr pos:start="89:13" pos:end="89:42"><name pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:15">sce</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:23">sf_idx</name><index pos:start="89:24" pos:end="89:26">[<expr pos:start="89:25" pos:end="89:25"><name pos:start="89:25" pos:end="89:25">i</name></expr>]</index></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:42">SCALE_ONE_POS</name></expr>;</expr_stmt></block_content></block></for>

        <return pos:start="91:9" pos:end="91:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="95:5" pos:end="171:5">for <control pos:start="95:9" pos:end="95:69">(<init pos:start="95:10" pos:end="95:15"><expr pos:start="95:10" pos:end="95:14"><name pos:start="95:10" pos:end="95:10">w</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>;</init> <condition pos:start="95:17" pos:end="95:41"><expr pos:start="95:17" pos:end="95:40"><name pos:start="95:17" pos:end="95:17">w</name> <operator pos:start="95:19" pos:end="95:19">&lt;</operator> <name pos:start="95:21" pos:end="95:40"><name pos:start="95:21" pos:end="95:23">sce</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:28">ics</name><operator pos:start="95:29" pos:end="95:29">.</operator><name pos:start="95:30" pos:end="95:40">num_windows</name></name></expr>;</condition> <incr pos:start="95:43" pos:end="95:68"><expr pos:start="95:43" pos:end="95:68"><name pos:start="95:43" pos:end="95:43">w</name> <operator pos:start="95:45" pos:end="95:46">+=</operator> <name pos:start="95:48" pos:end="95:68"><name pos:start="95:48" pos:end="95:50">sce</name><operator pos:start="95:51" pos:end="95:52">-&gt;</operator><name pos:start="95:53" pos:end="95:55">ics</name><operator pos:start="95:56" pos:end="95:56">.</operator><name pos:start="95:57" pos:end="95:65">group_len</name><index pos:start="95:66" pos:end="95:68">[<expr pos:start="95:67" pos:end="95:67"><name pos:start="95:67" pos:end="95:67">w</name></expr>]</index></name></expr></incr>)</control> <block pos:start="95:71" pos:end="171:5">{<block_content pos:start="97:9" pos:end="169:9">

        <expr_stmt pos:start="97:9" pos:end="97:22"><expr pos:start="97:9" pos:end="97:21"><name pos:start="97:9" pos:end="97:13">start</name> <operator pos:start="97:15" pos:end="97:15">=</operator> <name pos:start="97:17" pos:end="97:17">w</name><operator pos:start="97:18" pos:end="97:18">*</operator><literal type="number" pos:start="97:19" pos:end="97:21">128</literal></expr>;</expr_stmt>

        <for pos:start="99:9" pos:end="169:9">for <control pos:start="99:13" pos:end="99:46">(<init pos:start="99:14" pos:end="99:19"><expr pos:start="99:14" pos:end="99:18"><name pos:start="99:14" pos:end="99:14">g</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr>;</init> <condition pos:start="99:21" pos:end="99:41"><expr pos:start="99:21" pos:end="99:40"><name pos:start="99:21" pos:end="99:21">g</name> <operator pos:start="99:23" pos:end="99:23">&lt;</operator> <name pos:start="99:25" pos:end="99:40"><name pos:start="99:25" pos:end="99:27">sce</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:32">ics</name><operator pos:start="99:33" pos:end="99:33">.</operator><name pos:start="99:34" pos:end="99:40">num_swb</name></name></expr>;</condition> <incr pos:start="99:43" pos:end="99:45"><expr pos:start="99:43" pos:end="99:45"><name pos:start="99:43" pos:end="99:43">g</name><operator pos:start="99:44" pos:end="99:45">++</operator></expr></incr>)</control> <block pos:start="99:48" pos:end="169:9">{<block_content pos:start="101:13" pos:end="167:67">

            <decl_stmt pos:start="101:13" pos:end="101:49"><decl pos:start="101:13" pos:end="101:48"><type pos:start="101:13" pos:end="101:19"><name pos:start="101:13" pos:end="101:17">float</name> <modifier pos:start="101:19" pos:end="101:19">*</modifier></type><name pos:start="101:20" pos:end="101:24">coefs</name>   <init pos:start="101:28" pos:end="101:48">= <expr pos:start="101:30" pos:end="101:48"><name pos:start="101:30" pos:end="101:40"><name pos:start="101:30" pos:end="101:32">sce</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:40">coeffs</name></name> <operator pos:start="101:42" pos:end="101:42">+</operator> <name pos:start="101:44" pos:end="101:48">start</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="103:13" pos:end="103:51"><decl pos:start="103:13" pos:end="103:50"><type pos:start="103:13" pos:end="103:21"><specifier pos:start="103:13" pos:end="103:17">const</specifier> <name pos:start="103:19" pos:end="103:21">int</name></type> <name pos:start="103:23" pos:end="103:26">size</name> <init pos:start="103:28" pos:end="103:50">= <expr pos:start="103:30" pos:end="103:50"><name pos:start="103:30" pos:end="103:50"><name pos:start="103:30" pos:end="103:32">sce</name><operator pos:start="103:33" pos:end="103:34">-&gt;</operator><name pos:start="103:35" pos:end="103:37">ics</name><operator pos:start="103:38" pos:end="103:38">.</operator><name pos:start="103:39" pos:end="103:47">swb_sizes</name><index pos:start="103:48" pos:end="103:50">[<expr pos:start="103:49" pos:end="103:49"><name pos:start="103:49" pos:end="103:49">g</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="105:13" pos:end="105:69"><decl pos:start="105:13" pos:end="105:30"><type pos:start="105:13" pos:end="105:15"><name pos:start="105:13" pos:end="105:15">int</name></type> <name pos:start="105:17" pos:end="105:22">start2</name> <init pos:start="105:24" pos:end="105:30">= <expr pos:start="105:26" pos:end="105:30"><name pos:start="105:26" pos:end="105:30">start</name></expr></init></decl>, <decl pos:start="105:33" pos:end="105:51"><type ref="prev" pos:start="105:13" pos:end="105:15"/><name pos:start="105:33" pos:end="105:36">end2</name> <init pos:start="105:38" pos:end="105:51">= <expr pos:start="105:40" pos:end="105:51"><name pos:start="105:40" pos:end="105:44">start</name> <operator pos:start="105:46" pos:end="105:46">+</operator> <name pos:start="105:48" pos:end="105:51">size</name></expr></init></decl>, <decl pos:start="105:54" pos:end="105:68"><type ref="prev" pos:start="105:13" pos:end="105:15"/><name pos:start="105:54" pos:end="105:60">peakpos</name> <init pos:start="105:62" pos:end="105:68">= <expr pos:start="105:64" pos:end="105:68"><name pos:start="105:64" pos:end="105:68">start</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="107:13" pos:end="107:45"><decl pos:start="107:13" pos:end="107:29"><type pos:start="107:13" pos:end="107:17"><name pos:start="107:13" pos:end="107:17">float</name></type> <name pos:start="107:19" pos:end="107:24">maxval</name> <init pos:start="107:26" pos:end="107:29">= <expr pos:start="107:28" pos:end="107:29"><operator pos:start="107:28" pos:end="107:28">-</operator><literal type="number" pos:start="107:29" pos:end="107:29">1</literal></expr></init></decl>, <decl pos:start="107:32" pos:end="107:41"><type ref="prev" pos:start="107:13" pos:end="107:17"/><name pos:start="107:32" pos:end="107:34">thr</name> <init pos:start="107:36" pos:end="107:41">= <expr pos:start="107:38" pos:end="107:41"><literal type="number" pos:start="107:38" pos:end="107:41">0.0f</literal></expr></init></decl>, <decl pos:start="107:44" pos:end="107:44"><type ref="prev" pos:start="107:13" pos:end="107:17"/><name pos:start="107:44" pos:end="107:44">t</name></decl>;</decl_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:32"><expr pos:start="109:13" pos:end="109:31"><name pos:start="109:13" pos:end="109:24"><name pos:start="109:13" pos:end="109:16">maxq</name><index pos:start="109:17" pos:end="109:24">[<expr pos:start="109:18" pos:end="109:23"><name pos:start="109:18" pos:end="109:18">w</name><operator pos:start="109:19" pos:end="109:19">*</operator><literal type="number" pos:start="109:20" pos:end="109:21">16</literal><operator pos:start="109:22" pos:end="109:22">+</operator><name pos:start="109:23" pos:end="109:23">g</name></expr>]</index></name> <operator pos:start="109:26" pos:end="109:26">=</operator> <literal type="number" pos:start="109:28" pos:end="109:31">0.0f</literal></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="123:13"><if pos:start="111:13" pos:end="123:13">if <condition pos:start="111:16" pos:end="111:29">(<expr pos:start="111:17" pos:end="111:28"><name pos:start="111:17" pos:end="111:17">g</name> <operator pos:start="111:19" pos:end="111:19">&gt;</operator> <name pos:start="111:21" pos:end="111:28">lastband</name></expr>)</condition> <block pos:start="111:31" pos:end="123:13">{<block_content pos:start="113:17" pos:end="121:25">

                <expr_stmt pos:start="113:17" pos:end="113:36"><expr pos:start="113:17" pos:end="113:35"><name pos:start="113:17" pos:end="113:28"><name pos:start="113:17" pos:end="113:20">maxq</name><index pos:start="113:21" pos:end="113:28">[<expr pos:start="113:22" pos:end="113:27"><name pos:start="113:22" pos:end="113:22">w</name><operator pos:start="113:23" pos:end="113:23">*</operator><literal type="number" pos:start="113:24" pos:end="113:25">16</literal><operator pos:start="113:26" pos:end="113:26">+</operator><name pos:start="113:27" pos:end="113:27">g</name></expr>]</index></name> <operator pos:start="113:30" pos:end="113:30">=</operator> <literal type="number" pos:start="113:32" pos:end="113:35">0.0f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:30"><expr pos:start="115:17" pos:end="115:29"><name pos:start="115:17" pos:end="115:21">start</name> <operator pos:start="115:23" pos:end="115:24">+=</operator> <name pos:start="115:26" pos:end="115:29">size</name></expr>;</expr_stmt>

                <for pos:start="117:17" pos:end="119:69">for <control pos:start="117:21" pos:end="117:62">(<init pos:start="117:22" pos:end="117:28"><expr pos:start="117:22" pos:end="117:27"><name pos:start="117:22" pos:end="117:23">w2</name> <operator pos:start="117:25" pos:end="117:25">=</operator> <literal type="number" pos:start="117:27" pos:end="117:27">0</literal></expr>;</init> <condition pos:start="117:30" pos:end="117:56"><expr pos:start="117:30" pos:end="117:55"><name pos:start="117:30" pos:end="117:31">w2</name> <operator pos:start="117:33" pos:end="117:33">&lt;</operator> <name pos:start="117:35" pos:end="117:55"><name pos:start="117:35" pos:end="117:37">sce</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:42">ics</name><operator pos:start="117:43" pos:end="117:43">.</operator><name pos:start="117:44" pos:end="117:52">group_len</name><index pos:start="117:53" pos:end="117:55">[<expr pos:start="117:54" pos:end="117:54"><name pos:start="117:54" pos:end="117:54">w</name></expr>]</index></name></expr>;</condition> <incr pos:start="117:58" pos:end="117:61"><expr pos:start="117:58" pos:end="117:61"><name pos:start="117:58" pos:end="117:59">w2</name><operator pos:start="117:60" pos:end="117:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="119:21" pos:end="119:69"><block_content pos:start="119:21" pos:end="119:69">

                    <expr_stmt pos:start="119:21" pos:end="119:69"><expr pos:start="119:21" pos:end="119:68"><call pos:start="119:21" pos:end="119:68"><name pos:start="119:21" pos:end="119:26">memset</name><argument_list pos:start="119:27" pos:end="119:68">(<argument pos:start="119:28" pos:end="119:41"><expr pos:start="119:28" pos:end="119:41"><name pos:start="119:28" pos:end="119:32">coefs</name> <operator pos:start="119:34" pos:end="119:34">+</operator> <name pos:start="119:36" pos:end="119:37">w2</name><operator pos:start="119:38" pos:end="119:38">*</operator><literal type="number" pos:start="119:39" pos:end="119:41">128</literal></expr></argument>, <argument pos:start="119:44" pos:end="119:44"><expr pos:start="119:44" pos:end="119:44"><literal type="number" pos:start="119:44" pos:end="119:44">0</literal></expr></argument>, <argument pos:start="119:47" pos:end="119:67"><expr pos:start="119:47" pos:end="119:67"><sizeof pos:start="119:47" pos:end="119:62">sizeof<argument_list pos:start="119:53" pos:end="119:62">(<argument pos:start="119:54" pos:end="119:61"><expr pos:start="119:54" pos:end="119:61"><name pos:start="119:54" pos:end="119:61"><name pos:start="119:54" pos:end="119:58">coefs</name><index pos:start="119:59" pos:end="119:61">[<expr pos:start="119:60" pos:end="119:60"><literal type="number" pos:start="119:60" pos:end="119:60">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><operator pos:start="119:63" pos:end="119:63">*</operator><name pos:start="119:64" pos:end="119:67">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <continue pos:start="121:17" pos:end="121:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <for pos:start="125:13" pos:end="145:13">for <control pos:start="125:17" pos:end="125:58">(<init pos:start="125:18" pos:end="125:24"><expr pos:start="125:18" pos:end="125:23"><name pos:start="125:18" pos:end="125:19">w2</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <literal type="number" pos:start="125:23" pos:end="125:23">0</literal></expr>;</init> <condition pos:start="125:26" pos:end="125:52"><expr pos:start="125:26" pos:end="125:51"><name pos:start="125:26" pos:end="125:27">w2</name> <operator pos:start="125:29" pos:end="125:29">&lt;</operator> <name pos:start="125:31" pos:end="125:51"><name pos:start="125:31" pos:end="125:33">sce</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:38">ics</name><operator pos:start="125:39" pos:end="125:39">.</operator><name pos:start="125:40" pos:end="125:48">group_len</name><index pos:start="125:49" pos:end="125:51">[<expr pos:start="125:50" pos:end="125:50"><name pos:start="125:50" pos:end="125:50">w</name></expr>]</index></name></expr>;</condition> <incr pos:start="125:54" pos:end="125:57"><expr pos:start="125:54" pos:end="125:57"><name pos:start="125:54" pos:end="125:55">w2</name><operator pos:start="125:56" pos:end="125:57">++</operator></expr></incr>)</control> <block pos:start="125:60" pos:end="145:13">{<block_content pos:start="127:17" pos:end="143:17">

                <for pos:start="127:17" pos:end="143:17">for <control pos:start="127:21" pos:end="127:42">(<init pos:start="127:22" pos:end="127:27"><expr pos:start="127:22" pos:end="127:26"><name pos:start="127:22" pos:end="127:22">i</name> <operator pos:start="127:24" pos:end="127:24">=</operator> <literal type="number" pos:start="127:26" pos:end="127:26">0</literal></expr>;</init> <condition pos:start="127:29" pos:end="127:37"><expr pos:start="127:29" pos:end="127:36"><name pos:start="127:29" pos:end="127:29">i</name> <operator pos:start="127:31" pos:end="127:31">&lt;</operator> <name pos:start="127:33" pos:end="127:36">size</name></expr>;</condition> <incr pos:start="127:39" pos:end="127:41"><expr pos:start="127:39" pos:end="127:41"><name pos:start="127:39" pos:end="127:39">i</name><operator pos:start="127:40" pos:end="127:41">++</operator></expr></incr>)</control> <block pos:start="127:44" pos:end="143:17">{<block_content pos:start="129:21" pos:end="141:21">

                    <decl_stmt pos:start="129:21" pos:end="129:62"><decl pos:start="129:21" pos:end="129:61"><type pos:start="129:21" pos:end="129:25"><name pos:start="129:21" pos:end="129:25">float</name></type> <name pos:start="129:27" pos:end="129:27">t</name> <init pos:start="129:29" pos:end="129:61">= <expr pos:start="129:31" pos:end="129:61"><name pos:start="129:31" pos:end="129:45"><name pos:start="129:31" pos:end="129:35">coefs</name><index pos:start="129:36" pos:end="129:45">[<expr pos:start="129:37" pos:end="129:44"><name pos:start="129:37" pos:end="129:38">w2</name><operator pos:start="129:39" pos:end="129:39">*</operator><literal type="number" pos:start="129:40" pos:end="129:43">128</literal><operator pos:start="129:43" pos:end="129:43">+</operator><name pos:start="129:44" pos:end="129:44">i</name></expr>]</index></name><operator pos:start="129:46" pos:end="129:46">*</operator><name pos:start="129:47" pos:end="129:61"><name pos:start="129:47" pos:end="129:51">coefs</name><index pos:start="129:52" pos:end="129:61">[<expr pos:start="129:53" pos:end="129:60"><name pos:start="129:53" pos:end="129:54">w2</name><operator pos:start="129:55" pos:end="129:55">*</operator><literal type="number" pos:start="129:56" pos:end="129:59">128</literal><operator pos:start="129:59" pos:end="129:59">+</operator><name pos:start="129:60" pos:end="129:60">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="131:21" pos:end="131:81"><expr pos:start="131:21" pos:end="131:80"><name pos:start="131:21" pos:end="131:32"><name pos:start="131:21" pos:end="131:24">maxq</name><index pos:start="131:25" pos:end="131:32">[<expr pos:start="131:26" pos:end="131:31"><name pos:start="131:26" pos:end="131:26">w</name><operator pos:start="131:27" pos:end="131:27">*</operator><literal type="number" pos:start="131:28" pos:end="131:29">16</literal><operator pos:start="131:30" pos:end="131:30">+</operator><name pos:start="131:31" pos:end="131:31">g</name></expr>]</index></name> <operator pos:start="131:34" pos:end="131:34">=</operator> <call pos:start="131:36" pos:end="131:80"><name pos:start="131:36" pos:end="131:40">FFMAX</name><argument_list pos:start="131:41" pos:end="131:80">(<argument pos:start="131:42" pos:end="131:53"><expr pos:start="131:42" pos:end="131:53"><name pos:start="131:42" pos:end="131:53"><name pos:start="131:42" pos:end="131:45">maxq</name><index pos:start="131:46" pos:end="131:53">[<expr pos:start="131:47" pos:end="131:52"><name pos:start="131:47" pos:end="131:47">w</name><operator pos:start="131:48" pos:end="131:48">*</operator><literal type="number" pos:start="131:49" pos:end="131:51">16</literal><operator pos:start="131:51" pos:end="131:51">+</operator><name pos:start="131:52" pos:end="131:52">g</name></expr>]</index></name></expr></argument>, <argument pos:start="131:56" pos:end="131:79"><expr pos:start="131:56" pos:end="131:79"><call pos:start="131:56" pos:end="131:79"><name pos:start="131:56" pos:end="131:60">fabsf</name><argument_list pos:start="131:61" pos:end="131:79">(<argument pos:start="131:62" pos:end="131:78"><expr pos:start="131:62" pos:end="131:78"><name pos:start="131:62" pos:end="131:78"><name pos:start="131:62" pos:end="131:66">coefs</name><index pos:start="131:67" pos:end="131:78">[<expr pos:start="131:68" pos:end="131:77"><name pos:start="131:68" pos:end="131:69">w2</name><operator pos:start="131:70" pos:end="131:70">*</operator><literal type="number" pos:start="131:71" pos:end="131:75">128</literal> <operator pos:start="131:75" pos:end="131:75">+</operator> <name pos:start="131:77" pos:end="131:77">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:29"><expr pos:start="133:21" pos:end="133:28"><name pos:start="133:21" pos:end="133:23">thr</name> <operator pos:start="133:25" pos:end="133:26">+=</operator> <name pos:start="133:28" pos:end="133:28">t</name></expr>;</expr_stmt>

                    <if_stmt pos:start="135:21" pos:end="141:21"><if pos:start="135:21" pos:end="141:21">if <condition pos:start="135:24" pos:end="135:64">(<expr pos:start="135:25" pos:end="135:63"><name pos:start="135:25" pos:end="135:44"><name pos:start="135:25" pos:end="135:27">sce</name><operator pos:start="135:28" pos:end="135:29">-&gt;</operator><name pos:start="135:30" pos:end="135:32">ics</name><operator pos:start="135:33" pos:end="135:33">.</operator><name pos:start="135:34" pos:end="135:44">num_windows</name></name> <operator pos:start="135:46" pos:end="135:47">==</operator> <literal type="number" pos:start="135:49" pos:end="135:49">1</literal> <operator pos:start="135:51" pos:end="135:52">&amp;&amp;</operator> <name pos:start="135:54" pos:end="135:59">maxval</name> <operator pos:start="135:61" pos:end="135:61">&lt;</operator> <name pos:start="135:63" pos:end="135:63">t</name></expr>)</condition> <block pos:start="135:66" pos:end="141:21">{<block_content pos:start="137:25" pos:end="139:42">

                        <expr_stmt pos:start="137:25" pos:end="137:36"><expr pos:start="137:25" pos:end="137:35"><name pos:start="137:25" pos:end="137:30">maxval</name>  <operator pos:start="137:33" pos:end="137:33">=</operator> <name pos:start="137:35" pos:end="137:35">t</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="139:25" pos:end="139:42"><expr pos:start="139:25" pos:end="139:41"><name pos:start="139:25" pos:end="139:31">peakpos</name> <operator pos:start="139:33" pos:end="139:33">=</operator> <name pos:start="139:35" pos:end="139:39">start</name><operator pos:start="139:40" pos:end="139:40">+</operator><name pos:start="139:41" pos:end="139:41">i</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <if_stmt pos:start="147:13" pos:end="159:13"><if pos:start="147:13" pos:end="153:13">if <condition pos:start="147:16" pos:end="147:42">(<expr pos:start="147:17" pos:end="147:41"><name pos:start="147:17" pos:end="147:36"><name pos:start="147:17" pos:end="147:19">sce</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:24">ics</name><operator pos:start="147:25" pos:end="147:25">.</operator><name pos:start="147:26" pos:end="147:36">num_windows</name></name> <operator pos:start="147:38" pos:end="147:39">==</operator> <literal type="number" pos:start="147:41" pos:end="147:41">1</literal></expr>)</condition> <block pos:start="147:44" pos:end="153:13">{<block_content pos:start="149:17" pos:end="151:50">

                <expr_stmt pos:start="149:17" pos:end="149:52"><expr pos:start="149:17" pos:end="149:51"><name pos:start="149:17" pos:end="149:22">start2</name> <operator pos:start="149:24" pos:end="149:24">=</operator> <call pos:start="149:26" pos:end="149:51"><name pos:start="149:26" pos:end="149:30">FFMAX</name><argument_list pos:start="149:31" pos:end="149:51">(<argument pos:start="149:32" pos:end="149:42"><expr pos:start="149:32" pos:end="149:42"><name pos:start="149:32" pos:end="149:38">peakpos</name> <operator pos:start="149:40" pos:end="149:40">-</operator> <literal type="number" pos:start="149:42" pos:end="149:42">2</literal></expr></argument>, <argument pos:start="149:45" pos:end="149:50"><expr pos:start="149:45" pos:end="149:50"><name pos:start="149:45" pos:end="149:50">start2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:50"><expr pos:start="151:17" pos:end="151:49"><name pos:start="151:17" pos:end="151:20">end2</name>   <operator pos:start="151:24" pos:end="151:24">=</operator> <call pos:start="151:26" pos:end="151:49"><name pos:start="151:26" pos:end="151:30">FFMIN</name><argument_list pos:start="151:31" pos:end="151:49">(<argument pos:start="151:32" pos:end="151:42"><expr pos:start="151:32" pos:end="151:42"><name pos:start="151:32" pos:end="151:38">peakpos</name> <operator pos:start="151:40" pos:end="151:40">+</operator> <literal type="number" pos:start="151:42" pos:end="151:42">3</literal></expr></argument>, <argument pos:start="151:45" pos:end="151:48"><expr pos:start="151:45" pos:end="151:48"><name pos:start="151:45" pos:end="151:48">end2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="153:15" pos:end="159:13">else <block pos:start="153:20" pos:end="159:13">{<block_content pos:start="155:17" pos:end="157:32">

                <expr_stmt pos:start="155:17" pos:end="155:32"><expr pos:start="155:17" pos:end="155:31"><name pos:start="155:17" pos:end="155:22">start2</name> <operator pos:start="155:24" pos:end="155:25">-=</operator> <name pos:start="155:27" pos:end="155:31">start</name></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:32"><expr pos:start="157:17" pos:end="157:31"><name pos:start="157:17" pos:end="157:20">end2</name>   <operator pos:start="157:24" pos:end="157:25">-=</operator> <name pos:start="157:27" pos:end="157:31">start</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:26"><expr pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:17">start</name> <operator pos:start="161:19" pos:end="161:20">+=</operator> <name pos:start="161:22" pos:end="161:25">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:97"><expr pos:start="163:13" pos:end="163:96"><name pos:start="163:13" pos:end="163:15">thr</name> <operator pos:start="163:17" pos:end="163:17">=</operator> <call pos:start="163:19" pos:end="163:96"><name pos:start="163:19" pos:end="163:21">pow</name><argument_list pos:start="163:22" pos:end="163:96">(<argument pos:start="163:23" pos:end="163:58"><expr pos:start="163:23" pos:end="163:58"><name pos:start="163:23" pos:end="163:25">thr</name> <operator pos:start="163:27" pos:end="163:27">/</operator> <operator pos:start="163:29" pos:end="163:29">(</operator><name pos:start="163:30" pos:end="163:39">avg_energy</name> <operator pos:start="163:41" pos:end="163:41">*</operator> <operator pos:start="163:43" pos:end="163:43">(</operator><name pos:start="163:44" pos:end="163:47">end2</name> <operator pos:start="163:49" pos:end="163:49">-</operator> <name pos:start="163:51" pos:end="163:56">start2</name><operator pos:start="163:57" pos:end="163:57">)</operator><operator pos:start="163:58" pos:end="163:58">)</operator></expr></argument>, <argument pos:start="163:61" pos:end="163:95"><expr pos:start="163:61" pos:end="163:95"><literal type="number" pos:start="163:61" pos:end="163:65">0.3</literal> <operator pos:start="163:65" pos:end="163:65">+</operator> <literal type="number" pos:start="163:67" pos:end="163:69">0.1</literal><operator pos:start="163:70" pos:end="163:70">*</operator><operator pos:start="163:71" pos:end="163:71">(</operator><name pos:start="163:72" pos:end="163:79">lastband</name> <operator pos:start="163:81" pos:end="163:81">-</operator> <name pos:start="163:83" pos:end="163:83">g</name><operator pos:start="163:84" pos:end="163:84">)</operator> <operator pos:start="163:86" pos:end="163:86">/</operator> <name pos:start="163:88" pos:end="163:95">lastband</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:46"><expr pos:start="165:13" pos:end="165:45"><name pos:start="165:13" pos:end="165:13">t</name>   <operator pos:start="165:17" pos:end="165:17">=</operator> <literal type="number" pos:start="165:19" pos:end="165:23">1.0</literal> <operator pos:start="165:23" pos:end="165:23">-</operator> <operator pos:start="165:25" pos:end="165:25">(</operator><literal type="number" pos:start="165:26" pos:end="165:28">1.0</literal> <operator pos:start="165:30" pos:end="165:30">*</operator> <name pos:start="165:32" pos:end="165:37">start2</name> <operator pos:start="165:39" pos:end="165:39">/</operator> <name pos:start="165:41" pos:end="165:44">last</name><operator pos:start="165:45" pos:end="165:45">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:67"><expr pos:start="167:13" pos:end="167:66"><name pos:start="167:13" pos:end="167:25"><name pos:start="167:13" pos:end="167:17">uplim</name><index pos:start="167:18" pos:end="167:25">[<expr pos:start="167:19" pos:end="167:24"><name pos:start="167:19" pos:end="167:19">w</name><operator pos:start="167:20" pos:end="167:20">*</operator><literal type="number" pos:start="167:21" pos:end="167:22">16</literal><operator pos:start="167:23" pos:end="167:23">+</operator><name pos:start="167:24" pos:end="167:24">g</name></expr>]</index></name> <operator pos:start="167:27" pos:end="167:27">=</operator> <name pos:start="167:29" pos:end="167:36">distfact</name> <operator pos:start="167:38" pos:end="167:38">/</operator> <operator pos:start="167:40" pos:end="167:40">(</operator><literal type="number" pos:start="167:41" pos:end="167:43">1.4</literal> <operator pos:start="167:45" pos:end="167:45">*</operator> <name pos:start="167:47" pos:end="167:49">thr</name> <operator pos:start="167:51" pos:end="167:51">+</operator> <name pos:start="167:53" pos:end="167:53">t</name><operator pos:start="167:54" pos:end="167:54">*</operator><name pos:start="167:55" pos:end="167:55">t</name><operator pos:start="167:56" pos:end="167:56">*</operator><name pos:start="167:57" pos:end="167:57">t</name> <operator pos:start="167:59" pos:end="167:59">+</operator> <literal type="number" pos:start="167:61" pos:end="167:65">0.075</literal><operator pos:start="167:66" pos:end="167:66">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="173:5" pos:end="173:48"><expr pos:start="173:5" pos:end="173:47"><call pos:start="173:5" pos:end="173:47"><name pos:start="173:5" pos:end="173:10">memset</name><argument_list pos:start="173:11" pos:end="173:47">(<argument pos:start="173:12" pos:end="173:22"><expr pos:start="173:12" pos:end="173:22"><name pos:start="173:12" pos:end="173:22"><name pos:start="173:12" pos:end="173:14">sce</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:22">sf_idx</name></name></expr></argument>, <argument pos:start="173:25" pos:end="173:25"><expr pos:start="173:25" pos:end="173:25"><literal type="number" pos:start="173:25" pos:end="173:25">0</literal></expr></argument>, <argument pos:start="173:28" pos:end="173:46"><expr pos:start="173:28" pos:end="173:46"><sizeof pos:start="173:28" pos:end="173:46">sizeof<argument_list pos:start="173:34" pos:end="173:46">(<argument pos:start="173:35" pos:end="173:45"><expr pos:start="173:35" pos:end="173:45"><name pos:start="173:35" pos:end="173:45"><name pos:start="173:35" pos:end="173:37">sce</name><operator pos:start="173:38" pos:end="173:39">-&gt;</operator><name pos:start="173:40" pos:end="173:45">sf_idx</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:46"><expr pos:start="175:5" pos:end="175:45"><call pos:start="175:5" pos:end="175:45"><name pos:start="175:5" pos:end="175:15">abs_pow34_v</name><argument_list pos:start="175:16" pos:end="175:45">(<argument pos:start="175:17" pos:end="175:25"><expr pos:start="175:17" pos:end="175:25"><name pos:start="175:17" pos:end="175:25"><name pos:start="175:17" pos:end="175:17">s</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:25">scoefs</name></name></expr></argument>, <argument pos:start="175:28" pos:end="175:38"><expr pos:start="175:28" pos:end="175:38"><name pos:start="175:28" pos:end="175:38"><name pos:start="175:28" pos:end="175:30">sce</name><operator pos:start="175:31" pos:end="175:32">-&gt;</operator><name pos:start="175:33" pos:end="175:38">coeffs</name></name></expr></argument>, <argument pos:start="175:41" pos:end="175:44"><expr pos:start="175:41" pos:end="175:44"><literal type="number" pos:start="175:41" pos:end="175:44">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="177:5" pos:end="299:5">for <control pos:start="177:9" pos:end="177:69">(<init pos:start="177:10" pos:end="177:15"><expr pos:start="177:10" pos:end="177:14"><name pos:start="177:10" pos:end="177:10">w</name> <operator pos:start="177:12" pos:end="177:12">=</operator> <literal type="number" pos:start="177:14" pos:end="177:14">0</literal></expr>;</init> <condition pos:start="177:17" pos:end="177:41"><expr pos:start="177:17" pos:end="177:40"><name pos:start="177:17" pos:end="177:17">w</name> <operator pos:start="177:19" pos:end="177:19">&lt;</operator> <name pos:start="177:21" pos:end="177:40"><name pos:start="177:21" pos:end="177:23">sce</name><operator pos:start="177:24" pos:end="177:25">-&gt;</operator><name pos:start="177:26" pos:end="177:28">ics</name><operator pos:start="177:29" pos:end="177:29">.</operator><name pos:start="177:30" pos:end="177:40">num_windows</name></name></expr>;</condition> <incr pos:start="177:43" pos:end="177:68"><expr pos:start="177:43" pos:end="177:68"><name pos:start="177:43" pos:end="177:43">w</name> <operator pos:start="177:45" pos:end="177:46">+=</operator> <name pos:start="177:48" pos:end="177:68"><name pos:start="177:48" pos:end="177:50">sce</name><operator pos:start="177:51" pos:end="177:52">-&gt;</operator><name pos:start="177:53" pos:end="177:55">ics</name><operator pos:start="177:56" pos:end="177:56">.</operator><name pos:start="177:57" pos:end="177:65">group_len</name><index pos:start="177:66" pos:end="177:68">[<expr pos:start="177:67" pos:end="177:67"><name pos:start="177:67" pos:end="177:67">w</name></expr>]</index></name></expr></incr>)</control> <block pos:start="177:71" pos:end="299:5">{<block_content pos:start="179:9" pos:end="297:9">

        <expr_stmt pos:start="179:9" pos:end="179:22"><expr pos:start="179:9" pos:end="179:21"><name pos:start="179:9" pos:end="179:13">start</name> <operator pos:start="179:15" pos:end="179:15">=</operator> <name pos:start="179:17" pos:end="179:17">w</name><operator pos:start="179:18" pos:end="179:18">*</operator><literal type="number" pos:start="179:19" pos:end="179:21">128</literal></expr>;</expr_stmt>

        <for pos:start="181:9" pos:end="297:9">for <control pos:start="181:13" pos:end="181:47">(<init pos:start="181:14" pos:end="181:19"><expr pos:start="181:14" pos:end="181:18"><name pos:start="181:14" pos:end="181:14">g</name> <operator pos:start="181:16" pos:end="181:16">=</operator> <literal type="number" pos:start="181:18" pos:end="181:18">0</literal></expr>;</init>  <condition pos:start="181:22" pos:end="181:42"><expr pos:start="181:22" pos:end="181:41"><name pos:start="181:22" pos:end="181:22">g</name> <operator pos:start="181:24" pos:end="181:24">&lt;</operator> <name pos:start="181:26" pos:end="181:41"><name pos:start="181:26" pos:end="181:28">sce</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:33">ics</name><operator pos:start="181:34" pos:end="181:34">.</operator><name pos:start="181:35" pos:end="181:41">num_swb</name></name></expr>;</condition> <incr pos:start="181:44" pos:end="181:46"><expr pos:start="181:44" pos:end="181:46"><name pos:start="181:44" pos:end="181:44">g</name><operator pos:start="181:45" pos:end="181:46">++</operator></expr></incr>)</control> <block pos:start="181:49" pos:end="297:9">{<block_content pos:start="183:13" pos:end="295:26">

            <decl_stmt pos:start="183:13" pos:end="183:54"><decl pos:start="183:13" pos:end="183:53"><type pos:start="183:13" pos:end="183:25"><specifier pos:start="183:13" pos:end="183:17">const</specifier> <name pos:start="183:19" pos:end="183:23">float</name> <modifier pos:start="183:25" pos:end="183:25">*</modifier></type><name pos:start="183:26" pos:end="183:30">coefs</name>  <init pos:start="183:33" pos:end="183:53">= <expr pos:start="183:35" pos:end="183:53"><name pos:start="183:35" pos:end="183:45"><name pos:start="183:35" pos:end="183:37">sce</name><operator pos:start="183:38" pos:end="183:39">-&gt;</operator><name pos:start="183:40" pos:end="183:45">coeffs</name></name> <operator pos:start="183:47" pos:end="183:47">+</operator> <name pos:start="183:49" pos:end="183:53">start</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="185:13" pos:end="185:54"><decl pos:start="185:13" pos:end="185:53"><type pos:start="185:13" pos:end="185:25"><specifier pos:start="185:13" pos:end="185:17">const</specifier> <name pos:start="185:19" pos:end="185:23">float</name> <modifier pos:start="185:25" pos:end="185:25">*</modifier></type><name pos:start="185:26" pos:end="185:31">scaled</name> <init pos:start="185:33" pos:end="185:53">= <expr pos:start="185:35" pos:end="185:53"><name pos:start="185:35" pos:end="185:43"><name pos:start="185:35" pos:end="185:35">s</name><operator pos:start="185:36" pos:end="185:37">-&gt;</operator><name pos:start="185:38" pos:end="185:43">scoefs</name></name>   <operator pos:start="185:47" pos:end="185:47">+</operator> <name pos:start="185:49" pos:end="185:53">start</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="187:13" pos:end="187:56"><decl pos:start="187:13" pos:end="187:55"><type pos:start="187:13" pos:end="187:21"><specifier pos:start="187:13" pos:end="187:17">const</specifier> <name pos:start="187:19" pos:end="187:21">int</name></type> <name pos:start="187:23" pos:end="187:26">size</name>      <init pos:start="187:33" pos:end="187:55">= <expr pos:start="187:35" pos:end="187:55"><name pos:start="187:35" pos:end="187:55"><name pos:start="187:35" pos:end="187:37">sce</name><operator pos:start="187:38" pos:end="187:39">-&gt;</operator><name pos:start="187:40" pos:end="187:42">ics</name><operator pos:start="187:43" pos:end="187:43">.</operator><name pos:start="187:44" pos:end="187:52">swb_sizes</name><index pos:start="187:53" pos:end="187:55">[<expr pos:start="187:54" pos:end="187:54"><name pos:start="187:54" pos:end="187:54">g</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="189:13" pos:end="189:36"><decl pos:start="189:13" pos:end="189:19"><type pos:start="189:13" pos:end="189:15"><name pos:start="189:13" pos:end="189:15">int</name></type> <name pos:start="189:17" pos:end="189:19">scf</name></decl>, <decl pos:start="189:22" pos:end="189:29"><type ref="prev" pos:start="189:13" pos:end="189:15"/><name pos:start="189:22" pos:end="189:29">prev_scf</name></decl>, <decl pos:start="189:32" pos:end="189:35"><type ref="prev" pos:start="189:13" pos:end="189:15"/><name pos:start="189:32" pos:end="189:35">step</name></decl>;</decl_stmt>

            <decl_stmt pos:start="191:13" pos:end="191:44"><decl pos:start="191:13" pos:end="191:28"><type pos:start="191:13" pos:end="191:15"><name pos:start="191:13" pos:end="191:15">int</name></type> <name pos:start="191:17" pos:end="191:23">min_scf</name> <init pos:start="191:25" pos:end="191:28">= <expr pos:start="191:27" pos:end="191:28"><operator pos:start="191:27" pos:end="191:27">-</operator><literal type="number" pos:start="191:28" pos:end="191:28">1</literal></expr></init></decl>, <decl pos:start="191:31" pos:end="191:43"><type ref="prev" pos:start="191:13" pos:end="191:15"/><name pos:start="191:31" pos:end="191:37">max_scf</name> <init pos:start="191:39" pos:end="191:43">= <expr pos:start="191:41" pos:end="191:43"><literal type="number" pos:start="191:41" pos:end="191:43">256</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="193:13" pos:end="193:26"><decl pos:start="193:13" pos:end="193:25"><type pos:start="193:13" pos:end="193:17"><name pos:start="193:13" pos:end="193:17">float</name></type> <name pos:start="193:19" pos:end="193:25">curdiff</name></decl>;</decl_stmt>

            <if_stmt pos:start="195:13" pos:end="203:13"><if pos:start="195:13" pos:end="203:13">if <condition pos:start="195:16" pos:end="195:38">(<expr pos:start="195:17" pos:end="195:37"><name pos:start="195:17" pos:end="195:28"><name pos:start="195:17" pos:end="195:20">maxq</name><index pos:start="195:21" pos:end="195:28">[<expr pos:start="195:22" pos:end="195:27"><name pos:start="195:22" pos:end="195:22">w</name><operator pos:start="195:23" pos:end="195:23">*</operator><literal type="number" pos:start="195:24" pos:end="195:25">16</literal><operator pos:start="195:26" pos:end="195:26">+</operator><name pos:start="195:27" pos:end="195:27">g</name></expr>]</index></name> <operator pos:start="195:30" pos:end="195:30">&lt;</operator> <literal type="number" pos:start="195:32" pos:end="195:37">21.544</literal></expr>)</condition> <block pos:start="195:40" pos:end="203:13">{<block_content pos:start="197:17" pos:end="201:25">

                <expr_stmt pos:start="197:17" pos:end="197:40"><expr pos:start="197:17" pos:end="197:39"><name pos:start="197:17" pos:end="197:35"><name pos:start="197:17" pos:end="197:19">sce</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:27">zeroes</name><index pos:start="197:28" pos:end="197:35">[<expr pos:start="197:29" pos:end="197:34"><name pos:start="197:29" pos:end="197:29">w</name><operator pos:start="197:30" pos:end="197:30">*</operator><literal type="number" pos:start="197:31" pos:end="197:32">16</literal><operator pos:start="197:33" pos:end="197:33">+</operator><name pos:start="197:34" pos:end="197:34">g</name></expr>]</index></name> <operator pos:start="197:37" pos:end="197:37">=</operator> <literal type="number" pos:start="197:39" pos:end="197:39">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:30"><expr pos:start="199:17" pos:end="199:29"><name pos:start="199:17" pos:end="199:21">start</name> <operator pos:start="199:23" pos:end="199:24">+=</operator> <name pos:start="199:26" pos:end="199:29">size</name></expr>;</expr_stmt>

                <continue pos:start="201:17" pos:end="201:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:36"><expr pos:start="205:13" pos:end="205:35"><name pos:start="205:13" pos:end="205:31"><name pos:start="205:13" pos:end="205:15">sce</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:23">zeroes</name><index pos:start="205:24" pos:end="205:31">[<expr pos:start="205:25" pos:end="205:30"><name pos:start="205:25" pos:end="205:25">w</name><operator pos:start="205:26" pos:end="205:26">*</operator><literal type="number" pos:start="205:27" pos:end="205:28">16</literal><operator pos:start="205:29" pos:end="205:29">+</operator><name pos:start="205:30" pos:end="205:30">g</name></expr>]</index></name> <operator pos:start="205:33" pos:end="205:33">=</operator> <literal type="number" pos:start="205:35" pos:end="205:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:107"><expr pos:start="207:13" pos:end="207:106"><name pos:start="207:13" pos:end="207:15">scf</name>  <operator pos:start="207:18" pos:end="207:18">=</operator> <name pos:start="207:20" pos:end="207:27">prev_scf</name> <operator pos:start="207:29" pos:end="207:29">=</operator> <call pos:start="207:31" pos:end="207:106"><name pos:start="207:31" pos:end="207:37">av_clip</name><argument_list pos:start="207:38" pos:end="207:106">(<argument pos:start="207:39" pos:end="207:96"><expr pos:start="207:39" pos:end="207:96"><name pos:start="207:39" pos:end="207:51">SCALE_ONE_POS</name> <operator pos:start="207:53" pos:end="207:53">-</operator> <name pos:start="207:55" pos:end="207:67">SCALE_DIV_512</name> <operator pos:start="207:69" pos:end="207:69">-</operator> <call pos:start="207:71" pos:end="207:91"><name pos:start="207:71" pos:end="207:75">log2f</name><argument_list pos:start="207:76" pos:end="207:91">(<argument pos:start="207:77" pos:end="207:90"><expr pos:start="207:77" pos:end="207:90"><literal type="number" pos:start="207:77" pos:end="207:77">1</literal><operator pos:start="207:78" pos:end="207:78">/</operator><name pos:start="207:79" pos:end="207:90"><name pos:start="207:79" pos:end="207:82">maxq</name><index pos:start="207:83" pos:end="207:90">[<expr pos:start="207:84" pos:end="207:89"><name pos:start="207:84" pos:end="207:84">w</name><operator pos:start="207:85" pos:end="207:85">*</operator><literal type="number" pos:start="207:86" pos:end="207:88">16</literal><operator pos:start="207:88" pos:end="207:88">+</operator><name pos:start="207:89" pos:end="207:89">g</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="207:92" pos:end="207:92">*</operator><literal type="number" pos:start="207:93" pos:end="207:94">16</literal><operator pos:start="207:95" pos:end="207:95">/</operator><literal type="number" pos:start="207:96" pos:end="207:96">3</literal></expr></argument>, <argument pos:start="207:99" pos:end="207:100"><expr pos:start="207:99" pos:end="207:100"><literal type="number" pos:start="207:99" pos:end="207:100">60</literal></expr></argument>, <argument pos:start="207:103" pos:end="207:105"><expr pos:start="207:103" pos:end="207:105"><literal type="number" pos:start="207:103" pos:end="207:105">218</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="209:13" pos:end="293:13">for <control pos:start="209:17" pos:end="209:20">(<init pos:start="209:18" pos:end="209:18">;</init><condition pos:start="209:19" pos:end="209:19">;</condition><incr/>)</control> <block pos:start="209:22" pos:end="293:13">{<block_content pos:start="211:17" pos:end="291:39">

                <decl_stmt pos:start="211:17" pos:end="211:34"><decl pos:start="211:17" pos:end="211:33"><type pos:start="211:17" pos:end="211:21"><name pos:start="211:17" pos:end="211:21">float</name></type> <name pos:start="211:23" pos:end="211:26">dist</name> <init pos:start="211:28" pos:end="211:33">= <expr pos:start="211:30" pos:end="211:33"><literal type="number" pos:start="211:30" pos:end="211:33">0.0f</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="213:17" pos:end="213:30"><decl pos:start="213:17" pos:end="213:29"><type pos:start="213:17" pos:end="213:19"><name pos:start="213:17" pos:end="213:19">int</name></type> <name pos:start="213:21" pos:end="213:29">quant_max</name></decl>;</decl_stmt>



                <for pos:start="217:17" pos:end="241:17">for <control pos:start="217:21" pos:end="217:62">(<init pos:start="217:22" pos:end="217:28"><expr pos:start="217:22" pos:end="217:27"><name pos:start="217:22" pos:end="217:23">w2</name> <operator pos:start="217:25" pos:end="217:25">=</operator> <literal type="number" pos:start="217:27" pos:end="217:27">0</literal></expr>;</init> <condition pos:start="217:30" pos:end="217:56"><expr pos:start="217:30" pos:end="217:55"><name pos:start="217:30" pos:end="217:31">w2</name> <operator pos:start="217:33" pos:end="217:33">&lt;</operator> <name pos:start="217:35" pos:end="217:55"><name pos:start="217:35" pos:end="217:37">sce</name><operator pos:start="217:38" pos:end="217:39">-&gt;</operator><name pos:start="217:40" pos:end="217:42">ics</name><operator pos:start="217:43" pos:end="217:43">.</operator><name pos:start="217:44" pos:end="217:52">group_len</name><index pos:start="217:53" pos:end="217:55">[<expr pos:start="217:54" pos:end="217:54"><name pos:start="217:54" pos:end="217:54">w</name></expr>]</index></name></expr>;</condition> <incr pos:start="217:58" pos:end="217:61"><expr pos:start="217:58" pos:end="217:61"><name pos:start="217:58" pos:end="217:59">w2</name><operator pos:start="217:60" pos:end="217:61">++</operator></expr></incr>)</control> <block pos:start="217:64" pos:end="241:17">{<block_content pos:start="219:21" pos:end="239:30">

                    <decl_stmt pos:start="219:21" pos:end="219:26"><decl pos:start="219:21" pos:end="219:25"><type pos:start="219:21" pos:end="219:23"><name pos:start="219:21" pos:end="219:23">int</name></type> <name pos:start="219:25" pos:end="219:25">b</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="221:21" pos:end="237:50"><expr pos:start="221:21" pos:end="237:49"><name pos:start="221:21" pos:end="221:24">dist</name> <operator pos:start="221:26" pos:end="221:27">+=</operator> <call pos:start="221:29" pos:end="237:49"><name pos:start="221:29" pos:end="221:46">quantize_band_cost</name><argument_list pos:start="221:47" pos:end="237:49">(<argument pos:start="221:48" pos:end="221:48"><expr pos:start="221:48" pos:end="221:48"><name pos:start="221:48" pos:end="221:48">s</name></expr></argument>, <argument pos:start="221:51" pos:end="221:64"><expr pos:start="221:51" pos:end="221:64"><name pos:start="221:51" pos:end="221:55">coefs</name> <operator pos:start="221:57" pos:end="221:57">+</operator> <name pos:start="221:59" pos:end="221:60">w2</name><operator pos:start="221:61" pos:end="221:61">*</operator><literal type="number" pos:start="221:62" pos:end="221:64">128</literal></expr></argument>,

                                               <argument pos:start="223:48" pos:end="223:62"><expr pos:start="223:48" pos:end="223:62"><name pos:start="223:48" pos:end="223:53">scaled</name> <operator pos:start="223:55" pos:end="223:55">+</operator> <name pos:start="223:57" pos:end="223:58">w2</name><operator pos:start="223:59" pos:end="223:59">*</operator><literal type="number" pos:start="223:60" pos:end="223:62">128</literal></expr></argument>,

                                               <argument pos:start="225:48" pos:end="225:68"><expr pos:start="225:48" pos:end="225:68"><name pos:start="225:48" pos:end="225:68"><name pos:start="225:48" pos:end="225:50">sce</name><operator pos:start="225:51" pos:end="225:52">-&gt;</operator><name pos:start="225:53" pos:end="225:55">ics</name><operator pos:start="225:56" pos:end="225:56">.</operator><name pos:start="225:57" pos:end="225:65">swb_sizes</name><index pos:start="225:66" pos:end="225:68">[<expr pos:start="225:67" pos:end="225:67"><name pos:start="225:67" pos:end="225:67">g</name></expr>]</index></name></expr></argument>,

                                               <argument pos:start="227:48" pos:end="227:50"><expr pos:start="227:48" pos:end="227:50"><name pos:start="227:48" pos:end="227:50">scf</name></expr></argument>,

                                               <argument pos:start="229:48" pos:end="229:53"><expr pos:start="229:48" pos:end="229:53"><name pos:start="229:48" pos:end="229:53">ESC_BT</name></expr></argument>,

                                               <argument pos:start="231:48" pos:end="231:53"><expr pos:start="231:48" pos:end="231:53"><name pos:start="231:48" pos:end="231:53">lambda</name></expr></argument>,

                                               <argument pos:start="233:48" pos:end="233:55"><expr pos:start="233:48" pos:end="233:55"><name pos:start="233:48" pos:end="233:55">INFINITY</name></expr></argument>,

                                               <argument pos:start="235:48" pos:end="235:49"><expr pos:start="235:48" pos:end="235:49"><operator pos:start="235:48" pos:end="235:48">&amp;</operator><name pos:start="235:49" pos:end="235:49">b</name></expr></argument>,

                                               <argument pos:start="237:48" pos:end="237:48"><expr pos:start="237:48" pos:end="237:48"><literal type="number" pos:start="237:48" pos:end="237:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="239:21" pos:end="239:30"><expr pos:start="239:21" pos:end="239:29"><name pos:start="239:21" pos:end="239:24">dist</name> <operator pos:start="239:26" pos:end="239:27">-=</operator> <name pos:start="239:29" pos:end="239:29">b</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="243:17" pos:end="243:47"><expr pos:start="243:17" pos:end="243:46"><name pos:start="243:17" pos:end="243:20">dist</name> <operator pos:start="243:22" pos:end="243:23">*=</operator> <literal type="number" pos:start="243:25" pos:end="243:28">1.0f</literal> <operator pos:start="243:30" pos:end="243:30">/</operator> <literal type="number" pos:start="243:32" pos:end="243:37">512.0f</literal> <operator pos:start="243:39" pos:end="243:39">/</operator> <name pos:start="243:41" pos:end="243:46">lambda</name></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:135"><expr pos:start="245:17" pos:end="245:134"><name pos:start="245:17" pos:end="245:25">quant_max</name> <operator pos:start="245:27" pos:end="245:27">=</operator> <call pos:start="245:29" pos:end="245:134"><name pos:start="245:29" pos:end="245:33">quant</name><argument_list pos:start="245:34" pos:end="245:134">(<argument pos:start="245:35" pos:end="245:46"><expr pos:start="245:35" pos:end="245:46"><name pos:start="245:35" pos:end="245:46"><name pos:start="245:35" pos:end="245:38">maxq</name><index pos:start="245:39" pos:end="245:46">[<expr pos:start="245:40" pos:end="245:45"><name pos:start="245:40" pos:end="245:40">w</name><operator pos:start="245:41" pos:end="245:41">*</operator><literal type="number" pos:start="245:42" pos:end="245:44">16</literal><operator pos:start="245:44" pos:end="245:44">+</operator><name pos:start="245:45" pos:end="245:45">g</name></expr>]</index></name></expr></argument>, <argument pos:start="245:49" pos:end="245:117"><expr pos:start="245:49" pos:end="245:117"><name pos:start="245:49" pos:end="245:117"><name pos:start="245:49" pos:end="245:65">ff_aac_pow2sf_tab</name><index pos:start="245:66" pos:end="245:117">[<expr pos:start="245:67" pos:end="245:116"><name pos:start="245:67" pos:end="245:78">POW_SF2_ZERO</name> <operator pos:start="245:80" pos:end="245:80">-</operator> <name pos:start="245:82" pos:end="245:84">scf</name> <operator pos:start="245:86" pos:end="245:86">+</operator> <name pos:start="245:88" pos:end="245:100">SCALE_ONE_POS</name> <operator pos:start="245:102" pos:end="245:102">-</operator> <name pos:start="245:104" pos:end="245:116">SCALE_DIV_512</name></expr>]</index></name></expr></argument>, <argument pos:start="245:120" pos:end="245:133"><expr pos:start="245:120" pos:end="245:133"><name pos:start="245:120" pos:end="245:133">ROUND_STANDARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="247:17" pos:end="253:17"><if pos:start="247:17" pos:end="253:17">if <condition pos:start="247:20" pos:end="247:38">(<expr pos:start="247:21" pos:end="247:37"><name pos:start="247:21" pos:end="247:29">quant_max</name> <operator pos:start="247:31" pos:end="247:32">&gt;=</operator> <literal type="number" pos:start="247:34" pos:end="247:37">8191</literal></expr>)</condition> <block pos:start="247:40" pos:end="253:17">{<block_content pos:start="249:21" pos:end="251:26"> <comment type="line" pos:start="247:42" pos:end="247:86">// too much, return to the previous quantizer</comment>

                    <expr_stmt pos:start="249:21" pos:end="249:51"><expr pos:start="249:21" pos:end="249:50"><name pos:start="249:21" pos:end="249:39"><name pos:start="249:21" pos:end="249:23">sce</name><operator pos:start="249:24" pos:end="249:25">-&gt;</operator><name pos:start="249:26" pos:end="249:31">sf_idx</name><index pos:start="249:32" pos:end="249:39">[<expr pos:start="249:33" pos:end="249:38"><name pos:start="249:33" pos:end="249:33">w</name><operator pos:start="249:34" pos:end="249:34">*</operator><literal type="number" pos:start="249:35" pos:end="249:36">16</literal><operator pos:start="249:37" pos:end="249:37">+</operator><name pos:start="249:38" pos:end="249:38">g</name></expr>]</index></name> <operator pos:start="249:41" pos:end="249:41">=</operator> <name pos:start="249:43" pos:end="249:50">prev_scf</name></expr>;</expr_stmt>

                    <break pos:start="251:21" pos:end="251:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:31"><expr pos:start="255:17" pos:end="255:30"><name pos:start="255:17" pos:end="255:24">prev_scf</name> <operator pos:start="255:26" pos:end="255:26">=</operator> <name pos:start="255:28" pos:end="255:30">scf</name></expr>;</expr_stmt>

                <expr_stmt pos:start="257:17" pos:end="257:54"><expr pos:start="257:17" pos:end="257:53"><name pos:start="257:17" pos:end="257:23">curdiff</name> <operator pos:start="257:25" pos:end="257:25">=</operator> <call pos:start="257:27" pos:end="257:53"><name pos:start="257:27" pos:end="257:31">fabsf</name><argument_list pos:start="257:32" pos:end="257:53">(<argument pos:start="257:33" pos:end="257:52"><expr pos:start="257:33" pos:end="257:52"><name pos:start="257:33" pos:end="257:36">dist</name> <operator pos:start="257:38" pos:end="257:38">-</operator> <name pos:start="257:40" pos:end="257:52"><name pos:start="257:40" pos:end="257:44">uplim</name><index pos:start="257:45" pos:end="257:52">[<expr pos:start="257:46" pos:end="257:51"><name pos:start="257:46" pos:end="257:46">w</name><operator pos:start="257:47" pos:end="257:47">*</operator><literal type="number" pos:start="257:48" pos:end="257:50">16</literal><operator pos:start="257:50" pos:end="257:50">+</operator><name pos:start="257:51" pos:end="257:51">g</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="259:17" pos:end="265:42"><if pos:start="259:17" pos:end="261:29">if <condition pos:start="259:20" pos:end="259:36">(<expr pos:start="259:21" pos:end="259:35"><name pos:start="259:21" pos:end="259:27">curdiff</name> <operator pos:start="259:29" pos:end="259:30">&lt;=</operator> <literal type="number" pos:start="259:32" pos:end="259:35">1.0f</literal></expr>)</condition><block type="pseudo" pos:start="261:21" pos:end="261:29"><block_content pos:start="261:21" pos:end="261:29">

                    <expr_stmt pos:start="261:21" pos:end="261:29"><expr pos:start="261:21" pos:end="261:28"><name pos:start="261:21" pos:end="261:24">step</name> <operator pos:start="261:26" pos:end="261:26">=</operator> <literal type="number" pos:start="261:28" pos:end="261:28">0</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="263:17" pos:end="265:42">else<block type="pseudo" pos:start="265:21" pos:end="265:42"><block_content pos:start="265:21" pos:end="265:42">

                    <expr_stmt pos:start="265:21" pos:end="265:42"><expr pos:start="265:21" pos:end="265:41"><name pos:start="265:21" pos:end="265:24">step</name> <operator pos:start="265:26" pos:end="265:26">=</operator> <call pos:start="265:28" pos:end="265:41"><name pos:start="265:28" pos:end="265:32">log2f</name><argument_list pos:start="265:33" pos:end="265:41">(<argument pos:start="265:34" pos:end="265:40"><expr pos:start="265:34" pos:end="265:40"><name pos:start="265:34" pos:end="265:40">curdiff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="267:17" pos:end="269:33"><if pos:start="267:17" pos:end="269:33">if <condition pos:start="267:20" pos:end="267:41">(<expr pos:start="267:21" pos:end="267:40"><name pos:start="267:21" pos:end="267:24">dist</name> <operator pos:start="267:26" pos:end="267:26">&gt;</operator> <name pos:start="267:28" pos:end="267:40"><name pos:start="267:28" pos:end="267:32">uplim</name><index pos:start="267:33" pos:end="267:40">[<expr pos:start="267:34" pos:end="267:39"><name pos:start="267:34" pos:end="267:34">w</name><operator pos:start="267:35" pos:end="267:35">*</operator><literal type="number" pos:start="267:36" pos:end="267:38">16</literal><operator pos:start="267:38" pos:end="267:38">+</operator><name pos:start="267:39" pos:end="267:39">g</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="269:21" pos:end="269:33"><block_content pos:start="269:21" pos:end="269:33">

                    <expr_stmt pos:start="269:21" pos:end="269:33"><expr pos:start="269:21" pos:end="269:32"><name pos:start="269:21" pos:end="269:24">step</name> <operator pos:start="269:26" pos:end="269:26">=</operator> <operator pos:start="269:28" pos:end="269:28">-</operator><name pos:start="269:29" pos:end="269:32">step</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:28"><expr pos:start="271:17" pos:end="271:27"><name pos:start="271:17" pos:end="271:19">scf</name> <operator pos:start="271:21" pos:end="271:22">+=</operator> <name pos:start="271:24" pos:end="271:27">step</name></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:41"><expr pos:start="273:17" pos:end="273:40"><name pos:start="273:17" pos:end="273:19">scf</name> <operator pos:start="273:21" pos:end="273:21">=</operator> <call pos:start="273:23" pos:end="273:40"><name pos:start="273:23" pos:end="273:35">av_clip_uint8</name><argument_list pos:start="273:36" pos:end="273:40">(<argument pos:start="273:37" pos:end="273:39"><expr pos:start="273:37" pos:end="273:39"><name pos:start="273:37" pos:end="273:39">scf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:38"><expr pos:start="275:17" pos:end="275:37"><name pos:start="275:17" pos:end="275:20">step</name> <operator pos:start="275:22" pos:end="275:22">=</operator> <name pos:start="275:24" pos:end="275:26">scf</name> <operator pos:start="275:28" pos:end="275:28">-</operator> <name pos:start="275:30" pos:end="275:37">prev_scf</name></expr>;</expr_stmt>

                <if_stmt pos:start="277:17" pos:end="283:17"><if pos:start="277:17" pos:end="283:17">if <condition pos:start="277:20" pos:end="277:101">(<expr pos:start="277:21" pos:end="277:100"><call pos:start="277:21" pos:end="277:31"><name pos:start="277:21" pos:end="277:25">FFABS</name><argument_list pos:start="277:26" pos:end="277:31">(<argument pos:start="277:27" pos:end="277:30"><expr pos:start="277:27" pos:end="277:30"><name pos:start="277:27" pos:end="277:30">step</name></expr></argument>)</argument_list></call> <operator pos:start="277:33" pos:end="277:34">&lt;=</operator> <literal type="number" pos:start="277:36" pos:end="277:36">1</literal> <operator pos:start="277:38" pos:end="277:39">||</operator> <operator pos:start="277:41" pos:end="277:41">(</operator><name pos:start="277:42" pos:end="277:45">step</name> <operator pos:start="277:47" pos:end="277:47">&gt;</operator> <literal type="number" pos:start="277:49" pos:end="277:49">0</literal> <operator pos:start="277:51" pos:end="277:52">&amp;&amp;</operator> <name pos:start="277:54" pos:end="277:56">scf</name> <operator pos:start="277:58" pos:end="277:59">&gt;=</operator> <name pos:start="277:61" pos:end="277:67">max_scf</name><operator pos:start="277:68" pos:end="277:68">)</operator> <operator pos:start="277:70" pos:end="277:71">||</operator> <operator pos:start="277:73" pos:end="277:73">(</operator><name pos:start="277:74" pos:end="277:77">step</name> <operator pos:start="277:79" pos:end="277:79">&lt;</operator> <literal type="number" pos:start="277:81" pos:end="277:81">0</literal> <operator pos:start="277:83" pos:end="277:84">&amp;&amp;</operator> <name pos:start="277:86" pos:end="277:88">scf</name> <operator pos:start="277:90" pos:end="277:91">&lt;=</operator> <name pos:start="277:93" pos:end="277:99">min_scf</name><operator pos:start="277:100" pos:end="277:100">)</operator></expr>)</condition> <block pos:start="277:103" pos:end="283:17">{<block_content pos:start="279:21" pos:end="281:26">

                    <expr_stmt pos:start="279:21" pos:end="279:73"><expr pos:start="279:21" pos:end="279:72"><name pos:start="279:21" pos:end="279:39"><name pos:start="279:21" pos:end="279:23">sce</name><operator pos:start="279:24" pos:end="279:25">-&gt;</operator><name pos:start="279:26" pos:end="279:31">sf_idx</name><index pos:start="279:32" pos:end="279:39">[<expr pos:start="279:33" pos:end="279:38"><name pos:start="279:33" pos:end="279:33">w</name><operator pos:start="279:34" pos:end="279:34">*</operator><literal type="number" pos:start="279:35" pos:end="279:36">16</literal><operator pos:start="279:37" pos:end="279:37">+</operator><name pos:start="279:38" pos:end="279:38">g</name></expr>]</index></name> <operator pos:start="279:41" pos:end="279:41">=</operator> <call pos:start="279:43" pos:end="279:72"><name pos:start="279:43" pos:end="279:49">av_clip</name><argument_list pos:start="279:50" pos:end="279:72">(<argument pos:start="279:51" pos:end="279:53"><expr pos:start="279:51" pos:end="279:53"><name pos:start="279:51" pos:end="279:53">scf</name></expr></argument>, <argument pos:start="279:56" pos:end="279:62"><expr pos:start="279:56" pos:end="279:62"><name pos:start="279:56" pos:end="279:62">min_scf</name></expr></argument>, <argument pos:start="279:65" pos:end="279:71"><expr pos:start="279:65" pos:end="279:71"><name pos:start="279:65" pos:end="279:71">max_scf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="281:21" pos:end="281:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="285:17" pos:end="291:39"><if pos:start="285:17" pos:end="287:39">if <condition pos:start="285:20" pos:end="285:29">(<expr pos:start="285:21" pos:end="285:28"><name pos:start="285:21" pos:end="285:24">step</name> <operator pos:start="285:26" pos:end="285:26">&gt;</operator> <literal type="number" pos:start="285:28" pos:end="285:28">0</literal></expr>)</condition><block type="pseudo" pos:start="287:21" pos:end="287:39"><block_content pos:start="287:21" pos:end="287:39">

                    <expr_stmt pos:start="287:21" pos:end="287:39"><expr pos:start="287:21" pos:end="287:38"><name pos:start="287:21" pos:end="287:27">min_scf</name> <operator pos:start="287:29" pos:end="287:29">=</operator> <name pos:start="287:31" pos:end="287:38">prev_scf</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="289:17" pos:end="291:39">else<block type="pseudo" pos:start="291:21" pos:end="291:39"><block_content pos:start="291:21" pos:end="291:39">

                    <expr_stmt pos:start="291:21" pos:end="291:39"><expr pos:start="291:21" pos:end="291:38"><name pos:start="291:21" pos:end="291:27">max_scf</name> <operator pos:start="291:29" pos:end="291:29">=</operator> <name pos:start="291:31" pos:end="291:38">prev_scf</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="295:13" pos:end="295:26"><expr pos:start="295:13" pos:end="295:25"><name pos:start="295:13" pos:end="295:17">start</name> <operator pos:start="295:19" pos:end="295:20">+=</operator> <name pos:start="295:22" pos:end="295:25">size</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="301:5" pos:end="301:53"><expr pos:start="301:5" pos:end="301:52"><name pos:start="301:5" pos:end="301:8">minq</name> <operator pos:start="301:10" pos:end="301:10">=</operator> <ternary pos:start="301:12" pos:end="301:52"><condition pos:start="301:12" pos:end="301:27"><expr pos:start="301:12" pos:end="301:25"><name pos:start="301:12" pos:end="301:25"><name pos:start="301:12" pos:end="301:14">sce</name><operator pos:start="301:15" pos:end="301:16">-&gt;</operator><name pos:start="301:17" pos:end="301:22">sf_idx</name><index pos:start="301:23" pos:end="301:25">[<expr pos:start="301:24" pos:end="301:24"><literal type="number" pos:start="301:24" pos:end="301:24">0</literal></expr>]</index></name></expr> ?</condition><then pos:start="301:29" pos:end="301:42"> <expr pos:start="301:29" pos:end="301:42"><name pos:start="301:29" pos:end="301:42"><name pos:start="301:29" pos:end="301:31">sce</name><operator pos:start="301:32" pos:end="301:33">-&gt;</operator><name pos:start="301:34" pos:end="301:39">sf_idx</name><index pos:start="301:40" pos:end="301:42">[<expr pos:start="301:41" pos:end="301:41"><literal type="number" pos:start="301:41" pos:end="301:41">0</literal></expr>]</index></name></expr> </then><else pos:start="301:44" pos:end="301:52">: <expr pos:start="301:46" pos:end="301:52"><name pos:start="301:46" pos:end="301:52">INT_MAX</name></expr></else></ternary></expr>;</expr_stmt>

    <for pos:start="303:5" pos:end="313:5">for <control pos:start="303:9" pos:end="303:29">(<init pos:start="303:10" pos:end="303:15"><expr pos:start="303:10" pos:end="303:14"><name pos:start="303:10" pos:end="303:10">i</name> <operator pos:start="303:12" pos:end="303:12">=</operator> <literal type="number" pos:start="303:14" pos:end="303:14">1</literal></expr>;</init> <condition pos:start="303:17" pos:end="303:24"><expr pos:start="303:17" pos:end="303:23"><name pos:start="303:17" pos:end="303:17">i</name> <operator pos:start="303:19" pos:end="303:19">&lt;</operator> <literal type="number" pos:start="303:21" pos:end="303:23">128</literal></expr>;</condition> <incr pos:start="303:26" pos:end="303:28"><expr pos:start="303:26" pos:end="303:28"><name pos:start="303:26" pos:end="303:26">i</name><operator pos:start="303:27" pos:end="303:28">++</operator></expr></incr>)</control> <block pos:start="303:31" pos:end="313:5">{<block_content pos:start="305:9" pos:end="311:47">

        <if_stmt pos:start="305:9" pos:end="311:47"><if pos:start="305:9" pos:end="307:46">if <condition pos:start="305:12" pos:end="305:28">(<expr pos:start="305:13" pos:end="305:27"><operator pos:start="305:13" pos:end="305:13">!</operator><name pos:start="305:14" pos:end="305:27"><name pos:start="305:14" pos:end="305:16">sce</name><operator pos:start="305:17" pos:end="305:18">-&gt;</operator><name pos:start="305:19" pos:end="305:24">sf_idx</name><index pos:start="305:25" pos:end="305:27">[<expr pos:start="305:26" pos:end="305:26"><name pos:start="305:26" pos:end="305:26">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="307:13" pos:end="307:46"><block_content pos:start="307:13" pos:end="307:46">

            <expr_stmt pos:start="307:13" pos:end="307:46"><expr pos:start="307:13" pos:end="307:45"><name pos:start="307:13" pos:end="307:26"><name pos:start="307:13" pos:end="307:15">sce</name><operator pos:start="307:16" pos:end="307:17">-&gt;</operator><name pos:start="307:18" pos:end="307:23">sf_idx</name><index pos:start="307:24" pos:end="307:26">[<expr pos:start="307:25" pos:end="307:25"><name pos:start="307:25" pos:end="307:25">i</name></expr>]</index></name> <operator pos:start="307:28" pos:end="307:28">=</operator> <name pos:start="307:30" pos:end="307:45"><name pos:start="307:30" pos:end="307:32">sce</name><operator pos:start="307:33" pos:end="307:34">-&gt;</operator><name pos:start="307:35" pos:end="307:40">sf_idx</name><index pos:start="307:41" pos:end="307:45">[<expr pos:start="307:42" pos:end="307:44"><name pos:start="307:42" pos:end="307:42">i</name><operator pos:start="307:43" pos:end="307:43">-</operator><literal type="number" pos:start="307:44" pos:end="307:44">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="309:9" pos:end="311:47">else<block type="pseudo" pos:start="311:13" pos:end="311:47"><block_content pos:start="311:13" pos:end="311:47">

            <expr_stmt pos:start="311:13" pos:end="311:47"><expr pos:start="311:13" pos:end="311:46"><name pos:start="311:13" pos:end="311:16">minq</name> <operator pos:start="311:18" pos:end="311:18">=</operator> <call pos:start="311:20" pos:end="311:46"><name pos:start="311:20" pos:end="311:24">FFMIN</name><argument_list pos:start="311:25" pos:end="311:46">(<argument pos:start="311:26" pos:end="311:29"><expr pos:start="311:26" pos:end="311:29"><name pos:start="311:26" pos:end="311:29">minq</name></expr></argument>, <argument pos:start="311:32" pos:end="311:45"><expr pos:start="311:32" pos:end="311:45"><name pos:start="311:32" pos:end="311:45"><name pos:start="311:32" pos:end="311:34">sce</name><operator pos:start="311:35" pos:end="311:36">-&gt;</operator><name pos:start="311:37" pos:end="311:42">sf_idx</name><index pos:start="311:43" pos:end="311:45">[<expr pos:start="311:44" pos:end="311:44"><name pos:start="311:44" pos:end="311:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="315:5" pos:end="317:17"><if pos:start="315:5" pos:end="317:17">if <condition pos:start="315:8" pos:end="315:24">(<expr pos:start="315:9" pos:end="315:23"><name pos:start="315:9" pos:end="315:12">minq</name> <operator pos:start="315:14" pos:end="315:15">==</operator> <name pos:start="315:17" pos:end="315:23">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="317:9" pos:end="317:17"><block_content pos:start="317:9" pos:end="317:17">

        <expr_stmt pos:start="317:9" pos:end="317:17"><expr pos:start="317:9" pos:end="317:16"><name pos:start="317:9" pos:end="317:12">minq</name> <operator pos:start="317:14" pos:end="317:14">=</operator> <literal type="number" pos:start="317:16" pos:end="317:16">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="319:5" pos:end="319:38"><expr pos:start="319:5" pos:end="319:37"><name pos:start="319:5" pos:end="319:8">minq</name> <operator pos:start="319:10" pos:end="319:10">=</operator> <call pos:start="319:12" pos:end="319:37"><name pos:start="319:12" pos:end="319:16">FFMIN</name><argument_list pos:start="319:17" pos:end="319:37">(<argument pos:start="319:18" pos:end="319:21"><expr pos:start="319:18" pos:end="319:21"><name pos:start="319:18" pos:end="319:21">minq</name></expr></argument>, <argument pos:start="319:24" pos:end="319:36"><expr pos:start="319:24" pos:end="319:36"><name pos:start="319:24" pos:end="319:36">SCALE_MAX_POS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="321:5" pos:end="321:56"><expr pos:start="321:5" pos:end="321:55"><name pos:start="321:5" pos:end="321:9">maxsf</name> <operator pos:start="321:11" pos:end="321:11">=</operator> <call pos:start="321:13" pos:end="321:55"><name pos:start="321:13" pos:end="321:17">FFMIN</name><argument_list pos:start="321:18" pos:end="321:55">(<argument pos:start="321:19" pos:end="321:39"><expr pos:start="321:19" pos:end="321:39"><name pos:start="321:19" pos:end="321:22">minq</name> <operator pos:start="321:24" pos:end="321:24">+</operator> <name pos:start="321:26" pos:end="321:39">SCALE_MAX_DIFF</name></expr></argument>, <argument pos:start="321:42" pos:end="321:54"><expr pos:start="321:42" pos:end="321:54"><name pos:start="321:42" pos:end="321:54">SCALE_MAX_POS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="323:5" pos:end="331:5">for <control pos:start="323:9" pos:end="323:30">(<init pos:start="323:10" pos:end="323:17"><expr pos:start="323:10" pos:end="323:16"><name pos:start="323:10" pos:end="323:10">i</name> <operator pos:start="323:12" pos:end="323:12">=</operator> <literal type="number" pos:start="323:14" pos:end="323:16">126</literal></expr>;</init> <condition pos:start="323:19" pos:end="323:25"><expr pos:start="323:19" pos:end="323:24"><name pos:start="323:19" pos:end="323:19">i</name> <operator pos:start="323:21" pos:end="323:22">&gt;=</operator> <literal type="number" pos:start="323:24" pos:end="323:24">0</literal></expr>;</condition> <incr pos:start="323:27" pos:end="323:29"><expr pos:start="323:27" pos:end="323:29"><name pos:start="323:27" pos:end="323:27">i</name><operator pos:start="323:28" pos:end="323:29">--</operator></expr></incr>)</control> <block pos:start="323:32" pos:end="331:5">{<block_content pos:start="325:9" pos:end="329:62">

        <if_stmt pos:start="325:9" pos:end="327:46"><if pos:start="325:9" pos:end="327:46">if <condition pos:start="325:12" pos:end="325:28">(<expr pos:start="325:13" pos:end="325:27"><operator pos:start="325:13" pos:end="325:13">!</operator><name pos:start="325:14" pos:end="325:27"><name pos:start="325:14" pos:end="325:16">sce</name><operator pos:start="325:17" pos:end="325:18">-&gt;</operator><name pos:start="325:19" pos:end="325:24">sf_idx</name><index pos:start="325:25" pos:end="325:27">[<expr pos:start="325:26" pos:end="325:26"><name pos:start="325:26" pos:end="325:26">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="327:13" pos:end="327:46"><block_content pos:start="327:13" pos:end="327:46">

            <expr_stmt pos:start="327:13" pos:end="327:46"><expr pos:start="327:13" pos:end="327:45"><name pos:start="327:13" pos:end="327:26"><name pos:start="327:13" pos:end="327:15">sce</name><operator pos:start="327:16" pos:end="327:17">-&gt;</operator><name pos:start="327:18" pos:end="327:23">sf_idx</name><index pos:start="327:24" pos:end="327:26">[<expr pos:start="327:25" pos:end="327:25"><name pos:start="327:25" pos:end="327:25">i</name></expr>]</index></name> <operator pos:start="327:28" pos:end="327:28">=</operator> <name pos:start="327:30" pos:end="327:45"><name pos:start="327:30" pos:end="327:32">sce</name><operator pos:start="327:33" pos:end="327:34">-&gt;</operator><name pos:start="327:35" pos:end="327:40">sf_idx</name><index pos:start="327:41" pos:end="327:45">[<expr pos:start="327:42" pos:end="327:44"><name pos:start="327:42" pos:end="327:42">i</name><operator pos:start="327:43" pos:end="327:43">+</operator><literal type="number" pos:start="327:44" pos:end="327:44">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:62"><expr pos:start="329:9" pos:end="329:61"><name pos:start="329:9" pos:end="329:22"><name pos:start="329:9" pos:end="329:11">sce</name><operator pos:start="329:12" pos:end="329:13">-&gt;</operator><name pos:start="329:14" pos:end="329:19">sf_idx</name><index pos:start="329:20" pos:end="329:22">[<expr pos:start="329:21" pos:end="329:21"><name pos:start="329:21" pos:end="329:21">i</name></expr>]</index></name> <operator pos:start="329:24" pos:end="329:24">=</operator> <call pos:start="329:26" pos:end="329:61"><name pos:start="329:26" pos:end="329:32">av_clip</name><argument_list pos:start="329:33" pos:end="329:61">(<argument pos:start="329:34" pos:end="329:47"><expr pos:start="329:34" pos:end="329:47"><name pos:start="329:34" pos:end="329:47"><name pos:start="329:34" pos:end="329:36">sce</name><operator pos:start="329:37" pos:end="329:38">-&gt;</operator><name pos:start="329:39" pos:end="329:44">sf_idx</name><index pos:start="329:45" pos:end="329:47">[<expr pos:start="329:46" pos:end="329:46"><name pos:start="329:46" pos:end="329:46">i</name></expr>]</index></name></expr></argument>, <argument pos:start="329:50" pos:end="329:53"><expr pos:start="329:50" pos:end="329:53"><name pos:start="329:50" pos:end="329:53">minq</name></expr></argument>, <argument pos:start="329:56" pos:end="329:60"><expr pos:start="329:56" pos:end="329:60"><name pos:start="329:56" pos:end="329:60">maxsf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
