<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10902.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:45">avcodec_decode_audio4</name><parameter_list pos:start="1:46" pos:end="7:62">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:60"><decl pos:start="3:47" pos:end="3:60"><type pos:start="3:47" pos:end="3:60"><name pos:start="3:47" pos:end="3:53">AVFrame</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">frame</name></decl></parameter>,

                                              <parameter pos:start="5:47" pos:end="5:64"><decl pos:start="5:47" pos:end="5:64"><type pos:start="5:47" pos:end="5:64"><name pos:start="5:47" pos:end="5:49">int</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:64">got_frame_ptr</name></decl></parameter>,

                                              <parameter pos:start="7:47" pos:end="7:61"><decl pos:start="7:47" pos:end="7:61"><type pos:start="7:47" pos:end="7:61"><name pos:start="7:47" pos:end="7:54">AVPacket</name> <modifier pos:start="7:56" pos:end="7:56">*</modifier></type><name pos:start="7:57" pos:end="7:61">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="111:1">{<block_content pos:start="11:5" pos:end="109:15">

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">AVCodecInternal</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:25">avci</name> <init pos:start="11:27" pos:end="11:43">= <expr pos:start="11:29" pos:end="11:43"><name pos:start="11:29" pos:end="11:43"><name pos:start="11:29" pos:end="11:33">avctx</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:43">internal</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">planar</name></decl>, <decl pos:start="13:17" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:24">channels</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:18">got_frame_ptr</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:9">avctx</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:14">pkt</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:22">avpkt</name></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:36">(<expr pos:start="27:9" pos:end="27:35"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:20"><name pos:start="27:10" pos:end="27:14">avpkt</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:20">data</name></name> <operator pos:start="27:22" pos:end="27:23">&amp;&amp;</operator> <name pos:start="27:25" pos:end="27:35"><name pos:start="27:25" pos:end="27:29">avpkt</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:35">size</name></name></expr>)</condition> <block pos:start="27:38" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:31">

        <expr_stmt pos:start="29:9" pos:end="29:78"><expr pos:start="29:9" pos:end="29:77"><call pos:start="29:9" pos:end="29:77"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:77">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:76"><expr pos:start="29:37" pos:end="29:76"><literal type="string" pos:start="29:37" pos:end="29:76">"invalid packet: NULL data, size != 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><call pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:22">apply_param_change</name><argument_list pos:start="37:23" pos:end="37:36">(<argument pos:start="37:24" pos:end="37:28"><expr pos:start="37:24" pos:end="37:28"><name pos:start="37:24" pos:end="37:28">avctx</name></expr></argument>, <argument pos:start="37:31" pos:end="37:35"><expr pos:start="37:31" pos:end="37:35"><name pos:start="37:31" pos:end="37:35">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><call pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:30">avcodec_get_frame_defaults</name><argument_list pos:start="41:31" pos:end="41:37">(<argument pos:start="41:32" pos:end="41:36"><expr pos:start="41:32" pos:end="41:36"><name pos:start="41:32" pos:end="41:36">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="47:39"><if pos:start="45:5" pos:end="47:39">if <condition pos:start="45:8" pos:end="45:34">(<expr pos:start="45:9" pos:end="45:33"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:33"><name pos:start="45:10" pos:end="45:14">avctx</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:33">refcounted_frames</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:39"><block_content pos:start="47:9" pos:end="47:39">

        <expr_stmt pos:start="47:9" pos:end="47:39"><expr pos:start="47:9" pos:end="47:38"><call pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:22">av_frame_unref</name><argument_list pos:start="47:23" pos:end="47:38">(<argument pos:start="47:24" pos:end="47:37"><expr pos:start="47:24" pos:end="47:37"><operator pos:start="47:24" pos:end="47:24">&amp;</operator><name pos:start="47:25" pos:end="47:37"><name pos:start="47:25" pos:end="47:28">avci</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:37">to_free</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="89:5"><if pos:start="51:5" pos:end="89:5">if <condition pos:start="51:8" pos:end="51:70">(<expr pos:start="51:9" pos:end="51:69"><operator pos:start="51:9" pos:end="51:9">(</operator><name pos:start="51:10" pos:end="51:35"><name pos:start="51:10" pos:end="51:14">avctx</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:21">codec</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:35">capabilities</name></name> <operator pos:start="51:37" pos:end="51:37">&amp;</operator> <name pos:start="51:39" pos:end="51:53">CODEC_CAP_DELAY</name><operator pos:start="51:54" pos:end="51:54">)</operator> <operator pos:start="51:56" pos:end="51:57">||</operator> <name pos:start="51:59" pos:end="51:69"><name pos:start="51:59" pos:end="51:63">avpkt</name><operator pos:start="51:64" pos:end="51:65">-&gt;</operator><name pos:start="51:66" pos:end="51:69">size</name></name></expr>)</condition> <block pos:start="51:72" pos:end="89:5">{<block_content pos:start="53:9" pos:end="87:34">

        <expr_stmt pos:start="53:9" pos:end="53:71"><expr pos:start="53:9" pos:end="53:70"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:70"><name pos:start="53:15" pos:end="53:34"><name pos:start="53:15" pos:end="53:19">avctx</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:26">codec</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:34">decode</name></name><argument_list pos:start="53:35" pos:end="53:70">(<argument pos:start="53:36" pos:end="53:40"><expr pos:start="53:36" pos:end="53:40"><name pos:start="53:36" pos:end="53:40">avctx</name></expr></argument>, <argument pos:start="53:43" pos:end="53:47"><expr pos:start="53:43" pos:end="53:47"><name pos:start="53:43" pos:end="53:47">frame</name></expr></argument>, <argument pos:start="53:50" pos:end="53:62"><expr pos:start="53:50" pos:end="53:62"><name pos:start="53:50" pos:end="53:62">got_frame_ptr</name></expr></argument>, <argument pos:start="53:65" pos:end="53:69"><expr pos:start="53:65" pos:end="53:69"><name pos:start="53:65" pos:end="53:69">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="81:9"><if pos:start="55:9" pos:end="81:9">if <condition pos:start="55:12" pos:end="55:39">(<expr pos:start="55:13" pos:end="55:38"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:18">&gt;=</operator> <literal type="number" pos:start="55:20" pos:end="55:20">0</literal> <operator pos:start="55:22" pos:end="55:23">&amp;&amp;</operator> <operator pos:start="55:25" pos:end="55:25">*</operator><name pos:start="55:26" pos:end="55:38">got_frame_ptr</name></expr>)</condition> <block pos:start="55:41" pos:end="81:9">{<block_content pos:start="57:13" pos:end="79:13">

            <expr_stmt pos:start="57:13" pos:end="57:34"><expr pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:17">avctx</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:31">frame_number</name></name><operator pos:start="57:32" pos:end="57:33">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:40"><expr pos:start="59:13" pos:end="59:39"><name pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:17">frame</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:26">pkt_dts</name></name> <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:39"><name pos:start="59:30" pos:end="59:34">avpkt</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:39">dts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="63:50"><if pos:start="61:13" pos:end="63:50">if <condition pos:start="61:16" pos:end="61:52">(<expr pos:start="61:17" pos:end="61:51"><name pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:21">frame</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:29">format</name></name> <operator pos:start="61:31" pos:end="61:32">==</operator> <name pos:start="61:34" pos:end="61:51">AV_SAMPLE_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:50"><block_content pos:start="63:17" pos:end="63:50">

                <expr_stmt pos:start="63:17" pos:end="63:50"><expr pos:start="63:17" pos:end="63:49"><name pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:21">frame</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:29">format</name></name> <operator pos:start="63:31" pos:end="63:31">=</operator> <name pos:start="63:33" pos:end="63:49"><name pos:start="63:33" pos:end="63:37">avctx</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:49">sample_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="67:13" pos:end="79:13"><if pos:start="67:13" pos:end="79:13">if <condition pos:start="67:16" pos:end="67:42">(<expr pos:start="67:17" pos:end="67:41"><operator pos:start="67:17" pos:end="67:17">!</operator><name pos:start="67:18" pos:end="67:41"><name pos:start="67:18" pos:end="67:22">avctx</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:41">refcounted_frames</name></name></expr>)</condition> <block pos:start="67:44" pos:end="79:13">{<block_content pos:start="69:17" pos:end="77:43">

                <expr_stmt pos:start="69:17" pos:end="69:39"><expr pos:start="69:17" pos:end="69:38"><name pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:20">avci</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:29">to_free</name></name> <operator pos:start="69:31" pos:end="69:31">=</operator> <operator pos:start="69:33" pos:end="69:33">*</operator><name pos:start="69:34" pos:end="69:38">frame</name></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:65"><expr pos:start="71:17" pos:end="71:64"><name pos:start="71:17" pos:end="71:43"><name pos:start="71:17" pos:end="71:20">avci</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:29">to_free</name><operator pos:start="71:30" pos:end="71:30">.</operator><name pos:start="71:31" pos:end="71:43">extended_data</name></name> <operator pos:start="71:45" pos:end="71:45">=</operator> <name pos:start="71:47" pos:end="71:64"><name pos:start="71:47" pos:end="71:50">avci</name><operator pos:start="71:51" pos:end="71:52">-&gt;</operator><name pos:start="71:53" pos:end="71:59">to_free</name><operator pos:start="71:60" pos:end="71:60">.</operator><name pos:start="71:61" pos:end="71:64">data</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:58"><expr pos:start="73:17" pos:end="73:57"><call pos:start="73:17" pos:end="73:57"><name pos:start="73:17" pos:end="73:22">memset</name><argument_list pos:start="73:23" pos:end="73:57">(<argument pos:start="73:24" pos:end="73:33"><expr pos:start="73:24" pos:end="73:33"><name pos:start="73:24" pos:end="73:33"><name pos:start="73:24" pos:end="73:28">frame</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:33">buf</name></name></expr></argument>, <argument pos:start="73:36" pos:end="73:36"><expr pos:start="73:36" pos:end="73:36"><literal type="number" pos:start="73:36" pos:end="73:36">0</literal></expr></argument>, <argument pos:start="73:39" pos:end="73:56"><expr pos:start="73:39" pos:end="73:56"><sizeof pos:start="73:39" pos:end="73:56">sizeof<argument_list pos:start="73:45" pos:end="73:56">(<argument pos:start="73:46" pos:end="73:55"><expr pos:start="73:46" pos:end="73:55"><name pos:start="73:46" pos:end="73:55"><name pos:start="73:46" pos:end="73:50">frame</name><operator pos:start="73:51" pos:end="73:52">-&gt;</operator><name pos:start="73:53" pos:end="73:55">buf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:46"><expr pos:start="75:17" pos:end="75:45"><name pos:start="75:17" pos:end="75:35"><name pos:start="75:17" pos:end="75:21">frame</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:35">extended_buf</name></name>    <operator pos:start="75:40" pos:end="75:40">=</operator> <name pos:start="75:42" pos:end="75:45">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:43"><expr pos:start="77:17" pos:end="77:42"><name pos:start="77:17" pos:end="77:38"><name pos:start="77:17" pos:end="77:21">frame</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:38">nb_extended_buf</name></name> <operator pos:start="77:40" pos:end="77:40">=</operator> <literal type="number" pos:start="77:42" pos:end="77:42">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="85:9" pos:end="87:34"><if pos:start="85:9" pos:end="87:34">if <condition pos:start="85:12" pos:end="85:38">(<expr pos:start="85:13" pos:end="85:37"><name pos:start="85:13" pos:end="85:15">ret</name> <operator pos:start="85:17" pos:end="85:17">&lt;</operator> <literal type="number" pos:start="85:19" pos:end="85:19">0</literal> <operator pos:start="85:21" pos:end="85:22">&amp;&amp;</operator> <name pos:start="85:24" pos:end="85:37"><name pos:start="85:24" pos:end="85:28">frame</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:34">data</name><index pos:start="85:35" pos:end="85:37">[<expr pos:start="85:36" pos:end="85:36"><literal type="number" pos:start="85:36" pos:end="85:36">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:34"><block_content pos:start="87:13" pos:end="87:34">

            <expr_stmt pos:start="87:13" pos:end="87:34"><expr pos:start="87:13" pos:end="87:33"><call pos:start="87:13" pos:end="87:33"><name pos:start="87:13" pos:end="87:26">av_frame_unref</name><argument_list pos:start="87:27" pos:end="87:33">(<argument pos:start="87:28" pos:end="87:32"><expr pos:start="87:28" pos:end="87:32"><name pos:start="87:28" pos:end="87:32">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="93:5" pos:end="97:46">/* many decoders assign whole AVFrames, thus overwriting extended_data;

     * make sure it's set correctly; assume decoders that actually use

     * extended_data are doing it correctly */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:54"><expr pos:start="99:5" pos:end="99:53"><name pos:start="99:5" pos:end="99:10">planar</name>   <operator pos:start="99:14" pos:end="99:14">=</operator> <call pos:start="99:16" pos:end="99:53"><name pos:start="99:16" pos:end="99:38">av_sample_fmt_is_planar</name><argument_list pos:start="99:39" pos:end="99:53">(<argument pos:start="99:40" pos:end="99:52"><expr pos:start="99:40" pos:end="99:52"><name pos:start="99:40" pos:end="99:52"><name pos:start="99:40" pos:end="99:44">frame</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:52">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:72"><expr pos:start="101:5" pos:end="101:71"><name pos:start="101:5" pos:end="101:12">channels</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <call pos:start="101:16" pos:end="101:71"><name pos:start="101:16" pos:end="101:48">av_get_channel_layout_nb_channels</name><argument_list pos:start="101:49" pos:end="101:71">(<argument pos:start="101:50" pos:end="101:70"><expr pos:start="101:50" pos:end="101:70"><name pos:start="101:50" pos:end="101:70"><name pos:start="101:50" pos:end="101:54">frame</name><operator pos:start="101:55" pos:end="101:56">-&gt;</operator><name pos:start="101:57" pos:end="101:70">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="105:43"><if pos:start="103:5" pos:end="105:43">if <condition pos:start="103:8" pos:end="103:53">(<expr pos:start="103:9" pos:end="103:52"><operator pos:start="103:9" pos:end="103:9">!</operator><operator pos:start="103:10" pos:end="103:10">(</operator><name pos:start="103:11" pos:end="103:16">planar</name> <operator pos:start="103:18" pos:end="103:19">&amp;&amp;</operator> <name pos:start="103:21" pos:end="103:28">channels</name> <operator pos:start="103:30" pos:end="103:30">&gt;</operator> <name pos:start="103:32" pos:end="103:51">AV_NUM_DATA_POINTERS</name><operator pos:start="103:52" pos:end="103:52">)</operator></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:43"><block_content pos:start="105:9" pos:end="105:43">

        <expr_stmt pos:start="105:9" pos:end="105:43"><expr pos:start="105:9" pos:end="105:42"><name pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:13">frame</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:28">extended_data</name></name> <operator pos:start="105:30" pos:end="105:30">=</operator> <name pos:start="105:32" pos:end="105:42"><name pos:start="105:32" pos:end="105:36">frame</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:42">data</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="109:5" pos:end="109:15">return <expr pos:start="109:12" pos:end="109:14"><name pos:start="109:12" pos:end="109:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
