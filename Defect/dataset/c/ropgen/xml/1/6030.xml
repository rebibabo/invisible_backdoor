<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6030.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:37"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">pc_cpu_unplug_request_cb</name><parameter_list pos:start="1:37" pos:end="2:68">(<parameter pos:start="1:38" pos:end="1:64"><decl pos:start="1:38" pos:end="1:64"><type pos:start="1:38" pos:end="1:64"><name pos:start="1:38" pos:end="1:51">HotplugHandler</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:64">hotplug_dev</name></decl></parameter>,
                                     <parameter pos:start="2:38" pos:end="2:53"><decl pos:start="2:38" pos:end="2:53"><type pos:start="2:38" pos:end="2:53"><name pos:start="2:38" pos:end="2:48">DeviceState</name> <modifier pos:start="2:50" pos:end="2:50">*</modifier></type><name pos:start="2:51" pos:end="2:53">dev</name></decl></parameter>, <parameter pos:start="2:56" pos:end="2:67"><decl pos:start="2:56" pos:end="2:67"><type pos:start="2:56" pos:end="2:67"><name pos:start="2:56" pos:end="2:60">Error</name> <modifier pos:start="2:62" pos:end="2:62">*</modifier><modifier pos:start="2:63" pos:end="2:63">*</modifier></type><name pos:start="2:64" pos:end="2:67">errp</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="17:37">{<block_content pos:start="4:5" pos:end="17:37">
    <decl_stmt pos:start="4:5" pos:end="4:17"><decl pos:start="4:5" pos:end="4:16"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:11">idx</name> <init pos:start="4:13" pos:end="4:16">= <expr pos:start="4:15" pos:end="4:16"><operator pos:start="4:15" pos:end="4:15">-</operator><literal type="number" pos:start="4:16" pos:end="4:16">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">HotplugHandlerClass</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:28">hhc</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:28"><decl pos:start="6:5" pos:end="6:27"><type pos:start="6:5" pos:end="6:11"><name pos:start="6:5" pos:end="6:9">Error</name> <modifier pos:start="6:11" pos:end="6:11">*</modifier></type><name pos:start="6:12" pos:end="6:20">local_err</name> <init pos:start="6:22" pos:end="6:27">= <expr pos:start="6:24" pos:end="6:27"><name pos:start="6:24" pos:end="6:27">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">X86CPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">cpu</name> <init pos:start="7:17" pos:end="7:30">= <expr pos:start="7:19" pos:end="7:30"><call pos:start="7:19" pos:end="7:30"><name pos:start="7:19" pos:end="7:25">X86_CPU</name><argument_list pos:start="7:26" pos:end="7:30">(<argument pos:start="7:27" pos:end="7:29"><expr pos:start="7:27" pos:end="7:29"><name pos:start="7:27" pos:end="7:29">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:51"><decl pos:start="8:5" pos:end="8:50"><type pos:start="8:5" pos:end="8:20"><name pos:start="8:5" pos:end="8:18">PCMachineState</name> <modifier pos:start="8:20" pos:end="8:20">*</modifier></type><name pos:start="8:21" pos:end="8:24">pcms</name> <init pos:start="8:26" pos:end="8:50">= <expr pos:start="8:28" pos:end="8:50"><call pos:start="8:28" pos:end="8:50"><name pos:start="8:28" pos:end="8:37">PC_MACHINE</name><argument_list pos:start="8:38" pos:end="8:50">(<argument pos:start="8:39" pos:end="8:49"><expr pos:start="8:39" pos:end="8:49"><name pos:start="8:39" pos:end="8:49">hotplug_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:56"><expr pos:start="9:5" pos:end="9:55"><call pos:start="9:5" pos:end="9:55"><name pos:start="9:5" pos:end="9:20">pc_find_cpu_slot</name><argument_list pos:start="9:21" pos:end="9:55">(<argument pos:start="9:22" pos:end="9:34"><expr pos:start="9:22" pos:end="9:34"><call pos:start="9:22" pos:end="9:34"><name pos:start="9:22" pos:end="9:28">MACHINE</name><argument_list pos:start="9:29" pos:end="9:34">(<argument pos:start="9:30" pos:end="9:33"><expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:33">pcms</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="9:37" pos:end="9:48"><expr pos:start="9:37" pos:end="9:48"><name pos:start="9:37" pos:end="9:48"><name pos:start="9:37" pos:end="9:39">cpu</name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:48">apic_id</name></name></expr></argument>, <argument pos:start="9:51" pos:end="9:54"><expr pos:start="9:51" pos:end="9:54"><operator pos:start="9:51" pos:end="9:51">&amp;</operator><name pos:start="9:52" pos:end="9:54">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:22"><expr pos:start="10:5" pos:end="10:21"><call pos:start="10:5" pos:end="10:21"><name pos:start="10:5" pos:end="10:10">assert</name><argument_list pos:start="10:11" pos:end="10:21">(<argument pos:start="10:12" pos:end="10:20"><expr pos:start="10:12" pos:end="10:20"><name pos:start="10:12" pos:end="10:14">idx</name> <operator pos:start="10:16" pos:end="10:17">!=</operator> <operator pos:start="10:19" pos:end="10:19">-</operator><literal type="number" pos:start="10:20" pos:end="10:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="17:37"><if pos:start="11:5" pos:end="17:37">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:11">idx</name> <operator pos:start="11:13" pos:end="11:14">==</operator> <literal type="number" pos:start="11:16" pos:end="11:16">0</literal></expr>)</condition> <block pos:start="11:19" pos:end="17:37">{<block_content pos:start="12:9" pos:end="17:37">
        <expr_stmt pos:start="12:9" pos:end="12:58"><expr pos:start="12:9" pos:end="12:57"><call pos:start="12:9" pos:end="12:57"><name pos:start="12:9" pos:end="12:18">error_setg</name><argument_list pos:start="12:19" pos:end="12:57">(<argument pos:start="12:20" pos:end="12:29"><expr pos:start="12:20" pos:end="12:29"><operator pos:start="12:20" pos:end="12:20">&amp;</operator><name pos:start="12:21" pos:end="12:29">local_err</name></expr></argument>, <argument pos:start="12:32" pos:end="12:56"><expr pos:start="12:32" pos:end="12:56"><literal type="string" pos:start="12:32" pos:end="12:56">"Boot CPU is unpluggable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:7">hhc</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:51"><name pos:start="13:11" pos:end="13:35">HOTPLUG_HANDLER_GET_CLASS</name><argument_list pos:start="13:36" pos:end="13:51">(<argument pos:start="13:37" pos:end="13:50"><expr pos:start="13:37" pos:end="13:50"><name pos:start="13:37" pos:end="13:50"><name pos:start="13:37" pos:end="13:40">pcms</name><operator pos:start="13:41" pos:end="13:42">-&gt;</operator><name pos:start="13:43" pos:end="13:50">acpi_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:74"><expr pos:start="14:5" pos:end="14:73"><call pos:start="14:5" pos:end="14:73"><name pos:start="14:5" pos:end="14:23"><name pos:start="14:5" pos:end="14:7">hhc</name><operator pos:start="14:8" pos:end="14:9">-&gt;</operator><name pos:start="14:10" pos:end="14:23">unplug_request</name></name><argument_list pos:start="14:24" pos:end="14:73">(<argument pos:start="14:25" pos:end="14:55"><expr pos:start="14:25" pos:end="14:55"><call pos:start="14:25" pos:end="14:55"><name pos:start="14:25" pos:end="14:39">HOTPLUG_HANDLER</name><argument_list pos:start="14:40" pos:end="14:55">(<argument pos:start="14:41" pos:end="14:54"><expr pos:start="14:41" pos:end="14:54"><name pos:start="14:41" pos:end="14:54"><name pos:start="14:41" pos:end="14:44">pcms</name><operator pos:start="14:45" pos:end="14:46">-&gt;</operator><name pos:start="14:47" pos:end="14:54">acpi_dev</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="14:58" pos:end="14:60"><expr pos:start="14:58" pos:end="14:60"><name pos:start="14:58" pos:end="14:60">dev</name></expr></argument>, <argument pos:start="14:63" pos:end="14:72"><expr pos:start="14:63" pos:end="14:72"><operator pos:start="14:63" pos:end="14:63">&amp;</operator><name pos:start="14:64" pos:end="14:72">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="17:37"><if pos:start="15:5" pos:end="17:37">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:17">local_err</name></expr>)</condition> <block pos:start="15:20" pos:end="17:37">{<block_content pos:start="16:2" pos:end="17:37">
 <label pos:start="16:2" pos:end="16:5"><name pos:start="16:2" pos:end="16:4">out</name>:</label>
    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><call pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:19">error_propagate</name><argument_list pos:start="17:20" pos:end="17:36">(<argument pos:start="17:21" pos:end="17:24"><expr pos:start="17:21" pos:end="17:24"><name pos:start="17:21" pos:end="17:24">errp</name></expr></argument>, <argument pos:start="17:27" pos:end="17:35"><expr pos:start="17:27" pos:end="17:35"><name pos:start="17:27" pos:end="17:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
