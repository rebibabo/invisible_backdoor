<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13936.c" pos:tabs="8"><function pos:start="1:1" pos:end="315:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">nbd_trip</name><parameter_list pos:start="1:21" pos:end="1:34">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:27"><name pos:start="1:22" pos:end="1:25">void</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:33">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="315:1">{<block_content pos:start="5:5" pos:end="313:25">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">NBDClient</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:21">client</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">NBDExport</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">exp</name> <init pos:start="7:20" pos:end="7:32">= <expr pos:start="7:22" pos:end="7:32"><name pos:start="7:22" pos:end="7:32"><name pos:start="7:22" pos:end="7:27">client</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">exp</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">NBDRequest</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:22">nbd_request</name></name></type> <name pos:start="11:24" pos:end="11:30">request</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:20">nbd_reply</name></name></type> <name pos:start="13:22" pos:end="13:26">reply</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">ssize_t</name></type> <name pos:start="15:13" pos:end="15:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:20">command</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><call pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:9">TRACE</name><argument_list pos:start="21:10" pos:end="21:29">(<argument pos:start="21:11" pos:end="21:28"><expr pos:start="21:11" pos:end="21:28"><literal type="string" pos:start="21:11" pos:end="21:28">"Reading request."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:14">client</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:23">closing</name></name></expr>)</condition> <block pos:start="23:26" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:7">req</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:33"><name pos:start="31:11" pos:end="31:25">nbd_request_get</name><argument_list pos:start="31:26" pos:end="31:33">(<argument pos:start="31:27" pos:end="31:32"><expr pos:start="31:27" pos:end="31:32"><name pos:start="31:27" pos:end="31:32">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:48"><expr pos:start="33:5" pos:end="33:47"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:47"><name pos:start="33:11" pos:end="33:32">nbd_co_receive_request</name><argument_list pos:start="33:33" pos:end="33:47">(<argument pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><name pos:start="33:34" pos:end="33:36">req</name></expr></argument>, <argument pos:start="33:39" pos:end="33:46"><expr pos:start="33:39" pos:end="33:46"><operator pos:start="33:39" pos:end="33:39">&amp;</operator><name pos:start="33:40" pos:end="33:46">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:14">==</operator> <operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:22">EAGAIN</name></expr>)</condition> <block pos:start="35:25" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:18">

        <goto pos:start="37:9" pos:end="37:18">goto <name pos:start="37:14" pos:end="37:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:20">(<expr pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:14">==</operator> <operator pos:start="41:16" pos:end="41:16">-</operator><name pos:start="41:17" pos:end="41:19">EIO</name></expr>)</condition> <block pos:start="41:22" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:17">

        <goto pos:start="43:9" pos:end="43:17">goto <name pos:start="43:14" pos:end="43:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:34"><expr pos:start="49:5" pos:end="49:33"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:9">reply</name><operator pos:start="49:10" pos:end="49:10">.</operator><name pos:start="49:11" pos:end="49:16">handle</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:33"><name pos:start="49:20" pos:end="49:26">request</name><operator pos:start="49:27" pos:end="49:27">.</operator><name pos:start="49:28" pos:end="49:33">handle</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:15"><name pos:start="51:5" pos:end="51:9">reply</name><operator pos:start="51:10" pos:end="51:10">.</operator><name pos:start="51:11" pos:end="51:15">error</name></name> <operator pos:start="51:17" pos:end="51:17">=</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:16">(<expr pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">&lt;</operator> <literal type="number" pos:start="55:15" pos:end="55:15">0</literal></expr>)</condition> <block pos:start="55:18" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:25">

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:13">reply</name><operator pos:start="57:14" pos:end="57:14">.</operator><name pos:start="57:15" pos:end="57:19">error</name></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <operator pos:start="57:23" pos:end="57:23">-</operator><name pos:start="57:24" pos:end="57:26">ret</name></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:25">goto <name pos:start="59:14" pos:end="59:24">error_reply</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:50"><expr pos:start="63:5" pos:end="63:49"><name pos:start="63:5" pos:end="63:11">command</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <name pos:start="63:15" pos:end="63:26"><name pos:start="63:15" pos:end="63:21">request</name><operator pos:start="63:22" pos:end="63:22">.</operator><name pos:start="63:23" pos:end="63:26">type</name></name> <operator pos:start="63:28" pos:end="63:28">&amp;</operator> <name pos:start="63:30" pos:end="63:49">NBD_CMD_MASK_COMMAND</name></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="79:5"><if pos:start="65:5" pos:end="79:5">if <condition pos:start="65:8" pos:end="65:76">(<expr pos:start="65:9" pos:end="65:75"><name pos:start="65:9" pos:end="65:15">command</name> <operator pos:start="65:17" pos:end="65:18">!=</operator> <name pos:start="65:20" pos:end="65:31">NBD_CMD_DISC</name> <operator pos:start="65:33" pos:end="65:34">&amp;&amp;</operator> <operator pos:start="65:36" pos:end="65:36">(</operator><name pos:start="65:37" pos:end="65:48"><name pos:start="65:37" pos:end="65:43">request</name><operator pos:start="65:44" pos:end="65:44">.</operator><name pos:start="65:45" pos:end="65:48">from</name></name> <operator pos:start="65:50" pos:end="65:50">+</operator> <name pos:start="65:52" pos:end="65:62"><name pos:start="65:52" pos:end="65:58">request</name><operator pos:start="65:59" pos:end="65:59">.</operator><name pos:start="65:60" pos:end="65:62">len</name></name><operator pos:start="65:63" pos:end="65:63">)</operator> <operator pos:start="65:65" pos:end="65:65">&gt;</operator> <name pos:start="65:67" pos:end="65:75"><name pos:start="65:67" pos:end="65:69">exp</name><operator pos:start="65:70" pos:end="65:71">-&gt;</operator><name pos:start="65:72" pos:end="65:75">size</name></name></expr>)</condition> <block pos:start="65:78" pos:end="79:5">{<block_content pos:start="67:13" pos:end="77:29">

            <expr_stmt pos:start="67:13" pos:end="73:68"><expr pos:start="67:13" pos:end="73:67"><call pos:start="67:13" pos:end="73:67"><name pos:start="67:13" pos:end="67:15">LOG</name><argument_list pos:start="67:16" pos:end="73:67">(<argument pos:start="67:17" pos:end="69:37"><expr pos:start="67:17" pos:end="69:37"><literal type="string" pos:start="67:17" pos:end="67:25">"From: %"</literal> <name pos:start="67:27" pos:end="67:32">PRIu64</name> <literal type="string" pos:start="67:34" pos:end="67:53">", Len: %u, Size: %"</literal> <name pos:start="67:55" pos:end="67:60">PRIu64</name>

            <literal type="string" pos:start="69:13" pos:end="69:25">", Offset: %"</literal> <name pos:start="69:27" pos:end="69:32">PRIu64</name> <literal type="string" pos:start="69:34" pos:end="69:37">"\n"</literal></expr></argument>,

                    <argument pos:start="71:21" pos:end="71:32"><expr pos:start="71:21" pos:end="71:32"><name pos:start="71:21" pos:end="71:32"><name pos:start="71:21" pos:end="71:27">request</name><operator pos:start="71:28" pos:end="71:28">.</operator><name pos:start="71:29" pos:end="71:32">from</name></name></expr></argument>, <argument pos:start="71:35" pos:end="71:45"><expr pos:start="71:35" pos:end="71:45"><name pos:start="71:35" pos:end="71:45"><name pos:start="71:35" pos:end="71:41">request</name><operator pos:start="71:42" pos:end="71:42">.</operator><name pos:start="71:43" pos:end="71:45">len</name></name></expr></argument>,

                    <argument pos:start="73:21" pos:end="73:39"><expr pos:start="73:21" pos:end="73:39"><operator pos:start="73:21" pos:end="73:21">(</operator><name pos:start="73:22" pos:end="73:29">uint64_t</name><operator pos:start="73:30" pos:end="73:30">)</operator><name pos:start="73:31" pos:end="73:39"><name pos:start="73:31" pos:end="73:33">exp</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:39">size</name></name></expr></argument>, <argument pos:start="73:42" pos:end="73:66"><expr pos:start="73:42" pos:end="73:66"><operator pos:start="73:42" pos:end="73:42">(</operator><name pos:start="73:43" pos:end="73:50">uint64_t</name><operator pos:start="73:51" pos:end="73:51">)</operator><name pos:start="73:52" pos:end="73:66"><name pos:start="73:52" pos:end="73:54">exp</name><operator pos:start="73:55" pos:end="73:56">-&gt;</operator><name pos:start="73:57" pos:end="73:66">dev_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:57"><expr pos:start="75:9" pos:end="75:56"><call pos:start="75:9" pos:end="75:56"><name pos:start="75:9" pos:end="75:11">LOG</name><argument_list pos:start="75:12" pos:end="75:56">(<argument pos:start="75:13" pos:end="75:55"><expr pos:start="75:13" pos:end="75:55"><literal type="string" pos:start="75:13" pos:end="75:55">"requested operation past EOF--bad client?"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:29">goto <name pos:start="77:14" pos:end="77:28">invalid_request</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="95:5"><if pos:start="83:5" pos:end="95:5">if <condition pos:start="83:8" pos:end="83:24">(<expr pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:14">client</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:23">closing</name></name></expr>)</condition> <block pos:start="83:26" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:18">

        <comment type="block" pos:start="85:9" pos:end="91:11">/*

         * The client may be closed when we are blocked in

         * nbd_co_receive_request()

         */</comment>

        <goto pos:start="93:9" pos:end="93:18">goto <name pos:start="93:14" pos:end="93:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="99:5" pos:end="293:5">switch <condition pos:start="99:12" pos:end="99:20">(<expr pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:19">command</name></expr>)</condition> <block pos:start="99:22" pos:end="293:5">{<block_content pos:start="101:5" pos:end="291:14">

    <case pos:start="101:5" pos:end="101:22">case <expr pos:start="101:10" pos:end="101:21"><name pos:start="101:10" pos:end="101:21">NBD_CMD_READ</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:38"><expr pos:start="103:9" pos:end="103:37"><call pos:start="103:9" pos:end="103:37"><name pos:start="103:9" pos:end="103:13">TRACE</name><argument_list pos:start="103:14" pos:end="103:37">(<argument pos:start="103:15" pos:end="103:36"><expr pos:start="103:15" pos:end="103:36"><literal type="string" pos:start="103:15" pos:end="103:36">"Request type is READ"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="107:9" pos:end="121:9"><if pos:start="107:9" pos:end="121:9">if <condition pos:start="107:12" pos:end="107:44">(<expr pos:start="107:13" pos:end="107:43"><name pos:start="107:13" pos:end="107:24"><name pos:start="107:13" pos:end="107:19">request</name><operator pos:start="107:20" pos:end="107:20">.</operator><name pos:start="107:21" pos:end="107:24">type</name></name> <operator pos:start="107:26" pos:end="107:26">&amp;</operator> <name pos:start="107:28" pos:end="107:43">NBD_CMD_FLAG_FUA</name></expr>)</condition> <block pos:start="107:46" pos:end="121:9">{<block_content pos:start="109:13" pos:end="119:13">

            <expr_stmt pos:start="109:13" pos:end="109:41"><expr pos:start="109:13" pos:end="109:40"><name pos:start="109:13" pos:end="109:15">ret</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <call pos:start="109:19" pos:end="109:40"><name pos:start="109:19" pos:end="109:30">blk_co_flush</name><argument_list pos:start="109:31" pos:end="109:40">(<argument pos:start="109:32" pos:end="109:39"><expr pos:start="109:32" pos:end="109:39"><name pos:start="109:32" pos:end="109:39"><name pos:start="109:32" pos:end="109:34">exp</name><operator pos:start="109:35" pos:end="109:36">-&gt;</operator><name pos:start="109:37" pos:end="109:39">blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="119:13"><if pos:start="111:13" pos:end="119:13">if <condition pos:start="111:16" pos:end="111:24">(<expr pos:start="111:17" pos:end="111:23"><name pos:start="111:17" pos:end="111:19">ret</name> <operator pos:start="111:21" pos:end="111:21">&lt;</operator> <literal type="number" pos:start="111:23" pos:end="111:23">0</literal></expr>)</condition> <block pos:start="111:26" pos:end="119:13">{<block_content pos:start="113:17" pos:end="117:33">

                <expr_stmt pos:start="113:17" pos:end="113:36"><expr pos:start="113:17" pos:end="113:35"><call pos:start="113:17" pos:end="113:35"><name pos:start="113:17" pos:end="113:19">LOG</name><argument_list pos:start="113:20" pos:end="113:35">(<argument pos:start="113:21" pos:end="113:34"><expr pos:start="113:21" pos:end="113:34"><literal type="string" pos:start="113:21" pos:end="113:34">"flush failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:35"><expr pos:start="115:17" pos:end="115:34"><name pos:start="115:17" pos:end="115:27"><name pos:start="115:17" pos:end="115:21">reply</name><operator pos:start="115:22" pos:end="115:22">.</operator><name pos:start="115:23" pos:end="115:27">error</name></name> <operator pos:start="115:29" pos:end="115:29">=</operator> <operator pos:start="115:31" pos:end="115:31">-</operator><name pos:start="115:32" pos:end="115:34">ret</name></expr>;</expr_stmt>

                <goto pos:start="117:17" pos:end="117:33">goto <name pos:start="117:22" pos:end="117:32">error_reply</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="125:9" pos:end="129:66"><expr pos:start="125:9" pos:end="129:65"><name pos:start="125:9" pos:end="125:11">ret</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <call pos:start="125:15" pos:end="129:65"><name pos:start="125:15" pos:end="125:22">blk_read</name><argument_list pos:start="125:23" pos:end="129:65">(<argument pos:start="125:24" pos:end="125:31"><expr pos:start="125:24" pos:end="125:31"><name pos:start="125:24" pos:end="125:31"><name pos:start="125:24" pos:end="125:26">exp</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:31">blk</name></name></expr></argument>,

                       <argument pos:start="127:24" pos:end="127:74"><expr pos:start="127:24" pos:end="127:74"><operator pos:start="127:24" pos:end="127:24">(</operator><name pos:start="127:25" pos:end="127:36"><name pos:start="127:25" pos:end="127:31">request</name><operator pos:start="127:32" pos:end="127:32">.</operator><name pos:start="127:33" pos:end="127:36">from</name></name> <operator pos:start="127:38" pos:end="127:38">+</operator> <name pos:start="127:40" pos:end="127:54"><name pos:start="127:40" pos:end="127:42">exp</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:54">dev_offset</name></name><operator pos:start="127:55" pos:end="127:55">)</operator> <operator pos:start="127:57" pos:end="127:57">/</operator> <name pos:start="127:59" pos:end="127:74">BDRV_SECTOR_SIZE</name></expr></argument>,

                       <argument pos:start="129:24" pos:end="129:32"><expr pos:start="129:24" pos:end="129:32"><name pos:start="129:24" pos:end="129:32"><name pos:start="129:24" pos:end="129:26">req</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:32">data</name></name></expr></argument>, <argument pos:start="129:35" pos:end="129:64"><expr pos:start="129:35" pos:end="129:64"><name pos:start="129:35" pos:end="129:45"><name pos:start="129:35" pos:end="129:41">request</name><operator pos:start="129:42" pos:end="129:42">.</operator><name pos:start="129:43" pos:end="129:45">len</name></name> <operator pos:start="129:47" pos:end="129:47">/</operator> <name pos:start="129:49" pos:end="129:64">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="139:9"><if pos:start="131:9" pos:end="139:9">if <condition pos:start="131:12" pos:end="131:20">(<expr pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:15">ret</name> <operator pos:start="131:17" pos:end="131:17">&lt;</operator> <literal type="number" pos:start="131:19" pos:end="131:19">0</literal></expr>)</condition> <block pos:start="131:22" pos:end="139:9">{<block_content pos:start="133:13" pos:end="137:29">

            <expr_stmt pos:start="133:13" pos:end="133:44"><expr pos:start="133:13" pos:end="133:43"><call pos:start="133:13" pos:end="133:43"><name pos:start="133:13" pos:end="133:15">LOG</name><argument_list pos:start="133:16" pos:end="133:43">(<argument pos:start="133:17" pos:end="133:42"><expr pos:start="133:17" pos:end="133:42"><literal type="string" pos:start="133:17" pos:end="133:42">"reading from file failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:31"><expr pos:start="135:13" pos:end="135:30"><name pos:start="135:13" pos:end="135:23"><name pos:start="135:13" pos:end="135:17">reply</name><operator pos:start="135:18" pos:end="135:18">.</operator><name pos:start="135:19" pos:end="135:23">error</name></name> <operator pos:start="135:25" pos:end="135:25">=</operator> <operator pos:start="135:27" pos:end="135:27">-</operator><name pos:start="135:28" pos:end="135:30">ret</name></expr>;</expr_stmt>

            <goto pos:start="137:13" pos:end="137:29">goto <name pos:start="137:18" pos:end="137:28">error_reply</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:46"><expr pos:start="143:9" pos:end="143:45"><call pos:start="143:9" pos:end="143:45"><name pos:start="143:9" pos:end="143:13">TRACE</name><argument_list pos:start="143:14" pos:end="143:45">(<argument pos:start="143:15" pos:end="143:31"><expr pos:start="143:15" pos:end="143:31"><literal type="string" pos:start="143:15" pos:end="143:31">"Read %u byte(s)"</literal></expr></argument>, <argument pos:start="143:34" pos:end="143:44"><expr pos:start="143:34" pos:end="143:44"><name pos:start="143:34" pos:end="143:44"><name pos:start="143:34" pos:end="143:40">request</name><operator pos:start="143:41" pos:end="143:41">.</operator><name pos:start="143:42" pos:end="143:44">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="145:9" pos:end="147:21"><if pos:start="145:9" pos:end="147:21">if <condition pos:start="145:12" pos:end="145:60">(<expr pos:start="145:13" pos:end="145:59"><call pos:start="145:13" pos:end="145:55"><name pos:start="145:13" pos:end="145:29">nbd_co_send_reply</name><argument_list pos:start="145:30" pos:end="145:55">(<argument pos:start="145:31" pos:end="145:33"><expr pos:start="145:31" pos:end="145:33"><name pos:start="145:31" pos:end="145:33">req</name></expr></argument>, <argument pos:start="145:36" pos:end="145:41"><expr pos:start="145:36" pos:end="145:41"><operator pos:start="145:36" pos:end="145:36">&amp;</operator><name pos:start="145:37" pos:end="145:41">reply</name></expr></argument>, <argument pos:start="145:44" pos:end="145:54"><expr pos:start="145:44" pos:end="145:54"><name pos:start="145:44" pos:end="145:54"><name pos:start="145:44" pos:end="145:50">request</name><operator pos:start="145:51" pos:end="145:51">.</operator><name pos:start="145:52" pos:end="145:54">len</name></name></expr></argument>)</argument_list></call> <operator pos:start="145:57" pos:end="145:57">&lt;</operator> <literal type="number" pos:start="145:59" pos:end="145:59">0</literal></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:21"><block_content pos:start="147:13" pos:end="147:21">

            <goto pos:start="147:13" pos:end="147:21">goto <name pos:start="147:18" pos:end="147:20">out</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="149:9" pos:end="149:14">break;</break>

    <case pos:start="151:5" pos:end="151:23">case <expr pos:start="151:10" pos:end="151:22"><name pos:start="151:10" pos:end="151:22">NBD_CMD_WRITE</name></expr>:</case>

        <expr_stmt pos:start="153:9" pos:end="153:39"><expr pos:start="153:9" pos:end="153:38"><call pos:start="153:9" pos:end="153:38"><name pos:start="153:9" pos:end="153:13">TRACE</name><argument_list pos:start="153:14" pos:end="153:38">(<argument pos:start="153:15" pos:end="153:37"><expr pos:start="153:15" pos:end="153:37"><literal type="string" pos:start="153:15" pos:end="153:37">"Request type is WRITE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="157:9" pos:end="165:9"><if pos:start="157:9" pos:end="165:9">if <condition pos:start="157:12" pos:end="157:47">(<expr pos:start="157:13" pos:end="157:46"><name pos:start="157:13" pos:end="157:25"><name pos:start="157:13" pos:end="157:15">exp</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:25">nbdflags</name></name> <operator pos:start="157:27" pos:end="157:27">&amp;</operator> <name pos:start="157:29" pos:end="157:46">NBD_FLAG_READ_ONLY</name></expr>)</condition> <block pos:start="157:49" pos:end="165:9">{<block_content pos:start="159:13" pos:end="163:29">

            <expr_stmt pos:start="159:13" pos:end="159:55"><expr pos:start="159:13" pos:end="159:54"><call pos:start="159:13" pos:end="159:54"><name pos:start="159:13" pos:end="159:17">TRACE</name><argument_list pos:start="159:18" pos:end="159:54">(<argument pos:start="159:19" pos:end="159:53"><expr pos:start="159:19" pos:end="159:53"><literal type="string" pos:start="159:19" pos:end="159:53">"Server is read-only, return error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:32"><expr pos:start="161:13" pos:end="161:31"><name pos:start="161:13" pos:end="161:23"><name pos:start="161:13" pos:end="161:17">reply</name><operator pos:start="161:18" pos:end="161:18">.</operator><name pos:start="161:19" pos:end="161:23">error</name></name> <operator pos:start="161:25" pos:end="161:25">=</operator> <name pos:start="161:27" pos:end="161:31">EROFS</name></expr>;</expr_stmt>

            <goto pos:start="163:13" pos:end="163:29">goto <name pos:start="163:18" pos:end="163:28">error_reply</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="169:9" pos:end="169:35"><expr pos:start="169:9" pos:end="169:34"><call pos:start="169:9" pos:end="169:34"><name pos:start="169:9" pos:end="169:13">TRACE</name><argument_list pos:start="169:14" pos:end="169:34">(<argument pos:start="169:15" pos:end="169:33"><expr pos:start="169:15" pos:end="169:33"><literal type="string" pos:start="169:15" pos:end="169:33">"Writing to device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="173:9" pos:end="177:67"><expr pos:start="173:9" pos:end="177:66"><name pos:start="173:9" pos:end="173:11">ret</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <call pos:start="173:15" pos:end="177:66"><name pos:start="173:15" pos:end="173:23">blk_write</name><argument_list pos:start="173:24" pos:end="177:66">(<argument pos:start="173:25" pos:end="173:32"><expr pos:start="173:25" pos:end="173:32"><name pos:start="173:25" pos:end="173:32"><name pos:start="173:25" pos:end="173:27">exp</name><operator pos:start="173:28" pos:end="173:29">-&gt;</operator><name pos:start="173:30" pos:end="173:32">blk</name></name></expr></argument>,

                        <argument pos:start="175:25" pos:end="175:75"><expr pos:start="175:25" pos:end="175:75"><operator pos:start="175:25" pos:end="175:25">(</operator><name pos:start="175:26" pos:end="175:37"><name pos:start="175:26" pos:end="175:32">request</name><operator pos:start="175:33" pos:end="175:33">.</operator><name pos:start="175:34" pos:end="175:37">from</name></name> <operator pos:start="175:39" pos:end="175:39">+</operator> <name pos:start="175:41" pos:end="175:55"><name pos:start="175:41" pos:end="175:43">exp</name><operator pos:start="175:44" pos:end="175:45">-&gt;</operator><name pos:start="175:46" pos:end="175:55">dev_offset</name></name><operator pos:start="175:56" pos:end="175:56">)</operator> <operator pos:start="175:58" pos:end="175:58">/</operator> <name pos:start="175:60" pos:end="175:75">BDRV_SECTOR_SIZE</name></expr></argument>,

                        <argument pos:start="177:25" pos:end="177:33"><expr pos:start="177:25" pos:end="177:33"><name pos:start="177:25" pos:end="177:33"><name pos:start="177:25" pos:end="177:27">req</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:33">data</name></name></expr></argument>, <argument pos:start="177:36" pos:end="177:65"><expr pos:start="177:36" pos:end="177:65"><name pos:start="177:36" pos:end="177:46"><name pos:start="177:36" pos:end="177:42">request</name><operator pos:start="177:43" pos:end="177:43">.</operator><name pos:start="177:44" pos:end="177:46">len</name></name> <operator pos:start="177:48" pos:end="177:48">/</operator> <name pos:start="177:50" pos:end="177:65">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="187:9"><if pos:start="179:9" pos:end="187:9">if <condition pos:start="179:12" pos:end="179:20">(<expr pos:start="179:13" pos:end="179:19"><name pos:start="179:13" pos:end="179:15">ret</name> <operator pos:start="179:17" pos:end="179:17">&lt;</operator> <literal type="number" pos:start="179:19" pos:end="179:19">0</literal></expr>)</condition> <block pos:start="179:22" pos:end="187:9">{<block_content pos:start="181:13" pos:end="185:29">

            <expr_stmt pos:start="181:13" pos:end="181:42"><expr pos:start="181:13" pos:end="181:41"><call pos:start="181:13" pos:end="181:41"><name pos:start="181:13" pos:end="181:15">LOG</name><argument_list pos:start="181:16" pos:end="181:41">(<argument pos:start="181:17" pos:end="181:40"><expr pos:start="181:17" pos:end="181:40"><literal type="string" pos:start="181:17" pos:end="181:40">"writing to file failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:31"><expr pos:start="183:13" pos:end="183:30"><name pos:start="183:13" pos:end="183:23"><name pos:start="183:13" pos:end="183:17">reply</name><operator pos:start="183:18" pos:end="183:18">.</operator><name pos:start="183:19" pos:end="183:23">error</name></name> <operator pos:start="183:25" pos:end="183:25">=</operator> <operator pos:start="183:27" pos:end="183:27">-</operator><name pos:start="183:28" pos:end="183:30">ret</name></expr>;</expr_stmt>

            <goto pos:start="185:13" pos:end="185:29">goto <name pos:start="185:18" pos:end="185:28">error_reply</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="191:9" pos:end="205:9"><if pos:start="191:9" pos:end="205:9">if <condition pos:start="191:12" pos:end="191:44">(<expr pos:start="191:13" pos:end="191:43"><name pos:start="191:13" pos:end="191:24"><name pos:start="191:13" pos:end="191:19">request</name><operator pos:start="191:20" pos:end="191:20">.</operator><name pos:start="191:21" pos:end="191:24">type</name></name> <operator pos:start="191:26" pos:end="191:26">&amp;</operator> <name pos:start="191:28" pos:end="191:43">NBD_CMD_FLAG_FUA</name></expr>)</condition> <block pos:start="191:46" pos:end="205:9">{<block_content pos:start="193:13" pos:end="203:13">

            <expr_stmt pos:start="193:13" pos:end="193:41"><expr pos:start="193:13" pos:end="193:40"><name pos:start="193:13" pos:end="193:15">ret</name> <operator pos:start="193:17" pos:end="193:17">=</operator> <call pos:start="193:19" pos:end="193:40"><name pos:start="193:19" pos:end="193:30">blk_co_flush</name><argument_list pos:start="193:31" pos:end="193:40">(<argument pos:start="193:32" pos:end="193:39"><expr pos:start="193:32" pos:end="193:39"><name pos:start="193:32" pos:end="193:39"><name pos:start="193:32" pos:end="193:34">exp</name><operator pos:start="193:35" pos:end="193:36">-&gt;</operator><name pos:start="193:37" pos:end="193:39">blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="203:13"><if pos:start="195:13" pos:end="203:13">if <condition pos:start="195:16" pos:end="195:24">(<expr pos:start="195:17" pos:end="195:23"><name pos:start="195:17" pos:end="195:19">ret</name> <operator pos:start="195:21" pos:end="195:21">&lt;</operator> <literal type="number" pos:start="195:23" pos:end="195:23">0</literal></expr>)</condition> <block pos:start="195:26" pos:end="203:13">{<block_content pos:start="197:17" pos:end="201:33">

                <expr_stmt pos:start="197:17" pos:end="197:36"><expr pos:start="197:17" pos:end="197:35"><call pos:start="197:17" pos:end="197:35"><name pos:start="197:17" pos:end="197:19">LOG</name><argument_list pos:start="197:20" pos:end="197:35">(<argument pos:start="197:21" pos:end="197:34"><expr pos:start="197:21" pos:end="197:34"><literal type="string" pos:start="197:21" pos:end="197:34">"flush failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:35"><expr pos:start="199:17" pos:end="199:34"><name pos:start="199:17" pos:end="199:27"><name pos:start="199:17" pos:end="199:21">reply</name><operator pos:start="199:22" pos:end="199:22">.</operator><name pos:start="199:23" pos:end="199:27">error</name></name> <operator pos:start="199:29" pos:end="199:29">=</operator> <operator pos:start="199:31" pos:end="199:31">-</operator><name pos:start="199:32" pos:end="199:34">ret</name></expr>;</expr_stmt>

                <goto pos:start="201:17" pos:end="201:33">goto <name pos:start="201:22" pos:end="201:32">error_reply</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="209:9" pos:end="213:9"><if pos:start="209:9" pos:end="213:9">if <condition pos:start="209:12" pos:end="209:50">(<expr pos:start="209:13" pos:end="209:49"><call pos:start="209:13" pos:end="209:45"><name pos:start="209:13" pos:end="209:29">nbd_co_send_reply</name><argument_list pos:start="209:30" pos:end="209:45">(<argument pos:start="209:31" pos:end="209:33"><expr pos:start="209:31" pos:end="209:33"><name pos:start="209:31" pos:end="209:33">req</name></expr></argument>, <argument pos:start="209:36" pos:end="209:41"><expr pos:start="209:36" pos:end="209:41"><operator pos:start="209:36" pos:end="209:36">&amp;</operator><name pos:start="209:37" pos:end="209:41">reply</name></expr></argument>, <argument pos:start="209:44" pos:end="209:44"><expr pos:start="209:44" pos:end="209:44"><literal type="number" pos:start="209:44" pos:end="209:44">0</literal></expr></argument>)</argument_list></call> <operator pos:start="209:47" pos:end="209:47">&lt;</operator> <literal type="number" pos:start="209:49" pos:end="209:49">0</literal></expr>)</condition> <block pos:start="209:52" pos:end="213:9">{<block_content pos:start="211:13" pos:end="211:21">

            <goto pos:start="211:13" pos:end="211:21">goto <name pos:start="211:18" pos:end="211:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <case pos:start="217:5" pos:end="217:22">case <expr pos:start="217:10" pos:end="217:21"><name pos:start="217:10" pos:end="217:21">NBD_CMD_DISC</name></expr>:</case>

        <expr_stmt pos:start="219:9" pos:end="219:44"><expr pos:start="219:9" pos:end="219:43"><call pos:start="219:9" pos:end="219:43"><name pos:start="219:9" pos:end="219:13">TRACE</name><argument_list pos:start="219:14" pos:end="219:43">(<argument pos:start="219:15" pos:end="219:42"><expr pos:start="219:15" pos:end="219:42"><literal type="string" pos:start="219:15" pos:end="219:42">"Request type is DISCONNECT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:18"><expr pos:start="221:9" pos:end="221:17"><name pos:start="221:9" pos:end="221:13">errno</name> <operator pos:start="221:15" pos:end="221:15">=</operator> <literal type="number" pos:start="221:17" pos:end="221:17">0</literal></expr>;</expr_stmt>

        <goto pos:start="223:9" pos:end="223:17">goto <name pos:start="223:14" pos:end="223:16">out</name>;</goto>

    <case pos:start="225:5" pos:end="225:23">case <expr pos:start="225:10" pos:end="225:22"><name pos:start="225:10" pos:end="225:22">NBD_CMD_FLUSH</name></expr>:</case>

        <expr_stmt pos:start="227:9" pos:end="227:39"><expr pos:start="227:9" pos:end="227:38"><call pos:start="227:9" pos:end="227:38"><name pos:start="227:9" pos:end="227:13">TRACE</name><argument_list pos:start="227:14" pos:end="227:38">(<argument pos:start="227:15" pos:end="227:37"><expr pos:start="227:15" pos:end="227:37"><literal type="string" pos:start="227:15" pos:end="227:37">"Request type is FLUSH"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="231:9" pos:end="231:37"><expr pos:start="231:9" pos:end="231:36"><name pos:start="231:9" pos:end="231:11">ret</name> <operator pos:start="231:13" pos:end="231:13">=</operator> <call pos:start="231:15" pos:end="231:36"><name pos:start="231:15" pos:end="231:26">blk_co_flush</name><argument_list pos:start="231:27" pos:end="231:36">(<argument pos:start="231:28" pos:end="231:35"><expr pos:start="231:28" pos:end="231:35"><name pos:start="231:28" pos:end="231:35"><name pos:start="231:28" pos:end="231:30">exp</name><operator pos:start="231:31" pos:end="231:32">-&gt;</operator><name pos:start="231:33" pos:end="231:35">blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="233:9" pos:end="239:9"><if pos:start="233:9" pos:end="239:9">if <condition pos:start="233:12" pos:end="233:20">(<expr pos:start="233:13" pos:end="233:19"><name pos:start="233:13" pos:end="233:15">ret</name> <operator pos:start="233:17" pos:end="233:17">&lt;</operator> <literal type="number" pos:start="233:19" pos:end="233:19">0</literal></expr>)</condition> <block pos:start="233:22" pos:end="239:9">{<block_content pos:start="235:13" pos:end="237:31">

            <expr_stmt pos:start="235:13" pos:end="235:32"><expr pos:start="235:13" pos:end="235:31"><call pos:start="235:13" pos:end="235:31"><name pos:start="235:13" pos:end="235:15">LOG</name><argument_list pos:start="235:16" pos:end="235:31">(<argument pos:start="235:17" pos:end="235:30"><expr pos:start="235:17" pos:end="235:30"><literal type="string" pos:start="235:17" pos:end="235:30">"flush failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:31"><expr pos:start="237:13" pos:end="237:30"><name pos:start="237:13" pos:end="237:23"><name pos:start="237:13" pos:end="237:17">reply</name><operator pos:start="237:18" pos:end="237:18">.</operator><name pos:start="237:19" pos:end="237:23">error</name></name> <operator pos:start="237:25" pos:end="237:25">=</operator> <operator pos:start="237:27" pos:end="237:27">-</operator><name pos:start="237:28" pos:end="237:30">ret</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="241:9" pos:end="245:9"><if pos:start="241:9" pos:end="245:9">if <condition pos:start="241:12" pos:end="241:50">(<expr pos:start="241:13" pos:end="241:49"><call pos:start="241:13" pos:end="241:45"><name pos:start="241:13" pos:end="241:29">nbd_co_send_reply</name><argument_list pos:start="241:30" pos:end="241:45">(<argument pos:start="241:31" pos:end="241:33"><expr pos:start="241:31" pos:end="241:33"><name pos:start="241:31" pos:end="241:33">req</name></expr></argument>, <argument pos:start="241:36" pos:end="241:41"><expr pos:start="241:36" pos:end="241:41"><operator pos:start="241:36" pos:end="241:36">&amp;</operator><name pos:start="241:37" pos:end="241:41">reply</name></expr></argument>, <argument pos:start="241:44" pos:end="241:44"><expr pos:start="241:44" pos:end="241:44"><literal type="number" pos:start="241:44" pos:end="241:44">0</literal></expr></argument>)</argument_list></call> <operator pos:start="241:47" pos:end="241:47">&lt;</operator> <literal type="number" pos:start="241:49" pos:end="241:49">0</literal></expr>)</condition> <block pos:start="241:52" pos:end="245:9">{<block_content pos:start="243:13" pos:end="243:21">

            <goto pos:start="243:13" pos:end="243:21">goto <name pos:start="243:18" pos:end="243:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="247:9" pos:end="247:14">break;</break>

    <case pos:start="249:5" pos:end="249:22">case <expr pos:start="249:10" pos:end="249:21"><name pos:start="249:10" pos:end="249:21">NBD_CMD_TRIM</name></expr>:</case>

        <expr_stmt pos:start="251:9" pos:end="251:38"><expr pos:start="251:9" pos:end="251:37"><call pos:start="251:9" pos:end="251:37"><name pos:start="251:9" pos:end="251:13">TRACE</name><argument_list pos:start="251:14" pos:end="251:37">(<argument pos:start="251:15" pos:end="251:36"><expr pos:start="251:15" pos:end="251:36"><literal type="string" pos:start="251:15" pos:end="251:36">"Request type is TRIM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="257:61"><expr pos:start="253:9" pos:end="257:60"><name pos:start="253:9" pos:end="253:11">ret</name> <operator pos:start="253:13" pos:end="253:13">=</operator> <call pos:start="253:15" pos:end="257:60"><name pos:start="253:15" pos:end="253:28">blk_co_discard</name><argument_list pos:start="253:29" pos:end="257:60">(<argument pos:start="253:30" pos:end="253:37"><expr pos:start="253:30" pos:end="253:37"><name pos:start="253:30" pos:end="253:37"><name pos:start="253:30" pos:end="253:32">exp</name><operator pos:start="253:33" pos:end="253:34">-&gt;</operator><name pos:start="253:35" pos:end="253:37">blk</name></name></expr></argument>, <argument pos:start="253:40" pos:end="255:57"><expr pos:start="253:40" pos:end="255:57"><operator pos:start="253:40" pos:end="253:40">(</operator><name pos:start="253:41" pos:end="253:52"><name pos:start="253:41" pos:end="253:47">request</name><operator pos:start="253:48" pos:end="253:48">.</operator><name pos:start="253:49" pos:end="253:52">from</name></name> <operator pos:start="253:54" pos:end="253:54">+</operator> <name pos:start="253:56" pos:end="253:70"><name pos:start="253:56" pos:end="253:58">exp</name><operator pos:start="253:59" pos:end="253:60">-&gt;</operator><name pos:start="253:61" pos:end="253:70">dev_offset</name></name><operator pos:start="253:71" pos:end="253:71">)</operator>

                                       <operator pos:start="255:40" pos:end="255:40">/</operator> <name pos:start="255:42" pos:end="255:57">BDRV_SECTOR_SIZE</name></expr></argument>,

                             <argument pos:start="257:30" pos:end="257:59"><expr pos:start="257:30" pos:end="257:59"><name pos:start="257:30" pos:end="257:40"><name pos:start="257:30" pos:end="257:36">request</name><operator pos:start="257:37" pos:end="257:37">.</operator><name pos:start="257:38" pos:end="257:40">len</name></name> <operator pos:start="257:42" pos:end="257:42">/</operator> <name pos:start="257:44" pos:end="257:59">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="259:9" pos:end="265:9"><if pos:start="259:9" pos:end="265:9">if <condition pos:start="259:12" pos:end="259:20">(<expr pos:start="259:13" pos:end="259:19"><name pos:start="259:13" pos:end="259:15">ret</name> <operator pos:start="259:17" pos:end="259:17">&lt;</operator> <literal type="number" pos:start="259:19" pos:end="259:19">0</literal></expr>)</condition> <block pos:start="259:22" pos:end="265:9">{<block_content pos:start="261:13" pos:end="263:31">

            <expr_stmt pos:start="261:13" pos:end="261:34"><expr pos:start="261:13" pos:end="261:33"><call pos:start="261:13" pos:end="261:33"><name pos:start="261:13" pos:end="261:15">LOG</name><argument_list pos:start="261:16" pos:end="261:33">(<argument pos:start="261:17" pos:end="261:32"><expr pos:start="261:17" pos:end="261:32"><literal type="string" pos:start="261:17" pos:end="261:32">"discard failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:31"><expr pos:start="263:13" pos:end="263:30"><name pos:start="263:13" pos:end="263:23"><name pos:start="263:13" pos:end="263:17">reply</name><operator pos:start="263:18" pos:end="263:18">.</operator><name pos:start="263:19" pos:end="263:23">error</name></name> <operator pos:start="263:25" pos:end="263:25">=</operator> <operator pos:start="263:27" pos:end="263:27">-</operator><name pos:start="263:28" pos:end="263:30">ret</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="267:9" pos:end="271:9"><if pos:start="267:9" pos:end="271:9">if <condition pos:start="267:12" pos:end="267:50">(<expr pos:start="267:13" pos:end="267:49"><call pos:start="267:13" pos:end="267:45"><name pos:start="267:13" pos:end="267:29">nbd_co_send_reply</name><argument_list pos:start="267:30" pos:end="267:45">(<argument pos:start="267:31" pos:end="267:33"><expr pos:start="267:31" pos:end="267:33"><name pos:start="267:31" pos:end="267:33">req</name></expr></argument>, <argument pos:start="267:36" pos:end="267:41"><expr pos:start="267:36" pos:end="267:41"><operator pos:start="267:36" pos:end="267:36">&amp;</operator><name pos:start="267:37" pos:end="267:41">reply</name></expr></argument>, <argument pos:start="267:44" pos:end="267:44"><expr pos:start="267:44" pos:end="267:44"><literal type="number" pos:start="267:44" pos:end="267:44">0</literal></expr></argument>)</argument_list></call> <operator pos:start="267:47" pos:end="267:47">&lt;</operator> <literal type="number" pos:start="267:49" pos:end="267:49">0</literal></expr>)</condition> <block pos:start="267:52" pos:end="271:9">{<block_content pos:start="269:13" pos:end="269:21">

            <goto pos:start="269:13" pos:end="269:21">goto <name pos:start="269:18" pos:end="269:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="273:9" pos:end="273:14">break;</break>

    <default pos:start="275:5" pos:end="275:12">default:</default>

        <expr_stmt pos:start="277:9" pos:end="277:64"><expr pos:start="277:9" pos:end="277:63"><call pos:start="277:9" pos:end="277:63"><name pos:start="277:9" pos:end="277:11">LOG</name><argument_list pos:start="277:12" pos:end="277:63">(<argument pos:start="277:13" pos:end="277:48"><expr pos:start="277:13" pos:end="277:48"><literal type="string" pos:start="277:13" pos:end="277:48">"invalid request type (%u) received"</literal></expr></argument>, <argument pos:start="277:51" pos:end="277:62"><expr pos:start="277:51" pos:end="277:62"><name pos:start="277:51" pos:end="277:62"><name pos:start="277:51" pos:end="277:57">request</name><operator pos:start="277:58" pos:end="277:58">.</operator><name pos:start="277:59" pos:end="277:62">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <label pos:start="279:5" pos:end="279:20"><name pos:start="279:5" pos:end="279:19">invalid_request</name>:</label>

        <expr_stmt pos:start="281:9" pos:end="281:29"><expr pos:start="281:9" pos:end="281:28"><name pos:start="281:9" pos:end="281:19"><name pos:start="281:9" pos:end="281:13">reply</name><operator pos:start="281:14" pos:end="281:14">.</operator><name pos:start="281:15" pos:end="281:19">error</name></name> <operator pos:start="281:21" pos:end="281:21">=</operator> <name pos:start="281:23" pos:end="281:28">EINVAL</name></expr>;</expr_stmt>

    <label pos:start="283:5" pos:end="283:16"><name pos:start="283:5" pos:end="283:15">error_reply</name>:</label>

        <if_stmt pos:start="285:9" pos:end="289:9"><if pos:start="285:9" pos:end="289:9">if <condition pos:start="285:12" pos:end="285:50">(<expr pos:start="285:13" pos:end="285:49"><call pos:start="285:13" pos:end="285:45"><name pos:start="285:13" pos:end="285:29">nbd_co_send_reply</name><argument_list pos:start="285:30" pos:end="285:45">(<argument pos:start="285:31" pos:end="285:33"><expr pos:start="285:31" pos:end="285:33"><name pos:start="285:31" pos:end="285:33">req</name></expr></argument>, <argument pos:start="285:36" pos:end="285:41"><expr pos:start="285:36" pos:end="285:41"><operator pos:start="285:36" pos:end="285:36">&amp;</operator><name pos:start="285:37" pos:end="285:41">reply</name></expr></argument>, <argument pos:start="285:44" pos:end="285:44"><expr pos:start="285:44" pos:end="285:44"><literal type="number" pos:start="285:44" pos:end="285:44">0</literal></expr></argument>)</argument_list></call> <operator pos:start="285:47" pos:end="285:47">&lt;</operator> <literal type="number" pos:start="285:49" pos:end="285:49">0</literal></expr>)</condition> <block pos:start="285:52" pos:end="289:9">{<block_content pos:start="287:13" pos:end="287:21">

            <goto pos:start="287:13" pos:end="287:21">goto <name pos:start="287:18" pos:end="287:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="291:9" pos:end="291:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="297:5" pos:end="297:36"><expr pos:start="297:5" pos:end="297:35"><call pos:start="297:5" pos:end="297:35"><name pos:start="297:5" pos:end="297:9">TRACE</name><argument_list pos:start="297:10" pos:end="297:35">(<argument pos:start="297:11" pos:end="297:34"><expr pos:start="297:11" pos:end="297:34"><literal type="string" pos:start="297:11" pos:end="297:34">"Request/Reply complete"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="301:1" pos:end="301:5"><name pos:start="301:1" pos:end="301:4">done</name>:</label>

    <expr_stmt pos:start="303:5" pos:end="303:25"><expr pos:start="303:5" pos:end="303:24"><call pos:start="303:5" pos:end="303:24"><name pos:start="303:5" pos:end="303:19">nbd_request_put</name><argument_list pos:start="303:20" pos:end="303:24">(<argument pos:start="303:21" pos:end="303:23"><expr pos:start="303:21" pos:end="303:23"><name pos:start="303:21" pos:end="303:23">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="305:5" pos:end="305:11">return;</return>



<label pos:start="309:1" pos:end="309:4"><name pos:start="309:1" pos:end="309:3">out</name>:</label>

    <expr_stmt pos:start="311:5" pos:end="311:25"><expr pos:start="311:5" pos:end="311:24"><call pos:start="311:5" pos:end="311:24"><name pos:start="311:5" pos:end="311:19">nbd_request_put</name><argument_list pos:start="311:20" pos:end="311:24">(<argument pos:start="311:21" pos:end="311:23"><expr pos:start="311:21" pos:end="311:23"><name pos:start="311:21" pos:end="311:23">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="313:5" pos:end="313:25"><expr pos:start="313:5" pos:end="313:24"><call pos:start="313:5" pos:end="313:24"><name pos:start="313:5" pos:end="313:16">client_close</name><argument_list pos:start="313:17" pos:end="313:24">(<argument pos:start="313:18" pos:end="313:23"><expr pos:start="313:18" pos:end="313:23"><name pos:start="313:18" pos:end="313:23">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
