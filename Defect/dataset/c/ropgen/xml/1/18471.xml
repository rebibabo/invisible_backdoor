<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18471.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">cpu_ppc_register</name> <parameter_list pos:start="1:22" pos:end="1:55">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:33">CPUPPCState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:49">ppc_def_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">def</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="275:1">{<block_content pos:start="5:5" pos:end="273:13">

    <expr_stmt pos:start="5:5" pos:end="5:34"><expr pos:start="5:5" pos:end="5:33"><name pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:7">env</name><operator pos:start="5:8" pos:end="5:9">-&gt;</operator><name pos:start="5:10" pos:end="5:17">msr_mask</name></name> <operator pos:start="5:19" pos:end="5:19">=</operator> <name pos:start="5:21" pos:end="5:33"><name pos:start="5:21" pos:end="5:23">def</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:33">msr_mask</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:36"><expr pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:7">env</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:18">mmu_model</name></name> <operator pos:start="7:20" pos:end="7:20">=</operator> <name pos:start="7:22" pos:end="7:35"><name pos:start="7:22" pos:end="7:24">def</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:35">mmu_model</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:38"><expr pos:start="9:5" pos:end="9:37"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:7">env</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:19">excp_model</name></name> <operator pos:start="9:21" pos:end="9:21">=</operator> <name pos:start="9:23" pos:end="9:37"><name pos:start="9:23" pos:end="9:25">def</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:37">excp_model</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:7">env</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:18">bus_model</name></name> <operator pos:start="11:20" pos:end="11:20">=</operator> <name pos:start="11:22" pos:end="11:35"><name pos:start="11:22" pos:end="11:24">def</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:35">bus_model</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:7">env</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:17">bfd_mach</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:33"><name pos:start="13:21" pos:end="13:23">def</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:33">bfd_mach</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:41">(<expr pos:start="15:9" pos:end="15:40"><call pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:26">create_ppc_opcodes</name><argument_list pos:start="15:27" pos:end="15:36">(<argument pos:start="15:28" pos:end="15:30"><expr pos:start="15:28" pos:end="15:30"><name pos:start="15:28" pos:end="15:30">env</name></expr></argument>, <argument pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><name pos:start="15:33" pos:end="15:35">def</name></expr></argument>)</argument_list></call> <operator pos:start="15:38" pos:end="15:38">&lt;</operator> <literal type="number" pos:start="15:40" pos:end="15:40">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:27"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:17">init_ppc_proc</name><argument_list pos:start="19:18" pos:end="19:27">(<argument pos:start="19:19" pos:end="19:21"><expr pos:start="19:19" pos:end="19:21"><name pos:start="19:19" pos:end="19:21">env</name></expr></argument>, <argument pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">def</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="21:1" pos:end="21:25">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:11">defined</name><argument_list pos:start="21:12" pos:end="21:25">(<argument pos:start="21:13" pos:end="21:24"><expr pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:24">PPC_DUMP_CPU</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <block pos:start="23:5" pos:end="261:5">{<block_content pos:start="25:9" pos:end="259:38">

        <decl_stmt pos:start="25:9" pos:end="25:64"><decl pos:start="25:9" pos:end="25:38"><type pos:start="25:9" pos:end="25:29"><specifier pos:start="25:9" pos:end="25:13">const</specifier> <name pos:start="25:15" pos:end="25:22">unsigned</name> <name pos:start="25:24" pos:end="25:27">char</name> <modifier pos:start="25:29" pos:end="25:29">*</modifier></type><name pos:start="25:30" pos:end="25:38">mmu_model</name></decl>, <decl pos:start="25:41" pos:end="25:51"><type ref="prev" pos:start="25:9" pos:end="25:29"><modifier pos:start="25:41" pos:end="25:41">*</modifier></type><name pos:start="25:42" pos:end="25:51">excp_model</name></decl>, <decl pos:start="25:54" pos:end="25:63"><type ref="prev" pos:start="25:9" pos:end="25:29"><modifier pos:start="25:54" pos:end="25:54">*</modifier></type><name pos:start="25:55" pos:end="25:63">bus_model</name></decl>;</decl_stmt>

        <switch pos:start="27:9" pos:end="107:9">switch <condition pos:start="27:16" pos:end="27:31">(<expr pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:19">env</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:30">mmu_model</name></name></expr>)</condition> <block pos:start="27:33" pos:end="107:9">{<block_content pos:start="29:9" pos:end="105:18">

        <case pos:start="29:9" pos:end="29:29">case <expr pos:start="29:14" pos:end="29:28"><name pos:start="29:14" pos:end="29:28">POWERPC_MMU_32B</name></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:21">mmu_model</name> <operator pos:start="31:23" pos:end="31:23">=</operator> <literal type="string" pos:start="31:25" pos:end="31:36">"PowerPC 32"</literal></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:29">case <expr pos:start="35:14" pos:end="35:28"><name pos:start="35:14" pos:end="35:28">POWERPC_MMU_601</name></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:38"><expr pos:start="37:13" pos:end="37:37"><name pos:start="37:13" pos:end="37:21">mmu_model</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <literal type="string" pos:start="37:25" pos:end="37:37">"PowerPC 601"</literal></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:34">case <expr pos:start="41:14" pos:end="41:33"><name pos:start="41:14" pos:end="41:33">POWERPC_MMU_SOFT_6xx</name></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:68"><expr pos:start="43:13" pos:end="43:67"><name pos:start="43:13" pos:end="43:21">mmu_model</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <literal type="string" pos:start="43:25" pos:end="43:67">"PowerPC 6xx/7xx with software driven TLBs"</literal></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <case pos:start="47:9" pos:end="47:35">case <expr pos:start="47:14" pos:end="47:34"><name pos:start="47:14" pos:end="47:34">POWERPC_MMU_SOFT_74xx</name></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:65"><expr pos:start="49:13" pos:end="49:64"><name pos:start="49:13" pos:end="49:21">mmu_model</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="string" pos:start="49:25" pos:end="49:64">"PowerPC 74xx with software driven TLBs"</literal></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:34">case <expr pos:start="53:14" pos:end="53:33"><name pos:start="53:14" pos:end="53:33">POWERPC_MMU_SOFT_4xx</name></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:64"><expr pos:start="55:13" pos:end="55:63"><name pos:start="55:13" pos:end="55:21">mmu_model</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <literal type="string" pos:start="55:25" pos:end="55:63">"PowerPC 4xx with software driven TLBs"</literal></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:36">case <expr pos:start="59:14" pos:end="59:35"><name pos:start="59:14" pos:end="59:35">POWERPC_MMU_SOFT_4xx_Z</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="63:40"><expr pos:start="61:13" pos:end="63:39"><name pos:start="61:13" pos:end="61:21">mmu_model</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="string" pos:start="61:25" pos:end="61:64">"PowerPC 4xx with software driven TLBs "</literal>

                <literal type="string" pos:start="63:17" pos:end="63:39">"and zones protections"</literal></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:34">case <expr pos:start="67:14" pos:end="67:33"><name pos:start="67:14" pos:end="67:33">POWERPC_MMU_REAL_4xx</name></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:53"><expr pos:start="69:13" pos:end="69:52"><name pos:start="69:13" pos:end="69:21">mmu_model</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <literal type="string" pos:start="69:25" pos:end="69:52">"PowerPC 4xx real mode only"</literal></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:31">case <expr pos:start="73:14" pos:end="73:30"><name pos:start="73:14" pos:end="73:30">POWERPC_MMU_BOOKE</name></expr>:</case>

            <expr_stmt pos:start="75:13" pos:end="75:40"><expr pos:start="75:13" pos:end="75:39"><name pos:start="75:13" pos:end="75:21">mmu_model</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <literal type="string" pos:start="75:25" pos:end="75:39">"PowerPC BookE"</literal></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <case pos:start="79:9" pos:end="79:35">case <expr pos:start="79:14" pos:end="79:34"><name pos:start="79:14" pos:end="79:34">POWERPC_MMU_BOOKE_FSL</name></expr>:</case>

            <expr_stmt pos:start="81:13" pos:end="81:44"><expr pos:start="81:13" pos:end="81:43"><name pos:start="81:13" pos:end="81:21">mmu_model</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <literal type="string" pos:start="81:25" pos:end="81:43">"PowerPC BookE FSL"</literal></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="86:0">break;</break>

<cpp:if pos:start="85:1" pos:end="85:26">#<cpp:directive pos:start="85:2" pos:end="85:3">if</cpp:directive> <expr pos:start="85:5" pos:end="85:26"><call pos:start="85:5" pos:end="85:26"><name pos:start="85:5" pos:end="85:11">defined</name> <argument_list pos:start="85:13" pos:end="85:26">(<argument pos:start="85:14" pos:end="85:25"><expr pos:start="85:14" pos:end="85:25"><name pos:start="85:14" pos:end="85:25">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="87:9" pos:end="87:29">case <expr pos:start="87:14" pos:end="87:28"><name pos:start="87:14" pos:end="87:28">POWERPC_MMU_64B</name></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:37"><expr pos:start="89:13" pos:end="89:36"><name pos:start="89:13" pos:end="89:21">mmu_model</name> <operator pos:start="89:23" pos:end="89:23">=</operator> <literal type="string" pos:start="89:25" pos:end="89:36">"PowerPC 64"</literal></expr>;</expr_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="93:34">case <expr pos:start="93:14" pos:end="93:33"><name pos:start="93:14" pos:end="93:33">POWERPC_MMU_64BRIDGE</name></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:44"><expr pos:start="95:13" pos:end="95:43"><name pos:start="95:13" pos:end="95:21">mmu_model</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <literal type="string" pos:start="95:25" pos:end="95:43">"PowerPC 64 bridge"</literal></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="100:0">break;</break>

<cpp:endif pos:start="99:1" pos:end="99:6">#<cpp:directive pos:start="99:2" pos:end="99:6">endif</cpp:directive></cpp:endif>

        <default pos:start="101:9" pos:end="101:16">default:</default>

            <expr_stmt pos:start="103:13" pos:end="103:45"><expr pos:start="103:13" pos:end="103:44"><name pos:start="103:13" pos:end="103:21">mmu_model</name> <operator pos:start="103:23" pos:end="103:23">=</operator> <literal type="string" pos:start="103:25" pos:end="103:44">"Unknown or invalid"</literal></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        </block_content>}</block></switch>

        <switch pos:start="109:9" pos:end="193:9">switch <condition pos:start="109:16" pos:end="109:32">(<expr pos:start="109:17" pos:end="109:31"><name pos:start="109:17" pos:end="109:31"><name pos:start="109:17" pos:end="109:19">env</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:31">excp_model</name></name></expr>)</condition> <block pos:start="109:34" pos:end="193:9">{<block_content pos:start="111:9" pos:end="191:18">

        <case pos:start="111:9" pos:end="111:30">case <expr pos:start="111:14" pos:end="111:29"><name pos:start="111:14" pos:end="111:29">POWERPC_EXCP_STD</name></expr>:</case>

            <expr_stmt pos:start="113:13" pos:end="113:35"><expr pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:22">excp_model</name> <operator pos:start="113:24" pos:end="113:24">=</operator> <literal type="string" pos:start="113:26" pos:end="113:34">"PowerPC"</literal></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <case pos:start="117:9" pos:end="117:30">case <expr pos:start="117:14" pos:end="117:29"><name pos:start="117:14" pos:end="117:29">POWERPC_EXCP_40x</name></expr>:</case>

            <expr_stmt pos:start="119:13" pos:end="119:39"><expr pos:start="119:13" pos:end="119:38"><name pos:start="119:13" pos:end="119:22">excp_model</name> <operator pos:start="119:24" pos:end="119:24">=</operator> <literal type="string" pos:start="119:26" pos:end="119:38">"PowerPC 40x"</literal></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        <case pos:start="123:9" pos:end="123:30">case <expr pos:start="123:14" pos:end="123:29"><name pos:start="123:14" pos:end="123:29">POWERPC_EXCP_601</name></expr>:</case>

            <expr_stmt pos:start="125:13" pos:end="125:39"><expr pos:start="125:13" pos:end="125:38"><name pos:start="125:13" pos:end="125:22">excp_model</name> <operator pos:start="125:24" pos:end="125:24">=</operator> <literal type="string" pos:start="125:26" pos:end="125:38">"PowerPC 601"</literal></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        <case pos:start="129:9" pos:end="129:30">case <expr pos:start="129:14" pos:end="129:29"><name pos:start="129:14" pos:end="129:29">POWERPC_EXCP_602</name></expr>:</case>

            <expr_stmt pos:start="131:13" pos:end="131:39"><expr pos:start="131:13" pos:end="131:38"><name pos:start="131:13" pos:end="131:22">excp_model</name> <operator pos:start="131:24" pos:end="131:24">=</operator> <literal type="string" pos:start="131:26" pos:end="131:38">"PowerPC 602"</literal></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:30">case <expr pos:start="135:14" pos:end="135:29"><name pos:start="135:14" pos:end="135:29">POWERPC_EXCP_603</name></expr>:</case>

            <expr_stmt pos:start="137:13" pos:end="137:39"><expr pos:start="137:13" pos:end="137:38"><name pos:start="137:13" pos:end="137:22">excp_model</name> <operator pos:start="137:24" pos:end="137:24">=</operator> <literal type="string" pos:start="137:26" pos:end="137:38">"PowerPC 603"</literal></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:31">case <expr pos:start="141:14" pos:end="141:30"><name pos:start="141:14" pos:end="141:30">POWERPC_EXCP_603E</name></expr>:</case>

            <expr_stmt pos:start="143:13" pos:end="143:40"><expr pos:start="143:13" pos:end="143:39"><name pos:start="143:13" pos:end="143:22">excp_model</name> <operator pos:start="143:24" pos:end="143:24">=</operator> <literal type="string" pos:start="143:26" pos:end="143:39">"PowerPC 603e"</literal></expr>;</expr_stmt>

            <break pos:start="145:13" pos:end="145:18">break;</break>

        <case pos:start="147:9" pos:end="147:30">case <expr pos:start="147:14" pos:end="147:29"><name pos:start="147:14" pos:end="147:29">POWERPC_EXCP_604</name></expr>:</case>

            <expr_stmt pos:start="149:13" pos:end="149:39"><expr pos:start="149:13" pos:end="149:38"><name pos:start="149:13" pos:end="149:22">excp_model</name> <operator pos:start="149:24" pos:end="149:24">=</operator> <literal type="string" pos:start="149:26" pos:end="149:38">"PowerPC 604"</literal></expr>;</expr_stmt>

            <break pos:start="151:13" pos:end="151:18">break;</break>

        <case pos:start="153:9" pos:end="153:30">case <expr pos:start="153:14" pos:end="153:29"><name pos:start="153:14" pos:end="153:29">POWERPC_EXCP_7x0</name></expr>:</case>

            <expr_stmt pos:start="155:13" pos:end="155:43"><expr pos:start="155:13" pos:end="155:42"><name pos:start="155:13" pos:end="155:22">excp_model</name> <operator pos:start="155:24" pos:end="155:24">=</operator> <literal type="string" pos:start="155:26" pos:end="155:42">"PowerPC 740/750"</literal></expr>;</expr_stmt>

            <break pos:start="157:13" pos:end="157:18">break;</break>

        <case pos:start="159:9" pos:end="159:30">case <expr pos:start="159:14" pos:end="159:29"><name pos:start="159:14" pos:end="159:29">POWERPC_EXCP_7x5</name></expr>:</case>

            <expr_stmt pos:start="161:13" pos:end="161:43"><expr pos:start="161:13" pos:end="161:42"><name pos:start="161:13" pos:end="161:22">excp_model</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <literal type="string" pos:start="161:26" pos:end="161:42">"PowerPC 745/755"</literal></expr>;</expr_stmt>

            <break pos:start="163:13" pos:end="163:18">break;</break>

        <case pos:start="165:9" pos:end="165:31">case <expr pos:start="165:14" pos:end="165:30"><name pos:start="165:14" pos:end="165:30">POWERPC_EXCP_74xx</name></expr>:</case>

            <expr_stmt pos:start="167:13" pos:end="167:40"><expr pos:start="167:13" pos:end="167:39"><name pos:start="167:13" pos:end="167:22">excp_model</name> <operator pos:start="167:24" pos:end="167:24">=</operator> <literal type="string" pos:start="167:26" pos:end="167:39">"PowerPC 74xx"</literal></expr>;</expr_stmt>

            <break pos:start="169:13" pos:end="169:18">break;</break>

        <case pos:start="171:9" pos:end="171:32">case <expr pos:start="171:14" pos:end="171:31"><name pos:start="171:14" pos:end="171:31">POWERPC_EXCP_BOOKE</name></expr>:</case>

            <expr_stmt pos:start="173:13" pos:end="173:41"><expr pos:start="173:13" pos:end="173:40"><name pos:start="173:13" pos:end="173:22">excp_model</name> <operator pos:start="173:24" pos:end="173:24">=</operator> <literal type="string" pos:start="173:26" pos:end="173:40">"PowerPC BookE"</literal></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="178:0">break;</break>

<cpp:if pos:start="177:1" pos:end="177:26">#<cpp:directive pos:start="177:2" pos:end="177:3">if</cpp:directive> <expr pos:start="177:5" pos:end="177:26"><call pos:start="177:5" pos:end="177:26"><name pos:start="177:5" pos:end="177:11">defined</name> <argument_list pos:start="177:13" pos:end="177:26">(<argument pos:start="177:14" pos:end="177:25"><expr pos:start="177:14" pos:end="177:25"><name pos:start="177:14" pos:end="177:25">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="179:9" pos:end="179:30">case <expr pos:start="179:14" pos:end="179:29"><name pos:start="179:14" pos:end="179:29">POWERPC_EXCP_970</name></expr>:</case>

            <expr_stmt pos:start="181:13" pos:end="181:39"><expr pos:start="181:13" pos:end="181:38"><name pos:start="181:13" pos:end="181:22">excp_model</name> <operator pos:start="181:24" pos:end="181:24">=</operator> <literal type="string" pos:start="181:26" pos:end="181:38">"PowerPC 970"</literal></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="186:0">break;</break>

<cpp:endif pos:start="185:1" pos:end="185:6">#<cpp:directive pos:start="185:2" pos:end="185:6">endif</cpp:directive></cpp:endif>

        <default pos:start="187:9" pos:end="187:16">default:</default>

            <expr_stmt pos:start="189:13" pos:end="189:46"><expr pos:start="189:13" pos:end="189:45"><name pos:start="189:13" pos:end="189:22">excp_model</name> <operator pos:start="189:24" pos:end="189:24">=</operator> <literal type="string" pos:start="189:26" pos:end="189:45">"Unknown or invalid"</literal></expr>;</expr_stmt>

            <break pos:start="191:13" pos:end="191:18">break;</break>

        </block_content>}</block></switch>

        <switch pos:start="195:9" pos:end="237:9">switch <condition pos:start="195:16" pos:end="195:31">(<expr pos:start="195:17" pos:end="195:30"><name pos:start="195:17" pos:end="195:30"><name pos:start="195:17" pos:end="195:19">env</name><operator pos:start="195:20" pos:end="195:21">-&gt;</operator><name pos:start="195:22" pos:end="195:30">bus_model</name></name></expr>)</condition> <block pos:start="195:33" pos:end="237:9">{<block_content pos:start="197:9" pos:end="235:18">

        <case pos:start="197:9" pos:end="197:33">case <expr pos:start="197:14" pos:end="197:32"><name pos:start="197:14" pos:end="197:32">PPC_FLAGS_INPUT_6xx</name></expr>:</case>

            <expr_stmt pos:start="199:13" pos:end="199:38"><expr pos:start="199:13" pos:end="199:37"><name pos:start="199:13" pos:end="199:21">bus_model</name> <operator pos:start="199:23" pos:end="199:23">=</operator> <literal type="string" pos:start="199:25" pos:end="199:37">"PowerPC 6xx"</literal></expr>;</expr_stmt>

            <break pos:start="201:13" pos:end="201:18">break;</break>

        <case pos:start="203:9" pos:end="203:35">case <expr pos:start="203:14" pos:end="203:34"><name pos:start="203:14" pos:end="203:34">PPC_FLAGS_INPUT_BookE</name></expr>:</case>

            <expr_stmt pos:start="205:13" pos:end="205:40"><expr pos:start="205:13" pos:end="205:39"><name pos:start="205:13" pos:end="205:21">bus_model</name> <operator pos:start="205:23" pos:end="205:23">=</operator> <literal type="string" pos:start="205:25" pos:end="205:39">"PowerPC BookE"</literal></expr>;</expr_stmt>

            <break pos:start="207:13" pos:end="207:18">break;</break>

        <case pos:start="209:9" pos:end="209:33">case <expr pos:start="209:14" pos:end="209:32"><name pos:start="209:14" pos:end="209:32">PPC_FLAGS_INPUT_405</name></expr>:</case>

            <expr_stmt pos:start="211:13" pos:end="211:38"><expr pos:start="211:13" pos:end="211:37"><name pos:start="211:13" pos:end="211:21">bus_model</name> <operator pos:start="211:23" pos:end="211:23">=</operator> <literal type="string" pos:start="211:25" pos:end="211:37">"PowerPC 405"</literal></expr>;</expr_stmt>

            <break pos:start="213:13" pos:end="213:18">break;</break>

        <case pos:start="215:9" pos:end="215:33">case <expr pos:start="215:14" pos:end="215:32"><name pos:start="215:14" pos:end="215:32">PPC_FLAGS_INPUT_401</name></expr>:</case>

            <expr_stmt pos:start="217:13" pos:end="217:42"><expr pos:start="217:13" pos:end="217:41"><name pos:start="217:13" pos:end="217:21">bus_model</name> <operator pos:start="217:23" pos:end="217:23">=</operator> <literal type="string" pos:start="217:25" pos:end="217:41">"PowerPC 401/403"</literal></expr>;</expr_stmt>

            <break pos:start="219:13" pos:end="222:0">break;</break>

<cpp:if pos:start="221:1" pos:end="221:26">#<cpp:directive pos:start="221:2" pos:end="221:3">if</cpp:directive> <expr pos:start="221:5" pos:end="221:26"><call pos:start="221:5" pos:end="221:26"><name pos:start="221:5" pos:end="221:11">defined</name> <argument_list pos:start="221:13" pos:end="221:26">(<argument pos:start="221:14" pos:end="221:25"><expr pos:start="221:14" pos:end="221:25"><name pos:start="221:14" pos:end="221:25">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="223:9" pos:end="223:33">case <expr pos:start="223:14" pos:end="223:32"><name pos:start="223:14" pos:end="223:32">PPC_FLAGS_INPUT_970</name></expr>:</case>

            <expr_stmt pos:start="225:13" pos:end="225:38"><expr pos:start="225:13" pos:end="225:37"><name pos:start="225:13" pos:end="225:21">bus_model</name> <operator pos:start="225:23" pos:end="225:23">=</operator> <literal type="string" pos:start="225:25" pos:end="225:37">"PowerPC 970"</literal></expr>;</expr_stmt>

            <break pos:start="227:13" pos:end="230:0">break;</break>

<cpp:endif pos:start="229:1" pos:end="229:6">#<cpp:directive pos:start="229:2" pos:end="229:6">endif</cpp:directive></cpp:endif>

        <default pos:start="231:9" pos:end="231:16">default:</default>

            <expr_stmt pos:start="233:13" pos:end="233:45"><expr pos:start="233:13" pos:end="233:44"><name pos:start="233:13" pos:end="233:21">bus_model</name> <operator pos:start="233:23" pos:end="233:23">=</operator> <literal type="string" pos:start="233:25" pos:end="233:44">"Unknown or invalid"</literal></expr>;</expr_stmt>

            <break pos:start="235:13" pos:end="235:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="239:9" pos:end="243:62"><expr pos:start="239:9" pos:end="243:61"><call pos:start="239:9" pos:end="243:61"><name pos:start="239:9" pos:end="239:14">printf</name><argument_list pos:start="239:15" pos:end="243:61">(<argument pos:start="239:16" pos:end="241:44"><expr pos:start="239:16" pos:end="241:44"><literal type="string" pos:start="239:16" pos:end="239:50">"PowerPC %-12s : PVR %08x MSR %016"</literal> <name pos:start="239:52" pos:end="239:57">PRIx64</name> <literal type="string" pos:start="239:59" pos:end="239:62">"\n"</literal>

               <literal type="string" pos:start="241:16" pos:end="241:44">"    MMU model        : %s\n"</literal></expr></argument>,

               <argument pos:start="243:16" pos:end="243:24"><expr pos:start="243:16" pos:end="243:24"><name pos:start="243:16" pos:end="243:24"><name pos:start="243:16" pos:end="243:18">def</name><operator pos:start="243:19" pos:end="243:20">-&gt;</operator><name pos:start="243:21" pos:end="243:24">name</name></name></expr></argument>, <argument pos:start="243:27" pos:end="243:34"><expr pos:start="243:27" pos:end="243:34"><name pos:start="243:27" pos:end="243:34"><name pos:start="243:27" pos:end="243:29">def</name><operator pos:start="243:30" pos:end="243:31">-&gt;</operator><name pos:start="243:32" pos:end="243:34">pvr</name></name></expr></argument>, <argument pos:start="243:37" pos:end="243:49"><expr pos:start="243:37" pos:end="243:49"><name pos:start="243:37" pos:end="243:49"><name pos:start="243:37" pos:end="243:39">def</name><operator pos:start="243:40" pos:end="243:41">-&gt;</operator><name pos:start="243:42" pos:end="243:49">msr_mask</name></name></expr></argument>, <argument pos:start="243:52" pos:end="243:60"><expr pos:start="243:52" pos:end="243:60"><name pos:start="243:52" pos:end="243:60">mmu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="245:9" pos:end="253:9"><if pos:start="245:9" pos:end="253:9">if <condition pos:start="245:12" pos:end="245:29">(<expr pos:start="245:13" pos:end="245:28"><name pos:start="245:13" pos:end="245:20"><name pos:start="245:13" pos:end="245:15">env</name><operator pos:start="245:16" pos:end="245:17">-&gt;</operator><name pos:start="245:18" pos:end="245:20">tlb</name></name> <operator pos:start="245:22" pos:end="245:23">!=</operator> <name pos:start="245:25" pos:end="245:28">NULL</name></expr>)</condition> <block pos:start="245:31" pos:end="253:9">{<block_content pos:start="247:13" pos:end="251:33">

            <expr_stmt pos:start="247:13" pos:end="251:33"><expr pos:start="247:13" pos:end="251:32"><call pos:start="247:13" pos:end="251:32"><name pos:start="247:13" pos:end="247:18">printf</name><argument_list pos:start="247:19" pos:end="251:32">(<argument pos:start="247:20" pos:end="247:66"><expr pos:start="247:20" pos:end="247:66"><literal type="string" pos:start="247:20" pos:end="247:66">"                       %d %s TLB in %d ways\n"</literal></expr></argument>,

                   <argument pos:start="249:20" pos:end="249:30"><expr pos:start="249:20" pos:end="249:30"><name pos:start="249:20" pos:end="249:30"><name pos:start="249:20" pos:end="249:22">env</name><operator pos:start="249:23" pos:end="249:24">-&gt;</operator><name pos:start="249:25" pos:end="249:30">nb_tlb</name></name></expr></argument>, <argument pos:start="249:33" pos:end="249:68"><expr pos:start="249:33" pos:end="249:68"><ternary pos:start="249:33" pos:end="249:68"><condition pos:start="249:33" pos:end="249:46"><expr pos:start="249:33" pos:end="249:44"><name pos:start="249:33" pos:end="249:44"><name pos:start="249:33" pos:end="249:35">env</name><operator pos:start="249:36" pos:end="249:37">-&gt;</operator><name pos:start="249:38" pos:end="249:44">id_tlbs</name></name></expr> ?</condition><then pos:start="249:48" pos:end="249:57"> <expr pos:start="249:48" pos:end="249:57"><literal type="string" pos:start="249:48" pos:end="249:57">"splitted"</literal></expr> </then><else pos:start="249:59" pos:end="249:68">: <expr pos:start="249:61" pos:end="249:68"><literal type="string" pos:start="249:61" pos:end="249:68">"merged"</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="251:20" pos:end="251:31"><expr pos:start="251:20" pos:end="251:31"><name pos:start="251:20" pos:end="251:31"><name pos:start="251:20" pos:end="251:22">env</name><operator pos:start="251:23" pos:end="251:24">-&gt;</operator><name pos:start="251:25" pos:end="251:31">nb_ways</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="255:9" pos:end="259:38"><expr pos:start="255:9" pos:end="259:37"><call pos:start="255:9" pos:end="259:37"><name pos:start="255:9" pos:end="255:14">printf</name><argument_list pos:start="255:15" pos:end="259:37">(<argument pos:start="255:16" pos:end="257:44"><expr pos:start="255:16" pos:end="257:44"><literal type="string" pos:start="255:16" pos:end="255:44">"    Exceptions model : %s\n"</literal>

               <literal type="string" pos:start="257:16" pos:end="257:44">"    Bus model        : %s\n"</literal></expr></argument>,

               <argument pos:start="259:16" pos:end="259:25"><expr pos:start="259:16" pos:end="259:25"><name pos:start="259:16" pos:end="259:25">excp_model</name></expr></argument>, <argument pos:start="259:28" pos:end="259:36"><expr pos:start="259:28" pos:end="259:36"><name pos:start="259:28" pos:end="259:36">bus_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="263:5" pos:end="263:24"><expr pos:start="263:5" pos:end="263:23"><call pos:start="263:5" pos:end="263:23"><name pos:start="263:5" pos:end="263:18">dump_ppc_insns</name><argument_list pos:start="263:19" pos:end="263:23">(<argument pos:start="263:20" pos:end="263:22"><expr pos:start="263:20" pos:end="263:22"><name pos:start="263:20" pos:end="263:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:23"><expr pos:start="265:5" pos:end="265:22"><call pos:start="265:5" pos:end="265:22"><name pos:start="265:5" pos:end="265:17">dump_ppc_sprs</name><argument_list pos:start="265:18" pos:end="265:22">(<argument pos:start="265:19" pos:end="265:21"><expr pos:start="265:19" pos:end="265:21"><name pos:start="265:19" pos:end="265:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="270:0"><expr pos:start="267:5" pos:end="267:18"><call pos:start="267:5" pos:end="267:18"><name pos:start="267:5" pos:end="267:10">fflush</name><argument_list pos:start="267:11" pos:end="267:18">(<argument pos:start="267:12" pos:end="267:17"><expr pos:start="267:12" pos:end="267:17"><name pos:start="267:12" pos:end="267:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="269:1" pos:end="269:6">#<cpp:directive pos:start="269:2" pos:end="269:6">endif</cpp:directive></cpp:endif>



    <return pos:start="273:5" pos:end="273:13">return <expr pos:start="273:12" pos:end="273:12"><literal type="number" pos:start="273:12" pos:end="273:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
