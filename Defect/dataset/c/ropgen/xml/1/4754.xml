<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4754.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">qtrle_decode_16bpp</name><parameter_list pos:start="1:31" pos:end="1:97">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:43">QtrleContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:62">stream_ptr</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:75"><decl pos:start="1:65" pos:end="1:75"><type pos:start="1:65" pos:end="1:75"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:75">row_ptr</name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:96"><decl pos:start="1:78" pos:end="1:96"><type pos:start="1:78" pos:end="1:96"><name pos:start="1:78" pos:end="1:80">int</name></type> <name pos:start="1:82" pos:end="1:96">lines_to_change</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">rle_code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">pixel_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">row_inc</name> <init pos:start="9:17" pos:end="9:38">= <expr pos:start="9:19" pos:end="9:38"><name pos:start="9:19" pos:end="9:38"><name pos:start="9:19" pos:end="9:19">s</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:26">frame</name><operator pos:start="9:27" pos:end="9:27">.</operator><name pos:start="9:28" pos:end="9:35">linesize</name><index pos:start="9:36" pos:end="9:38">[<expr pos:start="9:37" pos:end="9:37"><literal type="number" pos:start="9:37" pos:end="9:37">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:18">short</name></type> <name pos:start="11:20" pos:end="11:24">rgb16</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">rgb</name> <init pos:start="13:24" pos:end="13:41">= <expr pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:26">s</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:33">frame</name><operator pos:start="13:34" pos:end="13:34">.</operator><name pos:start="13:35" pos:end="13:38">data</name><index pos:start="13:39" pos:end="13:41">[<expr pos:start="13:40" pos:end="13:40"><literal type="number" pos:start="13:40" pos:end="13:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:62"><decl pos:start="15:5" pos:end="15:61"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">pixel_limit</name> <init pos:start="15:21" pos:end="15:61">= <expr pos:start="15:23" pos:end="15:61"><name pos:start="15:23" pos:end="15:42"><name pos:start="15:23" pos:end="15:23">s</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:30">frame</name><operator pos:start="15:31" pos:end="15:31">.</operator><name pos:start="15:32" pos:end="15:39">linesize</name><index pos:start="15:40" pos:end="15:42">[<expr pos:start="15:41" pos:end="15:41"><literal type="number" pos:start="15:41" pos:end="15:41">0</literal></expr>]</index></name> <operator pos:start="15:44" pos:end="15:44">*</operator> <name pos:start="15:46" pos:end="15:61"><name pos:start="15:46" pos:end="15:46">s</name><operator pos:start="15:47" pos:end="15:48">-&gt;</operator><name pos:start="15:49" pos:end="15:53">avctx</name><operator pos:start="15:54" pos:end="15:55">-&gt;</operator><name pos:start="15:56" pos:end="15:61">height</name></name></expr></init></decl>;</decl_stmt>



    <while pos:start="19:5" pos:end="93:5">while <condition pos:start="19:11" pos:end="19:29">(<expr pos:start="19:12" pos:end="19:28"><name pos:start="19:12" pos:end="19:26">lines_to_change</name><operator pos:start="19:27" pos:end="19:28">--</operator></expr>)</condition> <block pos:start="19:31" pos:end="93:5">{<block_content pos:start="21:9" pos:end="91:27">

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><call pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:24">CHECK_STREAM_PTR</name><argument_list pos:start="21:25" pos:end="21:27">(<argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:61"><expr pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:17">pixel_ptr</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:27">row_ptr</name> <operator pos:start="23:29" pos:end="23:29">+</operator> <operator pos:start="23:31" pos:end="23:31">(</operator><name pos:start="23:32" pos:end="23:51"><name pos:start="23:32" pos:end="23:32">s</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:37">buf</name><index pos:start="23:38" pos:end="23:51">[<expr pos:start="23:39" pos:end="23:50"><name pos:start="23:39" pos:end="23:48">stream_ptr</name><operator pos:start="23:49" pos:end="23:50">++</operator></expr>]</index></name> <operator pos:start="23:53" pos:end="23:53">-</operator> <literal type="number" pos:start="23:55" pos:end="23:55">1</literal><operator pos:start="23:56" pos:end="23:56">)</operator> <operator pos:start="23:58" pos:end="23:58">*</operator> <literal type="number" pos:start="23:60" pos:end="23:60">2</literal></expr>;</expr_stmt>



        <while pos:start="27:9" pos:end="89:9">while <condition pos:start="27:15" pos:end="27:68">(<expr pos:start="27:16" pos:end="27:67"><operator pos:start="27:16" pos:end="27:16">(</operator><name pos:start="27:17" pos:end="27:24">rle_code</name> <operator pos:start="27:26" pos:end="27:26">=</operator> <operator pos:start="27:28" pos:end="27:28">(</operator><name pos:start="27:29" pos:end="27:34">signed</name> <name pos:start="27:36" pos:end="27:39">char</name><operator pos:start="27:40" pos:end="27:40">)</operator><name pos:start="27:41" pos:end="27:60"><name pos:start="27:41" pos:end="27:41">s</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:46">buf</name><index pos:start="27:47" pos:end="27:60">[<expr pos:start="27:48" pos:end="27:59"><name pos:start="27:48" pos:end="27:57">stream_ptr</name><operator pos:start="27:58" pos:end="27:59">++</operator></expr>]</index></name><operator pos:start="27:61" pos:end="27:61">)</operator> <operator pos:start="27:63" pos:end="27:64">!=</operator> <operator pos:start="27:66" pos:end="27:66">-</operator><literal type="number" pos:start="27:67" pos:end="27:67">1</literal></expr>)</condition> <block pos:start="27:70" pos:end="89:9">{<block_content pos:start="29:13" pos:end="87:13">

            <if_stmt pos:start="29:13" pos:end="87:13"><if pos:start="29:13" pos:end="39:13">if <condition pos:start="29:16" pos:end="29:30">(<expr pos:start="29:17" pos:end="29:29"><name pos:start="29:17" pos:end="29:24">rle_code</name> <operator pos:start="29:26" pos:end="29:27">==</operator> <literal type="number" pos:start="29:29" pos:end="29:29">0</literal></expr>)</condition> <block pos:start="29:32" pos:end="39:13">{<block_content pos:start="33:17" pos:end="37:35">

                <comment type="block" pos:start="31:17" pos:end="31:61">/* there's another skip code in the stream */</comment>

                <expr_stmt pos:start="33:17" pos:end="33:36"><expr pos:start="33:17" pos:end="33:35"><call pos:start="33:17" pos:end="33:35"><name pos:start="33:17" pos:end="33:32">CHECK_STREAM_PTR</name><argument_list pos:start="33:33" pos:end="33:35">(<argument pos:start="33:34" pos:end="33:34"><expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:60"><expr pos:start="35:17" pos:end="35:59"><name pos:start="35:17" pos:end="35:25">pixel_ptr</name> <operator pos:start="35:27" pos:end="35:28">+=</operator> <operator pos:start="35:30" pos:end="35:30">(</operator><name pos:start="35:31" pos:end="35:50"><name pos:start="35:31" pos:end="35:31">s</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:36">buf</name><index pos:start="35:37" pos:end="35:50">[<expr pos:start="35:38" pos:end="35:49"><name pos:start="35:38" pos:end="35:47">stream_ptr</name><operator pos:start="35:48" pos:end="35:49">++</operator></expr>]</index></name> <operator pos:start="35:52" pos:end="35:52">-</operator> <literal type="number" pos:start="35:54" pos:end="35:54">1</literal><operator pos:start="35:55" pos:end="35:55">)</operator> <operator pos:start="35:57" pos:end="35:57">*</operator> <literal type="number" pos:start="35:59" pos:end="35:59">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:35"><expr pos:start="37:17" pos:end="37:34"><call pos:start="37:17" pos:end="37:34"><name pos:start="37:17" pos:end="37:31">CHECK_PIXEL_PTR</name><argument_list pos:start="37:32" pos:end="37:34">(<argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="37:38" pos:end="37:74">/* make sure pixel_ptr is positive */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="39:15" pos:end="65:13">else if <condition pos:start="39:23" pos:end="39:36">(<expr pos:start="39:24" pos:end="39:35"><name pos:start="39:24" pos:end="39:31">rle_code</name> <operator pos:start="39:33" pos:end="39:33">&lt;</operator> <literal type="number" pos:start="39:35" pos:end="39:35">0</literal></expr>)</condition> <block pos:start="39:38" pos:end="65:13">{<block_content pos:start="43:17" pos:end="63:17">

                <comment type="block" pos:start="41:17" pos:end="41:48">/* decode the run length code */</comment>

                <expr_stmt pos:start="43:17" pos:end="43:37"><expr pos:start="43:17" pos:end="43:36"><name pos:start="43:17" pos:end="43:24">rle_code</name> <operator pos:start="43:26" pos:end="43:26">=</operator> <operator pos:start="43:28" pos:end="43:28">-</operator><name pos:start="43:29" pos:end="43:36">rle_code</name></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:36"><expr pos:start="45:17" pos:end="45:35"><call pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:32">CHECK_STREAM_PTR</name><argument_list pos:start="45:33" pos:end="45:35">(<argument pos:start="45:34" pos:end="45:34"><expr pos:start="45:34" pos:end="45:34"><literal type="number" pos:start="45:34" pos:end="45:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:53"><expr pos:start="47:17" pos:end="47:52"><name pos:start="47:17" pos:end="47:21">rgb16</name> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="47:52"><name pos:start="47:25" pos:end="47:31">AV_RB16</name><argument_list pos:start="47:32" pos:end="47:52">(<argument pos:start="47:33" pos:end="47:51"><expr pos:start="47:33" pos:end="47:51"><operator pos:start="47:33" pos:end="47:33">&amp;</operator><name pos:start="47:34" pos:end="47:51"><name pos:start="47:34" pos:end="47:34">s</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:39">buf</name><index pos:start="47:40" pos:end="47:51">[<expr pos:start="47:41" pos:end="47:50"><name pos:start="47:41" pos:end="47:50">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:32"><expr pos:start="49:17" pos:end="49:31"><name pos:start="49:17" pos:end="49:26">stream_ptr</name> <operator pos:start="49:28" pos:end="49:29">+=</operator> <literal type="number" pos:start="49:31" pos:end="49:31">2</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="53:17" pos:end="53:46"><expr pos:start="53:17" pos:end="53:45"><call pos:start="53:17" pos:end="53:45"><name pos:start="53:17" pos:end="53:31">CHECK_PIXEL_PTR</name><argument_list pos:start="53:32" pos:end="53:45">(<argument pos:start="53:33" pos:end="53:44"><expr pos:start="53:33" pos:end="53:44"><name pos:start="53:33" pos:end="53:40">rle_code</name> <operator pos:start="53:42" pos:end="53:42">*</operator> <literal type="number" pos:start="53:44" pos:end="53:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <while pos:start="57:17" pos:end="63:17">while <condition pos:start="57:23" pos:end="57:34">(<expr pos:start="57:24" pos:end="57:33"><name pos:start="57:24" pos:end="57:31">rle_code</name><operator pos:start="57:32" pos:end="57:33">--</operator></expr>)</condition> <block pos:start="57:36" pos:end="63:17">{<block_content pos:start="59:21" pos:end="61:35">

                    <expr_stmt pos:start="59:21" pos:end="59:65"><expr pos:start="59:21" pos:end="59:64"><operator pos:start="59:21" pos:end="59:21">*</operator><operator pos:start="59:22" pos:end="59:22">(</operator><name pos:start="59:23" pos:end="59:30">unsigned</name> <name pos:start="59:32" pos:end="59:36">short</name> <operator pos:start="59:38" pos:end="59:38">*</operator><operator pos:start="59:39" pos:end="59:39">)</operator><operator pos:start="59:40" pos:end="59:40">(</operator><operator pos:start="59:41" pos:end="59:41">&amp;</operator><name pos:start="59:42" pos:end="59:55"><name pos:start="59:42" pos:end="59:44">rgb</name><index pos:start="59:45" pos:end="59:55">[<expr pos:start="59:46" pos:end="59:54"><name pos:start="59:46" pos:end="59:54">pixel_ptr</name></expr>]</index></name><operator pos:start="59:56" pos:end="59:56">)</operator> <operator pos:start="59:58" pos:end="59:58">=</operator> <name pos:start="59:60" pos:end="59:64">rgb16</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:35"><expr pos:start="61:21" pos:end="61:34"><name pos:start="61:21" pos:end="61:29">pixel_ptr</name> <operator pos:start="61:31" pos:end="61:32">+=</operator> <literal type="number" pos:start="61:34" pos:end="61:34">2</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if> <else pos:start="65:15" pos:end="87:13">else <block pos:start="65:20" pos:end="87:13">{<block_content pos:start="67:17" pos:end="85:17">

                <expr_stmt pos:start="67:17" pos:end="67:47"><expr pos:start="67:17" pos:end="67:46"><call pos:start="67:17" pos:end="67:46"><name pos:start="67:17" pos:end="67:32">CHECK_STREAM_PTR</name><argument_list pos:start="67:33" pos:end="67:46">(<argument pos:start="67:34" pos:end="67:45"><expr pos:start="67:34" pos:end="67:45"><name pos:start="67:34" pos:end="67:41">rle_code</name> <operator pos:start="67:43" pos:end="67:43">*</operator> <literal type="number" pos:start="67:45" pos:end="67:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:46"><expr pos:start="69:17" pos:end="69:45"><call pos:start="69:17" pos:end="69:45"><name pos:start="69:17" pos:end="69:31">CHECK_PIXEL_PTR</name><argument_list pos:start="69:32" pos:end="69:45">(<argument pos:start="69:33" pos:end="69:44"><expr pos:start="69:33" pos:end="69:44"><name pos:start="69:33" pos:end="69:40">rle_code</name> <operator pos:start="69:42" pos:end="69:42">*</operator> <literal type="number" pos:start="69:44" pos:end="69:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="73:17" pos:end="73:52">/* copy pixels directly to output */</comment>

                <while pos:start="75:17" pos:end="85:17">while <condition pos:start="75:23" pos:end="75:34">(<expr pos:start="75:24" pos:end="75:33"><name pos:start="75:24" pos:end="75:31">rle_code</name><operator pos:start="75:32" pos:end="75:33">--</operator></expr>)</condition> <block pos:start="75:36" pos:end="85:17">{<block_content pos:start="77:21" pos:end="83:35">

                    <expr_stmt pos:start="77:21" pos:end="77:57"><expr pos:start="77:21" pos:end="77:56"><name pos:start="77:21" pos:end="77:25">rgb16</name> <operator pos:start="77:27" pos:end="77:27">=</operator> <call pos:start="77:29" pos:end="77:56"><name pos:start="77:29" pos:end="77:35">AV_RB16</name><argument_list pos:start="77:36" pos:end="77:56">(<argument pos:start="77:37" pos:end="77:55"><expr pos:start="77:37" pos:end="77:55"><operator pos:start="77:37" pos:end="77:37">&amp;</operator><name pos:start="77:38" pos:end="77:55"><name pos:start="77:38" pos:end="77:38">s</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:43">buf</name><index pos:start="77:44" pos:end="77:55">[<expr pos:start="77:45" pos:end="77:54"><name pos:start="77:45" pos:end="77:54">stream_ptr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:36"><expr pos:start="79:21" pos:end="79:35"><name pos:start="79:21" pos:end="79:30">stream_ptr</name> <operator pos:start="79:32" pos:end="79:33">+=</operator> <literal type="number" pos:start="79:35" pos:end="79:35">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:65"><expr pos:start="81:21" pos:end="81:64"><operator pos:start="81:21" pos:end="81:21">*</operator><operator pos:start="81:22" pos:end="81:22">(</operator><name pos:start="81:23" pos:end="81:30">unsigned</name> <name pos:start="81:32" pos:end="81:36">short</name> <operator pos:start="81:38" pos:end="81:38">*</operator><operator pos:start="81:39" pos:end="81:39">)</operator><operator pos:start="81:40" pos:end="81:40">(</operator><operator pos:start="81:41" pos:end="81:41">&amp;</operator><name pos:start="81:42" pos:end="81:55"><name pos:start="81:42" pos:end="81:44">rgb</name><index pos:start="81:45" pos:end="81:55">[<expr pos:start="81:46" pos:end="81:54"><name pos:start="81:46" pos:end="81:54">pixel_ptr</name></expr>]</index></name><operator pos:start="81:56" pos:end="81:56">)</operator> <operator pos:start="81:58" pos:end="81:58">=</operator> <name pos:start="81:60" pos:end="81:64">rgb16</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:35"><expr pos:start="83:21" pos:end="83:34"><name pos:start="83:21" pos:end="83:29">pixel_ptr</name> <operator pos:start="83:31" pos:end="83:32">+=</operator> <literal type="number" pos:start="83:34" pos:end="83:34">2</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="91:9" pos:end="91:27"><expr pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:15">row_ptr</name> <operator pos:start="91:17" pos:end="91:18">+=</operator> <name pos:start="91:20" pos:end="91:26">row_inc</name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
