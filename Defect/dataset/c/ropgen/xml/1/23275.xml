<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23275.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">I2CAdapter</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:27">omap_i2c_create</name><parameter_list pos:start="1:28" pos:end="1:42">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:36"><name pos:start="1:29" pos:end="1:36">uint64_t</name></type> <name pos:start="1:38" pos:end="1:41">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">OMAPI2C</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:14">s</name> <init pos:start="5:16" pos:end="5:38">= <expr pos:start="5:18" pos:end="5:38"><call pos:start="5:18" pos:end="5:38"><name pos:start="5:18" pos:end="5:26">g_malloc0</name><argument_list pos:start="5:27" pos:end="5:38">(<argument pos:start="5:28" pos:end="5:37"><expr pos:start="5:28" pos:end="5:37"><sizeof pos:start="5:28" pos:end="5:37">sizeof<argument_list pos:start="5:34" pos:end="5:37">(<argument pos:start="5:35" pos:end="5:36"><expr pos:start="5:35" pos:end="5:36"><operator pos:start="5:35" pos:end="5:35">*</operator><name pos:start="5:36" pos:end="5:36">s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">I2CAdapter</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">i2c</name> <init pos:start="7:21" pos:end="7:37">= <expr pos:start="7:23" pos:end="7:37"><operator pos:start="7:23" pos:end="7:23">(</operator><name pos:start="7:24" pos:end="7:33">I2CAdapter</name> <operator pos:start="7:35" pos:end="7:35">*</operator><operator pos:start="7:36" pos:end="7:36">)</operator><name pos:start="7:37" pos:end="7:37">s</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:17">data</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:19"><expr pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:11">addr</name></name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:18">addr</name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:7">i2c</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:13">send</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:29">omap_i2c_send</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:7">i2c</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:13">recv</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:29">omap_i2c_recv</name></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:66">/* verify the mmio address by looking for a known signature */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><call pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:11">memread</name><argument_list pos:start="25:12" pos:end="25:42">(<argument pos:start="25:13" pos:end="25:31"><expr pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:16">addr</name> <operator pos:start="25:18" pos:end="25:18">+</operator> <name pos:start="25:20" pos:end="25:31">OMAP_I2C_REV</name></expr></argument>, <argument pos:start="25:34" pos:end="25:38"><expr pos:start="25:34" pos:end="25:38"><operator pos:start="25:34" pos:end="25:34">&amp;</operator><name pos:start="25:35" pos:end="25:38">data</name></expr></argument>, <argument pos:start="25:41" pos:end="25:41"><expr pos:start="25:41" pos:end="25:41"><literal type="number" pos:start="25:41" pos:end="25:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><call pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:19">g_assert_cmphex</name><argument_list pos:start="27:20" pos:end="27:35">(<argument pos:start="27:21" pos:end="27:24"><expr pos:start="27:21" pos:end="27:24"><name pos:start="27:21" pos:end="27:24">data</name></expr></argument>, <argument pos:start="27:27" pos:end="27:28"><expr pos:start="27:27" pos:end="27:28"><operator pos:start="27:27" pos:end="27:28">==</operator></expr></argument>, <argument pos:start="27:31" pos:end="27:34"><expr pos:start="27:31" pos:end="27:34"><literal type="number" pos:start="27:31" pos:end="27:34">0x34</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">i2c</name></expr>;</return>

</block_content>}</block></function>
</unit>
