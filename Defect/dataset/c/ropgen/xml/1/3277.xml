<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3277.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:13">SocketAddress</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type><name pos:start="1:16" pos:end="1:37">socket_address_flatten</name><parameter_list pos:start="1:38" pos:end="1:71">(<parameter pos:start="1:39" pos:end="1:70"><decl pos:start="1:39" pos:end="1:70"><type pos:start="1:39" pos:end="1:59"><name pos:start="1:39" pos:end="1:57">SocketAddressLegacy</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:70">addr_legacy</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:16">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SocketAddress</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:23">addr</name> <init pos:start="5:25" pos:end="5:49">= <expr pos:start="5:27" pos:end="5:49"><call pos:start="5:27" pos:end="5:49"><name pos:start="5:27" pos:end="5:31">g_new</name><argument_list pos:start="5:32" pos:end="5:49">(<argument pos:start="5:33" pos:end="5:45"><expr pos:start="5:33" pos:end="5:45"><name pos:start="5:33" pos:end="5:45">SocketAddress</name></expr></argument>, <argument pos:start="5:48" pos:end="5:48"><expr pos:start="5:48" pos:end="5:48"><literal type="number" pos:start="5:48" pos:end="5:48">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:21">(<expr pos:start="9:9" pos:end="9:20"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:20">addr_legacy</name></expr>)</condition> <block pos:start="9:23" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:20">

        <return pos:start="11:9" pos:end="11:20">return <expr pos:start="11:16" pos:end="11:19"><name pos:start="11:16" pos:end="11:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="17:5" pos:end="61:5">switch <condition pos:start="17:12" pos:end="17:30">(<expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:23">addr_legacy</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:29">type</name></name></expr>)</condition> <block pos:start="17:32" pos:end="61:5">{<block_content pos:start="19:5" pos:end="59:16">

    <case pos:start="19:5" pos:end="19:41">case <expr pos:start="19:10" pos:end="19:40"><name pos:start="19:10" pos:end="19:40">SOCKET_ADDRESS_LEGACY_KIND_INET</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:46"><expr pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:12">addr</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:18">type</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:45">SOCKET_ADDRESS_TYPE_INET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="25:53"><expr pos:start="23:9" pos:end="25:52"><call pos:start="23:9" pos:end="25:52"><name pos:start="23:9" pos:end="23:26">QAPI_CLONE_MEMBERS</name><argument_list pos:start="23:27" pos:end="25:52">(<argument pos:start="23:28" pos:end="23:44"><expr pos:start="23:28" pos:end="23:44"><name pos:start="23:28" pos:end="23:44">InetSocketAddress</name></expr></argument>, <argument pos:start="23:47" pos:end="23:59"><expr pos:start="23:47" pos:end="23:59"><operator pos:start="23:47" pos:end="23:47">&amp;</operator><name pos:start="23:48" pos:end="23:59"><name pos:start="23:48" pos:end="23:51">addr</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:54">u</name><operator pos:start="23:55" pos:end="23:55">.</operator><name pos:start="23:56" pos:end="23:59">inet</name></name></expr></argument>,

                           <argument pos:start="25:28" pos:end="25:51"><expr pos:start="25:28" pos:end="25:51"><name pos:start="25:28" pos:end="25:51"><name pos:start="25:28" pos:end="25:38">addr_legacy</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:41">u</name><operator pos:start="25:42" pos:end="25:42">.</operator><name pos:start="25:43" pos:end="25:46">inet</name><operator pos:start="25:47" pos:end="25:47">.</operator><name pos:start="25:48" pos:end="25:51">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:41">case <expr pos:start="29:10" pos:end="29:40"><name pos:start="29:10" pos:end="29:40">SOCKET_ADDRESS_LEGACY_KIND_UNIX</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:46"><expr pos:start="31:9" pos:end="31:45"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:12">addr</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:18">type</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:45">SOCKET_ADDRESS_TYPE_UNIX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="35:55"><expr pos:start="33:9" pos:end="35:54"><call pos:start="33:9" pos:end="35:54"><name pos:start="33:9" pos:end="33:26">QAPI_CLONE_MEMBERS</name><argument_list pos:start="33:27" pos:end="35:54">(<argument pos:start="33:28" pos:end="33:44"><expr pos:start="33:28" pos:end="33:44"><name pos:start="33:28" pos:end="33:44">UnixSocketAddress</name></expr></argument>, <argument pos:start="33:47" pos:end="33:61"><expr pos:start="33:47" pos:end="33:61"><operator pos:start="33:47" pos:end="33:47">&amp;</operator><name pos:start="33:48" pos:end="33:61"><name pos:start="33:48" pos:end="33:51">addr</name><operator pos:start="33:52" pos:end="33:53">-&gt;</operator><name pos:start="33:54" pos:end="33:54">u</name><operator pos:start="33:55" pos:end="33:55">.</operator><name pos:start="33:56" pos:end="33:61">q_unix</name></name></expr></argument>,

                           <argument pos:start="35:28" pos:end="35:53"><expr pos:start="35:28" pos:end="35:53"><name pos:start="35:28" pos:end="35:53"><name pos:start="35:28" pos:end="35:38">addr_legacy</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:41">u</name><operator pos:start="35:42" pos:end="35:42">.</operator><name pos:start="35:43" pos:end="35:48">q_unix</name><operator pos:start="35:49" pos:end="35:49">.</operator><name pos:start="35:50" pos:end="35:53">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:42">case <expr pos:start="39:10" pos:end="39:41"><name pos:start="39:10" pos:end="39:41">SOCKET_ADDRESS_LEGACY_KIND_VSOCK</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:47"><expr pos:start="41:9" pos:end="41:46"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:12">addr</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:18">type</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:46">SOCKET_ADDRESS_TYPE_VSOCK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="45:54"><expr pos:start="43:9" pos:end="45:53"><call pos:start="43:9" pos:end="45:53"><name pos:start="43:9" pos:end="43:26">QAPI_CLONE_MEMBERS</name><argument_list pos:start="43:27" pos:end="45:53">(<argument pos:start="43:28" pos:end="43:45"><expr pos:start="43:28" pos:end="43:45"><name pos:start="43:28" pos:end="43:45">VsockSocketAddress</name></expr></argument>, <argument pos:start="43:48" pos:end="43:61"><expr pos:start="43:48" pos:end="43:61"><operator pos:start="43:48" pos:end="43:48">&amp;</operator><name pos:start="43:49" pos:end="43:61"><name pos:start="43:49" pos:end="43:52">addr</name><operator pos:start="43:53" pos:end="43:54">-&gt;</operator><name pos:start="43:55" pos:end="43:55">u</name><operator pos:start="43:56" pos:end="43:56">.</operator><name pos:start="43:57" pos:end="43:61">vsock</name></name></expr></argument>,

                           <argument pos:start="45:28" pos:end="45:52"><expr pos:start="45:28" pos:end="45:52"><name pos:start="45:28" pos:end="45:52"><name pos:start="45:28" pos:end="45:38">addr_legacy</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:41">u</name><operator pos:start="45:42" pos:end="45:42">.</operator><name pos:start="45:43" pos:end="45:47">vsock</name><operator pos:start="45:48" pos:end="45:48">.</operator><name pos:start="45:49" pos:end="45:52">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:39">case <expr pos:start="49:10" pos:end="49:38"><name pos:start="49:10" pos:end="49:38">SOCKET_ADDRESS_LEGACY_KIND_FD</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:44"><expr pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:12">addr</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:18">type</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:43">SOCKET_ADDRESS_TYPE_FD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:72"><expr pos:start="53:9" pos:end="53:71"><call pos:start="53:9" pos:end="53:71"><name pos:start="53:9" pos:end="53:26">QAPI_CLONE_MEMBERS</name><argument_list pos:start="53:27" pos:end="53:71">(<argument pos:start="53:28" pos:end="53:33"><expr pos:start="53:28" pos:end="53:33"><name pos:start="53:28" pos:end="53:33">String</name></expr></argument>, <argument pos:start="53:36" pos:end="53:46"><expr pos:start="53:36" pos:end="53:46"><operator pos:start="53:36" pos:end="53:36">&amp;</operator><name pos:start="53:37" pos:end="53:46"><name pos:start="53:37" pos:end="53:40">addr</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:43">u</name><operator pos:start="53:44" pos:end="53:44">.</operator><name pos:start="53:45" pos:end="53:46">fd</name></name></expr></argument>, <argument pos:start="53:49" pos:end="53:70"><expr pos:start="53:49" pos:end="53:70"><name pos:start="53:49" pos:end="53:70"><name pos:start="53:49" pos:end="53:59">addr_legacy</name><operator pos:start="53:60" pos:end="53:61">-&gt;</operator><name pos:start="53:62" pos:end="53:62">u</name><operator pos:start="53:63" pos:end="53:63">.</operator><name pos:start="53:64" pos:end="53:65">fd</name><operator pos:start="53:66" pos:end="53:66">.</operator><name pos:start="53:67" pos:end="53:70">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <default pos:start="57:5" pos:end="57:12">default:</default>

        <expr_stmt pos:start="59:9" pos:end="59:16"><expr pos:start="59:9" pos:end="59:15"><call pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:13">abort</name><argument_list pos:start="59:14" pos:end="59:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <return pos:start="65:5" pos:end="65:16">return <expr pos:start="65:12" pos:end="65:15"><name pos:start="65:12" pos:end="65:15">addr</name></expr>;</return>

</block_content>}</block></function>
</unit>
