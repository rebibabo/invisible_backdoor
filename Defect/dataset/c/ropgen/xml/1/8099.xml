<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8099.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">mch_update_smram</name><parameter_list pos:start="1:29" pos:end="1:46">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">MCHPCIState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">mch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:39">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">pd</name> <init pos:start="5:19" pos:end="5:35">= <expr pos:start="5:21" pos:end="5:35"><call pos:start="5:21" pos:end="5:35"><name pos:start="5:21" pos:end="5:30">PCI_DEVICE</name><argument_list pos:start="5:31" pos:end="5:35">(<argument pos:start="5:32" pos:end="5:34"><expr pos:start="5:32" pos:end="5:34"><name pos:start="5:32" pos:end="5:34">mch</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:93"><decl pos:start="7:5" pos:end="7:92"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:17">h_smrame</name> <init pos:start="7:19" pos:end="7:92">= <expr pos:start="7:21" pos:end="7:92"><operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:56"><name pos:start="7:22" pos:end="7:23">pd</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:31">config</name><index pos:start="7:32" pos:end="7:56">[<expr pos:start="7:33" pos:end="7:55"><name pos:start="7:33" pos:end="7:55">MCH_HOST_BRIDGE_ESMRAMC</name></expr>]</index></name> <operator pos:start="7:58" pos:end="7:58">&amp;</operator> <name pos:start="7:60" pos:end="7:91">MCH_HOST_BRIDGE_ESMRAMC_H_SMRAME</name><operator pos:start="7:92" pos:end="7:92">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:22">tseg_size</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:31">/* implement SMRAM.D_LCK */</comment>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:72">(<expr pos:start="15:9" pos:end="15:71"><name pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:10">pd</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:18">config</name><index pos:start="15:19" pos:end="15:41">[<expr pos:start="15:20" pos:end="15:40"><name pos:start="15:20" pos:end="15:40">MCH_HOST_BRIDGE_SMRAM</name></expr>]</index></name> <operator pos:start="15:43" pos:end="15:43">&amp;</operator> <name pos:start="15:45" pos:end="15:71">MCH_HOST_BRIDGE_SMRAM_D_LCK</name></expr>)</condition> <block pos:start="15:74" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:79">

        <expr_stmt pos:start="17:9" pos:end="17:75"><expr pos:start="17:9" pos:end="17:74"><name pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:10">pd</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:18">config</name><index pos:start="17:19" pos:end="17:41">[<expr pos:start="17:20" pos:end="17:40"><name pos:start="17:20" pos:end="17:40">MCH_HOST_BRIDGE_SMRAM</name></expr>]</index></name> <operator pos:start="17:43" pos:end="17:44">&amp;=</operator> <operator pos:start="17:46" pos:end="17:46">~</operator><name pos:start="17:47" pos:end="17:74">MCH_HOST_BRIDGE_SMRAM_D_OPEN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:75"><expr pos:start="19:9" pos:end="19:74"><name pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:10">pd</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:17">wmask</name><index pos:start="19:18" pos:end="19:40">[<expr pos:start="19:19" pos:end="19:39"><name pos:start="19:19" pos:end="19:39">MCH_HOST_BRIDGE_SMRAM</name></expr>]</index></name> <operator pos:start="19:42" pos:end="19:42">=</operator> <name pos:start="19:44" pos:end="19:74">MCH_HOST_BRIDGE_SMRAM_WMASK_LCK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:79"><expr pos:start="21:9" pos:end="21:78"><name pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:10">pd</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:17">wmask</name><index pos:start="21:18" pos:end="21:42">[<expr pos:start="21:19" pos:end="21:41"><name pos:start="21:19" pos:end="21:41">MCH_HOST_BRIDGE_ESMRAMC</name></expr>]</index></name> <operator pos:start="21:44" pos:end="21:44">=</operator> <name pos:start="21:46" pos:end="21:78">MCH_HOST_BRIDGE_ESMRAMC_WMASK_LCK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><call pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:35">memory_region_transaction_begin</name><argument_list pos:start="27:36" pos:end="27:37">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="49:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:57">(<expr pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:10">pd</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:18">config</name><index pos:start="31:19" pos:end="31:41">[<expr pos:start="31:20" pos:end="31:40"><name pos:start="31:20" pos:end="31:40">MCH_HOST_BRIDGE_SMRAM</name></expr>]</index></name> <operator pos:start="31:43" pos:end="31:43">&amp;</operator> <name pos:start="31:45" pos:end="31:56">SMRAM_D_OPEN</name></expr>)</condition> <block pos:start="31:59" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:67">

        <comment type="block" pos:start="33:9" pos:end="33:48">/* Hide (!) low SMRAM if H_SMRAME = 1 */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:64"><expr pos:start="35:9" pos:end="35:63"><call pos:start="35:9" pos:end="35:63"><name pos:start="35:9" pos:end="35:33">memory_region_set_enabled</name><argument_list pos:start="35:34" pos:end="35:63">(<argument pos:start="35:35" pos:end="35:52"><expr pos:start="35:35" pos:end="35:52"><operator pos:start="35:35" pos:end="35:35">&amp;</operator><name pos:start="35:36" pos:end="35:52"><name pos:start="35:36" pos:end="35:38">mch</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:52">smram_region</name></name></expr></argument>, <argument pos:start="35:55" pos:end="35:62"><expr pos:start="35:55" pos:end="35:62"><name pos:start="35:55" pos:end="35:62">h_smrame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="37:9" pos:end="37:45">/* Show high SMRAM if H_SMRAME = 1 */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:67"><expr pos:start="39:9" pos:end="39:66"><call pos:start="39:9" pos:end="39:66"><name pos:start="39:9" pos:end="39:33">memory_region_set_enabled</name><argument_list pos:start="39:34" pos:end="39:66">(<argument pos:start="39:35" pos:end="39:55"><expr pos:start="39:35" pos:end="39:55"><operator pos:start="39:35" pos:end="39:35">&amp;</operator><name pos:start="39:36" pos:end="39:55"><name pos:start="39:36" pos:end="39:38">mch</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:55">open_high_smram</name></name></expr></argument>, <argument pos:start="39:58" pos:end="39:65"><expr pos:start="39:58" pos:end="39:65"><name pos:start="39:58" pos:end="39:65">h_smrame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="49:5">else <block pos:start="41:12" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:64">

        <comment type="block" pos:start="43:9" pos:end="43:43">/* Hide high SMRAM and low SMRAM */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:60"><expr pos:start="45:9" pos:end="45:59"><call pos:start="45:9" pos:end="45:59"><name pos:start="45:9" pos:end="45:33">memory_region_set_enabled</name><argument_list pos:start="45:34" pos:end="45:59">(<argument pos:start="45:35" pos:end="45:52"><expr pos:start="45:35" pos:end="45:52"><operator pos:start="45:35" pos:end="45:35">&amp;</operator><name pos:start="45:36" pos:end="45:52"><name pos:start="45:36" pos:end="45:38">mch</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:52">smram_region</name></name></expr></argument>, <argument pos:start="45:55" pos:end="45:58"><expr pos:start="45:55" pos:end="45:58"><name pos:start="45:55" pos:end="45:58">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:64"><expr pos:start="47:9" pos:end="47:63"><call pos:start="47:9" pos:end="47:63"><name pos:start="47:9" pos:end="47:33">memory_region_set_enabled</name><argument_list pos:start="47:34" pos:end="47:63">(<argument pos:start="47:35" pos:end="47:55"><expr pos:start="47:35" pos:end="47:55"><operator pos:start="47:35" pos:end="47:35">&amp;</operator><name pos:start="47:36" pos:end="47:55"><name pos:start="47:36" pos:end="47:38">mch</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:55">open_high_smram</name></name></expr></argument>, <argument pos:start="47:58" pos:end="47:62"><expr pos:start="47:58" pos:end="47:62"><name pos:start="47:58" pos:end="47:62">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="53:5" pos:end="65:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:59">(<expr pos:start="53:9" pos:end="53:58"><name pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:10">pd</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:18">config</name><index pos:start="53:19" pos:end="53:41">[<expr pos:start="53:20" pos:end="53:40"><name pos:start="53:20" pos:end="53:40">MCH_HOST_BRIDGE_SMRAM</name></expr>]</index></name> <operator pos:start="53:43" pos:end="53:43">&amp;</operator> <name pos:start="53:45" pos:end="53:58">SMRAM_G_SMRAME</name></expr>)</condition> <block pos:start="53:61" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:62">

        <expr_stmt pos:start="55:9" pos:end="55:62"><expr pos:start="55:9" pos:end="55:61"><call pos:start="55:9" pos:end="55:61"><name pos:start="55:9" pos:end="55:33">memory_region_set_enabled</name><argument_list pos:start="55:34" pos:end="55:61">(<argument pos:start="55:35" pos:end="55:49"><expr pos:start="55:35" pos:end="55:49"><operator pos:start="55:35" pos:end="55:35">&amp;</operator><name pos:start="55:36" pos:end="55:49"><name pos:start="55:36" pos:end="55:38">mch</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:49">low_smram</name></name></expr></argument>, <argument pos:start="55:52" pos:end="55:60"><expr pos:start="55:52" pos:end="55:60"><operator pos:start="55:52" pos:end="55:52">!</operator><name pos:start="55:53" pos:end="55:60">h_smrame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:62"><expr pos:start="57:9" pos:end="57:61"><call pos:start="57:9" pos:end="57:61"><name pos:start="57:9" pos:end="57:33">memory_region_set_enabled</name><argument_list pos:start="57:34" pos:end="57:61">(<argument pos:start="57:35" pos:end="57:50"><expr pos:start="57:35" pos:end="57:50"><operator pos:start="57:35" pos:end="57:35">&amp;</operator><name pos:start="57:36" pos:end="57:50"><name pos:start="57:36" pos:end="57:38">mch</name><operator pos:start="57:39" pos:end="57:40">-&gt;</operator><name pos:start="57:41" pos:end="57:50">high_smram</name></name></expr></argument>, <argument pos:start="57:53" pos:end="57:60"><expr pos:start="57:53" pos:end="57:60"><name pos:start="57:53" pos:end="57:60">h_smrame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="65:5">else <block pos:start="59:12" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:59">

        <expr_stmt pos:start="61:9" pos:end="61:58"><expr pos:start="61:9" pos:end="61:57"><call pos:start="61:9" pos:end="61:57"><name pos:start="61:9" pos:end="61:33">memory_region_set_enabled</name><argument_list pos:start="61:34" pos:end="61:57">(<argument pos:start="61:35" pos:end="61:49"><expr pos:start="61:35" pos:end="61:49"><operator pos:start="61:35" pos:end="61:35">&amp;</operator><name pos:start="61:36" pos:end="61:49"><name pos:start="61:36" pos:end="61:38">mch</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:49">low_smram</name></name></expr></argument>, <argument pos:start="61:52" pos:end="61:56"><expr pos:start="61:52" pos:end="61:56"><name pos:start="61:52" pos:end="61:56">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:59"><expr pos:start="63:9" pos:end="63:58"><call pos:start="63:9" pos:end="63:58"><name pos:start="63:9" pos:end="63:33">memory_region_set_enabled</name><argument_list pos:start="63:34" pos:end="63:58">(<argument pos:start="63:35" pos:end="63:50"><expr pos:start="63:35" pos:end="63:50"><operator pos:start="63:35" pos:end="63:35">&amp;</operator><name pos:start="63:36" pos:end="63:50"><name pos:start="63:36" pos:end="63:38">mch</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:50">high_smram</name></name></expr></argument>, <argument pos:start="63:53" pos:end="63:57"><expr pos:start="63:53" pos:end="63:57"><name pos:start="63:53" pos:end="63:57">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="69:5" pos:end="105:5"><if pos:start="69:5" pos:end="101:5">if <condition pos:start="69:8" pos:end="69:75">(<expr pos:start="69:9" pos:end="69:74"><name pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:10">pd</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:18">config</name><index pos:start="69:19" pos:end="69:43">[<expr pos:start="69:20" pos:end="69:42"><name pos:start="69:20" pos:end="69:42">MCH_HOST_BRIDGE_ESMRAMC</name></expr>]</index></name> <operator pos:start="69:45" pos:end="69:45">&amp;</operator> <name pos:start="69:47" pos:end="69:74">MCH_HOST_BRIDGE_ESMRAMC_T_EN</name></expr>)</condition> <block pos:start="69:77" pos:end="101:5">{<block_content pos:start="71:9" pos:end="99:9">

        <switch pos:start="71:9" pos:end="99:9">switch <condition pos:start="71:16" pos:end="73:53">(<expr pos:start="71:17" pos:end="73:52"><name pos:start="71:17" pos:end="71:51"><name pos:start="71:17" pos:end="71:18">pd</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:26">config</name><index pos:start="71:27" pos:end="71:51">[<expr pos:start="71:28" pos:end="71:50"><name pos:start="71:28" pos:end="71:50">MCH_HOST_BRIDGE_ESMRAMC</name></expr>]</index></name> <operator pos:start="71:53" pos:end="71:53">&amp;</operator>

                <name pos:start="73:17" pos:end="73:52">MCH_HOST_BRIDGE_ESMRAMC_TSEG_SZ_MASK</name></expr>)</condition> <block pos:start="73:55" pos:end="99:9">{<block_content pos:start="75:9" pos:end="97:18">

        <case pos:start="75:9" pos:end="75:49">case <expr pos:start="75:14" pos:end="75:48"><name pos:start="75:14" pos:end="75:48">MCH_HOST_BRIDGE_ESMRAMC_TSEG_SZ_1MB</name></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:36"><expr pos:start="77:13" pos:end="77:35"><name pos:start="77:13" pos:end="77:21">tseg_size</name> <operator pos:start="77:23" pos:end="77:23">=</operator> <literal type="number" pos:start="77:25" pos:end="77:28">1024</literal> <operator pos:start="77:30" pos:end="77:30">*</operator> <literal type="number" pos:start="77:32" pos:end="77:35">1024</literal></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:49">case <expr pos:start="81:14" pos:end="81:48"><name pos:start="81:14" pos:end="81:48">MCH_HOST_BRIDGE_ESMRAMC_TSEG_SZ_2MB</name></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:40"><expr pos:start="83:13" pos:end="83:39"><name pos:start="83:13" pos:end="83:21">tseg_size</name> <operator pos:start="83:23" pos:end="83:23">=</operator> <literal type="number" pos:start="83:25" pos:end="83:28">1024</literal> <operator pos:start="83:30" pos:end="83:30">*</operator> <literal type="number" pos:start="83:32" pos:end="83:35">1024</literal> <operator pos:start="83:37" pos:end="83:37">*</operator> <literal type="number" pos:start="83:39" pos:end="83:39">2</literal></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:49">case <expr pos:start="87:14" pos:end="87:48"><name pos:start="87:14" pos:end="87:48">MCH_HOST_BRIDGE_ESMRAMC_TSEG_SZ_8MB</name></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:40"><expr pos:start="89:13" pos:end="89:39"><name pos:start="89:13" pos:end="89:21">tseg_size</name> <operator pos:start="89:23" pos:end="89:23">=</operator> <literal type="number" pos:start="89:25" pos:end="89:28">1024</literal> <operator pos:start="89:30" pos:end="89:30">*</operator> <literal type="number" pos:start="89:32" pos:end="89:35">1024</literal> <operator pos:start="89:37" pos:end="89:37">*</operator> <literal type="number" pos:start="89:39" pos:end="89:39">8</literal></expr>;</expr_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <default pos:start="93:9" pos:end="93:16">default:</default>

            <expr_stmt pos:start="95:13" pos:end="95:26"><expr pos:start="95:13" pos:end="95:25"><name pos:start="95:13" pos:end="95:21">tseg_size</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <literal type="number" pos:start="95:25" pos:end="95:25">0</literal></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="101:7" pos:end="105:5">else <block pos:start="101:12" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:22">

        <expr_stmt pos:start="103:9" pos:end="103:22"><expr pos:start="103:9" pos:end="103:21"><name pos:start="103:9" pos:end="103:17">tseg_size</name> <operator pos:start="103:19" pos:end="103:19">=</operator> <literal type="number" pos:start="103:21" pos:end="103:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:74"><expr pos:start="107:5" pos:end="107:73"><call pos:start="107:5" pos:end="107:73"><name pos:start="107:5" pos:end="107:31">memory_region_del_subregion</name><argument_list pos:start="107:32" pos:end="107:73">(<argument pos:start="107:33" pos:end="107:50"><expr pos:start="107:33" pos:end="107:50"><name pos:start="107:33" pos:end="107:50"><name pos:start="107:33" pos:end="107:35">mch</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:50">system_memory</name></name></expr></argument>, <argument pos:start="107:53" pos:end="107:72"><expr pos:start="107:53" pos:end="107:72"><operator pos:start="107:53" pos:end="107:53">&amp;</operator><name pos:start="107:54" pos:end="107:72"><name pos:start="107:54" pos:end="107:56">mch</name><operator pos:start="107:57" pos:end="107:58">-&gt;</operator><name pos:start="107:59" pos:end="107:72">tseg_blackhole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:63"><expr pos:start="109:5" pos:end="109:62"><call pos:start="109:5" pos:end="109:62"><name pos:start="109:5" pos:end="109:29">memory_region_set_enabled</name><argument_list pos:start="109:30" pos:end="109:62">(<argument pos:start="109:31" pos:end="109:50"><expr pos:start="109:31" pos:end="109:50"><operator pos:start="109:31" pos:end="109:31">&amp;</operator><name pos:start="109:32" pos:end="109:50"><name pos:start="109:32" pos:end="109:34">mch</name><operator pos:start="109:35" pos:end="109:36">-&gt;</operator><name pos:start="109:37" pos:end="109:50">tseg_blackhole</name></name></expr></argument>, <argument pos:start="109:53" pos:end="109:61"><expr pos:start="109:53" pos:end="109:61"><name pos:start="109:53" pos:end="109:61">tseg_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:60"><expr pos:start="111:5" pos:end="111:59"><call pos:start="111:5" pos:end="111:59"><name pos:start="111:5" pos:end="111:26">memory_region_set_size</name><argument_list pos:start="111:27" pos:end="111:59">(<argument pos:start="111:28" pos:end="111:47"><expr pos:start="111:28" pos:end="111:47"><operator pos:start="111:28" pos:end="111:28">&amp;</operator><name pos:start="111:29" pos:end="111:47"><name pos:start="111:29" pos:end="111:31">mch</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:47">tseg_blackhole</name></name></expr></argument>, <argument pos:start="111:50" pos:end="111:58"><expr pos:start="111:50" pos:end="111:58"><name pos:start="111:50" pos:end="111:58">tseg_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="117:65"><expr pos:start="113:5" pos:end="117:64"><call pos:start="113:5" pos:end="117:64"><name pos:start="113:5" pos:end="113:39">memory_region_add_subregion_overlap</name><argument_list pos:start="113:40" pos:end="117:64">(<argument pos:start="113:41" pos:end="113:58"><expr pos:start="113:41" pos:end="113:58"><name pos:start="113:41" pos:end="113:58"><name pos:start="113:41" pos:end="113:43">mch</name><operator pos:start="113:44" pos:end="113:45">-&gt;</operator><name pos:start="113:46" pos:end="113:58">system_memory</name></name></expr></argument>,

                                        <argument pos:start="115:41" pos:end="115:74"><expr pos:start="115:41" pos:end="115:74"><name pos:start="115:41" pos:end="115:62"><name pos:start="115:41" pos:end="115:43">mch</name><operator pos:start="115:44" pos:end="115:45">-&gt;</operator><name pos:start="115:46" pos:end="115:62">below_4g_mem_size</name></name> <operator pos:start="115:64" pos:end="115:64">-</operator> <name pos:start="115:66" pos:end="115:74">tseg_size</name></expr></argument>,

                                        <argument pos:start="117:41" pos:end="117:60"><expr pos:start="117:41" pos:end="117:60"><operator pos:start="117:41" pos:end="117:41">&amp;</operator><name pos:start="117:42" pos:end="117:60"><name pos:start="117:42" pos:end="117:44">mch</name><operator pos:start="117:45" pos:end="117:46">-&gt;</operator><name pos:start="117:47" pos:end="117:60">tseg_blackhole</name></name></expr></argument>, <argument pos:start="117:63" pos:end="117:63"><expr pos:start="117:63" pos:end="117:63"><literal type="number" pos:start="117:63" pos:end="117:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:60"><expr pos:start="121:5" pos:end="121:59"><call pos:start="121:5" pos:end="121:59"><name pos:start="121:5" pos:end="121:29">memory_region_set_enabled</name><argument_list pos:start="121:30" pos:end="121:59">(<argument pos:start="121:31" pos:end="121:47"><expr pos:start="121:31" pos:end="121:47"><operator pos:start="121:31" pos:end="121:31">&amp;</operator><name pos:start="121:32" pos:end="121:47"><name pos:start="121:32" pos:end="121:34">mch</name><operator pos:start="121:35" pos:end="121:36">-&gt;</operator><name pos:start="121:37" pos:end="121:47">tseg_window</name></name></expr></argument>, <argument pos:start="121:50" pos:end="121:58"><expr pos:start="121:50" pos:end="121:58"><name pos:start="121:50" pos:end="121:58">tseg_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:57"><expr pos:start="123:5" pos:end="123:56"><call pos:start="123:5" pos:end="123:56"><name pos:start="123:5" pos:end="123:26">memory_region_set_size</name><argument_list pos:start="123:27" pos:end="123:56">(<argument pos:start="123:28" pos:end="123:44"><expr pos:start="123:28" pos:end="123:44"><operator pos:start="123:28" pos:end="123:28">&amp;</operator><name pos:start="123:29" pos:end="123:44"><name pos:start="123:29" pos:end="123:31">mch</name><operator pos:start="123:32" pos:end="123:33">-&gt;</operator><name pos:start="123:34" pos:end="123:44">tseg_window</name></name></expr></argument>, <argument pos:start="123:47" pos:end="123:55"><expr pos:start="123:47" pos:end="123:55"><name pos:start="123:47" pos:end="123:55">tseg_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="127:66"><expr pos:start="125:5" pos:end="127:65"><call pos:start="125:5" pos:end="127:65"><name pos:start="125:5" pos:end="125:29">memory_region_set_address</name><argument_list pos:start="125:30" pos:end="127:65">(<argument pos:start="125:31" pos:end="125:47"><expr pos:start="125:31" pos:end="125:47"><operator pos:start="125:31" pos:end="125:31">&amp;</operator><name pos:start="125:32" pos:end="125:47"><name pos:start="125:32" pos:end="125:34">mch</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:47">tseg_window</name></name></expr></argument>,

                              <argument pos:start="127:31" pos:end="127:64"><expr pos:start="127:31" pos:end="127:64"><name pos:start="127:31" pos:end="127:52"><name pos:start="127:31" pos:end="127:33">mch</name><operator pos:start="127:34" pos:end="127:35">-&gt;</operator><name pos:start="127:36" pos:end="127:52">below_4g_mem_size</name></name> <operator pos:start="127:54" pos:end="127:54">-</operator> <name pos:start="127:56" pos:end="127:64">tseg_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="131:71"><expr pos:start="129:5" pos:end="131:70"><call pos:start="129:5" pos:end="131:70"><name pos:start="129:5" pos:end="129:34">memory_region_set_alias_offset</name><argument_list pos:start="129:35" pos:end="131:70">(<argument pos:start="129:36" pos:end="129:52"><expr pos:start="129:36" pos:end="129:52"><operator pos:start="129:36" pos:end="129:36">&amp;</operator><name pos:start="129:37" pos:end="129:52"><name pos:start="129:37" pos:end="129:39">mch</name><operator pos:start="129:40" pos:end="129:41">-&gt;</operator><name pos:start="129:42" pos:end="129:52">tseg_window</name></name></expr></argument>,

                                   <argument pos:start="131:36" pos:end="131:69"><expr pos:start="131:36" pos:end="131:69"><name pos:start="131:36" pos:end="131:57"><name pos:start="131:36" pos:end="131:38">mch</name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:57">below_4g_mem_size</name></name> <operator pos:start="131:59" pos:end="131:59">-</operator> <name pos:start="131:61" pos:end="131:69">tseg_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:39"><expr pos:start="135:5" pos:end="135:38"><call pos:start="135:5" pos:end="135:38"><name pos:start="135:5" pos:end="135:36">memory_region_transaction_commit</name><argument_list pos:start="135:37" pos:end="135:38">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
