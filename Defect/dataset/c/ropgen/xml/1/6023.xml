<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6023.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">decode_delta_j</name><parameter_list pos:start="1:27" pos:end="5:63">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:34">uint8_t</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">dst</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:45"><decl pos:start="3:28" pos:end="3:45"><type pos:start="3:28" pos:end="3:45"><specifier pos:start="3:28" pos:end="3:32">const</specifier> <name pos:start="3:34" pos:end="3:40">uint8_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">buf</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:69"><decl pos:start="3:48" pos:end="3:69"><type pos:start="3:48" pos:end="3:69"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:60">uint8_t</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:69">buf_end</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:32"><decl pos:start="5:28" pos:end="5:32"><type pos:start="5:28" pos:end="5:32"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:32">w</name></decl></parameter>, <parameter pos:start="5:35" pos:end="5:39"><decl pos:start="5:35" pos:end="5:39"><type pos:start="5:35" pos:end="5:39"><name pos:start="5:35" pos:end="5:37">int</name></type> <name pos:start="5:39" pos:end="5:39">h</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:48"><decl pos:start="5:42" pos:end="5:48"><type pos:start="5:42" pos:end="5:48"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:48">bpp</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:62"><decl pos:start="5:51" pos:end="5:62"><type pos:start="5:51" pos:end="5:62"><name pos:start="5:51" pos:end="5:53">int</name></type> <name pos:start="5:55" pos:end="5:62">dst_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="203:1">{<block_content pos:start="9:5" pos:end="201:5">

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int32_t</name></type> <name pos:start="9:13" pos:end="9:17">pitch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">end</name> <init pos:start="11:18" pos:end="11:33">= <expr pos:start="11:20" pos:end="11:33"><name pos:start="11:20" pos:end="11:22">dst</name> <operator pos:start="11:24" pos:end="11:24">+</operator> <name pos:start="11:26" pos:end="11:33">dst_size</name></expr></init></decl>, <decl pos:start="11:36" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:36" pos:end="11:36">*</modifier></type><name pos:start="11:37" pos:end="11:39">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:17">type</name></decl>, <decl pos:start="13:20" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:20" pos:end="13:23">flag</name></decl>, <decl pos:start="13:26" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:26" pos:end="13:29">cols</name></decl>, <decl pos:start="13:32" pos:end="13:37"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:32" pos:end="13:37">groups</name></decl>, <decl pos:start="13:40" pos:end="13:43"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:40" pos:end="13:43">rows</name></decl>, <decl pos:start="13:46" pos:end="13:50"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:46" pos:end="13:50">bytes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:23">planepitch_byte</name> <init pos:start="17:25" pos:end="17:37">= <expr pos:start="17:27" pos:end="17:37"><operator pos:start="17:27" pos:end="17:27">(</operator><name pos:start="17:28" pos:end="17:28">w</name> <operator pos:start="17:30" pos:end="17:30">+</operator> <literal type="number" pos:start="17:32" pos:end="17:32">7</literal><operator pos:start="17:33" pos:end="17:33">)</operator> <operator pos:start="17:35" pos:end="17:35">/</operator> <literal type="number" pos:start="17:37" pos:end="17:37">8</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:41"><decl pos:start="19:5" pos:end="19:40"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">planepitch</name> <init pos:start="19:20" pos:end="19:40">= <expr pos:start="19:22" pos:end="19:40"><operator pos:start="19:22" pos:end="19:22">(</operator><operator pos:start="19:23" pos:end="19:23">(</operator><name pos:start="19:24" pos:end="19:24">w</name> <operator pos:start="19:26" pos:end="19:26">+</operator> <literal type="number" pos:start="19:28" pos:end="19:29">15</literal><operator pos:start="19:30" pos:end="19:30">)</operator> <operator pos:start="19:32" pos:end="19:32">/</operator> <literal type="number" pos:start="19:34" pos:end="19:35">16</literal><operator pos:start="19:36" pos:end="19:36">)</operator> <operator pos:start="19:38" pos:end="19:38">*</operator> <literal type="number" pos:start="19:40" pos:end="19:40">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:16">kludge_j</name></decl>, <decl pos:start="21:19" pos:end="21:19"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:19" pos:end="21:19">b</name></decl>, <decl pos:start="21:22" pos:end="21:22"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:22" pos:end="21:22">g</name></decl>, <decl pos:start="21:25" pos:end="21:25"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:25" pos:end="21:25">r</name></decl>, <decl pos:start="21:28" pos:end="21:28"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:28" pos:end="21:28">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:21"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:18">GetByteContext</name></type> <name pos:start="23:20" pos:end="23:21">gb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:9">pitch</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:22">planepitch</name> <operator pos:start="27:24" pos:end="27:24">*</operator> <name pos:start="27:26" pos:end="27:28">bpp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:12">kludge_j</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <ternary pos:start="29:16" pos:end="29:46"><condition pos:start="29:16" pos:end="29:24"><expr pos:start="29:16" pos:end="29:22"><name pos:start="29:16" pos:end="29:16">w</name> <operator pos:start="29:18" pos:end="29:18">&lt;</operator> <literal type="number" pos:start="29:20" pos:end="29:22">320</literal></expr> ?</condition><then pos:start="29:26" pos:end="29:42"> <expr pos:start="29:26" pos:end="29:42"><operator pos:start="29:26" pos:end="29:26">(</operator><literal type="number" pos:start="29:27" pos:end="29:31">320</literal> <operator pos:start="29:31" pos:end="29:31">-</operator> <name pos:start="29:33" pos:end="29:33">w</name><operator pos:start="29:34" pos:end="29:34">)</operator> <operator pos:start="29:36" pos:end="29:36">/</operator> <literal type="number" pos:start="29:38" pos:end="29:38">8</literal> <operator pos:start="29:40" pos:end="29:40">/</operator> <literal type="number" pos:start="29:42" pos:end="29:42">2</literal></expr> </then><else pos:start="29:44" pos:end="29:46">: <expr pos:start="29:46" pos:end="29:46"><literal type="number" pos:start="29:46" pos:end="29:46">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><call pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:20">bytestream2_init</name><argument_list pos:start="33:21" pos:end="33:45">(<argument pos:start="33:22" pos:end="33:24"><expr pos:start="33:22" pos:end="33:24"><operator pos:start="33:22" pos:end="33:22">&amp;</operator><name pos:start="33:23" pos:end="33:24">gb</name></expr></argument>, <argument pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:29">buf</name></expr></argument>, <argument pos:start="33:32" pos:end="33:44"><expr pos:start="33:32" pos:end="33:44"><name pos:start="33:32" pos:end="33:38">buf_end</name> <operator pos:start="33:40" pos:end="33:40">-</operator> <name pos:start="33:42" pos:end="33:44">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="37:5" pos:end="201:5">while <condition pos:start="37:11" pos:end="37:48">(<expr pos:start="37:12" pos:end="37:47"><call pos:start="37:12" pos:end="37:42"><name pos:start="37:12" pos:end="37:37">bytestream2_get_bytes_left</name><argument_list pos:start="37:38" pos:end="37:42">(<argument pos:start="37:39" pos:end="37:41"><expr pos:start="37:39" pos:end="37:41"><operator pos:start="37:39" pos:end="37:39">&amp;</operator><name pos:start="37:40" pos:end="37:41">gb</name></expr></argument>)</argument_list></call> <operator pos:start="37:44" pos:end="37:45">&gt;=</operator> <literal type="number" pos:start="37:47" pos:end="37:47">2</literal></expr>)</condition> <block pos:start="37:50" pos:end="201:5">{<block_content pos:start="39:9" pos:end="199:9">

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:12">type</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:40"><name pos:start="39:16" pos:end="39:35">bytestream2_get_be16</name><argument_list pos:start="39:36" pos:end="39:40">(<argument pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><operator pos:start="39:37" pos:end="39:37">&amp;</operator><name pos:start="39:38" pos:end="39:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="43:9" pos:end="199:9">switch <condition pos:start="43:16" pos:end="43:21">(<expr pos:start="43:17" pos:end="43:20"><name pos:start="43:17" pos:end="43:20">type</name></expr>)</condition> <block pos:start="43:23" pos:end="199:9">{<block_content pos:start="45:9" pos:end="197:19">

        <case pos:start="45:9" pos:end="45:15">case <expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>:</case>

            <return pos:start="47:13" pos:end="47:19">return;</return>

        <case pos:start="49:9" pos:end="49:15">case <expr pos:start="49:14" pos:end="49:14"><literal type="number" pos:start="49:14" pos:end="49:14">1</literal></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:47"><expr pos:start="51:13" pos:end="51:46"><name pos:start="51:13" pos:end="51:16">flag</name>   <operator pos:start="51:20" pos:end="51:20">=</operator> <call pos:start="51:22" pos:end="51:46"><name pos:start="51:22" pos:end="51:41">bytestream2_get_be16</name><argument_list pos:start="51:42" pos:end="51:46">(<argument pos:start="51:43" pos:end="51:45"><expr pos:start="51:43" pos:end="51:45"><operator pos:start="51:43" pos:end="51:43">&amp;</operator><name pos:start="51:44" pos:end="51:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:47"><expr pos:start="53:13" pos:end="53:46"><name pos:start="53:13" pos:end="53:16">cols</name>   <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:46"><name pos:start="53:22" pos:end="53:41">bytestream2_get_be16</name><argument_list pos:start="53:42" pos:end="53:46">(<argument pos:start="53:43" pos:end="53:45"><expr pos:start="53:43" pos:end="53:45"><operator pos:start="53:43" pos:end="53:43">&amp;</operator><name pos:start="53:44" pos:end="53:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:47"><expr pos:start="55:13" pos:end="55:46"><name pos:start="55:13" pos:end="55:18">groups</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="55:46"><name pos:start="55:22" pos:end="55:41">bytestream2_get_be16</name><argument_list pos:start="55:42" pos:end="55:46">(<argument pos:start="55:43" pos:end="55:45"><expr pos:start="55:43" pos:end="55:45"><operator pos:start="55:43" pos:end="55:43">&amp;</operator><name pos:start="55:44" pos:end="55:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="59:13" pos:end="115:13">for <control pos:start="59:17" pos:end="59:40">(<init pos:start="59:18" pos:end="59:23"><expr pos:start="59:18" pos:end="59:22"><name pos:start="59:18" pos:end="59:18">g</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</init> <condition pos:start="59:25" pos:end="59:35"><expr pos:start="59:25" pos:end="59:34"><name pos:start="59:25" pos:end="59:25">g</name> <operator pos:start="59:27" pos:end="59:27">&lt;</operator> <name pos:start="59:29" pos:end="59:34">groups</name></expr>;</condition> <incr pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><name pos:start="59:37" pos:end="59:37">g</name><operator pos:start="59:38" pos:end="59:39">++</operator></expr></incr>)</control> <block pos:start="59:42" pos:end="115:13">{<block_content pos:start="61:17" pos:end="113:45">

                <expr_stmt pos:start="61:17" pos:end="61:51"><expr pos:start="61:17" pos:end="61:50"><name pos:start="61:17" pos:end="61:22">offset</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:50"><name pos:start="61:26" pos:end="61:45">bytestream2_get_be16</name><argument_list pos:start="61:46" pos:end="61:50">(<argument pos:start="61:47" pos:end="61:49"><expr pos:start="61:47" pos:end="61:49"><operator pos:start="61:47" pos:end="61:47">&amp;</operator><name pos:start="61:48" pos:end="61:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="65:17" pos:end="71:95"><if pos:start="65:17" pos:end="67:94">if <condition pos:start="65:20" pos:end="65:29">(<expr pos:start="65:21" pos:end="65:28"><name pos:start="65:21" pos:end="65:28">kludge_j</name></expr>)</condition><block type="pseudo" pos:start="67:21" pos:end="67:94"><block_content pos:start="67:21" pos:end="67:94">

                    <expr_stmt pos:start="67:21" pos:end="67:94"><expr pos:start="67:21" pos:end="67:93"><name pos:start="67:21" pos:end="67:26">offset</name> <operator pos:start="67:28" pos:end="67:28">=</operator> <operator pos:start="67:30" pos:end="67:30">(</operator><operator pos:start="67:31" pos:end="67:31">(</operator><name pos:start="67:32" pos:end="67:37">offset</name> <operator pos:start="67:39" pos:end="67:39">/</operator> <operator pos:start="67:41" pos:end="67:41">(</operator><literal type="number" pos:start="67:42" pos:end="67:44">320</literal> <operator pos:start="67:46" pos:end="67:46">/</operator> <literal type="number" pos:start="67:48" pos:end="67:48">8</literal><operator pos:start="67:49" pos:end="67:49">)</operator><operator pos:start="67:50" pos:end="67:50">)</operator> <operator pos:start="67:52" pos:end="67:52">*</operator> <name pos:start="67:54" pos:end="67:58">pitch</name><operator pos:start="67:59" pos:end="67:59">)</operator> <operator pos:start="67:61" pos:end="67:61">+</operator> <operator pos:start="67:63" pos:end="67:63">(</operator><name pos:start="67:64" pos:end="67:69">offset</name> <operator pos:start="67:71" pos:end="67:71">%</operator> <operator pos:start="67:73" pos:end="67:73">(</operator><literal type="number" pos:start="67:74" pos:end="67:76">320</literal> <operator pos:start="67:78" pos:end="67:78">/</operator> <literal type="number" pos:start="67:80" pos:end="67:80">8</literal><operator pos:start="67:81" pos:end="67:81">)</operator><operator pos:start="67:82" pos:end="67:82">)</operator> <operator pos:start="67:84" pos:end="67:84">-</operator> <name pos:start="67:86" pos:end="67:93">kludge_j</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="69:17" pos:end="71:95">else<block type="pseudo" pos:start="71:21" pos:end="71:95"><block_content pos:start="71:21" pos:end="71:95">

                    <expr_stmt pos:start="71:21" pos:end="71:95"><expr pos:start="71:21" pos:end="71:94"><name pos:start="71:21" pos:end="71:26">offset</name> <operator pos:start="71:28" pos:end="71:28">=</operator> <operator pos:start="71:30" pos:end="71:30">(</operator><operator pos:start="71:31" pos:end="71:31">(</operator><name pos:start="71:32" pos:end="71:37">offset</name> <operator pos:start="71:39" pos:end="71:39">/</operator> <name pos:start="71:41" pos:end="71:55">planepitch_byte</name><operator pos:start="71:56" pos:end="71:56">)</operator> <operator pos:start="71:58" pos:end="71:58">*</operator> <name pos:start="71:60" pos:end="71:64">pitch</name><operator pos:start="71:65" pos:end="71:65">)</operator> <operator pos:start="71:67" pos:end="71:67">+</operator> <operator pos:start="71:69" pos:end="71:69">(</operator><name pos:start="71:70" pos:end="71:75">offset</name> <operator pos:start="71:77" pos:end="71:77">%</operator> <name pos:start="71:79" pos:end="71:93">planepitch_byte</name><operator pos:start="71:94" pos:end="71:94">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="75:17" pos:end="75:35"><expr pos:start="75:17" pos:end="75:34"><name pos:start="75:17" pos:end="75:19">ptr</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:25">dst</name> <operator pos:start="75:27" pos:end="75:27">+</operator> <name pos:start="75:29" pos:end="75:34">offset</name></expr>;</expr_stmt>

                <if_stmt pos:start="77:17" pos:end="79:27"><if pos:start="77:17" pos:end="79:27">if <condition pos:start="77:20" pos:end="77:31">(<expr pos:start="77:21" pos:end="77:30"><name pos:start="77:21" pos:end="77:23">ptr</name> <operator pos:start="77:25" pos:end="77:26">&gt;=</operator> <name pos:start="77:28" pos:end="77:30">end</name></expr>)</condition><block type="pseudo" pos:start="79:21" pos:end="79:27"><block_content pos:start="79:21" pos:end="79:27">

                    <return pos:start="79:21" pos:end="79:27">return;</return></block_content></block></if></if_stmt>



                <for pos:start="83:17" pos:end="109:17">for <control pos:start="83:21" pos:end="83:42">(<init pos:start="83:22" pos:end="83:27"><expr pos:start="83:22" pos:end="83:26"><name pos:start="83:22" pos:end="83:22">b</name> <operator pos:start="83:24" pos:end="83:24">=</operator> <literal type="number" pos:start="83:26" pos:end="83:26">0</literal></expr>;</init> <condition pos:start="83:29" pos:end="83:37"><expr pos:start="83:29" pos:end="83:36"><name pos:start="83:29" pos:end="83:29">b</name> <operator pos:start="83:31" pos:end="83:31">&lt;</operator> <name pos:start="83:33" pos:end="83:36">cols</name></expr>;</condition> <incr pos:start="83:39" pos:end="83:41"><expr pos:start="83:39" pos:end="83:41"><name pos:start="83:39" pos:end="83:39">b</name><operator pos:start="83:40" pos:end="83:41">++</operator></expr></incr>)</control> <block pos:start="83:44" pos:end="109:17">{<block_content pos:start="85:21" pos:end="107:21">

                    <for pos:start="85:21" pos:end="107:21">for <control pos:start="85:25" pos:end="85:45">(<init pos:start="85:26" pos:end="85:31"><expr pos:start="85:26" pos:end="85:30"><name pos:start="85:26" pos:end="85:26">d</name> <operator pos:start="85:28" pos:end="85:28">=</operator> <literal type="number" pos:start="85:30" pos:end="85:30">0</literal></expr>;</init> <condition pos:start="85:33" pos:end="85:40"><expr pos:start="85:33" pos:end="85:39"><name pos:start="85:33" pos:end="85:33">d</name> <operator pos:start="85:35" pos:end="85:35">&lt;</operator> <name pos:start="85:37" pos:end="85:39">bpp</name></expr>;</condition> <incr pos:start="85:42" pos:end="85:44"><expr pos:start="85:42" pos:end="85:44"><name pos:start="85:42" pos:end="85:42">d</name><operator pos:start="85:43" pos:end="85:44">++</operator></expr></incr>)</control> <block pos:start="85:47" pos:end="107:21">{<block_content pos:start="87:25" pos:end="105:35">

                        <decl_stmt pos:start="87:25" pos:end="87:66"><decl pos:start="87:25" pos:end="87:65"><type pos:start="87:25" pos:end="87:31"><name pos:start="87:25" pos:end="87:31">uint8_t</name></type> <name pos:start="87:33" pos:end="87:37">value</name> <init pos:start="87:39" pos:end="87:65">= <expr pos:start="87:41" pos:end="87:65"><call pos:start="87:41" pos:end="87:65"><name pos:start="87:41" pos:end="87:60">bytestream2_get_byte</name><argument_list pos:start="87:61" pos:end="87:65">(<argument pos:start="87:62" pos:end="87:64"><expr pos:start="87:62" pos:end="87:64"><operator pos:start="87:62" pos:end="87:62">&amp;</operator><name pos:start="87:63" pos:end="87:64">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                        <if_stmt pos:start="91:25" pos:end="97:44"><if pos:start="91:25" pos:end="93:44">if <condition pos:start="91:28" pos:end="91:33">(<expr pos:start="91:29" pos:end="91:32"><name pos:start="91:29" pos:end="91:32">flag</name></expr>)</condition><block type="pseudo" pos:start="93:29" pos:end="93:44"><block_content pos:start="93:29" pos:end="93:44">

                            <expr_stmt pos:start="93:29" pos:end="93:44"><expr pos:start="93:29" pos:end="93:43"><name pos:start="93:29" pos:end="93:34"><name pos:start="93:29" pos:end="93:31">ptr</name><index pos:start="93:32" pos:end="93:34">[<expr pos:start="93:33" pos:end="93:33"><literal type="number" pos:start="93:33" pos:end="93:33">0</literal></expr>]</index></name> <operator pos:start="93:36" pos:end="93:37">^=</operator> <name pos:start="93:39" pos:end="93:43">value</name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="95:25" pos:end="97:44">else<block type="pseudo" pos:start="97:29" pos:end="97:44"><block_content pos:start="97:29" pos:end="97:44">

                            <expr_stmt pos:start="97:29" pos:end="97:44"><expr pos:start="97:29" pos:end="97:43"><name pos:start="97:29" pos:end="97:34"><name pos:start="97:29" pos:end="97:31">ptr</name><index pos:start="97:32" pos:end="97:34">[<expr pos:start="97:33" pos:end="97:33"><literal type="number" pos:start="97:33" pos:end="97:33">0</literal></expr>]</index></name>  <operator pos:start="97:37" pos:end="97:37">=</operator> <name pos:start="97:39" pos:end="97:43">value</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                        <expr_stmt pos:start="101:25" pos:end="101:42"><expr pos:start="101:25" pos:end="101:41"><name pos:start="101:25" pos:end="101:27">ptr</name> <operator pos:start="101:29" pos:end="101:30">+=</operator> <name pos:start="101:32" pos:end="101:41">planepitch</name></expr>;</expr_stmt>

                        <if_stmt pos:start="103:25" pos:end="105:35"><if pos:start="103:25" pos:end="105:35">if <condition pos:start="103:28" pos:end="103:39">(<expr pos:start="103:29" pos:end="103:38"><name pos:start="103:29" pos:end="103:31">ptr</name> <operator pos:start="103:33" pos:end="103:34">&gt;=</operator> <name pos:start="103:36" pos:end="103:38">end</name></expr>)</condition><block type="pseudo" pos:start="105:29" pos:end="105:35"><block_content pos:start="105:29" pos:end="105:35">

                            <return pos:start="105:29" pos:end="105:35">return;</return></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

                <if_stmt pos:start="111:17" pos:end="113:45"><if pos:start="111:17" pos:end="113:45">if <condition pos:start="111:20" pos:end="111:37">(<expr pos:start="111:21" pos:end="111:36"><operator pos:start="111:21" pos:end="111:21">(</operator><name pos:start="111:22" pos:end="111:25">cols</name> <operator pos:start="111:27" pos:end="111:27">*</operator> <name pos:start="111:29" pos:end="111:31">bpp</name><operator pos:start="111:32" pos:end="111:32">)</operator> <operator pos:start="111:34" pos:end="111:34">&amp;</operator> <literal type="number" pos:start="111:36" pos:end="111:36">1</literal></expr>)</condition><block type="pseudo" pos:start="113:21" pos:end="113:45"><block_content pos:start="113:21" pos:end="113:45">

                    <expr_stmt pos:start="113:21" pos:end="113:45"><expr pos:start="113:21" pos:end="113:44"><call pos:start="113:21" pos:end="113:44"><name pos:start="113:21" pos:end="113:36">bytestream2_skip</name><argument_list pos:start="113:37" pos:end="113:44">(<argument pos:start="113:38" pos:end="113:40"><expr pos:start="113:38" pos:end="113:40"><operator pos:start="113:38" pos:end="113:38">&amp;</operator><name pos:start="113:39" pos:end="113:40">gb</name></expr></argument>, <argument pos:start="113:43" pos:end="113:43"><expr pos:start="113:43" pos:end="113:43"><literal type="number" pos:start="113:43" pos:end="113:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:15">case <expr pos:start="119:14" pos:end="119:14"><literal type="number" pos:start="119:14" pos:end="119:14">2</literal></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:47"><expr pos:start="121:13" pos:end="121:46"><name pos:start="121:13" pos:end="121:16">flag</name>   <operator pos:start="121:20" pos:end="121:20">=</operator> <call pos:start="121:22" pos:end="121:46"><name pos:start="121:22" pos:end="121:41">bytestream2_get_be16</name><argument_list pos:start="121:42" pos:end="121:46">(<argument pos:start="121:43" pos:end="121:45"><expr pos:start="121:43" pos:end="121:45"><operator pos:start="121:43" pos:end="121:43">&amp;</operator><name pos:start="121:44" pos:end="121:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:47"><expr pos:start="123:13" pos:end="123:46"><name pos:start="123:13" pos:end="123:16">rows</name>   <operator pos:start="123:20" pos:end="123:20">=</operator> <call pos:start="123:22" pos:end="123:46"><name pos:start="123:22" pos:end="123:41">bytestream2_get_be16</name><argument_list pos:start="123:42" pos:end="123:46">(<argument pos:start="123:43" pos:end="123:45"><expr pos:start="123:43" pos:end="123:45"><operator pos:start="123:43" pos:end="123:43">&amp;</operator><name pos:start="123:44" pos:end="123:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:47"><expr pos:start="125:13" pos:end="125:46"><name pos:start="125:13" pos:end="125:17">bytes</name>  <operator pos:start="125:20" pos:end="125:20">=</operator> <call pos:start="125:22" pos:end="125:46"><name pos:start="125:22" pos:end="125:41">bytestream2_get_be16</name><argument_list pos:start="125:42" pos:end="125:46">(<argument pos:start="125:43" pos:end="125:45"><expr pos:start="125:43" pos:end="125:45"><operator pos:start="125:43" pos:end="125:43">&amp;</operator><name pos:start="125:44" pos:end="125:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:47"><expr pos:start="127:13" pos:end="127:46"><name pos:start="127:13" pos:end="127:18">groups</name> <operator pos:start="127:20" pos:end="127:20">=</operator> <call pos:start="127:22" pos:end="127:46"><name pos:start="127:22" pos:end="127:41">bytestream2_get_be16</name><argument_list pos:start="127:42" pos:end="127:46">(<argument pos:start="127:43" pos:end="127:45"><expr pos:start="127:43" pos:end="127:45"><operator pos:start="127:43" pos:end="127:43">&amp;</operator><name pos:start="127:44" pos:end="127:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="131:13" pos:end="191:13">for <control pos:start="131:17" pos:end="131:40">(<init pos:start="131:18" pos:end="131:23"><expr pos:start="131:18" pos:end="131:22"><name pos:start="131:18" pos:end="131:18">g</name> <operator pos:start="131:20" pos:end="131:20">=</operator> <literal type="number" pos:start="131:22" pos:end="131:22">0</literal></expr>;</init> <condition pos:start="131:25" pos:end="131:35"><expr pos:start="131:25" pos:end="131:34"><name pos:start="131:25" pos:end="131:25">g</name> <operator pos:start="131:27" pos:end="131:27">&lt;</operator> <name pos:start="131:29" pos:end="131:34">groups</name></expr>;</condition> <incr pos:start="131:37" pos:end="131:39"><expr pos:start="131:37" pos:end="131:39"><name pos:start="131:37" pos:end="131:37">g</name><operator pos:start="131:38" pos:end="131:39">++</operator></expr></incr>)</control> <block pos:start="131:42" pos:end="191:13">{<block_content pos:start="133:17" pos:end="189:45">

                <expr_stmt pos:start="133:17" pos:end="133:51"><expr pos:start="133:17" pos:end="133:50"><name pos:start="133:17" pos:end="133:22">offset</name> <operator pos:start="133:24" pos:end="133:24">=</operator> <call pos:start="133:26" pos:end="133:50"><name pos:start="133:26" pos:end="133:45">bytestream2_get_be16</name><argument_list pos:start="133:46" pos:end="133:50">(<argument pos:start="133:47" pos:end="133:49"><expr pos:start="133:47" pos:end="133:49"><operator pos:start="133:47" pos:end="133:47">&amp;</operator><name pos:start="133:48" pos:end="133:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="137:17" pos:end="143:95"><if pos:start="137:17" pos:end="139:93">if <condition pos:start="137:20" pos:end="137:29">(<expr pos:start="137:21" pos:end="137:28"><name pos:start="137:21" pos:end="137:28">kludge_j</name></expr>)</condition><block type="pseudo" pos:start="139:21" pos:end="139:93"><block_content pos:start="139:21" pos:end="139:93">

                    <expr_stmt pos:start="139:21" pos:end="139:93"><expr pos:start="139:21" pos:end="139:92"><name pos:start="139:21" pos:end="139:26">offset</name> <operator pos:start="139:28" pos:end="139:28">=</operator> <operator pos:start="139:30" pos:end="139:30">(</operator><operator pos:start="139:31" pos:end="139:31">(</operator><name pos:start="139:32" pos:end="139:37">offset</name> <operator pos:start="139:39" pos:end="139:39">/</operator> <operator pos:start="139:41" pos:end="139:41">(</operator><literal type="number" pos:start="139:42" pos:end="139:44">320</literal> <operator pos:start="139:46" pos:end="139:46">/</operator> <literal type="number" pos:start="139:48" pos:end="139:48">8</literal><operator pos:start="139:49" pos:end="139:49">)</operator><operator pos:start="139:50" pos:end="139:50">)</operator> <operator pos:start="139:52" pos:end="139:52">*</operator> <name pos:start="139:54" pos:end="139:58">pitch</name><operator pos:start="139:59" pos:end="139:59">)</operator> <operator pos:start="139:61" pos:end="139:61">+</operator> <operator pos:start="139:63" pos:end="139:63">(</operator><name pos:start="139:64" pos:end="139:69">offset</name> <operator pos:start="139:71" pos:end="139:71">%</operator> <operator pos:start="139:73" pos:end="139:73">(</operator><literal type="number" pos:start="139:74" pos:end="139:76">320</literal><operator pos:start="139:77" pos:end="139:77">/</operator> <literal type="number" pos:start="139:79" pos:end="139:79">8</literal><operator pos:start="139:80" pos:end="139:80">)</operator><operator pos:start="139:81" pos:end="139:81">)</operator> <operator pos:start="139:83" pos:end="139:83">-</operator> <name pos:start="139:85" pos:end="139:92">kludge_j</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="141:17" pos:end="143:95">else<block type="pseudo" pos:start="143:21" pos:end="143:95"><block_content pos:start="143:21" pos:end="143:95">

                    <expr_stmt pos:start="143:21" pos:end="143:95"><expr pos:start="143:21" pos:end="143:94"><name pos:start="143:21" pos:end="143:26">offset</name> <operator pos:start="143:28" pos:end="143:28">=</operator> <operator pos:start="143:30" pos:end="143:30">(</operator><operator pos:start="143:31" pos:end="143:31">(</operator><name pos:start="143:32" pos:end="143:37">offset</name> <operator pos:start="143:39" pos:end="143:39">/</operator> <name pos:start="143:41" pos:end="143:55">planepitch_byte</name><operator pos:start="143:56" pos:end="143:56">)</operator> <operator pos:start="143:58" pos:end="143:58">*</operator> <name pos:start="143:60" pos:end="143:64">pitch</name><operator pos:start="143:65" pos:end="143:65">)</operator> <operator pos:start="143:67" pos:end="143:67">+</operator> <operator pos:start="143:69" pos:end="143:69">(</operator><name pos:start="143:70" pos:end="143:75">offset</name> <operator pos:start="143:77" pos:end="143:77">%</operator> <name pos:start="143:79" pos:end="143:93">planepitch_byte</name><operator pos:start="143:94" pos:end="143:94">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <for pos:start="147:17" pos:end="185:17">for <control pos:start="147:21" pos:end="147:42">(<init pos:start="147:22" pos:end="147:27"><expr pos:start="147:22" pos:end="147:26"><name pos:start="147:22" pos:end="147:22">r</name> <operator pos:start="147:24" pos:end="147:24">=</operator> <literal type="number" pos:start="147:26" pos:end="147:26">0</literal></expr>;</init> <condition pos:start="147:29" pos:end="147:37"><expr pos:start="147:29" pos:end="147:36"><name pos:start="147:29" pos:end="147:29">r</name> <operator pos:start="147:31" pos:end="147:31">&lt;</operator> <name pos:start="147:33" pos:end="147:36">rows</name></expr>;</condition> <incr pos:start="147:39" pos:end="147:41"><expr pos:start="147:39" pos:end="147:41"><name pos:start="147:39" pos:end="147:39">r</name><operator pos:start="147:40" pos:end="147:41">++</operator></expr></incr>)</control> <block pos:start="147:44" pos:end="185:17">{<block_content pos:start="149:21" pos:end="183:21">

                    <for pos:start="149:21" pos:end="183:21">for <control pos:start="149:25" pos:end="149:45">(<init pos:start="149:26" pos:end="149:31"><expr pos:start="149:26" pos:end="149:30"><name pos:start="149:26" pos:end="149:26">d</name> <operator pos:start="149:28" pos:end="149:28">=</operator> <literal type="number" pos:start="149:30" pos:end="149:30">0</literal></expr>;</init> <condition pos:start="149:33" pos:end="149:40"><expr pos:start="149:33" pos:end="149:39"><name pos:start="149:33" pos:end="149:33">d</name> <operator pos:start="149:35" pos:end="149:35">&lt;</operator> <name pos:start="149:37" pos:end="149:39">bpp</name></expr>;</condition> <incr pos:start="149:42" pos:end="149:44"><expr pos:start="149:42" pos:end="149:44"><name pos:start="149:42" pos:end="149:42">d</name><operator pos:start="149:43" pos:end="149:44">++</operator></expr></incr>)</control> <block pos:start="149:47" pos:end="183:21">{<block_content pos:start="151:25" pos:end="181:25">

                        <expr_stmt pos:start="151:25" pos:end="151:74"><expr pos:start="151:25" pos:end="151:73"><name pos:start="151:25" pos:end="151:27">ptr</name> <operator pos:start="151:29" pos:end="151:29">=</operator> <name pos:start="151:31" pos:end="151:33">dst</name> <operator pos:start="151:35" pos:end="151:35">+</operator> <name pos:start="151:37" pos:end="151:42">offset</name> <operator pos:start="151:44" pos:end="151:44">+</operator> <operator pos:start="151:46" pos:end="151:46">(</operator><name pos:start="151:47" pos:end="151:47">r</name> <operator pos:start="151:49" pos:end="151:49">*</operator> <name pos:start="151:51" pos:end="151:55">pitch</name><operator pos:start="151:56" pos:end="151:56">)</operator> <operator pos:start="151:58" pos:end="151:58">+</operator> <name pos:start="151:60" pos:end="151:60">d</name> <operator pos:start="151:62" pos:end="151:62">*</operator> <name pos:start="151:64" pos:end="151:73">planepitch</name></expr>;</expr_stmt>

                        <if_stmt pos:start="153:25" pos:end="155:35"><if pos:start="153:25" pos:end="155:35">if <condition pos:start="153:28" pos:end="153:39">(<expr pos:start="153:29" pos:end="153:38"><name pos:start="153:29" pos:end="153:31">ptr</name> <operator pos:start="153:33" pos:end="153:34">&gt;=</operator> <name pos:start="153:36" pos:end="153:38">end</name></expr>)</condition><block type="pseudo" pos:start="155:29" pos:end="155:35"><block_content pos:start="155:29" pos:end="155:35">

                            <return pos:start="155:29" pos:end="155:35">return;</return></block_content></block></if></if_stmt>



                        <for pos:start="159:25" pos:end="181:25">for <control pos:start="159:29" pos:end="159:51">(<init pos:start="159:30" pos:end="159:35"><expr pos:start="159:30" pos:end="159:34"><name pos:start="159:30" pos:end="159:30">b</name> <operator pos:start="159:32" pos:end="159:32">=</operator> <literal type="number" pos:start="159:34" pos:end="159:34">0</literal></expr>;</init> <condition pos:start="159:37" pos:end="159:46"><expr pos:start="159:37" pos:end="159:45"><name pos:start="159:37" pos:end="159:37">b</name> <operator pos:start="159:39" pos:end="159:39">&lt;</operator> <name pos:start="159:41" pos:end="159:45">bytes</name></expr>;</condition> <incr pos:start="159:48" pos:end="159:50"><expr pos:start="159:48" pos:end="159:50"><name pos:start="159:48" pos:end="159:48">b</name><operator pos:start="159:49" pos:end="159:50">++</operator></expr></incr>)</control> <block pos:start="159:53" pos:end="181:25">{<block_content pos:start="161:29" pos:end="179:39">

                            <decl_stmt pos:start="161:29" pos:end="161:70"><decl pos:start="161:29" pos:end="161:69"><type pos:start="161:29" pos:end="161:35"><name pos:start="161:29" pos:end="161:35">uint8_t</name></type> <name pos:start="161:37" pos:end="161:41">value</name> <init pos:start="161:43" pos:end="161:69">= <expr pos:start="161:45" pos:end="161:69"><call pos:start="161:45" pos:end="161:69"><name pos:start="161:45" pos:end="161:64">bytestream2_get_byte</name><argument_list pos:start="161:65" pos:end="161:69">(<argument pos:start="161:66" pos:end="161:68"><expr pos:start="161:66" pos:end="161:68"><operator pos:start="161:66" pos:end="161:66">&amp;</operator><name pos:start="161:67" pos:end="161:68">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                            <if_stmt pos:start="165:29" pos:end="171:48"><if pos:start="165:29" pos:end="167:48">if <condition pos:start="165:32" pos:end="165:37">(<expr pos:start="165:33" pos:end="165:36"><name pos:start="165:33" pos:end="165:36">flag</name></expr>)</condition><block type="pseudo" pos:start="167:33" pos:end="167:48"><block_content pos:start="167:33" pos:end="167:48">

                                <expr_stmt pos:start="167:33" pos:end="167:48"><expr pos:start="167:33" pos:end="167:47"><name pos:start="167:33" pos:end="167:38"><name pos:start="167:33" pos:end="167:35">ptr</name><index pos:start="167:36" pos:end="167:38">[<expr pos:start="167:37" pos:end="167:37"><literal type="number" pos:start="167:37" pos:end="167:37">0</literal></expr>]</index></name> <operator pos:start="167:40" pos:end="167:41">^=</operator> <name pos:start="167:43" pos:end="167:47">value</name></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="169:29" pos:end="171:48">else<block type="pseudo" pos:start="171:33" pos:end="171:48"><block_content pos:start="171:33" pos:end="171:48">

                                <expr_stmt pos:start="171:33" pos:end="171:48"><expr pos:start="171:33" pos:end="171:47"><name pos:start="171:33" pos:end="171:38"><name pos:start="171:33" pos:end="171:35">ptr</name><index pos:start="171:36" pos:end="171:38">[<expr pos:start="171:37" pos:end="171:37"><literal type="number" pos:start="171:37" pos:end="171:37">0</literal></expr>]</index></name>  <operator pos:start="171:41" pos:end="171:41">=</operator> <name pos:start="171:43" pos:end="171:47">value</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                            <expr_stmt pos:start="175:29" pos:end="175:34"><expr pos:start="175:29" pos:end="175:33"><name pos:start="175:29" pos:end="175:31">ptr</name><operator pos:start="175:32" pos:end="175:33">++</operator></expr>;</expr_stmt>

                            <if_stmt pos:start="177:29" pos:end="179:39"><if pos:start="177:29" pos:end="179:39">if <condition pos:start="177:32" pos:end="177:43">(<expr pos:start="177:33" pos:end="177:42"><name pos:start="177:33" pos:end="177:35">ptr</name> <operator pos:start="177:37" pos:end="177:38">&gt;=</operator> <name pos:start="177:40" pos:end="177:42">end</name></expr>)</condition><block type="pseudo" pos:start="179:33" pos:end="179:39"><block_content pos:start="179:33" pos:end="179:39">

                                <return pos:start="179:33" pos:end="179:39">return;</return></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block></for>

                <if_stmt pos:start="187:17" pos:end="189:45"><if pos:start="187:17" pos:end="189:45">if <condition pos:start="187:20" pos:end="187:45">(<expr pos:start="187:21" pos:end="187:44"><operator pos:start="187:21" pos:end="187:21">(</operator><name pos:start="187:22" pos:end="187:25">rows</name> <operator pos:start="187:27" pos:end="187:27">*</operator> <name pos:start="187:29" pos:end="187:33">bytes</name> <operator pos:start="187:35" pos:end="187:35">*</operator> <name pos:start="187:37" pos:end="187:39">bpp</name><operator pos:start="187:40" pos:end="187:40">)</operator> <operator pos:start="187:42" pos:end="187:42">&amp;</operator> <literal type="number" pos:start="187:44" pos:end="187:44">1</literal></expr>)</condition><block type="pseudo" pos:start="189:21" pos:end="189:45"><block_content pos:start="189:21" pos:end="189:45">

                    <expr_stmt pos:start="189:21" pos:end="189:45"><expr pos:start="189:21" pos:end="189:44"><call pos:start="189:21" pos:end="189:44"><name pos:start="189:21" pos:end="189:36">bytestream2_skip</name><argument_list pos:start="189:37" pos:end="189:44">(<argument pos:start="189:38" pos:end="189:40"><expr pos:start="189:38" pos:end="189:40"><operator pos:start="189:38" pos:end="189:38">&amp;</operator><name pos:start="189:39" pos:end="189:40">gb</name></expr></argument>, <argument pos:start="189:43" pos:end="189:43"><expr pos:start="189:43" pos:end="189:43"><literal type="number" pos:start="189:43" pos:end="189:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <default pos:start="195:9" pos:end="195:16">default:</default>

            <return pos:start="197:13" pos:end="197:19">return;</return>

        </block_content>}</block></switch>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
