<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24377.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:54"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">qxl_init_ramsize</name><parameter_list pos:start="1:29" pos:end="1:47">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">PCIQXLDevice</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">qxl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:54">{<block_content pos:start="7:5" pos:end="77:54">

    <comment type="block" pos:start="5:5" pos:end="5:68">/* vga mode framebuffer / primary surface (bar 0, first part) */</comment>

    <if_stmt pos:start="7:5" pos:end="77:54"><if pos:start="7:5" pos:end="77:54">if <condition pos:start="7:8" pos:end="7:32">(<expr pos:start="7:9" pos:end="7:31"><name pos:start="7:9" pos:end="7:27"><name pos:start="7:9" pos:end="7:11">qxl</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:27">vgamem_size_mb</name></name> <operator pos:start="7:29" pos:end="7:29">&lt;</operator> <literal type="number" pos:start="7:31" pos:end="7:31">8</literal></expr>)</condition> <block pos:start="7:34" pos:end="77:54">{<block_content pos:start="9:9" pos:end="77:54">

        <expr_stmt pos:start="9:9" pos:end="9:32"><expr pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:27"><name pos:start="9:9" pos:end="9:11">qxl</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:27">vgamem_size_mb</name></name> <operator pos:start="9:29" pos:end="9:29">=</operator> <literal type="number" pos:start="9:31" pos:end="9:31">8</literal></expr>;</expr_stmt>








    <expr_stmt pos:start="18:5" pos:end="18:57"><expr pos:start="18:5" pos:end="18:56"><name pos:start="18:5" pos:end="18:20"><name pos:start="18:5" pos:end="18:7">qxl</name><operator pos:start="18:8" pos:end="18:9">-&gt;</operator><name pos:start="18:10" pos:end="18:20">vgamem_size</name></name> <operator pos:start="18:22" pos:end="18:22">=</operator> <name pos:start="18:24" pos:end="18:42"><name pos:start="18:24" pos:end="18:26">qxl</name><operator pos:start="18:27" pos:end="18:28">-&gt;</operator><name pos:start="18:29" pos:end="18:42">vgamem_size_mb</name></name> <operator pos:start="18:44" pos:end="18:44">*</operator> <literal type="number" pos:start="18:46" pos:end="18:49">1024</literal> <operator pos:start="18:51" pos:end="18:51">*</operator> <literal type="number" pos:start="18:53" pos:end="18:56">1024</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="22:5" pos:end="22:32">/* vga ram (bar 0, total) */</comment>

    <if_stmt pos:start="24:5" pos:end="77:54"><if pos:start="24:5" pos:end="77:54">if <condition pos:start="24:8" pos:end="24:31">(<expr pos:start="24:9" pos:end="24:30"><name pos:start="24:9" pos:end="24:24"><name pos:start="24:9" pos:end="24:11">qxl</name><operator pos:start="24:12" pos:end="24:13">-&gt;</operator><name pos:start="24:14" pos:end="24:24">ram_size_mb</name></name> <operator pos:start="24:26" pos:end="24:27">!=</operator> <operator pos:start="24:29" pos:end="24:29">-</operator><literal type="number" pos:start="24:30" pos:end="24:30">1</literal></expr>)</condition> <block pos:start="24:33" pos:end="77:54">{<block_content pos:start="26:9" pos:end="77:54">

        <expr_stmt pos:start="26:9" pos:end="26:60"><expr pos:start="26:9" pos:end="26:59"><name pos:start="26:9" pos:end="26:26"><name pos:start="26:9" pos:end="26:11">qxl</name><operator pos:start="26:12" pos:end="26:13">-&gt;</operator><name pos:start="26:14" pos:end="26:16">vga</name><operator pos:start="26:17" pos:end="26:17">.</operator><name pos:start="26:18" pos:end="26:26">vram_size</name></name> <operator pos:start="26:28" pos:end="26:28">=</operator> <name pos:start="26:30" pos:end="26:45"><name pos:start="26:30" pos:end="26:32">qxl</name><operator pos:start="26:33" pos:end="26:34">-&gt;</operator><name pos:start="26:35" pos:end="26:45">ram_size_mb</name></name> <operator pos:start="26:47" pos:end="26:47">*</operator> <literal type="number" pos:start="26:49" pos:end="26:52">1024</literal> <operator pos:start="26:54" pos:end="26:54">*</operator> <literal type="number" pos:start="26:56" pos:end="26:59">1024</literal></expr>;</expr_stmt>


    <if_stmt pos:start="29:5" pos:end="77:54"><if pos:start="29:5" pos:end="77:54">if <condition pos:start="29:8" pos:end="29:50">(<expr pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:11">qxl</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:16">vga</name><operator pos:start="29:17" pos:end="29:17">.</operator><name pos:start="29:18" pos:end="29:26">vram_size</name></name> <operator pos:start="29:28" pos:end="29:28">&lt;</operator> <name pos:start="29:30" pos:end="29:45"><name pos:start="29:30" pos:end="29:32">qxl</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:45">vgamem_size</name></name> <operator pos:start="29:47" pos:end="29:47">*</operator> <literal type="number" pos:start="29:49" pos:end="29:49">2</literal></expr>)</condition> <block pos:start="29:52" pos:end="77:54">{<block_content pos:start="31:9" pos:end="77:54">

        <expr_stmt pos:start="31:9" pos:end="31:50"><expr pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:11">qxl</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:16">vga</name><operator pos:start="31:17" pos:end="31:17">.</operator><name pos:start="31:18" pos:end="31:26">vram_size</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <name pos:start="31:30" pos:end="31:45"><name pos:start="31:30" pos:end="31:32">qxl</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:45">vgamem_size</name></name> <operator pos:start="31:47" pos:end="31:47">*</operator> <literal type="number" pos:start="31:49" pos:end="31:49">2</literal></expr>;</expr_stmt>




    <comment type="block" pos:start="36:5" pos:end="36:41">/* vram32 (surfaces, 32bit, bar 1) */</comment>

    <if_stmt pos:start="38:5" pos:end="77:54"><if pos:start="38:5" pos:end="77:54">if <condition pos:start="38:8" pos:end="38:34">(<expr pos:start="38:9" pos:end="38:33"><name pos:start="38:9" pos:end="38:27"><name pos:start="38:9" pos:end="38:11">qxl</name><operator pos:start="38:12" pos:end="38:13">-&gt;</operator><name pos:start="38:14" pos:end="38:27">vram32_size_mb</name></name> <operator pos:start="38:29" pos:end="38:30">!=</operator> <operator pos:start="38:32" pos:end="38:32">-</operator><literal type="number" pos:start="38:33" pos:end="38:33">1</literal></expr>)</condition> <block pos:start="38:36" pos:end="77:54">{<block_content pos:start="40:9" pos:end="77:54">

        <expr_stmt pos:start="40:9" pos:end="40:61"><expr pos:start="40:9" pos:end="40:60"><name pos:start="40:9" pos:end="40:24"><name pos:start="40:9" pos:end="40:11">qxl</name><operator pos:start="40:12" pos:end="40:13">-&gt;</operator><name pos:start="40:14" pos:end="40:24">vram32_size</name></name> <operator pos:start="40:26" pos:end="40:26">=</operator> <name pos:start="40:28" pos:end="40:46"><name pos:start="40:28" pos:end="40:30">qxl</name><operator pos:start="40:31" pos:end="40:32">-&gt;</operator><name pos:start="40:33" pos:end="40:46">vram32_size_mb</name></name> <operator pos:start="40:48" pos:end="40:48">*</operator> <literal type="number" pos:start="40:50" pos:end="40:53">1024</literal> <operator pos:start="40:55" pos:end="40:55">*</operator> <literal type="number" pos:start="40:57" pos:end="40:60">1024</literal></expr>;</expr_stmt>


    <if_stmt pos:start="43:5" pos:end="77:54"><if pos:start="43:5" pos:end="77:54">if <condition pos:start="43:8" pos:end="43:32">(<expr pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:11">qxl</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:24">vram32_size</name></name> <operator pos:start="43:26" pos:end="43:26">&lt;</operator> <literal type="number" pos:start="43:28" pos:end="43:31">4096</literal></expr>)</condition> <block pos:start="43:34" pos:end="77:54">{<block_content pos:start="45:9" pos:end="77:54">

        <expr_stmt pos:start="45:9" pos:end="45:32"><expr pos:start="45:9" pos:end="45:31"><name pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:11">qxl</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:24">vram32_size</name></name> <operator pos:start="45:26" pos:end="45:26">=</operator> <literal type="number" pos:start="45:28" pos:end="45:31">4096</literal></expr>;</expr_stmt>




    <comment type="block" pos:start="50:5" pos:end="50:41">/* vram (surfaces, 64bit, bar 4+5) */</comment>

    <if_stmt pos:start="52:5" pos:end="77:54"><if pos:start="52:5" pos:end="77:54">if <condition pos:start="52:8" pos:end="52:32">(<expr pos:start="52:9" pos:end="52:31"><name pos:start="52:9" pos:end="52:25"><name pos:start="52:9" pos:end="52:11">qxl</name><operator pos:start="52:12" pos:end="52:13">-&gt;</operator><name pos:start="52:14" pos:end="52:25">vram_size_mb</name></name> <operator pos:start="52:27" pos:end="52:28">!=</operator> <operator pos:start="52:30" pos:end="52:30">-</operator><literal type="number" pos:start="52:31" pos:end="52:31">1</literal></expr>)</condition> <block pos:start="52:34" pos:end="77:54">{<block_content pos:start="54:9" pos:end="77:54">

        <expr_stmt pos:start="54:9" pos:end="54:57"><expr pos:start="54:9" pos:end="54:56"><name pos:start="54:9" pos:end="54:22"><name pos:start="54:9" pos:end="54:11">qxl</name><operator pos:start="54:12" pos:end="54:13">-&gt;</operator><name pos:start="54:14" pos:end="54:22">vram_size</name></name> <operator pos:start="54:24" pos:end="54:24">=</operator> <name pos:start="54:26" pos:end="54:42"><name pos:start="54:26" pos:end="54:28">qxl</name><operator pos:start="54:29" pos:end="54:30">-&gt;</operator><name pos:start="54:31" pos:end="54:42">vram_size_mb</name></name> <operator pos:start="54:44" pos:end="54:44">*</operator> <literal type="number" pos:start="54:46" pos:end="54:49">1024</literal> <operator pos:start="54:51" pos:end="54:51">*</operator> <literal type="number" pos:start="54:53" pos:end="54:56">1024</literal></expr>;</expr_stmt>


    <if_stmt pos:start="57:5" pos:end="77:54"><if pos:start="57:5" pos:end="77:54">if <condition pos:start="57:8" pos:end="57:42">(<expr pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:11">qxl</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:22">vram_size</name></name> <operator pos:start="57:24" pos:end="57:24">&lt;</operator> <name pos:start="57:26" pos:end="57:41"><name pos:start="57:26" pos:end="57:28">qxl</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:41">vram32_size</name></name></expr>)</condition> <block pos:start="57:44" pos:end="77:54">{<block_content pos:start="59:9" pos:end="77:54">

        <expr_stmt pos:start="59:9" pos:end="59:42"><expr pos:start="59:9" pos:end="59:41"><name pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:11">qxl</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:22">vram_size</name></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:41"><name pos:start="59:26" pos:end="59:28">qxl</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:41">vram32_size</name></name></expr>;</expr_stmt>




    <if_stmt pos:start="64:5" pos:end="77:54"><if pos:start="64:5" pos:end="77:54">if <condition pos:start="64:8" pos:end="64:27">(<expr pos:start="64:9" pos:end="64:26"><name pos:start="64:9" pos:end="64:21"><name pos:start="64:9" pos:end="64:11">qxl</name><operator pos:start="64:12" pos:end="64:13">-&gt;</operator><name pos:start="64:14" pos:end="64:21">revision</name></name> <operator pos:start="64:23" pos:end="64:24">==</operator> <literal type="number" pos:start="64:26" pos:end="64:26">1</literal></expr>)</condition> <block pos:start="64:29" pos:end="77:54">{<block_content pos:start="66:9" pos:end="77:54">

        <expr_stmt pos:start="66:9" pos:end="66:32"><expr pos:start="66:9" pos:end="66:31"><name pos:start="66:9" pos:end="66:24"><name pos:start="66:9" pos:end="66:11">qxl</name><operator pos:start="66:12" pos:end="66:13">-&gt;</operator><name pos:start="66:14" pos:end="66:24">vram32_size</name></name> <operator pos:start="66:26" pos:end="66:26">=</operator> <literal type="number" pos:start="66:28" pos:end="66:31">4096</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="68:9" pos:end="68:30"><expr pos:start="68:9" pos:end="68:29"><name pos:start="68:9" pos:end="68:22"><name pos:start="68:9" pos:end="68:11">qxl</name><operator pos:start="68:12" pos:end="68:13">-&gt;</operator><name pos:start="68:14" pos:end="68:22">vram_size</name></name> <operator pos:start="68:24" pos:end="68:24">=</operator> <literal type="number" pos:start="68:26" pos:end="68:29">4096</literal></expr>;</expr_stmt>


    <expr_stmt pos:start="71:5" pos:end="71:58"><expr pos:start="71:5" pos:end="71:57"><name pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:7">qxl</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:20">vgamem_size</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <call pos:start="71:24" pos:end="71:57"><name pos:start="71:24" pos:end="71:31">msb_mask</name><argument_list pos:start="71:32" pos:end="71:57">(<argument pos:start="71:33" pos:end="71:56"><expr pos:start="71:33" pos:end="71:56"><name pos:start="71:33" pos:end="71:48"><name pos:start="71:33" pos:end="71:35">qxl</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:48">vgamem_size</name></name> <operator pos:start="71:50" pos:end="71:50">*</operator> <literal type="number" pos:start="71:52" pos:end="71:54">2</literal> <operator pos:start="71:54" pos:end="71:54">-</operator> <literal type="number" pos:start="71:56" pos:end="71:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:62"><expr pos:start="73:5" pos:end="73:61"><name pos:start="73:5" pos:end="73:22"><name pos:start="73:5" pos:end="73:7">qxl</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:12">vga</name><operator pos:start="73:13" pos:end="73:13">.</operator><name pos:start="73:14" pos:end="73:22">vram_size</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <call pos:start="73:26" pos:end="73:61"><name pos:start="73:26" pos:end="73:33">msb_mask</name><argument_list pos:start="73:34" pos:end="73:61">(<argument pos:start="73:35" pos:end="73:60"><expr pos:start="73:35" pos:end="73:60"><name pos:start="73:35" pos:end="73:52"><name pos:start="73:35" pos:end="73:37">qxl</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:42">vga</name><operator pos:start="73:43" pos:end="73:43">.</operator><name pos:start="73:44" pos:end="73:52">vram_size</name></name> <operator pos:start="73:54" pos:end="73:54">*</operator> <literal type="number" pos:start="73:56" pos:end="73:58">2</literal> <operator pos:start="73:58" pos:end="73:58">-</operator> <literal type="number" pos:start="73:60" pos:end="73:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:58"><expr pos:start="75:5" pos:end="75:57"><name pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:7">qxl</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:20">vram32_size</name></name> <operator pos:start="75:22" pos:end="75:22">=</operator> <call pos:start="75:24" pos:end="75:57"><name pos:start="75:24" pos:end="75:31">msb_mask</name><argument_list pos:start="75:32" pos:end="75:57">(<argument pos:start="75:33" pos:end="75:56"><expr pos:start="75:33" pos:end="75:56"><name pos:start="75:33" pos:end="75:48"><name pos:start="75:33" pos:end="75:35">qxl</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:48">vram32_size</name></name> <operator pos:start="75:50" pos:end="75:50">*</operator> <literal type="number" pos:start="75:52" pos:end="75:54">2</literal> <operator pos:start="75:54" pos:end="75:54">-</operator> <literal type="number" pos:start="75:56" pos:end="75:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:54"><expr pos:start="77:5" pos:end="77:53"><name pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:7">qxl</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:18">vram_size</name></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <call pos:start="77:22" pos:end="77:53"><name pos:start="77:22" pos:end="77:29">msb_mask</name><argument_list pos:start="77:30" pos:end="77:53">(<argument pos:start="77:31" pos:end="77:52"><expr pos:start="77:31" pos:end="77:52"><name pos:start="77:31" pos:end="77:44"><name pos:start="77:31" pos:end="77:33">qxl</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:44">vram_size</name></name> <operator pos:start="77:46" pos:end="77:46">*</operator> <literal type="number" pos:start="77:48" pos:end="77:50">2</literal> <operator pos:start="77:50" pos:end="77:50">-</operator> <literal type="number" pos:start="77:52" pos:end="77:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
