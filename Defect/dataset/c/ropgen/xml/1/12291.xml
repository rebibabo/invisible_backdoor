<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12291.c" pos:tabs="8"><function pos:start="1:1" pos:end="66:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">double</name></type> <name pos:start="1:15" pos:end="1:27">lfo_get_value</name><parameter_list pos:start="1:28" pos:end="1:43">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:37">SimpleLFO</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">lfo</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="66:1">{<block_content pos:start="5:5" pos:end="64:29">

    <decl_stmt pos:start="5:5" pos:end="5:94"><decl pos:start="5:5" pos:end="5:93"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">double</name></type> <name pos:start="5:12" pos:end="5:14">phs</name> <init pos:start="5:16" pos:end="5:93">= <expr pos:start="5:18" pos:end="5:93"><call pos:start="5:18" pos:end="5:93"><name pos:start="5:18" pos:end="5:22">FFMIN</name><argument_list pos:start="5:23" pos:end="5:93">(<argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><literal type="number" pos:start="5:24" pos:end="5:26">100</literal></expr></argument>, <argument pos:start="5:29" pos:end="5:92"><expr pos:start="5:29" pos:end="5:92"><name pos:start="5:29" pos:end="5:38"><name pos:start="5:29" pos:end="5:31">lfo</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:38">phase</name></name> <operator pos:start="5:40" pos:end="5:40">/</operator> <call pos:start="5:42" pos:end="5:78"><name pos:start="5:42" pos:end="5:46">FFMIN</name><argument_list pos:start="5:47" pos:end="5:78">(<argument pos:start="5:48" pos:end="5:51"><expr pos:start="5:48" pos:end="5:51"><literal type="number" pos:start="5:48" pos:end="5:51">1.99</literal></expr></argument>, <argument pos:start="5:54" pos:end="5:77"><expr pos:start="5:54" pos:end="5:77"><call pos:start="5:54" pos:end="5:77"><name pos:start="5:54" pos:end="5:58">FFMAX</name><argument_list pos:start="5:59" pos:end="5:77">(<argument pos:start="5:60" pos:end="5:63"><expr pos:start="5:60" pos:end="5:63"><literal type="number" pos:start="5:60" pos:end="5:63">0.01</literal></expr></argument>, <argument pos:start="5:66" pos:end="5:76"><expr pos:start="5:66" pos:end="5:76"><name pos:start="5:66" pos:end="5:76"><name pos:start="5:66" pos:end="5:68">lfo</name><operator pos:start="5:69" pos:end="5:70">-&gt;</operator><name pos:start="5:71" pos:end="5:76">pwidth</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="5:80" pos:end="5:80">+</operator> <name pos:start="5:82" pos:end="5:92"><name pos:start="5:82" pos:end="5:84">lfo</name><operator pos:start="5:85" pos:end="5:86">-&gt;</operator><name pos:start="5:87" pos:end="5:92">offset</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">double</name></type> <name pos:start="7:12" pos:end="7:14">val</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:28"><if pos:start="11:5" pos:end="13:28">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:11">phs</name> <operator pos:start="11:13" pos:end="11:13">&gt;</operator> <literal type="number" pos:start="11:15" pos:end="11:15">1</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:28"><block_content pos:start="13:9" pos:end="13:28">

        <expr_stmt pos:start="13:9" pos:end="13:28"><expr pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:11">phs</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:27"><name pos:start="13:15" pos:end="13:18">fmod</name><argument_list pos:start="13:19" pos:end="13:27">(<argument pos:start="13:20" pos:end="13:22"><expr pos:start="13:20" pos:end="13:22"><name pos:start="13:20" pos:end="13:22">phs</name></expr></argument>, <argument pos:start="13:25" pos:end="13:26"><expr pos:start="13:25" pos:end="13:26"><literal type="number" pos:start="13:25" pos:end="13:26">1.</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="17:5" pos:end="60:5">switch <condition pos:start="17:12" pos:end="17:22">(<expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:15">lfo</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:21">mode</name></name></expr>)</condition> <block pos:start="17:24" pos:end="60:5">{<block_content pos:start="19:5" pos:end="57:14">

    <case pos:start="19:5" pos:end="19:14">case <expr pos:start="19:10" pos:end="19:13"><name pos:start="19:10" pos:end="19:13">SINE</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:11">val</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:33"><name pos:start="21:15" pos:end="21:17">sin</name><argument_list pos:start="21:18" pos:end="21:33">(<argument pos:start="21:19" pos:end="21:32"><expr pos:start="21:19" pos:end="21:32"><name pos:start="21:19" pos:end="21:21">phs</name> <operator pos:start="21:23" pos:end="21:23">*</operator> <literal type="number" pos:start="21:25" pos:end="21:25">2</literal> <operator pos:start="21:27" pos:end="21:27">*</operator> <name pos:start="21:29" pos:end="21:32">M_PI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:18">case <expr pos:start="25:10" pos:end="25:17"><name pos:start="25:10" pos:end="25:17">TRIANGLE</name></expr>:</case>

        <if_stmt pos:start="27:9" pos:end="37:26"><if pos:start="27:9" pos:end="29:39">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:15">phs</name> <operator pos:start="27:17" pos:end="27:17">&gt;</operator> <literal type="number" pos:start="27:19" pos:end="27:22">0.75</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:39"><block_content pos:start="29:13" pos:end="29:39">

            <expr_stmt pos:start="29:13" pos:end="29:39"><expr pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:15">val</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <operator pos:start="29:19" pos:end="29:19">(</operator><name pos:start="29:20" pos:end="29:22">phs</name> <operator pos:start="29:24" pos:end="29:24">-</operator> <literal type="number" pos:start="29:26" pos:end="29:29">0.75</literal><operator pos:start="29:30" pos:end="29:30">)</operator> <operator pos:start="29:32" pos:end="29:32">*</operator> <literal type="number" pos:start="29:34" pos:end="29:36">4</literal> <operator pos:start="29:36" pos:end="29:36">-</operator> <literal type="number" pos:start="29:38" pos:end="29:38">1</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="31:9" pos:end="33:31">else if <condition pos:start="31:17" pos:end="31:28">(<expr pos:start="31:18" pos:end="31:27"><name pos:start="31:18" pos:end="31:20">phs</name> <operator pos:start="31:22" pos:end="31:22">&gt;</operator> <literal type="number" pos:start="31:24" pos:end="31:27">0.25</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:31"><block_content pos:start="33:13" pos:end="33:31">

            <expr_stmt pos:start="33:13" pos:end="33:31"><expr pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:15">val</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <operator pos:start="33:19" pos:end="33:19">-</operator><literal type="number" pos:start="33:20" pos:end="33:20">4</literal> <operator pos:start="33:22" pos:end="33:22">*</operator> <name pos:start="33:24" pos:end="33:26">phs</name> <operator pos:start="33:28" pos:end="33:28">+</operator> <literal type="number" pos:start="33:30" pos:end="33:30">2</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="35:9" pos:end="37:26">else<block type="pseudo" pos:start="37:13" pos:end="37:26"><block_content pos:start="37:13" pos:end="37:26">

            <expr_stmt pos:start="37:13" pos:end="37:26"><expr pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:15">val</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:21">phs</name> <operator pos:start="37:23" pos:end="37:23">*</operator> <literal type="number" pos:start="37:25" pos:end="37:25">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:16">case <expr pos:start="41:10" pos:end="41:15"><name pos:start="41:10" pos:end="41:15">SQUARE</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:34"><expr pos:start="43:9" pos:end="43:33"><name pos:start="43:9" pos:end="43:11">val</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <ternary pos:start="43:15" pos:end="43:33"><condition pos:start="43:15" pos:end="43:25"><expr pos:start="43:15" pos:end="43:23"><name pos:start="43:15" pos:end="43:17">phs</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <literal type="number" pos:start="43:21" pos:end="43:23">0.5</literal></expr> ?</condition><then pos:start="43:27" pos:end="43:28"> <expr pos:start="43:27" pos:end="43:28"><operator pos:start="43:27" pos:end="43:27">-</operator><literal type="number" pos:start="43:28" pos:end="43:28">1</literal></expr> </then><else pos:start="43:30" pos:end="43:33">: <expr pos:start="43:32" pos:end="43:33"><operator pos:start="43:32" pos:end="43:32">+</operator><literal type="number" pos:start="43:33" pos:end="43:33">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:15">case <expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:14">SAWUP</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:11">val</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <name pos:start="49:15" pos:end="49:17">phs</name> <operator pos:start="49:19" pos:end="49:19">*</operator> <literal type="number" pos:start="49:21" pos:end="49:23">2</literal> <operator pos:start="49:23" pos:end="49:23">-</operator> <literal type="number" pos:start="49:25" pos:end="49:25">1</literal></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:17">case <expr pos:start="53:10" pos:end="53:16"><name pos:start="53:10" pos:end="53:16">SAWDOWN</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:26"><expr pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:11">val</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <literal type="number" pos:start="55:15" pos:end="55:17">1</literal> <operator pos:start="55:17" pos:end="55:17">-</operator> <name pos:start="55:19" pos:end="55:21">phs</name> <operator pos:start="55:23" pos:end="55:23">*</operator> <literal type="number" pos:start="55:25" pos:end="55:25">2</literal></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>


    </block_content>}</block></switch>



    <return pos:start="64:5" pos:end="64:29">return <expr pos:start="64:12" pos:end="64:28"><name pos:start="64:12" pos:end="64:14">val</name> <operator pos:start="64:16" pos:end="64:16">*</operator> <name pos:start="64:18" pos:end="64:28"><name pos:start="64:18" pos:end="64:20">lfo</name><operator pos:start="64:21" pos:end="64:22">-&gt;</operator><name pos:start="64:23" pos:end="64:28">amount</name></name></expr>;</return>

</block_content>}</block></function></unit>
