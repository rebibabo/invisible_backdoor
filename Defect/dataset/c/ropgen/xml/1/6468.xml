<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6468.c" pos:tabs="8"><function pos:start="1:1" pos:end="36:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">h264_init_context</name><parameter_list pos:start="1:29" pos:end="1:67">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:66"><decl pos:start="1:53" pos:end="1:66"><type pos:start="1:53" pos:end="1:66"><name pos:start="1:53" pos:end="1:63">H264Context</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:66">h</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="36:1">{<block_content pos:start="3:5" pos:end="35:13">
    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="4:5" pos:end="4:37"><expr pos:start="4:5" pos:end="4:36"><name pos:start="4:5" pos:end="4:12"><name pos:start="4:5" pos:end="4:5">h</name><operator pos:start="4:6" pos:end="4:7">-&gt;</operator><name pos:start="4:8" pos:end="4:12">avctx</name></name>                 <operator pos:start="4:30" pos:end="4:30">=</operator> <name pos:start="4:32" pos:end="4:36">avctx</name></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:42"><expr pos:start="5:5" pos:end="5:41"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:5">h</name><operator pos:start="5:6" pos:end="5:7">-&gt;</operator><name pos:start="5:8" pos:end="5:24">picture_structure</name></name>     <operator pos:start="5:30" pos:end="5:30">=</operator> <name pos:start="5:32" pos:end="5:41">PICT_FRAME</name></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:54"><expr pos:start="6:5" pos:end="6:53"><name pos:start="6:5" pos:end="6:22"><name pos:start="6:5" pos:end="6:5">h</name><operator pos:start="6:6" pos:end="6:7">-&gt;</operator><name pos:start="6:8" pos:end="6:22">workaround_bugs</name></name>       <operator pos:start="6:30" pos:end="6:30">=</operator> <name pos:start="6:32" pos:end="6:53"><name pos:start="6:32" pos:end="6:36">avctx</name><operator pos:start="6:37" pos:end="6:38">-&gt;</operator><name pos:start="6:39" pos:end="6:53">workaround_bugs</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:44"><expr pos:start="7:5" pos:end="7:43"><name pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:5">h</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:12">flags</name></name>                 <operator pos:start="7:30" pos:end="7:30">=</operator> <name pos:start="7:32" pos:end="7:43"><name pos:start="7:32" pos:end="7:36">avctx</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:43">flags</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:39"><expr pos:start="8:5" pos:end="8:38"><name pos:start="8:5" pos:end="8:23"><name pos:start="8:5" pos:end="8:5">h</name><operator pos:start="8:6" pos:end="8:7">-&gt;</operator><name pos:start="8:8" pos:end="8:10">poc</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:23">prev_poc_msb</name></name>      <operator pos:start="8:30" pos:end="8:30">=</operator> <literal type="number" pos:start="8:32" pos:end="8:32">1</literal> <operator pos:start="8:34" pos:end="8:35">&lt;&lt;</operator> <literal type="number" pos:start="8:37" pos:end="8:38">16</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:5">h</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:21">recovery_frame</name></name>        <operator pos:start="9:30" pos:end="9:30">=</operator> <operator pos:start="9:32" pos:end="9:32">-</operator><literal type="number" pos:start="9:33" pos:end="9:33">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:33"><expr pos:start="10:5" pos:end="10:32"><name pos:start="10:5" pos:end="10:22"><name pos:start="10:5" pos:end="10:5">h</name><operator pos:start="10:6" pos:end="10:7">-&gt;</operator><name pos:start="10:8" pos:end="10:22">frame_recovered</name></name>       <operator pos:start="10:30" pos:end="10:30">=</operator> <literal type="number" pos:start="10:32" pos:end="10:32">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:35"><expr pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:5">h</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:24">next_outputed_poc</name></name> <operator pos:start="11:26" pos:end="11:26">=</operator> <name pos:start="11:28" pos:end="11:34">INT_MIN</name></expr>;</expr_stmt>
    <for pos:start="12:5" pos:end="13:34">for <control pos:start="12:9" pos:end="12:47">(<init pos:start="12:10" pos:end="12:15"><expr pos:start="12:10" pos:end="12:14"><name pos:start="12:10" pos:end="12:10">i</name> <operator pos:start="12:12" pos:end="12:12">=</operator> <literal type="number" pos:start="12:14" pos:end="12:14">0</literal></expr>;</init> <condition pos:start="12:17" pos:end="12:42"><expr pos:start="12:17" pos:end="12:41"><name pos:start="12:17" pos:end="12:17">i</name> <operator pos:start="12:19" pos:end="12:19">&lt;</operator> <name pos:start="12:21" pos:end="12:41">MAX_DELAYED_PIC_COUNT</name></expr>;</condition> <incr pos:start="12:44" pos:end="12:46"><expr pos:start="12:44" pos:end="12:46"><name pos:start="12:44" pos:end="12:44">i</name><operator pos:start="12:45" pos:end="12:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="13:9" pos:end="13:34"><block_content pos:start="13:9" pos:end="13:34">
        <expr_stmt pos:start="13:9" pos:end="13:34"><expr pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:9">h</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:20">last_pocs</name><index pos:start="13:21" pos:end="13:23">[<expr pos:start="13:22" pos:end="13:22"><name pos:start="13:22" pos:end="13:22">i</name></expr>]</index></name> <operator pos:start="13:25" pos:end="13:25">=</operator> <name pos:start="13:27" pos:end="13:33">INT_MIN</name></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="14:5" pos:end="14:32"><expr pos:start="14:5" pos:end="14:31"><call pos:start="14:5" pos:end="14:31"><name pos:start="14:5" pos:end="14:22">ff_h264_sei_uninit</name><argument_list pos:start="14:23" pos:end="14:31">(<argument pos:start="14:24" pos:end="14:30"><expr pos:start="14:24" pos:end="14:30"><operator pos:start="14:24" pos:end="14:24">&amp;</operator><name pos:start="14:25" pos:end="14:30"><name pos:start="14:25" pos:end="14:25">h</name><operator pos:start="14:26" pos:end="14:27">-&gt;</operator><name pos:start="14:28" pos:end="14:30">sei</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:54"><expr pos:start="15:5" pos:end="15:53"><name pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:9">avctx</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:33">chroma_sample_location</name></name> <operator pos:start="15:35" pos:end="15:35">=</operator> <name pos:start="15:37" pos:end="15:53">AVCHROMA_LOC_LEFT</name></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:94"><expr pos:start="16:5" pos:end="16:93"><name pos:start="16:5" pos:end="16:19"><name pos:start="16:5" pos:end="16:5">h</name><operator pos:start="16:6" pos:end="16:7">-&gt;</operator><name pos:start="16:8" pos:end="16:19">nb_slice_ctx</name></name> <operator pos:start="16:21" pos:end="16:21">=</operator> <ternary pos:start="16:23" pos:end="16:93"><condition pos:start="16:23" pos:end="16:69"><expr pos:start="16:23" pos:end="16:67"><operator pos:start="16:23" pos:end="16:23">(</operator><name pos:start="16:24" pos:end="16:48"><name pos:start="16:24" pos:end="16:28">avctx</name><operator pos:start="16:29" pos:end="16:30">-&gt;</operator><name pos:start="16:31" pos:end="16:48">active_thread_type</name></name> <operator pos:start="16:50" pos:end="16:50">&amp;</operator> <name pos:start="16:52" pos:end="16:66">FF_THREAD_SLICE</name><operator pos:start="16:67" pos:end="16:67">)</operator></expr> ?</condition><then pos:start="16:71" pos:end="16:89"> <expr pos:start="16:71" pos:end="16:89"><name pos:start="16:71" pos:end="16:89"><name pos:start="16:71" pos:end="16:75">avctx</name><operator pos:start="16:76" pos:end="16:77">-&gt;</operator><name pos:start="16:78" pos:end="16:89">thread_count</name></name></expr> </then><else pos:start="16:91" pos:end="16:93">: <expr pos:start="16:93" pos:end="16:93"><literal type="number" pos:start="16:93" pos:end="16:93">1</literal></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:76"><expr pos:start="17:5" pos:end="17:75"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:5">h</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:16">slice_ctx</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:75"><name pos:start="17:20" pos:end="17:35">av_mallocz_array</name><argument_list pos:start="17:36" pos:end="17:75">(<argument pos:start="17:37" pos:end="17:51"><expr pos:start="17:37" pos:end="17:51"><name pos:start="17:37" pos:end="17:51"><name pos:start="17:37" pos:end="17:37">h</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:51">nb_slice_ctx</name></name></expr></argument>, <argument pos:start="17:54" pos:end="17:74"><expr pos:start="17:54" pos:end="17:74"><sizeof pos:start="17:54" pos:end="17:74">sizeof<argument_list pos:start="17:60" pos:end="17:74">(<argument pos:start="17:61" pos:end="17:73"><expr pos:start="17:61" pos:end="17:73"><operator pos:start="17:61" pos:end="17:61">*</operator><name pos:start="17:62" pos:end="17:73"><name pos:start="17:62" pos:end="17:62">h</name><operator pos:start="17:63" pos:end="17:64">-&gt;</operator><name pos:start="17:65" pos:end="17:73">slice_ctx</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="18:5" pos:end="21:5"><if pos:start="18:5" pos:end="21:5">if <condition pos:start="18:8" pos:end="18:22">(<expr pos:start="18:9" pos:end="18:21"><operator pos:start="18:9" pos:end="18:9">!</operator><name pos:start="18:10" pos:end="18:21"><name pos:start="18:10" pos:end="18:10">h</name><operator pos:start="18:11" pos:end="18:12">-&gt;</operator><name pos:start="18:13" pos:end="18:21">slice_ctx</name></name></expr>)</condition> <block pos:start="18:24" pos:end="21:5">{<block_content pos:start="19:9" pos:end="20:31">
        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:9">h</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:23">nb_slice_ctx</name></name> <operator pos:start="19:25" pos:end="19:25">=</operator> <literal type="number" pos:start="19:27" pos:end="19:27">0</literal></expr>;</expr_stmt>
        <return pos:start="20:9" pos:end="20:31">return <expr pos:start="20:16" pos:end="20:30"><call pos:start="20:16" pos:end="20:30"><name pos:start="20:16" pos:end="20:22">AVERROR</name><argument_list pos:start="20:23" pos:end="20:30">(<argument pos:start="20:24" pos:end="20:29"><expr pos:start="20:24" pos:end="20:29"><name pos:start="20:24" pos:end="20:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="22:5" pos:end="26:5">for <control pos:start="22:9" pos:end="22:48">(<init pos:start="22:10" pos:end="22:15"><expr pos:start="22:10" pos:end="22:14"><name pos:start="22:10" pos:end="22:10">i</name> <operator pos:start="22:12" pos:end="22:12">=</operator> <literal type="number" pos:start="22:14" pos:end="22:14">0</literal></expr>;</init> <condition pos:start="22:17" pos:end="22:43"><expr pos:start="22:17" pos:end="22:42"><name pos:start="22:17" pos:end="22:17">i</name> <operator pos:start="22:19" pos:end="22:19">&lt;</operator> <name pos:start="22:21" pos:end="22:42">H264_MAX_PICTURE_COUNT</name></expr>;</condition> <incr pos:start="22:45" pos:end="22:47"><expr pos:start="22:45" pos:end="22:47"><name pos:start="22:45" pos:end="22:45">i</name><operator pos:start="22:46" pos:end="22:47">++</operator></expr></incr>)</control> <block pos:start="22:50" pos:end="26:5">{<block_content pos:start="23:9" pos:end="25:35">
        <expr_stmt pos:start="23:9" pos:end="23:39"><expr pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:9">h</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:14">DPB</name><index pos:start="23:15" pos:end="23:17">[<expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">i</name></expr>]</index></name><operator pos:start="23:18" pos:end="23:18">.</operator><name pos:start="23:19" pos:end="23:19">f</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:38"><name pos:start="23:23" pos:end="23:36">av_frame_alloc</name><argument_list pos:start="23:37" pos:end="23:38">()</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="24:9" pos:end="25:35"><if pos:start="24:9" pos:end="25:35">if <condition pos:start="24:12" pos:end="24:25">(<expr pos:start="24:13" pos:end="24:24"><operator pos:start="24:13" pos:end="24:13">!</operator><name pos:start="24:14" pos:end="24:22"><name pos:start="24:14" pos:end="24:14">h</name><operator pos:start="24:15" pos:end="24:16">-&gt;</operator><name pos:start="24:17" pos:end="24:19">DPB</name><index pos:start="24:20" pos:end="24:22">[<expr pos:start="24:21" pos:end="24:21"><name pos:start="24:21" pos:end="24:21">i</name></expr>]</index></name><operator pos:start="24:23" pos:end="24:23">.</operator><name pos:start="24:24" pos:end="24:24">f</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:35"><block_content pos:start="25:13" pos:end="25:35">
            <return pos:start="25:13" pos:end="25:35">return <expr pos:start="25:20" pos:end="25:34"><call pos:start="25:20" pos:end="25:34"><name pos:start="25:20" pos:end="25:26">AVERROR</name><argument_list pos:start="25:27" pos:end="25:34">(<argument pos:start="25:28" pos:end="25:33"><expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:5">h</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:14">cur_pic</name><operator pos:start="27:15" pos:end="27:15">.</operator><name pos:start="27:16" pos:end="27:16">f</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:35"><name pos:start="27:20" pos:end="27:33">av_frame_alloc</name><argument_list pos:start="27:34" pos:end="27:35">()</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="28:5" pos:end="29:31"><if pos:start="28:5" pos:end="29:31">if <condition pos:start="28:8" pos:end="28:22">(<expr pos:start="28:9" pos:end="28:21"><operator pos:start="28:9" pos:end="28:9">!</operator><name pos:start="28:10" pos:end="28:21"><name pos:start="28:10" pos:end="28:10">h</name><operator pos:start="28:11" pos:end="28:12">-&gt;</operator><name pos:start="28:13" pos:end="28:19">cur_pic</name><operator pos:start="28:20" pos:end="28:20">.</operator><name pos:start="28:21" pos:end="28:21">f</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:31"><block_content pos:start="29:9" pos:end="29:31">
        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:39"><expr pos:start="30:5" pos:end="30:38"><name pos:start="30:5" pos:end="30:19"><name pos:start="30:5" pos:end="30:5">h</name><operator pos:start="30:6" pos:end="30:7">-&gt;</operator><name pos:start="30:8" pos:end="30:19">output_frame</name></name> <operator pos:start="30:21" pos:end="30:21">=</operator> <call pos:start="30:23" pos:end="30:38"><name pos:start="30:23" pos:end="30:36">av_frame_alloc</name><argument_list pos:start="30:37" pos:end="30:38">()</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="31:5" pos:end="32:31"><if pos:start="31:5" pos:end="32:31">if <condition pos:start="31:8" pos:end="31:25">(<expr pos:start="31:9" pos:end="31:24"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:10">h</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:24">output_frame</name></name></expr>)</condition><block type="pseudo" pos:start="32:9" pos:end="32:31"><block_content pos:start="32:9" pos:end="32:31">
        <return pos:start="32:9" pos:end="32:31">return <expr pos:start="32:16" pos:end="32:30"><call pos:start="32:16" pos:end="32:30"><name pos:start="32:16" pos:end="32:22">AVERROR</name><argument_list pos:start="32:23" pos:end="32:30">(<argument pos:start="32:24" pos:end="32:29"><expr pos:start="32:24" pos:end="32:29"><name pos:start="32:24" pos:end="32:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <for pos:start="33:5" pos:end="34:33">for <control pos:start="33:9" pos:end="33:41">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:36"><expr pos:start="33:17" pos:end="33:35"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:35"><name pos:start="33:21" pos:end="33:21">h</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:35">nb_slice_ctx</name></name></expr>;</condition> <incr pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:38">i</name><operator pos:start="33:39" pos:end="33:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="34:9" pos:end="34:33"><block_content pos:start="34:9" pos:end="34:33">
        <expr_stmt pos:start="34:9" pos:end="34:33"><expr pos:start="34:9" pos:end="34:32"><name pos:start="34:9" pos:end="34:23"><name pos:start="34:9" pos:end="34:9">h</name><operator pos:start="34:10" pos:end="34:11">-&gt;</operator><name pos:start="34:12" pos:end="34:20">slice_ctx</name><index pos:start="34:21" pos:end="34:23">[<expr pos:start="34:22" pos:end="34:22"><name pos:start="34:22" pos:end="34:22">i</name></expr>]</index></name><operator pos:start="34:24" pos:end="34:24">.</operator><name pos:start="34:25" pos:end="34:28">h264</name> <operator pos:start="34:30" pos:end="34:30">=</operator> <name pos:start="34:32" pos:end="34:32">h</name></expr>;</expr_stmt></block_content></block></for>
    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
