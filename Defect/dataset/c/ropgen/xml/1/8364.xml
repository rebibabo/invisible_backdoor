<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8364.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vhost_net_start_one</name><parameter_list pos:start="1:31" pos:end="3:49">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:37">struct</name> <name pos:start="1:39" pos:end="1:47">vhost_net</name></name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">net</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:48"><decl pos:start="3:32" pos:end="3:48"><type pos:start="3:32" pos:end="3:48"><name pos:start="3:32" pos:end="3:43">VirtIODevice</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">dev</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">vhost_vring_file</name></name></type> <name pos:start="7:29" pos:end="7:32">file</name> <init pos:start="7:34" pos:end="7:38">= <expr pos:start="7:36" pos:end="7:38"><block pos:start="7:36" pos:end="7:38">{ }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:7">net</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:12">dev</name><operator pos:start="13:13" pos:end="13:13">.</operator><name pos:start="13:14" pos:end="13:17">nvqs</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <literal type="number" pos:start="13:21" pos:end="13:21">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:7">net</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:12">dev</name><operator pos:start="15:13" pos:end="15:13">.</operator><name pos:start="15:14" pos:end="15:16">vqs</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <name pos:start="15:20" pos:end="15:27"><name pos:start="15:20" pos:end="15:22">net</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:27">vqs</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:5">r</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <call pos:start="19:9" pos:end="19:50"><name pos:start="19:9" pos:end="19:34">vhost_dev_enable_notifiers</name><argument_list pos:start="19:35" pos:end="19:50">(<argument pos:start="19:36" pos:end="19:44"><expr pos:start="19:36" pos:end="19:44"><operator pos:start="19:36" pos:end="19:36">&amp;</operator><name pos:start="19:37" pos:end="19:44"><name pos:start="19:37" pos:end="19:39">net</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:44">dev</name></name></expr></argument>, <argument pos:start="19:47" pos:end="19:49"><expr pos:start="19:47" pos:end="19:49"><name pos:start="19:47" pos:end="19:49">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:14">(<expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:9">r</name> <operator pos:start="21:11" pos:end="21:11">&lt;</operator> <literal type="number" pos:start="21:13" pos:end="21:13">0</literal></expr>)</condition> <block pos:start="21:16" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:28">

        <goto pos:start="23:9" pos:end="23:28">goto <name pos:start="23:14" pos:end="23:27">fail_notifiers</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:5">r</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:23">vhost_dev_start</name><argument_list pos:start="29:24" pos:end="29:39">(<argument pos:start="29:25" pos:end="29:33"><expr pos:start="29:25" pos:end="29:33"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:33"><name pos:start="29:26" pos:end="29:28">net</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:33">dev</name></name></expr></argument>, <argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:14">(<expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">r</name> <operator pos:start="31:11" pos:end="31:11">&lt;</operator> <literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>)</condition> <block pos:start="31:16" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:24">

        <goto pos:start="33:9" pos:end="33:24">goto <name pos:start="33:14" pos:end="33:23">fail_start</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:28">(<expr pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:11">net</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:15">nc</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:21">info</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:27">poll</name></name></expr>)</condition> <block pos:start="39:30" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:44">

        <expr_stmt pos:start="41:9" pos:end="41:44"><expr pos:start="41:9" pos:end="41:43"><call pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:11">net</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:15">nc</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:21">info</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:27">poll</name></name><argument_list pos:start="41:28" pos:end="41:43">(<argument pos:start="41:29" pos:end="41:35"><expr pos:start="41:29" pos:end="41:35"><name pos:start="41:29" pos:end="41:35"><name pos:start="41:29" pos:end="41:31">net</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:35">nc</name></name></expr></argument>, <argument pos:start="41:38" pos:end="41:42"><expr pos:start="41:38" pos:end="41:42"><name pos:start="41:38" pos:end="41:42">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="69:5"><if pos:start="47:5" pos:end="69:5">if <condition pos:start="47:8" pos:end="47:53">(<expr pos:start="47:9" pos:end="47:52"><name pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:11">net</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:15">nc</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:21">info</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:27">type</name></name> <operator pos:start="47:29" pos:end="47:30">==</operator> <name pos:start="47:32" pos:end="47:52">NET_CLIENT_DRIVER_TAP</name></expr>)</condition> <block pos:start="47:55" pos:end="69:5">{<block_content pos:start="49:9" pos:end="67:9">

        <expr_stmt pos:start="49:9" pos:end="49:60"><expr pos:start="49:9" pos:end="49:59"><call pos:start="49:9" pos:end="49:59"><name pos:start="49:9" pos:end="49:27">qemu_set_fd_handler</name><argument_list pos:start="49:28" pos:end="49:59">(<argument pos:start="49:29" pos:end="49:40"><expr pos:start="49:29" pos:end="49:40"><name pos:start="49:29" pos:end="49:40"><name pos:start="49:29" pos:end="49:31">net</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:40">backend</name></name></expr></argument>, <argument pos:start="49:43" pos:end="49:46"><expr pos:start="49:43" pos:end="49:46"><name pos:start="49:43" pos:end="49:46">NULL</name></expr></argument>, <argument pos:start="49:49" pos:end="49:52"><expr pos:start="49:49" pos:end="49:52"><name pos:start="49:49" pos:end="49:52">NULL</name></expr></argument>, <argument pos:start="49:55" pos:end="49:58"><expr pos:start="49:55" pos:end="49:58"><name pos:start="49:55" pos:end="49:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:12">file</name><operator pos:start="51:13" pos:end="51:13">.</operator><name pos:start="51:14" pos:end="51:15">fd</name></name> <operator pos:start="51:17" pos:end="51:17">=</operator> <name pos:start="51:19" pos:end="51:30"><name pos:start="51:19" pos:end="51:21">net</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:30">backend</name></name></expr>;</expr_stmt>

        <for pos:start="53:9" pos:end="67:9">for <control pos:start="53:13" pos:end="53:70">(<init pos:start="53:14" pos:end="53:28"><expr pos:start="53:14" pos:end="53:27"><name pos:start="53:14" pos:end="53:23"><name pos:start="53:14" pos:end="53:17">file</name><operator pos:start="53:18" pos:end="53:18">.</operator><name pos:start="53:19" pos:end="53:23">index</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <literal type="number" pos:start="53:27" pos:end="53:27">0</literal></expr>;</init> <condition pos:start="53:30" pos:end="53:56"><expr pos:start="53:30" pos:end="53:55"><name pos:start="53:30" pos:end="53:39"><name pos:start="53:30" pos:end="53:33">file</name><operator pos:start="53:34" pos:end="53:34">.</operator><name pos:start="53:35" pos:end="53:39">index</name></name> <operator pos:start="53:41" pos:end="53:41">&lt;</operator> <name pos:start="53:43" pos:end="53:55"><name pos:start="53:43" pos:end="53:45">net</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:50">dev</name><operator pos:start="53:51" pos:end="53:51">.</operator><name pos:start="53:52" pos:end="53:55">nvqs</name></name></expr>;</condition> <incr pos:start="53:58" pos:end="53:69"><expr pos:start="53:58" pos:end="53:69"><operator pos:start="53:58" pos:end="53:59">++</operator><name pos:start="53:60" pos:end="53:69"><name pos:start="53:60" pos:end="53:63">file</name><operator pos:start="53:64" pos:end="53:64">.</operator><name pos:start="53:65" pos:end="53:69">index</name></name></expr></incr>)</control> <block pos:start="53:72" pos:end="67:9">{<block_content pos:start="55:13" pos:end="65:13">

            <decl_stmt pos:start="55:13" pos:end="55:59"><decl pos:start="55:13" pos:end="55:58"><type pos:start="55:13" pos:end="55:28"><specifier pos:start="55:13" pos:end="55:17">const</specifier> <name pos:start="55:19" pos:end="55:26">VhostOps</name> <modifier pos:start="55:28" pos:end="55:28">*</modifier></type><name pos:start="55:29" pos:end="55:37">vhost_ops</name> <init pos:start="55:39" pos:end="55:58">= <expr pos:start="55:41" pos:end="55:58"><name pos:start="55:41" pos:end="55:58"><name pos:start="55:41" pos:end="55:43">net</name><operator pos:start="55:44" pos:end="55:45">-&gt;</operator><name pos:start="55:46" pos:end="55:48">dev</name><operator pos:start="55:49" pos:end="55:49">.</operator><name pos:start="55:50" pos:end="55:58">vhost_ops</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:67"><expr pos:start="57:13" pos:end="57:66"><name pos:start="57:13" pos:end="57:13">r</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <call pos:start="57:17" pos:end="57:66"><name pos:start="57:17" pos:end="57:48"><name pos:start="57:17" pos:end="57:25">vhost_ops</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:48">vhost_net_set_backend</name></name><argument_list pos:start="57:49" pos:end="57:66">(<argument pos:start="57:50" pos:end="57:58"><expr pos:start="57:50" pos:end="57:58"><operator pos:start="57:50" pos:end="57:50">&amp;</operator><name pos:start="57:51" pos:end="57:58"><name pos:start="57:51" pos:end="57:53">net</name><operator pos:start="57:54" pos:end="57:55">-&gt;</operator><name pos:start="57:56" pos:end="57:58">dev</name></name></expr></argument>, <argument pos:start="57:61" pos:end="57:65"><expr pos:start="57:61" pos:end="57:65"><operator pos:start="57:61" pos:end="57:61">&amp;</operator><name pos:start="57:62" pos:end="57:65">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="65:13"><if pos:start="59:13" pos:end="65:13">if <condition pos:start="59:16" pos:end="59:22">(<expr pos:start="59:17" pos:end="59:21"><name pos:start="59:17" pos:end="59:17">r</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <literal type="number" pos:start="59:21" pos:end="59:21">0</literal></expr>)</condition> <block pos:start="59:24" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:26">

                <expr_stmt pos:start="61:17" pos:end="61:27"><expr pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:17">r</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <operator pos:start="61:21" pos:end="61:21">-</operator><name pos:start="61:22" pos:end="61:26">errno</name></expr>;</expr_stmt>

                <goto pos:start="63:17" pos:end="63:26">goto <name pos:start="63:22" pos:end="63:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

<label pos:start="73:1" pos:end="73:5"><name pos:start="73:1" pos:end="73:4">fail</name>:</label>

    <expr_stmt pos:start="75:5" pos:end="75:17"><expr pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:11"><name pos:start="75:5" pos:end="75:8">file</name><operator pos:start="75:9" pos:end="75:9">.</operator><name pos:start="75:10" pos:end="75:11">fd</name></name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">-</operator><literal type="number" pos:start="75:16" pos:end="75:16">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="89:5"><if pos:start="77:5" pos:end="89:5">if <condition pos:start="77:8" pos:end="77:53">(<expr pos:start="77:9" pos:end="77:52"><name pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:11">net</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:15">nc</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:21">info</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:27">type</name></name> <operator pos:start="77:29" pos:end="77:30">==</operator> <name pos:start="77:32" pos:end="77:52">NET_CLIENT_DRIVER_TAP</name></expr>)</condition> <block pos:start="77:55" pos:end="89:5">{<block_content pos:start="79:9" pos:end="87:9">

        <while pos:start="79:9" pos:end="87:9">while <condition pos:start="79:15" pos:end="79:32">(<expr pos:start="79:16" pos:end="79:31"><name pos:start="79:16" pos:end="79:25"><name pos:start="79:16" pos:end="79:19">file</name><operator pos:start="79:20" pos:end="79:20">.</operator><name pos:start="79:21" pos:end="79:25">index</name></name><operator pos:start="79:26" pos:end="79:27">--</operator> <operator pos:start="79:29" pos:end="79:29">&gt;</operator> <literal type="number" pos:start="79:31" pos:end="79:31">0</literal></expr>)</condition> <block pos:start="79:34" pos:end="87:9">{<block_content pos:start="81:13" pos:end="85:27">

            <decl_stmt pos:start="81:13" pos:end="81:59"><decl pos:start="81:13" pos:end="81:58"><type pos:start="81:13" pos:end="81:28"><specifier pos:start="81:13" pos:end="81:17">const</specifier> <name pos:start="81:19" pos:end="81:26">VhostOps</name> <modifier pos:start="81:28" pos:end="81:28">*</modifier></type><name pos:start="81:29" pos:end="81:37">vhost_ops</name> <init pos:start="81:39" pos:end="81:58">= <expr pos:start="81:41" pos:end="81:58"><name pos:start="81:41" pos:end="81:58"><name pos:start="81:41" pos:end="81:43">net</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:48">dev</name><operator pos:start="81:49" pos:end="81:49">.</operator><name pos:start="81:50" pos:end="81:58">vhost_ops</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="83:13" pos:end="83:71"><decl pos:start="83:13" pos:end="83:70"><type pos:start="83:13" pos:end="83:15"><name pos:start="83:13" pos:end="83:15">int</name></type> <name pos:start="83:17" pos:end="83:17">r</name> <init pos:start="83:19" pos:end="83:70">= <expr pos:start="83:21" pos:end="83:70"><call pos:start="83:21" pos:end="83:70"><name pos:start="83:21" pos:end="83:52"><name pos:start="83:21" pos:end="83:29">vhost_ops</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:52">vhost_net_set_backend</name></name><argument_list pos:start="83:53" pos:end="83:70">(<argument pos:start="83:54" pos:end="83:62"><expr pos:start="83:54" pos:end="83:62"><operator pos:start="83:54" pos:end="83:54">&amp;</operator><name pos:start="83:55" pos:end="83:62"><name pos:start="83:55" pos:end="83:57">net</name><operator pos:start="83:58" pos:end="83:59">-&gt;</operator><name pos:start="83:60" pos:end="83:62">dev</name></name></expr></argument>, <argument pos:start="83:65" pos:end="83:69"><expr pos:start="83:65" pos:end="83:69"><operator pos:start="83:65" pos:end="83:65">&amp;</operator><name pos:start="83:66" pos:end="83:69">file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:27"><expr pos:start="85:13" pos:end="85:26"><call pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:18">assert</name><argument_list pos:start="85:19" pos:end="85:26">(<argument pos:start="85:20" pos:end="85:25"><expr pos:start="85:20" pos:end="85:25"><name pos:start="85:20" pos:end="85:20">r</name> <operator pos:start="85:22" pos:end="85:23">&gt;=</operator> <literal type="number" pos:start="85:25" pos:end="85:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="95:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:28">(<expr pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:11">net</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:15">nc</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:21">info</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:27">poll</name></name></expr>)</condition> <block pos:start="91:30" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:43">

        <expr_stmt pos:start="93:9" pos:end="93:43"><expr pos:start="93:9" pos:end="93:42"><call pos:start="93:9" pos:end="93:42"><name pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:11">net</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:15">nc</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:21">info</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:27">poll</name></name><argument_list pos:start="93:28" pos:end="93:42">(<argument pos:start="93:29" pos:end="93:35"><expr pos:start="93:29" pos:end="93:35"><name pos:start="93:29" pos:end="93:35"><name pos:start="93:29" pos:end="93:31">net</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:35">nc</name></name></expr></argument>, <argument pos:start="93:38" pos:end="93:41"><expr pos:start="93:38" pos:end="93:41"><name pos:start="93:38" pos:end="93:41">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:35"><expr pos:start="97:5" pos:end="97:34"><call pos:start="97:5" pos:end="97:34"><name pos:start="97:5" pos:end="97:18">vhost_dev_stop</name><argument_list pos:start="97:19" pos:end="97:34">(<argument pos:start="97:20" pos:end="97:28"><expr pos:start="97:20" pos:end="97:28"><operator pos:start="97:20" pos:end="97:20">&amp;</operator><name pos:start="97:21" pos:end="97:28"><name pos:start="97:21" pos:end="97:23">net</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:28">dev</name></name></expr></argument>, <argument pos:start="97:31" pos:end="97:33"><expr pos:start="97:31" pos:end="97:33"><name pos:start="97:31" pos:end="97:33">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="99:1" pos:end="99:11"><name pos:start="99:1" pos:end="99:10">fail_start</name>:</label>

    <expr_stmt pos:start="101:5" pos:end="101:48"><expr pos:start="101:5" pos:end="101:47"><call pos:start="101:5" pos:end="101:47"><name pos:start="101:5" pos:end="101:31">vhost_dev_disable_notifiers</name><argument_list pos:start="101:32" pos:end="101:47">(<argument pos:start="101:33" pos:end="101:41"><expr pos:start="101:33" pos:end="101:41"><operator pos:start="101:33" pos:end="101:33">&amp;</operator><name pos:start="101:34" pos:end="101:41"><name pos:start="101:34" pos:end="101:36">net</name><operator pos:start="101:37" pos:end="101:38">-&gt;</operator><name pos:start="101:39" pos:end="101:41">dev</name></name></expr></argument>, <argument pos:start="101:44" pos:end="101:46"><expr pos:start="101:44" pos:end="101:46"><name pos:start="101:44" pos:end="101:46">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="103:1" pos:end="103:15"><name pos:start="103:1" pos:end="103:14">fail_notifiers</name>:</label>

    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><name pos:start="105:12" pos:end="105:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
