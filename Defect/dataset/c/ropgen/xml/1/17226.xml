<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17226.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">read_rle_sgi</name><parameter_list pos:start="1:24" pos:end="3:42">(<parameter pos:start="1:25" pos:end="1:47"><decl pos:start="1:25" pos:end="1:47"><type pos:start="1:25" pos:end="1:47"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:37">SGIInfo</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:47">sgi_info</name></decl></parameter>, 

        <parameter pos:start="3:9" pos:end="3:23"><decl pos:start="3:9" pos:end="3:23"><type pos:start="3:9" pos:end="3:23"><name pos:start="3:9" pos:end="3:17">AVPicture</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:23">pict</name></decl></parameter>, <parameter pos:start="3:26" pos:end="3:41"><decl pos:start="3:26" pos:end="3:41"><type pos:start="3:26" pos:end="3:41"><name pos:start="3:26" pos:end="3:38">ByteIOContext</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:41">f</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="117:1">{<block_content pos:start="7:5" pos:end="115:15">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:21">dest_row</name></decl>, <decl pos:start="7:24" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:32">rle_data</name> <init pos:start="7:34" pos:end="7:39">= <expr pos:start="7:36" pos:end="7:39"><name pos:start="7:36" pos:end="7:39">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:30">start_table</name></decl>, <decl pos:start="9:33" pos:end="9:45"><type ref="prev" pos:start="9:5" pos:end="9:19"><modifier pos:start="9:33" pos:end="9:33">*</modifier></type><name pos:start="9:34" pos:end="9:45">length_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">y</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">z</name></decl>, <decl pos:start="11:15" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:19">xsize</name></decl>, <decl pos:start="11:22" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:26">ysize</name></decl>, <decl pos:start="11:29" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:29" pos:end="11:33">zsize</name></decl>, <decl pos:start="11:36" pos:end="11:41"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:36" pos:end="11:41">tablen</name></decl>;</decl_stmt> 

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">long</name></type> <name pos:start="13:10" pos:end="13:21">start_offset</name></decl>, <decl pos:start="13:24" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:8"/><name pos:start="13:24" pos:end="13:33">run_length</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:9">xsize</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <name pos:start="19:13" pos:end="19:27"><name pos:start="19:13" pos:end="19:20">sgi_info</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:27">xsize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:9">ysize</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:20">sgi_info</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:27">ysize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:9">zsize</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:20">sgi_info</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:27">zsize</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:12">rle_data</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:31"><name pos:start="27:16" pos:end="27:24">av_malloc</name><argument_list pos:start="27:25" pos:end="27:31">(<argument pos:start="27:26" pos:end="27:30"><expr pos:start="27:26" pos:end="27:30"><name pos:start="27:26" pos:end="27:30">xsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:21">/* skip header */</comment> 

    <expr_stmt pos:start="33:5" pos:end="33:44"><expr pos:start="33:5" pos:end="33:43"><call pos:start="33:5" pos:end="33:43"><name pos:start="33:5" pos:end="33:13">url_fseek</name><argument_list pos:start="33:14" pos:end="33:43">(<argument pos:start="33:15" pos:end="33:15"><expr pos:start="33:15" pos:end="33:15"><name pos:start="33:15" pos:end="33:15">f</name></expr></argument>, <argument pos:start="33:18" pos:end="33:32"><expr pos:start="33:18" pos:end="33:32"><name pos:start="33:18" pos:end="33:32">SGI_HEADER_SIZE</name></expr></argument>, <argument pos:start="33:35" pos:end="33:42"><expr pos:start="33:35" pos:end="33:42"><name pos:start="33:35" pos:end="33:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:46">/* size of rle offset and length tables */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:10">tablen</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:18">ysize</name> <operator pos:start="39:20" pos:end="39:20">*</operator> <name pos:start="39:22" pos:end="39:26">zsize</name> <operator pos:start="39:28" pos:end="39:28">*</operator> <sizeof pos:start="39:30" pos:end="39:41">sizeof<argument_list pos:start="39:36" pos:end="39:41">(<argument pos:start="39:37" pos:end="39:40"><expr pos:start="39:37" pos:end="39:40"><name pos:start="39:37" pos:end="39:40">long</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:53"><expr pos:start="43:5" pos:end="43:52"><name pos:start="43:5" pos:end="43:15">start_table</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <operator pos:start="43:19" pos:end="43:19">(</operator><name pos:start="43:20" pos:end="43:27">unsigned</name> <name pos:start="43:29" pos:end="43:32">long</name> <operator pos:start="43:34" pos:end="43:34">*</operator><operator pos:start="43:35" pos:end="43:35">)</operator><call pos:start="43:36" pos:end="43:52"><name pos:start="43:36" pos:end="43:44">av_malloc</name><argument_list pos:start="43:45" pos:end="43:52">(<argument pos:start="43:46" pos:end="43:51"><expr pos:start="43:46" pos:end="43:51"><name pos:start="43:46" pos:end="43:51">tablen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:54"><expr pos:start="45:5" pos:end="45:53"><name pos:start="45:5" pos:end="45:16">length_table</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <operator pos:start="45:20" pos:end="45:20">(</operator><name pos:start="45:21" pos:end="45:28">unsigned</name> <name pos:start="45:30" pos:end="45:33">long</name> <operator pos:start="45:35" pos:end="45:35">*</operator><operator pos:start="45:36" pos:end="45:36">)</operator><call pos:start="45:37" pos:end="45:53"><name pos:start="45:37" pos:end="45:45">av_malloc</name><argument_list pos:start="45:46" pos:end="45:53">(<argument pos:start="45:47" pos:end="45:52"><expr pos:start="45:47" pos:end="45:52"><name pos:start="45:47" pos:end="45:52">tablen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:55">(<expr pos:start="49:9" pos:end="49:54"><operator pos:start="49:9" pos:end="49:9">!</operator><call pos:start="49:10" pos:end="49:54"><name pos:start="49:10" pos:end="49:19">get_buffer</name><argument_list pos:start="49:20" pos:end="49:54">(<argument pos:start="49:21" pos:end="49:21"><expr pos:start="49:21" pos:end="49:21"><name pos:start="49:21" pos:end="49:21">f</name></expr></argument>, <argument pos:start="49:24" pos:end="49:45"><expr pos:start="49:24" pos:end="49:45"><operator pos:start="49:24" pos:end="49:24">(</operator><name pos:start="49:25" pos:end="49:31">uint8_t</name> <operator pos:start="49:33" pos:end="49:33">*</operator><operator pos:start="49:34" pos:end="49:34">)</operator><name pos:start="49:35" pos:end="49:45">start_table</name></expr></argument>, <argument pos:start="49:48" pos:end="49:53"><expr pos:start="49:48" pos:end="49:53"><name pos:start="49:48" pos:end="49:53">tablen</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:57" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:18">

        <expr_stmt pos:start="51:9" pos:end="51:17"><expr pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">-</operator><literal type="number" pos:start="51:16" pos:end="51:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:18">goto <name pos:start="53:14" pos:end="53:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:56">(<expr pos:start="59:9" pos:end="59:55"><operator pos:start="59:9" pos:end="59:9">!</operator><call pos:start="59:10" pos:end="59:55"><name pos:start="59:10" pos:end="59:19">get_buffer</name><argument_list pos:start="59:20" pos:end="59:55">(<argument pos:start="59:21" pos:end="59:21"><expr pos:start="59:21" pos:end="59:21"><name pos:start="59:21" pos:end="59:21">f</name></expr></argument>, <argument pos:start="59:24" pos:end="59:46"><expr pos:start="59:24" pos:end="59:46"><operator pos:start="59:24" pos:end="59:24">(</operator><name pos:start="59:25" pos:end="59:31">uint8_t</name> <operator pos:start="59:33" pos:end="59:33">*</operator><operator pos:start="59:34" pos:end="59:34">)</operator><name pos:start="59:35" pos:end="59:46">length_table</name></expr></argument>, <argument pos:start="59:49" pos:end="59:54"><expr pos:start="59:49" pos:end="59:54"><name pos:start="59:49" pos:end="59:54">tablen</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:58" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:18">

        <expr_stmt pos:start="61:9" pos:end="61:17"><expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <operator pos:start="61:15" pos:end="61:15">-</operator><literal type="number" pos:start="61:16" pos:end="61:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:18">goto <name pos:start="63:14" pos:end="63:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="69:5" pos:end="101:5">for <control pos:start="69:9" pos:end="69:31">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">z</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:26"><expr pos:start="69:17" pos:end="69:25"><name pos:start="69:17" pos:end="69:17">z</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <name pos:start="69:21" pos:end="69:25">zsize</name></expr>;</condition> <incr pos:start="69:28" pos:end="69:30"><expr pos:start="69:28" pos:end="69:30"><name pos:start="69:28" pos:end="69:28">z</name><operator pos:start="69:29" pos:end="69:30">++</operator></expr></incr>)</control> <block pos:start="69:33" pos:end="101:5">{<block_content pos:start="71:9" pos:end="99:9">

        <for pos:start="71:9" pos:end="99:9">for <control pos:start="71:13" pos:end="71:35">(<init pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:18"><name pos:start="71:14" pos:end="71:14">y</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>;</init> <condition pos:start="71:21" pos:end="71:30"><expr pos:start="71:21" pos:end="71:29"><name pos:start="71:21" pos:end="71:21">y</name> <operator pos:start="71:23" pos:end="71:23">&lt;</operator> <name pos:start="71:25" pos:end="71:29">ysize</name></expr>;</condition> <incr pos:start="71:32" pos:end="71:34"><expr pos:start="71:32" pos:end="71:34"><name pos:start="71:32" pos:end="71:32">y</name><operator pos:start="71:33" pos:end="71:34">++</operator></expr></incr>)</control> <block pos:start="71:37" pos:end="99:9">{<block_content pos:start="73:13" pos:end="97:57">

            <expr_stmt pos:start="73:13" pos:end="73:73"><expr pos:start="73:13" pos:end="73:72"><name pos:start="73:13" pos:end="73:20">dest_row</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:36"><name pos:start="73:24" pos:end="73:27">pict</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:33">data</name><index pos:start="73:34" pos:end="73:36">[<expr pos:start="73:35" pos:end="73:35"><literal type="number" pos:start="73:35" pos:end="73:35">0</literal></expr>]</index></name> <operator pos:start="73:38" pos:end="73:38">+</operator> <operator pos:start="73:40" pos:end="73:40">(</operator><name pos:start="73:41" pos:end="73:45">ysize</name> <operator pos:start="73:47" pos:end="73:47">-</operator> <literal type="number" pos:start="73:49" pos:end="73:51">1</literal> <operator pos:start="73:51" pos:end="73:51">-</operator> <name pos:start="73:53" pos:end="73:53">y</name><operator pos:start="73:54" pos:end="73:54">)</operator> <operator pos:start="73:56" pos:end="73:56">*</operator> <operator pos:start="73:58" pos:end="73:58">(</operator><name pos:start="73:59" pos:end="73:63">xsize</name> <operator pos:start="73:65" pos:end="73:65">*</operator> <name pos:start="73:67" pos:end="73:71">zsize</name><operator pos:start="73:72" pos:end="73:72">)</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="77:13" pos:end="77:62"><expr pos:start="77:13" pos:end="77:61"><name pos:start="77:13" pos:end="77:24">start_offset</name> <operator pos:start="77:26" pos:end="77:26">=</operator> <call pos:start="77:28" pos:end="77:61"><name pos:start="77:28" pos:end="77:32">BE_32</name><argument_list pos:start="77:33" pos:end="77:61">(<argument pos:start="77:34" pos:end="77:60"><expr pos:start="77:34" pos:end="77:60"><operator pos:start="77:34" pos:end="77:34">&amp;</operator><name pos:start="77:35" pos:end="77:60"><name pos:start="77:35" pos:end="77:45">start_table</name><index pos:start="77:46" pos:end="77:60">[<expr pos:start="77:47" pos:end="77:59"><name pos:start="77:47" pos:end="77:47">y</name> <operator pos:start="77:49" pos:end="77:49">+</operator> <name pos:start="77:51" pos:end="77:51">z</name> <operator pos:start="77:53" pos:end="77:53">*</operator> <name pos:start="77:55" pos:end="77:59">ysize</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:61"><expr pos:start="79:13" pos:end="79:60"><name pos:start="79:13" pos:end="79:22">run_length</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <call pos:start="79:26" pos:end="79:60"><name pos:start="79:26" pos:end="79:30">BE_32</name><argument_list pos:start="79:31" pos:end="79:60">(<argument pos:start="79:32" pos:end="79:59"><expr pos:start="79:32" pos:end="79:59"><operator pos:start="79:32" pos:end="79:32">&amp;</operator><name pos:start="79:33" pos:end="79:59"><name pos:start="79:33" pos:end="79:44">length_table</name><index pos:start="79:45" pos:end="79:59">[<expr pos:start="79:46" pos:end="79:58"><name pos:start="79:46" pos:end="79:46">y</name> <operator pos:start="79:48" pos:end="79:48">+</operator> <name pos:start="79:50" pos:end="79:50">z</name> <operator pos:start="79:52" pos:end="79:52">*</operator> <name pos:start="79:54" pos:end="79:58">ysize</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="83:13" pos:end="83:59">/* don't seek if already in the correct spot */</comment>

            <if_stmt pos:start="85:13" pos:end="89:13"><if pos:start="85:13" pos:end="89:13">if <condition pos:start="85:16" pos:end="85:45">(<expr pos:start="85:17" pos:end="85:44"><call pos:start="85:17" pos:end="85:28"><name pos:start="85:17" pos:end="85:25">url_ftell</name><argument_list pos:start="85:26" pos:end="85:28">(<argument pos:start="85:27" pos:end="85:27"><expr pos:start="85:27" pos:end="85:27"><name pos:start="85:27" pos:end="85:27">f</name></expr></argument>)</argument_list></call> <operator pos:start="85:30" pos:end="85:31">!=</operator> <name pos:start="85:33" pos:end="85:44">start_offset</name></expr>)</condition> <block pos:start="85:47" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:53">

                <expr_stmt pos:start="87:17" pos:end="87:53"><expr pos:start="87:17" pos:end="87:52"><call pos:start="87:17" pos:end="87:52"><name pos:start="87:17" pos:end="87:25">url_fseek</name><argument_list pos:start="87:26" pos:end="87:52">(<argument pos:start="87:27" pos:end="87:27"><expr pos:start="87:27" pos:end="87:27"><name pos:start="87:27" pos:end="87:27">f</name></expr></argument>, <argument pos:start="87:30" pos:end="87:41"><expr pos:start="87:30" pos:end="87:41"><name pos:start="87:30" pos:end="87:41">start_offset</name></expr></argument>, <argument pos:start="87:44" pos:end="87:51"><expr pos:start="87:44" pos:end="87:51"><name pos:start="87:44" pos:end="87:51">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="93:13" pos:end="93:48"><expr pos:start="93:13" pos:end="93:47"><call pos:start="93:13" pos:end="93:47"><name pos:start="93:13" pos:end="93:22">get_buffer</name><argument_list pos:start="93:23" pos:end="93:47">(<argument pos:start="93:24" pos:end="93:24"><expr pos:start="93:24" pos:end="93:24"><name pos:start="93:24" pos:end="93:24">f</name></expr></argument>, <argument pos:start="93:27" pos:end="93:34"><expr pos:start="93:27" pos:end="93:34"><name pos:start="93:27" pos:end="93:34">rle_data</name></expr></argument>, <argument pos:start="93:37" pos:end="93:46"><expr pos:start="93:37" pos:end="93:46"><name pos:start="93:37" pos:end="93:46">run_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            

            <expr_stmt pos:start="97:13" pos:end="97:57"><expr pos:start="97:13" pos:end="97:56"><call pos:start="97:13" pos:end="97:56"><name pos:start="97:13" pos:end="97:26">expand_rle_row</name><argument_list pos:start="97:27" pos:end="97:56">(<argument pos:start="97:28" pos:end="97:35"><expr pos:start="97:28" pos:end="97:35"><name pos:start="97:28" pos:end="97:35">dest_row</name></expr></argument>, <argument pos:start="97:38" pos:end="97:45"><expr pos:start="97:38" pos:end="97:45"><name pos:start="97:38" pos:end="97:45">rle_data</name></expr></argument>, <argument pos:start="97:48" pos:end="97:48"><expr pos:start="97:48" pos:end="97:48"><name pos:start="97:48" pos:end="97:48">z</name></expr></argument>, <argument pos:start="97:51" pos:end="97:55"><expr pos:start="97:51" pos:end="97:55"><name pos:start="97:51" pos:end="97:55">zsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



<label pos:start="105:1" pos:end="105:5"><name pos:start="105:1" pos:end="105:4">fail</name>:</label>

    <expr_stmt pos:start="107:5" pos:end="107:25"><expr pos:start="107:5" pos:end="107:24"><call pos:start="107:5" pos:end="107:24"><name pos:start="107:5" pos:end="107:11">av_free</name><argument_list pos:start="107:12" pos:end="107:24">(<argument pos:start="107:13" pos:end="107:23"><expr pos:start="107:13" pos:end="107:23"><name pos:start="107:13" pos:end="107:23">start_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:26"><expr pos:start="109:5" pos:end="109:25"><call pos:start="109:5" pos:end="109:25"><name pos:start="109:5" pos:end="109:11">av_free</name><argument_list pos:start="109:12" pos:end="109:25">(<argument pos:start="109:13" pos:end="109:24"><expr pos:start="109:13" pos:end="109:24"><name pos:start="109:13" pos:end="109:24">length_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:22"><expr pos:start="111:5" pos:end="111:21"><call pos:start="111:5" pos:end="111:21"><name pos:start="111:5" pos:end="111:11">av_free</name><argument_list pos:start="111:12" pos:end="111:21">(<argument pos:start="111:13" pos:end="111:20"><expr pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:20">rle_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="115:5" pos:end="115:15">return <expr pos:start="115:12" pos:end="115:14"><name pos:start="115:12" pos:end="115:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
