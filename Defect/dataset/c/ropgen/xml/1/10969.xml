<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10969.c" pos:tabs="8"><function pos:start="1:1" pos:end="206:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">avi_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="206:1">{<block_content pos:start="3:5" pos:end="205:5">
    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">AVIContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">avi</name> <init pos:start="3:21" pos:end="3:34">= <expr pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:34">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:30"><decl pos:start="4:5" pos:end="4:29"><type pos:start="4:5" pos:end="4:19"><name pos:start="4:5" pos:end="4:17">ByteIOContext</name> <modifier pos:start="4:19" pos:end="4:19">*</modifier></type><name pos:start="4:20" pos:end="4:21">pb</name> <init pos:start="4:23" pos:end="4:29">= <expr pos:start="4:25" pos:end="4:29"><name pos:start="4:25" pos:end="4:29"><name pos:start="4:25" pos:end="4:25">s</name><operator pos:start="4:26" pos:end="4:27">-&gt;</operator><name pos:start="4:28" pos:end="4:29">pb</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>, <decl pos:start="5:12" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:15"><name pos:start="5:12" pos:end="5:12">d</name><index pos:start="5:13" pos:end="5:15">[<expr pos:start="5:14" pos:end="5:14"><literal type="number" pos:start="5:14" pos:end="5:14">8</literal></expr>]</index></name></decl>, <decl pos:start="5:18" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:21">size</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:21"><decl pos:start="6:5" pos:end="6:14"><type pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:12">offset_t</name></type> <name pos:start="6:14" pos:end="6:14">i</name></decl>, <decl pos:start="6:17" pos:end="6:20"><type ref="prev" pos:start="6:5" pos:end="6:12"/><name pos:start="6:17" pos:end="6:20">sync</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:8">void</name><modifier pos:start="7:9" pos:end="7:9">*</modifier></type> <name pos:start="7:11" pos:end="7:14">dstr</name></decl>;</decl_stmt>
    <if_stmt pos:start="8:5" pos:end="12:5"><if pos:start="8:5" pos:end="12:5">if <condition pos:start="8:8" pos:end="8:43">(<expr pos:start="8:9" pos:end="8:42"><name pos:start="8:9" pos:end="8:25">ENABLE_DV_DEMUXER</name> <operator pos:start="8:27" pos:end="8:28">&amp;&amp;</operator> <name pos:start="8:30" pos:end="8:42"><name pos:start="8:30" pos:end="8:32">avi</name><operator pos:start="8:33" pos:end="8:34">-&gt;</operator><name pos:start="8:35" pos:end="8:42">dv_demux</name></name></expr>)</condition> <block pos:start="8:45" pos:end="12:5">{<block_content pos:start="9:9" pos:end="11:24">
        <expr_stmt pos:start="9:9" pos:end="9:49"><expr pos:start="9:9" pos:end="9:48"><name pos:start="9:9" pos:end="9:12">size</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <call pos:start="9:16" pos:end="9:48"><name pos:start="9:16" pos:end="9:28">dv_get_packet</name><argument_list pos:start="9:29" pos:end="9:48">(<argument pos:start="9:30" pos:end="9:42"><expr pos:start="9:30" pos:end="9:42"><name pos:start="9:30" pos:end="9:42"><name pos:start="9:30" pos:end="9:32">avi</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:42">dv_demux</name></name></expr></argument>, <argument pos:start="9:45" pos:end="9:47"><expr pos:start="9:45" pos:end="9:47"><name pos:start="9:45" pos:end="9:47">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="10:9" pos:end="11:24"><if pos:start="10:9" pos:end="11:24">if <condition pos:start="10:12" pos:end="10:22">(<expr pos:start="10:13" pos:end="10:21"><name pos:start="10:13" pos:end="10:16">size</name> <operator pos:start="10:18" pos:end="10:19">&gt;=</operator> <literal type="number" pos:start="10:21" pos:end="10:21">0</literal></expr>)</condition><block type="pseudo" pos:start="11:13" pos:end="11:24"><block_content pos:start="11:13" pos:end="11:24">
            <return pos:start="11:13" pos:end="11:24">return <expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">size</name></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="13:5" pos:end="51:5"><if pos:start="13:5" pos:end="51:5">if<condition pos:start="13:7" pos:end="13:28">(<expr pos:start="13:8" pos:end="13:27"><name pos:start="13:8" pos:end="13:27"><name pos:start="13:8" pos:end="13:10">avi</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:27">non_interleaved</name></name></expr>)</condition><block pos:start="13:29" pos:end="51:5">{<block_content pos:start="14:9" pos:end="50:9">
        <decl_stmt pos:start="14:9" pos:end="14:34"><decl pos:start="14:9" pos:end="14:33"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:29">best_stream_index</name> <init pos:start="14:31" pos:end="14:33">= <expr pos:start="14:33" pos:end="14:33"><literal type="number" pos:start="14:33" pos:end="14:33">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="15:9" pos:end="15:32"><decl pos:start="15:9" pos:end="15:31"><type pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:16">AVStream</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:25">best_st</name><init pos:start="15:26" pos:end="15:31">= <expr pos:start="15:28" pos:end="15:31"><name pos:start="15:28" pos:end="15:31">NULL</name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="16:9" pos:end="16:28"><decl pos:start="16:9" pos:end="16:27"><type pos:start="16:9" pos:end="16:19"><name pos:start="16:9" pos:end="16:17">AVIStream</name> <modifier pos:start="16:19" pos:end="16:19">*</modifier></type><name pos:start="16:20" pos:end="16:27">best_ast</name></decl>;</decl_stmt>
        <decl_stmt pos:start="17:9" pos:end="17:35"><decl pos:start="17:9" pos:end="17:34"><type pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15">int64_t</name></type> <name pos:start="17:17" pos:end="17:23">best_ts</name><init pos:start="17:24" pos:end="17:34">= <expr pos:start="17:26" pos:end="17:34"><name pos:start="17:26" pos:end="17:34">INT64_MAX</name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="18:9" pos:end="18:14"><decl pos:start="18:9" pos:end="18:13"><type pos:start="18:9" pos:end="18:11"><name pos:start="18:9" pos:end="18:11">int</name></type> <name pos:start="18:13" pos:end="18:13">i</name></decl>;</decl_stmt>
        <for pos:start="19:9" pos:end="32:9">for<control pos:start="19:12" pos:end="19:38">(<init pos:start="19:13" pos:end="19:16"><expr pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:13">i</name><operator pos:start="19:14" pos:end="19:14">=</operator><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>;</init> <condition pos:start="19:18" pos:end="19:33"><expr pos:start="19:18" pos:end="19:32"><name pos:start="19:18" pos:end="19:18">i</name><operator pos:start="19:19" pos:end="19:19">&lt;</operator><name pos:start="19:20" pos:end="19:32"><name pos:start="19:20" pos:end="19:20">s</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:32">nb_streams</name></name></expr>;</condition> <incr pos:start="19:35" pos:end="19:37"><expr pos:start="19:35" pos:end="19:37"><name pos:start="19:35" pos:end="19:35">i</name><operator pos:start="19:36" pos:end="19:37">++</operator></expr></incr>)</control><block pos:start="19:39" pos:end="32:9">{<block_content pos:start="20:13" pos:end="31:13">
            <decl_stmt pos:start="20:13" pos:end="20:41"><decl pos:start="20:13" pos:end="20:40"><type pos:start="20:13" pos:end="20:22"><name pos:start="20:13" pos:end="20:20">AVStream</name> <modifier pos:start="20:22" pos:end="20:22">*</modifier></type><name pos:start="20:23" pos:end="20:24">st</name> <init pos:start="20:26" pos:end="20:40">= <expr pos:start="20:28" pos:end="20:40"><name pos:start="20:28" pos:end="20:40"><name pos:start="20:28" pos:end="20:28">s</name><operator pos:start="20:29" pos:end="20:30">-&gt;</operator><name pos:start="20:31" pos:end="20:37">streams</name><index pos:start="20:38" pos:end="20:40">[<expr pos:start="20:39" pos:end="20:39"><name pos:start="20:39" pos:end="20:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="21:13" pos:end="21:43"><decl pos:start="21:13" pos:end="21:42"><type pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:21">AVIStream</name> <modifier pos:start="21:23" pos:end="21:23">*</modifier></type><name pos:start="21:24" pos:end="21:26">ast</name> <init pos:start="21:28" pos:end="21:42">= <expr pos:start="21:30" pos:end="21:42"><name pos:start="21:30" pos:end="21:42"><name pos:start="21:30" pos:end="21:31">st</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:42">priv_data</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="22:13" pos:end="22:42"><decl pos:start="22:13" pos:end="22:41"><type pos:start="22:13" pos:end="22:19"><name pos:start="22:13" pos:end="22:19">int64_t</name></type> <name pos:start="22:21" pos:end="22:22">ts</name><init pos:start="22:23" pos:end="22:41">= <expr pos:start="22:25" pos:end="22:41"><name pos:start="22:25" pos:end="22:41"><name pos:start="22:25" pos:end="22:27">ast</name><operator pos:start="22:28" pos:end="22:29">-&gt;</operator><name pos:start="22:30" pos:end="22:41">frame_offset</name></name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="23:13" pos:end="24:39"><if pos:start="23:13" pos:end="24:39">if<condition pos:start="23:15" pos:end="23:32">(<expr pos:start="23:16" pos:end="23:31"><name pos:start="23:16" pos:end="23:31"><name pos:start="23:16" pos:end="23:18">ast</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:31">sample_size</name></name></expr>)</condition><block type="pseudo" pos:start="24:17" pos:end="24:39"><block_content pos:start="24:17" pos:end="24:39">
                <expr_stmt pos:start="24:17" pos:end="24:39"><expr pos:start="24:17" pos:end="24:38"><name pos:start="24:17" pos:end="24:18">ts</name> <operator pos:start="24:20" pos:end="24:21">/=</operator> <name pos:start="24:23" pos:end="24:38"><name pos:start="24:23" pos:end="24:25">ast</name><operator pos:start="24:26" pos:end="24:27">-&gt;</operator><name pos:start="24:28" pos:end="24:38">sample_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="25:13" pos:end="25:93"><expr pos:start="25:13" pos:end="25:92"><name pos:start="25:13" pos:end="25:14">ts</name><operator pos:start="25:15" pos:end="25:15">=</operator> <call pos:start="25:17" pos:end="25:92"><name pos:start="25:17" pos:end="25:26">av_rescale</name><argument_list pos:start="25:27" pos:end="25:92">(<argument pos:start="25:28" pos:end="25:29"><expr pos:start="25:28" pos:end="25:29"><name pos:start="25:28" pos:end="25:29">ts</name></expr></argument>, <argument pos:start="25:32" pos:end="25:72"><expr pos:start="25:32" pos:end="25:72"><name pos:start="25:32" pos:end="25:43">AV_TIME_BASE</name> <operator pos:start="25:45" pos:end="25:45">*</operator> <operator pos:start="25:47" pos:end="25:47">(</operator><name pos:start="25:48" pos:end="25:54">int64_t</name><operator pos:start="25:55" pos:end="25:55">)</operator><name pos:start="25:56" pos:end="25:72"><name pos:start="25:56" pos:end="25:57">st</name><operator pos:start="25:58" pos:end="25:59">-&gt;</operator><name pos:start="25:60" pos:end="25:68">time_base</name><operator pos:start="25:69" pos:end="25:69">.</operator><name pos:start="25:70" pos:end="25:72">num</name></name></expr></argument>, <argument pos:start="25:75" pos:end="25:91"><expr pos:start="25:75" pos:end="25:91"><name pos:start="25:75" pos:end="25:91"><name pos:start="25:75" pos:end="25:76">st</name><operator pos:start="25:77" pos:end="25:78">-&gt;</operator><name pos:start="25:79" pos:end="25:87">time_base</name><operator pos:start="25:88" pos:end="25:88">.</operator><name pos:start="25:89" pos:end="25:91">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:start="26:1" pos:end="26:133">//            av_log(NULL, AV_LOG_DEBUG, "%"PRId64" %d/%d %"PRId64"\n", ts, st-&gt;time_base.num, st-&gt;time_base.den, ast-&gt;frame_offset);</comment>
            <if_stmt pos:start="27:13" pos:end="31:13"><if pos:start="27:13" pos:end="31:13">if<condition pos:start="27:15" pos:end="27:52">(<expr pos:start="27:16" pos:end="27:51"><name pos:start="27:16" pos:end="27:17">ts</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:27">best_ts</name> <operator pos:start="27:29" pos:end="27:30">&amp;&amp;</operator> <name pos:start="27:32" pos:end="27:51"><name pos:start="27:32" pos:end="27:33">st</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:51">nb_index_entries</name></name></expr>)</condition><block pos:start="27:53" pos:end="31:13">{<block_content pos:start="28:17" pos:end="30:37">
                <expr_stmt pos:start="28:17" pos:end="28:28"><expr pos:start="28:17" pos:end="28:27"><name pos:start="28:17" pos:end="28:23">best_ts</name><operator pos:start="28:24" pos:end="28:24">=</operator> <name pos:start="28:26" pos:end="28:27">ts</name></expr>;</expr_stmt>
                <expr_stmt pos:start="29:17" pos:end="29:28"><expr pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:23">best_st</name><operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:27">st</name></expr>;</expr_stmt>
                <expr_stmt pos:start="30:17" pos:end="30:37"><expr pos:start="30:17" pos:end="30:36"><name pos:start="30:17" pos:end="30:33">best_stream_index</name><operator pos:start="30:34" pos:end="30:34">=</operator> <name pos:start="30:36" pos:end="30:36">i</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <expr_stmt pos:start="33:9" pos:end="33:38"><expr pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:16">best_ast</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:37"><name pos:start="33:20" pos:end="33:26">best_st</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:37">priv_data</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:109"><expr pos:start="34:9" pos:end="34:108"><name pos:start="34:9" pos:end="34:15">best_ts</name><operator pos:start="34:16" pos:end="34:16">=</operator> <call pos:start="34:18" pos:end="34:108"><name pos:start="34:18" pos:end="34:27">av_rescale</name><argument_list pos:start="34:28" pos:end="34:108">(<argument pos:start="34:29" pos:end="34:35"><expr pos:start="34:29" pos:end="34:35"><name pos:start="34:29" pos:end="34:35">best_ts</name></expr></argument>, <argument pos:start="34:38" pos:end="34:59"><expr pos:start="34:38" pos:end="34:59"><name pos:start="34:38" pos:end="34:59"><name pos:start="34:38" pos:end="34:44">best_st</name><operator pos:start="34:45" pos:end="34:46">-&gt;</operator><name pos:start="34:47" pos:end="34:55">time_base</name><operator pos:start="34:56" pos:end="34:56">.</operator><name pos:start="34:57" pos:end="34:59">den</name></name></expr></argument>, <argument pos:start="34:62" pos:end="34:107"><expr pos:start="34:62" pos:end="34:107"><name pos:start="34:62" pos:end="34:73">AV_TIME_BASE</name> <operator pos:start="34:75" pos:end="34:75">*</operator> <operator pos:start="34:77" pos:end="34:77">(</operator><name pos:start="34:78" pos:end="34:84">int64_t</name><operator pos:start="34:85" pos:end="34:85">)</operator><name pos:start="34:86" pos:end="34:107"><name pos:start="34:86" pos:end="34:92">best_st</name><operator pos:start="34:93" pos:end="34:94">-&gt;</operator><name pos:start="34:95" pos:end="34:103">time_base</name><operator pos:start="34:104" pos:end="34:104">.</operator><name pos:start="34:105" pos:end="34:107">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="34:111" pos:end="34:131">//FIXME a little ugly</comment>
        <if_stmt pos:start="35:9" pos:end="38:76"><if pos:start="35:9" pos:end="36:99">if<condition pos:start="35:11" pos:end="35:31">(<expr pos:start="35:12" pos:end="35:30"><name pos:start="35:12" pos:end="35:30"><name pos:start="35:12" pos:end="35:19">best_ast</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:30">remaining</name></name></expr>)</condition><block type="pseudo" pos:start="36:13" pos:end="36:99"><block_content pos:start="36:13" pos:end="36:99">
            <expr_stmt pos:start="36:13" pos:end="36:99"><expr pos:start="36:13" pos:end="36:98"><name pos:start="36:13" pos:end="36:13">i</name><operator pos:start="36:14" pos:end="36:14">=</operator> <call pos:start="36:16" pos:end="36:98"><name pos:start="36:16" pos:end="36:40">av_index_search_timestamp</name><argument_list pos:start="36:41" pos:end="36:98">(<argument pos:start="36:42" pos:end="36:48"><expr pos:start="36:42" pos:end="36:48"><name pos:start="36:42" pos:end="36:48">best_st</name></expr></argument>, <argument pos:start="36:51" pos:end="36:57"><expr pos:start="36:51" pos:end="36:57"><name pos:start="36:51" pos:end="36:57">best_ts</name></expr></argument>, <argument pos:start="36:60" pos:end="36:97"><expr pos:start="36:60" pos:end="36:97"><name pos:start="36:60" pos:end="36:74">AVSEEK_FLAG_ANY</name> <operator pos:start="36:76" pos:end="36:76">|</operator> <name pos:start="36:78" pos:end="36:97">AVSEEK_FLAG_BACKWARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="37:9" pos:end="38:76">else<block type="pseudo" pos:start="38:13" pos:end="38:76"><block_content pos:start="38:13" pos:end="38:76">
            <expr_stmt pos:start="38:13" pos:end="38:76"><expr pos:start="38:13" pos:end="38:75"><name pos:start="38:13" pos:end="38:13">i</name><operator pos:start="38:14" pos:end="38:14">=</operator> <call pos:start="38:16" pos:end="38:75"><name pos:start="38:16" pos:end="38:40">av_index_search_timestamp</name><argument_list pos:start="38:41" pos:end="38:75">(<argument pos:start="38:42" pos:end="38:48"><expr pos:start="38:42" pos:end="38:48"><name pos:start="38:42" pos:end="38:48">best_st</name></expr></argument>, <argument pos:start="38:51" pos:end="38:57"><expr pos:start="38:51" pos:end="38:57"><name pos:start="38:51" pos:end="38:57">best_ts</name></expr></argument>, <argument pos:start="38:60" pos:end="38:74"><expr pos:start="38:60" pos:end="38:74"><name pos:start="38:60" pos:end="38:74">AVSEEK_FLAG_ANY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<comment type="line" pos:start="39:1" pos:end="39:48">//        av_log(NULL, AV_LOG_DEBUG, "%d\n", i);</comment>
        <if_stmt pos:start="40:9" pos:end="50:9"><if pos:start="40:9" pos:end="50:9">if<condition pos:start="40:11" pos:end="40:16">(<expr pos:start="40:12" pos:end="40:15"><name pos:start="40:12" pos:end="40:12">i</name><operator pos:start="40:13" pos:end="40:14">&gt;=</operator><literal type="number" pos:start="40:15" pos:end="40:15">0</literal></expr>)</condition><block pos:start="40:17" pos:end="50:9">{<block_content pos:start="41:13" pos:end="49:68">
            <decl_stmt pos:start="41:13" pos:end="41:55"><decl pos:start="41:13" pos:end="41:54"><type pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:19">int64_t</name></type> <name pos:start="41:21" pos:end="41:23">pos</name><init pos:start="41:24" pos:end="41:54">= <expr pos:start="41:26" pos:end="41:54"><name pos:start="41:26" pos:end="41:50"><name pos:start="41:26" pos:end="41:32">best_st</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:47">index_entries</name><index pos:start="41:48" pos:end="41:50">[<expr pos:start="41:49" pos:end="41:49"><name pos:start="41:49" pos:end="41:49">i</name></expr>]</index></name><operator pos:start="41:51" pos:end="41:51">.</operator><name pos:start="41:52" pos:end="41:54">pos</name></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="42:13" pos:end="42:63"><expr pos:start="42:13" pos:end="42:62"><name pos:start="42:13" pos:end="42:15">pos</name> <operator pos:start="42:17" pos:end="42:18">+=</operator> <name pos:start="42:20" pos:end="42:40"><name pos:start="42:20" pos:end="42:27">best_ast</name><operator pos:start="42:28" pos:end="42:29">-&gt;</operator><name pos:start="42:30" pos:end="42:40">packet_size</name></name> <operator pos:start="42:42" pos:end="42:42">-</operator> <name pos:start="42:44" pos:end="42:62"><name pos:start="42:44" pos:end="42:51">best_ast</name><operator pos:start="42:52" pos:end="42:53">-&gt;</operator><name pos:start="42:54" pos:end="42:62">remaining</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="43:13" pos:end="43:48"><expr pos:start="43:13" pos:end="43:47"><call pos:start="43:13" pos:end="43:47"><name pos:start="43:13" pos:end="43:21">url_fseek</name><argument_list pos:start="43:22" pos:end="43:47">(<argument pos:start="43:23" pos:end="43:27"><expr pos:start="43:23" pos:end="43:27"><name pos:start="43:23" pos:end="43:27"><name pos:start="43:23" pos:end="43:23">s</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:27">pb</name></name></expr></argument>, <argument pos:start="43:30" pos:end="43:36"><expr pos:start="43:30" pos:end="43:36"><name pos:start="43:30" pos:end="43:32">pos</name> <operator pos:start="43:34" pos:end="43:34">+</operator> <literal type="number" pos:start="43:36" pos:end="43:36">8</literal></expr></argument>, <argument pos:start="43:39" pos:end="43:46"><expr pos:start="43:39" pos:end="43:46"><name pos:start="43:39" pos:end="43:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:start="44:1" pos:end="44:61">//        av_log(NULL, AV_LOG_DEBUG, "pos=%"PRId64"\n", pos);</comment>
            <expr_stmt pos:start="45:13" pos:end="45:65"><expr pos:start="45:13" pos:end="45:64"><call pos:start="45:13" pos:end="45:64"><name pos:start="45:13" pos:end="45:18">assert</name><argument_list pos:start="45:19" pos:end="45:64">(<argument pos:start="45:20" pos:end="45:63"><expr pos:start="45:20" pos:end="45:63"><name pos:start="45:20" pos:end="45:38"><name pos:start="45:20" pos:end="45:27">best_ast</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:38">remaining</name></name> <operator pos:start="45:40" pos:end="45:41">&lt;=</operator> <name pos:start="45:43" pos:end="45:63"><name pos:start="45:43" pos:end="45:50">best_ast</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:63">packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="46:13" pos:end="46:49"><expr pos:start="46:13" pos:end="46:48"><name pos:start="46:13" pos:end="46:29"><name pos:start="46:13" pos:end="46:15">avi</name><operator pos:start="46:16" pos:end="46:17">-&gt;</operator><name pos:start="46:18" pos:end="46:29">stream_index</name></name><operator pos:start="46:30" pos:end="46:30">=</operator> <name pos:start="46:32" pos:end="46:48">best_stream_index</name></expr>;</expr_stmt>
            <if_stmt pos:start="47:13" pos:end="49:68"><if pos:start="47:13" pos:end="49:68">if<condition pos:start="47:15" pos:end="47:36">(<expr pos:start="47:16" pos:end="47:35"><operator pos:start="47:16" pos:end="47:16">!</operator><name pos:start="47:17" pos:end="47:35"><name pos:start="47:17" pos:end="47:24">best_ast</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:35">remaining</name></name></expr>)</condition><block type="pseudo" pos:start="48:17" pos:end="49:68"><block_content pos:start="48:17" pos:end="49:68">
                <expr_stmt pos:start="48:17" pos:end="49:68"><expr pos:start="48:17" pos:end="49:67"><name pos:start="48:17" pos:end="48:37"><name pos:start="48:17" pos:end="48:24">best_ast</name><operator pos:start="48:25" pos:end="48:26">-&gt;</operator><name pos:start="48:27" pos:end="48:37">packet_size</name></name><operator pos:start="48:38" pos:end="48:38">=</operator>
                <name pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:24">best_ast</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:35">remaining</name></name><operator pos:start="49:36" pos:end="49:36">=</operator> <name pos:start="49:38" pos:end="49:62"><name pos:start="49:38" pos:end="49:44">best_st</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:59">index_entries</name><index pos:start="49:60" pos:end="49:62">[<expr pos:start="49:61" pos:end="49:61"><name pos:start="49:61" pos:end="49:61">i</name></expr>]</index></name><operator pos:start="49:63" pos:end="49:63">.</operator><name pos:start="49:64" pos:end="49:67">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
<label pos:start="52:1" pos:end="52:7"><name pos:start="52:1" pos:end="52:6">resync</name>:</label>
    <if_stmt pos:start="53:5" pos:end="111:5"><if pos:start="53:5" pos:end="111:5">if<condition pos:start="53:7" pos:end="53:30">(<expr pos:start="53:8" pos:end="53:29"><name pos:start="53:8" pos:end="53:24"><name pos:start="53:8" pos:end="53:10">avi</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:24">stream_index</name></name> <operator pos:start="53:26" pos:end="53:27">&gt;=</operator> <literal type="number" pos:start="53:29" pos:end="53:29">0</literal></expr>)</condition><block pos:start="53:31" pos:end="111:5">{<block_content pos:start="54:9" pos:end="110:20">
        <decl_stmt pos:start="54:9" pos:end="54:54"><decl pos:start="54:9" pos:end="54:53"><type pos:start="54:9" pos:end="54:18"><name pos:start="54:9" pos:end="54:16">AVStream</name> <modifier pos:start="54:18" pos:end="54:18">*</modifier></type><name pos:start="54:19" pos:end="54:20">st</name><init pos:start="54:21" pos:end="54:53">= <expr pos:start="54:23" pos:end="54:53"><name pos:start="54:23" pos:end="54:53"><name pos:start="54:23" pos:end="54:23">s</name><operator pos:start="54:24" pos:end="54:25">-&gt;</operator><name pos:start="54:26" pos:end="54:32">streams</name><index pos:start="54:33" pos:end="54:53">[ <expr pos:start="54:35" pos:end="54:51"><name pos:start="54:35" pos:end="54:51"><name pos:start="54:35" pos:end="54:37">avi</name><operator pos:start="54:38" pos:end="54:39">-&gt;</operator><name pos:start="54:40" pos:end="54:51">stream_index</name></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="55:9" pos:end="55:38"><decl pos:start="55:9" pos:end="55:37"><type pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:17">AVIStream</name> <modifier pos:start="55:19" pos:end="55:19">*</modifier></type><name pos:start="55:20" pos:end="55:22">ast</name><init pos:start="55:23" pos:end="55:37">= <expr pos:start="55:25" pos:end="55:37"><name pos:start="55:25" pos:end="55:37"><name pos:start="55:25" pos:end="55:26">st</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:37">priv_data</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="56:9" pos:end="56:17"><decl pos:start="56:9" pos:end="56:16"><type pos:start="56:9" pos:end="56:11"><name pos:start="56:9" pos:end="56:11">int</name></type> <name pos:start="56:13" pos:end="56:16">size</name></decl>;</decl_stmt>
        <if_stmt pos:start="57:9" pos:end="62:35"><if pos:start="57:9" pos:end="58:26">if<condition pos:start="57:11" pos:end="57:33">(<expr pos:start="57:12" pos:end="57:32"><name pos:start="57:12" pos:end="57:27"><name pos:start="57:12" pos:end="57:14">ast</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:27">sample_size</name></name> <operator pos:start="57:29" pos:end="57:30">&lt;=</operator> <literal type="number" pos:start="57:32" pos:end="57:32">1</literal></expr>)</condition><block type="pseudo" pos:start="58:13" pos:end="58:26"><block_content pos:start="58:13" pos:end="58:26"> <comment type="line" pos:start="57:35" pos:end="57:96">// minorityreport.AVI block_align=1024 sample_size=1 IMA-ADPCM</comment>
            <expr_stmt pos:start="58:13" pos:end="58:26"><expr pos:start="58:13" pos:end="58:25"><name pos:start="58:13" pos:end="58:16">size</name><operator pos:start="58:17" pos:end="58:17">=</operator> <name pos:start="58:19" pos:end="58:25">INT_MAX</name></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="59:9" pos:end="60:38">else if<condition pos:start="59:16" pos:end="59:38">(<expr pos:start="59:17" pos:end="59:37"><name pos:start="59:17" pos:end="59:32"><name pos:start="59:17" pos:end="59:19">ast</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:32">sample_size</name></name> <operator pos:start="59:34" pos:end="59:34">&lt;</operator> <literal type="number" pos:start="59:36" pos:end="59:37">32</literal></expr>)</condition><block type="pseudo" pos:start="60:13" pos:end="60:38"><block_content pos:start="60:13" pos:end="60:38">
            <expr_stmt pos:start="60:13" pos:end="60:38"><expr pos:start="60:13" pos:end="60:37"><name pos:start="60:13" pos:end="60:16">size</name><operator pos:start="60:17" pos:end="60:17">=</operator> <literal type="number" pos:start="60:19" pos:end="60:20">64</literal><operator pos:start="60:21" pos:end="60:21">*</operator><name pos:start="60:22" pos:end="60:37"><name pos:start="60:22" pos:end="60:24">ast</name><operator pos:start="60:25" pos:end="60:26">-&gt;</operator><name pos:start="60:27" pos:end="60:37">sample_size</name></name></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="61:9" pos:end="62:35">else<block type="pseudo" pos:start="62:13" pos:end="62:35"><block_content pos:start="62:13" pos:end="62:35">
            <expr_stmt pos:start="62:13" pos:end="62:35"><expr pos:start="62:13" pos:end="62:34"><name pos:start="62:13" pos:end="62:16">size</name><operator pos:start="62:17" pos:end="62:17">=</operator> <name pos:start="62:19" pos:end="62:34"><name pos:start="62:19" pos:end="62:21">ast</name><operator pos:start="62:22" pos:end="62:23">-&gt;</operator><name pos:start="62:24" pos:end="62:34">sample_size</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <if_stmt pos:start="63:9" pos:end="64:33"><if pos:start="63:9" pos:end="64:33">if<condition pos:start="63:11" pos:end="63:33">(<expr pos:start="63:12" pos:end="63:32"><name pos:start="63:12" pos:end="63:15">size</name> <operator pos:start="63:17" pos:end="63:17">&gt;</operator> <name pos:start="63:19" pos:end="63:32"><name pos:start="63:19" pos:end="63:21">ast</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:32">remaining</name></name></expr>)</condition><block type="pseudo" pos:start="64:13" pos:end="64:33"><block_content pos:start="64:13" pos:end="64:33">
            <expr_stmt pos:start="64:13" pos:end="64:33"><expr pos:start="64:13" pos:end="64:32"><name pos:start="64:13" pos:end="64:16">size</name><operator pos:start="64:17" pos:end="64:17">=</operator> <name pos:start="64:19" pos:end="64:32"><name pos:start="64:19" pos:end="64:21">ast</name><operator pos:start="64:22" pos:end="64:23">-&gt;</operator><name pos:start="64:24" pos:end="64:32">remaining</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><call pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:21">av_get_packet</name><argument_list pos:start="65:22" pos:end="65:36">(<argument pos:start="65:23" pos:end="65:24"><expr pos:start="65:23" pos:end="65:24"><name pos:start="65:23" pos:end="65:24">pb</name></expr></argument>, <argument pos:start="65:27" pos:end="65:29"><expr pos:start="65:27" pos:end="65:29"><name pos:start="65:27" pos:end="65:29">pkt</name></expr></argument>, <argument pos:start="65:32" pos:end="65:35"><expr pos:start="65:32" pos:end="65:35"><name pos:start="65:32" pos:end="65:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="66:9" pos:end="72:9"><if pos:start="66:9" pos:end="72:9">if<condition pos:start="66:11" pos:end="66:70">(<expr pos:start="66:12" pos:end="66:69"><name pos:start="66:12" pos:end="66:23"><name pos:start="66:12" pos:end="66:14">ast</name><operator pos:start="66:15" pos:end="66:16">-&gt;</operator><name pos:start="66:17" pos:end="66:23">has_pal</name></name> <operator pos:start="66:25" pos:end="66:26">&amp;&amp;</operator> <name pos:start="66:28" pos:end="66:36"><name pos:start="66:28" pos:end="66:30">pkt</name><operator pos:start="66:31" pos:end="66:32">-&gt;</operator><name pos:start="66:33" pos:end="66:36">data</name></name> <operator pos:start="66:38" pos:end="66:39">&amp;&amp;</operator> <name pos:start="66:41" pos:end="66:49"><name pos:start="66:41" pos:end="66:43">pkt</name><operator pos:start="66:44" pos:end="66:45">-&gt;</operator><name pos:start="66:46" pos:end="66:49">size</name></name><operator pos:start="66:50" pos:end="66:50">&lt;</operator><operator pos:start="66:51" pos:end="66:51">(</operator><name pos:start="66:52" pos:end="66:59">unsigned</name><operator pos:start="66:60" pos:end="66:60">)</operator><name pos:start="66:61" pos:end="66:67">INT_MAX</name><operator pos:start="66:68" pos:end="66:68">/</operator><literal type="number" pos:start="66:69" pos:end="66:69">2</literal></expr>)</condition><block pos:start="66:71" pos:end="72:9">{<block_content pos:start="67:13" pos:end="71:71">
            <expr_stmt pos:start="67:13" pos:end="67:27"><expr pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:15">ast</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:24">has_pal</name></name><operator pos:start="67:25" pos:end="67:25">=</operator><literal type="number" pos:start="67:26" pos:end="67:26">0</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="68:13" pos:end="68:31"><expr pos:start="68:13" pos:end="68:30"><name pos:start="68:13" pos:end="68:21"><name pos:start="68:13" pos:end="68:15">pkt</name><operator pos:start="68:16" pos:end="68:17">-&gt;</operator><name pos:start="68:18" pos:end="68:21">size</name></name> <operator pos:start="68:23" pos:end="68:24">+=</operator> <literal type="number" pos:start="68:26" pos:end="68:26">4</literal><operator pos:start="68:27" pos:end="68:27">*</operator><literal type="number" pos:start="68:28" pos:end="68:30">256</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="69:13" pos:end="69:88"><expr pos:start="69:13" pos:end="69:87"><name pos:start="69:13" pos:end="69:21"><name pos:start="69:13" pos:end="69:15">pkt</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:21">data</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <call pos:start="69:25" pos:end="69:87"><name pos:start="69:25" pos:end="69:34">av_realloc</name><argument_list pos:start="69:35" pos:end="69:87">(<argument pos:start="69:36" pos:end="69:44"><expr pos:start="69:36" pos:end="69:44"><name pos:start="69:36" pos:end="69:44"><name pos:start="69:36" pos:end="69:38">pkt</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:44">data</name></name></expr></argument>, <argument pos:start="69:47" pos:end="69:86"><expr pos:start="69:47" pos:end="69:86"><name pos:start="69:47" pos:end="69:55"><name pos:start="69:47" pos:end="69:49">pkt</name><operator pos:start="69:50" pos:end="69:51">-&gt;</operator><name pos:start="69:52" pos:end="69:55">size</name></name> <operator pos:start="69:57" pos:end="69:57">+</operator> <name pos:start="69:59" pos:end="69:86">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="70:13" pos:end="71:71"><if pos:start="70:13" pos:end="71:71">if<condition pos:start="70:15" pos:end="70:25">(<expr pos:start="70:16" pos:end="70:24"><name pos:start="70:16" pos:end="70:24"><name pos:start="70:16" pos:end="70:18">pkt</name><operator pos:start="70:19" pos:end="70:20">-&gt;</operator><name pos:start="70:21" pos:end="70:24">data</name></name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:71"><block_content pos:start="71:17" pos:end="71:71">
                <expr_stmt pos:start="71:17" pos:end="71:71"><expr pos:start="71:17" pos:end="71:70"><call pos:start="71:17" pos:end="71:70"><name pos:start="71:17" pos:end="71:22">memcpy</name><argument_list pos:start="71:23" pos:end="71:70">(<argument pos:start="71:24" pos:end="71:52"><expr pos:start="71:24" pos:end="71:52"><name pos:start="71:24" pos:end="71:32"><name pos:start="71:24" pos:end="71:26">pkt</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:32">data</name></name> <operator pos:start="71:34" pos:end="71:34">+</operator> <name pos:start="71:36" pos:end="71:44"><name pos:start="71:36" pos:end="71:38">pkt</name><operator pos:start="71:39" pos:end="71:40">-&gt;</operator><name pos:start="71:41" pos:end="71:44">size</name></name> <operator pos:start="71:46" pos:end="71:46">-</operator> <literal type="number" pos:start="71:48" pos:end="71:48">4</literal><operator pos:start="71:49" pos:end="71:49">*</operator><literal type="number" pos:start="71:50" pos:end="71:52">256</literal></expr></argument>, <argument pos:start="71:55" pos:end="71:62"><expr pos:start="71:55" pos:end="71:62"><name pos:start="71:55" pos:end="71:62"><name pos:start="71:55" pos:end="71:57">ast</name><operator pos:start="71:58" pos:end="71:59">-&gt;</operator><name pos:start="71:60" pos:end="71:62">pal</name></name></expr></argument>, <argument pos:start="71:65" pos:end="71:69"><expr pos:start="71:65" pos:end="71:69"><literal type="number" pos:start="71:65" pos:end="71:65">4</literal><operator pos:start="71:66" pos:end="71:66">*</operator><literal type="number" pos:start="71:67" pos:end="71:69">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="73:9" pos:end="104:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:47">(<expr pos:start="73:13" pos:end="73:46"><name pos:start="73:13" pos:end="73:29">ENABLE_DV_DEMUXER</name> <operator pos:start="73:31" pos:end="73:32">&amp;&amp;</operator> <name pos:start="73:34" pos:end="73:46"><name pos:start="73:34" pos:end="73:36">avi</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:46">dv_demux</name></name></expr>)</condition> <block pos:start="73:49" pos:end="79:9">{<block_content pos:start="74:13" pos:end="78:39">
            <expr_stmt pos:start="74:13" pos:end="74:33"><expr pos:start="74:13" pos:end="74:32"><name pos:start="74:13" pos:end="74:16">dstr</name> <operator pos:start="74:18" pos:end="74:18">=</operator> <name pos:start="74:20" pos:end="74:32"><name pos:start="74:20" pos:end="74:22">pkt</name><operator pos:start="74:23" pos:end="74:24">-&gt;</operator><name pos:start="74:25" pos:end="74:32">destruct</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="75:13" pos:end="76:58"><expr pos:start="75:13" pos:end="76:57"><name pos:start="75:13" pos:end="75:16">size</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <call pos:start="75:20" pos:end="76:57"><name pos:start="75:20" pos:end="75:36">dv_produce_packet</name><argument_list pos:start="75:37" pos:end="76:57">(<argument pos:start="75:38" pos:end="75:50"><expr pos:start="75:38" pos:end="75:50"><name pos:start="75:38" pos:end="75:50"><name pos:start="75:38" pos:end="75:40">avi</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:50">dv_demux</name></name></expr></argument>, <argument pos:start="75:53" pos:end="75:55"><expr pos:start="75:53" pos:end="75:55"><name pos:start="75:53" pos:end="75:55">pkt</name></expr></argument>,
                                    <argument pos:start="76:37" pos:end="76:45"><expr pos:start="76:37" pos:end="76:45"><name pos:start="76:37" pos:end="76:45"><name pos:start="76:37" pos:end="76:39">pkt</name><operator pos:start="76:40" pos:end="76:41">-&gt;</operator><name pos:start="76:42" pos:end="76:45">data</name></name></expr></argument>, <argument pos:start="76:48" pos:end="76:56"><expr pos:start="76:48" pos:end="76:56"><name pos:start="76:48" pos:end="76:56"><name pos:start="76:48" pos:end="76:50">pkt</name><operator pos:start="76:51" pos:end="76:52">-&gt;</operator><name pos:start="76:53" pos:end="76:56">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="77:13" pos:end="77:33"><expr pos:start="77:13" pos:end="77:32"><name pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:15">pkt</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:25">destruct</name></name> <operator pos:start="77:27" pos:end="77:27">=</operator> <name pos:start="77:29" pos:end="77:32">dstr</name></expr>;</expr_stmt>
            <expr_stmt pos:start="78:13" pos:end="78:39"><expr pos:start="78:13" pos:end="78:38"><name pos:start="78:13" pos:end="78:22"><name pos:start="78:13" pos:end="78:15">pkt</name><operator pos:start="78:16" pos:end="78:17">-&gt;</operator><name pos:start="78:18" pos:end="78:22">flags</name></name> <operator pos:start="78:24" pos:end="78:25">|=</operator> <name pos:start="78:27" pos:end="78:38">PKT_FLAG_KEY</name></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="79:11" pos:end="104:9">else <block pos:start="79:16" pos:end="104:9">{<block_content pos:start="81:13" pos:end="103:36">
            <comment type="block" pos:start="80:13" pos:end="80:54">/* XXX: how to handle B frames in avi ? */</comment>
            <expr_stmt pos:start="81:13" pos:end="81:41"><expr pos:start="81:13" pos:end="81:40"><name pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:15">pkt</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:20">dts</name></name> <operator pos:start="81:22" pos:end="81:22">=</operator> <name pos:start="81:24" pos:end="81:40"><name pos:start="81:24" pos:end="81:26">ast</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:40">frame_offset</name></name></expr>;</expr_stmt>
<comment type="line" pos:start="82:1" pos:end="82:41">//                pkt-&gt;dts += ast-&gt;start;</comment>
            <if_stmt pos:start="83:13" pos:end="84:45"><if pos:start="83:13" pos:end="84:45">if<condition pos:start="83:15" pos:end="83:32">(<expr pos:start="83:16" pos:end="83:31"><name pos:start="83:16" pos:end="83:31"><name pos:start="83:16" pos:end="83:18">ast</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:31">sample_size</name></name></expr>)</condition><block type="pseudo" pos:start="84:17" pos:end="84:45"><block_content pos:start="84:17" pos:end="84:45">
                <expr_stmt pos:start="84:17" pos:end="84:45"><expr pos:start="84:17" pos:end="84:44"><name pos:start="84:17" pos:end="84:24"><name pos:start="84:17" pos:end="84:19">pkt</name><operator pos:start="84:20" pos:end="84:21">-&gt;</operator><name pos:start="84:22" pos:end="84:24">dts</name></name> <operator pos:start="84:26" pos:end="84:27">/=</operator> <name pos:start="84:29" pos:end="84:44"><name pos:start="84:29" pos:end="84:31">ast</name><operator pos:start="84:32" pos:end="84:33">-&gt;</operator><name pos:start="84:34" pos:end="84:44">sample_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<comment type="line" pos:start="85:1" pos:end="85:214">//av_log(NULL, AV_LOG_DEBUG, "dts:%"PRId64" offset:%"PRId64" %d/%d smpl_siz:%d base:%d st:%d size:%d\n", pkt-&gt;dts, ast-&gt;frame_offset, ast-&gt;scale, ast-&gt;rate, ast-&gt;sample_size, AV_TIME_BASE, avi-&gt;stream_index, size);</comment>
            <expr_stmt pos:start="86:13" pos:end="86:50"><expr pos:start="86:13" pos:end="86:49"><name pos:start="86:13" pos:end="86:29"><name pos:start="86:13" pos:end="86:15">pkt</name><operator pos:start="86:16" pos:end="86:17">-&gt;</operator><name pos:start="86:18" pos:end="86:29">stream_index</name></name> <operator pos:start="86:31" pos:end="86:31">=</operator> <name pos:start="86:33" pos:end="86:49"><name pos:start="86:33" pos:end="86:35">avi</name><operator pos:start="86:36" pos:end="86:37">-&gt;</operator><name pos:start="86:38" pos:end="86:49">stream_index</name></name></expr>;</expr_stmt>
            <if_stmt pos:start="87:13" pos:end="99:13"><if pos:start="87:13" pos:end="97:13">if <condition pos:start="87:16" pos:end="87:58">(<expr pos:start="87:17" pos:end="87:57"><name pos:start="87:17" pos:end="87:37"><name pos:start="87:17" pos:end="87:18">st</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:25">codec</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:37">codec_type</name></name> <operator pos:start="87:39" pos:end="87:40">==</operator> <name pos:start="87:42" pos:end="87:57">CODEC_TYPE_VIDEO</name></expr>)</condition> <block pos:start="87:60" pos:end="97:13">{<block_content pos:start="88:17" pos:end="96:17">
                <decl_stmt pos:start="88:17" pos:end="88:32"><decl pos:start="88:17" pos:end="88:31"><type pos:start="88:17" pos:end="88:30"><name pos:start="88:17" pos:end="88:28">AVIndexEntry</name> <modifier pos:start="88:30" pos:end="88:30">*</modifier></type><name pos:start="88:31" pos:end="88:31">e</name></decl>;</decl_stmt>
                <decl_stmt pos:start="89:17" pos:end="89:26"><decl pos:start="89:17" pos:end="89:25"><type pos:start="89:17" pos:end="89:19"><name pos:start="89:17" pos:end="89:19">int</name></type> <name pos:start="89:21" pos:end="89:25">index</name></decl>;</decl_stmt>
                <expr_stmt pos:start="90:17" pos:end="90:42"><expr pos:start="90:17" pos:end="90:41"><call pos:start="90:17" pos:end="90:41"><name pos:start="90:17" pos:end="90:22">assert</name><argument_list pos:start="90:23" pos:end="90:41">(<argument pos:start="90:24" pos:end="90:40"><expr pos:start="90:24" pos:end="90:40"><name pos:start="90:24" pos:end="90:40"><name pos:start="90:24" pos:end="90:25">st</name><operator pos:start="90:26" pos:end="90:27">-&gt;</operator><name pos:start="90:28" pos:end="90:40">index_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="91:17" pos:end="91:66"><expr pos:start="91:17" pos:end="91:65"><name pos:start="91:17" pos:end="91:21">index</name><operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:65"><name pos:start="91:24" pos:end="91:48">av_index_search_timestamp</name><argument_list pos:start="91:49" pos:end="91:65">(<argument pos:start="91:50" pos:end="91:51"><expr pos:start="91:50" pos:end="91:51"><name pos:start="91:50" pos:end="91:51">st</name></expr></argument>, <argument pos:start="91:54" pos:end="91:61"><expr pos:start="91:54" pos:end="91:61"><name pos:start="91:54" pos:end="91:61"><name pos:start="91:54" pos:end="91:56">pkt</name><operator pos:start="91:57" pos:end="91:58">-&gt;</operator><name pos:start="91:59" pos:end="91:61">dts</name></name></expr></argument>, <argument pos:start="91:64" pos:end="91:64"><expr pos:start="91:64" pos:end="91:64"><literal type="number" pos:start="91:64" pos:end="91:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="92:17" pos:end="92:45"><expr pos:start="92:17" pos:end="92:44"><name pos:start="92:17" pos:end="92:17">e</name><operator pos:start="92:18" pos:end="92:18">=</operator> <operator pos:start="92:20" pos:end="92:20">&amp;</operator><name pos:start="92:21" pos:end="92:44"><name pos:start="92:21" pos:end="92:22">st</name><operator pos:start="92:23" pos:end="92:24">-&gt;</operator><name pos:start="92:25" pos:end="92:37">index_entries</name><index pos:start="92:38" pos:end="92:44">[<expr pos:start="92:39" pos:end="92:43"><name pos:start="92:39" pos:end="92:43">index</name></expr>]</index></name></expr>;</expr_stmt>
                <if_stmt pos:start="93:17" pos:end="96:17"><if pos:start="93:17" pos:end="96:17">if<condition pos:start="93:19" pos:end="93:67">(<expr pos:start="93:20" pos:end="93:66"><name pos:start="93:20" pos:end="93:24">index</name> <operator pos:start="93:26" pos:end="93:27">&gt;=</operator> <literal type="number" pos:start="93:29" pos:end="93:29">0</literal> <operator pos:start="93:31" pos:end="93:32">&amp;&amp;</operator> <name pos:start="93:34" pos:end="93:45"><name pos:start="93:34" pos:end="93:34">e</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:45">timestamp</name></name> <operator pos:start="93:47" pos:end="93:48">==</operator> <name pos:start="93:50" pos:end="93:66"><name pos:start="93:50" pos:end="93:52">ast</name><operator pos:start="93:53" pos:end="93:54">-&gt;</operator><name pos:start="93:55" pos:end="93:66">frame_offset</name></name></expr>)</condition><block pos:start="93:68" pos:end="96:17">{<block_content pos:start="94:21" pos:end="95:51">
                    <if_stmt pos:start="94:21" pos:end="95:51"><if pos:start="94:21" pos:end="95:51">if <condition pos:start="94:24" pos:end="94:52">(<expr pos:start="94:25" pos:end="94:51"><name pos:start="94:25" pos:end="94:32"><name pos:start="94:25" pos:end="94:25">e</name><operator pos:start="94:26" pos:end="94:27">-&gt;</operator><name pos:start="94:28" pos:end="94:32">flags</name></name> <operator pos:start="94:34" pos:end="94:34">&amp;</operator> <name pos:start="94:36" pos:end="94:51">AVINDEX_KEYFRAME</name></expr>)</condition><block type="pseudo" pos:start="95:25" pos:end="95:51"><block_content pos:start="95:25" pos:end="95:51">
                        <expr_stmt pos:start="95:25" pos:end="95:51"><expr pos:start="95:25" pos:end="95:50"><name pos:start="95:25" pos:end="95:34"><name pos:start="95:25" pos:end="95:27">pkt</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:34">flags</name></name> <operator pos:start="95:36" pos:end="95:37">|=</operator> <name pos:start="95:39" pos:end="95:50">PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if> <else pos:start="97:15" pos:end="99:13">else <block pos:start="97:20" pos:end="99:13">{<block_content pos:start="98:17" pos:end="98:43">
                <expr_stmt pos:start="98:17" pos:end="98:43"><expr pos:start="98:17" pos:end="98:42"><name pos:start="98:17" pos:end="98:26"><name pos:start="98:17" pos:end="98:19">pkt</name><operator pos:start="98:20" pos:end="98:21">-&gt;</operator><name pos:start="98:22" pos:end="98:26">flags</name></name> <operator pos:start="98:28" pos:end="98:29">|=</operator> <name pos:start="98:31" pos:end="98:42">PKT_FLAG_KEY</name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt>
            <if_stmt pos:start="100:13" pos:end="103:36"><if pos:start="100:13" pos:end="101:47">if<condition pos:start="100:15" pos:end="100:32">(<expr pos:start="100:16" pos:end="100:31"><name pos:start="100:16" pos:end="100:31"><name pos:start="100:16" pos:end="100:18">ast</name><operator pos:start="100:19" pos:end="100:20">-&gt;</operator><name pos:start="100:21" pos:end="100:31">sample_size</name></name></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:47"><block_content pos:start="101:17" pos:end="101:47">
                <expr_stmt pos:start="101:17" pos:end="101:47"><expr pos:start="101:17" pos:end="101:46"><name pos:start="101:17" pos:end="101:33"><name pos:start="101:17" pos:end="101:19">ast</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:33">frame_offset</name></name> <operator pos:start="101:35" pos:end="101:36">+=</operator> <name pos:start="101:38" pos:end="101:46"><name pos:start="101:38" pos:end="101:40">pkt</name><operator pos:start="101:41" pos:end="101:42">-&gt;</operator><name pos:start="101:43" pos:end="101:46">size</name></name></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="102:13" pos:end="103:36">else<block type="pseudo" pos:start="103:17" pos:end="103:36"><block_content pos:start="103:17" pos:end="103:36">
                <expr_stmt pos:start="103:17" pos:end="103:36"><expr pos:start="103:17" pos:end="103:35"><name pos:start="103:17" pos:end="103:33"><name pos:start="103:17" pos:end="103:19">ast</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:33">frame_offset</name></name><operator pos:start="103:34" pos:end="103:35">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
        </block_content>}</block></else></if_stmt>
        <expr_stmt pos:start="105:9" pos:end="105:31"><expr pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:11">ast</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:22">remaining</name></name> <operator pos:start="105:24" pos:end="105:25">-=</operator> <name pos:start="105:27" pos:end="105:30">size</name></expr>;</expr_stmt>
        <if_stmt pos:start="106:9" pos:end="109:9"><if pos:start="106:9" pos:end="109:9">if<condition pos:start="106:11" pos:end="106:27">(<expr pos:start="106:12" pos:end="106:26"><operator pos:start="106:12" pos:end="106:12">!</operator><name pos:start="106:13" pos:end="106:26"><name pos:start="106:13" pos:end="106:15">ast</name><operator pos:start="106:16" pos:end="106:17">-&gt;</operator><name pos:start="106:18" pos:end="106:26">remaining</name></name></expr>)</condition><block pos:start="106:28" pos:end="109:9">{<block_content pos:start="107:13" pos:end="108:32">
            <expr_stmt pos:start="107:13" pos:end="107:34"><expr pos:start="107:13" pos:end="107:33"><name pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:15">avi</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:29">stream_index</name></name><operator pos:start="107:30" pos:end="107:30">=</operator> <operator pos:start="107:32" pos:end="107:32">-</operator><literal type="number" pos:start="107:33" pos:end="107:33">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="108:13" pos:end="108:32"><expr pos:start="108:13" pos:end="108:31"><name pos:start="108:13" pos:end="108:28"><name pos:start="108:13" pos:end="108:15">ast</name><operator pos:start="108:16" pos:end="108:17">-&gt;</operator><name pos:start="108:18" pos:end="108:28">packet_size</name></name><operator pos:start="108:29" pos:end="108:29">=</operator> <literal type="number" pos:start="108:31" pos:end="108:31">0</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="110:9" pos:end="110:20">return <expr pos:start="110:16" pos:end="110:19"><name pos:start="110:16" pos:end="110:19">size</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="112:5" pos:end="112:33"><expr pos:start="112:5" pos:end="112:32"><call pos:start="112:5" pos:end="112:32"><name pos:start="112:5" pos:end="112:10">memset</name><argument_list pos:start="112:11" pos:end="112:32">(<argument pos:start="112:12" pos:end="112:12"><expr pos:start="112:12" pos:end="112:12"><name pos:start="112:12" pos:end="112:12">d</name></expr></argument>, <argument pos:start="112:15" pos:end="112:16"><expr pos:start="112:15" pos:end="112:16"><operator pos:start="112:15" pos:end="112:15">-</operator><literal type="number" pos:start="112:16" pos:end="112:16">1</literal></expr></argument>, <argument pos:start="112:19" pos:end="112:31"><expr pos:start="112:19" pos:end="112:31"><sizeof pos:start="112:19" pos:end="112:29">sizeof<argument_list pos:start="112:25" pos:end="112:29">(<argument pos:start="112:26" pos:end="112:28"><expr pos:start="112:26" pos:end="112:28"><name pos:start="112:26" pos:end="112:28">int</name></expr></argument>)</argument_list></sizeof><operator pos:start="112:30" pos:end="112:30">*</operator><literal type="number" pos:start="112:31" pos:end="112:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="113:5" pos:end="205:5">for<control pos:start="113:8" pos:end="113:49">(<init pos:start="113:9" pos:end="113:29"><expr pos:start="113:9" pos:end="113:28"><name pos:start="113:9" pos:end="113:9">i</name><operator pos:start="113:10" pos:end="113:10">=</operator><name pos:start="113:11" pos:end="113:14">sync</name><operator pos:start="113:15" pos:end="113:15">=</operator><call pos:start="113:16" pos:end="113:28"><name pos:start="113:16" pos:end="113:24">url_ftell</name><argument_list pos:start="113:25" pos:end="113:28">(<argument pos:start="113:26" pos:end="113:27"><expr pos:start="113:26" pos:end="113:27"><name pos:start="113:26" pos:end="113:27">pb</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="113:31" pos:end="113:44"><expr pos:start="113:31" pos:end="113:43"><operator pos:start="113:31" pos:end="113:31">!</operator><call pos:start="113:32" pos:end="113:43"><name pos:start="113:32" pos:end="113:39">url_feof</name><argument_list pos:start="113:40" pos:end="113:43">(<argument pos:start="113:41" pos:end="113:42"><expr pos:start="113:41" pos:end="113:42"><name pos:start="113:41" pos:end="113:42">pb</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="113:46" pos:end="113:48"><expr pos:start="113:46" pos:end="113:48"><name pos:start="113:46" pos:end="113:46">i</name><operator pos:start="113:47" pos:end="113:48">++</operator></expr></incr>)</control> <block pos:start="113:51" pos:end="205:5">{<block_content pos:start="114:9" pos:end="204:9">
        <decl_stmt pos:start="114:9" pos:end="114:14"><decl pos:start="114:9" pos:end="114:13"><type pos:start="114:9" pos:end="114:11"><name pos:start="114:9" pos:end="114:11">int</name></type> <name pos:start="114:13" pos:end="114:13">j</name></decl>;</decl_stmt>
        <for pos:start="115:9" pos:end="116:25">for<control pos:start="115:12" pos:end="115:26">(<init pos:start="115:13" pos:end="115:16"><expr pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:13">j</name><operator pos:start="115:14" pos:end="115:14">=</operator><literal type="number" pos:start="115:15" pos:end="115:15">0</literal></expr>;</init> <condition pos:start="115:18" pos:end="115:21"><expr pos:start="115:18" pos:end="115:20"><name pos:start="115:18" pos:end="115:18">j</name><operator pos:start="115:19" pos:end="115:19">&lt;</operator><literal type="number" pos:start="115:20" pos:end="115:20">7</literal></expr>;</condition> <incr pos:start="115:23" pos:end="115:25"><expr pos:start="115:23" pos:end="115:25"><name pos:start="115:23" pos:end="115:23">j</name><operator pos:start="115:24" pos:end="115:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="116:13" pos:end="116:25"><block_content pos:start="116:13" pos:end="116:25">
            <expr_stmt pos:start="116:13" pos:end="116:25"><expr pos:start="116:13" pos:end="116:24"><name pos:start="116:13" pos:end="116:16"><name pos:start="116:13" pos:end="116:13">d</name><index pos:start="116:14" pos:end="116:16">[<expr pos:start="116:15" pos:end="116:15"><name pos:start="116:15" pos:end="116:15">j</name></expr>]</index></name><operator pos:start="116:17" pos:end="116:17">=</operator> <name pos:start="116:19" pos:end="116:24"><name pos:start="116:19" pos:end="116:19">d</name><index pos:start="116:20" pos:end="116:24">[<expr pos:start="116:21" pos:end="116:23"><name pos:start="116:21" pos:end="116:21">j</name><operator pos:start="116:22" pos:end="116:22">+</operator><literal type="number" pos:start="116:23" pos:end="116:23">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
        <expr_stmt pos:start="117:9" pos:end="117:27"><expr pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:12"><name pos:start="117:9" pos:end="117:9">d</name><index pos:start="117:10" pos:end="117:12">[<expr pos:start="117:11" pos:end="117:11"><literal type="number" pos:start="117:11" pos:end="117:11">7</literal></expr>]</index></name><operator pos:start="117:13" pos:end="117:13">=</operator> <call pos:start="117:15" pos:end="117:26"><name pos:start="117:15" pos:end="117:22">get_byte</name><argument_list pos:start="117:23" pos:end="117:26">(<argument pos:start="117:24" pos:end="117:25"><expr pos:start="117:24" pos:end="117:25"><name pos:start="117:24" pos:end="117:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="118:9" pos:end="118:57"><expr pos:start="118:9" pos:end="118:56"><name pos:start="118:9" pos:end="118:12">size</name><operator pos:start="118:13" pos:end="118:13">=</operator> <name pos:start="118:15" pos:end="118:18"><name pos:start="118:15" pos:end="118:15">d</name><index pos:start="118:16" pos:end="118:18">[<expr pos:start="118:17" pos:end="118:17"><literal type="number" pos:start="118:17" pos:end="118:17">4</literal></expr>]</index></name> <operator pos:start="118:20" pos:end="118:20">+</operator> <operator pos:start="118:22" pos:end="118:22">(</operator><name pos:start="118:23" pos:end="118:26"><name pos:start="118:23" pos:end="118:23">d</name><index pos:start="118:24" pos:end="118:26">[<expr pos:start="118:25" pos:end="118:25"><literal type="number" pos:start="118:25" pos:end="118:25">5</literal></expr>]</index></name><operator pos:start="118:27" pos:end="118:28">&lt;&lt;</operator><literal type="number" pos:start="118:29" pos:end="118:29">8</literal><operator pos:start="118:30" pos:end="118:30">)</operator> <operator pos:start="118:32" pos:end="118:32">+</operator> <operator pos:start="118:34" pos:end="118:34">(</operator><name pos:start="118:35" pos:end="118:38"><name pos:start="118:35" pos:end="118:35">d</name><index pos:start="118:36" pos:end="118:38">[<expr pos:start="118:37" pos:end="118:37"><literal type="number" pos:start="118:37" pos:end="118:37">6</literal></expr>]</index></name><operator pos:start="118:39" pos:end="118:40">&lt;&lt;</operator><literal type="number" pos:start="118:41" pos:end="118:42">16</literal><operator pos:start="118:43" pos:end="118:43">)</operator> <operator pos:start="118:45" pos:end="118:45">+</operator> <operator pos:start="118:47" pos:end="118:47">(</operator><name pos:start="118:48" pos:end="118:51"><name pos:start="118:48" pos:end="118:48">d</name><index pos:start="118:49" pos:end="118:51">[<expr pos:start="118:50" pos:end="118:50"><literal type="number" pos:start="118:50" pos:end="118:50">7</literal></expr>]</index></name><operator pos:start="118:52" pos:end="118:53">&lt;&lt;</operator><literal type="number" pos:start="118:54" pos:end="118:55">24</literal><operator pos:start="118:56" pos:end="118:56">)</operator></expr>;</expr_stmt>
        <if_stmt pos:start="119:9" pos:end="124:9"><if pos:start="119:9" pos:end="122:9">if<condition pos:start="119:11" pos:end="120:42">(    <expr pos:start="119:16" pos:end="120:41"><name pos:start="119:16" pos:end="119:19"><name pos:start="119:16" pos:end="119:16">d</name><index pos:start="119:17" pos:end="119:19">[<expr pos:start="119:18" pos:end="119:18"><literal type="number" pos:start="119:18" pos:end="119:18">2</literal></expr>]</index></name> <operator pos:start="119:21" pos:end="119:22">&gt;=</operator> <literal type="char" pos:start="119:24" pos:end="119:26">'0'</literal> <operator pos:start="119:28" pos:end="119:29">&amp;&amp;</operator> <name pos:start="119:31" pos:end="119:34"><name pos:start="119:31" pos:end="119:31">d</name><index pos:start="119:32" pos:end="119:34">[<expr pos:start="119:33" pos:end="119:33"><literal type="number" pos:start="119:33" pos:end="119:33">2</literal></expr>]</index></name> <operator pos:start="119:36" pos:end="119:37">&lt;=</operator> <literal type="char" pos:start="119:39" pos:end="119:41">'9'</literal>
            <operator pos:start="120:13" pos:end="120:14">&amp;&amp;</operator> <name pos:start="120:16" pos:end="120:19"><name pos:start="120:16" pos:end="120:16">d</name><index pos:start="120:17" pos:end="120:19">[<expr pos:start="120:18" pos:end="120:18"><literal type="number" pos:start="120:18" pos:end="120:18">3</literal></expr>]</index></name> <operator pos:start="120:21" pos:end="120:22">&gt;=</operator> <literal type="char" pos:start="120:24" pos:end="120:26">'0'</literal> <operator pos:start="120:28" pos:end="120:29">&amp;&amp;</operator> <name pos:start="120:31" pos:end="120:34"><name pos:start="120:31" pos:end="120:31">d</name><index pos:start="120:32" pos:end="120:34">[<expr pos:start="120:33" pos:end="120:33"><literal type="number" pos:start="120:33" pos:end="120:33">3</literal></expr>]</index></name> <operator pos:start="120:36" pos:end="120:37">&lt;=</operator> <literal type="char" pos:start="120:39" pos:end="120:41">'9'</literal></expr>)</condition><block pos:start="120:43" pos:end="122:9">{<block_content pos:start="121:13" pos:end="121:48">
            <expr_stmt pos:start="121:13" pos:end="121:48"><expr pos:start="121:13" pos:end="121:47"><name pos:start="121:13" pos:end="121:13">n</name><operator pos:start="121:14" pos:end="121:14">=</operator> <operator pos:start="121:16" pos:end="121:16">(</operator><name pos:start="121:17" pos:end="121:20"><name pos:start="121:17" pos:end="121:17">d</name><index pos:start="121:18" pos:end="121:20">[<expr pos:start="121:19" pos:end="121:19"><literal type="number" pos:start="121:19" pos:end="121:19">2</literal></expr>]</index></name> <operator pos:start="121:22" pos:end="121:22">-</operator> <literal type="char" pos:start="121:24" pos:end="121:26">'0'</literal><operator pos:start="121:27" pos:end="121:27">)</operator> <operator pos:start="121:29" pos:end="121:29">*</operator> <literal type="number" pos:start="121:31" pos:end="121:34">10</literal> <operator pos:start="121:34" pos:end="121:34">+</operator> <operator pos:start="121:36" pos:end="121:36">(</operator><name pos:start="121:37" pos:end="121:40"><name pos:start="121:37" pos:end="121:37">d</name><index pos:start="121:38" pos:end="121:40">[<expr pos:start="121:39" pos:end="121:39"><literal type="number" pos:start="121:39" pos:end="121:39">3</literal></expr>]</index></name> <operator pos:start="121:42" pos:end="121:42">-</operator> <literal type="char" pos:start="121:44" pos:end="121:46">'0'</literal><operator pos:start="121:47" pos:end="121:47">)</operator></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="122:10" pos:end="124:9">else<block pos:start="122:14" pos:end="124:9">{<block_content pos:start="123:13" pos:end="123:19">
            <expr_stmt pos:start="123:13" pos:end="123:19"><expr pos:start="123:13" pos:end="123:18"><name pos:start="123:13" pos:end="123:13">n</name><operator pos:start="123:14" pos:end="123:14">=</operator> <literal type="number" pos:start="123:16" pos:end="123:18">100</literal></expr>;</expr_stmt> <comment type="line" pos:start="123:21" pos:end="123:39">//invalid stream id</comment>
        </block_content>}</block></else></if_stmt>
<comment type="line" pos:start="125:1" pos:end="125:134">//av_log(NULL, AV_LOG_DEBUG, "%X %X %X %X %X %X %X %X %"PRId64" %d %d\n", d[0], d[1], d[2], d[3], d[4], d[5], d[6], d[7], i, size, n);</comment>
        <if_stmt pos:start="126:9" pos:end="127:21"><if pos:start="126:9" pos:end="127:21">if<condition pos:start="126:11" pos:end="126:43">(<expr pos:start="126:12" pos:end="126:42"><name pos:start="126:12" pos:end="126:12">i</name> <operator pos:start="126:14" pos:end="126:14">+</operator> <name pos:start="126:16" pos:end="126:19">size</name> <operator pos:start="126:21" pos:end="126:21">&gt;</operator> <name pos:start="126:23" pos:end="126:32"><name pos:start="126:23" pos:end="126:25">avi</name><operator pos:start="126:26" pos:end="126:27">-&gt;</operator><name pos:start="126:28" pos:end="126:32">fsize</name></name> <operator pos:start="126:34" pos:end="126:35">||</operator> <name pos:start="126:37" pos:end="126:40"><name pos:start="126:37" pos:end="126:37">d</name><index pos:start="126:38" pos:end="126:40">[<expr pos:start="126:39" pos:end="126:39"><literal type="number" pos:start="126:39" pos:end="126:39">0</literal></expr>]</index></name><operator pos:start="126:41" pos:end="126:41">&lt;</operator><literal type="number" pos:start="126:42" pos:end="126:42">0</literal></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:21"><block_content pos:start="127:13" pos:end="127:21">
            <continue pos:start="127:13" pos:end="127:21">continue;</continue></block_content></block></if></if_stmt>
        <comment type="line" pos:start="128:9" pos:end="128:20">//parse ix##</comment>
        <if_stmt pos:start="129:9" pos:end="136:9"><if pos:start="129:9" pos:end="136:9">if<condition pos:start="129:11" pos:end="132:72">(  <expr pos:start="129:14" pos:end="132:71"><operator pos:start="129:14" pos:end="129:14">(</operator><name pos:start="129:15" pos:end="129:18"><name pos:start="129:15" pos:end="129:15">d</name><index pos:start="129:16" pos:end="129:18">[<expr pos:start="129:17" pos:end="129:17"><literal type="number" pos:start="129:17" pos:end="129:17">0</literal></expr>]</index></name> <operator pos:start="129:20" pos:end="129:21">==</operator> <literal type="char" pos:start="129:23" pos:end="129:25">'i'</literal> <operator pos:start="129:27" pos:end="129:28">&amp;&amp;</operator> <name pos:start="129:30" pos:end="129:33"><name pos:start="129:30" pos:end="129:30">d</name><index pos:start="129:31" pos:end="129:33">[<expr pos:start="129:32" pos:end="129:32"><literal type="number" pos:start="129:32" pos:end="129:32">1</literal></expr>]</index></name> <operator pos:start="129:35" pos:end="129:36">==</operator> <literal type="char" pos:start="129:38" pos:end="129:40">'x'</literal> <operator pos:start="129:42" pos:end="129:43">&amp;&amp;</operator> <name pos:start="129:45" pos:end="129:45">n</name> <operator pos:start="129:47" pos:end="129:47">&lt;</operator> <name pos:start="129:49" pos:end="129:61"><name pos:start="129:49" pos:end="129:49">s</name><operator pos:start="129:50" pos:end="129:51">-&gt;</operator><name pos:start="129:52" pos:end="129:61">nb_streams</name></name><operator pos:start="129:62" pos:end="129:62">)</operator>
        <comment type="line" pos:start="130:9" pos:end="130:20">//parse JUNK</comment>
           <operator pos:start="131:12" pos:end="131:13">||</operator><operator pos:start="131:14" pos:end="131:14">(</operator><name pos:start="131:15" pos:end="131:18"><name pos:start="131:15" pos:end="131:15">d</name><index pos:start="131:16" pos:end="131:18">[<expr pos:start="131:17" pos:end="131:17"><literal type="number" pos:start="131:17" pos:end="131:17">0</literal></expr>]</index></name> <operator pos:start="131:20" pos:end="131:21">==</operator> <literal type="char" pos:start="131:23" pos:end="131:25">'J'</literal> <operator pos:start="131:27" pos:end="131:28">&amp;&amp;</operator> <name pos:start="131:30" pos:end="131:33"><name pos:start="131:30" pos:end="131:30">d</name><index pos:start="131:31" pos:end="131:33">[<expr pos:start="131:32" pos:end="131:32"><literal type="number" pos:start="131:32" pos:end="131:32">1</literal></expr>]</index></name> <operator pos:start="131:35" pos:end="131:36">==</operator> <literal type="char" pos:start="131:38" pos:end="131:40">'U'</literal> <operator pos:start="131:42" pos:end="131:43">&amp;&amp;</operator> <name pos:start="131:45" pos:end="131:48"><name pos:start="131:45" pos:end="131:45">d</name><index pos:start="131:46" pos:end="131:48">[<expr pos:start="131:47" pos:end="131:47"><literal type="number" pos:start="131:47" pos:end="131:47">2</literal></expr>]</index></name> <operator pos:start="131:50" pos:end="131:51">==</operator> <literal type="char" pos:start="131:53" pos:end="131:55">'N'</literal> <operator pos:start="131:57" pos:end="131:58">&amp;&amp;</operator> <name pos:start="131:60" pos:end="131:63"><name pos:start="131:60" pos:end="131:60">d</name><index pos:start="131:61" pos:end="131:63">[<expr pos:start="131:62" pos:end="131:62"><literal type="number" pos:start="131:62" pos:end="131:62">3</literal></expr>]</index></name> <operator pos:start="131:65" pos:end="131:66">==</operator> <literal type="char" pos:start="131:68" pos:end="131:70">'K'</literal><operator pos:start="131:71" pos:end="131:71">)</operator>
           <operator pos:start="132:12" pos:end="132:13">||</operator><operator pos:start="132:14" pos:end="132:14">(</operator><name pos:start="132:15" pos:end="132:18"><name pos:start="132:15" pos:end="132:15">d</name><index pos:start="132:16" pos:end="132:18">[<expr pos:start="132:17" pos:end="132:17"><literal type="number" pos:start="132:17" pos:end="132:17">0</literal></expr>]</index></name> <operator pos:start="132:20" pos:end="132:21">==</operator> <literal type="char" pos:start="132:23" pos:end="132:25">'i'</literal> <operator pos:start="132:27" pos:end="132:28">&amp;&amp;</operator> <name pos:start="132:30" pos:end="132:33"><name pos:start="132:30" pos:end="132:30">d</name><index pos:start="132:31" pos:end="132:33">[<expr pos:start="132:32" pos:end="132:32"><literal type="number" pos:start="132:32" pos:end="132:32">1</literal></expr>]</index></name> <operator pos:start="132:35" pos:end="132:36">==</operator> <literal type="char" pos:start="132:38" pos:end="132:40">'d'</literal> <operator pos:start="132:42" pos:end="132:43">&amp;&amp;</operator> <name pos:start="132:45" pos:end="132:48"><name pos:start="132:45" pos:end="132:45">d</name><index pos:start="132:46" pos:end="132:48">[<expr pos:start="132:47" pos:end="132:47"><literal type="number" pos:start="132:47" pos:end="132:47">2</literal></expr>]</index></name> <operator pos:start="132:50" pos:end="132:51">==</operator> <literal type="char" pos:start="132:53" pos:end="132:55">'x'</literal> <operator pos:start="132:57" pos:end="132:58">&amp;&amp;</operator> <name pos:start="132:60" pos:end="132:63"><name pos:start="132:60" pos:end="132:60">d</name><index pos:start="132:61" pos:end="132:63">[<expr pos:start="132:62" pos:end="132:62"><literal type="number" pos:start="132:62" pos:end="132:62">3</literal></expr>]</index></name> <operator pos:start="132:65" pos:end="132:66">==</operator> <literal type="char" pos:start="132:68" pos:end="132:70">'1'</literal><operator pos:start="132:71" pos:end="132:71">)</operator></expr>)</condition><block pos:start="132:73" pos:end="136:9">{<block_content pos:start="133:13" pos:end="135:24">
            <expr_stmt pos:start="133:13" pos:end="133:32"><expr pos:start="133:13" pos:end="133:31"><call pos:start="133:13" pos:end="133:31"><name pos:start="133:13" pos:end="133:21">url_fskip</name><argument_list pos:start="133:22" pos:end="133:31">(<argument pos:start="133:23" pos:end="133:24"><expr pos:start="133:23" pos:end="133:24"><name pos:start="133:23" pos:end="133:24">pb</name></expr></argument>, <argument pos:start="133:27" pos:end="133:30"><expr pos:start="133:27" pos:end="133:30"><name pos:start="133:27" pos:end="133:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:start="134:1" pos:end="134:39">//av_log(NULL, AV_LOG_DEBUG, "SKIP\n");</comment>
            <goto pos:start="135:13" pos:end="135:24">goto <name pos:start="135:18" pos:end="135:23">resync</name>;</goto>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="137:9" pos:end="142:9"><if pos:start="137:9" pos:end="140:9">if<condition pos:start="137:11" pos:end="138:42">(    <expr pos:start="137:16" pos:end="138:41"><name pos:start="137:16" pos:end="137:19"><name pos:start="137:16" pos:end="137:16">d</name><index pos:start="137:17" pos:end="137:19">[<expr pos:start="137:18" pos:end="137:18"><literal type="number" pos:start="137:18" pos:end="137:18">0</literal></expr>]</index></name> <operator pos:start="137:21" pos:end="137:22">&gt;=</operator> <literal type="char" pos:start="137:24" pos:end="137:26">'0'</literal> <operator pos:start="137:28" pos:end="137:29">&amp;&amp;</operator> <name pos:start="137:31" pos:end="137:34"><name pos:start="137:31" pos:end="137:31">d</name><index pos:start="137:32" pos:end="137:34">[<expr pos:start="137:33" pos:end="137:33"><literal type="number" pos:start="137:33" pos:end="137:33">0</literal></expr>]</index></name> <operator pos:start="137:36" pos:end="137:37">&lt;=</operator> <literal type="char" pos:start="137:39" pos:end="137:41">'9'</literal>
            <operator pos:start="138:13" pos:end="138:14">&amp;&amp;</operator> <name pos:start="138:16" pos:end="138:19"><name pos:start="138:16" pos:end="138:16">d</name><index pos:start="138:17" pos:end="138:19">[<expr pos:start="138:18" pos:end="138:18"><literal type="number" pos:start="138:18" pos:end="138:18">1</literal></expr>]</index></name> <operator pos:start="138:21" pos:end="138:22">&gt;=</operator> <literal type="char" pos:start="138:24" pos:end="138:26">'0'</literal> <operator pos:start="138:28" pos:end="138:29">&amp;&amp;</operator> <name pos:start="138:31" pos:end="138:34"><name pos:start="138:31" pos:end="138:31">d</name><index pos:start="138:32" pos:end="138:34">[<expr pos:start="138:33" pos:end="138:33"><literal type="number" pos:start="138:33" pos:end="138:33">1</literal></expr>]</index></name> <operator pos:start="138:36" pos:end="138:37">&lt;=</operator> <literal type="char" pos:start="138:39" pos:end="138:41">'9'</literal></expr>)</condition><block pos:start="138:43" pos:end="140:9">{<block_content pos:start="139:13" pos:end="139:48">
            <expr_stmt pos:start="139:13" pos:end="139:48"><expr pos:start="139:13" pos:end="139:47"><name pos:start="139:13" pos:end="139:13">n</name><operator pos:start="139:14" pos:end="139:14">=</operator> <operator pos:start="139:16" pos:end="139:16">(</operator><name pos:start="139:17" pos:end="139:20"><name pos:start="139:17" pos:end="139:17">d</name><index pos:start="139:18" pos:end="139:20">[<expr pos:start="139:19" pos:end="139:19"><literal type="number" pos:start="139:19" pos:end="139:19">0</literal></expr>]</index></name> <operator pos:start="139:22" pos:end="139:22">-</operator> <literal type="char" pos:start="139:24" pos:end="139:26">'0'</literal><operator pos:start="139:27" pos:end="139:27">)</operator> <operator pos:start="139:29" pos:end="139:29">*</operator> <literal type="number" pos:start="139:31" pos:end="139:34">10</literal> <operator pos:start="139:34" pos:end="139:34">+</operator> <operator pos:start="139:36" pos:end="139:36">(</operator><name pos:start="139:37" pos:end="139:40"><name pos:start="139:37" pos:end="139:37">d</name><index pos:start="139:38" pos:end="139:40">[<expr pos:start="139:39" pos:end="139:39"><literal type="number" pos:start="139:39" pos:end="139:39">1</literal></expr>]</index></name> <operator pos:start="139:42" pos:end="139:42">-</operator> <literal type="char" pos:start="139:44" pos:end="139:46">'0'</literal><operator pos:start="139:47" pos:end="139:47">)</operator></expr>;</expr_stmt>
        </block_content>}</block></if><else pos:start="140:10" pos:end="142:9">else<block pos:start="140:14" pos:end="142:9">{<block_content pos:start="141:13" pos:end="141:19">
            <expr_stmt pos:start="141:13" pos:end="141:19"><expr pos:start="141:13" pos:end="141:18"><name pos:start="141:13" pos:end="141:13">n</name><operator pos:start="141:14" pos:end="141:14">=</operator> <literal type="number" pos:start="141:16" pos:end="141:18">100</literal></expr>;</expr_stmt> <comment type="line" pos:start="141:21" pos:end="141:39">//invalid stream id</comment>
        </block_content>}</block></else></if_stmt>
        <comment type="line" pos:start="143:9" pos:end="143:25">//parse ##dc/##wb</comment>
        <if_stmt pos:start="144:9" pos:end="204:9"><if pos:start="144:9" pos:end="204:9">if<condition pos:start="144:11" pos:end="144:29">(<expr pos:start="144:12" pos:end="144:28"><name pos:start="144:12" pos:end="144:12">n</name> <operator pos:start="144:14" pos:end="144:14">&lt;</operator> <name pos:start="144:16" pos:end="144:28"><name pos:start="144:16" pos:end="144:16">s</name><operator pos:start="144:17" pos:end="144:18">-&gt;</operator><name pos:start="144:19" pos:end="144:28">nb_streams</name></name></expr>)</condition><block pos:start="144:30" pos:end="204:9">{<block_content pos:start="145:13" pos:end="203:13">
            <decl_stmt pos:start="145:13" pos:end="145:25"><decl pos:start="145:13" pos:end="145:24"><type pos:start="145:13" pos:end="145:22"><name pos:start="145:13" pos:end="145:20">AVStream</name> <modifier pos:start="145:22" pos:end="145:22">*</modifier></type><name pos:start="145:23" pos:end="145:24">st</name></decl>;</decl_stmt>
            <decl_stmt pos:start="146:13" pos:end="146:27"><decl pos:start="146:13" pos:end="146:26"><type pos:start="146:13" pos:end="146:23"><name pos:start="146:13" pos:end="146:21">AVIStream</name> <modifier pos:start="146:23" pos:end="146:23">*</modifier></type><name pos:start="146:24" pos:end="146:26">ast</name></decl>;</decl_stmt>
            <expr_stmt pos:start="147:13" pos:end="147:31"><expr pos:start="147:13" pos:end="147:30"><name pos:start="147:13" pos:end="147:14">st</name> <operator pos:start="147:16" pos:end="147:16">=</operator> <name pos:start="147:18" pos:end="147:30"><name pos:start="147:18" pos:end="147:18">s</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:27">streams</name><index pos:start="147:28" pos:end="147:30">[<expr pos:start="147:29" pos:end="147:29"><name pos:start="147:29" pos:end="147:29">n</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="148:13" pos:end="148:32"><expr pos:start="148:13" pos:end="148:31"><name pos:start="148:13" pos:end="148:15">ast</name> <operator pos:start="148:17" pos:end="148:17">=</operator> <name pos:start="148:19" pos:end="148:31"><name pos:start="148:19" pos:end="148:20">st</name><operator pos:start="148:21" pos:end="148:22">-&gt;</operator><name pos:start="148:23" pos:end="148:31">priv_data</name></name></expr>;</expr_stmt>
            <if_stmt pos:start="149:13" pos:end="165:13"><if pos:start="149:13" pos:end="165:13">if<condition pos:start="149:15" pos:end="149:32">(<expr pos:start="149:16" pos:end="149:31"><name pos:start="149:16" pos:end="149:28"><name pos:start="149:16" pos:end="149:16">s</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:28">nb_streams</name></name><operator pos:start="149:29" pos:end="149:30">&gt;=</operator><literal type="number" pos:start="149:31" pos:end="149:31">2</literal></expr>)</condition><block pos:start="149:33" pos:end="165:13">{<block_content pos:start="150:17" pos:end="164:17">
                <decl_stmt pos:start="150:17" pos:end="150:47"><decl pos:start="150:17" pos:end="150:46"><type pos:start="150:17" pos:end="150:26"><name pos:start="150:17" pos:end="150:24">AVStream</name> <modifier pos:start="150:26" pos:end="150:26">*</modifier></type><name pos:start="150:27" pos:end="150:29">st1</name>  <init pos:start="150:32" pos:end="150:46">= <expr pos:start="150:34" pos:end="150:46"><name pos:start="150:34" pos:end="150:46"><name pos:start="150:34" pos:end="150:34">s</name><operator pos:start="150:35" pos:end="150:36">-&gt;</operator><name pos:start="150:37" pos:end="150:43">streams</name><index pos:start="150:44" pos:end="150:46">[<expr pos:start="150:45" pos:end="150:45"><literal type="number" pos:start="150:45" pos:end="150:45">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="151:17" pos:end="151:48"><decl pos:start="151:17" pos:end="151:47"><type pos:start="151:17" pos:end="151:27"><name pos:start="151:17" pos:end="151:25">AVIStream</name> <modifier pos:start="151:27" pos:end="151:27">*</modifier></type><name pos:start="151:28" pos:end="151:31">ast1</name><init pos:start="151:32" pos:end="151:47">= <expr pos:start="151:34" pos:end="151:47"><name pos:start="151:34" pos:end="151:47"><name pos:start="151:34" pos:end="151:36">st1</name><operator pos:start="151:37" pos:end="151:38">-&gt;</operator><name pos:start="151:39" pos:end="151:47">priv_data</name></name></expr></init></decl>;</decl_stmt>
                <comment type="line" pos:start="152:17" pos:end="152:61">//workaround for broken small-file-bug402.avi</comment>
                <if_stmt pos:start="153:17" pos:end="164:17"><if pos:start="153:17" pos:end="164:17">if<condition pos:start="153:19" pos:end="159:19">(   <expr pos:start="153:23" pos:end="158:76"><name pos:start="153:23" pos:end="153:26"><name pos:start="153:23" pos:end="153:23">d</name><index pos:start="153:24" pos:end="153:26">[<expr pos:start="153:25" pos:end="153:25"><literal type="number" pos:start="153:25" pos:end="153:25">2</literal></expr>]</index></name> <operator pos:start="153:28" pos:end="153:29">==</operator> <literal type="char" pos:start="153:31" pos:end="153:33">'w'</literal> <operator pos:start="153:35" pos:end="153:36">&amp;&amp;</operator> <name pos:start="153:38" pos:end="153:41"><name pos:start="153:38" pos:end="153:38">d</name><index pos:start="153:39" pos:end="153:41">[<expr pos:start="153:40" pos:end="153:40"><literal type="number" pos:start="153:40" pos:end="153:40">3</literal></expr>]</index></name> <operator pos:start="153:43" pos:end="153:44">==</operator> <literal type="char" pos:start="153:46" pos:end="153:48">'b'</literal>
                   <operator pos:start="154:20" pos:end="154:21">&amp;&amp;</operator> <name pos:start="154:23" pos:end="154:23">n</name><operator pos:start="154:24" pos:end="154:25">==</operator><literal type="number" pos:start="154:26" pos:end="154:26">0</literal>
                   <operator pos:start="155:20" pos:end="155:21">&amp;&amp;</operator> <name pos:start="155:23" pos:end="155:44"><name pos:start="155:23" pos:end="155:24">st</name> <operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:32">codec</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:44">codec_type</name></name> <operator pos:start="155:46" pos:end="155:47">==</operator> <name pos:start="155:49" pos:end="155:64">CODEC_TYPE_VIDEO</name>
                   <operator pos:start="156:20" pos:end="156:21">&amp;&amp;</operator> <name pos:start="156:23" pos:end="156:44"><name pos:start="156:23" pos:end="156:25">st1</name><operator pos:start="156:26" pos:end="156:27">-&gt;</operator><name pos:start="156:28" pos:end="156:32">codec</name><operator pos:start="156:33" pos:end="156:34">-&gt;</operator><name pos:start="156:35" pos:end="156:44">codec_type</name></name> <operator pos:start="156:46" pos:end="156:47">==</operator> <name pos:start="156:49" pos:end="156:64">CODEC_TYPE_AUDIO</name>
                   <operator pos:start="157:20" pos:end="157:21">&amp;&amp;</operator> <name pos:start="157:23" pos:end="157:33"><name pos:start="157:23" pos:end="157:25">ast</name><operator pos:start="157:26" pos:end="157:27">-&gt;</operator><name pos:start="157:28" pos:end="157:33">prefix</name></name> <operator pos:start="157:35" pos:end="157:36">==</operator> <literal type="char" pos:start="157:38" pos:end="157:40">'d'</literal><operator pos:start="157:41" pos:end="157:41">*</operator><literal type="number" pos:start="157:42" pos:end="157:45">256</literal><operator pos:start="157:45" pos:end="157:45">+</operator><literal type="char" pos:start="157:46" pos:end="157:48">'c'</literal>
                   <operator pos:start="158:20" pos:end="158:21">&amp;&amp;</operator> <operator pos:start="158:23" pos:end="158:23">(</operator><name pos:start="158:24" pos:end="158:27"><name pos:start="158:24" pos:end="158:24">d</name><index pos:start="158:25" pos:end="158:27">[<expr pos:start="158:26" pos:end="158:26"><literal type="number" pos:start="158:26" pos:end="158:26">2</literal></expr>]</index></name><operator pos:start="158:28" pos:end="158:28">*</operator><literal type="number" pos:start="158:29" pos:end="158:32">256</literal><operator pos:start="158:32" pos:end="158:32">+</operator><name pos:start="158:33" pos:end="158:36"><name pos:start="158:33" pos:end="158:33">d</name><index pos:start="158:34" pos:end="158:36">[<expr pos:start="158:35" pos:end="158:35"><literal type="number" pos:start="158:35" pos:end="158:35">3</literal></expr>]</index></name> <operator pos:start="158:38" pos:end="158:39">==</operator> <name pos:start="158:41" pos:end="158:52"><name pos:start="158:41" pos:end="158:44">ast1</name><operator pos:start="158:45" pos:end="158:46">-&gt;</operator><name pos:start="158:47" pos:end="158:52">prefix</name></name> <operator pos:start="158:54" pos:end="158:55">||</operator> <operator pos:start="158:57" pos:end="158:57">!</operator><name pos:start="158:58" pos:end="158:75"><name pos:start="158:58" pos:end="158:61">ast1</name><operator pos:start="158:62" pos:end="158:63">-&gt;</operator><name pos:start="158:64" pos:end="158:75">prefix_count</name></name><operator pos:start="158:76" pos:end="158:76">)</operator></expr>
                  )</condition><block pos:start="159:20" pos:end="164:17">{<block_content pos:start="160:21" pos:end="163:101">
                    <expr_stmt pos:start="160:21" pos:end="160:24"><expr pos:start="160:21" pos:end="160:23"><name pos:start="160:21" pos:end="160:21">n</name><operator pos:start="160:22" pos:end="160:22">=</operator><literal type="number" pos:start="160:23" pos:end="160:23">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="161:21" pos:end="161:29"><expr pos:start="161:21" pos:end="161:28"><name pos:start="161:21" pos:end="161:22">st</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <name pos:start="161:26" pos:end="161:28">st1</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="162:21" pos:end="162:31"><expr pos:start="162:21" pos:end="162:30"><name pos:start="162:21" pos:end="162:23">ast</name> <operator pos:start="162:25" pos:end="162:25">=</operator> <name pos:start="162:27" pos:end="162:30">ast1</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="163:21" pos:end="163:101"><expr pos:start="163:21" pos:end="163:100"><call pos:start="163:21" pos:end="163:100"><name pos:start="163:21" pos:end="163:26">av_log</name><argument_list pos:start="163:27" pos:end="163:100">(<argument pos:start="163:28" pos:end="163:28"><expr pos:start="163:28" pos:end="163:28"><name pos:start="163:28" pos:end="163:28">s</name></expr></argument>, <argument pos:start="163:31" pos:end="163:44"><expr pos:start="163:31" pos:end="163:44"><name pos:start="163:31" pos:end="163:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="163:47" pos:end="163:99"><expr pos:start="163:47" pos:end="163:99"><literal type="string" pos:start="163:47" pos:end="163:99">"Invalid stream+prefix combination, assuming audio\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="166:13" pos:end="173:13"><if pos:start="166:13" pos:end="173:13">if<condition pos:start="166:15" pos:end="168:47">(   <expr pos:start="166:19" pos:end="168:46"><operator pos:start="166:19" pos:end="166:19">(</operator><name pos:start="166:20" pos:end="166:30"><name pos:start="166:20" pos:end="166:21">st</name><operator pos:start="166:22" pos:end="166:23">-&gt;</operator><name pos:start="166:24" pos:end="166:30">discard</name></name> <operator pos:start="166:32" pos:end="166:33">&gt;=</operator> <name pos:start="166:35" pos:end="166:51">AVDISCARD_DEFAULT</name> <operator pos:start="166:53" pos:end="166:54">&amp;&amp;</operator> <name pos:start="166:56" pos:end="166:59">size</name><operator pos:start="166:60" pos:end="166:61">==</operator><literal type="number" pos:start="166:62" pos:end="166:62">0</literal><operator pos:start="166:63" pos:end="166:63">)</operator>
               <comment type="block" pos:start="167:16" pos:end="167:87">/*|| (st-&gt;discard &gt;= AVDISCARD_NONKEY &amp;&amp; !(pkt-&gt;flags &amp; PKT_FLAG_KEY))*/</comment> <comment type="line" pos:start="167:89" pos:end="167:121">//FIXME needs a little reordering</comment>
               <operator pos:start="168:16" pos:end="168:17">||</operator> <name pos:start="168:19" pos:end="168:29"><name pos:start="168:19" pos:end="168:20">st</name><operator pos:start="168:21" pos:end="168:22">-&gt;</operator><name pos:start="168:23" pos:end="168:29">discard</name></name> <operator pos:start="168:31" pos:end="168:32">&gt;=</operator> <name pos:start="168:34" pos:end="168:46">AVDISCARD_ALL</name></expr>)</condition><block pos:start="168:48" pos:end="173:13">{<block_content pos:start="169:17" pos:end="172:28">
                <if_stmt pos:start="169:17" pos:end="170:57"><if pos:start="169:17" pos:end="169:68">if<condition pos:start="169:19" pos:end="169:36">(<expr pos:start="169:20" pos:end="169:35"><name pos:start="169:20" pos:end="169:35"><name pos:start="169:20" pos:end="169:22">ast</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:35">sample_size</name></name></expr>)</condition><block type="pseudo" pos:start="169:38" pos:end="169:68"><block_content pos:start="169:38" pos:end="169:68"> <expr_stmt pos:start="169:38" pos:end="169:68"><expr pos:start="169:38" pos:end="169:67"><name pos:start="169:38" pos:end="169:54"><name pos:start="169:38" pos:end="169:40">ast</name><operator pos:start="169:41" pos:end="169:42">-&gt;</operator><name pos:start="169:43" pos:end="169:54">frame_offset</name></name> <operator pos:start="169:56" pos:end="169:57">+=</operator> <name pos:start="169:59" pos:end="169:67"><name pos:start="169:59" pos:end="169:61">pkt</name><operator pos:start="169:62" pos:end="169:63">-&gt;</operator><name pos:start="169:64" pos:end="169:67">size</name></name></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="170:17" pos:end="170:57">else<block type="pseudo" pos:start="170:38" pos:end="170:57"><block_content pos:start="170:38" pos:end="170:57">                 <expr_stmt pos:start="170:38" pos:end="170:57"><expr pos:start="170:38" pos:end="170:56"><name pos:start="170:38" pos:end="170:54"><name pos:start="170:38" pos:end="170:40">ast</name><operator pos:start="170:41" pos:end="170:42">-&gt;</operator><name pos:start="170:43" pos:end="170:54">frame_offset</name></name><operator pos:start="170:55" pos:end="170:56">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
                <expr_stmt pos:start="171:17" pos:end="171:36"><expr pos:start="171:17" pos:end="171:35"><call pos:start="171:17" pos:end="171:35"><name pos:start="171:17" pos:end="171:25">url_fskip</name><argument_list pos:start="171:26" pos:end="171:35">(<argument pos:start="171:27" pos:end="171:28"><expr pos:start="171:27" pos:end="171:28"><name pos:start="171:27" pos:end="171:28">pb</name></expr></argument>, <argument pos:start="171:31" pos:end="171:34"><expr pos:start="171:31" pos:end="171:34"><name pos:start="171:31" pos:end="171:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <goto pos:start="172:17" pos:end="172:28">goto <name pos:start="172:22" pos:end="172:27">resync</name>;</goto>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="174:13" pos:end="203:13"><if pos:start="174:13" pos:end="182:13">if <condition pos:start="174:16" pos:end="174:60">(<expr pos:start="174:17" pos:end="174:59"><name pos:start="174:17" pos:end="174:20"><name pos:start="174:17" pos:end="174:17">d</name><index pos:start="174:18" pos:end="174:20">[<expr pos:start="174:19" pos:end="174:19"><literal type="number" pos:start="174:19" pos:end="174:19">2</literal></expr>]</index></name> <operator pos:start="174:22" pos:end="174:23">==</operator> <literal type="char" pos:start="174:25" pos:end="174:27">'p'</literal> <operator pos:start="174:29" pos:end="174:30">&amp;&amp;</operator> <name pos:start="174:32" pos:end="174:35"><name pos:start="174:32" pos:end="174:32">d</name><index pos:start="174:33" pos:end="174:35">[<expr pos:start="174:34" pos:end="174:34"><literal type="number" pos:start="174:34" pos:end="174:34">3</literal></expr>]</index></name> <operator pos:start="174:37" pos:end="174:38">==</operator> <literal type="char" pos:start="174:40" pos:end="174:42">'c'</literal> <operator pos:start="174:44" pos:end="174:45">&amp;&amp;</operator> <name pos:start="174:47" pos:end="174:50">size</name><operator pos:start="174:51" pos:end="174:52">&lt;=</operator><literal type="number" pos:start="174:53" pos:end="174:53">4</literal><operator pos:start="174:54" pos:end="174:54">*</operator><literal type="number" pos:start="174:55" pos:end="174:58">256</literal><operator pos:start="174:58" pos:end="174:58">+</operator><literal type="number" pos:start="174:59" pos:end="174:59">4</literal></expr>)</condition> <block pos:start="174:62" pos:end="182:13">{<block_content pos:start="175:17" pos:end="181:28">
                <decl_stmt pos:start="175:17" pos:end="175:37"><decl pos:start="175:17" pos:end="175:36"><type pos:start="175:17" pos:end="175:19"><name pos:start="175:17" pos:end="175:19">int</name></type> <name pos:start="175:21" pos:end="175:21">k</name> <init pos:start="175:23" pos:end="175:36">= <expr pos:start="175:25" pos:end="175:36"><call pos:start="175:25" pos:end="175:36"><name pos:start="175:25" pos:end="175:32">get_byte</name><argument_list pos:start="175:33" pos:end="175:36">(<argument pos:start="175:34" pos:end="175:35"><expr pos:start="175:34" pos:end="175:35"><name pos:start="175:34" pos:end="175:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="176:17" pos:end="176:57"><decl pos:start="176:17" pos:end="176:56"><type pos:start="176:17" pos:end="176:19"><name pos:start="176:17" pos:end="176:19">int</name></type> <name pos:start="176:21" pos:end="176:24">last</name> <init pos:start="176:26" pos:end="176:56">= <expr pos:start="176:28" pos:end="176:56"><operator pos:start="176:28" pos:end="176:28">(</operator><name pos:start="176:29" pos:end="176:29">k</name> <operator pos:start="176:31" pos:end="176:31">+</operator> <call pos:start="176:33" pos:end="176:44"><name pos:start="176:33" pos:end="176:40">get_byte</name><argument_list pos:start="176:41" pos:end="176:44">(<argument pos:start="176:42" pos:end="176:43"><expr pos:start="176:42" pos:end="176:43"><name pos:start="176:42" pos:end="176:43">pb</name></expr></argument>)</argument_list></call> <operator pos:start="176:46" pos:end="176:46">-</operator> <literal type="number" pos:start="176:48" pos:end="176:48">1</literal><operator pos:start="176:49" pos:end="176:49">)</operator> <operator pos:start="176:51" pos:end="176:51">&amp;</operator> <literal type="number" pos:start="176:53" pos:end="176:56">0xFF</literal></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="177:17" pos:end="177:29"><expr pos:start="177:17" pos:end="177:28"><call pos:start="177:17" pos:end="177:28"><name pos:start="177:17" pos:end="177:24">get_le16</name><argument_list pos:start="177:25" pos:end="177:28">(<argument pos:start="177:26" pos:end="177:27"><expr pos:start="177:26" pos:end="177:27"><name pos:start="177:26" pos:end="177:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="177:31" pos:end="177:37">//flags</comment>
                <for pos:start="178:17" pos:end="179:50">for <control pos:start="178:21" pos:end="178:38">(<init pos:start="178:22" pos:end="178:22">;</init> <condition pos:start="178:24" pos:end="178:33"><expr pos:start="178:24" pos:end="178:32"><name pos:start="178:24" pos:end="178:24">k</name> <operator pos:start="178:26" pos:end="178:27">&lt;=</operator> <name pos:start="178:29" pos:end="178:32">last</name></expr>;</condition> <incr pos:start="178:35" pos:end="178:37"><expr pos:start="178:35" pos:end="178:37"><name pos:start="178:35" pos:end="178:35">k</name><operator pos:start="178:36" pos:end="178:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="179:21" pos:end="179:50"><block_content pos:start="179:21" pos:end="179:50">
                    <expr_stmt pos:start="179:21" pos:end="179:50"><expr pos:start="179:21" pos:end="179:49"><name pos:start="179:21" pos:end="179:31"><name pos:start="179:21" pos:end="179:23">ast</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:28">pal</name><index pos:start="179:29" pos:end="179:31">[<expr pos:start="179:30" pos:end="179:30"><name pos:start="179:30" pos:end="179:30">k</name></expr>]</index></name> <operator pos:start="179:33" pos:end="179:33">=</operator> <call pos:start="179:35" pos:end="179:46"><name pos:start="179:35" pos:end="179:42">get_be32</name><argument_list pos:start="179:43" pos:end="179:46">(<argument pos:start="179:44" pos:end="179:45"><expr pos:start="179:44" pos:end="179:45"><name pos:start="179:44" pos:end="179:45">pb</name></expr></argument>)</argument_list></call><operator pos:start="179:47" pos:end="179:48">&gt;&gt;</operator><literal type="number" pos:start="179:49" pos:end="179:49">8</literal></expr>;</expr_stmt></block_content></block></for><comment type="line" pos:start="179:51" pos:end="179:78">// b + (g &lt;&lt; 8) + (r &lt;&lt; 16);</comment>
                <expr_stmt pos:start="180:17" pos:end="180:32"><expr pos:start="180:17" pos:end="180:31"><name pos:start="180:17" pos:end="180:28"><name pos:start="180:17" pos:end="180:19">ast</name><operator pos:start="180:20" pos:end="180:21">-&gt;</operator><name pos:start="180:22" pos:end="180:28">has_pal</name></name><operator pos:start="180:29" pos:end="180:29">=</operator> <literal type="number" pos:start="180:31" pos:end="180:31">1</literal></expr>;</expr_stmt>
                <goto pos:start="181:17" pos:end="181:28">goto <name pos:start="181:22" pos:end="181:27">resync</name>;</goto>
            </block_content>}</block></if> <if type="elseif" pos:start="182:15" pos:end="203:13">else if<condition pos:start="182:22" pos:end="185:56">(   <expr pos:start="182:26" pos:end="183:53"><operator pos:start="182:26" pos:end="182:26">(</operator><operator pos:start="182:27" pos:end="182:27">(</operator><name pos:start="182:28" pos:end="182:44"><name pos:start="182:28" pos:end="182:30">ast</name><operator pos:start="182:31" pos:end="182:32">-&gt;</operator><name pos:start="182:33" pos:end="182:44">prefix_count</name></name><operator pos:start="182:45" pos:end="182:45">&lt;</operator><literal type="number" pos:start="182:46" pos:end="182:46">5</literal> <operator pos:start="182:48" pos:end="182:49">||</operator> <name pos:start="182:51" pos:end="182:54">sync</name><operator pos:start="182:55" pos:end="182:55">+</operator><literal type="number" pos:start="182:56" pos:end="182:56">9</literal> <operator pos:start="182:58" pos:end="182:58">&gt;</operator> <name pos:start="182:60" pos:end="182:60">i</name><operator pos:start="182:61" pos:end="182:61">)</operator> <operator pos:start="182:63" pos:end="182:64">&amp;&amp;</operator> <name pos:start="182:66" pos:end="182:69"><name pos:start="182:66" pos:end="182:66">d</name><index pos:start="182:67" pos:end="182:69">[<expr pos:start="182:68" pos:end="182:68"><literal type="number" pos:start="182:68" pos:end="182:68">2</literal></expr>]</index></name><operator pos:start="182:70" pos:end="182:70">&lt;</operator><literal type="number" pos:start="182:71" pos:end="182:73">128</literal> <operator pos:start="182:75" pos:end="182:76">&amp;&amp;</operator> <name pos:start="182:78" pos:end="182:81"><name pos:start="182:78" pos:end="182:78">d</name><index pos:start="182:79" pos:end="182:81">[<expr pos:start="182:80" pos:end="182:80"><literal type="number" pos:start="182:80" pos:end="182:80">3</literal></expr>]</index></name><operator pos:start="182:82" pos:end="182:82">&lt;</operator><literal type="number" pos:start="182:83" pos:end="182:85">128</literal><operator pos:start="182:86" pos:end="182:86">)</operator> <operator pos:start="182:88" pos:end="182:89">||</operator>
                         <name pos:start="183:26" pos:end="183:29"><name pos:start="183:26" pos:end="183:26">d</name><index pos:start="183:27" pos:end="183:29">[<expr pos:start="183:28" pos:end="183:28"><literal type="number" pos:start="183:28" pos:end="183:28">2</literal></expr>]</index></name><operator pos:start="183:30" pos:end="183:30">*</operator><literal type="number" pos:start="183:31" pos:end="183:34">256</literal><operator pos:start="183:34" pos:end="183:34">+</operator><name pos:start="183:35" pos:end="183:38"><name pos:start="183:35" pos:end="183:35">d</name><index pos:start="183:36" pos:end="183:38">[<expr pos:start="183:37" pos:end="183:37"><literal type="number" pos:start="183:37" pos:end="183:37">3</literal></expr>]</index></name> <operator pos:start="183:40" pos:end="183:41">==</operator> <name pos:start="183:43" pos:end="183:53"><name pos:start="183:43" pos:end="183:45">ast</name><operator pos:start="183:46" pos:end="183:47">-&gt;</operator><name pos:start="183:48" pos:end="183:53">prefix</name></name></expr> <comment type="block" pos:start="183:55" pos:end="185:55">/*||
                         (d[2] == 'd' &amp;&amp; d[3] == 'c') ||
                         (d[2] == 'w' &amp;&amp; d[3] == 'b')*/</comment>)</condition> <block pos:start="185:58" pos:end="203:13">{<block_content pos:start="187:17" pos:end="202:28">
<comment type="line" pos:start="186:1" pos:end="186:37">//av_log(NULL, AV_LOG_DEBUG, "OK\n");</comment>
                <if_stmt pos:start="187:17" pos:end="192:17"><if pos:start="187:17" pos:end="188:40">if<condition pos:start="187:19" pos:end="187:48">(<expr pos:start="187:20" pos:end="187:47"><name pos:start="187:20" pos:end="187:23"><name pos:start="187:20" pos:end="187:20">d</name><index pos:start="187:21" pos:end="187:23">[<expr pos:start="187:22" pos:end="187:22"><literal type="number" pos:start="187:22" pos:end="187:22">2</literal></expr>]</index></name><operator pos:start="187:24" pos:end="187:24">*</operator><literal type="number" pos:start="187:25" pos:end="187:28">256</literal><operator pos:start="187:28" pos:end="187:28">+</operator><name pos:start="187:29" pos:end="187:32"><name pos:start="187:29" pos:end="187:29">d</name><index pos:start="187:30" pos:end="187:32">[<expr pos:start="187:31" pos:end="187:31"><literal type="number" pos:start="187:31" pos:end="187:31">3</literal></expr>]</index></name> <operator pos:start="187:34" pos:end="187:35">==</operator> <name pos:start="187:37" pos:end="187:47"><name pos:start="187:37" pos:end="187:39">ast</name><operator pos:start="187:40" pos:end="187:41">-&gt;</operator><name pos:start="187:42" pos:end="187:47">prefix</name></name></expr>)</condition><block type="pseudo" pos:start="188:21" pos:end="188:40"><block_content pos:start="188:21" pos:end="188:40">
                    <expr_stmt pos:start="188:21" pos:end="188:40"><expr pos:start="188:21" pos:end="188:39"><name pos:start="188:21" pos:end="188:37"><name pos:start="188:21" pos:end="188:23">ast</name><operator pos:start="188:24" pos:end="188:25">-&gt;</operator><name pos:start="188:26" pos:end="188:37">prefix_count</name></name><operator pos:start="188:38" pos:end="188:39">++</operator></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="189:17" pos:end="192:17">else<block pos:start="189:21" pos:end="192:17">{<block_content pos:start="190:21" pos:end="191:41">
                    <expr_stmt pos:start="190:21" pos:end="190:47"><expr pos:start="190:21" pos:end="190:46"><name pos:start="190:21" pos:end="190:31"><name pos:start="190:21" pos:end="190:23">ast</name><operator pos:start="190:24" pos:end="190:25">-&gt;</operator><name pos:start="190:26" pos:end="190:31">prefix</name></name><operator pos:start="190:32" pos:end="190:32">=</operator> <name pos:start="190:34" pos:end="190:37"><name pos:start="190:34" pos:end="190:34">d</name><index pos:start="190:35" pos:end="190:37">[<expr pos:start="190:36" pos:end="190:36"><literal type="number" pos:start="190:36" pos:end="190:36">2</literal></expr>]</index></name><operator pos:start="190:38" pos:end="190:38">*</operator><literal type="number" pos:start="190:39" pos:end="190:42">256</literal><operator pos:start="190:42" pos:end="190:42">+</operator><name pos:start="190:43" pos:end="190:46"><name pos:start="190:43" pos:end="190:43">d</name><index pos:start="190:44" pos:end="190:46">[<expr pos:start="190:45" pos:end="190:45"><literal type="number" pos:start="190:45" pos:end="190:45">3</literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="191:21" pos:end="191:41"><expr pos:start="191:21" pos:end="191:40"><name pos:start="191:21" pos:end="191:37"><name pos:start="191:21" pos:end="191:23">ast</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:37">prefix_count</name></name><operator pos:start="191:38" pos:end="191:38">=</operator> <literal type="number" pos:start="191:40" pos:end="191:40">0</literal></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
                <expr_stmt pos:start="193:17" pos:end="193:37"><expr pos:start="193:17" pos:end="193:36"><name pos:start="193:17" pos:end="193:33"><name pos:start="193:17" pos:end="193:19">avi</name><operator pos:start="193:20" pos:end="193:21">-&gt;</operator><name pos:start="193:22" pos:end="193:33">stream_index</name></name><operator pos:start="193:34" pos:end="193:34">=</operator> <name pos:start="193:36" pos:end="193:36">n</name></expr>;</expr_stmt>
                <expr_stmt pos:start="194:17" pos:end="194:43"><expr pos:start="194:17" pos:end="194:42"><name pos:start="194:17" pos:end="194:32"><name pos:start="194:17" pos:end="194:19">ast</name><operator pos:start="194:20" pos:end="194:21">-&gt;</operator><name pos:start="194:22" pos:end="194:32">packet_size</name></name><operator pos:start="194:33" pos:end="194:33">=</operator> <name pos:start="194:35" pos:end="194:38">size</name> <operator pos:start="194:40" pos:end="194:40">+</operator> <literal type="number" pos:start="194:42" pos:end="194:42">8</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="195:17" pos:end="195:37"><expr pos:start="195:17" pos:end="195:36"><name pos:start="195:17" pos:end="195:30"><name pos:start="195:17" pos:end="195:19">ast</name><operator pos:start="195:20" pos:end="195:21">-&gt;</operator><name pos:start="195:22" pos:end="195:30">remaining</name></name><operator pos:start="195:31" pos:end="195:31">=</operator> <name pos:start="195:33" pos:end="195:36">size</name></expr>;</expr_stmt>
                <block pos:start="196:17" pos:end="201:17">{<block_content pos:start="197:21" pos:end="200:21">
                    <decl_stmt pos:start="197:21" pos:end="197:52"><decl pos:start="197:21" pos:end="197:51"><type pos:start="197:21" pos:end="197:28"><name pos:start="197:21" pos:end="197:28">uint64_t</name></type> <name pos:start="197:30" pos:end="197:32">pos</name><init pos:start="197:33" pos:end="197:51">= <expr pos:start="197:35" pos:end="197:51"><call pos:start="197:35" pos:end="197:47"><name pos:start="197:35" pos:end="197:43">url_ftell</name><argument_list pos:start="197:44" pos:end="197:47">(<argument pos:start="197:45" pos:end="197:46"><expr pos:start="197:45" pos:end="197:46"><name pos:start="197:45" pos:end="197:46">pb</name></expr></argument>)</argument_list></call> <operator pos:start="197:49" pos:end="197:49">-</operator> <literal type="number" pos:start="197:51" pos:end="197:51">8</literal></expr></init></decl>;</decl_stmt>
                    <if_stmt pos:start="198:21" pos:end="200:21"><if pos:start="198:21" pos:end="200:21">if<condition pos:start="198:23" pos:end="198:124">(<expr pos:start="198:24" pos:end="198:123"><operator pos:start="198:24" pos:end="198:24">!</operator><name pos:start="198:25" pos:end="198:41"><name pos:start="198:25" pos:end="198:26">st</name><operator pos:start="198:27" pos:end="198:28">-&gt;</operator><name pos:start="198:29" pos:end="198:41">index_entries</name></name> <operator pos:start="198:43" pos:end="198:44">||</operator> <operator pos:start="198:46" pos:end="198:46">!</operator><name pos:start="198:47" pos:end="198:66"><name pos:start="198:47" pos:end="198:48">st</name><operator pos:start="198:49" pos:end="198:50">-&gt;</operator><name pos:start="198:51" pos:end="198:66">nb_index_entries</name></name> <operator pos:start="198:68" pos:end="198:69">||</operator> <name pos:start="198:71" pos:end="198:113"><name pos:start="198:71" pos:end="198:72">st</name><operator pos:start="198:73" pos:end="198:74">-&gt;</operator><name pos:start="198:75" pos:end="198:87">index_entries</name><index pos:start="198:88" pos:end="198:113">[<expr pos:start="198:89" pos:end="198:112"><name pos:start="198:89" pos:end="198:108"><name pos:start="198:89" pos:end="198:90">st</name><operator pos:start="198:91" pos:end="198:92">-&gt;</operator><name pos:start="198:93" pos:end="198:108">nb_index_entries</name></name> <operator pos:start="198:110" pos:end="198:110">-</operator> <literal type="number" pos:start="198:112" pos:end="198:112">1</literal></expr>]</index></name><operator pos:start="198:114" pos:end="198:114">.</operator><name pos:start="198:115" pos:end="198:117">pos</name> <operator pos:start="198:119" pos:end="198:119">&lt;</operator> <name pos:start="198:121" pos:end="198:123">pos</name></expr>)</condition><block pos:start="198:125" pos:end="200:21">{<block_content pos:start="199:25" pos:end="199:127">
                        <expr_stmt pos:start="199:25" pos:end="199:127"><expr pos:start="199:25" pos:end="199:126"><call pos:start="199:25" pos:end="199:126"><name pos:start="199:25" pos:end="199:42">av_add_index_entry</name><argument_list pos:start="199:43" pos:end="199:126">(<argument pos:start="199:44" pos:end="199:45"><expr pos:start="199:44" pos:end="199:45"><name pos:start="199:44" pos:end="199:45">st</name></expr></argument>, <argument pos:start="199:48" pos:end="199:50"><expr pos:start="199:48" pos:end="199:50"><name pos:start="199:48" pos:end="199:50">pos</name></expr></argument>, <argument pos:start="199:53" pos:end="199:98"><expr pos:start="199:53" pos:end="199:98"><name pos:start="199:53" pos:end="199:69"><name pos:start="199:53" pos:end="199:55">ast</name><operator pos:start="199:56" pos:end="199:57">-&gt;</operator><name pos:start="199:58" pos:end="199:69">frame_offset</name></name> <operator pos:start="199:71" pos:end="199:71">/</operator> <call pos:start="199:73" pos:end="199:98"><name pos:start="199:73" pos:end="199:77">FFMAX</name><argument_list pos:start="199:78" pos:end="199:98">(<argument pos:start="199:79" pos:end="199:79"><expr pos:start="199:79" pos:end="199:79"><literal type="number" pos:start="199:79" pos:end="199:79">1</literal></expr></argument>, <argument pos:start="199:82" pos:end="199:97"><expr pos:start="199:82" pos:end="199:97"><name pos:start="199:82" pos:end="199:97"><name pos:start="199:82" pos:end="199:84">ast</name><operator pos:start="199:85" pos:end="199:86">-&gt;</operator><name pos:start="199:87" pos:end="199:97">sample_size</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="199:101" pos:end="199:104"><expr pos:start="199:101" pos:end="199:104"><name pos:start="199:101" pos:end="199:104">size</name></expr></argument>, <argument pos:start="199:107" pos:end="199:107"><expr pos:start="199:107" pos:end="199:107"><literal type="number" pos:start="199:107" pos:end="199:107">0</literal></expr></argument>, <argument pos:start="199:110" pos:end="199:125"><expr pos:start="199:110" pos:end="199:125"><name pos:start="199:110" pos:end="199:125">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block>
                <goto pos:start="202:17" pos:end="202:28">goto <name pos:start="202:22" pos:end="202:27">resync</name>;</goto>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
</block_content>}</block></function></unit>
