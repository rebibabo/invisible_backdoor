<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4240.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:45">mimic_decode_update_thread_context</name><parameter_list pos:start="1:46" pos:end="1:102">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:101"><decl pos:start="1:70" pos:end="1:101"><type pos:start="1:70" pos:end="1:101"><specifier pos:start="1:70" pos:end="1:74">const</specifier> <name pos:start="1:76" pos:end="1:89">AVCodecContext</name> <modifier pos:start="1:91" pos:end="1:91">*</modifier></type><name pos:start="1:92" pos:end="1:101">avctx_from</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:71"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MimicContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">dst</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>, <decl pos:start="5:43" pos:end="5:70"><type ref="prev" pos:start="5:5" pos:end="5:18"><modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:46">src</name> <init pos:start="5:48" pos:end="5:70">= <expr pos:start="5:50" pos:end="5:70"><name pos:start="5:50" pos:end="5:70"><name pos:start="5:50" pos:end="5:59">avctx_from</name><operator pos:start="5:60" pos:end="5:61">-&gt;</operator><name pos:start="5:62" pos:end="5:70">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:28">(<expr pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:13">avctx</name> <operator pos:start="11:15" pos:end="11:16">==</operator> <name pos:start="11:18" pos:end="11:27">avctx_from</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:7">dst</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:18">cur_index</name></name>  <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:41"><name pos:start="17:23" pos:end="17:25">src</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:41">next_cur_index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:7">dst</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:19">prev_index</name></name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:42"><name pos:start="19:23" pos:end="19:25">src</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:42">next_prev_index</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:76"><expr pos:start="23:5" pos:end="23:75"><call pos:start="23:5" pos:end="23:75"><name pos:start="23:5" pos:end="23:10">memcpy</name><argument_list pos:start="23:11" pos:end="23:75">(<argument pos:start="23:12" pos:end="23:28"><expr pos:start="23:12" pos:end="23:28"><name pos:start="23:12" pos:end="23:28"><name pos:start="23:12" pos:end="23:14">dst</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:28">flipped_ptrs</name></name></expr></argument>, <argument pos:start="23:31" pos:end="23:47"><expr pos:start="23:31" pos:end="23:47"><name pos:start="23:31" pos:end="23:47"><name pos:start="23:31" pos:end="23:33">src</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:47">flipped_ptrs</name></name></expr></argument>, <argument pos:start="23:50" pos:end="23:74"><expr pos:start="23:50" pos:end="23:74"><sizeof pos:start="23:50" pos:end="23:74">sizeof<argument_list pos:start="23:56" pos:end="23:74">(<argument pos:start="23:57" pos:end="23:73"><expr pos:start="23:57" pos:end="23:73"><name pos:start="23:57" pos:end="23:73"><name pos:start="23:57" pos:end="23:59">src</name><operator pos:start="23:60" pos:end="23:61">-&gt;</operator><name pos:start="23:62" pos:end="23:73">flipped_ptrs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="41:5">for <control pos:start="27:9" pos:end="27:53">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:48"><expr pos:start="27:17" pos:end="27:47"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <call pos:start="27:21" pos:end="27:47"><name pos:start="27:21" pos:end="27:34">FF_ARRAY_ELEMS</name><argument_list pos:start="27:35" pos:end="27:47">(<argument pos:start="27:36" pos:end="27:46"><expr pos:start="27:36" pos:end="27:46"><name pos:start="27:36" pos:end="27:46"><name pos:start="27:36" pos:end="27:38">dst</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:46">frames</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="27:50" pos:end="27:52"><expr pos:start="27:50" pos:end="27:52"><name pos:start="27:50" pos:end="27:50">i</name><operator pos:start="27:51" pos:end="27:52">++</operator></expr></incr>)</control> <block pos:start="27:55" pos:end="41:5">{<block_content pos:start="29:9" pos:end="39:9">

        <expr_stmt pos:start="29:9" pos:end="29:57"><expr pos:start="29:9" pos:end="29:56"><call pos:start="29:9" pos:end="29:56"><name pos:start="29:9" pos:end="29:32">ff_thread_release_buffer</name><argument_list pos:start="29:33" pos:end="29:56">(<argument pos:start="29:34" pos:end="29:38"><expr pos:start="29:34" pos:end="29:38"><name pos:start="29:34" pos:end="29:38">avctx</name></expr></argument>, <argument pos:start="29:41" pos:end="29:55"><expr pos:start="29:41" pos:end="29:55"><operator pos:start="29:41" pos:end="29:41">&amp;</operator><name pos:start="29:42" pos:end="29:55"><name pos:start="29:42" pos:end="29:44">dst</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:52">frames</name><index pos:start="29:53" pos:end="29:55">[<expr pos:start="29:54" pos:end="29:54"><name pos:start="29:54" pos:end="29:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="39:9">if <condition pos:start="31:12" pos:end="31:38">(<expr pos:start="31:13" pos:end="31:37"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:15">src</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:23">frames</name><index pos:start="31:24" pos:end="31:26">[<expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">i</name></expr>]</index></name><operator pos:start="31:27" pos:end="31:27">.</operator><name pos:start="31:28" pos:end="31:37"><name pos:start="31:28" pos:end="31:28">f</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:34">data</name><index pos:start="31:35" pos:end="31:37">[<expr pos:start="31:36" pos:end="31:36"><literal type="number" pos:start="31:36" pos:end="31:36">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="31:40" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:27">

            <expr_stmt pos:start="33:13" pos:end="33:72"><expr pos:start="33:13" pos:end="33:71"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:71"><name pos:start="33:19" pos:end="33:37">ff_thread_ref_frame</name><argument_list pos:start="33:38" pos:end="33:71">(<argument pos:start="33:39" pos:end="33:53"><expr pos:start="33:39" pos:end="33:53"><operator pos:start="33:39" pos:end="33:39">&amp;</operator><name pos:start="33:40" pos:end="33:53"><name pos:start="33:40" pos:end="33:42">dst</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:50">frames</name><index pos:start="33:51" pos:end="33:53">[<expr pos:start="33:52" pos:end="33:52"><name pos:start="33:52" pos:end="33:52">i</name></expr>]</index></name></expr></argument>, <argument pos:start="33:56" pos:end="33:70"><expr pos:start="33:56" pos:end="33:70"><operator pos:start="33:56" pos:end="33:56">&amp;</operator><name pos:start="33:57" pos:end="33:70"><name pos:start="33:57" pos:end="33:59">src</name><operator pos:start="33:60" pos:end="33:61">-&gt;</operator><name pos:start="33:62" pos:end="33:67">frames</name><index pos:start="33:68" pos:end="33:70">[<expr pos:start="33:69" pos:end="33:69"><name pos:start="33:69" pos:end="33:69">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="37:27"><if pos:start="35:13" pos:end="37:27">if <condition pos:start="35:16" pos:end="35:24">(<expr pos:start="35:17" pos:end="35:23"><name pos:start="35:17" pos:end="35:19">ret</name> <operator pos:start="35:21" pos:end="35:21">&lt;</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:27"><block_content pos:start="37:17" pos:end="37:27">

                <return pos:start="37:17" pos:end="37:27">return <expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
