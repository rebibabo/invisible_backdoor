<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20593.c" pos:tabs="8"><function pos:start="1:1" pos:end="255:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">ff_id3v2_parse</name><parameter_list pos:start="1:27" pos:end="1:116">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:54"><decl pos:start="1:48" pos:end="1:54"><type pos:start="1:48" pos:end="1:54"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:54">len</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><name pos:start="1:57" pos:end="1:63">uint8_t</name></type> <name pos:start="1:65" pos:end="1:71">version</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:86"><decl pos:start="1:74" pos:end="1:86"><type pos:start="1:74" pos:end="1:86"><name pos:start="1:74" pos:end="1:80">uint8_t</name></type> <name pos:start="1:82" pos:end="1:86">flags</name></decl></parameter>, <parameter pos:start="1:89" pos:end="1:115"><decl pos:start="1:89" pos:end="1:115"><type pos:start="1:89" pos:end="1:115"><name pos:start="1:89" pos:end="1:102">ID3v2ExtraMeta</name> <modifier pos:start="1:104" pos:end="1:104">*</modifier><modifier pos:start="1:105" pos:end="1:105">*</modifier></type><name pos:start="1:106" pos:end="1:115">extra_meta</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="255:1">{<block_content pos:start="5:5" pos:end="253:11">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">isv34</name></decl>, <decl pos:start="5:16" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:19">tlen</name></decl>, <decl pos:start="5:22" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:27">unsync</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:15"><name pos:start="7:10" pos:end="7:12">tag</name><index pos:start="7:13" pos:end="7:15">[<expr pos:start="7:14" pos:end="7:14"><literal type="number" pos:start="7:14" pos:end="7:14">5</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:16">next</name></decl>, <decl pos:start="9:19" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:19" pos:end="9:21">end</name> <init pos:start="9:23" pos:end="9:46">= <expr pos:start="9:25" pos:end="9:46"><call pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:33">avio_tell</name><argument_list pos:start="9:34" pos:end="9:40">(<argument pos:start="9:35" pos:end="9:39"><expr pos:start="9:35" pos:end="9:39"><name pos:start="9:35" pos:end="9:39"><name pos:start="9:35" pos:end="9:35">s</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:39">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="9:42" pos:end="9:42">+</operator> <name pos:start="9:44" pos:end="9:46">len</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">taghdrlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:22">reason</name> <init pos:start="13:24" pos:end="13:29">= <expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:15">AVIOContext</name></type> <name pos:start="15:17" pos:end="15:18">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:15">AVIOContext</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:20">pbx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">char</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:25">buffer</name> <init pos:start="19:27" pos:end="19:32">= <expr pos:start="19:29" pos:end="19:32"><name pos:start="19:29" pos:end="19:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:24"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:19">buffer_size</name> <init pos:start="21:21" pos:end="21:23">= <expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr></init></decl>;</decl_stmt>

    <function_decl pos:start="23:5" pos:end="23:92"><type pos:start="23:5" pos:end="23:8"><name pos:start="23:5" pos:end="23:8">void</name></type> (<modifier pos:start="23:11" pos:end="23:11">*</modifier><name pos:start="23:12" pos:end="23:21">extra_func</name>)<parameter_list pos:start="23:23" pos:end="23:84">(<parameter pos:start="23:24" pos:end="23:39"><decl pos:start="23:24" pos:end="23:39"><type pos:start="23:24" pos:end="23:39"><name pos:start="23:24" pos:end="23:38">AVFormatContext</name><modifier pos:start="23:39" pos:end="23:39">*</modifier></type></decl></parameter>, <parameter pos:start="23:42" pos:end="23:53"><decl pos:start="23:42" pos:end="23:53"><type pos:start="23:42" pos:end="23:53"><name pos:start="23:42" pos:end="23:52">AVIOContext</name><modifier pos:start="23:53" pos:end="23:53">*</modifier></type></decl></parameter>, <parameter pos:start="23:56" pos:end="23:58"><decl pos:start="23:56" pos:end="23:58"><type pos:start="23:56" pos:end="23:58"><name pos:start="23:56" pos:end="23:58">int</name></type></decl></parameter>, <parameter pos:start="23:61" pos:end="23:65"><decl pos:start="23:61" pos:end="23:65"><type pos:start="23:61" pos:end="23:65"><name pos:start="23:61" pos:end="23:64">char</name><modifier pos:start="23:65" pos:end="23:65">*</modifier></type></decl></parameter>, <parameter pos:start="23:68" pos:end="23:83"><decl pos:start="23:68" pos:end="23:83"><type pos:start="23:68" pos:end="23:83"><name pos:start="23:68" pos:end="23:81">ID3v2ExtraMeta</name><modifier pos:start="23:82" pos:end="23:82">*</modifier><modifier pos:start="23:83" pos:end="23:83">*</modifier></type></decl></parameter>)</parameter_list> <init pos:start="23:86" pos:end="23:91">= <expr pos:start="23:88" pos:end="23:91"><name pos:start="23:88" pos:end="23:91">NULL</name></expr></init>;</function_decl>



    <switch pos:start="27:5" pos:end="65:5">switch <condition pos:start="27:12" pos:end="27:20">(<expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:19">version</name></expr>)</condition> <block pos:start="27:22" pos:end="65:5">{<block_content pos:start="29:5" pos:end="63:19">

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">2</literal></expr>:</case>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:25">(<expr pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:17">flags</name> <operator pos:start="31:19" pos:end="31:19">&amp;</operator> <literal type="number" pos:start="31:21" pos:end="31:24">0x40</literal></expr>)</condition> <block pos:start="31:27" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:23">

            <expr_stmt pos:start="33:13" pos:end="33:35"><expr pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:18">reason</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="string" pos:start="33:22" pos:end="33:34">"compression"</literal></expr>;</expr_stmt>

            <goto pos:start="35:13" pos:end="35:23">goto <name pos:start="35:18" pos:end="35:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:18"><expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:13">isv34</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <literal type="number" pos:start="39:17" pos:end="39:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:17">taghdrlen</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <literal type="number" pos:start="41:21" pos:end="41:21">6</literal></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>



    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">3</literal></expr>:</case>

    <case pos:start="49:5" pos:end="49:11">case <expr pos:start="49:10" pos:end="49:10"><literal type="number" pos:start="49:10" pos:end="49:10">4</literal></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:18"><expr pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:13">isv34</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:23"><expr pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:17">taghdrlen</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <literal type="number" pos:start="53:21" pos:end="53:22">10</literal></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>



    <default pos:start="59:5" pos:end="59:12">default:</default>

        <expr_stmt pos:start="61:9" pos:end="61:27"><expr pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:14">reason</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="string" pos:start="61:18" pos:end="61:26">"version"</literal></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:19">goto <name pos:start="63:14" pos:end="63:18">error</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="69:5" pos:end="69:26"><expr pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:10">unsync</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <name pos:start="69:14" pos:end="69:18">flags</name> <operator pos:start="69:20" pos:end="69:20">&amp;</operator> <literal type="number" pos:start="69:22" pos:end="69:25">0x80</literal></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="75:45"><if pos:start="73:5" pos:end="75:45">if <condition pos:start="73:8" pos:end="73:30">(<expr pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:13">isv34</name> <operator pos:start="73:15" pos:end="73:16">&amp;&amp;</operator> <name pos:start="73:18" pos:end="73:22">flags</name> <operator pos:start="73:24" pos:end="73:24">&amp;</operator> <literal type="number" pos:start="73:26" pos:end="73:29">0x40</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:45"><block_content pos:start="75:9" pos:end="75:45"> <comment type="block" pos:start="73:32" pos:end="73:79">/* Extended header present, just skip over it */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:45"><expr pos:start="75:9" pos:end="75:44"><call pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:17">avio_skip</name><argument_list pos:start="75:18" pos:end="75:44">(<argument pos:start="75:19" pos:end="75:23"><expr pos:start="75:19" pos:end="75:23"><name pos:start="75:19" pos:end="75:23"><name pos:start="75:19" pos:end="75:19">s</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:23">pb</name></name></expr></argument>, <argument pos:start="75:26" pos:end="75:43"><expr pos:start="75:26" pos:end="75:43"><call pos:start="75:26" pos:end="75:43"><name pos:start="75:26" pos:end="75:33">get_size</name><argument_list pos:start="75:34" pos:end="75:43">(<argument pos:start="75:35" pos:end="75:39"><expr pos:start="75:35" pos:end="75:39"><name pos:start="75:35" pos:end="75:39"><name pos:start="75:35" pos:end="75:35">s</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:39">pb</name></name></expr></argument>, <argument pos:start="75:42" pos:end="75:42"><expr pos:start="75:42" pos:end="75:42"><literal type="number" pos:start="75:42" pos:end="75:42">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <while pos:start="79:5" pos:end="233:5">while <condition pos:start="79:11" pos:end="79:28">(<expr pos:start="79:12" pos:end="79:27"><name pos:start="79:12" pos:end="79:14">len</name> <operator pos:start="79:16" pos:end="79:17">&gt;=</operator> <name pos:start="79:19" pos:end="79:27">taghdrlen</name></expr>)</condition> <block pos:start="79:30" pos:end="233:5">{<block_content pos:start="81:9" pos:end="231:41">

        <decl_stmt pos:start="81:9" pos:end="81:32"><decl pos:start="81:9" pos:end="81:31"><type pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:16">unsigned</name> <name pos:start="81:18" pos:end="81:20">int</name></type> <name pos:start="81:22" pos:end="81:27">tflags</name> <init pos:start="81:29" pos:end="81:31">= <expr pos:start="81:31" pos:end="81:31"><literal type="number" pos:start="81:31" pos:end="81:31">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="83:24"><decl pos:start="83:9" pos:end="83:23"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:19">tunsync</name> <init pos:start="83:21" pos:end="83:23">= <expr pos:start="83:23" pos:end="83:23"><literal type="number" pos:start="83:23" pos:end="83:23">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="87:9" pos:end="113:9"><if pos:start="87:9" pos:end="105:9">if <condition pos:start="87:12" pos:end="87:18">(<expr pos:start="87:13" pos:end="87:17"><name pos:start="87:13" pos:end="87:17">isv34</name></expr>)</condition> <block pos:start="87:20" pos:end="105:9">{<block_content pos:start="89:13" pos:end="103:50">

            <expr_stmt pos:start="89:13" pos:end="89:37"><expr pos:start="89:13" pos:end="89:36"><call pos:start="89:13" pos:end="89:36"><name pos:start="89:13" pos:end="89:21">avio_read</name><argument_list pos:start="89:22" pos:end="89:36">(<argument pos:start="89:23" pos:end="89:27"><expr pos:start="89:23" pos:end="89:27"><name pos:start="89:23" pos:end="89:27"><name pos:start="89:23" pos:end="89:23">s</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:27">pb</name></name></expr></argument>, <argument pos:start="89:30" pos:end="89:32"><expr pos:start="89:30" pos:end="89:32"><name pos:start="89:30" pos:end="89:32">tag</name></expr></argument>, <argument pos:start="89:35" pos:end="89:35"><expr pos:start="89:35" pos:end="89:35"><literal type="number" pos:start="89:35" pos:end="89:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:23"><expr pos:start="91:13" pos:end="91:22"><name pos:start="91:13" pos:end="91:18"><name pos:start="91:13" pos:end="91:15">tag</name><index pos:start="91:16" pos:end="91:18">[<expr pos:start="91:17" pos:end="91:17"><literal type="number" pos:start="91:17" pos:end="91:17">4</literal></expr>]</index></name> <operator pos:start="91:20" pos:end="91:20">=</operator> <literal type="number" pos:start="91:22" pos:end="91:22">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="99:42"><if pos:start="93:13" pos:end="97:13">if<condition pos:start="93:15" pos:end="93:26">(<expr pos:start="93:16" pos:end="93:25"><name pos:start="93:16" pos:end="93:22">version</name><operator pos:start="93:23" pos:end="93:24">==</operator><literal type="number" pos:start="93:25" pos:end="93:25">3</literal></expr>)</condition><block pos:start="93:27" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:40">

                <expr_stmt pos:start="95:17" pos:end="95:40"><expr pos:start="95:17" pos:end="95:39"><name pos:start="95:17" pos:end="95:20">tlen</name> <operator pos:start="95:22" pos:end="95:22">=</operator> <call pos:start="95:24" pos:end="95:39"><name pos:start="95:24" pos:end="95:32">avio_rb32</name><argument_list pos:start="95:33" pos:end="95:39">(<argument pos:start="95:34" pos:end="95:38"><expr pos:start="95:34" pos:end="95:38"><name pos:start="95:34" pos:end="95:38"><name pos:start="95:34" pos:end="95:34">s</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="97:14" pos:end="99:42">else<block type="pseudo" pos:start="99:17" pos:end="99:42"><block_content pos:start="99:17" pos:end="99:42">

                <expr_stmt pos:start="99:17" pos:end="99:42"><expr pos:start="99:17" pos:end="99:41"><name pos:start="99:17" pos:end="99:20">tlen</name> <operator pos:start="99:22" pos:end="99:22">=</operator> <call pos:start="99:24" pos:end="99:41"><name pos:start="99:24" pos:end="99:31">get_size</name><argument_list pos:start="99:32" pos:end="99:41">(<argument pos:start="99:33" pos:end="99:37"><expr pos:start="99:33" pos:end="99:37"><name pos:start="99:33" pos:end="99:37"><name pos:start="99:33" pos:end="99:33">s</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:37">pb</name></name></expr></argument>, <argument pos:start="99:40" pos:end="99:40"><expr pos:start="99:40" pos:end="99:40"><literal type="number" pos:start="99:40" pos:end="99:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:38"><expr pos:start="101:13" pos:end="101:37"><name pos:start="101:13" pos:end="101:18">tflags</name> <operator pos:start="101:20" pos:end="101:20">=</operator> <call pos:start="101:22" pos:end="101:37"><name pos:start="101:22" pos:end="101:30">avio_rb16</name><argument_list pos:start="101:31" pos:end="101:37">(<argument pos:start="101:32" pos:end="101:36"><expr pos:start="101:32" pos:end="101:36"><name pos:start="101:32" pos:end="101:36"><name pos:start="101:32" pos:end="101:32">s</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:36">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:50"><expr pos:start="103:13" pos:end="103:49"><name pos:start="103:13" pos:end="103:19">tunsync</name> <operator pos:start="103:21" pos:end="103:21">=</operator> <name pos:start="103:23" pos:end="103:28">tflags</name> <operator pos:start="103:30" pos:end="103:30">&amp;</operator> <name pos:start="103:32" pos:end="103:49">ID3v2_FLAG_UNSYNCH</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="105:11" pos:end="113:9">else <block pos:start="105:16" pos:end="113:9">{<block_content pos:start="107:13" pos:end="111:36">

            <expr_stmt pos:start="107:13" pos:end="107:37"><expr pos:start="107:13" pos:end="107:36"><call pos:start="107:13" pos:end="107:36"><name pos:start="107:13" pos:end="107:21">avio_read</name><argument_list pos:start="107:22" pos:end="107:36">(<argument pos:start="107:23" pos:end="107:27"><expr pos:start="107:23" pos:end="107:27"><name pos:start="107:23" pos:end="107:27"><name pos:start="107:23" pos:end="107:23">s</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:27">pb</name></name></expr></argument>, <argument pos:start="107:30" pos:end="107:32"><expr pos:start="107:30" pos:end="107:32"><name pos:start="107:30" pos:end="107:32">tag</name></expr></argument>, <argument pos:start="107:35" pos:end="107:35"><expr pos:start="107:35" pos:end="107:35"><literal type="number" pos:start="107:35" pos:end="107:35">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:23"><expr pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:18"><name pos:start="109:13" pos:end="109:15">tag</name><index pos:start="109:16" pos:end="109:18">[<expr pos:start="109:17" pos:end="109:17"><literal type="number" pos:start="109:17" pos:end="109:17">3</literal></expr>]</index></name> <operator pos:start="109:20" pos:end="109:20">=</operator> <literal type="number" pos:start="109:22" pos:end="109:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:36"><expr pos:start="111:13" pos:end="111:35"><name pos:start="111:13" pos:end="111:16">tlen</name> <operator pos:start="111:18" pos:end="111:18">=</operator> <call pos:start="111:20" pos:end="111:35"><name pos:start="111:20" pos:end="111:28">avio_rb24</name><argument_list pos:start="111:29" pos:end="111:35">(<argument pos:start="111:30" pos:end="111:34"><expr pos:start="111:30" pos:end="111:34"><name pos:start="111:30" pos:end="111:34"><name pos:start="111:30" pos:end="111:30">s</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="115:9" pos:end="121:9"><if pos:start="115:9" pos:end="121:9">if <condition pos:start="115:12" pos:end="115:47">(<expr pos:start="115:13" pos:end="115:46"><name pos:start="115:13" pos:end="115:30"><name pos:start="115:13" pos:end="115:16">tlen</name> <argument_list type="generic" pos:start="115:18" pos:end="115:30">&lt; <argument pos:start="115:20" pos:end="115:28"><expr pos:start="115:20" pos:end="115:28"><literal type="number" pos:start="115:20" pos:end="115:20">0</literal> <operator pos:start="115:22" pos:end="115:23">||</operator> <name pos:start="115:25" pos:end="115:28">tlen</name></expr></argument> &gt;</argument_list></name> <name pos:start="115:32" pos:end="115:34">len</name> <operator pos:start="115:36" pos:end="115:36">-</operator> <name pos:start="115:38" pos:end="115:46">taghdrlen</name></expr>)</condition> <block pos:start="115:49" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:18">

            <expr_stmt pos:start="117:13" pos:end="117:100"><expr pos:start="117:13" pos:end="117:99"><call pos:start="117:13" pos:end="117:99"><name pos:start="117:13" pos:end="117:18">av_log</name><argument_list pos:start="117:19" pos:end="117:99">(<argument pos:start="117:20" pos:end="117:20"><expr pos:start="117:20" pos:end="117:20"><name pos:start="117:20" pos:end="117:20">s</name></expr></argument>, <argument pos:start="117:23" pos:end="117:36"><expr pos:start="117:23" pos:end="117:36"><name pos:start="117:23" pos:end="117:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="117:39" pos:end="117:93"><expr pos:start="117:39" pos:end="117:93"><literal type="string" pos:start="117:39" pos:end="117:93">"Invalid size in frame %s, skipping the rest of tag.\n"</literal></expr></argument>, <argument pos:start="117:96" pos:end="117:98"><expr pos:start="117:96" pos:end="117:98"><name pos:start="117:96" pos:end="117:98">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:32"><expr pos:start="123:9" pos:end="123:31"><name pos:start="123:9" pos:end="123:11">len</name> <operator pos:start="123:13" pos:end="123:14">-=</operator> <name pos:start="123:16" pos:end="123:24">taghdrlen</name> <operator pos:start="123:26" pos:end="123:26">+</operator> <name pos:start="123:28" pos:end="123:31">tlen</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:39"><expr pos:start="125:9" pos:end="125:38"><name pos:start="125:9" pos:end="125:12">next</name> <operator pos:start="125:14" pos:end="125:14">=</operator> <call pos:start="125:16" pos:end="125:31"><name pos:start="125:16" pos:end="125:24">avio_tell</name><argument_list pos:start="125:25" pos:end="125:31">(<argument pos:start="125:26" pos:end="125:30"><expr pos:start="125:26" pos:end="125:30"><name pos:start="125:26" pos:end="125:30"><name pos:start="125:26" pos:end="125:26">s</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:30">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="125:33" pos:end="125:33">+</operator> <name pos:start="125:35" pos:end="125:38">tlen</name></expr>;</expr_stmt>



        <if_stmt pos:start="129:9" pos:end="137:9"><if pos:start="129:9" pos:end="137:9">if <condition pos:start="129:12" pos:end="129:18">(<expr pos:start="129:13" pos:end="129:17"><operator pos:start="129:13" pos:end="129:13">!</operator><name pos:start="129:14" pos:end="129:17">tlen</name></expr>)</condition> <block pos:start="129:20" pos:end="137:9">{<block_content pos:start="131:13" pos:end="135:21">

            <if_stmt pos:start="131:13" pos:end="133:84"><if pos:start="131:13" pos:end="133:84">if <condition pos:start="131:16" pos:end="131:23">(<expr pos:start="131:17" pos:end="131:22"><name pos:start="131:17" pos:end="131:22"><name pos:start="131:17" pos:end="131:19">tag</name><index pos:start="131:20" pos:end="131:22">[<expr pos:start="131:21" pos:end="131:21"><literal type="number" pos:start="131:21" pos:end="131:21">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:84"><block_content pos:start="133:17" pos:end="133:84">

                <expr_stmt pos:start="133:17" pos:end="133:84"><expr pos:start="133:17" pos:end="133:83"><call pos:start="133:17" pos:end="133:83"><name pos:start="133:17" pos:end="133:22">av_log</name><argument_list pos:start="133:23" pos:end="133:83">(<argument pos:start="133:24" pos:end="133:24"><expr pos:start="133:24" pos:end="133:24"><name pos:start="133:24" pos:end="133:24">s</name></expr></argument>, <argument pos:start="133:27" pos:end="133:38"><expr pos:start="133:27" pos:end="133:38"><name pos:start="133:27" pos:end="133:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="133:41" pos:end="133:77"><expr pos:start="133:41" pos:end="133:77"><literal type="string" pos:start="133:41" pos:end="133:77">"Invalid empty frame %s, skipping.\n"</literal></expr></argument>, <argument pos:start="133:80" pos:end="133:82"><expr pos:start="133:80" pos:end="133:82"><name pos:start="133:80" pos:end="133:82">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <continue pos:start="135:13" pos:end="135:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="141:9" pos:end="147:9"><if pos:start="141:9" pos:end="147:9">if <condition pos:start="141:12" pos:end="141:40">(<expr pos:start="141:13" pos:end="141:39"><name pos:start="141:13" pos:end="141:18">tflags</name> <operator pos:start="141:20" pos:end="141:20">&amp;</operator> <name pos:start="141:22" pos:end="141:39">ID3v2_FLAG_DATALEN</name></expr>)</condition> <block pos:start="141:42" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:22">

            <expr_stmt pos:start="143:13" pos:end="143:29"><expr pos:start="143:13" pos:end="143:28"><call pos:start="143:13" pos:end="143:28"><name pos:start="143:13" pos:end="143:21">avio_rb32</name><argument_list pos:start="143:22" pos:end="143:28">(<argument pos:start="143:23" pos:end="143:27"><expr pos:start="143:23" pos:end="143:27"><name pos:start="143:23" pos:end="143:27"><name pos:start="143:23" pos:end="143:23">s</name><operator pos:start="143:24" pos:end="143:25">-&gt;</operator><name pos:start="143:26" pos:end="143:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:22"><expr pos:start="145:13" pos:end="145:21"><name pos:start="145:13" pos:end="145:16">tlen</name> <operator pos:start="145:18" pos:end="145:19">-=</operator> <literal type="number" pos:start="145:21" pos:end="145:21">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="151:9" pos:end="225:9"><if pos:start="151:9" pos:end="159:9">if <condition pos:start="151:12" pos:end="151:70">(<expr pos:start="151:13" pos:end="151:69"><name pos:start="151:13" pos:end="151:18">tflags</name> <operator pos:start="151:20" pos:end="151:20">&amp;</operator> <operator pos:start="151:22" pos:end="151:22">(</operator><name pos:start="151:23" pos:end="151:43">ID3v2_FLAG_ENCRYPTION</name> <operator pos:start="151:45" pos:end="151:45">|</operator> <name pos:start="151:47" pos:end="151:68">ID3v2_FLAG_COMPRESSION</name><operator pos:start="151:69" pos:end="151:69">)</operator></expr>)</condition> <block pos:start="151:72" pos:end="159:9">{<block_content pos:start="153:13" pos:end="155:35">

            <expr_stmt pos:start="153:13" pos:end="153:94"><expr pos:start="153:13" pos:end="153:93"><call pos:start="153:13" pos:end="153:93"><name pos:start="153:13" pos:end="153:18">av_log</name><argument_list pos:start="153:19" pos:end="153:93">(<argument pos:start="153:20" pos:end="153:20"><expr pos:start="153:20" pos:end="153:20"><name pos:start="153:20" pos:end="153:20">s</name></expr></argument>, <argument pos:start="153:23" pos:end="153:36"><expr pos:start="153:23" pos:end="153:36"><name pos:start="153:23" pos:end="153:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="153:39" pos:end="153:87"><expr pos:start="153:39" pos:end="153:87"><literal type="string" pos:start="153:39" pos:end="153:87">"Skipping encrypted/compressed ID3v2 frame %s.\n"</literal></expr></argument>, <argument pos:start="153:90" pos:end="153:92"><expr pos:start="153:90" pos:end="153:92"><name pos:start="153:90" pos:end="153:92">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:35"><expr pos:start="155:13" pos:end="155:34"><call pos:start="155:13" pos:end="155:34"><name pos:start="155:13" pos:end="155:21">avio_skip</name><argument_list pos:start="155:22" pos:end="155:34">(<argument pos:start="155:23" pos:end="155:27"><expr pos:start="155:23" pos:end="155:27"><name pos:start="155:23" pos:end="155:27"><name pos:start="155:23" pos:end="155:23">s</name><operator pos:start="155:24" pos:end="155:25">-&gt;</operator><name pos:start="155:26" pos:end="155:27">pb</name></name></expr></argument>, <argument pos:start="155:30" pos:end="155:33"><expr pos:start="155:30" pos:end="155:33"><name pos:start="155:30" pos:end="155:33">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="157:9" pos:end="157:62">/* check for text tag or supported special meta tag */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="159:11" pos:end="213:9">else if <condition pos:start="159:19" pos:end="159:105">(<expr pos:start="159:20" pos:end="159:104"><name pos:start="159:20" pos:end="159:25"><name pos:start="159:20" pos:end="159:22">tag</name><index pos:start="159:23" pos:end="159:25">[<expr pos:start="159:24" pos:end="159:24"><literal type="number" pos:start="159:24" pos:end="159:24">0</literal></expr>]</index></name> <operator pos:start="159:27" pos:end="159:28">==</operator> <literal type="char" pos:start="159:30" pos:end="159:32">'T'</literal> <operator pos:start="159:34" pos:end="159:35">||</operator> <operator pos:start="159:37" pos:end="159:37">(</operator><name pos:start="159:38" pos:end="159:47">extra_meta</name> <operator pos:start="159:49" pos:end="159:50">&amp;&amp;</operator> <operator pos:start="159:52" pos:end="159:52">(</operator><name pos:start="159:53" pos:end="159:62">extra_func</name> <operator pos:start="159:64" pos:end="159:64">=</operator> <call pos:start="159:66" pos:end="159:96"><name pos:start="159:66" pos:end="159:84">get_extra_meta_func</name><argument_list pos:start="159:85" pos:end="159:96">(<argument pos:start="159:86" pos:end="159:88"><expr pos:start="159:86" pos:end="159:88"><name pos:start="159:86" pos:end="159:88">tag</name></expr></argument>, <argument pos:start="159:91" pos:end="159:95"><expr pos:start="159:91" pos:end="159:95"><name pos:start="159:91" pos:end="159:95">isv34</name></expr></argument>)</argument_list></call><operator pos:start="159:97" pos:end="159:98">-&gt;</operator><name pos:start="159:99" pos:end="159:102">read</name><operator pos:start="159:103" pos:end="159:103">)</operator><operator pos:start="159:104" pos:end="159:104">)</operator></expr>)</condition> <block pos:start="159:107" pos:end="213:9">{<block_content pos:start="161:13" pos:end="211:58">

            <if_stmt pos:start="161:13" pos:end="199:13"><if pos:start="161:13" pos:end="195:13">if <condition pos:start="161:16" pos:end="161:34">(<expr pos:start="161:17" pos:end="161:33"><name pos:start="161:17" pos:end="161:22">unsync</name> <operator pos:start="161:24" pos:end="161:25">||</operator> <name pos:start="161:27" pos:end="161:33">tunsync</name></expr>)</condition> <block pos:start="161:36" pos:end="195:13">{<block_content pos:start="163:17" pos:end="193:26">

                <decl_stmt pos:start="163:17" pos:end="163:25"><decl pos:start="163:17" pos:end="163:21"><type pos:start="163:17" pos:end="163:19"><name pos:start="163:17" pos:end="163:19">int</name></type> <name pos:start="163:21" pos:end="163:21">i</name></decl>, <decl pos:start="163:24" pos:end="163:24"><type ref="prev" pos:start="163:17" pos:end="163:19"/><name pos:start="163:24" pos:end="163:24">j</name></decl>;</decl_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:60"><expr pos:start="165:17" pos:end="165:59"><call pos:start="165:17" pos:end="165:59"><name pos:start="165:17" pos:end="165:30">av_fast_malloc</name><argument_list pos:start="165:31" pos:end="165:59">(<argument pos:start="165:32" pos:end="165:38"><expr pos:start="165:32" pos:end="165:38"><operator pos:start="165:32" pos:end="165:32">&amp;</operator><name pos:start="165:33" pos:end="165:38">buffer</name></expr></argument>, <argument pos:start="165:41" pos:end="165:52"><expr pos:start="165:41" pos:end="165:52"><operator pos:start="165:41" pos:end="165:41">&amp;</operator><name pos:start="165:42" pos:end="165:52">buffer_size</name></expr></argument>, <argument pos:start="165:55" pos:end="165:58"><expr pos:start="165:55" pos:end="165:58"><name pos:start="165:55" pos:end="165:58">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="167:17" pos:end="173:17"><if pos:start="167:17" pos:end="173:17">if <condition pos:start="167:20" pos:end="167:28">(<expr pos:start="167:21" pos:end="167:27"><operator pos:start="167:21" pos:end="167:21">!</operator><name pos:start="167:22" pos:end="167:27">buffer</name></expr>)</condition> <block pos:start="167:30" pos:end="173:17">{<block_content pos:start="169:21" pos:end="171:30">

                    <expr_stmt pos:start="169:21" pos:end="169:80"><expr pos:start="169:21" pos:end="169:79"><call pos:start="169:21" pos:end="169:79"><name pos:start="169:21" pos:end="169:26">av_log</name><argument_list pos:start="169:27" pos:end="169:79">(<argument pos:start="169:28" pos:end="169:28"><expr pos:start="169:28" pos:end="169:28"><name pos:start="169:28" pos:end="169:28">s</name></expr></argument>, <argument pos:start="169:31" pos:end="169:42"><expr pos:start="169:31" pos:end="169:42"><name pos:start="169:31" pos:end="169:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="169:45" pos:end="169:72"><expr pos:start="169:45" pos:end="169:72"><literal type="string" pos:start="169:45" pos:end="169:72">"Failed to alloc %d bytes\n"</literal></expr></argument>, <argument pos:start="169:75" pos:end="169:78"><expr pos:start="169:75" pos:end="169:78"><name pos:start="169:75" pos:end="169:78">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="171:21" pos:end="171:30">goto <name pos:start="171:26" pos:end="171:29">seek</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <for pos:start="175:17" pos:end="187:17">for <control pos:start="175:21" pos:end="175:54">(<init pos:start="175:22" pos:end="175:34"><expr pos:start="175:22" pos:end="175:26"><name pos:start="175:22" pos:end="175:22">i</name> <operator pos:start="175:24" pos:end="175:24">=</operator> <literal type="number" pos:start="175:26" pos:end="175:26">0</literal></expr><operator pos:start="175:27" pos:end="175:27">,</operator> <expr pos:start="175:29" pos:end="175:33"><name pos:start="175:29" pos:end="175:29">j</name> <operator pos:start="175:31" pos:end="175:31">=</operator> <literal type="number" pos:start="175:33" pos:end="175:33">0</literal></expr>;</init> <condition pos:start="175:36" pos:end="175:44"><expr pos:start="175:36" pos:end="175:43"><name pos:start="175:36" pos:end="175:36">i</name> <operator pos:start="175:38" pos:end="175:38">&lt;</operator> <name pos:start="175:40" pos:end="175:43">tlen</name></expr>;</condition> <incr pos:start="175:46" pos:end="175:53"><expr pos:start="175:46" pos:end="175:48"><name pos:start="175:46" pos:end="175:46">i</name><operator pos:start="175:47" pos:end="175:48">++</operator></expr><operator pos:start="175:49" pos:end="175:49">,</operator> <expr pos:start="175:51" pos:end="175:53"><name pos:start="175:51" pos:end="175:51">j</name><operator pos:start="175:52" pos:end="175:53">++</operator></expr></incr>)</control> <block pos:start="175:56" pos:end="187:17">{<block_content pos:start="177:21" pos:end="185:21">

                    <expr_stmt pos:start="177:21" pos:end="177:47"><expr pos:start="177:21" pos:end="177:46"><name pos:start="177:21" pos:end="177:29"><name pos:start="177:21" pos:end="177:26">buffer</name><index pos:start="177:27" pos:end="177:29">[<expr pos:start="177:28" pos:end="177:28"><name pos:start="177:28" pos:end="177:28">j</name></expr>]</index></name> <operator pos:start="177:31" pos:end="177:31">=</operator> <call pos:start="177:33" pos:end="177:46"><name pos:start="177:33" pos:end="177:39">avio_r8</name><argument_list pos:start="177:40" pos:end="177:46">(<argument pos:start="177:41" pos:end="177:45"><expr pos:start="177:41" pos:end="177:45"><name pos:start="177:41" pos:end="177:45"><name pos:start="177:41" pos:end="177:41">s</name><operator pos:start="177:42" pos:end="177:43">-&gt;</operator><name pos:start="177:44" pos:end="177:45">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="179:21" pos:end="185:21"><if pos:start="179:21" pos:end="185:21">if <condition pos:start="179:24" pos:end="179:69">(<expr pos:start="179:25" pos:end="179:68"><name pos:start="179:25" pos:end="179:25">j</name> <operator pos:start="179:27" pos:end="179:27">&gt;</operator> <literal type="number" pos:start="179:29" pos:end="179:29">0</literal> <operator pos:start="179:31" pos:end="179:32">&amp;&amp;</operator> <operator pos:start="179:34" pos:end="179:34">!</operator><name pos:start="179:35" pos:end="179:43"><name pos:start="179:35" pos:end="179:40">buffer</name><index pos:start="179:41" pos:end="179:43">[<expr pos:start="179:42" pos:end="179:42"><name pos:start="179:42" pos:end="179:42">j</name></expr>]</index></name> <operator pos:start="179:45" pos:end="179:46">&amp;&amp;</operator> <name pos:start="179:48" pos:end="179:60"><name pos:start="179:48" pos:end="179:53">buffer</name><index pos:start="179:54" pos:end="179:60">[<expr pos:start="179:55" pos:end="179:59"><name pos:start="179:55" pos:end="179:55">j</name> <operator pos:start="179:57" pos:end="179:57">-</operator> <literal type="number" pos:start="179:59" pos:end="179:59">1</literal></expr>]</index></name> <operator pos:start="179:62" pos:end="179:63">==</operator> <literal type="number" pos:start="179:65" pos:end="179:68">0xff</literal></expr>)</condition> <block pos:start="179:71" pos:end="185:21">{<block_content pos:start="183:25" pos:end="183:28">

                        <comment type="block" pos:start="181:25" pos:end="181:58">/* Unsynchronised byte, skip it */</comment>

                        <expr_stmt pos:start="183:25" pos:end="183:28"><expr pos:start="183:25" pos:end="183:27"><name pos:start="183:25" pos:end="183:25">j</name><operator pos:start="183:26" pos:end="183:27">--</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="189:17" pos:end="189:77"><expr pos:start="189:17" pos:end="189:76"><call pos:start="189:17" pos:end="189:76"><name pos:start="189:17" pos:end="189:33">ffio_init_context</name><argument_list pos:start="189:34" pos:end="189:76">(<argument pos:start="189:35" pos:end="189:37"><expr pos:start="189:35" pos:end="189:37"><operator pos:start="189:35" pos:end="189:35">&amp;</operator><name pos:start="189:36" pos:end="189:37">pb</name></expr></argument>, <argument pos:start="189:40" pos:end="189:45"><expr pos:start="189:40" pos:end="189:45"><name pos:start="189:40" pos:end="189:45">buffer</name></expr></argument>, <argument pos:start="189:48" pos:end="189:48"><expr pos:start="189:48" pos:end="189:48"><name pos:start="189:48" pos:end="189:48">j</name></expr></argument>, <argument pos:start="189:51" pos:end="189:51"><expr pos:start="189:51" pos:end="189:51"><literal type="number" pos:start="189:51" pos:end="189:51">0</literal></expr></argument>, <argument pos:start="189:54" pos:end="189:57"><expr pos:start="189:54" pos:end="189:57"><name pos:start="189:54" pos:end="189:57">NULL</name></expr></argument>, <argument pos:start="189:60" pos:end="189:63"><expr pos:start="189:60" pos:end="189:63"><name pos:start="189:60" pos:end="189:63">NULL</name></expr></argument>, <argument pos:start="189:66" pos:end="189:69"><expr pos:start="189:66" pos:end="189:69"><name pos:start="189:66" pos:end="189:69">NULL</name></expr></argument>, <argument pos:start="189:72" pos:end="189:75"><expr pos:start="189:72" pos:end="189:75"><name pos:start="189:72" pos:end="189:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:25"><expr pos:start="191:17" pos:end="191:24"><name pos:start="191:17" pos:end="191:20">tlen</name> <operator pos:start="191:22" pos:end="191:22">=</operator> <name pos:start="191:24" pos:end="191:24">j</name></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:26"><expr pos:start="193:17" pos:end="193:25"><name pos:start="193:17" pos:end="193:19">pbx</name> <operator pos:start="193:21" pos:end="193:21">=</operator> <operator pos:start="193:23" pos:end="193:23">&amp;</operator><name pos:start="193:24" pos:end="193:25">pb</name></expr>;</expr_stmt> <comment type="line" pos:start="193:28" pos:end="193:51">// read from sync buffer</comment>

            </block_content>}</block></if> <else pos:start="195:15" pos:end="199:13">else <block pos:start="195:20" pos:end="199:13">{<block_content pos:start="197:17" pos:end="197:28">

                <expr_stmt pos:start="197:17" pos:end="197:28"><expr pos:start="197:17" pos:end="197:27"><name pos:start="197:17" pos:end="197:19">pbx</name> <operator pos:start="197:21" pos:end="197:21">=</operator> <name pos:start="197:23" pos:end="197:27"><name pos:start="197:23" pos:end="197:23">s</name><operator pos:start="197:24" pos:end="197:25">-&gt;</operator><name pos:start="197:26" pos:end="197:27">pb</name></name></expr>;</expr_stmt> <comment type="line" pos:start="197:30" pos:end="197:56">// read straight from input</comment>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="201:13" pos:end="211:58"><if pos:start="201:13" pos:end="205:45">if <condition pos:start="201:16" pos:end="201:30">(<expr pos:start="201:17" pos:end="201:29"><name pos:start="201:17" pos:end="201:22"><name pos:start="201:17" pos:end="201:19">tag</name><index pos:start="201:20" pos:end="201:22">[<expr pos:start="201:21" pos:end="201:21"><literal type="number" pos:start="201:21" pos:end="201:21">0</literal></expr>]</index></name> <operator pos:start="201:24" pos:end="201:25">==</operator> <literal type="char" pos:start="201:27" pos:end="201:29">'T'</literal></expr>)</condition><block type="pseudo" pos:start="205:17" pos:end="205:45"><block_content pos:start="205:17" pos:end="205:45">

                <comment type="block" pos:start="203:17" pos:end="203:36">/* parse text tag */</comment>

                <expr_stmt pos:start="205:17" pos:end="205:45"><expr pos:start="205:17" pos:end="205:44"><call pos:start="205:17" pos:end="205:44"><name pos:start="205:17" pos:end="205:25">read_ttag</name><argument_list pos:start="205:26" pos:end="205:44">(<argument pos:start="205:27" pos:end="205:27"><expr pos:start="205:27" pos:end="205:27"><name pos:start="205:27" pos:end="205:27">s</name></expr></argument>, <argument pos:start="205:30" pos:end="205:32"><expr pos:start="205:30" pos:end="205:32"><name pos:start="205:30" pos:end="205:32">pbx</name></expr></argument>, <argument pos:start="205:35" pos:end="205:38"><expr pos:start="205:35" pos:end="205:38"><name pos:start="205:35" pos:end="205:38">tlen</name></expr></argument>, <argument pos:start="205:41" pos:end="205:43"><expr pos:start="205:41" pos:end="205:43"><name pos:start="205:41" pos:end="205:43">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="207:13" pos:end="211:58">else<block type="pseudo" pos:start="211:17" pos:end="211:58"><block_content pos:start="211:17" pos:end="211:58">

                <comment type="block" pos:start="209:17" pos:end="209:44">/* parse special meta tag */</comment>

                <expr_stmt pos:start="211:17" pos:end="211:58"><expr pos:start="211:17" pos:end="211:57"><call pos:start="211:17" pos:end="211:57"><name pos:start="211:17" pos:end="211:26">extra_func</name><argument_list pos:start="211:27" pos:end="211:57">(<argument pos:start="211:28" pos:end="211:28"><expr pos:start="211:28" pos:end="211:28"><name pos:start="211:28" pos:end="211:28">s</name></expr></argument>, <argument pos:start="211:31" pos:end="211:33"><expr pos:start="211:31" pos:end="211:33"><name pos:start="211:31" pos:end="211:33">pbx</name></expr></argument>, <argument pos:start="211:36" pos:end="211:39"><expr pos:start="211:36" pos:end="211:39"><name pos:start="211:36" pos:end="211:39">tlen</name></expr></argument>, <argument pos:start="211:42" pos:end="211:44"><expr pos:start="211:42" pos:end="211:44"><name pos:start="211:42" pos:end="211:44">tag</name></expr></argument>, <argument pos:start="211:47" pos:end="211:56"><expr pos:start="211:47" pos:end="211:56"><name pos:start="211:47" pos:end="211:56">extra_meta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if>

        <if type="elseif" pos:start="215:9" pos:end="225:9">else if <condition pos:start="215:17" pos:end="215:25">(<expr pos:start="215:18" pos:end="215:24"><operator pos:start="215:18" pos:end="215:18">!</operator><name pos:start="215:19" pos:end="215:24"><name pos:start="215:19" pos:end="215:21">tag</name><index pos:start="215:22" pos:end="215:24">[<expr pos:start="215:23" pos:end="215:23"><literal type="number" pos:start="215:23" pos:end="215:23">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="215:27" pos:end="225:9">{<block_content pos:start="217:13" pos:end="223:18">

            <if_stmt pos:start="217:13" pos:end="219:80"><if pos:start="217:13" pos:end="219:80">if <condition pos:start="217:16" pos:end="217:23">(<expr pos:start="217:17" pos:end="217:22"><name pos:start="217:17" pos:end="217:22"><name pos:start="217:17" pos:end="217:19">tag</name><index pos:start="217:20" pos:end="217:22">[<expr pos:start="217:21" pos:end="217:21"><literal type="number" pos:start="217:21" pos:end="217:21">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="219:17" pos:end="219:80"><block_content pos:start="219:17" pos:end="219:80">

                <expr_stmt pos:start="219:17" pos:end="219:80"><expr pos:start="219:17" pos:end="219:79"><call pos:start="219:17" pos:end="219:79"><name pos:start="219:17" pos:end="219:22">av_log</name><argument_list pos:start="219:23" pos:end="219:79">(<argument pos:start="219:24" pos:end="219:24"><expr pos:start="219:24" pos:end="219:24"><name pos:start="219:24" pos:end="219:24">s</name></expr></argument>, <argument pos:start="219:27" pos:end="219:40"><expr pos:start="219:27" pos:end="219:40"><name pos:start="219:27" pos:end="219:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="219:43" pos:end="219:78"><expr pos:start="219:43" pos:end="219:78"><literal type="string" pos:start="219:43" pos:end="219:78">"invalid frame id, assuming padding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:35"><expr pos:start="221:13" pos:end="221:34"><call pos:start="221:13" pos:end="221:34"><name pos:start="221:13" pos:end="221:21">avio_skip</name><argument_list pos:start="221:22" pos:end="221:34">(<argument pos:start="221:23" pos:end="221:27"><expr pos:start="221:23" pos:end="221:27"><name pos:start="221:23" pos:end="221:27"><name pos:start="221:23" pos:end="221:23">s</name><operator pos:start="221:24" pos:end="221:25">-&gt;</operator><name pos:start="221:26" pos:end="221:27">pb</name></name></expr></argument>, <argument pos:start="221:30" pos:end="221:33"><expr pos:start="221:30" pos:end="221:33"><name pos:start="221:30" pos:end="221:33">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="223:13" pos:end="223:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="227:9" pos:end="227:32">/* Skip to end of tag */</comment>

<label pos:start="229:1" pos:end="229:5"><name pos:start="229:1" pos:end="229:4">seek</name>:</label>

        <expr_stmt pos:start="231:9" pos:end="231:41"><expr pos:start="231:9" pos:end="231:40"><call pos:start="231:9" pos:end="231:40"><name pos:start="231:9" pos:end="231:17">avio_seek</name><argument_list pos:start="231:18" pos:end="231:40">(<argument pos:start="231:19" pos:end="231:23"><expr pos:start="231:19" pos:end="231:23"><name pos:start="231:19" pos:end="231:23"><name pos:start="231:19" pos:end="231:19">s</name><operator pos:start="231:20" pos:end="231:21">-&gt;</operator><name pos:start="231:22" pos:end="231:23">pb</name></name></expr></argument>, <argument pos:start="231:26" pos:end="231:29"><expr pos:start="231:26" pos:end="231:29"><name pos:start="231:26" pos:end="231:29">next</name></expr></argument>, <argument pos:start="231:32" pos:end="231:39"><expr pos:start="231:32" pos:end="231:39"><name pos:start="231:32" pos:end="231:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="237:5" pos:end="239:18"><if pos:start="237:5" pos:end="239:18">if <condition pos:start="237:8" pos:end="237:37">(<expr pos:start="237:9" pos:end="237:36"><name pos:start="237:9" pos:end="237:15">version</name> <operator pos:start="237:17" pos:end="237:18">==</operator> <literal type="number" pos:start="237:20" pos:end="237:20">4</literal> <operator pos:start="237:22" pos:end="237:23">&amp;&amp;</operator> <name pos:start="237:25" pos:end="237:29">flags</name> <operator pos:start="237:31" pos:end="237:31">&amp;</operator> <literal type="number" pos:start="237:33" pos:end="237:36">0x10</literal></expr>)</condition><block type="pseudo" pos:start="239:9" pos:end="239:18"><block_content pos:start="239:9" pos:end="239:18"> <comment type="block" pos:start="237:39" pos:end="237:88">/* Footer preset, always 10 bytes, skip over it */</comment>

        <expr_stmt pos:start="239:9" pos:end="239:18"><expr pos:start="239:9" pos:end="239:17"><name pos:start="239:9" pos:end="239:11">end</name> <operator pos:start="239:13" pos:end="239:14">+=</operator> <literal type="number" pos:start="239:16" pos:end="239:17">10</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



  <label pos:start="243:3" pos:end="243:8"><name pos:start="243:3" pos:end="243:7">error</name>:</label>

    <if_stmt pos:start="245:5" pos:end="247:92"><if pos:start="245:5" pos:end="247:92">if <condition pos:start="245:8" pos:end="245:15">(<expr pos:start="245:9" pos:end="245:14"><name pos:start="245:9" pos:end="245:14">reason</name></expr>)</condition><block type="pseudo" pos:start="247:9" pos:end="247:92"><block_content pos:start="247:9" pos:end="247:92">

        <expr_stmt pos:start="247:9" pos:end="247:92"><expr pos:start="247:9" pos:end="247:91"><call pos:start="247:9" pos:end="247:91"><name pos:start="247:9" pos:end="247:14">av_log</name><argument_list pos:start="247:15" pos:end="247:91">(<argument pos:start="247:16" pos:end="247:16"><expr pos:start="247:16" pos:end="247:16"><name pos:start="247:16" pos:end="247:16">s</name></expr></argument>, <argument pos:start="247:19" pos:end="247:29"><expr pos:start="247:19" pos:end="247:29"><name pos:start="247:19" pos:end="247:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="247:32" pos:end="247:73"><expr pos:start="247:32" pos:end="247:73"><literal type="string" pos:start="247:32" pos:end="247:73">"ID3v2.%d tag skipped, cannot handle %s\n"</literal></expr></argument>, <argument pos:start="247:76" pos:end="247:82"><expr pos:start="247:76" pos:end="247:82"><name pos:start="247:76" pos:end="247:82">version</name></expr></argument>, <argument pos:start="247:85" pos:end="247:90"><expr pos:start="247:85" pos:end="247:90"><name pos:start="247:85" pos:end="247:90">reason</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:36"><expr pos:start="249:5" pos:end="249:35"><call pos:start="249:5" pos:end="249:35"><name pos:start="249:5" pos:end="249:13">avio_seek</name><argument_list pos:start="249:14" pos:end="249:35">(<argument pos:start="249:15" pos:end="249:19"><expr pos:start="249:15" pos:end="249:19"><name pos:start="249:15" pos:end="249:19"><name pos:start="249:15" pos:end="249:15">s</name><operator pos:start="249:16" pos:end="249:17">-&gt;</operator><name pos:start="249:18" pos:end="249:19">pb</name></name></expr></argument>, <argument pos:start="249:22" pos:end="249:24"><expr pos:start="249:22" pos:end="249:24"><name pos:start="249:22" pos:end="249:24">end</name></expr></argument>, <argument pos:start="249:27" pos:end="249:34"><expr pos:start="249:27" pos:end="249:34"><name pos:start="249:27" pos:end="249:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:20"><expr pos:start="251:5" pos:end="251:19"><call pos:start="251:5" pos:end="251:19"><name pos:start="251:5" pos:end="251:11">av_free</name><argument_list pos:start="251:12" pos:end="251:19">(<argument pos:start="251:13" pos:end="251:18"><expr pos:start="251:13" pos:end="251:18"><name pos:start="251:13" pos:end="251:18">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="253:5" pos:end="253:11">return;</return>

</block_content>}</block></function>
</unit>
