<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9451.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:34">virtio_read_config</name><parameter_list pos:start="1:35" pos:end="3:61">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:44">PCIDevice</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:53">pci_dev</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:51"><decl pos:start="3:36" pos:end="3:51"><type pos:start="3:36" pos:end="3:51"><name pos:start="3:36" pos:end="3:43">uint32_t</name></type> <name pos:start="3:45" pos:end="3:51">address</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:60"><decl pos:start="3:54" pos:end="3:60"><type pos:start="3:54" pos:end="3:60"><name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:60">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:58">

    <decl_stmt pos:start="7:5" pos:end="7:72"><decl pos:start="7:5" pos:end="7:71"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtIOPCIProxy</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">proxy</name> <init pos:start="7:27" pos:end="7:71">= <expr pos:start="7:29" pos:end="7:71"><call pos:start="7:29" pos:end="7:71"><name pos:start="7:29" pos:end="7:37">DO_UPCAST</name><argument_list pos:start="7:38" pos:end="7:71">(<argument pos:start="7:39" pos:end="7:52"><expr pos:start="7:39" pos:end="7:52"><name pos:start="7:39" pos:end="7:52">VirtIOPCIProxy</name></expr></argument>, <argument pos:start="7:55" pos:end="7:61"><expr pos:start="7:55" pos:end="7:61"><name pos:start="7:55" pos:end="7:61">pci_dev</name></expr></argument>, <argument pos:start="7:64" pos:end="7:70"><expr pos:start="7:64" pos:end="7:70"><name pos:start="7:64" pos:end="7:70">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:29">virtio_pci_cfg_cap</name></name> <modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:34">cfg</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="43:5"><if pos:start="13:5" pos:end="43:5">if <condition pos:start="13:8" pos:end="19:49">(<expr pos:start="13:9" pos:end="19:48"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:13">proxy</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:25">config_cap</name></name> <operator pos:start="13:27" pos:end="13:28">&amp;&amp;</operator>

        <call pos:start="15:9" pos:end="19:48"><name pos:start="15:9" pos:end="15:22">ranges_overlap</name><argument_list pos:start="15:23" pos:end="19:48">(<argument pos:start="15:24" pos:end="15:30"><expr pos:start="15:24" pos:end="15:30"><name pos:start="15:24" pos:end="15:30">address</name></expr></argument>, <argument pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><name pos:start="15:33" pos:end="15:35">len</name></expr></argument>, <argument pos:start="15:38" pos:end="17:79"><expr pos:start="15:38" pos:end="17:79"><name pos:start="15:38" pos:end="15:54"><name pos:start="15:38" pos:end="15:42">proxy</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:54">config_cap</name></name> <operator pos:start="15:56" pos:end="15:56">+</operator> <call pos:start="15:58" pos:end="17:79"><name pos:start="15:58" pos:end="15:65">offsetof</name><argument_list pos:start="15:66" pos:end="17:79">(<argument pos:start="15:67" pos:end="15:91"><expr pos:start="15:67" pos:end="15:91">struct <name pos:start="15:74" pos:end="15:91">virtio_pci_cfg_cap</name></expr></argument>,

                                                                  <argument pos:start="17:67" pos:end="17:78"><expr pos:start="17:67" pos:end="17:78"><name pos:start="17:67" pos:end="17:78">pci_cfg_data</name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="19:24" pos:end="19:47"><expr pos:start="19:24" pos:end="19:47"><sizeof pos:start="19:24" pos:end="19:47">sizeof <name pos:start="19:31" pos:end="19:47"><name pos:start="19:31" pos:end="19:33">cfg</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:47">pci_cfg_data</name></name></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:51" pos:end="43:5">{<block_content pos:start="21:9" pos:end="41:9">

        <decl_stmt pos:start="21:9" pos:end="21:21"><decl pos:start="21:9" pos:end="21:20"><type pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:16">uint32_t</name></type> <name pos:start="21:18" pos:end="21:20">off</name></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:21"><decl pos:start="23:9" pos:end="23:20"><type pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">uint32_t</name></type> <name pos:start="23:18" pos:end="23:20">len</name></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:66"><expr pos:start="27:9" pos:end="27:65"><name pos:start="27:9" pos:end="27:11">cfg</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <operator pos:start="27:15" pos:end="27:15">(</operator><name pos:start="27:16" pos:end="27:19">void</name> <operator pos:start="27:21" pos:end="27:21">*</operator><operator pos:start="27:22" pos:end="27:22">)</operator><operator pos:start="27:23" pos:end="27:23">(</operator><name pos:start="27:24" pos:end="27:44"><name pos:start="27:24" pos:end="27:28">proxy</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:37">pci_dev</name><operator pos:start="27:38" pos:end="27:38">.</operator><name pos:start="27:39" pos:end="27:44">config</name></name> <operator pos:start="27:46" pos:end="27:46">+</operator> <name pos:start="27:48" pos:end="27:64"><name pos:start="27:48" pos:end="27:52">proxy</name><operator pos:start="27:53" pos:end="27:54">-&gt;</operator><name pos:start="27:55" pos:end="27:64">config_cap</name></name><operator pos:start="27:65" pos:end="27:65">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:11">off</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:42"><name pos:start="29:15" pos:end="29:25">le32_to_cpu</name><argument_list pos:start="29:26" pos:end="29:42">(<argument pos:start="29:27" pos:end="29:41"><expr pos:start="29:27" pos:end="29:41"><name pos:start="29:27" pos:end="29:41"><name pos:start="29:27" pos:end="29:29">cfg</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:34">cap</name><operator pos:start="29:35" pos:end="29:35">.</operator><name pos:start="29:36" pos:end="29:41">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:43"><expr pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:11">len</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:42"><name pos:start="31:15" pos:end="31:25">le32_to_cpu</name><argument_list pos:start="31:26" pos:end="31:42">(<argument pos:start="31:27" pos:end="31:41"><expr pos:start="31:27" pos:end="31:41"><name pos:start="31:27" pos:end="31:41"><name pos:start="31:27" pos:end="31:29">cfg</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:34">cap</name><operator pos:start="31:35" pos:end="31:35">.</operator><name pos:start="31:36" pos:end="31:41">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:44">(<expr pos:start="35:13" pos:end="35:43"><name pos:start="35:13" pos:end="35:15">len</name> <operator pos:start="35:17" pos:end="35:18">&lt;=</operator> <sizeof pos:start="35:20" pos:end="35:43">sizeof <name pos:start="35:27" pos:end="35:43"><name pos:start="35:27" pos:end="35:29">cfg</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:43">pci_cfg_data</name></name></sizeof></expr>)</condition> <block pos:start="35:46" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:62">

            <expr_stmt pos:start="37:13" pos:end="39:62"><expr pos:start="37:13" pos:end="39:61"><call pos:start="37:13" pos:end="39:61"><name pos:start="37:13" pos:end="37:37">virtio_address_space_read</name><argument_list pos:start="37:38" pos:end="39:61">(<argument pos:start="37:39" pos:end="37:55"><expr pos:start="37:39" pos:end="37:55"><operator pos:start="37:39" pos:end="37:39">&amp;</operator><name pos:start="37:40" pos:end="37:55"><name pos:start="37:40" pos:end="37:44">proxy</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:55">modern_as</name></name></expr></argument>, <argument pos:start="37:58" pos:end="37:60"><expr pos:start="37:58" pos:end="37:60"><name pos:start="37:58" pos:end="37:60">off</name></expr></argument>,

                                      <argument pos:start="39:39" pos:end="39:55"><expr pos:start="39:39" pos:end="39:55"><name pos:start="39:39" pos:end="39:55"><name pos:start="39:39" pos:end="39:41">cfg</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:55">pci_cfg_data</name></name></expr></argument>, <argument pos:start="39:58" pos:end="39:60"><expr pos:start="39:58" pos:end="39:60"><name pos:start="39:58" pos:end="39:60">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="47:5" pos:end="47:58">return <expr pos:start="47:12" pos:end="47:57"><call pos:start="47:12" pos:end="47:57"><name pos:start="47:12" pos:end="47:34">pci_default_read_config</name><argument_list pos:start="47:35" pos:end="47:57">(<argument pos:start="47:36" pos:end="47:42"><expr pos:start="47:36" pos:end="47:42"><name pos:start="47:36" pos:end="47:42">pci_dev</name></expr></argument>, <argument pos:start="47:45" pos:end="47:51"><expr pos:start="47:45" pos:end="47:51"><name pos:start="47:45" pos:end="47:51">address</name></expr></argument>, <argument pos:start="47:54" pos:end="47:56"><expr pos:start="47:54" pos:end="47:56"><name pos:start="47:54" pos:end="47:56">len</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
