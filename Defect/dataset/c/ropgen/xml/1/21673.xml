<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21673.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">gt64120_pci_mapping</name><parameter_list pos:start="1:32" pos:end="1:48">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:44">GT64120State</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:5">

    <comment type="block" pos:start="5:5" pos:end="5:27">/* Update IO mapping */</comment>

    <if_stmt pos:start="7:5" pos:end="33:5"><if pos:start="7:5" pos:end="33:5">if <condition pos:start="7:8" pos:end="7:62">(<expr pos:start="7:9" pos:end="7:61"><operator pos:start="7:9" pos:end="7:9">(</operator><name pos:start="7:10" pos:end="7:29"><name pos:start="7:10" pos:end="7:10">s</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:16">regs</name><index pos:start="7:17" pos:end="7:29">[<expr pos:start="7:18" pos:end="7:28"><name pos:start="7:18" pos:end="7:28">GT_PCI0IOLD</name></expr>]</index></name> <operator pos:start="7:31" pos:end="7:31">&amp;</operator> <literal type="number" pos:start="7:33" pos:end="7:36">0x7f</literal><operator pos:start="7:37" pos:end="7:37">)</operator> <operator pos:start="7:39" pos:end="7:40">&lt;=</operator> <name pos:start="7:42" pos:end="7:61"><name pos:start="7:42" pos:end="7:42">s</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:48">regs</name><index pos:start="7:49" pos:end="7:61">[<expr pos:start="7:50" pos:end="7:60"><name pos:start="7:50" pos:end="7:60">GT_PCI0IOHD</name></expr>]</index></name></expr>)</condition>

    <block pos:start="9:5" pos:end="33:5">{<block_content pos:start="13:7" pos:end="31:55">

      <comment type="block" pos:start="11:7" pos:end="11:32">/* Unmap old IO address */</comment>

      <if_stmt pos:start="13:7" pos:end="21:7"><if pos:start="13:7" pos:end="21:7">if <condition pos:start="13:10" pos:end="13:27">(<expr pos:start="13:11" pos:end="13:26"><name pos:start="13:11" pos:end="13:26"><name pos:start="13:11" pos:end="13:11">s</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:26">PCI0IO_length</name></name></expr>)</condition>

      <block pos:start="15:7" pos:end="21:7">{<block_content pos:start="17:11" pos:end="19:48">

          <expr_stmt pos:start="17:11" pos:end="17:75"><expr pos:start="17:11" pos:end="17:74"><call pos:start="17:11" pos:end="17:74"><name pos:start="17:11" pos:end="17:37">memory_region_del_subregion</name><argument_list pos:start="17:38" pos:end="17:74">(<argument pos:start="17:39" pos:end="17:57"><expr pos:start="17:39" pos:end="17:57"><call pos:start="17:39" pos:end="17:57"><name pos:start="17:39" pos:end="17:55">get_system_memory</name><argument_list pos:start="17:56" pos:end="17:57">()</argument_list></call></expr></argument>, <argument pos:start="17:60" pos:end="17:73"><expr pos:start="17:60" pos:end="17:73"><operator pos:start="17:60" pos:end="17:60">&amp;</operator><name pos:start="17:61" pos:end="17:73"><name pos:start="17:61" pos:end="17:61">s</name><operator pos:start="17:62" pos:end="17:63">-&gt;</operator><name pos:start="17:64" pos:end="17:73">PCI0IO_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

          <expr_stmt pos:start="19:11" pos:end="19:48"><expr pos:start="19:11" pos:end="19:47"><call pos:start="19:11" pos:end="19:47"><name pos:start="19:11" pos:end="19:31">memory_region_destroy</name><argument_list pos:start="19:32" pos:end="19:47">(<argument pos:start="19:33" pos:end="19:46"><expr pos:start="19:33" pos:end="19:46"><operator pos:start="19:33" pos:end="19:33">&amp;</operator><name pos:start="19:34" pos:end="19:46"><name pos:start="19:34" pos:end="19:34">s</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:46">PCI0IO_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></if></if_stmt>

      <comment type="block" pos:start="23:7" pos:end="23:30">/* Map new IO address */</comment>

      <expr_stmt pos:start="25:7" pos:end="25:51"><expr pos:start="25:7" pos:end="25:50"><name pos:start="25:7" pos:end="25:21"><name pos:start="25:7" pos:end="25:7">s</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:21">PCI0IO_start</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:44"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:31">regs</name><index pos:start="25:32" pos:end="25:44">[<expr pos:start="25:33" pos:end="25:43"><name pos:start="25:33" pos:end="25:43">GT_PCI0IOLD</name></expr>]</index></name> <operator pos:start="25:46" pos:end="25:47">&lt;&lt;</operator> <literal type="number" pos:start="25:49" pos:end="25:50">21</literal></expr>;</expr_stmt>

      <expr_stmt pos:start="27:7" pos:end="27:92"><expr pos:start="27:7" pos:end="27:91"><name pos:start="27:7" pos:end="27:22"><name pos:start="27:7" pos:end="27:7">s</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:22">PCI0IO_length</name></name> <operator pos:start="27:24" pos:end="27:24">=</operator> <operator pos:start="27:26" pos:end="27:26">(</operator><operator pos:start="27:27" pos:end="27:27">(</operator><name pos:start="27:28" pos:end="27:47"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:34">regs</name><index pos:start="27:35" pos:end="27:47">[<expr pos:start="27:36" pos:end="27:46"><name pos:start="27:36" pos:end="27:46">GT_PCI0IOHD</name></expr>]</index></name> <operator pos:start="27:49" pos:end="27:49">+</operator> <literal type="number" pos:start="27:51" pos:end="27:51">1</literal><operator pos:start="27:52" pos:end="27:52">)</operator> <operator pos:start="27:54" pos:end="27:54">-</operator> <operator pos:start="27:56" pos:end="27:56">(</operator><name pos:start="27:57" pos:end="27:76"><name pos:start="27:57" pos:end="27:57">s</name><operator pos:start="27:58" pos:end="27:59">-&gt;</operator><name pos:start="27:60" pos:end="27:63">regs</name><index pos:start="27:64" pos:end="27:76">[<expr pos:start="27:65" pos:end="27:75"><name pos:start="27:65" pos:end="27:75">GT_PCI0IOLD</name></expr>]</index></name> <operator pos:start="27:78" pos:end="27:78">&amp;</operator> <literal type="number" pos:start="27:80" pos:end="27:83">0x7f</literal><operator pos:start="27:84" pos:end="27:84">)</operator><operator pos:start="27:85" pos:end="27:85">)</operator> <operator pos:start="27:87" pos:end="27:88">&lt;&lt;</operator> <literal type="number" pos:start="27:90" pos:end="27:91">21</literal></expr>;</expr_stmt>

      <expr_stmt pos:start="29:7" pos:end="29:37"><expr pos:start="29:7" pos:end="29:36"><name pos:start="29:7" pos:end="29:18">isa_mem_base</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:36"><name pos:start="29:22" pos:end="29:22">s</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:36">PCI0IO_start</name></name></expr>;</expr_stmt>

      <expr_stmt pos:start="31:7" pos:end="31:55"><expr pos:start="31:7" pos:end="31:54"><call pos:start="31:7" pos:end="31:54"><name pos:start="31:7" pos:end="31:19">isa_mmio_init</name><argument_list pos:start="31:20" pos:end="31:54">(<argument pos:start="31:21" pos:end="31:35"><expr pos:start="31:21" pos:end="31:35"><name pos:start="31:21" pos:end="31:35"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:35">PCI0IO_start</name></name></expr></argument>, <argument pos:start="31:38" pos:end="31:53"><expr pos:start="31:38" pos:end="31:53"><name pos:start="31:38" pos:end="31:53"><name pos:start="31:38" pos:end="31:38">s</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:53">PCI0IO_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
