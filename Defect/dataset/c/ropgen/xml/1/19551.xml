<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19551.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">parse_dsd_diin</name><parameter_list pos:start="1:26" pos:end="1:73">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:54">AVStream</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">st</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:68">uint64_t</name></type> <name pos:start="1:70" pos:end="1:72">eof</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="51:5">while <condition pos:start="9:11" pos:end="9:37">(<expr pos:start="9:12" pos:end="9:36"><call pos:start="9:12" pos:end="9:24"><name pos:start="9:12" pos:end="9:20">avio_tell</name><argument_list pos:start="9:21" pos:end="9:24">(<argument pos:start="9:22" pos:end="9:23"><expr pos:start="9:22" pos:end="9:23"><name pos:start="9:22" pos:end="9:23">pb</name></expr></argument>)</argument_list></call> <operator pos:start="9:26" pos:end="9:26">+</operator> <literal type="number" pos:start="9:28" pos:end="9:29">12</literal> <operator pos:start="9:31" pos:end="9:32">&lt;=</operator> <name pos:start="9:34" pos:end="9:36">eof</name></expr>)</condition> <block pos:start="9:39" pos:end="51:5">{<block_content pos:start="11:9" pos:end="49:70">

        <decl_stmt pos:start="11:9" pos:end="11:42"><decl pos:start="11:9" pos:end="11:41"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">uint32_t</name></type> <name pos:start="11:18" pos:end="11:20">tag</name>      <init pos:start="11:27" pos:end="11:41">= <expr pos:start="11:29" pos:end="11:41"><call pos:start="11:29" pos:end="11:41"><name pos:start="11:29" pos:end="11:37">avio_rl32</name><argument_list pos:start="11:38" pos:end="11:41">(<argument pos:start="11:39" pos:end="11:40"><expr pos:start="11:39" pos:end="11:40"><name pos:start="11:39" pos:end="11:40">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:42"><decl pos:start="13:9" pos:end="13:41"><type pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:16">uint64_t</name></type> <name pos:start="13:18" pos:end="13:21">size</name>     <init pos:start="13:27" pos:end="13:41">= <expr pos:start="13:29" pos:end="13:41"><call pos:start="13:29" pos:end="13:41"><name pos:start="13:29" pos:end="13:37">avio_rb64</name><argument_list pos:start="13:38" pos:end="13:41">(<argument pos:start="13:39" pos:end="13:40"><expr pos:start="13:39" pos:end="13:40"><name pos:start="13:39" pos:end="13:40">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:42"><decl pos:start="15:9" pos:end="15:41"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">uint64_t</name></type> <name pos:start="15:18" pos:end="15:25">orig_pos</name> <init pos:start="15:27" pos:end="15:41">= <expr pos:start="15:29" pos:end="15:41"><call pos:start="15:29" pos:end="15:41"><name pos:start="15:29" pos:end="15:37">avio_tell</name><argument_list pos:start="15:38" pos:end="15:41">(<argument pos:start="15:39" pos:end="15:40"><expr pos:start="15:39" pos:end="15:40"><name pos:start="15:39" pos:end="15:40">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:41"><decl pos:start="17:9" pos:end="17:40"><type pos:start="17:9" pos:end="17:20"><specifier pos:start="17:9" pos:end="17:13">const</specifier> <name pos:start="17:15" pos:end="17:18">char</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type> <name pos:start="17:22" pos:end="17:33">metadata_tag</name> <init pos:start="17:35" pos:end="17:40">= <expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">NULL</name></expr></init></decl>;</decl_stmt>



        <switch pos:start="21:9" pos:end="27:9">switch<condition pos:start="21:15" pos:end="21:19">(<expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">tag</name></expr>)</condition> <block pos:start="21:21" pos:end="27:9">{<block_content pos:start="23:9" pos:end="25:68">

        <case pos:start="23:9" pos:end="23:36">case <expr pos:start="23:14" pos:end="23:35"><call pos:start="23:14" pos:end="23:35"><name pos:start="23:14" pos:end="23:18">MKTAG</name><argument_list pos:start="23:19" pos:end="23:35">(<argument pos:start="23:20" pos:end="23:22"><expr pos:start="23:20" pos:end="23:22"><literal type="char" pos:start="23:20" pos:end="23:22">'D'</literal></expr></argument>,<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><literal type="char" pos:start="23:24" pos:end="23:26">'I'</literal></expr></argument>,<argument pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><literal type="char" pos:start="23:28" pos:end="23:30">'A'</literal></expr></argument>,<argument pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><literal type="char" pos:start="23:32" pos:end="23:34">'R'</literal></expr></argument>)</argument_list></call></expr>:</case> <expr_stmt pos:start="23:38" pos:end="23:61"><expr pos:start="23:38" pos:end="23:60"><name pos:start="23:38" pos:end="23:49">metadata_tag</name> <operator pos:start="23:51" pos:end="23:51">=</operator> <literal type="string" pos:start="23:53" pos:end="23:60">"artist"</literal></expr>;</expr_stmt> <break pos:start="23:63" pos:end="23:68">break;</break>

        <case pos:start="25:9" pos:end="25:36">case <expr pos:start="25:14" pos:end="25:35"><call pos:start="25:14" pos:end="25:35"><name pos:start="25:14" pos:end="25:18">MKTAG</name><argument_list pos:start="25:19" pos:end="25:35">(<argument pos:start="25:20" pos:end="25:22"><expr pos:start="25:20" pos:end="25:22"><literal type="char" pos:start="25:20" pos:end="25:22">'D'</literal></expr></argument>,<argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><literal type="char" pos:start="25:24" pos:end="25:26">'I'</literal></expr></argument>,<argument pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><literal type="char" pos:start="25:28" pos:end="25:30">'T'</literal></expr></argument>,<argument pos:start="25:32" pos:end="25:34"><expr pos:start="25:32" pos:end="25:34"><literal type="char" pos:start="25:32" pos:end="25:34">'I'</literal></expr></argument>)</argument_list></call></expr>:</case> <expr_stmt pos:start="25:38" pos:end="25:60"><expr pos:start="25:38" pos:end="25:59"><name pos:start="25:38" pos:end="25:49">metadata_tag</name> <operator pos:start="25:51" pos:end="25:51">=</operator> <literal type="string" pos:start="25:53" pos:end="25:59">"title"</literal></expr>;</expr_stmt>  <break pos:start="25:63" pos:end="25:68">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="31:9" pos:end="45:9"><if pos:start="31:9" pos:end="45:9">if <condition pos:start="31:12" pos:end="31:37">(<expr pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:24">metadata_tag</name> <operator pos:start="31:26" pos:end="31:27">&amp;&amp;</operator> <name pos:start="31:29" pos:end="31:32">size</name> <operator pos:start="31:34" pos:end="31:34">&gt;</operator> <literal type="number" pos:start="31:36" pos:end="31:36">4</literal></expr>)</condition> <block pos:start="31:39" pos:end="45:9">{<block_content pos:start="33:13" pos:end="43:13">

            <decl_stmt pos:start="33:13" pos:end="33:50"><decl pos:start="33:13" pos:end="33:49"><type pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:20">unsigned</name> <name pos:start="33:22" pos:end="33:24">int</name></type> <name pos:start="33:26" pos:end="33:33">tag_size</name> <init pos:start="33:35" pos:end="33:49">= <expr pos:start="33:37" pos:end="33:49"><call pos:start="33:37" pos:end="33:49"><name pos:start="33:37" pos:end="33:45">avio_rb32</name><argument_list pos:start="33:46" pos:end="33:49">(<argument pos:start="33:47" pos:end="33:48"><expr pos:start="33:47" pos:end="33:48"><name pos:start="33:47" pos:end="33:48">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:79"><decl pos:start="35:13" pos:end="35:78"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:19">ret</name> <init pos:start="35:21" pos:end="35:78">= <expr pos:start="35:23" pos:end="35:78"><call pos:start="35:23" pos:end="35:78"><name pos:start="35:23" pos:end="35:34">get_metadata</name><argument_list pos:start="35:35" pos:end="35:78">(<argument pos:start="35:36" pos:end="35:36"><expr pos:start="35:36" pos:end="35:36"><name pos:start="35:36" pos:end="35:36">s</name></expr></argument>, <argument pos:start="35:39" pos:end="35:50"><expr pos:start="35:39" pos:end="35:50"><name pos:start="35:39" pos:end="35:50">metadata_tag</name></expr></argument>, <argument pos:start="35:53" pos:end="35:77"><expr pos:start="35:53" pos:end="35:77"><call pos:start="35:53" pos:end="35:77"><name pos:start="35:53" pos:end="35:57">FFMIN</name><argument_list pos:start="35:58" pos:end="35:77">(<argument pos:start="35:59" pos:end="35:66"><expr pos:start="35:59" pos:end="35:66"><name pos:start="35:59" pos:end="35:66">tag_size</name></expr></argument>, <argument pos:start="35:69" pos:end="35:76"><expr pos:start="35:69" pos:end="35:76"><name pos:start="35:69" pos:end="35:72">size</name> <operator pos:start="35:74" pos:end="35:74">-</operator> <literal type="number" pos:start="35:76" pos:end="35:76">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="37:13" pos:end="43:13"><if pos:start="37:13" pos:end="43:13">if <condition pos:start="37:16" pos:end="37:24">(<expr pos:start="37:17" pos:end="37:23"><name pos:start="37:17" pos:end="37:19">ret</name> <operator pos:start="37:21" pos:end="37:21">&lt;</operator> <literal type="number" pos:start="37:23" pos:end="37:23">0</literal></expr>)</condition> <block pos:start="37:26" pos:end="43:13">{<block_content pos:start="39:17" pos:end="41:27">

                <expr_stmt pos:start="39:17" pos:end="39:92"><expr pos:start="39:17" pos:end="39:91"><call pos:start="39:17" pos:end="39:91"><name pos:start="39:17" pos:end="39:22">av_log</name><argument_list pos:start="39:23" pos:end="39:91">(<argument pos:start="39:24" pos:end="39:24"><expr pos:start="39:24" pos:end="39:24"><name pos:start="39:24" pos:end="39:24">s</name></expr></argument>, <argument pos:start="39:27" pos:end="39:38"><expr pos:start="39:27" pos:end="39:38"><name pos:start="39:27" pos:end="39:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:41" pos:end="39:76"><expr pos:start="39:41" pos:end="39:76"><literal type="string" pos:start="39:41" pos:end="39:76">"cannot allocate metadata tag %s!\n"</literal></expr></argument>, <argument pos:start="39:79" pos:end="39:90"><expr pos:start="39:79" pos:end="39:90"><name pos:start="39:79" pos:end="39:90">metadata_tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="41:17" pos:end="41:27">return <expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:70"><expr pos:start="49:9" pos:end="49:69"><call pos:start="49:9" pos:end="49:69"><name pos:start="49:9" pos:end="49:17">avio_skip</name><argument_list pos:start="49:18" pos:end="49:69">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">pb</name></expr></argument>, <argument pos:start="49:23" pos:end="49:68"><expr pos:start="49:23" pos:end="49:68"><name pos:start="49:23" pos:end="49:26">size</name> <operator pos:start="49:28" pos:end="49:28">-</operator> <operator pos:start="49:30" pos:end="49:30">(</operator><call pos:start="49:31" pos:end="49:43"><name pos:start="49:31" pos:end="49:39">avio_tell</name><argument_list pos:start="49:40" pos:end="49:43">(<argument pos:start="49:41" pos:end="49:42"><expr pos:start="49:41" pos:end="49:42"><name pos:start="49:41" pos:end="49:42">pb</name></expr></argument>)</argument_list></call> <operator pos:start="49:45" pos:end="49:45">-</operator> <name pos:start="49:47" pos:end="49:54">orig_pos</name><operator pos:start="49:55" pos:end="49:55">)</operator> <operator pos:start="49:57" pos:end="49:57">+</operator> <operator pos:start="49:59" pos:end="49:59">(</operator><name pos:start="49:60" pos:end="49:63">size</name> <operator pos:start="49:65" pos:end="49:65">&amp;</operator> <literal type="number" pos:start="49:67" pos:end="49:67">1</literal><operator pos:start="49:68" pos:end="49:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
