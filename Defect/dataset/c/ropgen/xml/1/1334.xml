<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1334.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">put_psr</name><parameter_list pos:start="1:20" pos:end="1:37">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:32"><name pos:start="1:21" pos:end="1:32">target_ulong</name></type> <name pos:start="1:34" pos:end="1:36">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:29">

    <expr_stmt pos:start="5:5" pos:end="5:29"><expr pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:7">env</name><operator pos:start="5:8" pos:end="5:9">-&gt;</operator><name pos:start="5:10" pos:end="5:12">psr</name></name> <operator pos:start="5:14" pos:end="5:14">=</operator> <name pos:start="5:16" pos:end="5:18">val</name> <operator pos:start="5:20" pos:end="5:20">&amp;</operator> <name pos:start="5:22" pos:end="5:28">PSR_ICC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:39"><expr pos:start="7:5" pos:end="7:38"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:7">env</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:14">psref</name></name> <operator pos:start="7:16" pos:end="7:16">=</operator> <ternary pos:start="7:18" pos:end="7:38"><condition pos:start="7:18" pos:end="7:32"><expr pos:start="7:18" pos:end="7:31"><operator pos:start="7:18" pos:end="7:18">(</operator><name pos:start="7:19" pos:end="7:21">val</name> <operator pos:start="7:23" pos:end="7:23">&amp;</operator> <name pos:start="7:25" pos:end="7:30">PSR_EF</name><operator pos:start="7:31" pos:end="7:31">)</operator></expr>?</condition><then pos:start="7:34" pos:end="7:34"> <expr pos:start="7:34" pos:end="7:34"><literal type="number" pos:start="7:34" pos:end="7:34">1</literal></expr> </then><else pos:start="7:36" pos:end="7:38">: <expr pos:start="7:38" pos:end="7:38"><literal type="number" pos:start="7:38" pos:end="7:38">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="12:0"><expr pos:start="9:5" pos:end="9:38"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:7">env</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:15">psrpil</name></name> <operator pos:start="9:17" pos:end="9:17">=</operator> <operator pos:start="9:19" pos:end="9:19">(</operator><name pos:start="9:20" pos:end="9:22">val</name> <operator pos:start="9:24" pos:end="9:24">&amp;</operator> <name pos:start="9:26" pos:end="9:32">PSR_PIL</name><operator pos:start="9:33" pos:end="9:33">)</operator> <operator pos:start="9:35" pos:end="9:36">&gt;&gt;</operator> <literal type="number" pos:start="9:38" pos:end="9:38">8</literal></expr>;</expr_stmt>

<cpp:if pos:start="11:1" pos:end="11:63">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:63"><operator pos:start="11:5" pos:end="11:5">(</operator><operator pos:start="11:6" pos:end="11:6">(</operator><operator pos:start="11:7" pos:end="11:7">!</operator><call pos:start="11:8" pos:end="11:31"><name pos:start="11:8" pos:end="11:14">defined</name> <argument_list pos:start="11:16" pos:end="11:31">(<argument pos:start="11:17" pos:end="11:30"><expr pos:start="11:17" pos:end="11:30"><name pos:start="11:17" pos:end="11:30">TARGET_SPARC64</name></expr></argument>)</argument_list></call><operator pos:start="11:32" pos:end="11:32">)</operator> <operator pos:start="11:34" pos:end="11:35">&amp;&amp;</operator> <operator pos:start="11:37" pos:end="11:37">!</operator><call pos:start="11:38" pos:end="11:62"><name pos:start="11:38" pos:end="11:44">defined</name><argument_list pos:start="11:45" pos:end="11:62">(<argument pos:start="11:46" pos:end="11:61"><expr pos:start="11:46" pos:end="11:61"><name pos:start="11:46" pos:end="11:61">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call><operator pos:start="11:63" pos:end="11:63">)</operator></expr></cpp:if>

    <expr_stmt pos:start="13:5" pos:end="16:0"><expr pos:start="13:5" pos:end="13:23"><call pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:18">cpu_check_irqs</name><argument_list pos:start="13:19" pos:end="13:23">(<argument pos:start="13:20" pos:end="13:22"><expr pos:start="13:20" pos:end="13:22"><name pos:start="13:20" pos:end="13:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:7">env</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:13">psrs</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <ternary pos:start="17:17" pos:end="17:36"><condition pos:start="17:17" pos:end="17:30"><expr pos:start="17:17" pos:end="17:29"><operator pos:start="17:17" pos:end="17:17">(</operator><name pos:start="17:18" pos:end="17:20">val</name> <operator pos:start="17:22" pos:end="17:22">&amp;</operator> <name pos:start="17:24" pos:end="17:28">PSR_S</name><operator pos:start="17:29" pos:end="17:29">)</operator></expr>?</condition><then pos:start="17:32" pos:end="17:32"> <expr pos:start="17:32" pos:end="17:32"><literal type="number" pos:start="17:32" pos:end="17:32">1</literal></expr> </then><else pos:start="17:34" pos:end="17:36">: <expr pos:start="17:36" pos:end="17:36"><literal type="number" pos:start="17:36" pos:end="17:36">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:7">env</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:14">psrps</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <ternary pos:start="19:18" pos:end="19:38"><condition pos:start="19:18" pos:end="19:32"><expr pos:start="19:18" pos:end="19:31"><operator pos:start="19:18" pos:end="19:18">(</operator><name pos:start="19:19" pos:end="19:21">val</name> <operator pos:start="19:23" pos:end="19:23">&amp;</operator> <name pos:start="19:25" pos:end="19:30">PSR_PS</name><operator pos:start="19:31" pos:end="19:31">)</operator></expr>?</condition><then pos:start="19:34" pos:end="19:34"> <expr pos:start="19:34" pos:end="19:34"><literal type="number" pos:start="19:34" pos:end="19:34">1</literal></expr> </then><else pos:start="19:36" pos:end="19:38">: <expr pos:start="19:38" pos:end="19:38"><literal type="number" pos:start="19:38" pos:end="19:38">0</literal></expr></else></ternary></expr>;</expr_stmt>

<cpp:if pos:start="21:1" pos:end="21:29">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:29"><operator pos:start="21:5" pos:end="21:5">!</operator><call pos:start="21:6" pos:end="21:29"><name pos:start="21:6" pos:end="21:12">defined</name> <argument_list pos:start="21:14" pos:end="21:29">(<argument pos:start="21:15" pos:end="21:28"><expr pos:start="21:15" pos:end="21:28"><name pos:start="21:15" pos:end="21:28">TARGET_SPARC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="23:5" pos:end="26:0"><expr pos:start="23:5" pos:end="23:38"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:7">env</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:14">psret</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <ternary pos:start="23:18" pos:end="23:38"><condition pos:start="23:18" pos:end="23:32"><expr pos:start="23:18" pos:end="23:31"><operator pos:start="23:18" pos:end="23:18">(</operator><name pos:start="23:19" pos:end="23:21">val</name> <operator pos:start="23:23" pos:end="23:23">&amp;</operator> <name pos:start="23:25" pos:end="23:30">PSR_ET</name><operator pos:start="23:31" pos:end="23:31">)</operator></expr>?</condition><then pos:start="23:34" pos:end="23:34"> <expr pos:start="23:34" pos:end="23:34"><literal type="number" pos:start="23:34" pos:end="23:34">1</literal></expr> </then><else pos:start="23:36" pos:end="23:38">: <expr pos:start="23:38" pos:end="23:38"><literal type="number" pos:start="23:38" pos:end="23:38">0</literal></expr></else></ternary></expr>;</expr_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><call pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:11">set_cwp</name><argument_list pos:start="27:12" pos:end="27:26">(<argument pos:start="27:13" pos:end="27:25"><expr pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:15">val</name> <operator pos:start="27:17" pos:end="27:17">&amp;</operator> <name pos:start="27:19" pos:end="27:25">PSR_CWP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:7">env</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:14">cc_op</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:28">CC_OP_FLAGS</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
