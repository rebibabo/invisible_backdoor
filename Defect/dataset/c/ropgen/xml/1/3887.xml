<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3887.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">generate_joint_tables</name><parameter_list pos:start="1:34" pos:end="1:49">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:45">HYuvContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:35"><name pos:start="5:14" pos:end="5:20">symbols</name><index pos:start="5:21" pos:end="5:35">[<expr pos:start="5:22" pos:end="5:34"><literal type="number" pos:start="5:22" pos:end="5:22">1</literal> <operator pos:start="5:24" pos:end="5:25">&lt;&lt;</operator> <name pos:start="5:27" pos:end="5:34">VLC_BITS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:32"><name pos:start="7:14" pos:end="7:17">bits</name><index pos:start="7:18" pos:end="7:32">[<expr pos:start="7:19" pos:end="7:31"><literal type="number" pos:start="7:19" pos:end="7:19">1</literal> <operator pos:start="7:21" pos:end="7:22">&lt;&lt;</operator> <name pos:start="7:24" pos:end="7:31">VLC_BITS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:30"><name pos:start="9:13" pos:end="9:15">len</name><index pos:start="9:16" pos:end="9:30">[<expr pos:start="9:17" pos:end="9:29"><literal type="number" pos:start="9:17" pos:end="9:17">1</literal> <operator pos:start="9:19" pos:end="9:20">&lt;&lt;</operator> <name pos:start="9:22" pos:end="9:29">VLC_BITS</name></expr>]</index></name></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="137:5"><if pos:start="11:5" pos:end="57:5">if <condition pos:start="11:8" pos:end="11:30">(<expr pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:24">bitstream_bpp</name></name> <operator pos:start="11:26" pos:end="11:26">&lt;</operator> <literal type="number" pos:start="11:28" pos:end="11:29">24</literal></expr>)</condition> <block pos:start="11:32" pos:end="57:5">{<block_content pos:start="13:9" pos:end="55:9">

        <decl_stmt pos:start="13:9" pos:end="13:23"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">p</name></decl>, <decl pos:start="13:16" pos:end="13:16"><type ref="prev" pos:start="13:9" pos:end="13:11"/><name pos:start="13:16" pos:end="13:16">i</name></decl>, <decl pos:start="13:19" pos:end="13:19"><type ref="prev" pos:start="13:9" pos:end="13:11"/><name pos:start="13:19" pos:end="13:19">y</name></decl>, <decl pos:start="13:22" pos:end="13:22"><type ref="prev" pos:start="13:9" pos:end="13:11"/><name pos:start="13:22" pos:end="13:22">u</name></decl>;</decl_stmt>

        <for pos:start="15:9" pos:end="55:9">for <control pos:start="15:13" pos:end="15:31">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">p</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:26"><expr pos:start="15:21" pos:end="15:25"><name pos:start="15:21" pos:end="15:21">p</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <literal type="number" pos:start="15:25" pos:end="15:25">3</literal></expr>;</condition> <incr pos:start="15:28" pos:end="15:30"><expr pos:start="15:28" pos:end="15:30"><name pos:start="15:28" pos:end="15:28">p</name><operator pos:start="15:29" pos:end="15:30">++</operator></expr></incr>)</control> <block pos:start="15:33" pos:end="55:9">{<block_content pos:start="17:13" pos:end="53:61">

            <for pos:start="17:13" pos:end="47:13">for <control pos:start="17:17" pos:end="17:41">(<init pos:start="17:18" pos:end="17:27"><expr pos:start="17:18" pos:end="17:26"><name pos:start="17:18" pos:end="17:18">i</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:22">y</name> <operator pos:start="17:24" pos:end="17:24">=</operator> <literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>;</init> <condition pos:start="17:29" pos:end="17:36"><expr pos:start="17:29" pos:end="17:35"><name pos:start="17:29" pos:end="17:29">y</name> <operator pos:start="17:31" pos:end="17:31">&lt;</operator> <literal type="number" pos:start="17:33" pos:end="17:35">256</literal></expr>;</condition> <incr pos:start="17:38" pos:end="17:40"><expr pos:start="17:38" pos:end="17:40"><name pos:start="17:38" pos:end="17:38">y</name><operator pos:start="17:39" pos:end="17:40">++</operator></expr></incr>)</control> <block pos:start="17:43" pos:end="47:13">{<block_content pos:start="19:17" pos:end="45:17">

                <decl_stmt pos:start="19:17" pos:end="19:41"><decl pos:start="19:17" pos:end="19:40"><type pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">int</name></type> <name pos:start="19:21" pos:end="19:24">len0</name>  <init pos:start="19:27" pos:end="19:40">= <expr pos:start="19:29" pos:end="19:40"><name pos:start="19:29" pos:end="19:40"><name pos:start="19:29" pos:end="19:29">s</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:34">len</name><index pos:start="19:35" pos:end="19:37">[<expr pos:start="19:36" pos:end="19:36"><literal type="number" pos:start="19:36" pos:end="19:36">0</literal></expr>]</index><index pos:start="19:38" pos:end="19:40">[<expr pos:start="19:39" pos:end="19:39"><name pos:start="19:39" pos:end="19:39">y</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="21:17" pos:end="21:44"><decl pos:start="21:17" pos:end="21:43"><type pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">int</name></type> <name pos:start="21:21" pos:end="21:25">limit</name> <init pos:start="21:27" pos:end="21:43">= <expr pos:start="21:29" pos:end="21:43"><name pos:start="21:29" pos:end="21:36">VLC_BITS</name> <operator pos:start="21:38" pos:end="21:38">-</operator> <name pos:start="21:40" pos:end="21:43">len0</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="23:17" pos:end="25:29"><if pos:start="23:17" pos:end="25:29">if <condition pos:start="23:20" pos:end="23:31">(<expr pos:start="23:21" pos:end="23:30"><name pos:start="23:21" pos:end="23:25">limit</name> <operator pos:start="23:27" pos:end="23:28">&lt;=</operator> <literal type="number" pos:start="23:30" pos:end="23:30">0</literal></expr>)</condition><block type="pseudo" pos:start="25:21" pos:end="25:29"><block_content pos:start="25:21" pos:end="25:29">

                    <continue pos:start="25:21" pos:end="25:29">continue;</continue></block_content></block></if></if_stmt>

                <for pos:start="27:17" pos:end="45:17">for <control pos:start="27:21" pos:end="27:41">(<init pos:start="27:22" pos:end="27:27"><expr pos:start="27:22" pos:end="27:26"><name pos:start="27:22" pos:end="27:22">u</name> <operator pos:start="27:24" pos:end="27:24">=</operator> <literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>;</init> <condition pos:start="27:29" pos:end="27:36"><expr pos:start="27:29" pos:end="27:35"><name pos:start="27:29" pos:end="27:29">u</name> <operator pos:start="27:31" pos:end="27:31">&lt;</operator> <literal type="number" pos:start="27:33" pos:end="27:35">256</literal></expr>;</condition> <incr pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:38">u</name><operator pos:start="27:39" pos:end="27:40">++</operator></expr></incr>)</control> <block pos:start="27:43" pos:end="45:17">{<block_content pos:start="29:21" pos:end="43:28">

                    <decl_stmt pos:start="29:21" pos:end="29:44"><decl pos:start="29:21" pos:end="29:43"><type pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:23">int</name></type> <name pos:start="29:25" pos:end="29:28">len1</name> <init pos:start="29:30" pos:end="29:43">= <expr pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:32">s</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:37">len</name><index pos:start="29:38" pos:end="29:40">[<expr pos:start="29:39" pos:end="29:39"><name pos:start="29:39" pos:end="29:39">p</name></expr>]</index><index pos:start="29:41" pos:end="29:43">[<expr pos:start="29:42" pos:end="29:42"><name pos:start="29:42" pos:end="29:42">u</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="31:21" pos:end="33:33"><if pos:start="31:21" pos:end="33:33">if <condition pos:start="31:24" pos:end="31:37">(<expr pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:28">len1</name> <operator pos:start="31:30" pos:end="31:30">&gt;</operator> <name pos:start="31:32" pos:end="31:36">limit</name></expr>)</condition><block type="pseudo" pos:start="33:25" pos:end="33:33"><block_content pos:start="33:25" pos:end="33:33">

                        <continue pos:start="33:25" pos:end="33:33">continue;</continue></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="35:21" pos:end="35:45"><expr pos:start="35:21" pos:end="35:44"><name pos:start="35:21" pos:end="35:26"><name pos:start="35:21" pos:end="35:23">len</name><index pos:start="35:24" pos:end="35:26">[<expr pos:start="35:25" pos:end="35:25"><name pos:start="35:25" pos:end="35:25">i</name></expr>]</index></name>     <operator pos:start="35:32" pos:end="35:32">=</operator> <name pos:start="35:34" pos:end="35:37">len0</name> <operator pos:start="35:39" pos:end="35:39">+</operator> <name pos:start="35:41" pos:end="35:44">len1</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="37:21" pos:end="37:73"><expr pos:start="37:21" pos:end="37:72"><name pos:start="37:21" pos:end="37:27"><name pos:start="37:21" pos:end="37:24">bits</name><index pos:start="37:25" pos:end="37:27">[<expr pos:start="37:26" pos:end="37:26"><name pos:start="37:26" pos:end="37:26">i</name></expr>]</index></name>    <operator pos:start="37:32" pos:end="37:32">=</operator> <operator pos:start="37:34" pos:end="37:34">(</operator><name pos:start="37:35" pos:end="37:47"><name pos:start="37:35" pos:end="37:35">s</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:41">bits</name><index pos:start="37:42" pos:end="37:44">[<expr pos:start="37:43" pos:end="37:43"><literal type="number" pos:start="37:43" pos:end="37:43">0</literal></expr>]</index><index pos:start="37:45" pos:end="37:47">[<expr pos:start="37:46" pos:end="37:46"><name pos:start="37:46" pos:end="37:46">y</name></expr>]</index></name> <operator pos:start="37:49" pos:end="37:50">&lt;&lt;</operator> <name pos:start="37:52" pos:end="37:55">len1</name><operator pos:start="37:56" pos:end="37:56">)</operator> <operator pos:start="37:58" pos:end="37:58">+</operator> <name pos:start="37:60" pos:end="37:72"><name pos:start="37:60" pos:end="37:60">s</name><operator pos:start="37:61" pos:end="37:62">-&gt;</operator><name pos:start="37:63" pos:end="37:66">bits</name><index pos:start="37:67" pos:end="37:69">[<expr pos:start="37:68" pos:end="37:68"><name pos:start="37:68" pos:end="37:68">p</name></expr>]</index><index pos:start="37:70" pos:end="37:72">[<expr pos:start="37:71" pos:end="37:71"><name pos:start="37:71" pos:end="37:71">u</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="39:21" pos:end="39:46"><expr pos:start="39:21" pos:end="39:45"><name pos:start="39:21" pos:end="39:30"><name pos:start="39:21" pos:end="39:27">symbols</name><index pos:start="39:28" pos:end="39:30">[<expr pos:start="39:29" pos:end="39:29"><name pos:start="39:29" pos:end="39:29">i</name></expr>]</index></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <operator pos:start="39:34" pos:end="39:34">(</operator><name pos:start="39:35" pos:end="39:35">y</name> <operator pos:start="39:37" pos:end="39:38">&lt;&lt;</operator> <literal type="number" pos:start="39:40" pos:end="39:40">8</literal><operator pos:start="39:41" pos:end="39:41">)</operator> <operator pos:start="39:43" pos:end="39:43">+</operator> <name pos:start="39:45" pos:end="39:45">u</name></expr>;</expr_stmt>

                    <if_stmt pos:start="41:21" pos:end="43:28"><if pos:start="41:21" pos:end="43:28">if <condition pos:start="41:24" pos:end="41:45">(<expr pos:start="41:25" pos:end="41:44"><name pos:start="41:25" pos:end="41:34"><name pos:start="41:25" pos:end="41:31">symbols</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">i</name></expr>]</index></name> <operator pos:start="41:36" pos:end="41:37">!=</operator> <literal type="number" pos:start="41:39" pos:end="41:44">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="43:25" pos:end="43:28"><block_content pos:start="43:25" pos:end="43:28"> <comment type="line" pos:start="41:47" pos:end="41:75">// reserved to mean "invalid"</comment>

                        <expr_stmt pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:27"><name pos:start="43:25" pos:end="43:25">i</name><operator pos:start="43:26" pos:end="43:27">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <expr_stmt pos:start="49:13" pos:end="49:40"><expr pos:start="49:13" pos:end="49:39"><call pos:start="49:13" pos:end="49:39"><name pos:start="49:13" pos:end="49:23">ff_free_vlc</name><argument_list pos:start="49:24" pos:end="49:39">(<argument pos:start="49:25" pos:end="49:38"><expr pos:start="49:25" pos:end="49:38"><operator pos:start="49:25" pos:end="49:25">&amp;</operator><name pos:start="49:26" pos:end="49:38"><name pos:start="49:26" pos:end="49:26">s</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:31">vlc</name><index pos:start="49:32" pos:end="49:38">[<expr pos:start="49:33" pos:end="49:37"><literal type="number" pos:start="49:33" pos:end="49:35">3</literal> <operator pos:start="49:35" pos:end="49:35">+</operator> <name pos:start="49:37" pos:end="49:37">p</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="53:61"><expr pos:start="51:13" pos:end="53:60"><call pos:start="51:13" pos:end="53:60"><name pos:start="51:13" pos:end="51:30">ff_init_vlc_sparse</name><argument_list pos:start="51:31" pos:end="53:60">(<argument pos:start="51:32" pos:end="51:45"><expr pos:start="51:32" pos:end="51:45"><operator pos:start="51:32" pos:end="51:32">&amp;</operator><name pos:start="51:33" pos:end="51:45"><name pos:start="51:33" pos:end="51:33">s</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:38">vlc</name><index pos:start="51:39" pos:end="51:45">[<expr pos:start="51:40" pos:end="51:44"><literal type="number" pos:start="51:40" pos:end="51:42">3</literal> <operator pos:start="51:42" pos:end="51:42">+</operator> <name pos:start="51:44" pos:end="51:44">p</name></expr>]</index></name></expr></argument>, <argument pos:start="51:48" pos:end="51:55"><expr pos:start="51:48" pos:end="51:55"><name pos:start="51:48" pos:end="51:55">VLC_BITS</name></expr></argument>, <argument pos:start="51:58" pos:end="51:58"><expr pos:start="51:58" pos:end="51:58"><name pos:start="51:58" pos:end="51:58">i</name></expr></argument>, <argument pos:start="51:61" pos:end="51:63"><expr pos:start="51:61" pos:end="51:63"><name pos:start="51:61" pos:end="51:63">len</name></expr></argument>, <argument pos:start="51:66" pos:end="51:66"><expr pos:start="51:66" pos:end="51:66"><literal type="number" pos:start="51:66" pos:end="51:66">1</literal></expr></argument>, <argument pos:start="51:69" pos:end="51:69"><expr pos:start="51:69" pos:end="51:69"><literal type="number" pos:start="51:69" pos:end="51:69">1</literal></expr></argument>,

                               <argument pos:start="53:32" pos:end="53:35"><expr pos:start="53:32" pos:end="53:35"><name pos:start="53:32" pos:end="53:35">bits</name></expr></argument>, <argument pos:start="53:38" pos:end="53:38"><expr pos:start="53:38" pos:end="53:38"><literal type="number" pos:start="53:38" pos:end="53:38">2</literal></expr></argument>, <argument pos:start="53:41" pos:end="53:41"><expr pos:start="53:41" pos:end="53:41"><literal type="number" pos:start="53:41" pos:end="53:41">2</literal></expr></argument>, <argument pos:start="53:44" pos:end="53:50"><expr pos:start="53:44" pos:end="53:50"><name pos:start="53:44" pos:end="53:50">symbols</name></expr></argument>, <argument pos:start="53:53" pos:end="53:53"><expr pos:start="53:53" pos:end="53:53"><literal type="number" pos:start="53:53" pos:end="53:53">2</literal></expr></argument>, <argument pos:start="53:56" pos:end="53:56"><expr pos:start="53:56" pos:end="53:56"><literal type="number" pos:start="53:56" pos:end="53:56">2</literal></expr></argument>, <argument pos:start="53:59" pos:end="53:59"><expr pos:start="53:59" pos:end="53:59"><literal type="number" pos:start="53:59" pos:end="53:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="137:5">else <block pos:start="57:12" pos:end="137:5">{<block_content pos:start="59:9" pos:end="135:68">

        <expr_stmt pos:start="59:9" pos:end="59:59"><expr pos:start="59:9" pos:end="59:58"><call pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:15">uint8_t</name> <argument_list pos:start="59:17" pos:end="59:22">(<argument pos:start="59:18" pos:end="59:21"><expr pos:start="59:18" pos:end="59:21"><operator pos:start="59:18" pos:end="59:18">*</operator><name pos:start="59:19" pos:end="59:21">map</name></expr></argument>)</argument_list></call><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><literal type="number" pos:start="59:24" pos:end="59:24">4</literal></expr>]</index> <operator pos:start="59:27" pos:end="59:27">=</operator> <operator pos:start="59:29" pos:end="59:29">(</operator><call pos:start="59:30" pos:end="59:39"><name pos:start="59:30" pos:end="59:36">uint8_t</name><argument_list pos:start="59:37" pos:end="59:39">(<argument pos:start="59:38" pos:end="59:38"><expr pos:start="59:38" pos:end="59:38"><operator pos:start="59:38" pos:end="59:38">*</operator></expr></argument>)</argument_list></call><index pos:start="59:40" pos:end="59:42">[<expr pos:start="59:41" pos:end="59:41"><literal type="number" pos:start="59:41" pos:end="59:41">4</literal></expr>]</index><operator pos:start="59:43" pos:end="59:43">)</operator> <name pos:start="59:45" pos:end="59:58"><name pos:start="59:45" pos:end="59:45">s</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:58">pix_bgr_map</name></name></expr>;</expr_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:29"><decl pos:start="61:9" pos:end="61:13"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:13">i</name></decl>, <decl pos:start="61:16" pos:end="61:16"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:16" pos:end="61:16">b</name></decl>, <decl pos:start="61:19" pos:end="61:19"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:19" pos:end="61:19">g</name></decl>, <decl pos:start="61:22" pos:end="61:22"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:22" pos:end="61:22">r</name></decl>, <decl pos:start="61:25" pos:end="61:28"><type ref="prev" pos:start="61:9" pos:end="61:11"/><name pos:start="61:25" pos:end="61:28">code</name></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:32"><decl pos:start="63:9" pos:end="63:31"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:14">p0</name> <init pos:start="63:16" pos:end="63:31">= <expr pos:start="63:18" pos:end="63:31"><name pos:start="63:18" pos:end="63:31"><name pos:start="63:18" pos:end="63:18">s</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:31">decorrelate</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:33"><decl pos:start="65:9" pos:end="65:32"><type pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">int</name></type> <name pos:start="65:13" pos:end="65:14">p1</name> <init pos:start="65:16" pos:end="65:32">= <expr pos:start="65:18" pos:end="65:32"><operator pos:start="65:18" pos:end="65:18">!</operator><name pos:start="65:19" pos:end="65:32"><name pos:start="65:19" pos:end="65:19">s</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:32">decorrelate</name></name></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="67:9" pos:end="71:59">/* Restrict the range to +/-16 because that's pretty much guaranteed

         * to cover all the combinations that fit in 11 bits total, and it

         *  does not matter if we miss a few rare codes. */</comment>

        <for pos:start="73:9" pos:end="131:9">for <control pos:start="73:13" pos:end="73:41">(<init pos:start="73:14" pos:end="73:28"><expr pos:start="73:14" pos:end="73:18"><name pos:start="73:14" pos:end="73:14">i</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr><operator pos:start="73:19" pos:end="73:19">,</operator> <expr pos:start="73:21" pos:end="73:27"><name pos:start="73:21" pos:end="73:21">g</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <operator pos:start="73:25" pos:end="73:25">-</operator><literal type="number" pos:start="73:26" pos:end="73:27">16</literal></expr>;</init> <condition pos:start="73:30" pos:end="73:36"><expr pos:start="73:30" pos:end="73:35"><name pos:start="73:30" pos:end="73:30">g</name> <operator pos:start="73:32" pos:end="73:32">&lt;</operator> <literal type="number" pos:start="73:34" pos:end="73:35">16</literal></expr>;</condition> <incr pos:start="73:38" pos:end="73:40"><expr pos:start="73:38" pos:end="73:40"><name pos:start="73:38" pos:end="73:38">g</name><operator pos:start="73:39" pos:end="73:40">++</operator></expr></incr>)</control> <block pos:start="73:43" pos:end="131:9">{<block_content pos:start="75:13" pos:end="129:13">

            <decl_stmt pos:start="75:13" pos:end="75:45"><decl pos:start="75:13" pos:end="75:44"><type pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:15">int</name></type> <name pos:start="75:17" pos:end="75:20">len0</name>   <init pos:start="75:24" pos:end="75:44">= <expr pos:start="75:26" pos:end="75:44"><name pos:start="75:26" pos:end="75:44"><name pos:start="75:26" pos:end="75:26">s</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:31">len</name><index pos:start="75:32" pos:end="75:35">[<expr pos:start="75:33" pos:end="75:34"><name pos:start="75:33" pos:end="75:34">p0</name></expr>]</index><index pos:start="75:36" pos:end="75:44">[<expr pos:start="75:37" pos:end="75:43"><name pos:start="75:37" pos:end="75:37">g</name> <operator pos:start="75:39" pos:end="75:39">&amp;</operator> <literal type="number" pos:start="75:41" pos:end="75:43">255</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="77:13" pos:end="77:41"><decl pos:start="77:13" pos:end="77:40"><type pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:15">int</name></type> <name pos:start="77:17" pos:end="77:22">limit0</name> <init pos:start="77:24" pos:end="77:40">= <expr pos:start="77:26" pos:end="77:40"><name pos:start="77:26" pos:end="77:33">VLC_BITS</name> <operator pos:start="77:35" pos:end="77:35">-</operator> <name pos:start="77:37" pos:end="77:40">len0</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="79:13" pos:end="81:25"><if pos:start="79:13" pos:end="81:25">if <condition pos:start="79:16" pos:end="79:27">(<expr pos:start="79:17" pos:end="79:26"><name pos:start="79:17" pos:end="79:22">limit0</name> <operator pos:start="79:24" pos:end="79:24">&lt;</operator> <literal type="number" pos:start="79:26" pos:end="79:26">2</literal></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:25"><block_content pos:start="81:17" pos:end="81:25">

                <continue pos:start="81:17" pos:end="81:25">continue;</continue></block_content></block></if></if_stmt>

            <for pos:start="83:13" pos:end="129:13">for <control pos:start="83:17" pos:end="83:38">(<init pos:start="83:18" pos:end="83:25"><expr pos:start="83:18" pos:end="83:24"><name pos:start="83:18" pos:end="83:18">b</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <operator pos:start="83:22" pos:end="83:22">-</operator><literal type="number" pos:start="83:23" pos:end="83:24">16</literal></expr>;</init> <condition pos:start="83:27" pos:end="83:33"><expr pos:start="83:27" pos:end="83:32"><name pos:start="83:27" pos:end="83:27">b</name> <operator pos:start="83:29" pos:end="83:29">&lt;</operator> <literal type="number" pos:start="83:31" pos:end="83:32">16</literal></expr>;</condition> <incr pos:start="83:35" pos:end="83:37"><expr pos:start="83:35" pos:end="83:37"><name pos:start="83:35" pos:end="83:35">b</name><operator pos:start="83:36" pos:end="83:37">++</operator></expr></incr>)</control> <block pos:start="83:40" pos:end="129:13">{<block_content pos:start="85:17" pos:end="127:17">

                <decl_stmt pos:start="85:17" pos:end="85:49"><decl pos:start="85:17" pos:end="85:48"><type pos:start="85:17" pos:end="85:19"><name pos:start="85:17" pos:end="85:19">int</name></type> <name pos:start="85:21" pos:end="85:24">len1</name>   <init pos:start="85:28" pos:end="85:48">= <expr pos:start="85:30" pos:end="85:48"><name pos:start="85:30" pos:end="85:48"><name pos:start="85:30" pos:end="85:30">s</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:35">len</name><index pos:start="85:36" pos:end="85:39">[<expr pos:start="85:37" pos:end="85:38"><name pos:start="85:37" pos:end="85:38">p1</name></expr>]</index><index pos:start="85:40" pos:end="85:48">[<expr pos:start="85:41" pos:end="85:47"><name pos:start="85:41" pos:end="85:41">b</name> <operator pos:start="85:43" pos:end="85:43">&amp;</operator> <literal type="number" pos:start="85:45" pos:end="85:47">255</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="87:17" pos:end="87:43"><decl pos:start="87:17" pos:end="87:42"><type pos:start="87:17" pos:end="87:19"><name pos:start="87:17" pos:end="87:19">int</name></type> <name pos:start="87:21" pos:end="87:26">limit1</name> <init pos:start="87:28" pos:end="87:42">= <expr pos:start="87:30" pos:end="87:42"><name pos:start="87:30" pos:end="87:35">limit0</name> <operator pos:start="87:37" pos:end="87:37">-</operator> <name pos:start="87:39" pos:end="87:42">len1</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="89:17" pos:end="91:29"><if pos:start="89:17" pos:end="91:29">if <condition pos:start="89:20" pos:end="89:31">(<expr pos:start="89:21" pos:end="89:30"><name pos:start="89:21" pos:end="89:26">limit1</name> <operator pos:start="89:28" pos:end="89:28">&lt;</operator> <literal type="number" pos:start="89:30" pos:end="89:30">1</literal></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:29"><block_content pos:start="91:21" pos:end="91:29">

                    <continue pos:start="91:21" pos:end="91:29">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:77"><expr pos:start="93:17" pos:end="93:76"><name pos:start="93:17" pos:end="93:20">code</name> <operator pos:start="93:22" pos:end="93:22">=</operator> <operator pos:start="93:24" pos:end="93:24">(</operator><name pos:start="93:25" pos:end="93:44"><name pos:start="93:25" pos:end="93:25">s</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:31">bits</name><index pos:start="93:32" pos:end="93:35">[<expr pos:start="93:33" pos:end="93:34"><name pos:start="93:33" pos:end="93:34">p0</name></expr>]</index><index pos:start="93:36" pos:end="93:44">[<expr pos:start="93:37" pos:end="93:43"><name pos:start="93:37" pos:end="93:37">g</name> <operator pos:start="93:39" pos:end="93:39">&amp;</operator> <literal type="number" pos:start="93:41" pos:end="93:43">255</literal></expr>]</index></name> <operator pos:start="93:46" pos:end="93:47">&lt;&lt;</operator> <name pos:start="93:49" pos:end="93:52">len1</name><operator pos:start="93:53" pos:end="93:53">)</operator> <operator pos:start="93:55" pos:end="93:55">+</operator> <name pos:start="93:57" pos:end="93:76"><name pos:start="93:57" pos:end="93:57">s</name><operator pos:start="93:58" pos:end="93:59">-&gt;</operator><name pos:start="93:60" pos:end="93:63">bits</name><index pos:start="93:64" pos:end="93:67">[<expr pos:start="93:65" pos:end="93:66"><name pos:start="93:65" pos:end="93:66">p1</name></expr>]</index><index pos:start="93:68" pos:end="93:76">[<expr pos:start="93:69" pos:end="93:75"><name pos:start="93:69" pos:end="93:69">b</name> <operator pos:start="93:71" pos:end="93:71">&amp;</operator> <literal type="number" pos:start="93:73" pos:end="93:75">255</literal></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="95:17" pos:end="127:17">for <control pos:start="95:21" pos:end="95:42">(<init pos:start="95:22" pos:end="95:29"><expr pos:start="95:22" pos:end="95:28"><name pos:start="95:22" pos:end="95:22">r</name> <operator pos:start="95:24" pos:end="95:24">=</operator> <operator pos:start="95:26" pos:end="95:26">-</operator><literal type="number" pos:start="95:27" pos:end="95:28">16</literal></expr>;</init> <condition pos:start="95:31" pos:end="95:37"><expr pos:start="95:31" pos:end="95:36"><name pos:start="95:31" pos:end="95:31">r</name> <operator pos:start="95:33" pos:end="95:33">&lt;</operator> <literal type="number" pos:start="95:35" pos:end="95:36">16</literal></expr>;</condition> <incr pos:start="95:39" pos:end="95:41"><expr pos:start="95:39" pos:end="95:41"><name pos:start="95:39" pos:end="95:39">r</name><operator pos:start="95:40" pos:end="95:41">++</operator></expr></incr>)</control> <block pos:start="95:44" pos:end="127:17">{<block_content pos:start="97:21" pos:end="125:24">

                    <decl_stmt pos:start="97:21" pos:end="97:50"><decl pos:start="97:21" pos:end="97:49"><type pos:start="97:21" pos:end="97:23"><name pos:start="97:21" pos:end="97:23">int</name></type> <name pos:start="97:25" pos:end="97:28">len2</name> <init pos:start="97:30" pos:end="97:49">= <expr pos:start="97:32" pos:end="97:49"><name pos:start="97:32" pos:end="97:49"><name pos:start="97:32" pos:end="97:32">s</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:37">len</name><index pos:start="97:38" pos:end="97:40">[<expr pos:start="97:39" pos:end="97:39"><literal type="number" pos:start="97:39" pos:end="97:39">2</literal></expr>]</index><index pos:start="97:41" pos:end="97:49">[<expr pos:start="97:42" pos:end="97:48"><name pos:start="97:42" pos:end="97:42">r</name> <operator pos:start="97:44" pos:end="97:44">&amp;</operator> <literal type="number" pos:start="97:46" pos:end="97:48">255</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="99:21" pos:end="101:33"><if pos:start="99:21" pos:end="101:33">if <condition pos:start="99:24" pos:end="99:38">(<expr pos:start="99:25" pos:end="99:37"><name pos:start="99:25" pos:end="99:28">len2</name> <operator pos:start="99:30" pos:end="99:30">&gt;</operator> <name pos:start="99:32" pos:end="99:37">limit1</name></expr>)</condition><block type="pseudo" pos:start="101:25" pos:end="101:33"><block_content pos:start="101:25" pos:end="101:33">

                        <continue pos:start="101:25" pos:end="101:33">continue;</continue></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:49"><expr pos:start="103:21" pos:end="103:48"><name pos:start="103:21" pos:end="103:26"><name pos:start="103:21" pos:end="103:23">len</name><index pos:start="103:24" pos:end="103:26">[<expr pos:start="103:25" pos:end="103:25"><name pos:start="103:25" pos:end="103:25">i</name></expr>]</index></name>  <operator pos:start="103:29" pos:end="103:29">=</operator> <name pos:start="103:31" pos:end="103:34">len0</name> <operator pos:start="103:36" pos:end="103:36">+</operator> <name pos:start="103:38" pos:end="103:41">len1</name> <operator pos:start="103:43" pos:end="103:43">+</operator> <name pos:start="103:45" pos:end="103:48">len2</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="105:21" pos:end="105:67"><expr pos:start="105:21" pos:end="105:66"><name pos:start="105:21" pos:end="105:27"><name pos:start="105:21" pos:end="105:24">bits</name><index pos:start="105:25" pos:end="105:27">[<expr pos:start="105:26" pos:end="105:26"><name pos:start="105:26" pos:end="105:26">i</name></expr>]</index></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <operator pos:start="105:31" pos:end="105:31">(</operator><name pos:start="105:32" pos:end="105:35">code</name> <operator pos:start="105:37" pos:end="105:38">&lt;&lt;</operator> <name pos:start="105:40" pos:end="105:43">len2</name><operator pos:start="105:44" pos:end="105:44">)</operator> <operator pos:start="105:46" pos:end="105:46">+</operator> <name pos:start="105:48" pos:end="105:66"><name pos:start="105:48" pos:end="105:48">s</name><operator pos:start="105:49" pos:end="105:50">-&gt;</operator><name pos:start="105:51" pos:end="105:54">bits</name><index pos:start="105:55" pos:end="105:57">[<expr pos:start="105:56" pos:end="105:56"><literal type="number" pos:start="105:56" pos:end="105:56">2</literal></expr>]</index><index pos:start="105:58" pos:end="105:66">[<expr pos:start="105:59" pos:end="105:65"><name pos:start="105:59" pos:end="105:59">r</name> <operator pos:start="105:61" pos:end="105:61">&amp;</operator> <literal type="number" pos:start="105:63" pos:end="105:65">255</literal></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="107:21" pos:end="123:21"><if pos:start="107:21" pos:end="115:21">if <condition pos:start="107:24" pos:end="107:39">(<expr pos:start="107:25" pos:end="107:38"><name pos:start="107:25" pos:end="107:38"><name pos:start="107:25" pos:end="107:25">s</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:38">decorrelate</name></name></expr>)</condition> <block pos:start="107:41" pos:end="115:21">{<block_content pos:start="109:25" pos:end="113:42">

                        <expr_stmt pos:start="109:25" pos:end="109:38"><expr pos:start="109:25" pos:end="109:37"><name pos:start="109:25" pos:end="109:33"><name pos:start="109:25" pos:end="109:27">map</name><index pos:start="109:28" pos:end="109:30">[<expr pos:start="109:29" pos:end="109:29"><name pos:start="109:29" pos:end="109:29">i</name></expr>]</index><index pos:start="109:31" pos:end="109:33">[<expr pos:start="109:32" pos:end="109:32"><name pos:start="109:32" pos:end="109:32">G</name></expr>]</index></name> <operator pos:start="109:35" pos:end="109:35">=</operator> <name pos:start="109:37" pos:end="109:37">g</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="111:25" pos:end="111:42"><expr pos:start="111:25" pos:end="111:41"><name pos:start="111:25" pos:end="111:33"><name pos:start="111:25" pos:end="111:27">map</name><index pos:start="111:28" pos:end="111:30">[<expr pos:start="111:29" pos:end="111:29"><name pos:start="111:29" pos:end="111:29">i</name></expr>]</index><index pos:start="111:31" pos:end="111:33">[<expr pos:start="111:32" pos:end="111:32"><name pos:start="111:32" pos:end="111:32">B</name></expr>]</index></name> <operator pos:start="111:35" pos:end="111:35">=</operator> <name pos:start="111:37" pos:end="111:37">g</name> <operator pos:start="111:39" pos:end="111:39">+</operator> <name pos:start="111:41" pos:end="111:41">b</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="113:25" pos:end="113:42"><expr pos:start="113:25" pos:end="113:41"><name pos:start="113:25" pos:end="113:33"><name pos:start="113:25" pos:end="113:27">map</name><index pos:start="113:28" pos:end="113:30">[<expr pos:start="113:29" pos:end="113:29"><name pos:start="113:29" pos:end="113:29">i</name></expr>]</index><index pos:start="113:31" pos:end="113:33">[<expr pos:start="113:32" pos:end="113:32"><name pos:start="113:32" pos:end="113:32">R</name></expr>]</index></name> <operator pos:start="113:35" pos:end="113:35">=</operator> <name pos:start="113:37" pos:end="113:37">g</name> <operator pos:start="113:39" pos:end="113:39">+</operator> <name pos:start="113:41" pos:end="113:41">r</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="115:23" pos:end="123:21">else <block pos:start="115:28" pos:end="123:21">{<block_content pos:start="117:25" pos:end="121:38">

                        <expr_stmt pos:start="117:25" pos:end="117:38"><expr pos:start="117:25" pos:end="117:37"><name pos:start="117:25" pos:end="117:33"><name pos:start="117:25" pos:end="117:27">map</name><index pos:start="117:28" pos:end="117:30">[<expr pos:start="117:29" pos:end="117:29"><name pos:start="117:29" pos:end="117:29">i</name></expr>]</index><index pos:start="117:31" pos:end="117:33">[<expr pos:start="117:32" pos:end="117:32"><name pos:start="117:32" pos:end="117:32">B</name></expr>]</index></name> <operator pos:start="117:35" pos:end="117:35">=</operator> <name pos:start="117:37" pos:end="117:37">g</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="119:25" pos:end="119:38"><expr pos:start="119:25" pos:end="119:37"><name pos:start="119:25" pos:end="119:33"><name pos:start="119:25" pos:end="119:27">map</name><index pos:start="119:28" pos:end="119:30">[<expr pos:start="119:29" pos:end="119:29"><name pos:start="119:29" pos:end="119:29">i</name></expr>]</index><index pos:start="119:31" pos:end="119:33">[<expr pos:start="119:32" pos:end="119:32"><name pos:start="119:32" pos:end="119:32">G</name></expr>]</index></name> <operator pos:start="119:35" pos:end="119:35">=</operator> <name pos:start="119:37" pos:end="119:37">b</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="121:25" pos:end="121:38"><expr pos:start="121:25" pos:end="121:37"><name pos:start="121:25" pos:end="121:33"><name pos:start="121:25" pos:end="121:27">map</name><index pos:start="121:28" pos:end="121:30">[<expr pos:start="121:29" pos:end="121:29"><name pos:start="121:29" pos:end="121:29">i</name></expr>]</index><index pos:start="121:31" pos:end="121:33">[<expr pos:start="121:32" pos:end="121:32"><name pos:start="121:32" pos:end="121:32">R</name></expr>]</index></name> <operator pos:start="121:35" pos:end="121:35">=</operator> <name pos:start="121:37" pos:end="121:37">r</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="125:21" pos:end="125:24"><expr pos:start="125:21" pos:end="125:23"><name pos:start="125:21" pos:end="125:21">i</name><operator pos:start="125:22" pos:end="125:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="133:9" pos:end="133:32"><expr pos:start="133:9" pos:end="133:31"><call pos:start="133:9" pos:end="133:31"><name pos:start="133:9" pos:end="133:19">ff_free_vlc</name><argument_list pos:start="133:20" pos:end="133:31">(<argument pos:start="133:21" pos:end="133:30"><expr pos:start="133:21" pos:end="133:30"><operator pos:start="133:21" pos:end="133:21">&amp;</operator><name pos:start="133:22" pos:end="133:30"><name pos:start="133:22" pos:end="133:22">s</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:27">vlc</name><index pos:start="133:28" pos:end="133:30">[<expr pos:start="133:29" pos:end="133:29"><literal type="number" pos:start="133:29" pos:end="133:29">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:68"><expr pos:start="135:9" pos:end="135:67"><call pos:start="135:9" pos:end="135:67"><name pos:start="135:9" pos:end="135:16">init_vlc</name><argument_list pos:start="135:17" pos:end="135:67">(<argument pos:start="135:18" pos:end="135:27"><expr pos:start="135:18" pos:end="135:27"><operator pos:start="135:18" pos:end="135:18">&amp;</operator><name pos:start="135:19" pos:end="135:27"><name pos:start="135:19" pos:end="135:19">s</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:24">vlc</name><index pos:start="135:25" pos:end="135:27">[<expr pos:start="135:26" pos:end="135:26"><literal type="number" pos:start="135:26" pos:end="135:26">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="135:30" pos:end="135:37"><expr pos:start="135:30" pos:end="135:37"><name pos:start="135:30" pos:end="135:37">VLC_BITS</name></expr></argument>, <argument pos:start="135:40" pos:end="135:40"><expr pos:start="135:40" pos:end="135:40"><name pos:start="135:40" pos:end="135:40">i</name></expr></argument>, <argument pos:start="135:43" pos:end="135:45"><expr pos:start="135:43" pos:end="135:45"><name pos:start="135:43" pos:end="135:45">len</name></expr></argument>, <argument pos:start="135:48" pos:end="135:48"><expr pos:start="135:48" pos:end="135:48"><literal type="number" pos:start="135:48" pos:end="135:48">1</literal></expr></argument>, <argument pos:start="135:51" pos:end="135:51"><expr pos:start="135:51" pos:end="135:51"><literal type="number" pos:start="135:51" pos:end="135:51">1</literal></expr></argument>, <argument pos:start="135:54" pos:end="135:57"><expr pos:start="135:54" pos:end="135:57"><name pos:start="135:54" pos:end="135:57">bits</name></expr></argument>, <argument pos:start="135:60" pos:end="135:60"><expr pos:start="135:60" pos:end="135:60"><literal type="number" pos:start="135:60" pos:end="135:60">2</literal></expr></argument>, <argument pos:start="135:63" pos:end="135:63"><expr pos:start="135:63" pos:end="135:63"><literal type="number" pos:start="135:63" pos:end="135:63">2</literal></expr></argument>, <argument pos:start="135:66" pos:end="135:66"><expr pos:start="135:66" pos:end="135:66"><literal type="number" pos:start="135:66" pos:end="135:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
