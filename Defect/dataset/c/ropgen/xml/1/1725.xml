<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1725.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">ehci_execute</name><parameter_list pos:start="1:24" pos:end="1:58">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:34">EHCIPacket</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">p</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:57"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:57">action</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:15">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">USBEndpoint</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">ep</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">endp</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:43">(<expr pos:start="13:9" pos:end="13:42"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:22"><name pos:start="13:11" pos:end="13:11">p</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:16">qtd</name><operator pos:start="13:17" pos:end="13:17">.</operator><name pos:start="13:18" pos:end="13:22">token</name></name> <operator pos:start="13:24" pos:end="13:24">&amp;</operator> <name pos:start="13:26" pos:end="13:41">QTD_TOKEN_ACTIVE</name><operator pos:start="13:42" pos:end="13:42">)</operator></expr>)</condition> <block pos:start="13:45" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:31">

        <expr_stmt pos:start="15:9" pos:end="15:64"><expr pos:start="15:9" pos:end="15:63"><call pos:start="15:9" pos:end="15:63"><name pos:start="15:9" pos:end="15:15">fprintf</name><argument_list pos:start="15:16" pos:end="15:63">(<argument pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:22">stderr</name></expr></argument>, <argument pos:start="15:25" pos:end="15:62"><expr pos:start="15:25" pos:end="15:62"><literal type="string" pos:start="15:25" pos:end="15:62">"Attempting to execute inactive qtd\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:30">USB_RET_PROCERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:78"><expr pos:start="23:5" pos:end="23:77"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:5">p</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:13">tbytes</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <operator pos:start="23:17" pos:end="23:17">(</operator><name pos:start="23:18" pos:end="23:29"><name pos:start="23:18" pos:end="23:18">p</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:23">qtd</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:29">token</name></name> <operator pos:start="23:31" pos:end="23:31">&amp;</operator> <name pos:start="23:33" pos:end="23:53">QTD_TOKEN_TBYTES_MASK</name><operator pos:start="23:54" pos:end="23:54">)</operator> <operator pos:start="23:56" pos:end="23:57">&gt;&gt;</operator> <name pos:start="23:59" pos:end="23:77">QTD_TOKEN_TBYTES_SH</name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:30">(<expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:9">p</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:17">tbytes</name></name> <operator pos:start="25:19" pos:end="25:19">&gt;</operator> <name pos:start="25:21" pos:end="25:29">BUFF_SIZE</name></expr>)</condition> <block pos:start="25:32" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:31">

        <expr_stmt pos:start="27:9" pos:end="29:72"><expr pos:start="27:9" pos:end="29:71"><call pos:start="27:9" pos:end="29:71"><name pos:start="27:9" pos:end="27:28">ehci_trace_guest_bug</name><argument_list pos:start="27:29" pos:end="29:71">(<argument pos:start="27:30" pos:end="27:43"><expr pos:start="27:30" pos:end="27:43"><name pos:start="27:30" pos:end="27:43"><name pos:start="27:30" pos:end="27:30">p</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:37">queue</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:43">ehci</name></name></expr></argument>,

                             <argument pos:start="29:30" pos:end="29:70"><expr pos:start="29:30" pos:end="29:70"><literal type="string" pos:start="29:30" pos:end="29:70">"guest requested more bytes than allowed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:30">USB_RET_PROCERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:69"><expr pos:start="37:5" pos:end="37:68"><name pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:5">p</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:10">pid</name></name> <operator pos:start="37:12" pos:end="37:12">=</operator> <operator pos:start="37:14" pos:end="37:14">(</operator><name pos:start="37:15" pos:end="37:26"><name pos:start="37:15" pos:end="37:15">p</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:20">qtd</name><operator pos:start="37:21" pos:end="37:21">.</operator><name pos:start="37:22" pos:end="37:26">token</name></name> <operator pos:start="37:28" pos:end="37:28">&amp;</operator> <name pos:start="37:30" pos:end="37:47">QTD_TOKEN_PID_MASK</name><operator pos:start="37:48" pos:end="37:48">)</operator> <operator pos:start="37:50" pos:end="37:51">&gt;&gt;</operator> <name pos:start="37:53" pos:end="37:68">QTD_TOKEN_PID_SH</name></expr>;</expr_stmt>

    <switch pos:start="39:5" pos:end="65:5">switch <condition pos:start="39:12" pos:end="39:19">(<expr pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:13">p</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:18">pid</name></name></expr>)</condition> <block pos:start="39:21" pos:end="65:5">{<block_content pos:start="41:5" pos:end="63:14">

    <case pos:start="41:5" pos:end="41:11">case <expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">0</literal></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:9">p</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:14">pid</name></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:30">USB_TOKEN_OUT</name></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">1</literal></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:30"><expr pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:9">p</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:14">pid</name></name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:29">USB_TOKEN_IN</name></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">2</literal></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:33"><expr pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:9">p</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:14">pid</name></name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:32">USB_TOKEN_SETUP</name></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <default pos:start="59:5" pos:end="59:12">default:</default>

        <expr_stmt pos:start="61:9" pos:end="61:39"><expr pos:start="61:9" pos:end="61:38"><call pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:15">fprintf</name><argument_list pos:start="61:16" pos:end="61:38">(<argument pos:start="61:17" pos:end="61:22"><expr pos:start="61:17" pos:end="61:22"><name pos:start="61:17" pos:end="61:22">stderr</name></expr></argument>, <argument pos:start="61:25" pos:end="61:37"><expr pos:start="61:25" pos:end="61:37"><literal type="string" pos:start="61:25" pos:end="61:37">"bad token\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:35">(<expr pos:start="69:9" pos:end="69:34"><call pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:26">ehci_init_transfer</name><argument_list pos:start="69:27" pos:end="69:29">(<argument pos:start="69:28" pos:end="69:28"><expr pos:start="69:28" pos:end="69:28"><name pos:start="69:28" pos:end="69:28">p</name></expr></argument>)</argument_list></call> <operator pos:start="69:31" pos:end="69:32">!=</operator> <literal type="number" pos:start="69:34" pos:end="69:34">0</literal></expr>)</condition> <block pos:start="69:37" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:31">

        <return pos:start="71:9" pos:end="71:31">return <expr pos:start="71:16" pos:end="71:30"><name pos:start="71:16" pos:end="71:30">USB_RET_PROCERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:56"><expr pos:start="77:5" pos:end="77:55"><name pos:start="77:5" pos:end="77:8">endp</name> <operator pos:start="77:10" pos:end="77:10">=</operator> <call pos:start="77:12" pos:end="77:55"><name pos:start="77:12" pos:end="77:20">get_field</name><argument_list pos:start="77:21" pos:end="77:55">(<argument pos:start="77:22" pos:end="77:40"><expr pos:start="77:22" pos:end="77:40"><name pos:start="77:22" pos:end="77:40"><name pos:start="77:22" pos:end="77:22">p</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:29">queue</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:33">qh</name><operator pos:start="77:34" pos:end="77:34">.</operator><name pos:start="77:35" pos:end="77:40">epchar</name></name></expr></argument>, <argument pos:start="77:43" pos:end="77:54"><expr pos:start="77:43" pos:end="77:54"><name pos:start="77:43" pos:end="77:54">QH_EPCHAR_EP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:49"><expr pos:start="79:5" pos:end="79:48"><name pos:start="79:5" pos:end="79:6">ep</name> <operator pos:start="79:8" pos:end="79:8">=</operator> <call pos:start="79:10" pos:end="79:48"><name pos:start="79:10" pos:end="79:19">usb_ep_get</name><argument_list pos:start="79:20" pos:end="79:48">(<argument pos:start="79:21" pos:end="79:33"><expr pos:start="79:21" pos:end="79:33"><name pos:start="79:21" pos:end="79:33"><name pos:start="79:21" pos:end="79:21">p</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:28">queue</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:33">dev</name></name></expr></argument>, <argument pos:start="79:36" pos:end="79:41"><expr pos:start="79:36" pos:end="79:41"><name pos:start="79:36" pos:end="79:41"><name pos:start="79:36" pos:end="79:36">p</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:41">pid</name></name></expr></argument>, <argument pos:start="79:44" pos:end="79:47"><expr pos:start="79:44" pos:end="79:47"><name pos:start="79:44" pos:end="79:47">endp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:57"><expr pos:start="83:5" pos:end="83:56"><call pos:start="83:5" pos:end="83:56"><name pos:start="83:5" pos:end="83:20">usb_packet_setup</name><argument_list pos:start="83:21" pos:end="83:56">(<argument pos:start="83:22" pos:end="83:31"><expr pos:start="83:22" pos:end="83:31"><operator pos:start="83:22" pos:end="83:22">&amp;</operator><name pos:start="83:23" pos:end="83:31"><name pos:start="83:23" pos:end="83:23">p</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:31">packet</name></name></expr></argument>, <argument pos:start="83:34" pos:end="83:39"><expr pos:start="83:34" pos:end="83:39"><name pos:start="83:34" pos:end="83:39"><name pos:start="83:34" pos:end="83:34">p</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:39">pid</name></name></expr></argument>, <argument pos:start="83:42" pos:end="83:43"><expr pos:start="83:42" pos:end="83:43"><name pos:start="83:42" pos:end="83:43">ep</name></expr></argument>, <argument pos:start="83:46" pos:end="83:55"><expr pos:start="83:46" pos:end="83:55"><name pos:start="83:46" pos:end="83:55"><name pos:start="83:46" pos:end="83:46">p</name><operator pos:start="83:47" pos:end="83:48">-&gt;</operator><name pos:start="83:49" pos:end="83:55">qtdaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:40"><expr pos:start="85:5" pos:end="85:39"><call pos:start="85:5" pos:end="85:39"><name pos:start="85:5" pos:end="85:18">usb_packet_map</name><argument_list pos:start="85:19" pos:end="85:39">(<argument pos:start="85:20" pos:end="85:29"><expr pos:start="85:20" pos:end="85:29"><operator pos:start="85:20" pos:end="85:20">&amp;</operator><name pos:start="85:21" pos:end="85:29"><name pos:start="85:21" pos:end="85:21">p</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:29">packet</name></name></expr></argument>, <argument pos:start="85:32" pos:end="85:38"><expr pos:start="85:32" pos:end="85:38"><operator pos:start="85:32" pos:end="85:32">&amp;</operator><name pos:start="85:33" pos:end="85:38"><name pos:start="85:33" pos:end="85:33">p</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:38">sgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:54"><expr pos:start="89:5" pos:end="89:53"><call pos:start="89:5" pos:end="89:53"><name pos:start="89:5" pos:end="89:32">trace_usb_ehci_packet_action</name><argument_list pos:start="89:33" pos:end="89:53">(<argument pos:start="89:34" pos:end="89:41"><expr pos:start="89:34" pos:end="89:41"><name pos:start="89:34" pos:end="89:41"><name pos:start="89:34" pos:end="89:34">p</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:41">queue</name></name></expr></argument>, <argument pos:start="89:44" pos:end="89:44"><expr pos:start="89:44" pos:end="89:44"><name pos:start="89:44" pos:end="89:44">p</name></expr></argument>, <argument pos:start="89:47" pos:end="89:52"><expr pos:start="89:47" pos:end="89:52"><name pos:start="89:47" pos:end="89:52">action</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:55"><expr pos:start="91:5" pos:end="91:54"><name pos:start="91:5" pos:end="91:7">ret</name> <operator pos:start="91:9" pos:end="91:9">=</operator> <call pos:start="91:11" pos:end="91:54"><name pos:start="91:11" pos:end="91:27">usb_handle_packet</name><argument_list pos:start="91:28" pos:end="91:54">(<argument pos:start="91:29" pos:end="91:41"><expr pos:start="91:29" pos:end="91:41"><name pos:start="91:29" pos:end="91:41"><name pos:start="91:29" pos:end="91:29">p</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:36">queue</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:41">dev</name></name></expr></argument>, <argument pos:start="91:44" pos:end="91:53"><expr pos:start="91:44" pos:end="91:53"><operator pos:start="91:44" pos:end="91:44">&amp;</operator><name pos:start="91:45" pos:end="91:53"><name pos:start="91:45" pos:end="91:45">p</name><operator pos:start="91:46" pos:end="91:47">-&gt;</operator><name pos:start="91:48" pos:end="91:53">packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="99:54"><expr pos:start="93:5" pos:end="99:53"><call pos:start="93:5" pos:end="99:53"><name pos:start="93:5" pos:end="93:11">DPRINTF</name><argument_list pos:start="93:12" pos:end="99:53">(<argument pos:start="93:13" pos:end="95:41"><expr pos:start="93:13" pos:end="95:41"><literal type="string" pos:start="93:13" pos:end="93:58">"submit: qh %x next %x qtd %x pid %x len %zd "</literal>

            <literal type="string" pos:start="95:13" pos:end="95:41">"(total %d) endp %x ret %d\n"</literal></expr></argument>,

            <argument pos:start="97:13" pos:end="97:21"><expr pos:start="97:13" pos:end="97:21"><name pos:start="97:13" pos:end="97:21"><name pos:start="97:13" pos:end="97:13">q</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:21">qhaddr</name></name></expr></argument>, <argument pos:start="97:24" pos:end="97:33"><expr pos:start="97:24" pos:end="97:33"><name pos:start="97:24" pos:end="97:33"><name pos:start="97:24" pos:end="97:24">q</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:28">qh</name><operator pos:start="97:29" pos:end="97:29">.</operator><name pos:start="97:30" pos:end="97:33">next</name></name></expr></argument>, <argument pos:start="97:36" pos:end="97:45"><expr pos:start="97:36" pos:end="97:45"><name pos:start="97:36" pos:end="97:45"><name pos:start="97:36" pos:end="97:36">q</name><operator pos:start="97:37" pos:end="97:38">-&gt;</operator><name pos:start="97:39" pos:end="97:45">qtdaddr</name></name></expr></argument>, <argument pos:start="97:48" pos:end="97:53"><expr pos:start="97:48" pos:end="97:53"><name pos:start="97:48" pos:end="97:53"><name pos:start="97:48" pos:end="97:48">q</name><operator pos:start="97:49" pos:end="97:50">-&gt;</operator><name pos:start="97:51" pos:end="97:53">pid</name></name></expr></argument>,

            <argument pos:start="99:13" pos:end="99:30"><expr pos:start="99:13" pos:end="99:30"><name pos:start="99:13" pos:end="99:30"><name pos:start="99:13" pos:end="99:13">q</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:21">packet</name><operator pos:start="99:22" pos:end="99:22">.</operator><name pos:start="99:23" pos:end="99:25">iov</name><operator pos:start="99:26" pos:end="99:26">.</operator><name pos:start="99:27" pos:end="99:30">size</name></name></expr></argument>, <argument pos:start="99:33" pos:end="99:41"><expr pos:start="99:33" pos:end="99:41"><name pos:start="99:33" pos:end="99:41"><name pos:start="99:33" pos:end="99:33">q</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:41">tbytes</name></name></expr></argument>, <argument pos:start="99:44" pos:end="99:47"><expr pos:start="99:44" pos:end="99:47"><name pos:start="99:44" pos:end="99:47">endp</name></expr></argument>, <argument pos:start="99:50" pos:end="99:52"><expr pos:start="99:50" pos:end="99:52"><name pos:start="99:50" pos:end="99:52">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if <condition pos:start="103:8" pos:end="103:24">(<expr pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">&gt;</operator> <name pos:start="103:15" pos:end="103:23">BUFF_SIZE</name></expr>)</condition> <block pos:start="103:26" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:31">

        <expr_stmt pos:start="105:9" pos:end="105:68"><expr pos:start="105:9" pos:end="105:67"><call pos:start="105:9" pos:end="105:67"><name pos:start="105:9" pos:end="105:15">fprintf</name><argument_list pos:start="105:16" pos:end="105:67">(<argument pos:start="105:17" pos:end="105:22"><expr pos:start="105:17" pos:end="105:22"><name pos:start="105:17" pos:end="105:22">stderr</name></expr></argument>, <argument pos:start="105:25" pos:end="105:66"><expr pos:start="105:25" pos:end="105:66"><literal type="string" pos:start="105:25" pos:end="105:66">"ret from usb_handle_packet &gt; BUFF_SIZE\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:31">return <expr pos:start="107:16" pos:end="107:30"><name pos:start="107:16" pos:end="107:30">USB_RET_PROCERR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="113:5" pos:end="113:15">return <expr pos:start="113:12" pos:end="113:14"><name pos:start="113:12" pos:end="113:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
