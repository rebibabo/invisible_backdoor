<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12454.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">protocol_client_vencrypt_auth</name><parameter_list pos:start="1:41" pos:end="1:81">(<parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:49">VncState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">vs</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:62">uint8_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">data</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:80"><decl pos:start="1:71" pos:end="1:80"><type pos:start="1:71" pos:end="1:80"><name pos:start="1:71" pos:end="1:76">size_t</name></type> <name pos:start="1:78" pos:end="1:80">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">auth</name> <init pos:start="5:14" pos:end="5:32">= <expr pos:start="5:16" pos:end="5:32"><call pos:start="5:16" pos:end="5:32"><name pos:start="5:16" pos:end="5:23">read_u32</name><argument_list pos:start="5:24" pos:end="5:32">(<argument pos:start="5:25" pos:end="5:28"><expr pos:start="5:25" pos:end="5:28"><name pos:start="5:25" pos:end="5:28">data</name></expr></argument>, <argument pos:start="5:31" pos:end="5:31"><expr pos:start="5:31" pos:end="5:31"><literal type="number" pos:start="5:31" pos:end="5:31">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="53:5"><if pos:start="9:5" pos:end="19:5">if <condition pos:start="9:8" pos:end="9:32">(<expr pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:12">auth</name> <operator pos:start="9:14" pos:end="9:15">!=</operator> <name pos:start="9:17" pos:end="9:31"><name pos:start="9:17" pos:end="9:18">vs</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:22">vd</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:31">subauth</name></name></expr>)</condition> <block pos:start="9:34" pos:end="19:5">{<block_content pos:start="11:9" pos:end="17:29">

	<expr_stmt pos:start="11:9" pos:end="11:47"><expr pos:start="11:9" pos:end="11:46"><call pos:start="11:9" pos:end="11:46"><name pos:start="11:9" pos:end="11:17">VNC_DEBUG</name><argument_list pos:start="11:18" pos:end="11:46">(<argument pos:start="11:19" pos:end="11:39"><expr pos:start="11:19" pos:end="11:39"><literal type="string" pos:start="11:19" pos:end="11:39">"Rejecting auth %d\n"</literal></expr></argument>, <argument pos:start="11:42" pos:end="11:45"><expr pos:start="11:42" pos:end="11:45"><name pos:start="11:42" pos:end="11:45">auth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="13:9" pos:end="13:28"><expr pos:start="13:9" pos:end="13:27"><call pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:20">vnc_write_u8</name><argument_list pos:start="13:21" pos:end="13:27">(<argument pos:start="13:22" pos:end="13:23"><expr pos:start="13:22" pos:end="13:23"><name pos:start="13:22" pos:end="13:23">vs</name></expr></argument>, <argument pos:start="13:26" pos:end="13:26"><expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="13:30" pos:end="13:46">/* Reject auth */</comment>

	<expr_stmt pos:start="15:9" pos:end="15:22"><expr pos:start="15:9" pos:end="15:21"><call pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:17">vnc_flush</name><argument_list pos:start="15:18" pos:end="15:21">(<argument pos:start="15:19" pos:end="15:20"><expr pos:start="15:19" pos:end="15:20"><name pos:start="15:19" pos:end="15:20">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><call pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:24">vnc_client_error</name><argument_list pos:start="17:25" pos:end="17:28">(<argument pos:start="17:26" pos:end="17:27"><expr pos:start="17:26" pos:end="17:27"><name pos:start="17:26" pos:end="17:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="53:5">else <block pos:start="19:12" pos:end="53:5">{<block_content pos:start="21:9" pos:end="51:9">

	<expr_stmt pos:start="21:9" pos:end="21:67"><expr pos:start="21:9" pos:end="21:66"><call pos:start="21:9" pos:end="21:66"><name pos:start="21:9" pos:end="21:17">VNC_DEBUG</name><argument_list pos:start="21:18" pos:end="21:66">(<argument pos:start="21:19" pos:end="21:59"><expr pos:start="21:19" pos:end="21:59"><literal type="string" pos:start="21:19" pos:end="21:59">"Accepting auth %d, starting handshake\n"</literal></expr></argument>, <argument pos:start="21:62" pos:end="21:65"><expr pos:start="21:62" pos:end="21:65"><name pos:start="21:62" pos:end="21:65">auth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="23:9" pos:end="23:28"><expr pos:start="23:9" pos:end="23:27"><call pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:20">vnc_write_u8</name><argument_list pos:start="23:21" pos:end="23:27">(<argument pos:start="23:22" pos:end="23:23"><expr pos:start="23:22" pos:end="23:23"><name pos:start="23:22" pos:end="23:23">vs</name></expr></argument>, <argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><literal type="number" pos:start="23:26" pos:end="23:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:30" pos:end="23:46">/* Accept auth */</comment>

	<expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><call pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:17">vnc_flush</name><argument_list pos:start="25:18" pos:end="25:21">(<argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><name pos:start="25:19" pos:end="25:20">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:34">(<expr pos:start="29:13" pos:end="29:33"><call pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:25">vnc_start_tls</name><argument_list pos:start="29:26" pos:end="29:29">(<argument pos:start="29:27" pos:end="29:28"><expr pos:start="29:27" pos:end="29:28"><name pos:start="29:27" pos:end="29:28">vs</name></expr></argument>)</argument_list></call> <operator pos:start="29:31" pos:end="29:31">&lt;</operator> <literal type="number" pos:start="29:33" pos:end="29:33">0</literal></expr>)</condition> <block pos:start="29:36" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:21">

	    <expr_stmt pos:start="31:13" pos:end="31:50"><expr pos:start="31:13" pos:end="31:49"><call pos:start="31:13" pos:end="31:49"><name pos:start="31:13" pos:end="31:21">VNC_DEBUG</name><argument_list pos:start="31:22" pos:end="31:49">(<argument pos:start="31:23" pos:end="31:48"><expr pos:start="31:23" pos:end="31:48"><literal type="string" pos:start="31:23" pos:end="31:48">"Failed to complete TLS\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>;</return>

	</block_content>}</block></if></if_stmt>



	<if_stmt pos:start="39:9" pos:end="51:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:45">(<expr pos:start="39:13" pos:end="39:44"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:14">vs</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:24">wiremode</name></name> <operator pos:start="39:26" pos:end="39:27">==</operator> <name pos:start="39:29" pos:end="39:44">VNC_WIREMODE_TLS</name></expr>)</condition> <block pos:start="39:47" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:51">

	    <expr_stmt pos:start="41:13" pos:end="41:53"><expr pos:start="41:13" pos:end="41:52"><call pos:start="41:13" pos:end="41:52"><name pos:start="41:13" pos:end="41:21">VNC_DEBUG</name><argument_list pos:start="41:22" pos:end="41:52">(<argument pos:start="41:23" pos:end="41:51"><expr pos:start="41:23" pos:end="41:51"><literal type="string" pos:start="41:23" pos:end="41:51">"Starting VeNCrypt subauth\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <return pos:start="43:13" pos:end="43:51">return <expr pos:start="43:20" pos:end="43:50"><call pos:start="43:20" pos:end="43:50"><name pos:start="43:20" pos:end="43:46">start_auth_vencrypt_subauth</name><argument_list pos:start="43:47" pos:end="43:50">(<argument pos:start="43:48" pos:end="43:49"><expr pos:start="43:48" pos:end="43:49"><name pos:start="43:48" pos:end="43:49">vs</name></expr></argument>)</argument_list></call></expr>;</return>

	</block_content>}</block></if> <else pos:start="45:11" pos:end="51:9">else <block pos:start="45:16" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:21">

	    <expr_stmt pos:start="47:13" pos:end="47:49"><expr pos:start="47:13" pos:end="47:48"><call pos:start="47:13" pos:end="47:48"><name pos:start="47:13" pos:end="47:21">VNC_DEBUG</name><argument_list pos:start="47:22" pos:end="47:48">(<argument pos:start="47:23" pos:end="47:47"><expr pos:start="47:23" pos:end="47:47"><literal type="string" pos:start="47:23" pos:end="47:47">"TLS handshake blocked\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <return pos:start="49:13" pos:end="49:21">return <expr pos:start="49:20" pos:end="49:20"><literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>;</return>

	</block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
