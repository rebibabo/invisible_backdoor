<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1511.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">qemu_notify_event</name><parameter_list pos:start="1:23" pos:end="1:28">(<parameter pos:start="1:24" pos:end="1:27"><decl pos:start="1:24" pos:end="1:27"><type pos:start="1:24" pos:end="1:27"><name pos:start="1:24" pos:end="1:27">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:21">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">env</name> <init pos:start="5:19" pos:end="5:34">= <expr pos:start="5:21" pos:end="5:34"><name pos:start="5:21" pos:end="5:34">cpu_single_env</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:28"><expr pos:start="9:5" pos:end="9:27"><call pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:24">qemu_event_increment</name> <argument_list pos:start="9:26" pos:end="9:27">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:12">(<expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">env</name></expr>)</condition> <block pos:start="11:14" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:22">

        <expr_stmt pos:start="13:9" pos:end="13:22"><expr pos:start="13:9" pos:end="13:21"><call pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:16">cpu_exit</name><argument_list pos:start="13:17" pos:end="13:21">(<argument pos:start="13:18" pos:end="13:20"><expr pos:start="13:18" pos:end="13:20"><name pos:start="13:18" pos:end="13:20">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:36">(<expr pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:16">next_cpu</name> <operator pos:start="17:18" pos:end="17:19">&amp;&amp;</operator> <name pos:start="17:21" pos:end="17:23">env</name> <operator pos:start="17:25" pos:end="17:26">!=</operator> <name pos:start="17:28" pos:end="17:35">next_cpu</name></expr>)</condition> <block pos:start="17:38" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:27">

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><call pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:16">cpu_exit</name><argument_list pos:start="19:17" pos:end="19:26">(<argument pos:start="19:18" pos:end="19:25"><expr pos:start="19:18" pos:end="19:25"><name pos:start="19:18" pos:end="19:25">next_cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:16">exit_request</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <literal type="number" pos:start="23:20" pos:end="23:20">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
