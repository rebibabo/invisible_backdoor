<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5398.c" pos:tabs="8"><function pos:start="1:1" pos:end="96:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">update_refcount_discard</name><parameter_list pos:start="1:36" pos:end="3:69">(<parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:52">BlockDriverState</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">bs</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:51"><decl pos:start="3:37" pos:end="3:51"><type pos:start="3:37" pos:end="3:51"><name pos:start="3:37" pos:end="3:44">uint64_t</name></type> <name pos:start="3:46" pos:end="3:51">offset</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:68"><decl pos:start="3:54" pos:end="3:68"><type pos:start="3:54" pos:end="3:68"><name pos:start="3:54" pos:end="3:61">uint64_t</name></type> <name pos:start="3:63" pos:end="3:68">length</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="96:1">{<block_content pos:start="7:5" pos:end="94:5">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22">Qcow2DiscardRegion</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:25">d</name></decl>, <decl pos:start="9:28" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:24"><modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:29">p</name></decl>, <decl pos:start="9:32" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:24"><modifier pos:start="9:32" pos:end="9:32">*</modifier></type><name pos:start="9:33" pos:end="9:36">next</name></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:41"><name pos:start="13:5" pos:end="13:18">QTAILQ_FOREACH</name><argument_list pos:start="13:19" pos:end="13:41">(<argument pos:start="13:20" pos:end="13:20">d</argument>, <argument pos:start="13:23" pos:end="13:34">&amp;s-&gt;discards</argument>, <argument pos:start="13:37" pos:end="13:40">next</argument>)</argument_list></macro> <block pos:start="13:43" pos:end="39:5">{<block_content pos:start="15:9" pos:end="37:9">

        <decl_stmt pos:start="15:9" pos:end="15:52"><decl pos:start="15:9" pos:end="15:51"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">uint64_t</name></type> <name pos:start="15:18" pos:end="15:26">new_start</name> <init pos:start="15:28" pos:end="15:51">= <expr pos:start="15:30" pos:end="15:51"><call pos:start="15:30" pos:end="15:51"><name pos:start="15:30" pos:end="15:32">MIN</name><argument_list pos:start="15:33" pos:end="15:51">(<argument pos:start="15:34" pos:end="15:39"><expr pos:start="15:34" pos:end="15:39"><name pos:start="15:34" pos:end="15:39">offset</name></expr></argument>, <argument pos:start="15:42" pos:end="15:50"><expr pos:start="15:42" pos:end="15:50"><name pos:start="15:42" pos:end="15:50"><name pos:start="15:42" pos:end="15:42">d</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:50">offset</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:70"><decl pos:start="17:9" pos:end="17:69"><type pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16">uint64_t</name></type> <name pos:start="17:18" pos:end="17:24">new_end</name> <init pos:start="17:26" pos:end="17:69">= <expr pos:start="17:28" pos:end="17:69"><call pos:start="17:28" pos:end="17:69"><name pos:start="17:28" pos:end="17:30">MAX</name><argument_list pos:start="17:31" pos:end="17:69">(<argument pos:start="17:32" pos:end="17:46"><expr pos:start="17:32" pos:end="17:46"><name pos:start="17:32" pos:end="17:37">offset</name> <operator pos:start="17:39" pos:end="17:39">+</operator> <name pos:start="17:41" pos:end="17:46">length</name></expr></argument>, <argument pos:start="17:49" pos:end="17:68"><expr pos:start="17:49" pos:end="17:68"><name pos:start="17:49" pos:end="17:57"><name pos:start="17:49" pos:end="17:49">d</name><operator pos:start="17:50" pos:end="17:51">-&gt;</operator><name pos:start="17:52" pos:end="17:57">offset</name></name> <operator pos:start="17:59" pos:end="17:59">+</operator> <name pos:start="17:61" pos:end="17:68"><name pos:start="17:61" pos:end="17:61">d</name><operator pos:start="17:62" pos:end="17:63">-&gt;</operator><name pos:start="17:64" pos:end="17:68">bytes</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="37:9"><if pos:start="21:9" pos:end="37:9">if <condition pos:start="21:12" pos:end="21:53">(<expr pos:start="21:13" pos:end="21:52"><name pos:start="21:13" pos:end="21:19">new_end</name> <operator pos:start="21:21" pos:end="21:21">-</operator> <name pos:start="21:23" pos:end="21:31">new_start</name> <operator pos:start="21:33" pos:end="21:34">&lt;=</operator> <name pos:start="21:36" pos:end="21:41">length</name> <operator pos:start="21:43" pos:end="21:43">+</operator> <name pos:start="21:45" pos:end="21:52"><name pos:start="21:45" pos:end="21:45">d</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:52">bytes</name></name></expr>)</condition> <block pos:start="21:55" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:23">

            <comment type="block" pos:start="23:13" pos:end="27:23">/* There can't be any overlap, areas ending up here have no

             * references any more and therefore shouldn't get freed another

             * time. */</comment>

            <expr_stmt pos:start="29:13" pos:end="29:61"><expr pos:start="29:13" pos:end="29:60"><call pos:start="29:13" pos:end="29:60"><name pos:start="29:13" pos:end="29:18">assert</name><argument_list pos:start="29:19" pos:end="29:60">(<argument pos:start="29:20" pos:end="29:59"><expr pos:start="29:20" pos:end="29:59"><name pos:start="29:20" pos:end="29:27"><name pos:start="29:20" pos:end="29:20">d</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:27">bytes</name></name> <operator pos:start="29:29" pos:end="29:29">+</operator> <name pos:start="29:31" pos:end="29:36">length</name> <operator pos:start="29:38" pos:end="29:39">==</operator> <name pos:start="29:41" pos:end="29:47">new_end</name> <operator pos:start="29:49" pos:end="29:49">-</operator> <name pos:start="29:51" pos:end="29:59">new_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:34"><expr pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:13">d</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:21">offset</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:33">new_start</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:43"><expr pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:13">d</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:20">bytes</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:30">new_end</name> <operator pos:start="33:32" pos:end="33:32">-</operator> <name pos:start="33:34" pos:end="33:42">new_start</name></expr>;</expr_stmt>

            <goto pos:start="35:13" pos:end="35:23">goto <name pos:start="35:18" pos:end="35:22">found</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:5">d</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <call pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:16">g_malloc</name><argument_list pos:start="43:17" pos:end="43:28">(<argument pos:start="43:18" pos:end="43:27"><expr pos:start="43:18" pos:end="43:27"><sizeof pos:start="43:18" pos:end="43:27">sizeof<argument_list pos:start="43:24" pos:end="43:27">(<argument pos:start="43:25" pos:end="43:26"><expr pos:start="43:25" pos:end="43:26"><operator pos:start="43:25" pos:end="43:25">*</operator><name pos:start="43:26" pos:end="43:26">d</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="53:6"><expr pos:start="45:5" pos:end="53:5"><operator pos:start="45:5" pos:end="45:5">*</operator><name pos:start="45:6" pos:end="45:6">d</name> <operator pos:start="45:8" pos:end="45:8">=</operator> <operator pos:start="45:10" pos:end="45:10">(</operator><name pos:start="45:11" pos:end="45:28">Qcow2DiscardRegion</name><operator pos:start="45:29" pos:end="45:29">)</operator> <block pos:start="45:31" pos:end="53:5">{

        <expr pos:start="47:9" pos:end="47:20"><operator pos:start="47:9" pos:end="47:9">.</operator><name pos:start="47:10" pos:end="47:11">bs</name>     <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:20">bs</name></expr>,

        <expr pos:start="49:9" pos:end="49:24"><operator pos:start="49:9" pos:end="49:9">.</operator><name pos:start="49:10" pos:end="49:15">offset</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:24">offset</name></expr>,

        <expr pos:start="51:9" pos:end="51:24"><operator pos:start="51:9" pos:end="51:9">.</operator><name pos:start="51:10" pos:end="51:14">bytes</name>  <operator pos:start="51:17" pos:end="51:17">=</operator> <name pos:start="51:19" pos:end="51:24">length</name></expr>,

    }</block></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:46"><expr pos:start="55:5" pos:end="55:45"><call pos:start="55:5" pos:end="55:45"><name pos:start="55:5" pos:end="55:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="55:23" pos:end="55:45">(<argument pos:start="55:24" pos:end="55:35"><expr pos:start="55:24" pos:end="55:35"><operator pos:start="55:24" pos:end="55:24">&amp;</operator><name pos:start="55:25" pos:end="55:35"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:35">discards</name></name></expr></argument>, <argument pos:start="55:38" pos:end="55:38"><expr pos:start="55:38" pos:end="55:38"><name pos:start="55:38" pos:end="55:38">d</name></expr></argument>, <argument pos:start="55:41" pos:end="55:44"><expr pos:start="55:41" pos:end="55:44"><name pos:start="55:41" pos:end="55:44">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="59:1" pos:end="59:6"><name pos:start="59:1" pos:end="59:5">found</name>:</label>

    <comment type="block" pos:start="61:5" pos:end="61:57">/* Merge discard requests if they are adjacent now */</comment>

    <macro pos:start="63:5" pos:end="63:52"><name pos:start="63:5" pos:end="63:23">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="63:24" pos:end="63:52">(<argument pos:start="63:25" pos:end="63:25">p</argument>, <argument pos:start="63:28" pos:end="63:39">&amp;s-&gt;discards</argument>, <argument pos:start="63:42" pos:end="63:45">next</argument>, <argument pos:start="63:48" pos:end="63:51">next</argument>)</argument_list></macro> <block pos:start="63:54" pos:end="94:5">{<block_content pos:start="65:9" pos:end="91:29">

        <if_stmt pos:start="65:9" pos:end="75:9"><if pos:start="65:9" pos:end="75:9">if <condition pos:start="65:12" pos:end="69:48">(<expr pos:start="65:13" pos:end="69:47"><name pos:start="65:13" pos:end="65:13">p</name> <operator pos:start="65:15" pos:end="65:16">==</operator> <name pos:start="65:18" pos:end="65:18">d</name>

            <operator pos:start="67:13" pos:end="67:14">||</operator> <name pos:start="67:16" pos:end="67:24"><name pos:start="67:16" pos:end="67:16">p</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:24">offset</name></name> <operator pos:start="67:26" pos:end="67:26">&gt;</operator> <name pos:start="67:28" pos:end="67:36"><name pos:start="67:28" pos:end="67:28">d</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:36">offset</name></name> <operator pos:start="67:38" pos:end="67:38">+</operator> <name pos:start="67:40" pos:end="67:47"><name pos:start="67:40" pos:end="67:40">d</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:47">bytes</name></name>

            <operator pos:start="69:13" pos:end="69:14">||</operator> <name pos:start="69:16" pos:end="69:24"><name pos:start="69:16" pos:end="69:16">d</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:24">offset</name></name> <operator pos:start="69:26" pos:end="69:26">&gt;</operator> <name pos:start="69:28" pos:end="69:36"><name pos:start="69:28" pos:end="69:28">p</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:36">offset</name></name> <operator pos:start="69:38" pos:end="69:38">+</operator> <name pos:start="69:40" pos:end="69:47"><name pos:start="69:40" pos:end="69:40">p</name><operator pos:start="69:41" pos:end="69:42">-&gt;</operator><name pos:start="69:43" pos:end="69:47">bytes</name></name></expr>)</condition>

        <block pos:start="71:9" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:21">

            <continue pos:start="73:13" pos:end="73:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="79:9" pos:end="79:39">/* Still no overlap possible */</comment>

        <expr_stmt pos:start="81:9" pos:end="83:50"><expr pos:start="81:9" pos:end="83:49"><call pos:start="81:9" pos:end="83:49"><name pos:start="81:9" pos:end="81:14">assert</name><argument_list pos:start="81:15" pos:end="83:49">(<argument pos:start="81:16" pos:end="83:48"><expr pos:start="81:16" pos:end="83:48"><name pos:start="81:16" pos:end="81:24"><name pos:start="81:16" pos:end="81:16">p</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:24">offset</name></name> <operator pos:start="81:26" pos:end="81:27">==</operator> <name pos:start="81:29" pos:end="81:37"><name pos:start="81:29" pos:end="81:29">d</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:37">offset</name></name> <operator pos:start="81:39" pos:end="81:39">+</operator> <name pos:start="81:41" pos:end="81:48"><name pos:start="81:41" pos:end="81:41">d</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:48">bytes</name></name>

            <operator pos:start="83:13" pos:end="83:14">||</operator> <name pos:start="83:16" pos:end="83:24"><name pos:start="83:16" pos:end="83:16">d</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:24">offset</name></name> <operator pos:start="83:26" pos:end="83:27">==</operator> <name pos:start="83:29" pos:end="83:37"><name pos:start="83:29" pos:end="83:29">p</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:37">offset</name></name> <operator pos:start="83:39" pos:end="83:39">+</operator> <name pos:start="83:41" pos:end="83:48"><name pos:start="83:41" pos:end="83:41">p</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:48">bytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:45"><expr pos:start="87:9" pos:end="87:44"><call pos:start="87:9" pos:end="87:44"><name pos:start="87:9" pos:end="87:21">QTAILQ_REMOVE</name><argument_list pos:start="87:22" pos:end="87:44">(<argument pos:start="87:23" pos:end="87:34"><expr pos:start="87:23" pos:end="87:34"><operator pos:start="87:23" pos:end="87:23">&amp;</operator><name pos:start="87:24" pos:end="87:34"><name pos:start="87:24" pos:end="87:24">s</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:34">discards</name></name></expr></argument>, <argument pos:start="87:37" pos:end="87:37"><expr pos:start="87:37" pos:end="87:37"><name pos:start="87:37" pos:end="87:37">p</name></expr></argument>, <argument pos:start="87:40" pos:end="87:43"><expr pos:start="87:40" pos:end="87:43"><name pos:start="87:40" pos:end="87:43">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:46"><expr pos:start="89:9" pos:end="89:45"><name pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:9">d</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:17">offset</name></name> <operator pos:start="89:19" pos:end="89:19">=</operator> <call pos:start="89:21" pos:end="89:45"><name pos:start="89:21" pos:end="89:23">MIN</name><argument_list pos:start="89:24" pos:end="89:45">(<argument pos:start="89:25" pos:end="89:33"><expr pos:start="89:25" pos:end="89:33"><name pos:start="89:25" pos:end="89:33"><name pos:start="89:25" pos:end="89:25">d</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:33">offset</name></name></expr></argument>, <argument pos:start="89:36" pos:end="89:44"><expr pos:start="89:36" pos:end="89:44"><name pos:start="89:36" pos:end="89:44"><name pos:start="89:36" pos:end="89:36">p</name><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:44">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:29"><expr pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:9">d</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:16">bytes</name></name> <operator pos:start="91:18" pos:end="91:19">+=</operator> <name pos:start="91:21" pos:end="91:28"><name pos:start="91:21" pos:end="91:21">p</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:28">bytes</name></name></expr>;</expr_stmt>


    </block_content>}</block>

</block_content>}</block></function></unit>
