<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22306.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:15">QEMUSizedBuffer</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:27">qsb_create</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:41">uint8_t</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:49">buffer</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:57">size_t</name></type> <name pos:start="1:59" pos:end="1:61">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:15">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">QEMUSizedBuffer</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">qsb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:20">alloc_len</name></decl>, <decl pos:start="7:23" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:23" pos:end="7:32">num_chunks</name></decl>, <decl pos:start="7:35" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:35" pos:end="7:35">i</name></decl>, <decl pos:start="7:38" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:38" pos:end="7:44">to_copy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="13:41"><decl pos:start="9:5" pos:end="13:40"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:21">chunk_size</name> <init pos:start="9:23" pos:end="13:40">= <expr pos:start="9:25" pos:end="13:40"><ternary pos:start="9:25" pos:end="13:40"><condition pos:start="9:25" pos:end="11:25"><expr pos:start="9:25" pos:end="9:50"><operator pos:start="9:25" pos:end="9:25">(</operator><name pos:start="9:26" pos:end="9:28">len</name> <operator pos:start="9:30" pos:end="9:30">&gt;</operator> <name pos:start="9:32" pos:end="9:49">QSB_MAX_CHUNK_SIZE</name><operator pos:start="9:50" pos:end="9:50">)</operator></expr>

                        ?</condition><then pos:start="11:27" pos:end="11:44"> <expr pos:start="11:27" pos:end="11:44"><name pos:start="11:27" pos:end="11:44">QSB_MAX_CHUNK_SIZE</name></expr>

                        </then><else pos:start="13:25" pos:end="13:40">: <expr pos:start="13:27" pos:end="13:40"><name pos:start="13:27" pos:end="13:40">QSB_CHUNK_SIZE</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:70"><expr pos:start="17:5" pos:end="17:69"><name pos:start="17:5" pos:end="17:14">num_chunks</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:69"><name pos:start="17:18" pos:end="17:29">DIV_ROUND_UP</name><argument_list pos:start="17:30" pos:end="17:69">(<argument pos:start="17:31" pos:end="17:56"><expr pos:start="17:31" pos:end="17:56"><ternary pos:start="17:31" pos:end="17:56"><condition pos:start="17:31" pos:end="17:35"><expr pos:start="17:31" pos:end="17:33"><name pos:start="17:31" pos:end="17:33">len</name></expr> ?</condition><then pos:start="17:37" pos:end="17:39"> <expr pos:start="17:37" pos:end="17:39"><name pos:start="17:37" pos:end="17:39">len</name></expr> </then><else pos:start="17:41" pos:end="17:56">: <expr pos:start="17:43" pos:end="17:56"><name pos:start="17:43" pos:end="17:56">QSB_CHUNK_SIZE</name></expr></else></ternary></expr></argument>, <argument pos:start="17:59" pos:end="17:68"><expr pos:start="17:59" pos:end="17:68"><name pos:start="17:59" pos:end="17:68">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:40"><expr pos:start="19:5" pos:end="19:39"><name pos:start="19:5" pos:end="19:13">alloc_len</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:26">num_chunks</name> <operator pos:start="19:28" pos:end="19:28">*</operator> <name pos:start="19:30" pos:end="19:39">chunk_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:7">qsb</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:40"><name pos:start="23:11" pos:end="23:20">g_try_new0</name><argument_list pos:start="23:21" pos:end="23:40">(<argument pos:start="23:22" pos:end="23:36"><expr pos:start="23:22" pos:end="23:36"><name pos:start="23:22" pos:end="23:36">QEMUSizedBuffer</name></expr></argument>, <argument pos:start="23:39" pos:end="23:39"><expr pos:start="23:39" pos:end="23:39"><literal type="number" pos:start="23:39" pos:end="23:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:13">(<expr pos:start="25:9" pos:end="25:12"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:12">qsb</name></expr>)</condition> <block pos:start="25:15" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:20">

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:52"><expr pos:start="33:5" pos:end="33:51"><name pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:7">qsb</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:12">iov</name></name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:51"><name pos:start="33:16" pos:end="33:25">g_try_new0</name><argument_list pos:start="33:26" pos:end="33:51">(<argument pos:start="33:27" pos:end="33:38"><expr pos:start="33:27" pos:end="33:38">struct <name pos:start="33:34" pos:end="33:38">iovec</name></expr></argument>, <argument pos:start="33:41" pos:end="33:50"><expr pos:start="33:41" pos:end="33:50"><name pos:start="33:41" pos:end="33:50">num_chunks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:18">(<expr pos:start="35:9" pos:end="35:17"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:17"><name pos:start="35:10" pos:end="35:12">qsb</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:17">iov</name></name></expr>)</condition> <block pos:start="35:20" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:20">

        <expr_stmt pos:start="37:9" pos:end="37:20"><expr pos:start="37:9" pos:end="37:19"><call pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:14">g_free</name><argument_list pos:start="37:15" pos:end="37:19">(<argument pos:start="37:16" pos:end="37:18"><expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">qsb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:20">return <expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:28"><expr pos:start="45:5" pos:end="45:27"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:7">qsb</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:14">n_iov</name></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:27">num_chunks</name></expr>;</expr_stmt>



    <for pos:start="49:5" pos:end="79:5">for <control pos:start="49:9" pos:end="49:36">(<init pos:start="49:10" pos:end="49:15"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</init> <condition pos:start="49:17" pos:end="49:31"><expr pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <name pos:start="49:21" pos:end="49:30">num_chunks</name></expr>;</condition> <incr pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:33">i</name><operator pos:start="49:34" pos:end="49:35">++</operator></expr></incr>)</control> <block pos:start="49:38" pos:end="79:5">{<block_content pos:start="51:9" pos:end="77:9">

        <expr_stmt pos:start="51:9" pos:end="51:57"><expr pos:start="51:9" pos:end="51:56"><name pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:11">qsb</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:16">iov</name><index pos:start="51:17" pos:end="51:19">[<expr pos:start="51:18" pos:end="51:18"><name pos:start="51:18" pos:end="51:18">i</name></expr>]</index></name><operator pos:start="51:20" pos:end="51:20">.</operator><name pos:start="51:21" pos:end="51:28">iov_base</name> <operator pos:start="51:30" pos:end="51:30">=</operator> <call pos:start="51:32" pos:end="51:56"><name pos:start="51:32" pos:end="51:44">g_try_malloc0</name><argument_list pos:start="51:45" pos:end="51:56">(<argument pos:start="51:46" pos:end="51:55"><expr pos:start="51:46" pos:end="51:55"><name pos:start="51:46" pos:end="51:55">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:34">(<expr pos:start="53:13" pos:end="53:33"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:24"><name pos:start="53:14" pos:end="53:16">qsb</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:21">iov</name><index pos:start="53:22" pos:end="53:24">[<expr pos:start="53:23" pos:end="53:23"><name pos:start="53:23" pos:end="53:23">i</name></expr>]</index></name><operator pos:start="53:25" pos:end="53:25">.</operator><name pos:start="53:26" pos:end="53:33">iov_base</name></expr>)</condition> <block pos:start="53:36" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:24">

            <comment type="block" pos:start="55:13" pos:end="55:66">/* qsb_free is safe since g_free can cope with NULL */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:26"><expr pos:start="57:13" pos:end="57:25"><call pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:20">qsb_free</name><argument_list pos:start="57:21" pos:end="57:25">(<argument pos:start="57:22" pos:end="57:24"><expr pos:start="57:22" pos:end="57:24"><name pos:start="57:22" pos:end="57:24">qsb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:24">return <expr pos:start="59:20" pos:end="59:23"><name pos:start="59:20" pos:end="59:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:41"><expr pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:11">qsb</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:16">iov</name><index pos:start="65:17" pos:end="65:19">[<expr pos:start="65:18" pos:end="65:18"><name pos:start="65:18" pos:end="65:18">i</name></expr>]</index></name><operator pos:start="65:20" pos:end="65:20">.</operator><name pos:start="65:21" pos:end="65:27">iov_len</name> <operator pos:start="65:29" pos:end="65:29">=</operator> <name pos:start="65:31" pos:end="65:40">chunk_size</name></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="77:9"><if pos:start="67:9" pos:end="77:9">if <condition pos:start="67:12" pos:end="67:19">(<expr pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:18">buffer</name></expr>)</condition> <block pos:start="67:21" pos:end="77:9">{<block_content pos:start="69:13" pos:end="75:33">

            <expr_stmt pos:start="69:13" pos:end="71:55"><expr pos:start="69:13" pos:end="71:54"><name pos:start="69:13" pos:end="69:19">to_copy</name> <operator pos:start="69:21" pos:end="69:21">=</operator> <ternary pos:start="69:23" pos:end="71:54"><condition pos:start="69:23" pos:end="71:23"><expr pos:start="69:23" pos:end="69:52"><operator pos:start="69:23" pos:end="69:23">(</operator><name pos:start="69:24" pos:end="69:26">len</name> <operator pos:start="69:28" pos:end="69:28">-</operator> <name pos:start="69:30" pos:end="69:38"><name pos:start="69:30" pos:end="69:32">qsb</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:38">used</name></name><operator pos:start="69:39" pos:end="69:39">)</operator> <operator pos:start="69:41" pos:end="69:41">&gt;</operator> <name pos:start="69:43" pos:end="69:52">chunk_size</name></expr>

                      ?</condition><then pos:start="71:25" pos:end="71:34"> <expr pos:start="71:25" pos:end="71:34"><name pos:start="71:25" pos:end="71:34">chunk_size</name></expr> </then><else pos:start="71:36" pos:end="71:54">: <expr pos:start="71:38" pos:end="71:54"><operator pos:start="71:38" pos:end="71:38">(</operator><name pos:start="71:39" pos:end="71:41">len</name> <operator pos:start="71:43" pos:end="71:43">-</operator> <name pos:start="71:45" pos:end="71:53"><name pos:start="71:45" pos:end="71:47">qsb</name><operator pos:start="71:48" pos:end="71:49">-&gt;</operator><name pos:start="71:50" pos:end="71:53">used</name></name><operator pos:start="71:54" pos:end="71:54">)</operator></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:70"><expr pos:start="73:13" pos:end="73:69"><call pos:start="73:13" pos:end="73:69"><name pos:start="73:13" pos:end="73:18">memcpy</name><argument_list pos:start="73:19" pos:end="73:69">(<argument pos:start="73:20" pos:end="73:39"><expr pos:start="73:20" pos:end="73:39"><name pos:start="73:20" pos:end="73:30"><name pos:start="73:20" pos:end="73:22">qsb</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:27">iov</name><index pos:start="73:28" pos:end="73:30">[<expr pos:start="73:29" pos:end="73:29"><name pos:start="73:29" pos:end="73:29">i</name></expr>]</index></name><operator pos:start="73:31" pos:end="73:31">.</operator><name pos:start="73:32" pos:end="73:39">iov_base</name></expr></argument>, <argument pos:start="73:42" pos:end="73:59"><expr pos:start="73:42" pos:end="73:59"><operator pos:start="73:42" pos:end="73:42">&amp;</operator><name pos:start="73:43" pos:end="73:59"><name pos:start="73:43" pos:end="73:48">buffer</name><index pos:start="73:49" pos:end="73:59">[<expr pos:start="73:50" pos:end="73:58"><name pos:start="73:50" pos:end="73:58"><name pos:start="73:50" pos:end="73:52">qsb</name><operator pos:start="73:53" pos:end="73:54">-&gt;</operator><name pos:start="73:55" pos:end="73:58">used</name></name></expr>]</index></name></expr></argument>, <argument pos:start="73:62" pos:end="73:68"><expr pos:start="73:62" pos:end="73:68"><name pos:start="73:62" pos:end="73:68">to_copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:33"><expr pos:start="75:13" pos:end="75:32"><name pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:15">qsb</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:21">used</name></name> <operator pos:start="75:23" pos:end="75:24">+=</operator> <name pos:start="75:26" pos:end="75:32">to_copy</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="83:5" pos:end="83:26"><expr pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:13"><name pos:start="83:5" pos:end="83:7">qsb</name><operator pos:start="83:8" pos:end="83:9">-&gt;</operator><name pos:start="83:10" pos:end="83:13">size</name></name> <operator pos:start="83:15" pos:end="83:15">=</operator> <name pos:start="83:17" pos:end="83:25">alloc_len</name></expr>;</expr_stmt>



    <return pos:start="87:5" pos:end="87:15">return <expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">qsb</name></expr>;</return>

</block_content>}</block></function>
</unit>
