<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22848.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">usb_hub_handle_data</name><parameter_list pos:start="1:31" pos:end="1:60">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:40">USBDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:56">USBPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:15">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">USBHubState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:39">= <expr pos:start="5:22" pos:end="5:39"><operator pos:start="5:22" pos:end="5:22">(</operator><name pos:start="5:23" pos:end="5:33">USBHubState</name> <operator pos:start="5:35" pos:end="5:35">*</operator><operator pos:start="5:36" pos:end="5:36">)</operator><name pos:start="5:37" pos:end="5:39">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="81:5">switch<condition pos:start="11:11" pos:end="11:18">(<expr pos:start="11:12" pos:end="11:17"><name pos:start="11:12" pos:end="11:17"><name pos:start="11:12" pos:end="11:12">p</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:17">pid</name></name></expr>)</condition> <block pos:start="11:20" pos:end="81:5">{<block_content pos:start="13:5" pos:end="79:14">

    <case pos:start="13:5" pos:end="13:22">case <expr pos:start="13:10" pos:end="13:21"><name pos:start="13:10" pos:end="13:21">USB_TOKEN_IN</name></expr>:</case>

        <if_stmt pos:start="15:9" pos:end="67:9"><if pos:start="15:9" pos:end="63:9">if <condition pos:start="15:12" pos:end="15:26">(<expr pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:13">p</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:20">devep</name></name> <operator pos:start="15:22" pos:end="15:23">==</operator> <literal type="number" pos:start="15:25" pos:end="15:25">1</literal></expr>)</condition> <block pos:start="15:28" pos:end="63:9">{<block_content pos:start="17:13" pos:end="61:13">

            <decl_stmt pos:start="17:13" pos:end="17:29"><decl pos:start="17:13" pos:end="17:28"><type pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:22">USBHubPort</name> <modifier pos:start="17:24" pos:end="17:24">*</modifier></type><name pos:start="17:25" pos:end="17:28">port</name></decl>;</decl_stmt>

            <decl_stmt pos:start="19:13" pos:end="19:32"><decl pos:start="19:13" pos:end="19:31"><type pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:20">unsigned</name> <name pos:start="19:22" pos:end="19:24">int</name></type> <name pos:start="19:26" pos:end="19:31">status</name></decl>;</decl_stmt>

            <decl_stmt pos:start="21:13" pos:end="21:21"><decl pos:start="21:13" pos:end="21:17"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:17">i</name></decl>, <decl pos:start="21:20" pos:end="21:20"><type ref="prev" pos:start="21:13" pos:end="21:15"/><name pos:start="21:20" pos:end="21:20">n</name></decl>;</decl_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:40"><expr pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:13">n</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <operator pos:start="23:17" pos:end="23:17">(</operator><name pos:start="23:18" pos:end="23:26">NUM_PORTS</name> <operator pos:start="23:28" pos:end="23:28">+</operator> <literal type="number" pos:start="23:30" pos:end="23:32">1</literal> <operator pos:start="23:32" pos:end="23:32">+</operator> <literal type="number" pos:start="23:34" pos:end="23:34">7</literal><operator pos:start="23:35" pos:end="23:35">)</operator> <operator pos:start="23:37" pos:end="23:37">/</operator> <literal type="number" pos:start="23:39" pos:end="23:39">8</literal></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="33:13"><if pos:start="25:13" pos:end="29:13">if <condition pos:start="25:16" pos:end="25:28">(<expr pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:17">p</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:22">len</name></name> <operator pos:start="25:24" pos:end="25:25">==</operator> <literal type="number" pos:start="25:27" pos:end="25:27">1</literal></expr>)</condition> <block pos:start="25:30" pos:end="29:13">{<block_content pos:start="27:17" pos:end="27:22"> <comment type="block" pos:start="25:32" pos:end="25:55">/* FreeBSD workaround */</comment>

                <expr_stmt pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:21"><name pos:start="27:17" pos:end="27:17">n</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="29:15" pos:end="33:13">else if <condition pos:start="29:23" pos:end="29:34">(<expr pos:start="29:24" pos:end="29:33"><name pos:start="29:24" pos:end="29:24">n</name> <operator pos:start="29:26" pos:end="29:26">&gt;</operator> <name pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:28">p</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:33">len</name></name></expr>)</condition> <block pos:start="29:36" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:38">

                <return pos:start="31:17" pos:end="31:38">return <expr pos:start="31:24" pos:end="31:37"><name pos:start="31:24" pos:end="31:37">USB_RET_BABBLE</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:23"><expr pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:18">status</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr>;</expr_stmt>

            <for pos:start="37:13" pos:end="45:13">for<control pos:start="37:16" pos:end="37:42">(<init pos:start="37:17" pos:end="37:22"><expr pos:start="37:17" pos:end="37:21"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="number" pos:start="37:21" pos:end="37:21">0</literal></expr>;</init> <condition pos:start="37:24" pos:end="37:37"><expr pos:start="37:24" pos:end="37:36"><name pos:start="37:24" pos:end="37:24">i</name> <operator pos:start="37:26" pos:end="37:26">&lt;</operator> <name pos:start="37:28" pos:end="37:36">NUM_PORTS</name></expr>;</condition> <incr pos:start="37:39" pos:end="37:41"><expr pos:start="37:39" pos:end="37:41"><name pos:start="37:39" pos:end="37:39">i</name><operator pos:start="37:40" pos:end="37:41">++</operator></expr></incr>)</control> <block pos:start="37:44" pos:end="45:13">{<block_content pos:start="39:17" pos:end="43:45">

                <expr_stmt pos:start="39:17" pos:end="39:36"><expr pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:20">port</name> <operator pos:start="39:22" pos:end="39:22">=</operator> <operator pos:start="39:24" pos:end="39:24">&amp;</operator><name pos:start="39:25" pos:end="39:35"><name pos:start="39:25" pos:end="39:25">s</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:32">ports</name><index pos:start="39:33" pos:end="39:35">[<expr pos:start="39:34" pos:end="39:34"><name pos:start="39:34" pos:end="39:34">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="41:17" pos:end="43:45"><if pos:start="41:17" pos:end="43:45">if <condition pos:start="41:20" pos:end="41:38">(<expr pos:start="41:21" pos:end="41:37"><name pos:start="41:21" pos:end="41:37"><name pos:start="41:21" pos:end="41:24">port</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:37">wPortChange</name></name></expr>)</condition><block type="pseudo" pos:start="43:21" pos:end="43:45"><block_content pos:start="43:21" pos:end="43:45">

                    <expr_stmt pos:start="43:21" pos:end="43:45"><expr pos:start="43:21" pos:end="43:44"><name pos:start="43:21" pos:end="43:26">status</name> <operator pos:start="43:28" pos:end="43:29">|=</operator> <operator pos:start="43:31" pos:end="43:31">(</operator><literal type="number" pos:start="43:32" pos:end="43:32">1</literal> <operator pos:start="43:34" pos:end="43:35">&lt;&lt;</operator> <operator pos:start="43:37" pos:end="43:37">(</operator><name pos:start="43:38" pos:end="43:38">i</name> <operator pos:start="43:40" pos:end="43:40">+</operator> <literal type="number" pos:start="43:42" pos:end="43:42">1</literal><operator pos:start="43:43" pos:end="43:43">)</operator><operator pos:start="43:44" pos:end="43:44">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="47:13" pos:end="61:13"><if pos:start="47:13" pos:end="57:13">if <condition pos:start="47:16" pos:end="47:28">(<expr pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:22">status</name> <operator pos:start="47:24" pos:end="47:25">!=</operator> <literal type="number" pos:start="47:27" pos:end="47:27">0</literal></expr>)</condition> <block pos:start="47:30" pos:end="57:13">{<block_content pos:start="49:17" pos:end="55:24">

                <for pos:start="49:17" pos:end="53:17">for<control pos:start="49:20" pos:end="49:38">(<init pos:start="49:21" pos:end="49:26"><expr pos:start="49:21" pos:end="49:25"><name pos:start="49:21" pos:end="49:21">i</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="number" pos:start="49:25" pos:end="49:25">0</literal></expr>;</init> <condition pos:start="49:28" pos:end="49:33"><expr pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:28">i</name> <operator pos:start="49:30" pos:end="49:30">&lt;</operator> <name pos:start="49:32" pos:end="49:32">n</name></expr>;</condition> <incr pos:start="49:35" pos:end="49:37"><expr pos:start="49:35" pos:end="49:37"><name pos:start="49:35" pos:end="49:35">i</name><operator pos:start="49:36" pos:end="49:37">++</operator></expr></incr>)</control> <block pos:start="49:40" pos:end="53:17">{<block_content pos:start="51:21" pos:end="51:51">

                    <expr_stmt pos:start="51:21" pos:end="51:51"><expr pos:start="51:21" pos:end="51:50"><name pos:start="51:21" pos:end="51:30"><name pos:start="51:21" pos:end="51:21">p</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:27">data</name><index pos:start="51:28" pos:end="51:30">[<expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">i</name></expr>]</index></name> <operator pos:start="51:32" pos:end="51:32">=</operator> <name pos:start="51:34" pos:end="51:39">status</name> <operator pos:start="51:41" pos:end="51:42">&gt;&gt;</operator> <operator pos:start="51:44" pos:end="51:44">(</operator><literal type="number" pos:start="51:45" pos:end="51:45">8</literal> <operator pos:start="51:47" pos:end="51:47">*</operator> <name pos:start="51:49" pos:end="51:49">i</name><operator pos:start="51:50" pos:end="51:50">)</operator></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="55:17" pos:end="55:24"><expr pos:start="55:17" pos:end="55:23"><name pos:start="55:17" pos:end="55:19">ret</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:23">n</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="61:13">else <block pos:start="57:20" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:34">

                <expr_stmt pos:start="59:17" pos:end="59:34"><expr pos:start="59:17" pos:end="59:33"><name pos:start="59:17" pos:end="59:19">ret</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:33">USB_RET_NAK</name></expr>;</expr_stmt> <comment type="block" pos:start="59:36" pos:end="59:54">/* usb11 11.13.1 */</comment>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="67:9">else <block pos:start="63:16" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:22">

            <goto pos:start="65:13" pos:end="65:22">goto <name pos:start="65:18" pos:end="65:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:23">case <expr pos:start="71:10" pos:end="71:22"><name pos:start="71:10" pos:end="71:22">USB_TOKEN_OUT</name></expr>:</case>

    <default pos:start="73:5" pos:end="73:12">default:</default>

    <label pos:start="75:5" pos:end="75:9"><name pos:start="75:5" pos:end="75:8">fail</name>:</label>

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:27">USB_RET_STALL</name></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="83:5" pos:end="83:15">return <expr pos:start="83:12" pos:end="83:14"><name pos:start="83:12" pos:end="83:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
