<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10509.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:46">decompress_data_with_multi_threads</name><parameter_list pos:start="1:47" pos:end="3:67">(<parameter pos:start="1:48" pos:end="1:58"><decl pos:start="1:48" pos:end="1:58"><type pos:start="1:48" pos:end="1:58"><name pos:start="1:48" pos:end="1:55">QEMUFile</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">f</name></decl></parameter>,

                                               <parameter pos:start="3:48" pos:end="3:57"><decl pos:start="3:48" pos:end="3:57"><type pos:start="3:48" pos:end="3:57"><name pos:start="3:48" pos:end="3:51">void</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:57">host</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:66"><decl pos:start="3:60" pos:end="3:66"><type pos:start="3:60" pos:end="3:66"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:66">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:5">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">idx</name></decl>, <decl pos:start="7:14" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:25">thread_count</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:48"><expr pos:start="11:5" pos:end="11:47"><name pos:start="11:5" pos:end="11:16">thread_count</name> <operator pos:start="11:18" pos:end="11:18">=</operator> <call pos:start="11:20" pos:end="11:47"><name pos:start="11:20" pos:end="11:45">migrate_decompress_threads</name><argument_list pos:start="11:46" pos:end="11:47">()</argument_list></call></expr>;</expr_stmt>

    <while pos:start="13:5" pos:end="39:5">while <condition pos:start="13:11" pos:end="13:16">(<expr pos:start="13:12" pos:end="13:15"><name pos:start="13:12" pos:end="13:15">true</name></expr>)</condition> <block pos:start="13:18" pos:end="39:5">{<block_content pos:start="15:9" pos:end="37:9">

        <for pos:start="15:9" pos:end="31:9">for <control pos:start="15:13" pos:end="15:48">(<init pos:start="15:14" pos:end="15:21"><expr pos:start="15:14" pos:end="15:20"><name pos:start="15:14" pos:end="15:16">idx</name> <operator pos:start="15:18" pos:end="15:18">=</operator> <literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr>;</init> <condition pos:start="15:23" pos:end="15:41"><expr pos:start="15:23" pos:end="15:40"><name pos:start="15:23" pos:end="15:25">idx</name> <operator pos:start="15:27" pos:end="15:27">&lt;</operator> <name pos:start="15:29" pos:end="15:40">thread_count</name></expr>;</condition> <incr pos:start="15:43" pos:end="15:47"><expr pos:start="15:43" pos:end="15:47"><name pos:start="15:43" pos:end="15:45">idx</name><operator pos:start="15:46" pos:end="15:47">++</operator></expr></incr>)</control> <block pos:start="15:50" pos:end="31:9">{<block_content pos:start="17:13" pos:end="29:13">

            <if_stmt pos:start="17:13" pos:end="29:13"><if pos:start="17:13" pos:end="29:13">if <condition pos:start="17:16" pos:end="17:41">(<expr pos:start="17:17" pos:end="17:40"><operator pos:start="17:17" pos:end="17:17">!</operator><name pos:start="17:18" pos:end="17:34"><name pos:start="17:18" pos:end="17:29">decomp_param</name><index pos:start="17:30" pos:end="17:34">[<expr pos:start="17:31" pos:end="17:33"><name pos:start="17:31" pos:end="17:33">idx</name></expr>]</index></name><operator pos:start="17:35" pos:end="17:35">.</operator><name pos:start="17:36" pos:end="17:40">start</name></expr>)</condition> <block pos:start="17:43" pos:end="29:13">{<block_content pos:start="19:17" pos:end="27:22">

                <expr_stmt pos:start="19:17" pos:end="19:67"><expr pos:start="19:17" pos:end="19:66"><call pos:start="19:17" pos:end="19:66"><name pos:start="19:17" pos:end="19:31">qemu_get_buffer</name><argument_list pos:start="19:32" pos:end="19:66">(<argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><name pos:start="19:33" pos:end="19:33">f</name></expr></argument>, <argument pos:start="19:36" pos:end="19:60"><expr pos:start="19:36" pos:end="19:60"><name pos:start="19:36" pos:end="19:52"><name pos:start="19:36" pos:end="19:47">decomp_param</name><index pos:start="19:48" pos:end="19:52">[<expr pos:start="19:49" pos:end="19:51"><name pos:start="19:49" pos:end="19:51">idx</name></expr>]</index></name><operator pos:start="19:53" pos:end="19:53">.</operator><name pos:start="19:54" pos:end="19:60">compbuf</name></expr></argument>, <argument pos:start="19:63" pos:end="19:65"><expr pos:start="19:63" pos:end="19:65"><name pos:start="19:63" pos:end="19:65">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="21:17" pos:end="21:45"><expr pos:start="21:17" pos:end="21:44"><name pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:28">decomp_param</name><index pos:start="21:29" pos:end="21:33">[<expr pos:start="21:30" pos:end="21:32"><name pos:start="21:30" pos:end="21:32">idx</name></expr>]</index></name><operator pos:start="21:34" pos:end="21:34">.</operator><name pos:start="21:35" pos:end="21:37">des</name> <operator pos:start="21:39" pos:end="21:39">=</operator> <name pos:start="21:41" pos:end="21:44">host</name></expr>;</expr_stmt>

                <expr_stmt pos:start="23:17" pos:end="23:44"><expr pos:start="23:17" pos:end="23:43"><name pos:start="23:17" pos:end="23:33"><name pos:start="23:17" pos:end="23:28">decomp_param</name><index pos:start="23:29" pos:end="23:33">[<expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:32">idx</name></expr>]</index></name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:37">len</name> <operator pos:start="23:39" pos:end="23:39">=</operator> <name pos:start="23:41" pos:end="23:43">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="25:17" pos:end="25:56"><expr pos:start="25:17" pos:end="25:55"><call pos:start="25:17" pos:end="25:55"><name pos:start="25:17" pos:end="25:35">start_decompression</name><argument_list pos:start="25:36" pos:end="25:55">(<argument pos:start="25:37" pos:end="25:54"><expr pos:start="25:37" pos:end="25:54"><operator pos:start="25:37" pos:end="25:37">&amp;</operator><name pos:start="25:38" pos:end="25:54"><name pos:start="25:38" pos:end="25:49">decomp_param</name><index pos:start="25:50" pos:end="25:54">[<expr pos:start="25:51" pos:end="25:53"><name pos:start="25:51" pos:end="25:53">idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="27:17" pos:end="27:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:31">(<expr pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:15">idx</name> <operator pos:start="33:17" pos:end="33:17">&lt;</operator> <name pos:start="33:19" pos:end="33:30">thread_count</name></expr>)</condition> <block pos:start="33:33" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:18">

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
