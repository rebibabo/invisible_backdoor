<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13670.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">m5206_mbar_writeb</name><parameter_list pos:start="1:30" pos:end="3:45">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:69"><decl pos:start="1:45" pos:end="1:69"><type pos:start="1:45" pos:end="1:69"><name pos:start="1:45" pos:end="1:62">target_phys_addr_t</name></type> <name pos:start="1:64" pos:end="1:69">offset</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:44"><decl pos:start="3:31" pos:end="3:44"><type pos:start="3:31" pos:end="3:44"><name pos:start="3:31" pos:end="3:38">uint32_t</name></type> <name pos:start="3:40" pos:end="3:44">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:42">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">m5206_mbar_state</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:52">= <expr pos:start="7:27" pos:end="7:52"><operator pos:start="7:27" pos:end="7:27">(</operator><name pos:start="7:28" pos:end="7:43">m5206_mbar_state</name> <operator pos:start="7:45" pos:end="7:45">*</operator><operator pos:start="7:46" pos:end="7:46">)</operator><name pos:start="7:47" pos:end="7:52">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">width</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:20"><expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:10">offset</name> <operator pos:start="11:12" pos:end="11:13">&amp;=</operator> <literal type="number" pos:start="11:15" pos:end="11:19">0x3ff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:23">(<expr pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:14">offset</name> <operator pos:start="13:16" pos:end="13:16">&gt;</operator> <literal type="number" pos:start="13:18" pos:end="13:22">0x200</literal></expr>)</condition> <block pos:start="13:25" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:60">

        <expr_stmt pos:start="15:9" pos:end="15:60"><expr pos:start="15:9" pos:end="15:59"><call pos:start="15:9" pos:end="15:59"><name pos:start="15:9" pos:end="15:16">hw_error</name><argument_list pos:start="15:17" pos:end="15:59">(<argument pos:start="15:18" pos:end="15:45"><expr pos:start="15:18" pos:end="15:45"><literal type="string" pos:start="15:18" pos:end="15:45">"Bad MBAR write offset 0x%x"</literal></expr></argument>, <argument pos:start="15:48" pos:end="15:58"><expr pos:start="15:48" pos:end="15:58"><operator pos:start="15:48" pos:end="15:48">(</operator><name pos:start="15:49" pos:end="15:51">int</name><operator pos:start="15:52" pos:end="15:52">)</operator><name pos:start="15:53" pos:end="15:58">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:9">width</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <name pos:start="19:13" pos:end="19:41"><name pos:start="19:13" pos:end="19:28">m5206_mbar_width</name><index pos:start="19:29" pos:end="19:41">[<expr pos:start="19:30" pos:end="19:40"><name pos:start="19:30" pos:end="19:35">offset</name> <operator pos:start="19:37" pos:end="19:38">&gt;&gt;</operator> <literal type="number" pos:start="19:40" pos:end="19:40">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="41:5"><if pos:start="21:5" pos:end="41:5">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:13">width</name> <operator pos:start="21:15" pos:end="21:15">&gt;</operator> <literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>)</condition> <block pos:start="21:20" pos:end="41:5">{<block_content pos:start="23:9" pos:end="39:15">

        <decl_stmt pos:start="23:9" pos:end="23:21"><decl pos:start="23:9" pos:end="23:20"><type pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">uint32_t</name></type> <name pos:start="23:18" pos:end="23:20">tmp</name></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:52"><expr pos:start="25:9" pos:end="25:51"><name pos:start="25:9" pos:end="25:11">tmp</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:51"><name pos:start="25:15" pos:end="25:30">m5206_mbar_readw</name><argument_list pos:start="25:31" pos:end="25:51">(<argument pos:start="25:32" pos:end="25:37"><expr pos:start="25:32" pos:end="25:37"><name pos:start="25:32" pos:end="25:37">opaque</name></expr></argument>, <argument pos:start="25:40" pos:end="25:50"><expr pos:start="25:40" pos:end="25:50"><name pos:start="25:40" pos:end="25:45">offset</name> <operator pos:start="25:47" pos:end="25:47">&amp;</operator> <operator pos:start="25:49" pos:end="25:49">~</operator><literal type="number" pos:start="25:50" pos:end="25:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:18">offset</name> <operator pos:start="27:20" pos:end="27:20">&amp;</operator> <literal type="number" pos:start="27:22" pos:end="27:22">1</literal></expr>)</condition> <block pos:start="27:25" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:41">

            <expr_stmt pos:start="29:13" pos:end="29:41"><expr pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:15">tmp</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <operator pos:start="29:19" pos:end="29:19">(</operator><name pos:start="29:20" pos:end="29:22">tmp</name> <operator pos:start="29:24" pos:end="29:24">&amp;</operator> <literal type="number" pos:start="29:26" pos:end="29:31">0xff00</literal><operator pos:start="29:32" pos:end="29:32">)</operator> <operator pos:start="29:34" pos:end="29:34">|</operator> <name pos:start="29:36" pos:end="29:40">value</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="35:9">else <block pos:start="31:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:48">

            <expr_stmt pos:start="33:13" pos:end="33:48"><expr pos:start="33:13" pos:end="33:47"><name pos:start="33:13" pos:end="33:15">tmp</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <operator pos:start="33:19" pos:end="33:19">(</operator><name pos:start="33:20" pos:end="33:22">tmp</name> <operator pos:start="33:24" pos:end="33:24">&amp;</operator> <literal type="number" pos:start="33:26" pos:end="33:31">0x00ff</literal><operator pos:start="33:32" pos:end="33:32">)</operator> <operator pos:start="33:34" pos:end="33:34">|</operator> <operator pos:start="33:36" pos:end="33:36">(</operator><name pos:start="33:37" pos:end="33:41">value</name> <operator pos:start="33:43" pos:end="33:44">&lt;&lt;</operator> <literal type="number" pos:start="33:46" pos:end="33:46">8</literal><operator pos:start="33:47" pos:end="33:47">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:52"><expr pos:start="37:9" pos:end="37:51"><call pos:start="37:9" pos:end="37:51"><name pos:start="37:9" pos:end="37:25">m5206_mbar_writew</name><argument_list pos:start="37:26" pos:end="37:51">(<argument pos:start="37:27" pos:end="37:32"><expr pos:start="37:27" pos:end="37:32"><name pos:start="37:27" pos:end="37:32">opaque</name></expr></argument>, <argument pos:start="37:35" pos:end="37:45"><expr pos:start="37:35" pos:end="37:45"><name pos:start="37:35" pos:end="37:40">offset</name> <operator pos:start="37:42" pos:end="37:42">&amp;</operator> <operator pos:start="37:44" pos:end="37:44">~</operator><literal type="number" pos:start="37:45" pos:end="37:45">1</literal></expr></argument>, <argument pos:start="37:48" pos:end="37:50"><expr pos:start="37:48" pos:end="37:50"><name pos:start="37:48" pos:end="37:50">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><call pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:20">m5206_mbar_write</name><argument_list pos:start="43:21" pos:end="43:41">(<argument pos:start="43:22" pos:end="43:22"><expr pos:start="43:22" pos:end="43:22"><name pos:start="43:22" pos:end="43:22">s</name></expr></argument>, <argument pos:start="43:25" pos:end="43:30"><expr pos:start="43:25" pos:end="43:30"><name pos:start="43:25" pos:end="43:30">offset</name></expr></argument>, <argument pos:start="43:33" pos:end="43:37"><expr pos:start="43:33" pos:end="43:37"><name pos:start="43:33" pos:end="43:37">value</name></expr></argument>, <argument pos:start="43:40" pos:end="43:40"><expr pos:start="43:40" pos:end="43:40"><literal type="number" pos:start="43:40" pos:end="43:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
