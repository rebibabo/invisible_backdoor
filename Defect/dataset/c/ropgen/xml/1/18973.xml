<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18973.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">swr_convert_internal</name><parameter_list pos:start="1:32" pos:end="3:84">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:38">struct</name> <name pos:start="1:40" pos:end="1:49">SwrContext</name></name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:68"><decl pos:start="1:55" pos:end="1:68"><type pos:start="1:55" pos:end="1:68"><name pos:start="1:55" pos:end="1:63">AudioData</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">out</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:83"><decl pos:start="1:71" pos:end="1:83"><type pos:start="1:71" pos:end="1:83"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:83">out_count</name></decl></parameter>,

                                                      <parameter pos:start="3:55" pos:end="3:67"><decl pos:start="3:55" pos:end="3:67"><type pos:start="3:55" pos:end="3:67"><name pos:start="3:55" pos:end="3:63">AudioData</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:67">in</name></decl></parameter> , <parameter pos:start="3:71" pos:end="3:83"><decl pos:start="3:71" pos:end="3:83"><type pos:start="3:71" pos:end="3:83"><name pos:start="3:71" pos:end="3:73">int</name></type>  <name pos:start="3:76" pos:end="3:83">in_count</name></decl></parameter>)</parameter_list><block pos:start="3:85" pos:end="253:1">{<block_content pos:start="5:5" pos:end="251:21">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">AudioData</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:21">postin</name></decl>, <decl pos:start="5:24" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:15"><modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:30">midbuf</name></decl>, <decl pos:start="5:33" pos:end="5:39"><type ref="prev" pos:start="5:5" pos:end="5:15"><modifier pos:start="5:33" pos:end="5:33">*</modifier></type><name pos:start="5:34" pos:end="5:39">preout</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl><comment type="block" pos:start="7:12" pos:end="7:23">/*, in_max*/</comment>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">AudioData</name></type> <name pos:start="9:15" pos:end="9:24">preout_tmp</name></decl>, <decl pos:start="9:27" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:27" pos:end="9:36">midbuf_tmp</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if<condition pos:start="13:7" pos:end="13:23">(<expr pos:start="13:8" pos:end="13:22"><name pos:start="13:8" pos:end="13:22"><name pos:start="13:8" pos:end="13:8">s</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:22">full_convert</name></name></expr>)</condition><block pos:start="13:24" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:25">

        <expr_stmt pos:start="15:9" pos:end="15:33"><expr pos:start="15:9" pos:end="15:32"><call pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:18">av_assert0</name><argument_list pos:start="15:19" pos:end="15:32">(<argument pos:start="15:20" pos:end="15:31"><expr pos:start="15:20" pos:end="15:31"><operator pos:start="15:20" pos:end="15:20">!</operator><name pos:start="15:21" pos:end="15:31"><name pos:start="15:21" pos:end="15:21">s</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:31">resample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:63"><expr pos:start="17:9" pos:end="17:62"><call pos:start="17:9" pos:end="17:62"><name pos:start="17:9" pos:end="17:26">swri_audio_convert</name><argument_list pos:start="17:27" pos:end="17:62">(<argument pos:start="17:28" pos:end="17:42"><expr pos:start="17:28" pos:end="17:42"><name pos:start="17:28" pos:end="17:42"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:42">full_convert</name></name></expr></argument>, <argument pos:start="17:45" pos:end="17:47"><expr pos:start="17:45" pos:end="17:47"><name pos:start="17:45" pos:end="17:47">out</name></expr></argument>, <argument pos:start="17:50" pos:end="17:51"><expr pos:start="17:50" pos:end="17:51"><name pos:start="17:50" pos:end="17:51">in</name></expr></argument>, <argument pos:start="17:54" pos:end="17:61"><expr pos:start="17:54" pos:end="17:61"><name pos:start="17:54" pos:end="17:61">in_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:25">return <expr pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:24">out_count</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="25:1" pos:end="25:96">//     in_max= out_count*(int64_t)s-&gt;in_sample_rate / s-&gt;out_sample_rate + resample_filter_taps;</comment>

<comment type="line" pos:start="27:1" pos:end="27:67">//     in_count= FFMIN(in_count, in_in + 2 - s-&gt;hist_buffer_count);</comment>



    <if_stmt pos:start="31:5" pos:end="33:19"><if pos:start="31:5" pos:end="33:19">if<condition pos:start="31:7" pos:end="31:56">(<expr pos:start="31:8" pos:end="31:55"><operator pos:start="31:8" pos:end="31:8">(</operator><name pos:start="31:9" pos:end="31:11">ret</name><operator pos:start="31:12" pos:end="31:12">=</operator><call pos:start="31:13" pos:end="31:52"><name pos:start="31:13" pos:end="31:30">swri_realloc_audio</name><argument_list pos:start="31:31" pos:end="31:52">(<argument pos:start="31:32" pos:end="31:41"><expr pos:start="31:32" pos:end="31:41"><operator pos:start="31:32" pos:end="31:32">&amp;</operator><name pos:start="31:33" pos:end="31:41"><name pos:start="31:33" pos:end="31:33">s</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:41">postin</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:51"><expr pos:start="31:44" pos:end="31:51"><name pos:start="31:44" pos:end="31:51">in_count</name></expr></argument>)</argument_list></call><operator pos:start="31:53" pos:end="31:53">)</operator><operator pos:start="31:54" pos:end="31:54">&lt;</operator><literal type="number" pos:start="31:55" pos:end="31:55">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:19"><block_content pos:start="33:9" pos:end="33:19">

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="51:5"><if pos:start="35:5" pos:end="43:5">if<condition pos:start="35:7" pos:end="35:25">(<expr pos:start="35:8" pos:end="35:24"><name pos:start="35:8" pos:end="35:24"><name pos:start="35:8" pos:end="35:8">s</name><operator pos:start="35:9" pos:end="35:10">-&gt;</operator><name pos:start="35:11" pos:end="35:24">resample_first</name></name></expr>)</condition><block pos:start="35:26" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:23">

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><call pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:18">av_assert0</name><argument_list pos:start="37:19" pos:end="37:58">(<argument pos:start="37:20" pos:end="37:57"><expr pos:start="37:20" pos:end="37:57"><name pos:start="37:20" pos:end="37:37"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:28">midbuf</name><operator pos:start="37:29" pos:end="37:29">.</operator><name pos:start="37:30" pos:end="37:37">ch_count</name></name> <operator pos:start="37:39" pos:end="37:40">==</operator> <name pos:start="37:42" pos:end="37:57"><name pos:start="37:42" pos:end="37:42">s</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:57">used_ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:23"><if pos:start="39:9" pos:end="41:23">if<condition pos:start="39:11" pos:end="39:61">(<expr pos:start="39:12" pos:end="39:60"><operator pos:start="39:12" pos:end="39:12">(</operator><name pos:start="39:13" pos:end="39:15">ret</name><operator pos:start="39:16" pos:end="39:16">=</operator><call pos:start="39:17" pos:end="39:57"><name pos:start="39:17" pos:end="39:34">swri_realloc_audio</name><argument_list pos:start="39:35" pos:end="39:57">(<argument pos:start="39:36" pos:end="39:45"><expr pos:start="39:36" pos:end="39:45"><operator pos:start="39:36" pos:end="39:36">&amp;</operator><name pos:start="39:37" pos:end="39:45"><name pos:start="39:37" pos:end="39:37">s</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:45">midbuf</name></name></expr></argument>, <argument pos:start="39:48" pos:end="39:56"><expr pos:start="39:48" pos:end="39:56"><name pos:start="39:48" pos:end="39:56">out_count</name></expr></argument>)</argument_list></call><operator pos:start="39:58" pos:end="39:58">)</operator><operator pos:start="39:59" pos:end="39:59">&lt;</operator><literal type="number" pos:start="39:60" pos:end="39:60">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:23"><block_content pos:start="41:13" pos:end="41:23">

            <return pos:start="41:13" pos:end="41:23">return <expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if><else pos:start="43:6" pos:end="51:5">else<block pos:start="43:10" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:23">

        <expr_stmt pos:start="45:9" pos:end="45:59"><expr pos:start="45:9" pos:end="45:58"><call pos:start="45:9" pos:end="45:58"><name pos:start="45:9" pos:end="45:18">av_assert0</name><argument_list pos:start="45:19" pos:end="45:58">(<argument pos:start="45:20" pos:end="45:57"><expr pos:start="45:20" pos:end="45:57"><name pos:start="45:20" pos:end="45:37"><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:28">midbuf</name><operator pos:start="45:29" pos:end="45:29">.</operator><name pos:start="45:30" pos:end="45:37">ch_count</name></name> <operator pos:start="45:39" pos:end="45:40">==</operator>  <name pos:start="45:43" pos:end="45:57"><name pos:start="45:43" pos:end="45:43">s</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:48">out</name><operator pos:start="45:49" pos:end="45:49">.</operator><name pos:start="45:50" pos:end="45:57">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:23"><if pos:start="47:9" pos:end="49:23">if<condition pos:start="47:11" pos:end="47:61">(<expr pos:start="47:12" pos:end="47:60"><operator pos:start="47:12" pos:end="47:12">(</operator><name pos:start="47:13" pos:end="47:15">ret</name><operator pos:start="47:16" pos:end="47:16">=</operator><call pos:start="47:17" pos:end="47:57"><name pos:start="47:17" pos:end="47:34">swri_realloc_audio</name><argument_list pos:start="47:35" pos:end="47:57">(<argument pos:start="47:36" pos:end="47:45"><expr pos:start="47:36" pos:end="47:45"><operator pos:start="47:36" pos:end="47:36">&amp;</operator><name pos:start="47:37" pos:end="47:45"><name pos:start="47:37" pos:end="47:37">s</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:45">midbuf</name></name></expr></argument>,  <argument pos:start="47:49" pos:end="47:56"><expr pos:start="47:49" pos:end="47:56"><name pos:start="47:49" pos:end="47:56">in_count</name></expr></argument>)</argument_list></call><operator pos:start="47:58" pos:end="47:58">)</operator><operator pos:start="47:59" pos:end="47:59">&lt;</operator><literal type="number" pos:start="47:60" pos:end="47:60">0</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:23"><block_content pos:start="49:13" pos:end="49:23">

            <return pos:start="49:13" pos:end="49:23">return <expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="53:5" pos:end="55:19"><if pos:start="53:5" pos:end="55:19">if<condition pos:start="53:7" pos:end="53:57">(<expr pos:start="53:8" pos:end="53:56"><operator pos:start="53:8" pos:end="53:8">(</operator><name pos:start="53:9" pos:end="53:11">ret</name><operator pos:start="53:12" pos:end="53:12">=</operator><call pos:start="53:13" pos:end="53:53"><name pos:start="53:13" pos:end="53:30">swri_realloc_audio</name><argument_list pos:start="53:31" pos:end="53:53">(<argument pos:start="53:32" pos:end="53:41"><expr pos:start="53:32" pos:end="53:41"><operator pos:start="53:32" pos:end="53:32">&amp;</operator><name pos:start="53:33" pos:end="53:41"><name pos:start="53:33" pos:end="53:33">s</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:41">preout</name></name></expr></argument>, <argument pos:start="53:44" pos:end="53:52"><expr pos:start="53:44" pos:end="53:52"><name pos:start="53:44" pos:end="53:52">out_count</name></expr></argument>)</argument_list></call><operator pos:start="53:54" pos:end="53:54">)</operator><operator pos:start="53:55" pos:end="53:55">&lt;</operator><literal type="number" pos:start="53:56" pos:end="53:56">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:19"><block_content pos:start="55:9" pos:end="55:19">

        <return pos:start="55:9" pos:end="55:19">return <expr pos:start="55:16" pos:end="55:18"><name pos:start="55:16" pos:end="55:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:10">postin</name><operator pos:start="59:11" pos:end="59:11">=</operator> <operator pos:start="59:13" pos:end="59:13">&amp;</operator><name pos:start="59:14" pos:end="59:22"><name pos:start="59:14" pos:end="59:14">s</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:22">postin</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:26"><expr pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:14">midbuf_tmp</name><operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:25"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:25">midbuf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:24"><expr pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:10">midbuf</name><operator pos:start="65:11" pos:end="65:11">=</operator> <operator pos:start="65:13" pos:end="65:13">&amp;</operator><name pos:start="65:14" pos:end="65:23">midbuf_tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:26"><expr pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:14">preout_tmp</name><operator pos:start="67:15" pos:end="67:15">=</operator> <name pos:start="67:17" pos:end="67:25"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:25">preout</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:24"><expr pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:10">preout</name><operator pos:start="69:11" pos:end="69:11">=</operator> <operator pos:start="69:13" pos:end="69:13">&amp;</operator><name pos:start="69:14" pos:end="69:23">preout_tmp</name></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="75:19"><if pos:start="73:5" pos:end="75:19">if<condition pos:start="73:7" pos:end="73:81">(<expr pos:start="73:8" pos:end="73:80"><name pos:start="73:8" pos:end="73:24"><name pos:start="73:8" pos:end="73:8">s</name><operator pos:start="73:9" pos:end="73:10">-&gt;</operator><name pos:start="73:11" pos:end="73:24">int_sample_fmt</name></name> <operator pos:start="73:26" pos:end="73:27">==</operator> <name pos:start="73:29" pos:end="73:45"><name pos:start="73:29" pos:end="73:29">s</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator> <name pos:start="73:33" pos:end="73:45">in_sample_fmt</name></name> <operator pos:start="73:47" pos:end="73:48">&amp;&amp;</operator> <name pos:start="73:50" pos:end="73:61"><name pos:start="73:50" pos:end="73:50">s</name><operator pos:start="73:51" pos:end="73:52">-&gt;</operator><name pos:start="73:53" pos:end="73:54">in</name><operator pos:start="73:55" pos:end="73:55">.</operator><name pos:start="73:56" pos:end="73:61">planar</name></name> <operator pos:start="73:63" pos:end="73:64">&amp;&amp;</operator> <operator pos:start="73:66" pos:end="73:66">!</operator><name pos:start="73:67" pos:end="73:80"><name pos:start="73:67" pos:end="73:67">s</name><operator pos:start="73:68" pos:end="73:69">-&gt;</operator><name pos:start="73:70" pos:end="73:80">channel_map</name></name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:19"><block_content pos:start="75:9" pos:end="75:19">

        <expr_stmt pos:start="75:9" pos:end="75:19"><expr pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:14">postin</name><operator pos:start="75:15" pos:end="75:15">=</operator> <name pos:start="75:17" pos:end="75:18">in</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="81:23"><if pos:start="79:5" pos:end="81:23">if<condition pos:start="79:7" pos:end="79:55">(<expr pos:start="79:8" pos:end="79:54"><ternary pos:start="79:8" pos:end="79:54"><condition pos:start="79:8" pos:end="79:26"><expr pos:start="79:8" pos:end="79:24"><name pos:start="79:8" pos:end="79:24"><name pos:start="79:8" pos:end="79:8">s</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:24">resample_first</name></name></expr> ?</condition><then pos:start="79:28" pos:end="79:39"> <expr pos:start="79:28" pos:end="79:39"><operator pos:start="79:28" pos:end="79:28">!</operator><name pos:start="79:29" pos:end="79:39"><name pos:start="79:29" pos:end="79:29">s</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:39">resample</name></name></expr> </then><else pos:start="79:41" pos:end="79:54">: <expr pos:start="79:43" pos:end="79:54"><operator pos:start="79:43" pos:end="79:43">!</operator><name pos:start="79:44" pos:end="79:54"><name pos:start="79:44" pos:end="79:44">s</name><operator pos:start="79:45" pos:end="79:46">-&gt;</operator><name pos:start="79:47" pos:end="79:54">rematrix</name></name></expr></else></ternary></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:23"><block_content pos:start="81:9" pos:end="81:23">

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:14">midbuf</name><operator pos:start="81:15" pos:end="81:15">=</operator> <name pos:start="81:17" pos:end="81:22">postin</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="87:23"><if pos:start="85:5" pos:end="87:23">if<condition pos:start="85:7" pos:end="85:55">(<expr pos:start="85:8" pos:end="85:54"><ternary pos:start="85:8" pos:end="85:54"><condition pos:start="85:8" pos:end="85:26"><expr pos:start="85:8" pos:end="85:24"><name pos:start="85:8" pos:end="85:24"><name pos:start="85:8" pos:end="85:8">s</name><operator pos:start="85:9" pos:end="85:10">-&gt;</operator><name pos:start="85:11" pos:end="85:24">resample_first</name></name></expr> ?</condition><then pos:start="85:28" pos:end="85:39"> <expr pos:start="85:28" pos:end="85:39"><operator pos:start="85:28" pos:end="85:28">!</operator><name pos:start="85:29" pos:end="85:39"><name pos:start="85:29" pos:end="85:29">s</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:39">rematrix</name></name></expr> </then><else pos:start="85:41" pos:end="85:54">: <expr pos:start="85:43" pos:end="85:54"><operator pos:start="85:43" pos:end="85:43">!</operator><name pos:start="85:44" pos:end="85:54"><name pos:start="85:44" pos:end="85:44">s</name><operator pos:start="85:45" pos:end="85:46">-&gt;</operator><name pos:start="85:47" pos:end="85:54">resample</name></name></expr></else></ternary></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:23"><block_content pos:start="87:9" pos:end="87:23">

        <expr_stmt pos:start="87:9" pos:end="87:23"><expr pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:14">preout</name><operator pos:start="87:15" pos:end="87:15">=</operator> <name pos:start="87:17" pos:end="87:22">midbuf</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="113:5"><if pos:start="91:5" pos:end="113:5">if<condition pos:start="91:7" pos:end="93:88">(<expr pos:start="91:8" pos:end="93:87"><name pos:start="91:8" pos:end="91:24"><name pos:start="91:8" pos:end="91:8">s</name><operator pos:start="91:9" pos:end="91:10">-&gt;</operator><name pos:start="91:11" pos:end="91:24">int_sample_fmt</name></name> <operator pos:start="91:26" pos:end="91:27">==</operator> <name pos:start="91:29" pos:end="91:45"><name pos:start="91:29" pos:end="91:29">s</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:45">out_sample_fmt</name></name> <operator pos:start="91:47" pos:end="91:48">&amp;&amp;</operator> <name pos:start="91:50" pos:end="91:62"><name pos:start="91:50" pos:end="91:50">s</name><operator pos:start="91:51" pos:end="91:52">-&gt;</operator><name pos:start="91:53" pos:end="91:55">out</name><operator pos:start="91:56" pos:end="91:56">.</operator><name pos:start="91:57" pos:end="91:62">planar</name></name>

       <operator pos:start="93:8" pos:end="93:9">&amp;&amp;</operator> <operator pos:start="93:11" pos:end="93:11">!</operator><operator pos:start="93:12" pos:end="93:12">(</operator><name pos:start="93:13" pos:end="93:29"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:29">out_sample_fmt</name></name><operator pos:start="93:30" pos:end="93:31">==</operator><name pos:start="93:32" pos:end="93:49">AV_SAMPLE_FMT_S32P</name> <operator pos:start="93:51" pos:end="93:52">&amp;&amp;</operator> <operator pos:start="93:54" pos:end="93:54">(</operator><name pos:start="93:55" pos:end="93:82"><name pos:start="93:55" pos:end="93:55">s</name><operator pos:start="93:56" pos:end="93:57">-&gt;</operator><name pos:start="93:58" pos:end="93:63">dither</name><operator pos:start="93:64" pos:end="93:64">.</operator><name pos:start="93:65" pos:end="93:82">output_sample_bits</name></name><operator pos:start="93:83" pos:end="93:83">&amp;</operator><literal type="number" pos:start="93:84" pos:end="93:85">31</literal><operator pos:start="93:86" pos:end="93:86">)</operator><operator pos:start="93:87" pos:end="93:87">)</operator></expr>)</condition><block pos:start="93:89" pos:end="113:5">{<block_content pos:start="95:9" pos:end="111:44">

        <if_stmt pos:start="95:9" pos:end="111:44"><if pos:start="95:9" pos:end="105:9">if<condition pos:start="95:11" pos:end="95:22">(<expr pos:start="95:12" pos:end="95:21"><name pos:start="95:12" pos:end="95:17">preout</name><operator pos:start="95:18" pos:end="95:19">==</operator><name pos:start="95:20" pos:end="95:21">in</name></expr>)</condition><block pos:start="95:23" pos:end="105:9">{<block_content pos:start="97:13" pos:end="103:29">

            <expr_stmt pos:start="97:13" pos:end="97:50"><expr pos:start="97:13" pos:end="97:49"><name pos:start="97:13" pos:end="97:21">out_count</name><operator pos:start="97:22" pos:end="97:22">=</operator> <call pos:start="97:24" pos:end="97:49"><name pos:start="97:24" pos:end="97:28">FFMIN</name><argument_list pos:start="97:29" pos:end="97:49">(<argument pos:start="97:30" pos:end="97:38"><expr pos:start="97:30" pos:end="97:38"><name pos:start="97:30" pos:end="97:38">out_count</name></expr></argument>, <argument pos:start="97:41" pos:end="97:48"><expr pos:start="97:41" pos:end="97:48"><name pos:start="97:41" pos:end="97:48">in_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="97:52" pos:end="97:105">//TODO check at the end if this is needed or redundant</comment>

            <expr_stmt pos:start="99:13" pos:end="99:37"><expr pos:start="99:13" pos:end="99:36"><call pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:22">av_assert0</name><argument_list pos:start="99:23" pos:end="99:36">(<argument pos:start="99:24" pos:end="99:35"><expr pos:start="99:24" pos:end="99:35"><name pos:start="99:24" pos:end="99:35"><name pos:start="99:24" pos:end="99:24">s</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:28">in</name><operator pos:start="99:29" pos:end="99:29">.</operator><name pos:start="99:30" pos:end="99:35">planar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="99:39" pos:end="99:127">//we only support planar internally so it has to be, we support copying non planar though</comment>

            <expr_stmt pos:start="101:13" pos:end="101:37"><expr pos:start="101:13" pos:end="101:36"><call pos:start="101:13" pos:end="101:36"><name pos:start="101:13" pos:end="101:16">copy</name><argument_list pos:start="101:17" pos:end="101:36">(<argument pos:start="101:18" pos:end="101:20"><expr pos:start="101:18" pos:end="101:20"><name pos:start="101:18" pos:end="101:20">out</name></expr></argument>, <argument pos:start="101:23" pos:end="101:24"><expr pos:start="101:23" pos:end="101:24"><name pos:start="101:23" pos:end="101:24">in</name></expr></argument>, <argument pos:start="101:27" pos:end="101:35"><expr pos:start="101:27" pos:end="101:35"><name pos:start="101:27" pos:end="101:35">out_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:29">return <expr pos:start="103:20" pos:end="103:28"><name pos:start="103:20" pos:end="103:28">out_count</name></expr>;</return>

        </block_content>}</block></if>

        <if type="elseif" pos:start="107:9" pos:end="107:60">else if<condition pos:start="107:16" pos:end="107:31">(<expr pos:start="107:17" pos:end="107:30"><name pos:start="107:17" pos:end="107:22">preout</name><operator pos:start="107:23" pos:end="107:24">==</operator><name pos:start="107:25" pos:end="107:30">postin</name></expr>)</condition><block type="pseudo" pos:start="107:33" pos:end="107:60"><block_content pos:start="107:33" pos:end="107:60"> <expr_stmt pos:start="107:33" pos:end="107:60"><expr pos:start="107:33" pos:end="107:59"><name pos:start="107:33" pos:end="107:38">preout</name><operator pos:start="107:39" pos:end="107:39">=</operator> <name pos:start="107:41" pos:end="107:46">midbuf</name><operator pos:start="107:47" pos:end="107:47">=</operator> <name pos:start="107:49" pos:end="107:54">postin</name><operator pos:start="107:55" pos:end="107:55">=</operator> <name pos:start="107:57" pos:end="107:59">out</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="109:9" pos:end="109:52">else if<condition pos:start="109:16" pos:end="109:31">(<expr pos:start="109:17" pos:end="109:30"><name pos:start="109:17" pos:end="109:22">preout</name><operator pos:start="109:23" pos:end="109:24">==</operator><name pos:start="109:25" pos:end="109:30">midbuf</name></expr>)</condition><block type="pseudo" pos:start="109:33" pos:end="109:52"><block_content pos:start="109:33" pos:end="109:52"> <expr_stmt pos:start="109:33" pos:end="109:52"><expr pos:start="109:33" pos:end="109:51"><name pos:start="109:33" pos:end="109:38">preout</name><operator pos:start="109:39" pos:end="109:39">=</operator> <name pos:start="109:41" pos:end="109:46">midbuf</name><operator pos:start="109:47" pos:end="109:47">=</operator> <name pos:start="109:49" pos:end="109:51">out</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="111:9" pos:end="111:44">else<block type="pseudo" pos:start="111:33" pos:end="111:44"><block_content pos:start="111:33" pos:end="111:44">                    <expr_stmt pos:start="111:33" pos:end="111:44"><expr pos:start="111:33" pos:end="111:43"><name pos:start="111:33" pos:end="111:38">preout</name><operator pos:start="111:39" pos:end="111:39">=</operator> <name pos:start="111:41" pos:end="111:43">out</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="117:5" pos:end="121:5"><if pos:start="117:5" pos:end="121:5">if<condition pos:start="117:7" pos:end="117:20">(<expr pos:start="117:8" pos:end="117:19"><name pos:start="117:8" pos:end="117:9">in</name> <operator pos:start="117:11" pos:end="117:12">!=</operator> <name pos:start="117:14" pos:end="117:19">postin</name></expr>)</condition><block pos:start="117:21" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:64">

        <expr_stmt pos:start="119:9" pos:end="119:64"><expr pos:start="119:9" pos:end="119:63"><call pos:start="119:9" pos:end="119:63"><name pos:start="119:9" pos:end="119:26">swri_audio_convert</name><argument_list pos:start="119:27" pos:end="119:63">(<argument pos:start="119:28" pos:end="119:40"><expr pos:start="119:28" pos:end="119:40"><name pos:start="119:28" pos:end="119:40"><name pos:start="119:28" pos:end="119:28">s</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:40">in_convert</name></name></expr></argument>, <argument pos:start="119:43" pos:end="119:48"><expr pos:start="119:43" pos:end="119:48"><name pos:start="119:43" pos:end="119:48">postin</name></expr></argument>, <argument pos:start="119:51" pos:end="119:52"><expr pos:start="119:51" pos:end="119:52"><name pos:start="119:51" pos:end="119:52">in</name></expr></argument>, <argument pos:start="119:55" pos:end="119:62"><expr pos:start="119:55" pos:end="119:62"><name pos:start="119:55" pos:end="119:62">in_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="145:5"><if pos:start="125:5" pos:end="135:5">if<condition pos:start="125:7" pos:end="125:25">(<expr pos:start="125:8" pos:end="125:24"><name pos:start="125:8" pos:end="125:24"><name pos:start="125:8" pos:end="125:8">s</name><operator pos:start="125:9" pos:end="125:10">-&gt;</operator><name pos:start="125:11" pos:end="125:24">resample_first</name></name></expr>)</condition><block pos:start="125:26" pos:end="135:5">{<block_content pos:start="127:9" pos:end="133:69">

        <if_stmt pos:start="127:9" pos:end="129:72"><if pos:start="127:9" pos:end="129:72">if<condition pos:start="127:11" pos:end="127:28">(<expr pos:start="127:12" pos:end="127:27"><name pos:start="127:12" pos:end="127:17">postin</name> <operator pos:start="127:19" pos:end="127:20">!=</operator> <name pos:start="127:22" pos:end="127:27">midbuf</name></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:72"><block_content pos:start="129:13" pos:end="129:72">

            <expr_stmt pos:start="129:13" pos:end="129:72"><expr pos:start="129:13" pos:end="129:71"><name pos:start="129:13" pos:end="129:21">out_count</name><operator pos:start="129:22" pos:end="129:22">=</operator> <call pos:start="129:24" pos:end="129:71"><name pos:start="129:24" pos:end="129:31">resample</name><argument_list pos:start="129:32" pos:end="129:71">(<argument pos:start="129:33" pos:end="129:33"><expr pos:start="129:33" pos:end="129:33"><name pos:start="129:33" pos:end="129:33">s</name></expr></argument>, <argument pos:start="129:36" pos:end="129:41"><expr pos:start="129:36" pos:end="129:41"><name pos:start="129:36" pos:end="129:41">midbuf</name></expr></argument>, <argument pos:start="129:44" pos:end="129:52"><expr pos:start="129:44" pos:end="129:52"><name pos:start="129:44" pos:end="129:52">out_count</name></expr></argument>, <argument pos:start="129:55" pos:end="129:60"><expr pos:start="129:55" pos:end="129:60"><name pos:start="129:55" pos:end="129:60">postin</name></expr></argument>, <argument pos:start="129:63" pos:end="129:70"><expr pos:start="129:63" pos:end="129:70"><name pos:start="129:63" pos:end="129:70">in_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="131:9" pos:end="133:69"><if pos:start="131:9" pos:end="133:69">if<condition pos:start="131:11" pos:end="131:28">(<expr pos:start="131:12" pos:end="131:27"><name pos:start="131:12" pos:end="131:17">midbuf</name> <operator pos:start="131:19" pos:end="131:20">!=</operator> <name pos:start="131:22" pos:end="131:27">preout</name></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:69"><block_content pos:start="133:13" pos:end="133:69">

            <expr_stmt pos:start="133:13" pos:end="133:69"><expr pos:start="133:13" pos:end="133:68"><call pos:start="133:13" pos:end="133:68"><name pos:start="133:13" pos:end="133:25">swri_rematrix</name><argument_list pos:start="133:26" pos:end="133:68">(<argument pos:start="133:27" pos:end="133:27"><expr pos:start="133:27" pos:end="133:27"><name pos:start="133:27" pos:end="133:27">s</name></expr></argument>, <argument pos:start="133:30" pos:end="133:35"><expr pos:start="133:30" pos:end="133:35"><name pos:start="133:30" pos:end="133:35">preout</name></expr></argument>, <argument pos:start="133:38" pos:end="133:43"><expr pos:start="133:38" pos:end="133:43"><name pos:start="133:38" pos:end="133:43">midbuf</name></expr></argument>, <argument pos:start="133:46" pos:end="133:54"><expr pos:start="133:46" pos:end="133:54"><name pos:start="133:46" pos:end="133:54">out_count</name></expr></argument>, <argument pos:start="133:57" pos:end="133:67"><expr pos:start="133:57" pos:end="133:67"><name pos:start="133:57" pos:end="133:62">preout</name><operator pos:start="133:63" pos:end="133:64">==</operator><name pos:start="133:65" pos:end="133:67">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if><else pos:start="135:6" pos:end="145:5">else<block pos:start="135:10" pos:end="145:5">{<block_content pos:start="137:9" pos:end="143:72">

        <if_stmt pos:start="137:9" pos:end="139:68"><if pos:start="137:9" pos:end="139:68">if<condition pos:start="137:11" pos:end="137:28">(<expr pos:start="137:12" pos:end="137:27"><name pos:start="137:12" pos:end="137:17">postin</name> <operator pos:start="137:19" pos:end="137:20">!=</operator> <name pos:start="137:22" pos:end="137:27">midbuf</name></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:68"><block_content pos:start="139:13" pos:end="139:68">

            <expr_stmt pos:start="139:13" pos:end="139:68"><expr pos:start="139:13" pos:end="139:67"><call pos:start="139:13" pos:end="139:67"><name pos:start="139:13" pos:end="139:25">swri_rematrix</name><argument_list pos:start="139:26" pos:end="139:67">(<argument pos:start="139:27" pos:end="139:27"><expr pos:start="139:27" pos:end="139:27"><name pos:start="139:27" pos:end="139:27">s</name></expr></argument>, <argument pos:start="139:30" pos:end="139:35"><expr pos:start="139:30" pos:end="139:35"><name pos:start="139:30" pos:end="139:35">midbuf</name></expr></argument>, <argument pos:start="139:38" pos:end="139:43"><expr pos:start="139:38" pos:end="139:43"><name pos:start="139:38" pos:end="139:43">postin</name></expr></argument>, <argument pos:start="139:46" pos:end="139:53"><expr pos:start="139:46" pos:end="139:53"><name pos:start="139:46" pos:end="139:53">in_count</name></expr></argument>, <argument pos:start="139:56" pos:end="139:66"><expr pos:start="139:56" pos:end="139:66"><name pos:start="139:56" pos:end="139:61">midbuf</name><operator pos:start="139:62" pos:end="139:63">==</operator><name pos:start="139:64" pos:end="139:66">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="141:9" pos:end="143:72"><if pos:start="141:9" pos:end="143:72">if<condition pos:start="141:11" pos:end="141:28">(<expr pos:start="141:12" pos:end="141:27"><name pos:start="141:12" pos:end="141:17">midbuf</name> <operator pos:start="141:19" pos:end="141:20">!=</operator> <name pos:start="141:22" pos:end="141:27">preout</name></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:72"><block_content pos:start="143:13" pos:end="143:72">

            <expr_stmt pos:start="143:13" pos:end="143:72"><expr pos:start="143:13" pos:end="143:71"><name pos:start="143:13" pos:end="143:21">out_count</name><operator pos:start="143:22" pos:end="143:22">=</operator> <call pos:start="143:24" pos:end="143:71"><name pos:start="143:24" pos:end="143:31">resample</name><argument_list pos:start="143:32" pos:end="143:71">(<argument pos:start="143:33" pos:end="143:33"><expr pos:start="143:33" pos:end="143:33"><name pos:start="143:33" pos:end="143:33">s</name></expr></argument>, <argument pos:start="143:36" pos:end="143:41"><expr pos:start="143:36" pos:end="143:41"><name pos:start="143:36" pos:end="143:41">preout</name></expr></argument>, <argument pos:start="143:44" pos:end="143:52"><expr pos:start="143:44" pos:end="143:52"><name pos:start="143:44" pos:end="143:52">out_count</name></expr></argument>, <argument pos:start="143:55" pos:end="143:60"><expr pos:start="143:55" pos:end="143:60"><name pos:start="143:55" pos:end="143:60">midbuf</name></expr></argument>, <argument pos:start="143:63" pos:end="143:70"><expr pos:start="143:63" pos:end="143:70"><name pos:start="143:63" pos:end="143:70">in_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="149:5" pos:end="249:5"><if pos:start="149:5" pos:end="249:5">if<condition pos:start="149:7" pos:end="149:34">(<expr pos:start="149:8" pos:end="149:33"><name pos:start="149:8" pos:end="149:13">preout</name> <operator pos:start="149:15" pos:end="149:16">!=</operator> <name pos:start="149:18" pos:end="149:20">out</name> <operator pos:start="149:22" pos:end="149:23">&amp;&amp;</operator> <name pos:start="149:25" pos:end="149:33">out_count</name></expr>)</condition><block pos:start="149:35" pos:end="249:5">{<block_content pos:start="151:9" pos:end="247:69">

        <decl_stmt pos:start="151:9" pos:end="151:37"><decl pos:start="151:9" pos:end="151:36"><type pos:start="151:9" pos:end="151:19"><name pos:start="151:9" pos:end="151:17">AudioData</name> <modifier pos:start="151:19" pos:end="151:19">*</modifier></type><name pos:start="151:20" pos:end="151:27">conv_src</name> <init pos:start="151:29" pos:end="151:36">= <expr pos:start="151:31" pos:end="151:36"><name pos:start="151:31" pos:end="151:36">preout</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="153:9" pos:end="243:9"><if pos:start="153:9" pos:end="243:9">if<condition pos:start="153:11" pos:end="153:28">(<expr pos:start="153:12" pos:end="153:27"><name pos:start="153:12" pos:end="153:27"><name pos:start="153:12" pos:end="153:12">s</name><operator pos:start="153:13" pos:end="153:14">-&gt;</operator><name pos:start="153:15" pos:end="153:20">dither</name><operator pos:start="153:21" pos:end="153:21">.</operator><name pos:start="153:22" pos:end="153:27">method</name></name></expr>)</condition><block pos:start="153:29" pos:end="243:9">{<block_content pos:start="155:13" pos:end="241:45">

            <decl_stmt pos:start="155:13" pos:end="155:19"><decl pos:start="155:13" pos:end="155:18"><type pos:start="155:13" pos:end="155:15"><name pos:start="155:13" pos:end="155:15">int</name></type> <name pos:start="155:17" pos:end="155:18">ch</name></decl>;</decl_stmt>

            <decl_stmt pos:start="157:13" pos:end="157:54"><decl pos:start="157:13" pos:end="157:53"><type pos:start="157:13" pos:end="157:15"><name pos:start="157:13" pos:end="157:15">int</name></type> <name pos:start="157:17" pos:end="157:28">dither_count</name><init pos:start="157:29" pos:end="157:53">= <expr pos:start="157:31" pos:end="157:53"><call pos:start="157:31" pos:end="157:53"><name pos:start="157:31" pos:end="157:35">FFMAX</name><argument_list pos:start="157:36" pos:end="157:53">(<argument pos:start="157:37" pos:end="157:45"><expr pos:start="157:37" pos:end="157:45"><name pos:start="157:37" pos:end="157:45">out_count</name></expr></argument>, <argument pos:start="157:48" pos:end="157:52"><expr pos:start="157:48" pos:end="157:52"><literal type="number" pos:start="157:48" pos:end="157:48">1</literal><operator pos:start="157:49" pos:end="157:50">&lt;&lt;</operator><literal type="number" pos:start="157:51" pos:end="157:52">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="161:13" pos:end="169:13"><if pos:start="161:13" pos:end="169:13">if <condition pos:start="161:16" pos:end="161:29">(<expr pos:start="161:17" pos:end="161:28"><name pos:start="161:17" pos:end="161:22">preout</name> <operator pos:start="161:24" pos:end="161:25">==</operator> <name pos:start="161:27" pos:end="161:28">in</name></expr>)</condition> <block pos:start="161:31" pos:end="169:13">{<block_content pos:start="163:17" pos:end="167:31">

                <expr_stmt pos:start="163:17" pos:end="163:43"><expr pos:start="163:17" pos:end="163:42"><name pos:start="163:17" pos:end="163:24">conv_src</name> <operator pos:start="163:26" pos:end="163:26">=</operator> <operator pos:start="163:28" pos:end="163:28">&amp;</operator><name pos:start="163:29" pos:end="163:42"><name pos:start="163:29" pos:end="163:29">s</name><operator pos:start="163:30" pos:end="163:31">-&gt;</operator><name pos:start="163:32" pos:end="163:37">dither</name><operator pos:start="163:38" pos:end="163:38">.</operator><name pos:start="163:39" pos:end="163:42">temp</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="165:17" pos:end="167:31"><if pos:start="165:17" pos:end="167:31">if<condition pos:start="165:19" pos:end="165:77">(<expr pos:start="165:20" pos:end="165:76"><operator pos:start="165:20" pos:end="165:20">(</operator><name pos:start="165:21" pos:end="165:23">ret</name><operator pos:start="165:24" pos:end="165:24">=</operator><call pos:start="165:25" pos:end="165:73"><name pos:start="165:25" pos:end="165:42">swri_realloc_audio</name><argument_list pos:start="165:43" pos:end="165:73">(<argument pos:start="165:44" pos:end="165:58"><expr pos:start="165:44" pos:end="165:58"><operator pos:start="165:44" pos:end="165:44">&amp;</operator><name pos:start="165:45" pos:end="165:58"><name pos:start="165:45" pos:end="165:45">s</name><operator pos:start="165:46" pos:end="165:47">-&gt;</operator><name pos:start="165:48" pos:end="165:53">dither</name><operator pos:start="165:54" pos:end="165:54">.</operator><name pos:start="165:55" pos:end="165:58">temp</name></name></expr></argument>, <argument pos:start="165:61" pos:end="165:72"><expr pos:start="165:61" pos:end="165:72"><name pos:start="165:61" pos:end="165:72">dither_count</name></expr></argument>)</argument_list></call><operator pos:start="165:74" pos:end="165:74">)</operator><operator pos:start="165:75" pos:end="165:75">&lt;</operator><literal type="number" pos:start="165:76" pos:end="165:76">0</literal></expr>)</condition><block type="pseudo" pos:start="167:21" pos:end="167:31"><block_content pos:start="167:21" pos:end="167:31">

                    <return pos:start="167:21" pos:end="167:31">return <expr pos:start="167:28" pos:end="167:30"><name pos:start="167:28" pos:end="167:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="173:13" pos:end="175:27"><if pos:start="173:13" pos:end="175:27">if<condition pos:start="173:15" pos:end="173:74">(<expr pos:start="173:16" pos:end="173:73"><operator pos:start="173:16" pos:end="173:16">(</operator><name pos:start="173:17" pos:end="173:19">ret</name><operator pos:start="173:20" pos:end="173:20">=</operator><call pos:start="173:21" pos:end="173:70"><name pos:start="173:21" pos:end="173:38">swri_realloc_audio</name><argument_list pos:start="173:39" pos:end="173:70">(<argument pos:start="173:40" pos:end="173:55"><expr pos:start="173:40" pos:end="173:55"><operator pos:start="173:40" pos:end="173:40">&amp;</operator><name pos:start="173:41" pos:end="173:55"><name pos:start="173:41" pos:end="173:41">s</name><operator pos:start="173:42" pos:end="173:43">-&gt;</operator><name pos:start="173:44" pos:end="173:49">dither</name><operator pos:start="173:50" pos:end="173:50">.</operator><name pos:start="173:51" pos:end="173:55">noise</name></name></expr></argument>, <argument pos:start="173:58" pos:end="173:69"><expr pos:start="173:58" pos:end="173:69"><name pos:start="173:58" pos:end="173:69">dither_count</name></expr></argument>)</argument_list></call><operator pos:start="173:71" pos:end="173:71">)</operator><operator pos:start="173:72" pos:end="173:72">&lt;</operator><literal type="number" pos:start="173:73" pos:end="173:73">0</literal></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="175:27"><block_content pos:start="175:17" pos:end="175:27">

                <return pos:start="175:17" pos:end="175:27">return <expr pos:start="175:24" pos:end="175:26"><name pos:start="175:24" pos:end="175:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="177:13" pos:end="183:35"><if pos:start="177:13" pos:end="183:35">if<condition pos:start="177:15" pos:end="177:19">(<expr pos:start="177:16" pos:end="177:18"><name pos:start="177:16" pos:end="177:18">ret</name></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="183:35"><block_content pos:start="179:17" pos:end="183:35">

                <for pos:start="179:17" pos:end="183:35">for<control pos:start="179:20" pos:end="179:60">(<init pos:start="179:21" pos:end="179:25"><expr pos:start="179:21" pos:end="179:24"><name pos:start="179:21" pos:end="179:22">ch</name><operator pos:start="179:23" pos:end="179:23">=</operator><literal type="number" pos:start="179:24" pos:end="179:24">0</literal></expr>;</init> <condition pos:start="179:27" pos:end="179:54"><expr pos:start="179:27" pos:end="179:53"><name pos:start="179:27" pos:end="179:28">ch</name><operator pos:start="179:29" pos:end="179:29">&lt;</operator><name pos:start="179:30" pos:end="179:53"><name pos:start="179:30" pos:end="179:30">s</name><operator pos:start="179:31" pos:end="179:32">-&gt;</operator><name pos:start="179:33" pos:end="179:38">dither</name><operator pos:start="179:39" pos:end="179:39">.</operator><name pos:start="179:40" pos:end="179:44">noise</name><operator pos:start="179:45" pos:end="179:45">.</operator><name pos:start="179:46" pos:end="179:53">ch_count</name></name></expr>;</condition> <incr pos:start="179:56" pos:end="179:59"><expr pos:start="179:56" pos:end="179:59"><name pos:start="179:56" pos:end="179:57">ch</name><operator pos:start="179:58" pos:end="179:59">++</operator></expr></incr>)</control><block type="pseudo" pos:start="181:21" pos:end="183:35"><block_content pos:start="181:21" pos:end="183:35">

                    <if_stmt pos:start="181:21" pos:end="183:35"><if pos:start="181:21" pos:end="183:35">if<condition pos:start="181:23" pos:end="181:138">(<expr pos:start="181:24" pos:end="181:137"><operator pos:start="181:24" pos:end="181:24">(</operator><name pos:start="181:25" pos:end="181:27">ret</name><operator pos:start="181:28" pos:end="181:28">=</operator><call pos:start="181:29" pos:end="181:134"><name pos:start="181:29" pos:end="181:43">swri_get_dither</name><argument_list pos:start="181:44" pos:end="181:134">(<argument pos:start="181:45" pos:end="181:45"><expr pos:start="181:45" pos:end="181:45"><name pos:start="181:45" pos:end="181:45">s</name></expr></argument>, <argument pos:start="181:48" pos:end="181:69"><expr pos:start="181:48" pos:end="181:69"><name pos:start="181:48" pos:end="181:69"><name pos:start="181:48" pos:end="181:48">s</name><operator pos:start="181:49" pos:end="181:50">-&gt;</operator><name pos:start="181:51" pos:end="181:56">dither</name><operator pos:start="181:57" pos:end="181:57">.</operator><name pos:start="181:58" pos:end="181:62">noise</name><operator pos:start="181:63" pos:end="181:63">.</operator><name pos:start="181:64" pos:end="181:65">ch</name><index pos:start="181:66" pos:end="181:69">[<expr pos:start="181:67" pos:end="181:68"><name pos:start="181:67" pos:end="181:68">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="181:72" pos:end="181:92"><expr pos:start="181:72" pos:end="181:92"><name pos:start="181:72" pos:end="181:92"><name pos:start="181:72" pos:end="181:72">s</name><operator pos:start="181:73" pos:end="181:74">-&gt;</operator><name pos:start="181:75" pos:end="181:80">dither</name><operator pos:start="181:81" pos:end="181:81">.</operator><name pos:start="181:82" pos:end="181:86">noise</name><operator pos:start="181:87" pos:end="181:87">.</operator><name pos:start="181:88" pos:end="181:92">count</name></name></expr></argument>, <argument pos:start="181:95" pos:end="181:112"><expr pos:start="181:95" pos:end="181:112"><literal type="number" pos:start="181:95" pos:end="181:108">12345678913579</literal><operator pos:start="181:109" pos:end="181:110">&lt;&lt;</operator><name pos:start="181:111" pos:end="181:112">ch</name></expr></argument>, <argument pos:start="181:115" pos:end="181:133"><expr pos:start="181:115" pos:end="181:133"><name pos:start="181:115" pos:end="181:133"><name pos:start="181:115" pos:end="181:115">s</name><operator pos:start="181:116" pos:end="181:117">-&gt;</operator><name pos:start="181:118" pos:end="181:123">dither</name><operator pos:start="181:124" pos:end="181:124">.</operator><name pos:start="181:125" pos:end="181:129">noise</name><operator pos:start="181:130" pos:end="181:130">.</operator><name pos:start="181:131" pos:end="181:133">fmt</name></name></expr></argument>)</argument_list></call><operator pos:start="181:135" pos:end="181:135">)</operator><operator pos:start="181:136" pos:end="181:136">&lt;</operator><literal type="number" pos:start="181:137" pos:end="181:137">0</literal></expr>)</condition><block type="pseudo" pos:start="183:25" pos:end="183:35"><block_content pos:start="183:25" pos:end="183:35">

                        <return pos:start="183:25" pos:end="183:35">return <expr pos:start="183:32" pos:end="183:34"><name pos:start="183:32" pos:end="183:34">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:69"><expr pos:start="185:13" pos:end="185:68"><call pos:start="185:13" pos:end="185:68"><name pos:start="185:13" pos:end="185:22">av_assert0</name><argument_list pos:start="185:23" pos:end="185:68">(<argument pos:start="185:24" pos:end="185:67"><expr pos:start="185:24" pos:end="185:67"><name pos:start="185:24" pos:end="185:47"><name pos:start="185:24" pos:end="185:24">s</name><operator pos:start="185:25" pos:end="185:26">-&gt;</operator><name pos:start="185:27" pos:end="185:32">dither</name><operator pos:start="185:33" pos:end="185:33">.</operator><name pos:start="185:34" pos:end="185:38">noise</name><operator pos:start="185:39" pos:end="185:39">.</operator><name pos:start="185:40" pos:end="185:47">ch_count</name></name> <operator pos:start="185:49" pos:end="185:50">==</operator> <name pos:start="185:52" pos:end="185:67"><name pos:start="185:52" pos:end="185:57">preout</name><operator pos:start="185:58" pos:end="185:59">-&gt;</operator><name pos:start="185:60" pos:end="185:67">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="189:13" pos:end="191:40"><if pos:start="189:13" pos:end="191:40">if<condition pos:start="189:15" pos:end="189:71">(<expr pos:start="189:16" pos:end="189:70"><name pos:start="189:16" pos:end="189:34"><name pos:start="189:16" pos:end="189:16">s</name><operator pos:start="189:17" pos:end="189:18">-&gt;</operator><name pos:start="189:19" pos:end="189:24">dither</name><operator pos:start="189:25" pos:end="189:25">.</operator><name pos:start="189:26" pos:end="189:34">noise_pos</name></name> <operator pos:start="189:36" pos:end="189:36">+</operator> <name pos:start="189:38" pos:end="189:46">out_count</name> <operator pos:start="189:48" pos:end="189:48">&gt;</operator> <name pos:start="189:50" pos:end="189:70"><name pos:start="189:50" pos:end="189:50">s</name><operator pos:start="189:51" pos:end="189:52">-&gt;</operator><name pos:start="189:53" pos:end="189:58">dither</name><operator pos:start="189:59" pos:end="189:59">.</operator><name pos:start="189:60" pos:end="189:64">noise</name><operator pos:start="189:65" pos:end="189:65">.</operator><name pos:start="189:66" pos:end="189:70">count</name></name></expr>)</condition><block type="pseudo" pos:start="191:17" pos:end="191:40"><block_content pos:start="191:17" pos:end="191:40">

                <expr_stmt pos:start="191:17" pos:end="191:40"><expr pos:start="191:17" pos:end="191:39"><name pos:start="191:17" pos:end="191:35"><name pos:start="191:17" pos:end="191:17">s</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:25">dither</name><operator pos:start="191:26" pos:end="191:26">.</operator><name pos:start="191:27" pos:end="191:35">noise_pos</name></name> <operator pos:start="191:37" pos:end="191:37">=</operator> <literal type="number" pos:start="191:39" pos:end="191:39">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="195:13" pos:end="239:13"><if pos:start="195:13" pos:end="225:13">if <condition pos:start="195:16" pos:end="195:49">(<expr pos:start="195:17" pos:end="195:48"><name pos:start="195:17" pos:end="195:32"><name pos:start="195:17" pos:end="195:17">s</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:25">dither</name><operator pos:start="195:26" pos:end="195:26">.</operator><name pos:start="195:27" pos:end="195:32">method</name></name> <operator pos:start="195:34" pos:end="195:34">&lt;</operator> <name pos:start="195:36" pos:end="195:48">SWR_DITHER_NS</name></expr>)</condition><block pos:start="195:50" pos:end="225:13">{<block_content pos:start="197:17" pos:end="223:17">

                <if_stmt pos:start="197:17" pos:end="223:17"><if pos:start="197:17" pos:end="217:17">if <condition pos:start="197:20" pos:end="197:36">(<expr pos:start="197:21" pos:end="197:35"><name pos:start="197:21" pos:end="197:35"><name pos:start="197:21" pos:end="197:21">s</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:35">mix_2_1_simd</name></name></expr>)</condition> <block pos:start="197:38" pos:end="217:17">{<block_content pos:start="199:21" pos:end="215:207">

                    <decl_stmt pos:start="199:21" pos:end="199:44"><decl pos:start="199:21" pos:end="199:43"><type pos:start="199:21" pos:end="199:23"><name pos:start="199:21" pos:end="199:23">int</name></type> <name pos:start="199:25" pos:end="199:28">len1</name><init pos:start="199:29" pos:end="199:43">= <expr pos:start="199:31" pos:end="199:43"><name pos:start="199:31" pos:end="199:39">out_count</name><operator pos:start="199:40" pos:end="199:40">&amp;</operator><operator pos:start="199:41" pos:end="199:41">~</operator><literal type="number" pos:start="199:42" pos:end="199:43">15</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="201:21" pos:end="201:49"><decl pos:start="201:21" pos:end="201:48"><type pos:start="201:21" pos:end="201:23"><name pos:start="201:21" pos:end="201:23">int</name></type> <name pos:start="201:25" pos:end="201:27">off</name> <init pos:start="201:29" pos:end="201:48">= <expr pos:start="201:31" pos:end="201:48"><name pos:start="201:31" pos:end="201:34">len1</name> <operator pos:start="201:36" pos:end="201:36">*</operator> <name pos:start="201:38" pos:end="201:48"><name pos:start="201:38" pos:end="201:43">preout</name><operator pos:start="201:44" pos:end="201:45">-&gt;</operator><name pos:start="201:46" pos:end="201:48">bps</name></name></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="205:21" pos:end="209:178"><if pos:start="205:21" pos:end="209:178">if<condition pos:start="205:23" pos:end="205:28">(<expr pos:start="205:24" pos:end="205:27"><name pos:start="205:24" pos:end="205:27">len1</name></expr>)</condition><block type="pseudo" pos:start="207:25" pos:end="209:178"><block_content pos:start="207:25" pos:end="209:178">

                        <for pos:start="207:25" pos:end="209:178">for<control pos:start="207:28" pos:end="207:60">(<init pos:start="207:29" pos:end="207:33"><expr pos:start="207:29" pos:end="207:32"><name pos:start="207:29" pos:end="207:30">ch</name><operator pos:start="207:31" pos:end="207:31">=</operator><literal type="number" pos:start="207:32" pos:end="207:32">0</literal></expr>;</init> <condition pos:start="207:35" pos:end="207:54"><expr pos:start="207:35" pos:end="207:53"><name pos:start="207:35" pos:end="207:36">ch</name><operator pos:start="207:37" pos:end="207:37">&lt;</operator><name pos:start="207:38" pos:end="207:53"><name pos:start="207:38" pos:end="207:43">preout</name><operator pos:start="207:44" pos:end="207:45">-&gt;</operator><name pos:start="207:46" pos:end="207:53">ch_count</name></name></expr>;</condition> <incr pos:start="207:56" pos:end="207:59"><expr pos:start="207:56" pos:end="207:59"><name pos:start="207:56" pos:end="207:57">ch</name><operator pos:start="207:58" pos:end="207:59">++</operator></expr></incr>)</control><block type="pseudo" pos:start="209:29" pos:end="209:178"><block_content pos:start="209:29" pos:end="209:178">

                            <expr_stmt pos:start="209:29" pos:end="209:178"><expr pos:start="209:29" pos:end="209:177"><call pos:start="209:29" pos:end="209:177"><name pos:start="209:29" pos:end="209:43"><name pos:start="209:29" pos:end="209:29">s</name><operator pos:start="209:30" pos:end="209:31">-&gt;</operator><name pos:start="209:32" pos:end="209:43">mix_2_1_simd</name></name><argument_list pos:start="209:44" pos:end="209:177">(<argument pos:start="209:45" pos:end="209:60"><expr pos:start="209:45" pos:end="209:60"><name pos:start="209:45" pos:end="209:60"><name pos:start="209:45" pos:end="209:52">conv_src</name><operator pos:start="209:53" pos:end="209:54">-&gt;</operator><name pos:start="209:55" pos:end="209:56">ch</name><index pos:start="209:57" pos:end="209:60">[<expr pos:start="209:58" pos:end="209:59"><name pos:start="209:58" pos:end="209:59">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="209:63" pos:end="209:76"><expr pos:start="209:63" pos:end="209:76"><name pos:start="209:63" pos:end="209:76"><name pos:start="209:63" pos:end="209:68">preout</name><operator pos:start="209:69" pos:end="209:70">-&gt;</operator><name pos:start="209:71" pos:end="209:72">ch</name><index pos:start="209:73" pos:end="209:76">[<expr pos:start="209:74" pos:end="209:75"><name pos:start="209:74" pos:end="209:75">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="209:79" pos:end="209:144"><expr pos:start="209:79" pos:end="209:144"><name pos:start="209:79" pos:end="209:100"><name pos:start="209:79" pos:end="209:79">s</name><operator pos:start="209:80" pos:end="209:81">-&gt;</operator><name pos:start="209:82" pos:end="209:87">dither</name><operator pos:start="209:88" pos:end="209:88">.</operator><name pos:start="209:89" pos:end="209:93">noise</name><operator pos:start="209:94" pos:end="209:94">.</operator><name pos:start="209:95" pos:end="209:96">ch</name><index pos:start="209:97" pos:end="209:100">[<expr pos:start="209:98" pos:end="209:99"><name pos:start="209:98" pos:end="209:99">ch</name></expr>]</index></name> <operator pos:start="209:102" pos:end="209:102">+</operator> <name pos:start="209:104" pos:end="209:122"><name pos:start="209:104" pos:end="209:104">s</name><operator pos:start="209:105" pos:end="209:106">-&gt;</operator><name pos:start="209:107" pos:end="209:112">dither</name><operator pos:start="209:113" pos:end="209:113">.</operator><name pos:start="209:114" pos:end="209:118">noise</name><operator pos:start="209:119" pos:end="209:119">.</operator><name pos:start="209:120" pos:end="209:122">bps</name></name> <operator pos:start="209:124" pos:end="209:124">*</operator> <name pos:start="209:126" pos:end="209:144"><name pos:start="209:126" pos:end="209:126">s</name><operator pos:start="209:127" pos:end="209:128">-&gt;</operator><name pos:start="209:129" pos:end="209:134">dither</name><operator pos:start="209:135" pos:end="209:135">.</operator><name pos:start="209:136" pos:end="209:144">noise_pos</name></name></expr></argument>, <argument pos:start="209:147" pos:end="209:164"><expr pos:start="209:147" pos:end="209:164"><name pos:start="209:147" pos:end="209:164"><name pos:start="209:147" pos:end="209:147">s</name><operator pos:start="209:148" pos:end="209:149">-&gt;</operator><name pos:start="209:150" pos:end="209:164">native_simd_one</name></name></expr></argument>, <argument pos:start="209:167" pos:end="209:167"><expr pos:start="209:167" pos:end="209:167"><literal type="number" pos:start="209:167" pos:end="209:167">0</literal></expr></argument>, <argument pos:start="209:170" pos:end="209:170"><expr pos:start="209:170" pos:end="209:170"><literal type="number" pos:start="209:170" pos:end="209:170">0</literal></expr></argument>, <argument pos:start="209:173" pos:end="209:176"><expr pos:start="209:173" pos:end="209:176"><name pos:start="209:173" pos:end="209:176">len1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

                    <if_stmt pos:start="211:21" pos:end="215:207"><if pos:start="211:21" pos:end="215:207">if<condition pos:start="211:23" pos:end="211:41">(<expr pos:start="211:24" pos:end="211:40"><name pos:start="211:24" pos:end="211:32">out_count</name> <operator pos:start="211:34" pos:end="211:35">!=</operator> <name pos:start="211:37" pos:end="211:40">len1</name></expr>)</condition><block type="pseudo" pos:start="213:25" pos:end="215:207"><block_content pos:start="213:25" pos:end="215:207">

                        <for pos:start="213:25" pos:end="215:207">for<control pos:start="213:28" pos:end="213:60">(<init pos:start="213:29" pos:end="213:33"><expr pos:start="213:29" pos:end="213:32"><name pos:start="213:29" pos:end="213:30">ch</name><operator pos:start="213:31" pos:end="213:31">=</operator><literal type="number" pos:start="213:32" pos:end="213:32">0</literal></expr>;</init> <condition pos:start="213:35" pos:end="213:54"><expr pos:start="213:35" pos:end="213:53"><name pos:start="213:35" pos:end="213:36">ch</name><operator pos:start="213:37" pos:end="213:37">&lt;</operator><name pos:start="213:38" pos:end="213:53"><name pos:start="213:38" pos:end="213:43">preout</name><operator pos:start="213:44" pos:end="213:45">-&gt;</operator><name pos:start="213:46" pos:end="213:53">ch_count</name></name></expr>;</condition> <incr pos:start="213:56" pos:end="213:59"><expr pos:start="213:56" pos:end="213:59"><name pos:start="213:56" pos:end="213:57">ch</name><operator pos:start="213:58" pos:end="213:59">++</operator></expr></incr>)</control><block type="pseudo" pos:start="215:29" pos:end="215:207"><block_content pos:start="215:29" pos:end="215:207">

                            <expr_stmt pos:start="215:29" pos:end="215:207"><expr pos:start="215:29" pos:end="215:206"><call pos:start="215:29" pos:end="215:206"><name pos:start="215:29" pos:end="215:40"><name pos:start="215:29" pos:end="215:29">s</name><operator pos:start="215:30" pos:end="215:31">-&gt;</operator><name pos:start="215:32" pos:end="215:40">mix_2_1_f</name></name><argument_list pos:start="215:41" pos:end="215:206">(<argument pos:start="215:42" pos:end="215:63"><expr pos:start="215:42" pos:end="215:63"><name pos:start="215:42" pos:end="215:57"><name pos:start="215:42" pos:end="215:49">conv_src</name><operator pos:start="215:50" pos:end="215:51">-&gt;</operator><name pos:start="215:52" pos:end="215:53">ch</name><index pos:start="215:54" pos:end="215:57">[<expr pos:start="215:55" pos:end="215:56"><name pos:start="215:55" pos:end="215:56">ch</name></expr>]</index></name> <operator pos:start="215:59" pos:end="215:59">+</operator> <name pos:start="215:61" pos:end="215:63">off</name></expr></argument>, <argument pos:start="215:66" pos:end="215:85"><expr pos:start="215:66" pos:end="215:85"><name pos:start="215:66" pos:end="215:79"><name pos:start="215:66" pos:end="215:71">preout</name><operator pos:start="215:72" pos:end="215:73">-&gt;</operator><name pos:start="215:74" pos:end="215:75">ch</name><index pos:start="215:76" pos:end="215:79">[<expr pos:start="215:77" pos:end="215:78"><name pos:start="215:77" pos:end="215:78">ch</name></expr>]</index></name> <operator pos:start="215:81" pos:end="215:81">+</operator> <name pos:start="215:83" pos:end="215:85">off</name></expr></argument>, <argument pos:start="215:88" pos:end="215:166"><expr pos:start="215:88" pos:end="215:166"><name pos:start="215:88" pos:end="215:109"><name pos:start="215:88" pos:end="215:88">s</name><operator pos:start="215:89" pos:end="215:90">-&gt;</operator><name pos:start="215:91" pos:end="215:96">dither</name><operator pos:start="215:97" pos:end="215:97">.</operator><name pos:start="215:98" pos:end="215:102">noise</name><operator pos:start="215:103" pos:end="215:103">.</operator><name pos:start="215:104" pos:end="215:105">ch</name><index pos:start="215:106" pos:end="215:109">[<expr pos:start="215:107" pos:end="215:108"><name pos:start="215:107" pos:end="215:108">ch</name></expr>]</index></name> <operator pos:start="215:111" pos:end="215:111">+</operator> <name pos:start="215:113" pos:end="215:131"><name pos:start="215:113" pos:end="215:113">s</name><operator pos:start="215:114" pos:end="215:115">-&gt;</operator><name pos:start="215:116" pos:end="215:121">dither</name><operator pos:start="215:122" pos:end="215:122">.</operator><name pos:start="215:123" pos:end="215:127">noise</name><operator pos:start="215:128" pos:end="215:128">.</operator><name pos:start="215:129" pos:end="215:131">bps</name></name> <operator pos:start="215:133" pos:end="215:133">*</operator> <name pos:start="215:135" pos:end="215:153"><name pos:start="215:135" pos:end="215:135">s</name><operator pos:start="215:136" pos:end="215:137">-&gt;</operator><name pos:start="215:138" pos:end="215:143">dither</name><operator pos:start="215:144" pos:end="215:144">.</operator><name pos:start="215:145" pos:end="215:153">noise_pos</name></name> <operator pos:start="215:155" pos:end="215:155">+</operator> <name pos:start="215:157" pos:end="215:159">off</name> <operator pos:start="215:161" pos:end="215:161">+</operator> <name pos:start="215:163" pos:end="215:166">len1</name></expr></argument>, <argument pos:start="215:169" pos:end="215:181"><expr pos:start="215:169" pos:end="215:181"><name pos:start="215:169" pos:end="215:181"><name pos:start="215:169" pos:end="215:169">s</name><operator pos:start="215:170" pos:end="215:171">-&gt;</operator><name pos:start="215:172" pos:end="215:181">native_one</name></name></expr></argument>, <argument pos:start="215:184" pos:end="215:184"><expr pos:start="215:184" pos:end="215:184"><literal type="number" pos:start="215:184" pos:end="215:184">0</literal></expr></argument>, <argument pos:start="215:187" pos:end="215:187"><expr pos:start="215:187" pos:end="215:187"><literal type="number" pos:start="215:187" pos:end="215:187">0</literal></expr></argument>, <argument pos:start="215:190" pos:end="215:205"><expr pos:start="215:190" pos:end="215:205"><name pos:start="215:190" pos:end="215:198">out_count</name> <operator pos:start="215:200" pos:end="215:200">-</operator> <name pos:start="215:202" pos:end="215:205">len1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="217:19" pos:end="223:17">else <block pos:start="217:24" pos:end="223:17">{<block_content pos:start="219:21" pos:end="221:171">

                    <for pos:start="219:21" pos:end="221:171">for<control pos:start="219:24" pos:end="219:56">(<init pos:start="219:25" pos:end="219:29"><expr pos:start="219:25" pos:end="219:28"><name pos:start="219:25" pos:end="219:26">ch</name><operator pos:start="219:27" pos:end="219:27">=</operator><literal type="number" pos:start="219:28" pos:end="219:28">0</literal></expr>;</init> <condition pos:start="219:31" pos:end="219:50"><expr pos:start="219:31" pos:end="219:49"><name pos:start="219:31" pos:end="219:32">ch</name><operator pos:start="219:33" pos:end="219:33">&lt;</operator><name pos:start="219:34" pos:end="219:49"><name pos:start="219:34" pos:end="219:39">preout</name><operator pos:start="219:40" pos:end="219:41">-&gt;</operator><name pos:start="219:42" pos:end="219:49">ch_count</name></name></expr>;</condition> <incr pos:start="219:52" pos:end="219:55"><expr pos:start="219:52" pos:end="219:55"><name pos:start="219:52" pos:end="219:53">ch</name><operator pos:start="219:54" pos:end="219:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="221:25" pos:end="221:171"><block_content pos:start="221:25" pos:end="221:171">

                        <expr_stmt pos:start="221:25" pos:end="221:171"><expr pos:start="221:25" pos:end="221:170"><call pos:start="221:25" pos:end="221:170"><name pos:start="221:25" pos:end="221:36"><name pos:start="221:25" pos:end="221:25">s</name><operator pos:start="221:26" pos:end="221:27">-&gt;</operator><name pos:start="221:28" pos:end="221:36">mix_2_1_f</name></name><argument_list pos:start="221:37" pos:end="221:170">(<argument pos:start="221:38" pos:end="221:53"><expr pos:start="221:38" pos:end="221:53"><name pos:start="221:38" pos:end="221:53"><name pos:start="221:38" pos:end="221:45">conv_src</name><operator pos:start="221:46" pos:end="221:47">-&gt;</operator><name pos:start="221:48" pos:end="221:49">ch</name><index pos:start="221:50" pos:end="221:53">[<expr pos:start="221:51" pos:end="221:52"><name pos:start="221:51" pos:end="221:52">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="221:56" pos:end="221:69"><expr pos:start="221:56" pos:end="221:69"><name pos:start="221:56" pos:end="221:69"><name pos:start="221:56" pos:end="221:61">preout</name><operator pos:start="221:62" pos:end="221:63">-&gt;</operator><name pos:start="221:64" pos:end="221:65">ch</name><index pos:start="221:66" pos:end="221:69">[<expr pos:start="221:67" pos:end="221:68"><name pos:start="221:67" pos:end="221:68">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="221:72" pos:end="221:137"><expr pos:start="221:72" pos:end="221:137"><name pos:start="221:72" pos:end="221:93"><name pos:start="221:72" pos:end="221:72">s</name><operator pos:start="221:73" pos:end="221:74">-&gt;</operator><name pos:start="221:75" pos:end="221:80">dither</name><operator pos:start="221:81" pos:end="221:81">.</operator><name pos:start="221:82" pos:end="221:86">noise</name><operator pos:start="221:87" pos:end="221:87">.</operator><name pos:start="221:88" pos:end="221:89">ch</name><index pos:start="221:90" pos:end="221:93">[<expr pos:start="221:91" pos:end="221:92"><name pos:start="221:91" pos:end="221:92">ch</name></expr>]</index></name> <operator pos:start="221:95" pos:end="221:95">+</operator> <name pos:start="221:97" pos:end="221:115"><name pos:start="221:97" pos:end="221:97">s</name><operator pos:start="221:98" pos:end="221:99">-&gt;</operator><name pos:start="221:100" pos:end="221:105">dither</name><operator pos:start="221:106" pos:end="221:106">.</operator><name pos:start="221:107" pos:end="221:111">noise</name><operator pos:start="221:112" pos:end="221:112">.</operator><name pos:start="221:113" pos:end="221:115">bps</name></name> <operator pos:start="221:117" pos:end="221:117">*</operator> <name pos:start="221:119" pos:end="221:137"><name pos:start="221:119" pos:end="221:119">s</name><operator pos:start="221:120" pos:end="221:121">-&gt;</operator><name pos:start="221:122" pos:end="221:127">dither</name><operator pos:start="221:128" pos:end="221:128">.</operator><name pos:start="221:129" pos:end="221:137">noise_pos</name></name></expr></argument>, <argument pos:start="221:140" pos:end="221:152"><expr pos:start="221:140" pos:end="221:152"><name pos:start="221:140" pos:end="221:152"><name pos:start="221:140" pos:end="221:140">s</name><operator pos:start="221:141" pos:end="221:142">-&gt;</operator><name pos:start="221:143" pos:end="221:152">native_one</name></name></expr></argument>, <argument pos:start="221:155" pos:end="221:155"><expr pos:start="221:155" pos:end="221:155"><literal type="number" pos:start="221:155" pos:end="221:155">0</literal></expr></argument>, <argument pos:start="221:158" pos:end="221:158"><expr pos:start="221:158" pos:end="221:158"><literal type="number" pos:start="221:158" pos:end="221:158">0</literal></expr></argument>, <argument pos:start="221:161" pos:end="221:169"><expr pos:start="221:161" pos:end="221:169"><name pos:start="221:161" pos:end="221:169">out_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="225:15" pos:end="239:13">else <block pos:start="225:20" pos:end="239:13">{<block_content pos:start="227:17" pos:end="237:17">

                <switch pos:start="227:17" pos:end="237:17">switch<condition pos:start="227:23" pos:end="227:41">(<expr pos:start="227:24" pos:end="227:40"><name pos:start="227:24" pos:end="227:40"><name pos:start="227:24" pos:end="227:24">s</name><operator pos:start="227:25" pos:end="227:26">-&gt;</operator><name pos:start="227:27" pos:end="227:40">int_sample_fmt</name></name></expr>)</condition> <block pos:start="227:43" pos:end="237:17">{<block_content pos:start="229:17" pos:end="235:123">

                <case pos:start="229:17" pos:end="229:41">case <expr pos:start="229:22" pos:end="229:39"><name pos:start="229:22" pos:end="229:39">AV_SAMPLE_FMT_S16P</name></expr> :</case><expr_stmt pos:start="229:42" pos:end="229:116"><expr pos:start="229:42" pos:end="229:115"><call pos:start="229:42" pos:end="229:115"><name pos:start="229:42" pos:end="229:65">swri_noise_shaping_int16</name><argument_list pos:start="229:66" pos:end="229:115">(<argument pos:start="229:67" pos:end="229:67"><expr pos:start="229:67" pos:end="229:67"><name pos:start="229:67" pos:end="229:67">s</name></expr></argument>, <argument pos:start="229:70" pos:end="229:77"><expr pos:start="229:70" pos:end="229:77"><name pos:start="229:70" pos:end="229:77">conv_src</name></expr></argument>, <argument pos:start="229:80" pos:end="229:85"><expr pos:start="229:80" pos:end="229:85"><name pos:start="229:80" pos:end="229:85">preout</name></expr></argument>, <argument pos:start="229:88" pos:end="229:103"><expr pos:start="229:88" pos:end="229:103"><operator pos:start="229:88" pos:end="229:88">&amp;</operator><name pos:start="229:89" pos:end="229:103"><name pos:start="229:89" pos:end="229:89">s</name><operator pos:start="229:90" pos:end="229:91">-&gt;</operator><name pos:start="229:92" pos:end="229:97">dither</name><operator pos:start="229:98" pos:end="229:98">.</operator><name pos:start="229:99" pos:end="229:103">noise</name></name></expr></argument>, <argument pos:start="229:106" pos:end="229:114"><expr pos:start="229:106" pos:end="229:114"><name pos:start="229:106" pos:end="229:114">out_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="229:118" pos:end="229:123">break;</break>

                <case pos:start="231:17" pos:end="231:41">case <expr pos:start="231:22" pos:end="231:39"><name pos:start="231:22" pos:end="231:39">AV_SAMPLE_FMT_S32P</name></expr> :</case><expr_stmt pos:start="231:42" pos:end="231:116"><expr pos:start="231:42" pos:end="231:115"><call pos:start="231:42" pos:end="231:115"><name pos:start="231:42" pos:end="231:65">swri_noise_shaping_int32</name><argument_list pos:start="231:66" pos:end="231:115">(<argument pos:start="231:67" pos:end="231:67"><expr pos:start="231:67" pos:end="231:67"><name pos:start="231:67" pos:end="231:67">s</name></expr></argument>, <argument pos:start="231:70" pos:end="231:77"><expr pos:start="231:70" pos:end="231:77"><name pos:start="231:70" pos:end="231:77">conv_src</name></expr></argument>, <argument pos:start="231:80" pos:end="231:85"><expr pos:start="231:80" pos:end="231:85"><name pos:start="231:80" pos:end="231:85">preout</name></expr></argument>, <argument pos:start="231:88" pos:end="231:103"><expr pos:start="231:88" pos:end="231:103"><operator pos:start="231:88" pos:end="231:88">&amp;</operator><name pos:start="231:89" pos:end="231:103"><name pos:start="231:89" pos:end="231:89">s</name><operator pos:start="231:90" pos:end="231:91">-&gt;</operator><name pos:start="231:92" pos:end="231:97">dither</name><operator pos:start="231:98" pos:end="231:98">.</operator><name pos:start="231:99" pos:end="231:103">noise</name></name></expr></argument>, <argument pos:start="231:106" pos:end="231:114"><expr pos:start="231:106" pos:end="231:114"><name pos:start="231:106" pos:end="231:114">out_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="231:118" pos:end="231:123">break;</break>

                <case pos:start="233:17" pos:end="233:41">case <expr pos:start="233:22" pos:end="233:39"><name pos:start="233:22" pos:end="233:39">AV_SAMPLE_FMT_FLTP</name></expr> :</case><expr_stmt pos:start="233:42" pos:end="233:116"><expr pos:start="233:42" pos:end="233:115"><call pos:start="233:42" pos:end="233:115"><name pos:start="233:42" pos:end="233:65">swri_noise_shaping_float</name><argument_list pos:start="233:66" pos:end="233:115">(<argument pos:start="233:67" pos:end="233:67"><expr pos:start="233:67" pos:end="233:67"><name pos:start="233:67" pos:end="233:67">s</name></expr></argument>, <argument pos:start="233:70" pos:end="233:77"><expr pos:start="233:70" pos:end="233:77"><name pos:start="233:70" pos:end="233:77">conv_src</name></expr></argument>, <argument pos:start="233:80" pos:end="233:85"><expr pos:start="233:80" pos:end="233:85"><name pos:start="233:80" pos:end="233:85">preout</name></expr></argument>, <argument pos:start="233:88" pos:end="233:103"><expr pos:start="233:88" pos:end="233:103"><operator pos:start="233:88" pos:end="233:88">&amp;</operator><name pos:start="233:89" pos:end="233:103"><name pos:start="233:89" pos:end="233:89">s</name><operator pos:start="233:90" pos:end="233:91">-&gt;</operator><name pos:start="233:92" pos:end="233:97">dither</name><operator pos:start="233:98" pos:end="233:98">.</operator><name pos:start="233:99" pos:end="233:103">noise</name></name></expr></argument>, <argument pos:start="233:106" pos:end="233:114"><expr pos:start="233:106" pos:end="233:114"><name pos:start="233:106" pos:end="233:114">out_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="233:118" pos:end="233:123">break;</break>

                <case pos:start="235:17" pos:end="235:41">case <expr pos:start="235:22" pos:end="235:39"><name pos:start="235:22" pos:end="235:39">AV_SAMPLE_FMT_DBLP</name></expr> :</case><expr_stmt pos:start="235:42" pos:end="235:116"><expr pos:start="235:42" pos:end="235:115"><call pos:start="235:42" pos:end="235:115"><name pos:start="235:42" pos:end="235:66">swri_noise_shaping_double</name><argument_list pos:start="235:67" pos:end="235:115">(<argument pos:start="235:68" pos:end="235:68"><expr pos:start="235:68" pos:end="235:68"><name pos:start="235:68" pos:end="235:68">s</name></expr></argument>,<argument pos:start="235:70" pos:end="235:77"><expr pos:start="235:70" pos:end="235:77"><name pos:start="235:70" pos:end="235:77">conv_src</name></expr></argument>, <argument pos:start="235:80" pos:end="235:85"><expr pos:start="235:80" pos:end="235:85"><name pos:start="235:80" pos:end="235:85">preout</name></expr></argument>, <argument pos:start="235:88" pos:end="235:103"><expr pos:start="235:88" pos:end="235:103"><operator pos:start="235:88" pos:end="235:88">&amp;</operator><name pos:start="235:89" pos:end="235:103"><name pos:start="235:89" pos:end="235:89">s</name><operator pos:start="235:90" pos:end="235:91">-&gt;</operator><name pos:start="235:92" pos:end="235:97">dither</name><operator pos:start="235:98" pos:end="235:98">.</operator><name pos:start="235:99" pos:end="235:103">noise</name></name></expr></argument>, <argument pos:start="235:106" pos:end="235:114"><expr pos:start="235:106" pos:end="235:114"><name pos:start="235:106" pos:end="235:114">out_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="235:118" pos:end="235:123">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:45"><expr pos:start="241:13" pos:end="241:44"><name pos:start="241:13" pos:end="241:31"><name pos:start="241:13" pos:end="241:13">s</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:21">dither</name><operator pos:start="241:22" pos:end="241:22">.</operator><name pos:start="241:23" pos:end="241:31">noise_pos</name></name> <operator pos:start="241:33" pos:end="241:34">+=</operator> <name pos:start="241:36" pos:end="241:44">out_count</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="245:1" pos:end="245:50">//FIXME packed doesn't need more than 1 chan here!</comment>

        <expr_stmt pos:start="247:9" pos:end="247:69"><expr pos:start="247:9" pos:end="247:68"><call pos:start="247:9" pos:end="247:68"><name pos:start="247:9" pos:end="247:26">swri_audio_convert</name><argument_list pos:start="247:27" pos:end="247:68">(<argument pos:start="247:28" pos:end="247:41"><expr pos:start="247:28" pos:end="247:41"><name pos:start="247:28" pos:end="247:41"><name pos:start="247:28" pos:end="247:28">s</name><operator pos:start="247:29" pos:end="247:30">-&gt;</operator><name pos:start="247:31" pos:end="247:41">out_convert</name></name></expr></argument>, <argument pos:start="247:44" pos:end="247:46"><expr pos:start="247:44" pos:end="247:46"><name pos:start="247:44" pos:end="247:46">out</name></expr></argument>, <argument pos:start="247:49" pos:end="247:56"><expr pos:start="247:49" pos:end="247:56"><name pos:start="247:49" pos:end="247:56">conv_src</name></expr></argument>, <argument pos:start="247:59" pos:end="247:67"><expr pos:start="247:59" pos:end="247:67"><name pos:start="247:59" pos:end="247:67">out_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="251:5" pos:end="251:21">return <expr pos:start="251:12" pos:end="251:20"><name pos:start="251:12" pos:end="251:20">out_count</name></expr>;</return>

</block_content>}</block></function>
</unit>
