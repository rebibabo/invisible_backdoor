<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19871.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">webm_dash_manifest_cues</name><parameter_list pos:start="1:35" pos:end="1:74">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><name pos:start="1:56" pos:end="1:62">int64_t</name></type> <name pos:start="1:64" pos:end="1:73">init_range</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:13">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">MatroskaDemuxContext</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:34">matroska</name> <init pos:start="5:36" pos:end="5:49">= <expr pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:38">s</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">EbmlList</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:27">seekhead_list</name> <init pos:start="7:29" pos:end="7:49">= <expr pos:start="7:31" pos:end="7:49"><operator pos:start="7:31" pos:end="7:31">&amp;</operator><name pos:start="7:32" pos:end="7:49"><name pos:start="7:32" pos:end="7:39">matroska</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:49">seekhead</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MatroskaSeekhead</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:30">seekhead</name> <init pos:start="9:32" pos:end="9:52">= <expr pos:start="9:34" pos:end="9:52"><name pos:start="9:34" pos:end="9:52"><name pos:start="9:34" pos:end="9:46">seekhead_list</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:52">elem</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:13">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:66"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:22">cues_start</name> <init pos:start="13:24" pos:end="13:27">= <expr pos:start="13:26" pos:end="13:27"><operator pos:start="13:26" pos:end="13:26">-</operator><literal type="number" pos:start="13:27" pos:end="13:27">1</literal></expr></init></decl>, <decl pos:start="13:30" pos:end="13:42"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:30" pos:end="13:37">cues_end</name> <init pos:start="13:39" pos:end="13:42">= <expr pos:start="13:41" pos:end="13:42"><operator pos:start="13:41" pos:end="13:41">-</operator><literal type="number" pos:start="13:42" pos:end="13:42">1</literal></expr></init></decl>, <decl pos:start="13:45" pos:end="13:54"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:45" pos:end="13:54">before_pos</name></decl>, <decl pos:start="13:57" pos:end="13:65"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:57" pos:end="13:65">bandwidth</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">end</name> <init pos:start="17:13" pos:end="17:15">= <expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="21:5" pos:end="21:45">// determine cues start and end positions</comment>

    <for pos:start="23:5" pos:end="27:18">for <control pos:start="23:9" pos:end="23:48">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:43"><expr pos:start="23:17" pos:end="23:42"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:42"><name pos:start="23:21" pos:end="23:33">seekhead_list</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:42">nb_elem</name></name></expr>;</condition> <incr pos:start="23:45" pos:end="23:47"><expr pos:start="23:45" pos:end="23:47"><name pos:start="23:45" pos:end="23:45">i</name><operator pos:start="23:46" pos:end="23:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:9" pos:end="27:18"><block_content pos:start="25:9" pos:end="27:18">

        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if <condition pos:start="25:12" pos:end="25:47">(<expr pos:start="25:13" pos:end="25:46"><name pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:20">seekhead</name><index pos:start="25:21" pos:end="25:23">[<expr pos:start="25:22" pos:end="25:22"><name pos:start="25:22" pos:end="25:22">i</name></expr>]</index></name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:26">id</name> <operator pos:start="25:28" pos:end="25:29">==</operator> <name pos:start="25:31" pos:end="25:46">MATROSKA_ID_CUES</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt></block_content></block></for>



    <if_stmt pos:start="31:5" pos:end="31:47"><if pos:start="31:5" pos:end="31:47">if <condition pos:start="31:8" pos:end="31:36">(<expr pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:9">i</name> <operator pos:start="31:11" pos:end="31:12">&gt;=</operator> <name pos:start="31:14" pos:end="31:35"><name pos:start="31:14" pos:end="31:26">seekhead_list</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:35">nb_elem</name></name></expr>)</condition><block type="pseudo" pos:start="31:38" pos:end="31:47"><block_content pos:start="31:38" pos:end="31:47"> <return pos:start="31:38" pos:end="31:47">return <expr pos:start="31:45" pos:end="31:46"><operator pos:start="31:45" pos:end="31:45">-</operator><literal type="number" pos:start="31:46" pos:end="31:46">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:46"><expr pos:start="35:5" pos:end="35:45"><name pos:start="35:5" pos:end="35:14">before_pos</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:45"><name pos:start="35:18" pos:end="35:26">avio_tell</name><argument_list pos:start="35:27" pos:end="35:45">(<argument pos:start="35:28" pos:end="35:44"><expr pos:start="35:28" pos:end="35:44"><name pos:start="35:28" pos:end="35:44"><name pos:start="35:28" pos:end="35:35">matroska</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:40">ctx</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:44">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:59"><expr pos:start="37:5" pos:end="37:58"><name pos:start="37:5" pos:end="37:14">cues_start</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:28"><name pos:start="37:18" pos:end="37:25">seekhead</name><index pos:start="37:26" pos:end="37:28">[<expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">i</name></expr>]</index></name><operator pos:start="37:29" pos:end="37:29">.</operator><name pos:start="37:30" pos:end="37:32">pos</name> <operator pos:start="37:34" pos:end="37:34">+</operator> <name pos:start="37:36" pos:end="37:58"><name pos:start="37:36" pos:end="37:43">matroska</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:58">segment_start</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="55:5"><if pos:start="39:5" pos:end="55:5">if <condition pos:start="39:8" pos:end="39:73">(<expr pos:start="39:9" pos:end="39:72"><call pos:start="39:9" pos:end="39:58"><name pos:start="39:9" pos:end="39:17">avio_seek</name><argument_list pos:start="39:18" pos:end="39:58">(<argument pos:start="39:19" pos:end="39:35"><expr pos:start="39:19" pos:end="39:35"><name pos:start="39:19" pos:end="39:35"><name pos:start="39:19" pos:end="39:26">matroska</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:31">ctx</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:35">pb</name></name></expr></argument>, <argument pos:start="39:38" pos:end="39:47"><expr pos:start="39:38" pos:end="39:47"><name pos:start="39:38" pos:end="39:47">cues_start</name></expr></argument>, <argument pos:start="39:50" pos:end="39:57"><expr pos:start="39:50" pos:end="39:57"><name pos:start="39:50" pos:end="39:57">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="39:60" pos:end="39:61">==</operator> <name pos:start="39:63" pos:end="39:72">cues_start</name></expr>)</condition> <block pos:start="39:75" pos:end="55:5">{<block_content pos:start="47:9" pos:end="53:61">

        <comment type="line" pos:start="41:9" pos:end="41:75">// cues_end is computed as cues_start + cues_length + length of the</comment>

        <comment type="line" pos:start="43:9" pos:end="43:73">// Cues element ID + EBML length of the Cues element. cues_end is</comment>

        <comment type="line" pos:start="45:9" pos:end="45:55">// inclusive and the above sum is reduced by 1.</comment>

        <decl_stmt pos:start="47:9" pos:end="47:62"><decl pos:start="47:9" pos:end="47:32"><type pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:16">uint64_t</name></type> <name pos:start="47:18" pos:end="47:28">cues_length</name> <init pos:start="47:30" pos:end="47:32">= <expr pos:start="47:32" pos:end="47:32"><literal type="number" pos:start="47:32" pos:end="47:32">0</literal></expr></init></decl>, <decl pos:start="47:35" pos:end="47:45"><type ref="prev" pos:start="47:9" pos:end="47:16"/><name pos:start="47:35" pos:end="47:41">cues_id</name> <init pos:start="47:43" pos:end="47:45">= <expr pos:start="47:45" pos:end="47:45"><literal type="number" pos:start="47:45" pos:end="47:45">0</literal></expr></init></decl>, <decl pos:start="47:48" pos:end="47:61"><type ref="prev" pos:start="47:9" pos:end="47:16"/><name pos:start="47:48" pos:end="47:57">bytes_read</name> <init pos:start="47:59" pos:end="47:61">= <expr pos:start="47:61" pos:end="47:61"><literal type="number" pos:start="47:61" pos:end="47:61">0</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:78"><expr pos:start="49:9" pos:end="49:77"><name pos:start="49:9" pos:end="49:18">bytes_read</name> <operator pos:start="49:20" pos:end="49:21">+=</operator> <call pos:start="49:23" pos:end="49:77"><name pos:start="49:23" pos:end="49:35">ebml_read_num</name><argument_list pos:start="49:36" pos:end="49:77">(<argument pos:start="49:37" pos:end="49:44"><expr pos:start="49:37" pos:end="49:44"><name pos:start="49:37" pos:end="49:44">matroska</name></expr></argument>, <argument pos:start="49:47" pos:end="49:63"><expr pos:start="49:47" pos:end="49:63"><name pos:start="49:47" pos:end="49:63"><name pos:start="49:47" pos:end="49:54">matroska</name><operator pos:start="49:55" pos:end="49:56">-&gt;</operator><name pos:start="49:57" pos:end="49:59">ctx</name><operator pos:start="49:60" pos:end="49:61">-&gt;</operator><name pos:start="49:62" pos:end="49:63">pb</name></name></expr></argument>, <argument pos:start="49:66" pos:end="49:66"><expr pos:start="49:66" pos:end="49:66"><literal type="number" pos:start="49:66" pos:end="49:66">4</literal></expr></argument>, <argument pos:start="49:69" pos:end="49:76"><expr pos:start="49:69" pos:end="49:76"><operator pos:start="49:69" pos:end="49:69">&amp;</operator><name pos:start="49:70" pos:end="49:76">cues_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:82"><expr pos:start="51:9" pos:end="51:81"><name pos:start="51:9" pos:end="51:18">bytes_read</name> <operator pos:start="51:20" pos:end="51:21">+=</operator> <call pos:start="51:23" pos:end="51:81"><name pos:start="51:23" pos:end="51:38">ebml_read_length</name><argument_list pos:start="51:39" pos:end="51:81">(<argument pos:start="51:40" pos:end="51:47"><expr pos:start="51:40" pos:end="51:47"><name pos:start="51:40" pos:end="51:47">matroska</name></expr></argument>, <argument pos:start="51:50" pos:end="51:66"><expr pos:start="51:50" pos:end="51:66"><name pos:start="51:50" pos:end="51:66"><name pos:start="51:50" pos:end="51:57">matroska</name><operator pos:start="51:58" pos:end="51:59">-&gt;</operator><name pos:start="51:60" pos:end="51:62">ctx</name><operator pos:start="51:63" pos:end="51:64">-&gt;</operator><name pos:start="51:65" pos:end="51:66">pb</name></name></expr></argument>, <argument pos:start="51:69" pos:end="51:80"><expr pos:start="51:69" pos:end="51:80"><operator pos:start="51:69" pos:end="51:69">&amp;</operator><name pos:start="51:70" pos:end="51:80">cues_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:61"><expr pos:start="53:9" pos:end="53:60"><name pos:start="53:9" pos:end="53:16">cues_end</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:29">cues_start</name> <operator pos:start="53:31" pos:end="53:31">+</operator> <name pos:start="53:33" pos:end="53:43">cues_length</name> <operator pos:start="53:45" pos:end="53:45">+</operator> <name pos:start="53:47" pos:end="53:56">bytes_read</name> <operator pos:start="53:58" pos:end="53:58">-</operator> <literal type="number" pos:start="53:60" pos:end="53:60">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:55"><expr pos:start="57:5" pos:end="57:54"><call pos:start="57:5" pos:end="57:54"><name pos:start="57:5" pos:end="57:13">avio_seek</name><argument_list pos:start="57:14" pos:end="57:54">(<argument pos:start="57:15" pos:end="57:31"><expr pos:start="57:15" pos:end="57:31"><name pos:start="57:15" pos:end="57:31"><name pos:start="57:15" pos:end="57:22">matroska</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:27">ctx</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:31">pb</name></name></expr></argument>, <argument pos:start="57:34" pos:end="57:43"><expr pos:start="57:34" pos:end="57:43"><name pos:start="57:34" pos:end="57:43">before_pos</name></expr></argument>, <argument pos:start="57:46" pos:end="57:53"><expr pos:start="57:46" pos:end="57:53"><name pos:start="57:46" pos:end="57:53">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="59:54"><if pos:start="59:5" pos:end="59:54">if <condition pos:start="59:8" pos:end="59:43">(<expr pos:start="59:9" pos:end="59:42"><name pos:start="59:9" pos:end="59:18">cues_start</name> <operator pos:start="59:20" pos:end="59:21">==</operator> <operator pos:start="59:23" pos:end="59:23">-</operator><literal type="number" pos:start="59:24" pos:end="59:24">1</literal> <operator pos:start="59:26" pos:end="59:27">||</operator> <name pos:start="59:29" pos:end="59:36">cues_end</name> <operator pos:start="59:38" pos:end="59:39">==</operator> <operator pos:start="59:41" pos:end="59:41">-</operator><literal type="number" pos:start="59:42" pos:end="59:42">1</literal></expr>)</condition><block type="pseudo" pos:start="59:45" pos:end="59:54"><block_content pos:start="59:45" pos:end="59:54"> <return pos:start="59:45" pos:end="59:54">return <expr pos:start="59:52" pos:end="59:53"><operator pos:start="59:52" pos:end="59:52">-</operator><literal type="number" pos:start="59:53" pos:end="59:53">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="63:5" pos:end="63:21">// parse the cues</comment>

    <expr_stmt pos:start="65:5" pos:end="65:34"><expr pos:start="65:5" pos:end="65:33"><call pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:23">matroska_parse_cues</name><argument_list pos:start="65:24" pos:end="65:33">(<argument pos:start="65:25" pos:end="65:32"><expr pos:start="65:25" pos:end="65:32"><name pos:start="65:25" pos:end="65:32">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="69:5" pos:end="69:17">// cues start</comment>

    <expr_stmt pos:start="71:5" pos:end="71:73"><expr pos:start="71:5" pos:end="71:72"><call pos:start="71:5" pos:end="71:72"><name pos:start="71:5" pos:end="71:19">av_dict_set_int</name><argument_list pos:start="71:20" pos:end="71:72">(<argument pos:start="71:21" pos:end="71:44"><expr pos:start="71:21" pos:end="71:44"><operator pos:start="71:21" pos:end="71:21">&amp;</operator><name pos:start="71:22" pos:end="71:34"><name pos:start="71:22" pos:end="71:22">s</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:31">streams</name><index pos:start="71:32" pos:end="71:34">[<expr pos:start="71:33" pos:end="71:33"><literal type="number" pos:start="71:33" pos:end="71:33">0</literal></expr>]</index></name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:44">metadata</name></expr></argument>, <argument pos:start="71:47" pos:end="71:56"><expr pos:start="71:47" pos:end="71:56"><name pos:start="71:47" pos:end="71:56">CUES_START</name></expr></argument>, <argument pos:start="71:59" pos:end="71:68"><expr pos:start="71:59" pos:end="71:68"><name pos:start="71:59" pos:end="71:68">cues_start</name></expr></argument>, <argument pos:start="71:71" pos:end="71:71"><expr pos:start="71:71" pos:end="71:71"><literal type="number" pos:start="71:71" pos:end="71:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="75:5" pos:end="75:15">// cues end</comment>

    <expr_stmt pos:start="77:5" pos:end="77:69"><expr pos:start="77:5" pos:end="77:68"><call pos:start="77:5" pos:end="77:68"><name pos:start="77:5" pos:end="77:19">av_dict_set_int</name><argument_list pos:start="77:20" pos:end="77:68">(<argument pos:start="77:21" pos:end="77:44"><expr pos:start="77:21" pos:end="77:44"><operator pos:start="77:21" pos:end="77:21">&amp;</operator><name pos:start="77:22" pos:end="77:34"><name pos:start="77:22" pos:end="77:22">s</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:31">streams</name><index pos:start="77:32" pos:end="77:34">[<expr pos:start="77:33" pos:end="77:33"><literal type="number" pos:start="77:33" pos:end="77:33">0</literal></expr>]</index></name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:44">metadata</name></expr></argument>, <argument pos:start="77:47" pos:end="77:54"><expr pos:start="77:47" pos:end="77:54"><name pos:start="77:47" pos:end="77:54">CUES_END</name></expr></argument>, <argument pos:start="77:57" pos:end="77:64"><expr pos:start="77:57" pos:end="77:64"><name pos:start="77:57" pos:end="77:64">cues_end</name></expr></argument>, <argument pos:start="77:67" pos:end="77:67"><expr pos:start="77:67" pos:end="77:67"><literal type="number" pos:start="77:67" pos:end="77:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="81:5" pos:end="81:70">// if the file has cues at the start, fix up the init range so tht</comment>

    <comment type="line" pos:start="83:5" pos:end="83:29">// it does not include it</comment>

    <if_stmt pos:start="85:5" pos:end="87:91"><if pos:start="85:5" pos:end="87:91">if <condition pos:start="85:8" pos:end="85:33">(<expr pos:start="85:9" pos:end="85:32"><name pos:start="85:9" pos:end="85:18">cues_start</name> <operator pos:start="85:20" pos:end="85:21">&lt;=</operator> <name pos:start="85:23" pos:end="85:32">init_range</name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:91"><block_content pos:start="87:9" pos:end="87:91">

        <expr_stmt pos:start="87:9" pos:end="87:91"><expr pos:start="87:9" pos:end="87:90"><call pos:start="87:9" pos:end="87:90"><name pos:start="87:9" pos:end="87:23">av_dict_set_int</name><argument_list pos:start="87:24" pos:end="87:90">(<argument pos:start="87:25" pos:end="87:48"><expr pos:start="87:25" pos:end="87:48"><operator pos:start="87:25" pos:end="87:25">&amp;</operator><name pos:start="87:26" pos:end="87:38"><name pos:start="87:26" pos:end="87:26">s</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:35">streams</name><index pos:start="87:36" pos:end="87:38">[<expr pos:start="87:37" pos:end="87:37"><literal type="number" pos:start="87:37" pos:end="87:37">0</literal></expr>]</index></name><operator pos:start="87:39" pos:end="87:40">-&gt;</operator><name pos:start="87:41" pos:end="87:48">metadata</name></expr></argument>, <argument pos:start="87:51" pos:end="87:70"><expr pos:start="87:51" pos:end="87:70"><name pos:start="87:51" pos:end="87:70">INITIALIZATION_RANGE</name></expr></argument>, <argument pos:start="87:73" pos:end="87:86"><expr pos:start="87:73" pos:end="87:86"><name pos:start="87:73" pos:end="87:82">cues_start</name> <operator pos:start="87:84" pos:end="87:84">-</operator> <literal type="number" pos:start="87:86" pos:end="87:86">1</literal></expr></argument>, <argument pos:start="87:89" pos:end="87:89"><expr pos:start="87:89" pos:end="87:89"><literal type="number" pos:start="87:89" pos:end="87:89">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="91:5" pos:end="91:16">// bandwidth</comment>

    <expr_stmt pos:start="93:5" pos:end="93:68"><expr pos:start="93:5" pos:end="93:67"><name pos:start="93:5" pos:end="93:13">bandwidth</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <call pos:start="93:17" pos:end="93:67"><name pos:start="93:17" pos:end="93:52">webm_dash_manifest_compute_bandwidth</name><argument_list pos:start="93:53" pos:end="93:67">(<argument pos:start="93:54" pos:end="93:54"><expr pos:start="93:54" pos:end="93:54"><name pos:start="93:54" pos:end="93:54">s</name></expr></argument>, <argument pos:start="93:57" pos:end="93:66"><expr pos:start="93:57" pos:end="93:66"><name pos:start="93:57" pos:end="93:66">cues_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="95:33"><if pos:start="95:5" pos:end="95:33">if <condition pos:start="95:8" pos:end="95:22">(<expr pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:17">bandwidth</name> <operator pos:start="95:19" pos:end="95:19">&lt;</operator> <literal type="number" pos:start="95:21" pos:end="95:21">0</literal></expr>)</condition><block type="pseudo" pos:start="95:24" pos:end="95:33"><block_content pos:start="95:24" pos:end="95:33"> <return pos:start="95:24" pos:end="95:33">return <expr pos:start="95:31" pos:end="95:32"><operator pos:start="95:31" pos:end="95:31">-</operator><literal type="number" pos:start="95:32" pos:end="95:32">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:71"><expr pos:start="97:5" pos:end="97:70"><call pos:start="97:5" pos:end="97:70"><name pos:start="97:5" pos:end="97:19">av_dict_set_int</name><argument_list pos:start="97:20" pos:end="97:70">(<argument pos:start="97:21" pos:end="97:44"><expr pos:start="97:21" pos:end="97:44"><operator pos:start="97:21" pos:end="97:21">&amp;</operator><name pos:start="97:22" pos:end="97:34"><name pos:start="97:22" pos:end="97:22">s</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:31">streams</name><index pos:start="97:32" pos:end="97:34">[<expr pos:start="97:33" pos:end="97:33"><literal type="number" pos:start="97:33" pos:end="97:33">0</literal></expr>]</index></name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:44">metadata</name></expr></argument>, <argument pos:start="97:47" pos:end="97:55"><expr pos:start="97:47" pos:end="97:55"><name pos:start="97:47" pos:end="97:55">BANDWIDTH</name></expr></argument>, <argument pos:start="97:58" pos:end="97:66"><expr pos:start="97:58" pos:end="97:66"><name pos:start="97:58" pos:end="97:66">bandwidth</name></expr></argument>, <argument pos:start="97:69" pos:end="97:69"><expr pos:start="97:69" pos:end="97:69"><literal type="number" pos:start="97:69" pos:end="97:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="101:5" pos:end="101:50">// check if all clusters start with key frames</comment>

    <expr_stmt pos:start="103:5" pos:end="103:105"><expr pos:start="103:5" pos:end="103:104"><call pos:start="103:5" pos:end="103:104"><name pos:start="103:5" pos:end="103:19">av_dict_set_int</name><argument_list pos:start="103:20" pos:end="103:104">(<argument pos:start="103:21" pos:end="103:44"><expr pos:start="103:21" pos:end="103:44"><operator pos:start="103:21" pos:end="103:21">&amp;</operator><name pos:start="103:22" pos:end="103:34"><name pos:start="103:22" pos:end="103:22">s</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:31">streams</name><index pos:start="103:32" pos:end="103:34">[<expr pos:start="103:33" pos:end="103:33"><literal type="number" pos:start="103:33" pos:end="103:33">0</literal></expr>]</index></name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:44">metadata</name></expr></argument>, <argument pos:start="103:47" pos:end="103:62"><expr pos:start="103:47" pos:end="103:62"><name pos:start="103:47" pos:end="103:62">CLUSTER_KEYFRAME</name></expr></argument>, <argument pos:start="103:65" pos:end="103:100"><expr pos:start="103:65" pos:end="103:100"><call pos:start="103:65" pos:end="103:100"><name pos:start="103:65" pos:end="103:97">webm_clusters_start_with_keyframe</name><argument_list pos:start="103:98" pos:end="103:100">(<argument pos:start="103:99" pos:end="103:99"><expr pos:start="103:99" pos:end="103:99"><name pos:start="103:99" pos:end="103:99">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="103:103" pos:end="103:103"><expr pos:start="103:103" pos:end="103:103"><literal type="number" pos:start="103:103" pos:end="103:103">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="107:5" pos:end="107:96">// store cue point timestamps as a comma separated list for checking subsegment alignment in</comment>

    <comment type="line" pos:start="109:5" pos:end="109:85">// the muxer. assumes that each timestamp cannot be more than 20 characters long.</comment>

    <expr_stmt pos:start="111:5" pos:end="111:78"><expr pos:start="111:5" pos:end="111:77"><name pos:start="111:5" pos:end="111:7">buf</name> <operator pos:start="111:9" pos:end="111:9">=</operator> <call pos:start="111:11" pos:end="111:77"><name pos:start="111:11" pos:end="111:25">av_malloc_array</name><argument_list pos:start="111:26" pos:end="111:77">(<argument pos:start="111:27" pos:end="111:57"><expr pos:start="111:27" pos:end="111:57"><name pos:start="111:27" pos:end="111:39"><name pos:start="111:27" pos:end="111:27">s</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:36">streams</name><index pos:start="111:37" pos:end="111:39">[<expr pos:start="111:38" pos:end="111:38"><literal type="number" pos:start="111:38" pos:end="111:38">0</literal></expr>]</index></name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:57">nb_index_entries</name></expr></argument>, <argument pos:start="111:60" pos:end="111:76"><expr pos:start="111:60" pos:end="111:76"><literal type="number" pos:start="111:60" pos:end="111:61">20</literal> <operator pos:start="111:63" pos:end="111:63">*</operator> <sizeof pos:start="111:65" pos:end="111:76">sizeof<argument_list pos:start="111:71" pos:end="111:76">(<argument pos:start="111:72" pos:end="111:75"><expr pos:start="111:72" pos:end="111:75"><name pos:start="111:72" pos:end="111:75">char</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="113:24"><if pos:start="113:5" pos:end="113:24">if <condition pos:start="113:8" pos:end="113:13">(<expr pos:start="113:9" pos:end="113:12"><operator pos:start="113:9" pos:end="113:9">!</operator><name pos:start="113:10" pos:end="113:12">buf</name></expr>)</condition><block type="pseudo" pos:start="113:15" pos:end="113:24"><block_content pos:start="113:15" pos:end="113:24"> <return pos:start="113:15" pos:end="113:24">return <expr pos:start="113:22" pos:end="113:23"><operator pos:start="113:22" pos:end="113:22">-</operator><literal type="number" pos:start="113:23" pos:end="113:23">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:20"><expr pos:start="115:5" pos:end="115:19"><call pos:start="115:5" pos:end="115:19"><name pos:start="115:5" pos:end="115:10">strcpy</name><argument_list pos:start="115:11" pos:end="115:19">(<argument pos:start="115:12" pos:end="115:14"><expr pos:start="115:12" pos:end="115:14"><name pos:start="115:12" pos:end="115:14">buf</name></expr></argument>, <argument pos:start="115:17" pos:end="115:18"><expr pos:start="115:17" pos:end="115:18"><literal type="string" pos:start="115:17" pos:end="115:18">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="117:5" pos:end="142:5">for <control pos:start="117:9" pos:end="117:57">(<init pos:start="117:10" pos:end="117:15"><expr pos:start="117:10" pos:end="117:14"><name pos:start="117:10" pos:end="117:10">i</name> <operator pos:start="117:12" pos:end="117:12">=</operator> <literal type="number" pos:start="117:14" pos:end="117:14">0</literal></expr>;</init> <condition pos:start="117:17" pos:end="117:52"><expr pos:start="117:17" pos:end="117:51"><name pos:start="117:17" pos:end="117:17">i</name> <operator pos:start="117:19" pos:end="117:19">&lt;</operator> <name pos:start="117:21" pos:end="117:33"><name pos:start="117:21" pos:end="117:21">s</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:30">streams</name><index pos:start="117:31" pos:end="117:33">[<expr pos:start="117:32" pos:end="117:32"><literal type="number" pos:start="117:32" pos:end="117:32">0</literal></expr>]</index></name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:51">nb_index_entries</name></expr>;</condition> <incr pos:start="117:54" pos:end="117:56"><expr pos:start="117:54" pos:end="117:56"><name pos:start="117:54" pos:end="117:54">i</name><operator pos:start="117:55" pos:end="117:56">++</operator></expr></incr>)</control> <block pos:start="117:59" pos:end="142:5">{<block_content pos:start="119:9" pos:end="140:9">

        <decl_stmt pos:start="119:9" pos:end="121:82"><decl pos:start="119:9" pos:end="121:81"><type pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">int</name></type> <name pos:start="119:13" pos:end="119:15">ret</name> <init pos:start="119:17" pos:end="121:81">= <expr pos:start="119:19" pos:end="121:81"><call pos:start="119:19" pos:end="121:81"><name pos:start="119:19" pos:end="119:26">snprintf</name><argument_list pos:start="119:27" pos:end="121:81">(<argument pos:start="119:28" pos:end="119:36"><expr pos:start="119:28" pos:end="119:36"><name pos:start="119:28" pos:end="119:30">buf</name> <operator pos:start="119:32" pos:end="119:32">+</operator> <name pos:start="119:34" pos:end="119:36">end</name></expr></argument>, <argument pos:start="119:39" pos:end="119:55"><expr pos:start="119:39" pos:end="119:55"><literal type="number" pos:start="119:39" pos:end="119:40">20</literal> <operator pos:start="119:42" pos:end="119:42">*</operator> <sizeof pos:start="119:44" pos:end="119:55">sizeof<argument_list pos:start="119:50" pos:end="119:55">(<argument pos:start="119:51" pos:end="119:54"><expr pos:start="119:51" pos:end="119:54"><name pos:start="119:51" pos:end="119:54">char</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="121:28" pos:end="121:37"><expr pos:start="121:28" pos:end="121:37"><literal type="string" pos:start="121:28" pos:end="121:30">"%"</literal> <name pos:start="121:32" pos:end="121:37">PRId64</name></expr></argument>, <argument pos:start="121:40" pos:end="121:80"><expr pos:start="121:40" pos:end="121:80"><name pos:start="121:40" pos:end="121:52"><name pos:start="121:40" pos:end="121:40">s</name><operator pos:start="121:41" pos:end="121:42">-&gt;</operator><name pos:start="121:43" pos:end="121:49">streams</name><index pos:start="121:50" pos:end="121:52">[<expr pos:start="121:51" pos:end="121:51"><literal type="number" pos:start="121:51" pos:end="121:51">0</literal></expr>]</index></name><operator pos:start="121:53" pos:end="121:54">-&gt;</operator><name pos:start="121:55" pos:end="121:70"><name pos:start="121:55" pos:end="121:67">index_entries</name><index pos:start="121:68" pos:end="121:70">[<expr pos:start="121:69" pos:end="121:69"><name pos:start="121:69" pos:end="121:69">i</name></expr>]</index></name><operator pos:start="121:71" pos:end="121:71">.</operator><name pos:start="121:72" pos:end="121:80">timestamp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="123:9" pos:end="130:9"><if pos:start="123:9" pos:end="130:9">if <condition pos:start="123:12" pos:end="123:81">(<expr pos:start="123:13" pos:end="123:80"><name pos:start="123:13" pos:end="123:15">ret</name> <operator pos:start="123:17" pos:end="123:18">&lt;=</operator> <literal type="number" pos:start="123:20" pos:end="123:20">0</literal> <operator pos:start="123:22" pos:end="123:23">||</operator> <operator pos:start="123:25" pos:end="123:25">(</operator><name pos:start="123:26" pos:end="123:28">ret</name> <operator pos:start="123:30" pos:end="123:31">==</operator> <literal type="number" pos:start="123:33" pos:end="123:34">20</literal> <operator pos:start="123:36" pos:end="123:37">&amp;&amp;</operator> <name pos:start="123:39" pos:end="123:39">i</name> <operator pos:start="123:41" pos:end="123:42">==</operator>  <name pos:start="123:45" pos:end="123:57"><name pos:start="123:45" pos:end="123:45">s</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:54">streams</name><index pos:start="123:55" pos:end="123:57">[<expr pos:start="123:56" pos:end="123:56"><literal type="number" pos:start="123:56" pos:end="123:56">0</literal></expr>]</index></name><operator pos:start="123:58" pos:end="123:59">-&gt;</operator><name pos:start="123:60" pos:end="123:75">nb_index_entries</name> <operator pos:start="123:77" pos:end="123:77">-</operator> <literal type="number" pos:start="123:79" pos:end="123:79">1</literal><operator pos:start="123:80" pos:end="123:80">)</operator></expr>)</condition> <block pos:start="123:83" pos:end="130:9">{<block_content pos:start="125:13" pos:end="128:39">

            <expr_stmt pos:start="125:13" pos:end="125:61"><expr pos:start="125:13" pos:end="125:60"><call pos:start="125:13" pos:end="125:60"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:60">(<argument pos:start="125:20" pos:end="125:20"><expr pos:start="125:20" pos:end="125:20"><name pos:start="125:20" pos:end="125:20">s</name></expr></argument>, <argument pos:start="125:23" pos:end="125:34"><expr pos:start="125:23" pos:end="125:34"><name pos:start="125:23" pos:end="125:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:37" pos:end="125:59"><expr pos:start="125:37" pos:end="125:59"><literal type="string" pos:start="125:37" pos:end="125:59">"timestamp too long.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <return pos:start="128:13" pos:end="128:39">return <expr pos:start="128:20" pos:end="128:38"><name pos:start="128:20" pos:end="128:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="132:9" pos:end="132:19"><expr pos:start="132:9" pos:end="132:18"><name pos:start="132:9" pos:end="132:11">end</name> <operator pos:start="132:13" pos:end="132:14">+=</operator> <name pos:start="132:16" pos:end="132:18">ret</name></expr>;</expr_stmt>

        <if_stmt pos:start="134:9" pos:end="140:9"><if pos:start="134:9" pos:end="140:9">if <condition pos:start="134:12" pos:end="134:53">(<expr pos:start="134:13" pos:end="134:52"><name pos:start="134:13" pos:end="134:13">i</name> <operator pos:start="134:15" pos:end="134:16">!=</operator> <name pos:start="134:18" pos:end="134:30"><name pos:start="134:18" pos:end="134:18">s</name><operator pos:start="134:19" pos:end="134:20">-&gt;</operator><name pos:start="134:21" pos:end="134:27">streams</name><index pos:start="134:28" pos:end="134:30">[<expr pos:start="134:29" pos:end="134:29"><literal type="number" pos:start="134:29" pos:end="134:29">0</literal></expr>]</index></name><operator pos:start="134:31" pos:end="134:32">-&gt;</operator><name pos:start="134:33" pos:end="134:48">nb_index_entries</name> <operator pos:start="134:50" pos:end="134:50">-</operator> <literal type="number" pos:start="134:52" pos:end="134:52">1</literal></expr>)</condition> <block pos:start="134:55" pos:end="140:9">{<block_content pos:start="136:13" pos:end="138:18">

            <expr_stmt pos:start="136:13" pos:end="136:44"><expr pos:start="136:13" pos:end="136:43"><call pos:start="136:13" pos:end="136:43"><name pos:start="136:13" pos:end="136:19">strncat</name><argument_list pos:start="136:20" pos:end="136:43">(<argument pos:start="136:21" pos:end="136:23"><expr pos:start="136:21" pos:end="136:23"><name pos:start="136:21" pos:end="136:23">buf</name></expr></argument>, <argument pos:start="136:26" pos:end="136:28"><expr pos:start="136:26" pos:end="136:28"><literal type="string" pos:start="136:26" pos:end="136:28">","</literal></expr></argument>, <argument pos:start="136:31" pos:end="136:42"><expr pos:start="136:31" pos:end="136:42"><sizeof pos:start="136:31" pos:end="136:42">sizeof<argument_list pos:start="136:37" pos:end="136:42">(<argument pos:start="136:38" pos:end="136:41"><expr pos:start="136:38" pos:end="136:41"><name pos:start="136:38" pos:end="136:41">char</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="138:13" pos:end="138:18"><expr pos:start="138:13" pos:end="138:17"><name pos:start="138:13" pos:end="138:15">end</name><operator pos:start="138:16" pos:end="138:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="144:5" pos:end="144:66"><expr pos:start="144:5" pos:end="144:65"><call pos:start="144:5" pos:end="144:65"><name pos:start="144:5" pos:end="144:15">av_dict_set</name><argument_list pos:start="144:16" pos:end="144:65">(<argument pos:start="144:17" pos:end="144:40"><expr pos:start="144:17" pos:end="144:40"><operator pos:start="144:17" pos:end="144:17">&amp;</operator><name pos:start="144:18" pos:end="144:30"><name pos:start="144:18" pos:end="144:18">s</name><operator pos:start="144:19" pos:end="144:20">-&gt;</operator><name pos:start="144:21" pos:end="144:27">streams</name><index pos:start="144:28" pos:end="144:30">[<expr pos:start="144:29" pos:end="144:29"><literal type="number" pos:start="144:29" pos:end="144:29">0</literal></expr>]</index></name><operator pos:start="144:31" pos:end="144:32">-&gt;</operator><name pos:start="144:33" pos:end="144:40">metadata</name></expr></argument>, <argument pos:start="144:43" pos:end="144:56"><expr pos:start="144:43" pos:end="144:56"><name pos:start="144:43" pos:end="144:56">CUE_TIMESTAMPS</name></expr></argument>, <argument pos:start="144:59" pos:end="144:61"><expr pos:start="144:59" pos:end="144:61"><name pos:start="144:59" pos:end="144:61">buf</name></expr></argument>, <argument pos:start="144:64" pos:end="144:64"><expr pos:start="144:64" pos:end="144:64"><literal type="number" pos:start="144:64" pos:end="144:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <return pos:start="149:5" pos:end="149:13">return <expr pos:start="149:12" pos:end="149:12"><literal type="number" pos:start="149:12" pos:end="149:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
