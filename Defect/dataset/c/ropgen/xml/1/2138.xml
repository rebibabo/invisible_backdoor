<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2138.c" pos:tabs="8"><function pos:start="1:1" pos:end="445:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">net_slirp_init</name><parameter_list pos:start="1:26" pos:end="19:49">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:40">NetClientState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">peer</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:65"><decl pos:start="1:49" pos:end="1:65"><type pos:start="1:49" pos:end="1:65"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:65">model</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:42"><decl pos:start="3:27" pos:end="3:42"><type pos:start="3:27" pos:end="3:42"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:36">char</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:42">name</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:58"><decl pos:start="3:45" pos:end="3:58"><type pos:start="3:45" pos:end="3:58"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:58">restricted</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:35"><decl pos:start="5:27" pos:end="5:35"><type pos:start="5:27" pos:end="5:35"><name pos:start="5:27" pos:end="5:30">bool</name></type> <name pos:start="5:32" pos:end="5:35">ipv4</name></decl></parameter>, <parameter pos:start="5:38" pos:end="5:57"><decl pos:start="5:38" pos:end="5:57"><type pos:start="5:38" pos:end="5:57"><specifier pos:start="5:38" pos:end="5:42">const</specifier> <name pos:start="5:44" pos:end="5:47">char</name> <modifier pos:start="5:49" pos:end="5:49">*</modifier></type><name pos:start="5:50" pos:end="5:57">vnetwork</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:76"><decl pos:start="5:60" pos:end="5:76"><type pos:start="5:60" pos:end="5:76"><specifier pos:start="5:60" pos:end="5:64">const</specifier> <name pos:start="5:66" pos:end="5:69">char</name> <modifier pos:start="5:71" pos:end="5:71">*</modifier></type><name pos:start="5:72" pos:end="5:76">vhost</name></decl></parameter>,

                          <parameter pos:start="7:27" pos:end="7:35"><decl pos:start="7:27" pos:end="7:35"><type pos:start="7:27" pos:end="7:35"><name pos:start="7:27" pos:end="7:30">bool</name></type> <name pos:start="7:32" pos:end="7:35">ipv6</name></decl></parameter>, <parameter pos:start="7:38" pos:end="7:57"><decl pos:start="7:38" pos:end="7:57"><type pos:start="7:38" pos:end="7:57"><specifier pos:start="7:38" pos:end="7:42">const</specifier> <name pos:start="7:44" pos:end="7:47">char</name> <modifier pos:start="7:49" pos:end="7:49">*</modifier></type><name pos:start="7:50" pos:end="7:57">vprefix6</name></decl></parameter>, <parameter pos:start="7:60" pos:end="7:75"><decl pos:start="7:60" pos:end="7:75"><type pos:start="7:60" pos:end="7:75"><name pos:start="7:60" pos:end="7:62">int</name></type> <name pos:start="7:64" pos:end="7:75">vprefix6_len</name></decl></parameter>,

                          <parameter pos:start="9:27" pos:end="9:44"><decl pos:start="9:27" pos:end="9:44"><type pos:start="9:27" pos:end="9:44"><specifier pos:start="9:27" pos:end="9:31">const</specifier> <name pos:start="9:33" pos:end="9:36">char</name> <modifier pos:start="9:38" pos:end="9:38">*</modifier></type><name pos:start="9:39" pos:end="9:44">vhost6</name></decl></parameter>,

                          <parameter pos:start="11:27" pos:end="11:47"><decl pos:start="11:27" pos:end="11:47"><type pos:start="11:27" pos:end="11:47"><specifier pos:start="11:27" pos:end="11:31">const</specifier> <name pos:start="11:33" pos:end="11:36">char</name> <modifier pos:start="11:38" pos:end="11:38">*</modifier></type><name pos:start="11:39" pos:end="11:47">vhostname</name></decl></parameter>, <parameter pos:start="11:50" pos:end="11:72"><decl pos:start="11:50" pos:end="11:72"><type pos:start="11:50" pos:end="11:72"><specifier pos:start="11:50" pos:end="11:54">const</specifier> <name pos:start="11:56" pos:end="11:59">char</name> <modifier pos:start="11:61" pos:end="11:61">*</modifier></type><name pos:start="11:62" pos:end="11:72">tftp_export</name></decl></parameter>,

                          <parameter pos:start="13:27" pos:end="13:46"><decl pos:start="13:27" pos:end="13:46"><type pos:start="13:27" pos:end="13:46"><specifier pos:start="13:27" pos:end="13:31">const</specifier> <name pos:start="13:33" pos:end="13:36">char</name> <modifier pos:start="13:38" pos:end="13:38">*</modifier></type><name pos:start="13:39" pos:end="13:46">bootfile</name></decl></parameter>, <parameter pos:start="13:49" pos:end="13:71"><decl pos:start="13:49" pos:end="13:71"><type pos:start="13:49" pos:end="13:71"><specifier pos:start="13:49" pos:end="13:53">const</specifier> <name pos:start="13:55" pos:end="13:58">char</name> <modifier pos:start="13:60" pos:end="13:60">*</modifier></type><name pos:start="13:61" pos:end="13:71">vdhcp_start</name></decl></parameter>,

                          <parameter pos:start="15:27" pos:end="15:49"><decl pos:start="15:27" pos:end="15:49"><type pos:start="15:27" pos:end="15:49"><specifier pos:start="15:27" pos:end="15:31">const</specifier> <name pos:start="15:33" pos:end="15:36">char</name> <modifier pos:start="15:38" pos:end="15:38">*</modifier></type><name pos:start="15:39" pos:end="15:49">vnameserver</name></decl></parameter>, <parameter pos:start="15:52" pos:end="15:75"><decl pos:start="15:52" pos:end="15:75"><type pos:start="15:52" pos:end="15:75"><specifier pos:start="15:52" pos:end="15:56">const</specifier> <name pos:start="15:58" pos:end="15:61">char</name> <modifier pos:start="15:63" pos:end="15:63">*</modifier></type><name pos:start="15:64" pos:end="15:75">vnameserver6</name></decl></parameter>,

                          <parameter pos:start="17:27" pos:end="17:48"><decl pos:start="17:27" pos:end="17:48"><type pos:start="17:27" pos:end="17:48"><specifier pos:start="17:27" pos:end="17:31">const</specifier> <name pos:start="17:33" pos:end="17:36">char</name> <modifier pos:start="17:38" pos:end="17:38">*</modifier></type><name pos:start="17:39" pos:end="17:48">smb_export</name></decl></parameter>, <parameter pos:start="17:51" pos:end="17:72"><decl pos:start="17:51" pos:end="17:72"><type pos:start="17:51" pos:end="17:72"><specifier pos:start="17:51" pos:end="17:55">const</specifier> <name pos:start="17:57" pos:end="17:60">char</name> <modifier pos:start="17:62" pos:end="17:62">*</modifier></type><name pos:start="17:63" pos:end="17:72">vsmbserver</name></decl></parameter>,

                          <parameter pos:start="19:27" pos:end="19:48"><decl pos:start="19:27" pos:end="19:48"><type pos:start="19:27" pos:end="19:48"><specifier pos:start="19:27" pos:end="19:31">const</specifier> <name pos:start="19:33" pos:end="19:36">char</name> <modifier pos:start="19:38" pos:end="19:38">*</modifier><modifier pos:start="19:39" pos:end="19:39">*</modifier></type><name pos:start="19:40" pos:end="19:48">dnssearch</name></decl></parameter>)</parameter_list>

<block pos:start="21:1" pos:end="445:1">{<block_content pos:start="25:5" pos:end="443:14">

    <comment type="block" pos:start="23:5" pos:end="23:54">/* default settings according to historic slirp */</comment>

    <decl_stmt pos:start="25:5" pos:end="25:58"><decl pos:start="25:5" pos:end="25:57"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:10">struct</name> <name pos:start="25:12" pos:end="25:18">in_addr</name></name></type> <name pos:start="25:20" pos:end="25:22">net</name>  <init pos:start="25:25" pos:end="25:57">= <expr pos:start="25:27" pos:end="25:57"><block pos:start="25:27" pos:end="25:57">{ <expr pos:start="25:29" pos:end="25:55"><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:35">s_addr</name> <operator pos:start="25:37" pos:end="25:37">=</operator> <macro pos:start="25:39" pos:end="25:55"><name pos:start="25:39" pos:end="25:43">htonl</name><argument_list pos:start="25:44" pos:end="25:55">(<argument pos:start="25:45" pos:end="25:54"><literal type="number" pos:start="25:45" pos:end="25:54">0x0a000200</literal></argument>)</argument_list></macro></expr> }</block></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="25:60" pos:end="25:73">/* 10.0.2.0 */</comment>

    <decl_stmt pos:start="27:5" pos:end="27:58"><decl pos:start="27:5" pos:end="27:57"><type pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:10">struct</name> <name pos:start="27:12" pos:end="27:18">in_addr</name></name></type> <name pos:start="27:20" pos:end="27:23">mask</name> <init pos:start="27:25" pos:end="27:57">= <expr pos:start="27:27" pos:end="27:57"><block pos:start="27:27" pos:end="27:57">{ <expr pos:start="27:29" pos:end="27:55"><operator pos:start="27:29" pos:end="27:29">.</operator><name pos:start="27:30" pos:end="27:35">s_addr</name> <operator pos:start="27:37" pos:end="27:37">=</operator> <macro pos:start="27:39" pos:end="27:55"><name pos:start="27:39" pos:end="27:43">htonl</name><argument_list pos:start="27:44" pos:end="27:55">(<argument pos:start="27:45" pos:end="27:54"><literal type="number" pos:start="27:45" pos:end="27:54">0xffffff00</literal></argument>)</argument_list></macro></expr> }</block></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="27:60" pos:end="27:78">/* 255.255.255.0 */</comment>

    <decl_stmt pos:start="29:5" pos:end="29:58"><decl pos:start="29:5" pos:end="29:57"><type pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:10">struct</name> <name pos:start="29:12" pos:end="29:18">in_addr</name></name></type> <name pos:start="29:20" pos:end="29:23">host</name> <init pos:start="29:25" pos:end="29:57">= <expr pos:start="29:27" pos:end="29:57"><block pos:start="29:27" pos:end="29:57">{ <expr pos:start="29:29" pos:end="29:55"><operator pos:start="29:29" pos:end="29:29">.</operator><name pos:start="29:30" pos:end="29:35">s_addr</name> <operator pos:start="29:37" pos:end="29:37">=</operator> <macro pos:start="29:39" pos:end="29:55"><name pos:start="29:39" pos:end="29:43">htonl</name><argument_list pos:start="29:44" pos:end="29:55">(<argument pos:start="29:45" pos:end="29:54"><literal type="number" pos:start="29:45" pos:end="29:54">0x0a000202</literal></argument>)</argument_list></macro></expr> }</block></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="29:60" pos:end="29:73">/* 10.0.2.2 */</comment>

    <decl_stmt pos:start="31:5" pos:end="31:58"><decl pos:start="31:5" pos:end="31:57"><type pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:10">struct</name> <name pos:start="31:12" pos:end="31:18">in_addr</name></name></type> <name pos:start="31:20" pos:end="31:23">dhcp</name> <init pos:start="31:25" pos:end="31:57">= <expr pos:start="31:27" pos:end="31:57"><block pos:start="31:27" pos:end="31:57">{ <expr pos:start="31:29" pos:end="31:55"><operator pos:start="31:29" pos:end="31:29">.</operator><name pos:start="31:30" pos:end="31:35">s_addr</name> <operator pos:start="31:37" pos:end="31:37">=</operator> <macro pos:start="31:39" pos:end="31:55"><name pos:start="31:39" pos:end="31:43">htonl</name><argument_list pos:start="31:44" pos:end="31:55">(<argument pos:start="31:45" pos:end="31:54"><literal type="number" pos:start="31:45" pos:end="31:54">0x0a00020f</literal></argument>)</argument_list></macro></expr> }</block></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="31:60" pos:end="31:74">/* 10.0.2.15 */</comment>

    <decl_stmt pos:start="33:5" pos:end="33:58"><decl pos:start="33:5" pos:end="33:57"><type pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:10">struct</name> <name pos:start="33:12" pos:end="33:18">in_addr</name></name></type> <name pos:start="33:20" pos:end="33:22">dns</name>  <init pos:start="33:25" pos:end="33:57">= <expr pos:start="33:27" pos:end="33:57"><block pos:start="33:27" pos:end="33:57">{ <expr pos:start="33:29" pos:end="33:55"><operator pos:start="33:29" pos:end="33:29">.</operator><name pos:start="33:30" pos:end="33:35">s_addr</name> <operator pos:start="33:37" pos:end="33:37">=</operator> <macro pos:start="33:39" pos:end="33:55"><name pos:start="33:39" pos:end="33:43">htonl</name><argument_list pos:start="33:44" pos:end="33:55">(<argument pos:start="33:45" pos:end="33:54"><literal type="number" pos:start="33:45" pos:end="33:54">0x0a000203</literal></argument>)</argument_list></macro></expr> }</block></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="33:60" pos:end="33:73">/* 10.0.2.3 */</comment>

    <decl_stmt pos:start="35:5" pos:end="35:31"><decl pos:start="35:5" pos:end="35:30"><type pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:10">struct</name> <name pos:start="35:12" pos:end="35:19">in6_addr</name></name></type> <name pos:start="35:21" pos:end="35:30">ip6_prefix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:29"><decl pos:start="37:5" pos:end="37:28"><type pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:10">struct</name> <name pos:start="37:12" pos:end="37:19">in6_addr</name></name></type> <name pos:start="37:21" pos:end="37:28">ip6_host</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="42:0"><decl pos:start="39:5" pos:end="39:27"><type pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:10">struct</name> <name pos:start="39:12" pos:end="39:19">in6_addr</name></name></type> <name pos:start="39:21" pos:end="39:27">ip6_dns</name></decl>;</decl_stmt>

<cpp:ifndef pos:start="41:1" pos:end="41:14">#<cpp:directive pos:start="41:2" pos:end="41:7">ifndef</cpp:directive> <name pos:start="41:9" pos:end="41:14">_WIN32</name></cpp:ifndef>

    <decl_stmt pos:start="43:5" pos:end="46:0"><decl pos:start="43:5" pos:end="43:43"><type pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:10">struct</name> <name pos:start="43:12" pos:end="43:18">in_addr</name></name></type> <name pos:start="43:20" pos:end="43:25">smbsrv</name> <init pos:start="43:27" pos:end="43:43">= <expr pos:start="43:29" pos:end="43:43"><block pos:start="43:29" pos:end="43:43">{ <expr pos:start="43:31" pos:end="43:41"><operator pos:start="43:31" pos:end="43:31">.</operator><name pos:start="43:32" pos:end="43:37">s_addr</name> <operator pos:start="43:39" pos:end="43:39">=</operator> <literal type="number" pos:start="43:41" pos:end="43:41">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="47:5" pos:end="47:23"><decl pos:start="47:5" pos:end="47:22"><type pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:18">NetClientState</name> <modifier pos:start="47:20" pos:end="47:20">*</modifier></type><name pos:start="47:21" pos:end="47:22">nc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:18"><decl pos:start="49:5" pos:end="49:17"><type pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:14">SlirpState</name> <modifier pos:start="49:16" pos:end="49:16">*</modifier></type><name pos:start="49:17" pos:end="49:17">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:17"><decl pos:start="51:5" pos:end="51:16"><type pos:start="51:5" pos:end="51:8"><name pos:start="51:5" pos:end="51:8">char</name></type> <name pos:start="51:10" pos:end="51:16"><name pos:start="51:10" pos:end="51:12">buf</name><index pos:start="51:13" pos:end="51:16">[<expr pos:start="51:14" pos:end="51:15"><literal type="number" pos:start="51:14" pos:end="51:15">20</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="53:18"><decl pos:start="53:5" pos:end="53:17"><type pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:12">uint32_t</name></type> <name pos:start="53:14" pos:end="53:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="55:5" pos:end="55:14"><decl pos:start="55:5" pos:end="55:13"><type pos:start="55:5" pos:end="55:7"><name pos:start="55:5" pos:end="55:7">int</name></type> <name pos:start="55:9" pos:end="55:13">shift</name></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="57:14"><decl pos:start="57:5" pos:end="57:13"><type pos:start="57:5" pos:end="57:10"><name pos:start="57:5" pos:end="57:8">char</name> <modifier pos:start="57:10" pos:end="57:10">*</modifier></type><name pos:start="57:11" pos:end="57:13">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="59:5" pos:end="59:36"><decl pos:start="59:5" pos:end="59:35"><type pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:10">struct</name> <name pos:start="59:12" pos:end="59:27">slirp_config_str</name></name> <modifier pos:start="59:29" pos:end="59:29">*</modifier></type><name pos:start="59:30" pos:end="59:35">config</name></decl>;</decl_stmt>



    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:52">(<expr pos:start="63:9" pos:end="63:51"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:13">ipv4</name> <operator pos:start="63:15" pos:end="63:16">&amp;&amp;</operator> <operator pos:start="63:18" pos:end="63:18">(</operator><name pos:start="63:19" pos:end="63:26">vnetwork</name> <operator pos:start="63:28" pos:end="63:29">||</operator> <name pos:start="63:31" pos:end="63:35">vhost</name> <operator pos:start="63:37" pos:end="63:38">||</operator> <name pos:start="63:40" pos:end="63:50">vnameserver</name><operator pos:start="63:51" pos:end="63:51">)</operator></expr>)</condition> <block pos:start="63:54" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:18">

        <return pos:start="65:9" pos:end="65:18">return <expr pos:start="65:16" pos:end="65:17"><operator pos:start="65:16" pos:end="65:16">-</operator><literal type="number" pos:start="65:17" pos:end="65:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="75:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:54">(<expr pos:start="71:9" pos:end="71:53"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:13">ipv6</name> <operator pos:start="71:15" pos:end="71:16">&amp;&amp;</operator> <operator pos:start="71:18" pos:end="71:18">(</operator><name pos:start="71:19" pos:end="71:26">vprefix6</name> <operator pos:start="71:28" pos:end="71:29">||</operator> <name pos:start="71:31" pos:end="71:36">vhost6</name> <operator pos:start="71:38" pos:end="71:39">||</operator> <name pos:start="71:41" pos:end="71:52">vnameserver6</name><operator pos:start="71:53" pos:end="71:53">)</operator></expr>)</condition> <block pos:start="71:56" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:18">

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:23">(<expr pos:start="79:9" pos:end="79:22"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:13">ipv4</name> <operator pos:start="79:15" pos:end="79:16">&amp;&amp;</operator> <operator pos:start="79:18" pos:end="79:18">!</operator><name pos:start="79:19" pos:end="79:22">ipv6</name></expr>)</condition> <block pos:start="79:25" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:18">

        <comment type="block" pos:start="81:9" pos:end="81:51">/* It doesn't make sense to disable both */</comment>

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:21">(<expr pos:start="89:9" pos:end="89:20"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:20">tftp_export</name></expr>)</condition> <block pos:start="89:23" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:41">

        <expr_stmt pos:start="91:9" pos:end="91:41"><expr pos:start="91:9" pos:end="91:40"><name pos:start="91:9" pos:end="91:19">tftp_export</name> <operator pos:start="91:21" pos:end="91:21">=</operator> <name pos:start="91:23" pos:end="91:40">legacy_tftp_prefix</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="95:5" pos:end="99:5"><if pos:start="95:5" pos:end="99:5">if <condition pos:start="95:8" pos:end="95:18">(<expr pos:start="95:9" pos:end="95:17"><operator pos:start="95:9" pos:end="95:9">!</operator><name pos:start="95:10" pos:end="95:17">bootfile</name></expr>)</condition> <block pos:start="95:20" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:41">

        <expr_stmt pos:start="97:9" pos:end="97:41"><expr pos:start="97:9" pos:end="97:40"><name pos:start="97:9" pos:end="97:16">bootfile</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <name pos:start="97:20" pos:end="97:40">legacy_bootp_filename</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="183:5"><if pos:start="103:5" pos:end="183:5">if <condition pos:start="103:8" pos:end="103:17">(<expr pos:start="103:9" pos:end="103:16"><name pos:start="103:9" pos:end="103:16">vnetwork</name></expr>)</condition> <block pos:start="103:19" pos:end="183:5">{<block_content pos:start="105:9" pos:end="181:66">

        <if_stmt pos:start="105:9" pos:end="173:9"><if pos:start="105:9" pos:end="145:9">if <condition pos:start="105:12" pos:end="105:62">(<expr pos:start="105:13" pos:end="105:61"><call pos:start="105:13" pos:end="105:57"><name pos:start="105:13" pos:end="105:23">get_str_sep</name><argument_list pos:start="105:24" pos:end="105:57">(<argument pos:start="105:25" pos:end="105:27"><expr pos:start="105:25" pos:end="105:27"><name pos:start="105:25" pos:end="105:27">buf</name></expr></argument>, <argument pos:start="105:30" pos:end="105:40"><expr pos:start="105:30" pos:end="105:40"><sizeof pos:start="105:30" pos:end="105:40">sizeof<argument_list pos:start="105:36" pos:end="105:40">(<argument pos:start="105:37" pos:end="105:39"><expr pos:start="105:37" pos:end="105:39"><name pos:start="105:37" pos:end="105:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="105:43" pos:end="105:51"><expr pos:start="105:43" pos:end="105:51"><operator pos:start="105:43" pos:end="105:43">&amp;</operator><name pos:start="105:44" pos:end="105:51">vnetwork</name></expr></argument>, <argument pos:start="105:54" pos:end="105:56"><expr pos:start="105:54" pos:end="105:56"><literal type="char" pos:start="105:54" pos:end="105:56">'/'</literal></expr></argument>)</argument_list></call> <operator pos:start="105:59" pos:end="105:59">&lt;</operator> <literal type="number" pos:start="105:61" pos:end="105:61">0</literal></expr>)</condition> <block pos:start="105:64" pos:end="145:9">{<block_content pos:start="107:13" pos:end="143:13">

            <if_stmt pos:start="107:13" pos:end="111:13"><if pos:start="107:13" pos:end="111:13">if <condition pos:start="107:16" pos:end="107:43">(<expr pos:start="107:17" pos:end="107:42"><operator pos:start="107:17" pos:end="107:17">!</operator><call pos:start="107:18" pos:end="107:42"><name pos:start="107:18" pos:end="107:26">inet_aton</name><argument_list pos:start="107:27" pos:end="107:42">(<argument pos:start="107:28" pos:end="107:35"><expr pos:start="107:28" pos:end="107:35"><name pos:start="107:28" pos:end="107:35">vnetwork</name></expr></argument>, <argument pos:start="107:38" pos:end="107:41"><expr pos:start="107:38" pos:end="107:41"><operator pos:start="107:38" pos:end="107:38">&amp;</operator><name pos:start="107:39" pos:end="107:41">net</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:45" pos:end="111:13">{<block_content pos:start="109:17" pos:end="109:26">

                <return pos:start="109:17" pos:end="109:26">return <expr pos:start="109:24" pos:end="109:25"><operator pos:start="109:24" pos:end="109:24">-</operator><literal type="number" pos:start="109:25" pos:end="109:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:37"><expr pos:start="113:13" pos:end="113:36"><name pos:start="113:13" pos:end="113:16">addr</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <call pos:start="113:20" pos:end="113:36"><name pos:start="113:20" pos:end="113:24">ntohl</name><argument_list pos:start="113:25" pos:end="113:36">(<argument pos:start="113:26" pos:end="113:35"><expr pos:start="113:26" pos:end="113:35"><name pos:start="113:26" pos:end="113:35"><name pos:start="113:26" pos:end="113:28">net</name><operator pos:start="113:29" pos:end="113:29">.</operator><name pos:start="113:30" pos:end="113:35">s_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="143:13"><if pos:start="115:13" pos:end="119:13">if <condition pos:start="115:16" pos:end="115:37">(<expr pos:start="115:17" pos:end="115:36"><operator pos:start="115:17" pos:end="115:17">!</operator><operator pos:start="115:18" pos:end="115:18">(</operator><name pos:start="115:19" pos:end="115:22">addr</name> <operator pos:start="115:24" pos:end="115:24">&amp;</operator> <literal type="number" pos:start="115:26" pos:end="115:35">0x80000000</literal><operator pos:start="115:36" pos:end="115:36">)</operator></expr>)</condition> <block pos:start="115:39" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:48">

                <expr_stmt pos:start="117:17" pos:end="117:48"><expr pos:start="117:17" pos:end="117:47"><name pos:start="117:17" pos:end="117:27"><name pos:start="117:17" pos:end="117:20">mask</name><operator pos:start="117:21" pos:end="117:21">.</operator><name pos:start="117:22" pos:end="117:27">s_addr</name></name> <operator pos:start="117:29" pos:end="117:29">=</operator> <call pos:start="117:31" pos:end="117:47"><name pos:start="117:31" pos:end="117:35">htonl</name><argument_list pos:start="117:36" pos:end="117:47">(<argument pos:start="117:37" pos:end="117:46"><expr pos:start="117:37" pos:end="117:46"><literal type="number" pos:start="117:37" pos:end="117:46">0xff000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="117:50" pos:end="117:62">/* class A */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="119:15" pos:end="123:13">else if <condition pos:start="119:23" pos:end="119:57">(<expr pos:start="119:24" pos:end="119:56"><operator pos:start="119:24" pos:end="119:24">(</operator><name pos:start="119:25" pos:end="119:28">addr</name> <operator pos:start="119:30" pos:end="119:30">&amp;</operator> <literal type="number" pos:start="119:32" pos:end="119:41">0xfff00000</literal><operator pos:start="119:42" pos:end="119:42">)</operator> <operator pos:start="119:44" pos:end="119:45">==</operator> <literal type="number" pos:start="119:47" pos:end="119:56">0xac100000</literal></expr>)</condition> <block pos:start="119:59" pos:end="123:13">{<block_content pos:start="121:17" pos:end="121:48">

                <expr_stmt pos:start="121:17" pos:end="121:48"><expr pos:start="121:17" pos:end="121:47"><name pos:start="121:17" pos:end="121:27"><name pos:start="121:17" pos:end="121:20">mask</name><operator pos:start="121:21" pos:end="121:21">.</operator><name pos:start="121:22" pos:end="121:27">s_addr</name></name> <operator pos:start="121:29" pos:end="121:29">=</operator> <call pos:start="121:31" pos:end="121:47"><name pos:start="121:31" pos:end="121:35">htonl</name><argument_list pos:start="121:36" pos:end="121:47">(<argument pos:start="121:37" pos:end="121:46"><expr pos:start="121:37" pos:end="121:46"><literal type="number" pos:start="121:37" pos:end="121:46">0xfff00000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="121:50" pos:end="121:74">/* priv. 172.16.0.0/12 */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="123:15" pos:end="127:13">else if <condition pos:start="123:23" pos:end="123:57">(<expr pos:start="123:24" pos:end="123:56"><operator pos:start="123:24" pos:end="123:24">(</operator><name pos:start="123:25" pos:end="123:28">addr</name> <operator pos:start="123:30" pos:end="123:30">&amp;</operator> <literal type="number" pos:start="123:32" pos:end="123:41">0xc0000000</literal><operator pos:start="123:42" pos:end="123:42">)</operator> <operator pos:start="123:44" pos:end="123:45">==</operator> <literal type="number" pos:start="123:47" pos:end="123:56">0x80000000</literal></expr>)</condition> <block pos:start="123:59" pos:end="127:13">{<block_content pos:start="125:17" pos:end="125:48">

                <expr_stmt pos:start="125:17" pos:end="125:48"><expr pos:start="125:17" pos:end="125:47"><name pos:start="125:17" pos:end="125:27"><name pos:start="125:17" pos:end="125:20">mask</name><operator pos:start="125:21" pos:end="125:21">.</operator><name pos:start="125:22" pos:end="125:27">s_addr</name></name> <operator pos:start="125:29" pos:end="125:29">=</operator> <call pos:start="125:31" pos:end="125:47"><name pos:start="125:31" pos:end="125:35">htonl</name><argument_list pos:start="125:36" pos:end="125:47">(<argument pos:start="125:37" pos:end="125:46"><expr pos:start="125:37" pos:end="125:46"><literal type="number" pos:start="125:37" pos:end="125:46">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="125:50" pos:end="125:62">/* class B */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="127:15" pos:end="131:13">else if <condition pos:start="127:23" pos:end="127:57">(<expr pos:start="127:24" pos:end="127:56"><operator pos:start="127:24" pos:end="127:24">(</operator><name pos:start="127:25" pos:end="127:28">addr</name> <operator pos:start="127:30" pos:end="127:30">&amp;</operator> <literal type="number" pos:start="127:32" pos:end="127:41">0xffff0000</literal><operator pos:start="127:42" pos:end="127:42">)</operator> <operator pos:start="127:44" pos:end="127:45">==</operator> <literal type="number" pos:start="127:47" pos:end="127:56">0xc0a80000</literal></expr>)</condition> <block pos:start="127:59" pos:end="131:13">{<block_content pos:start="129:17" pos:end="129:48">

                <expr_stmt pos:start="129:17" pos:end="129:48"><expr pos:start="129:17" pos:end="129:47"><name pos:start="129:17" pos:end="129:27"><name pos:start="129:17" pos:end="129:20">mask</name><operator pos:start="129:21" pos:end="129:21">.</operator><name pos:start="129:22" pos:end="129:27">s_addr</name></name> <operator pos:start="129:29" pos:end="129:29">=</operator> <call pos:start="129:31" pos:end="129:47"><name pos:start="129:31" pos:end="129:35">htonl</name><argument_list pos:start="129:36" pos:end="129:47">(<argument pos:start="129:37" pos:end="129:46"><expr pos:start="129:37" pos:end="129:46"><literal type="number" pos:start="129:37" pos:end="129:46">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="129:50" pos:end="129:75">/* priv. 192.168.0.0/16 */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="131:15" pos:end="135:13">else if <condition pos:start="131:23" pos:end="131:57">(<expr pos:start="131:24" pos:end="131:56"><operator pos:start="131:24" pos:end="131:24">(</operator><name pos:start="131:25" pos:end="131:28">addr</name> <operator pos:start="131:30" pos:end="131:30">&amp;</operator> <literal type="number" pos:start="131:32" pos:end="131:41">0xffff0000</literal><operator pos:start="131:42" pos:end="131:42">)</operator> <operator pos:start="131:44" pos:end="131:45">==</operator> <literal type="number" pos:start="131:47" pos:end="131:56">0xc6120000</literal></expr>)</condition> <block pos:start="131:59" pos:end="135:13">{<block_content pos:start="133:17" pos:end="133:48">

                <expr_stmt pos:start="133:17" pos:end="133:48"><expr pos:start="133:17" pos:end="133:47"><name pos:start="133:17" pos:end="133:27"><name pos:start="133:17" pos:end="133:20">mask</name><operator pos:start="133:21" pos:end="133:21">.</operator><name pos:start="133:22" pos:end="133:27">s_addr</name></name> <operator pos:start="133:29" pos:end="133:29">=</operator> <call pos:start="133:31" pos:end="133:47"><name pos:start="133:31" pos:end="133:35">htonl</name><argument_list pos:start="133:36" pos:end="133:47">(<argument pos:start="133:37" pos:end="133:46"><expr pos:start="133:37" pos:end="133:46"><literal type="number" pos:start="133:37" pos:end="133:46">0xfffe0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="133:50" pos:end="133:74">/* tests 198.18.0.0/15 */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="135:15" pos:end="139:13">else if <condition pos:start="135:23" pos:end="135:57">(<expr pos:start="135:24" pos:end="135:56"><operator pos:start="135:24" pos:end="135:24">(</operator><name pos:start="135:25" pos:end="135:28">addr</name> <operator pos:start="135:30" pos:end="135:30">&amp;</operator> <literal type="number" pos:start="135:32" pos:end="135:41">0xe0000000</literal><operator pos:start="135:42" pos:end="135:42">)</operator> <operator pos:start="135:44" pos:end="135:45">==</operator> <literal type="number" pos:start="135:47" pos:end="135:56">0xe0000000</literal></expr>)</condition> <block pos:start="135:59" pos:end="139:13">{<block_content pos:start="137:17" pos:end="137:48">

                <expr_stmt pos:start="137:17" pos:end="137:48"><expr pos:start="137:17" pos:end="137:47"><name pos:start="137:17" pos:end="137:27"><name pos:start="137:17" pos:end="137:20">mask</name><operator pos:start="137:21" pos:end="137:21">.</operator><name pos:start="137:22" pos:end="137:27">s_addr</name></name> <operator pos:start="137:29" pos:end="137:29">=</operator> <call pos:start="137:31" pos:end="137:47"><name pos:start="137:31" pos:end="137:35">htonl</name><argument_list pos:start="137:36" pos:end="137:47">(<argument pos:start="137:37" pos:end="137:46"><expr pos:start="137:37" pos:end="137:46"><literal type="number" pos:start="137:37" pos:end="137:46">0xffffff00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="137:50" pos:end="137:62">/* class C */</comment>

            </block_content>}</block></if> <else pos:start="139:15" pos:end="143:13">else <block pos:start="139:20" pos:end="143:13">{<block_content pos:start="141:17" pos:end="141:48">

                <expr_stmt pos:start="141:17" pos:end="141:48"><expr pos:start="141:17" pos:end="141:47"><name pos:start="141:17" pos:end="141:27"><name pos:start="141:17" pos:end="141:20">mask</name><operator pos:start="141:21" pos:end="141:21">.</operator><name pos:start="141:22" pos:end="141:27">s_addr</name></name> <operator pos:start="141:29" pos:end="141:29">=</operator> <call pos:start="141:31" pos:end="141:47"><name pos:start="141:31" pos:end="141:35">htonl</name><argument_list pos:start="141:36" pos:end="141:47">(<argument pos:start="141:37" pos:end="141:46"><expr pos:start="141:37" pos:end="141:46"><literal type="number" pos:start="141:37" pos:end="141:46">0xfffffff0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="141:50" pos:end="141:73">/* multicast/reserved */</comment>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="145:11" pos:end="173:9">else <block pos:start="145:16" pos:end="173:9">{<block_content pos:start="147:13" pos:end="171:13">

            <if_stmt pos:start="147:13" pos:end="151:13"><if pos:start="147:13" pos:end="151:13">if <condition pos:start="147:16" pos:end="147:38">(<expr pos:start="147:17" pos:end="147:37"><operator pos:start="147:17" pos:end="147:17">!</operator><call pos:start="147:18" pos:end="147:37"><name pos:start="147:18" pos:end="147:26">inet_aton</name><argument_list pos:start="147:27" pos:end="147:37">(<argument pos:start="147:28" pos:end="147:30"><expr pos:start="147:28" pos:end="147:30"><name pos:start="147:28" pos:end="147:30">buf</name></expr></argument>, <argument pos:start="147:33" pos:end="147:36"><expr pos:start="147:33" pos:end="147:36"><operator pos:start="147:33" pos:end="147:33">&amp;</operator><name pos:start="147:34" pos:end="147:36">net</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:40" pos:end="151:13">{<block_content pos:start="149:17" pos:end="149:26">

                <return pos:start="149:17" pos:end="149:26">return <expr pos:start="149:24" pos:end="149:25"><operator pos:start="149:24" pos:end="149:24">-</operator><literal type="number" pos:start="149:25" pos:end="149:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:47"><expr pos:start="153:13" pos:end="153:46"><name pos:start="153:13" pos:end="153:17">shift</name> <operator pos:start="153:19" pos:end="153:19">=</operator> <call pos:start="153:21" pos:end="153:46"><name pos:start="153:21" pos:end="153:26">strtol</name><argument_list pos:start="153:27" pos:end="153:46">(<argument pos:start="153:28" pos:end="153:35"><expr pos:start="153:28" pos:end="153:35"><name pos:start="153:28" pos:end="153:35">vnetwork</name></expr></argument>, <argument pos:start="153:38" pos:end="153:41"><expr pos:start="153:38" pos:end="153:41"><operator pos:start="153:38" pos:end="153:38">&amp;</operator><name pos:start="153:39" pos:end="153:41">end</name></expr></argument>, <argument pos:start="153:44" pos:end="153:45"><expr pos:start="153:44" pos:end="153:45"><literal type="number" pos:start="153:44" pos:end="153:45">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="171:13"><if pos:start="155:13" pos:end="163:13">if <condition pos:start="155:16" pos:end="155:29">(<expr pos:start="155:17" pos:end="155:28"><operator pos:start="155:17" pos:end="155:17">*</operator><name pos:start="155:18" pos:end="155:20">end</name> <operator pos:start="155:22" pos:end="155:23">!=</operator> <literal type="char" pos:start="155:25" pos:end="155:28">'\0'</literal></expr>)</condition> <block pos:start="155:31" pos:end="163:13">{<block_content pos:start="157:17" pos:end="161:17">

                <if_stmt pos:start="157:17" pos:end="161:17"><if pos:start="157:17" pos:end="161:17">if <condition pos:start="157:20" pos:end="157:48">(<expr pos:start="157:21" pos:end="157:47"><operator pos:start="157:21" pos:end="157:21">!</operator><call pos:start="157:22" pos:end="157:47"><name pos:start="157:22" pos:end="157:30">inet_aton</name><argument_list pos:start="157:31" pos:end="157:47">(<argument pos:start="157:32" pos:end="157:39"><expr pos:start="157:32" pos:end="157:39"><name pos:start="157:32" pos:end="157:39">vnetwork</name></expr></argument>, <argument pos:start="157:42" pos:end="157:46"><expr pos:start="157:42" pos:end="157:46"><operator pos:start="157:42" pos:end="157:42">&amp;</operator><name pos:start="157:43" pos:end="157:46">mask</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="157:50" pos:end="161:17">{<block_content pos:start="159:21" pos:end="159:30">

                    <return pos:start="159:21" pos:end="159:30">return <expr pos:start="159:28" pos:end="159:29"><operator pos:start="159:28" pos:end="159:28">-</operator><literal type="number" pos:start="159:29" pos:end="159:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="163:15" pos:end="167:13">else if <condition pos:start="163:23" pos:end="163:47">(<expr pos:start="163:24" pos:end="163:46"><name pos:start="163:24" pos:end="163:43"><name pos:start="163:24" pos:end="163:28">shift</name> <argument_list type="generic" pos:start="163:30" pos:end="163:43">&lt; <argument pos:start="163:32" pos:end="163:41"><expr pos:start="163:32" pos:end="163:41"><literal type="number" pos:start="163:32" pos:end="163:32">4</literal> <operator pos:start="163:34" pos:end="163:35">||</operator> <name pos:start="163:37" pos:end="163:41">shift</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="163:45" pos:end="163:46">32</literal></expr>)</condition> <block pos:start="163:49" pos:end="167:13">{<block_content pos:start="165:17" pos:end="165:26">

                <return pos:start="165:17" pos:end="165:26">return <expr pos:start="165:24" pos:end="165:25"><operator pos:start="165:24" pos:end="165:24">-</operator><literal type="number" pos:start="165:25" pos:end="165:25">1</literal></expr>;</return>

            </block_content>}</block></if> <else pos:start="167:15" pos:end="171:13">else <block pos:start="167:20" pos:end="171:13">{<block_content pos:start="169:17" pos:end="169:64">

                <expr_stmt pos:start="169:17" pos:end="169:64"><expr pos:start="169:17" pos:end="169:63"><name pos:start="169:17" pos:end="169:27"><name pos:start="169:17" pos:end="169:20">mask</name><operator pos:start="169:21" pos:end="169:21">.</operator><name pos:start="169:22" pos:end="169:27">s_addr</name></name> <operator pos:start="169:29" pos:end="169:29">=</operator> <call pos:start="169:31" pos:end="169:63"><name pos:start="169:31" pos:end="169:35">htonl</name><argument_list pos:start="169:36" pos:end="169:63">(<argument pos:start="169:37" pos:end="169:62"><expr pos:start="169:37" pos:end="169:62"><literal type="number" pos:start="169:37" pos:end="169:46">0xffffffff</literal> <operator pos:start="169:48" pos:end="169:49">&lt;&lt;</operator> <operator pos:start="169:51" pos:end="169:51">(</operator><literal type="number" pos:start="169:52" pos:end="169:55">32</literal> <operator pos:start="169:55" pos:end="169:55">-</operator> <name pos:start="169:57" pos:end="169:61">shift</name><operator pos:start="169:62" pos:end="169:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:34"><expr pos:start="175:9" pos:end="175:33"><name pos:start="175:9" pos:end="175:18"><name pos:start="175:9" pos:end="175:11">net</name><operator pos:start="175:12" pos:end="175:12">.</operator><name pos:start="175:13" pos:end="175:18">s_addr</name></name> <operator pos:start="175:20" pos:end="175:21">&amp;=</operator> <name pos:start="175:23" pos:end="175:33"><name pos:start="175:23" pos:end="175:26">mask</name><operator pos:start="175:27" pos:end="175:27">.</operator><name pos:start="175:28" pos:end="175:33">s_addr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:66"><expr pos:start="177:9" pos:end="177:65"><name pos:start="177:9" pos:end="177:19"><name pos:start="177:9" pos:end="177:12">host</name><operator pos:start="177:13" pos:end="177:13">.</operator><name pos:start="177:14" pos:end="177:19">s_addr</name></name> <operator pos:start="177:21" pos:end="177:21">=</operator> <name pos:start="177:23" pos:end="177:32"><name pos:start="177:23" pos:end="177:25">net</name><operator pos:start="177:26" pos:end="177:26">.</operator><name pos:start="177:27" pos:end="177:32">s_addr</name></name> <operator pos:start="177:34" pos:end="177:34">|</operator> <operator pos:start="177:36" pos:end="177:36">(</operator><call pos:start="177:37" pos:end="177:49"><name pos:start="177:37" pos:end="177:41">htonl</name><argument_list pos:start="177:42" pos:end="177:49">(<argument pos:start="177:43" pos:end="177:48"><expr pos:start="177:43" pos:end="177:48"><literal type="number" pos:start="177:43" pos:end="177:48">0x0202</literal></expr></argument>)</argument_list></call> <operator pos:start="177:51" pos:end="177:51">&amp;</operator> <operator pos:start="177:53" pos:end="177:53">~</operator><name pos:start="177:54" pos:end="177:64"><name pos:start="177:54" pos:end="177:57">mask</name><operator pos:start="177:58" pos:end="177:58">.</operator><name pos:start="177:59" pos:end="177:64">s_addr</name></name><operator pos:start="177:65" pos:end="177:65">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:66"><expr pos:start="179:9" pos:end="179:65"><name pos:start="179:9" pos:end="179:19"><name pos:start="179:9" pos:end="179:12">dhcp</name><operator pos:start="179:13" pos:end="179:13">.</operator><name pos:start="179:14" pos:end="179:19">s_addr</name></name> <operator pos:start="179:21" pos:end="179:21">=</operator> <name pos:start="179:23" pos:end="179:32"><name pos:start="179:23" pos:end="179:25">net</name><operator pos:start="179:26" pos:end="179:26">.</operator><name pos:start="179:27" pos:end="179:32">s_addr</name></name> <operator pos:start="179:34" pos:end="179:34">|</operator> <operator pos:start="179:36" pos:end="179:36">(</operator><call pos:start="179:37" pos:end="179:49"><name pos:start="179:37" pos:end="179:41">htonl</name><argument_list pos:start="179:42" pos:end="179:49">(<argument pos:start="179:43" pos:end="179:48"><expr pos:start="179:43" pos:end="179:48"><literal type="number" pos:start="179:43" pos:end="179:48">0x020f</literal></expr></argument>)</argument_list></call> <operator pos:start="179:51" pos:end="179:51">&amp;</operator> <operator pos:start="179:53" pos:end="179:53">~</operator><name pos:start="179:54" pos:end="179:64"><name pos:start="179:54" pos:end="179:57">mask</name><operator pos:start="179:58" pos:end="179:58">.</operator><name pos:start="179:59" pos:end="179:64">s_addr</name></name><operator pos:start="179:65" pos:end="179:65">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:66"><expr pos:start="181:9" pos:end="181:65"><name pos:start="181:9" pos:end="181:18"><name pos:start="181:9" pos:end="181:11">dns</name><operator pos:start="181:12" pos:end="181:12">.</operator><name pos:start="181:13" pos:end="181:18">s_addr</name></name>  <operator pos:start="181:21" pos:end="181:21">=</operator> <name pos:start="181:23" pos:end="181:32"><name pos:start="181:23" pos:end="181:25">net</name><operator pos:start="181:26" pos:end="181:26">.</operator><name pos:start="181:27" pos:end="181:32">s_addr</name></name> <operator pos:start="181:34" pos:end="181:34">|</operator> <operator pos:start="181:36" pos:end="181:36">(</operator><call pos:start="181:37" pos:end="181:49"><name pos:start="181:37" pos:end="181:41">htonl</name><argument_list pos:start="181:42" pos:end="181:49">(<argument pos:start="181:43" pos:end="181:48"><expr pos:start="181:43" pos:end="181:48"><literal type="number" pos:start="181:43" pos:end="181:48">0x0203</literal></expr></argument>)</argument_list></call> <operator pos:start="181:51" pos:end="181:51">&amp;</operator> <operator pos:start="181:53" pos:end="181:53">~</operator><name pos:start="181:54" pos:end="181:64"><name pos:start="181:54" pos:end="181:57">mask</name><operator pos:start="181:58" pos:end="181:58">.</operator><name pos:start="181:59" pos:end="181:64">s_addr</name></name><operator pos:start="181:65" pos:end="181:65">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="187:5" pos:end="191:5"><if pos:start="187:5" pos:end="191:5">if <condition pos:start="187:8" pos:end="187:42">(<expr pos:start="187:9" pos:end="187:41"><name pos:start="187:9" pos:end="187:13">vhost</name> <operator pos:start="187:15" pos:end="187:16">&amp;&amp;</operator> <operator pos:start="187:18" pos:end="187:18">!</operator><call pos:start="187:19" pos:end="187:41"><name pos:start="187:19" pos:end="187:27">inet_aton</name><argument_list pos:start="187:28" pos:end="187:41">(<argument pos:start="187:29" pos:end="187:33"><expr pos:start="187:29" pos:end="187:33"><name pos:start="187:29" pos:end="187:33">vhost</name></expr></argument>, <argument pos:start="187:36" pos:end="187:40"><expr pos:start="187:36" pos:end="187:40"><operator pos:start="187:36" pos:end="187:36">&amp;</operator><name pos:start="187:37" pos:end="187:40">host</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="187:44" pos:end="191:5">{<block_content pos:start="189:9" pos:end="189:18">

        <return pos:start="189:9" pos:end="189:18">return <expr pos:start="189:16" pos:end="189:17"><operator pos:start="189:16" pos:end="189:16">-</operator><literal type="number" pos:start="189:17" pos:end="189:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="193:5" pos:end="197:5"><if pos:start="193:5" pos:end="197:5">if <condition pos:start="193:8" pos:end="193:50">(<expr pos:start="193:9" pos:end="193:49"><operator pos:start="193:9" pos:end="193:9">(</operator><name pos:start="193:10" pos:end="193:20"><name pos:start="193:10" pos:end="193:13">host</name><operator pos:start="193:14" pos:end="193:14">.</operator><name pos:start="193:15" pos:end="193:20">s_addr</name></name> <operator pos:start="193:22" pos:end="193:22">&amp;</operator> <name pos:start="193:24" pos:end="193:34"><name pos:start="193:24" pos:end="193:27">mask</name><operator pos:start="193:28" pos:end="193:28">.</operator><name pos:start="193:29" pos:end="193:34">s_addr</name></name><operator pos:start="193:35" pos:end="193:35">)</operator> <operator pos:start="193:37" pos:end="193:38">!=</operator> <name pos:start="193:40" pos:end="193:49"><name pos:start="193:40" pos:end="193:42">net</name><operator pos:start="193:43" pos:end="193:43">.</operator><name pos:start="193:44" pos:end="193:49">s_addr</name></name></expr>)</condition> <block pos:start="193:52" pos:end="197:5">{<block_content pos:start="195:9" pos:end="195:18">

        <return pos:start="195:9" pos:end="195:18">return <expr pos:start="195:16" pos:end="195:17"><operator pos:start="195:16" pos:end="195:16">-</operator><literal type="number" pos:start="195:17" pos:end="195:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="201:5" pos:end="205:5"><if pos:start="201:5" pos:end="205:5">if <condition pos:start="201:8" pos:end="201:53">(<expr pos:start="201:9" pos:end="201:52"><name pos:start="201:9" pos:end="201:19">vnameserver</name> <operator pos:start="201:21" pos:end="201:22">&amp;&amp;</operator> <operator pos:start="201:24" pos:end="201:24">!</operator><call pos:start="201:25" pos:end="201:52"><name pos:start="201:25" pos:end="201:33">inet_aton</name><argument_list pos:start="201:34" pos:end="201:52">(<argument pos:start="201:35" pos:end="201:45"><expr pos:start="201:35" pos:end="201:45"><name pos:start="201:35" pos:end="201:45">vnameserver</name></expr></argument>, <argument pos:start="201:48" pos:end="201:51"><expr pos:start="201:48" pos:end="201:51"><operator pos:start="201:48" pos:end="201:48">&amp;</operator><name pos:start="201:49" pos:end="201:51">dns</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="201:55" pos:end="205:5">{<block_content pos:start="203:9" pos:end="203:18">

        <return pos:start="203:9" pos:end="203:18">return <expr pos:start="203:16" pos:end="203:17"><operator pos:start="203:16" pos:end="203:16">-</operator><literal type="number" pos:start="203:17" pos:end="203:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="207:5" pos:end="213:5"><if pos:start="207:5" pos:end="213:5">if <condition pos:start="207:8" pos:end="209:34">(<expr pos:start="207:9" pos:end="209:33"><operator pos:start="207:9" pos:end="207:9">(</operator><name pos:start="207:10" pos:end="207:19"><name pos:start="207:10" pos:end="207:12">dns</name><operator pos:start="207:13" pos:end="207:13">.</operator><name pos:start="207:14" pos:end="207:19">s_addr</name></name> <operator pos:start="207:21" pos:end="207:21">&amp;</operator> <name pos:start="207:23" pos:end="207:33"><name pos:start="207:23" pos:end="207:26">mask</name><operator pos:start="207:27" pos:end="207:27">.</operator><name pos:start="207:28" pos:end="207:33">s_addr</name></name><operator pos:start="207:34" pos:end="207:34">)</operator> <operator pos:start="207:36" pos:end="207:37">!=</operator> <name pos:start="207:39" pos:end="207:48"><name pos:start="207:39" pos:end="207:41">net</name><operator pos:start="207:42" pos:end="207:42">.</operator><name pos:start="207:43" pos:end="207:48">s_addr</name></name> <operator pos:start="207:50" pos:end="207:51">||</operator>

        <name pos:start="209:9" pos:end="209:18"><name pos:start="209:9" pos:end="209:11">dns</name><operator pos:start="209:12" pos:end="209:12">.</operator><name pos:start="209:13" pos:end="209:18">s_addr</name></name> <operator pos:start="209:20" pos:end="209:21">==</operator> <name pos:start="209:23" pos:end="209:33"><name pos:start="209:23" pos:end="209:26">host</name><operator pos:start="209:27" pos:end="209:27">.</operator><name pos:start="209:28" pos:end="209:33">s_addr</name></name></expr>)</condition> <block pos:start="209:36" pos:end="213:5">{<block_content pos:start="211:9" pos:end="211:18">

        <return pos:start="211:9" pos:end="211:18">return <expr pos:start="211:16" pos:end="211:17"><operator pos:start="211:16" pos:end="211:16">-</operator><literal type="number" pos:start="211:17" pos:end="211:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="217:5" pos:end="221:5"><if pos:start="217:5" pos:end="221:5">if <condition pos:start="217:8" pos:end="217:54">(<expr pos:start="217:9" pos:end="217:53"><name pos:start="217:9" pos:end="217:19">vdhcp_start</name> <operator pos:start="217:21" pos:end="217:22">&amp;&amp;</operator> <operator pos:start="217:24" pos:end="217:24">!</operator><call pos:start="217:25" pos:end="217:53"><name pos:start="217:25" pos:end="217:33">inet_aton</name><argument_list pos:start="217:34" pos:end="217:53">(<argument pos:start="217:35" pos:end="217:45"><expr pos:start="217:35" pos:end="217:45"><name pos:start="217:35" pos:end="217:45">vdhcp_start</name></expr></argument>, <argument pos:start="217:48" pos:end="217:52"><expr pos:start="217:48" pos:end="217:52"><operator pos:start="217:48" pos:end="217:48">&amp;</operator><name pos:start="217:49" pos:end="217:52">dhcp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="217:56" pos:end="221:5">{<block_content pos:start="219:9" pos:end="219:18">

        <return pos:start="219:9" pos:end="219:18">return <expr pos:start="219:16" pos:end="219:17"><operator pos:start="219:16" pos:end="219:16">-</operator><literal type="number" pos:start="219:17" pos:end="219:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="223:5" pos:end="234:0"><if pos:start="223:5" pos:end="234:0">if <condition pos:start="223:8" pos:end="225:64">(<expr pos:start="223:9" pos:end="225:63"><operator pos:start="223:9" pos:end="223:9">(</operator><name pos:start="223:10" pos:end="223:20"><name pos:start="223:10" pos:end="223:13">dhcp</name><operator pos:start="223:14" pos:end="223:14">.</operator><name pos:start="223:15" pos:end="223:20">s_addr</name></name> <operator pos:start="223:22" pos:end="223:22">&amp;</operator> <name pos:start="223:24" pos:end="223:34"><name pos:start="223:24" pos:end="223:27">mask</name><operator pos:start="223:28" pos:end="223:28">.</operator><name pos:start="223:29" pos:end="223:34">s_addr</name></name><operator pos:start="223:35" pos:end="223:35">)</operator> <operator pos:start="223:37" pos:end="223:38">!=</operator> <name pos:start="223:40" pos:end="223:49"><name pos:start="223:40" pos:end="223:42">net</name><operator pos:start="223:43" pos:end="223:43">.</operator><name pos:start="223:44" pos:end="223:49">s_addr</name></name> <operator pos:start="223:51" pos:end="223:52">||</operator>

        <name pos:start="225:9" pos:end="225:19"><name pos:start="225:9" pos:end="225:12">dhcp</name><operator pos:start="225:13" pos:end="225:13">.</operator><name pos:start="225:14" pos:end="225:19">s_addr</name></name> <operator pos:start="225:21" pos:end="225:22">==</operator> <name pos:start="225:24" pos:end="225:34"><name pos:start="225:24" pos:end="225:27">host</name><operator pos:start="225:28" pos:end="225:28">.</operator><name pos:start="225:29" pos:end="225:34">s_addr</name></name> <operator pos:start="225:36" pos:end="225:37">||</operator> <name pos:start="225:39" pos:end="225:49"><name pos:start="225:39" pos:end="225:42">dhcp</name><operator pos:start="225:43" pos:end="225:43">.</operator><name pos:start="225:44" pos:end="225:49">s_addr</name></name> <operator pos:start="225:51" pos:end="225:52">==</operator> <name pos:start="225:54" pos:end="225:63"><name pos:start="225:54" pos:end="225:56">dns</name><operator pos:start="225:57" pos:end="225:57">.</operator><name pos:start="225:58" pos:end="225:63">s_addr</name></name></expr>)</condition> <block pos:start="225:66" pos:end="234:0">{<block_content pos:start="227:9" pos:end="227:18">

        <return pos:start="227:9" pos:end="227:18">return <expr pos:start="227:16" pos:end="227:17"><operator pos:start="227:16" pos:end="227:16">-</operator><literal type="number" pos:start="227:17" pos:end="227:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



<cpp:ifndef pos:start="233:1" pos:end="233:14">#<cpp:directive pos:start="233:2" pos:end="233:7">ifndef</cpp:directive> <name pos:start="233:9" pos:end="233:14">_WIN32</name></cpp:ifndef>

    <if_stmt pos:start="235:5" pos:end="246:0"><if pos:start="235:5" pos:end="246:0">if <condition pos:start="235:8" pos:end="235:54">(<expr pos:start="235:9" pos:end="235:53"><name pos:start="235:9" pos:end="235:18">vsmbserver</name> <operator pos:start="235:20" pos:end="235:21">&amp;&amp;</operator> <operator pos:start="235:23" pos:end="235:23">!</operator><call pos:start="235:24" pos:end="235:53"><name pos:start="235:24" pos:end="235:32">inet_aton</name><argument_list pos:start="235:33" pos:end="235:53">(<argument pos:start="235:34" pos:end="235:43"><expr pos:start="235:34" pos:end="235:43"><name pos:start="235:34" pos:end="235:43">vsmbserver</name></expr></argument>, <argument pos:start="235:46" pos:end="235:52"><expr pos:start="235:46" pos:end="235:52"><operator pos:start="235:46" pos:end="235:46">&amp;</operator><name pos:start="235:47" pos:end="235:52">smbsrv</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="235:56" pos:end="246:0">{<block_content pos:start="237:9" pos:end="237:18">

        <return pos:start="237:9" pos:end="237:18">return <expr pos:start="237:16" pos:end="237:17"><operator pos:start="237:16" pos:end="237:16">-</operator><literal type="number" pos:start="237:17" pos:end="237:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="241:1" pos:end="241:6">#<cpp:directive pos:start="241:2" pos:end="241:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="245:1" pos:end="245:46">#<cpp:directive pos:start="245:2" pos:end="245:3">if</cpp:directive> <expr pos:start="245:5" pos:end="245:46"><call pos:start="245:5" pos:end="245:19"><name pos:start="245:5" pos:end="245:11">defined</name><argument_list pos:start="245:12" pos:end="245:19">(<argument pos:start="245:13" pos:end="245:18"><expr pos:start="245:13" pos:end="245:18"><name pos:start="245:13" pos:end="245:18">_WIN32</name></expr></argument>)</argument_list></call> <operator pos:start="245:21" pos:end="245:22">&amp;&amp;</operator> <operator pos:start="245:24" pos:end="245:24">(</operator><name pos:start="245:25" pos:end="245:36">_WIN32_WINNT</name> <operator pos:start="245:38" pos:end="245:38">&lt;</operator> <literal type="number" pos:start="245:40" pos:end="245:45">0x0600</literal><operator pos:start="245:46" pos:end="245:46">)</operator></expr></cpp:if>

    <comment type="block" pos:start="247:5" pos:end="247:45">/* No inet_pton helper before Vista... */</comment>

    <if_stmt pos:start="249:5" pos:end="255:5"><if pos:start="249:5" pos:end="255:5">if <condition pos:start="249:8" pos:end="249:17">(<expr pos:start="249:9" pos:end="249:16"><name pos:start="249:9" pos:end="249:16">vprefix6</name></expr>)</condition> <block pos:start="249:19" pos:end="255:5">{<block_content pos:start="253:9" pos:end="253:18">

        <comment type="block" pos:start="251:9" pos:end="251:25">/* Unsupported */</comment>

        <return pos:start="253:9" pos:end="253:18">return <expr pos:start="253:16" pos:end="253:17"><operator pos:start="253:16" pos:end="253:16">-</operator><literal type="number" pos:start="253:17" pos:end="253:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:47"><expr pos:start="257:5" pos:end="257:46"><call pos:start="257:5" pos:end="257:46"><name pos:start="257:5" pos:end="257:10">memset</name><argument_list pos:start="257:11" pos:end="257:46">(<argument pos:start="257:12" pos:end="257:22"><expr pos:start="257:12" pos:end="257:22"><operator pos:start="257:12" pos:end="257:12">&amp;</operator><name pos:start="257:13" pos:end="257:22">ip6_prefix</name></expr></argument>, <argument pos:start="257:25" pos:end="257:25"><expr pos:start="257:25" pos:end="257:25"><literal type="number" pos:start="257:25" pos:end="257:25">0</literal></expr></argument>, <argument pos:start="257:28" pos:end="257:45"><expr pos:start="257:28" pos:end="257:45"><sizeof pos:start="257:28" pos:end="257:45">sizeof<argument_list pos:start="257:34" pos:end="257:45">(<argument pos:start="257:35" pos:end="257:44"><expr pos:start="257:35" pos:end="257:44"><name pos:start="257:35" pos:end="257:44">ip6_prefix</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:33"><expr pos:start="259:5" pos:end="259:32"><name pos:start="259:5" pos:end="259:25"><name pos:start="259:5" pos:end="259:14">ip6_prefix</name><operator pos:start="259:15" pos:end="259:15">.</operator><name pos:start="259:16" pos:end="259:22">s6_addr</name><index pos:start="259:23" pos:end="259:25">[<expr pos:start="259:24" pos:end="259:24"><literal type="number" pos:start="259:24" pos:end="259:24">0</literal></expr>]</index></name> <operator pos:start="259:27" pos:end="259:27">=</operator> <literal type="number" pos:start="259:29" pos:end="259:32">0xfe</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="264:0"><expr pos:start="261:5" pos:end="261:32"><name pos:start="261:5" pos:end="261:25"><name pos:start="261:5" pos:end="261:14">ip6_prefix</name><operator pos:start="261:15" pos:end="261:15">.</operator><name pos:start="261:16" pos:end="261:22">s6_addr</name><index pos:start="261:23" pos:end="261:25">[<expr pos:start="261:24" pos:end="261:24"><literal type="number" pos:start="261:24" pos:end="261:24">1</literal></expr>]</index></name> <operator pos:start="261:27" pos:end="261:27">=</operator> <literal type="number" pos:start="261:29" pos:end="261:32">0xc0</literal></expr>;</expr_stmt>

<cpp:else pos:start="263:1" pos:end="263:5">#<cpp:directive pos:start="263:2" pos:end="263:5">else</cpp:directive></cpp:else>

    <if_stmt pos:start="265:5" pos:end="269:5"><if pos:start="265:5" pos:end="269:5">if <condition pos:start="265:8" pos:end="265:18">(<expr pos:start="265:9" pos:end="265:17"><operator pos:start="265:9" pos:end="265:9">!</operator><name pos:start="265:10" pos:end="265:17">vprefix6</name></expr>)</condition> <block pos:start="265:20" pos:end="269:5">{<block_content pos:start="267:9" pos:end="267:28">

        <expr_stmt pos:start="267:9" pos:end="267:28"><expr pos:start="267:9" pos:end="267:27"><name pos:start="267:9" pos:end="267:16">vprefix6</name> <operator pos:start="267:18" pos:end="267:18">=</operator> <literal type="string" pos:start="267:20" pos:end="267:27">"fec0::"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="271:5" pos:end="278:0"><if pos:start="271:5" pos:end="278:0">if <condition pos:start="271:8" pos:end="271:52">(<expr pos:start="271:9" pos:end="271:51"><operator pos:start="271:9" pos:end="271:9">!</operator><call pos:start="271:10" pos:end="271:51"><name pos:start="271:10" pos:end="271:18">inet_pton</name><argument_list pos:start="271:19" pos:end="271:51">(<argument pos:start="271:20" pos:end="271:27"><expr pos:start="271:20" pos:end="271:27"><name pos:start="271:20" pos:end="271:27">AF_INET6</name></expr></argument>, <argument pos:start="271:30" pos:end="271:37"><expr pos:start="271:30" pos:end="271:37"><name pos:start="271:30" pos:end="271:37">vprefix6</name></expr></argument>, <argument pos:start="271:40" pos:end="271:50"><expr pos:start="271:40" pos:end="271:50"><operator pos:start="271:40" pos:end="271:40">&amp;</operator><name pos:start="271:41" pos:end="271:50">ip6_prefix</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="271:54" pos:end="278:0">{<block_content pos:start="273:9" pos:end="273:18">

        <return pos:start="273:9" pos:end="273:18">return <expr pos:start="273:16" pos:end="273:17"><operator pos:start="273:16" pos:end="273:16">-</operator><literal type="number" pos:start="273:17" pos:end="273:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="277:1" pos:end="277:6">#<cpp:directive pos:start="277:2" pos:end="277:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="281:5" pos:end="285:5"><if pos:start="281:5" pos:end="285:5">if <condition pos:start="281:8" pos:end="281:22">(<expr pos:start="281:9" pos:end="281:21"><operator pos:start="281:9" pos:end="281:9">!</operator><name pos:start="281:10" pos:end="281:21">vprefix6_len</name></expr>)</condition> <block pos:start="281:24" pos:end="285:5">{<block_content pos:start="283:9" pos:end="283:26">

        <expr_stmt pos:start="283:9" pos:end="283:26"><expr pos:start="283:9" pos:end="283:25"><name pos:start="283:9" pos:end="283:20">vprefix6_len</name> <operator pos:start="283:22" pos:end="283:22">=</operator> <literal type="number" pos:start="283:24" pos:end="283:25">64</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="287:5" pos:end="291:5"><if pos:start="287:5" pos:end="291:5">if <condition pos:start="287:8" pos:end="287:47">(<expr pos:start="287:9" pos:end="287:46"><name pos:start="287:9" pos:end="287:42"><name pos:start="287:9" pos:end="287:20">vprefix6_len</name> <argument_list type="generic" pos:start="287:22" pos:end="287:42">&lt; <argument pos:start="287:24" pos:end="287:40"><expr pos:start="287:24" pos:end="287:40"><literal type="number" pos:start="287:24" pos:end="287:24">0</literal> <operator pos:start="287:26" pos:end="287:27">||</operator> <name pos:start="287:29" pos:end="287:40">vprefix6_len</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="287:44" pos:end="287:46">126</literal></expr>)</condition> <block pos:start="287:49" pos:end="291:5">{<block_content pos:start="289:9" pos:end="289:18">

        <return pos:start="289:9" pos:end="289:18">return <expr pos:start="289:16" pos:end="289:17"><operator pos:start="289:16" pos:end="289:16">-</operator><literal type="number" pos:start="289:17" pos:end="289:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="295:5" pos:end="323:5"><if pos:start="295:5" pos:end="317:5">if <condition pos:start="295:8" pos:end="295:15">(<expr pos:start="295:9" pos:end="295:14"><name pos:start="295:9" pos:end="295:14">vhost6</name></expr>)</condition> <block pos:start="295:17" pos:end="317:5">{<block_content pos:start="299:9" pos:end="316:0">

<cpp:if pos:start="297:1" pos:end="297:46">#<cpp:directive pos:start="297:2" pos:end="297:3">if</cpp:directive> <expr pos:start="297:5" pos:end="297:46"><call pos:start="297:5" pos:end="297:19"><name pos:start="297:5" pos:end="297:11">defined</name><argument_list pos:start="297:12" pos:end="297:19">(<argument pos:start="297:13" pos:end="297:18"><expr pos:start="297:13" pos:end="297:18"><name pos:start="297:13" pos:end="297:18">_WIN32</name></expr></argument>)</argument_list></call> <operator pos:start="297:21" pos:end="297:22">&amp;&amp;</operator> <operator pos:start="297:24" pos:end="297:24">(</operator><name pos:start="297:25" pos:end="297:36">_WIN32_WINNT</name> <operator pos:start="297:38" pos:end="297:38">&lt;</operator> <literal type="number" pos:start="297:40" pos:end="297:45">0x0600</literal><operator pos:start="297:46" pos:end="297:46">)</operator></expr></cpp:if>

        <return pos:start="299:9" pos:end="302:0">return <expr pos:start="299:16" pos:end="299:17"><operator pos:start="299:16" pos:end="299:16">-</operator><literal type="number" pos:start="299:17" pos:end="299:17">1</literal></expr>;</return>

<cpp:else pos:start="301:1" pos:end="301:5">#<cpp:directive pos:start="301:2" pos:end="301:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="303:9" pos:end="307:9"><if pos:start="303:9" pos:end="307:9">if <condition pos:start="303:12" pos:end="303:52">(<expr pos:start="303:13" pos:end="303:51"><operator pos:start="303:13" pos:end="303:13">!</operator><call pos:start="303:14" pos:end="303:51"><name pos:start="303:14" pos:end="303:22">inet_pton</name><argument_list pos:start="303:23" pos:end="303:51">(<argument pos:start="303:24" pos:end="303:31"><expr pos:start="303:24" pos:end="303:31"><name pos:start="303:24" pos:end="303:31">AF_INET6</name></expr></argument>, <argument pos:start="303:34" pos:end="303:39"><expr pos:start="303:34" pos:end="303:39"><name pos:start="303:34" pos:end="303:39">vhost6</name></expr></argument>, <argument pos:start="303:42" pos:end="303:50"><expr pos:start="303:42" pos:end="303:50"><operator pos:start="303:42" pos:end="303:42">&amp;</operator><name pos:start="303:43" pos:end="303:50">ip6_host</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="303:54" pos:end="307:9">{<block_content pos:start="305:13" pos:end="305:22">

            <return pos:start="305:13" pos:end="305:22">return <expr pos:start="305:20" pos:end="305:21"><operator pos:start="305:20" pos:end="305:20">-</operator><literal type="number" pos:start="305:21" pos:end="305:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="309:9" pos:end="316:0"><if pos:start="309:9" pos:end="316:0">if <condition pos:start="309:12" pos:end="309:65">(<expr pos:start="309:13" pos:end="309:64"><operator pos:start="309:13" pos:end="309:13">!</operator><call pos:start="309:14" pos:end="309:64"><name pos:start="309:14" pos:end="309:26">in6_equal_net</name><argument_list pos:start="309:27" pos:end="309:64">(<argument pos:start="309:28" pos:end="309:38"><expr pos:start="309:28" pos:end="309:38"><operator pos:start="309:28" pos:end="309:28">&amp;</operator><name pos:start="309:29" pos:end="309:38">ip6_prefix</name></expr></argument>, <argument pos:start="309:41" pos:end="309:49"><expr pos:start="309:41" pos:end="309:49"><operator pos:start="309:41" pos:end="309:41">&amp;</operator><name pos:start="309:42" pos:end="309:49">ip6_host</name></expr></argument>, <argument pos:start="309:52" pos:end="309:63"><expr pos:start="309:52" pos:end="309:63"><name pos:start="309:52" pos:end="309:63">vprefix6_len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="309:67" pos:end="316:0">{<block_content pos:start="311:13" pos:end="311:22">

            <return pos:start="311:13" pos:end="311:22">return <expr pos:start="311:20" pos:end="311:21"><operator pos:start="311:20" pos:end="311:20">-</operator><literal type="number" pos:start="311:21" pos:end="311:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="315:1" pos:end="315:6">#<cpp:directive pos:start="315:2" pos:end="315:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="317:7" pos:end="323:5">else <block pos:start="317:12" pos:end="323:5">{<block_content pos:start="319:9" pos:end="321:34">

        <expr_stmt pos:start="319:9" pos:end="319:30"><expr pos:start="319:9" pos:end="319:29"><name pos:start="319:9" pos:end="319:16">ip6_host</name> <operator pos:start="319:18" pos:end="319:18">=</operator> <name pos:start="319:20" pos:end="319:29">ip6_prefix</name></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:34"><expr pos:start="321:9" pos:end="321:33"><name pos:start="321:9" pos:end="321:28"><name pos:start="321:9" pos:end="321:16">ip6_host</name><operator pos:start="321:17" pos:end="321:17">.</operator><name pos:start="321:18" pos:end="321:24">s6_addr</name><index pos:start="321:25" pos:end="321:28">[<expr pos:start="321:26" pos:end="321:27"><literal type="number" pos:start="321:26" pos:end="321:27">15</literal></expr>]</index></name> <operator pos:start="321:30" pos:end="321:31">|=</operator> <literal type="number" pos:start="321:33" pos:end="321:33">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="327:5" pos:end="355:5"><if pos:start="327:5" pos:end="349:5">if <condition pos:start="327:8" pos:end="327:21">(<expr pos:start="327:9" pos:end="327:20"><name pos:start="327:9" pos:end="327:20">vnameserver6</name></expr>)</condition> <block pos:start="327:23" pos:end="349:5">{<block_content pos:start="331:9" pos:end="348:0">

<cpp:if pos:start="329:1" pos:end="329:46">#<cpp:directive pos:start="329:2" pos:end="329:3">if</cpp:directive> <expr pos:start="329:5" pos:end="329:46"><call pos:start="329:5" pos:end="329:19"><name pos:start="329:5" pos:end="329:11">defined</name><argument_list pos:start="329:12" pos:end="329:19">(<argument pos:start="329:13" pos:end="329:18"><expr pos:start="329:13" pos:end="329:18"><name pos:start="329:13" pos:end="329:18">_WIN32</name></expr></argument>)</argument_list></call> <operator pos:start="329:21" pos:end="329:22">&amp;&amp;</operator> <operator pos:start="329:24" pos:end="329:24">(</operator><name pos:start="329:25" pos:end="329:36">_WIN32_WINNT</name> <operator pos:start="329:38" pos:end="329:38">&lt;</operator> <literal type="number" pos:start="329:40" pos:end="329:45">0x0600</literal><operator pos:start="329:46" pos:end="329:46">)</operator></expr></cpp:if>

        <return pos:start="331:9" pos:end="334:0">return <expr pos:start="331:16" pos:end="331:17"><operator pos:start="331:16" pos:end="331:16">-</operator><literal type="number" pos:start="331:17" pos:end="331:17">1</literal></expr>;</return>

<cpp:else pos:start="333:1" pos:end="333:5">#<cpp:directive pos:start="333:2" pos:end="333:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="335:9" pos:end="339:9"><if pos:start="335:9" pos:end="339:9">if <condition pos:start="335:12" pos:end="335:57">(<expr pos:start="335:13" pos:end="335:56"><operator pos:start="335:13" pos:end="335:13">!</operator><call pos:start="335:14" pos:end="335:56"><name pos:start="335:14" pos:end="335:22">inet_pton</name><argument_list pos:start="335:23" pos:end="335:56">(<argument pos:start="335:24" pos:end="335:31"><expr pos:start="335:24" pos:end="335:31"><name pos:start="335:24" pos:end="335:31">AF_INET6</name></expr></argument>, <argument pos:start="335:34" pos:end="335:45"><expr pos:start="335:34" pos:end="335:45"><name pos:start="335:34" pos:end="335:45">vnameserver6</name></expr></argument>, <argument pos:start="335:48" pos:end="335:55"><expr pos:start="335:48" pos:end="335:55"><operator pos:start="335:48" pos:end="335:48">&amp;</operator><name pos:start="335:49" pos:end="335:55">ip6_dns</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="335:59" pos:end="339:9">{<block_content pos:start="337:13" pos:end="337:22">

            <return pos:start="337:13" pos:end="337:22">return <expr pos:start="337:20" pos:end="337:21"><operator pos:start="337:20" pos:end="337:20">-</operator><literal type="number" pos:start="337:21" pos:end="337:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="341:9" pos:end="348:0"><if pos:start="341:9" pos:end="348:0">if <condition pos:start="341:12" pos:end="341:64">(<expr pos:start="341:13" pos:end="341:63"><operator pos:start="341:13" pos:end="341:13">!</operator><call pos:start="341:14" pos:end="341:63"><name pos:start="341:14" pos:end="341:26">in6_equal_net</name><argument_list pos:start="341:27" pos:end="341:63">(<argument pos:start="341:28" pos:end="341:38"><expr pos:start="341:28" pos:end="341:38"><operator pos:start="341:28" pos:end="341:28">&amp;</operator><name pos:start="341:29" pos:end="341:38">ip6_prefix</name></expr></argument>, <argument pos:start="341:41" pos:end="341:48"><expr pos:start="341:41" pos:end="341:48"><operator pos:start="341:41" pos:end="341:41">&amp;</operator><name pos:start="341:42" pos:end="341:48">ip6_dns</name></expr></argument>, <argument pos:start="341:51" pos:end="341:62"><expr pos:start="341:51" pos:end="341:62"><name pos:start="341:51" pos:end="341:62">vprefix6_len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="341:66" pos:end="348:0">{<block_content pos:start="343:13" pos:end="343:22">

            <return pos:start="343:13" pos:end="343:22">return <expr pos:start="343:20" pos:end="343:21"><operator pos:start="343:20" pos:end="343:20">-</operator><literal type="number" pos:start="343:21" pos:end="343:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="347:1" pos:end="347:6">#<cpp:directive pos:start="347:2" pos:end="347:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="349:7" pos:end="355:5">else <block pos:start="349:12" pos:end="355:5">{<block_content pos:start="351:9" pos:end="353:33">

        <expr_stmt pos:start="351:9" pos:end="351:29"><expr pos:start="351:9" pos:end="351:28"><name pos:start="351:9" pos:end="351:15">ip6_dns</name> <operator pos:start="351:17" pos:end="351:17">=</operator> <name pos:start="351:19" pos:end="351:28">ip6_prefix</name></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:33"><expr pos:start="353:9" pos:end="353:32"><name pos:start="353:9" pos:end="353:27"><name pos:start="353:9" pos:end="353:15">ip6_dns</name><operator pos:start="353:16" pos:end="353:16">.</operator><name pos:start="353:17" pos:end="353:23">s6_addr</name><index pos:start="353:24" pos:end="353:27">[<expr pos:start="353:25" pos:end="353:26"><literal type="number" pos:start="353:25" pos:end="353:26">15</literal></expr>]</index></name> <operator pos:start="353:29" pos:end="353:30">|=</operator> <literal type="number" pos:start="353:32" pos:end="353:32">3</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>





    <expr_stmt pos:start="361:5" pos:end="361:65"><expr pos:start="361:5" pos:end="361:64"><name pos:start="361:5" pos:end="361:6">nc</name> <operator pos:start="361:8" pos:end="361:8">=</operator> <call pos:start="361:10" pos:end="361:64"><name pos:start="361:10" pos:end="361:28">qemu_new_net_client</name><argument_list pos:start="361:29" pos:end="361:64">(<argument pos:start="361:30" pos:end="361:44"><expr pos:start="361:30" pos:end="361:44"><operator pos:start="361:30" pos:end="361:30">&amp;</operator><name pos:start="361:31" pos:end="361:44">net_slirp_info</name></expr></argument>, <argument pos:start="361:47" pos:end="361:50"><expr pos:start="361:47" pos:end="361:50"><name pos:start="361:47" pos:end="361:50">peer</name></expr></argument>, <argument pos:start="361:53" pos:end="361:57"><expr pos:start="361:53" pos:end="361:57"><name pos:start="361:53" pos:end="361:57">model</name></expr></argument>, <argument pos:start="361:60" pos:end="361:63"><expr pos:start="361:60" pos:end="361:63"><name pos:start="361:60" pos:end="361:63">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="365:5" pos:end="369:40"><expr pos:start="365:5" pos:end="369:39"><call pos:start="365:5" pos:end="369:39"><name pos:start="365:5" pos:end="365:12">snprintf</name><argument_list pos:start="365:13" pos:end="369:39">(<argument pos:start="365:14" pos:end="365:25"><expr pos:start="365:14" pos:end="365:25"><name pos:start="365:14" pos:end="365:25"><name pos:start="365:14" pos:end="365:15">nc</name><operator pos:start="365:16" pos:end="365:17">-&gt;</operator><name pos:start="365:18" pos:end="365:25">info_str</name></name></expr></argument>, <argument pos:start="365:28" pos:end="365:47"><expr pos:start="365:28" pos:end="365:47"><sizeof pos:start="365:28" pos:end="365:47">sizeof<argument_list pos:start="365:34" pos:end="365:47">(<argument pos:start="365:35" pos:end="365:46"><expr pos:start="365:35" pos:end="365:46"><name pos:start="365:35" pos:end="365:46"><name pos:start="365:35" pos:end="365:36">nc</name><operator pos:start="365:37" pos:end="365:38">-&gt;</operator><name pos:start="365:39" pos:end="365:46">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

             <argument pos:start="367:14" pos:end="367:33"><expr pos:start="367:14" pos:end="367:33"><literal type="string" pos:start="367:14" pos:end="367:33">"net=%s,restrict=%s"</literal></expr></argument>, <argument pos:start="367:36" pos:end="367:49"><expr pos:start="367:36" pos:end="367:49"><call pos:start="367:36" pos:end="367:49"><name pos:start="367:36" pos:end="367:44">inet_ntoa</name><argument_list pos:start="367:45" pos:end="367:49">(<argument pos:start="367:46" pos:end="367:48"><expr pos:start="367:46" pos:end="367:48"><name pos:start="367:46" pos:end="367:48">net</name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="369:14" pos:end="369:38"><expr pos:start="369:14" pos:end="369:38"><ternary pos:start="369:14" pos:end="369:38"><condition pos:start="369:14" pos:end="369:25"><expr pos:start="369:14" pos:end="369:23"><name pos:start="369:14" pos:end="369:23">restricted</name></expr> ?</condition><then pos:start="369:27" pos:end="369:30"> <expr pos:start="369:27" pos:end="369:30"><literal type="string" pos:start="369:27" pos:end="369:30">"on"</literal></expr> </then><else pos:start="369:32" pos:end="369:38">: <expr pos:start="369:34" pos:end="369:38"><literal type="string" pos:start="369:34" pos:end="369:38">"off"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="373:5" pos:end="373:38"><expr pos:start="373:5" pos:end="373:37"><name pos:start="373:5" pos:end="373:5">s</name> <operator pos:start="373:7" pos:end="373:7">=</operator> <call pos:start="373:9" pos:end="373:37"><name pos:start="373:9" pos:end="373:17">DO_UPCAST</name><argument_list pos:start="373:18" pos:end="373:37">(<argument pos:start="373:19" pos:end="373:28"><expr pos:start="373:19" pos:end="373:28"><name pos:start="373:19" pos:end="373:28">SlirpState</name></expr></argument>, <argument pos:start="373:31" pos:end="373:32"><expr pos:start="373:31" pos:end="373:32"><name pos:start="373:31" pos:end="373:32">nc</name></expr></argument>, <argument pos:start="373:35" pos:end="373:36"><expr pos:start="373:35" pos:end="373:36"><name pos:start="373:35" pos:end="373:36">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="377:5" pos:end="383:54"><expr pos:start="377:5" pos:end="383:53"><name pos:start="377:5" pos:end="377:12"><name pos:start="377:5" pos:end="377:5">s</name><operator pos:start="377:6" pos:end="377:7">-&gt;</operator><name pos:start="377:8" pos:end="377:12">slirp</name></name> <operator pos:start="377:14" pos:end="377:14">=</operator> <call pos:start="377:16" pos:end="383:53"><name pos:start="377:16" pos:end="377:25">slirp_init</name><argument_list pos:start="377:26" pos:end="383:53">(<argument pos:start="377:27" pos:end="377:36"><expr pos:start="377:27" pos:end="377:36"><name pos:start="377:27" pos:end="377:36">restricted</name></expr></argument>, <argument pos:start="377:39" pos:end="377:42"><expr pos:start="377:39" pos:end="377:42"><name pos:start="377:39" pos:end="377:42">ipv4</name></expr></argument>, <argument pos:start="377:45" pos:end="377:47"><expr pos:start="377:45" pos:end="377:47"><name pos:start="377:45" pos:end="377:47">net</name></expr></argument>, <argument pos:start="377:50" pos:end="377:53"><expr pos:start="377:50" pos:end="377:53"><name pos:start="377:50" pos:end="377:53">mask</name></expr></argument>, <argument pos:start="377:56" pos:end="377:59"><expr pos:start="377:56" pos:end="377:59"><name pos:start="377:56" pos:end="377:59">host</name></expr></argument>,

                          <argument pos:start="379:27" pos:end="379:30"><expr pos:start="379:27" pos:end="379:30"><name pos:start="379:27" pos:end="379:30">ipv6</name></expr></argument>, <argument pos:start="379:33" pos:end="379:42"><expr pos:start="379:33" pos:end="379:42"><name pos:start="379:33" pos:end="379:42">ip6_prefix</name></expr></argument>, <argument pos:start="379:45" pos:end="379:56"><expr pos:start="379:45" pos:end="379:56"><name pos:start="379:45" pos:end="379:56">vprefix6_len</name></expr></argument>, <argument pos:start="379:59" pos:end="379:66"><expr pos:start="379:59" pos:end="379:66"><name pos:start="379:59" pos:end="379:66">ip6_host</name></expr></argument>,

                          <argument pos:start="381:27" pos:end="381:35"><expr pos:start="381:27" pos:end="381:35"><name pos:start="381:27" pos:end="381:35">vhostname</name></expr></argument>, <argument pos:start="381:38" pos:end="381:48"><expr pos:start="381:38" pos:end="381:48"><name pos:start="381:38" pos:end="381:48">tftp_export</name></expr></argument>, <argument pos:start="381:51" pos:end="381:58"><expr pos:start="381:51" pos:end="381:58"><name pos:start="381:51" pos:end="381:58">bootfile</name></expr></argument>, <argument pos:start="381:61" pos:end="381:64"><expr pos:start="381:61" pos:end="381:64"><name pos:start="381:61" pos:end="381:64">dhcp</name></expr></argument>,

                          <argument pos:start="383:27" pos:end="383:29"><expr pos:start="383:27" pos:end="383:29"><name pos:start="383:27" pos:end="383:29">dns</name></expr></argument>, <argument pos:start="383:32" pos:end="383:38"><expr pos:start="383:32" pos:end="383:38"><name pos:start="383:32" pos:end="383:38">ip6_dns</name></expr></argument>, <argument pos:start="383:41" pos:end="383:49"><expr pos:start="383:41" pos:end="383:49"><name pos:start="383:41" pos:end="383:49">dnssearch</name></expr></argument>, <argument pos:start="383:52" pos:end="383:52"><expr pos:start="383:52" pos:end="383:52"><name pos:start="383:52" pos:end="383:52">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="385:5" pos:end="385:48"><expr pos:start="385:5" pos:end="385:47"><call pos:start="385:5" pos:end="385:47"><name pos:start="385:5" pos:end="385:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="385:23" pos:end="385:47">(<argument pos:start="385:24" pos:end="385:36"><expr pos:start="385:24" pos:end="385:36"><operator pos:start="385:24" pos:end="385:24">&amp;</operator><name pos:start="385:25" pos:end="385:36">slirp_stacks</name></expr></argument>, <argument pos:start="385:39" pos:end="385:39"><expr pos:start="385:39" pos:end="385:39"><name pos:start="385:39" pos:end="385:39">s</name></expr></argument>, <argument pos:start="385:42" pos:end="385:46"><expr pos:start="385:42" pos:end="385:46"><name pos:start="385:42" pos:end="385:46">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="389:5" pos:end="412:0">for <control pos:start="389:9" pos:end="389:63">(<init pos:start="389:10" pos:end="389:32"><expr pos:start="389:10" pos:end="389:31"><name pos:start="389:10" pos:end="389:15">config</name> <operator pos:start="389:17" pos:end="389:17">=</operator> <name pos:start="389:19" pos:end="389:31">slirp_configs</name></expr>;</init> <condition pos:start="389:34" pos:end="389:40"><expr pos:start="389:34" pos:end="389:39"><name pos:start="389:34" pos:end="389:39">config</name></expr>;</condition> <incr pos:start="389:42" pos:end="389:62"><expr pos:start="389:42" pos:end="389:62"><name pos:start="389:42" pos:end="389:47">config</name> <operator pos:start="389:49" pos:end="389:49">=</operator> <name pos:start="389:51" pos:end="389:62"><name pos:start="389:51" pos:end="389:56">config</name><operator pos:start="389:57" pos:end="389:58">-&gt;</operator><name pos:start="389:59" pos:end="389:62">next</name></name></expr></incr>)</control> <block pos:start="389:65" pos:end="412:0">{<block_content pos:start="391:9" pos:end="407:9">

        <if_stmt pos:start="391:9" pos:end="407:9"><if pos:start="391:9" pos:end="399:9">if <condition pos:start="391:12" pos:end="391:46">(<expr pos:start="391:13" pos:end="391:45"><name pos:start="391:13" pos:end="391:25"><name pos:start="391:13" pos:end="391:18">config</name><operator pos:start="391:19" pos:end="391:20">-&gt;</operator><name pos:start="391:21" pos:end="391:25">flags</name></name> <operator pos:start="391:27" pos:end="391:27">&amp;</operator> <name pos:start="391:29" pos:end="391:45">SLIRP_CFG_HOSTFWD</name></expr>)</condition> <block pos:start="391:48" pos:end="399:9">{<block_content pos:start="393:13" pos:end="397:27">

            <if_stmt pos:start="393:13" pos:end="397:27"><if pos:start="393:13" pos:end="397:27">if <condition pos:start="393:16" pos:end="395:68">(<expr pos:start="393:17" pos:end="395:67"><call pos:start="393:17" pos:end="395:63"><name pos:start="393:17" pos:end="393:29">slirp_hostfwd</name><argument_list pos:start="393:30" pos:end="395:63">(<argument pos:start="393:31" pos:end="393:31"><expr pos:start="393:31" pos:end="393:31"><name pos:start="393:31" pos:end="393:31">s</name></expr></argument>, <argument pos:start="393:34" pos:end="393:44"><expr pos:start="393:34" pos:end="393:44"><name pos:start="393:34" pos:end="393:44"><name pos:start="393:34" pos:end="393:39">config</name><operator pos:start="393:40" pos:end="393:41">-&gt;</operator><name pos:start="393:42" pos:end="393:44">str</name></name></expr></argument>,

                              <argument pos:start="395:31" pos:end="395:62"><expr pos:start="395:31" pos:end="395:62"><name pos:start="395:31" pos:end="395:43"><name pos:start="395:31" pos:end="395:36">config</name><operator pos:start="395:37" pos:end="395:38">-&gt;</operator><name pos:start="395:39" pos:end="395:43">flags</name></name> <operator pos:start="395:45" pos:end="395:45">&amp;</operator> <name pos:start="395:47" pos:end="395:62">SLIRP_CFG_LEGACY</name></expr></argument>)</argument_list></call> <operator pos:start="395:65" pos:end="395:65">&lt;</operator> <literal type="number" pos:start="395:67" pos:end="395:67">0</literal></expr>)</condition><block type="pseudo" pos:start="397:17" pos:end="397:27"><block_content pos:start="397:17" pos:end="397:27">

                <goto pos:start="397:17" pos:end="397:27">goto <name pos:start="397:22" pos:end="397:26">error</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="399:11" pos:end="407:9">else <block pos:start="399:16" pos:end="407:9">{<block_content pos:start="401:13" pos:end="405:27">

            <if_stmt pos:start="401:13" pos:end="405:27"><if pos:start="401:13" pos:end="405:27">if <condition pos:start="401:16" pos:end="403:69">(<expr pos:start="401:17" pos:end="403:68"><call pos:start="401:17" pos:end="403:64"><name pos:start="401:17" pos:end="401:30">slirp_guestfwd</name><argument_list pos:start="401:31" pos:end="403:64">(<argument pos:start="401:32" pos:end="401:32"><expr pos:start="401:32" pos:end="401:32"><name pos:start="401:32" pos:end="401:32">s</name></expr></argument>, <argument pos:start="401:35" pos:end="401:45"><expr pos:start="401:35" pos:end="401:45"><name pos:start="401:35" pos:end="401:45"><name pos:start="401:35" pos:end="401:40">config</name><operator pos:start="401:41" pos:end="401:42">-&gt;</operator><name pos:start="401:43" pos:end="401:45">str</name></name></expr></argument>,

                               <argument pos:start="403:32" pos:end="403:63"><expr pos:start="403:32" pos:end="403:63"><name pos:start="403:32" pos:end="403:44"><name pos:start="403:32" pos:end="403:37">config</name><operator pos:start="403:38" pos:end="403:39">-&gt;</operator><name pos:start="403:40" pos:end="403:44">flags</name></name> <operator pos:start="403:46" pos:end="403:46">&amp;</operator> <name pos:start="403:48" pos:end="403:63">SLIRP_CFG_LEGACY</name></expr></argument>)</argument_list></call> <operator pos:start="403:66" pos:end="403:66">&lt;</operator> <literal type="number" pos:start="403:68" pos:end="403:68">0</literal></expr>)</condition><block type="pseudo" pos:start="405:17" pos:end="405:27"><block_content pos:start="405:17" pos:end="405:27">

                <goto pos:start="405:17" pos:end="405:27">goto <name pos:start="405:22" pos:end="405:26">error</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

<cpp:ifndef pos:start="411:1" pos:end="411:14">#<cpp:directive pos:start="411:2" pos:end="411:7">ifndef</cpp:directive> <name pos:start="411:9" pos:end="411:14">_WIN32</name></cpp:ifndef>

    <if_stmt pos:start="413:5" pos:end="417:5"><if pos:start="413:5" pos:end="417:5">if <condition pos:start="413:8" pos:end="413:20">(<expr pos:start="413:9" pos:end="413:19"><operator pos:start="413:9" pos:end="413:9">!</operator><name pos:start="413:10" pos:end="413:19">smb_export</name></expr>)</condition> <block pos:start="413:22" pos:end="417:5">{<block_content pos:start="415:9" pos:end="415:39">

        <expr_stmt pos:start="415:9" pos:end="415:39"><expr pos:start="415:9" pos:end="415:38"><name pos:start="415:9" pos:end="415:18">smb_export</name> <operator pos:start="415:20" pos:end="415:20">=</operator> <name pos:start="415:22" pos:end="415:38">legacy_smb_export</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="419:5" pos:end="428:0"><if pos:start="419:5" pos:end="428:0">if <condition pos:start="419:8" pos:end="419:19">(<expr pos:start="419:9" pos:end="419:18"><name pos:start="419:9" pos:end="419:18">smb_export</name></expr>)</condition> <block pos:start="419:21" pos:end="428:0">{<block_content pos:start="421:9" pos:end="423:23">

        <if_stmt pos:start="421:9" pos:end="423:23"><if pos:start="421:9" pos:end="423:23">if <condition pos:start="421:12" pos:end="421:49">(<expr pos:start="421:13" pos:end="421:48"><call pos:start="421:13" pos:end="421:44"><name pos:start="421:13" pos:end="421:21">slirp_smb</name><argument_list pos:start="421:22" pos:end="421:44">(<argument pos:start="421:23" pos:end="421:23"><expr pos:start="421:23" pos:end="421:23"><name pos:start="421:23" pos:end="421:23">s</name></expr></argument>, <argument pos:start="421:26" pos:end="421:35"><expr pos:start="421:26" pos:end="421:35"><name pos:start="421:26" pos:end="421:35">smb_export</name></expr></argument>, <argument pos:start="421:38" pos:end="421:43"><expr pos:start="421:38" pos:end="421:43"><name pos:start="421:38" pos:end="421:43">smbsrv</name></expr></argument>)</argument_list></call> <operator pos:start="421:46" pos:end="421:46">&lt;</operator> <literal type="number" pos:start="421:48" pos:end="421:48">0</literal></expr>)</condition><block type="pseudo" pos:start="423:13" pos:end="423:23"><block_content pos:start="423:13" pos:end="423:23">

            <goto pos:start="423:13" pos:end="423:23">goto <name pos:start="423:18" pos:end="423:22">error</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="427:1" pos:end="427:6">#<cpp:directive pos:start="427:2" pos:end="427:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="431:5" pos:end="431:45"><expr pos:start="431:5" pos:end="431:44"><name pos:start="431:5" pos:end="431:27"><name pos:start="431:5" pos:end="431:5">s</name><operator pos:start="431:6" pos:end="431:7">-&gt;</operator><name pos:start="431:8" pos:end="431:20">exit_notifier</name><operator pos:start="431:21" pos:end="431:21">.</operator><name pos:start="431:22" pos:end="431:27">notify</name></name> <operator pos:start="431:29" pos:end="431:29">=</operator> <name pos:start="431:31" pos:end="431:44">slirp_smb_exit</name></expr>;</expr_stmt>

    <expr_stmt pos:start="433:5" pos:end="433:46"><expr pos:start="433:5" pos:end="433:45"><call pos:start="433:5" pos:end="433:45"><name pos:start="433:5" pos:end="433:26">qemu_add_exit_notifier</name><argument_list pos:start="433:27" pos:end="433:45">(<argument pos:start="433:28" pos:end="433:44"><expr pos:start="433:28" pos:end="433:44"><operator pos:start="433:28" pos:end="433:28">&amp;</operator><name pos:start="433:29" pos:end="433:44"><name pos:start="433:29" pos:end="433:29">s</name><operator pos:start="433:30" pos:end="433:31">-&gt;</operator><name pos:start="433:32" pos:end="433:44">exit_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="435:5" pos:end="435:13">return <expr pos:start="435:12" pos:end="435:12"><literal type="number" pos:start="435:12" pos:end="435:12">0</literal></expr>;</return>



<label pos:start="439:1" pos:end="439:6"><name pos:start="439:1" pos:end="439:5">error</name>:</label>

    <expr_stmt pos:start="441:5" pos:end="441:28"><expr pos:start="441:5" pos:end="441:27"><call pos:start="441:5" pos:end="441:27"><name pos:start="441:5" pos:end="441:23">qemu_del_net_client</name><argument_list pos:start="441:24" pos:end="441:27">(<argument pos:start="441:25" pos:end="441:26"><expr pos:start="441:25" pos:end="441:26"><name pos:start="441:25" pos:end="441:26">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="443:5" pos:end="443:14">return <expr pos:start="443:12" pos:end="443:13"><operator pos:start="443:12" pos:end="443:12">-</operator><literal type="number" pos:start="443:13" pos:end="443:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
