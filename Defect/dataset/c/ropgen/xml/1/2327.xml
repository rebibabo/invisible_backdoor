<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2327.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">revert_cdlms</name><parameter_list pos:start="1:25" pos:end="1:58">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:39">WmallDecodeCtx</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:57">tile_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">icoef</name></decl>, <decl pos:start="5:16" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:18">ich</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:16">pred</name></decl>, <decl pos:start="7:19" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:19" pos:end="7:31">channel_coeff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">ilms</name></decl>, <decl pos:start="9:15" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:21">num_lms</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="57:5">for <control pos:start="13:9" pos:end="13:47">(<init pos:start="13:10" pos:end="13:17"><expr pos:start="13:10" pos:end="13:16"><name pos:start="13:10" pos:end="13:12">ich</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</init> <condition pos:start="13:19" pos:end="13:40"><expr pos:start="13:19" pos:end="13:39"><name pos:start="13:19" pos:end="13:21">ich</name> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <name pos:start="13:25" pos:end="13:39"><name pos:start="13:25" pos:end="13:25">s</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:39">num_channels</name></name></expr>;</condition> <incr pos:start="13:42" pos:end="13:46"><expr pos:start="13:42" pos:end="13:46"><name pos:start="13:42" pos:end="13:44">ich</name><operator pos:start="13:45" pos:end="13:46">++</operator></expr></incr>)</control> <block pos:start="13:49" pos:end="57:5">{<block_content pos:start="15:9" pos:end="55:9">

        <if_stmt pos:start="15:9" pos:end="17:21"><if pos:start="15:9" pos:end="17:21">if <condition pos:start="15:12" pos:end="15:38">(<expr pos:start="15:13" pos:end="15:37"><operator pos:start="15:13" pos:end="15:13">!</operator><name pos:start="15:14" pos:end="15:37"><name pos:start="15:14" pos:end="15:14">s</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:32">is_channel_coded</name><index pos:start="15:33" pos:end="15:37">[<expr pos:start="15:34" pos:end="15:36"><name pos:start="15:34" pos:end="15:36">ich</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:21"><block_content pos:start="17:13" pos:end="17:21">

            <continue pos:start="17:13" pos:end="17:21">continue;</continue></block_content></block></if></if_stmt>

        <for pos:start="19:9" pos:end="55:9">for <control pos:start="19:13" pos:end="19:51">(<init pos:start="19:14" pos:end="19:23"><expr pos:start="19:14" pos:end="19:22"><name pos:start="19:14" pos:end="19:18">icoef</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>;</init> <condition pos:start="19:25" pos:end="19:42"><expr pos:start="19:25" pos:end="19:41"><name pos:start="19:25" pos:end="19:29">icoef</name> <operator pos:start="19:31" pos:end="19:31">&lt;</operator> <name pos:start="19:33" pos:end="19:41">tile_size</name></expr>;</condition> <incr pos:start="19:44" pos:end="19:50"><expr pos:start="19:44" pos:end="19:50"><name pos:start="19:44" pos:end="19:48">icoef</name><operator pos:start="19:49" pos:end="19:50">++</operator></expr></incr>)</control> <block pos:start="19:53" pos:end="55:9">{<block_content pos:start="21:13" pos:end="53:58">

            <expr_stmt pos:start="21:13" pos:end="21:40"><expr pos:start="21:13" pos:end="21:39"><name pos:start="21:13" pos:end="21:19">num_lms</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:39"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:34">cdlms_ttl</name><index pos:start="21:35" pos:end="21:39">[<expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:38">ich</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:60"><expr pos:start="23:13" pos:end="23:59"><name pos:start="23:13" pos:end="23:25">channel_coeff</name> <operator pos:start="23:27" pos:end="23:27">=</operator> <name pos:start="23:29" pos:end="23:59"><name pos:start="23:29" pos:end="23:29">s</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:47">channel_residues</name><index pos:start="23:48" pos:end="23:52">[<expr pos:start="23:49" pos:end="23:51"><name pos:start="23:49" pos:end="23:51">ich</name></expr>]</index><index pos:start="23:53" pos:end="23:59">[<expr pos:start="23:54" pos:end="23:58"><name pos:start="23:54" pos:end="23:58">icoef</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="31:13"><if pos:start="25:13" pos:end="31:13">if <condition pos:start="25:16" pos:end="25:47">(<expr pos:start="25:17" pos:end="25:46"><name pos:start="25:17" pos:end="25:21">icoef</name> <operator pos:start="25:23" pos:end="25:24">==</operator> <name pos:start="25:26" pos:end="25:46"><name pos:start="25:26" pos:end="25:26">s</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:41">transient_pos</name><index pos:start="25:42" pos:end="25:46">[<expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:45">ich</name></expr>]</index></name></expr>)</condition> <block pos:start="25:49" pos:end="31:13">{<block_content pos:start="27:17" pos:end="29:46">

                <expr_stmt pos:start="27:17" pos:end="27:38"><expr pos:start="27:17" pos:end="27:37"><name pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:28">transient</name><index pos:start="27:29" pos:end="27:33">[<expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">ich</name></expr>]</index></name> <operator pos:start="27:35" pos:end="27:35">=</operator> <literal type="number" pos:start="27:37" pos:end="27:37">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:46"><expr pos:start="29:17" pos:end="29:45"><call pos:start="29:17" pos:end="29:45"><name pos:start="29:17" pos:end="29:37">use_high_update_speed</name><argument_list pos:start="29:38" pos:end="29:45">(<argument pos:start="29:39" pos:end="29:39"><expr pos:start="29:39" pos:end="29:39"><name pos:start="29:39" pos:end="29:39">s</name></expr></argument>, <argument pos:start="29:42" pos:end="29:44"><expr pos:start="29:42" pos:end="29:44"><name pos:start="29:42" pos:end="29:44">ich</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <for pos:start="33:13" pos:end="41:13">for <control pos:start="33:17" pos:end="33:51">(<init pos:start="33:18" pos:end="33:32"><expr pos:start="33:18" pos:end="33:31"><name pos:start="33:18" pos:end="33:21">ilms</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:31">num_lms</name></expr>;</init> <condition pos:start="33:34" pos:end="33:43"><expr pos:start="33:34" pos:end="33:42"><name pos:start="33:34" pos:end="33:37">ilms</name> <operator pos:start="33:39" pos:end="33:40">&gt;=</operator> <literal type="number" pos:start="33:42" pos:end="33:42">0</literal></expr>;</condition> <incr pos:start="33:45" pos:end="33:50"><expr pos:start="33:45" pos:end="33:50"><name pos:start="33:45" pos:end="33:48">ilms</name><operator pos:start="33:49" pos:end="33:50">--</operator></expr></incr>)</control> <block pos:start="33:53" pos:end="41:13">{<block_content pos:start="35:17" pos:end="39:62">

                <expr_stmt pos:start="35:17" pos:end="35:49"><expr pos:start="35:17" pos:end="35:48"><name pos:start="35:17" pos:end="35:20">pred</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <call pos:start="35:24" pos:end="35:48"><name pos:start="35:24" pos:end="35:34">lms_predict</name><argument_list pos:start="35:35" pos:end="35:48">(<argument pos:start="35:36" pos:end="35:36"><expr pos:start="35:36" pos:end="35:36"><name pos:start="35:36" pos:end="35:36">s</name></expr></argument>, <argument pos:start="35:39" pos:end="35:41"><expr pos:start="35:39" pos:end="35:41"><name pos:start="35:39" pos:end="35:41">ich</name></expr></argument>, <argument pos:start="35:44" pos:end="35:47"><expr pos:start="35:44" pos:end="35:47"><name pos:start="35:44" pos:end="35:47">ilms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:38"><expr pos:start="37:17" pos:end="37:37"><name pos:start="37:17" pos:end="37:29">channel_coeff</name> <operator pos:start="37:31" pos:end="37:32">+=</operator> <name pos:start="37:34" pos:end="37:37">pred</name></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:62"><expr pos:start="39:17" pos:end="39:61"><call pos:start="39:17" pos:end="39:61"><name pos:start="39:17" pos:end="39:26">lms_update</name><argument_list pos:start="39:27" pos:end="39:61">(<argument pos:start="39:28" pos:end="39:28"><expr pos:start="39:28" pos:end="39:28"><name pos:start="39:28" pos:end="39:28">s</name></expr></argument>, <argument pos:start="39:31" pos:end="39:33"><expr pos:start="39:31" pos:end="39:33"><name pos:start="39:31" pos:end="39:33">ich</name></expr></argument>, <argument pos:start="39:36" pos:end="39:39"><expr pos:start="39:36" pos:end="39:39"><name pos:start="39:36" pos:end="39:39">ilms</name></expr></argument>, <argument pos:start="39:42" pos:end="39:54"><expr pos:start="39:42" pos:end="39:54"><name pos:start="39:42" pos:end="39:54">channel_coeff</name></expr></argument>, <argument pos:start="39:57" pos:end="39:60"><expr pos:start="39:57" pos:end="39:60"><name pos:start="39:57" pos:end="39:60">pred</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="43:13" pos:end="51:13"><if pos:start="43:13" pos:end="51:13">if <condition pos:start="43:16" pos:end="43:34">(<expr pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:28">transient</name><index pos:start="43:29" pos:end="43:33">[<expr pos:start="43:30" pos:end="43:32"><name pos:start="43:30" pos:end="43:32">ich</name></expr>]</index></name></expr>)</condition> <block pos:start="43:36" pos:end="51:13">{<block_content pos:start="45:17" pos:end="49:52">

                <expr_stmt pos:start="45:17" pos:end="45:52"><expr pos:start="45:17" pos:end="45:51"><operator pos:start="45:17" pos:end="45:18">--</operator><name pos:start="45:19" pos:end="45:33"><name pos:start="45:19" pos:end="45:19">s</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:28">channel</name><index pos:start="45:29" pos:end="45:33">[<expr pos:start="45:30" pos:end="45:32"><name pos:start="45:30" pos:end="45:32">ich</name></expr>]</index></name><operator pos:start="45:34" pos:end="45:34">.</operator><name pos:start="45:35" pos:end="45:51">transient_counter</name></expr>;</expr_stmt>

                <if_stmt pos:start="47:17" pos:end="49:52"><if pos:start="47:17" pos:end="49:52">if<condition pos:start="47:19" pos:end="47:54">(<expr pos:start="47:20" pos:end="47:53"><operator pos:start="47:20" pos:end="47:20">!</operator><name pos:start="47:21" pos:end="47:35"><name pos:start="47:21" pos:end="47:21">s</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:30">channel</name><index pos:start="47:31" pos:end="47:35">[<expr pos:start="47:32" pos:end="47:34"><name pos:start="47:32" pos:end="47:34">ich</name></expr>]</index></name><operator pos:start="47:36" pos:end="47:36">.</operator><name pos:start="47:37" pos:end="47:53">transient_counter</name></expr>)</condition><block type="pseudo" pos:start="49:21" pos:end="49:52"><block_content pos:start="49:21" pos:end="49:52">

                    <expr_stmt pos:start="49:21" pos:end="49:52"><expr pos:start="49:21" pos:end="49:51"><call pos:start="49:21" pos:end="49:51"><name pos:start="49:21" pos:end="49:43">use_normal_update_speed</name><argument_list pos:start="49:44" pos:end="49:51">(<argument pos:start="49:45" pos:end="49:45"><expr pos:start="49:45" pos:end="49:45"><name pos:start="49:45" pos:end="49:45">s</name></expr></argument>, <argument pos:start="49:48" pos:end="49:50"><expr pos:start="49:48" pos:end="49:50"><name pos:start="49:48" pos:end="49:50">ich</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:58"><expr pos:start="53:13" pos:end="53:57"><name pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:29">channel_coeffs</name><index pos:start="53:30" pos:end="53:34">[<expr pos:start="53:31" pos:end="53:33"><name pos:start="53:31" pos:end="53:33">ich</name></expr>]</index><index pos:start="53:35" pos:end="53:41">[<expr pos:start="53:36" pos:end="53:40"><name pos:start="53:36" pos:end="53:40">icoef</name></expr>]</index></name> <operator pos:start="53:43" pos:end="53:43">=</operator> <name pos:start="53:45" pos:end="53:57">channel_coeff</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
