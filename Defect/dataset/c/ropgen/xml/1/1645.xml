<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1645.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_cmap_read_palette</name><parameter_list pos:start="1:25" pos:end="1:62">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">uint32_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pal</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">count</name></decl>, <decl pos:start="5:16" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:16">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:41">(<expr pos:start="9:9" pos:end="9:40"><name pos:start="9:9" pos:end="9:36"><name pos:start="9:9" pos:end="9:13">avctx</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:36">bits_per_coded_sample</name></name> <operator pos:start="9:38" pos:end="9:38">&gt;</operator> <literal type="number" pos:start="9:40" pos:end="9:40">8</literal></expr>)</condition> <block pos:start="9:43" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:35">

        <expr_stmt pos:start="11:9" pos:end="11:80"><expr pos:start="11:9" pos:end="11:79"><call pos:start="11:9" pos:end="11:79"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="11:79">(<argument pos:start="11:16" pos:end="11:20"><expr pos:start="11:16" pos:end="11:20"><name pos:start="11:16" pos:end="11:20">avctx</name></expr></argument>, <argument pos:start="11:23" pos:end="11:34"><expr pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="11:37" pos:end="11:78"><expr pos:start="11:37" pos:end="11:78"><literal type="string" pos:start="11:37" pos:end="11:78">"bit_per_coded_sample &gt; 8 not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:35">return <expr pos:start="13:16" pos:end="13:34"><name pos:start="13:16" pos:end="13:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:9">count</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <literal type="number" pos:start="19:13" pos:end="19:13">1</literal> <operator pos:start="19:15" pos:end="19:16">&lt;&lt;</operator> <name pos:start="19:18" pos:end="19:45"><name pos:start="19:18" pos:end="19:22">avctx</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:45">bits_per_coded_sample</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:42">(<expr pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:13">avctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:29">extradata_size</name></name> <operator pos:start="21:31" pos:end="21:31">&lt;</operator> <name pos:start="21:33" pos:end="21:37">count</name> <operator pos:start="21:39" pos:end="21:39">*</operator> <literal type="number" pos:start="21:41" pos:end="21:41">3</literal></expr>)</condition> <block pos:start="21:44" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:35">

        <expr_stmt pos:start="23:9" pos:end="23:64"><expr pos:start="23:9" pos:end="23:63"><call pos:start="23:9" pos:end="23:63"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:63">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:37" pos:end="23:62"><expr pos:start="23:37" pos:end="23:62"><literal type="string" pos:start="23:37" pos:end="23:62">"palette data underflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="29:5" pos:end="33:5">for <control pos:start="29:9" pos:end="29:29">(<init pos:start="29:10" pos:end="29:13"><expr pos:start="29:10" pos:end="29:12"><name pos:start="29:10" pos:end="29:10">i</name><operator pos:start="29:11" pos:end="29:11">=</operator><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</init> <condition pos:start="29:15" pos:end="29:24"><expr pos:start="29:15" pos:end="29:23"><name pos:start="29:15" pos:end="29:15">i</name> <operator pos:start="29:17" pos:end="29:17">&lt;</operator> <name pos:start="29:19" pos:end="29:23">count</name></expr>;</condition> <incr pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:26">i</name><operator pos:start="29:27" pos:end="29:28">++</operator></expr></incr>)</control> <block pos:start="29:31" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:64">

        <expr_stmt pos:start="31:9" pos:end="31:64"><expr pos:start="31:9" pos:end="31:63"><name pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:11">pal</name><index pos:start="31:12" pos:end="31:14">[<expr pos:start="31:13" pos:end="31:13"><name pos:start="31:13" pos:end="31:13">i</name></expr>]</index></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:27">0xFF000000</literal> <operator pos:start="31:29" pos:end="31:29">|</operator> <call pos:start="31:31" pos:end="31:63"><name pos:start="31:31" pos:end="31:37">AV_RB24</name><argument_list pos:start="31:38" pos:end="31:63">( <argument pos:start="31:40" pos:end="31:61"><expr pos:start="31:40" pos:end="31:61"><name pos:start="31:40" pos:end="31:55"><name pos:start="31:40" pos:end="31:44">avctx</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:55">extradata</name></name> <operator pos:start="31:57" pos:end="31:57">+</operator> <name pos:start="31:59" pos:end="31:59">i</name><operator pos:start="31:60" pos:end="31:60">*</operator><literal type="number" pos:start="31:61" pos:end="31:61">3</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
