<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13259.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:35"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name> <name pos:start="1:30" pos:end="1:35">RENAME</name></type>(<name pos:start="1:37" pos:end="1:47">decode_line</name>)<parameter_list pos:start="1:49" pos:end="5:75">(<parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:60">FFV1Context</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:63">s</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:70"><decl pos:start="1:66" pos:end="1:70"><type pos:start="1:66" pos:end="1:70"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:70">w</name></decl></parameter>,

                                                 <parameter pos:start="3:50" pos:end="3:64"><decl pos:start="3:50" pos:end="3:64"><type pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:53">TYPE</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:64"><name pos:start="3:56" pos:end="3:61">sample</name><index pos:start="3:62" pos:end="3:64">[<expr pos:start="3:63" pos:end="3:63"><literal type="number" pos:start="3:63" pos:end="3:63">2</literal></expr>]</index></name></decl></parameter>,

                                                 <parameter pos:start="5:50" pos:end="5:64"><decl pos:start="5:50" pos:end="5:64"><type pos:start="5:50" pos:end="5:64"><name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:64">plane_index</name></decl></parameter>, <parameter pos:start="5:67" pos:end="5:74"><decl pos:start="5:67" pos:end="5:74"><type pos:start="5:67" pos:end="5:74"><name pos:start="5:67" pos:end="5:69">int</name></type> <name pos:start="5:71" pos:end="5:74">bits</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="163:1">{<block_content pos:start="9:5" pos:end="161:29">

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:16">PlaneContext</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier><specifier pos:start="9:19" pos:end="9:23">const</specifier></type> <name pos:start="9:25" pos:end="9:25">p</name> <init pos:start="9:27" pos:end="9:50">= <expr pos:start="9:29" pos:end="9:50"><operator pos:start="9:29" pos:end="9:29">&amp;</operator><name pos:start="9:30" pos:end="9:50"><name pos:start="9:30" pos:end="9:30">s</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:37">plane</name><index pos:start="9:38" pos:end="9:50">[<expr pos:start="9:39" pos:end="9:49"><name pos:start="9:39" pos:end="9:49">plane_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:14">RangeCoder</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier><specifier pos:start="11:17" pos:end="11:21">const</specifier></type> <name pos:start="11:23" pos:end="11:23">c</name>   <init pos:start="11:27" pos:end="11:33">= <expr pos:start="11:29" pos:end="11:33"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:33"><name pos:start="11:30" pos:end="11:30">s</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:33">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">x</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">run_count</name> <init pos:start="15:19" pos:end="15:21">= <expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">run_mode</name>  <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">run_index</name> <init pos:start="19:19" pos:end="19:32">= <expr pos:start="19:21" pos:end="19:32"><name pos:start="19:21" pos:end="19:32"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:32">run_index</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="45:5"><if pos:start="23:5" pos:end="45:5">if <condition pos:start="23:8" pos:end="23:34">(<expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:28">slice_coding_mode</name></name> <operator pos:start="23:30" pos:end="23:31">==</operator> <literal type="number" pos:start="23:33" pos:end="23:33">1</literal></expr>)</condition> <block pos:start="23:36" pos:end="45:5">{<block_content pos:start="25:9" pos:end="43:15">

        <decl_stmt pos:start="25:9" pos:end="25:14"><decl pos:start="25:9" pos:end="25:13"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">i</name></decl>;</decl_stmt>

        <for pos:start="27:9" pos:end="41:9">for <control pos:start="27:13" pos:end="27:31">(<init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">x</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:21">x</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <name pos:start="27:25" pos:end="27:25">w</name></expr>;</condition> <incr pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:28">x</name><operator pos:start="27:29" pos:end="27:30">++</operator></expr></incr>)</control> <block pos:start="27:33" pos:end="41:9">{<block_content pos:start="29:13" pos:end="39:29">

            <decl_stmt pos:start="29:13" pos:end="29:22"><decl pos:start="29:13" pos:end="29:21"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:17">v</name> <init pos:start="29:19" pos:end="29:21">= <expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="31:13" pos:end="37:13">for <control pos:start="31:17" pos:end="31:34">(<init pos:start="31:18" pos:end="31:21"><expr pos:start="31:18" pos:end="31:20"><name pos:start="31:18" pos:end="31:18">i</name><operator pos:start="31:19" pos:end="31:19">=</operator><literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>;</init> <condition pos:start="31:23" pos:end="31:29"><expr pos:start="31:23" pos:end="31:28"><name pos:start="31:23" pos:end="31:23">i</name><operator pos:start="31:24" pos:end="31:24">&lt;</operator><name pos:start="31:25" pos:end="31:28">bits</name></expr>;</condition> <incr pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:31">i</name><operator pos:start="31:32" pos:end="31:33">++</operator></expr></incr>)</control> <block pos:start="31:36" pos:end="37:13">{<block_content pos:start="33:17" pos:end="35:44">

                <decl_stmt pos:start="33:17" pos:end="33:36"><decl pos:start="33:17" pos:end="33:35"><type pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:23">uint8_t</name></type> <name pos:start="33:25" pos:end="33:29">state</name> <init pos:start="33:31" pos:end="33:35">= <expr pos:start="33:33" pos:end="33:35"><literal type="number" pos:start="33:33" pos:end="33:35">128</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:44"><expr pos:start="35:17" pos:end="35:43"><name pos:start="35:17" pos:end="35:17">v</name> <operator pos:start="35:19" pos:end="35:20">+=</operator> <name pos:start="35:22" pos:end="35:22">v</name> <operator pos:start="35:24" pos:end="35:24">+</operator> <call pos:start="35:26" pos:end="35:43"><name pos:start="35:26" pos:end="35:32">get_rac</name><argument_list pos:start="35:33" pos:end="35:43">(<argument pos:start="35:34" pos:end="35:34"><expr pos:start="35:34" pos:end="35:34"><name pos:start="35:34" pos:end="35:34">c</name></expr></argument>, <argument pos:start="35:37" pos:end="35:42"><expr pos:start="35:37" pos:end="35:42"><operator pos:start="35:37" pos:end="35:37">&amp;</operator><name pos:start="35:38" pos:end="35:42">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="39:13" pos:end="39:29"><expr pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:18">sample</name><index pos:start="39:19" pos:end="39:21">[<expr pos:start="39:20" pos:end="39:20"><literal type="number" pos:start="39:20" pos:end="39:20">1</literal></expr>]</index><index pos:start="39:22" pos:end="39:24">[<expr pos:start="39:23" pos:end="39:23"><name pos:start="39:23" pos:end="39:23">x</name></expr>]</index></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <name pos:start="39:28" pos:end="39:28">v</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="49:5" pos:end="159:5">for <control pos:start="49:9" pos:end="49:27">(<init pos:start="49:10" pos:end="49:15"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">x</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</init> <condition pos:start="49:17" pos:end="49:22"><expr pos:start="49:17" pos:end="49:21"><name pos:start="49:17" pos:end="49:17">x</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <name pos:start="49:21" pos:end="49:21">w</name></expr>;</condition> <incr pos:start="49:24" pos:end="49:26"><expr pos:start="49:24" pos:end="49:26"><name pos:start="49:24" pos:end="49:24">x</name><operator pos:start="49:25" pos:end="49:26">++</operator></expr></incr>)</control> <block pos:start="49:29" pos:end="159:5">{<block_content pos:start="51:9" pos:end="157:104">

        <decl_stmt pos:start="51:9" pos:end="51:32"><decl pos:start="51:9" pos:end="51:16"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:16">diff</name></decl>, <decl pos:start="51:19" pos:end="51:25"><type ref="prev" pos:start="51:9" pos:end="51:11"/><name pos:start="51:19" pos:end="51:25">context</name></decl>, <decl pos:start="51:28" pos:end="51:31"><type ref="prev" pos:start="51:9" pos:end="51:11"/><name pos:start="51:28" pos:end="51:31">sign</name></decl>;</decl_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:86"><expr pos:start="55:9" pos:end="55:85"><name pos:start="55:9" pos:end="55:15">context</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:85"><call pos:start="55:19" pos:end="55:37"><name pos:start="55:19" pos:end="55:24">RENAME</name><argument_list pos:start="55:25" pos:end="55:37">(<argument pos:start="55:26" pos:end="55:36"><expr pos:start="55:26" pos:end="55:36"><name pos:start="55:26" pos:end="55:36">get_context</name></expr></argument>)</argument_list></call><argument_list pos:start="55:38" pos:end="55:85">(<argument pos:start="55:39" pos:end="55:39"><expr pos:start="55:39" pos:end="55:39"><name pos:start="55:39" pos:end="55:39">p</name></expr></argument>, <argument pos:start="55:42" pos:end="55:54"><expr pos:start="55:42" pos:end="55:54"><name pos:start="55:42" pos:end="55:50"><name pos:start="55:42" pos:end="55:47">sample</name><index pos:start="55:48" pos:end="55:50">[<expr pos:start="55:49" pos:end="55:49"><literal type="number" pos:start="55:49" pos:end="55:49">1</literal></expr>]</index></name> <operator pos:start="55:52" pos:end="55:52">+</operator> <name pos:start="55:54" pos:end="55:54">x</name></expr></argument>, <argument pos:start="55:57" pos:end="55:69"><expr pos:start="55:57" pos:end="55:69"><name pos:start="55:57" pos:end="55:65"><name pos:start="55:57" pos:end="55:62">sample</name><index pos:start="55:63" pos:end="55:65">[<expr pos:start="55:64" pos:end="55:64"><literal type="number" pos:start="55:64" pos:end="55:64">0</literal></expr>]</index></name> <operator pos:start="55:67" pos:end="55:67">+</operator> <name pos:start="55:69" pos:end="55:69">x</name></expr></argument>, <argument pos:start="55:72" pos:end="55:84"><expr pos:start="55:72" pos:end="55:84"><name pos:start="55:72" pos:end="55:80"><name pos:start="55:72" pos:end="55:77">sample</name><index pos:start="55:78" pos:end="55:80">[<expr pos:start="55:79" pos:end="55:79"><literal type="number" pos:start="55:79" pos:end="55:79">1</literal></expr>]</index></name> <operator pos:start="55:82" pos:end="55:82">+</operator> <name pos:start="55:84" pos:end="55:84">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="65:21"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:24">(<expr pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:19">context</name> <operator pos:start="57:21" pos:end="57:21">&lt;</operator> <literal type="number" pos:start="57:23" pos:end="57:23">0</literal></expr>)</condition> <block pos:start="57:26" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:24">

            <expr_stmt pos:start="59:13" pos:end="59:31"><expr pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:19">context</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <operator pos:start="59:23" pos:end="59:23">-</operator><name pos:start="59:24" pos:end="59:30">context</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:24"><expr pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:16">sign</name>    <operator pos:start="61:21" pos:end="61:21">=</operator> <literal type="number" pos:start="61:23" pos:end="61:23">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="65:21">else<block type="pseudo" pos:start="65:13" pos:end="65:21"><block_content pos:start="65:13" pos:end="65:21">

            <expr_stmt pos:start="65:13" pos:end="65:21"><expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:16">sign</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:47"><expr pos:start="69:9" pos:end="69:46"><call pos:start="69:9" pos:end="69:46"><name pos:start="69:9" pos:end="69:18">av_assert2</name><argument_list pos:start="69:19" pos:end="69:46">(<argument pos:start="69:20" pos:end="69:45"><expr pos:start="69:20" pos:end="69:45"><name pos:start="69:20" pos:end="69:26">context</name> <operator pos:start="69:28" pos:end="69:28">&lt;</operator> <name pos:start="69:30" pos:end="69:45"><name pos:start="69:30" pos:end="69:30">p</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:45">context_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="73:9" pos:end="147:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:36">(<expr pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:17"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:17">ac</name></name> <operator pos:start="73:19" pos:end="73:20">!=</operator> <name pos:start="73:22" pos:end="73:35">AC_GOLOMB_RICE</name></expr>)</condition> <block pos:start="73:38" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:62">

            <expr_stmt pos:start="75:13" pos:end="75:62"><expr pos:start="75:13" pos:end="75:61"><name pos:start="75:13" pos:end="75:16">diff</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <call pos:start="75:20" pos:end="75:61"><name pos:start="75:20" pos:end="75:36">get_symbol_inline</name><argument_list pos:start="75:37" pos:end="75:61">(<argument pos:start="75:38" pos:end="75:38"><expr pos:start="75:38" pos:end="75:38"><name pos:start="75:38" pos:end="75:38">c</name></expr></argument>, <argument pos:start="75:41" pos:end="75:57"><expr pos:start="75:41" pos:end="75:57"><name pos:start="75:41" pos:end="75:57"><name pos:start="75:41" pos:end="75:41">p</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:48">state</name><index pos:start="75:49" pos:end="75:57">[<expr pos:start="75:50" pos:end="75:56"><name pos:start="75:50" pos:end="75:56">context</name></expr>]</index></name></expr></argument>, <argument pos:start="75:60" pos:end="75:60"><expr pos:start="75:60" pos:end="75:60"><literal type="number" pos:start="75:60" pos:end="75:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="147:9">else <block pos:start="77:16" pos:end="147:9">{<block_content pos:start="79:13" pos:end="145:79">

            <if_stmt pos:start="79:13" pos:end="81:29"><if pos:start="79:13" pos:end="81:29">if <condition pos:start="79:16" pos:end="79:46">(<expr pos:start="79:17" pos:end="79:45"><name pos:start="79:17" pos:end="79:23">context</name> <operator pos:start="79:25" pos:end="79:26">==</operator> <literal type="number" pos:start="79:28" pos:end="79:28">0</literal> <operator pos:start="79:30" pos:end="79:31">&amp;&amp;</operator> <name pos:start="79:33" pos:end="79:40">run_mode</name> <operator pos:start="79:42" pos:end="79:43">==</operator> <literal type="number" pos:start="79:45" pos:end="79:45">0</literal></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:29"><block_content pos:start="81:17" pos:end="81:29">

                <expr_stmt pos:start="81:17" pos:end="81:29"><expr pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:24">run_mode</name> <operator pos:start="81:26" pos:end="81:26">=</operator> <literal type="number" pos:start="81:28" pos:end="81:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="85:13" pos:end="139:76"><if pos:start="85:13" pos:end="137:13">if <condition pos:start="85:16" pos:end="85:25">(<expr pos:start="85:17" pos:end="85:24"><name pos:start="85:17" pos:end="85:24">run_mode</name></expr>)</condition> <block pos:start="85:27" pos:end="137:13">{<block_content pos:start="87:17" pos:end="135:29">

                <if_stmt pos:start="87:17" pos:end="115:17"><if pos:start="87:17" pos:end="115:17">if <condition pos:start="87:20" pos:end="87:52">(<expr pos:start="87:21" pos:end="87:51"><name pos:start="87:21" pos:end="87:29">run_count</name> <operator pos:start="87:31" pos:end="87:32">==</operator> <literal type="number" pos:start="87:34" pos:end="87:34">0</literal> <operator pos:start="87:36" pos:end="87:37">&amp;&amp;</operator> <name pos:start="87:39" pos:end="87:46">run_mode</name> <operator pos:start="87:48" pos:end="87:49">==</operator> <literal type="number" pos:start="87:51" pos:end="87:51">1</literal></expr>)</condition> <block pos:start="87:54" pos:end="115:17">{<block_content pos:start="89:21" pos:end="113:21">

                    <if_stmt pos:start="89:21" pos:end="113:21"><if pos:start="89:21" pos:end="97:21">if <condition pos:start="89:24" pos:end="89:42">(<expr pos:start="89:25" pos:end="89:41"><call pos:start="89:25" pos:end="89:41"><name pos:start="89:25" pos:end="89:33">get_bits1</name><argument_list pos:start="89:34" pos:end="89:41">(<argument pos:start="89:35" pos:end="89:40"><expr pos:start="89:35" pos:end="89:40"><operator pos:start="89:35" pos:end="89:35">&amp;</operator><name pos:start="89:36" pos:end="89:40"><name pos:start="89:36" pos:end="89:36">s</name><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:40">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:44" pos:end="97:21">{<block_content pos:start="91:25" pos:end="95:40">

                        <expr_stmt pos:start="91:25" pos:end="91:64"><expr pos:start="91:25" pos:end="91:63"><name pos:start="91:25" pos:end="91:33">run_count</name> <operator pos:start="91:35" pos:end="91:35">=</operator> <literal type="number" pos:start="91:37" pos:end="91:37">1</literal> <operator pos:start="91:39" pos:end="91:40">&lt;&lt;</operator> <name pos:start="91:42" pos:end="91:63"><name pos:start="91:42" pos:end="91:52">ff_log2_run</name><index pos:start="91:53" pos:end="91:63">[<expr pos:start="91:54" pos:end="91:62"><name pos:start="91:54" pos:end="91:62">run_index</name></expr>]</index></name></expr>;</expr_stmt>

                        <if_stmt pos:start="93:25" pos:end="95:40"><if pos:start="93:25" pos:end="95:40">if <condition pos:start="93:28" pos:end="93:47">(<expr pos:start="93:29" pos:end="93:46"><name pos:start="93:29" pos:end="93:29">x</name> <operator pos:start="93:31" pos:end="93:31">+</operator> <name pos:start="93:33" pos:end="93:41">run_count</name> <operator pos:start="93:43" pos:end="93:44">&lt;=</operator> <name pos:start="93:46" pos:end="93:46">w</name></expr>)</condition><block type="pseudo" pos:start="95:29" pos:end="95:40"><block_content pos:start="95:29" pos:end="95:40">

                            <expr_stmt pos:start="95:29" pos:end="95:40"><expr pos:start="95:29" pos:end="95:39"><name pos:start="95:29" pos:end="95:37">run_index</name><operator pos:start="95:38" pos:end="95:39">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <else pos:start="97:23" pos:end="113:21">else <block pos:start="97:28" pos:end="113:21">{<block_content pos:start="99:25" pos:end="111:37">

                        <if_stmt pos:start="99:25" pos:end="105:42"><if pos:start="99:25" pos:end="101:81">if <condition pos:start="99:28" pos:end="99:51">(<expr pos:start="99:29" pos:end="99:50"><name pos:start="99:29" pos:end="99:50"><name pos:start="99:29" pos:end="99:39">ff_log2_run</name><index pos:start="99:40" pos:end="99:50">[<expr pos:start="99:41" pos:end="99:49"><name pos:start="99:41" pos:end="99:49">run_index</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="101:29" pos:end="101:81"><block_content pos:start="101:29" pos:end="101:81">

                            <expr_stmt pos:start="101:29" pos:end="101:81"><expr pos:start="101:29" pos:end="101:80"><name pos:start="101:29" pos:end="101:37">run_count</name> <operator pos:start="101:39" pos:end="101:39">=</operator> <call pos:start="101:41" pos:end="101:80"><name pos:start="101:41" pos:end="101:48">get_bits</name><argument_list pos:start="101:49" pos:end="101:80">(<argument pos:start="101:50" pos:end="101:55"><expr pos:start="101:50" pos:end="101:55"><operator pos:start="101:50" pos:end="101:50">&amp;</operator><name pos:start="101:51" pos:end="101:55"><name pos:start="101:51" pos:end="101:51">s</name><operator pos:start="101:52" pos:end="101:53">-&gt;</operator><name pos:start="101:54" pos:end="101:55">gb</name></name></expr></argument>, <argument pos:start="101:58" pos:end="101:79"><expr pos:start="101:58" pos:end="101:79"><name pos:start="101:58" pos:end="101:79"><name pos:start="101:58" pos:end="101:68">ff_log2_run</name><index pos:start="101:69" pos:end="101:79">[<expr pos:start="101:70" pos:end="101:78"><name pos:start="101:70" pos:end="101:78">run_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="103:25" pos:end="105:42">else<block type="pseudo" pos:start="105:29" pos:end="105:42"><block_content pos:start="105:29" pos:end="105:42">

                            <expr_stmt pos:start="105:29" pos:end="105:42"><expr pos:start="105:29" pos:end="105:41"><name pos:start="105:29" pos:end="105:37">run_count</name> <operator pos:start="105:39" pos:end="105:39">=</operator> <literal type="number" pos:start="105:41" pos:end="105:41">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <if_stmt pos:start="107:25" pos:end="109:40"><if pos:start="107:25" pos:end="109:40">if <condition pos:start="107:28" pos:end="107:38">(<expr pos:start="107:29" pos:end="107:37"><name pos:start="107:29" pos:end="107:37">run_index</name></expr>)</condition><block type="pseudo" pos:start="109:29" pos:end="109:40"><block_content pos:start="109:29" pos:end="109:40">

                            <expr_stmt pos:start="109:29" pos:end="109:40"><expr pos:start="109:29" pos:end="109:39"><name pos:start="109:29" pos:end="109:37">run_index</name><operator pos:start="109:38" pos:end="109:39">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="111:25" pos:end="111:37"><expr pos:start="111:25" pos:end="111:36"><name pos:start="111:25" pos:end="111:32">run_mode</name> <operator pos:start="111:34" pos:end="111:34">=</operator> <literal type="number" pos:start="111:36" pos:end="111:36">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:28"><expr pos:start="117:17" pos:end="117:27"><name pos:start="117:17" pos:end="117:25">run_count</name><operator pos:start="117:26" pos:end="117:27">--</operator></expr>;</expr_stmt>

                <if_stmt pos:start="119:17" pos:end="135:29"><if pos:start="119:17" pos:end="133:17">if <condition pos:start="119:20" pos:end="119:34">(<expr pos:start="119:21" pos:end="119:33"><name pos:start="119:21" pos:end="119:29">run_count</name> <operator pos:start="119:31" pos:end="119:31">&lt;</operator> <literal type="number" pos:start="119:33" pos:end="119:33">0</literal></expr>)</condition> <block pos:start="119:36" pos:end="133:17">{<block_content pos:start="121:21" pos:end="131:31">

                    <expr_stmt pos:start="121:21" pos:end="121:34"><expr pos:start="121:21" pos:end="121:33"><name pos:start="121:21" pos:end="121:28">run_mode</name>  <operator pos:start="121:31" pos:end="121:31">=</operator> <literal type="number" pos:start="121:33" pos:end="121:33">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="123:21" pos:end="123:34"><expr pos:start="123:21" pos:end="123:33"><name pos:start="123:21" pos:end="123:29">run_count</name> <operator pos:start="123:31" pos:end="123:31">=</operator> <literal type="number" pos:start="123:33" pos:end="123:33">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="125:21" pos:end="127:53"><expr pos:start="125:21" pos:end="127:52"><name pos:start="125:21" pos:end="125:24">diff</name>      <operator pos:start="125:31" pos:end="125:31">=</operator> <call pos:start="125:33" pos:end="127:52"><name pos:start="125:33" pos:end="125:46">get_vlc_symbol</name><argument_list pos:start="125:47" pos:end="127:52">(<argument pos:start="125:48" pos:end="125:53"><expr pos:start="125:48" pos:end="125:53"><operator pos:start="125:48" pos:end="125:48">&amp;</operator><name pos:start="125:49" pos:end="125:53"><name pos:start="125:49" pos:end="125:49">s</name><operator pos:start="125:50" pos:end="125:51">-&gt;</operator><name pos:start="125:52" pos:end="125:53">gb</name></name></expr></argument>, <argument pos:start="125:56" pos:end="125:77"><expr pos:start="125:56" pos:end="125:77"><operator pos:start="125:56" pos:end="125:56">&amp;</operator><name pos:start="125:57" pos:end="125:77"><name pos:start="125:57" pos:end="125:57">p</name><operator pos:start="125:58" pos:end="125:59">-&gt;</operator><name pos:start="125:60" pos:end="125:68">vlc_state</name><index pos:start="125:69" pos:end="125:77">[<expr pos:start="125:70" pos:end="125:76"><name pos:start="125:70" pos:end="125:76">context</name></expr>]</index></name></expr></argument>,

                                               <argument pos:start="127:48" pos:end="127:51"><expr pos:start="127:48" pos:end="127:51"><name pos:start="127:48" pos:end="127:51">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="129:21" pos:end="131:31"><if pos:start="129:21" pos:end="131:31">if <condition pos:start="129:24" pos:end="129:34">(<expr pos:start="129:25" pos:end="129:33"><name pos:start="129:25" pos:end="129:28">diff</name> <operator pos:start="129:30" pos:end="129:31">&gt;=</operator> <literal type="number" pos:start="129:33" pos:end="129:33">0</literal></expr>)</condition><block type="pseudo" pos:start="131:25" pos:end="131:31"><block_content pos:start="131:25" pos:end="131:31">

                        <expr_stmt pos:start="131:25" pos:end="131:31"><expr pos:start="131:25" pos:end="131:30"><name pos:start="131:25" pos:end="131:28">diff</name><operator pos:start="131:29" pos:end="131:30">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="133:19" pos:end="135:29">else<block type="pseudo" pos:start="135:21" pos:end="135:29"><block_content pos:start="135:21" pos:end="135:29">

                    <expr_stmt pos:start="135:21" pos:end="135:29"><expr pos:start="135:21" pos:end="135:28"><name pos:start="135:21" pos:end="135:24">diff</name> <operator pos:start="135:26" pos:end="135:26">=</operator> <literal type="number" pos:start="135:28" pos:end="135:28">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="137:15" pos:end="139:76">else<block type="pseudo" pos:start="139:17" pos:end="139:76"><block_content pos:start="139:17" pos:end="139:76">

                <expr_stmt pos:start="139:17" pos:end="139:76"><expr pos:start="139:17" pos:end="139:75"><name pos:start="139:17" pos:end="139:20">diff</name> <operator pos:start="139:22" pos:end="139:22">=</operator> <call pos:start="139:24" pos:end="139:75"><name pos:start="139:24" pos:end="139:37">get_vlc_symbol</name><argument_list pos:start="139:38" pos:end="139:75">(<argument pos:start="139:39" pos:end="139:44"><expr pos:start="139:39" pos:end="139:44"><operator pos:start="139:39" pos:end="139:39">&amp;</operator><name pos:start="139:40" pos:end="139:44"><name pos:start="139:40" pos:end="139:40">s</name><operator pos:start="139:41" pos:end="139:42">-&gt;</operator><name pos:start="139:43" pos:end="139:44">gb</name></name></expr></argument>, <argument pos:start="139:47" pos:end="139:68"><expr pos:start="139:47" pos:end="139:68"><operator pos:start="139:47" pos:end="139:47">&amp;</operator><name pos:start="139:48" pos:end="139:68"><name pos:start="139:48" pos:end="139:48">p</name><operator pos:start="139:49" pos:end="139:50">-&gt;</operator><name pos:start="139:51" pos:end="139:59">vlc_state</name><index pos:start="139:60" pos:end="139:68">[<expr pos:start="139:61" pos:end="139:67"><name pos:start="139:61" pos:end="139:67">context</name></expr>]</index></name></expr></argument>, <argument pos:start="139:71" pos:end="139:74"><expr pos:start="139:71" pos:end="139:74"><name pos:start="139:71" pos:end="139:74">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="143:13" pos:end="145:79"><expr pos:start="143:13" pos:end="145:78"><call pos:start="143:13" pos:end="145:78"><name pos:start="143:13" pos:end="143:19">ff_dlog</name><argument_list pos:start="143:20" pos:end="145:78">(<argument pos:start="143:21" pos:end="143:28"><expr pos:start="143:21" pos:end="143:28"><name pos:start="143:21" pos:end="143:28"><name pos:start="143:21" pos:end="143:21">s</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:28">avctx</name></name></expr></argument>, <argument pos:start="143:31" pos:end="143:73"><expr pos:start="143:31" pos:end="143:73"><literal type="string" pos:start="143:31" pos:end="143:73">"count:%d index:%d, mode:%d, x:%d pos:%d\n"</literal></expr></argument>,

                    <argument pos:start="145:21" pos:end="145:29"><expr pos:start="145:21" pos:end="145:29"><name pos:start="145:21" pos:end="145:29">run_count</name></expr></argument>, <argument pos:start="145:32" pos:end="145:40"><expr pos:start="145:32" pos:end="145:40"><name pos:start="145:32" pos:end="145:40">run_index</name></expr></argument>, <argument pos:start="145:43" pos:end="145:50"><expr pos:start="145:43" pos:end="145:50"><name pos:start="145:43" pos:end="145:50">run_mode</name></expr></argument>, <argument pos:start="145:53" pos:end="145:53"><expr pos:start="145:53" pos:end="145:53"><name pos:start="145:53" pos:end="145:53">x</name></expr></argument>, <argument pos:start="145:56" pos:end="145:77"><expr pos:start="145:56" pos:end="145:77"><call pos:start="145:56" pos:end="145:77"><name pos:start="145:56" pos:end="145:69">get_bits_count</name><argument_list pos:start="145:70" pos:end="145:77">(<argument pos:start="145:71" pos:end="145:76"><expr pos:start="145:71" pos:end="145:76"><operator pos:start="145:71" pos:end="145:71">&amp;</operator><name pos:start="145:72" pos:end="145:76"><name pos:start="145:72" pos:end="145:72">s</name><operator pos:start="145:73" pos:end="145:74">-&gt;</operator><name pos:start="145:75" pos:end="145:76">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="151:9" pos:end="153:25"><if pos:start="151:9" pos:end="153:25">if <condition pos:start="151:12" pos:end="151:17">(<expr pos:start="151:13" pos:end="151:16"><name pos:start="151:13" pos:end="151:16">sign</name></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:25"><block_content pos:start="153:13" pos:end="153:25">

            <expr_stmt pos:start="153:13" pos:end="153:25"><expr pos:start="153:13" pos:end="153:24"><name pos:start="153:13" pos:end="153:16">diff</name> <operator pos:start="153:18" pos:end="153:18">=</operator> <operator pos:start="153:20" pos:end="153:20">-</operator><name pos:start="153:21" pos:end="153:24">diff</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:104"><expr pos:start="157:9" pos:end="157:103"><name pos:start="157:9" pos:end="157:20"><name pos:start="157:9" pos:end="157:14">sample</name><index pos:start="157:15" pos:end="157:17">[<expr pos:start="157:16" pos:end="157:16"><literal type="number" pos:start="157:16" pos:end="157:16">1</literal></expr>]</index><index pos:start="157:18" pos:end="157:20">[<expr pos:start="157:19" pos:end="157:19"><name pos:start="157:19" pos:end="157:19">x</name></expr>]</index></name> <operator pos:start="157:22" pos:end="157:22">=</operator> <call pos:start="157:24" pos:end="157:103"><name pos:start="157:24" pos:end="157:36">av_mod_uintp2</name><argument_list pos:start="157:37" pos:end="157:103">(<argument pos:start="157:38" pos:end="157:96"><expr pos:start="157:38" pos:end="157:96"><call pos:start="157:38" pos:end="157:82"><call pos:start="157:38" pos:end="157:52"><name pos:start="157:38" pos:end="157:43">RENAME</name><argument_list pos:start="157:44" pos:end="157:52">(<argument pos:start="157:45" pos:end="157:51"><expr pos:start="157:45" pos:end="157:51"><name pos:start="157:45" pos:end="157:51">predict</name></expr></argument>)</argument_list></call><argument_list pos:start="157:53" pos:end="157:82">(<argument pos:start="157:54" pos:end="157:66"><expr pos:start="157:54" pos:end="157:66"><name pos:start="157:54" pos:end="157:62"><name pos:start="157:54" pos:end="157:59">sample</name><index pos:start="157:60" pos:end="157:62">[<expr pos:start="157:61" pos:end="157:61"><literal type="number" pos:start="157:61" pos:end="157:61">1</literal></expr>]</index></name> <operator pos:start="157:64" pos:end="157:64">+</operator> <name pos:start="157:66" pos:end="157:66">x</name></expr></argument>, <argument pos:start="157:69" pos:end="157:81"><expr pos:start="157:69" pos:end="157:81"><name pos:start="157:69" pos:end="157:77"><name pos:start="157:69" pos:end="157:74">sample</name><index pos:start="157:75" pos:end="157:77">[<expr pos:start="157:76" pos:end="157:76"><literal type="number" pos:start="157:76" pos:end="157:76">0</literal></expr>]</index></name> <operator pos:start="157:79" pos:end="157:79">+</operator> <name pos:start="157:81" pos:end="157:81">x</name></expr></argument>)</argument_list></call> <operator pos:start="157:84" pos:end="157:84">+</operator> <operator pos:start="157:86" pos:end="157:86">(</operator><name pos:start="157:87" pos:end="157:91">SUINT</name><operator pos:start="157:92" pos:end="157:92">)</operator><name pos:start="157:93" pos:end="157:96">diff</name></expr></argument>, <argument pos:start="157:99" pos:end="157:102"><expr pos:start="157:99" pos:end="157:102"><name pos:start="157:99" pos:end="157:102">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="161:5" pos:end="161:29"><expr pos:start="161:5" pos:end="161:28"><name pos:start="161:5" pos:end="161:16"><name pos:start="161:5" pos:end="161:5">s</name><operator pos:start="161:6" pos:end="161:7">-&gt;</operator><name pos:start="161:8" pos:end="161:16">run_index</name></name> <operator pos:start="161:18" pos:end="161:18">=</operator> <name pos:start="161:20" pos:end="161:28">run_index</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
