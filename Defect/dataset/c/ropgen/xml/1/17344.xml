<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17344.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:12"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:12">float</name></type> <name pos:start="1:14" pos:end="1:31">wv_get_value_float</name><parameter_list pos:start="1:32" pos:end="1:77">(<parameter pos:start="1:33" pos:end="1:54"><decl pos:start="1:33" pos:end="1:54"><type pos:start="1:33" pos:end="1:54"><name pos:start="1:33" pos:end="1:51">WavpackFrameContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:64">uint32_t</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">crc</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:76"><decl pos:start="1:72" pos:end="1:76"><type pos:start="1:72" pos:end="1:76"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:76">S</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:19">

    <union pos:start="5:5" pos:end="11:12">union <block pos:start="5:11" pos:end="11:5">{

        <decl_stmt pos:start="7:9" pos:end="7:19"><decl pos:start="7:9" pos:end="7:18"><type pos:start="7:9" pos:end="7:13"><name pos:start="7:9" pos:end="7:13">float</name></type>    <name pos:start="7:18" pos:end="7:18">f</name></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:19"><decl pos:start="9:9" pos:end="9:18"><type pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:16">uint32_t</name></type> <name pos:start="9:18" pos:end="9:18">u</name></decl>;</decl_stmt>

    }</block> <decl pos:start="11:7" pos:end="11:11"><name pos:start="11:7" pos:end="11:11">value</name></decl>;</union>



    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">sign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">exp</name> <init pos:start="17:13" pos:end="17:30">= <expr pos:start="17:15" pos:end="17:30"><name pos:start="17:15" pos:end="17:30"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:30">float_max_exp</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="33:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:25">got_extra_bits</name></name></expr>)</condition> <block pos:start="21:28" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:23">

        <decl_stmt pos:start="23:9" pos:end="23:45"><decl pos:start="23:9" pos:end="23:44"><type pos:start="23:9" pos:end="23:17"><specifier pos:start="23:9" pos:end="23:13">const</specifier> <name pos:start="23:15" pos:end="23:17">int</name></type> <name pos:start="23:19" pos:end="23:26">max_bits</name>  <init pos:start="23:29" pos:end="23:44">= <expr pos:start="23:31" pos:end="23:44"><literal type="number" pos:start="23:31" pos:end="23:33">1</literal> <operator pos:start="23:33" pos:end="23:33">+</operator> <literal type="number" pos:start="23:35" pos:end="23:38">23</literal> <operator pos:start="23:38" pos:end="23:38">+</operator> <literal type="number" pos:start="23:40" pos:end="23:42">8</literal> <operator pos:start="23:42" pos:end="23:42">+</operator> <literal type="number" pos:start="23:44" pos:end="23:44">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:63"><decl pos:start="25:9" pos:end="25:62"><type pos:start="25:9" pos:end="25:17"><specifier pos:start="25:9" pos:end="25:13">const</specifier> <name pos:start="25:15" pos:end="25:17">int</name></type> <name pos:start="25:19" pos:end="25:27">left_bits</name> <init pos:start="25:29" pos:end="25:62">= <expr pos:start="25:31" pos:end="25:62"><call pos:start="25:31" pos:end="25:62"><name pos:start="25:31" pos:end="25:43">get_bits_left</name><argument_list pos:start="25:44" pos:end="25:62">(<argument pos:start="25:45" pos:end="25:61"><expr pos:start="25:45" pos:end="25:61"><operator pos:start="25:45" pos:end="25:45">&amp;</operator><name pos:start="25:46" pos:end="25:61"><name pos:start="25:46" pos:end="25:46">s</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:61">gb_extra_bits</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="31:23"><if pos:start="29:9" pos:end="31:23">if <condition pos:start="29:12" pos:end="29:68">(<expr pos:start="29:13" pos:end="29:67"><name pos:start="29:13" pos:end="29:21">left_bits</name> <operator pos:start="29:23" pos:end="29:23">+</operator> <literal type="number" pos:start="29:25" pos:end="29:25">8</literal> <operator pos:start="29:27" pos:end="29:27">*</operator> <name pos:start="29:29" pos:end="29:56">FF_INPUT_BUFFER_PADDING_SIZE</name> <operator pos:start="29:58" pos:end="29:58">&lt;</operator> <name pos:start="29:60" pos:end="29:67">max_bits</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:23"><block_content pos:start="31:13" pos:end="31:23">

            <return pos:start="31:13" pos:end="31:23">return <expr pos:start="31:20" pos:end="31:22"><literal type="number" pos:start="31:20" pos:end="31:22">0.0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="131:5"><if pos:start="37:5" pos:end="103:5">if <condition pos:start="37:8" pos:end="37:10">(<expr pos:start="37:9" pos:end="37:9"><name pos:start="37:9" pos:end="37:9">S</name></expr>)</condition> <block pos:start="37:12" pos:end="103:5">{<block_content pos:start="39:9" pos:end="101:22">

        <expr_stmt pos:start="39:9" pos:end="39:29"><expr pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:9">S</name> <operator pos:start="39:11" pos:end="39:13">&lt;&lt;=</operator> <name pos:start="39:15" pos:end="39:28"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:28">float_shift</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:12">sign</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:16">S</name> <operator pos:start="41:18" pos:end="41:18">&lt;</operator> <literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:19"><if pos:start="43:9" pos:end="45:19">if <condition pos:start="43:12" pos:end="43:17">(<expr pos:start="43:13" pos:end="43:16"><name pos:start="43:13" pos:end="43:16">sign</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:19"><block_content pos:start="45:13" pos:end="45:19">

            <expr_stmt pos:start="45:13" pos:end="45:19"><expr pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:13">S</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <operator pos:start="45:17" pos:end="45:17">-</operator><name pos:start="45:18" pos:end="45:18">S</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="99:9"><if pos:start="47:9" pos:end="59:9">if <condition pos:start="47:12" pos:end="47:27">(<expr pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:13">S</name> <operator pos:start="47:15" pos:end="47:16">&gt;=</operator> <literal type="number" pos:start="47:18" pos:end="47:26">0x1000000</literal></expr>)</condition> <block pos:start="47:29" pos:end="59:9">{<block_content pos:start="49:13" pos:end="57:22">

            <if_stmt pos:start="49:13" pos:end="55:22"><if pos:start="49:13" pos:end="51:52">if <condition pos:start="49:16" pos:end="49:66">(<expr pos:start="49:17" pos:end="49:65"><name pos:start="49:17" pos:end="49:33"><name pos:start="49:17" pos:end="49:17">s</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:33">got_extra_bits</name></name> <operator pos:start="49:35" pos:end="49:36">&amp;&amp;</operator> <call pos:start="49:38" pos:end="49:65"><name pos:start="49:38" pos:end="49:46">get_bits1</name><argument_list pos:start="49:47" pos:end="49:65">(<argument pos:start="49:48" pos:end="49:64"><expr pos:start="49:48" pos:end="49:64"><operator pos:start="49:48" pos:end="49:48">&amp;</operator><name pos:start="49:49" pos:end="49:64"><name pos:start="49:49" pos:end="49:49">s</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:64">gb_extra_bits</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:52"><block_content pos:start="51:17" pos:end="51:52">

                <expr_stmt pos:start="51:17" pos:end="51:52"><expr pos:start="51:17" pos:end="51:51"><name pos:start="51:17" pos:end="51:17">S</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:51"><name pos:start="51:21" pos:end="51:28">get_bits</name><argument_list pos:start="51:29" pos:end="51:51">(<argument pos:start="51:30" pos:end="51:46"><expr pos:start="51:30" pos:end="51:46"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:46"><name pos:start="51:31" pos:end="51:31">s</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:46">gb_extra_bits</name></name></expr></argument>, <argument pos:start="51:49" pos:end="51:50"><expr pos:start="51:49" pos:end="51:50"><literal type="number" pos:start="51:49" pos:end="51:50">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="53:13" pos:end="55:22">else<block type="pseudo" pos:start="55:17" pos:end="55:22"><block_content pos:start="55:17" pos:end="55:22">

                <expr_stmt pos:start="55:17" pos:end="55:22"><expr pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:17">S</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:22"><expr pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:15">exp</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:21">255</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="59:11" pos:end="95:9">else if <condition pos:start="59:19" pos:end="59:23">(<expr pos:start="59:20" pos:end="59:22"><name pos:start="59:20" pos:end="59:22">exp</name></expr>)</condition> <block pos:start="59:25" pos:end="95:9">{<block_content pos:start="61:13" pos:end="93:13">

            <decl_stmt pos:start="61:13" pos:end="61:40"><decl pos:start="61:13" pos:end="61:39"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:21">shift</name> <init pos:start="61:23" pos:end="61:39">= <expr pos:start="61:25" pos:end="61:39"><literal type="number" pos:start="61:25" pos:end="61:28">23</literal> <operator pos:start="61:28" pos:end="61:28">-</operator> <call pos:start="61:30" pos:end="61:39"><name pos:start="61:30" pos:end="61:36">av_log2</name><argument_list pos:start="61:37" pos:end="61:39">(<argument pos:start="61:38" pos:end="61:38"><expr pos:start="61:38" pos:end="61:38"><name pos:start="61:38" pos:end="61:38">S</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:35"><expr pos:start="63:13" pos:end="63:34"><name pos:start="63:13" pos:end="63:15">exp</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:34"><name pos:start="63:19" pos:end="63:19">s</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:34">float_max_exp</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="67:30"><if pos:start="65:13" pos:end="67:30">if <condition pos:start="65:16" pos:end="65:29">(<expr pos:start="65:17" pos:end="65:28"><name pos:start="65:17" pos:end="65:19">exp</name> <operator pos:start="65:21" pos:end="65:22">&lt;=</operator> <name pos:start="65:24" pos:end="65:28">shift</name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:30"><block_content pos:start="67:17" pos:end="67:30">

                <expr_stmt pos:start="67:17" pos:end="67:30"><expr pos:start="67:17" pos:end="67:29"><name pos:start="67:17" pos:end="67:21">shift</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <operator pos:start="67:25" pos:end="67:26">--</operator><name pos:start="67:27" pos:end="67:29">exp</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:25"><expr pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:15">exp</name> <operator pos:start="69:17" pos:end="69:18">-=</operator> <name pos:start="69:20" pos:end="69:24">shift</name></expr>;</expr_stmt>



            <if_stmt pos:start="73:13" pos:end="93:13"><if pos:start="73:13" pos:end="93:13">if <condition pos:start="73:16" pos:end="73:22">(<expr pos:start="73:17" pos:end="73:21"><name pos:start="73:17" pos:end="73:21">shift</name></expr>)</condition> <block pos:start="73:24" pos:end="93:13">{<block_content pos:start="75:17" pos:end="91:17">

                <expr_stmt pos:start="75:17" pos:end="75:28"><expr pos:start="75:17" pos:end="75:27"><name pos:start="75:17" pos:end="75:17">S</name> <operator pos:start="75:19" pos:end="75:21">&lt;&lt;=</operator> <name pos:start="75:23" pos:end="75:27">shift</name></expr>;</expr_stmt>

                <if_stmt pos:start="77:17" pos:end="91:17"><if pos:start="77:17" pos:end="85:17">if <condition pos:start="77:20" pos:end="81:51">(<expr pos:start="77:21" pos:end="81:50"><operator pos:start="77:21" pos:end="77:21">(</operator><name pos:start="77:22" pos:end="77:34"><name pos:start="77:22" pos:end="77:22">s</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:34">float_flag</name></name> <operator pos:start="77:36" pos:end="77:36">&amp;</operator> <name pos:start="77:38" pos:end="77:54">WV_FLT_SHIFT_ONES</name><operator pos:start="77:55" pos:end="77:55">)</operator> <operator pos:start="77:57" pos:end="77:58">||</operator>

                    <operator pos:start="79:21" pos:end="79:21">(</operator><name pos:start="79:22" pos:end="79:38"><name pos:start="79:22" pos:end="79:22">s</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:38">got_extra_bits</name></name> <operator pos:start="79:40" pos:end="79:41">&amp;&amp;</operator> <operator pos:start="79:43" pos:end="79:43">(</operator><name pos:start="79:44" pos:end="79:56"><name pos:start="79:44" pos:end="79:44">s</name><operator pos:start="79:45" pos:end="79:46">-&gt;</operator><name pos:start="79:47" pos:end="79:56">float_flag</name></name> <operator pos:start="79:58" pos:end="79:58">&amp;</operator> <name pos:start="79:60" pos:end="79:76">WV_FLT_SHIFT_SAME</name><operator pos:start="79:77" pos:end="79:77">)</operator> <operator pos:start="79:79" pos:end="79:80">&amp;&amp;</operator>

                     <call pos:start="81:22" pos:end="81:49"><name pos:start="81:22" pos:end="81:30">get_bits1</name><argument_list pos:start="81:31" pos:end="81:49">(<argument pos:start="81:32" pos:end="81:48"><expr pos:start="81:32" pos:end="81:48"><operator pos:start="81:32" pos:end="81:32">&amp;</operator><name pos:start="81:33" pos:end="81:48"><name pos:start="81:33" pos:end="81:33">s</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:48">gb_extra_bits</name></name></expr></argument>)</argument_list></call><operator pos:start="81:50" pos:end="81:50">)</operator></expr>)</condition> <block pos:start="81:53" pos:end="85:17">{<block_content pos:start="83:21" pos:end="83:42">

                    <expr_stmt pos:start="83:21" pos:end="83:42"><expr pos:start="83:21" pos:end="83:41"><name pos:start="83:21" pos:end="83:21">S</name> <operator pos:start="83:23" pos:end="83:24">|=</operator> <operator pos:start="83:26" pos:end="83:26">(</operator><literal type="number" pos:start="83:27" pos:end="83:27">1</literal> <operator pos:start="83:29" pos:end="83:30">&lt;&lt;</operator> <name pos:start="83:32" pos:end="83:36">shift</name><operator pos:start="83:37" pos:end="83:37">)</operator> <operator pos:start="83:39" pos:end="83:39">-</operator> <literal type="number" pos:start="83:41" pos:end="83:41">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="85:19" pos:end="91:17">else if <condition pos:start="85:27" pos:end="87:63">(<expr pos:start="85:28" pos:end="87:62"><name pos:start="85:28" pos:end="85:44"><name pos:start="85:28" pos:end="85:28">s</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:44">got_extra_bits</name></name> <operator pos:start="85:46" pos:end="85:47">&amp;&amp;</operator>

                           <operator pos:start="87:28" pos:end="87:28">(</operator><name pos:start="87:29" pos:end="87:41"><name pos:start="87:29" pos:end="87:29">s</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:41">float_flag</name></name> <operator pos:start="87:43" pos:end="87:43">&amp;</operator> <name pos:start="87:45" pos:end="87:61">WV_FLT_SHIFT_SENT</name><operator pos:start="87:62" pos:end="87:62">)</operator></expr>)</condition> <block pos:start="87:65" pos:end="91:17">{<block_content pos:start="89:21" pos:end="89:60">

                    <expr_stmt pos:start="89:21" pos:end="89:60"><expr pos:start="89:21" pos:end="89:59"><name pos:start="89:21" pos:end="89:21">S</name> <operator pos:start="89:23" pos:end="89:24">|=</operator> <call pos:start="89:26" pos:end="89:59"><name pos:start="89:26" pos:end="89:33">get_bits</name><argument_list pos:start="89:34" pos:end="89:59">(<argument pos:start="89:35" pos:end="89:51"><expr pos:start="89:35" pos:end="89:51"><operator pos:start="89:35" pos:end="89:35">&amp;</operator><name pos:start="89:36" pos:end="89:51"><name pos:start="89:36" pos:end="89:36">s</name><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:51">gb_extra_bits</name></name></expr></argument>, <argument pos:start="89:54" pos:end="89:58"><expr pos:start="89:54" pos:end="89:58"><name pos:start="89:54" pos:end="89:58">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="99:9">else <block pos:start="95:16" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:35">

            <expr_stmt pos:start="97:13" pos:end="97:35"><expr pos:start="97:13" pos:end="97:34"><name pos:start="97:13" pos:end="97:15">exp</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <name pos:start="97:19" pos:end="97:34"><name pos:start="97:19" pos:end="97:19">s</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:34">float_max_exp</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:22"><expr pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:9">S</name> <operator pos:start="101:11" pos:end="101:12">&amp;=</operator> <literal type="number" pos:start="101:14" pos:end="101:21">0x7fffff</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="131:5">else <block pos:start="103:12" pos:end="131:5">{<block_content pos:start="105:9" pos:end="129:9">

        <expr_stmt pos:start="105:9" pos:end="105:17"><expr pos:start="105:9" pos:end="105:16"><name pos:start="105:9" pos:end="105:12">sign</name> <operator pos:start="105:14" pos:end="105:14">=</operator> <literal type="number" pos:start="105:16" pos:end="105:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:16"><expr pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:11">exp</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <literal type="number" pos:start="107:15" pos:end="107:15">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="129:9"><if pos:start="109:9" pos:end="129:9">if <condition pos:start="109:12" pos:end="109:68">(<expr pos:start="109:13" pos:end="109:67"><name pos:start="109:13" pos:end="109:29"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:29">got_extra_bits</name></name> <operator pos:start="109:31" pos:end="109:32">&amp;&amp;</operator> <operator pos:start="109:34" pos:end="109:34">(</operator><name pos:start="109:35" pos:end="109:47"><name pos:start="109:35" pos:end="109:35">s</name><operator pos:start="109:36" pos:end="109:37">-&gt;</operator><name pos:start="109:38" pos:end="109:47">float_flag</name></name> <operator pos:start="109:49" pos:end="109:49">&amp;</operator> <name pos:start="109:51" pos:end="109:66">WV_FLT_ZERO_SENT</name><operator pos:start="109:67" pos:end="109:67">)</operator></expr>)</condition> <block pos:start="109:70" pos:end="129:9">{<block_content pos:start="111:13" pos:end="127:13">

            <if_stmt pos:start="111:13" pos:end="127:13"><if pos:start="111:13" pos:end="121:13">if <condition pos:start="111:16" pos:end="111:45">(<expr pos:start="111:17" pos:end="111:44"><call pos:start="111:17" pos:end="111:44"><name pos:start="111:17" pos:end="111:25">get_bits1</name><argument_list pos:start="111:26" pos:end="111:44">(<argument pos:start="111:27" pos:end="111:43"><expr pos:start="111:27" pos:end="111:43"><operator pos:start="111:27" pos:end="111:27">&amp;</operator><name pos:start="111:28" pos:end="111:43"><name pos:start="111:28" pos:end="111:28">s</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:43">gb_extra_bits</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:47" pos:end="121:13">{<block_content pos:start="113:17" pos:end="119:52">

                <expr_stmt pos:start="113:17" pos:end="113:52"><expr pos:start="113:17" pos:end="113:51"><name pos:start="113:17" pos:end="113:17">S</name> <operator pos:start="113:19" pos:end="113:19">=</operator> <call pos:start="113:21" pos:end="113:51"><name pos:start="113:21" pos:end="113:28">get_bits</name><argument_list pos:start="113:29" pos:end="113:51">(<argument pos:start="113:30" pos:end="113:46"><expr pos:start="113:30" pos:end="113:46"><operator pos:start="113:30" pos:end="113:30">&amp;</operator><name pos:start="113:31" pos:end="113:46"><name pos:start="113:31" pos:end="113:31">s</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:46">gb_extra_bits</name></name></expr></argument>, <argument pos:start="113:49" pos:end="113:50"><expr pos:start="113:49" pos:end="113:50"><literal type="number" pos:start="113:49" pos:end="113:50">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="115:17" pos:end="117:57"><if pos:start="115:17" pos:end="117:57">if <condition pos:start="115:20" pos:end="115:43">(<expr pos:start="115:21" pos:end="115:42"><name pos:start="115:21" pos:end="115:36"><name pos:start="115:21" pos:end="115:21">s</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:36">float_max_exp</name></name> <operator pos:start="115:38" pos:end="115:39">&gt;=</operator> <literal type="number" pos:start="115:41" pos:end="115:42">25</literal></expr>)</condition><block type="pseudo" pos:start="117:21" pos:end="117:57"><block_content pos:start="117:21" pos:end="117:57">

                    <expr_stmt pos:start="117:21" pos:end="117:57"><expr pos:start="117:21" pos:end="117:56"><name pos:start="117:21" pos:end="117:23">exp</name> <operator pos:start="117:25" pos:end="117:25">=</operator> <call pos:start="117:27" pos:end="117:56"><name pos:start="117:27" pos:end="117:34">get_bits</name><argument_list pos:start="117:35" pos:end="117:56">(<argument pos:start="117:36" pos:end="117:52"><expr pos:start="117:36" pos:end="117:52"><operator pos:start="117:36" pos:end="117:36">&amp;</operator><name pos:start="117:37" pos:end="117:52"><name pos:start="117:37" pos:end="117:37">s</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:52">gb_extra_bits</name></name></expr></argument>, <argument pos:start="117:55" pos:end="117:55"><expr pos:start="117:55" pos:end="117:55"><literal type="number" pos:start="117:55" pos:end="117:55">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:52"><expr pos:start="119:17" pos:end="119:51"><name pos:start="119:17" pos:end="119:20">sign</name> <operator pos:start="119:22" pos:end="119:22">=</operator> <call pos:start="119:24" pos:end="119:51"><name pos:start="119:24" pos:end="119:32">get_bits1</name><argument_list pos:start="119:33" pos:end="119:51">(<argument pos:start="119:34" pos:end="119:50"><expr pos:start="119:34" pos:end="119:50"><operator pos:start="119:34" pos:end="119:34">&amp;</operator><name pos:start="119:35" pos:end="119:50"><name pos:start="119:35" pos:end="119:35">s</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:50">gb_extra_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="121:15" pos:end="127:13">else <block pos:start="121:20" pos:end="127:13">{<block_content pos:start="123:17" pos:end="125:56">

                <if_stmt pos:start="123:17" pos:end="125:56"><if pos:start="123:17" pos:end="125:56">if <condition pos:start="123:20" pos:end="123:53">(<expr pos:start="123:21" pos:end="123:52"><name pos:start="123:21" pos:end="123:33"><name pos:start="123:21" pos:end="123:21">s</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:33">float_flag</name></name> <operator pos:start="123:35" pos:end="123:35">&amp;</operator> <name pos:start="123:37" pos:end="123:52">WV_FLT_ZERO_SIGN</name></expr>)</condition><block type="pseudo" pos:start="125:21" pos:end="125:56"><block_content pos:start="125:21" pos:end="125:56">

                    <expr_stmt pos:start="125:21" pos:end="125:56"><expr pos:start="125:21" pos:end="125:55"><name pos:start="125:21" pos:end="125:24">sign</name> <operator pos:start="125:26" pos:end="125:26">=</operator> <call pos:start="125:28" pos:end="125:55"><name pos:start="125:28" pos:end="125:36">get_bits1</name><argument_list pos:start="125:37" pos:end="125:55">(<argument pos:start="125:38" pos:end="125:54"><expr pos:start="125:38" pos:end="125:54"><operator pos:start="125:38" pos:end="125:38">&amp;</operator><name pos:start="125:39" pos:end="125:54"><name pos:start="125:39" pos:end="125:39">s</name><operator pos:start="125:40" pos:end="125:41">-&gt;</operator><name pos:start="125:42" pos:end="125:54">gb_extra_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:46"><expr pos:start="135:5" pos:end="135:45"><operator pos:start="135:5" pos:end="135:5">*</operator><name pos:start="135:6" pos:end="135:8">crc</name> <operator pos:start="135:10" pos:end="135:10">=</operator> <operator pos:start="135:12" pos:end="135:12">*</operator><name pos:start="135:13" pos:end="135:15">crc</name> <operator pos:start="135:17" pos:end="135:17">*</operator> <literal type="number" pos:start="135:19" pos:end="135:22">27</literal> <operator pos:start="135:22" pos:end="135:22">+</operator> <name pos:start="135:24" pos:end="135:24">S</name> <operator pos:start="135:26" pos:end="135:26">*</operator> <literal type="number" pos:start="135:28" pos:end="135:30">9</literal> <operator pos:start="135:30" pos:end="135:30">+</operator> <name pos:start="135:32" pos:end="135:34">exp</name> <operator pos:start="135:36" pos:end="135:36">*</operator> <literal type="number" pos:start="135:38" pos:end="135:40">3</literal> <operator pos:start="135:40" pos:end="135:40">+</operator> <name pos:start="135:42" pos:end="135:45">sign</name></expr>;</expr_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:45"><expr pos:start="139:5" pos:end="139:44"><name pos:start="139:5" pos:end="139:11"><name pos:start="139:5" pos:end="139:9">value</name><operator pos:start="139:10" pos:end="139:10">.</operator><name pos:start="139:11" pos:end="139:11">u</name></name> <operator pos:start="139:13" pos:end="139:13">=</operator> <operator pos:start="139:15" pos:end="139:15">(</operator><name pos:start="139:16" pos:end="139:19">sign</name> <operator pos:start="139:21" pos:end="139:22">&lt;&lt;</operator> <literal type="number" pos:start="139:24" pos:end="139:25">31</literal><operator pos:start="139:26" pos:end="139:26">)</operator> <operator pos:start="139:28" pos:end="139:28">|</operator> <operator pos:start="139:30" pos:end="139:30">(</operator><name pos:start="139:31" pos:end="139:33">exp</name> <operator pos:start="139:35" pos:end="139:36">&lt;&lt;</operator> <literal type="number" pos:start="139:38" pos:end="139:39">23</literal><operator pos:start="139:40" pos:end="139:40">)</operator> <operator pos:start="139:42" pos:end="139:42">|</operator> <name pos:start="139:44" pos:end="139:44">S</name></expr>;</expr_stmt>

    <return pos:start="141:5" pos:end="141:19">return <expr pos:start="141:12" pos:end="141:18"><name pos:start="141:12" pos:end="141:18"><name pos:start="141:12" pos:end="141:16">value</name><operator pos:start="141:17" pos:end="141:17">.</operator><name pos:start="141:18" pos:end="141:18">f</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
