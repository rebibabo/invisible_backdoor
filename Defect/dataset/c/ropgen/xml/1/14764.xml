<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14764.c" pos:tabs="8"><function pos:start="1:1" pos:end="289:13"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ff_mjpeg_decode_sof</name><parameter_list pos:start="1:24" pos:end="1:46">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:42">MJpegDecodeContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="289:13">{<block_content pos:start="3:5" pos:end="289:13">
    <decl_stmt pos:start="3:5" pos:end="3:68"><decl pos:start="3:5" pos:end="3:11"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:11">len</name></decl>, <decl pos:start="3:14" pos:end="3:26"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:14" pos:end="3:26">nb_components</name></decl>, <decl pos:start="3:29" pos:end="3:29"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:29" pos:end="3:29">i</name></decl>, <decl pos:start="3:32" pos:end="3:36"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:32" pos:end="3:36">width</name></decl>, <decl pos:start="3:39" pos:end="3:44"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:39" pos:end="3:44">height</name></decl>, <decl pos:start="3:47" pos:end="3:50"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:47" pos:end="3:50">bits</name></decl>, <decl pos:start="3:53" pos:end="3:62"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:53" pos:end="3:62">pix_fmt_id</name></decl>, <decl pos:start="3:65" pos:end="3:67"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:65" pos:end="3:67">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:32"><decl pos:start="4:5" pos:end="4:31"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:31"><name pos:start="4:9" pos:end="4:15">h_count</name><index pos:start="4:16" pos:end="4:31">[<expr pos:start="4:17" pos:end="4:30"><name pos:start="4:17" pos:end="4:30">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:31"><name pos:start="5:9" pos:end="5:15">v_count</name><index pos:start="5:16" pos:end="5:31">[<expr pos:start="5:17" pos:end="5:30"><name pos:start="5:17" pos:end="5:30">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:20"><expr pos:start="6:5" pos:end="6:19"><name pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:5">s</name><operator pos:start="6:6" pos:end="6:7">-&gt;</operator><name pos:start="6:8" pos:end="6:15">cur_scan</name></name> <operator pos:start="6:17" pos:end="6:17">=</operator> <literal type="number" pos:start="6:19" pos:end="6:19">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:36"><expr pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:16">upscale_h</name></name> <operator pos:start="7:18" pos:end="7:18">=</operator> <name pos:start="7:20" pos:end="7:31"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:31">upscale_v</name></name> <operator pos:start="7:33" pos:end="7:33">=</operator> <literal type="number" pos:start="7:35" pos:end="7:35">0</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="8:5" pos:end="8:40">/* XXX: verify len field validity */</comment>
    <expr_stmt pos:start="9:5" pos:end="9:35"><expr pos:start="9:5" pos:end="9:34"><name pos:start="9:5" pos:end="9:7">len</name>     <operator pos:start="9:13" pos:end="9:13">=</operator> <call pos:start="9:15" pos:end="9:34"><name pos:start="9:15" pos:end="9:22">get_bits</name><argument_list pos:start="9:23" pos:end="9:34">(<argument pos:start="9:24" pos:end="9:29"><expr pos:start="9:24" pos:end="9:29"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">gb</name></name></expr></argument>, <argument pos:start="9:32" pos:end="9:33"><expr pos:start="9:32" pos:end="9:33"><literal type="number" pos:start="9:32" pos:end="9:33">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="11:31"><expr pos:start="10:5" pos:end="11:30"><name pos:start="10:5" pos:end="10:33"><name pos:start="10:5" pos:end="10:5">s</name><operator pos:start="10:6" pos:end="10:7">-&gt;</operator><name pos:start="10:8" pos:end="10:12">avctx</name><operator pos:start="10:13" pos:end="10:14">-&gt;</operator><name pos:start="10:15" pos:end="10:33">bits_per_raw_sample</name></name> <operator pos:start="10:35" pos:end="10:35">=</operator>
    <name pos:start="11:5" pos:end="11:8">bits</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:30"><name pos:start="11:12" pos:end="11:19">get_bits</name><argument_list pos:start="11:20" pos:end="11:30">(<argument pos:start="11:21" pos:end="11:26"><expr pos:start="11:21" pos:end="11:26"><operator pos:start="11:21" pos:end="11:21">&amp;</operator><name pos:start="11:22" pos:end="11:26"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:26">gb</name></name></expr></argument>, <argument pos:start="11:29" pos:end="11:29"><expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="13:17"><if pos:start="12:5" pos:end="13:17">if <condition pos:start="12:8" pos:end="12:23">(<expr pos:start="12:9" pos:end="12:22"><name pos:start="12:9" pos:end="12:22"><name pos:start="12:9" pos:end="12:9">s</name><operator pos:start="12:10" pos:end="12:11">-&gt;</operator><name pos:start="12:12" pos:end="12:22">pegasus_rct</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">
        <expr_stmt pos:start="13:9" pos:end="13:17"><expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:12">bits</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <literal type="number" pos:start="13:16" pos:end="13:16">9</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="14:5" pos:end="15:20"><if pos:start="14:5" pos:end="15:20">if <condition pos:start="14:8" pos:end="14:37">(<expr pos:start="14:9" pos:end="14:36"><name pos:start="14:9" pos:end="14:12">bits</name> <operator pos:start="14:14" pos:end="14:15">==</operator> <literal type="number" pos:start="14:17" pos:end="14:17">9</literal> <operator pos:start="14:19" pos:end="14:20">&amp;&amp;</operator> <operator pos:start="14:22" pos:end="14:22">!</operator><name pos:start="14:23" pos:end="14:36"><name pos:start="14:23" pos:end="14:23">s</name><operator pos:start="14:24" pos:end="14:25">-&gt;</operator><name pos:start="14:26" pos:end="14:36">pegasus_rct</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">
        <expr_stmt pos:start="15:9" pos:end="15:20"><expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">rct</name></name>  <operator pos:start="15:17" pos:end="15:17">=</operator> <literal type="number" pos:start="15:19" pos:end="15:19">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>    <comment type="line" pos:start="15:25" pos:end="15:37">// FIXME ugly</comment>
    <if_stmt pos:start="16:5" pos:end="289:13"><if pos:start="16:5" pos:end="289:13">if<condition pos:start="16:7" pos:end="16:39">(<expr pos:start="16:8" pos:end="16:38"><name pos:start="16:8" pos:end="16:18"><name pos:start="16:8" pos:end="16:8">s</name><operator pos:start="16:9" pos:end="16:10">-&gt;</operator><name pos:start="16:11" pos:end="16:18">lossless</name></name> <operator pos:start="16:20" pos:end="16:21">&amp;&amp;</operator> <name pos:start="16:23" pos:end="16:38"><name pos:start="16:23" pos:end="16:23">s</name><operator pos:start="16:24" pos:end="16:25">-&gt;</operator><name pos:start="16:26" pos:end="16:30">avctx</name><operator pos:start="16:31" pos:end="16:32">-&gt;</operator><name pos:start="16:33" pos:end="16:38">lowres</name></name></expr>)</condition><block pos:start="16:40" pos:end="289:13">{<block_content pos:start="17:9" pos:end="289:13">
        <expr_stmt pos:start="17:9" pos:end="17:86"><expr pos:start="17:9" pos:end="17:85"><call pos:start="17:9" pos:end="17:85"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:85">(<argument pos:start="17:16" pos:end="17:23"><expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:23">avctx</name></name></expr></argument>, <argument pos:start="17:26" pos:end="17:37"><expr pos:start="17:26" pos:end="17:37"><name pos:start="17:26" pos:end="17:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:40" pos:end="17:84"><expr pos:start="17:40" pos:end="17:84"><literal type="string" pos:start="17:40" pos:end="17:84">"lowres is not possible with lossless jpeg\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="18:9" pos:end="18:18">return <expr pos:start="18:16" pos:end="18:17"><operator pos:start="18:16" pos:end="18:16">-</operator><literal type="number" pos:start="18:17" pos:end="18:17">1</literal></expr>;</return>
    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:10">height</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:33"><name pos:start="19:14" pos:end="19:21">get_bits</name><argument_list pos:start="19:22" pos:end="19:33">(<argument pos:start="19:23" pos:end="19:28"><expr pos:start="19:23" pos:end="19:28"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:28"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:28">gb</name></name></expr></argument>, <argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><literal type="number" pos:start="19:31" pos:end="19:32">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:34"><expr pos:start="20:5" pos:end="20:33"><name pos:start="20:5" pos:end="20:9">width</name>  <operator pos:start="20:12" pos:end="20:12">=</operator> <call pos:start="20:14" pos:end="20:33"><name pos:start="20:14" pos:end="20:21">get_bits</name><argument_list pos:start="20:22" pos:end="20:33">(<argument pos:start="20:23" pos:end="20:28"><expr pos:start="20:23" pos:end="20:28"><operator pos:start="20:23" pos:end="20:23">&amp;</operator><name pos:start="20:24" pos:end="20:28"><name pos:start="20:24" pos:end="20:24">s</name><operator pos:start="20:25" pos:end="20:26">-&gt;</operator><name pos:start="20:27" pos:end="20:28">gb</name></name></expr></argument>, <argument pos:start="20:31" pos:end="20:32"><expr pos:start="20:31" pos:end="20:32"><literal type="number" pos:start="20:31" pos:end="20:32">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="21:5" pos:end="22:67"><if pos:start="21:5" pos:end="22:67">if <condition pos:start="21:8" pos:end="21:61">(<expr pos:start="21:9" pos:end="21:60"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:16">avctx</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:26">codec_id</name></name> <operator pos:start="21:28" pos:end="21:29">==</operator> <name pos:start="21:31" pos:end="21:45">AV_CODEC_ID_AMV</name> <operator pos:start="21:47" pos:end="21:48">&amp;&amp;</operator> <operator pos:start="21:50" pos:end="21:50">(</operator><name pos:start="21:51" pos:end="21:56">height</name><operator pos:start="21:57" pos:end="21:57">&amp;</operator><literal type="number" pos:start="21:58" pos:end="21:59">15</literal><operator pos:start="21:60" pos:end="21:60">)</operator></expr>)</condition><block type="pseudo" pos:start="22:9" pos:end="22:67"><block_content pos:start="22:9" pos:end="22:67">
        <expr_stmt pos:start="22:9" pos:end="22:67"><expr pos:start="22:9" pos:end="22:66"><call pos:start="22:9" pos:end="22:66"><name pos:start="22:9" pos:end="22:29">avpriv_request_sample</name><argument_list pos:start="22:30" pos:end="22:66">(<argument pos:start="22:31" pos:end="22:38"><expr pos:start="22:31" pos:end="22:38"><name pos:start="22:31" pos:end="22:38"><name pos:start="22:31" pos:end="22:31">s</name><operator pos:start="22:32" pos:end="22:33">-&gt;</operator><name pos:start="22:34" pos:end="22:38">avctx</name></name></expr></argument>, <argument pos:start="22:41" pos:end="22:65"><expr pos:start="22:41" pos:end="22:65"><literal type="string" pos:start="22:41" pos:end="22:65">"non mod 16 height AMV\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="line" pos:start="23:5" pos:end="23:30">// HACK for odd_height.mov</comment>
    <if_stmt pos:start="24:5" pos:end="25:26"><if pos:start="24:5" pos:end="25:26">if <condition pos:start="24:8" pos:end="24:70">(<expr pos:start="24:9" pos:end="24:69"><name pos:start="24:9" pos:end="24:21"><name pos:start="24:9" pos:end="24:9">s</name><operator pos:start="24:10" pos:end="24:11">-&gt;</operator><name pos:start="24:12" pos:end="24:21">interlaced</name></name> <operator pos:start="24:23" pos:end="24:24">&amp;&amp;</operator> <name pos:start="24:26" pos:end="24:33"><name pos:start="24:26" pos:end="24:26">s</name><operator pos:start="24:27" pos:end="24:28">-&gt;</operator><name pos:start="24:29" pos:end="24:33">width</name></name> <operator pos:start="24:35" pos:end="24:36">==</operator> <name pos:start="24:38" pos:end="24:42">width</name> <operator pos:start="24:44" pos:end="24:45">&amp;&amp;</operator> <name pos:start="24:47" pos:end="24:55"><name pos:start="24:47" pos:end="24:47">s</name><operator pos:start="24:48" pos:end="24:49">-&gt;</operator><name pos:start="24:50" pos:end="24:55">height</name></name> <operator pos:start="24:57" pos:end="24:58">==</operator> <name pos:start="24:60" pos:end="24:65">height</name> <operator pos:start="24:67" pos:end="24:67">+</operator> <literal type="number" pos:start="24:69" pos:end="24:69">1</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:26"><block_content pos:start="25:9" pos:end="25:26">
        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:14">height</name><operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:25">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:76"><expr pos:start="26:5" pos:end="26:75"><call pos:start="26:5" pos:end="26:75"><name pos:start="26:5" pos:end="26:10">av_log</name><argument_list pos:start="26:11" pos:end="26:75">(<argument pos:start="26:12" pos:end="26:19"><expr pos:start="26:12" pos:end="26:19"><name pos:start="26:12" pos:end="26:19"><name pos:start="26:12" pos:end="26:12">s</name><operator pos:start="26:13" pos:end="26:14">-&gt;</operator><name pos:start="26:15" pos:end="26:19">avctx</name></name></expr></argument>, <argument pos:start="26:22" pos:end="26:33"><expr pos:start="26:22" pos:end="26:33"><name pos:start="26:22" pos:end="26:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="26:36" pos:end="26:59"><expr pos:start="26:36" pos:end="26:59"><literal type="string" pos:start="26:36" pos:end="26:59">"sof0: picture: %dx%d\n"</literal></expr></argument>, <argument pos:start="26:62" pos:end="26:66"><expr pos:start="26:62" pos:end="26:66"><name pos:start="26:62" pos:end="26:66">width</name></expr></argument>, <argument pos:start="26:69" pos:end="26:74"><expr pos:start="26:69" pos:end="26:74"><name pos:start="26:69" pos:end="26:74">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="27:5" pos:end="28:40"><if pos:start="27:5" pos:end="28:40">if <condition pos:start="27:8" pos:end="27:56">(<expr pos:start="27:9" pos:end="27:55"><call pos:start="27:9" pos:end="27:55"><name pos:start="27:9" pos:end="27:27">av_image_check_size</name><argument_list pos:start="27:28" pos:end="27:55">(<argument pos:start="27:29" pos:end="27:33"><expr pos:start="27:29" pos:end="27:33"><name pos:start="27:29" pos:end="27:33">width</name></expr></argument>, <argument pos:start="27:36" pos:end="27:41"><expr pos:start="27:36" pos:end="27:41"><name pos:start="27:36" pos:end="27:41">height</name></expr></argument>, <argument pos:start="27:44" pos:end="27:44"><expr pos:start="27:44" pos:end="27:44"><literal type="number" pos:start="27:44" pos:end="27:44">0</literal></expr></argument>, <argument pos:start="27:47" pos:end="27:54"><expr pos:start="27:47" pos:end="27:54"><name pos:start="27:47" pos:end="27:54"><name pos:start="27:47" pos:end="27:47">s</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:54">avctx</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="28:5" pos:end="28:40"><block_content pos:start="28:5" pos:end="28:40">
    <expr_stmt pos:start="28:5" pos:end="28:40"><expr pos:start="28:5" pos:end="28:39"><name pos:start="28:5" pos:end="28:17">nb_components</name> <operator pos:start="28:19" pos:end="28:19">=</operator> <call pos:start="28:21" pos:end="28:39"><name pos:start="28:21" pos:end="28:28">get_bits</name><argument_list pos:start="28:29" pos:end="28:39">(<argument pos:start="28:30" pos:end="28:35"><expr pos:start="28:30" pos:end="28:35"><operator pos:start="28:30" pos:end="28:30">&amp;</operator><name pos:start="28:31" pos:end="28:35"><name pos:start="28:31" pos:end="28:31">s</name><operator pos:start="28:32" pos:end="28:33">-&gt;</operator><name pos:start="28:34" pos:end="28:35">gb</name></name></expr></argument>, <argument pos:start="28:38" pos:end="28:38"><expr pos:start="28:38" pos:end="28:38"><literal type="number" pos:start="28:38" pos:end="28:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if <condition pos:start="29:8" pos:end="30:39">(<expr pos:start="29:9" pos:end="30:38"><name pos:start="29:9" pos:end="29:21">nb_components</name> <operator pos:start="29:23" pos:end="29:24">&lt;=</operator> <literal type="number" pos:start="29:26" pos:end="29:26">0</literal> <operator pos:start="29:28" pos:end="29:29">||</operator>
        <name pos:start="30:9" pos:end="30:21">nb_components</name> <operator pos:start="30:23" pos:end="30:23">&gt;</operator> <name pos:start="30:25" pos:end="30:38">MAX_COMPONENTS</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">
        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="32:5" pos:end="289:13"><if pos:start="32:5" pos:end="289:13">if <condition pos:start="32:8" pos:end="32:69">(<expr pos:start="32:9" pos:end="32:68"><name pos:start="32:9" pos:end="32:21"><name pos:start="32:9" pos:end="32:9">s</name><operator pos:start="32:10" pos:end="32:11">-&gt;</operator><name pos:start="32:12" pos:end="32:21">interlaced</name></name> <operator pos:start="32:23" pos:end="32:24">&amp;&amp;</operator> <operator pos:start="32:26" pos:end="32:26">(</operator><name pos:start="32:27" pos:end="32:41"><name pos:start="32:27" pos:end="32:27">s</name><operator pos:start="32:28" pos:end="32:29">-&gt;</operator><name pos:start="32:30" pos:end="32:41">bottom_field</name></name> <operator pos:start="32:43" pos:end="32:44">==</operator> <operator pos:start="32:46" pos:end="32:46">!</operator><name pos:start="32:47" pos:end="32:67"><name pos:start="32:47" pos:end="32:47">s</name><operator pos:start="32:48" pos:end="32:49">-&gt;</operator><name pos:start="32:50" pos:end="32:67">interlace_polarity</name></name><operator pos:start="32:68" pos:end="32:68">)</operator></expr>)</condition> <block pos:start="32:71" pos:end="289:13">{<block_content pos:start="33:9" pos:end="289:13">
        <if_stmt pos:start="33:9" pos:end="289:13"><if pos:start="33:9" pos:end="289:13">if <condition pos:start="33:12" pos:end="33:46">(<expr pos:start="33:13" pos:end="33:45"><name pos:start="33:13" pos:end="33:25">nb_components</name> <operator pos:start="33:27" pos:end="33:28">!=</operator> <name pos:start="33:30" pos:end="33:45"><name pos:start="33:30" pos:end="33:30">s</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:45">nb_components</name></name></expr>)</condition> <block pos:start="33:48" pos:end="289:13">{<block_content pos:start="34:13" pos:end="289:13">
            <expr_stmt pos:start="34:13" pos:end="35:69"><expr pos:start="34:13" pos:end="35:68"><call pos:start="34:13" pos:end="35:68"><name pos:start="34:13" pos:end="34:18">av_log</name><argument_list pos:start="34:19" pos:end="35:68">(<argument pos:start="34:20" pos:end="34:27"><expr pos:start="34:20" pos:end="34:27"><name pos:start="34:20" pos:end="34:27"><name pos:start="34:20" pos:end="34:20">s</name><operator pos:start="34:21" pos:end="34:22">-&gt;</operator><name pos:start="34:23" pos:end="34:27">avctx</name></name></expr></argument>, <argument pos:start="34:30" pos:end="34:41"><expr pos:start="34:30" pos:end="34:41"><name pos:start="34:30" pos:end="34:41">AV_LOG_ERROR</name></expr></argument>,
                   <argument pos:start="35:20" pos:end="35:67"><expr pos:start="35:20" pos:end="35:67"><literal type="string" pos:start="35:20" pos:end="35:67">"nb_components changing in interlaced picture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="36:5" pos:end="289:13"><if pos:start="36:5" pos:end="289:13">if <condition pos:start="36:8" pos:end="36:52">(<expr pos:start="36:9" pos:end="36:51"><name pos:start="36:9" pos:end="36:13"><name pos:start="36:9" pos:end="36:9">s</name><operator pos:start="36:10" pos:end="36:11">-&gt;</operator><name pos:start="36:12" pos:end="36:13">ls</name></name> <operator pos:start="36:15" pos:end="36:16">&amp;&amp;</operator> <operator pos:start="36:18" pos:end="36:18">!</operator><operator pos:start="36:19" pos:end="36:19">(</operator><name pos:start="36:20" pos:end="36:23">bits</name> <operator pos:start="36:25" pos:end="36:26">&lt;=</operator> <literal type="number" pos:start="36:28" pos:end="36:28">8</literal> <operator pos:start="36:30" pos:end="36:31">||</operator> <name pos:start="36:33" pos:end="36:45">nb_components</name> <operator pos:start="36:47" pos:end="36:48">==</operator> <literal type="number" pos:start="36:50" pos:end="36:50">1</literal><operator pos:start="36:51" pos:end="36:51">)</operator></expr>)</condition> <block pos:start="36:54" pos:end="289:13">{<block_content pos:start="37:9" pos:end="289:13">
        <expr_stmt pos:start="37:9" pos:end="39:71"><expr pos:start="37:9" pos:end="39:70"><call pos:start="37:9" pos:end="39:70"><name pos:start="37:9" pos:end="37:37">avpriv_report_missing_feature</name><argument_list pos:start="37:38" pos:end="39:70">(<argument pos:start="37:39" pos:end="37:46"><expr pos:start="37:39" pos:end="37:46"><name pos:start="37:39" pos:end="37:46"><name pos:start="37:39" pos:end="37:39">s</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:46">avctx</name></name></expr></argument>,
                                      <argument pos:start="38:39" pos:end="39:69"><expr pos:start="38:39" pos:end="39:69"><literal type="string" pos:start="38:39" pos:end="38:65">"JPEG-LS that is not &lt;= 8 "</literal>
                                      <literal type="string" pos:start="39:39" pos:end="39:69">"bits/component or 16-bit gray"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="40:9" pos:end="40:36">return <expr pos:start="40:16" pos:end="40:35"><name pos:start="40:16" pos:end="40:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:20">nb_components</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:36">nb_components</name></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:25"><expr pos:start="42:5" pos:end="42:24"><name pos:start="42:5" pos:end="42:12"><name pos:start="42:5" pos:end="42:5">s</name><operator pos:start="42:6" pos:end="42:7">-&gt;</operator><name pos:start="42:8" pos:end="42:12">h_max</name></name>         <operator pos:start="42:22" pos:end="42:22">=</operator> <literal type="number" pos:start="42:24" pos:end="42:24">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:25"><expr pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:12">v_max</name></name>         <operator pos:start="43:22" pos:end="43:22">=</operator> <literal type="number" pos:start="43:24" pos:end="43:24">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:40"><expr pos:start="44:5" pos:end="44:39"><call pos:start="44:5" pos:end="44:39"><name pos:start="44:5" pos:end="44:10">memset</name><argument_list pos:start="44:11" pos:end="44:39">(<argument pos:start="44:12" pos:end="44:18"><expr pos:start="44:12" pos:end="44:18"><name pos:start="44:12" pos:end="44:18">h_count</name></expr></argument>, <argument pos:start="44:21" pos:end="44:21"><expr pos:start="44:21" pos:end="44:21"><literal type="number" pos:start="44:21" pos:end="44:21">0</literal></expr></argument>, <argument pos:start="44:24" pos:end="44:38"><expr pos:start="44:24" pos:end="44:38"><sizeof pos:start="44:24" pos:end="44:38">sizeof<argument_list pos:start="44:30" pos:end="44:38">(<argument pos:start="44:31" pos:end="44:37"><expr pos:start="44:31" pos:end="44:37"><name pos:start="44:31" pos:end="44:37">h_count</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:40"><expr pos:start="45:5" pos:end="45:39"><call pos:start="45:5" pos:end="45:39"><name pos:start="45:5" pos:end="45:10">memset</name><argument_list pos:start="45:11" pos:end="45:39">(<argument pos:start="45:12" pos:end="45:18"><expr pos:start="45:12" pos:end="45:18"><name pos:start="45:12" pos:end="45:18">v_count</name></expr></argument>, <argument pos:start="45:21" pos:end="45:21"><expr pos:start="45:21" pos:end="45:21"><literal type="number" pos:start="45:21" pos:end="45:21">0</literal></expr></argument>, <argument pos:start="45:24" pos:end="45:38"><expr pos:start="45:24" pos:end="45:38"><sizeof pos:start="45:24" pos:end="45:38">sizeof<argument_list pos:start="45:30" pos:end="45:38">(<argument pos:start="45:31" pos:end="45:37"><expr pos:start="45:31" pos:end="45:37"><name pos:start="45:31" pos:end="45:37">v_count</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="46:5" pos:end="289:13">for <control pos:start="46:9" pos:end="46:39">(<init pos:start="46:10" pos:end="46:15"><expr pos:start="46:10" pos:end="46:14"><name pos:start="46:10" pos:end="46:10">i</name> <operator pos:start="46:12" pos:end="46:12">=</operator> <literal type="number" pos:start="46:14" pos:end="46:14">0</literal></expr>;</init> <condition pos:start="46:17" pos:end="46:34"><expr pos:start="46:17" pos:end="46:33"><name pos:start="46:17" pos:end="46:17">i</name> <operator pos:start="46:19" pos:end="46:19">&lt;</operator> <name pos:start="46:21" pos:end="46:33">nb_components</name></expr>;</condition> <incr pos:start="46:36" pos:end="46:38"><expr pos:start="46:36" pos:end="46:38"><name pos:start="46:36" pos:end="46:36">i</name><operator pos:start="46:37" pos:end="46:38">++</operator></expr></incr>)</control> <block pos:start="46:41" pos:end="289:13">{<block_content pos:start="48:9" pos:end="289:13">
        <comment type="block" pos:start="47:9" pos:end="47:26">/* component id */</comment>
        <expr_stmt pos:start="48:9" pos:end="48:53"><expr pos:start="48:9" pos:end="48:52"><name pos:start="48:9" pos:end="48:26"><name pos:start="48:9" pos:end="48:9">s</name><operator pos:start="48:10" pos:end="48:11">-&gt;</operator><name pos:start="48:12" pos:end="48:23">component_id</name><index pos:start="48:24" pos:end="48:26">[<expr pos:start="48:25" pos:end="48:25"><name pos:start="48:25" pos:end="48:25">i</name></expr>]</index></name> <operator pos:start="48:28" pos:end="48:28">=</operator> <call pos:start="48:30" pos:end="48:48"><name pos:start="48:30" pos:end="48:37">get_bits</name><argument_list pos:start="48:38" pos:end="48:48">(<argument pos:start="48:39" pos:end="48:44"><expr pos:start="48:39" pos:end="48:44"><operator pos:start="48:39" pos:end="48:39">&amp;</operator><name pos:start="48:40" pos:end="48:44"><name pos:start="48:40" pos:end="48:40">s</name><operator pos:start="48:41" pos:end="48:42">-&gt;</operator><name pos:start="48:43" pos:end="48:44">gb</name></name></expr></argument>, <argument pos:start="48:47" pos:end="48:47"><expr pos:start="48:47" pos:end="48:47"><literal type="number" pos:start="48:47" pos:end="48:47">8</literal></expr></argument>)</argument_list></call> <operator pos:start="48:50" pos:end="48:50">-</operator> <literal type="number" pos:start="48:52" pos:end="48:52">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:15">h_count</name><index pos:start="49:16" pos:end="49:18">[<expr pos:start="49:17" pos:end="49:17"><name pos:start="49:17" pos:end="49:17">i</name></expr>]</index></name>         <operator pos:start="49:28" pos:end="49:28">=</operator> <call pos:start="49:30" pos:end="49:48"><name pos:start="49:30" pos:end="49:37">get_bits</name><argument_list pos:start="49:38" pos:end="49:48">(<argument pos:start="49:39" pos:end="49:44"><expr pos:start="49:39" pos:end="49:44"><operator pos:start="49:39" pos:end="49:39">&amp;</operator><name pos:start="49:40" pos:end="49:44"><name pos:start="49:40" pos:end="49:40">s</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:44">gb</name></name></expr></argument>, <argument pos:start="49:47" pos:end="49:47"><expr pos:start="49:47" pos:end="49:47"><literal type="number" pos:start="49:47" pos:end="49:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="50:9" pos:end="50:49"><expr pos:start="50:9" pos:end="50:48"><name pos:start="50:9" pos:end="50:18"><name pos:start="50:9" pos:end="50:15">v_count</name><index pos:start="50:16" pos:end="50:18">[<expr pos:start="50:17" pos:end="50:17"><name pos:start="50:17" pos:end="50:17">i</name></expr>]</index></name>         <operator pos:start="50:28" pos:end="50:28">=</operator> <call pos:start="50:30" pos:end="50:48"><name pos:start="50:30" pos:end="50:37">get_bits</name><argument_list pos:start="50:38" pos:end="50:48">(<argument pos:start="50:39" pos:end="50:44"><expr pos:start="50:39" pos:end="50:44"><operator pos:start="50:39" pos:end="50:39">&amp;</operator><name pos:start="50:40" pos:end="50:44"><name pos:start="50:40" pos:end="50:40">s</name><operator pos:start="50:41" pos:end="50:42">-&gt;</operator><name pos:start="50:43" pos:end="50:44">gb</name></name></expr></argument>, <argument pos:start="50:47" pos:end="50:47"><expr pos:start="50:47" pos:end="50:47"><literal type="number" pos:start="50:47" pos:end="50:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="51:9" pos:end="51:67">/* compute hmax and vmax (only used in interleaved case) */</comment>
        <if_stmt pos:start="52:9" pos:end="53:34"><if pos:start="52:9" pos:end="53:34">if <condition pos:start="52:12" pos:end="52:34">(<expr pos:start="52:13" pos:end="52:33"><name pos:start="52:13" pos:end="52:22"><name pos:start="52:13" pos:end="52:19">h_count</name><index pos:start="52:20" pos:end="52:22">[<expr pos:start="52:21" pos:end="52:21"><name pos:start="52:21" pos:end="52:21">i</name></expr>]</index></name> <operator pos:start="52:24" pos:end="52:24">&gt;</operator> <name pos:start="52:26" pos:end="52:33"><name pos:start="52:26" pos:end="52:26">s</name><operator pos:start="52:27" pos:end="52:28">-&gt;</operator><name pos:start="52:29" pos:end="52:33">h_max</name></name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:34"><block_content pos:start="53:13" pos:end="53:34">
            <expr_stmt pos:start="53:13" pos:end="53:34"><expr pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:20">h_max</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:33"><name pos:start="53:24" pos:end="53:30">h_count</name><index pos:start="53:31" pos:end="53:33">[<expr pos:start="53:32" pos:end="53:32"><name pos:start="53:32" pos:end="53:32">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="54:9" pos:end="55:34"><if pos:start="54:9" pos:end="55:34">if <condition pos:start="54:12" pos:end="54:34">(<expr pos:start="54:13" pos:end="54:33"><name pos:start="54:13" pos:end="54:22"><name pos:start="54:13" pos:end="54:19">v_count</name><index pos:start="54:20" pos:end="54:22">[<expr pos:start="54:21" pos:end="54:21"><name pos:start="54:21" pos:end="54:21">i</name></expr>]</index></name> <operator pos:start="54:24" pos:end="54:24">&gt;</operator> <name pos:start="54:26" pos:end="54:33"><name pos:start="54:26" pos:end="54:26">s</name><operator pos:start="54:27" pos:end="54:28">-&gt;</operator><name pos:start="54:29" pos:end="54:33">v_max</name></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:34"><block_content pos:start="55:13" pos:end="55:34">
            <expr_stmt pos:start="55:13" pos:end="55:34"><expr pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:20">v_max</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:33"><name pos:start="55:24" pos:end="55:30">v_count</name><index pos:start="55:31" pos:end="55:33">[<expr pos:start="55:32" pos:end="55:32"><name pos:start="55:32" pos:end="55:32">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="56:9" pos:end="56:48"><expr pos:start="56:9" pos:end="56:47"><name pos:start="56:9" pos:end="56:25"><name pos:start="56:9" pos:end="56:9">s</name><operator pos:start="56:10" pos:end="56:11">-&gt;</operator><name pos:start="56:12" pos:end="56:22">quant_index</name><index pos:start="56:23" pos:end="56:25">[<expr pos:start="56:24" pos:end="56:24"><name pos:start="56:24" pos:end="56:24">i</name></expr>]</index></name> <operator pos:start="56:27" pos:end="56:27">=</operator> <call pos:start="56:29" pos:end="56:47"><name pos:start="56:29" pos:end="56:36">get_bits</name><argument_list pos:start="56:37" pos:end="56:47">(<argument pos:start="56:38" pos:end="56:43"><expr pos:start="56:38" pos:end="56:43"><operator pos:start="56:38" pos:end="56:38">&amp;</operator><name pos:start="56:39" pos:end="56:43"><name pos:start="56:39" pos:end="56:39">s</name><operator pos:start="56:40" pos:end="56:41">-&gt;</operator><name pos:start="56:42" pos:end="56:43">gb</name></name></expr></argument>, <argument pos:start="56:46" pos:end="56:46"><expr pos:start="56:46" pos:end="56:46"><literal type="number" pos:start="56:46" pos:end="56:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="57:9" pos:end="289:13"><if pos:start="57:9" pos:end="289:13">if <condition pos:start="57:12" pos:end="57:35">(<expr pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:26">quant_index</name><index pos:start="57:27" pos:end="57:29">[<expr pos:start="57:28" pos:end="57:28"><name pos:start="57:28" pos:end="57:28">i</name></expr>]</index></name> <operator pos:start="57:31" pos:end="57:32">&gt;=</operator> <literal type="number" pos:start="57:34" pos:end="57:34">4</literal></expr>)</condition> <block pos:start="57:37" pos:end="289:13">{<block_content pos:start="58:13" pos:end="289:13">
            <expr_stmt pos:start="58:13" pos:end="58:71"><expr pos:start="58:13" pos:end="58:70"><call pos:start="58:13" pos:end="58:70"><name pos:start="58:13" pos:end="58:18">av_log</name><argument_list pos:start="58:19" pos:end="58:70">(<argument pos:start="58:20" pos:end="58:27"><expr pos:start="58:20" pos:end="58:27"><name pos:start="58:20" pos:end="58:27"><name pos:start="58:20" pos:end="58:20">s</name><operator pos:start="58:21" pos:end="58:22">-&gt;</operator><name pos:start="58:23" pos:end="58:27">avctx</name></name></expr></argument>, <argument pos:start="58:30" pos:end="58:41"><expr pos:start="58:30" pos:end="58:41"><name pos:start="58:30" pos:end="58:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="58:44" pos:end="58:69"><expr pos:start="58:44" pos:end="58:69"><literal type="string" pos:start="58:44" pos:end="58:69">"quant_index is invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="59:9" pos:end="289:13"><if pos:start="59:9" pos:end="289:13">if <condition pos:start="59:12" pos:end="59:39">(<expr pos:start="59:13" pos:end="59:38"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:23"><name pos:start="59:14" pos:end="59:20">h_count</name><index pos:start="59:21" pos:end="59:23">[<expr pos:start="59:22" pos:end="59:22"><name pos:start="59:22" pos:end="59:22">i</name></expr>]</index></name> <operator pos:start="59:25" pos:end="59:26">||</operator> <operator pos:start="59:28" pos:end="59:28">!</operator><name pos:start="59:29" pos:end="59:38"><name pos:start="59:29" pos:end="59:35">v_count</name><index pos:start="59:36" pos:end="59:38">[<expr pos:start="59:37" pos:end="59:37"><name pos:start="59:37" pos:end="59:37">i</name></expr>]</index></name></expr>)</condition> <block pos:start="59:41" pos:end="289:13">{<block_content pos:start="60:13" pos:end="289:13">
            <expr_stmt pos:start="60:13" pos:end="62:46"><expr pos:start="60:13" pos:end="62:45"><call pos:start="60:13" pos:end="62:45"><name pos:start="60:13" pos:end="60:18">av_log</name><argument_list pos:start="60:19" pos:end="62:45">(<argument pos:start="60:20" pos:end="60:27"><expr pos:start="60:20" pos:end="60:27"><name pos:start="60:20" pos:end="60:27"><name pos:start="60:20" pos:end="60:20">s</name><operator pos:start="60:21" pos:end="60:22">-&gt;</operator><name pos:start="60:23" pos:end="60:27">avctx</name></name></expr></argument>, <argument pos:start="60:30" pos:end="60:41"><expr pos:start="60:30" pos:end="60:41"><name pos:start="60:30" pos:end="60:41">AV_LOG_ERROR</name></expr></argument>,
                   <argument pos:start="61:20" pos:end="61:68"><expr pos:start="61:20" pos:end="61:68"><literal type="string" pos:start="61:20" pos:end="61:68">"Invalid sampling factor in component %d %d:%d\n"</literal></expr></argument>,
                   <argument pos:start="62:20" pos:end="62:20"><expr pos:start="62:20" pos:end="62:20"><name pos:start="62:20" pos:end="62:20">i</name></expr></argument>, <argument pos:start="62:23" pos:end="62:32"><expr pos:start="62:23" pos:end="62:32"><name pos:start="62:23" pos:end="62:32"><name pos:start="62:23" pos:end="62:29">h_count</name><index pos:start="62:30" pos:end="62:32">[<expr pos:start="62:31" pos:end="62:31"><name pos:start="62:31" pos:end="62:31">i</name></expr>]</index></name></expr></argument>, <argument pos:start="62:35" pos:end="62:44"><expr pos:start="62:35" pos:end="62:44"><name pos:start="62:35" pos:end="62:44"><name pos:start="62:35" pos:end="62:41">v_count</name><index pos:start="62:42" pos:end="62:44">[<expr pos:start="62:43" pos:end="62:43"><name pos:start="62:43" pos:end="62:43">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="63:9" pos:end="65:54"><expr pos:start="63:9" pos:end="65:53"><call pos:start="63:9" pos:end="65:53"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="65:53">(<argument pos:start="63:16" pos:end="63:23"><expr pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:23">avctx</name></name></expr></argument>, <argument pos:start="63:26" pos:end="63:37"><expr pos:start="63:26" pos:end="63:37"><name pos:start="63:26" pos:end="63:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="63:40" pos:end="63:77"><expr pos:start="63:40" pos:end="63:77"><literal type="string" pos:start="63:40" pos:end="63:77">"component %d %d:%d id: %d quant:%d\n"</literal></expr></argument>,
               <argument pos:start="64:16" pos:end="64:16"><expr pos:start="64:16" pos:end="64:16"><name pos:start="64:16" pos:end="64:16">i</name></expr></argument>, <argument pos:start="64:19" pos:end="64:28"><expr pos:start="64:19" pos:end="64:28"><name pos:start="64:19" pos:end="64:28"><name pos:start="64:19" pos:end="64:25">h_count</name><index pos:start="64:26" pos:end="64:28">[<expr pos:start="64:27" pos:end="64:27"><name pos:start="64:27" pos:end="64:27">i</name></expr>]</index></name></expr></argument>, <argument pos:start="64:31" pos:end="64:40"><expr pos:start="64:31" pos:end="64:40"><name pos:start="64:31" pos:end="64:40"><name pos:start="64:31" pos:end="64:37">v_count</name><index pos:start="64:38" pos:end="64:40">[<expr pos:start="64:39" pos:end="64:39"><name pos:start="64:39" pos:end="64:39">i</name></expr>]</index></name></expr></argument>,
               <argument pos:start="65:16" pos:end="65:33"><expr pos:start="65:16" pos:end="65:33"><name pos:start="65:16" pos:end="65:33"><name pos:start="65:16" pos:end="65:16">s</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:30">component_id</name><index pos:start="65:31" pos:end="65:33">[<expr pos:start="65:32" pos:end="65:32"><name pos:start="65:32" pos:end="65:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="65:36" pos:end="65:52"><expr pos:start="65:36" pos:end="65:52"><name pos:start="65:36" pos:end="65:52"><name pos:start="65:36" pos:end="65:36">s</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:49">quant_index</name><index pos:start="65:50" pos:end="65:52">[<expr pos:start="65:51" pos:end="65:51"><name pos:start="65:51" pos:end="65:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="66:5" pos:end="289:13"><if pos:start="66:5" pos:end="289:13">if <condition pos:start="66:8" pos:end="66:48">(<expr pos:start="66:9" pos:end="66:47"><name pos:start="66:9" pos:end="66:13"><name pos:start="66:9" pos:end="66:9">s</name><operator pos:start="66:10" pos:end="66:11">-&gt;</operator><name pos:start="66:12" pos:end="66:13">ls</name></name> <operator pos:start="66:15" pos:end="66:16">&amp;&amp;</operator> <operator pos:start="66:18" pos:end="66:18">(</operator><name pos:start="66:19" pos:end="66:26"><name pos:start="66:19" pos:end="66:19">s</name><operator pos:start="66:20" pos:end="66:21">-&gt;</operator><name pos:start="66:22" pos:end="66:26">h_max</name></name> <operator pos:start="66:28" pos:end="66:28">&gt;</operator> <literal type="number" pos:start="66:30" pos:end="66:30">1</literal> <operator pos:start="66:32" pos:end="66:33">||</operator> <name pos:start="66:35" pos:end="66:42"><name pos:start="66:35" pos:end="66:35">s</name><operator pos:start="66:36" pos:end="66:37">-&gt;</operator><name pos:start="66:38" pos:end="66:42">v_max</name></name> <operator pos:start="66:44" pos:end="66:44">&gt;</operator> <literal type="number" pos:start="66:46" pos:end="66:46">1</literal><operator pos:start="66:47" pos:end="66:47">)</operator></expr>)</condition> <block pos:start="66:50" pos:end="289:13">{<block_content pos:start="67:9" pos:end="289:13">
        <expr_stmt pos:start="67:9" pos:end="67:74"><expr pos:start="67:9" pos:end="67:73"><call pos:start="67:9" pos:end="67:73"><name pos:start="67:9" pos:end="67:37">avpriv_report_missing_feature</name><argument_list pos:start="67:38" pos:end="67:73">(<argument pos:start="67:39" pos:end="67:46"><expr pos:start="67:39" pos:end="67:46"><name pos:start="67:39" pos:end="67:46"><name pos:start="67:39" pos:end="67:39">s</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:46">avctx</name></name></expr></argument>, <argument pos:start="67:49" pos:end="67:72"><expr pos:start="67:49" pos:end="67:72"><literal type="string" pos:start="67:49" pos:end="67:72">"Subsampling in JPEG-LS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="68:9" pos:end="68:36">return <expr pos:start="68:16" pos:end="68:35"><name pos:start="68:16" pos:end="68:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    <comment type="block" pos:start="69:5" pos:end="69:50">/* if different size, realloc/alloc picture */</comment>
    <if_stmt pos:start="70:5" pos:end="289:13"><if pos:start="70:5" pos:end="289:13">if <condition pos:start="70:8" pos:end="73:56">(   <expr pos:start="70:12" pos:end="73:55"><name pos:start="70:12" pos:end="70:16">width</name> <operator pos:start="70:18" pos:end="70:19">!=</operator> <name pos:start="70:21" pos:end="70:28"><name pos:start="70:21" pos:end="70:21">s</name><operator pos:start="70:22" pos:end="70:23">-&gt;</operator><name pos:start="70:24" pos:end="70:28">width</name></name> <operator pos:start="70:30" pos:end="70:31">||</operator> <name pos:start="70:33" pos:end="70:38">height</name> <operator pos:start="70:40" pos:end="70:41">!=</operator> <name pos:start="70:43" pos:end="70:51"><name pos:start="70:43" pos:end="70:43">s</name><operator pos:start="70:44" pos:end="70:45">-&gt;</operator><name pos:start="70:46" pos:end="70:51">height</name></name>
        <operator pos:start="71:9" pos:end="71:10">||</operator> <name pos:start="71:12" pos:end="71:15">bits</name> <operator pos:start="71:17" pos:end="71:18">!=</operator> <name pos:start="71:20" pos:end="71:26"><name pos:start="71:20" pos:end="71:20">s</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:26">bits</name></name>
        <operator pos:start="72:9" pos:end="72:10">||</operator> <call pos:start="72:12" pos:end="72:55"><name pos:start="72:12" pos:end="72:17">memcmp</name><argument_list pos:start="72:18" pos:end="72:55">(<argument pos:start="72:19" pos:end="72:28"><expr pos:start="72:19" pos:end="72:28"><name pos:start="72:19" pos:end="72:28"><name pos:start="72:19" pos:end="72:19">s</name><operator pos:start="72:20" pos:end="72:21">-&gt;</operator><name pos:start="72:22" pos:end="72:28">h_count</name></name></expr></argument>, <argument pos:start="72:31" pos:end="72:37"><expr pos:start="72:31" pos:end="72:37"><name pos:start="72:31" pos:end="72:37">h_count</name></expr></argument>, <argument pos:start="72:40" pos:end="72:54"><expr pos:start="72:40" pos:end="72:54"><sizeof pos:start="72:40" pos:end="72:54">sizeof<argument_list pos:start="72:46" pos:end="72:54">(<argument pos:start="72:47" pos:end="72:53"><expr pos:start="72:47" pos:end="72:53"><name pos:start="72:47" pos:end="72:53">h_count</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call>
        <operator pos:start="73:9" pos:end="73:10">||</operator> <call pos:start="73:12" pos:end="73:55"><name pos:start="73:12" pos:end="73:17">memcmp</name><argument_list pos:start="73:18" pos:end="73:55">(<argument pos:start="73:19" pos:end="73:28"><expr pos:start="73:19" pos:end="73:28"><name pos:start="73:19" pos:end="73:28"><name pos:start="73:19" pos:end="73:19">s</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:28">v_count</name></name></expr></argument>, <argument pos:start="73:31" pos:end="73:37"><expr pos:start="73:31" pos:end="73:37"><name pos:start="73:31" pos:end="73:37">v_count</name></expr></argument>, <argument pos:start="73:40" pos:end="73:54"><expr pos:start="73:40" pos:end="73:54"><sizeof pos:start="73:40" pos:end="73:54">sizeof<argument_list pos:start="73:46" pos:end="73:54">(<argument pos:start="73:47" pos:end="73:53"><expr pos:start="73:47" pos:end="73:53"><name pos:start="73:47" pos:end="73:53">v_count</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:58" pos:end="289:13">{<block_content pos:start="74:9" pos:end="289:13">
        <expr_stmt pos:start="74:9" pos:end="74:30"><expr pos:start="74:9" pos:end="74:29"><name pos:start="74:9" pos:end="74:16"><name pos:start="74:9" pos:end="74:9">s</name><operator pos:start="74:10" pos:end="74:11">-&gt;</operator><name pos:start="74:12" pos:end="74:16">width</name></name>      <operator pos:start="74:23" pos:end="74:23">=</operator> <name pos:start="74:25" pos:end="74:29">width</name></expr>;</expr_stmt>
        <expr_stmt pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:17"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:17">height</name></name>     <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:30">height</name></expr>;</expr_stmt>
        <expr_stmt pos:start="76:9" pos:end="76:29"><expr pos:start="76:9" pos:end="76:28"><name pos:start="76:9" pos:end="76:15"><name pos:start="76:9" pos:end="76:9">s</name><operator pos:start="76:10" pos:end="76:11">-&gt;</operator><name pos:start="76:12" pos:end="76:15">bits</name></name>       <operator pos:start="76:23" pos:end="76:23">=</operator> <name pos:start="76:25" pos:end="76:28">bits</name></expr>;</expr_stmt>
        <expr_stmt pos:start="77:9" pos:end="77:53"><expr pos:start="77:9" pos:end="77:52"><call pos:start="77:9" pos:end="77:52"><name pos:start="77:9" pos:end="77:14">memcpy</name><argument_list pos:start="77:15" pos:end="77:52">(<argument pos:start="77:16" pos:end="77:25"><expr pos:start="77:16" pos:end="77:25"><name pos:start="77:16" pos:end="77:25"><name pos:start="77:16" pos:end="77:16">s</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:25">h_count</name></name></expr></argument>, <argument pos:start="77:28" pos:end="77:34"><expr pos:start="77:28" pos:end="77:34"><name pos:start="77:28" pos:end="77:34">h_count</name></expr></argument>, <argument pos:start="77:37" pos:end="77:51"><expr pos:start="77:37" pos:end="77:51"><sizeof pos:start="77:37" pos:end="77:51">sizeof<argument_list pos:start="77:43" pos:end="77:51">(<argument pos:start="77:44" pos:end="77:50"><expr pos:start="77:44" pos:end="77:50"><name pos:start="77:44" pos:end="77:50">h_count</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="78:9" pos:end="78:53"><expr pos:start="78:9" pos:end="78:52"><call pos:start="78:9" pos:end="78:52"><name pos:start="78:9" pos:end="78:14">memcpy</name><argument_list pos:start="78:15" pos:end="78:52">(<argument pos:start="78:16" pos:end="78:25"><expr pos:start="78:16" pos:end="78:25"><name pos:start="78:16" pos:end="78:25"><name pos:start="78:16" pos:end="78:16">s</name><operator pos:start="78:17" pos:end="78:18">-&gt;</operator><name pos:start="78:19" pos:end="78:25">v_count</name></name></expr></argument>, <argument pos:start="78:28" pos:end="78:34"><expr pos:start="78:28" pos:end="78:34"><name pos:start="78:28" pos:end="78:34">v_count</name></expr></argument>, <argument pos:start="78:37" pos:end="78:51"><expr pos:start="78:37" pos:end="78:51"><sizeof pos:start="78:37" pos:end="78:51">sizeof<argument_list pos:start="78:43" pos:end="78:51">(<argument pos:start="78:44" pos:end="78:50"><expr pos:start="78:44" pos:end="78:50"><name pos:start="78:44" pos:end="78:50">v_count</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="79:9" pos:end="79:26"><expr pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:21">interlaced</name></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <literal type="number" pos:start="79:25" pos:end="79:25">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="80:9" pos:end="80:27"><expr pos:start="80:9" pos:end="80:26"><name pos:start="80:9" pos:end="80:22"><name pos:start="80:9" pos:end="80:9">s</name><operator pos:start="80:10" pos:end="80:11">-&gt;</operator><name pos:start="80:12" pos:end="80:22">got_picture</name></name> <operator pos:start="80:24" pos:end="80:24">=</operator> <literal type="number" pos:start="80:26" pos:end="80:26">0</literal></expr>;</expr_stmt>
        <comment type="block" pos:start="81:9" pos:end="81:34">/* test interlaced mode */</comment>
        <if_stmt pos:start="82:9" pos:end="289:13"><if pos:start="82:9" pos:end="289:13">if <condition pos:start="82:12" pos:end="84:50">(<expr pos:start="82:13" pos:end="84:49"><name pos:start="82:13" pos:end="82:28"><name pos:start="82:13" pos:end="82:13">s</name><operator pos:start="82:14" pos:end="82:15">-&gt;</operator><name pos:start="82:16" pos:end="82:28">first_picture</name></name>   <operator pos:start="82:32" pos:end="82:33">&amp;&amp;</operator>
            <name pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:25">org_height</name></name> <operator pos:start="83:27" pos:end="83:28">!=</operator> <literal type="number" pos:start="83:30" pos:end="83:30">0</literal> <operator pos:start="83:32" pos:end="83:33">&amp;&amp;</operator>
            <name pos:start="84:13" pos:end="84:21"><name pos:start="84:13" pos:end="84:13">s</name><operator pos:start="84:14" pos:end="84:15">-&gt;</operator><name pos:start="84:16" pos:end="84:21">height</name></name> <operator pos:start="84:23" pos:end="84:23">&lt;</operator> <operator pos:start="84:25" pos:end="84:25">(</operator><operator pos:start="84:26" pos:end="84:26">(</operator><name pos:start="84:27" pos:end="84:39"><name pos:start="84:27" pos:end="84:27">s</name><operator pos:start="84:28" pos:end="84:29">-&gt;</operator><name pos:start="84:30" pos:end="84:39">org_height</name></name> <operator pos:start="84:41" pos:end="84:41">*</operator> <literal type="number" pos:start="84:43" pos:end="84:43">3</literal><operator pos:start="84:44" pos:end="84:44">)</operator> <operator pos:start="84:46" pos:end="84:46">/</operator> <literal type="number" pos:start="84:48" pos:end="84:48">4</literal><operator pos:start="84:49" pos:end="84:49">)</operator></expr>)</condition> <block pos:start="84:52" pos:end="289:13">{<block_content pos:start="85:13" pos:end="289:13">
            <expr_stmt pos:start="85:13" pos:end="85:49"><expr pos:start="85:13" pos:end="85:48"><name pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:13">s</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:25">interlaced</name></name>                    <operator pos:start="85:46" pos:end="85:46">=</operator> <literal type="number" pos:start="85:48" pos:end="85:48">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="86:13" pos:end="86:69"><expr pos:start="86:13" pos:end="86:68"><name pos:start="86:13" pos:end="86:27"><name pos:start="86:13" pos:end="86:13">s</name><operator pos:start="86:14" pos:end="86:15">-&gt;</operator><name pos:start="86:16" pos:end="86:27">bottom_field</name></name>                  <operator pos:start="86:46" pos:end="86:46">=</operator> <name pos:start="86:48" pos:end="86:68"><name pos:start="86:48" pos:end="86:48">s</name><operator pos:start="86:49" pos:end="86:50">-&gt;</operator><name pos:start="86:51" pos:end="86:68">interlace_polarity</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="87:13" pos:end="87:49"><expr pos:start="87:13" pos:end="87:48"><name pos:start="87:13" pos:end="87:44"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:26">picture_ptr</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:44">interlaced_frame</name></name> <operator pos:start="87:46" pos:end="87:46">=</operator> <literal type="number" pos:start="87:48" pos:end="87:48">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="88:13" pos:end="88:70"><expr pos:start="88:13" pos:end="88:69"><name pos:start="88:13" pos:end="88:43"><name pos:start="88:13" pos:end="88:13">s</name><operator pos:start="88:14" pos:end="88:15">-&gt;</operator><name pos:start="88:16" pos:end="88:26">picture_ptr</name><operator pos:start="88:27" pos:end="88:28">-&gt;</operator><name pos:start="88:29" pos:end="88:43">top_field_first</name></name>  <operator pos:start="88:46" pos:end="88:46">=</operator> <operator pos:start="88:48" pos:end="88:48">!</operator><name pos:start="88:49" pos:end="88:69"><name pos:start="88:49" pos:end="88:49">s</name><operator pos:start="88:50" pos:end="88:51">-&gt;</operator><name pos:start="88:52" pos:end="88:69">interlace_polarity</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="89:13" pos:end="89:24"><expr pos:start="89:13" pos:end="89:23"><name pos:start="89:13" pos:end="89:18">height</name> <operator pos:start="89:20" pos:end="89:21">*=</operator> <literal type="number" pos:start="89:23" pos:end="89:23">2</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="90:9" pos:end="90:57"><expr pos:start="90:9" pos:end="90:56"><name pos:start="90:9" pos:end="90:11">ret</name> <operator pos:start="90:13" pos:end="90:13">=</operator> <call pos:start="90:15" pos:end="90:56"><name pos:start="90:15" pos:end="90:31">ff_set_dimensions</name><argument_list pos:start="90:32" pos:end="90:56">(<argument pos:start="90:33" pos:end="90:40"><expr pos:start="90:33" pos:end="90:40"><name pos:start="90:33" pos:end="90:40"><name pos:start="90:33" pos:end="90:33">s</name><operator pos:start="90:34" pos:end="90:35">-&gt;</operator><name pos:start="90:36" pos:end="90:40">avctx</name></name></expr></argument>, <argument pos:start="90:43" pos:end="90:47"><expr pos:start="90:43" pos:end="90:47"><name pos:start="90:43" pos:end="90:47">width</name></expr></argument>, <argument pos:start="90:50" pos:end="90:55"><expr pos:start="90:50" pos:end="90:55"><name pos:start="90:50" pos:end="90:55">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="91:9" pos:end="92:23"><if pos:start="91:9" pos:end="92:23">if <condition pos:start="91:12" pos:end="91:20">(<expr pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">&lt;</operator> <literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr>)</condition><block type="pseudo" pos:start="92:13" pos:end="92:23"><block_content pos:start="92:13" pos:end="92:23">
            <return pos:start="92:13" pos:end="92:23">return <expr pos:start="92:20" pos:end="92:22"><name pos:start="92:20" pos:end="92:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="93:9" pos:end="93:29"><expr pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:24">first_picture</name></name> <operator pos:start="93:26" pos:end="93:26">=</operator> <literal type="number" pos:start="93:28" pos:end="93:28">0</literal></expr>;</expr_stmt>
    <if_stmt pos:start="94:5" pos:end="289:13"><if pos:start="94:5" pos:end="289:13">if <condition pos:start="94:8" pos:end="94:87">(<expr pos:start="94:9" pos:end="94:86"><name pos:start="94:9" pos:end="94:22"><name pos:start="94:9" pos:end="94:9">s</name><operator pos:start="94:10" pos:end="94:11">-&gt;</operator><name pos:start="94:12" pos:end="94:22">got_picture</name></name> <operator pos:start="94:24" pos:end="94:25">&amp;&amp;</operator> <name pos:start="94:27" pos:end="94:39"><name pos:start="94:27" pos:end="94:27">s</name><operator pos:start="94:28" pos:end="94:29">-&gt;</operator><name pos:start="94:30" pos:end="94:39">interlaced</name></name> <operator pos:start="94:41" pos:end="94:42">&amp;&amp;</operator> <operator pos:start="94:44" pos:end="94:44">(</operator><name pos:start="94:45" pos:end="94:59"><name pos:start="94:45" pos:end="94:45">s</name><operator pos:start="94:46" pos:end="94:47">-&gt;</operator><name pos:start="94:48" pos:end="94:59">bottom_field</name></name> <operator pos:start="94:61" pos:end="94:62">==</operator> <operator pos:start="94:64" pos:end="94:64">!</operator><name pos:start="94:65" pos:end="94:85"><name pos:start="94:65" pos:end="94:65">s</name><operator pos:start="94:66" pos:end="94:67">-&gt;</operator><name pos:start="94:68" pos:end="94:85">interlace_polarity</name></name><operator pos:start="94:86" pos:end="94:86">)</operator></expr>)</condition> <block pos:start="94:89" pos:end="289:13">{<block_content pos:start="95:9" pos:end="289:13">
        <if_stmt pos:start="95:9" pos:end="289:13"><if pos:start="95:9" pos:end="97:5">if <condition pos:start="95:12" pos:end="95:27">(<expr pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:26">progressive</name></name></expr>)</condition> <block pos:start="95:29" pos:end="97:5">{<block_content pos:start="96:13" pos:end="96:86">
            <expr_stmt pos:start="96:13" pos:end="96:86"><expr pos:start="96:13" pos:end="96:85"><call pos:start="96:13" pos:end="96:85"><name pos:start="96:13" pos:end="96:33">avpriv_request_sample</name><argument_list pos:start="96:34" pos:end="96:85">(<argument pos:start="96:35" pos:end="96:42"><expr pos:start="96:35" pos:end="96:42"><name pos:start="96:35" pos:end="96:42"><name pos:start="96:35" pos:end="96:35">s</name><operator pos:start="96:36" pos:end="96:37">-&gt;</operator><name pos:start="96:38" pos:end="96:42">avctx</name></name></expr></argument>, <argument pos:start="96:45" pos:end="96:84"><expr pos:start="96:45" pos:end="96:84"><literal type="string" pos:start="96:45" pos:end="96:84">"progressively coded interlaced picture"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="97:7" pos:end="289:13">else<block pos:start="97:11" pos:end="289:13">{<block_content pos:start="98:9" pos:end="289:13">
        <if_stmt pos:start="98:9" pos:end="101:23"><if pos:start="98:9" pos:end="99:23">if <condition pos:start="98:12" pos:end="98:103">(<expr pos:start="98:13" pos:end="98:102"><name pos:start="98:13" pos:end="98:20"><name pos:start="98:13" pos:end="98:13">s</name><operator pos:start="98:14" pos:end="98:15">-&gt;</operator><name pos:start="98:16" pos:end="98:20">v_max</name></name> <operator pos:start="98:22" pos:end="98:23">==</operator> <literal type="number" pos:start="98:25" pos:end="98:25">1</literal> <operator pos:start="98:27" pos:end="98:28">&amp;&amp;</operator> <name pos:start="98:30" pos:end="98:37"><name pos:start="98:30" pos:end="98:30">s</name><operator pos:start="98:31" pos:end="98:32">-&gt;</operator><name pos:start="98:33" pos:end="98:37">h_max</name></name> <operator pos:start="98:39" pos:end="98:40">==</operator> <literal type="number" pos:start="98:42" pos:end="98:42">1</literal> <operator pos:start="98:44" pos:end="98:45">&amp;&amp;</operator> <name pos:start="98:47" pos:end="98:57"><name pos:start="98:47" pos:end="98:47">s</name><operator pos:start="98:48" pos:end="98:49">-&gt;</operator><name pos:start="98:50" pos:end="98:57">lossless</name></name><operator pos:start="98:58" pos:end="98:59">==</operator><literal type="number" pos:start="98:60" pos:end="98:60">1</literal> <operator pos:start="98:62" pos:end="98:63">&amp;&amp;</operator> <operator pos:start="98:65" pos:end="98:65">(</operator><name pos:start="98:66" pos:end="98:78">nb_components</name><operator pos:start="98:79" pos:end="98:80">==</operator><literal type="number" pos:start="98:81" pos:end="98:81">3</literal> <operator pos:start="98:83" pos:end="98:84">||</operator> <name pos:start="98:86" pos:end="98:98">nb_components</name><operator pos:start="98:99" pos:end="98:100">==</operator><literal type="number" pos:start="98:101" pos:end="98:101">4</literal><operator pos:start="98:102" pos:end="98:102">)</operator></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:23"><block_content pos:start="99:13" pos:end="99:23">
            <expr_stmt pos:start="99:13" pos:end="99:23"><expr pos:start="99:13" pos:end="99:22"><name pos:start="99:13" pos:end="99:18"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:18">rgb</name></name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">1</literal></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="100:9" pos:end="101:23">else if <condition pos:start="100:17" pos:end="100:30">(<expr pos:start="100:18" pos:end="100:29"><operator pos:start="100:18" pos:end="100:18">!</operator><name pos:start="100:19" pos:end="100:29"><name pos:start="100:19" pos:end="100:19">s</name><operator pos:start="100:20" pos:end="100:21">-&gt;</operator><name pos:start="100:22" pos:end="100:29">lossless</name></name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:23"><block_content pos:start="101:13" pos:end="101:23">
            <expr_stmt pos:start="101:13" pos:end="101:23"><expr pos:start="101:13" pos:end="101:22"><name pos:start="101:13" pos:end="101:18"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:18">rgb</name></name> <operator pos:start="101:20" pos:end="101:20">=</operator> <literal type="number" pos:start="101:22" pos:end="101:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="block" pos:start="102:5" pos:end="102:34">/* XXX: not complete test ! */</comment>
    <expr_stmt pos:start="103:5" pos:end="106:56"><expr pos:start="103:5" pos:end="106:55"><name pos:start="103:5" pos:end="103:14">pix_fmt_id</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <operator pos:start="103:18" pos:end="103:18">(</operator><name pos:start="103:19" pos:end="103:31"><name pos:start="103:19" pos:end="103:19">s</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:28">h_count</name><index pos:start="103:29" pos:end="103:31">[<expr pos:start="103:30" pos:end="103:30"><literal type="number" pos:start="103:30" pos:end="103:30">0</literal></expr>]</index></name> <operator pos:start="103:33" pos:end="103:34">&lt;&lt;</operator> <literal type="number" pos:start="103:36" pos:end="103:37">28</literal><operator pos:start="103:38" pos:end="103:38">)</operator> <operator pos:start="103:40" pos:end="103:40">|</operator> <operator pos:start="103:42" pos:end="103:42">(</operator><name pos:start="103:43" pos:end="103:55"><name pos:start="103:43" pos:end="103:43">s</name><operator pos:start="103:44" pos:end="103:45">-&gt;</operator><name pos:start="103:46" pos:end="103:52">v_count</name><index pos:start="103:53" pos:end="103:55">[<expr pos:start="103:54" pos:end="103:54"><literal type="number" pos:start="103:54" pos:end="103:54">0</literal></expr>]</index></name> <operator pos:start="103:57" pos:end="103:58">&lt;&lt;</operator> <literal type="number" pos:start="103:60" pos:end="103:61">24</literal><operator pos:start="103:62" pos:end="103:62">)</operator> <operator pos:start="103:64" pos:end="103:64">|</operator>
                 <operator pos:start="104:18" pos:end="104:18">(</operator><name pos:start="104:19" pos:end="104:31"><name pos:start="104:19" pos:end="104:19">s</name><operator pos:start="104:20" pos:end="104:21">-&gt;</operator><name pos:start="104:22" pos:end="104:28">h_count</name><index pos:start="104:29" pos:end="104:31">[<expr pos:start="104:30" pos:end="104:30"><literal type="number" pos:start="104:30" pos:end="104:30">1</literal></expr>]</index></name> <operator pos:start="104:33" pos:end="104:34">&lt;&lt;</operator> <literal type="number" pos:start="104:36" pos:end="104:37">20</literal><operator pos:start="104:38" pos:end="104:38">)</operator> <operator pos:start="104:40" pos:end="104:40">|</operator> <operator pos:start="104:42" pos:end="104:42">(</operator><name pos:start="104:43" pos:end="104:55"><name pos:start="104:43" pos:end="104:43">s</name><operator pos:start="104:44" pos:end="104:45">-&gt;</operator><name pos:start="104:46" pos:end="104:52">v_count</name><index pos:start="104:53" pos:end="104:55">[<expr pos:start="104:54" pos:end="104:54"><literal type="number" pos:start="104:54" pos:end="104:54">1</literal></expr>]</index></name> <operator pos:start="104:57" pos:end="104:58">&lt;&lt;</operator> <literal type="number" pos:start="104:60" pos:end="104:61">16</literal><operator pos:start="104:62" pos:end="104:62">)</operator> <operator pos:start="104:64" pos:end="104:64">|</operator>
                 <operator pos:start="105:18" pos:end="105:18">(</operator><name pos:start="105:19" pos:end="105:31"><name pos:start="105:19" pos:end="105:19">s</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:28">h_count</name><index pos:start="105:29" pos:end="105:31">[<expr pos:start="105:30" pos:end="105:30"><literal type="number" pos:start="105:30" pos:end="105:30">2</literal></expr>]</index></name> <operator pos:start="105:33" pos:end="105:34">&lt;&lt;</operator> <literal type="number" pos:start="105:36" pos:end="105:37">12</literal><operator pos:start="105:38" pos:end="105:38">)</operator> <operator pos:start="105:40" pos:end="105:40">|</operator> <operator pos:start="105:42" pos:end="105:42">(</operator><name pos:start="105:43" pos:end="105:55"><name pos:start="105:43" pos:end="105:43">s</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:52">v_count</name><index pos:start="105:53" pos:end="105:55">[<expr pos:start="105:54" pos:end="105:54"><literal type="number" pos:start="105:54" pos:end="105:54">2</literal></expr>]</index></name> <operator pos:start="105:57" pos:end="105:58">&lt;&lt;</operator>  <literal type="number" pos:start="105:61" pos:end="105:61">8</literal><operator pos:start="105:62" pos:end="105:62">)</operator> <operator pos:start="105:64" pos:end="105:64">|</operator>
                 <operator pos:start="106:18" pos:end="106:18">(</operator><name pos:start="106:19" pos:end="106:31"><name pos:start="106:19" pos:end="106:19">s</name><operator pos:start="106:20" pos:end="106:21">-&gt;</operator><name pos:start="106:22" pos:end="106:28">h_count</name><index pos:start="106:29" pos:end="106:31">[<expr pos:start="106:30" pos:end="106:30"><literal type="number" pos:start="106:30" pos:end="106:30">3</literal></expr>]</index></name> <operator pos:start="106:33" pos:end="106:34">&lt;&lt;</operator>  <literal type="number" pos:start="106:37" pos:end="106:37">4</literal><operator pos:start="106:38" pos:end="106:38">)</operator> <operator pos:start="106:40" pos:end="106:40">|</operator>  <name pos:start="106:43" pos:end="106:55"><name pos:start="106:43" pos:end="106:43">s</name><operator pos:start="106:44" pos:end="106:45">-&gt;</operator><name pos:start="106:46" pos:end="106:52">v_count</name><index pos:start="106:53" pos:end="106:55">[<expr pos:start="106:54" pos:end="106:54"><literal type="number" pos:start="106:54" pos:end="106:54">3</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="107:5" pos:end="107:66"><expr pos:start="107:5" pos:end="107:65"><call pos:start="107:5" pos:end="107:65"><name pos:start="107:5" pos:end="107:10">av_log</name><argument_list pos:start="107:11" pos:end="107:65">(<argument pos:start="107:12" pos:end="107:19"><expr pos:start="107:12" pos:end="107:19"><name pos:start="107:12" pos:end="107:19"><name pos:start="107:12" pos:end="107:12">s</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:19">avctx</name></name></expr></argument>, <argument pos:start="107:22" pos:end="107:33"><expr pos:start="107:22" pos:end="107:33"><name pos:start="107:22" pos:end="107:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="107:36" pos:end="107:52"><expr pos:start="107:36" pos:end="107:52"><literal type="string" pos:start="107:36" pos:end="107:52">"pix fmt id %x\n"</literal></expr></argument>, <argument pos:start="107:55" pos:end="107:64"><expr pos:start="107:55" pos:end="107:64"><name pos:start="107:55" pos:end="107:64">pix_fmt_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="108:5" pos:end="109:38">/* NOTE we do not allocate pictures large enough for the possible
     * padding of h/v_count being 4 */</comment>
    <if_stmt pos:start="110:5" pos:end="111:53"><if pos:start="110:5" pos:end="111:53">if <condition pos:start="110:8" pos:end="110:35">(<expr pos:start="110:9" pos:end="110:34"><operator pos:start="110:9" pos:end="110:9">!</operator><operator pos:start="110:10" pos:end="110:10">(</operator><name pos:start="110:11" pos:end="110:20">pix_fmt_id</name> <operator pos:start="110:22" pos:end="110:22">&amp;</operator> <literal type="number" pos:start="110:24" pos:end="110:33">0xD0D0D0D0</literal><operator pos:start="110:34" pos:end="110:34">)</operator></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:53"><block_content pos:start="111:9" pos:end="111:53">
        <expr_stmt pos:start="111:9" pos:end="111:53"><expr pos:start="111:9" pos:end="111:52"><name pos:start="111:9" pos:end="111:18">pix_fmt_id</name> <operator pos:start="111:20" pos:end="111:21">-=</operator> <operator pos:start="111:23" pos:end="111:23">(</operator><name pos:start="111:24" pos:end="111:33">pix_fmt_id</name> <operator pos:start="111:35" pos:end="111:35">&amp;</operator> <literal type="number" pos:start="111:37" pos:end="111:46">0xF0F0F0F0</literal><operator pos:start="111:47" pos:end="111:47">)</operator> <operator pos:start="111:49" pos:end="111:50">&gt;&gt;</operator> <literal type="number" pos:start="111:52" pos:end="111:52">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="112:5" pos:end="113:53"><if pos:start="112:5" pos:end="113:53">if <condition pos:start="112:8" pos:end="112:35">(<expr pos:start="112:9" pos:end="112:34"><operator pos:start="112:9" pos:end="112:9">!</operator><operator pos:start="112:10" pos:end="112:10">(</operator><name pos:start="112:11" pos:end="112:20">pix_fmt_id</name> <operator pos:start="112:22" pos:end="112:22">&amp;</operator> <literal type="number" pos:start="112:24" pos:end="112:33">0x0D0D0D0D</literal><operator pos:start="112:34" pos:end="112:34">)</operator></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:53"><block_content pos:start="113:9" pos:end="113:53">
        <expr_stmt pos:start="113:9" pos:end="113:53"><expr pos:start="113:9" pos:end="113:52"><name pos:start="113:9" pos:end="113:18">pix_fmt_id</name> <operator pos:start="113:20" pos:end="113:21">-=</operator> <operator pos:start="113:23" pos:end="113:23">(</operator><name pos:start="113:24" pos:end="113:33">pix_fmt_id</name> <operator pos:start="113:35" pos:end="113:35">&amp;</operator> <literal type="number" pos:start="113:37" pos:end="113:46">0x0F0F0F0F</literal><operator pos:start="113:47" pos:end="113:47">)</operator> <operator pos:start="113:49" pos:end="113:50">&gt;&gt;</operator> <literal type="number" pos:start="113:52" pos:end="113:52">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <for pos:start="114:5" pos:end="289:13">for <control pos:start="114:9" pos:end="114:27">(<init pos:start="114:10" pos:end="114:15"><expr pos:start="114:10" pos:end="114:14"><name pos:start="114:10" pos:end="114:10">i</name> <operator pos:start="114:12" pos:end="114:12">=</operator> <literal type="number" pos:start="114:14" pos:end="114:14">0</literal></expr>;</init> <condition pos:start="114:17" pos:end="114:22"><expr pos:start="114:17" pos:end="114:21"><name pos:start="114:17" pos:end="114:17">i</name> <operator pos:start="114:19" pos:end="114:19">&lt;</operator> <literal type="number" pos:start="114:21" pos:end="114:21">8</literal></expr>;</condition> <incr pos:start="114:24" pos:end="114:26"><expr pos:start="114:24" pos:end="114:26"><name pos:start="114:24" pos:end="114:24">i</name><operator pos:start="114:25" pos:end="114:26">++</operator></expr></incr>)</control> <block pos:start="114:29" pos:end="289:13">{<block_content pos:start="115:9" pos:end="289:13">
        <decl_stmt pos:start="115:9" pos:end="115:34"><decl pos:start="115:9" pos:end="115:33"><type pos:start="115:9" pos:end="115:11"><name pos:start="115:9" pos:end="115:11">int</name></type> <name pos:start="115:13" pos:end="115:13">j</name> <init pos:start="115:15" pos:end="115:33">= <expr pos:start="115:17" pos:end="115:33"><literal type="number" pos:start="115:17" pos:end="115:19">6</literal> <operator pos:start="115:19" pos:end="115:19">+</operator> <operator pos:start="115:21" pos:end="115:21">(</operator><name pos:start="115:22" pos:end="115:22">i</name><operator pos:start="115:23" pos:end="115:23">&amp;</operator><literal type="number" pos:start="115:24" pos:end="115:24">1</literal><operator pos:start="115:25" pos:end="115:25">)</operator> <operator pos:start="115:27" pos:end="115:27">-</operator> <operator pos:start="115:29" pos:end="115:29">(</operator><name pos:start="115:30" pos:end="115:30">i</name><operator pos:start="115:31" pos:end="115:31">&amp;</operator><literal type="number" pos:start="115:32" pos:end="115:32">6</literal><operator pos:start="115:33" pos:end="115:33">)</operator></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="116:9" pos:end="116:45"><decl pos:start="116:9" pos:end="116:44"><type pos:start="116:9" pos:end="116:11"><name pos:start="116:9" pos:end="116:11">int</name></type> <name pos:start="116:13" pos:end="116:14">is</name> <init pos:start="116:16" pos:end="116:44">= <expr pos:start="116:18" pos:end="116:44"><operator pos:start="116:18" pos:end="116:18">(</operator><name pos:start="116:19" pos:end="116:28">pix_fmt_id</name> <operator pos:start="116:30" pos:end="116:31">&gt;&gt;</operator> <operator pos:start="116:33" pos:end="116:33">(</operator><literal type="number" pos:start="116:34" pos:end="116:34">4</literal><operator pos:start="116:35" pos:end="116:35">*</operator><name pos:start="116:36" pos:end="116:36">i</name><operator pos:start="116:37" pos:end="116:37">)</operator><operator pos:start="116:38" pos:end="116:38">)</operator> <operator pos:start="116:40" pos:end="116:40">&amp;</operator> <literal type="number" pos:start="116:42" pos:end="116:44">0xF</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="117:9" pos:end="117:45"><decl pos:start="117:9" pos:end="117:44"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type> <name pos:start="117:13" pos:end="117:14">js</name> <init pos:start="117:16" pos:end="117:44">= <expr pos:start="117:18" pos:end="117:44"><operator pos:start="117:18" pos:end="117:18">(</operator><name pos:start="117:19" pos:end="117:28">pix_fmt_id</name> <operator pos:start="117:30" pos:end="117:31">&gt;&gt;</operator> <operator pos:start="117:33" pos:end="117:33">(</operator><literal type="number" pos:start="117:34" pos:end="117:34">4</literal><operator pos:start="117:35" pos:end="117:35">*</operator><name pos:start="117:36" pos:end="117:36">j</name><operator pos:start="117:37" pos:end="117:37">)</operator><operator pos:start="117:38" pos:end="117:38">)</operator> <operator pos:start="117:40" pos:end="117:40">&amp;</operator> <literal type="number" pos:start="117:42" pos:end="117:44">0xF</literal></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="118:9" pos:end="119:54"><if pos:start="118:9" pos:end="119:54">if <condition pos:start="118:12" pos:end="118:51">(<expr pos:start="118:13" pos:end="118:50"><name pos:start="118:13" pos:end="118:14">is</name> <operator pos:start="118:16" pos:end="118:17">==</operator> <literal type="number" pos:start="118:19" pos:end="118:19">1</literal> <operator pos:start="118:21" pos:end="118:22">&amp;&amp;</operator> <name pos:start="118:24" pos:end="118:25">js</name> <operator pos:start="118:27" pos:end="118:28">!=</operator> <literal type="number" pos:start="118:30" pos:end="118:30">2</literal> <operator pos:start="118:32" pos:end="118:33">&amp;&amp;</operator> <operator pos:start="118:35" pos:end="118:35">(</operator><name pos:start="118:36" pos:end="118:47"><name pos:start="118:36" pos:end="118:36">i</name> <argument_list type="generic" pos:start="118:38" pos:end="118:47">&lt; <argument pos:start="118:40" pos:end="118:45"><expr pos:start="118:40" pos:end="118:45"><literal type="number" pos:start="118:40" pos:end="118:40">2</literal> <operator pos:start="118:42" pos:end="118:43">||</operator> <name pos:start="118:45" pos:end="118:45">i</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="118:49" pos:end="118:49">5</literal><operator pos:start="118:50" pos:end="118:50">)</operator></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:54"><block_content pos:start="119:13" pos:end="119:54">
            <expr_stmt pos:start="119:13" pos:end="119:54"><expr pos:start="119:13" pos:end="119:53"><name pos:start="119:13" pos:end="119:14">js</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <operator pos:start="119:18" pos:end="119:18">(</operator><name pos:start="119:19" pos:end="119:28">pix_fmt_id</name> <operator pos:start="119:30" pos:end="119:31">&gt;&gt;</operator> <operator pos:start="119:33" pos:end="119:33">(</operator> <literal type="number" pos:start="119:35" pos:end="119:37">8</literal> <operator pos:start="119:37" pos:end="119:37">+</operator> <literal type="number" pos:start="119:39" pos:end="119:39">4</literal><operator pos:start="119:40" pos:end="119:40">*</operator><operator pos:start="119:41" pos:end="119:41">(</operator><name pos:start="119:42" pos:end="119:42">i</name><operator pos:start="119:43" pos:end="119:43">&amp;</operator><literal type="number" pos:start="119:44" pos:end="119:44">1</literal><operator pos:start="119:45" pos:end="119:45">)</operator><operator pos:start="119:46" pos:end="119:46">)</operator><operator pos:start="119:47" pos:end="119:47">)</operator> <operator pos:start="119:49" pos:end="119:49">&amp;</operator> <literal type="number" pos:start="119:51" pos:end="119:53">0xF</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="120:9" pos:end="121:54"><if pos:start="120:9" pos:end="121:54">if <condition pos:start="120:12" pos:end="120:51">(<expr pos:start="120:13" pos:end="120:50"><name pos:start="120:13" pos:end="120:14">is</name> <operator pos:start="120:16" pos:end="120:17">==</operator> <literal type="number" pos:start="120:19" pos:end="120:19">1</literal> <operator pos:start="120:21" pos:end="120:22">&amp;&amp;</operator> <name pos:start="120:24" pos:end="120:25">js</name> <operator pos:start="120:27" pos:end="120:28">!=</operator> <literal type="number" pos:start="120:30" pos:end="120:30">2</literal> <operator pos:start="120:32" pos:end="120:33">&amp;&amp;</operator> <operator pos:start="120:35" pos:end="120:35">(</operator><name pos:start="120:36" pos:end="120:47"><name pos:start="120:36" pos:end="120:36">i</name> <argument_list type="generic" pos:start="120:38" pos:end="120:47">&lt; <argument pos:start="120:40" pos:end="120:45"><expr pos:start="120:40" pos:end="120:45"><literal type="number" pos:start="120:40" pos:end="120:40">2</literal> <operator pos:start="120:42" pos:end="120:43">||</operator> <name pos:start="120:45" pos:end="120:45">i</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="120:49" pos:end="120:49">5</literal><operator pos:start="120:50" pos:end="120:50">)</operator></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:54"><block_content pos:start="121:13" pos:end="121:54">
            <expr_stmt pos:start="121:13" pos:end="121:54"><expr pos:start="121:13" pos:end="121:53"><name pos:start="121:13" pos:end="121:14">js</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <operator pos:start="121:18" pos:end="121:18">(</operator><name pos:start="121:19" pos:end="121:28">pix_fmt_id</name> <operator pos:start="121:30" pos:end="121:31">&gt;&gt;</operator> <operator pos:start="121:33" pos:end="121:33">(</operator><literal type="number" pos:start="121:34" pos:end="121:37">16</literal> <operator pos:start="121:37" pos:end="121:37">+</operator> <literal type="number" pos:start="121:39" pos:end="121:39">4</literal><operator pos:start="121:40" pos:end="121:40">*</operator><operator pos:start="121:41" pos:end="121:41">(</operator><name pos:start="121:42" pos:end="121:42">i</name><operator pos:start="121:43" pos:end="121:43">&amp;</operator><literal type="number" pos:start="121:44" pos:end="121:44">1</literal><operator pos:start="121:45" pos:end="121:45">)</operator><operator pos:start="121:46" pos:end="121:46">)</operator><operator pos:start="121:47" pos:end="121:47">)</operator> <operator pos:start="121:49" pos:end="121:49">&amp;</operator> <literal type="number" pos:start="121:51" pos:end="121:53">0xF</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="122:9" pos:end="289:13"><if pos:start="122:9" pos:end="289:13">if <condition pos:start="122:12" pos:end="122:31">(<expr pos:start="122:13" pos:end="122:30"><name pos:start="122:13" pos:end="122:14">is</name> <operator pos:start="122:16" pos:end="122:17">==</operator> <literal type="number" pos:start="122:19" pos:end="122:19">1</literal> <operator pos:start="122:21" pos:end="122:22">&amp;&amp;</operator> <name pos:start="122:24" pos:end="122:25">js</name> <operator pos:start="122:27" pos:end="122:28">==</operator> <literal type="number" pos:start="122:30" pos:end="122:30">2</literal></expr>)</condition> <block pos:start="122:33" pos:end="289:13">{<block_content pos:start="123:13" pos:end="289:13">
            <if_stmt pos:start="123:13" pos:end="124:50"><if pos:start="123:13" pos:end="123:50">if <condition pos:start="123:16" pos:end="123:22">(<expr pos:start="123:17" pos:end="123:21"><name pos:start="123:17" pos:end="123:17">i</name> <operator pos:start="123:19" pos:end="123:19">&amp;</operator> <literal type="number" pos:start="123:21" pos:end="123:21">1</literal></expr>)</condition><block type="pseudo" pos:start="123:24" pos:end="123:50"><block_content pos:start="123:24" pos:end="123:50"> <expr_stmt pos:start="123:24" pos:end="123:50"><expr pos:start="123:24" pos:end="123:49"><name pos:start="123:24" pos:end="123:35"><name pos:start="123:24" pos:end="123:24">s</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:35">upscale_h</name></name> <operator pos:start="123:37" pos:end="123:38">|=</operator> <literal type="number" pos:start="123:40" pos:end="123:40">1</literal> <operator pos:start="123:42" pos:end="123:43">&lt;&lt;</operator> <operator pos:start="123:45" pos:end="123:45">(</operator><name pos:start="123:46" pos:end="123:46">j</name><operator pos:start="123:47" pos:end="123:47">/</operator><literal type="number" pos:start="123:48" pos:end="123:48">2</literal><operator pos:start="123:49" pos:end="123:49">)</operator></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="124:13" pos:end="124:50">else<block type="pseudo" pos:start="124:24" pos:end="124:50"><block_content pos:start="124:24" pos:end="124:50">       <expr_stmt pos:start="124:24" pos:end="124:50"><expr pos:start="124:24" pos:end="124:49"><name pos:start="124:24" pos:end="124:35"><name pos:start="124:24" pos:end="124:24">s</name><operator pos:start="124:25" pos:end="124:26">-&gt;</operator><name pos:start="124:27" pos:end="124:35">upscale_v</name></name> <operator pos:start="124:37" pos:end="124:38">|=</operator> <literal type="number" pos:start="124:40" pos:end="124:40">1</literal> <operator pos:start="124:42" pos:end="124:43">&lt;&lt;</operator> <operator pos:start="124:45" pos:end="124:45">(</operator><name pos:start="124:46" pos:end="124:46">j</name><operator pos:start="124:47" pos:end="124:47">/</operator><literal type="number" pos:start="124:48" pos:end="124:48">2</literal><operator pos:start="124:49" pos:end="124:49">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <switch pos:start="125:5" pos:end="289:13">switch <condition pos:start="125:12" pos:end="125:23">(<expr pos:start="125:13" pos:end="125:22"><name pos:start="125:13" pos:end="125:22">pix_fmt_id</name></expr>)</condition> <block pos:start="125:25" pos:end="289:13">{<block_content pos:start="126:5" pos:end="289:13">
    <case pos:start="126:5" pos:end="126:20">case <expr pos:start="126:10" pos:end="126:19"><literal type="number" pos:start="126:10" pos:end="126:19">0x11111100</literal></expr>:</case>
        <if_stmt pos:start="127:9" pos:end="289:13"><if pos:start="127:9" pos:end="128:83">if <condition pos:start="127:12" pos:end="127:19">(<expr pos:start="127:13" pos:end="127:18"><name pos:start="127:13" pos:end="127:18"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:18">rgb</name></name></expr>)</condition><block type="pseudo" pos:start="128:13" pos:end="128:83"><block_content pos:start="128:13" pos:end="128:83">
            <expr_stmt pos:start="128:13" pos:end="128:83"><expr pos:start="128:13" pos:end="128:82"><name pos:start="128:13" pos:end="128:29"><name pos:start="128:13" pos:end="128:13">s</name><operator pos:start="128:14" pos:end="128:15">-&gt;</operator><name pos:start="128:16" pos:end="128:20">avctx</name><operator pos:start="128:21" pos:end="128:22">-&gt;</operator><name pos:start="128:23" pos:end="128:29">pix_fmt</name></name> <operator pos:start="128:31" pos:end="128:31">=</operator> <ternary pos:start="128:33" pos:end="128:82"><condition pos:start="128:33" pos:end="128:46"><expr pos:start="128:33" pos:end="128:44"><name pos:start="128:33" pos:end="128:39"><name pos:start="128:33" pos:end="128:33">s</name><operator pos:start="128:34" pos:end="128:35">-&gt;</operator><name pos:start="128:36" pos:end="128:39">bits</name></name> <operator pos:start="128:41" pos:end="128:42">&lt;=</operator> <literal type="number" pos:start="128:44" pos:end="128:44">9</literal></expr> ?</condition><then pos:start="128:48" pos:end="128:63"> <expr pos:start="128:48" pos:end="128:63"><name pos:start="128:48" pos:end="128:63">AV_PIX_FMT_BGR24</name></expr> </then><else pos:start="128:65" pos:end="128:82">: <expr pos:start="128:67" pos:end="128:82"><name pos:start="128:67" pos:end="128:82">AV_PIX_FMT_BGR48</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="129:9" pos:end="289:13">else <block pos:start="129:14" pos:end="289:13">{<block_content pos:start="130:13" pos:end="289:13">
            <if_stmt pos:start="130:13" pos:end="289:13"><if pos:start="130:13" pos:end="132:13">if <condition pos:start="130:16" pos:end="130:100">(<expr pos:start="130:17" pos:end="130:99"><name pos:start="130:17" pos:end="130:34"><name pos:start="130:17" pos:end="130:17">s</name><operator pos:start="130:18" pos:end="130:19">-&gt;</operator><name pos:start="130:20" pos:end="130:31">component_id</name><index pos:start="130:32" pos:end="130:34">[<expr pos:start="130:33" pos:end="130:33"><literal type="number" pos:start="130:33" pos:end="130:33">0</literal></expr>]</index></name> <operator pos:start="130:36" pos:end="130:37">==</operator> <literal type="char" pos:start="130:39" pos:end="130:41">'Q'</literal> <operator pos:start="130:43" pos:end="130:44">&amp;&amp;</operator> <name pos:start="130:46" pos:end="130:63"><name pos:start="130:46" pos:end="130:46">s</name><operator pos:start="130:47" pos:end="130:48">-&gt;</operator><name pos:start="130:49" pos:end="130:60">component_id</name><index pos:start="130:61" pos:end="130:63">[<expr pos:start="130:62" pos:end="130:62"><literal type="number" pos:start="130:62" pos:end="130:62">1</literal></expr>]</index></name> <operator pos:start="130:65" pos:end="130:66">==</operator> <literal type="char" pos:start="130:68" pos:end="130:70">'F'</literal> <operator pos:start="130:72" pos:end="130:73">&amp;&amp;</operator> <name pos:start="130:75" pos:end="130:92"><name pos:start="130:75" pos:end="130:75">s</name><operator pos:start="130:76" pos:end="130:77">-&gt;</operator><name pos:start="130:78" pos:end="130:89">component_id</name><index pos:start="130:90" pos:end="130:92">[<expr pos:start="130:91" pos:end="130:91"><literal type="number" pos:start="130:91" pos:end="130:91">2</literal></expr>]</index></name> <operator pos:start="130:94" pos:end="130:95">==</operator> <literal type="char" pos:start="130:97" pos:end="130:99">'A'</literal></expr>)</condition> <block pos:start="130:102" pos:end="132:13">{<block_content pos:start="131:17" pos:end="131:87">
                <expr_stmt pos:start="131:17" pos:end="131:87"><expr pos:start="131:17" pos:end="131:86"><name pos:start="131:17" pos:end="131:33"><name pos:start="131:17" pos:end="131:17">s</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:24">avctx</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:33">pix_fmt</name></name> <operator pos:start="131:35" pos:end="131:35">=</operator> <ternary pos:start="131:37" pos:end="131:86"><condition pos:start="131:37" pos:end="131:50"><expr pos:start="131:37" pos:end="131:48"><name pos:start="131:37" pos:end="131:43"><name pos:start="131:37" pos:end="131:37">s</name><operator pos:start="131:38" pos:end="131:39">-&gt;</operator><name pos:start="131:40" pos:end="131:43">bits</name></name> <operator pos:start="131:45" pos:end="131:46">&lt;=</operator> <literal type="number" pos:start="131:48" pos:end="131:48">8</literal></expr> ?</condition><then pos:start="131:52" pos:end="131:66"> <expr pos:start="131:52" pos:end="131:66"><name pos:start="131:52" pos:end="131:66">AV_PIX_FMT_GBRP</name></expr> </then><else pos:start="131:68" pos:end="131:86">: <expr pos:start="131:70" pos:end="131:86"><name pos:start="131:70" pos:end="131:86">AV_PIX_FMT_GBRP16</name></expr></else></ternary></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="132:15" pos:end="289:13">else <block pos:start="132:20" pos:end="289:13">{<block_content pos:start="133:17" pos:end="289:13">
                <if_stmt pos:start="133:17" pos:end="134:75"><if pos:start="133:17" pos:end="133:110">if <condition pos:start="133:20" pos:end="133:33">(<expr pos:start="133:21" pos:end="133:32"><name pos:start="133:21" pos:end="133:27"><name pos:start="133:21" pos:end="133:21">s</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:27">bits</name></name> <operator pos:start="133:29" pos:end="133:30">&lt;=</operator> <literal type="number" pos:start="133:32" pos:end="133:32">8</literal></expr>)</condition><block type="pseudo" pos:start="133:35" pos:end="133:110"><block_content pos:start="133:35" pos:end="133:110"> <expr_stmt pos:start="133:35" pos:end="133:110"><expr pos:start="133:35" pos:end="133:109"><name pos:start="133:35" pos:end="133:51"><name pos:start="133:35" pos:end="133:35">s</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:42">avctx</name><operator pos:start="133:43" pos:end="133:44">-&gt;</operator><name pos:start="133:45" pos:end="133:51">pix_fmt</name></name> <operator pos:start="133:53" pos:end="133:53">=</operator> <ternary pos:start="133:55" pos:end="133:109"><condition pos:start="133:55" pos:end="133:68"><expr pos:start="133:55" pos:end="133:66"><name pos:start="133:55" pos:end="133:66"><name pos:start="133:55" pos:end="133:55">s</name><operator pos:start="133:56" pos:end="133:57">-&gt;</operator><name pos:start="133:58" pos:end="133:66">cs_itu601</name></name></expr> ?</condition><then pos:start="133:70" pos:end="133:87"> <expr pos:start="133:70" pos:end="133:87"><name pos:start="133:70" pos:end="133:87">AV_PIX_FMT_YUV444P</name></expr> </then><else pos:start="133:89" pos:end="133:109">: <expr pos:start="133:91" pos:end="133:109"><name pos:start="133:91" pos:end="133:109">AV_PIX_FMT_YUVJ444P</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="134:17" pos:end="134:75">else<block type="pseudo" pos:start="134:35" pos:end="134:75"><block_content pos:start="134:35" pos:end="134:75">              <expr_stmt pos:start="134:35" pos:end="134:75"><expr pos:start="134:35" pos:end="134:74"><name pos:start="134:35" pos:end="134:51"><name pos:start="134:35" pos:end="134:35">s</name><operator pos:start="134:36" pos:end="134:37">-&gt;</operator><name pos:start="134:38" pos:end="134:42">avctx</name><operator pos:start="134:43" pos:end="134:44">-&gt;</operator><name pos:start="134:45" pos:end="134:51">pix_fmt</name></name> <operator pos:start="134:53" pos:end="134:53">=</operator> <name pos:start="134:55" pos:end="134:74">AV_PIX_FMT_YUV444P16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <expr_stmt pos:start="135:13" pos:end="135:87"><expr pos:start="135:13" pos:end="135:86"><name pos:start="135:13" pos:end="135:33"><name pos:start="135:13" pos:end="135:13">s</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:20">avctx</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:33">color_range</name></name> <operator pos:start="135:35" pos:end="135:35">=</operator> <ternary pos:start="135:37" pos:end="135:86"><condition pos:start="135:37" pos:end="135:50"><expr pos:start="135:37" pos:end="135:48"><name pos:start="135:37" pos:end="135:48"><name pos:start="135:37" pos:end="135:37">s</name><operator pos:start="135:38" pos:end="135:39">-&gt;</operator><name pos:start="135:40" pos:end="135:48">cs_itu601</name></name></expr> ?</condition><then pos:start="135:52" pos:end="135:67"> <expr pos:start="135:52" pos:end="135:67"><name pos:start="135:52" pos:end="135:67">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="135:69" pos:end="135:86">: <expr pos:start="135:71" pos:end="135:86"><name pos:start="135:71" pos:end="135:86">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="136:9" pos:end="136:42"><expr pos:start="136:9" pos:end="136:41"><call pos:start="136:9" pos:end="136:41"><name pos:start="136:9" pos:end="136:18">av_assert0</name><argument_list pos:start="136:19" pos:end="136:41">(<argument pos:start="136:20" pos:end="136:40"><expr pos:start="136:20" pos:end="136:40"><name pos:start="136:20" pos:end="136:35"><name pos:start="136:20" pos:end="136:20">s</name><operator pos:start="136:21" pos:end="136:22">-&gt;</operator><name pos:start="136:23" pos:end="136:35">nb_components</name></name> <operator pos:start="136:37" pos:end="136:38">==</operator> <literal type="number" pos:start="136:40" pos:end="136:40">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="137:9" pos:end="137:14">break;</break>
    <case pos:start="138:5" pos:end="138:20">case <expr pos:start="138:10" pos:end="138:19"><literal type="number" pos:start="138:10" pos:end="138:19">0x11111111</literal></expr>:</case>
        <if_stmt pos:start="139:9" pos:end="289:13"><if pos:start="139:9" pos:end="140:83">if <condition pos:start="139:12" pos:end="139:19">(<expr pos:start="139:13" pos:end="139:18"><name pos:start="139:13" pos:end="139:18"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:18">rgb</name></name></expr>)</condition><block type="pseudo" pos:start="140:13" pos:end="140:83"><block_content pos:start="140:13" pos:end="140:83">
            <expr_stmt pos:start="140:13" pos:end="140:83"><expr pos:start="140:13" pos:end="140:82"><name pos:start="140:13" pos:end="140:29"><name pos:start="140:13" pos:end="140:13">s</name><operator pos:start="140:14" pos:end="140:15">-&gt;</operator><name pos:start="140:16" pos:end="140:20">avctx</name><operator pos:start="140:21" pos:end="140:22">-&gt;</operator><name pos:start="140:23" pos:end="140:29">pix_fmt</name></name> <operator pos:start="140:31" pos:end="140:31">=</operator> <ternary pos:start="140:33" pos:end="140:82"><condition pos:start="140:33" pos:end="140:46"><expr pos:start="140:33" pos:end="140:44"><name pos:start="140:33" pos:end="140:39"><name pos:start="140:33" pos:end="140:33">s</name><operator pos:start="140:34" pos:end="140:35">-&gt;</operator><name pos:start="140:36" pos:end="140:39">bits</name></name> <operator pos:start="140:41" pos:end="140:42">&lt;=</operator> <literal type="number" pos:start="140:44" pos:end="140:44">9</literal></expr> ?</condition><then pos:start="140:48" pos:end="140:62"> <expr pos:start="140:48" pos:end="140:62"><name pos:start="140:48" pos:end="140:62">AV_PIX_FMT_ABGR</name></expr> </then><else pos:start="140:64" pos:end="140:82">: <expr pos:start="140:66" pos:end="140:82"><name pos:start="140:66" pos:end="140:82">AV_PIX_FMT_RGBA64</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="141:9" pos:end="289:13">else <block pos:start="141:14" pos:end="289:13">{<block_content pos:start="142:13" pos:end="289:13">
            <if_stmt pos:start="142:13" pos:end="289:13"><if pos:start="142:13" pos:end="144:13">if <condition pos:start="142:16" pos:end="142:56">(<expr pos:start="142:17" pos:end="142:55"><name pos:start="142:17" pos:end="142:34"><name pos:start="142:17" pos:end="142:17">s</name><operator pos:start="142:18" pos:end="142:19">-&gt;</operator><name pos:start="142:20" pos:end="142:34">adobe_transform</name></name> <operator pos:start="142:36" pos:end="142:37">==</operator> <literal type="number" pos:start="142:39" pos:end="142:39">0</literal> <operator pos:start="142:41" pos:end="142:42">&amp;&amp;</operator> <name pos:start="142:44" pos:end="142:50"><name pos:start="142:44" pos:end="142:44">s</name><operator pos:start="142:45" pos:end="142:46">-&gt;</operator><name pos:start="142:47" pos:end="142:50">bits</name></name> <operator pos:start="142:52" pos:end="142:53">&lt;=</operator> <literal type="number" pos:start="142:55" pos:end="142:55">8</literal></expr>)</condition> <block pos:start="142:58" pos:end="144:13">{<block_content pos:start="143:17" pos:end="143:53">
                <expr_stmt pos:start="143:17" pos:end="143:53"><expr pos:start="143:17" pos:end="143:52"><name pos:start="143:17" pos:end="143:33"><name pos:start="143:17" pos:end="143:17">s</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:24">avctx</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:33">pix_fmt</name></name> <operator pos:start="143:35" pos:end="143:35">=</operator> <name pos:start="143:37" pos:end="143:52">AV_PIX_FMT_GBRAP</name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="144:15" pos:end="289:13">else <block pos:start="144:20" pos:end="289:13">{<block_content pos:start="145:17" pos:end="289:13">
                <expr_stmt pos:start="145:17" pos:end="145:95"><expr pos:start="145:17" pos:end="145:94"><name pos:start="145:17" pos:end="145:33"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:24">avctx</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:33">pix_fmt</name></name> <operator pos:start="145:35" pos:end="145:35">=</operator> <ternary pos:start="145:37" pos:end="145:94"><condition pos:start="145:37" pos:end="145:50"><expr pos:start="145:37" pos:end="145:48"><name pos:start="145:37" pos:end="145:43"><name pos:start="145:37" pos:end="145:37">s</name><operator pos:start="145:38" pos:end="145:39">-&gt;</operator><name pos:start="145:40" pos:end="145:43">bits</name></name> <operator pos:start="145:45" pos:end="145:46">&lt;=</operator> <literal type="number" pos:start="145:48" pos:end="145:48">8</literal></expr> ?</condition><then pos:start="145:52" pos:end="145:70"> <expr pos:start="145:52" pos:end="145:70"><name pos:start="145:52" pos:end="145:70">AV_PIX_FMT_YUVA444P</name></expr> </then><else pos:start="145:72" pos:end="145:94">: <expr pos:start="145:74" pos:end="145:94"><name pos:start="145:74" pos:end="145:94">AV_PIX_FMT_YUVA444P16</name></expr></else></ternary></expr>;</expr_stmt>
                <expr_stmt pos:start="146:17" pos:end="146:91"><expr pos:start="146:17" pos:end="146:90"><name pos:start="146:17" pos:end="146:37"><name pos:start="146:17" pos:end="146:17">s</name><operator pos:start="146:18" pos:end="146:19">-&gt;</operator><name pos:start="146:20" pos:end="146:24">avctx</name><operator pos:start="146:25" pos:end="146:26">-&gt;</operator><name pos:start="146:27" pos:end="146:37">color_range</name></name> <operator pos:start="146:39" pos:end="146:39">=</operator> <ternary pos:start="146:41" pos:end="146:90"><condition pos:start="146:41" pos:end="146:54"><expr pos:start="146:41" pos:end="146:52"><name pos:start="146:41" pos:end="146:52"><name pos:start="146:41" pos:end="146:41">s</name><operator pos:start="146:42" pos:end="146:43">-&gt;</operator><name pos:start="146:44" pos:end="146:52">cs_itu601</name></name></expr> ?</condition><then pos:start="146:56" pos:end="146:71"> <expr pos:start="146:56" pos:end="146:71"><name pos:start="146:56" pos:end="146:71">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="146:73" pos:end="146:90">: <expr pos:start="146:75" pos:end="146:90"><name pos:start="146:75" pos:end="146:90">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="147:9" pos:end="147:42"><expr pos:start="147:9" pos:end="147:41"><call pos:start="147:9" pos:end="147:41"><name pos:start="147:9" pos:end="147:18">av_assert0</name><argument_list pos:start="147:19" pos:end="147:41">(<argument pos:start="147:20" pos:end="147:40"><expr pos:start="147:20" pos:end="147:40"><name pos:start="147:20" pos:end="147:35"><name pos:start="147:20" pos:end="147:20">s</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:35">nb_components</name></name> <operator pos:start="147:37" pos:end="147:38">==</operator> <literal type="number" pos:start="147:40" pos:end="147:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="148:9" pos:end="148:14">break;</break>
    <case pos:start="149:5" pos:end="149:20">case <expr pos:start="149:10" pos:end="149:19"><literal type="number" pos:start="149:10" pos:end="149:19">0x22111122</literal></expr>:</case>
        <if_stmt pos:start="150:9" pos:end="289:13"><if pos:start="150:9" pos:end="155:9">if <condition pos:start="150:12" pos:end="150:52">(<expr pos:start="150:13" pos:end="150:51"><name pos:start="150:13" pos:end="150:30"><name pos:start="150:13" pos:end="150:13">s</name><operator pos:start="150:14" pos:end="150:15">-&gt;</operator><name pos:start="150:16" pos:end="150:30">adobe_transform</name></name> <operator pos:start="150:32" pos:end="150:33">==</operator> <literal type="number" pos:start="150:35" pos:end="150:35">0</literal> <operator pos:start="150:37" pos:end="150:38">&amp;&amp;</operator> <name pos:start="150:40" pos:end="150:46"><name pos:start="150:40" pos:end="150:40">s</name><operator pos:start="150:41" pos:end="150:42">-&gt;</operator><name pos:start="150:43" pos:end="150:46">bits</name></name> <operator pos:start="150:48" pos:end="150:49">&lt;=</operator> <literal type="number" pos:start="150:51" pos:end="150:51">8</literal></expr>)</condition> <block pos:start="150:54" pos:end="155:9">{<block_content pos:start="151:13" pos:end="154:41">
            <expr_stmt pos:start="151:13" pos:end="151:49"><expr pos:start="151:13" pos:end="151:48"><name pos:start="151:13" pos:end="151:29"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:20">avctx</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:29">pix_fmt</name></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <name pos:start="151:33" pos:end="151:48">AV_PIX_FMT_GBRAP</name></expr>;</expr_stmt>
            <expr_stmt pos:start="152:13" pos:end="152:29"><expr pos:start="152:13" pos:end="152:28"><name pos:start="152:13" pos:end="152:24"><name pos:start="152:13" pos:end="152:13">s</name><operator pos:start="152:14" pos:end="152:15">-&gt;</operator><name pos:start="152:16" pos:end="152:24">upscale_v</name></name> <operator pos:start="152:26" pos:end="152:26">=</operator> <literal type="number" pos:start="152:28" pos:end="152:28">6</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="153:13" pos:end="153:29"><expr pos:start="153:13" pos:end="153:28"><name pos:start="153:13" pos:end="153:24"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:24">upscale_h</name></name> <operator pos:start="153:26" pos:end="153:26">=</operator> <literal type="number" pos:start="153:28" pos:end="153:28">6</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="154:13" pos:end="154:41"><expr pos:start="154:13" pos:end="154:40"><name pos:start="154:13" pos:end="154:28"><name pos:start="154:13" pos:end="154:13">s</name><operator pos:start="154:14" pos:end="154:15">-&gt;</operator><name pos:start="154:16" pos:end="154:28">chroma_height</name></name> <operator pos:start="154:30" pos:end="154:30">=</operator> <name pos:start="154:32" pos:end="154:40"><name pos:start="154:32" pos:end="154:32">s</name><operator pos:start="154:33" pos:end="154:34">-&gt;</operator><name pos:start="154:35" pos:end="154:40">height</name></name></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="155:11" pos:end="161:9">else if <condition pos:start="155:19" pos:end="155:59">(<expr pos:start="155:20" pos:end="155:58"><name pos:start="155:20" pos:end="155:37"><name pos:start="155:20" pos:end="155:20">s</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:37">adobe_transform</name></name> <operator pos:start="155:39" pos:end="155:40">==</operator> <literal type="number" pos:start="155:42" pos:end="155:42">2</literal> <operator pos:start="155:44" pos:end="155:45">&amp;&amp;</operator> <name pos:start="155:47" pos:end="155:53"><name pos:start="155:47" pos:end="155:47">s</name><operator pos:start="155:48" pos:end="155:49">-&gt;</operator><name pos:start="155:50" pos:end="155:53">bits</name></name> <operator pos:start="155:55" pos:end="155:56">&lt;=</operator> <literal type="number" pos:start="155:58" pos:end="155:58">8</literal></expr>)</condition> <block pos:start="155:61" pos:end="161:9">{<block_content pos:start="156:13" pos:end="160:87">
            <expr_stmt pos:start="156:13" pos:end="156:52"><expr pos:start="156:13" pos:end="156:51"><name pos:start="156:13" pos:end="156:29"><name pos:start="156:13" pos:end="156:13">s</name><operator pos:start="156:14" pos:end="156:15">-&gt;</operator><name pos:start="156:16" pos:end="156:20">avctx</name><operator pos:start="156:21" pos:end="156:22">-&gt;</operator><name pos:start="156:23" pos:end="156:29">pix_fmt</name></name> <operator pos:start="156:31" pos:end="156:31">=</operator> <name pos:start="156:33" pos:end="156:51">AV_PIX_FMT_YUVA444P</name></expr>;</expr_stmt>
            <expr_stmt pos:start="157:13" pos:end="157:29"><expr pos:start="157:13" pos:end="157:28"><name pos:start="157:13" pos:end="157:24"><name pos:start="157:13" pos:end="157:13">s</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:24">upscale_v</name></name> <operator pos:start="157:26" pos:end="157:26">=</operator> <literal type="number" pos:start="157:28" pos:end="157:28">6</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="158:13" pos:end="158:29"><expr pos:start="158:13" pos:end="158:28"><name pos:start="158:13" pos:end="158:24"><name pos:start="158:13" pos:end="158:13">s</name><operator pos:start="158:14" pos:end="158:15">-&gt;</operator><name pos:start="158:16" pos:end="158:24">upscale_h</name></name> <operator pos:start="158:26" pos:end="158:26">=</operator> <literal type="number" pos:start="158:28" pos:end="158:28">6</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="159:13" pos:end="159:41"><expr pos:start="159:13" pos:end="159:40"><name pos:start="159:13" pos:end="159:28"><name pos:start="159:13" pos:end="159:13">s</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:28">chroma_height</name></name> <operator pos:start="159:30" pos:end="159:30">=</operator> <name pos:start="159:32" pos:end="159:40"><name pos:start="159:32" pos:end="159:32">s</name><operator pos:start="159:33" pos:end="159:34">-&gt;</operator><name pos:start="159:35" pos:end="159:40">height</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="160:13" pos:end="160:87"><expr pos:start="160:13" pos:end="160:86"><name pos:start="160:13" pos:end="160:33"><name pos:start="160:13" pos:end="160:13">s</name><operator pos:start="160:14" pos:end="160:15">-&gt;</operator><name pos:start="160:16" pos:end="160:20">avctx</name><operator pos:start="160:21" pos:end="160:22">-&gt;</operator><name pos:start="160:23" pos:end="160:33">color_range</name></name> <operator pos:start="160:35" pos:end="160:35">=</operator> <ternary pos:start="160:37" pos:end="160:86"><condition pos:start="160:37" pos:end="160:50"><expr pos:start="160:37" pos:end="160:48"><name pos:start="160:37" pos:end="160:48"><name pos:start="160:37" pos:end="160:37">s</name><operator pos:start="160:38" pos:end="160:39">-&gt;</operator><name pos:start="160:40" pos:end="160:48">cs_itu601</name></name></expr> ?</condition><then pos:start="160:52" pos:end="160:67"> <expr pos:start="160:52" pos:end="160:67"><name pos:start="160:52" pos:end="160:67">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="160:69" pos:end="160:86">: <expr pos:start="160:71" pos:end="160:86"><name pos:start="160:71" pos:end="160:86">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="161:11" pos:end="289:13">else <block pos:start="161:16" pos:end="289:13">{<block_content pos:start="162:13" pos:end="289:13">
            <if_stmt pos:start="162:13" pos:end="163:72"><if pos:start="162:13" pos:end="162:70">if <condition pos:start="162:16" pos:end="162:29">(<expr pos:start="162:17" pos:end="162:28"><name pos:start="162:17" pos:end="162:23"><name pos:start="162:17" pos:end="162:17">s</name><operator pos:start="162:18" pos:end="162:19">-&gt;</operator><name pos:start="162:20" pos:end="162:23">bits</name></name> <operator pos:start="162:25" pos:end="162:26">&lt;=</operator> <literal type="number" pos:start="162:28" pos:end="162:28">8</literal></expr>)</condition><block type="pseudo" pos:start="162:31" pos:end="162:70"><block_content pos:start="162:31" pos:end="162:70"> <expr_stmt pos:start="162:31" pos:end="162:70"><expr pos:start="162:31" pos:end="162:69"><name pos:start="162:31" pos:end="162:47"><name pos:start="162:31" pos:end="162:31">s</name><operator pos:start="162:32" pos:end="162:33">-&gt;</operator><name pos:start="162:34" pos:end="162:38">avctx</name><operator pos:start="162:39" pos:end="162:40">-&gt;</operator><name pos:start="162:41" pos:end="162:47">pix_fmt</name></name> <operator pos:start="162:49" pos:end="162:49">=</operator> <name pos:start="162:51" pos:end="162:69">AV_PIX_FMT_YUVA420P</name></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="163:13" pos:end="163:72">else<block type="pseudo" pos:start="163:31" pos:end="163:72"><block_content pos:start="163:31" pos:end="163:72">              <expr_stmt pos:start="163:31" pos:end="163:72"><expr pos:start="163:31" pos:end="163:71"><name pos:start="163:31" pos:end="163:47"><name pos:start="163:31" pos:end="163:31">s</name><operator pos:start="163:32" pos:end="163:33">-&gt;</operator><name pos:start="163:34" pos:end="163:38">avctx</name><operator pos:start="163:39" pos:end="163:40">-&gt;</operator><name pos:start="163:41" pos:end="163:47">pix_fmt</name></name> <operator pos:start="163:49" pos:end="163:49">=</operator> <name pos:start="163:51" pos:end="163:71">AV_PIX_FMT_YUVA420P16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <expr_stmt pos:start="164:13" pos:end="164:87"><expr pos:start="164:13" pos:end="164:86"><name pos:start="164:13" pos:end="164:33"><name pos:start="164:13" pos:end="164:13">s</name><operator pos:start="164:14" pos:end="164:15">-&gt;</operator><name pos:start="164:16" pos:end="164:20">avctx</name><operator pos:start="164:21" pos:end="164:22">-&gt;</operator><name pos:start="164:23" pos:end="164:33">color_range</name></name> <operator pos:start="164:35" pos:end="164:35">=</operator> <ternary pos:start="164:37" pos:end="164:86"><condition pos:start="164:37" pos:end="164:50"><expr pos:start="164:37" pos:end="164:48"><name pos:start="164:37" pos:end="164:48"><name pos:start="164:37" pos:end="164:37">s</name><operator pos:start="164:38" pos:end="164:39">-&gt;</operator><name pos:start="164:40" pos:end="164:48">cs_itu601</name></name></expr> ?</condition><then pos:start="164:52" pos:end="164:67"> <expr pos:start="164:52" pos:end="164:67"><name pos:start="164:52" pos:end="164:67">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="164:69" pos:end="164:86">: <expr pos:start="164:71" pos:end="164:86"><name pos:start="164:71" pos:end="164:86">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="165:9" pos:end="165:42"><expr pos:start="165:9" pos:end="165:41"><call pos:start="165:9" pos:end="165:41"><name pos:start="165:9" pos:end="165:18">av_assert0</name><argument_list pos:start="165:19" pos:end="165:41">(<argument pos:start="165:20" pos:end="165:40"><expr pos:start="165:20" pos:end="165:40"><name pos:start="165:20" pos:end="165:35"><name pos:start="165:20" pos:end="165:20">s</name><operator pos:start="165:21" pos:end="165:22">-&gt;</operator><name pos:start="165:23" pos:end="165:35">nb_components</name></name> <operator pos:start="165:37" pos:end="165:38">==</operator> <literal type="number" pos:start="165:40" pos:end="165:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="166:9" pos:end="166:14">break;</break>
    <case pos:start="167:5" pos:end="167:20">case <expr pos:start="167:10" pos:end="167:19"><literal type="number" pos:start="167:10" pos:end="167:19">0x12121100</literal></expr>:</case>
    <case pos:start="168:5" pos:end="168:20">case <expr pos:start="168:10" pos:end="168:19"><literal type="number" pos:start="168:10" pos:end="168:19">0x22122100</literal></expr>:</case>
    <case pos:start="169:5" pos:end="169:20">case <expr pos:start="169:10" pos:end="169:19"><literal type="number" pos:start="169:10" pos:end="169:19">0x21211100</literal></expr>:</case>
    <case pos:start="170:5" pos:end="170:20">case <expr pos:start="170:10" pos:end="170:19"><literal type="number" pos:start="170:10" pos:end="170:19">0x22211200</literal></expr>:</case>
        <if_stmt pos:start="171:9" pos:end="173:28"><if pos:start="171:9" pos:end="171:102">if <condition pos:start="171:12" pos:end="171:25">(<expr pos:start="171:13" pos:end="171:24"><name pos:start="171:13" pos:end="171:19"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:19">bits</name></name> <operator pos:start="171:21" pos:end="171:22">&lt;=</operator> <literal type="number" pos:start="171:24" pos:end="171:24">8</literal></expr>)</condition><block type="pseudo" pos:start="171:27" pos:end="171:102"><block_content pos:start="171:27" pos:end="171:102"> <expr_stmt pos:start="171:27" pos:end="171:102"><expr pos:start="171:27" pos:end="171:101"><name pos:start="171:27" pos:end="171:43"><name pos:start="171:27" pos:end="171:27">s</name><operator pos:start="171:28" pos:end="171:29">-&gt;</operator><name pos:start="171:30" pos:end="171:34">avctx</name><operator pos:start="171:35" pos:end="171:36">-&gt;</operator><name pos:start="171:37" pos:end="171:43">pix_fmt</name></name> <operator pos:start="171:45" pos:end="171:45">=</operator> <ternary pos:start="171:47" pos:end="171:101"><condition pos:start="171:47" pos:end="171:60"><expr pos:start="171:47" pos:end="171:58"><name pos:start="171:47" pos:end="171:58"><name pos:start="171:47" pos:end="171:47">s</name><operator pos:start="171:48" pos:end="171:49">-&gt;</operator><name pos:start="171:50" pos:end="171:58">cs_itu601</name></name></expr> ?</condition><then pos:start="171:62" pos:end="171:79"> <expr pos:start="171:62" pos:end="171:79"><name pos:start="171:62" pos:end="171:79">AV_PIX_FMT_YUV444P</name></expr> </then><else pos:start="171:81" pos:end="171:101">: <expr pos:start="171:83" pos:end="171:101"><name pos:start="171:83" pos:end="171:101">AV_PIX_FMT_YUVJ444P</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="172:9" pos:end="173:28">else<block type="pseudo" pos:start="173:13" pos:end="173:28"><block_content pos:start="173:13" pos:end="173:28">
            <goto pos:start="173:13" pos:end="173:28">goto <name pos:start="173:18" pos:end="173:27">unk_pixfmt</name>;</goto></block_content></block></else></if_stmt>
        <expr_stmt pos:start="174:9" pos:end="174:83"><expr pos:start="174:9" pos:end="174:82"><name pos:start="174:9" pos:end="174:29"><name pos:start="174:9" pos:end="174:9">s</name><operator pos:start="174:10" pos:end="174:11">-&gt;</operator><name pos:start="174:12" pos:end="174:16">avctx</name><operator pos:start="174:17" pos:end="174:18">-&gt;</operator><name pos:start="174:19" pos:end="174:29">color_range</name></name> <operator pos:start="174:31" pos:end="174:31">=</operator> <ternary pos:start="174:33" pos:end="174:82"><condition pos:start="174:33" pos:end="174:46"><expr pos:start="174:33" pos:end="174:44"><name pos:start="174:33" pos:end="174:44"><name pos:start="174:33" pos:end="174:33">s</name><operator pos:start="174:34" pos:end="174:35">-&gt;</operator><name pos:start="174:36" pos:end="174:44">cs_itu601</name></name></expr> ?</condition><then pos:start="174:48" pos:end="174:63"> <expr pos:start="174:48" pos:end="174:63"><name pos:start="174:48" pos:end="174:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="174:65" pos:end="174:82">: <expr pos:start="174:67" pos:end="174:82"><name pos:start="174:67" pos:end="174:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="175:9" pos:end="175:37"><expr pos:start="175:9" pos:end="175:36"><name pos:start="175:9" pos:end="175:24"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:24">chroma_height</name></name> <operator pos:start="175:26" pos:end="175:26">=</operator> <name pos:start="175:28" pos:end="175:36"><name pos:start="175:28" pos:end="175:28">s</name><operator pos:start="175:29" pos:end="175:30">-&gt;</operator><name pos:start="175:31" pos:end="175:36">height</name></name></expr>;</expr_stmt>
        <break pos:start="176:9" pos:end="176:14">break;</break>
    <case pos:start="177:5" pos:end="177:20">case <expr pos:start="177:10" pos:end="177:19"><literal type="number" pos:start="177:10" pos:end="177:19">0x22221100</literal></expr>:</case>
    <case pos:start="178:5" pos:end="178:20">case <expr pos:start="178:10" pos:end="178:19"><literal type="number" pos:start="178:10" pos:end="178:19">0x22112200</literal></expr>:</case>
    <case pos:start="179:5" pos:end="179:20">case <expr pos:start="179:10" pos:end="179:19"><literal type="number" pos:start="179:10" pos:end="179:19">0x11222200</literal></expr>:</case>
        <if_stmt pos:start="180:9" pos:end="182:28"><if pos:start="180:9" pos:end="180:102">if <condition pos:start="180:12" pos:end="180:25">(<expr pos:start="180:13" pos:end="180:24"><name pos:start="180:13" pos:end="180:19"><name pos:start="180:13" pos:end="180:13">s</name><operator pos:start="180:14" pos:end="180:15">-&gt;</operator><name pos:start="180:16" pos:end="180:19">bits</name></name> <operator pos:start="180:21" pos:end="180:22">&lt;=</operator> <literal type="number" pos:start="180:24" pos:end="180:24">8</literal></expr>)</condition><block type="pseudo" pos:start="180:27" pos:end="180:102"><block_content pos:start="180:27" pos:end="180:102"> <expr_stmt pos:start="180:27" pos:end="180:102"><expr pos:start="180:27" pos:end="180:101"><name pos:start="180:27" pos:end="180:43"><name pos:start="180:27" pos:end="180:27">s</name><operator pos:start="180:28" pos:end="180:29">-&gt;</operator><name pos:start="180:30" pos:end="180:34">avctx</name><operator pos:start="180:35" pos:end="180:36">-&gt;</operator><name pos:start="180:37" pos:end="180:43">pix_fmt</name></name> <operator pos:start="180:45" pos:end="180:45">=</operator> <ternary pos:start="180:47" pos:end="180:101"><condition pos:start="180:47" pos:end="180:60"><expr pos:start="180:47" pos:end="180:58"><name pos:start="180:47" pos:end="180:58"><name pos:start="180:47" pos:end="180:47">s</name><operator pos:start="180:48" pos:end="180:49">-&gt;</operator><name pos:start="180:50" pos:end="180:58">cs_itu601</name></name></expr> ?</condition><then pos:start="180:62" pos:end="180:79"> <expr pos:start="180:62" pos:end="180:79"><name pos:start="180:62" pos:end="180:79">AV_PIX_FMT_YUV444P</name></expr> </then><else pos:start="180:81" pos:end="180:101">: <expr pos:start="180:83" pos:end="180:101"><name pos:start="180:83" pos:end="180:101">AV_PIX_FMT_YUVJ444P</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="181:9" pos:end="182:28">else<block type="pseudo" pos:start="182:13" pos:end="182:28"><block_content pos:start="182:13" pos:end="182:28">
            <goto pos:start="182:13" pos:end="182:28">goto <name pos:start="182:18" pos:end="182:27">unk_pixfmt</name>;</goto></block_content></block></else></if_stmt>
        <expr_stmt pos:start="183:9" pos:end="183:83"><expr pos:start="183:9" pos:end="183:82"><name pos:start="183:9" pos:end="183:29"><name pos:start="183:9" pos:end="183:9">s</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:16">avctx</name><operator pos:start="183:17" pos:end="183:18">-&gt;</operator><name pos:start="183:19" pos:end="183:29">color_range</name></name> <operator pos:start="183:31" pos:end="183:31">=</operator> <ternary pos:start="183:33" pos:end="183:82"><condition pos:start="183:33" pos:end="183:46"><expr pos:start="183:33" pos:end="183:44"><name pos:start="183:33" pos:end="183:44"><name pos:start="183:33" pos:end="183:33">s</name><operator pos:start="183:34" pos:end="183:35">-&gt;</operator><name pos:start="183:36" pos:end="183:44">cs_itu601</name></name></expr> ?</condition><then pos:start="183:48" pos:end="183:63"> <expr pos:start="183:48" pos:end="183:63"><name pos:start="183:48" pos:end="183:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="183:65" pos:end="183:82">: <expr pos:start="183:67" pos:end="183:82"><name pos:start="183:67" pos:end="183:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="184:9" pos:end="184:47"><expr pos:start="184:9" pos:end="184:46"><name pos:start="184:9" pos:end="184:24"><name pos:start="184:9" pos:end="184:9">s</name><operator pos:start="184:10" pos:end="184:11">-&gt;</operator><name pos:start="184:12" pos:end="184:24">chroma_height</name></name> <operator pos:start="184:26" pos:end="184:26">=</operator> <operator pos:start="184:28" pos:end="184:28">(</operator><name pos:start="184:29" pos:end="184:37"><name pos:start="184:29" pos:end="184:29">s</name><operator pos:start="184:30" pos:end="184:31">-&gt;</operator><name pos:start="184:32" pos:end="184:37">height</name></name> <operator pos:start="184:39" pos:end="184:39">+</operator> <literal type="number" pos:start="184:41" pos:end="184:41">1</literal><operator pos:start="184:42" pos:end="184:42">)</operator> <operator pos:start="184:44" pos:end="184:44">/</operator> <literal type="number" pos:start="184:46" pos:end="184:46">2</literal></expr>;</expr_stmt>
        <break pos:start="185:9" pos:end="185:14">break;</break>
    <case pos:start="186:5" pos:end="186:20">case <expr pos:start="186:10" pos:end="186:19"><literal type="number" pos:start="186:10" pos:end="186:19">0x11000000</literal></expr>:</case>
    <case pos:start="187:5" pos:end="187:20">case <expr pos:start="187:10" pos:end="187:19"><literal type="number" pos:start="187:10" pos:end="187:19">0x13000000</literal></expr>:</case>
    <case pos:start="188:5" pos:end="188:20">case <expr pos:start="188:10" pos:end="188:19"><literal type="number" pos:start="188:10" pos:end="188:19">0x14000000</literal></expr>:</case>
    <case pos:start="189:5" pos:end="189:20">case <expr pos:start="189:10" pos:end="189:19"><literal type="number" pos:start="189:10" pos:end="189:19">0x31000000</literal></expr>:</case>
    <case pos:start="190:5" pos:end="190:20">case <expr pos:start="190:10" pos:end="190:19"><literal type="number" pos:start="190:10" pos:end="190:19">0x33000000</literal></expr>:</case>
    <case pos:start="191:5" pos:end="191:20">case <expr pos:start="191:10" pos:end="191:19"><literal type="number" pos:start="191:10" pos:end="191:19">0x34000000</literal></expr>:</case>
    <case pos:start="192:5" pos:end="192:20">case <expr pos:start="192:10" pos:end="192:19"><literal type="number" pos:start="192:10" pos:end="192:19">0x41000000</literal></expr>:</case>
    <case pos:start="193:5" pos:end="193:20">case <expr pos:start="193:10" pos:end="193:19"><literal type="number" pos:start="193:10" pos:end="193:19">0x43000000</literal></expr>:</case>
    <case pos:start="194:5" pos:end="194:20">case <expr pos:start="194:10" pos:end="194:19"><literal type="number" pos:start="194:10" pos:end="194:19">0x44000000</literal></expr>:</case>
        <if_stmt pos:start="195:9" pos:end="198:50"><if pos:start="195:9" pos:end="196:49">if<condition pos:start="195:11" pos:end="195:24">(<expr pos:start="195:12" pos:end="195:23"><name pos:start="195:12" pos:end="195:18"><name pos:start="195:12" pos:end="195:12">s</name><operator pos:start="195:13" pos:end="195:14">-&gt;</operator><name pos:start="195:15" pos:end="195:18">bits</name></name> <operator pos:start="195:20" pos:end="195:21">&lt;=</operator> <literal type="number" pos:start="195:23" pos:end="195:23">8</literal></expr>)</condition><block type="pseudo" pos:start="196:13" pos:end="196:49"><block_content pos:start="196:13" pos:end="196:49">
            <expr_stmt pos:start="196:13" pos:end="196:49"><expr pos:start="196:13" pos:end="196:48"><name pos:start="196:13" pos:end="196:29"><name pos:start="196:13" pos:end="196:13">s</name><operator pos:start="196:14" pos:end="196:15">-&gt;</operator><name pos:start="196:16" pos:end="196:20">avctx</name><operator pos:start="196:21" pos:end="196:22">-&gt;</operator><name pos:start="196:23" pos:end="196:29">pix_fmt</name></name> <operator pos:start="196:31" pos:end="196:31">=</operator> <name pos:start="196:33" pos:end="196:48">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="197:9" pos:end="198:50">else<block type="pseudo" pos:start="198:13" pos:end="198:50"><block_content pos:start="198:13" pos:end="198:50">
            <expr_stmt pos:start="198:13" pos:end="198:50"><expr pos:start="198:13" pos:end="198:49"><name pos:start="198:13" pos:end="198:29"><name pos:start="198:13" pos:end="198:13">s</name><operator pos:start="198:14" pos:end="198:15">-&gt;</operator><name pos:start="198:16" pos:end="198:20">avctx</name><operator pos:start="198:21" pos:end="198:22">-&gt;</operator><name pos:start="198:23" pos:end="198:29">pix_fmt</name></name> <operator pos:start="198:31" pos:end="198:31">=</operator> <name pos:start="198:33" pos:end="198:49">AV_PIX_FMT_GRAY16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <break pos:start="199:9" pos:end="199:14">break;</break>
    <case pos:start="200:5" pos:end="200:20">case <expr pos:start="200:10" pos:end="200:19"><literal type="number" pos:start="200:10" pos:end="200:19">0x12111100</literal></expr>:</case>
    <case pos:start="201:5" pos:end="201:20">case <expr pos:start="201:10" pos:end="201:19"><literal type="number" pos:start="201:10" pos:end="201:19">0x14121200</literal></expr>:</case>
    <case pos:start="202:5" pos:end="202:20">case <expr pos:start="202:10" pos:end="202:19"><literal type="number" pos:start="202:10" pos:end="202:19">0x22211100</literal></expr>:</case>
    <case pos:start="203:5" pos:end="203:20">case <expr pos:start="203:10" pos:end="203:19"><literal type="number" pos:start="203:10" pos:end="203:19">0x22112100</literal></expr>:</case>
        <if_stmt pos:start="204:9" pos:end="206:28"><if pos:start="204:9" pos:end="204:102">if <condition pos:start="204:12" pos:end="204:25">(<expr pos:start="204:13" pos:end="204:24"><name pos:start="204:13" pos:end="204:19"><name pos:start="204:13" pos:end="204:13">s</name><operator pos:start="204:14" pos:end="204:15">-&gt;</operator><name pos:start="204:16" pos:end="204:19">bits</name></name> <operator pos:start="204:21" pos:end="204:22">&lt;=</operator> <literal type="number" pos:start="204:24" pos:end="204:24">8</literal></expr>)</condition><block type="pseudo" pos:start="204:27" pos:end="204:102"><block_content pos:start="204:27" pos:end="204:102"> <expr_stmt pos:start="204:27" pos:end="204:102"><expr pos:start="204:27" pos:end="204:101"><name pos:start="204:27" pos:end="204:43"><name pos:start="204:27" pos:end="204:27">s</name><operator pos:start="204:28" pos:end="204:29">-&gt;</operator><name pos:start="204:30" pos:end="204:34">avctx</name><operator pos:start="204:35" pos:end="204:36">-&gt;</operator><name pos:start="204:37" pos:end="204:43">pix_fmt</name></name> <operator pos:start="204:45" pos:end="204:45">=</operator> <ternary pos:start="204:47" pos:end="204:101"><condition pos:start="204:47" pos:end="204:60"><expr pos:start="204:47" pos:end="204:58"><name pos:start="204:47" pos:end="204:58"><name pos:start="204:47" pos:end="204:47">s</name><operator pos:start="204:48" pos:end="204:49">-&gt;</operator><name pos:start="204:50" pos:end="204:58">cs_itu601</name></name></expr> ?</condition><then pos:start="204:62" pos:end="204:79"> <expr pos:start="204:62" pos:end="204:79"><name pos:start="204:62" pos:end="204:79">AV_PIX_FMT_YUV440P</name></expr> </then><else pos:start="204:81" pos:end="204:101">: <expr pos:start="204:83" pos:end="204:101"><name pos:start="204:83" pos:end="204:101">AV_PIX_FMT_YUVJ440P</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="205:9" pos:end="206:28">else<block type="pseudo" pos:start="206:13" pos:end="206:28"><block_content pos:start="206:13" pos:end="206:28">
            <goto pos:start="206:13" pos:end="206:28">goto <name pos:start="206:18" pos:end="206:27">unk_pixfmt</name>;</goto></block_content></block></else></if_stmt>
        <expr_stmt pos:start="207:9" pos:end="207:83"><expr pos:start="207:9" pos:end="207:82"><name pos:start="207:9" pos:end="207:29"><name pos:start="207:9" pos:end="207:9">s</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:16">avctx</name><operator pos:start="207:17" pos:end="207:18">-&gt;</operator><name pos:start="207:19" pos:end="207:29">color_range</name></name> <operator pos:start="207:31" pos:end="207:31">=</operator> <ternary pos:start="207:33" pos:end="207:82"><condition pos:start="207:33" pos:end="207:46"><expr pos:start="207:33" pos:end="207:44"><name pos:start="207:33" pos:end="207:44"><name pos:start="207:33" pos:end="207:33">s</name><operator pos:start="207:34" pos:end="207:35">-&gt;</operator><name pos:start="207:36" pos:end="207:44">cs_itu601</name></name></expr> ?</condition><then pos:start="207:48" pos:end="207:63"> <expr pos:start="207:48" pos:end="207:63"><name pos:start="207:48" pos:end="207:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="207:65" pos:end="207:82">: <expr pos:start="207:67" pos:end="207:82"><name pos:start="207:67" pos:end="207:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="208:9" pos:end="208:47"><expr pos:start="208:9" pos:end="208:46"><name pos:start="208:9" pos:end="208:24"><name pos:start="208:9" pos:end="208:9">s</name><operator pos:start="208:10" pos:end="208:11">-&gt;</operator><name pos:start="208:12" pos:end="208:24">chroma_height</name></name> <operator pos:start="208:26" pos:end="208:26">=</operator> <operator pos:start="208:28" pos:end="208:28">(</operator><name pos:start="208:29" pos:end="208:37"><name pos:start="208:29" pos:end="208:29">s</name><operator pos:start="208:30" pos:end="208:31">-&gt;</operator><name pos:start="208:32" pos:end="208:37">height</name></name> <operator pos:start="208:39" pos:end="208:39">+</operator> <literal type="number" pos:start="208:41" pos:end="208:41">1</literal><operator pos:start="208:42" pos:end="208:42">)</operator> <operator pos:start="208:44" pos:end="208:44">/</operator> <literal type="number" pos:start="208:46" pos:end="208:46">2</literal></expr>;</expr_stmt>
        <break pos:start="209:9" pos:end="209:14">break;</break>
    <case pos:start="210:5" pos:end="210:20">case <expr pos:start="210:10" pos:end="210:19"><literal type="number" pos:start="210:10" pos:end="210:19">0x21111100</literal></expr>:</case>
        <if_stmt pos:start="211:9" pos:end="212:67"><if pos:start="211:9" pos:end="211:102">if <condition pos:start="211:12" pos:end="211:25">(<expr pos:start="211:13" pos:end="211:24"><name pos:start="211:13" pos:end="211:19"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:19">bits</name></name> <operator pos:start="211:21" pos:end="211:22">&lt;=</operator> <literal type="number" pos:start="211:24" pos:end="211:24">8</literal></expr>)</condition><block type="pseudo" pos:start="211:27" pos:end="211:102"><block_content pos:start="211:27" pos:end="211:102"> <expr_stmt pos:start="211:27" pos:end="211:102"><expr pos:start="211:27" pos:end="211:101"><name pos:start="211:27" pos:end="211:43"><name pos:start="211:27" pos:end="211:27">s</name><operator pos:start="211:28" pos:end="211:29">-&gt;</operator><name pos:start="211:30" pos:end="211:34">avctx</name><operator pos:start="211:35" pos:end="211:36">-&gt;</operator><name pos:start="211:37" pos:end="211:43">pix_fmt</name></name> <operator pos:start="211:45" pos:end="211:45">=</operator> <ternary pos:start="211:47" pos:end="211:101"><condition pos:start="211:47" pos:end="211:60"><expr pos:start="211:47" pos:end="211:58"><name pos:start="211:47" pos:end="211:58"><name pos:start="211:47" pos:end="211:47">s</name><operator pos:start="211:48" pos:end="211:49">-&gt;</operator><name pos:start="211:50" pos:end="211:58">cs_itu601</name></name></expr> ?</condition><then pos:start="211:62" pos:end="211:79"> <expr pos:start="211:62" pos:end="211:79"><name pos:start="211:62" pos:end="211:79">AV_PIX_FMT_YUV422P</name></expr> </then><else pos:start="211:81" pos:end="211:101">: <expr pos:start="211:83" pos:end="211:101"><name pos:start="211:83" pos:end="211:101">AV_PIX_FMT_YUVJ422P</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="212:9" pos:end="212:67">else<block type="pseudo" pos:start="212:27" pos:end="212:67"><block_content pos:start="212:27" pos:end="212:67">              <expr_stmt pos:start="212:27" pos:end="212:67"><expr pos:start="212:27" pos:end="212:66"><name pos:start="212:27" pos:end="212:43"><name pos:start="212:27" pos:end="212:27">s</name><operator pos:start="212:28" pos:end="212:29">-&gt;</operator><name pos:start="212:30" pos:end="212:34">avctx</name><operator pos:start="212:35" pos:end="212:36">-&gt;</operator><name pos:start="212:37" pos:end="212:43">pix_fmt</name></name> <operator pos:start="212:45" pos:end="212:45">=</operator> <name pos:start="212:47" pos:end="212:66">AV_PIX_FMT_YUV422P16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <expr_stmt pos:start="213:9" pos:end="213:83"><expr pos:start="213:9" pos:end="213:82"><name pos:start="213:9" pos:end="213:29"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:16">avctx</name><operator pos:start="213:17" pos:end="213:18">-&gt;</operator><name pos:start="213:19" pos:end="213:29">color_range</name></name> <operator pos:start="213:31" pos:end="213:31">=</operator> <ternary pos:start="213:33" pos:end="213:82"><condition pos:start="213:33" pos:end="213:46"><expr pos:start="213:33" pos:end="213:44"><name pos:start="213:33" pos:end="213:44"><name pos:start="213:33" pos:end="213:33">s</name><operator pos:start="213:34" pos:end="213:35">-&gt;</operator><name pos:start="213:36" pos:end="213:44">cs_itu601</name></name></expr> ?</condition><then pos:start="213:48" pos:end="213:63"> <expr pos:start="213:48" pos:end="213:63"><name pos:start="213:48" pos:end="213:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="213:65" pos:end="213:82">: <expr pos:start="213:67" pos:end="213:82"><name pos:start="213:67" pos:end="213:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>
        <break pos:start="214:9" pos:end="214:14">break;</break>
    <case pos:start="215:5" pos:end="215:20">case <expr pos:start="215:10" pos:end="215:19"><literal type="number" pos:start="215:10" pos:end="215:19">0x22121100</literal></expr>:</case>
    <case pos:start="216:5" pos:end="216:20">case <expr pos:start="216:10" pos:end="216:19"><literal type="number" pos:start="216:10" pos:end="216:19">0x22111200</literal></expr>:</case>
        <if_stmt pos:start="217:9" pos:end="219:28"><if pos:start="217:9" pos:end="217:102">if <condition pos:start="217:12" pos:end="217:25">(<expr pos:start="217:13" pos:end="217:24"><name pos:start="217:13" pos:end="217:19"><name pos:start="217:13" pos:end="217:13">s</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:19">bits</name></name> <operator pos:start="217:21" pos:end="217:22">&lt;=</operator> <literal type="number" pos:start="217:24" pos:end="217:24">8</literal></expr>)</condition><block type="pseudo" pos:start="217:27" pos:end="217:102"><block_content pos:start="217:27" pos:end="217:102"> <expr_stmt pos:start="217:27" pos:end="217:102"><expr pos:start="217:27" pos:end="217:101"><name pos:start="217:27" pos:end="217:43"><name pos:start="217:27" pos:end="217:27">s</name><operator pos:start="217:28" pos:end="217:29">-&gt;</operator><name pos:start="217:30" pos:end="217:34">avctx</name><operator pos:start="217:35" pos:end="217:36">-&gt;</operator><name pos:start="217:37" pos:end="217:43">pix_fmt</name></name> <operator pos:start="217:45" pos:end="217:45">=</operator> <ternary pos:start="217:47" pos:end="217:101"><condition pos:start="217:47" pos:end="217:60"><expr pos:start="217:47" pos:end="217:58"><name pos:start="217:47" pos:end="217:58"><name pos:start="217:47" pos:end="217:47">s</name><operator pos:start="217:48" pos:end="217:49">-&gt;</operator><name pos:start="217:50" pos:end="217:58">cs_itu601</name></name></expr> ?</condition><then pos:start="217:62" pos:end="217:79"> <expr pos:start="217:62" pos:end="217:79"><name pos:start="217:62" pos:end="217:79">AV_PIX_FMT_YUV422P</name></expr> </then><else pos:start="217:81" pos:end="217:101">: <expr pos:start="217:83" pos:end="217:101"><name pos:start="217:83" pos:end="217:101">AV_PIX_FMT_YUVJ422P</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="218:9" pos:end="219:28">else<block type="pseudo" pos:start="219:13" pos:end="219:28"><block_content pos:start="219:13" pos:end="219:28">
            <goto pos:start="219:13" pos:end="219:28">goto <name pos:start="219:18" pos:end="219:27">unk_pixfmt</name>;</goto></block_content></block></else></if_stmt>
        <expr_stmt pos:start="220:9" pos:end="220:83"><expr pos:start="220:9" pos:end="220:82"><name pos:start="220:9" pos:end="220:29"><name pos:start="220:9" pos:end="220:9">s</name><operator pos:start="220:10" pos:end="220:11">-&gt;</operator><name pos:start="220:12" pos:end="220:16">avctx</name><operator pos:start="220:17" pos:end="220:18">-&gt;</operator><name pos:start="220:19" pos:end="220:29">color_range</name></name> <operator pos:start="220:31" pos:end="220:31">=</operator> <ternary pos:start="220:33" pos:end="220:82"><condition pos:start="220:33" pos:end="220:46"><expr pos:start="220:33" pos:end="220:44"><name pos:start="220:33" pos:end="220:44"><name pos:start="220:33" pos:end="220:33">s</name><operator pos:start="220:34" pos:end="220:35">-&gt;</operator><name pos:start="220:36" pos:end="220:44">cs_itu601</name></name></expr> ?</condition><then pos:start="220:48" pos:end="220:63"> <expr pos:start="220:48" pos:end="220:63"><name pos:start="220:48" pos:end="220:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="220:65" pos:end="220:82">: <expr pos:start="220:67" pos:end="220:82"><name pos:start="220:67" pos:end="220:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>
        <break pos:start="221:9" pos:end="221:14">break;</break>
    <case pos:start="222:5" pos:end="222:20">case <expr pos:start="222:10" pos:end="222:19"><literal type="number" pos:start="222:10" pos:end="222:19">0x22111100</literal></expr>:</case>
    <case pos:start="223:5" pos:end="223:20">case <expr pos:start="223:10" pos:end="223:19"><literal type="number" pos:start="223:10" pos:end="223:19">0x42111100</literal></expr>:</case>
        <if_stmt pos:start="224:9" pos:end="225:67"><if pos:start="224:9" pos:end="224:102">if <condition pos:start="224:12" pos:end="224:25">(<expr pos:start="224:13" pos:end="224:24"><name pos:start="224:13" pos:end="224:19"><name pos:start="224:13" pos:end="224:13">s</name><operator pos:start="224:14" pos:end="224:15">-&gt;</operator><name pos:start="224:16" pos:end="224:19">bits</name></name> <operator pos:start="224:21" pos:end="224:22">&lt;=</operator> <literal type="number" pos:start="224:24" pos:end="224:24">8</literal></expr>)</condition><block type="pseudo" pos:start="224:27" pos:end="224:102"><block_content pos:start="224:27" pos:end="224:102"> <expr_stmt pos:start="224:27" pos:end="224:102"><expr pos:start="224:27" pos:end="224:101"><name pos:start="224:27" pos:end="224:43"><name pos:start="224:27" pos:end="224:27">s</name><operator pos:start="224:28" pos:end="224:29">-&gt;</operator><name pos:start="224:30" pos:end="224:34">avctx</name><operator pos:start="224:35" pos:end="224:36">-&gt;</operator><name pos:start="224:37" pos:end="224:43">pix_fmt</name></name> <operator pos:start="224:45" pos:end="224:45">=</operator> <ternary pos:start="224:47" pos:end="224:101"><condition pos:start="224:47" pos:end="224:60"><expr pos:start="224:47" pos:end="224:58"><name pos:start="224:47" pos:end="224:58"><name pos:start="224:47" pos:end="224:47">s</name><operator pos:start="224:48" pos:end="224:49">-&gt;</operator><name pos:start="224:50" pos:end="224:58">cs_itu601</name></name></expr> ?</condition><then pos:start="224:62" pos:end="224:79"> <expr pos:start="224:62" pos:end="224:79"><name pos:start="224:62" pos:end="224:79">AV_PIX_FMT_YUV420P</name></expr> </then><else pos:start="224:81" pos:end="224:101">: <expr pos:start="224:83" pos:end="224:101"><name pos:start="224:83" pos:end="224:101">AV_PIX_FMT_YUVJ420P</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="225:9" pos:end="225:67">else<block type="pseudo" pos:start="225:27" pos:end="225:67"><block_content pos:start="225:27" pos:end="225:67">              <expr_stmt pos:start="225:27" pos:end="225:67"><expr pos:start="225:27" pos:end="225:66"><name pos:start="225:27" pos:end="225:43"><name pos:start="225:27" pos:end="225:27">s</name><operator pos:start="225:28" pos:end="225:29">-&gt;</operator><name pos:start="225:30" pos:end="225:34">avctx</name><operator pos:start="225:35" pos:end="225:36">-&gt;</operator><name pos:start="225:37" pos:end="225:43">pix_fmt</name></name> <operator pos:start="225:45" pos:end="225:45">=</operator> <name pos:start="225:47" pos:end="225:66">AV_PIX_FMT_YUV420P16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <expr_stmt pos:start="226:9" pos:end="226:83"><expr pos:start="226:9" pos:end="226:82"><name pos:start="226:9" pos:end="226:29"><name pos:start="226:9" pos:end="226:9">s</name><operator pos:start="226:10" pos:end="226:11">-&gt;</operator><name pos:start="226:12" pos:end="226:16">avctx</name><operator pos:start="226:17" pos:end="226:18">-&gt;</operator><name pos:start="226:19" pos:end="226:29">color_range</name></name> <operator pos:start="226:31" pos:end="226:31">=</operator> <ternary pos:start="226:33" pos:end="226:82"><condition pos:start="226:33" pos:end="226:46"><expr pos:start="226:33" pos:end="226:44"><name pos:start="226:33" pos:end="226:44"><name pos:start="226:33" pos:end="226:33">s</name><operator pos:start="226:34" pos:end="226:35">-&gt;</operator><name pos:start="226:36" pos:end="226:44">cs_itu601</name></name></expr> ?</condition><then pos:start="226:48" pos:end="226:63"> <expr pos:start="226:48" pos:end="226:63"><name pos:start="226:48" pos:end="226:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="226:65" pos:end="226:82">: <expr pos:start="226:67" pos:end="226:82"><name pos:start="226:67" pos:end="226:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>
        <if_stmt pos:start="227:9" pos:end="289:13"><if pos:start="227:9" pos:end="289:13">if <condition pos:start="227:12" pos:end="227:37">(<expr pos:start="227:13" pos:end="227:36"><name pos:start="227:13" pos:end="227:22">pix_fmt_id</name> <operator pos:start="227:24" pos:end="227:25">==</operator> <literal type="number" pos:start="227:27" pos:end="227:36">0x42111100</literal></expr>)</condition> <block pos:start="227:39" pos:end="289:13">{<block_content pos:start="228:13" pos:end="289:13">
            <expr_stmt pos:start="228:13" pos:end="228:29"><expr pos:start="228:13" pos:end="228:28"><name pos:start="228:13" pos:end="228:24"><name pos:start="228:13" pos:end="228:13">s</name><operator pos:start="228:14" pos:end="228:15">-&gt;</operator><name pos:start="228:16" pos:end="228:24">upscale_h</name></name> <operator pos:start="228:26" pos:end="228:26">=</operator> <literal type="number" pos:start="228:28" pos:end="228:28">6</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="229:13" pos:end="229:51"><expr pos:start="229:13" pos:end="229:50"><name pos:start="229:13" pos:end="229:28"><name pos:start="229:13" pos:end="229:13">s</name><operator pos:start="229:14" pos:end="229:15">-&gt;</operator><name pos:start="229:16" pos:end="229:28">chroma_height</name></name> <operator pos:start="229:30" pos:end="229:30">=</operator> <operator pos:start="229:32" pos:end="229:32">(</operator><name pos:start="229:33" pos:end="229:41"><name pos:start="229:33" pos:end="229:33">s</name><operator pos:start="229:34" pos:end="229:35">-&gt;</operator><name pos:start="229:36" pos:end="229:41">height</name></name> <operator pos:start="229:43" pos:end="229:43">+</operator> <literal type="number" pos:start="229:45" pos:end="229:45">1</literal><operator pos:start="229:46" pos:end="229:46">)</operator> <operator pos:start="229:48" pos:end="229:48">/</operator> <literal type="number" pos:start="229:50" pos:end="229:50">2</literal></expr>;</expr_stmt>
        <break pos:start="230:9" pos:end="230:14">break;</break>
    <case pos:start="231:5" pos:end="231:20">case <expr pos:start="231:10" pos:end="231:19"><literal type="number" pos:start="231:10" pos:end="231:19">0x41111100</literal></expr>:</case>
        <if_stmt pos:start="232:9" pos:end="234:28"><if pos:start="232:9" pos:end="232:102">if <condition pos:start="232:12" pos:end="232:25">(<expr pos:start="232:13" pos:end="232:24"><name pos:start="232:13" pos:end="232:19"><name pos:start="232:13" pos:end="232:13">s</name><operator pos:start="232:14" pos:end="232:15">-&gt;</operator><name pos:start="232:16" pos:end="232:19">bits</name></name> <operator pos:start="232:21" pos:end="232:22">&lt;=</operator> <literal type="number" pos:start="232:24" pos:end="232:24">8</literal></expr>)</condition><block type="pseudo" pos:start="232:27" pos:end="232:102"><block_content pos:start="232:27" pos:end="232:102"> <expr_stmt pos:start="232:27" pos:end="232:102"><expr pos:start="232:27" pos:end="232:101"><name pos:start="232:27" pos:end="232:43"><name pos:start="232:27" pos:end="232:27">s</name><operator pos:start="232:28" pos:end="232:29">-&gt;</operator><name pos:start="232:30" pos:end="232:34">avctx</name><operator pos:start="232:35" pos:end="232:36">-&gt;</operator><name pos:start="232:37" pos:end="232:43">pix_fmt</name></name> <operator pos:start="232:45" pos:end="232:45">=</operator> <ternary pos:start="232:47" pos:end="232:101"><condition pos:start="232:47" pos:end="232:60"><expr pos:start="232:47" pos:end="232:58"><name pos:start="232:47" pos:end="232:58"><name pos:start="232:47" pos:end="232:47">s</name><operator pos:start="232:48" pos:end="232:49">-&gt;</operator><name pos:start="232:50" pos:end="232:58">cs_itu601</name></name></expr> ?</condition><then pos:start="232:62" pos:end="232:79"> <expr pos:start="232:62" pos:end="232:79"><name pos:start="232:62" pos:end="232:79">AV_PIX_FMT_YUV411P</name></expr> </then><else pos:start="232:81" pos:end="232:101">: <expr pos:start="232:83" pos:end="232:101"><name pos:start="232:83" pos:end="232:101">AV_PIX_FMT_YUVJ411P</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="233:9" pos:end="234:28">else<block type="pseudo" pos:start="234:13" pos:end="234:28"><block_content pos:start="234:13" pos:end="234:28">
            <goto pos:start="234:13" pos:end="234:28">goto <name pos:start="234:18" pos:end="234:27">unk_pixfmt</name>;</goto></block_content></block></else></if_stmt>
        <expr_stmt pos:start="235:9" pos:end="235:83"><expr pos:start="235:9" pos:end="235:82"><name pos:start="235:9" pos:end="235:29"><name pos:start="235:9" pos:end="235:9">s</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:16">avctx</name><operator pos:start="235:17" pos:end="235:18">-&gt;</operator><name pos:start="235:19" pos:end="235:29">color_range</name></name> <operator pos:start="235:31" pos:end="235:31">=</operator> <ternary pos:start="235:33" pos:end="235:82"><condition pos:start="235:33" pos:end="235:46"><expr pos:start="235:33" pos:end="235:44"><name pos:start="235:33" pos:end="235:44"><name pos:start="235:33" pos:end="235:33">s</name><operator pos:start="235:34" pos:end="235:35">-&gt;</operator><name pos:start="235:36" pos:end="235:44">cs_itu601</name></name></expr> ?</condition><then pos:start="235:48" pos:end="235:63"> <expr pos:start="235:48" pos:end="235:63"><name pos:start="235:48" pos:end="235:63">AVCOL_RANGE_MPEG</name></expr> </then><else pos:start="235:65" pos:end="235:82">: <expr pos:start="235:67" pos:end="235:82"><name pos:start="235:67" pos:end="235:82">AVCOL_RANGE_JPEG</name></expr></else></ternary></expr>;</expr_stmt>
        <break pos:start="236:9" pos:end="236:14">break;</break>
    <default pos:start="237:5" pos:end="237:12">default:</default>
<label pos:start="238:1" pos:end="238:11"><name pos:start="238:1" pos:end="238:10">unk_pixfmt</name>:</label>
        <expr_stmt pos:start="239:9" pos:end="239:84"><expr pos:start="239:9" pos:end="239:83"><call pos:start="239:9" pos:end="239:83"><name pos:start="239:9" pos:end="239:14">av_log</name><argument_list pos:start="239:15" pos:end="239:83">(<argument pos:start="239:16" pos:end="239:23"><expr pos:start="239:16" pos:end="239:23"><name pos:start="239:16" pos:end="239:23"><name pos:start="239:16" pos:end="239:16">s</name><operator pos:start="239:17" pos:end="239:18">-&gt;</operator><name pos:start="239:19" pos:end="239:23">avctx</name></name></expr></argument>, <argument pos:start="239:26" pos:end="239:37"><expr pos:start="239:26" pos:end="239:37"><name pos:start="239:26" pos:end="239:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="239:40" pos:end="239:70"><expr pos:start="239:40" pos:end="239:70"><literal type="string" pos:start="239:40" pos:end="239:70">"Unhandled pixel format 0x%x\n"</literal></expr></argument>, <argument pos:start="239:73" pos:end="239:82"><expr pos:start="239:73" pos:end="239:82"><name pos:start="239:73" pos:end="239:82">pix_fmt_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="240:9" pos:end="240:40"><expr pos:start="240:9" pos:end="240:39"><name pos:start="240:9" pos:end="240:20"><name pos:start="240:9" pos:end="240:9">s</name><operator pos:start="240:10" pos:end="240:11">-&gt;</operator><name pos:start="240:12" pos:end="240:20">upscale_h</name></name> <operator pos:start="240:22" pos:end="240:22">=</operator> <name pos:start="240:24" pos:end="240:35"><name pos:start="240:24" pos:end="240:24">s</name><operator pos:start="240:25" pos:end="240:26">-&gt;</operator><name pos:start="240:27" pos:end="240:35">upscale_v</name></name> <operator pos:start="240:37" pos:end="240:37">=</operator> <literal type="number" pos:start="240:39" pos:end="240:39">0</literal></expr>;</expr_stmt>
        <return pos:start="241:9" pos:end="241:36">return <expr pos:start="241:16" pos:end="241:35"><name pos:start="241:16" pos:end="241:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    <if_stmt pos:start="242:5" pos:end="289:13"><if pos:start="242:5" pos:end="289:13">if <condition pos:start="242:8" pos:end="242:59">(<expr pos:start="242:9" pos:end="242:58"><operator pos:start="242:9" pos:end="242:9">(</operator><name pos:start="242:10" pos:end="242:21"><name pos:start="242:10" pos:end="242:10">s</name><operator pos:start="242:11" pos:end="242:12">-&gt;</operator><name pos:start="242:13" pos:end="242:21">upscale_h</name></name> <operator pos:start="242:23" pos:end="242:24">||</operator> <name pos:start="242:26" pos:end="242:37"><name pos:start="242:26" pos:end="242:26">s</name><operator pos:start="242:27" pos:end="242:28">-&gt;</operator><name pos:start="242:29" pos:end="242:37">upscale_v</name></name><operator pos:start="242:38" pos:end="242:38">)</operator> <operator pos:start="242:40" pos:end="242:41">&amp;&amp;</operator> <name pos:start="242:43" pos:end="242:58"><name pos:start="242:43" pos:end="242:43">s</name><operator pos:start="242:44" pos:end="242:45">-&gt;</operator><name pos:start="242:46" pos:end="242:50">avctx</name><operator pos:start="242:51" pos:end="242:52">-&gt;</operator><name pos:start="242:53" pos:end="242:58">lowres</name></name></expr>)</condition> <block pos:start="242:61" pos:end="289:13">{<block_content pos:start="243:9" pos:end="289:13">
        <expr_stmt pos:start="243:9" pos:end="243:87"><expr pos:start="243:9" pos:end="243:86"><call pos:start="243:9" pos:end="243:86"><name pos:start="243:9" pos:end="243:14">av_log</name><argument_list pos:start="243:15" pos:end="243:86">(<argument pos:start="243:16" pos:end="243:23"><expr pos:start="243:16" pos:end="243:23"><name pos:start="243:16" pos:end="243:23"><name pos:start="243:16" pos:end="243:16">s</name><operator pos:start="243:17" pos:end="243:18">-&gt;</operator><name pos:start="243:19" pos:end="243:23">avctx</name></name></expr></argument>, <argument pos:start="243:26" pos:end="243:37"><expr pos:start="243:26" pos:end="243:37"><name pos:start="243:26" pos:end="243:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="243:40" pos:end="243:85"><expr pos:start="243:40" pos:end="243:85"><literal type="string" pos:start="243:40" pos:end="243:85">"lowres not supported for weird subsampling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="244:9" pos:end="244:36">return <expr pos:start="244:16" pos:end="244:35"><name pos:start="244:16" pos:end="244:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    <if_stmt pos:start="245:5" pos:end="289:13"><if pos:start="245:5" pos:end="289:13">if <condition pos:start="245:8" pos:end="245:14">(<expr pos:start="245:9" pos:end="245:13"><name pos:start="245:9" pos:end="245:13"><name pos:start="245:9" pos:end="245:9">s</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:13">ls</name></name></expr>)</condition> <block pos:start="245:16" pos:end="289:13">{<block_content pos:start="246:9" pos:end="289:13">
        <expr_stmt pos:start="246:9" pos:end="246:40"><expr pos:start="246:9" pos:end="246:39"><name pos:start="246:9" pos:end="246:20"><name pos:start="246:9" pos:end="246:9">s</name><operator pos:start="246:10" pos:end="246:11">-&gt;</operator><name pos:start="246:12" pos:end="246:20">upscale_h</name></name> <operator pos:start="246:22" pos:end="246:22">=</operator> <name pos:start="246:24" pos:end="246:35"><name pos:start="246:24" pos:end="246:24">s</name><operator pos:start="246:25" pos:end="246:26">-&gt;</operator><name pos:start="246:27" pos:end="246:35">upscale_v</name></name> <operator pos:start="246:37" pos:end="246:37">=</operator> <literal type="number" pos:start="246:39" pos:end="246:39">0</literal></expr>;</expr_stmt>
        <if_stmt pos:start="247:9" pos:end="254:50"><if pos:start="247:9" pos:end="248:49">if <condition pos:start="247:12" pos:end="247:33">(<expr pos:start="247:13" pos:end="247:32"><name pos:start="247:13" pos:end="247:28"><name pos:start="247:13" pos:end="247:13">s</name><operator pos:start="247:14" pos:end="247:15">-&gt;</operator><name pos:start="247:16" pos:end="247:28">nb_components</name></name> <operator pos:start="247:30" pos:end="247:30">&gt;</operator> <literal type="number" pos:start="247:32" pos:end="247:32">1</literal></expr>)</condition><block type="pseudo" pos:start="248:13" pos:end="248:49"><block_content pos:start="248:13" pos:end="248:49">
            <expr_stmt pos:start="248:13" pos:end="248:49"><expr pos:start="248:13" pos:end="248:48"><name pos:start="248:13" pos:end="248:29"><name pos:start="248:13" pos:end="248:13">s</name><operator pos:start="248:14" pos:end="248:15">-&gt;</operator><name pos:start="248:16" pos:end="248:20">avctx</name><operator pos:start="248:21" pos:end="248:22">-&gt;</operator><name pos:start="248:23" pos:end="248:29">pix_fmt</name></name> <operator pos:start="248:31" pos:end="248:31">=</operator> <name pos:start="248:33" pos:end="248:48">AV_PIX_FMT_RGB24</name></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="249:9" pos:end="250:48">else if <condition pos:start="249:17" pos:end="249:50">(<expr pos:start="249:18" pos:end="249:49"><name pos:start="249:18" pos:end="249:33"><name pos:start="249:18" pos:end="249:18">s</name><operator pos:start="249:19" pos:end="249:20">-&gt;</operator><name pos:start="249:21" pos:end="249:33">palette_index</name></name> <operator pos:start="249:35" pos:end="249:36">&amp;&amp;</operator> <name pos:start="249:38" pos:end="249:44"><name pos:start="249:38" pos:end="249:38">s</name><operator pos:start="249:39" pos:end="249:40">-&gt;</operator><name pos:start="249:41" pos:end="249:44">bits</name></name> <operator pos:start="249:46" pos:end="249:47">&lt;=</operator> <literal type="number" pos:start="249:49" pos:end="249:49">8</literal></expr>)</condition><block type="pseudo" pos:start="250:13" pos:end="250:48"><block_content pos:start="250:13" pos:end="250:48">
            <expr_stmt pos:start="250:13" pos:end="250:48"><expr pos:start="250:13" pos:end="250:47"><name pos:start="250:13" pos:end="250:29"><name pos:start="250:13" pos:end="250:13">s</name><operator pos:start="250:14" pos:end="250:15">-&gt;</operator><name pos:start="250:16" pos:end="250:20">avctx</name><operator pos:start="250:21" pos:end="250:22">-&gt;</operator><name pos:start="250:23" pos:end="250:29">pix_fmt</name></name> <operator pos:start="250:31" pos:end="250:31">=</operator> <name pos:start="250:33" pos:end="250:47">AV_PIX_FMT_PAL8</name></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="251:9" pos:end="252:49">else if <condition pos:start="251:17" pos:end="251:30">(<expr pos:start="251:18" pos:end="251:29"><name pos:start="251:18" pos:end="251:24"><name pos:start="251:18" pos:end="251:18">s</name><operator pos:start="251:19" pos:end="251:20">-&gt;</operator><name pos:start="251:21" pos:end="251:24">bits</name></name> <operator pos:start="251:26" pos:end="251:27">&lt;=</operator> <literal type="number" pos:start="251:29" pos:end="251:29">8</literal></expr>)</condition><block type="pseudo" pos:start="252:13" pos:end="252:49"><block_content pos:start="252:13" pos:end="252:49">
            <expr_stmt pos:start="252:13" pos:end="252:49"><expr pos:start="252:13" pos:end="252:48"><name pos:start="252:13" pos:end="252:29"><name pos:start="252:13" pos:end="252:13">s</name><operator pos:start="252:14" pos:end="252:15">-&gt;</operator><name pos:start="252:16" pos:end="252:20">avctx</name><operator pos:start="252:21" pos:end="252:22">-&gt;</operator><name pos:start="252:23" pos:end="252:29">pix_fmt</name></name> <operator pos:start="252:31" pos:end="252:31">=</operator> <name pos:start="252:33" pos:end="252:48">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="253:9" pos:end="254:50">else<block type="pseudo" pos:start="254:13" pos:end="254:50"><block_content pos:start="254:13" pos:end="254:50">
            <expr_stmt pos:start="254:13" pos:end="254:50"><expr pos:start="254:13" pos:end="254:49"><name pos:start="254:13" pos:end="254:29"><name pos:start="254:13" pos:end="254:13">s</name><operator pos:start="254:14" pos:end="254:15">-&gt;</operator><name pos:start="254:16" pos:end="254:20">avctx</name><operator pos:start="254:21" pos:end="254:22">-&gt;</operator><name pos:start="254:23" pos:end="254:29">pix_fmt</name></name> <operator pos:start="254:31" pos:end="254:31">=</operator> <name pos:start="254:33" pos:end="254:49">AV_PIX_FMT_GRAY16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="255:5" pos:end="255:57"><expr pos:start="255:5" pos:end="255:56"><name pos:start="255:5" pos:end="255:15"><name pos:start="255:5" pos:end="255:5">s</name><operator pos:start="255:6" pos:end="255:7">-&gt;</operator><name pos:start="255:8" pos:end="255:15">pix_desc</name></name> <operator pos:start="255:17" pos:end="255:17">=</operator> <call pos:start="255:19" pos:end="255:56"><name pos:start="255:19" pos:end="255:37">av_pix_fmt_desc_get</name><argument_list pos:start="255:38" pos:end="255:56">(<argument pos:start="255:39" pos:end="255:55"><expr pos:start="255:39" pos:end="255:55"><name pos:start="255:39" pos:end="255:55"><name pos:start="255:39" pos:end="255:39">s</name><operator pos:start="255:40" pos:end="255:41">-&gt;</operator><name pos:start="255:42" pos:end="255:46">avctx</name><operator pos:start="255:47" pos:end="255:48">-&gt;</operator><name pos:start="255:49" pos:end="255:55">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="256:5" pos:end="289:13"><if pos:start="256:5" pos:end="289:13">if <condition pos:start="256:8" pos:end="256:21">(<expr pos:start="256:9" pos:end="256:20"><operator pos:start="256:9" pos:end="256:9">!</operator><name pos:start="256:10" pos:end="256:20"><name pos:start="256:10" pos:end="256:10">s</name><operator pos:start="256:11" pos:end="256:12">-&gt;</operator><name pos:start="256:13" pos:end="256:20">pix_desc</name></name></expr>)</condition> <block pos:start="256:23" pos:end="289:13">{<block_content pos:start="257:9" pos:end="289:13">
        <expr_stmt pos:start="257:9" pos:end="257:85"><expr pos:start="257:9" pos:end="257:84"><call pos:start="257:9" pos:end="257:84"><name pos:start="257:9" pos:end="257:14">av_log</name><argument_list pos:start="257:15" pos:end="257:84">(<argument pos:start="257:16" pos:end="257:23"><expr pos:start="257:16" pos:end="257:23"><name pos:start="257:16" pos:end="257:23"><name pos:start="257:16" pos:end="257:16">s</name><operator pos:start="257:17" pos:end="257:18">-&gt;</operator><name pos:start="257:19" pos:end="257:23">avctx</name></name></expr></argument>, <argument pos:start="257:26" pos:end="257:37"><expr pos:start="257:26" pos:end="257:37"><name pos:start="257:26" pos:end="257:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="257:40" pos:end="257:83"><expr pos:start="257:40" pos:end="257:83"><literal type="string" pos:start="257:40" pos:end="257:83">"Could not get a pixel format descriptor.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="258:9" pos:end="258:27">return <expr pos:start="258:16" pos:end="258:26"><name pos:start="258:16" pos:end="258:26">AVERROR_BUG</name></expr>;</return>
    <expr_stmt pos:start="259:5" pos:end="259:35"><expr pos:start="259:5" pos:end="259:34"><call pos:start="259:5" pos:end="259:34"><name pos:start="259:5" pos:end="259:18">av_frame_unref</name><argument_list pos:start="259:19" pos:end="259:34">(<argument pos:start="259:20" pos:end="259:33"><expr pos:start="259:20" pos:end="259:33"><name pos:start="259:20" pos:end="259:33"><name pos:start="259:20" pos:end="259:20">s</name><operator pos:start="259:21" pos:end="259:22">-&gt;</operator><name pos:start="259:23" pos:end="259:33">picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="260:5" pos:end="261:18"><if pos:start="260:5" pos:end="261:18">if <condition pos:start="260:8" pos:end="260:76">(<expr pos:start="260:9" pos:end="260:75"><call pos:start="260:9" pos:end="260:71"><name pos:start="260:9" pos:end="260:21">ff_get_buffer</name><argument_list pos:start="260:22" pos:end="260:71">(<argument pos:start="260:23" pos:end="260:30"><expr pos:start="260:23" pos:end="260:30"><name pos:start="260:23" pos:end="260:30"><name pos:start="260:23" pos:end="260:23">s</name><operator pos:start="260:24" pos:end="260:25">-&gt;</operator><name pos:start="260:26" pos:end="260:30">avctx</name></name></expr></argument>, <argument pos:start="260:33" pos:end="260:46"><expr pos:start="260:33" pos:end="260:46"><name pos:start="260:33" pos:end="260:46"><name pos:start="260:33" pos:end="260:33">s</name><operator pos:start="260:34" pos:end="260:35">-&gt;</operator><name pos:start="260:36" pos:end="260:46">picture_ptr</name></name></expr></argument>, <argument pos:start="260:49" pos:end="260:70"><expr pos:start="260:49" pos:end="260:70"><name pos:start="260:49" pos:end="260:70">AV_GET_BUFFER_FLAG_REF</name></expr></argument>)</argument_list></call> <operator pos:start="260:73" pos:end="260:73">&lt;</operator> <literal type="number" pos:start="260:75" pos:end="260:75">0</literal></expr>)</condition><block type="pseudo" pos:start="261:9" pos:end="261:18"><block_content pos:start="261:9" pos:end="261:18">
        <return pos:start="261:9" pos:end="261:18">return <expr pos:start="261:16" pos:end="261:17"><operator pos:start="261:16" pos:end="261:16">-</operator><literal type="number" pos:start="261:17" pos:end="261:17">1</literal></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="262:5" pos:end="262:50"><expr pos:start="262:5" pos:end="262:49"><name pos:start="262:5" pos:end="262:29"><name pos:start="262:5" pos:end="262:5">s</name><operator pos:start="262:6" pos:end="262:7">-&gt;</operator><name pos:start="262:8" pos:end="262:18">picture_ptr</name><operator pos:start="262:19" pos:end="262:20">-&gt;</operator><name pos:start="262:21" pos:end="262:29">pict_type</name></name> <operator pos:start="262:31" pos:end="262:31">=</operator> <name pos:start="262:33" pos:end="262:49">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>
    <expr_stmt pos:start="263:5" pos:end="263:34"><expr pos:start="263:5" pos:end="263:33"><name pos:start="263:5" pos:end="263:29"><name pos:start="263:5" pos:end="263:5">s</name><operator pos:start="263:6" pos:end="263:7">-&gt;</operator><name pos:start="263:8" pos:end="263:18">picture_ptr</name><operator pos:start="263:19" pos:end="263:20">-&gt;</operator><name pos:start="263:21" pos:end="263:29">key_frame</name></name> <operator pos:start="263:31" pos:end="263:31">=</operator> <literal type="number" pos:start="263:33" pos:end="263:33">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="264:5" pos:end="264:34"><expr pos:start="264:5" pos:end="264:33"><name pos:start="264:5" pos:end="264:18"><name pos:start="264:5" pos:end="264:5">s</name><operator pos:start="264:6" pos:end="264:7">-&gt;</operator><name pos:start="264:8" pos:end="264:18">got_picture</name></name>            <operator pos:start="264:31" pos:end="264:31">=</operator> <literal type="number" pos:start="264:33" pos:end="264:33">1</literal></expr>;</expr_stmt>
    <for pos:start="265:5" pos:end="266:70">for <control pos:start="265:9" pos:end="265:27">(<init pos:start="265:10" pos:end="265:15"><expr pos:start="265:10" pos:end="265:14"><name pos:start="265:10" pos:end="265:10">i</name> <operator pos:start="265:12" pos:end="265:12">=</operator> <literal type="number" pos:start="265:14" pos:end="265:14">0</literal></expr>;</init> <condition pos:start="265:17" pos:end="265:22"><expr pos:start="265:17" pos:end="265:21"><name pos:start="265:17" pos:end="265:17">i</name> <operator pos:start="265:19" pos:end="265:19">&lt;</operator> <literal type="number" pos:start="265:21" pos:end="265:21">4</literal></expr>;</condition> <incr pos:start="265:24" pos:end="265:26"><expr pos:start="265:24" pos:end="265:26"><name pos:start="265:24" pos:end="265:24">i</name><operator pos:start="265:25" pos:end="265:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="266:9" pos:end="266:70"><block_content pos:start="266:9" pos:end="266:70">
        <expr_stmt pos:start="266:9" pos:end="266:70"><expr pos:start="266:9" pos:end="266:69"><name pos:start="266:9" pos:end="266:22"><name pos:start="266:9" pos:end="266:9">s</name><operator pos:start="266:10" pos:end="266:11">-&gt;</operator><name pos:start="266:12" pos:end="266:19">linesize</name><index pos:start="266:20" pos:end="266:22">[<expr pos:start="266:21" pos:end="266:21"><name pos:start="266:21" pos:end="266:21">i</name></expr>]</index></name> <operator pos:start="266:24" pos:end="266:24">=</operator> <name pos:start="266:26" pos:end="266:52"><name pos:start="266:26" pos:end="266:26">s</name><operator pos:start="266:27" pos:end="266:28">-&gt;</operator><name pos:start="266:29" pos:end="266:39">picture_ptr</name><operator pos:start="266:40" pos:end="266:41">-&gt;</operator><name pos:start="266:42" pos:end="266:49">linesize</name><index pos:start="266:50" pos:end="266:52">[<expr pos:start="266:51" pos:end="266:51"><name pos:start="266:51" pos:end="266:51">i</name></expr>]</index></name> <operator pos:start="266:54" pos:end="266:55">&lt;&lt;</operator> <name pos:start="266:57" pos:end="266:69"><name pos:start="266:57" pos:end="266:57">s</name><operator pos:start="266:58" pos:end="266:59">-&gt;</operator><name pos:start="266:60" pos:end="266:69">interlaced</name></name></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="267:5" pos:end="269:45"><expr pos:start="267:5" pos:end="269:44"><call pos:start="267:5" pos:end="269:44"><name pos:start="267:5" pos:end="267:11">av_dlog</name><argument_list pos:start="267:12" pos:end="269:44">(<argument pos:start="267:13" pos:end="267:20"><expr pos:start="267:13" pos:end="267:20"><name pos:start="267:13" pos:end="267:20"><name pos:start="267:13" pos:end="267:13">s</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:20">avctx</name></name></expr></argument>, <argument pos:start="267:23" pos:end="267:43"><expr pos:start="267:23" pos:end="267:43"><literal type="string" pos:start="267:23" pos:end="267:43">"%d %d %d %d %d %d\n"</literal></expr></argument>,
            <argument pos:start="268:13" pos:end="268:20"><expr pos:start="268:13" pos:end="268:20"><name pos:start="268:13" pos:end="268:20"><name pos:start="268:13" pos:end="268:13">s</name><operator pos:start="268:14" pos:end="268:15">-&gt;</operator><name pos:start="268:16" pos:end="268:20">width</name></name></expr></argument>, <argument pos:start="268:23" pos:end="268:31"><expr pos:start="268:23" pos:end="268:31"><name pos:start="268:23" pos:end="268:31"><name pos:start="268:23" pos:end="268:23">s</name><operator pos:start="268:24" pos:end="268:25">-&gt;</operator><name pos:start="268:26" pos:end="268:31">height</name></name></expr></argument>, <argument pos:start="268:34" pos:end="268:47"><expr pos:start="268:34" pos:end="268:47"><name pos:start="268:34" pos:end="268:47"><name pos:start="268:34" pos:end="268:34">s</name><operator pos:start="268:35" pos:end="268:36">-&gt;</operator><name pos:start="268:37" pos:end="268:44">linesize</name><index pos:start="268:45" pos:end="268:47">[<expr pos:start="268:46" pos:end="268:46"><literal type="number" pos:start="268:46" pos:end="268:46">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="268:50" pos:end="268:63"><expr pos:start="268:50" pos:end="268:63"><name pos:start="268:50" pos:end="268:63"><name pos:start="268:50" pos:end="268:50">s</name><operator pos:start="268:51" pos:end="268:52">-&gt;</operator><name pos:start="268:53" pos:end="268:60">linesize</name><index pos:start="268:61" pos:end="268:63">[<expr pos:start="268:62" pos:end="268:62"><literal type="number" pos:start="268:62" pos:end="268:62">1</literal></expr>]</index></name></expr></argument>,
            <argument pos:start="269:13" pos:end="269:25"><expr pos:start="269:13" pos:end="269:25"><name pos:start="269:13" pos:end="269:25"><name pos:start="269:13" pos:end="269:13">s</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:25">interlaced</name></name></expr></argument>, <argument pos:start="269:28" pos:end="269:43"><expr pos:start="269:28" pos:end="269:43"><name pos:start="269:28" pos:end="269:43"><name pos:start="269:28" pos:end="269:28">s</name><operator pos:start="269:29" pos:end="269:30">-&gt;</operator><name pos:start="269:31" pos:end="269:35">avctx</name><operator pos:start="269:36" pos:end="269:37">-&gt;</operator><name pos:start="269:38" pos:end="269:43">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="270:5" pos:end="271:86"><if pos:start="270:5" pos:end="271:86">if <condition pos:start="270:8" pos:end="270:41">(<expr pos:start="270:9" pos:end="270:40"><name pos:start="270:9" pos:end="270:11">len</name> <operator pos:start="270:13" pos:end="270:14">!=</operator> <operator pos:start="270:16" pos:end="270:16">(</operator><literal type="number" pos:start="270:17" pos:end="270:19">8</literal> <operator pos:start="270:19" pos:end="270:19">+</operator> <operator pos:start="270:21" pos:end="270:21">(</operator><literal type="number" pos:start="270:22" pos:end="270:22">3</literal> <operator pos:start="270:24" pos:end="270:24">*</operator> <name pos:start="270:26" pos:end="270:38">nb_components</name><operator pos:start="270:39" pos:end="270:39">)</operator><operator pos:start="270:40" pos:end="270:40">)</operator></expr>)</condition><block type="pseudo" pos:start="271:9" pos:end="271:86"><block_content pos:start="271:9" pos:end="271:86">
        <expr_stmt pos:start="271:9" pos:end="271:86"><expr pos:start="271:9" pos:end="271:85"><call pos:start="271:9" pos:end="271:85"><name pos:start="271:9" pos:end="271:14">av_log</name><argument_list pos:start="271:15" pos:end="271:85">(<argument pos:start="271:16" pos:end="271:23"><expr pos:start="271:16" pos:end="271:23"><name pos:start="271:16" pos:end="271:23"><name pos:start="271:16" pos:end="271:16">s</name><operator pos:start="271:17" pos:end="271:18">-&gt;</operator><name pos:start="271:19" pos:end="271:23">avctx</name></name></expr></argument>, <argument pos:start="271:26" pos:end="271:37"><expr pos:start="271:26" pos:end="271:37"><name pos:start="271:26" pos:end="271:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="271:40" pos:end="271:79"><expr pos:start="271:40" pos:end="271:79"><literal type="string" pos:start="271:40" pos:end="271:79">"decode_sof0: error, len(%d) mismatch\n"</literal></expr></argument>, <argument pos:start="271:82" pos:end="271:84"><expr pos:start="271:82" pos:end="271:84"><name pos:start="271:82" pos:end="271:84">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="272:5" pos:end="289:13"><if pos:start="272:5" pos:end="289:13">if <condition pos:start="272:8" pos:end="272:41">(<expr pos:start="272:9" pos:end="272:40"><name pos:start="272:9" pos:end="272:14"><name pos:start="272:9" pos:end="272:9">s</name><operator pos:start="272:10" pos:end="272:11">-&gt;</operator><name pos:start="272:12" pos:end="272:14">rgb</name></name> <operator pos:start="272:16" pos:end="272:17">&amp;&amp;</operator> <operator pos:start="272:19" pos:end="272:19">!</operator><name pos:start="272:20" pos:end="272:30"><name pos:start="272:20" pos:end="272:20">s</name><operator pos:start="272:21" pos:end="272:22">-&gt;</operator><name pos:start="272:23" pos:end="272:30">lossless</name></name> <operator pos:start="272:32" pos:end="272:33">&amp;&amp;</operator> <operator pos:start="272:35" pos:end="272:35">!</operator><name pos:start="272:36" pos:end="272:40"><name pos:start="272:36" pos:end="272:36">s</name><operator pos:start="272:37" pos:end="272:38">-&gt;</operator><name pos:start="272:39" pos:end="272:40">ls</name></name></expr>)</condition> <block pos:start="272:43" pos:end="289:13">{<block_content pos:start="273:9" pos:end="289:13">
        <expr_stmt pos:start="273:9" pos:end="273:92"><expr pos:start="273:9" pos:end="273:91"><call pos:start="273:9" pos:end="273:91"><name pos:start="273:9" pos:end="273:14">av_log</name><argument_list pos:start="273:15" pos:end="273:91">(<argument pos:start="273:16" pos:end="273:23"><expr pos:start="273:16" pos:end="273:23"><name pos:start="273:16" pos:end="273:23"><name pos:start="273:16" pos:end="273:16">s</name><operator pos:start="273:17" pos:end="273:18">-&gt;</operator><name pos:start="273:19" pos:end="273:23">avctx</name></name></expr></argument>, <argument pos:start="273:26" pos:end="273:37"><expr pos:start="273:26" pos:end="273:37"><name pos:start="273:26" pos:end="273:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="273:40" pos:end="273:90"><expr pos:start="273:40" pos:end="273:90"><literal type="string" pos:start="273:40" pos:end="273:90">"Unsupported coding and pixel format combination\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="274:9" pos:end="274:36">return <expr pos:start="274:16" pos:end="274:35"><name pos:start="274:16" pos:end="274:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    <comment type="block" pos:start="275:5" pos:end="275:79">/* totally blank picture as progressive JPEG will only add details to it */</comment>
    <if_stmt pos:start="276:5" pos:end="289:13"><if pos:start="276:5" pos:end="289:13">if <condition pos:start="276:8" pos:end="276:23">(<expr pos:start="276:9" pos:end="276:22"><name pos:start="276:9" pos:end="276:22"><name pos:start="276:9" pos:end="276:9">s</name><operator pos:start="276:10" pos:end="276:11">-&gt;</operator><name pos:start="276:12" pos:end="276:22">progressive</name></name></expr>)</condition> <block pos:start="276:25" pos:end="289:13">{<block_content pos:start="277:9" pos:end="289:13">
        <decl_stmt pos:start="277:9" pos:end="277:62"><decl pos:start="277:9" pos:end="277:61"><type pos:start="277:9" pos:end="277:11"><name pos:start="277:9" pos:end="277:11">int</name></type> <name pos:start="277:13" pos:end="277:14">bw</name> <init pos:start="277:16" pos:end="277:61">= <expr pos:start="277:18" pos:end="277:61"><operator pos:start="277:18" pos:end="277:18">(</operator><name pos:start="277:19" pos:end="277:23">width</name>  <operator pos:start="277:26" pos:end="277:26">+</operator> <name pos:start="277:28" pos:end="277:35"><name pos:start="277:28" pos:end="277:28">s</name><operator pos:start="277:29" pos:end="277:30">-&gt;</operator><name pos:start="277:31" pos:end="277:35">h_max</name></name> <operator pos:start="277:37" pos:end="277:37">*</operator> <literal type="number" pos:start="277:39" pos:end="277:41">8</literal> <operator pos:start="277:41" pos:end="277:41">-</operator> <literal type="number" pos:start="277:43" pos:end="277:43">1</literal><operator pos:start="277:44" pos:end="277:44">)</operator> <operator pos:start="277:46" pos:end="277:46">/</operator> <operator pos:start="277:48" pos:end="277:48">(</operator><name pos:start="277:49" pos:end="277:56"><name pos:start="277:49" pos:end="277:49">s</name><operator pos:start="277:50" pos:end="277:51">-&gt;</operator><name pos:start="277:52" pos:end="277:56">h_max</name></name> <operator pos:start="277:58" pos:end="277:58">*</operator> <literal type="number" pos:start="277:60" pos:end="277:60">8</literal><operator pos:start="277:61" pos:end="277:61">)</operator></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="278:9" pos:end="278:62"><decl pos:start="278:9" pos:end="278:61"><type pos:start="278:9" pos:end="278:11"><name pos:start="278:9" pos:end="278:11">int</name></type> <name pos:start="278:13" pos:end="278:14">bh</name> <init pos:start="278:16" pos:end="278:61">= <expr pos:start="278:18" pos:end="278:61"><operator pos:start="278:18" pos:end="278:18">(</operator><name pos:start="278:19" pos:end="278:24">height</name> <operator pos:start="278:26" pos:end="278:26">+</operator> <name pos:start="278:28" pos:end="278:35"><name pos:start="278:28" pos:end="278:28">s</name><operator pos:start="278:29" pos:end="278:30">-&gt;</operator><name pos:start="278:31" pos:end="278:35">v_max</name></name> <operator pos:start="278:37" pos:end="278:37">*</operator> <literal type="number" pos:start="278:39" pos:end="278:41">8</literal> <operator pos:start="278:41" pos:end="278:41">-</operator> <literal type="number" pos:start="278:43" pos:end="278:43">1</literal><operator pos:start="278:44" pos:end="278:44">)</operator> <operator pos:start="278:46" pos:end="278:46">/</operator> <operator pos:start="278:48" pos:end="278:48">(</operator><name pos:start="278:49" pos:end="278:56"><name pos:start="278:49" pos:end="278:49">s</name><operator pos:start="278:50" pos:end="278:51">-&gt;</operator><name pos:start="278:52" pos:end="278:56">v_max</name></name> <operator pos:start="278:58" pos:end="278:58">*</operator> <literal type="number" pos:start="278:60" pos:end="278:60">8</literal><operator pos:start="278:61" pos:end="278:61">)</operator></expr></init></decl>;</decl_stmt>
        <for pos:start="279:9" pos:end="289:13">for <control pos:start="279:13" pos:end="279:46">(<init pos:start="279:14" pos:end="279:19"><expr pos:start="279:14" pos:end="279:18"><name pos:start="279:14" pos:end="279:14">i</name> <operator pos:start="279:16" pos:end="279:16">=</operator> <literal type="number" pos:start="279:18" pos:end="279:18">0</literal></expr>;</init> <condition pos:start="279:21" pos:end="279:41"><expr pos:start="279:21" pos:end="279:40"><name pos:start="279:21" pos:end="279:21">i</name> <operator pos:start="279:23" pos:end="279:23">&lt;</operator> <name pos:start="279:25" pos:end="279:40"><name pos:start="279:25" pos:end="279:25">s</name><operator pos:start="279:26" pos:end="279:27">-&gt;</operator><name pos:start="279:28" pos:end="279:40">nb_components</name></name></expr>;</condition> <incr pos:start="279:43" pos:end="279:45"><expr pos:start="279:43" pos:end="279:45"><name pos:start="279:43" pos:end="279:43">i</name><operator pos:start="279:44" pos:end="279:45">++</operator></expr></incr>)</control> <block pos:start="279:48" pos:end="289:13">{<block_content pos:start="280:13" pos:end="289:13">
            <decl_stmt pos:start="280:13" pos:end="280:63"><decl pos:start="280:13" pos:end="280:62"><type pos:start="280:13" pos:end="280:15"><name pos:start="280:13" pos:end="280:15">int</name></type> <name pos:start="280:17" pos:end="280:20">size</name> <init pos:start="280:22" pos:end="280:62">= <expr pos:start="280:24" pos:end="280:62"><name pos:start="280:24" pos:end="280:25">bw</name> <operator pos:start="280:27" pos:end="280:27">*</operator> <name pos:start="280:29" pos:end="280:30">bh</name> <operator pos:start="280:32" pos:end="280:32">*</operator> <name pos:start="280:34" pos:end="280:46"><name pos:start="280:34" pos:end="280:34">s</name><operator pos:start="280:35" pos:end="280:36">-&gt;</operator><name pos:start="280:37" pos:end="280:43">h_count</name><index pos:start="280:44" pos:end="280:46">[<expr pos:start="280:45" pos:end="280:45"><name pos:start="280:45" pos:end="280:45">i</name></expr>]</index></name> <operator pos:start="280:48" pos:end="280:48">*</operator> <name pos:start="280:50" pos:end="280:62"><name pos:start="280:50" pos:end="280:50">s</name><operator pos:start="280:51" pos:end="280:52">-&gt;</operator><name pos:start="280:53" pos:end="280:59">v_count</name><index pos:start="280:60" pos:end="280:62">[<expr pos:start="280:61" pos:end="280:61"><name pos:start="280:61" pos:end="280:61">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="281:13" pos:end="281:36"><expr pos:start="281:13" pos:end="281:35"><call pos:start="281:13" pos:end="281:35"><name pos:start="281:13" pos:end="281:20">av_freep</name><argument_list pos:start="281:21" pos:end="281:35">(<argument pos:start="281:22" pos:end="281:34"><expr pos:start="281:22" pos:end="281:34"><operator pos:start="281:22" pos:end="281:22">&amp;</operator><name pos:start="281:23" pos:end="281:34"><name pos:start="281:23" pos:end="281:23">s</name><operator pos:start="281:24" pos:end="281:25">-&gt;</operator><name pos:start="281:26" pos:end="281:31">blocks</name><index pos:start="281:32" pos:end="281:34">[<expr pos:start="281:33" pos:end="281:33"><name pos:start="281:33" pos:end="281:33">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="282:13" pos:end="282:38"><expr pos:start="282:13" pos:end="282:37"><call pos:start="282:13" pos:end="282:37"><name pos:start="282:13" pos:end="282:20">av_freep</name><argument_list pos:start="282:21" pos:end="282:37">(<argument pos:start="282:22" pos:end="282:36"><expr pos:start="282:22" pos:end="282:36"><operator pos:start="282:22" pos:end="282:22">&amp;</operator><name pos:start="282:23" pos:end="282:36"><name pos:start="282:23" pos:end="282:23">s</name><operator pos:start="282:24" pos:end="282:25">-&gt;</operator><name pos:start="282:26" pos:end="282:33">last_nnz</name><index pos:start="282:34" pos:end="282:36">[<expr pos:start="282:35" pos:end="282:35"><name pos:start="282:35" pos:end="282:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="283:13" pos:end="283:77"><expr pos:start="283:13" pos:end="283:76"><name pos:start="283:13" pos:end="283:24"><name pos:start="283:13" pos:end="283:13">s</name><operator pos:start="283:14" pos:end="283:15">-&gt;</operator><name pos:start="283:16" pos:end="283:21">blocks</name><index pos:start="283:22" pos:end="283:24">[<expr pos:start="283:23" pos:end="283:23"><name pos:start="283:23" pos:end="283:23">i</name></expr>]</index></name>       <operator pos:start="283:32" pos:end="283:32">=</operator> <call pos:start="283:34" pos:end="283:76"><name pos:start="283:34" pos:end="283:49">av_mallocz_array</name><argument_list pos:start="283:50" pos:end="283:76">(<argument pos:start="283:51" pos:end="283:54"><expr pos:start="283:51" pos:end="283:54"><name pos:start="283:51" pos:end="283:54">size</name></expr></argument>, <argument pos:start="283:57" pos:end="283:75"><expr pos:start="283:57" pos:end="283:75"><sizeof pos:start="283:57" pos:end="283:75">sizeof<argument_list pos:start="283:63" pos:end="283:75">(<argument pos:start="283:64" pos:end="283:74"><expr pos:start="283:64" pos:end="283:74"><operator pos:start="283:64" pos:end="283:64">*</operator><operator pos:start="283:65" pos:end="283:65">*</operator><name pos:start="283:66" pos:end="283:74"><name pos:start="283:66" pos:end="283:66">s</name><operator pos:start="283:67" pos:end="283:68">-&gt;</operator><name pos:start="283:69" pos:end="283:74">blocks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="284:13" pos:end="284:79"><expr pos:start="284:13" pos:end="284:78"><name pos:start="284:13" pos:end="284:26"><name pos:start="284:13" pos:end="284:13">s</name><operator pos:start="284:14" pos:end="284:15">-&gt;</operator><name pos:start="284:16" pos:end="284:23">last_nnz</name><index pos:start="284:24" pos:end="284:26">[<expr pos:start="284:25" pos:end="284:25"><name pos:start="284:25" pos:end="284:25">i</name></expr>]</index></name>     <operator pos:start="284:32" pos:end="284:32">=</operator> <call pos:start="284:34" pos:end="284:78"><name pos:start="284:34" pos:end="284:49">av_mallocz_array</name><argument_list pos:start="284:50" pos:end="284:78">(<argument pos:start="284:51" pos:end="284:54"><expr pos:start="284:51" pos:end="284:54"><name pos:start="284:51" pos:end="284:54">size</name></expr></argument>, <argument pos:start="284:57" pos:end="284:77"><expr pos:start="284:57" pos:end="284:77"><sizeof pos:start="284:57" pos:end="284:77">sizeof<argument_list pos:start="284:63" pos:end="284:77">(<argument pos:start="284:64" pos:end="284:76"><expr pos:start="284:64" pos:end="284:76"><operator pos:start="284:64" pos:end="284:64">*</operator><operator pos:start="284:65" pos:end="284:65">*</operator><name pos:start="284:66" pos:end="284:76"><name pos:start="284:66" pos:end="284:66">s</name><operator pos:start="284:67" pos:end="284:68">-&gt;</operator><name pos:start="284:69" pos:end="284:76">last_nnz</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="285:13" pos:end="286:39"><if pos:start="285:13" pos:end="286:39">if <condition pos:start="285:16" pos:end="285:49">(<expr pos:start="285:17" pos:end="285:48"><operator pos:start="285:17" pos:end="285:17">!</operator><name pos:start="285:18" pos:end="285:29"><name pos:start="285:18" pos:end="285:18">s</name><operator pos:start="285:19" pos:end="285:20">-&gt;</operator><name pos:start="285:21" pos:end="285:26">blocks</name><index pos:start="285:27" pos:end="285:29">[<expr pos:start="285:28" pos:end="285:28"><name pos:start="285:28" pos:end="285:28">i</name></expr>]</index></name> <operator pos:start="285:31" pos:end="285:32">||</operator> <operator pos:start="285:34" pos:end="285:34">!</operator><name pos:start="285:35" pos:end="285:48"><name pos:start="285:35" pos:end="285:35">s</name><operator pos:start="285:36" pos:end="285:37">-&gt;</operator><name pos:start="285:38" pos:end="285:45">last_nnz</name><index pos:start="285:46" pos:end="285:48">[<expr pos:start="285:47" pos:end="285:47"><name pos:start="285:47" pos:end="285:47">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="286:17" pos:end="286:39"><block_content pos:start="286:17" pos:end="286:39">
                <return pos:start="286:17" pos:end="286:39">return <expr pos:start="286:24" pos:end="286:38"><call pos:start="286:24" pos:end="286:38"><name pos:start="286:24" pos:end="286:30">AVERROR</name><argument_list pos:start="286:31" pos:end="286:38">(<argument pos:start="286:32" pos:end="286:37"><expr pos:start="286:32" pos:end="286:37"><name pos:start="286:32" pos:end="286:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="287:13" pos:end="287:52"><expr pos:start="287:13" pos:end="287:51"><name pos:start="287:13" pos:end="287:30"><name pos:start="287:13" pos:end="287:13">s</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:27">block_stride</name><index pos:start="287:28" pos:end="287:30">[<expr pos:start="287:29" pos:end="287:29"><name pos:start="287:29" pos:end="287:29">i</name></expr>]</index></name> <operator pos:start="287:32" pos:end="287:32">=</operator> <name pos:start="287:34" pos:end="287:35">bw</name> <operator pos:start="287:37" pos:end="287:37">*</operator> <name pos:start="287:39" pos:end="287:51"><name pos:start="287:39" pos:end="287:39">s</name><operator pos:start="287:40" pos:end="287:41">-&gt;</operator><name pos:start="287:42" pos:end="287:48">h_count</name><index pos:start="287:49" pos:end="287:51">[<expr pos:start="287:50" pos:end="287:50"><name pos:start="287:50" pos:end="287:50">i</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="288:9" pos:end="288:64"><expr pos:start="288:9" pos:end="288:63"><call pos:start="288:9" pos:end="288:63"><name pos:start="288:9" pos:end="288:14">memset</name><argument_list pos:start="288:15" pos:end="288:63">(<argument pos:start="288:16" pos:end="288:32"><expr pos:start="288:16" pos:end="288:32"><name pos:start="288:16" pos:end="288:32"><name pos:start="288:16" pos:end="288:16">s</name><operator pos:start="288:17" pos:end="288:18">-&gt;</operator><name pos:start="288:19" pos:end="288:32">coefs_finished</name></name></expr></argument>, <argument pos:start="288:35" pos:end="288:35"><expr pos:start="288:35" pos:end="288:35"><literal type="number" pos:start="288:35" pos:end="288:35">0</literal></expr></argument>, <argument pos:start="288:38" pos:end="288:62"><expr pos:start="288:38" pos:end="288:62"><sizeof pos:start="288:38" pos:end="288:62">sizeof<argument_list pos:start="288:44" pos:end="288:62">(<argument pos:start="288:45" pos:end="288:61"><expr pos:start="288:45" pos:end="288:61"><name pos:start="288:45" pos:end="288:61"><name pos:start="288:45" pos:end="288:45">s</name><operator pos:start="288:46" pos:end="288:47">-&gt;</operator><name pos:start="288:48" pos:end="288:61">coefs_finished</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="289:5" pos:end="289:13">return <expr pos:start="289:12" pos:end="289:12"><literal type="number" pos:start="289:12" pos:end="289:12">0</literal></expr>;</return></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
