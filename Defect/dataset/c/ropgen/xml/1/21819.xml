<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21819.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:35">gen_op_arith_add</name><parameter_list pos:start="1:36" pos:end="5:70">(<parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:53"><name pos:start="1:37" pos:end="1:48">DisasContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">ctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:63"><decl pos:start="1:56" pos:end="1:63"><type pos:start="1:56" pos:end="1:63"><name pos:start="1:56" pos:end="1:59">TCGv</name></type> <name pos:start="1:61" pos:end="1:63">ret</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:74"><decl pos:start="1:66" pos:end="1:74"><type pos:start="1:66" pos:end="1:74"><name pos:start="1:66" pos:end="1:69">TCGv</name></type> <name pos:start="1:71" pos:end="1:74">arg1</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:45"><decl pos:start="3:37" pos:end="3:45"><type pos:start="3:37" pos:end="3:45"><name pos:start="3:37" pos:end="3:40">TCGv</name></type> <name pos:start="3:42" pos:end="3:45">arg2</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:58"><decl pos:start="3:48" pos:end="3:58"><type pos:start="3:48" pos:end="3:58"><name pos:start="3:48" pos:end="3:51">bool</name></type> <name pos:start="3:53" pos:end="3:58">add_ca</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:75"><decl pos:start="3:61" pos:end="3:75"><type pos:start="3:61" pos:end="3:75"><name pos:start="3:61" pos:end="3:64">bool</name></type> <name pos:start="3:66" pos:end="3:75">compute_ca</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:51"><decl pos:start="5:37" pos:end="5:51"><type pos:start="5:37" pos:end="5:51"><name pos:start="5:37" pos:end="5:40">bool</name></type> <name pos:start="5:42" pos:end="5:51">compute_ov</name></decl></parameter>, <parameter pos:start="5:54" pos:end="5:69"><decl pos:start="5:54" pos:end="5:69"><type pos:start="5:54" pos:end="5:69"><name pos:start="5:54" pos:end="5:57">bool</name></type> <name pos:start="5:59" pos:end="5:69">compute_rc0</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="77:1">{<block_content pos:start="9:5" pos:end="75:5">

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:11">t0</name> <init pos:start="9:13" pos:end="9:17">= <expr pos:start="9:15" pos:end="9:17"><name pos:start="9:15" pos:end="9:17">ret</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="15:60">(<expr pos:start="13:9" pos:end="15:59"><operator pos:start="13:9" pos:end="13:9">(</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:20">compute_ca</name> <operator pos:start="13:22" pos:end="13:23">&amp;&amp;</operator> <name pos:start="13:25" pos:end="13:30">add_ca</name><operator pos:start="13:31" pos:end="13:31">)</operator> <operator pos:start="13:33" pos:end="13:34">||</operator> <name pos:start="13:36" pos:end="13:45">compute_ov</name><operator pos:start="13:46" pos:end="13:46">)</operator>

        <operator pos:start="15:9" pos:end="15:10">&amp;&amp;</operator> <operator pos:start="15:12" pos:end="15:12">(</operator><call pos:start="15:13" pos:end="15:33"><name pos:start="15:13" pos:end="15:22">TCGV_EQUAL</name><argument_list pos:start="15:23" pos:end="15:33">(<argument pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:26">ret</name></expr></argument>, <argument pos:start="15:29" pos:end="15:32"><expr pos:start="15:29" pos:end="15:32"><name pos:start="15:29" pos:end="15:32">arg1</name></expr></argument>)</argument_list></call> <operator pos:start="15:35" pos:end="15:36">||</operator> <call pos:start="15:38" pos:end="15:58"><name pos:start="15:38" pos:end="15:47">TCGV_EQUAL</name><argument_list pos:start="15:48" pos:end="15:58">(<argument pos:start="15:49" pos:end="15:51"><expr pos:start="15:49" pos:end="15:51"><name pos:start="15:49" pos:end="15:51">ret</name></expr></argument>, <argument pos:start="15:54" pos:end="15:57"><expr pos:start="15:54" pos:end="15:57"><name pos:start="15:54" pos:end="15:57">arg2</name></expr></argument>)</argument_list></call><operator pos:start="15:59" pos:end="15:59">)</operator></expr>)</condition>  <block pos:start="15:63" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:28">

        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:10">t0</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:27"><name pos:start="17:14" pos:end="17:25">tcg_temp_new</name><argument_list pos:start="17:26" pos:end="17:27">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="51:5"><if pos:start="23:5" pos:end="41:5">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:18">compute_ca</name></expr>)</condition> <block pos:start="23:21" pos:end="41:5">{<block_content pos:start="25:9" pos:end="39:28">

        <decl_stmt pos:start="25:9" pos:end="25:36"><decl pos:start="25:9" pos:end="25:35"><type pos:start="25:9" pos:end="25:12"><name pos:start="25:9" pos:end="25:12">TCGv</name></type> <name pos:start="25:14" pos:end="25:17">zero</name> <init pos:start="25:19" pos:end="25:35">= <expr pos:start="25:21" pos:end="25:35"><call pos:start="25:21" pos:end="25:35"><name pos:start="25:21" pos:end="25:32">tcg_const_tl</name><argument_list pos:start="25:33" pos:end="25:35">(<argument pos:start="25:34" pos:end="25:34"><expr pos:start="25:34" pos:end="25:34"><literal type="number" pos:start="25:34" pos:end="25:34">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:19">(<expr pos:start="27:13" pos:end="27:18"><name pos:start="27:13" pos:end="27:18">add_ca</name></expr>)</condition> <block pos:start="27:21" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:64">

            <expr_stmt pos:start="29:13" pos:end="29:66"><expr pos:start="29:13" pos:end="29:65"><call pos:start="29:13" pos:end="29:65"><name pos:start="29:13" pos:end="29:27">tcg_gen_add2_tl</name><argument_list pos:start="29:28" pos:end="29:65">(<argument pos:start="29:29" pos:end="29:30"><expr pos:start="29:29" pos:end="29:30"><name pos:start="29:29" pos:end="29:30">t0</name></expr></argument>, <argument pos:start="29:33" pos:end="29:38"><expr pos:start="29:33" pos:end="29:38"><name pos:start="29:33" pos:end="29:38">cpu_ca</name></expr></argument>, <argument pos:start="29:41" pos:end="29:44"><expr pos:start="29:41" pos:end="29:44"><name pos:start="29:41" pos:end="29:44">arg1</name></expr></argument>, <argument pos:start="29:47" pos:end="29:50"><expr pos:start="29:47" pos:end="29:50"><name pos:start="29:47" pos:end="29:50">zero</name></expr></argument>, <argument pos:start="29:53" pos:end="29:58"><expr pos:start="29:53" pos:end="29:58"><name pos:start="29:53" pos:end="29:58">cpu_ca</name></expr></argument>, <argument pos:start="29:61" pos:end="29:64"><expr pos:start="29:61" pos:end="29:64"><name pos:start="29:61" pos:end="29:64">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:64"><expr pos:start="31:13" pos:end="31:63"><call pos:start="31:13" pos:end="31:63"><name pos:start="31:13" pos:end="31:27">tcg_gen_add2_tl</name><argument_list pos:start="31:28" pos:end="31:63">(<argument pos:start="31:29" pos:end="31:30"><expr pos:start="31:29" pos:end="31:30"><name pos:start="31:29" pos:end="31:30">t0</name></expr></argument>, <argument pos:start="31:33" pos:end="31:38"><expr pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:38">cpu_ca</name></expr></argument>, <argument pos:start="31:41" pos:end="31:42"><expr pos:start="31:41" pos:end="31:42"><name pos:start="31:41" pos:end="31:42">t0</name></expr></argument>, <argument pos:start="31:45" pos:end="31:50"><expr pos:start="31:45" pos:end="31:50"><name pos:start="31:45" pos:end="31:50">cpu_ca</name></expr></argument>, <argument pos:start="31:53" pos:end="31:56"><expr pos:start="31:53" pos:end="31:56"><name pos:start="31:53" pos:end="31:56">arg2</name></expr></argument>, <argument pos:start="31:59" pos:end="31:62"><expr pos:start="31:59" pos:end="31:62"><name pos:start="31:59" pos:end="31:62">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="37:9">else <block pos:start="33:16" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:64">

            <expr_stmt pos:start="35:13" pos:end="35:64"><expr pos:start="35:13" pos:end="35:63"><call pos:start="35:13" pos:end="35:63"><name pos:start="35:13" pos:end="35:27">tcg_gen_add2_tl</name><argument_list pos:start="35:28" pos:end="35:63">(<argument pos:start="35:29" pos:end="35:30"><expr pos:start="35:29" pos:end="35:30"><name pos:start="35:29" pos:end="35:30">t0</name></expr></argument>, <argument pos:start="35:33" pos:end="35:38"><expr pos:start="35:33" pos:end="35:38"><name pos:start="35:33" pos:end="35:38">cpu_ca</name></expr></argument>, <argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><name pos:start="35:41" pos:end="35:44">arg1</name></expr></argument>, <argument pos:start="35:47" pos:end="35:50"><expr pos:start="35:47" pos:end="35:50"><name pos:start="35:47" pos:end="35:50">zero</name></expr></argument>, <argument pos:start="35:53" pos:end="35:56"><expr pos:start="35:53" pos:end="35:56"><name pos:start="35:53" pos:end="35:56">arg2</name></expr></argument>, <argument pos:start="35:59" pos:end="35:62"><expr pos:start="35:59" pos:end="35:62"><name pos:start="35:59" pos:end="35:62">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><call pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:21">tcg_temp_free</name><argument_list pos:start="39:22" pos:end="39:27">(<argument pos:start="39:23" pos:end="39:26"><expr pos:start="39:23" pos:end="39:26"><name pos:start="39:23" pos:end="39:26">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="51:5">else <block pos:start="41:12" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:9">

        <expr_stmt pos:start="43:9" pos:end="43:39"><expr pos:start="43:9" pos:end="43:38"><call pos:start="43:9" pos:end="43:38"><name pos:start="43:9" pos:end="43:22">tcg_gen_add_tl</name><argument_list pos:start="43:23" pos:end="43:38">(<argument pos:start="43:24" pos:end="43:25"><expr pos:start="43:24" pos:end="43:25"><name pos:start="43:24" pos:end="43:25">t0</name></expr></argument>, <argument pos:start="43:28" pos:end="43:31"><expr pos:start="43:28" pos:end="43:31"><name pos:start="43:28" pos:end="43:31">arg1</name></expr></argument>, <argument pos:start="43:34" pos:end="43:37"><expr pos:start="43:34" pos:end="43:37"><name pos:start="43:34" pos:end="43:37">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:19">(<expr pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:18">add_ca</name></expr>)</condition> <block pos:start="45:21" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:43">

            <expr_stmt pos:start="47:13" pos:end="47:43"><expr pos:start="47:13" pos:end="47:42"><call pos:start="47:13" pos:end="47:42"><name pos:start="47:13" pos:end="47:26">tcg_gen_add_tl</name><argument_list pos:start="47:27" pos:end="47:42">(<argument pos:start="47:28" pos:end="47:29"><expr pos:start="47:28" pos:end="47:29"><name pos:start="47:28" pos:end="47:29">t0</name></expr></argument>, <argument pos:start="47:32" pos:end="47:33"><expr pos:start="47:32" pos:end="47:33"><name pos:start="47:32" pos:end="47:33">t0</name></expr></argument>, <argument pos:start="47:36" pos:end="47:41"><expr pos:start="47:36" pos:end="47:41"><name pos:start="47:36" pos:end="47:41">cpu_ca</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:19">(<expr pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:18">compute_ov</name></expr>)</condition> <block pos:start="55:21" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:56">

        <expr_stmt pos:start="57:9" pos:end="57:56"><expr pos:start="57:9" pos:end="57:55"><call pos:start="57:9" pos:end="57:55"><name pos:start="57:9" pos:end="57:31">gen_op_arith_compute_ov</name><argument_list pos:start="57:32" pos:end="57:55">(<argument pos:start="57:33" pos:end="57:35"><expr pos:start="57:33" pos:end="57:35"><name pos:start="57:33" pos:end="57:35">ctx</name></expr></argument>, <argument pos:start="57:38" pos:end="57:39"><expr pos:start="57:38" pos:end="57:39"><name pos:start="57:38" pos:end="57:39">t0</name></expr></argument>, <argument pos:start="57:42" pos:end="57:45"><expr pos:start="57:42" pos:end="57:45"><name pos:start="57:42" pos:end="57:45">arg1</name></expr></argument>, <argument pos:start="57:48" pos:end="57:51"><expr pos:start="57:48" pos:end="57:51"><name pos:start="57:48" pos:end="57:51">arg2</name></expr></argument>, <argument pos:start="57:54" pos:end="57:54"><expr pos:start="57:54" pos:end="57:54"><literal type="number" pos:start="57:54" pos:end="57:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:30">(<expr pos:start="61:9" pos:end="61:29"><call pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:16">unlikely</name><argument_list pos:start="61:17" pos:end="61:29">(<argument pos:start="61:18" pos:end="61:28"><expr pos:start="61:18" pos:end="61:28"><name pos:start="61:18" pos:end="61:28">compute_rc0</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:32" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:29">

        <expr_stmt pos:start="63:9" pos:end="63:29"><expr pos:start="63:9" pos:end="63:28"><call pos:start="63:9" pos:end="63:28"><name pos:start="63:9" pos:end="63:19">gen_set_Rc0</name><argument_list pos:start="63:20" pos:end="63:28">(<argument pos:start="63:21" pos:end="63:23"><expr pos:start="63:21" pos:end="63:23"><name pos:start="63:21" pos:end="63:23">ctx</name></expr></argument>, <argument pos:start="63:26" pos:end="63:27"><expr pos:start="63:26" pos:end="63:27"><name pos:start="63:26" pos:end="63:27">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:29">(<expr pos:start="69:9" pos:end="69:28"><operator pos:start="69:9" pos:end="69:9">!</operator><call pos:start="69:10" pos:end="69:28"><name pos:start="69:10" pos:end="69:19">TCGV_EQUAL</name><argument_list pos:start="69:20" pos:end="69:28">(<argument pos:start="69:21" pos:end="69:22"><expr pos:start="69:21" pos:end="69:22"><name pos:start="69:21" pos:end="69:22">t0</name></expr></argument>, <argument pos:start="69:25" pos:end="69:27"><expr pos:start="69:25" pos:end="69:27"><name pos:start="69:25" pos:end="69:27">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:31" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:26">

        <expr_stmt pos:start="71:9" pos:end="71:32"><expr pos:start="71:9" pos:end="71:31"><call pos:start="71:9" pos:end="71:31"><name pos:start="71:9" pos:end="71:22">tcg_gen_mov_tl</name><argument_list pos:start="71:23" pos:end="71:31">(<argument pos:start="71:24" pos:end="71:26"><expr pos:start="71:24" pos:end="71:26"><name pos:start="71:24" pos:end="71:26">ret</name></expr></argument>, <argument pos:start="71:29" pos:end="71:30"><expr pos:start="71:29" pos:end="71:30"><name pos:start="71:29" pos:end="71:30">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:26"><expr pos:start="73:9" pos:end="73:25"><call pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:21">tcg_temp_free</name><argument_list pos:start="73:22" pos:end="73:25">(<argument pos:start="73:23" pos:end="73:24"><expr pos:start="73:23" pos:end="73:24"><name pos:start="73:23" pos:end="73:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
