<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3954.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">pci_device_reset</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:38">PCIDevice</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:29">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:53"><expr pos:start="9:5" pos:end="9:52"><call pos:start="9:5" pos:end="9:52"><name pos:start="9:5" pos:end="9:10">memset</name><argument_list pos:start="9:11" pos:end="9:52">(<argument pos:start="9:12" pos:end="9:25"><expr pos:start="9:12" pos:end="9:25"><name pos:start="9:12" pos:end="9:25"><name pos:start="9:12" pos:end="9:14">dev</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:25">irq_state</name></name></expr></argument>, <argument pos:start="9:28" pos:end="9:28"><expr pos:start="9:28" pos:end="9:28"><literal type="number" pos:start="9:28" pos:end="9:28">0</literal></expr></argument>, <argument pos:start="9:31" pos:end="9:51"><expr pos:start="9:31" pos:end="9:51"><sizeof pos:start="9:31" pos:end="9:51">sizeof <name pos:start="9:38" pos:end="9:51"><name pos:start="9:38" pos:end="9:40">dev</name><operator pos:start="9:41" pos:end="9:42">-&gt;</operator><name pos:start="9:43" pos:end="9:51">irq_state</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="13:54"><expr pos:start="11:5" pos:end="13:53"><name pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:7">dev</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:15">config</name><index pos:start="11:16" pos:end="11:28">[<expr pos:start="11:17" pos:end="11:27"><name pos:start="11:17" pos:end="11:27">PCI_COMMAND</name></expr>]</index></name> <operator pos:start="11:30" pos:end="11:31">&amp;=</operator> <operator pos:start="11:33" pos:end="11:33">~</operator><operator pos:start="11:34" pos:end="11:34">(</operator><name pos:start="11:35" pos:end="11:48">PCI_COMMAND_IO</name> <operator pos:start="11:50" pos:end="11:50">|</operator> <name pos:start="11:52" pos:end="11:69">PCI_COMMAND_MEMORY</name> <operator pos:start="11:71" pos:end="11:71">|</operator>

                                  <name pos:start="13:35" pos:end="13:52">PCI_COMMAND_MASTER</name><operator pos:start="13:53" pos:end="13:53">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:7">dev</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:15">config</name><index pos:start="15:16" pos:end="15:36">[<expr pos:start="15:17" pos:end="15:35"><name pos:start="15:17" pos:end="15:35">PCI_CACHE_LINE_SIZE</name></expr>]</index></name> <operator pos:start="15:38" pos:end="15:38">=</operator> <literal type="number" pos:start="15:40" pos:end="15:42">0x0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:7">dev</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:15">config</name><index pos:start="17:16" pos:end="17:35">[<expr pos:start="17:17" pos:end="17:34"><name pos:start="17:17" pos:end="17:34">PCI_INTERRUPT_LINE</name></expr>]</index></name> <operator pos:start="17:37" pos:end="17:37">=</operator> <literal type="number" pos:start="17:39" pos:end="17:41">0x0</literal></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="29:5">for <control pos:start="19:9" pos:end="19:41">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">r</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:36"><expr pos:start="19:17" pos:end="19:35"><name pos:start="19:17" pos:end="19:17">r</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:35">PCI_NUM_REGIONS</name></expr>;</condition> <incr pos:start="19:38" pos:end="19:40"><expr pos:start="19:38" pos:end="19:40"><operator pos:start="19:38" pos:end="19:39">++</operator><name pos:start="19:40" pos:end="19:40">r</name></expr></incr>)</control> <block pos:start="19:43" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:77">

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:37">(<expr pos:start="21:13" pos:end="21:36"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:31"><name pos:start="21:14" pos:end="21:16">dev</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:28">io_regions</name><index pos:start="21:29" pos:end="21:31">[<expr pos:start="21:30" pos:end="21:30"><name pos:start="21:30" pos:end="21:30">r</name></expr>]</index></name><operator pos:start="21:32" pos:end="21:32">.</operator><name pos:start="21:33" pos:end="21:36">size</name></expr>)</condition> <block pos:start="21:39" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:77"><expr pos:start="27:9" pos:end="27:76"><call pos:start="27:9" pos:end="27:76"><name pos:start="27:9" pos:end="27:20">pci_set_long</name><argument_list pos:start="27:21" pos:end="27:76">(<argument pos:start="27:22" pos:end="27:50"><expr pos:start="27:22" pos:end="27:50"><name pos:start="27:22" pos:end="27:32"><name pos:start="27:22" pos:end="27:24">dev</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:32">config</name></name> <operator pos:start="27:34" pos:end="27:34">+</operator> <call pos:start="27:36" pos:end="27:50"><name pos:start="27:36" pos:end="27:42">pci_bar</name><argument_list pos:start="27:43" pos:end="27:50">(<argument pos:start="27:44" pos:end="27:46"><expr pos:start="27:44" pos:end="27:46"><name pos:start="27:44" pos:end="27:46">dev</name></expr></argument>, <argument pos:start="27:49" pos:end="27:49"><expr pos:start="27:49" pos:end="27:49"><name pos:start="27:49" pos:end="27:49">r</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:53" pos:end="27:75"><expr pos:start="27:53" pos:end="27:75"><name pos:start="27:53" pos:end="27:70"><name pos:start="27:53" pos:end="27:55">dev</name><operator pos:start="27:56" pos:end="27:57">-&gt;</operator><name pos:start="27:58" pos:end="27:67">io_regions</name><index pos:start="27:68" pos:end="27:70">[<expr pos:start="27:69" pos:end="27:69"><name pos:start="27:69" pos:end="27:69">r</name></expr>]</index></name><operator pos:start="27:71" pos:end="27:71">.</operator><name pos:start="27:72" pos:end="27:75">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><call pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:23">pci_update_mappings</name><argument_list pos:start="31:24" pos:end="31:28">(<argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:27">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
