<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7133.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:32">fdctrl_read_data</name><parameter_list pos:start="1:33" pos:end="1:48">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:41"><name pos:start="1:34" pos:end="1:39">FDCtrl</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">fdctrl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:18">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">FDrive</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:19">cur_drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:19">retval</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">pos</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:11">cur_drv</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:33"><name pos:start="13:15" pos:end="13:25">get_cur_drv</name><argument_list pos:start="13:26" pos:end="13:33">(<argument pos:start="13:27" pos:end="13:32"><expr pos:start="13:27" pos:end="13:32"><name pos:start="13:27" pos:end="13:32">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:10">fdctrl</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:15">dsr</name></name> <operator pos:start="15:17" pos:end="15:18">&amp;=</operator> <operator pos:start="15:20" pos:end="15:20">~</operator><name pos:start="15:21" pos:end="15:34">FD_DSR_PWRDOWN</name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:67">(<expr pos:start="17:9" pos:end="17:66"><operator pos:start="17:9" pos:end="17:9">!</operator><operator pos:start="17:10" pos:end="17:10">(</operator><name pos:start="17:11" pos:end="17:21"><name pos:start="17:11" pos:end="17:16">fdctrl</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:21">msr</name></name> <operator pos:start="17:23" pos:end="17:23">&amp;</operator> <name pos:start="17:25" pos:end="17:34">FD_MSR_RQM</name><operator pos:start="17:35" pos:end="17:35">)</operator> <operator pos:start="17:37" pos:end="17:38">||</operator> <operator pos:start="17:40" pos:end="17:40">!</operator><operator pos:start="17:41" pos:end="17:41">(</operator><name pos:start="17:42" pos:end="17:52"><name pos:start="17:42" pos:end="17:47">fdctrl</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:52">msr</name></name> <operator pos:start="17:54" pos:end="17:54">&amp;</operator> <name pos:start="17:56" pos:end="17:65">FD_MSR_DIO</name><operator pos:start="17:66" pos:end="17:66">)</operator></expr>)</condition> <block pos:start="17:69" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

        <expr_stmt pos:start="19:9" pos:end="19:68"><expr pos:start="19:9" pos:end="19:67"><call pos:start="19:9" pos:end="19:67"><name pos:start="19:9" pos:end="19:22">FLOPPY_DPRINTF</name><argument_list pos:start="19:23" pos:end="19:67">(<argument pos:start="19:24" pos:end="19:66"><expr pos:start="19:24" pos:end="19:66"><literal type="string" pos:start="19:24" pos:end="19:66">"error: controller not ready for reading\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:7">pos</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:26"><name pos:start="25:11" pos:end="25:16">fdctrl</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:26">data_pos</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="61:5"><if pos:start="27:5" pos:end="61:5">if <condition pos:start="27:8" pos:end="27:36">(<expr pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:14">fdctrl</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:19">msr</name></name> <operator pos:start="27:21" pos:end="27:21">&amp;</operator> <name pos:start="27:23" pos:end="27:35">FD_MSR_NONDMA</name></expr>)</condition> <block pos:start="27:38" pos:end="61:5">{<block_content pos:start="29:9" pos:end="59:9">

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:11">pos</name> <operator pos:start="29:13" pos:end="29:14">%=</operator> <name pos:start="29:16" pos:end="29:28">FD_SECTOR_LEN</name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="59:9"><if pos:start="31:9" pos:end="59:9">if <condition pos:start="31:12" pos:end="31:21">(<expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:15">pos</name> <operator pos:start="31:17" pos:end="31:18">==</operator> <literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>)</condition> <block pos:start="31:23" pos:end="59:9">{<block_content pos:start="33:13" pos:end="57:13">

            <if_stmt pos:start="33:13" pos:end="43:17"><if pos:start="33:13" pos:end="43:17">if <condition pos:start="33:16" pos:end="33:38">(<expr pos:start="33:17" pos:end="33:37"><name pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:22">fdctrl</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:32">data_pos</name></name> <operator pos:start="33:34" pos:end="33:35">!=</operator> <literal type="number" pos:start="33:37" pos:end="33:37">0</literal></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="43:17"><block_content pos:start="35:17" pos:end="43:17">

                <if_stmt pos:start="35:17" pos:end="43:17"><if pos:start="35:17" pos:end="43:17">if <condition pos:start="35:20" pos:end="35:63">(<expr pos:start="35:21" pos:end="35:62"><operator pos:start="35:21" pos:end="35:21">!</operator><call pos:start="35:22" pos:end="35:62"><name pos:start="35:22" pos:end="35:45">fdctrl_seek_to_next_sect</name><argument_list pos:start="35:46" pos:end="35:62">(<argument pos:start="35:47" pos:end="35:52"><expr pos:start="35:47" pos:end="35:52"><name pos:start="35:47" pos:end="35:52">fdctrl</name></expr></argument>, <argument pos:start="35:55" pos:end="35:61"><expr pos:start="35:55" pos:end="35:61"><name pos:start="35:55" pos:end="35:61">cur_drv</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:65" pos:end="43:17">{<block_content pos:start="37:21" pos:end="41:29">

                    <expr_stmt pos:start="37:21" pos:end="39:55"><expr pos:start="37:21" pos:end="39:54"><call pos:start="37:21" pos:end="39:54"><name pos:start="37:21" pos:end="37:34">FLOPPY_DPRINTF</name><argument_list pos:start="37:35" pos:end="39:54">(<argument pos:start="37:36" pos:end="37:70"><expr pos:start="37:36" pos:end="37:70"><literal type="string" pos:start="37:36" pos:end="37:70">"error seeking to next sector %d\n"</literal></expr></argument>,

                                   <argument pos:start="39:36" pos:end="39:53"><expr pos:start="39:36" pos:end="39:53"><call pos:start="39:36" pos:end="39:53"><name pos:start="39:36" pos:end="39:44">fd_sector</name><argument_list pos:start="39:45" pos:end="39:53">(<argument pos:start="39:46" pos:end="39:52"><expr pos:start="39:46" pos:end="39:52"><name pos:start="39:46" pos:end="39:52">cur_drv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="41:21" pos:end="41:29">return <expr pos:start="41:28" pos:end="41:28"><literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr>;</return>

                </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="45:13" pos:end="57:13"><if pos:start="45:13" pos:end="57:13">if <condition pos:start="45:16" pos:end="47:20">(<expr pos:start="45:17" pos:end="47:19"><call pos:start="45:17" pos:end="45:75"><name pos:start="45:17" pos:end="45:24">blk_read</name><argument_list pos:start="45:25" pos:end="45:75">(<argument pos:start="45:26" pos:end="45:37"><expr pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:32">cur_drv</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:37">blk</name></name></expr></argument>, <argument pos:start="45:40" pos:end="45:57"><expr pos:start="45:40" pos:end="45:57"><call pos:start="45:40" pos:end="45:57"><name pos:start="45:40" pos:end="45:48">fd_sector</name><argument_list pos:start="45:49" pos:end="45:57">(<argument pos:start="45:50" pos:end="45:56"><expr pos:start="45:50" pos:end="45:56"><name pos:start="45:50" pos:end="45:56">cur_drv</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:60" pos:end="45:71"><expr pos:start="45:60" pos:end="45:71"><name pos:start="45:60" pos:end="45:71"><name pos:start="45:60" pos:end="45:65">fdctrl</name><operator pos:start="45:66" pos:end="45:67">-&gt;</operator><name pos:start="45:68" pos:end="45:71">fifo</name></name></expr></argument>, <argument pos:start="45:74" pos:end="45:74"><expr pos:start="45:74" pos:end="45:74"><literal type="number" pos:start="45:74" pos:end="45:74">1</literal></expr></argument>)</argument_list></call>

                <operator pos:start="47:17" pos:end="47:17">&lt;</operator> <literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr>)</condition> <block pos:start="47:22" pos:end="57:13">{<block_content pos:start="49:17" pos:end="55:55">

                <expr_stmt pos:start="49:17" pos:end="51:51"><expr pos:start="49:17" pos:end="51:50"><call pos:start="49:17" pos:end="51:50"><name pos:start="49:17" pos:end="49:30">FLOPPY_DPRINTF</name><argument_list pos:start="49:31" pos:end="51:50">(<argument pos:start="49:32" pos:end="49:58"><expr pos:start="49:32" pos:end="49:58"><literal type="string" pos:start="49:32" pos:end="49:58">"error getting sector %d\n"</literal></expr></argument>,

                               <argument pos:start="51:32" pos:end="51:49"><expr pos:start="51:32" pos:end="51:49"><call pos:start="51:32" pos:end="51:49"><name pos:start="51:32" pos:end="51:40">fd_sector</name><argument_list pos:start="51:41" pos:end="51:49">(<argument pos:start="51:42" pos:end="51:48"><expr pos:start="51:42" pos:end="51:48"><name pos:start="51:42" pos:end="51:48">cur_drv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="53:17" pos:end="53:54">/* Sure, image size is too small... */</comment>

                <expr_stmt pos:start="55:17" pos:end="55:55"><expr pos:start="55:17" pos:end="55:54"><call pos:start="55:17" pos:end="55:54"><name pos:start="55:17" pos:end="55:22">memset</name><argument_list pos:start="55:23" pos:end="55:54">(<argument pos:start="55:24" pos:end="55:35"><expr pos:start="55:24" pos:end="55:35"><name pos:start="55:24" pos:end="55:35"><name pos:start="55:24" pos:end="55:29">fdctrl</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:35">fifo</name></name></expr></argument>, <argument pos:start="55:38" pos:end="55:38"><expr pos:start="55:38" pos:end="55:38"><literal type="number" pos:start="55:38" pos:end="55:38">0</literal></expr></argument>, <argument pos:start="55:41" pos:end="55:53"><expr pos:start="55:41" pos:end="55:53"><name pos:start="55:41" pos:end="55:53">FD_SECTOR_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:10">retval</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <name pos:start="63:14" pos:end="63:30"><name pos:start="63:14" pos:end="63:19">fdctrl</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:25">fifo</name><index pos:start="63:26" pos:end="63:30">[<expr pos:start="63:27" pos:end="63:29"><name pos:start="63:27" pos:end="63:29">pos</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="87:5"><if pos:start="65:5" pos:end="87:5">if <condition pos:start="65:8" pos:end="65:47">(<expr pos:start="65:9" pos:end="65:46"><operator pos:start="65:9" pos:end="65:10">++</operator><name pos:start="65:11" pos:end="65:26"><name pos:start="65:11" pos:end="65:16">fdctrl</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:26">data_pos</name></name> <operator pos:start="65:28" pos:end="65:29">==</operator> <name pos:start="65:31" pos:end="65:46"><name pos:start="65:31" pos:end="65:36">fdctrl</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:46">data_len</name></name></expr>)</condition> <block pos:start="65:49" pos:end="87:5">{<block_content pos:start="67:9" pos:end="85:9">

        <expr_stmt pos:start="67:9" pos:end="67:29"><expr pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:14">fdctrl</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:24">data_pos</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <literal type="number" pos:start="67:28" pos:end="67:28">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="69:9" pos:end="73:11">/* Switch from transfer mode to status mode

         * then from status mode to command mode

         */</comment>

        <if_stmt pos:start="75:9" pos:end="85:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:40">(<expr pos:start="75:13" pos:end="75:39"><name pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:18">fdctrl</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:23">msr</name></name> <operator pos:start="75:25" pos:end="75:25">&amp;</operator> <name pos:start="75:27" pos:end="75:39">FD_MSR_NONDMA</name></expr>)</condition> <block pos:start="75:42" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:59">

            <expr_stmt pos:start="77:13" pos:end="77:59"><expr pos:start="77:13" pos:end="77:58"><call pos:start="77:13" pos:end="77:58"><name pos:start="77:13" pos:end="77:32">fdctrl_stop_transfer</name><argument_list pos:start="77:33" pos:end="77:58">(<argument pos:start="77:34" pos:end="77:39"><expr pos:start="77:34" pos:end="77:39"><name pos:start="77:34" pos:end="77:39">fdctrl</name></expr></argument>, <argument pos:start="77:42" pos:end="77:45"><expr pos:start="77:42" pos:end="77:45"><literal type="number" pos:start="77:42" pos:end="77:45">0x00</literal></expr></argument>, <argument pos:start="77:48" pos:end="77:51"><expr pos:start="77:48" pos:end="77:51"><literal type="number" pos:start="77:48" pos:end="77:51">0x00</literal></expr></argument>, <argument pos:start="77:54" pos:end="77:57"><expr pos:start="77:54" pos:end="77:57"><literal type="number" pos:start="77:54" pos:end="77:57">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="79:11" pos:end="85:9">else <block pos:start="79:16" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:37">

            <expr_stmt pos:start="81:13" pos:end="81:38"><expr pos:start="81:13" pos:end="81:37"><call pos:start="81:13" pos:end="81:37"><name pos:start="81:13" pos:end="81:29">fdctrl_reset_fifo</name><argument_list pos:start="81:30" pos:end="81:37">(<argument pos:start="81:31" pos:end="81:36"><expr pos:start="81:31" pos:end="81:36"><name pos:start="81:31" pos:end="81:36">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:37"><expr pos:start="83:13" pos:end="83:36"><call pos:start="83:13" pos:end="83:36"><name pos:start="83:13" pos:end="83:28">fdctrl_reset_irq</name><argument_list pos:start="83:29" pos:end="83:36">(<argument pos:start="83:30" pos:end="83:35"><expr pos:start="83:30" pos:end="83:35"><name pos:start="83:30" pos:end="83:35">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:54"><expr pos:start="89:5" pos:end="89:53"><call pos:start="89:5" pos:end="89:53"><name pos:start="89:5" pos:end="89:18">FLOPPY_DPRINTF</name><argument_list pos:start="89:19" pos:end="89:53">(<argument pos:start="89:20" pos:end="89:44"><expr pos:start="89:20" pos:end="89:44"><literal type="string" pos:start="89:20" pos:end="89:44">"data register: 0x%02x\n"</literal></expr></argument>, <argument pos:start="89:47" pos:end="89:52"><expr pos:start="89:47" pos:end="89:52"><name pos:start="89:47" pos:end="89:52">retval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="93:5" pos:end="93:18">return <expr pos:start="93:12" pos:end="93:17"><name pos:start="93:12" pos:end="93:17">retval</name></expr>;</return>

</block_content>}</block></function>
</unit>
