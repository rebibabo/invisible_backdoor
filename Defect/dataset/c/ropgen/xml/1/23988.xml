<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23988.c" pos:tabs="8"><function pos:start="1:1" pos:end="62:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">qemu_ram_free</name><parameter_list pos:start="1:19" pos:end="1:35">(<parameter pos:start="1:20" pos:end="1:34"><decl pos:start="1:20" pos:end="1:34"><type pos:start="1:20" pos:end="1:29"><name pos:start="1:20" pos:end="1:29">ram_addr_t</name></type> <name pos:start="1:31" pos:end="1:34">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="62:1">{<block_content pos:start="5:5" pos:end="58:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">RAMBlock</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:19">block</name></decl>;</decl_stmt>



    <macro pos:start="9:5" pos:end="9:48"><name pos:start="9:5" pos:end="9:17">QLIST_FOREACH</name><argument_list pos:start="9:18" pos:end="9:48">(<argument pos:start="9:19" pos:end="9:23">block</argument>, <argument pos:start="9:26" pos:end="9:41">&amp;ram_list.blocks</argument>, <argument pos:start="9:44" pos:end="9:47">next</argument>)</argument_list></macro> <block pos:start="9:50" pos:end="58:5">{<block_content pos:start="11:9" pos:end="56:9">

        <if_stmt pos:start="11:9" pos:end="56:9"><if pos:start="11:9" pos:end="56:9">if <condition pos:start="11:12" pos:end="11:34">(<expr pos:start="11:13" pos:end="11:33"><name pos:start="11:13" pos:end="11:16">addr</name> <operator pos:start="11:18" pos:end="11:19">==</operator> <name pos:start="11:21" pos:end="11:33"><name pos:start="11:21" pos:end="11:25">block</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">offset</name></name></expr>)</condition> <block pos:start="11:36" pos:end="56:9">{<block_content pos:start="13:13" pos:end="54:19">

            <expr_stmt pos:start="13:13" pos:end="13:38"><expr pos:start="13:13" pos:end="13:37"><call pos:start="13:13" pos:end="13:37"><name pos:start="13:13" pos:end="13:24">QLIST_REMOVE</name><argument_list pos:start="13:25" pos:end="13:37">(<argument pos:start="13:26" pos:end="13:30"><expr pos:start="13:26" pos:end="13:30"><name pos:start="13:26" pos:end="13:30">block</name></expr></argument>, <argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="15:13" pos:end="50:13"><if pos:start="15:13" pos:end="19:13">if <condition pos:start="15:16" pos:end="15:49">(<expr pos:start="15:17" pos:end="15:48"><name pos:start="15:17" pos:end="15:28"><name pos:start="15:17" pos:end="15:21">block</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:28">flags</name></name> <operator pos:start="15:30" pos:end="15:30">&amp;</operator> <name pos:start="15:32" pos:end="15:48">RAM_PREALLOC_MASK</name></expr>)</condition> <block pos:start="15:51" pos:end="19:13">{<block_content pos:start="17:17" pos:end="17:17">

                <empty_stmt pos:start="17:17" pos:end="17:17">;</empty_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="19:15" pos:end="39:13">else if <condition pos:start="19:23" pos:end="19:32">(<expr pos:start="19:24" pos:end="19:31"><name pos:start="19:24" pos:end="19:31">mem_path</name></expr>)</condition> <block pos:start="19:34" pos:end="39:13">{<block_content pos:start="23:17" pos:end="38:0">

<cpp:if pos:start="21:1" pos:end="21:49">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:49"><call pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:11">defined</name> <argument_list pos:start="21:13" pos:end="21:23">(<argument pos:start="21:14" pos:end="21:22"><expr pos:start="21:14" pos:end="21:22"><name pos:start="21:14" pos:end="21:22">__linux__</name></expr></argument>)</argument_list></call> <operator pos:start="21:25" pos:end="21:26">&amp;&amp;</operator> <operator pos:start="21:28" pos:end="21:28">!</operator><call pos:start="21:29" pos:end="21:49"><name pos:start="21:29" pos:end="21:35">defined</name><argument_list pos:start="21:36" pos:end="21:49">(<argument pos:start="21:37" pos:end="21:48"><expr pos:start="21:37" pos:end="21:48"><name pos:start="21:37" pos:end="21:48">TARGET_S390X</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <if_stmt pos:start="23:17" pos:end="38:0"><if pos:start="23:17" pos:end="29:17">if <condition pos:start="23:20" pos:end="23:30">(<expr pos:start="23:21" pos:end="23:29"><name pos:start="23:21" pos:end="23:29"><name pos:start="23:21" pos:end="23:25">block</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:29">fd</name></name></expr>)</condition> <block pos:start="23:32" pos:end="29:17">{<block_content pos:start="25:21" pos:end="27:37">

                    <expr_stmt pos:start="25:21" pos:end="25:55"><expr pos:start="25:21" pos:end="25:54"><call pos:start="25:21" pos:end="25:54"><name pos:start="25:21" pos:end="25:26">munmap</name><argument_list pos:start="25:27" pos:end="25:54">(<argument pos:start="25:28" pos:end="25:38"><expr pos:start="25:28" pos:end="25:38"><name pos:start="25:28" pos:end="25:38"><name pos:start="25:28" pos:end="25:32">block</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:38">host</name></name></expr></argument>, <argument pos:start="25:41" pos:end="25:53"><expr pos:start="25:41" pos:end="25:53"><name pos:start="25:41" pos:end="25:53"><name pos:start="25:41" pos:end="25:45">block</name><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:53">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="27:21" pos:end="27:37"><expr pos:start="27:21" pos:end="27:36"><call pos:start="27:21" pos:end="27:36"><name pos:start="27:21" pos:end="27:25">close</name><argument_list pos:start="27:26" pos:end="27:36">(<argument pos:start="27:27" pos:end="27:35"><expr pos:start="27:27" pos:end="27:35"><name pos:start="27:27" pos:end="27:35"><name pos:start="27:27" pos:end="27:31">block</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:35">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="29:19" pos:end="38:0">else <block pos:start="29:24" pos:end="38:0">{<block_content pos:start="31:21" pos:end="31:44">

                    <expr_stmt pos:start="31:21" pos:end="31:44"><expr pos:start="31:21" pos:end="31:43"><call pos:start="31:21" pos:end="31:43"><name pos:start="31:21" pos:end="31:30">qemu_vfree</name><argument_list pos:start="31:31" pos:end="31:43">(<argument pos:start="31:32" pos:end="31:42"><expr pos:start="31:32" pos:end="31:42"><name pos:start="31:32" pos:end="31:42"><name pos:start="31:32" pos:end="31:36">block</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:42">host</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if> <else pos:start="39:15" pos:end="50:13">else <block pos:start="39:20" pos:end="50:13">{<block_content pos:start="43:17" pos:end="49:0">

<cpp:if pos:start="41:1" pos:end="41:48">#<cpp:directive pos:start="41:2" pos:end="41:3">if</cpp:directive> <expr pos:start="41:5" pos:end="41:48"><call pos:start="41:5" pos:end="41:25"><name pos:start="41:5" pos:end="41:11">defined</name><argument_list pos:start="41:12" pos:end="41:25">(<argument pos:start="41:13" pos:end="41:24"><expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:24">TARGET_S390X</name></expr></argument>)</argument_list></call> <operator pos:start="41:27" pos:end="41:28">&amp;&amp;</operator> <call pos:start="41:30" pos:end="41:48"><name pos:start="41:30" pos:end="41:36">defined</name><argument_list pos:start="41:37" pos:end="41:48">(<argument pos:start="41:38" pos:end="41:47"><expr pos:start="41:38" pos:end="41:47"><name pos:start="41:38" pos:end="41:47">CONFIG_KVM</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <expr_stmt pos:start="43:17" pos:end="43:51"><expr pos:start="43:17" pos:end="43:50"><call pos:start="43:17" pos:end="43:50"><name pos:start="43:17" pos:end="43:22">munmap</name><argument_list pos:start="43:23" pos:end="43:50">(<argument pos:start="43:24" pos:end="43:34"><expr pos:start="43:24" pos:end="43:34"><name pos:start="43:24" pos:end="43:34"><name pos:start="43:24" pos:end="43:28">block</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:34">host</name></name></expr></argument>, <argument pos:start="43:37" pos:end="43:49"><expr pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:41">block</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:49">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                <expr_stmt pos:start="46:17" pos:end="49:0"><expr pos:start="46:17" pos:end="46:39"><call pos:start="46:17" pos:end="46:39"><name pos:start="46:17" pos:end="46:26">qemu_vfree</name><argument_list pos:start="46:27" pos:end="46:39">(<argument pos:start="46:28" pos:end="46:38"><expr pos:start="46:28" pos:end="46:38"><name pos:start="46:28" pos:end="46:38"><name pos:start="46:28" pos:end="46:32">block</name><operator pos:start="46:33" pos:end="46:34">-&gt;</operator><name pos:start="46:35" pos:end="46:38">host</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="48:1" pos:end="48:6">#<cpp:directive pos:start="48:2" pos:end="48:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="52:13" pos:end="52:29"><expr pos:start="52:13" pos:end="52:28"><call pos:start="52:13" pos:end="52:28"><name pos:start="52:13" pos:end="52:21">qemu_free</name><argument_list pos:start="52:22" pos:end="52:28">(<argument pos:start="52:23" pos:end="52:27"><expr pos:start="52:23" pos:end="52:27"><name pos:start="52:23" pos:end="52:27">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="54:13" pos:end="54:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



</block_content>}</block></function></unit>
