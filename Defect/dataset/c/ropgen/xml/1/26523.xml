<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26523.c" pos:tabs="8"><function pos:start="1:1" pos:end="56:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">io_write_data_type</name><parameter_list pos:start="1:30" pos:end="3:73">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">buf</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:66"><decl pos:start="1:59" pos:end="1:66"><type pos:start="1:59" pos:end="1:66"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:66">size</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:58"><decl pos:start="3:31" pos:end="3:58"><type pos:start="3:31" pos:end="3:58"><name pos:start="3:31" pos:end="3:53"><name pos:start="3:31" pos:end="3:34">enum</name> <name pos:start="3:36" pos:end="3:53">AVIODataMarkerType</name></name></type> <name pos:start="3:55" pos:end="3:58">type</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:72"><decl pos:start="3:61" pos:end="3:72"><type pos:start="3:61" pos:end="3:72"><name pos:start="3:61" pos:end="3:67">int64_t</name></type> <name pos:start="3:69" pos:end="3:72">time</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="56:1">{<block_content pos:start="7:5" pos:end="54:39">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:20"><name pos:start="7:10" pos:end="7:16">timebuf</name><index pos:start="7:17" pos:end="7:20">[<expr pos:start="7:18" pos:end="7:19"><literal type="number" pos:start="7:18" pos:end="7:19">30</literal></expr>]</index></name></decl>, <decl pos:start="7:23" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:29">content</name><index pos:start="7:30" pos:end="7:32">[<expr pos:start="7:31" pos:end="7:31"><literal type="number" pos:start="7:31" pos:end="7:31">5</literal></expr>]</index></name> <init pos:start="7:34" pos:end="7:40">= <expr pos:start="7:36" pos:end="7:40"><block pos:start="7:36" pos:end="7:40">{ <expr pos:start="7:38" pos:end="7:38"><literal type="number" pos:start="7:38" pos:end="7:38">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">str</name></decl>;</decl_stmt>

    <switch pos:start="11:5" pos:end="24:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">type</name></expr>)</condition> <block pos:start="11:19" pos:end="24:5">{<block_content pos:start="13:5" pos:end="21:66">

    <case pos:start="13:5" pos:end="13:33">case <expr pos:start="13:10" pos:end="13:32"><name pos:start="13:10" pos:end="13:32">AVIO_DATA_MARKER_HEADER</name></expr>:</case>         <expr_stmt pos:start="13:43" pos:end="13:57"><expr pos:start="13:43" pos:end="13:56"><name pos:start="13:43" pos:end="13:45">str</name> <operator pos:start="13:47" pos:end="13:47">=</operator> <literal type="string" pos:start="13:49" pos:end="13:56">"header"</literal></expr>;</expr_stmt>   <break pos:start="13:61" pos:end="13:66">break;</break>

    <case pos:start="15:5" pos:end="15:37">case <expr pos:start="15:10" pos:end="15:36"><name pos:start="15:10" pos:end="15:36">AVIO_DATA_MARKER_SYNC_POINT</name></expr>:</case>     <expr_stmt pos:start="15:43" pos:end="15:55"><expr pos:start="15:43" pos:end="15:54"><name pos:start="15:43" pos:end="15:45">str</name> <operator pos:start="15:47" pos:end="15:47">=</operator> <literal type="string" pos:start="15:49" pos:end="15:54">"sync"</literal></expr>;</expr_stmt>     <break pos:start="15:61" pos:end="15:66">break;</break>

    <case pos:start="17:5" pos:end="17:41">case <expr pos:start="17:10" pos:end="17:40"><name pos:start="17:10" pos:end="17:40">AVIO_DATA_MARKER_BOUNDARY_POINT</name></expr>:</case> <expr_stmt pos:start="17:43" pos:end="17:59"><expr pos:start="17:43" pos:end="17:58"><name pos:start="17:43" pos:end="17:45">str</name> <operator pos:start="17:47" pos:end="17:47">=</operator> <literal type="string" pos:start="17:49" pos:end="17:58">"boundary"</literal></expr>;</expr_stmt> <break pos:start="17:61" pos:end="17:66">break;</break>

    <case pos:start="19:5" pos:end="19:34">case <expr pos:start="19:10" pos:end="19:33"><name pos:start="19:10" pos:end="19:33">AVIO_DATA_MARKER_UNKNOWN</name></expr>:</case>        <expr_stmt pos:start="19:43" pos:end="19:58"><expr pos:start="19:43" pos:end="19:57"><name pos:start="19:43" pos:end="19:45">str</name> <operator pos:start="19:47" pos:end="19:47">=</operator> <literal type="string" pos:start="19:49" pos:end="19:57">"unknown"</literal></expr>;</expr_stmt>  <break pos:start="19:61" pos:end="19:66">break;</break>

    <case pos:start="21:5" pos:end="21:34">case <expr pos:start="21:10" pos:end="21:33"><name pos:start="21:10" pos:end="21:33">AVIO_DATA_MARKER_TRAILER</name></expr>:</case>        <expr_stmt pos:start="21:43" pos:end="21:58"><expr pos:start="21:43" pos:end="21:57"><name pos:start="21:43" pos:end="21:45">str</name> <operator pos:start="21:47" pos:end="21:47">=</operator> <literal type="string" pos:start="21:49" pos:end="21:57">"trailer"</literal></expr>;</expr_stmt>  <break pos:start="21:61" pos:end="21:66">break;</break>


    </block_content>}</block></switch>

    <if_stmt pos:start="26:5" pos:end="32:60"><if pos:start="26:5" pos:end="28:52">if <condition pos:start="26:8" pos:end="26:31">(<expr pos:start="26:9" pos:end="26:30"><name pos:start="26:9" pos:end="26:12">time</name> <operator pos:start="26:14" pos:end="26:15">==</operator> <name pos:start="26:17" pos:end="26:30">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="28:9" pos:end="28:52"><block_content pos:start="28:9" pos:end="28:52">

        <expr_stmt pos:start="28:9" pos:end="28:52"><expr pos:start="28:9" pos:end="28:51"><call pos:start="28:9" pos:end="28:51"><name pos:start="28:9" pos:end="28:16">snprintf</name><argument_list pos:start="28:17" pos:end="28:51">(<argument pos:start="28:18" pos:end="28:24"><expr pos:start="28:18" pos:end="28:24"><name pos:start="28:18" pos:end="28:24">timebuf</name></expr></argument>, <argument pos:start="28:27" pos:end="28:41"><expr pos:start="28:27" pos:end="28:41"><sizeof pos:start="28:27" pos:end="28:41">sizeof<argument_list pos:start="28:33" pos:end="28:41">(<argument pos:start="28:34" pos:end="28:40"><expr pos:start="28:34" pos:end="28:40"><name pos:start="28:34" pos:end="28:40">timebuf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="28:44" pos:end="28:50"><expr pos:start="28:44" pos:end="28:50"><literal type="string" pos:start="28:44" pos:end="28:50">"nopts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="30:5" pos:end="32:60">else<block type="pseudo" pos:start="32:9" pos:end="32:60"><block_content pos:start="32:9" pos:end="32:60">

        <expr_stmt pos:start="32:9" pos:end="32:60"><expr pos:start="32:9" pos:end="32:59"><call pos:start="32:9" pos:end="32:59"><name pos:start="32:9" pos:end="32:16">snprintf</name><argument_list pos:start="32:17" pos:end="32:59">(<argument pos:start="32:18" pos:end="32:24"><expr pos:start="32:18" pos:end="32:24"><name pos:start="32:18" pos:end="32:24">timebuf</name></expr></argument>, <argument pos:start="32:27" pos:end="32:41"><expr pos:start="32:27" pos:end="32:41"><sizeof pos:start="32:27" pos:end="32:41">sizeof<argument_list pos:start="32:33" pos:end="32:41">(<argument pos:start="32:34" pos:end="32:40"><expr pos:start="32:34" pos:end="32:40"><name pos:start="32:34" pos:end="32:40">timebuf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="32:44" pos:end="32:52"><expr pos:start="32:44" pos:end="32:52"><literal type="string" pos:start="32:44" pos:end="32:46">"%"</literal><name pos:start="32:47" pos:end="32:52">PRId64</name></expr></argument>, <argument pos:start="32:55" pos:end="32:58"><expr pos:start="32:55" pos:end="32:58"><name pos:start="32:55" pos:end="32:58">time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <comment type="line" pos:start="34:5" pos:end="34:76">// There can be multiple header/trailer callbacks, only log the box type</comment>

    <comment type="line" pos:start="36:5" pos:end="36:34">// for header at out_size == 0</comment>

    <if_stmt pos:start="38:5" pos:end="50:48"><if pos:start="38:5" pos:end="46:36">if <condition pos:start="38:8" pos:end="44:18">(<expr pos:start="38:9" pos:end="44:17"><name pos:start="38:9" pos:end="38:12">type</name> <operator pos:start="38:14" pos:end="38:15">!=</operator> <name pos:start="38:17" pos:end="38:40">AVIO_DATA_MARKER_UNKNOWN</name> <operator pos:start="38:42" pos:end="38:43">&amp;&amp;</operator>

        <name pos:start="40:9" pos:end="40:12">type</name> <operator pos:start="40:14" pos:end="40:15">!=</operator> <name pos:start="40:17" pos:end="40:40">AVIO_DATA_MARKER_TRAILER</name> <operator pos:start="40:42" pos:end="40:43">&amp;&amp;</operator>

        <operator pos:start="42:9" pos:end="42:9">(</operator><name pos:start="42:10" pos:end="42:13">type</name> <operator pos:start="42:15" pos:end="42:16">!=</operator> <name pos:start="42:18" pos:end="42:40">AVIO_DATA_MARKER_HEADER</name> <operator pos:start="42:42" pos:end="42:43">||</operator> <name pos:start="42:45" pos:end="42:52">out_size</name> <operator pos:start="42:54" pos:end="42:55">==</operator> <literal type="number" pos:start="42:57" pos:end="42:57">0</literal><operator pos:start="42:58" pos:end="42:58">)</operator> <operator pos:start="42:60" pos:end="42:61">&amp;&amp;</operator>

        <name pos:start="44:9" pos:end="44:12">size</name> <operator pos:start="44:14" pos:end="44:15">&gt;=</operator> <literal type="number" pos:start="44:17" pos:end="44:17">8</literal></expr>)</condition><block type="pseudo" pos:start="46:9" pos:end="46:36"><block_content pos:start="46:9" pos:end="46:36">

        <expr_stmt pos:start="46:9" pos:end="46:36"><expr pos:start="46:9" pos:end="46:35"><call pos:start="46:9" pos:end="46:35"><name pos:start="46:9" pos:end="46:14">memcpy</name><argument_list pos:start="46:15" pos:end="46:35">(<argument pos:start="46:16" pos:end="46:22"><expr pos:start="46:16" pos:end="46:22"><name pos:start="46:16" pos:end="46:22">content</name></expr></argument>, <argument pos:start="46:25" pos:end="46:31"><expr pos:start="46:25" pos:end="46:31"><operator pos:start="46:25" pos:end="46:25">&amp;</operator><name pos:start="46:26" pos:end="46:31"><name pos:start="46:26" pos:end="46:28">buf</name><index pos:start="46:29" pos:end="46:31">[<expr pos:start="46:30" pos:end="46:30"><literal type="number" pos:start="46:30" pos:end="46:30">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="46:34" pos:end="46:34"><expr pos:start="46:34" pos:end="46:34"><literal type="number" pos:start="46:34" pos:end="46:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="48:5" pos:end="50:48">else<block type="pseudo" pos:start="50:9" pos:end="50:48"><block_content pos:start="50:9" pos:end="50:48">

        <expr_stmt pos:start="50:9" pos:end="50:48"><expr pos:start="50:9" pos:end="50:47"><call pos:start="50:9" pos:end="50:47"><name pos:start="50:9" pos:end="50:16">snprintf</name><argument_list pos:start="50:17" pos:end="50:47">(<argument pos:start="50:18" pos:end="50:24"><expr pos:start="50:18" pos:end="50:24"><name pos:start="50:18" pos:end="50:24">content</name></expr></argument>, <argument pos:start="50:27" pos:end="50:41"><expr pos:start="50:27" pos:end="50:41"><sizeof pos:start="50:27" pos:end="50:41">sizeof<argument_list pos:start="50:33" pos:end="50:41">(<argument pos:start="50:34" pos:end="50:40"><expr pos:start="50:34" pos:end="50:40"><name pos:start="50:34" pos:end="50:40">content</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="50:44" pos:end="50:46"><expr pos:start="50:44" pos:end="50:46"><literal type="string" pos:start="50:44" pos:end="50:46">"-"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="52:5" pos:end="52:89"><expr pos:start="52:5" pos:end="52:88"><call pos:start="52:5" pos:end="52:88"><name pos:start="52:5" pos:end="52:10">printf</name><argument_list pos:start="52:11" pos:end="52:88">(<argument pos:start="52:12" pos:end="52:58"><expr pos:start="52:12" pos:end="52:58"><literal type="string" pos:start="52:12" pos:end="52:58">"write_data len %d, time %s, type %s atom %s\n"</literal></expr></argument>, <argument pos:start="52:61" pos:end="52:64"><expr pos:start="52:61" pos:end="52:64"><name pos:start="52:61" pos:end="52:64">size</name></expr></argument>, <argument pos:start="52:67" pos:end="52:73"><expr pos:start="52:67" pos:end="52:73"><name pos:start="52:67" pos:end="52:73">timebuf</name></expr></argument>, <argument pos:start="52:76" pos:end="52:78"><expr pos:start="52:76" pos:end="52:78"><name pos:start="52:76" pos:end="52:78">str</name></expr></argument>, <argument pos:start="52:81" pos:end="52:87"><expr pos:start="52:81" pos:end="52:87"><name pos:start="52:81" pos:end="52:87">content</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="54:5" pos:end="54:39">return <expr pos:start="54:12" pos:end="54:38"><call pos:start="54:12" pos:end="54:38"><name pos:start="54:12" pos:end="54:19">io_write</name><argument_list pos:start="54:20" pos:end="54:38">(<argument pos:start="54:21" pos:end="54:26"><expr pos:start="54:21" pos:end="54:26"><name pos:start="54:21" pos:end="54:26">opaque</name></expr></argument>, <argument pos:start="54:29" pos:end="54:31"><expr pos:start="54:29" pos:end="54:31"><name pos:start="54:29" pos:end="54:31">buf</name></expr></argument>, <argument pos:start="54:34" pos:end="54:37"><expr pos:start="54:34" pos:end="54:37"><name pos:start="54:34" pos:end="54:37">size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function></unit>
