<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9834.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">theora_header</name><parameter_list pos:start="1:25" pos:end="1:53">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:52"><decl pos:start="1:46" pos:end="1:52"><type pos:start="1:46" pos:end="1:52"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:52">idx</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="87:1">{<block_content pos:start="3:5" pos:end="86:13">
    <decl_stmt pos:start="3:5" pos:end="3:41"><decl pos:start="3:5" pos:end="3:40"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:10">struct</name> <name pos:start="3:12" pos:end="3:14">ogg</name></name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">ogg</name>       <init pos:start="3:27" pos:end="3:40">= <expr pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:29">s</name><operator pos:start="3:30" pos:end="3:31">-&gt;</operator><name pos:start="3:32" pos:end="3:40">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:47"><decl pos:start="4:5" pos:end="4:46"><type pos:start="4:5" pos:end="4:23"><name pos:start="4:5" pos:end="4:21"><name pos:start="4:5" pos:end="4:10">struct</name> <name pos:start="4:12" pos:end="4:21">ogg_stream</name></name> <modifier pos:start="4:23" pos:end="4:23">*</modifier></type><name pos:start="4:24" pos:end="4:25">os</name> <init pos:start="4:27" pos:end="4:46">= <expr pos:start="4:29" pos:end="4:46"><name pos:start="4:29" pos:end="4:40"><name pos:start="4:29" pos:end="4:31">ogg</name><operator pos:start="4:32" pos:end="4:33">-&gt;</operator><name pos:start="4:34" pos:end="4:40">streams</name></name> <operator pos:start="4:42" pos:end="4:42">+</operator> <name pos:start="4:44" pos:end="4:46">idx</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name>          <init pos:start="5:27" pos:end="5:43">= <expr pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:38">streams</name><index pos:start="5:39" pos:end="5:43">[<expr pos:start="5:40" pos:end="5:42"><name pos:start="5:40" pos:end="5:42">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:40"><decl pos:start="6:5" pos:end="6:39"><type pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:16">TheoraParams</name> <modifier pos:start="6:18" pos:end="6:18">*</modifier></type><name pos:start="6:19" pos:end="6:21">thp</name>     <init pos:start="6:27" pos:end="6:39">= <expr pos:start="6:29" pos:end="6:39"><name pos:start="6:29" pos:end="6:39"><name pos:start="6:29" pos:end="6:30">os</name><operator pos:start="6:31" pos:end="6:32">-&gt;</operator><name pos:start="6:33" pos:end="6:39">private</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:70"><decl pos:start="7:5" pos:end="7:69"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">cds</name>               <init pos:start="7:27" pos:end="7:69">= <expr pos:start="7:29" pos:end="7:69"><name pos:start="7:29" pos:end="7:53"><name pos:start="7:29" pos:end="7:30">st</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:37">codec</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:53">extradata_size</name></name> <operator pos:start="7:55" pos:end="7:55">+</operator> <name pos:start="7:57" pos:end="7:65"><name pos:start="7:57" pos:end="7:58">os</name><operator pos:start="7:59" pos:end="7:60">-&gt;</operator><name pos:start="7:61" pos:end="7:65">psize</name></name> <operator pos:start="7:67" pos:end="7:67">+</operator> <literal type="number" pos:start="7:69" pos:end="7:69">2</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:12"><decl pos:start="8:5" pos:end="8:11"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:11">err</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">cdp</name></decl>;</decl_stmt>
    <if_stmt pos:start="10:5" pos:end="11:17"><if pos:start="10:5" pos:end="11:17">if <condition pos:start="10:8" pos:end="10:38">(<expr pos:start="10:9" pos:end="10:37"><operator pos:start="10:9" pos:end="10:9">!</operator><operator pos:start="10:10" pos:end="10:10">(</operator><name pos:start="10:11" pos:end="10:29"><name pos:start="10:11" pos:end="10:12">os</name><operator pos:start="10:13" pos:end="10:14">-&gt;</operator><name pos:start="10:15" pos:end="10:17">buf</name><index pos:start="10:18" pos:end="10:29">[<expr pos:start="10:19" pos:end="10:28"><name pos:start="10:19" pos:end="10:28"><name pos:start="10:19" pos:end="10:20">os</name><operator pos:start="10:21" pos:end="10:22">-&gt;</operator><name pos:start="10:23" pos:end="10:28">pstart</name></name></expr>]</index></name> <operator pos:start="10:31" pos:end="10:31">&amp;</operator> <literal type="number" pos:start="10:33" pos:end="10:36">0x80</literal><operator pos:start="10:37" pos:end="10:37">)</operator></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:17"><block_content pos:start="11:9" pos:end="11:17">
        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="12:5" pos:end="17:5"><if pos:start="12:5" pos:end="17:5">if <condition pos:start="12:8" pos:end="12:13">(<expr pos:start="12:9" pos:end="12:12"><operator pos:start="12:9" pos:end="12:9">!</operator><name pos:start="12:10" pos:end="12:12">thp</name></expr>)</condition> <block pos:start="12:15" pos:end="17:5">{<block_content pos:start="13:9" pos:end="16:26">
        <expr_stmt pos:start="13:9" pos:end="13:39"><expr pos:start="13:9" pos:end="13:38"><name pos:start="13:9" pos:end="13:11">thp</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:38"><name pos:start="13:15" pos:end="13:24">av_mallocz</name><argument_list pos:start="13:25" pos:end="13:38">(<argument pos:start="13:26" pos:end="13:37"><expr pos:start="13:26" pos:end="13:37"><sizeof pos:start="13:26" pos:end="13:37">sizeof<argument_list pos:start="13:32" pos:end="13:37">(<argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><operator pos:start="13:33" pos:end="13:33">*</operator><name pos:start="13:34" pos:end="13:36">thp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="14:9" pos:end="15:35"><if pos:start="14:9" pos:end="15:35">if <condition pos:start="14:12" pos:end="14:17">(<expr pos:start="14:13" pos:end="14:16"><operator pos:start="14:13" pos:end="14:13">!</operator><name pos:start="14:14" pos:end="14:16">thp</name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:35"><block_content pos:start="15:13" pos:end="15:35">
            <return pos:start="15:13" pos:end="15:35">return <expr pos:start="15:20" pos:end="15:34"><call pos:start="15:20" pos:end="15:34"><name pos:start="15:20" pos:end="15:26">AVERROR</name><argument_list pos:start="15:27" pos:end="15:34">(<argument pos:start="15:28" pos:end="15:33"><expr pos:start="15:28" pos:end="15:33"><name pos:start="15:28" pos:end="15:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:26"><expr pos:start="16:9" pos:end="16:25"><name pos:start="16:9" pos:end="16:19"><name pos:start="16:9" pos:end="16:10">os</name><operator pos:start="16:11" pos:end="16:12">-&gt;</operator><name pos:start="16:13" pos:end="16:19">private</name></name> <operator pos:start="16:21" pos:end="16:21">=</operator> <name pos:start="16:23" pos:end="16:25">thp</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <switch pos:start="18:5" pos:end="75:5">switch <condition pos:start="18:12" pos:end="18:32">(<expr pos:start="18:13" pos:end="18:31"><name pos:start="18:13" pos:end="18:31"><name pos:start="18:13" pos:end="18:14">os</name><operator pos:start="18:15" pos:end="18:16">-&gt;</operator><name pos:start="18:17" pos:end="18:19">buf</name><index pos:start="18:20" pos:end="18:31">[<expr pos:start="18:21" pos:end="18:30"><name pos:start="18:21" pos:end="18:30"><name pos:start="18:21" pos:end="18:22">os</name><operator pos:start="18:23" pos:end="18:24">-&gt;</operator><name pos:start="18:25" pos:end="18:30">pstart</name></name></expr>]</index></name></expr>)</condition> <block pos:start="18:34" pos:end="75:5">{<block_content pos:start="19:5" pos:end="74:35">
    <case pos:start="19:5" pos:end="19:14">case <expr pos:start="19:10" pos:end="19:13"><literal type="number" pos:start="19:10" pos:end="19:13">0x80</literal></expr>:</case> <block pos:start="19:16" pos:end="64:5">{<block_content pos:start="20:9" pos:end="63:55">
        <decl_stmt pos:start="20:9" pos:end="20:25"><decl pos:start="20:9" pos:end="20:24"><type pos:start="20:9" pos:end="20:21"><name pos:start="20:9" pos:end="20:21">GetBitContext</name></type> <name pos:start="20:23" pos:end="20:24">gb</name></decl>;</decl_stmt>
        <decl_stmt pos:start="21:9" pos:end="21:28"><decl pos:start="21:9" pos:end="21:27"><type pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:18">AVRational</name></type> <name pos:start="21:20" pos:end="21:27">timebase</name></decl>;</decl_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:64"><expr pos:start="22:9" pos:end="22:63"><call pos:start="22:9" pos:end="22:63"><name pos:start="22:9" pos:end="22:21">init_get_bits</name><argument_list pos:start="22:22" pos:end="22:63">(<argument pos:start="22:23" pos:end="22:25"><expr pos:start="22:23" pos:end="22:25"><operator pos:start="22:23" pos:end="22:23">&amp;</operator><name pos:start="22:24" pos:end="22:25">gb</name></expr></argument>, <argument pos:start="22:28" pos:end="22:47"><expr pos:start="22:28" pos:end="22:47"><name pos:start="22:28" pos:end="22:34"><name pos:start="22:28" pos:end="22:29">os</name><operator pos:start="22:30" pos:end="22:31">-&gt;</operator><name pos:start="22:32" pos:end="22:34">buf</name></name> <operator pos:start="22:36" pos:end="22:36">+</operator> <name pos:start="22:38" pos:end="22:47"><name pos:start="22:38" pos:end="22:39">os</name><operator pos:start="22:40" pos:end="22:41">-&gt;</operator><name pos:start="22:42" pos:end="22:47">pstart</name></name></expr></argument>, <argument pos:start="22:50" pos:end="22:62"><expr pos:start="22:50" pos:end="22:62"><name pos:start="22:50" pos:end="22:58"><name pos:start="22:50" pos:end="22:51">os</name><operator pos:start="22:52" pos:end="22:53">-&gt;</operator><name pos:start="22:54" pos:end="22:58">psize</name></name> <operator pos:start="22:60" pos:end="22:60">*</operator> <literal type="number" pos:start="22:62" pos:end="22:62">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="23:9" pos:end="23:26">/* 0x80"theora" */</comment>
        <expr_stmt pos:start="24:9" pos:end="24:35"><expr pos:start="24:9" pos:end="24:34"><call pos:start="24:9" pos:end="24:34"><name pos:start="24:9" pos:end="24:22">skip_bits_long</name><argument_list pos:start="24:23" pos:end="24:34">(<argument pos:start="24:24" pos:end="24:26"><expr pos:start="24:24" pos:end="24:26"><operator pos:start="24:24" pos:end="24:24">&amp;</operator><name pos:start="24:25" pos:end="24:26">gb</name></expr></argument>, <argument pos:start="24:29" pos:end="24:33"><expr pos:start="24:29" pos:end="24:33"><literal type="number" pos:start="24:29" pos:end="24:29">7</literal> <operator pos:start="24:31" pos:end="24:31">*</operator> <literal type="number" pos:start="24:33" pos:end="24:33">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:46"><expr pos:start="25:9" pos:end="25:45"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:11">thp</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:20">version</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:45"><name pos:start="25:24" pos:end="25:36">get_bits_long</name><argument_list pos:start="25:37" pos:end="25:45">(<argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><operator pos:start="25:38" pos:end="25:38">&amp;</operator><name pos:start="25:39" pos:end="25:40">gb</name></expr></argument>, <argument pos:start="25:43" pos:end="25:44"><expr pos:start="25:43" pos:end="25:44"><literal type="number" pos:start="25:43" pos:end="25:44">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="26:9" pos:end="30:9"><if pos:start="26:9" pos:end="30:9">if <condition pos:start="26:12" pos:end="26:36">(<expr pos:start="26:13" pos:end="26:35"><name pos:start="26:13" pos:end="26:24"><name pos:start="26:13" pos:end="26:15">thp</name><operator pos:start="26:16" pos:end="26:17">-&gt;</operator><name pos:start="26:18" pos:end="26:24">version</name></name> <operator pos:start="26:26" pos:end="26:26">&lt;</operator> <literal type="number" pos:start="26:28" pos:end="26:35">0x030100</literal></expr>)</condition> <block pos:start="26:38" pos:end="30:9">{<block_content pos:start="27:13" pos:end="29:35">
            <expr_stmt pos:start="27:13" pos:end="28:73"><expr pos:start="27:13" pos:end="28:72"><call pos:start="27:13" pos:end="28:72"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="28:72">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">s</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>,
                   <argument pos:start="28:20" pos:end="28:57"><expr pos:start="28:20" pos:end="28:57"><literal type="string" pos:start="28:20" pos:end="28:57">"Too old or unsupported Theora (%x)\n"</literal></expr></argument>, <argument pos:start="28:60" pos:end="28:71"><expr pos:start="28:60" pos:end="28:71"><name pos:start="28:60" pos:end="28:71"><name pos:start="28:60" pos:end="28:62">thp</name><operator pos:start="28:63" pos:end="28:64">-&gt;</operator><name pos:start="28:65" pos:end="28:71">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="29:13" pos:end="29:35">return <expr pos:start="29:20" pos:end="29:34"><call pos:start="29:20" pos:end="29:34"><name pos:start="29:20" pos:end="29:26">AVERROR</name><argument_list pos:start="29:27" pos:end="29:34">(<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="31:9" pos:end="31:51"><expr pos:start="31:9" pos:end="31:50"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:10">st</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:17">codec</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:24">width</name></name>  <operator pos:start="31:27" pos:end="31:27">=</operator> <call pos:start="31:29" pos:end="31:45"><name pos:start="31:29" pos:end="31:36">get_bits</name><argument_list pos:start="31:37" pos:end="31:45">(<argument pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><operator pos:start="31:38" pos:end="31:38">&amp;</operator><name pos:start="31:39" pos:end="31:40">gb</name></expr></argument>, <argument pos:start="31:43" pos:end="31:44"><expr pos:start="31:43" pos:end="31:44"><literal type="number" pos:start="31:43" pos:end="31:44">16</literal></expr></argument>)</argument_list></call> <operator pos:start="31:47" pos:end="31:48">&lt;&lt;</operator> <literal type="number" pos:start="31:50" pos:end="31:50">4</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:51"><expr pos:start="32:9" pos:end="32:50"><name pos:start="32:9" pos:end="32:25"><name pos:start="32:9" pos:end="32:10">st</name><operator pos:start="32:11" pos:end="32:12">-&gt;</operator><name pos:start="32:13" pos:end="32:17">codec</name><operator pos:start="32:18" pos:end="32:19">-&gt;</operator><name pos:start="32:20" pos:end="32:25">height</name></name> <operator pos:start="32:27" pos:end="32:27">=</operator> <call pos:start="32:29" pos:end="32:45"><name pos:start="32:29" pos:end="32:36">get_bits</name><argument_list pos:start="32:37" pos:end="32:45">(<argument pos:start="32:38" pos:end="32:40"><expr pos:start="32:38" pos:end="32:40"><operator pos:start="32:38" pos:end="32:38">&amp;</operator><name pos:start="32:39" pos:end="32:40">gb</name></expr></argument>, <argument pos:start="32:43" pos:end="32:44"><expr pos:start="32:43" pos:end="32:44"><literal type="number" pos:start="32:43" pos:end="32:44">16</literal></expr></argument>)</argument_list></call> <operator pos:start="32:47" pos:end="32:48">&lt;&lt;</operator> <literal type="number" pos:start="32:50" pos:end="32:50">4</literal></expr>;</expr_stmt>
        <if_stmt pos:start="33:9" pos:end="34:32"><if pos:start="33:9" pos:end="34:32">if <condition pos:start="33:12" pos:end="33:37">(<expr pos:start="33:13" pos:end="33:36"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:15">thp</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:24">version</name></name> <operator pos:start="33:26" pos:end="33:27">&gt;=</operator> <literal type="number" pos:start="33:29" pos:end="33:36">0x030400</literal></expr>)</condition><block type="pseudo" pos:start="34:13" pos:end="34:32"><block_content pos:start="34:13" pos:end="34:32">
            <expr_stmt pos:start="34:13" pos:end="34:32"><expr pos:start="34:13" pos:end="34:31"><call pos:start="34:13" pos:end="34:31"><name pos:start="34:13" pos:end="34:21">skip_bits</name><argument_list pos:start="34:22" pos:end="34:31">(<argument pos:start="34:23" pos:end="34:25"><expr pos:start="34:23" pos:end="34:25"><operator pos:start="34:23" pos:end="34:23">&amp;</operator><name pos:start="34:24" pos:end="34:25">gb</name></expr></argument>, <argument pos:start="34:28" pos:end="34:30"><expr pos:start="34:28" pos:end="34:30"><literal type="number" pos:start="34:28" pos:end="34:30">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="35:9" pos:end="44:9"><if pos:start="35:9" pos:end="44:9">if <condition pos:start="35:12" pos:end="35:37">(<expr pos:start="35:13" pos:end="35:36"><name pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:15">thp</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:24">version</name></name> <operator pos:start="35:26" pos:end="35:27">&gt;=</operator> <literal type="number" pos:start="35:29" pos:end="35:36">0x030200</literal></expr>)</condition> <block pos:start="35:39" pos:end="44:9">{<block_content pos:start="36:13" pos:end="43:31">
            <decl_stmt pos:start="36:13" pos:end="36:48"><decl pos:start="36:13" pos:end="36:47"><type pos:start="36:13" pos:end="36:15"><name pos:start="36:13" pos:end="36:15">int</name></type> <name pos:start="36:17" pos:end="36:21">width</name>  <init pos:start="36:24" pos:end="36:47">= <expr pos:start="36:26" pos:end="36:47"><call pos:start="36:26" pos:end="36:47"><name pos:start="36:26" pos:end="36:38">get_bits_long</name><argument_list pos:start="36:39" pos:end="36:47">(<argument pos:start="36:40" pos:end="36:42"><expr pos:start="36:40" pos:end="36:42"><operator pos:start="36:40" pos:end="36:40">&amp;</operator><name pos:start="36:41" pos:end="36:42">gb</name></expr></argument>, <argument pos:start="36:45" pos:end="36:46"><expr pos:start="36:45" pos:end="36:46"><literal type="number" pos:start="36:45" pos:end="36:46">24</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="37:13" pos:end="37:48"><decl pos:start="37:13" pos:end="37:47"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:22">height</name> <init pos:start="37:24" pos:end="37:47">= <expr pos:start="37:26" pos:end="37:47"><call pos:start="37:26" pos:end="37:47"><name pos:start="37:26" pos:end="37:38">get_bits_long</name><argument_list pos:start="37:39" pos:end="37:47">(<argument pos:start="37:40" pos:end="37:42"><expr pos:start="37:40" pos:end="37:42"><operator pos:start="37:40" pos:end="37:40">&amp;</operator><name pos:start="37:41" pos:end="37:42">gb</name></expr></argument>, <argument pos:start="37:45" pos:end="37:46"><expr pos:start="37:45" pos:end="37:46"><literal type="number" pos:start="37:45" pos:end="37:46">24</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="38:13" pos:end="42:13"><if pos:start="38:13" pos:end="42:13">if <condition pos:start="38:16" pos:end="39:79">(<expr pos:start="38:17" pos:end="39:78"><name pos:start="38:17" pos:end="38:21">width</name>  <operator pos:start="38:24" pos:end="38:25">&lt;=</operator> <name pos:start="38:27" pos:end="38:42"><name pos:start="38:27" pos:end="38:28">st</name><operator pos:start="38:29" pos:end="38:30">-&gt;</operator><name pos:start="38:31" pos:end="38:35">codec</name><operator pos:start="38:36" pos:end="38:37">-&gt;</operator><name pos:start="38:38" pos:end="38:42">width</name></name>  <operator pos:start="38:45" pos:end="38:46">&amp;&amp;</operator> <name pos:start="38:48" pos:end="38:52">width</name>  <operator pos:start="38:55" pos:end="38:55">&gt;</operator> <name pos:start="38:57" pos:end="38:72"><name pos:start="38:57" pos:end="38:58">st</name><operator pos:start="38:59" pos:end="38:60">-&gt;</operator><name pos:start="38:61" pos:end="38:65">codec</name><operator pos:start="38:66" pos:end="38:67">-&gt;</operator><name pos:start="38:68" pos:end="38:72">width</name></name>  <operator pos:start="38:75" pos:end="38:75">-</operator> <literal type="number" pos:start="38:77" pos:end="38:78">16</literal> <operator pos:start="38:80" pos:end="38:81">&amp;&amp;</operator>
                <name pos:start="39:17" pos:end="39:22">height</name> <operator pos:start="39:24" pos:end="39:25">&lt;=</operator> <name pos:start="39:27" pos:end="39:43"><name pos:start="39:27" pos:end="39:28">st</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:35">codec</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:43">height</name></name> <operator pos:start="39:45" pos:end="39:46">&amp;&amp;</operator> <name pos:start="39:48" pos:end="39:53">height</name> <operator pos:start="39:55" pos:end="39:55">&gt;</operator> <name pos:start="39:57" pos:end="39:73"><name pos:start="39:57" pos:end="39:58">st</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:65">codec</name><operator pos:start="39:66" pos:end="39:67">-&gt;</operator><name pos:start="39:68" pos:end="39:73">height</name></name> <operator pos:start="39:75" pos:end="39:75">-</operator> <literal type="number" pos:start="39:77" pos:end="39:78">16</literal></expr>)</condition> <block pos:start="39:81" pos:end="42:13">{<block_content pos:start="40:17" pos:end="41:43">
                <expr_stmt pos:start="40:17" pos:end="40:42"><expr pos:start="40:17" pos:end="40:41"><name pos:start="40:17" pos:end="40:32"><name pos:start="40:17" pos:end="40:18">st</name><operator pos:start="40:19" pos:end="40:20">-&gt;</operator><name pos:start="40:21" pos:end="40:25">codec</name><operator pos:start="40:26" pos:end="40:27">-&gt;</operator><name pos:start="40:28" pos:end="40:32">width</name></name>  <operator pos:start="40:35" pos:end="40:35">=</operator> <name pos:start="40:37" pos:end="40:41">width</name></expr>;</expr_stmt>
                <expr_stmt pos:start="41:17" pos:end="41:43"><expr pos:start="41:17" pos:end="41:42"><name pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:18">st</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:25">codec</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:33">height</name></name> <operator pos:start="41:35" pos:end="41:35">=</operator> <name pos:start="41:37" pos:end="41:42">height</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="43:13" pos:end="43:31"><expr pos:start="43:13" pos:end="43:30"><call pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:21">skip_bits</name><argument_list pos:start="43:22" pos:end="43:30">(<argument pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:25">gb</name></expr></argument>, <argument pos:start="43:28" pos:end="43:29"><expr pos:start="43:28" pos:end="43:29"><literal type="number" pos:start="43:28" pos:end="43:29">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="45:9" pos:end="45:46"><expr pos:start="45:9" pos:end="45:45"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:16">timebase</name><operator pos:start="45:17" pos:end="45:17">.</operator><name pos:start="45:18" pos:end="45:20">den</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:45"><name pos:start="45:24" pos:end="45:36">get_bits_long</name><argument_list pos:start="45:37" pos:end="45:45">(<argument pos:start="45:38" pos:end="45:40"><expr pos:start="45:38" pos:end="45:40"><operator pos:start="45:38" pos:end="45:38">&amp;</operator><name pos:start="45:39" pos:end="45:40">gb</name></expr></argument>, <argument pos:start="45:43" pos:end="45:44"><expr pos:start="45:43" pos:end="45:44"><literal type="number" pos:start="45:43" pos:end="45:44">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="46:9" pos:end="46:46"><expr pos:start="46:9" pos:end="46:45"><name pos:start="46:9" pos:end="46:20"><name pos:start="46:9" pos:end="46:16">timebase</name><operator pos:start="46:17" pos:end="46:17">.</operator><name pos:start="46:18" pos:end="46:20">num</name></name> <operator pos:start="46:22" pos:end="46:22">=</operator> <call pos:start="46:24" pos:end="46:45"><name pos:start="46:24" pos:end="46:36">get_bits_long</name><argument_list pos:start="46:37" pos:end="46:45">(<argument pos:start="46:38" pos:end="46:40"><expr pos:start="46:38" pos:end="46:40"><operator pos:start="46:38" pos:end="46:38">&amp;</operator><name pos:start="46:39" pos:end="46:40">gb</name></expr></argument>, <argument pos:start="46:43" pos:end="46:44"><expr pos:start="46:43" pos:end="46:44"><literal type="number" pos:start="46:43" pos:end="46:44">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:52">(<expr pos:start="47:13" pos:end="47:51"><operator pos:start="47:13" pos:end="47:13">!</operator><operator pos:start="47:14" pos:end="47:14">(</operator><name pos:start="47:15" pos:end="47:26"><name pos:start="47:15" pos:end="47:22">timebase</name><operator pos:start="47:23" pos:end="47:23">.</operator><name pos:start="47:24" pos:end="47:26">num</name></name> <operator pos:start="47:28" pos:end="47:28">&gt;</operator> <literal type="number" pos:start="47:30" pos:end="47:30">0</literal> <operator pos:start="47:32" pos:end="47:33">&amp;&amp;</operator> <name pos:start="47:35" pos:end="47:46"><name pos:start="47:35" pos:end="47:42">timebase</name><operator pos:start="47:43" pos:end="47:43">.</operator><name pos:start="47:44" pos:end="47:46">den</name></name> <operator pos:start="47:48" pos:end="47:48">&gt;</operator> <literal type="number" pos:start="47:50" pos:end="47:50">0</literal><operator pos:start="47:51" pos:end="47:51">)</operator></expr>)</condition> <block pos:start="47:54" pos:end="51:9">{<block_content pos:start="48:13" pos:end="50:30">
            <expr_stmt pos:start="48:13" pos:end="48:95"><expr pos:start="48:13" pos:end="48:94"><call pos:start="48:13" pos:end="48:94"><name pos:start="48:13" pos:end="48:18">av_log</name><argument_list pos:start="48:19" pos:end="48:94">(<argument pos:start="48:20" pos:end="48:20"><expr pos:start="48:20" pos:end="48:20"><name pos:start="48:20" pos:end="48:20">s</name></expr></argument>, <argument pos:start="48:23" pos:end="48:36"><expr pos:start="48:23" pos:end="48:36"><name pos:start="48:23" pos:end="48:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="48:39" pos:end="48:93"><expr pos:start="48:39" pos:end="48:93"><literal type="string" pos:start="48:39" pos:end="48:93">"Invalid time base in theora stream, assuming 25 FPS\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="49:13" pos:end="49:29"><expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:20">timebase</name><operator pos:start="49:21" pos:end="49:21">.</operator><name pos:start="49:22" pos:end="49:24">num</name></name> <operator pos:start="49:26" pos:end="49:26">=</operator> <literal type="number" pos:start="49:28" pos:end="49:28">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="50:13" pos:end="50:30"><expr pos:start="50:13" pos:end="50:29"><name pos:start="50:13" pos:end="50:24"><name pos:start="50:13" pos:end="50:20">timebase</name><operator pos:start="50:21" pos:end="50:21">.</operator><name pos:start="50:22" pos:end="50:24">den</name></name> <operator pos:start="50:26" pos:end="50:26">=</operator> <literal type="number" pos:start="50:28" pos:end="50:29">25</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="52:9" pos:end="52:64"><expr pos:start="52:9" pos:end="52:63"><call pos:start="52:9" pos:end="52:63"><name pos:start="52:9" pos:end="52:27">avpriv_set_pts_info</name><argument_list pos:start="52:28" pos:end="52:63">(<argument pos:start="52:29" pos:end="52:30"><expr pos:start="52:29" pos:end="52:30"><name pos:start="52:29" pos:end="52:30">st</name></expr></argument>, <argument pos:start="52:33" pos:end="52:34"><expr pos:start="52:33" pos:end="52:34"><literal type="number" pos:start="52:33" pos:end="52:34">64</literal></expr></argument>, <argument pos:start="52:37" pos:end="52:48"><expr pos:start="52:37" pos:end="52:48"><name pos:start="52:37" pos:end="52:48"><name pos:start="52:37" pos:end="52:44">timebase</name><operator pos:start="52:45" pos:end="52:45">.</operator><name pos:start="52:46" pos:end="52:48">num</name></name></expr></argument>, <argument pos:start="52:51" pos:end="52:62"><expr pos:start="52:51" pos:end="52:62"><name pos:start="52:51" pos:end="52:62"><name pos:start="52:51" pos:end="52:58">timebase</name><operator pos:start="52:59" pos:end="52:59">.</operator><name pos:start="52:60" pos:end="52:62">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="53:9" pos:end="53:61"><expr pos:start="53:9" pos:end="53:60"><name pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:10">st</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:31">sample_aspect_ratio</name><operator pos:start="53:32" pos:end="53:32">.</operator><name pos:start="53:33" pos:end="53:35">num</name></name> <operator pos:start="53:37" pos:end="53:37">=</operator> <call pos:start="53:39" pos:end="53:60"><name pos:start="53:39" pos:end="53:51">get_bits_long</name><argument_list pos:start="53:52" pos:end="53:60">(<argument pos:start="53:53" pos:end="53:55"><expr pos:start="53:53" pos:end="53:55"><operator pos:start="53:53" pos:end="53:53">&amp;</operator><name pos:start="53:54" pos:end="53:55">gb</name></expr></argument>, <argument pos:start="53:58" pos:end="53:59"><expr pos:start="53:58" pos:end="53:59"><literal type="number" pos:start="53:58" pos:end="53:59">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="54:9" pos:end="54:61"><expr pos:start="54:9" pos:end="54:60"><name pos:start="54:9" pos:end="54:35"><name pos:start="54:9" pos:end="54:10">st</name><operator pos:start="54:11" pos:end="54:12">-&gt;</operator><name pos:start="54:13" pos:end="54:31">sample_aspect_ratio</name><operator pos:start="54:32" pos:end="54:32">.</operator><name pos:start="54:33" pos:end="54:35">den</name></name> <operator pos:start="54:37" pos:end="54:37">=</operator> <call pos:start="54:39" pos:end="54:60"><name pos:start="54:39" pos:end="54:51">get_bits_long</name><argument_list pos:start="54:52" pos:end="54:60">(<argument pos:start="54:53" pos:end="54:55"><expr pos:start="54:53" pos:end="54:55"><operator pos:start="54:53" pos:end="54:53">&amp;</operator><name pos:start="54:54" pos:end="54:55">gb</name></expr></argument>, <argument pos:start="54:58" pos:end="54:59"><expr pos:start="54:58" pos:end="54:59"><literal type="number" pos:start="54:58" pos:end="54:59">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="55:9" pos:end="56:36"><if pos:start="55:9" pos:end="56:36">if <condition pos:start="55:12" pos:end="55:37">(<expr pos:start="55:13" pos:end="55:36"><name pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:15">thp</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:24">version</name></name> <operator pos:start="55:26" pos:end="55:27">&gt;=</operator> <literal type="number" pos:start="55:29" pos:end="55:36">0x030200</literal></expr>)</condition><block type="pseudo" pos:start="56:13" pos:end="56:36"><block_content pos:start="56:13" pos:end="56:36">
            <expr_stmt pos:start="56:13" pos:end="56:36"><expr pos:start="56:13" pos:end="56:35"><call pos:start="56:13" pos:end="56:35"><name pos:start="56:13" pos:end="56:26">skip_bits_long</name><argument_list pos:start="56:27" pos:end="56:35">(<argument pos:start="56:28" pos:end="56:30"><expr pos:start="56:28" pos:end="56:30"><operator pos:start="56:28" pos:end="56:28">&amp;</operator><name pos:start="56:29" pos:end="56:30">gb</name></expr></argument>, <argument pos:start="56:33" pos:end="56:34"><expr pos:start="56:33" pos:end="56:34"><literal type="number" pos:start="56:33" pos:end="56:34">38</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="57:9" pos:end="58:30"><if pos:start="57:9" pos:end="58:30">if <condition pos:start="57:12" pos:end="57:37">(<expr pos:start="57:13" pos:end="57:36"><name pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:15">thp</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:24">version</name></name> <operator pos:start="57:26" pos:end="57:27">&gt;=</operator> <literal type="number" pos:start="57:29" pos:end="57:36">0x304000</literal></expr>)</condition><block type="pseudo" pos:start="58:13" pos:end="58:30"><block_content pos:start="58:13" pos:end="58:30">
            <expr_stmt pos:start="58:13" pos:end="58:30"><expr pos:start="58:13" pos:end="58:29"><call pos:start="58:13" pos:end="58:29"><name pos:start="58:13" pos:end="58:21">skip_bits</name><argument_list pos:start="58:22" pos:end="58:29">(<argument pos:start="58:23" pos:end="58:25"><expr pos:start="58:23" pos:end="58:25"><operator pos:start="58:23" pos:end="58:23">&amp;</operator><name pos:start="58:24" pos:end="58:25">gb</name></expr></argument>, <argument pos:start="58:28" pos:end="58:28"><expr pos:start="58:28" pos:end="58:28"><literal type="number" pos:start="58:28" pos:end="58:28">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="59:9" pos:end="59:40"><expr pos:start="59:9" pos:end="59:39"><name pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:11">thp</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:20">gpshift</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <call pos:start="59:24" pos:end="59:39"><name pos:start="59:24" pos:end="59:31">get_bits</name><argument_list pos:start="59:32" pos:end="59:39">(<argument pos:start="59:33" pos:end="59:35"><expr pos:start="59:33" pos:end="59:35"><operator pos:start="59:33" pos:end="59:33">&amp;</operator><name pos:start="59:34" pos:end="59:35">gb</name></expr></argument>, <argument pos:start="59:38" pos:end="59:38"><expr pos:start="59:38" pos:end="59:38"><literal type="number" pos:start="59:38" pos:end="59:38">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="60:9" pos:end="60:47"><expr pos:start="60:9" pos:end="60:46"><name pos:start="60:9" pos:end="60:19"><name pos:start="60:9" pos:end="60:11">thp</name><operator pos:start="60:12" pos:end="60:13">-&gt;</operator><name pos:start="60:14" pos:end="60:19">gpmask</name></name>  <operator pos:start="60:22" pos:end="60:22">=</operator> <operator pos:start="60:24" pos:end="60:24">(</operator><literal type="number" pos:start="60:25" pos:end="60:25">1</literal> <operator pos:start="60:27" pos:end="60:28">&lt;&lt;</operator> <name pos:start="60:30" pos:end="60:41"><name pos:start="60:30" pos:end="60:32">thp</name><operator pos:start="60:33" pos:end="60:34">-&gt;</operator><name pos:start="60:35" pos:end="60:41">gpshift</name></name><operator pos:start="60:42" pos:end="60:42">)</operator> <operator pos:start="60:44" pos:end="60:44">-</operator> <literal type="number" pos:start="60:46" pos:end="60:46">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="61:9" pos:end="61:51"><expr pos:start="61:9" pos:end="61:50"><name pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:10">st</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:17">codec</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:29">codec_type</name></name> <operator pos:start="61:31" pos:end="61:31">=</operator> <name pos:start="61:33" pos:end="61:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>
        <expr_stmt pos:start="62:9" pos:end="62:51"><expr pos:start="62:9" pos:end="62:50"><name pos:start="62:9" pos:end="62:27"><name pos:start="62:9" pos:end="62:10">st</name><operator pos:start="62:11" pos:end="62:12">-&gt;</operator><name pos:start="62:13" pos:end="62:17">codec</name><operator pos:start="62:18" pos:end="62:19">-&gt;</operator><name pos:start="62:20" pos:end="62:27">codec_id</name></name>   <operator pos:start="62:31" pos:end="62:31">=</operator> <name pos:start="62:33" pos:end="62:50">AV_CODEC_ID_THEORA</name></expr>;</expr_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:55"><expr pos:start="63:9" pos:end="63:54"><name pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:10">st</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:24">need_parsing</name></name>      <operator pos:start="63:31" pos:end="63:31">=</operator> <name pos:start="63:33" pos:end="63:54">AVSTREAM_PARSE_HEADERS</name></expr>;</expr_stmt>
    </block_content>}</block>
    <break pos:start="65:5" pos:end="65:10">break;</break>
    <case pos:start="66:5" pos:end="66:14">case <expr pos:start="66:10" pos:end="66:13"><literal type="number" pos:start="66:10" pos:end="66:13">0x81</literal></expr>:</case>
        <expr_stmt pos:start="67:9" pos:end="67:85"><expr pos:start="67:9" pos:end="67:84"><call pos:start="67:9" pos:end="67:84"><name pos:start="67:9" pos:end="67:25">ff_vorbis_comment</name><argument_list pos:start="67:26" pos:end="67:84">(<argument pos:start="67:27" pos:end="67:27"><expr pos:start="67:27" pos:end="67:27"><name pos:start="67:27" pos:end="67:27">s</name></expr></argument>, <argument pos:start="67:30" pos:end="67:42"><expr pos:start="67:30" pos:end="67:42"><operator pos:start="67:30" pos:end="67:30">&amp;</operator><name pos:start="67:31" pos:end="67:42"><name pos:start="67:31" pos:end="67:32">st</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:42">metadata</name></name></expr></argument>, <argument pos:start="67:45" pos:end="67:68"><expr pos:start="67:45" pos:end="67:68"><name pos:start="67:45" pos:end="67:51"><name pos:start="67:45" pos:end="67:46">os</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:51">buf</name></name> <operator pos:start="67:53" pos:end="67:53">+</operator> <name pos:start="67:55" pos:end="67:64"><name pos:start="67:55" pos:end="67:56">os</name><operator pos:start="67:57" pos:end="67:58">-&gt;</operator><name pos:start="67:59" pos:end="67:64">pstart</name></name> <operator pos:start="67:66" pos:end="67:66">+</operator> <literal type="number" pos:start="67:68" pos:end="67:68">7</literal></expr></argument>, <argument pos:start="67:71" pos:end="67:83"><expr pos:start="67:71" pos:end="67:83"><name pos:start="67:71" pos:end="67:79"><name pos:start="67:71" pos:end="67:72">os</name><operator pos:start="67:73" pos:end="67:74">-&gt;</operator><name pos:start="67:75" pos:end="67:79">psize</name></name> <operator pos:start="67:81" pos:end="67:81">-</operator> <literal type="number" pos:start="67:83" pos:end="67:83">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <case pos:start="68:5" pos:end="68:14">case <expr pos:start="68:10" pos:end="68:13"><literal type="number" pos:start="68:10" pos:end="68:13">0x82</literal></expr>:</case>
        <if_stmt pos:start="69:9" pos:end="70:39"><if pos:start="69:9" pos:end="70:39">if <condition pos:start="69:12" pos:end="69:26">(<expr pos:start="69:13" pos:end="69:25"><operator pos:start="69:13" pos:end="69:13">!</operator><name pos:start="69:14" pos:end="69:25"><name pos:start="69:14" pos:end="69:16">thp</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:25">version</name></name></expr>)</condition><block type="pseudo" pos:start="70:13" pos:end="70:39"><block_content pos:start="70:13" pos:end="70:39">
            <return pos:start="70:13" pos:end="70:39">return <expr pos:start="70:20" pos:end="70:38"><name pos:start="70:20" pos:end="70:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>
        <break pos:start="71:9" pos:end="71:14">break;</break>
    <default pos:start="72:5" pos:end="72:12">default:</default>
        <expr_stmt pos:start="73:9" pos:end="73:81"><expr pos:start="73:9" pos:end="73:80"><call pos:start="73:9" pos:end="73:80"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:80">(<argument pos:start="73:16" pos:end="73:16"><expr pos:start="73:16" pos:end="73:16"><name pos:start="73:16" pos:end="73:16">s</name></expr></argument>, <argument pos:start="73:19" pos:end="73:30"><expr pos:start="73:19" pos:end="73:30"><name pos:start="73:19" pos:end="73:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:33" pos:end="73:58"><expr pos:start="73:33" pos:end="73:58"><literal type="string" pos:start="73:33" pos:end="73:58">"Unknown header type %X\n"</literal></expr></argument>, <argument pos:start="73:61" pos:end="73:79"><expr pos:start="73:61" pos:end="73:79"><name pos:start="73:61" pos:end="73:79"><name pos:start="73:61" pos:end="73:62">os</name><operator pos:start="73:63" pos:end="73:64">-&gt;</operator><name pos:start="73:65" pos:end="73:67">buf</name><index pos:start="73:68" pos:end="73:79">[<expr pos:start="73:69" pos:end="73:78"><name pos:start="73:69" pos:end="73:78"><name pos:start="73:69" pos:end="73:70">os</name><operator pos:start="73:71" pos:end="73:72">-&gt;</operator><name pos:start="73:73" pos:end="73:78">pstart</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="74:9" pos:end="74:35">return <expr pos:start="74:16" pos:end="74:34"><name pos:start="74:16" pos:end="74:34">AVERROR_INVALIDDATA</name></expr>;</return>
    </block_content>}</block></switch>
    <if_stmt pos:start="76:5" pos:end="80:5"><if pos:start="76:5" pos:end="80:5">if <condition pos:start="76:8" pos:end="77:68">(<expr pos:start="76:9" pos:end="77:67"><operator pos:start="76:9" pos:end="76:9">(</operator><name pos:start="76:10" pos:end="76:12">err</name> <operator pos:start="76:14" pos:end="76:14">=</operator> <call pos:start="76:16" pos:end="77:62"><name pos:start="76:16" pos:end="76:26">av_reallocp</name><argument_list pos:start="76:27" pos:end="77:62">(<argument pos:start="76:28" pos:end="76:48"><expr pos:start="76:28" pos:end="76:48"><operator pos:start="76:28" pos:end="76:28">&amp;</operator><name pos:start="76:29" pos:end="76:48"><name pos:start="76:29" pos:end="76:30">st</name><operator pos:start="76:31" pos:end="76:32">-&gt;</operator><name pos:start="76:33" pos:end="76:37">codec</name><operator pos:start="76:38" pos:end="76:39">-&gt;</operator><name pos:start="76:40" pos:end="76:48">extradata</name></name></expr></argument>,
                           <argument pos:start="77:28" pos:end="77:61"><expr pos:start="77:28" pos:end="77:61"><name pos:start="77:28" pos:end="77:30">cds</name> <operator pos:start="77:32" pos:end="77:32">+</operator> <name pos:start="77:34" pos:end="77:61">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="77:63" pos:end="77:63">)</operator> <operator pos:start="77:65" pos:end="77:65">&lt;</operator> <literal type="number" pos:start="77:67" pos:end="77:67">0</literal></expr>)</condition> <block pos:start="77:70" pos:end="80:5">{<block_content pos:start="78:9" pos:end="79:19">
        <expr_stmt pos:start="78:9" pos:end="78:38"><expr pos:start="78:9" pos:end="78:37"><name pos:start="78:9" pos:end="78:33"><name pos:start="78:9" pos:end="78:10">st</name><operator pos:start="78:11" pos:end="78:12">-&gt;</operator><name pos:start="78:13" pos:end="78:17">codec</name><operator pos:start="78:18" pos:end="78:19">-&gt;</operator><name pos:start="78:20" pos:end="78:33">extradata_size</name></name> <operator pos:start="78:35" pos:end="78:35">=</operator> <literal type="number" pos:start="78:37" pos:end="78:37">0</literal></expr>;</expr_stmt>
        <return pos:start="79:9" pos:end="79:19">return <expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">err</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="81:5" pos:end="81:62"><expr pos:start="81:5" pos:end="81:61"><name pos:start="81:5" pos:end="81:7">cdp</name>    <operator pos:start="81:12" pos:end="81:12">=</operator> <name pos:start="81:14" pos:end="81:33"><name pos:start="81:14" pos:end="81:15">st</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:22">codec</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:33">extradata</name></name> <operator pos:start="81:35" pos:end="81:35">+</operator> <name pos:start="81:37" pos:end="81:61"><name pos:start="81:37" pos:end="81:38">st</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:45">codec</name><operator pos:start="81:46" pos:end="81:47">-&gt;</operator><name pos:start="81:48" pos:end="81:61">extradata_size</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="82:5" pos:end="82:28"><expr pos:start="82:5" pos:end="82:27"><operator pos:start="82:5" pos:end="82:5">*</operator><name pos:start="82:6" pos:end="82:8">cdp</name><operator pos:start="82:9" pos:end="82:10">++</operator> <operator pos:start="82:12" pos:end="82:12">=</operator> <name pos:start="82:14" pos:end="82:22"><name pos:start="82:14" pos:end="82:15">os</name><operator pos:start="82:16" pos:end="82:17">-&gt;</operator><name pos:start="82:18" pos:end="82:22">psize</name></name> <operator pos:start="82:24" pos:end="82:25">&gt;&gt;</operator> <literal type="number" pos:start="82:27" pos:end="82:27">8</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="83:5" pos:end="83:30"><expr pos:start="83:5" pos:end="83:29"><operator pos:start="83:5" pos:end="83:5">*</operator><name pos:start="83:6" pos:end="83:8">cdp</name><operator pos:start="83:9" pos:end="83:10">++</operator> <operator pos:start="83:12" pos:end="83:12">=</operator> <name pos:start="83:14" pos:end="83:22"><name pos:start="83:14" pos:end="83:15">os</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:22">psize</name></name> <operator pos:start="83:24" pos:end="83:24">&amp;</operator> <literal type="number" pos:start="83:26" pos:end="83:29">0xff</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="84:5" pos:end="84:49"><expr pos:start="84:5" pos:end="84:48"><call pos:start="84:5" pos:end="84:48"><name pos:start="84:5" pos:end="84:10">memcpy</name><argument_list pos:start="84:11" pos:end="84:48">(<argument pos:start="84:12" pos:end="84:14"><expr pos:start="84:12" pos:end="84:14"><name pos:start="84:12" pos:end="84:14">cdp</name></expr></argument>, <argument pos:start="84:17" pos:end="84:36"><expr pos:start="84:17" pos:end="84:36"><name pos:start="84:17" pos:end="84:23"><name pos:start="84:17" pos:end="84:18">os</name><operator pos:start="84:19" pos:end="84:20">-&gt;</operator><name pos:start="84:21" pos:end="84:23">buf</name></name> <operator pos:start="84:25" pos:end="84:25">+</operator> <name pos:start="84:27" pos:end="84:36"><name pos:start="84:27" pos:end="84:28">os</name><operator pos:start="84:29" pos:end="84:30">-&gt;</operator><name pos:start="84:31" pos:end="84:36">pstart</name></name></expr></argument>, <argument pos:start="84:39" pos:end="84:47"><expr pos:start="84:39" pos:end="84:47"><name pos:start="84:39" pos:end="84:47"><name pos:start="84:39" pos:end="84:40">os</name><operator pos:start="84:41" pos:end="84:42">-&gt;</operator><name pos:start="84:43" pos:end="84:47">psize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="85:5" pos:end="85:36"><expr pos:start="85:5" pos:end="85:35"><name pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:6">st</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:13">codec</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:29">extradata_size</name></name> <operator pos:start="85:31" pos:end="85:31">=</operator> <name pos:start="85:33" pos:end="85:35">cds</name></expr>;</expr_stmt>
    <return pos:start="86:5" pos:end="86:13">return <expr pos:start="86:12" pos:end="86:12"><literal type="number" pos:start="86:12" pos:end="86:12">1</literal></expr>;</return>
</block_content>}</block></function></unit>
