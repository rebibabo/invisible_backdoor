<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5612.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:35">xen_invalidate_map_cache_entry</name><parameter_list pos:start="1:36" pos:end="1:52">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:45"><name pos:start="1:37" pos:end="1:43">uint8_t</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">buffer</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:18">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MapCacheEntry</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:24">entry</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">NULL</name></expr></init></decl>, <decl pos:start="5:34" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:40">pentry</name> <init pos:start="5:42" pos:end="5:47">= <expr pos:start="5:44" pos:end="5:47"><name pos:start="5:44" pos:end="5:47">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">MapCacheRev</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:25">reventry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22">target_phys_addr_t</name></type> <name pos:start="9:24" pos:end="9:34">paddr_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22">target_phys_addr_t</name></type> <name pos:start="11:24" pos:end="11:27">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">found</name> <init pos:start="13:15" pos:end="13:17">= <expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:47">(<expr pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:16">mapcache</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:36">last_address_vaddr</name></name> <operator pos:start="17:38" pos:end="17:39">==</operator> <name pos:start="17:41" pos:end="17:46">buffer</name></expr>)</condition> <block pos:start="17:49" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:42">

        <expr_stmt pos:start="19:9" pos:end="19:42"><expr pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:16">mapcache</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:36">last_address_index</name></name> <operator pos:start="19:38" pos:end="19:38">=</operator> <operator pos:start="19:40" pos:end="19:40">-</operator><literal type="number" pos:start="19:41" pos:end="19:41">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="25:5" pos:end="25:61"><name pos:start="25:5" pos:end="25:18">QTAILQ_FOREACH</name><argument_list pos:start="25:19" pos:end="25:61">(<argument pos:start="25:20" pos:end="25:27">reventry</argument>, <argument pos:start="25:30" pos:end="25:54">&amp;mapcache-&gt;locked_entries</argument>, <argument pos:start="25:57" pos:end="25:60">next</argument>)</argument_list></macro> <block pos:start="25:63" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:9">

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="27:42">(<expr pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:20">reventry</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:31">vaddr_req</name></name> <operator pos:start="27:33" pos:end="27:34">==</operator> <name pos:start="27:36" pos:end="27:41">buffer</name></expr>)</condition> <block pos:start="27:44" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:18">

            <expr_stmt pos:start="29:13" pos:end="29:48"><expr pos:start="29:13" pos:end="29:47"><name pos:start="29:13" pos:end="29:23">paddr_index</name> <operator pos:start="29:25" pos:end="29:25">=</operator> <name pos:start="29:27" pos:end="29:47"><name pos:start="29:27" pos:end="29:34">reventry</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:47">paddr_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:34"><expr pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:16">size</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:33"><name pos:start="31:20" pos:end="31:27">reventry</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:33">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:22"><expr pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:17">found</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="53:5">if <condition pos:start="41:8" pos:end="41:15">(<expr pos:start="41:9" pos:end="41:14"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:14">found</name></expr>)</condition> <block pos:start="41:17" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:15">

        <expr_stmt pos:start="43:9" pos:end="43:61"><expr pos:start="43:9" pos:end="43:60"><call pos:start="43:9" pos:end="43:60"><name pos:start="43:9" pos:end="43:15">DPRINTF</name><argument_list pos:start="43:16" pos:end="43:60">(<argument pos:start="43:17" pos:end="43:41"><expr pos:start="43:17" pos:end="43:41"><literal type="string" pos:start="43:17" pos:end="43:41">"%s, could not find %p\n"</literal></expr></argument>, <argument pos:start="43:44" pos:end="43:51"><expr pos:start="43:44" pos:end="43:51"><name pos:start="43:44" pos:end="43:51">__func__</name></expr></argument>, <argument pos:start="43:54" pos:end="43:59"><expr pos:start="43:54" pos:end="43:59"><name pos:start="43:54" pos:end="43:59">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <macro pos:start="45:9" pos:end="45:65"><name pos:start="45:9" pos:end="45:22">QTAILQ_FOREACH</name><argument_list pos:start="45:23" pos:end="45:65">(<argument pos:start="45:24" pos:end="45:31">reventry</argument>, <argument pos:start="45:34" pos:end="45:58">&amp;mapcache-&gt;locked_entries</argument>, <argument pos:start="45:61" pos:end="45:64">next</argument>)</argument_list></macro> <block pos:start="45:67" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:106">

            <expr_stmt pos:start="47:13" pos:end="47:106"><expr pos:start="47:13" pos:end="47:105"><call pos:start="47:13" pos:end="47:105"><name pos:start="47:13" pos:end="47:19">DPRINTF</name><argument_list pos:start="47:20" pos:end="47:105">(<argument pos:start="47:21" pos:end="47:60"><expr pos:start="47:21" pos:end="47:60"><literal type="string" pos:start="47:21" pos:end="47:25">"   "</literal><name pos:start="47:26" pos:end="47:39">TARGET_FMT_plx</name><literal type="string" pos:start="47:40" pos:end="47:60">" -&gt; %p is present\n"</literal></expr></argument>, <argument pos:start="47:63" pos:end="47:83"><expr pos:start="47:63" pos:end="47:83"><name pos:start="47:63" pos:end="47:83"><name pos:start="47:63" pos:end="47:70">reventry</name><operator pos:start="47:71" pos:end="47:72">-&gt;</operator><name pos:start="47:73" pos:end="47:83">paddr_index</name></name></expr></argument>, <argument pos:start="47:86" pos:end="47:104"><expr pos:start="47:86" pos:end="47:104"><name pos:start="47:86" pos:end="47:104"><name pos:start="47:86" pos:end="47:93">reventry</name><operator pos:start="47:94" pos:end="47:95">-&gt;</operator><name pos:start="47:96" pos:end="47:104">vaddr_req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <return pos:start="51:9" pos:end="51:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:61"><expr pos:start="55:5" pos:end="55:60"><call pos:start="55:5" pos:end="55:60"><name pos:start="55:5" pos:end="55:17">QTAILQ_REMOVE</name><argument_list pos:start="55:18" pos:end="55:60">(<argument pos:start="55:19" pos:end="55:43"><expr pos:start="55:19" pos:end="55:43"><operator pos:start="55:19" pos:end="55:19">&amp;</operator><name pos:start="55:20" pos:end="55:43"><name pos:start="55:20" pos:end="55:27">mapcache</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:43">locked_entries</name></name></expr></argument>, <argument pos:start="55:46" pos:end="55:53"><expr pos:start="55:46" pos:end="55:53"><name pos:start="55:46" pos:end="55:53">reventry</name></expr></argument>, <argument pos:start="55:56" pos:end="55:59"><expr pos:start="55:56" pos:end="55:59"><name pos:start="55:56" pos:end="55:59">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:21"><expr pos:start="57:5" pos:end="57:20"><call pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:10">g_free</name><argument_list pos:start="57:11" pos:end="57:20">(<argument pos:start="57:12" pos:end="57:19"><expr pos:start="57:12" pos:end="57:19"><name pos:start="57:12" pos:end="57:19">reventry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:65"><expr pos:start="61:5" pos:end="61:64"><name pos:start="61:5" pos:end="61:9">entry</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <operator pos:start="61:13" pos:end="61:13">&amp;</operator><name pos:start="61:14" pos:end="61:64"><name pos:start="61:14" pos:end="61:21">mapcache</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:28">entry</name><index pos:start="61:29" pos:end="61:64">[<expr pos:start="61:30" pos:end="61:63"><name pos:start="61:30" pos:end="61:40">paddr_index</name> <operator pos:start="61:42" pos:end="61:42">%</operator> <name pos:start="61:44" pos:end="61:63"><name pos:start="61:44" pos:end="61:51">mapcache</name><operator pos:start="61:52" pos:end="61:53">-&gt;</operator><name pos:start="61:54" pos:end="61:63">nr_buckets</name></name></expr>]</index></name></expr>;</expr_stmt>

    <while pos:start="63:5" pos:end="69:5">while <condition pos:start="63:11" pos:end="63:79">(<expr pos:start="63:12" pos:end="63:78"><name pos:start="63:12" pos:end="63:16">entry</name> <operator pos:start="63:18" pos:end="63:19">&amp;&amp;</operator> <operator pos:start="63:21" pos:end="63:21">(</operator><name pos:start="63:22" pos:end="63:39"><name pos:start="63:22" pos:end="63:26">entry</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:39">paddr_index</name></name> <operator pos:start="63:41" pos:end="63:42">!=</operator> <name pos:start="63:44" pos:end="63:54">paddr_index</name> <operator pos:start="63:56" pos:end="63:57">||</operator> <name pos:start="63:59" pos:end="63:69"><name pos:start="63:59" pos:end="63:63">entry</name><operator pos:start="63:64" pos:end="63:65">-&gt;</operator><name pos:start="63:66" pos:end="63:69">size</name></name> <operator pos:start="63:71" pos:end="63:72">!=</operator> <name pos:start="63:74" pos:end="63:77">size</name><operator pos:start="63:78" pos:end="63:78">)</operator></expr>)</condition> <block pos:start="63:81" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:28">

        <expr_stmt pos:start="65:9" pos:end="65:23"><expr pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:14">pentry</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <name pos:start="65:18" pos:end="65:22">entry</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:28"><expr pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:13">entry</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <name pos:start="67:17" pos:end="67:27"><name pos:start="67:17" pos:end="67:21">entry</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:27">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:15">(<expr pos:start="71:9" pos:end="71:14"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:14">entry</name></expr>)</condition> <block pos:start="71:17" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:15">

        <expr_stmt pos:start="73:9" pos:end="73:85"><expr pos:start="73:9" pos:end="73:84"><call pos:start="73:9" pos:end="73:84"><name pos:start="73:9" pos:end="73:15">DPRINTF</name><argument_list pos:start="73:16" pos:end="73:84">(<argument pos:start="73:17" pos:end="73:75"><expr pos:start="73:17" pos:end="73:75"><literal type="string" pos:start="73:17" pos:end="73:75">"Trying to unmap address %p that is not in the mapcache!\n"</literal></expr></argument>, <argument pos:start="73:78" pos:end="73:83"><expr pos:start="73:78" pos:end="73:83"><name pos:start="73:78" pos:end="73:83">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:18"><expr pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:15"><name pos:start="79:5" pos:end="79:9">entry</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:15">lock</name></name><operator pos:start="79:16" pos:end="79:17">--</operator></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="85:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:42">(<expr pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:13">entry</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:19">lock</name></name> <operator pos:start="81:21" pos:end="81:21">&gt;</operator> <literal type="number" pos:start="81:23" pos:end="81:23">0</literal> <operator pos:start="81:25" pos:end="81:26">||</operator> <name pos:start="81:28" pos:end="81:33">pentry</name> <operator pos:start="81:35" pos:end="81:36">==</operator> <name pos:start="81:38" pos:end="81:41">NULL</name></expr>)</condition> <block pos:start="81:44" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:15">

        <return pos:start="83:9" pos:end="83:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:31"><expr pos:start="89:5" pos:end="89:30"><name pos:start="89:5" pos:end="89:16"><name pos:start="89:5" pos:end="89:10">pentry</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:16">next</name></name> <operator pos:start="89:18" pos:end="89:18">=</operator> <name pos:start="89:20" pos:end="89:30"><name pos:start="89:20" pos:end="89:24">entry</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:30">next</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:52">(<expr pos:start="91:9" pos:end="91:51"><call pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:14">munmap</name><argument_list pos:start="91:15" pos:end="91:46">(<argument pos:start="91:16" pos:end="91:32"><expr pos:start="91:16" pos:end="91:32"><name pos:start="91:16" pos:end="91:32"><name pos:start="91:16" pos:end="91:20">entry</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:32">vaddr_base</name></name></expr></argument>, <argument pos:start="91:35" pos:end="91:45"><expr pos:start="91:35" pos:end="91:45"><name pos:start="91:35" pos:end="91:45"><name pos:start="91:35" pos:end="91:39">entry</name><operator pos:start="91:40" pos:end="91:41">-&gt;</operator><name pos:start="91:42" pos:end="91:45">size</name></name></expr></argument>)</argument_list></call> <operator pos:start="91:48" pos:end="91:49">!=</operator> <literal type="number" pos:start="91:51" pos:end="91:51">0</literal></expr>)</condition> <block pos:start="91:54" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:17">

        <expr_stmt pos:start="93:9" pos:end="93:30"><expr pos:start="93:9" pos:end="93:29"><call pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:14">perror</name><argument_list pos:start="93:15" pos:end="93:29">(<argument pos:start="93:16" pos:end="93:28"><expr pos:start="93:16" pos:end="93:28"><literal type="string" pos:start="93:16" pos:end="93:28">"unmap fails"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:17"><expr pos:start="95:9" pos:end="95:16"><call pos:start="95:9" pos:end="95:16"><name pos:start="95:9" pos:end="95:12">exit</name><argument_list pos:start="95:13" pos:end="95:16">(<argument pos:start="95:14" pos:end="95:15"><expr pos:start="95:14" pos:end="95:15"><operator pos:start="95:14" pos:end="95:14">-</operator><literal type="number" pos:start="95:15" pos:end="95:15">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:33"><expr pos:start="99:5" pos:end="99:32"><call pos:start="99:5" pos:end="99:32"><name pos:start="99:5" pos:end="99:10">g_free</name><argument_list pos:start="99:11" pos:end="99:32">(<argument pos:start="99:12" pos:end="99:31"><expr pos:start="99:12" pos:end="99:31"><name pos:start="99:12" pos:end="99:31"><name pos:start="99:12" pos:end="99:16">entry</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:31">valid_mapping</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:18"><expr pos:start="101:5" pos:end="101:17"><call pos:start="101:5" pos:end="101:17"><name pos:start="101:5" pos:end="101:10">g_free</name><argument_list pos:start="101:11" pos:end="101:17">(<argument pos:start="101:12" pos:end="101:16"><expr pos:start="101:12" pos:end="101:16"><name pos:start="101:12" pos:end="101:16">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
