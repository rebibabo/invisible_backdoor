<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/193.c" pos:tabs="8"><function pos:start="1:1" pos:end="50:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">tlb_fill</name><parameter_list pos:start="1:14" pos:end="3:28">(<parameter pos:start="1:15" pos:end="1:28"><decl pos:start="1:15" pos:end="1:28"><type pos:start="1:15" pos:end="1:28"><name pos:start="1:15" pos:end="1:22">CPUState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:28">env1</name></decl></parameter>, <parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:42">target_ulong</name></type> <name pos:start="1:44" pos:end="1:47">addr</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:61">is_write</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:74"><decl pos:start="1:64" pos:end="1:74"><type pos:start="1:64" pos:end="1:74"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:74">mmu_idx</name></decl></parameter>,

              <parameter pos:start="3:15" pos:end="3:27"><decl pos:start="3:15" pos:end="3:27"><type pos:start="3:15" pos:end="3:27"><name pos:start="3:15" pos:end="3:18">void</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:27">retaddr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="50:1">{<block_content pos:start="7:5" pos:end="48:20">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">TranslationBlock</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">tb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">CPUState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:23">saved_env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">long</name></type> <name pos:start="11:19" pos:end="11:20">pc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:13">saved_env</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:19">env</name></expr>;</expr_stmt>


    <expr_stmt pos:start="20:5" pos:end="20:65"><expr pos:start="20:5" pos:end="20:64"><name pos:start="20:5" pos:end="20:7">ret</name> <operator pos:start="20:9" pos:end="20:9">=</operator> <call pos:start="20:11" pos:end="20:64"><name pos:start="20:11" pos:end="20:34">cpu_arm_handle_mmu_fault</name><argument_list pos:start="20:35" pos:end="20:64">(<argument pos:start="20:36" pos:end="20:38"><expr pos:start="20:36" pos:end="20:38"><name pos:start="20:36" pos:end="20:38">env</name></expr></argument>, <argument pos:start="20:41" pos:end="20:44"><expr pos:start="20:41" pos:end="20:44"><name pos:start="20:41" pos:end="20:44">addr</name></expr></argument>, <argument pos:start="20:47" pos:end="20:54"><expr pos:start="20:47" pos:end="20:54"><name pos:start="20:47" pos:end="20:54">is_write</name></expr></argument>, <argument pos:start="20:57" pos:end="20:63"><expr pos:start="20:57" pos:end="20:63"><name pos:start="20:57" pos:end="20:63">mmu_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="22:5" pos:end="46:5"><if pos:start="22:5" pos:end="46:5">if <condition pos:start="22:8" pos:end="22:22">(<expr pos:start="22:9" pos:end="22:21"><call pos:start="22:9" pos:end="22:21"><name pos:start="22:9" pos:end="22:16">unlikely</name><argument_list pos:start="22:17" pos:end="22:21">(<argument pos:start="22:18" pos:end="22:20"><expr pos:start="22:18" pos:end="22:20"><name pos:start="22:18" pos:end="22:20">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="22:24" pos:end="46:5">{<block_content pos:start="24:9" pos:end="44:46">

        <if_stmt pos:start="24:9" pos:end="42:9"><if pos:start="24:9" pos:end="42:9">if <condition pos:start="24:12" pos:end="24:20">(<expr pos:start="24:13" pos:end="24:19"><name pos:start="24:13" pos:end="24:19">retaddr</name></expr>)</condition> <block pos:start="24:22" pos:end="42:9">{<block_content pos:start="28:13" pos:end="40:13">

            <comment type="block" pos:start="26:13" pos:end="26:46">/* now we have a real cpu fault */</comment>

            <expr_stmt pos:start="28:13" pos:end="28:40"><expr pos:start="28:13" pos:end="28:39"><name pos:start="28:13" pos:end="28:14">pc</name> <operator pos:start="28:16" pos:end="28:16">=</operator> <operator pos:start="28:18" pos:end="28:18">(</operator><name pos:start="28:19" pos:end="28:26">unsigned</name> <name pos:start="28:28" pos:end="28:31">long</name><operator pos:start="28:32" pos:end="28:32">)</operator><name pos:start="28:33" pos:end="28:39">retaddr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="30:13" pos:end="30:32"><expr pos:start="30:13" pos:end="30:31"><name pos:start="30:13" pos:end="30:14">tb</name> <operator pos:start="30:16" pos:end="30:16">=</operator> <call pos:start="30:18" pos:end="30:31"><name pos:start="30:18" pos:end="30:27">tb_find_pc</name><argument_list pos:start="30:28" pos:end="30:31">(<argument pos:start="30:29" pos:end="30:30"><expr pos:start="30:29" pos:end="30:30"><name pos:start="30:29" pos:end="30:30">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="32:13" pos:end="40:13"><if pos:start="32:13" pos:end="40:13">if <condition pos:start="32:16" pos:end="32:19">(<expr pos:start="32:17" pos:end="32:18"><name pos:start="32:17" pos:end="32:18">tb</name></expr>)</condition> <block pos:start="32:21" pos:end="40:13">{<block_content pos:start="38:17" pos:end="38:47">

                <comment type="block" pos:start="34:17" pos:end="36:41">/* the PC is inside the translated code. It means that we have

                   a virtual CPU fault */</comment>

                <expr_stmt pos:start="38:17" pos:end="38:47"><expr pos:start="38:17" pos:end="38:46"><call pos:start="38:17" pos:end="38:46"><name pos:start="38:17" pos:end="38:33">cpu_restore_state</name><argument_list pos:start="38:34" pos:end="38:46">(<argument pos:start="38:35" pos:end="38:36"><expr pos:start="38:35" pos:end="38:36"><name pos:start="38:35" pos:end="38:36">tb</name></expr></argument>, <argument pos:start="38:39" pos:end="38:41"><expr pos:start="38:39" pos:end="38:41"><name pos:start="38:39" pos:end="38:41">env</name></expr></argument>, <argument pos:start="38:44" pos:end="38:45"><expr pos:start="38:44" pos:end="38:45"><name pos:start="38:44" pos:end="38:45">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="44:9" pos:end="44:46"><expr pos:start="44:9" pos:end="44:45"><call pos:start="44:9" pos:end="44:45"><name pos:start="44:9" pos:end="44:23">raise_exception</name><argument_list pos:start="44:24" pos:end="44:45">(<argument pos:start="44:25" pos:end="44:44"><expr pos:start="44:25" pos:end="44:44"><name pos:start="44:25" pos:end="44:44"><name pos:start="44:25" pos:end="44:27">env</name><operator pos:start="44:28" pos:end="44:29">-&gt;</operator><name pos:start="44:30" pos:end="44:44">exception_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="48:5" pos:end="48:20"><expr pos:start="48:5" pos:end="48:19"><name pos:start="48:5" pos:end="48:7">env</name> <operator pos:start="48:9" pos:end="48:9">=</operator> <name pos:start="48:11" pos:end="48:19">saved_env</name></expr>;</expr_stmt>

</block_content>}</block></function></unit>
