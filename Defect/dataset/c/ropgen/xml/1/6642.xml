<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6642.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:17">final</name><parameter_list pos:start="1:18" pos:end="3:51">(<parameter pos:start="1:19" pos:end="1:33"><decl pos:start="1:19" pos:end="1:33"><type pos:start="1:19" pos:end="1:33"><specifier pos:start="1:19" pos:end="1:23">const</specifier> <name pos:start="1:25" pos:end="1:29">short</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:33">i1</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:46">short</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">i2</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:27"><decl pos:start="3:19" pos:end="3:27"><type pos:start="3:19" pos:end="3:27"><name pos:start="3:19" pos:end="3:22">void</name> <modifier pos:start="3:24" pos:end="3:24">*</modifier></type><name pos:start="3:25" pos:end="3:27">out</name></decl></parameter>, <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:41">statbuf</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:50"><decl pos:start="3:44" pos:end="3:50"><type pos:start="3:44" pos:end="3:50"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:50">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:35">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:18">short</name> <name pos:start="9:20" pos:end="9:22">int</name></type> <name pos:start="9:24" pos:end="9:31"><name pos:start="9:24" pos:end="9:27">work</name><index pos:start="9:28" pos:end="9:31">[<expr pos:start="9:29" pos:end="9:30"><literal type="number" pos:start="9:29" pos:end="9:30">50</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">short</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">ptr</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">work</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><call pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:10">memcpy</name><argument_list pos:start="15:11" pos:end="15:28">(<argument pos:start="15:12" pos:end="15:15"><expr pos:start="15:12" pos:end="15:15"><name pos:start="15:12" pos:end="15:15">work</name></expr></argument>, <argument pos:start="15:18" pos:end="15:24"><expr pos:start="15:18" pos:end="15:24"><name pos:start="15:18" pos:end="15:24">statbuf</name></expr></argument>,<argument pos:start="15:26" pos:end="15:27"><expr pos:start="15:26" pos:end="15:27"><literal type="number" pos:start="15:26" pos:end="15:27">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><call pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:10">memcpy</name><argument_list pos:start="17:11" pos:end="17:34">(<argument pos:start="17:12" pos:end="17:20"><expr pos:start="17:12" pos:end="17:20"><name pos:start="17:12" pos:end="17:15">work</name> <operator pos:start="17:17" pos:end="17:17">+</operator> <literal type="number" pos:start="17:19" pos:end="17:20">10</literal></expr></argument>, <argument pos:start="17:23" pos:end="17:24"><expr pos:start="17:23" pos:end="17:24"><name pos:start="17:23" pos:end="17:24">i2</name></expr></argument>, <argument pos:start="17:27" pos:end="17:33"><expr pos:start="17:27" pos:end="17:33"><name pos:start="17:27" pos:end="17:29">len</name> <operator pos:start="17:31" pos:end="17:31">*</operator> <literal type="number" pos:start="17:33" pos:end="17:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="53:5">for <control pos:start="21:9" pos:end="21:25">(<init pos:start="21:10" pos:end="21:13"><expr pos:start="21:10" pos:end="21:12"><name pos:start="21:10" pos:end="21:10">i</name><operator pos:start="21:11" pos:end="21:11">=</operator><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</init> <condition pos:start="21:15" pos:end="21:20"><expr pos:start="21:15" pos:end="21:19"><name pos:start="21:15" pos:end="21:15">i</name><operator pos:start="21:16" pos:end="21:16">&lt;</operator><name pos:start="21:17" pos:end="21:19">len</name></expr>;</condition> <incr pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:22">i</name><operator pos:start="21:23" pos:end="21:24">++</operator></expr></incr>)</control> <block pos:start="21:27" pos:end="53:5">{<block_content pos:start="23:9" pos:end="51:14">

        <decl_stmt pos:start="23:9" pos:end="23:20"><decl pos:start="23:9" pos:end="23:19"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:15">sum</name> <init pos:start="23:17" pos:end="23:19">= <expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="27:9" pos:end="29:36">for<control pos:start="27:12" pos:end="27:27">(<init pos:start="27:13" pos:end="27:16"><expr pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:13">x</name><operator pos:start="27:14" pos:end="27:14">=</operator><literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>;</init> <condition pos:start="27:18" pos:end="27:22"><expr pos:start="27:18" pos:end="27:21"><name pos:start="27:18" pos:end="27:18">x</name><operator pos:start="27:19" pos:end="27:19">&lt;</operator><literal type="number" pos:start="27:20" pos:end="27:21">10</literal></expr>;</condition> <incr pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:24">x</name><operator pos:start="27:25" pos:end="27:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:13" pos:end="29:36"><block_content pos:start="29:13" pos:end="29:36">

            <expr_stmt pos:start="29:13" pos:end="29:36"><expr pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:15">sum</name> <operator pos:start="29:17" pos:end="29:18">+=</operator> <name pos:start="29:20" pos:end="29:26"><name pos:start="29:20" pos:end="29:21">i1</name><index pos:start="29:22" pos:end="29:26">[<expr pos:start="29:23" pos:end="29:25"><literal type="number" pos:start="29:23" pos:end="29:24">9</literal><operator pos:start="29:24" pos:end="29:24">-</operator><name pos:start="29:25" pos:end="29:25">x</name></expr>]</index></name> <operator pos:start="29:28" pos:end="29:28">*</operator> <name pos:start="29:30" pos:end="29:35"><name pos:start="29:30" pos:end="29:32">ptr</name><index pos:start="29:33" pos:end="29:35">[<expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">x</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="33:9" pos:end="33:19"><expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:11">sum</name> <operator pos:start="33:13" pos:end="33:15">&gt;&gt;=</operator> <literal type="number" pos:start="33:17" pos:end="33:18">12</literal></expr>;</expr_stmt>



        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="45:9">if <condition pos:start="37:12" pos:end="37:60">(<expr pos:start="37:13" pos:end="37:59"><name pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">ptr</name><index pos:start="37:16" pos:end="37:19">[<expr pos:start="37:17" pos:end="37:18"><literal type="number" pos:start="37:17" pos:end="37:18">10</literal></expr>]</index></name> <operator pos:start="37:21" pos:end="37:21">-</operator> <name pos:start="37:23" pos:end="37:53"><name pos:start="37:23" pos:end="37:25">sum</name> <argument_list type="generic" pos:start="37:27" pos:end="37:53">&lt; <argument pos:start="37:29" pos:end="37:51"><expr pos:start="37:29" pos:end="37:51"><operator pos:start="37:29" pos:end="37:29">-</operator><literal type="number" pos:start="37:30" pos:end="37:34">32768</literal> <operator pos:start="37:36" pos:end="37:37">||</operator> <name pos:start="37:39" pos:end="37:45"><name pos:start="37:39" pos:end="37:41">ptr</name><index pos:start="37:42" pos:end="37:45">[<expr pos:start="37:43" pos:end="37:44"><literal type="number" pos:start="37:43" pos:end="37:44">10</literal></expr>]</index></name> <operator pos:start="37:47" pos:end="37:47">-</operator> <name pos:start="37:49" pos:end="37:51">sum</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="37:55" pos:end="37:59">32767</literal></expr>)</condition> <block pos:start="37:62" pos:end="45:9">{<block_content pos:start="39:13" pos:end="43:19">

            <expr_stmt pos:start="39:13" pos:end="39:36"><expr pos:start="39:13" pos:end="39:35"><call pos:start="39:13" pos:end="39:35"><name pos:start="39:13" pos:end="39:18">memset</name><argument_list pos:start="39:19" pos:end="39:35">(<argument pos:start="39:20" pos:end="39:22"><expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">out</name></expr></argument>, <argument pos:start="39:25" pos:end="39:25"><expr pos:start="39:25" pos:end="39:25"><literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr></argument>, <argument pos:start="39:28" pos:end="39:34"><expr pos:start="39:28" pos:end="39:34"><name pos:start="39:28" pos:end="39:30">len</name> <operator pos:start="39:32" pos:end="39:32">*</operator> <literal type="number" pos:start="39:34" pos:end="39:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:35"><expr pos:start="41:13" pos:end="41:34"><call pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:18">memset</name><argument_list pos:start="41:19" pos:end="41:34">(<argument pos:start="41:20" pos:end="41:26"><expr pos:start="41:20" pos:end="41:26"><name pos:start="41:20" pos:end="41:26">statbuf</name></expr></argument>, <argument pos:start="41:29" pos:end="41:29"><expr pos:start="41:29" pos:end="41:29"><literal type="number" pos:start="41:29" pos:end="41:29">0</literal></expr></argument>, <argument pos:start="41:32" pos:end="41:33"><expr pos:start="41:32" pos:end="41:33"><literal type="number" pos:start="41:32" pos:end="41:33">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:11">ptr</name><index pos:start="49:12" pos:end="49:15">[<expr pos:start="49:13" pos:end="49:14"><literal type="number" pos:start="49:13" pos:end="49:14">10</literal></expr>]</index></name> <operator pos:start="49:17" pos:end="49:18">-=</operator> <name pos:start="49:20" pos:end="49:22">sum</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:14"><expr pos:start="51:9" pos:end="51:13"><name pos:start="51:9" pos:end="51:11">ptr</name><operator pos:start="51:12" pos:end="51:13">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><call pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:10">memcpy</name><argument_list pos:start="57:11" pos:end="57:33">(<argument pos:start="57:12" pos:end="57:14"><expr pos:start="57:12" pos:end="57:14"><name pos:start="57:12" pos:end="57:14">out</name></expr></argument>, <argument pos:start="57:17" pos:end="57:23"><expr pos:start="57:17" pos:end="57:23"><name pos:start="57:17" pos:end="57:20">work</name><operator pos:start="57:21" pos:end="57:21">+</operator><literal type="number" pos:start="57:22" pos:end="57:23">10</literal></expr></argument>, <argument pos:start="57:26" pos:end="57:32"><expr pos:start="57:26" pos:end="57:32"><name pos:start="57:26" pos:end="57:28">len</name> <operator pos:start="57:30" pos:end="57:30">*</operator> <literal type="number" pos:start="57:32" pos:end="57:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:35"><expr pos:start="59:5" pos:end="59:34"><call pos:start="59:5" pos:end="59:34"><name pos:start="59:5" pos:end="59:10">memcpy</name><argument_list pos:start="59:11" pos:end="59:34">(<argument pos:start="59:12" pos:end="59:18"><expr pos:start="59:12" pos:end="59:18"><name pos:start="59:12" pos:end="59:18">statbuf</name></expr></argument>, <argument pos:start="59:21" pos:end="59:29"><expr pos:start="59:21" pos:end="59:29"><name pos:start="59:21" pos:end="59:24">work</name> <operator pos:start="59:26" pos:end="59:26">+</operator> <literal type="number" pos:start="59:28" pos:end="59:29">40</literal></expr></argument>, <argument pos:start="59:32" pos:end="59:33"><expr pos:start="59:32" pos:end="59:33"><literal type="number" pos:start="59:32" pos:end="59:33">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
