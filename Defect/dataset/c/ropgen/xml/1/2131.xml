<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2131.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:14">bdrv_open2</name><parameter_list pos:start="1:15" pos:end="2:32">(<parameter pos:start="1:16" pos:end="1:35"><decl pos:start="1:16" pos:end="1:35"><type pos:start="1:16" pos:end="1:35"><name pos:start="1:16" pos:end="1:31">BlockDriverState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">bs</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:47">char</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:57">filename</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">flags</name></decl></parameter>,
               <parameter pos:start="2:16" pos:end="2:31"><decl pos:start="2:16" pos:end="2:31"><type pos:start="2:16" pos:end="2:31"><name pos:start="2:16" pos:end="2:26">BlockDriver</name> <modifier pos:start="2:28" pos:end="2:28">*</modifier></type><name pos:start="2:29" pos:end="2:31">drv</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="4:5" pos:end="94:13">
    <decl_stmt pos:start="4:5" pos:end="4:24"><decl pos:start="4:5" pos:end="4:11"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:11">ret</name></decl>, <decl pos:start="4:14" pos:end="4:23"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:14" pos:end="4:23">open_flags</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:31"><name pos:start="5:10" pos:end="5:21">tmp_filename</name><index pos:start="5:22" pos:end="5:31">[<expr pos:start="5:23" pos:end="5:30"><name pos:start="5:23" pos:end="5:30">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:36"><decl pos:start="6:5" pos:end="6:35"><type pos:start="6:5" pos:end="6:8"><name pos:start="6:5" pos:end="6:8">char</name></type> <name pos:start="6:10" pos:end="6:35"><name pos:start="6:10" pos:end="6:25">backing_filename</name><index pos:start="6:26" pos:end="6:35">[<expr pos:start="6:27" pos:end="6:34"><name pos:start="6:27" pos:end="6:34">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:22"><expr pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:6">bs</name><operator pos:start="7:7" pos:end="7:8">-&gt;</operator><name pos:start="7:9" pos:end="7:17">read_only</name></name> <operator pos:start="7:19" pos:end="7:19">=</operator> <literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:25"><expr pos:start="8:5" pos:end="8:24"><name pos:start="8:5" pos:end="8:20"><name pos:start="8:5" pos:end="8:6">bs</name><operator pos:start="8:7" pos:end="8:8">-&gt;</operator><name pos:start="8:9" pos:end="8:20">is_temporary</name></name> <operator pos:start="8:22" pos:end="8:22">=</operator> <literal type="number" pos:start="8:24" pos:end="8:24">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:6">bs</name><operator pos:start="9:7" pos:end="9:8">-&gt;</operator><name pos:start="9:9" pos:end="9:17">encrypted</name></name> <operator pos:start="9:19" pos:end="9:19">=</operator> <literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="34:5"><if pos:start="10:5" pos:end="34:5">if <condition pos:start="10:8" pos:end="10:32">(<expr pos:start="10:9" pos:end="10:31"><name pos:start="10:9" pos:end="10:13">flags</name> <operator pos:start="10:15" pos:end="10:15">&amp;</operator> <name pos:start="10:17" pos:end="10:31">BDRV_O_SNAPSHOT</name></expr>)</condition> <block pos:start="10:34" pos:end="34:5">{<block_content pos:start="11:9" pos:end="33:29">
        <decl_stmt pos:start="11:9" pos:end="11:30"><decl pos:start="11:9" pos:end="11:29"><type pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:24">BlockDriverState</name> <modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:29">bs1</name></decl>;</decl_stmt>
        <decl_stmt pos:start="12:9" pos:end="12:27"><decl pos:start="12:9" pos:end="12:26"><type pos:start="12:9" pos:end="12:15"><name pos:start="12:9" pos:end="12:15">int64_t</name></type> <name pos:start="12:17" pos:end="12:26">total_size</name></decl>;</decl_stmt>
        <comment type="block" pos:start="13:9" pos:end="14:52">/* if snapshot, we create a temporary backing file and open it
           instead of opening 'filename' directly */</comment>
        <comment type="block" pos:start="15:9" pos:end="15:48">/* if there is a backing file, use it */</comment>
        <expr_stmt pos:start="16:9" pos:end="16:27"><expr pos:start="16:9" pos:end="16:26"><name pos:start="16:9" pos:end="16:11">bs1</name> <operator pos:start="16:13" pos:end="16:13">=</operator> <call pos:start="16:15" pos:end="16:26"><name pos:start="16:15" pos:end="16:22">bdrv_new</name><argument_list pos:start="16:23" pos:end="16:26">(<argument pos:start="16:24" pos:end="16:25"><expr pos:start="16:24" pos:end="16:25"><literal type="string" pos:start="16:24" pos:end="16:25">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="17:9" pos:end="19:9"><if pos:start="17:9" pos:end="19:9">if <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:16">bs1</name></expr>)</condition> <block pos:start="17:19" pos:end="19:9">{<block_content pos:start="18:13" pos:end="18:27">
            <return pos:start="18:13" pos:end="18:27">return <expr pos:start="18:20" pos:end="18:26"><operator pos:start="18:20" pos:end="18:20">-</operator><name pos:start="18:21" pos:end="18:26">ENOMEM</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="20:9" pos:end="23:9"><if pos:start="20:9" pos:end="23:9">if <condition pos:start="20:12" pos:end="20:44">(<expr pos:start="20:13" pos:end="20:43"><call pos:start="20:13" pos:end="20:39"><name pos:start="20:13" pos:end="20:21">bdrv_open</name><argument_list pos:start="20:22" pos:end="20:39">(<argument pos:start="20:23" pos:end="20:25"><expr pos:start="20:23" pos:end="20:25"><name pos:start="20:23" pos:end="20:25">bs1</name></expr></argument>, <argument pos:start="20:28" pos:end="20:35"><expr pos:start="20:28" pos:end="20:35"><name pos:start="20:28" pos:end="20:35">filename</name></expr></argument>, <argument pos:start="20:38" pos:end="20:38"><expr pos:start="20:38" pos:end="20:38"><literal type="number" pos:start="20:38" pos:end="20:38">0</literal></expr></argument>)</argument_list></call> <operator pos:start="20:41" pos:end="20:41">&lt;</operator> <literal type="number" pos:start="20:43" pos:end="20:43">0</literal></expr>)</condition> <block pos:start="20:46" pos:end="23:9">{<block_content pos:start="21:13" pos:end="22:22">
            <expr_stmt pos:start="21:13" pos:end="21:29"><expr pos:start="21:13" pos:end="21:28"><call pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:23">bdrv_delete</name><argument_list pos:start="21:24" pos:end="21:28">(<argument pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:27">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="22:13" pos:end="22:22">return <expr pos:start="22:20" pos:end="22:21"><operator pos:start="22:20" pos:end="22:20">-</operator><literal type="number" pos:start="22:21" pos:end="22:21">1</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:56"><expr pos:start="24:9" pos:end="24:55"><name pos:start="24:9" pos:end="24:18">total_size</name> <operator pos:start="24:20" pos:end="24:20">=</operator> <call pos:start="24:22" pos:end="24:40"><name pos:start="24:22" pos:end="24:35">bdrv_getlength</name><argument_list pos:start="24:36" pos:end="24:40">(<argument pos:start="24:37" pos:end="24:39"><expr pos:start="24:37" pos:end="24:39"><name pos:start="24:37" pos:end="24:39">bs1</name></expr></argument>)</argument_list></call> <operator pos:start="24:42" pos:end="24:43">&gt;&gt;</operator> <name pos:start="24:45" pos:end="24:55">SECTOR_BITS</name></expr>;</expr_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:25"><expr pos:start="25:9" pos:end="25:24"><call pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:19">bdrv_delete</name><argument_list pos:start="25:20" pos:end="25:24">(<argument pos:start="25:21" pos:end="25:23"><expr pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:23">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="26:9" pos:end="26:61"><expr pos:start="26:9" pos:end="26:60"><call pos:start="26:9" pos:end="26:60"><name pos:start="26:9" pos:end="26:24">get_tmp_filename</name><argument_list pos:start="26:25" pos:end="26:60">(<argument pos:start="26:26" pos:end="26:37"><expr pos:start="26:26" pos:end="26:37"><name pos:start="26:26" pos:end="26:37">tmp_filename</name></expr></argument>, <argument pos:start="26:40" pos:end="26:59"><expr pos:start="26:40" pos:end="26:59"><sizeof pos:start="26:40" pos:end="26:59">sizeof<argument_list pos:start="26:46" pos:end="26:59">(<argument pos:start="26:47" pos:end="26:58"><expr pos:start="26:47" pos:end="26:58"><name pos:start="26:47" pos:end="26:58">tmp_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:45"><expr pos:start="27:9" pos:end="27:44"><call pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:16">realpath</name><argument_list pos:start="27:17" pos:end="27:44">(<argument pos:start="27:18" pos:end="27:25"><expr pos:start="27:18" pos:end="27:25"><name pos:start="27:18" pos:end="27:25">filename</name></expr></argument>, <argument pos:start="27:28" pos:end="27:43"><expr pos:start="27:28" pos:end="27:43"><name pos:start="27:28" pos:end="27:43">backing_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="28:9" pos:end="31:9"><if pos:start="28:9" pos:end="31:9">if <condition pos:start="28:12" pos:end="29:61">(<expr pos:start="28:13" pos:end="29:60"><call pos:start="28:13" pos:end="29:56"><name pos:start="28:13" pos:end="28:23">bdrv_create</name><argument_list pos:start="28:24" pos:end="29:56">(<argument pos:start="28:25" pos:end="28:35"><expr pos:start="28:25" pos:end="28:35"><operator pos:start="28:25" pos:end="28:25">&amp;</operator><name pos:start="28:26" pos:end="28:35">bdrv_qcow2</name></expr></argument>, <argument pos:start="28:38" pos:end="28:49"><expr pos:start="28:38" pos:end="28:49"><name pos:start="28:38" pos:end="28:49">tmp_filename</name></expr></argument>,
                        <argument pos:start="29:25" pos:end="29:34"><expr pos:start="29:25" pos:end="29:34"><name pos:start="29:25" pos:end="29:34">total_size</name></expr></argument>, <argument pos:start="29:37" pos:end="29:52"><expr pos:start="29:37" pos:end="29:52"><name pos:start="29:37" pos:end="29:52">backing_filename</name></expr></argument>, <argument pos:start="29:55" pos:end="29:55"><expr pos:start="29:55" pos:end="29:55"><literal type="number" pos:start="29:55" pos:end="29:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="29:58" pos:end="29:58">&lt;</operator> <literal type="number" pos:start="29:60" pos:end="29:60">0</literal></expr>)</condition> <block pos:start="29:63" pos:end="31:9">{<block_content pos:start="30:13" pos:end="30:22">
            <return pos:start="30:13" pos:end="30:22">return <expr pos:start="30:20" pos:end="30:21"><operator pos:start="30:20" pos:end="30:20">-</operator><literal type="number" pos:start="30:21" pos:end="30:21">1</literal></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:32"><expr pos:start="32:9" pos:end="32:31"><name pos:start="32:9" pos:end="32:16">filename</name> <operator pos:start="32:18" pos:end="32:18">=</operator> <name pos:start="32:20" pos:end="32:31">tmp_filename</name></expr>;</expr_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:10">bs</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:24">is_temporary</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <literal type="number" pos:start="33:28" pos:end="33:28">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><call pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:11">pstrcpy</name><argument_list pos:start="35:12" pos:end="35:57">(<argument pos:start="35:13" pos:end="35:24"><expr pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:14">bs</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:24">filename</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:46"><expr pos:start="35:27" pos:end="35:46"><sizeof pos:start="35:27" pos:end="35:46">sizeof<argument_list pos:start="35:33" pos:end="35:46">(<argument pos:start="35:34" pos:end="35:45"><expr pos:start="35:34" pos:end="35:45"><name pos:start="35:34" pos:end="35:45"><name pos:start="35:34" pos:end="35:35">bs</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:45">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:49" pos:end="35:56"><expr pos:start="35:49" pos:end="35:56"><name pos:start="35:49" pos:end="35:56">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="36:5" pos:end="46:5"><if pos:start="36:5" pos:end="40:5">if <condition pos:start="36:8" pos:end="36:28">(<expr pos:start="36:9" pos:end="36:27"><name pos:start="36:9" pos:end="36:13">flags</name> <operator pos:start="36:15" pos:end="36:15">&amp;</operator> <name pos:start="36:17" pos:end="36:27">BDRV_O_FILE</name></expr>)</condition> <block pos:start="36:30" pos:end="40:5">{<block_content pos:start="37:9" pos:end="39:27">
        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:11">drv</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:37"><name pos:start="37:15" pos:end="37:27">find_protocol</name><argument_list pos:start="37:28" pos:end="37:37">(<argument pos:start="37:29" pos:end="37:36"><expr pos:start="37:29" pos:end="37:36"><name pos:start="37:29" pos:end="37:36">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="38:9" pos:end="39:27"><if pos:start="38:9" pos:end="39:27">if <condition pos:start="38:12" pos:end="38:17">(<expr pos:start="38:13" pos:end="38:16"><operator pos:start="38:13" pos:end="38:13">!</operator><name pos:start="38:14" pos:end="38:16">drv</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:27"><block_content pos:start="39:13" pos:end="39:27">
            <return pos:start="39:13" pos:end="39:27">return <expr pos:start="39:20" pos:end="39:26"><operator pos:start="39:20" pos:end="39:20">-</operator><name pos:start="39:21" pos:end="39:26">ENOENT</name></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="40:7" pos:end="46:5">else <block pos:start="40:12" pos:end="46:5">{<block_content pos:start="41:9" pos:end="45:9">
        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:17">(<expr pos:start="41:13" pos:end="41:16"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:16">drv</name></expr>)</condition> <block pos:start="41:19" pos:end="45:9">{<block_content pos:start="42:13" pos:end="44:26">
            <expr_stmt pos:start="42:13" pos:end="42:46"><expr pos:start="42:13" pos:end="42:45"><name pos:start="42:13" pos:end="42:15">drv</name> <operator pos:start="42:17" pos:end="42:17">=</operator> <call pos:start="42:19" pos:end="42:45"><name pos:start="42:19" pos:end="42:35">find_image_format</name><argument_list pos:start="42:36" pos:end="42:45">(<argument pos:start="42:37" pos:end="42:44"><expr pos:start="42:37" pos:end="42:44"><name pos:start="42:37" pos:end="42:44">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="43:13" pos:end="44:26"><if pos:start="43:13" pos:end="44:26">if <condition pos:start="43:16" pos:end="43:21">(<expr pos:start="43:17" pos:end="43:20"><operator pos:start="43:17" pos:end="43:17">!</operator><name pos:start="43:18" pos:end="43:20">drv</name></expr>)</condition><block type="pseudo" pos:start="44:17" pos:end="44:26"><block_content pos:start="44:17" pos:end="44:26">
                <return pos:start="44:17" pos:end="44:26">return <expr pos:start="44:24" pos:end="44:25"><operator pos:start="44:24" pos:end="44:24">-</operator><literal type="number" pos:start="44:25" pos:end="44:25">1</literal></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt pos:start="47:5" pos:end="47:18"><expr pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:6">bs</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:11">drv</name></name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:17">drv</name></expr>;</expr_stmt>
    <expr_stmt pos:start="48:5" pos:end="48:50"><expr pos:start="48:5" pos:end="48:49"><name pos:start="48:5" pos:end="48:14"><name pos:start="48:5" pos:end="48:6">bs</name><operator pos:start="48:7" pos:end="48:8">-&gt;</operator><name pos:start="48:9" pos:end="48:14">opaque</name></name> <operator pos:start="48:16" pos:end="48:16">=</operator> <call pos:start="48:18" pos:end="48:49"><name pos:start="48:18" pos:end="48:29">qemu_mallocz</name><argument_list pos:start="48:30" pos:end="48:49">(<argument pos:start="48:31" pos:end="48:48"><expr pos:start="48:31" pos:end="48:48"><name pos:start="48:31" pos:end="48:48"><name pos:start="48:31" pos:end="48:33">drv</name><operator pos:start="48:34" pos:end="48:35">-&gt;</operator><name pos:start="48:36" pos:end="48:48">instance_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:6">bs</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:21">total_sectors</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="number" pos:start="49:25" pos:end="49:25">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="49:28" pos:end="49:76">/* driver will set if it does not do getlength */</comment>
    <if_stmt pos:start="50:5" pos:end="51:18"><if pos:start="50:5" pos:end="51:18">if <condition pos:start="50:8" pos:end="50:53">(<expr pos:start="50:9" pos:end="50:52"><name pos:start="50:9" pos:end="50:18"><name pos:start="50:9" pos:end="50:10">bs</name><operator pos:start="50:11" pos:end="50:12">-&gt;</operator><name pos:start="50:13" pos:end="50:18">opaque</name></name> <operator pos:start="50:20" pos:end="50:21">==</operator> <name pos:start="50:23" pos:end="50:26">NULL</name> <operator pos:start="50:28" pos:end="50:29">&amp;&amp;</operator> <name pos:start="50:31" pos:end="50:48"><name pos:start="50:31" pos:end="50:33">drv</name><operator pos:start="50:34" pos:end="50:35">-&gt;</operator><name pos:start="50:36" pos:end="50:48">instance_size</name></name> <operator pos:start="50:50" pos:end="50:50">&gt;</operator> <literal type="number" pos:start="50:52" pos:end="50:52">0</literal></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:18"><block_content pos:start="51:9" pos:end="51:18">
        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return></block_content></block></if></if_stmt>
    <comment type="block" pos:start="52:5" pos:end="53:28">/* Note: for compatibility, we open disk image files as RDWR, and
       RDONLY as fallback */</comment>
    <if_stmt pos:start="54:5" pos:end="57:62"><if pos:start="54:5" pos:end="55:59">if <condition pos:start="54:8" pos:end="54:31">(<expr pos:start="54:9" pos:end="54:30"><operator pos:start="54:9" pos:end="54:9">!</operator><operator pos:start="54:10" pos:end="54:10">(</operator><name pos:start="54:11" pos:end="54:15">flags</name> <operator pos:start="54:17" pos:end="54:17">&amp;</operator> <name pos:start="54:19" pos:end="54:29">BDRV_O_FILE</name><operator pos:start="54:30" pos:end="54:30">)</operator></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:59"><block_content pos:start="55:9" pos:end="55:59">
        <expr_stmt pos:start="55:9" pos:end="55:59"><expr pos:start="55:9" pos:end="55:58"><name pos:start="55:9" pos:end="55:18">open_flags</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:32">BDRV_O_RDWR</name> <operator pos:start="55:34" pos:end="55:34">|</operator> <operator pos:start="55:36" pos:end="55:36">(</operator><name pos:start="55:37" pos:end="55:41">flags</name> <operator pos:start="55:43" pos:end="55:43">&amp;</operator> <name pos:start="55:45" pos:end="55:57">BDRV_O_DIRECT</name><operator pos:start="55:58" pos:end="55:58">)</operator></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="56:5" pos:end="57:62">else<block type="pseudo" pos:start="57:9" pos:end="57:62"><block_content pos:start="57:9" pos:end="57:62">
        <expr_stmt pos:start="57:9" pos:end="57:62"><expr pos:start="57:9" pos:end="57:61"><name pos:start="57:9" pos:end="57:18">open_flags</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:26">flags</name> <operator pos:start="57:28" pos:end="57:28">&amp;</operator> <operator pos:start="57:30" pos:end="57:30">~</operator><operator pos:start="57:31" pos:end="57:31">(</operator><name pos:start="57:32" pos:end="57:42">BDRV_O_FILE</name> <operator pos:start="57:44" pos:end="57:44">|</operator> <name pos:start="57:46" pos:end="57:60">BDRV_O_SNAPSHOT</name><operator pos:start="57:61" pos:end="57:61">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="58:5" pos:end="58:51"><expr pos:start="58:5" pos:end="58:50"><name pos:start="58:5" pos:end="58:7">ret</name> <operator pos:start="58:9" pos:end="58:9">=</operator> <call pos:start="58:11" pos:end="58:50"><name pos:start="58:11" pos:end="58:24"><name pos:start="58:11" pos:end="58:13">drv</name><operator pos:start="58:14" pos:end="58:15">-&gt;</operator><name pos:start="58:16" pos:end="58:24">bdrv_open</name></name><argument_list pos:start="58:25" pos:end="58:50">(<argument pos:start="58:26" pos:end="58:27"><expr pos:start="58:26" pos:end="58:27"><name pos:start="58:26" pos:end="58:27">bs</name></expr></argument>, <argument pos:start="58:30" pos:end="58:37"><expr pos:start="58:30" pos:end="58:37"><name pos:start="58:30" pos:end="58:37">filename</name></expr></argument>, <argument pos:start="58:40" pos:end="58:49"><expr pos:start="58:40" pos:end="58:49"><name pos:start="58:40" pos:end="58:49">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="59:5" pos:end="62:5"><if pos:start="59:5" pos:end="62:5">if <condition pos:start="59:8" pos:end="59:49">(<expr pos:start="59:9" pos:end="59:48"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:14">==</operator> <operator pos:start="59:16" pos:end="59:16">-</operator><name pos:start="59:17" pos:end="59:22">EACCES</name> <operator pos:start="59:24" pos:end="59:25">&amp;&amp;</operator> <operator pos:start="59:27" pos:end="59:27">!</operator><operator pos:start="59:28" pos:end="59:28">(</operator><name pos:start="59:29" pos:end="59:33">flags</name> <operator pos:start="59:35" pos:end="59:35">&amp;</operator> <name pos:start="59:37" pos:end="59:47">BDRV_O_FILE</name><operator pos:start="59:48" pos:end="59:48">)</operator></expr>)</condition> <block pos:start="59:51" pos:end="62:5">{<block_content pos:start="60:9" pos:end="61:26">
        <expr_stmt pos:start="60:9" pos:end="60:58"><expr pos:start="60:9" pos:end="60:57"><name pos:start="60:9" pos:end="60:11">ret</name> <operator pos:start="60:13" pos:end="60:13">=</operator> <call pos:start="60:15" pos:end="60:57"><name pos:start="60:15" pos:end="60:28"><name pos:start="60:15" pos:end="60:17">drv</name><operator pos:start="60:18" pos:end="60:19">-&gt;</operator><name pos:start="60:20" pos:end="60:28">bdrv_open</name></name><argument_list pos:start="60:29" pos:end="60:57">(<argument pos:start="60:30" pos:end="60:31"><expr pos:start="60:30" pos:end="60:31"><name pos:start="60:30" pos:end="60:31">bs</name></expr></argument>, <argument pos:start="60:34" pos:end="60:41"><expr pos:start="60:34" pos:end="60:41"><name pos:start="60:34" pos:end="60:41">filename</name></expr></argument>, <argument pos:start="60:44" pos:end="60:56"><expr pos:start="60:44" pos:end="60:56"><name pos:start="60:44" pos:end="60:56">BDRV_O_RDONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:10">bs</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:21">read_only</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="63:5" pos:end="68:5"><if pos:start="63:5" pos:end="68:5">if <condition pos:start="63:8" pos:end="63:16">(<expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">&lt;</operator> <literal type="number" pos:start="63:15" pos:end="63:15">0</literal></expr>)</condition> <block pos:start="63:18" pos:end="68:5">{<block_content pos:start="64:9" pos:end="67:19">
        <expr_stmt pos:start="64:9" pos:end="64:30"><expr pos:start="64:9" pos:end="64:29"><call pos:start="64:9" pos:end="64:29"><name pos:start="64:9" pos:end="64:17">qemu_free</name><argument_list pos:start="64:18" pos:end="64:29">(<argument pos:start="64:19" pos:end="64:28"><expr pos:start="64:19" pos:end="64:28"><name pos:start="64:19" pos:end="64:28"><name pos:start="64:19" pos:end="64:20">bs</name><operator pos:start="64:21" pos:end="64:22">-&gt;</operator><name pos:start="64:23" pos:end="64:28">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:10">bs</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:18">opaque</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:25">NULL</name></expr>;</expr_stmt>
        <expr_stmt pos:start="66:9" pos:end="66:23"><expr pos:start="66:9" pos:end="66:22"><name pos:start="66:9" pos:end="66:15"><name pos:start="66:9" pos:end="66:10">bs</name><operator pos:start="66:11" pos:end="66:12">-&gt;</operator><name pos:start="66:13" pos:end="66:15">drv</name></name> <operator pos:start="66:17" pos:end="66:17">=</operator> <name pos:start="66:19" pos:end="66:22">NULL</name></expr>;</expr_stmt>
        <return pos:start="67:9" pos:end="67:19">return <expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">ret</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="69:5" pos:end="73:0"><if pos:start="69:5" pos:end="73:0">if <condition pos:start="69:8" pos:end="69:28">(<expr pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:11">drv</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:27">bdrv_getlength</name></name></expr>)</condition> <block pos:start="69:30" pos:end="73:0">{<block_content pos:start="70:9" pos:end="70:62">
        <expr_stmt pos:start="70:9" pos:end="70:62"><expr pos:start="70:9" pos:end="70:61"><name pos:start="70:9" pos:end="70:25"><name pos:start="70:9" pos:end="70:10">bs</name><operator pos:start="70:11" pos:end="70:12">-&gt;</operator><name pos:start="70:13" pos:end="70:25">total_sectors</name></name> <operator pos:start="70:27" pos:end="70:27">=</operator> <call pos:start="70:29" pos:end="70:46"><name pos:start="70:29" pos:end="70:42">bdrv_getlength</name><argument_list pos:start="70:43" pos:end="70:46">(<argument pos:start="70:44" pos:end="70:45"><expr pos:start="70:44" pos:end="70:45"><name pos:start="70:44" pos:end="70:45">bs</name></expr></argument>)</argument_list></call> <operator pos:start="70:48" pos:end="70:49">&gt;&gt;</operator> <name pos:start="70:51" pos:end="70:61">SECTOR_BITS</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
<cpp:ifndef pos:start="72:1" pos:end="72:14">#<cpp:directive pos:start="72:2" pos:end="72:7">ifndef</cpp:directive> <name pos:start="72:9" pos:end="72:14">_WIN32</name></cpp:ifndef>
    <if_stmt pos:start="73:5" pos:end="77:0"><if pos:start="73:5" pos:end="77:0">if <condition pos:start="73:8" pos:end="73:25">(<expr pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:10">bs</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:24">is_temporary</name></name></expr>)</condition> <block pos:start="73:27" pos:end="77:0">{<block_content pos:start="74:9" pos:end="74:25">
        <expr_stmt pos:start="74:9" pos:end="74:25"><expr pos:start="74:9" pos:end="74:24"><call pos:start="74:9" pos:end="74:24"><name pos:start="74:9" pos:end="74:14">unlink</name><argument_list pos:start="74:15" pos:end="74:24">(<argument pos:start="74:16" pos:end="74:23"><expr pos:start="74:16" pos:end="74:23"><name pos:start="74:16" pos:end="74:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
<cpp:endif pos:start="76:1" pos:end="76:6">#<cpp:directive pos:start="76:2" pos:end="76:6">endif</cpp:directive></cpp:endif>
    <if_stmt pos:start="77:5" pos:end="89:5"><if pos:start="77:5" pos:end="89:5">if <condition pos:start="77:8" pos:end="77:36">(<expr pos:start="77:9" pos:end="77:35"><name pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:10">bs</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:24">backing_file</name><index pos:start="77:25" pos:end="77:27">[<expr pos:start="77:26" pos:end="77:26"><literal type="number" pos:start="77:26" pos:end="77:26">0</literal></expr>]</index></name> <operator pos:start="77:29" pos:end="77:30">!=</operator> <literal type="char" pos:start="77:32" pos:end="77:35">'\0'</literal></expr>)</condition> <block pos:start="77:38" pos:end="89:5">{<block_content pos:start="79:9" pos:end="88:22">
        <comment type="block" pos:start="78:9" pos:end="78:48">/* if there is a backing file, use it */</comment>
        <expr_stmt pos:start="79:9" pos:end="79:38"><expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:10">bs</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:22">backing_hd</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <call pos:start="79:26" pos:end="79:37"><name pos:start="79:26" pos:end="79:33">bdrv_new</name><argument_list pos:start="79:34" pos:end="79:37">(<argument pos:start="79:35" pos:end="79:36"><expr pos:start="79:35" pos:end="79:36"><literal type="string" pos:start="79:35" pos:end="79:36">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="80:9" pos:end="84:9"><if pos:start="80:9" pos:end="84:9">if <condition pos:start="80:12" pos:end="80:28">(<expr pos:start="80:13" pos:end="80:27"><operator pos:start="80:13" pos:end="80:13">!</operator><name pos:start="80:14" pos:end="80:27"><name pos:start="80:14" pos:end="80:15">bs</name><operator pos:start="80:16" pos:end="80:17">-&gt;</operator><name pos:start="80:18" pos:end="80:27">backing_hd</name></name></expr>)</condition> <block pos:start="80:30" pos:end="84:9">{<block_content pos:start="81:9" pos:end="83:27">
        <label pos:start="81:9" pos:end="81:13"><name pos:start="81:9" pos:end="81:12">fail</name>:</label>
            <expr_stmt pos:start="82:13" pos:end="82:27"><expr pos:start="82:13" pos:end="82:26"><call pos:start="82:13" pos:end="82:26"><name pos:start="82:13" pos:end="82:22">bdrv_close</name><argument_list pos:start="82:23" pos:end="82:26">(<argument pos:start="82:24" pos:end="82:25"><expr pos:start="82:24" pos:end="82:25"><name pos:start="82:24" pos:end="82:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="83:13" pos:end="83:27">return <expr pos:start="83:20" pos:end="83:26"><operator pos:start="83:20" pos:end="83:20">-</operator><name pos:start="83:21" pos:end="83:26">ENOMEM</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="85:9" pos:end="86:49"><expr pos:start="85:9" pos:end="86:48"><call pos:start="85:9" pos:end="86:48"><name pos:start="85:9" pos:end="85:20">path_combine</name><argument_list pos:start="85:21" pos:end="86:48">(<argument pos:start="85:22" pos:end="85:37"><expr pos:start="85:22" pos:end="85:37"><name pos:start="85:22" pos:end="85:37">backing_filename</name></expr></argument>, <argument pos:start="85:40" pos:end="85:63"><expr pos:start="85:40" pos:end="85:63"><sizeof pos:start="85:40" pos:end="85:63">sizeof<argument_list pos:start="85:46" pos:end="85:63">(<argument pos:start="85:47" pos:end="85:62"><expr pos:start="85:47" pos:end="85:62"><name pos:start="85:47" pos:end="85:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,
                     <argument pos:start="86:22" pos:end="86:29"><expr pos:start="86:22" pos:end="86:29"><name pos:start="86:22" pos:end="86:29">filename</name></expr></argument>, <argument pos:start="86:32" pos:end="86:47"><expr pos:start="86:32" pos:end="86:47"><name pos:start="86:32" pos:end="86:47"><name pos:start="86:32" pos:end="86:33">bs</name><operator pos:start="86:34" pos:end="86:35">-&gt;</operator><name pos:start="86:36" pos:end="86:47">backing_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="87:9" pos:end="88:22"><if pos:start="87:9" pos:end="88:22">if <condition pos:start="87:12" pos:end="87:63">(<expr pos:start="87:13" pos:end="87:62"><call pos:start="87:13" pos:end="87:58"><name pos:start="87:13" pos:end="87:21">bdrv_open</name><argument_list pos:start="87:22" pos:end="87:58">(<argument pos:start="87:23" pos:end="87:36"><expr pos:start="87:23" pos:end="87:36"><name pos:start="87:23" pos:end="87:36"><name pos:start="87:23" pos:end="87:24">bs</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:36">backing_hd</name></name></expr></argument>, <argument pos:start="87:39" pos:end="87:54"><expr pos:start="87:39" pos:end="87:54"><name pos:start="87:39" pos:end="87:54">backing_filename</name></expr></argument>, <argument pos:start="87:57" pos:end="87:57"><expr pos:start="87:57" pos:end="87:57"><literal type="number" pos:start="87:57" pos:end="87:57">0</literal></expr></argument>)</argument_list></call> <operator pos:start="87:60" pos:end="87:60">&lt;</operator> <literal type="number" pos:start="87:62" pos:end="87:62">0</literal></expr>)</condition><block type="pseudo" pos:start="88:13" pos:end="88:22"><block_content pos:start="88:13" pos:end="88:22">
            <goto pos:start="88:13" pos:end="88:22">goto <name pos:start="88:18" pos:end="88:21">fail</name>;</goto></block_content></block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <comment type="block" pos:start="90:5" pos:end="90:34">/* call the change callback */</comment>
    <expr_stmt pos:start="91:5" pos:end="91:26"><expr pos:start="91:5" pos:end="91:25"><name pos:start="91:5" pos:end="91:21"><name pos:start="91:5" pos:end="91:6">bs</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:21">media_changed</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <literal type="number" pos:start="91:25" pos:end="91:25">1</literal></expr>;</expr_stmt>
    <if_stmt pos:start="92:5" pos:end="93:41"><if pos:start="92:5" pos:end="93:41">if <condition pos:start="92:8" pos:end="92:22">(<expr pos:start="92:9" pos:end="92:21"><name pos:start="92:9" pos:end="92:21"><name pos:start="92:9" pos:end="92:10">bs</name><operator pos:start="92:11" pos:end="92:12">-&gt;</operator><name pos:start="92:13" pos:end="92:21">change_cb</name></name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:41"><block_content pos:start="93:9" pos:end="93:41">
        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><call pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:10">bs</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:21">change_cb</name></name><argument_list pos:start="93:22" pos:end="93:40">(<argument pos:start="93:23" pos:end="93:39"><expr pos:start="93:23" pos:end="93:39"><name pos:start="93:23" pos:end="93:39"><name pos:start="93:23" pos:end="93:24">bs</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:39">change_opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return pos:start="94:5" pos:end="94:13">return <expr pos:start="94:12" pos:end="94:12"><literal type="number" pos:start="94:12" pos:end="94:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
