<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19713.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">mb_cpu_class_init</name><parameter_list pos:start="1:30" pos:end="1:58">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:41">ObjectClass</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">oc</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="27:1">{<block_content pos:start="3:5" pos:end="26:43">
    <decl_stmt pos:start="3:5" pos:end="3:39"><decl pos:start="3:5" pos:end="3:38"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:15">DeviceClass</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:19">dc</name> <init pos:start="3:21" pos:end="3:38">= <expr pos:start="3:23" pos:end="3:38"><call pos:start="3:23" pos:end="3:38"><name pos:start="3:23" pos:end="3:34">DEVICE_CLASS</name><argument_list pos:start="3:35" pos:end="3:38">(<argument pos:start="3:36" pos:end="3:37"><expr pos:start="3:36" pos:end="3:37"><name pos:start="3:36" pos:end="3:37">oc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:33"><decl pos:start="4:5" pos:end="4:32"><type pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:12">CPUClass</name> <modifier pos:start="4:14" pos:end="4:14">*</modifier></type><name pos:start="4:15" pos:end="4:16">cc</name> <init pos:start="4:18" pos:end="4:32">= <expr pos:start="4:20" pos:end="4:32"><call pos:start="4:20" pos:end="4:32"><name pos:start="4:20" pos:end="4:28">CPU_CLASS</name><argument_list pos:start="4:29" pos:end="4:32">(<argument pos:start="4:30" pos:end="4:31"><expr pos:start="4:30" pos:end="4:31"><name pos:start="4:30" pos:end="4:31">oc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">MicroBlazeCPUClass</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">mcc</name> <init pos:start="5:29" pos:end="5:54">= <expr pos:start="5:31" pos:end="5:54"><call pos:start="5:31" pos:end="5:54"><name pos:start="5:31" pos:end="5:50">MICROBLAZE_CPU_CLASS</name><argument_list pos:start="5:51" pos:end="5:54">(<argument pos:start="5:52" pos:end="5:53"><expr pos:start="5:52" pos:end="5:53"><name pos:start="5:52" pos:end="5:53">oc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:38"><expr pos:start="6:5" pos:end="6:37"><name pos:start="6:5" pos:end="6:23"><name pos:start="6:5" pos:end="6:7">mcc</name><operator pos:start="6:8" pos:end="6:9">-&gt;</operator><name pos:start="6:10" pos:end="6:23">parent_realize</name></name> <operator pos:start="6:25" pos:end="6:25">=</operator> <name pos:start="6:27" pos:end="6:37"><name pos:start="6:27" pos:end="6:28">dc</name><operator pos:start="6:29" pos:end="6:30">-&gt;</operator><name pos:start="6:31" pos:end="6:37">realize</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:35"><expr pos:start="7:5" pos:end="7:34"><name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:6">dc</name><operator pos:start="7:7" pos:end="7:8">-&gt;</operator><name pos:start="7:9" pos:end="7:15">realize</name></name> <operator pos:start="7:17" pos:end="7:17">=</operator> <name pos:start="7:19" pos:end="7:34">mb_cpu_realizefn</name></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:34"><expr pos:start="8:5" pos:end="8:33"><name pos:start="8:5" pos:end="8:21"><name pos:start="8:5" pos:end="8:7">mcc</name><operator pos:start="8:8" pos:end="8:9">-&gt;</operator><name pos:start="8:10" pos:end="8:21">parent_reset</name></name> <operator pos:start="8:23" pos:end="8:23">=</operator> <name pos:start="8:25" pos:end="8:33"><name pos:start="8:25" pos:end="8:26">cc</name><operator pos:start="8:27" pos:end="8:28">-&gt;</operator><name pos:start="8:29" pos:end="8:33">reset</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:29"><expr pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:6">cc</name><operator pos:start="9:7" pos:end="9:8">-&gt;</operator><name pos:start="9:9" pos:end="9:13">reset</name></name> <operator pos:start="9:15" pos:end="9:15">=</operator> <name pos:start="9:17" pos:end="9:28">mb_cpu_reset</name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:35"><expr pos:start="10:5" pos:end="10:34"><name pos:start="10:5" pos:end="10:16"><name pos:start="10:5" pos:end="10:6">cc</name><operator pos:start="10:7" pos:end="10:8">-&gt;</operator><name pos:start="10:9" pos:end="10:16">has_work</name></name> <operator pos:start="10:18" pos:end="10:18">=</operator> <name pos:start="10:20" pos:end="10:34">mb_cpu_has_work</name></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:43"><expr pos:start="11:5" pos:end="11:42"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:6">cc</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:20">do_interrupt</name></name> <operator pos:start="11:22" pos:end="11:22">=</operator> <name pos:start="11:24" pos:end="11:42">mb_cpu_do_interrupt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:51"><expr pos:start="12:5" pos:end="12:50"><name pos:start="12:5" pos:end="12:26"><name pos:start="12:5" pos:end="12:6">cc</name><operator pos:start="12:7" pos:end="12:8">-&gt;</operator><name pos:start="12:9" pos:end="12:26">cpu_exec_interrupt</name></name> <operator pos:start="12:28" pos:end="12:28">=</operator> <name pos:start="12:30" pos:end="12:50">mb_cpu_exec_interrupt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:39"><expr pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:6">cc</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:18">dump_state</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:38">mb_cpu_dump_state</name></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:31"><expr pos:start="14:5" pos:end="14:30"><name pos:start="14:5" pos:end="14:14"><name pos:start="14:5" pos:end="14:6">cc</name><operator pos:start="14:7" pos:end="14:8">-&gt;</operator><name pos:start="14:9" pos:end="14:14">set_pc</name></name> <operator pos:start="14:16" pos:end="14:16">=</operator> <name pos:start="14:18" pos:end="14:30">mb_cpu_set_pc</name></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:53"><expr pos:start="15:5" pos:end="15:52"><name pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:6">cc</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:25">gdb_read_register</name></name> <operator pos:start="15:27" pos:end="15:27">=</operator> <name pos:start="15:29" pos:end="15:52">mb_cpu_gdb_read_register</name></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="18:0"><expr pos:start="16:5" pos:end="16:54"><name pos:start="16:5" pos:end="16:26"><name pos:start="16:5" pos:end="16:6">cc</name><operator pos:start="16:7" pos:end="16:8">-&gt;</operator><name pos:start="16:9" pos:end="16:26">gdb_write_register</name></name> <operator pos:start="16:28" pos:end="16:28">=</operator> <name pos:start="16:30" pos:end="16:54">mb_cpu_gdb_write_register</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="17:1" pos:end="17:23">#<cpp:directive pos:start="17:2" pos:end="17:6">ifdef</cpp:directive> <name pos:start="17:8" pos:end="17:23">CONFIG_USER_ONLY</name></cpp:ifdef>
    <expr_stmt pos:start="18:5" pos:end="20:0"><expr pos:start="18:5" pos:end="18:50"><name pos:start="18:5" pos:end="18:24"><name pos:start="18:5" pos:end="18:6">cc</name><operator pos:start="18:7" pos:end="18:8">-&gt;</operator><name pos:start="18:9" pos:end="18:24">handle_mmu_fault</name></name> <operator pos:start="18:26" pos:end="18:26">=</operator> <name pos:start="18:28" pos:end="18:50">mb_cpu_handle_mmu_fault</name></expr>;</expr_stmt>
<cpp:else pos:start="19:1" pos:end="19:5">#<cpp:directive pos:start="19:2" pos:end="19:5">else</cpp:directive></cpp:else>
    <expr_stmt pos:start="20:5" pos:end="20:56"><expr pos:start="20:5" pos:end="20:55"><name pos:start="20:5" pos:end="20:28"><name pos:start="20:5" pos:end="20:6">cc</name><operator pos:start="20:7" pos:end="20:8">-&gt;</operator><name pos:start="20:9" pos:end="20:28">do_unassigned_access</name></name> <operator pos:start="20:30" pos:end="20:30">=</operator> <name pos:start="20:32" pos:end="20:55">mb_cpu_unassigned_access</name></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="23:0"><expr pos:start="21:5" pos:end="21:56"><name pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:6">cc</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:27">get_phys_page_debug</name></name> <operator pos:start="21:29" pos:end="21:29">=</operator> <name pos:start="21:31" pos:end="21:56">mb_cpu_get_phys_page_debug</name></expr>;</expr_stmt>
<cpp:endif pos:start="22:1" pos:end="22:6">#<cpp:directive pos:start="22:2" pos:end="22:6">endif</cpp:directive></cpp:endif>
    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:6">dc</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:12">vmsd</name></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <operator pos:start="23:16" pos:end="23:16">&amp;</operator><name pos:start="23:17" pos:end="23:30">vmstate_mb_cpu</name></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:30"><expr pos:start="24:5" pos:end="24:29"><name pos:start="24:5" pos:end="24:13"><name pos:start="24:5" pos:end="24:6">dc</name><operator pos:start="24:7" pos:end="24:8">-&gt;</operator><name pos:start="24:9" pos:end="24:13">props</name></name> <operator pos:start="24:15" pos:end="24:15">=</operator> <name pos:start="24:17" pos:end="24:29">mb_properties</name></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:6">cc</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:25">gdb_num_core_regs</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <literal type="number" pos:start="25:29" pos:end="25:32">32</literal> <operator pos:start="25:32" pos:end="25:32">+</operator> <literal type="number" pos:start="25:34" pos:end="25:34">5</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:43"><expr pos:start="26:5" pos:end="26:42"><name pos:start="26:5" pos:end="26:22"><name pos:start="26:5" pos:end="26:6">cc</name><operator pos:start="26:7" pos:end="26:8">-&gt;</operator><name pos:start="26:9" pos:end="26:22">disas_set_info</name></name> <operator pos:start="26:24" pos:end="26:24">=</operator> <name pos:start="26:26" pos:end="26:42">mb_disas_set_info</name></expr>;</expr_stmt>
</block_content>}</block></function></unit>
