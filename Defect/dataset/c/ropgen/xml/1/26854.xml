<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26854.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">mtree_print_mr</name><parameter_list pos:start="1:27" pos:end="7:67">(<parameter pos:start="1:28" pos:end="1:54"><decl pos:start="1:28" pos:end="1:54"><type pos:start="1:28" pos:end="1:54"><name pos:start="1:28" pos:end="1:43">fprintf_function</name></type> <name pos:start="1:45" pos:end="1:54">mon_printf</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:63"><decl pos:start="1:57" pos:end="1:63"><type pos:start="1:57" pos:end="1:63"><name pos:start="1:57" pos:end="1:60">void</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:63">f</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><specifier pos:start="3:28" pos:end="3:32">const</specifier> <name pos:start="3:34" pos:end="3:45">MemoryRegion</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:49">mr</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:69"><decl pos:start="3:52" pos:end="3:69"><type pos:start="3:52" pos:end="3:69"><name pos:start="3:52" pos:end="3:59">unsigned</name> <name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:69">level</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:50"><decl pos:start="5:28" pos:end="5:50"><type pos:start="5:28" pos:end="5:50"><name pos:start="5:28" pos:end="5:45">target_phys_addr_t</name></type> <name pos:start="5:47" pos:end="5:50">base</name></decl></parameter>,

                           <parameter pos:start="7:28" pos:end="7:66"><decl pos:start="7:28" pos:end="7:66"><type pos:start="7:28" pos:end="7:66"><name pos:start="7:28" pos:end="7:47">MemoryRegionListHead</name> <modifier pos:start="7:49" pos:end="7:49">*</modifier></type><name pos:start="7:50" pos:end="7:66">alias_print_queue</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="165:1">{<block_content pos:start="11:5" pos:end="163:5">

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">MemoryRegionList</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:28">new_ml</name></decl>, <decl pos:start="11:31" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:22"><modifier pos:start="11:31" pos:end="11:31">*</modifier></type><name pos:start="11:32" pos:end="11:33">ml</name></decl>, <decl pos:start="11:36" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:22"><modifier pos:start="11:36" pos:end="11:36">*</modifier></type><name pos:start="11:37" pos:end="11:43">next_ml</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:24">MemoryRegionListHead</name></type> <name pos:start="13:26" pos:end="13:42">submr_print_queue</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:24"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:22">MemoryRegion</name> <modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:29">submr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:18">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:11">mr</name></expr>)</condition> <block pos:start="21:14" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="29:5" pos:end="33:5">for <control pos:start="29:9" pos:end="29:31">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:26"><expr pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:25">level</name></expr>;</condition> <incr pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:28">i</name><operator pos:start="29:29" pos:end="29:30">++</operator></expr></incr>)</control> <block pos:start="29:33" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:28">

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><call pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:18">mon_printf</name><argument_list pos:start="31:19" pos:end="31:27">(<argument pos:start="31:20" pos:end="31:20"><expr pos:start="31:20" pos:end="31:20"><name pos:start="31:20" pos:end="31:20">f</name></expr></argument>, <argument pos:start="31:23" pos:end="31:26"><expr pos:start="31:23" pos:end="31:26"><literal type="string" pos:start="31:23" pos:end="31:26">"  "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="37:5" pos:end="107:5"><if pos:start="37:5" pos:end="93:5">if <condition pos:start="37:8" pos:end="37:18">(<expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:10">mr</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:17">alias</name></name></expr>)</condition> <block pos:start="37:20" pos:end="93:5">{<block_content pos:start="39:9" pos:end="91:69">

        <decl_stmt pos:start="39:9" pos:end="39:29"><decl pos:start="39:9" pos:end="39:28"><type pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:24">MemoryRegionList</name> <modifier pos:start="39:26" pos:end="39:26">*</modifier></type><name pos:start="39:27" pos:end="39:28">ml</name></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:27"><decl pos:start="41:9" pos:end="41:26"><type pos:start="41:9" pos:end="41:12"><name pos:start="41:9" pos:end="41:12">bool</name></type> <name pos:start="41:14" pos:end="41:18">found</name> <init pos:start="41:20" pos:end="41:26">= <expr pos:start="41:22" pos:end="41:26"><name pos:start="41:22" pos:end="41:26">false</name></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="45:9" pos:end="45:56">/* check if the alias is already in the queue */</comment>

        <macro pos:start="47:9" pos:end="47:52"><name pos:start="47:9" pos:end="47:22">QTAILQ_FOREACH</name><argument_list pos:start="47:23" pos:end="47:52">(<argument pos:start="47:24" pos:end="47:25">ml</argument>, <argument pos:start="47:28" pos:end="47:44">alias_print_queue</argument>, <argument pos:start="47:47" pos:end="47:51">queue</argument>)</argument_list></macro> <block pos:start="47:54" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:13">

            <if_stmt pos:start="49:13" pos:end="53:13"><if pos:start="49:13" pos:end="53:13">if <condition pos:start="49:16" pos:end="49:52">(<expr pos:start="49:17" pos:end="49:51"><name pos:start="49:17" pos:end="49:22"><name pos:start="49:17" pos:end="49:18">ml</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:22">mr</name></name> <operator pos:start="49:24" pos:end="49:25">==</operator> <name pos:start="49:27" pos:end="49:35"><name pos:start="49:27" pos:end="49:28">mr</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:35">alias</name></name> <operator pos:start="49:37" pos:end="49:38">&amp;&amp;</operator> <operator pos:start="49:40" pos:end="49:40">!</operator><name pos:start="49:41" pos:end="49:51"><name pos:start="49:41" pos:end="49:42">ml</name><operator pos:start="49:43" pos:end="49:44">-&gt;</operator><name pos:start="49:45" pos:end="49:51">printed</name></name></expr>)</condition> <block pos:start="49:54" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:29">

                <expr_stmt pos:start="51:17" pos:end="51:29"><expr pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:21">found</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:28">true</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>



        <if_stmt pos:start="59:9" pos:end="69:9"><if pos:start="59:9" pos:end="69:9">if <condition pos:start="59:12" pos:end="59:19">(<expr pos:start="59:13" pos:end="59:18"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:18">found</name></expr>)</condition> <block pos:start="59:21" pos:end="69:9">{<block_content pos:start="61:13" pos:end="67:61">

            <expr_stmt pos:start="61:13" pos:end="61:44"><expr pos:start="61:13" pos:end="61:43"><name pos:start="61:13" pos:end="61:14">ml</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:43"><name pos:start="61:18" pos:end="61:22">g_new</name><argument_list pos:start="61:23" pos:end="61:43">(<argument pos:start="61:24" pos:end="61:39"><expr pos:start="61:24" pos:end="61:39"><name pos:start="61:24" pos:end="61:39">MemoryRegionList</name></expr></argument>, <argument pos:start="61:42" pos:end="61:42"><expr pos:start="61:42" pos:end="61:42"><literal type="number" pos:start="61:42" pos:end="61:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:31"><expr pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:18"><name pos:start="63:13" pos:end="63:14">ml</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:18">mr</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:30"><name pos:start="63:22" pos:end="63:23">mr</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:30">alias</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:32"><expr pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:23"><name pos:start="65:13" pos:end="65:14">ml</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:23">printed</name></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <name pos:start="65:27" pos:end="65:31">false</name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:61"><expr pos:start="67:13" pos:end="67:60"><call pos:start="67:13" pos:end="67:60"><name pos:start="67:13" pos:end="67:30">QTAILQ_INSERT_TAIL</name><argument_list pos:start="67:31" pos:end="67:60">(<argument pos:start="67:32" pos:end="67:48"><expr pos:start="67:32" pos:end="67:48"><name pos:start="67:32" pos:end="67:48">alias_print_queue</name></expr></argument>, <argument pos:start="67:51" pos:end="67:52"><expr pos:start="67:51" pos:end="67:52"><name pos:start="67:51" pos:end="67:52">ml</name></expr></argument>, <argument pos:start="67:55" pos:end="67:59"><expr pos:start="67:55" pos:end="67:59"><name pos:start="67:55" pos:end="67:59">queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="91:69"><expr pos:start="71:9" pos:end="91:68"><call pos:start="71:9" pos:end="91:68"><name pos:start="71:9" pos:end="71:18">mon_printf</name><argument_list pos:start="71:19" pos:end="91:68">(<argument pos:start="71:20" pos:end="71:20"><expr pos:start="71:20" pos:end="71:20"><name pos:start="71:20" pos:end="71:20">f</name></expr></argument>, <argument pos:start="71:23" pos:end="73:57"><expr pos:start="71:23" pos:end="73:57"><name pos:start="71:23" pos:end="71:36">TARGET_FMT_plx</name> <literal type="string" pos:start="71:38" pos:end="71:40">"-"</literal> <name pos:start="71:42" pos:end="71:55">TARGET_FMT_plx</name> <literal type="string" pos:start="71:57" pos:end="71:83">" (prio %d): alias %s @%s "</literal>

                   <name pos:start="73:20" pos:end="73:33">TARGET_FMT_plx</name> <literal type="string" pos:start="73:35" pos:end="73:37">"-"</literal> <name pos:start="73:39" pos:end="73:52">TARGET_FMT_plx</name> <literal type="string" pos:start="73:54" pos:end="73:57">"\n"</literal></expr></argument>,

                   <argument pos:start="75:20" pos:end="75:34"><expr pos:start="75:20" pos:end="75:34"><name pos:start="75:20" pos:end="75:23">base</name> <operator pos:start="75:25" pos:end="75:25">+</operator> <name pos:start="75:27" pos:end="75:34"><name pos:start="75:27" pos:end="75:28">mr</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:34">addr</name></name></expr></argument>,

                   <argument pos:start="77:20" pos:end="79:67"><expr pos:start="77:20" pos:end="79:67"><name pos:start="77:20" pos:end="77:23">base</name> <operator pos:start="77:25" pos:end="77:25">+</operator> <name pos:start="77:27" pos:end="77:34"><name pos:start="77:27" pos:end="77:28">mr</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:34">addr</name></name>

                   <operator pos:start="79:20" pos:end="79:20">+</operator> <operator pos:start="79:22" pos:end="79:22">(</operator><name pos:start="79:23" pos:end="79:40">target_phys_addr_t</name><operator pos:start="79:41" pos:end="79:41">)</operator><call pos:start="79:42" pos:end="79:63"><name pos:start="79:42" pos:end="79:53">int128_get64</name><argument_list pos:start="79:54" pos:end="79:63">(<argument pos:start="79:55" pos:end="79:62"><expr pos:start="79:55" pos:end="79:62"><name pos:start="79:55" pos:end="79:62"><name pos:start="79:55" pos:end="79:56">mr</name><operator pos:start="79:57" pos:end="79:58">-&gt;</operator><name pos:start="79:59" pos:end="79:62">size</name></name></expr></argument>)</argument_list></call> <operator pos:start="79:65" pos:end="79:65">-</operator> <literal type="number" pos:start="79:67" pos:end="79:67">1</literal></expr></argument>,

                   <argument pos:start="81:20" pos:end="81:31"><expr pos:start="81:20" pos:end="81:31"><name pos:start="81:20" pos:end="81:31"><name pos:start="81:20" pos:end="81:21">mr</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:31">priority</name></name></expr></argument>,

                   <argument pos:start="83:20" pos:end="83:27"><expr pos:start="83:20" pos:end="83:27"><name pos:start="83:20" pos:end="83:27"><name pos:start="83:20" pos:end="83:21">mr</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:27">name</name></name></expr></argument>,

                   <argument pos:start="85:20" pos:end="85:34"><expr pos:start="85:20" pos:end="85:34"><name pos:start="85:20" pos:end="85:34"><name pos:start="85:20" pos:end="85:21">mr</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:28">alias</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:34">name</name></name></expr></argument>,

                   <argument pos:start="87:20" pos:end="87:35"><expr pos:start="87:20" pos:end="87:35"><name pos:start="87:20" pos:end="87:35"><name pos:start="87:20" pos:end="87:21">mr</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:35">alias_offset</name></name></expr></argument>,

                   <argument pos:start="89:20" pos:end="91:67"><expr pos:start="89:20" pos:end="91:67"><name pos:start="89:20" pos:end="89:35"><name pos:start="89:20" pos:end="89:21">mr</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:35">alias_offset</name></name>

                   <operator pos:start="91:20" pos:end="91:20">+</operator> <operator pos:start="91:22" pos:end="91:22">(</operator><name pos:start="91:23" pos:end="91:40">target_phys_addr_t</name><operator pos:start="91:41" pos:end="91:41">)</operator><call pos:start="91:42" pos:end="91:63"><name pos:start="91:42" pos:end="91:53">int128_get64</name><argument_list pos:start="91:54" pos:end="91:63">(<argument pos:start="91:55" pos:end="91:62"><expr pos:start="91:55" pos:end="91:62"><name pos:start="91:55" pos:end="91:62"><name pos:start="91:55" pos:end="91:56">mr</name><operator pos:start="91:57" pos:end="91:58">-&gt;</operator><name pos:start="91:59" pos:end="91:62">size</name></name></expr></argument>)</argument_list></call> <operator pos:start="91:65" pos:end="91:65">-</operator> <literal type="number" pos:start="91:67" pos:end="91:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="107:5">else <block pos:start="93:12" pos:end="107:5">{<block_content pos:start="95:9" pos:end="105:29">

        <expr_stmt pos:start="95:9" pos:end="105:29"><expr pos:start="95:9" pos:end="105:28"><call pos:start="95:9" pos:end="105:28"><name pos:start="95:9" pos:end="95:18">mon_printf</name><argument_list pos:start="95:19" pos:end="105:28">(<argument pos:start="95:20" pos:end="95:20"><expr pos:start="95:20" pos:end="95:20"><name pos:start="95:20" pos:end="95:20">f</name></expr></argument>, <argument pos:start="95:23" pos:end="95:74"><expr pos:start="95:23" pos:end="95:74"><name pos:start="95:23" pos:end="95:36">TARGET_FMT_plx</name> <literal type="string" pos:start="95:38" pos:end="95:40">"-"</literal> <name pos:start="95:42" pos:end="95:55">TARGET_FMT_plx</name> <literal type="string" pos:start="95:57" pos:end="95:74">" (prio %d): %s\n"</literal></expr></argument>,

                   <argument pos:start="97:20" pos:end="97:34"><expr pos:start="97:20" pos:end="97:34"><name pos:start="97:20" pos:end="97:23">base</name> <operator pos:start="97:25" pos:end="97:25">+</operator> <name pos:start="97:27" pos:end="97:34"><name pos:start="97:27" pos:end="97:28">mr</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:34">addr</name></name></expr></argument>,

                   <argument pos:start="99:20" pos:end="101:67"><expr pos:start="99:20" pos:end="101:67"><name pos:start="99:20" pos:end="99:23">base</name> <operator pos:start="99:25" pos:end="99:25">+</operator> <name pos:start="99:27" pos:end="99:34"><name pos:start="99:27" pos:end="99:28">mr</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:34">addr</name></name>

                   <operator pos:start="101:20" pos:end="101:20">+</operator> <operator pos:start="101:22" pos:end="101:22">(</operator><name pos:start="101:23" pos:end="101:40">target_phys_addr_t</name><operator pos:start="101:41" pos:end="101:41">)</operator><call pos:start="101:42" pos:end="101:63"><name pos:start="101:42" pos:end="101:53">int128_get64</name><argument_list pos:start="101:54" pos:end="101:63">(<argument pos:start="101:55" pos:end="101:62"><expr pos:start="101:55" pos:end="101:62"><name pos:start="101:55" pos:end="101:62"><name pos:start="101:55" pos:end="101:56">mr</name><operator pos:start="101:57" pos:end="101:58">-&gt;</operator><name pos:start="101:59" pos:end="101:62">size</name></name></expr></argument>)</argument_list></call> <operator pos:start="101:65" pos:end="101:65">-</operator> <literal type="number" pos:start="101:67" pos:end="101:67">1</literal></expr></argument>,

                   <argument pos:start="103:20" pos:end="103:31"><expr pos:start="103:20" pos:end="103:31"><name pos:start="103:20" pos:end="103:31"><name pos:start="103:20" pos:end="103:21">mr</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:31">priority</name></name></expr></argument>,

                   <argument pos:start="105:20" pos:end="105:27"><expr pos:start="105:20" pos:end="105:27"><name pos:start="105:20" pos:end="105:27"><name pos:start="105:20" pos:end="105:21">mr</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:27">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:36"><expr pos:start="111:5" pos:end="111:35"><call pos:start="111:5" pos:end="111:35"><name pos:start="111:5" pos:end="111:15">QTAILQ_INIT</name><argument_list pos:start="111:16" pos:end="111:35">(<argument pos:start="111:17" pos:end="111:34"><expr pos:start="111:17" pos:end="111:34"><operator pos:start="111:17" pos:end="111:17">&amp;</operator><name pos:start="111:18" pos:end="111:34">submr_print_queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="115:5" pos:end="115:59"><name pos:start="115:5" pos:end="115:18">QTAILQ_FOREACH</name><argument_list pos:start="115:19" pos:end="115:59">(<argument pos:start="115:20" pos:end="115:24">submr</argument>, <argument pos:start="115:27" pos:end="115:41">&amp;mr-&gt;subregions</argument>, <argument pos:start="115:44" pos:end="115:58">subregions_link</argument>)</argument_list></macro> <block pos:start="115:61" pos:end="145:5">{<block_content pos:start="117:9" pos:end="143:9">

        <expr_stmt pos:start="117:9" pos:end="117:44"><expr pos:start="117:9" pos:end="117:43"><name pos:start="117:9" pos:end="117:14">new_ml</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <call pos:start="117:18" pos:end="117:43"><name pos:start="117:18" pos:end="117:22">g_new</name><argument_list pos:start="117:23" pos:end="117:43">(<argument pos:start="117:24" pos:end="117:39"><expr pos:start="117:24" pos:end="117:39"><name pos:start="117:24" pos:end="117:39">MemoryRegionList</name></expr></argument>, <argument pos:start="117:42" pos:end="117:42"><expr pos:start="117:42" pos:end="117:42"><literal type="number" pos:start="117:42" pos:end="117:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:27"><expr pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:18"><name pos:start="119:9" pos:end="119:14">new_ml</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:18">mr</name></name> <operator pos:start="119:20" pos:end="119:20">=</operator> <name pos:start="119:22" pos:end="119:26">submr</name></expr>;</expr_stmt>

        <macro pos:start="121:9" pos:end="121:53"><name pos:start="121:9" pos:end="121:22">QTAILQ_FOREACH</name><argument_list pos:start="121:23" pos:end="121:53">(<argument pos:start="121:24" pos:end="121:25">ml</argument>, <argument pos:start="121:28" pos:end="121:45">&amp;submr_print_queue</argument>, <argument pos:start="121:48" pos:end="121:52">queue</argument>)</argument_list></macro> <block pos:start="121:55" pos:end="137:9">{<block_content pos:start="123:13" pos:end="135:13">

            <if_stmt pos:start="123:13" pos:end="135:13"><if pos:start="123:13" pos:end="135:13">if <condition pos:start="123:16" pos:end="127:58">(<expr pos:start="123:17" pos:end="127:57"><name pos:start="123:17" pos:end="123:32"><name pos:start="123:17" pos:end="123:22">new_ml</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:26">mr</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:32">addr</name></name> <operator pos:start="123:34" pos:end="123:34">&lt;</operator> <name pos:start="123:36" pos:end="123:47"><name pos:start="123:36" pos:end="123:37">ml</name><operator pos:start="123:38" pos:end="123:39">-&gt;</operator><name pos:start="123:40" pos:end="123:41">mr</name><operator pos:start="123:42" pos:end="123:43">-&gt;</operator><name pos:start="123:44" pos:end="123:47">addr</name></name> <operator pos:start="123:49" pos:end="123:50">||</operator>

                <operator pos:start="125:17" pos:end="125:17">(</operator><name pos:start="125:18" pos:end="125:33"><name pos:start="125:18" pos:end="125:23">new_ml</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:27">mr</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:33">addr</name></name> <operator pos:start="125:35" pos:end="125:36">==</operator> <name pos:start="125:38" pos:end="125:49"><name pos:start="125:38" pos:end="125:39">ml</name><operator pos:start="125:40" pos:end="125:41">-&gt;</operator><name pos:start="125:42" pos:end="125:43">mr</name><operator pos:start="125:44" pos:end="125:45">-&gt;</operator><name pos:start="125:46" pos:end="125:49">addr</name></name> <operator pos:start="125:51" pos:end="125:52">&amp;&amp;</operator>

                 <name pos:start="127:18" pos:end="127:37"><name pos:start="127:18" pos:end="127:23">new_ml</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:27">mr</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:37">priority</name></name> <operator pos:start="127:39" pos:end="127:39">&gt;</operator> <name pos:start="127:41" pos:end="127:56"><name pos:start="127:41" pos:end="127:42">ml</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:46">mr</name><operator pos:start="127:47" pos:end="127:48">-&gt;</operator><name pos:start="127:49" pos:end="127:56">priority</name></name><operator pos:start="127:57" pos:end="127:57">)</operator></expr>)</condition> <block pos:start="127:60" pos:end="135:13">{<block_content pos:start="129:17" pos:end="133:22">

                <expr_stmt pos:start="129:17" pos:end="129:56"><expr pos:start="129:17" pos:end="129:55"><call pos:start="129:17" pos:end="129:55"><name pos:start="129:17" pos:end="129:36">QTAILQ_INSERT_BEFORE</name><argument_list pos:start="129:37" pos:end="129:55">(<argument pos:start="129:38" pos:end="129:39"><expr pos:start="129:38" pos:end="129:39"><name pos:start="129:38" pos:end="129:39">ml</name></expr></argument>, <argument pos:start="129:42" pos:end="129:47"><expr pos:start="129:42" pos:end="129:47"><name pos:start="129:42" pos:end="129:47">new_ml</name></expr></argument>, <argument pos:start="129:50" pos:end="129:54"><expr pos:start="129:50" pos:end="129:54"><name pos:start="129:50" pos:end="129:54">queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:30"><expr pos:start="131:17" pos:end="131:29"><name pos:start="131:17" pos:end="131:22">new_ml</name> <operator pos:start="131:24" pos:end="131:24">=</operator> <name pos:start="131:26" pos:end="131:29">NULL</name></expr>;</expr_stmt>

                <break pos:start="133:17" pos:end="133:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <if_stmt pos:start="139:9" pos:end="143:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:19">(<expr pos:start="139:13" pos:end="139:18"><name pos:start="139:13" pos:end="139:18">new_ml</name></expr>)</condition> <block pos:start="139:21" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:66">

            <expr_stmt pos:start="141:13" pos:end="141:66"><expr pos:start="141:13" pos:end="141:65"><call pos:start="141:13" pos:end="141:65"><name pos:start="141:13" pos:end="141:30">QTAILQ_INSERT_TAIL</name><argument_list pos:start="141:31" pos:end="141:65">(<argument pos:start="141:32" pos:end="141:49"><expr pos:start="141:32" pos:end="141:49"><operator pos:start="141:32" pos:end="141:32">&amp;</operator><name pos:start="141:33" pos:end="141:49">submr_print_queue</name></expr></argument>, <argument pos:start="141:52" pos:end="141:57"><expr pos:start="141:52" pos:end="141:57"><name pos:start="141:52" pos:end="141:57">new_ml</name></expr></argument>, <argument pos:start="141:60" pos:end="141:64"><expr pos:start="141:60" pos:end="141:64"><name pos:start="141:60" pos:end="141:64">queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <macro pos:start="149:5" pos:end="149:49"><name pos:start="149:5" pos:end="149:18">QTAILQ_FOREACH</name><argument_list pos:start="149:19" pos:end="149:49">(<argument pos:start="149:20" pos:end="149:21">ml</argument>, <argument pos:start="149:24" pos:end="149:41">&amp;submr_print_queue</argument>, <argument pos:start="149:44" pos:end="149:48">queue</argument>)</argument_list></macro> <block pos:start="149:51" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:42">

        <expr_stmt pos:start="151:9" pos:end="153:42"><expr pos:start="151:9" pos:end="153:41"><call pos:start="151:9" pos:end="153:41"><name pos:start="151:9" pos:end="151:22">mtree_print_mr</name><argument_list pos:start="151:23" pos:end="153:41">(<argument pos:start="151:24" pos:end="151:33"><expr pos:start="151:24" pos:end="151:33"><name pos:start="151:24" pos:end="151:33">mon_printf</name></expr></argument>, <argument pos:start="151:36" pos:end="151:36"><expr pos:start="151:36" pos:end="151:36"><name pos:start="151:36" pos:end="151:36">f</name></expr></argument>, <argument pos:start="151:39" pos:end="151:44"><expr pos:start="151:39" pos:end="151:44"><name pos:start="151:39" pos:end="151:44"><name pos:start="151:39" pos:end="151:40">ml</name><operator pos:start="151:41" pos:end="151:42">-&gt;</operator><name pos:start="151:43" pos:end="151:44">mr</name></name></expr></argument>, <argument pos:start="151:47" pos:end="151:55"><expr pos:start="151:47" pos:end="151:55"><name pos:start="151:47" pos:end="151:51">level</name> <operator pos:start="151:53" pos:end="151:53">+</operator> <literal type="number" pos:start="151:55" pos:end="151:55">1</literal></expr></argument>, <argument pos:start="151:58" pos:end="151:72"><expr pos:start="151:58" pos:end="151:72"><name pos:start="151:58" pos:end="151:61">base</name> <operator pos:start="151:63" pos:end="151:63">+</operator> <name pos:start="151:65" pos:end="151:72"><name pos:start="151:65" pos:end="151:66">mr</name><operator pos:start="151:67" pos:end="151:68">-&gt;</operator><name pos:start="151:69" pos:end="151:72">addr</name></name></expr></argument>,

                       <argument pos:start="153:24" pos:end="153:40"><expr pos:start="153:24" pos:end="153:40"><name pos:start="153:24" pos:end="153:40">alias_print_queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <macro pos:start="159:5" pos:end="159:63"><name pos:start="159:5" pos:end="159:23">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="159:24" pos:end="159:63">(<argument pos:start="159:25" pos:end="159:31">next_ml</argument>, <argument pos:start="159:34" pos:end="159:51">&amp;submr_print_queue</argument>, <argument pos:start="159:54" pos:end="159:58">queue</argument>, <argument pos:start="159:61" pos:end="159:62">ml</argument>)</argument_list></macro> <block pos:start="159:65" pos:end="163:5">{<block_content pos:start="161:9" pos:end="161:19">

        <expr_stmt pos:start="161:9" pos:end="161:19"><expr pos:start="161:9" pos:end="161:18"><call pos:start="161:9" pos:end="161:18"><name pos:start="161:9" pos:end="161:14">g_free</name><argument_list pos:start="161:15" pos:end="161:18">(<argument pos:start="161:16" pos:end="161:17"><expr pos:start="161:16" pos:end="161:17"><name pos:start="161:16" pos:end="161:17">ml</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
