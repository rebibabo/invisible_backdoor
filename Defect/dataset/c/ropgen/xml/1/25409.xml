<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25409.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:42">swap_channel_layouts_on_filter</name><parameter_list pos:start="1:43" pos:end="1:67">(<parameter pos:start="1:44" pos:end="1:66"><decl pos:start="1:44" pos:end="1:66"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:58">AVFilterContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:66">filter</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="141:1">{<block_content pos:start="5:5" pos:end="137:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">AVFilterLink</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">link</name> <init pos:start="5:24" pos:end="5:29">= <expr pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">k</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="23:5">for <control pos:start="11:9" pos:end="11:43">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:38"><expr pos:start="11:17" pos:end="11:37"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:37"><name pos:start="11:21" pos:end="11:26">filter</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:37">nb_inputs</name></name></expr>;</condition> <incr pos:start="11:40" pos:end="11:42"><expr pos:start="11:40" pos:end="11:42"><name pos:start="11:40" pos:end="11:40">i</name><operator pos:start="11:41" pos:end="11:42">++</operator></expr></incr>)</control> <block pos:start="11:45" pos:end="23:5">{<block_content pos:start="13:9" pos:end="21:18">

        <expr_stmt pos:start="13:9" pos:end="13:33"><expr pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:12">link</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:32"><name pos:start="13:16" pos:end="13:21">filter</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:29">inputs</name><index pos:start="13:30" pos:end="13:32">[<expr pos:start="13:31" pos:end="13:31"><name pos:start="13:31" pos:end="13:31">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="17:9" pos:end="21:18"><if pos:start="17:9" pos:end="21:18">if <condition pos:start="17:12" pos:end="19:63">(<expr pos:start="17:13" pos:end="19:62"><name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:16">link</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:22">type</name></name> <operator pos:start="17:24" pos:end="17:25">==</operator> <name pos:start="17:27" pos:end="17:44">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="17:46" pos:end="17:47">&amp;&amp;</operator>

            <name pos:start="19:13" pos:end="19:57"><name pos:start="19:13" pos:end="19:16">link</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:37">out_channel_layouts</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:57">nb_channel_layouts</name></name> <operator pos:start="19:59" pos:end="19:60">==</operator> <literal type="number" pos:start="19:62" pos:end="19:62">1</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:18"><block_content pos:start="21:13" pos:end="21:18">

            <break pos:start="21:13" pos:end="21:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="25:5" pos:end="27:15"><if pos:start="25:5" pos:end="27:15">if <condition pos:start="25:8" pos:end="25:31">(<expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:9">i</name> <operator pos:start="25:11" pos:end="25:12">==</operator> <name pos:start="25:14" pos:end="25:30"><name pos:start="25:14" pos:end="25:19">filter</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:30">nb_inputs</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:15"><block_content pos:start="27:9" pos:end="27:15">

        <return pos:start="27:9" pos:end="27:15">return;</return></block_content></block></if></if_stmt>



    <for pos:start="31:5" pos:end="137:5">for <control pos:start="31:9" pos:end="31:44">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:39"><expr pos:start="31:17" pos:end="31:38"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:38"><name pos:start="31:21" pos:end="31:26">filter</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:38">nb_outputs</name></name></expr>;</condition> <incr pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><name pos:start="31:41" pos:end="31:41">i</name><operator pos:start="31:42" pos:end="31:43">++</operator></expr></incr>)</control> <block pos:start="31:46" pos:end="137:5">{<block_content pos:start="33:9" pos:end="135:71">

        <decl_stmt pos:start="33:9" pos:end="33:51"><decl pos:start="33:9" pos:end="33:50"><type pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:20">AVFilterLink</name> <modifier pos:start="33:22" pos:end="33:22">*</modifier></type><name pos:start="33:23" pos:end="33:29">outlink</name> <init pos:start="33:31" pos:end="33:50">= <expr pos:start="33:33" pos:end="33:50"><name pos:start="33:33" pos:end="33:50"><name pos:start="33:33" pos:end="33:38">filter</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:47">outputs</name><index pos:start="33:48" pos:end="33:50">[<expr pos:start="33:49" pos:end="33:49"><name pos:start="33:49" pos:end="33:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:70"><decl pos:start="35:9" pos:end="35:20"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:20">best_idx</name></decl>, <decl pos:start="35:23" pos:end="35:42"><type ref="prev" pos:start="35:9" pos:end="35:11"/><name pos:start="35:23" pos:end="35:32">best_score</name> <init pos:start="35:34" pos:end="35:42">= <expr pos:start="35:36" pos:end="35:42"><name pos:start="35:36" pos:end="35:42">INT_MIN</name></expr></init></decl>, <decl pos:start="35:45" pos:end="35:69"><type ref="prev" pos:start="35:9" pos:end="35:11"/><name pos:start="35:45" pos:end="35:59">best_count_diff</name> <init pos:start="35:61" pos:end="35:69">= <expr pos:start="35:63" pos:end="35:69"><name pos:start="35:63" pos:end="35:69">INT_MAX</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="39:9" pos:end="43:21"><if pos:start="39:9" pos:end="43:21">if <condition pos:start="39:12" pos:end="41:64">(<expr pos:start="39:13" pos:end="41:63"><name pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:19">outlink</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:25">type</name></name> <operator pos:start="39:27" pos:end="39:28">!=</operator> <name pos:start="39:30" pos:end="39:47">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="39:49" pos:end="39:50">||</operator>

            <name pos:start="41:13" pos:end="41:59"><name pos:start="41:13" pos:end="41:19">outlink</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:39">in_channel_layouts</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:59">nb_channel_layouts</name></name> <operator pos:start="41:61" pos:end="41:61">&lt;</operator> <literal type="number" pos:start="41:63" pos:end="41:63">2</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:21"><block_content pos:start="43:13" pos:end="43:21">

            <continue pos:start="43:13" pos:end="43:21">continue;</continue></block_content></block></if></if_stmt>



        <for pos:start="47:9" pos:end="131:9">for <control pos:start="47:13" pos:end="47:77">(<init pos:start="47:14" pos:end="47:19"><expr pos:start="47:14" pos:end="47:18"><name pos:start="47:14" pos:end="47:14">j</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>;</init> <condition pos:start="47:21" pos:end="47:72"><expr pos:start="47:21" pos:end="47:71"><name pos:start="47:21" pos:end="47:21">j</name> <operator pos:start="47:23" pos:end="47:23">&lt;</operator> <name pos:start="47:25" pos:end="47:71"><name pos:start="47:25" pos:end="47:31">outlink</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:51">in_channel_layouts</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:71">nb_channel_layouts</name></name></expr>;</condition> <incr pos:start="47:74" pos:end="47:76"><expr pos:start="47:74" pos:end="47:76"><name pos:start="47:74" pos:end="47:74">j</name><operator pos:start="47:75" pos:end="47:76">++</operator></expr></incr>)</control> <block pos:start="47:79" pos:end="131:9">{<block_content pos:start="49:13" pos:end="129:13">

            <decl_stmt pos:start="49:13" pos:end="49:82"><decl pos:start="49:13" pos:end="49:81"><type pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:20">uint64_t</name></type>  <name pos:start="49:23" pos:end="49:33">in_chlayout</name> <init pos:start="49:35" pos:end="49:81">= <expr pos:start="49:37" pos:end="49:81"><name pos:start="49:37" pos:end="49:81"><name pos:start="49:37" pos:end="49:40">link</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:61">out_channel_layouts</name><operator pos:start="49:62" pos:end="49:63">-&gt;</operator><name pos:start="49:64" pos:end="49:78">channel_layouts</name><index pos:start="49:79" pos:end="49:81">[<expr pos:start="49:80" pos:end="49:80"><literal type="number" pos:start="49:80" pos:end="49:80">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:84"><decl pos:start="51:13" pos:end="51:83"><type pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:20">uint64_t</name></type> <name pos:start="51:22" pos:end="51:33">out_chlayout</name> <init pos:start="51:35" pos:end="51:83">= <expr pos:start="51:37" pos:end="51:83"><name pos:start="51:37" pos:end="51:83"><name pos:start="51:37" pos:end="51:43">outlink</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:63">in_channel_layouts</name><operator pos:start="51:64" pos:end="51:65">-&gt;</operator><name pos:start="51:66" pos:end="51:80">channel_layouts</name><index pos:start="51:81" pos:end="51:83">[<expr pos:start="51:82" pos:end="51:82"><name pos:start="51:82" pos:end="51:82">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:83"><decl pos:start="53:13" pos:end="53:82"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type>  <name pos:start="53:18" pos:end="53:28">in_channels</name>      <init pos:start="53:35" pos:end="53:82">= <expr pos:start="53:37" pos:end="53:82"><call pos:start="53:37" pos:end="53:82"><name pos:start="53:37" pos:end="53:69">av_get_channel_layout_nb_channels</name><argument_list pos:start="53:70" pos:end="53:82">(<argument pos:start="53:71" pos:end="53:81"><expr pos:start="53:71" pos:end="53:81"><name pos:start="53:71" pos:end="53:81">in_chlayout</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:84"><decl pos:start="55:13" pos:end="55:83"><type pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">int</name></type> <name pos:start="55:17" pos:end="55:28">out_channels</name>      <init pos:start="55:35" pos:end="55:83">= <expr pos:start="55:37" pos:end="55:83"><call pos:start="55:37" pos:end="55:83"><name pos:start="55:37" pos:end="55:69">av_get_channel_layout_nb_channels</name><argument_list pos:start="55:70" pos:end="55:83">(<argument pos:start="55:71" pos:end="55:82"><expr pos:start="55:71" pos:end="55:82"><name pos:start="55:71" pos:end="55:82">out_chlayout</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="57:13" pos:end="57:63"><decl pos:start="57:13" pos:end="57:62"><type pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:15">int</name></type> <name pos:start="57:17" pos:end="57:26">count_diff</name>        <init pos:start="57:35" pos:end="57:62">= <expr pos:start="57:37" pos:end="57:62"><name pos:start="57:37" pos:end="57:48">out_channels</name> <operator pos:start="57:50" pos:end="57:50">-</operator> <name pos:start="57:52" pos:end="57:62">in_channels</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="59:13" pos:end="59:49"><decl pos:start="59:13" pos:end="59:32"><type pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">int</name></type> <name pos:start="59:17" pos:end="59:32">matched_channels</name></decl>, <decl pos:start="59:35" pos:end="59:48"><type ref="prev" pos:start="59:13" pos:end="59:15"/><name pos:start="59:35" pos:end="59:48">extra_channels</name></decl>;</decl_stmt>

            <decl_stmt pos:start="61:13" pos:end="61:26"><decl pos:start="61:13" pos:end="61:25"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:21">score</name> <init pos:start="61:23" pos:end="61:25">= <expr pos:start="61:25" pos:end="61:25"><literal type="number" pos:start="61:25" pos:end="61:25">0</literal></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="65:13" pos:end="65:38">/* channel substitution */</comment>

            <for pos:start="67:13" pos:end="89:13">for <control pos:start="67:17" pos:end="67:58">(<init pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:22"><name pos:start="67:18" pos:end="67:18">k</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</init> <condition pos:start="67:25" pos:end="67:53"><expr pos:start="67:25" pos:end="67:52"><name pos:start="67:25" pos:end="67:25">k</name> <operator pos:start="67:27" pos:end="67:27">&lt;</operator> <call pos:start="67:29" pos:end="67:52"><name pos:start="67:29" pos:end="67:42">FF_ARRAY_ELEMS</name><argument_list pos:start="67:43" pos:end="67:52">(<argument pos:start="67:44" pos:end="67:51"><expr pos:start="67:44" pos:end="67:51"><name pos:start="67:44" pos:end="67:51">ch_subst</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="67:55" pos:end="67:57"><expr pos:start="67:55" pos:end="67:57"><name pos:start="67:55" pos:end="67:55">k</name><operator pos:start="67:56" pos:end="67:57">++</operator></expr></incr>)</control> <block pos:start="67:60" pos:end="89:13">{<block_content pos:start="69:17" pos:end="87:17">

                <decl_stmt pos:start="69:17" pos:end="69:47"><decl pos:start="69:17" pos:end="69:46"><type pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:24">uint64_t</name></type> <name pos:start="69:26" pos:end="69:29">cmp0</name> <init pos:start="69:31" pos:end="69:46">= <expr pos:start="69:33" pos:end="69:46"><name pos:start="69:33" pos:end="69:46"><name pos:start="69:33" pos:end="69:40">ch_subst</name><index pos:start="69:41" pos:end="69:43">[<expr pos:start="69:42" pos:end="69:42"><name pos:start="69:42" pos:end="69:42">k</name></expr>]</index><index pos:start="69:44" pos:end="69:46">[<expr pos:start="69:45" pos:end="69:45"><literal type="number" pos:start="69:45" pos:end="69:45">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="71:17" pos:end="71:47"><decl pos:start="71:17" pos:end="71:46"><type pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:24">uint64_t</name></type> <name pos:start="71:26" pos:end="71:29">cmp1</name> <init pos:start="71:31" pos:end="71:46">= <expr pos:start="71:33" pos:end="71:46"><name pos:start="71:33" pos:end="71:46"><name pos:start="71:33" pos:end="71:40">ch_subst</name><index pos:start="71:41" pos:end="71:43">[<expr pos:start="71:42" pos:end="71:42"><name pos:start="71:42" pos:end="71:42">k</name></expr>]</index><index pos:start="71:44" pos:end="71:46">[<expr pos:start="71:45" pos:end="71:45"><literal type="number" pos:start="71:45" pos:end="71:45">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="73:17" pos:end="87:17"><if pos:start="73:17" pos:end="87:17">if <condition pos:start="73:20" pos:end="75:70">(<expr pos:start="73:21" pos:end="75:69"><operator pos:start="73:21" pos:end="73:21">(</operator> <name pos:start="73:23" pos:end="73:33">in_chlayout</name> <operator pos:start="73:35" pos:end="73:35">&amp;</operator> <name pos:start="73:37" pos:end="73:40">cmp0</name><operator pos:start="73:41" pos:end="73:41">)</operator> <operator pos:start="73:43" pos:end="73:44">&amp;&amp;</operator> <operator pos:start="73:46" pos:end="73:46">(</operator><operator pos:start="73:47" pos:end="73:47">!</operator><operator pos:start="73:48" pos:end="73:48">(</operator><name pos:start="73:49" pos:end="73:60">out_chlayout</name> <operator pos:start="73:62" pos:end="73:62">&amp;</operator> <name pos:start="73:64" pos:end="73:67">cmp0</name><operator pos:start="73:68" pos:end="73:68">)</operator><operator pos:start="73:69" pos:end="73:69">)</operator> <operator pos:start="73:71" pos:end="73:72">&amp;&amp;</operator>

                    <operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:33">out_chlayout</name> <operator pos:start="75:35" pos:end="75:35">&amp;</operator> <name pos:start="75:37" pos:end="75:40">cmp1</name><operator pos:start="75:41" pos:end="75:41">)</operator> <operator pos:start="75:43" pos:end="75:44">&amp;&amp;</operator> <operator pos:start="75:46" pos:end="75:46">(</operator><operator pos:start="75:47" pos:end="75:47">!</operator><operator pos:start="75:48" pos:end="75:48">(</operator> <name pos:start="75:50" pos:end="75:60">in_chlayout</name> <operator pos:start="75:62" pos:end="75:62">&amp;</operator> <name pos:start="75:64" pos:end="75:67">cmp1</name><operator pos:start="75:68" pos:end="75:68">)</operator><operator pos:start="75:69" pos:end="75:69">)</operator></expr>)</condition> <block pos:start="75:72" pos:end="87:17">{<block_content pos:start="77:21" pos:end="85:78">

                    <expr_stmt pos:start="77:21" pos:end="77:42"><expr pos:start="77:21" pos:end="77:41"><name pos:start="77:21" pos:end="77:31">in_chlayout</name>  <operator pos:start="77:34" pos:end="77:35">&amp;=</operator> <operator pos:start="77:37" pos:end="77:37">~</operator><name pos:start="77:38" pos:end="77:41">cmp0</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:42"><expr pos:start="79:21" pos:end="79:41"><name pos:start="79:21" pos:end="79:32">out_chlayout</name> <operator pos:start="79:34" pos:end="79:35">&amp;=</operator> <operator pos:start="79:37" pos:end="79:37">~</operator><name pos:start="79:38" pos:end="79:41">cmp1</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="81:21" pos:end="83:55">/* add score for channel match, minus a deduction for

                       having to do the substitution */</comment>

                    <expr_stmt pos:start="85:21" pos:end="85:78"><expr pos:start="85:21" pos:end="85:77"><name pos:start="85:21" pos:end="85:25">score</name> <operator pos:start="85:27" pos:end="85:28">+=</operator> <literal type="number" pos:start="85:30" pos:end="85:31">10</literal> <operator pos:start="85:33" pos:end="85:33">*</operator> <call pos:start="85:35" pos:end="85:73"><name pos:start="85:35" pos:end="85:67">av_get_channel_layout_nb_channels</name><argument_list pos:start="85:68" pos:end="85:73">(<argument pos:start="85:69" pos:end="85:72"><expr pos:start="85:69" pos:end="85:72"><name pos:start="85:69" pos:end="85:72">cmp1</name></expr></argument>)</argument_list></call> <operator pos:start="85:75" pos:end="85:75">-</operator> <literal type="number" pos:start="85:77" pos:end="85:77">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <comment type="block" pos:start="93:13" pos:end="93:53">/* no penalty for LFE channel mismatch */</comment>

            <if_stmt pos:start="95:13" pos:end="99:28"><if pos:start="95:13" pos:end="99:28">if <condition pos:start="95:16" pos:end="97:53">( <expr pos:start="95:18" pos:end="97:52"><operator pos:start="95:18" pos:end="95:18">(</operator><name pos:start="95:19" pos:end="95:29">in_chlayout</name> <operator pos:start="95:31" pos:end="95:31">&amp;</operator> <name pos:start="95:33" pos:end="95:51">AV_CH_LOW_FREQUENCY</name><operator pos:start="95:52" pos:end="95:52">)</operator> <operator pos:start="95:54" pos:end="95:55">&amp;&amp;</operator>

                <operator pos:start="97:17" pos:end="97:17">(</operator><name pos:start="97:18" pos:end="97:29">out_chlayout</name> <operator pos:start="97:31" pos:end="97:31">&amp;</operator> <name pos:start="97:33" pos:end="97:51">AV_CH_LOW_FREQUENCY</name><operator pos:start="97:52" pos:end="97:52">)</operator></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:28"><block_content pos:start="99:17" pos:end="99:28">

                <expr_stmt pos:start="99:17" pos:end="99:28"><expr pos:start="99:17" pos:end="99:27"><name pos:start="99:17" pos:end="99:21">score</name> <operator pos:start="99:23" pos:end="99:24">+=</operator> <literal type="number" pos:start="99:26" pos:end="99:27">10</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:49"><expr pos:start="101:13" pos:end="101:48"><name pos:start="101:13" pos:end="101:23">in_chlayout</name>  <operator pos:start="101:26" pos:end="101:27">&amp;=</operator> <operator pos:start="101:29" pos:end="101:29">~</operator><name pos:start="101:30" pos:end="101:48">AV_CH_LOW_FREQUENCY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:49"><expr pos:start="103:13" pos:end="103:48"><name pos:start="103:13" pos:end="103:24">out_chlayout</name> <operator pos:start="103:26" pos:end="103:27">&amp;=</operator> <operator pos:start="103:29" pos:end="103:29">~</operator><name pos:start="103:30" pos:end="103:48">AV_CH_LOW_FREQUENCY</name></expr>;</expr_stmt>



            <expr_stmt pos:start="107:13" pos:end="109:79"><expr pos:start="107:13" pos:end="109:78"><name pos:start="107:13" pos:end="107:28">matched_channels</name> <operator pos:start="107:30" pos:end="107:30">=</operator> <call pos:start="107:32" pos:end="109:78"><name pos:start="107:32" pos:end="107:64">av_get_channel_layout_nb_channels</name><argument_list pos:start="107:65" pos:end="109:78">(<argument pos:start="107:66" pos:end="109:77"><expr pos:start="107:66" pos:end="109:77"><name pos:start="107:66" pos:end="107:76">in_chlayout</name> <operator pos:start="107:78" pos:end="107:78">&amp;</operator>

                                                                 <name pos:start="109:66" pos:end="109:77">out_chlayout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="113:81"><expr pos:start="111:13" pos:end="113:80"><name pos:start="111:13" pos:end="111:26">extra_channels</name>   <operator pos:start="111:30" pos:end="111:30">=</operator> <call pos:start="111:32" pos:end="113:80"><name pos:start="111:32" pos:end="111:64">av_get_channel_layout_nb_channels</name><argument_list pos:start="111:65" pos:end="113:80">(<argument pos:start="111:66" pos:end="113:79"><expr pos:start="111:66" pos:end="113:79"><name pos:start="111:66" pos:end="111:77">out_chlayout</name> <operator pos:start="111:79" pos:end="111:79">&amp;</operator>

                                                                 <operator pos:start="113:66" pos:end="113:66">(</operator><operator pos:start="113:67" pos:end="113:67">~</operator><name pos:start="113:68" pos:end="113:78">in_chlayout</name><operator pos:start="113:79" pos:end="113:79">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:64"><expr pos:start="115:13" pos:end="115:63"><name pos:start="115:13" pos:end="115:17">score</name> <operator pos:start="115:19" pos:end="115:20">+=</operator> <literal type="number" pos:start="115:22" pos:end="115:23">10</literal> <operator pos:start="115:25" pos:end="115:25">*</operator> <name pos:start="115:27" pos:end="115:42">matched_channels</name> <operator pos:start="115:44" pos:end="115:44">-</operator> <literal type="number" pos:start="115:46" pos:end="115:46">5</literal> <operator pos:start="115:48" pos:end="115:48">*</operator> <name pos:start="115:50" pos:end="115:63">extra_channels</name></expr>;</expr_stmt>



            <if_stmt pos:start="119:13" pos:end="129:13"><if pos:start="119:13" pos:end="129:13">if <condition pos:start="119:16" pos:end="121:70">(<expr pos:start="119:17" pos:end="121:69"><name pos:start="119:17" pos:end="119:21">score</name> <operator pos:start="119:23" pos:end="119:23">&gt;</operator> <name pos:start="119:25" pos:end="119:34">best_score</name> <operator pos:start="119:36" pos:end="119:37">||</operator>

                <operator pos:start="121:17" pos:end="121:17">(</operator><name pos:start="121:18" pos:end="121:27">count_diff</name> <operator pos:start="121:29" pos:end="121:29">&lt;</operator> <name pos:start="121:31" pos:end="121:45">best_count_diff</name> <operator pos:start="121:47" pos:end="121:48">&amp;&amp;</operator> <name pos:start="121:50" pos:end="121:54">score</name> <operator pos:start="121:56" pos:end="121:57">==</operator> <name pos:start="121:59" pos:end="121:68">best_score</name><operator pos:start="121:69" pos:end="121:69">)</operator></expr>)</condition> <block pos:start="121:72" pos:end="129:13">{<block_content pos:start="123:17" pos:end="127:45">

                <expr_stmt pos:start="123:17" pos:end="123:35"><expr pos:start="123:17" pos:end="123:34"><name pos:start="123:17" pos:end="123:26">best_score</name> <operator pos:start="123:28" pos:end="123:28">=</operator> <name pos:start="123:30" pos:end="123:34">score</name></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:31"><expr pos:start="125:17" pos:end="125:30"><name pos:start="125:17" pos:end="125:24">best_idx</name>   <operator pos:start="125:28" pos:end="125:28">=</operator> <name pos:start="125:30" pos:end="125:30">j</name></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:45"><expr pos:start="127:17" pos:end="127:44"><name pos:start="127:17" pos:end="127:31">best_count_diff</name> <operator pos:start="127:33" pos:end="127:33">=</operator> <name pos:start="127:35" pos:end="127:44">count_diff</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="133:9" pos:end="135:71"><expr pos:start="133:9" pos:end="135:70"><call pos:start="133:9" pos:end="135:70"><name pos:start="133:9" pos:end="133:14">FFSWAP</name><argument_list pos:start="133:15" pos:end="135:70">(<argument pos:start="133:16" pos:end="133:23"><expr pos:start="133:16" pos:end="133:23"><name pos:start="133:16" pos:end="133:23">uint64_t</name></expr></argument>, <argument pos:start="133:26" pos:end="133:72"><expr pos:start="133:26" pos:end="133:72"><name pos:start="133:26" pos:end="133:72"><name pos:start="133:26" pos:end="133:32">outlink</name><operator pos:start="133:33" pos:end="133:34">-&gt;</operator><name pos:start="133:35" pos:end="133:52">in_channel_layouts</name><operator pos:start="133:53" pos:end="133:54">-&gt;</operator><name pos:start="133:55" pos:end="133:69">channel_layouts</name><index pos:start="133:70" pos:end="133:72">[<expr pos:start="133:71" pos:end="133:71"><literal type="number" pos:start="133:71" pos:end="133:71">0</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="135:16" pos:end="135:69"><expr pos:start="135:16" pos:end="135:69"><name pos:start="135:16" pos:end="135:69"><name pos:start="135:16" pos:end="135:22">outlink</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:42">in_channel_layouts</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:59">channel_layouts</name><index pos:start="135:60" pos:end="135:69">[<expr pos:start="135:61" pos:end="135:68"><name pos:start="135:61" pos:end="135:68">best_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



</block_content>}</block></function>
</unit>
