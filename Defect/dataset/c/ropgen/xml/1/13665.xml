<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13665.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">bdrv_write_compressed</name><parameter_list pos:start="1:26" pos:end="3:61">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:66"><decl pos:start="1:49" pos:end="1:66"><type pos:start="1:49" pos:end="1:66"><name pos:start="1:49" pos:end="1:55">int64_t</name></type> <name pos:start="1:57" pos:end="1:66">sector_num</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:44"><decl pos:start="3:27" pos:end="3:44"><type pos:start="3:27" pos:end="3:44"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:39">uint8_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">buf</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:60"><decl pos:start="3:47" pos:end="3:60"><type pos:start="3:47" pos:end="3:60"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:60">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:71">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">BlockDriver</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">drv</name> <init pos:start="7:22" pos:end="7:30">= <expr pos:start="7:24" pos:end="7:30"><name pos:start="7:24" pos:end="7:30"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:30">drv</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="11:26"><if pos:start="9:5" pos:end="11:26">if <condition pos:start="9:8" pos:end="9:13">(<expr pos:start="9:9" pos:end="9:12"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:12">drv</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:26"><block_content pos:start="11:9" pos:end="11:26">

        <return pos:start="11:9" pos:end="11:26">return <expr pos:start="11:16" pos:end="11:25"><operator pos:start="11:16" pos:end="11:16">-</operator><name pos:start="11:17" pos:end="11:25">ENOMEDIUM</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="15:24"><if pos:start="13:5" pos:end="15:24">if <condition pos:start="13:8" pos:end="13:36">(<expr pos:start="13:9" pos:end="13:35"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:35"><name pos:start="13:10" pos:end="13:12">drv</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:35">bdrv_write_compressed</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:24"><block_content pos:start="15:9" pos:end="15:24">

        <return pos:start="15:9" pos:end="15:24">return <expr pos:start="15:16" pos:end="15:23"><operator pos:start="15:16" pos:end="15:16">-</operator><name pos:start="15:17" pos:end="15:23">ENOTSUP</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="19:20"><if pos:start="17:5" pos:end="19:20">if <condition pos:start="17:8" pos:end="17:55">(<expr pos:start="17:9" pos:end="17:54"><call pos:start="17:9" pos:end="17:54"><name pos:start="17:9" pos:end="17:26">bdrv_check_request</name><argument_list pos:start="17:27" pos:end="17:54">(<argument pos:start="17:28" pos:end="17:29"><expr pos:start="17:28" pos:end="17:29"><name pos:start="17:28" pos:end="17:29">bs</name></expr></argument>, <argument pos:start="17:32" pos:end="17:41"><expr pos:start="17:32" pos:end="17:41"><name pos:start="17:32" pos:end="17:41">sector_num</name></expr></argument>, <argument pos:start="17:44" pos:end="17:53"><expr pos:start="17:44" pos:end="17:53"><name pos:start="17:44" pos:end="17:53">nb_sectors</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:20"><block_content pos:start="19:9" pos:end="19:20">

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:19">EIO</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:27">(<expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:10">bs</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:26">dirty_tracking</name></name></expr>)</condition> <block pos:start="23:29" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:56">

        <expr_stmt pos:start="25:9" pos:end="25:56"><expr pos:start="25:9" pos:end="25:55"><call pos:start="25:9" pos:end="25:55"><name pos:start="25:9" pos:end="25:24">set_dirty_bitmap</name><argument_list pos:start="25:25" pos:end="25:55">(<argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><name pos:start="25:26" pos:end="25:27">bs</name></expr></argument>, <argument pos:start="25:30" pos:end="25:39"><expr pos:start="25:30" pos:end="25:39"><name pos:start="25:30" pos:end="25:39">sector_num</name></expr></argument>, <argument pos:start="25:42" pos:end="25:51"><expr pos:start="25:42" pos:end="25:51"><name pos:start="25:42" pos:end="25:51">nb_sectors</name></expr></argument>, <argument pos:start="25:54" pos:end="25:54"><expr pos:start="25:54" pos:end="25:54"><literal type="number" pos:start="25:54" pos:end="25:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="31:5" pos:end="31:71">return <expr pos:start="31:12" pos:end="31:70"><call pos:start="31:12" pos:end="31:70"><name pos:start="31:12" pos:end="31:37"><name pos:start="31:12" pos:end="31:14">drv</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:37">bdrv_write_compressed</name></name><argument_list pos:start="31:38" pos:end="31:70">(<argument pos:start="31:39" pos:end="31:40"><expr pos:start="31:39" pos:end="31:40"><name pos:start="31:39" pos:end="31:40">bs</name></expr></argument>, <argument pos:start="31:43" pos:end="31:52"><expr pos:start="31:43" pos:end="31:52"><name pos:start="31:43" pos:end="31:52">sector_num</name></expr></argument>, <argument pos:start="31:55" pos:end="31:57"><expr pos:start="31:55" pos:end="31:57"><name pos:start="31:55" pos:end="31:57">buf</name></expr></argument>, <argument pos:start="31:60" pos:end="31:69"><expr pos:start="31:60" pos:end="31:69"><name pos:start="31:60" pos:end="31:69">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
