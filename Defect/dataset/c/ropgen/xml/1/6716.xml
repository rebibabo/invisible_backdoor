<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6716.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">QIOChannel</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:48">nbd_negotiate_handle_starttls</name><parameter_list pos:start="1:49" pos:end="3:65">(<parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><name pos:start="1:50" pos:end="1:58">NBDClient</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:66">client</name></decl></parameter>,

                                                 <parameter pos:start="3:50" pos:end="3:64"><decl pos:start="3:50" pos:end="3:64"><type pos:start="3:50" pos:end="3:64"><name pos:start="3:50" pos:end="3:57">uint32_t</name></type> <name pos:start="3:59" pos:end="3:64">length</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="91:1">{<block_content pos:start="7:5" pos:end="89:29">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">QIOChannel</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">ioc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">QIOChannelTLS</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">tioc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:30">NBDTLSHandshakeData</name></name></type> <name pos:start="11:32" pos:end="11:35">data</name> <init pos:start="11:37" pos:end="11:43">= <expr pos:start="11:39" pos:end="11:43"><block pos:start="11:39" pos:end="11:43">{ <expr pos:start="11:41" pos:end="11:41"><literal type="number" pos:start="11:41" pos:end="11:41">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><call pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:9">TRACE</name><argument_list pos:start="15:10" pos:end="15:27">(<argument pos:start="15:11" pos:end="15:26"><expr pos:start="15:11" pos:end="15:26"><literal type="string" pos:start="15:11" pos:end="15:26">"Setting up TLS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:7">ioc</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:21"><name pos:start="17:11" pos:end="17:16">client</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:21">ioc</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:14">length</name></expr>)</condition> <block pos:start="19:17" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:20">

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:59">(<expr pos:start="21:13" pos:end="21:58"><call pos:start="21:13" pos:end="21:48"><name pos:start="21:13" pos:end="21:35">nbd_negotiate_drop_sync</name><argument_list pos:start="21:36" pos:end="21:48">(<argument pos:start="21:37" pos:end="21:39"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:39">ioc</name></expr></argument>, <argument pos:start="21:42" pos:end="21:47"><expr pos:start="21:42" pos:end="21:47"><name pos:start="21:42" pos:end="21:47">length</name></expr></argument>)</argument_list></call> <operator pos:start="21:50" pos:end="21:51">!=</operator> <name pos:start="21:53" pos:end="21:58">length</name></expr>)</condition> <block pos:start="21:61" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:24">

            <return pos:start="23:13" pos:end="23:24">return <expr pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:75"><expr pos:start="27:9" pos:end="27:74"><call pos:start="27:9" pos:end="27:74"><name pos:start="27:9" pos:end="27:30">nbd_negotiate_send_rep</name><argument_list pos:start="27:31" pos:end="27:74">(<argument pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:34">ioc</name></expr></argument>, <argument pos:start="27:37" pos:end="27:55"><expr pos:start="27:37" pos:end="27:55"><name pos:start="27:37" pos:end="27:55">NBD_REP_ERR_INVALID</name></expr></argument>, <argument pos:start="27:58" pos:end="27:73"><expr pos:start="27:58" pos:end="27:73"><name pos:start="27:58" pos:end="27:73">NBD_OPT_STARTTLS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:20">return <expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:71"><expr pos:start="35:5" pos:end="35:70"><call pos:start="35:5" pos:end="35:70"><name pos:start="35:5" pos:end="35:26">nbd_negotiate_send_rep</name><argument_list pos:start="35:27" pos:end="35:70">(<argument pos:start="35:28" pos:end="35:38"><expr pos:start="35:28" pos:end="35:38"><name pos:start="35:28" pos:end="35:38"><name pos:start="35:28" pos:end="35:33">client</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:38">ioc</name></name></expr></argument>, <argument pos:start="35:41" pos:end="35:51"><expr pos:start="35:41" pos:end="35:51"><name pos:start="35:41" pos:end="35:51">NBD_REP_ACK</name></expr></argument>, <argument pos:start="35:54" pos:end="35:69"><expr pos:start="35:54" pos:end="35:69"><name pos:start="35:54" pos:end="35:69">NBD_OPT_STARTTLS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="45:44"><expr pos:start="39:5" pos:end="45:43"><name pos:start="39:5" pos:end="39:8">tioc</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="45:43"><name pos:start="39:12" pos:end="39:37">qio_channel_tls_new_server</name><argument_list pos:start="39:38" pos:end="45:43">(<argument pos:start="39:39" pos:end="39:41"><expr pos:start="39:39" pos:end="39:41"><name pos:start="39:39" pos:end="39:41">ioc</name></expr></argument>,

                                      <argument pos:start="41:39" pos:end="41:54"><expr pos:start="41:39" pos:end="41:54"><name pos:start="41:39" pos:end="41:54"><name pos:start="41:39" pos:end="41:44">client</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:54">tlscreds</name></name></expr></argument>,

                                      <argument pos:start="43:39" pos:end="43:56"><expr pos:start="43:39" pos:end="43:56"><name pos:start="43:39" pos:end="43:56"><name pos:start="43:39" pos:end="43:44">client</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:56">tlsaclname</name></name></expr></argument>,

                                      <argument pos:start="45:39" pos:end="45:42"><expr pos:start="45:39" pos:end="45:42"><name pos:start="45:39" pos:end="45:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:14">(<expr pos:start="47:9" pos:end="47:13"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:13">tioc</name></expr>)</condition> <block pos:start="47:16" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:20">

        <return pos:start="49:9" pos:end="49:20">return <expr pos:start="49:16" pos:end="49:19"><name pos:start="49:16" pos:end="49:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:36"><expr pos:start="55:5" pos:end="55:35"><call pos:start="55:5" pos:end="55:35"><name pos:start="55:5" pos:end="55:9">TRACE</name><argument_list pos:start="55:10" pos:end="55:35">(<argument pos:start="55:11" pos:end="55:34"><expr pos:start="55:11" pos:end="55:34"><literal type="string" pos:start="55:11" pos:end="55:34">"Starting TLS handshake"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:65"><expr pos:start="57:5" pos:end="57:64"><name pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:8">data</name><operator pos:start="57:9" pos:end="57:9">.</operator><name pos:start="57:10" pos:end="57:13">loop</name></name> <operator pos:start="57:15" pos:end="57:15">=</operator> <call pos:start="57:17" pos:end="57:64"><name pos:start="57:17" pos:end="57:31">g_main_loop_new</name><argument_list pos:start="57:32" pos:end="57:64">(<argument pos:start="57:33" pos:end="57:56"><expr pos:start="57:33" pos:end="57:56"><call pos:start="57:33" pos:end="57:56"><name pos:start="57:33" pos:end="57:54">g_main_context_default</name><argument_list pos:start="57:55" pos:end="57:56">()</argument_list></call></expr></argument>, <argument pos:start="57:59" pos:end="57:63"><expr pos:start="57:59" pos:end="57:63"><name pos:start="57:59" pos:end="57:63">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="65:36"><expr pos:start="59:5" pos:end="65:35"><call pos:start="59:5" pos:end="65:35"><name pos:start="59:5" pos:end="59:29">qio_channel_tls_handshake</name><argument_list pos:start="59:30" pos:end="65:35">(<argument pos:start="59:31" pos:end="59:34"><expr pos:start="59:31" pos:end="59:34"><name pos:start="59:31" pos:end="59:34">tioc</name></expr></argument>,

                              <argument pos:start="61:31" pos:end="61:47"><expr pos:start="61:31" pos:end="61:47"><name pos:start="61:31" pos:end="61:47">nbd_tls_handshake</name></expr></argument>,

                              <argument pos:start="63:31" pos:end="63:35"><expr pos:start="63:31" pos:end="63:35"><operator pos:start="63:31" pos:end="63:31">&amp;</operator><name pos:start="63:32" pos:end="63:35">data</name></expr></argument>,

                              <argument pos:start="65:31" pos:end="65:34"><expr pos:start="65:31" pos:end="65:34"><name pos:start="65:31" pos:end="65:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:23">(<expr pos:start="69:9" pos:end="69:22"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:22"><name pos:start="69:10" pos:end="69:13">data</name><operator pos:start="69:14" pos:end="69:14">.</operator><name pos:start="69:15" pos:end="69:22">complete</name></name></expr>)</condition> <block pos:start="69:25" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:35">

        <expr_stmt pos:start="71:9" pos:end="71:35"><expr pos:start="71:9" pos:end="71:34"><call pos:start="71:9" pos:end="71:34"><name pos:start="71:9" pos:end="71:23">g_main_loop_run</name><argument_list pos:start="71:24" pos:end="71:34">(<argument pos:start="71:25" pos:end="71:33"><expr pos:start="71:25" pos:end="71:33"><name pos:start="71:25" pos:end="71:33"><name pos:start="71:25" pos:end="71:28">data</name><operator pos:start="71:29" pos:end="71:29">.</operator><name pos:start="71:30" pos:end="71:33">loop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:33"><expr pos:start="75:5" pos:end="75:32"><call pos:start="75:5" pos:end="75:32"><name pos:start="75:5" pos:end="75:21">g_main_loop_unref</name><argument_list pos:start="75:22" pos:end="75:32">(<argument pos:start="75:23" pos:end="75:31"><expr pos:start="75:23" pos:end="75:31"><name pos:start="75:23" pos:end="75:31"><name pos:start="75:23" pos:end="75:26">data</name><operator pos:start="75:27" pos:end="75:27">.</operator><name pos:start="75:28" pos:end="75:31">loop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="85:5">if <condition pos:start="77:8" pos:end="77:19">(<expr pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:12">data</name><operator pos:start="77:13" pos:end="77:13">.</operator><name pos:start="77:14" pos:end="77:18">error</name></name></expr>)</condition> <block pos:start="77:21" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:20">

        <expr_stmt pos:start="79:9" pos:end="79:35"><expr pos:start="79:9" pos:end="79:34"><call pos:start="79:9" pos:end="79:34"><name pos:start="79:9" pos:end="79:20">object_unref</name><argument_list pos:start="79:21" pos:end="79:34">(<argument pos:start="79:22" pos:end="79:33"><expr pos:start="79:22" pos:end="79:33"><call pos:start="79:22" pos:end="79:33"><name pos:start="79:22" pos:end="79:27">OBJECT</name><argument_list pos:start="79:28" pos:end="79:33">(<argument pos:start="79:29" pos:end="79:32"><expr pos:start="79:29" pos:end="79:32"><name pos:start="79:29" pos:end="79:32">tioc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><call pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:18">error_free</name><argument_list pos:start="81:19" pos:end="81:30">(<argument pos:start="81:20" pos:end="81:29"><expr pos:start="81:20" pos:end="81:29"><name pos:start="81:20" pos:end="81:29"><name pos:start="81:20" pos:end="81:23">data</name><operator pos:start="81:24" pos:end="81:24">.</operator><name pos:start="81:25" pos:end="81:29">error</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:20">return <expr pos:start="83:16" pos:end="83:19"><name pos:start="83:16" pos:end="83:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="89:5" pos:end="89:29">return <expr pos:start="89:12" pos:end="89:28"><call pos:start="89:12" pos:end="89:28"><name pos:start="89:12" pos:end="89:22">QIO_CHANNEL</name><argument_list pos:start="89:23" pos:end="89:28">(<argument pos:start="89:24" pos:end="89:27"><expr pos:start="89:24" pos:end="89:27"><name pos:start="89:24" pos:end="89:27">tioc</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
