<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13096.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:38">yuv2rgb565_1</name>)<parameter_list pos:start="1:40" pos:end="11:57">(<parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:50">SwsContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">c</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:75"><decl pos:start="1:56" pos:end="1:75"><type pos:start="1:56" pos:end="1:75"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:69">uint16_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">buf0</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:61"><decl pos:start="3:41" pos:end="3:61"><type pos:start="3:41" pos:end="3:61"><specifier pos:start="3:41" pos:end="3:45">const</specifier> <name pos:start="3:47" pos:end="3:54">uint16_t</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:61">ubuf0</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:84"><decl pos:start="3:64" pos:end="3:84"><type pos:start="3:64" pos:end="3:84"><specifier pos:start="3:64" pos:end="3:68">const</specifier> <name pos:start="3:70" pos:end="3:77">uint16_t</name> <modifier pos:start="3:79" pos:end="3:79">*</modifier></type><name pos:start="3:80" pos:end="3:84">ubuf1</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:61"><decl pos:start="5:41" pos:end="5:61"><type pos:start="5:41" pos:end="5:61"><specifier pos:start="5:41" pos:end="5:45">const</specifier> <name pos:start="5:47" pos:end="5:54">uint16_t</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:61">vbuf0</name></decl></parameter>, <parameter pos:start="5:64" pos:end="5:84"><decl pos:start="5:64" pos:end="5:84"><type pos:start="5:64" pos:end="5:84"><specifier pos:start="5:64" pos:end="5:68">const</specifier> <name pos:start="5:70" pos:end="5:77">uint16_t</name> <modifier pos:start="5:79" pos:end="5:79">*</modifier></type><name pos:start="5:80" pos:end="5:84">vbuf1</name></decl></parameter>,

                                        <parameter pos:start="7:41" pos:end="7:61"><decl pos:start="7:41" pos:end="7:61"><type pos:start="7:41" pos:end="7:61"><specifier pos:start="7:41" pos:end="7:45">const</specifier> <name pos:start="7:47" pos:end="7:54">uint16_t</name> <modifier pos:start="7:56" pos:end="7:56">*</modifier></type><name pos:start="7:57" pos:end="7:61">abuf0</name></decl></parameter>, <parameter pos:start="7:64" pos:end="7:76"><decl pos:start="7:64" pos:end="7:76"><type pos:start="7:64" pos:end="7:76"><name pos:start="7:64" pos:end="7:70">uint8_t</name> <modifier pos:start="7:72" pos:end="7:72">*</modifier></type><name pos:start="7:73" pos:end="7:76">dest</name></decl></parameter>,

                                        <parameter pos:start="9:41" pos:end="9:48"><decl pos:start="9:41" pos:end="9:48"><type pos:start="9:41" pos:end="9:48"><name pos:start="9:41" pos:end="9:43">int</name></type> <name pos:start="9:45" pos:end="9:48">dstW</name></decl></parameter>, <parameter pos:start="9:51" pos:end="9:61"><decl pos:start="9:51" pos:end="9:61"><type pos:start="9:51" pos:end="9:61"><name pos:start="9:51" pos:end="9:53">int</name></type> <name pos:start="9:55" pos:end="9:61">uvalpha</name></decl></parameter>, <parameter pos:start="9:64" pos:end="9:89"><decl pos:start="9:64" pos:end="9:89"><type pos:start="9:64" pos:end="9:89"><name pos:start="9:64" pos:end="9:79"><name pos:start="9:64" pos:end="9:67">enum</name> <name pos:start="9:69" pos:end="9:79">PixelFormat</name></name></type> <name pos:start="9:81" pos:end="9:89">dstFormat</name></decl></parameter>,

                                        <parameter pos:start="11:41" pos:end="11:49"><decl pos:start="11:41" pos:end="11:49"><type pos:start="11:41" pos:end="11:49"><name pos:start="11:41" pos:end="11:43">int</name></type> <name pos:start="11:45" pos:end="11:49">flags</name></decl></parameter>, <parameter pos:start="11:52" pos:end="11:56"><decl pos:start="11:52" pos:end="11:56"><type pos:start="11:52" pos:end="11:56"><name pos:start="11:52" pos:end="11:54">int</name></type> <name pos:start="11:56" pos:end="11:56">y</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="99:1">{<block_content pos:start="15:5" pos:end="97:5">

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:35"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">x86_reg</name></type> <name pos:start="15:13" pos:end="15:18">uv_off</name> <init pos:start="15:20" pos:end="15:35">= <expr pos:start="15:22" pos:end="15:35"><name pos:start="15:22" pos:end="15:30"><name pos:start="15:22" pos:end="15:22">c</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:30">uv_off</name></name> <operator pos:start="15:32" pos:end="15:33">&lt;&lt;</operator> <literal type="number" pos:start="15:35" pos:end="15:35">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:20"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:18">uint16_t</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:24">buf1</name><init pos:start="17:25" pos:end="17:30">= <expr pos:start="17:27" pos:end="17:30"><name pos:start="17:27" pos:end="17:30">buf0</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="17:33" pos:end="17:60">//FIXME needed for RGB1/BGR1</comment>



    <if_stmt pos:start="21:5" pos:end="97:5"><if pos:start="21:5" pos:end="59:5">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:15">uvalpha</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:22">2048</literal></expr>)</condition> <block pos:start="21:25" pos:end="59:5">{<block_content pos:start="23:9" pos:end="57:10"> <comment type="line" pos:start="21:27" pos:end="21:111">// note this is not correct (shifts chrominance by 0.5 pixels) but it is a bit faster</comment>

        <asm pos:start="23:9" pos:end="57:10">__asm__ <specifier pos:start="23:17" pos:end="23:24">volatile</specifier>(

            "mov %%"REG_b", "ESP_OFFSET"(%5)        \n\t"

            "mov        %4, %%"REG_b"               \n\t"

            "push %%"REG_BP"                        \n\t"

            YSCALEYUV2RGB1(%%REGBP, %5, %6)

            "pxor    %%mm7, %%mm7                   \n\t"

            <comment type="block" pos:start="35:13" pos:end="35:50">/* mm2=B, %%mm4=G, %%mm5=R, %%mm7=0 */</comment>

<cpp:ifdef pos:start="37:1" pos:end="37:18">#<cpp:directive pos:start="37:2" pos:end="37:6">ifdef</cpp:directive> <name pos:start="37:8" pos:end="37:18">DITHER1XBPP</name></cpp:ifdef>

            "paddusb "BLUE_DITHER"(%5), %%mm2      \n\t"

            "paddusb "GREEN_DITHER"(%5), %%mm4      \n\t"

            "paddusb "RED_DITHER"(%5), %%mm5      \n\t"

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

            WRITERGB16(%%REGb, 8280(%5), %%REGBP)

            "pop %%"REG_BP"                         \n\t"

            "mov "ESP_OFFSET"(%5), %%"REG_b"        \n\t"

            :: "c" (buf0), "d" (buf1), "S" (ubuf0), "D" (ubuf1), "m" (dest),

               "a" (&amp;c-&gt;redDither), "m"(uv_off)

        );</asm>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="97:5">else <block pos:start="59:12" pos:end="97:5">{<block_content pos:start="61:9" pos:end="95:10">

        <asm pos:start="61:9" pos:end="95:10">__asm__ <specifier pos:start="61:17" pos:end="61:24">volatile</specifier>(

            "mov %%"REG_b", "ESP_OFFSET"(%5)        \n\t"

            "mov        %4, %%"REG_b"               \n\t"

            "push %%"REG_BP"                        \n\t"

            YSCALEYUV2RGB1b(%%REGBP, %5, %6)

            "pxor    %%mm7, %%mm7                   \n\t"

            <comment type="block" pos:start="73:13" pos:end="73:50">/* mm2=B, %%mm4=G, %%mm5=R, %%mm7=0 */</comment>

<cpp:ifdef pos:start="75:1" pos:end="75:18">#<cpp:directive pos:start="75:2" pos:end="75:6">ifdef</cpp:directive> <name pos:start="75:8" pos:end="75:18">DITHER1XBPP</name></cpp:ifdef>

            "paddusb "BLUE_DITHER"(%5), %%mm2      \n\t"

            "paddusb "GREEN_DITHER"(%5), %%mm4      \n\t"

            "paddusb "RED_DITHER"(%5), %%mm5      \n\t"

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>

            WRITERGB16(%%REGb, 8280(%5), %%REGBP)

            "pop %%"REG_BP"                         \n\t"

            "mov "ESP_OFFSET"(%5), %%"REG_b"        \n\t"

            :: "c" (buf0), "d" (buf1), "S" (ubuf0), "D" (ubuf1), "m" (dest),

               "a" (&amp;c-&gt;redDither), "m"(uv_off)

        );</asm>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
