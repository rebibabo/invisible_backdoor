<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15741.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:45">cirrus_mem_writeb_mode4and5_16bpp</name><parameter_list pos:start="1:46" pos:end="7:65">(<parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><name pos:start="1:47" pos:end="1:60">CirrusVGAState</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type> <name pos:start="1:64" pos:end="1:64">s</name></decl></parameter>,

					      <parameter pos:start="3:47" pos:end="3:59"><decl pos:start="3:47" pos:end="3:59"><type pos:start="3:47" pos:end="3:59"><name pos:start="3:47" pos:end="3:54">unsigned</name></type> <name pos:start="3:56" pos:end="3:59">mode</name></decl></parameter>,

					      <parameter pos:start="5:47" pos:end="5:61"><decl pos:start="5:47" pos:end="5:61"><type pos:start="5:47" pos:end="5:61"><name pos:start="5:47" pos:end="5:54">unsigned</name></type> <name pos:start="5:56" pos:end="5:61">offset</name></decl></parameter>,

					      <parameter pos:start="7:47" pos:end="7:64"><decl pos:start="7:47" pos:end="7:64"><type pos:start="7:47" pos:end="7:64"><name pos:start="7:47" pos:end="7:54">uint32_t</name></type> <name pos:start="7:56" pos:end="7:64">mem_value</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="47:1">{<block_content pos:start="11:5" pos:end="45:64">

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">x</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:16">val</name> <init pos:start="13:18" pos:end="13:28">= <expr pos:start="13:20" pos:end="13:28"><name pos:start="13:20" pos:end="13:28">mem_value</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:16">dst</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:7">dst</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <name pos:start="19:11" pos:end="19:21"><name pos:start="19:11" pos:end="19:11">s</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:21">vram_ptr</name></name> <operator pos:start="19:23" pos:end="19:23">+</operator> <name pos:start="19:25" pos:end="19:30">offset</name></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="41:5">for <control pos:start="21:9" pos:end="21:27">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">x</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:21"><name pos:start="21:17" pos:end="21:17">x</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <literal type="number" pos:start="21:21" pos:end="21:21">8</literal></expr>;</condition> <incr pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:24">x</name><operator pos:start="21:25" pos:end="21:26">++</operator></expr></incr>)</control> <block pos:start="21:29" pos:end="41:5">{<block_content pos:start="23:9" pos:end="39:17">

	<if_stmt pos:start="23:9" pos:end="35:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:23">(<expr pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:15">val</name> <operator pos:start="23:17" pos:end="23:17">&amp;</operator> <literal type="number" pos:start="23:19" pos:end="23:22">0x80</literal></expr>)</condition> <block pos:start="23:25" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:37">

	    <expr_stmt pos:start="25:13" pos:end="25:40"><expr pos:start="25:13" pos:end="25:39"><operator pos:start="25:13" pos:end="25:13">*</operator><name pos:start="25:14" pos:end="25:16">dst</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:39"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:39">cirrus_shadow_gr1</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="27:13" pos:end="27:37"><expr pos:start="27:13" pos:end="27:36"><operator pos:start="27:13" pos:end="27:13">*</operator><operator pos:start="27:14" pos:end="27:14">(</operator><name pos:start="27:15" pos:end="27:17">dst</name> <operator pos:start="27:19" pos:end="27:19">+</operator> <literal type="number" pos:start="27:21" pos:end="27:21">1</literal><operator pos:start="27:22" pos:end="27:22">)</operator> <operator pos:start="27:24" pos:end="27:24">=</operator> <name pos:start="27:26" pos:end="27:36"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:30">gr</name><index pos:start="27:31" pos:end="27:36">[<expr pos:start="27:32" pos:end="27:35"><literal type="number" pos:start="27:32" pos:end="27:35">0x11</literal></expr>]</index></name></expr>;</expr_stmt>

	</block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="35:9">else if <condition pos:start="29:19" pos:end="29:29">(<expr pos:start="29:20" pos:end="29:28"><name pos:start="29:20" pos:end="29:23">mode</name> <operator pos:start="29:25" pos:end="29:26">==</operator> <literal type="number" pos:start="29:28" pos:end="29:28">5</literal></expr>)</condition> <block pos:start="29:31" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:37">

	    <expr_stmt pos:start="31:13" pos:end="31:40"><expr pos:start="31:13" pos:end="31:39"><operator pos:start="31:13" pos:end="31:13">*</operator><name pos:start="31:14" pos:end="31:16">dst</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:39"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:39">cirrus_shadow_gr0</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="33:13" pos:end="33:37"><expr pos:start="33:13" pos:end="33:36"><operator pos:start="33:13" pos:end="33:13">*</operator><operator pos:start="33:14" pos:end="33:14">(</operator><name pos:start="33:15" pos:end="33:17">dst</name> <operator pos:start="33:19" pos:end="33:19">+</operator> <literal type="number" pos:start="33:21" pos:end="33:21">1</literal><operator pos:start="33:22" pos:end="33:22">)</operator> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:36"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:30">gr</name><index pos:start="33:31" pos:end="33:36">[<expr pos:start="33:32" pos:end="33:35"><literal type="number" pos:start="33:32" pos:end="33:35">0x10</literal></expr>]</index></name></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="37:9" pos:end="37:18"><expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:11">val</name> <operator pos:start="37:13" pos:end="37:15">&lt;&lt;=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="39:9" pos:end="39:17"><expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:11">dst</name> <operator pos:start="39:13" pos:end="39:14">+=</operator> <literal type="number" pos:start="39:16" pos:end="39:16">2</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="43:5" pos:end="43:59"><expr pos:start="43:5" pos:end="43:58"><call pos:start="43:5" pos:end="43:58"><name pos:start="43:5" pos:end="43:33">cpu_physical_memory_set_dirty</name><argument_list pos:start="43:34" pos:end="43:58">(<argument pos:start="43:35" pos:end="43:57"><expr pos:start="43:35" pos:end="43:57"><name pos:start="43:35" pos:end="43:48"><name pos:start="43:35" pos:end="43:35">s</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:48">vram_offset</name></name> <operator pos:start="43:50" pos:end="43:50">+</operator> <name pos:start="43:52" pos:end="43:57">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:64"><expr pos:start="45:5" pos:end="45:63"><call pos:start="45:5" pos:end="45:63"><name pos:start="45:5" pos:end="45:33">cpu_physical_memory_set_dirty</name><argument_list pos:start="45:34" pos:end="45:63">(<argument pos:start="45:35" pos:end="45:62"><expr pos:start="45:35" pos:end="45:62"><name pos:start="45:35" pos:end="45:48"><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:48">vram_offset</name></name> <operator pos:start="45:50" pos:end="45:50">+</operator> <name pos:start="45:52" pos:end="45:57">offset</name> <operator pos:start="45:59" pos:end="45:59">+</operator> <literal type="number" pos:start="45:61" pos:end="45:62">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
