<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11364.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">process_event</name><parameter_list pos:start="1:26" pos:end="1:67">(<parameter pos:start="1:27" pos:end="1:51"><decl pos:start="1:27" pos:end="1:51"><type pos:start="1:27" pos:end="1:51"><name pos:start="1:27" pos:end="1:43">JSONMessageParser</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">parser</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:66"><decl pos:start="1:54" pos:end="1:66"><type pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:58">QList</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:66">tokens</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:19">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">GAState</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:14">s</name> <init pos:start="5:16" pos:end="5:54">= <expr pos:start="5:18" pos:end="5:54"><call pos:start="5:18" pos:end="5:54"><name pos:start="5:18" pos:end="5:29">container_of</name><argument_list pos:start="5:30" pos:end="5:54">(<argument pos:start="5:31" pos:end="5:36"><expr pos:start="5:31" pos:end="5:36"><name pos:start="5:31" pos:end="5:36">parser</name></expr></argument>, <argument pos:start="5:39" pos:end="5:45"><expr pos:start="5:39" pos:end="5:45"><name pos:start="5:39" pos:end="5:45">GAState</name></expr></argument>, <argument pos:start="5:48" pos:end="5:53"><expr pos:start="5:48" pos:end="5:53"><name pos:start="5:48" pos:end="5:53">parser</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">QObject</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">obj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">QDict</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:16">qdict</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">err</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><call pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:12">g_assert</name><argument_list pos:start="17:13" pos:end="17:25">(<argument pos:start="17:14" pos:end="17:24"><expr pos:start="17:14" pos:end="17:24"><name pos:start="17:14" pos:end="17:14">s</name> <operator pos:start="17:16" pos:end="17:17">&amp;&amp;</operator> <name pos:start="17:19" pos:end="17:24">parser</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><call pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:11">g_debug</name><argument_list pos:start="21:12" pos:end="21:36">(<argument pos:start="21:13" pos:end="21:35"><expr pos:start="21:13" pos:end="21:35"><literal type="string" pos:start="21:13" pos:end="21:35">"process_event: called"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:7">obj</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:51"><name pos:start="23:11" pos:end="23:31">json_parser_parse_err</name><argument_list pos:start="23:32" pos:end="23:51">(<argument pos:start="23:33" pos:end="23:38"><expr pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:38">tokens</name></expr></argument>, <argument pos:start="23:41" pos:end="23:44"><expr pos:start="23:41" pos:end="23:44"><name pos:start="23:41" pos:end="23:44">NULL</name></expr></argument>, <argument pos:start="23:47" pos:end="23:50"><expr pos:start="23:47" pos:end="23:50"><operator pos:start="23:47" pos:end="23:47">&amp;</operator><name pos:start="23:48" pos:end="23:50">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="51:5"><if pos:start="25:5" pos:end="47:5">if <condition pos:start="25:8" pos:end="25:56">(<expr pos:start="25:9" pos:end="25:55"><name pos:start="25:9" pos:end="25:11">err</name> <operator pos:start="25:13" pos:end="25:14">||</operator> <operator pos:start="25:16" pos:end="25:16">!</operator><name pos:start="25:17" pos:end="25:19">obj</name> <operator pos:start="25:21" pos:end="25:22">||</operator> <call pos:start="25:24" pos:end="25:40"><name pos:start="25:24" pos:end="25:35">qobject_type</name><argument_list pos:start="25:36" pos:end="25:40">(<argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:39">obj</name></expr></argument>)</argument_list></call> <operator pos:start="25:42" pos:end="25:43">!=</operator> <name pos:start="25:45" pos:end="25:55">QTYPE_QDICT</name></expr>)</condition> <block pos:start="25:58" pos:end="47:5">{<block_content pos:start="27:9" pos:end="45:24">

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><call pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:22">qobject_decref</name><argument_list pos:start="27:23" pos:end="27:27">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:13">qdict</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:25">qdict_new</name><argument_list pos:start="29:26" pos:end="29:27">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="41:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:17">(<expr pos:start="31:13" pos:end="31:16"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:16">err</name></expr>)</condition> <block pos:start="31:19" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:48">

            <expr_stmt pos:start="33:13" pos:end="33:62"><expr pos:start="33:13" pos:end="33:61"><call pos:start="33:13" pos:end="33:61"><name pos:start="33:13" pos:end="33:21">g_warning</name><argument_list pos:start="33:22" pos:end="33:61">(<argument pos:start="33:23" pos:end="33:60"><expr pos:start="33:23" pos:end="33:60"><literal type="string" pos:start="33:23" pos:end="33:60">"failed to parse event: unknown error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:48"><expr pos:start="35:13" pos:end="35:47"><call pos:start="35:13" pos:end="35:47"><name pos:start="35:13" pos:end="35:22">error_setg</name><argument_list pos:start="35:23" pos:end="35:47">(<argument pos:start="35:24" pos:end="35:27"><expr pos:start="35:24" pos:end="35:27"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:27">err</name></expr></argument>, <argument pos:start="35:30" pos:end="35:46"><expr pos:start="35:30" pos:end="35:46"><name pos:start="35:30" pos:end="35:46">QERR_JSON_PARSING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="41:9">else <block pos:start="37:16" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:74">

            <expr_stmt pos:start="39:13" pos:end="39:74"><expr pos:start="39:13" pos:end="39:73"><call pos:start="39:13" pos:end="39:73"><name pos:start="39:13" pos:end="39:21">g_warning</name><argument_list pos:start="39:22" pos:end="39:73">(<argument pos:start="39:23" pos:end="39:49"><expr pos:start="39:23" pos:end="39:49"><literal type="string" pos:start="39:23" pos:end="39:49">"failed to parse event: %s"</literal></expr></argument>, <argument pos:start="39:52" pos:end="39:72"><expr pos:start="39:52" pos:end="39:72"><call pos:start="39:52" pos:end="39:72"><name pos:start="39:52" pos:end="39:67">error_get_pretty</name><argument_list pos:start="39:68" pos:end="39:72">(<argument pos:start="39:69" pos:end="39:71"><expr pos:start="39:69" pos:end="39:71"><name pos:start="39:69" pos:end="39:71">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:67"><expr pos:start="43:9" pos:end="43:66"><call pos:start="43:9" pos:end="43:66"><name pos:start="43:9" pos:end="43:21">qdict_put_obj</name><argument_list pos:start="43:22" pos:end="43:66">(<argument pos:start="43:23" pos:end="43:27"><expr pos:start="43:23" pos:end="43:27"><name pos:start="43:23" pos:end="43:27">qdict</name></expr></argument>, <argument pos:start="43:30" pos:end="43:36"><expr pos:start="43:30" pos:end="43:36"><literal type="string" pos:start="43:30" pos:end="43:36">"error"</literal></expr></argument>, <argument pos:start="43:39" pos:end="43:65"><expr pos:start="43:39" pos:end="43:65"><call pos:start="43:39" pos:end="43:65"><name pos:start="43:39" pos:end="43:60">qmp_build_error_object</name><argument_list pos:start="43:61" pos:end="43:65">(<argument pos:start="43:62" pos:end="43:64"><expr pos:start="43:62" pos:end="43:64"><name pos:start="43:62" pos:end="43:64">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:24"><expr pos:start="45:9" pos:end="45:23"><call pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:18">error_free</name><argument_list pos:start="45:19" pos:end="45:23">(<argument pos:start="45:20" pos:end="45:22"><expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:38">

        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:13">qdict</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:37"><name pos:start="49:17" pos:end="49:32">qobject_to_qdict</name><argument_list pos:start="49:33" pos:end="49:37">(<argument pos:start="49:34" pos:end="49:36"><expr pos:start="49:34" pos:end="49:36"><name pos:start="49:34" pos:end="49:36">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:20"><expr pos:start="55:5" pos:end="55:19"><call pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:12">g_assert</name><argument_list pos:start="55:13" pos:end="55:19">(<argument pos:start="55:14" pos:end="55:18"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:18">qdict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:37">/* handle host-&gt;guest commands */</comment>

    <if_stmt pos:start="61:5" pos:end="91:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:39">(<expr pos:start="61:9" pos:end="61:38"><call pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:20">qdict_haskey</name><argument_list pos:start="61:21" pos:end="61:38">(<argument pos:start="61:22" pos:end="61:26"><expr pos:start="61:22" pos:end="61:26"><name pos:start="61:22" pos:end="61:26">qdict</name></expr></argument>, <argument pos:start="61:29" pos:end="61:37"><expr pos:start="61:29" pos:end="61:37"><literal type="string" pos:start="61:29" pos:end="61:37">"execute"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:41" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:34">

        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><call pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:23">process_command</name><argument_list pos:start="63:24" pos:end="63:33">(<argument pos:start="63:25" pos:end="63:25"><expr pos:start="63:25" pos:end="63:25"><name pos:start="63:25" pos:end="63:25">s</name></expr></argument>, <argument pos:start="63:28" pos:end="63:32"><expr pos:start="63:28" pos:end="63:32"><name pos:start="63:28" pos:end="63:32">qdict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="91:5">else <block pos:start="65:12" pos:end="91:5">{<block_content pos:start="67:9" pos:end="89:9">

        <if_stmt pos:start="67:9" pos:end="81:9"><if pos:start="67:9" pos:end="81:9">if <condition pos:start="67:12" pos:end="67:42">(<expr pos:start="67:13" pos:end="67:41"><operator pos:start="67:13" pos:end="67:13">!</operator><call pos:start="67:14" pos:end="67:41"><name pos:start="67:14" pos:end="67:25">qdict_haskey</name><argument_list pos:start="67:26" pos:end="67:41">(<argument pos:start="67:27" pos:end="67:31"><expr pos:start="67:27" pos:end="67:31"><name pos:start="67:27" pos:end="67:31">qdict</name></expr></argument>, <argument pos:start="67:34" pos:end="67:40"><expr pos:start="67:34" pos:end="67:40"><literal type="string" pos:start="67:34" pos:end="67:40">"error"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:44" pos:end="81:9">{<block_content pos:start="69:13" pos:end="79:28">

            <expr_stmt pos:start="69:13" pos:end="69:27"><expr pos:start="69:13" pos:end="69:26"><call pos:start="69:13" pos:end="69:26"><name pos:start="69:13" pos:end="69:19">QDECREF</name><argument_list pos:start="69:20" pos:end="69:26">(<argument pos:start="69:21" pos:end="69:25"><expr pos:start="69:21" pos:end="69:25"><name pos:start="69:21" pos:end="69:25">qdict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:32"><expr pos:start="71:13" pos:end="71:31"><name pos:start="71:13" pos:end="71:17">qdict</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <call pos:start="71:21" pos:end="71:31"><name pos:start="71:21" pos:end="71:29">qdict_new</name><argument_list pos:start="71:30" pos:end="71:31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:53"><expr pos:start="73:13" pos:end="73:52"><call pos:start="73:13" pos:end="73:52"><name pos:start="73:13" pos:end="73:21">g_warning</name><argument_list pos:start="73:22" pos:end="73:52">(<argument pos:start="73:23" pos:end="73:51"><expr pos:start="73:23" pos:end="73:51"><literal type="string" pos:start="73:23" pos:end="73:51">"unrecognized payload format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:47"><expr pos:start="75:13" pos:end="75:46"><call pos:start="75:13" pos:end="75:46"><name pos:start="75:13" pos:end="75:22">error_setg</name><argument_list pos:start="75:23" pos:end="75:46">(<argument pos:start="75:24" pos:end="75:27"><expr pos:start="75:24" pos:end="75:27"><operator pos:start="75:24" pos:end="75:24">&amp;</operator><name pos:start="75:25" pos:end="75:27">err</name></expr></argument>, <argument pos:start="75:30" pos:end="75:45"><expr pos:start="75:30" pos:end="75:45"><name pos:start="75:30" pos:end="75:45">QERR_UNSUPPORTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:71"><expr pos:start="77:13" pos:end="77:70"><call pos:start="77:13" pos:end="77:70"><name pos:start="77:13" pos:end="77:25">qdict_put_obj</name><argument_list pos:start="77:26" pos:end="77:70">(<argument pos:start="77:27" pos:end="77:31"><expr pos:start="77:27" pos:end="77:31"><name pos:start="77:27" pos:end="77:31">qdict</name></expr></argument>, <argument pos:start="77:34" pos:end="77:40"><expr pos:start="77:34" pos:end="77:40"><literal type="string" pos:start="77:34" pos:end="77:40">"error"</literal></expr></argument>, <argument pos:start="77:43" pos:end="77:69"><expr pos:start="77:43" pos:end="77:69"><call pos:start="77:43" pos:end="77:69"><name pos:start="77:43" pos:end="77:64">qmp_build_error_object</name><argument_list pos:start="77:65" pos:end="77:69">(<argument pos:start="77:66" pos:end="77:68"><expr pos:start="77:66" pos:end="77:68"><name pos:start="77:66" pos:end="77:68">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:28"><expr pos:start="79:13" pos:end="79:27"><call pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:22">error_free</name><argument_list pos:start="79:23" pos:end="79:27">(<argument pos:start="79:24" pos:end="79:26"><expr pos:start="79:24" pos:end="79:26"><name pos:start="79:24" pos:end="79:26">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:47"><expr pos:start="83:9" pos:end="83:46"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:46"><name pos:start="83:15" pos:end="83:27">send_response</name><argument_list pos:start="83:28" pos:end="83:46">(<argument pos:start="83:29" pos:end="83:29"><expr pos:start="83:29" pos:end="83:29"><name pos:start="83:29" pos:end="83:29">s</name></expr></argument>, <argument pos:start="83:32" pos:end="83:45"><expr pos:start="83:32" pos:end="83:45"><call pos:start="83:32" pos:end="83:45"><name pos:start="83:32" pos:end="83:38">QOBJECT</name><argument_list pos:start="83:39" pos:end="83:45">(<argument pos:start="83:40" pos:end="83:44"><expr pos:start="83:40" pos:end="83:44"><name pos:start="83:40" pos:end="83:44">qdict</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:20">(<expr pos:start="85:13" pos:end="85:19"><name pos:start="85:13" pos:end="85:15">ret</name> <operator pos:start="85:17" pos:end="85:17">&lt;</operator> <literal type="number" pos:start="85:19" pos:end="85:19">0</literal></expr>)</condition> <block pos:start="85:22" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:74">

            <expr_stmt pos:start="87:13" pos:end="87:74"><expr pos:start="87:13" pos:end="87:73"><call pos:start="87:13" pos:end="87:73"><name pos:start="87:13" pos:end="87:21">g_warning</name><argument_list pos:start="87:22" pos:end="87:73">(<argument pos:start="87:23" pos:end="87:56"><expr pos:start="87:23" pos:end="87:56"><literal type="string" pos:start="87:23" pos:end="87:56">"error sending error response: %s"</literal></expr></argument>, <argument pos:start="87:59" pos:end="87:72"><expr pos:start="87:59" pos:end="87:72"><call pos:start="87:59" pos:end="87:72"><name pos:start="87:59" pos:end="87:66">strerror</name><argument_list pos:start="87:67" pos:end="87:72">(<argument pos:start="87:68" pos:end="87:71"><expr pos:start="87:68" pos:end="87:71"><operator pos:start="87:68" pos:end="87:68">-</operator><name pos:start="87:69" pos:end="87:71">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:19"><expr pos:start="95:5" pos:end="95:18"><call pos:start="95:5" pos:end="95:18"><name pos:start="95:5" pos:end="95:11">QDECREF</name><argument_list pos:start="95:12" pos:end="95:18">(<argument pos:start="95:13" pos:end="95:17"><expr pos:start="95:13" pos:end="95:17"><name pos:start="95:13" pos:end="95:17">qdict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
