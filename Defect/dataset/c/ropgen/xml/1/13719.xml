<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13719.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">qpeg_decode_inter</name><parameter_list pos:start="1:30" pos:end="5:73">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:37">uint8_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">src</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">dst</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:66"><decl pos:start="1:59" pos:end="1:66"><type pos:start="1:59" pos:end="1:66"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:66">size</name></decl></parameter>,

			    <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:38">stride</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:49"><decl pos:start="3:41" pos:end="3:49"><type pos:start="3:41" pos:end="3:49"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:49">width</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:61"><decl pos:start="3:52" pos:end="3:61"><type pos:start="3:52" pos:end="3:61"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:61">height</name></decl></parameter>,

			    <parameter pos:start="5:29" pos:end="5:37"><decl pos:start="5:29" pos:end="5:37"><type pos:start="5:29" pos:end="5:37"><name pos:start="5:29" pos:end="5:31">int</name></type> <name pos:start="5:33" pos:end="5:37">delta</name></decl></parameter>, <parameter pos:start="5:40" pos:end="5:54"><decl pos:start="5:40" pos:end="5:54"><type pos:start="5:40" pos:end="5:54"><name pos:start="5:40" pos:end="5:46">uint8_t</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier></type><name pos:start="5:49" pos:end="5:54">ctable</name></decl></parameter>, <parameter pos:start="5:57" pos:end="5:72"><decl pos:start="5:57" pos:end="5:72"><type pos:start="5:57" pos:end="5:72"><name pos:start="5:57" pos:end="5:63">uint8_t</name> <modifier pos:start="5:65" pos:end="5:65">*</modifier></type><name pos:start="5:66" pos:end="5:72">refdata</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="241:1">{<block_content pos:start="9:5" pos:end="239:5">

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">filled</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">blkdata</name></decl>;</decl_stmt>

    

    <comment type="block" pos:start="19:5" pos:end="19:25">/* copy prev frame */</comment>

    <for pos:start="21:5" pos:end="23:65">for<control pos:start="21:8" pos:end="21:31">(<init pos:start="21:9" pos:end="21:14"><expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:9">i</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <literal type="number" pos:start="21:13" pos:end="21:13">0</literal></expr>;</init> <condition pos:start="21:16" pos:end="21:26"><expr pos:start="21:16" pos:end="21:25"><name pos:start="21:16" pos:end="21:16">i</name> <operator pos:start="21:18" pos:end="21:18">&lt;</operator> <name pos:start="21:20" pos:end="21:25">height</name></expr>;</condition> <incr pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:28">i</name><operator pos:start="21:29" pos:end="21:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:9" pos:end="23:65"><block_content pos:start="23:9" pos:end="23:65">

	<expr_stmt pos:start="23:9" pos:end="23:65"><expr pos:start="23:9" pos:end="23:64"><call pos:start="23:9" pos:end="23:64"><name pos:start="23:9" pos:end="23:14">memcpy</name><argument_list pos:start="23:15" pos:end="23:64">(<argument pos:start="23:16" pos:end="23:36"><expr pos:start="23:16" pos:end="23:36"><name pos:start="23:16" pos:end="23:22">refdata</name> <operator pos:start="23:24" pos:end="23:24">+</operator> <operator pos:start="23:26" pos:end="23:26">(</operator><name pos:start="23:27" pos:end="23:27">i</name> <operator pos:start="23:29" pos:end="23:29">*</operator> <name pos:start="23:31" pos:end="23:35">width</name><operator pos:start="23:36" pos:end="23:36">)</operator></expr></argument>, <argument pos:start="23:39" pos:end="23:56"><expr pos:start="23:39" pos:end="23:56"><name pos:start="23:39" pos:end="23:41">dst</name> <operator pos:start="23:43" pos:end="23:43">+</operator> <operator pos:start="23:45" pos:end="23:45">(</operator><name pos:start="23:46" pos:end="23:46">i</name> <operator pos:start="23:48" pos:end="23:48">*</operator> <name pos:start="23:50" pos:end="23:55">stride</name><operator pos:start="23:56" pos:end="23:56">)</operator></expr></argument>, <argument pos:start="23:59" pos:end="23:63"><expr pos:start="23:59" pos:end="23:63"><name pos:start="23:59" pos:end="23:63">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    

    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:11">blkdata</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:17">src</name> <operator pos:start="27:19" pos:end="27:19">-</operator> <literal type="number" pos:start="27:21" pos:end="27:24">0x86</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:13"><expr pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:10">height</name><operator pos:start="29:11" pos:end="29:12">--</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:7">dst</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <name pos:start="31:11" pos:end="31:13">dst</name> <operator pos:start="31:15" pos:end="31:15">+</operator> <name pos:start="31:17" pos:end="31:22">height</name> <operator pos:start="31:24" pos:end="31:24">*</operator> <name pos:start="31:26" pos:end="31:31">stride</name></expr>;</expr_stmt>



    <while pos:start="35:5" pos:end="239:5">while<condition pos:start="35:10" pos:end="35:19">(<expr pos:start="35:11" pos:end="35:18"><name pos:start="35:11" pos:end="35:14">size</name> <operator pos:start="35:16" pos:end="35:16">&gt;</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>)</condition> <block pos:start="35:21" pos:end="239:5">{<block_content pos:start="37:9" pos:end="237:9">

	<expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:12">code</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <operator pos:start="37:16" pos:end="37:16">*</operator><name pos:start="37:17" pos:end="37:19">src</name><operator pos:start="37:20" pos:end="37:21">++</operator></expr>;</expr_stmt>

	<expr_stmt pos:start="39:9" pos:end="39:15"><expr pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:12">size</name><operator pos:start="39:13" pos:end="39:14">--</operator></expr>;</expr_stmt>

	

	<if_stmt pos:start="43:9" pos:end="119:9"><if pos:start="43:9" pos:end="119:9">if<condition pos:start="43:11" pos:end="43:17">(<expr pos:start="43:12" pos:end="43:16"><name pos:start="43:12" pos:end="43:16">delta</name></expr>)</condition> <block pos:start="43:19" pos:end="119:9">{<block_content pos:start="47:13" pos:end="117:13">

	    <comment type="block" pos:start="45:13" pos:end="45:37">/* motion compensation */</comment>

	    <while pos:start="47:13" pos:end="117:13">while<condition pos:start="47:18" pos:end="47:40">(<expr pos:start="47:19" pos:end="47:39"><operator pos:start="47:19" pos:end="47:19">(</operator><name pos:start="47:20" pos:end="47:23">code</name> <operator pos:start="47:25" pos:end="47:25">&amp;</operator> <literal type="number" pos:start="47:27" pos:end="47:30">0xF0</literal><operator pos:start="47:31" pos:end="47:31">)</operator> <operator pos:start="47:33" pos:end="47:34">==</operator> <literal type="number" pos:start="47:36" pos:end="47:39">0xF0</literal></expr>)</condition> <block pos:start="47:42" pos:end="117:13">{<block_content pos:start="49:17" pos:end="115:23">

		<if_stmt pos:start="49:17" pos:end="111:17"><if pos:start="49:17" pos:end="111:17">if<condition pos:start="49:19" pos:end="49:30">(<expr pos:start="49:20" pos:end="49:29"><name pos:start="49:20" pos:end="49:24">delta</name> <operator pos:start="49:26" pos:end="49:27">==</operator> <literal type="number" pos:start="49:29" pos:end="49:29">1</literal></expr>)</condition> <block pos:start="49:32" pos:end="111:17">{<block_content pos:start="51:21" pos:end="109:21">

		    <decl_stmt pos:start="51:21" pos:end="51:31"><decl pos:start="51:21" pos:end="51:30"><type pos:start="51:21" pos:end="51:23"><name pos:start="51:21" pos:end="51:23">int</name></type> <name pos:start="51:25" pos:end="51:30">me_idx</name></decl>;</decl_stmt>

		    <decl_stmt pos:start="53:21" pos:end="53:47"><decl pos:start="53:21" pos:end="53:28"><type pos:start="53:21" pos:end="53:23"><name pos:start="53:21" pos:end="53:23">int</name></type> <name pos:start="53:25" pos:end="53:28">me_w</name></decl>, <decl pos:start="53:31" pos:end="53:34"><type ref="prev" pos:start="53:21" pos:end="53:23"/><name pos:start="53:31" pos:end="53:34">me_h</name></decl>, <decl pos:start="53:37" pos:end="53:40"><type ref="prev" pos:start="53:21" pos:end="53:23"/><name pos:start="53:37" pos:end="53:40">me_x</name></decl>, <decl pos:start="53:43" pos:end="53:46"><type ref="prev" pos:start="53:21" pos:end="53:23"/><name pos:start="53:43" pos:end="53:46">me_y</name></decl>;</decl_stmt>

		    <decl_stmt pos:start="55:21" pos:end="55:38"><decl pos:start="55:21" pos:end="55:37"><type pos:start="55:21" pos:end="55:29"><name pos:start="55:21" pos:end="55:27">uint8_t</name> <modifier pos:start="55:29" pos:end="55:29">*</modifier></type><name pos:start="55:30" pos:end="55:37">me_plane</name></decl>;</decl_stmt>

		    <decl_stmt pos:start="57:21" pos:end="57:34"><decl pos:start="57:21" pos:end="57:28"><type pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:23">int</name></type> <name pos:start="57:25" pos:end="57:28">corr</name></decl>, <decl pos:start="57:31" pos:end="57:33"><type ref="prev" pos:start="57:21" pos:end="57:23"/><name pos:start="57:31" pos:end="57:33">val</name></decl>;</decl_stmt>

		    

		    <comment type="block" pos:start="61:21" pos:end="61:49">/* get block size by index */</comment>

		    <expr_stmt pos:start="63:21" pos:end="63:40"><expr pos:start="63:21" pos:end="63:39"><name pos:start="63:21" pos:end="63:26">me_idx</name> <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:33">code</name> <operator pos:start="63:35" pos:end="63:35">&amp;</operator> <literal type="number" pos:start="63:37" pos:end="63:39">0xF</literal></expr>;</expr_stmt>

		    <expr_stmt pos:start="65:21" pos:end="65:48"><expr pos:start="65:21" pos:end="65:47"><name pos:start="65:21" pos:end="65:24">me_w</name> <operator pos:start="65:26" pos:end="65:26">=</operator> <name pos:start="65:28" pos:end="65:47"><name pos:start="65:28" pos:end="65:39">qpeg_table_w</name><index pos:start="65:40" pos:end="65:47">[<expr pos:start="65:41" pos:end="65:46"><name pos:start="65:41" pos:end="65:46">me_idx</name></expr>]</index></name></expr>;</expr_stmt>

		    <expr_stmt pos:start="67:21" pos:end="67:48"><expr pos:start="67:21" pos:end="67:47"><name pos:start="67:21" pos:end="67:24">me_h</name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:47"><name pos:start="67:28" pos:end="67:39">qpeg_table_h</name><index pos:start="67:40" pos:end="67:47">[<expr pos:start="67:41" pos:end="67:46"><name pos:start="67:41" pos:end="67:46">me_idx</name></expr>]</index></name></expr>;</expr_stmt>

		    

		    <comment type="block" pos:start="71:21" pos:end="71:47">/* extract motion vector */</comment>

		    <expr_stmt pos:start="73:21" pos:end="73:34"><expr pos:start="73:21" pos:end="73:33"><name pos:start="73:21" pos:end="73:24">corr</name> <operator pos:start="73:26" pos:end="73:26">=</operator> <operator pos:start="73:28" pos:end="73:28">*</operator><name pos:start="73:29" pos:end="73:31">src</name><operator pos:start="73:32" pos:end="73:33">++</operator></expr>;</expr_stmt>

		    <expr_stmt pos:start="75:21" pos:end="75:27"><expr pos:start="75:21" pos:end="75:26"><name pos:start="75:21" pos:end="75:24">size</name><operator pos:start="75:25" pos:end="75:26">--</operator></expr>;</expr_stmt>



		    <expr_stmt pos:start="79:21" pos:end="79:36"><expr pos:start="79:21" pos:end="79:35"><name pos:start="79:21" pos:end="79:23">val</name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:30">corr</name> <operator pos:start="79:32" pos:end="79:33">&gt;&gt;</operator> <literal type="number" pos:start="79:35" pos:end="79:35">4</literal></expr>;</expr_stmt>

		    <if_stmt pos:start="81:21" pos:end="83:34"><if pos:start="81:21" pos:end="83:34">if<condition pos:start="81:23" pos:end="81:31">(<expr pos:start="81:24" pos:end="81:30"><name pos:start="81:24" pos:end="81:26">val</name> <operator pos:start="81:28" pos:end="81:28">&gt;</operator> <literal type="number" pos:start="81:30" pos:end="81:30">7</literal></expr>)</condition><block type="pseudo" pos:start="83:25" pos:end="83:34"><block_content pos:start="83:25" pos:end="83:34">

			<expr_stmt pos:start="83:25" pos:end="83:34"><expr pos:start="83:25" pos:end="83:33"><name pos:start="83:25" pos:end="83:27">val</name> <operator pos:start="83:29" pos:end="83:30">-=</operator> <literal type="number" pos:start="83:32" pos:end="83:33">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

		    <expr_stmt pos:start="85:21" pos:end="85:31"><expr pos:start="85:21" pos:end="85:30"><name pos:start="85:21" pos:end="85:24">me_x</name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:30">val</name></expr>;</expr_stmt>

		    

		    <expr_stmt pos:start="89:21" pos:end="89:37"><expr pos:start="89:21" pos:end="89:36"><name pos:start="89:21" pos:end="89:23">val</name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:30">corr</name> <operator pos:start="89:32" pos:end="89:32">&amp;</operator> <literal type="number" pos:start="89:34" pos:end="89:36">0xF</literal></expr>;</expr_stmt>

		    <if_stmt pos:start="91:21" pos:end="93:34"><if pos:start="91:21" pos:end="93:34">if<condition pos:start="91:23" pos:end="91:31">(<expr pos:start="91:24" pos:end="91:30"><name pos:start="91:24" pos:end="91:26">val</name> <operator pos:start="91:28" pos:end="91:28">&gt;</operator> <literal type="number" pos:start="91:30" pos:end="91:30">7</literal></expr>)</condition><block type="pseudo" pos:start="93:25" pos:end="93:34"><block_content pos:start="93:25" pos:end="93:34">

			<expr_stmt pos:start="93:25" pos:end="93:34"><expr pos:start="93:25" pos:end="93:33"><name pos:start="93:25" pos:end="93:27">val</name> <operator pos:start="93:29" pos:end="93:30">-=</operator> <literal type="number" pos:start="93:32" pos:end="93:33">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

		    <expr_stmt pos:start="95:21" pos:end="95:31"><expr pos:start="95:21" pos:end="95:30"><name pos:start="95:21" pos:end="95:24">me_y</name> <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:30">val</name></expr>;</expr_stmt>

		    

		    <comment type="block" pos:start="99:21" pos:end="99:48">/* do motion compensation */</comment>

		    <expr_stmt pos:start="101:21" pos:end="101:83"><expr pos:start="101:21" pos:end="101:82"><name pos:start="101:21" pos:end="101:28">me_plane</name> <operator pos:start="101:30" pos:end="101:30">=</operator> <name pos:start="101:32" pos:end="101:38">refdata</name> <operator pos:start="101:40" pos:end="101:40">+</operator> <operator pos:start="101:42" pos:end="101:42">(</operator><name pos:start="101:43" pos:end="101:48">filled</name> <operator pos:start="101:50" pos:end="101:50">+</operator> <name pos:start="101:52" pos:end="101:55">me_x</name><operator pos:start="101:56" pos:end="101:56">)</operator> <operator pos:start="101:58" pos:end="101:58">+</operator> <operator pos:start="101:60" pos:end="101:60">(</operator><name pos:start="101:61" pos:end="101:66">height</name> <operator pos:start="101:68" pos:end="101:68">-</operator> <name pos:start="101:70" pos:end="101:73">me_y</name><operator pos:start="101:74" pos:end="101:74">)</operator> <operator pos:start="101:76" pos:end="101:76">*</operator> <name pos:start="101:78" pos:end="101:82">width</name></expr>;</expr_stmt>

		    <for pos:start="103:21" pos:end="109:21">for<control pos:start="103:24" pos:end="103:45">(<init pos:start="103:25" pos:end="103:30"><expr pos:start="103:25" pos:end="103:29"><name pos:start="103:25" pos:end="103:25">j</name> <operator pos:start="103:27" pos:end="103:27">=</operator> <literal type="number" pos:start="103:29" pos:end="103:29">0</literal></expr>;</init> <condition pos:start="103:32" pos:end="103:40"><expr pos:start="103:32" pos:end="103:39"><name pos:start="103:32" pos:end="103:32">j</name> <operator pos:start="103:34" pos:end="103:34">&lt;</operator> <name pos:start="103:36" pos:end="103:39">me_h</name></expr>;</condition> <incr pos:start="103:42" pos:end="103:44"><expr pos:start="103:42" pos:end="103:44"><name pos:start="103:42" pos:end="103:42">j</name><operator pos:start="103:43" pos:end="103:44">++</operator></expr></incr>)</control> <block pos:start="103:47" pos:end="109:21">{<block_content pos:start="105:25" pos:end="107:87">

			<for pos:start="105:25" pos:end="107:87">for<control pos:start="105:28" pos:end="105:49">(<init pos:start="105:29" pos:end="105:34"><expr pos:start="105:29" pos:end="105:33"><name pos:start="105:29" pos:end="105:29">i</name> <operator pos:start="105:31" pos:end="105:31">=</operator> <literal type="number" pos:start="105:33" pos:end="105:33">0</literal></expr>;</init> <condition pos:start="105:36" pos:end="105:44"><expr pos:start="105:36" pos:end="105:43"><name pos:start="105:36" pos:end="105:36">i</name> <operator pos:start="105:38" pos:end="105:38">&lt;</operator> <name pos:start="105:40" pos:end="105:43">me_w</name></expr>;</condition> <incr pos:start="105:46" pos:end="105:48"><expr pos:start="105:46" pos:end="105:48"><name pos:start="105:46" pos:end="105:46">i</name><operator pos:start="105:47" pos:end="105:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:29" pos:end="107:87"><block_content pos:start="107:29" pos:end="107:87">

			    <expr_stmt pos:start="107:29" pos:end="107:87"><expr pos:start="107:29" pos:end="107:86"><name pos:start="107:29" pos:end="107:58"><name pos:start="107:29" pos:end="107:31">dst</name><index pos:start="107:32" pos:end="107:58">[<expr pos:start="107:33" pos:end="107:57"><name pos:start="107:33" pos:end="107:38">filled</name> <operator pos:start="107:40" pos:end="107:40">+</operator> <name pos:start="107:42" pos:end="107:42">i</name> <operator pos:start="107:44" pos:end="107:44">-</operator> <operator pos:start="107:46" pos:end="107:46">(</operator><name pos:start="107:47" pos:end="107:47">j</name> <operator pos:start="107:49" pos:end="107:49">*</operator> <name pos:start="107:51" pos:end="107:56">stride</name><operator pos:start="107:57" pos:end="107:57">)</operator></expr>]</index></name> <operator pos:start="107:60" pos:end="107:60">=</operator> <name pos:start="107:62" pos:end="107:86"><name pos:start="107:62" pos:end="107:69">me_plane</name><index pos:start="107:70" pos:end="107:86">[<expr pos:start="107:71" pos:end="107:85"><name pos:start="107:71" pos:end="107:71">i</name> <operator pos:start="107:73" pos:end="107:73">-</operator> <operator pos:start="107:75" pos:end="107:75">(</operator><name pos:start="107:76" pos:end="107:76">j</name> <operator pos:start="107:78" pos:end="107:78">*</operator> <name pos:start="107:80" pos:end="107:84">width</name><operator pos:start="107:85" pos:end="107:85">)</operator></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

		    </block_content>}</block></for>

		</block_content>}</block></if></if_stmt>

		<expr_stmt pos:start="113:17" pos:end="113:30"><expr pos:start="113:17" pos:end="113:29"><name pos:start="113:17" pos:end="113:20">code</name> <operator pos:start="113:22" pos:end="113:22">=</operator> <operator pos:start="113:24" pos:end="113:24">*</operator><name pos:start="113:25" pos:end="113:27">src</name><operator pos:start="113:28" pos:end="113:29">++</operator></expr>;</expr_stmt>

		<expr_stmt pos:start="115:17" pos:end="115:23"><expr pos:start="115:17" pos:end="115:22"><name pos:start="115:17" pos:end="115:20">size</name><operator pos:start="115:21" pos:end="115:22">--</operator></expr>;</expr_stmt>

	    </block_content>}</block></while>

	</block_content>}</block></if></if_stmt>

	

	<if_stmt pos:start="123:9" pos:end="125:18"><if pos:start="123:9" pos:end="125:18">if<condition pos:start="123:11" pos:end="123:24">(<expr pos:start="123:12" pos:end="123:23"><name pos:start="123:12" pos:end="123:15">code</name> <operator pos:start="123:17" pos:end="123:18">==</operator> <literal type="number" pos:start="123:20" pos:end="123:23">0xE0</literal></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:18"><block_content pos:start="125:13" pos:end="125:18"> <comment type="block" pos:start="123:26" pos:end="123:50">/* end-of-picture code */</comment>

	    <break pos:start="125:13" pos:end="125:18">break;</break></block_content></block></if></if_stmt>

	<if_stmt pos:start="127:9" pos:end="237:9"><if pos:start="127:9" pos:end="155:9">if<condition pos:start="127:11" pos:end="127:23">(<expr pos:start="127:12" pos:end="127:22"><name pos:start="127:12" pos:end="127:15">code</name> <operator pos:start="127:17" pos:end="127:17">&gt;</operator> <literal type="number" pos:start="127:19" pos:end="127:22">0xE0</literal></expr>)</condition> <block pos:start="127:25" pos:end="155:9">{<block_content pos:start="129:13" pos:end="153:13"> <comment type="block" pos:start="127:27" pos:end="127:52">/* run code: 0xE1..0xFF */</comment>

	    <decl_stmt pos:start="129:13" pos:end="129:18"><decl pos:start="129:13" pos:end="129:17"><type pos:start="129:13" pos:end="129:15"><name pos:start="129:13" pos:end="129:15">int</name></type> <name pos:start="129:17" pos:end="129:17">p</name></decl>;</decl_stmt>



	    <expr_stmt pos:start="133:13" pos:end="133:25"><expr pos:start="133:13" pos:end="133:24"><name pos:start="133:13" pos:end="133:16">code</name> <operator pos:start="133:18" pos:end="133:19">&amp;=</operator> <literal type="number" pos:start="133:21" pos:end="133:24">0x1F</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="135:13" pos:end="135:23"><expr pos:start="135:13" pos:end="135:22"><name pos:start="135:13" pos:end="135:13">p</name> <operator pos:start="135:15" pos:end="135:15">=</operator> <operator pos:start="135:17" pos:end="135:17">*</operator><name pos:start="135:18" pos:end="135:20">src</name><operator pos:start="135:21" pos:end="135:22">++</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="137:13" pos:end="137:19"><expr pos:start="137:13" pos:end="137:18"><name pos:start="137:13" pos:end="137:16">size</name><operator pos:start="137:17" pos:end="137:18">--</operator></expr>;</expr_stmt>

	    <for pos:start="139:13" pos:end="153:13">for<control pos:start="139:16" pos:end="139:38">(<init pos:start="139:17" pos:end="139:22"><expr pos:start="139:17" pos:end="139:21"><name pos:start="139:17" pos:end="139:17">i</name> <operator pos:start="139:19" pos:end="139:19">=</operator> <literal type="number" pos:start="139:21" pos:end="139:21">0</literal></expr>;</init> <condition pos:start="139:24" pos:end="139:33"><expr pos:start="139:24" pos:end="139:32"><name pos:start="139:24" pos:end="139:24">i</name> <operator pos:start="139:26" pos:end="139:27">&lt;=</operator> <name pos:start="139:29" pos:end="139:32">code</name></expr>;</condition> <incr pos:start="139:35" pos:end="139:37"><expr pos:start="139:35" pos:end="139:37"><name pos:start="139:35" pos:end="139:35">i</name><operator pos:start="139:36" pos:end="139:37">++</operator></expr></incr>)</control> <block pos:start="139:40" pos:end="153:13">{<block_content pos:start="141:17" pos:end="151:17">

		<expr_stmt pos:start="141:17" pos:end="141:34"><expr pos:start="141:17" pos:end="141:33"><name pos:start="141:17" pos:end="141:29"><name pos:start="141:17" pos:end="141:19">dst</name><index pos:start="141:20" pos:end="141:29">[<expr pos:start="141:21" pos:end="141:28"><name pos:start="141:21" pos:end="141:26">filled</name><operator pos:start="141:27" pos:end="141:28">++</operator></expr>]</index></name> <operator pos:start="141:31" pos:end="141:31">=</operator> <name pos:start="141:33" pos:end="141:33">p</name></expr>;</expr_stmt>

		<if_stmt pos:start="143:17" pos:end="151:17"><if pos:start="143:17" pos:end="151:17">if<condition pos:start="143:19" pos:end="143:35">(<expr pos:start="143:20" pos:end="143:34"><name pos:start="143:20" pos:end="143:25">filled</name> <operator pos:start="143:27" pos:end="143:28">&gt;=</operator> <name pos:start="143:30" pos:end="143:34">width</name></expr>)</condition> <block pos:start="143:37" pos:end="151:17">{<block_content pos:start="145:21" pos:end="149:29">

		    <expr_stmt pos:start="145:21" pos:end="145:31"><expr pos:start="145:21" pos:end="145:30"><name pos:start="145:21" pos:end="145:26">filled</name> <operator pos:start="145:28" pos:end="145:28">=</operator> <literal type="number" pos:start="145:30" pos:end="145:30">0</literal></expr>;</expr_stmt>

		    <expr_stmt pos:start="147:21" pos:end="147:34"><expr pos:start="147:21" pos:end="147:33"><name pos:start="147:21" pos:end="147:23">dst</name> <operator pos:start="147:25" pos:end="147:26">-=</operator> <name pos:start="147:28" pos:end="147:33">stride</name></expr>;</expr_stmt>

		    <expr_stmt pos:start="149:21" pos:end="149:29"><expr pos:start="149:21" pos:end="149:28"><name pos:start="149:21" pos:end="149:26">height</name><operator pos:start="149:27" pos:end="149:28">--</operator></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>

	    </block_content>}</block></for>

	</block_content>}</block></if> <if type="elseif" pos:start="155:11" pos:end="179:9">else if<condition pos:start="155:18" pos:end="155:31">(<expr pos:start="155:19" pos:end="155:30"><name pos:start="155:19" pos:end="155:22">code</name> <operator pos:start="155:24" pos:end="155:25">&gt;=</operator> <literal type="number" pos:start="155:27" pos:end="155:30">0xC0</literal></expr>)</condition> <block pos:start="155:33" pos:end="179:9">{<block_content pos:start="157:13" pos:end="177:29"> <comment type="block" pos:start="155:35" pos:end="155:61">/* copy code: 0xC0..0xDF */</comment>

	    <expr_stmt pos:start="157:13" pos:end="157:25"><expr pos:start="157:13" pos:end="157:24"><name pos:start="157:13" pos:end="157:16">code</name> <operator pos:start="157:18" pos:end="157:19">&amp;=</operator> <literal type="number" pos:start="157:21" pos:end="157:24">0x1F</literal></expr>;</expr_stmt>

	    

	    <for pos:start="161:13" pos:end="175:13">for<control pos:start="161:16" pos:end="161:38">(<init pos:start="161:17" pos:end="161:22"><expr pos:start="161:17" pos:end="161:21"><name pos:start="161:17" pos:end="161:17">i</name> <operator pos:start="161:19" pos:end="161:19">=</operator> <literal type="number" pos:start="161:21" pos:end="161:21">0</literal></expr>;</init> <condition pos:start="161:24" pos:end="161:33"><expr pos:start="161:24" pos:end="161:32"><name pos:start="161:24" pos:end="161:24">i</name> <operator pos:start="161:26" pos:end="161:27">&lt;=</operator> <name pos:start="161:29" pos:end="161:32">code</name></expr>;</condition> <incr pos:start="161:35" pos:end="161:37"><expr pos:start="161:35" pos:end="161:37"><name pos:start="161:35" pos:end="161:35">i</name><operator pos:start="161:36" pos:end="161:37">++</operator></expr></incr>)</control> <block pos:start="161:40" pos:end="175:13">{<block_content pos:start="163:17" pos:end="173:17">

		<expr_stmt pos:start="163:17" pos:end="163:39"><expr pos:start="163:17" pos:end="163:38"><name pos:start="163:17" pos:end="163:29"><name pos:start="163:17" pos:end="163:19">dst</name><index pos:start="163:20" pos:end="163:29">[<expr pos:start="163:21" pos:end="163:28"><name pos:start="163:21" pos:end="163:26">filled</name><operator pos:start="163:27" pos:end="163:28">++</operator></expr>]</index></name> <operator pos:start="163:31" pos:end="163:31">=</operator> <operator pos:start="163:33" pos:end="163:33">*</operator><name pos:start="163:34" pos:end="163:36">src</name><operator pos:start="163:37" pos:end="163:38">++</operator></expr>;</expr_stmt>

		<if_stmt pos:start="165:17" pos:end="173:17"><if pos:start="165:17" pos:end="173:17">if<condition pos:start="165:19" pos:end="165:35">(<expr pos:start="165:20" pos:end="165:34"><name pos:start="165:20" pos:end="165:25">filled</name> <operator pos:start="165:27" pos:end="165:28">&gt;=</operator> <name pos:start="165:30" pos:end="165:34">width</name></expr>)</condition> <block pos:start="165:37" pos:end="173:17">{<block_content pos:start="167:21" pos:end="171:29">

		    <expr_stmt pos:start="167:21" pos:end="167:31"><expr pos:start="167:21" pos:end="167:30"><name pos:start="167:21" pos:end="167:26">filled</name> <operator pos:start="167:28" pos:end="167:28">=</operator> <literal type="number" pos:start="167:30" pos:end="167:30">0</literal></expr>;</expr_stmt>

		    <expr_stmt pos:start="169:21" pos:end="169:34"><expr pos:start="169:21" pos:end="169:33"><name pos:start="169:21" pos:end="169:23">dst</name> <operator pos:start="169:25" pos:end="169:26">-=</operator> <name pos:start="169:28" pos:end="169:33">stride</name></expr>;</expr_stmt>

		    <expr_stmt pos:start="171:21" pos:end="171:29"><expr pos:start="171:21" pos:end="171:28"><name pos:start="171:21" pos:end="171:26">height</name><operator pos:start="171:27" pos:end="171:28">--</operator></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>

	    </block_content>}</block></for>

	    <expr_stmt pos:start="177:13" pos:end="177:29"><expr pos:start="177:13" pos:end="177:28"><name pos:start="177:13" pos:end="177:16">size</name> <operator pos:start="177:18" pos:end="177:19">-=</operator> <name pos:start="177:21" pos:end="177:24">code</name> <operator pos:start="177:26" pos:end="177:26">+</operator> <literal type="number" pos:start="177:28" pos:end="177:28">1</literal></expr>;</expr_stmt>

	</block_content>}</block></if> <if type="elseif" pos:start="179:11" pos:end="215:9">else if<condition pos:start="179:18" pos:end="179:31">(<expr pos:start="179:19" pos:end="179:30"><name pos:start="179:19" pos:end="179:22">code</name> <operator pos:start="179:24" pos:end="179:25">&gt;=</operator> <literal type="number" pos:start="179:27" pos:end="179:30">0x80</literal></expr>)</condition> <block pos:start="179:33" pos:end="215:9">{<block_content pos:start="181:13" pos:end="213:13"> <comment type="block" pos:start="179:35" pos:end="179:61">/* skip code: 0x80..0xBF */</comment>

	    <decl_stmt pos:start="181:13" pos:end="181:21"><decl pos:start="181:13" pos:end="181:20"><type pos:start="181:13" pos:end="181:15"><name pos:start="181:13" pos:end="181:15">int</name></type> <name pos:start="181:17" pos:end="181:20">skip</name></decl>;</decl_stmt>

	    

	    <expr_stmt pos:start="185:13" pos:end="185:25"><expr pos:start="185:13" pos:end="185:24"><name pos:start="185:13" pos:end="185:16">code</name> <operator pos:start="185:18" pos:end="185:19">&amp;=</operator> <literal type="number" pos:start="185:21" pos:end="185:24">0x3F</literal></expr>;</expr_stmt>

	    <comment type="block" pos:start="187:13" pos:end="189:63">/* codes 0x80 and 0x81 are actually escape codes,

	       skip value minus constant is in the next byte */</comment>

	    <if_stmt pos:start="191:13" pos:end="201:28"><if pos:start="191:13" pos:end="193:37">if<condition pos:start="191:15" pos:end="191:21">(<expr pos:start="191:16" pos:end="191:20"><operator pos:start="191:16" pos:end="191:16">!</operator><name pos:start="191:17" pos:end="191:20">code</name></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:37"><block_content pos:start="193:17" pos:end="193:37">

		<expr_stmt pos:start="193:17" pos:end="193:37"><expr pos:start="193:17" pos:end="193:36"><name pos:start="193:17" pos:end="193:20">skip</name> <operator pos:start="193:22" pos:end="193:22">=</operator> <operator pos:start="193:24" pos:end="193:24">(</operator><operator pos:start="193:25" pos:end="193:25">*</operator><name pos:start="193:26" pos:end="193:28">src</name><operator pos:start="193:29" pos:end="193:30">++</operator><operator pos:start="193:31" pos:end="193:31">)</operator> <operator pos:start="193:33" pos:end="193:33">+</operator> <literal type="number" pos:start="193:35" pos:end="193:36">64</literal></expr>;</expr_stmt></block_content></block></if>

	    <if type="elseif" pos:start="195:13" pos:end="197:38">else if<condition pos:start="195:20" pos:end="195:30">(<expr pos:start="195:21" pos:end="195:29"><name pos:start="195:21" pos:end="195:24">code</name> <operator pos:start="195:26" pos:end="195:27">==</operator> <literal type="number" pos:start="195:29" pos:end="195:29">1</literal></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:38"><block_content pos:start="197:17" pos:end="197:38">

		<expr_stmt pos:start="197:17" pos:end="197:38"><expr pos:start="197:17" pos:end="197:37"><name pos:start="197:17" pos:end="197:20">skip</name> <operator pos:start="197:22" pos:end="197:22">=</operator> <operator pos:start="197:24" pos:end="197:24">(</operator><operator pos:start="197:25" pos:end="197:25">*</operator><name pos:start="197:26" pos:end="197:28">src</name><operator pos:start="197:29" pos:end="197:30">++</operator><operator pos:start="197:31" pos:end="197:31">)</operator> <operator pos:start="197:33" pos:end="197:33">+</operator> <literal type="number" pos:start="197:35" pos:end="197:37">320</literal></expr>;</expr_stmt></block_content></block></if>

	    <else pos:start="199:13" pos:end="201:28">else<block type="pseudo" pos:start="201:17" pos:end="201:28"><block_content pos:start="201:17" pos:end="201:28">

		<expr_stmt pos:start="201:17" pos:end="201:28"><expr pos:start="201:17" pos:end="201:27"><name pos:start="201:17" pos:end="201:20">skip</name> <operator pos:start="201:22" pos:end="201:22">=</operator> <name pos:start="201:24" pos:end="201:27">code</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

	    <expr_stmt pos:start="203:13" pos:end="203:27"><expr pos:start="203:13" pos:end="203:26"><name pos:start="203:13" pos:end="203:18">filled</name> <operator pos:start="203:20" pos:end="203:21">+=</operator> <name pos:start="203:23" pos:end="203:26">skip</name></expr>;</expr_stmt>

	    <while pos:start="205:13" pos:end="213:13">while<condition pos:start="205:18" pos:end="205:35">( <expr pos:start="205:20" pos:end="205:34"><name pos:start="205:20" pos:end="205:25">filled</name> <operator pos:start="205:27" pos:end="205:28">&gt;=</operator> <name pos:start="205:30" pos:end="205:34">width</name></expr>)</condition> <block pos:start="205:37" pos:end="213:13">{<block_content pos:start="207:17" pos:end="211:25">

		<expr_stmt pos:start="207:17" pos:end="207:32"><expr pos:start="207:17" pos:end="207:31"><name pos:start="207:17" pos:end="207:22">filled</name> <operator pos:start="207:24" pos:end="207:25">-=</operator> <name pos:start="207:27" pos:end="207:31">width</name></expr>;</expr_stmt>

		<expr_stmt pos:start="209:17" pos:end="209:30"><expr pos:start="209:17" pos:end="209:29"><name pos:start="209:17" pos:end="209:19">dst</name> <operator pos:start="209:21" pos:end="209:22">-=</operator> <name pos:start="209:24" pos:end="209:29">stride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="211:17" pos:end="211:25"><expr pos:start="211:17" pos:end="211:24"><name pos:start="211:17" pos:end="211:22">height</name><operator pos:start="211:23" pos:end="211:24">--</operator></expr>;</expr_stmt>

	    </block_content>}</block></while>

	</block_content>}</block></if> <else pos:start="215:11" pos:end="237:9">else <block pos:start="215:16" pos:end="237:9">{<block_content pos:start="219:13" pos:end="235:13">

	    <comment type="block" pos:start="217:13" pos:end="217:53">/* zero code treated as one-pixel skip */</comment>

	    <if_stmt pos:start="219:13" pos:end="225:25"><if pos:start="219:13" pos:end="221:52">if<condition pos:start="219:15" pos:end="219:20">(<expr pos:start="219:16" pos:end="219:19"><name pos:start="219:16" pos:end="219:19">code</name></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="221:52"><block_content pos:start="221:17" pos:end="221:52">

		<expr_stmt pos:start="221:17" pos:end="221:52"><expr pos:start="221:17" pos:end="221:51"><name pos:start="221:17" pos:end="221:29"><name pos:start="221:17" pos:end="221:19">dst</name><index pos:start="221:20" pos:end="221:29">[<expr pos:start="221:21" pos:end="221:28"><name pos:start="221:21" pos:end="221:26">filled</name><operator pos:start="221:27" pos:end="221:28">++</operator></expr>]</index></name> <operator pos:start="221:31" pos:end="221:31">=</operator> <name pos:start="221:33" pos:end="221:51"><name pos:start="221:33" pos:end="221:38">ctable</name><index pos:start="221:39" pos:end="221:51">[<expr pos:start="221:40" pos:end="221:50"><name pos:start="221:40" pos:end="221:43">code</name> <operator pos:start="221:45" pos:end="221:45">&amp;</operator> <literal type="number" pos:start="221:47" pos:end="221:50">0x7F</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

	    <else pos:start="223:13" pos:end="225:25">else<block type="pseudo" pos:start="225:17" pos:end="225:25"><block_content pos:start="225:17" pos:end="225:25">

		<expr_stmt pos:start="225:17" pos:end="225:25"><expr pos:start="225:17" pos:end="225:24"><name pos:start="225:17" pos:end="225:22">filled</name><operator pos:start="225:23" pos:end="225:24">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

	    <if_stmt pos:start="227:13" pos:end="235:13"><if pos:start="227:13" pos:end="235:13">if<condition pos:start="227:15" pos:end="227:31">(<expr pos:start="227:16" pos:end="227:30"><name pos:start="227:16" pos:end="227:21">filled</name> <operator pos:start="227:23" pos:end="227:24">&gt;=</operator> <name pos:start="227:26" pos:end="227:30">width</name></expr>)</condition> <block pos:start="227:33" pos:end="235:13">{<block_content pos:start="229:17" pos:end="233:25">

		<expr_stmt pos:start="229:17" pos:end="229:27"><expr pos:start="229:17" pos:end="229:26"><name pos:start="229:17" pos:end="229:22">filled</name> <operator pos:start="229:24" pos:end="229:24">=</operator> <literal type="number" pos:start="229:26" pos:end="229:26">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="231:17" pos:end="231:30"><expr pos:start="231:17" pos:end="231:29"><name pos:start="231:17" pos:end="231:19">dst</name> <operator pos:start="231:21" pos:end="231:22">-=</operator> <name pos:start="231:24" pos:end="231:29">stride</name></expr>;</expr_stmt>

		<expr_stmt pos:start="233:17" pos:end="233:25"><expr pos:start="233:17" pos:end="233:24"><name pos:start="233:17" pos:end="233:22">height</name><operator pos:start="233:23" pos:end="233:24">--</operator></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>

	</block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
