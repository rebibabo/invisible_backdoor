<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3986.c" pos:tabs="8"><function pos:start="1:1" pos:end="32:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">MTPData</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:34">usb_mtp_get_object</name><parameter_list pos:start="1:35" pos:end="3:48">(<parameter pos:start="1:36" pos:end="1:46"><decl pos:start="1:36" pos:end="1:46"><type pos:start="1:36" pos:end="1:46"><name pos:start="1:36" pos:end="1:43">MTPState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:58">MTPControl</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">c</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:47"><decl pos:start="3:36" pos:end="3:47"><type pos:start="3:36" pos:end="3:47"><name pos:start="3:36" pos:end="3:44">MTPObject</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:47">o</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="32:1">{<block_content pos:start="7:5" pos:end="30:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">MTPData</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">d</name> <init pos:start="7:16" pos:end="7:38">= <expr pos:start="7:18" pos:end="7:38"><call pos:start="7:18" pos:end="7:38"><name pos:start="7:18" pos:end="7:35">usb_mtp_data_alloc</name><argument_list pos:start="7:36" pos:end="7:38">(<argument pos:start="7:37" pos:end="7:37"><expr pos:start="7:37" pos:end="7:37"><name pos:start="7:37" pos:end="7:37">c</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:65"><expr pos:start="11:5" pos:end="11:64"><call pos:start="11:5" pos:end="11:64"><name pos:start="11:5" pos:end="11:31">trace_usb_mtp_op_get_object</name><argument_list pos:start="11:32" pos:end="11:64">(<argument pos:start="11:33" pos:end="11:43"><expr pos:start="11:33" pos:end="11:43"><name pos:start="11:33" pos:end="11:43"><name pos:start="11:33" pos:end="11:33">s</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:38">dev</name><operator pos:start="11:39" pos:end="11:39">.</operator><name pos:start="11:40" pos:end="11:43">addr</name></name></expr></argument>, <argument pos:start="11:46" pos:end="11:54"><expr pos:start="11:46" pos:end="11:54"><name pos:start="11:46" pos:end="11:54"><name pos:start="11:46" pos:end="11:46">o</name><operator pos:start="11:47" pos:end="11:48">-&gt;</operator><name pos:start="11:49" pos:end="11:54">handle</name></name></expr></argument>, <argument pos:start="11:57" pos:end="11:63"><expr pos:start="11:57" pos:end="11:63"><name pos:start="11:57" pos:end="11:63"><name pos:start="11:57" pos:end="11:57">o</name><operator pos:start="11:58" pos:end="11:59">-&gt;</operator><name pos:start="11:60" pos:end="11:63">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:5">d</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:9">fd</name></name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:35"><name pos:start="15:13" pos:end="15:16">open</name><argument_list pos:start="15:17" pos:end="15:35">(<argument pos:start="15:18" pos:end="15:24"><expr pos:start="15:18" pos:end="15:24"><name pos:start="15:18" pos:end="15:24"><name pos:start="15:18" pos:end="15:18">o</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:24">path</name></name></expr></argument>, <argument pos:start="15:27" pos:end="15:34"><expr pos:start="15:27" pos:end="15:34"><name pos:start="15:27" pos:end="15:34">O_RDONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="22:5"><if pos:start="17:5" pos:end="22:5">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:9">d</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:13">fd</name></name> <operator pos:start="17:15" pos:end="17:16">==</operator> <operator pos:start="17:18" pos:end="17:18">-</operator><literal type="number" pos:start="17:19" pos:end="17:19">1</literal></expr>)</condition> <block pos:start="17:22" pos:end="22:5">{<block_content pos:start="20:9" pos:end="20:20">


        <return pos:start="20:9" pos:end="20:20">return <expr pos:start="20:16" pos:end="20:19"><name pos:start="20:16" pos:end="20:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="24:5" pos:end="24:32"><expr pos:start="24:5" pos:end="24:31"><name pos:start="24:5" pos:end="24:13"><name pos:start="24:5" pos:end="24:5">d</name><operator pos:start="24:6" pos:end="24:7">-&gt;</operator><name pos:start="24:8" pos:end="24:13">length</name></name> <operator pos:start="24:15" pos:end="24:15">=</operator> <name pos:start="24:17" pos:end="24:31"><name pos:start="24:17" pos:end="24:17">o</name><operator pos:start="24:18" pos:end="24:19">-&gt;</operator><name pos:start="24:20" pos:end="24:23">stat</name><operator pos:start="24:24" pos:end="24:24">.</operator><name pos:start="24:25" pos:end="24:31">st_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="26:5" pos:end="26:20"><expr pos:start="26:5" pos:end="26:19"><name pos:start="26:5" pos:end="26:12"><name pos:start="26:5" pos:end="26:5">d</name><operator pos:start="26:6" pos:end="26:7">-&gt;</operator><name pos:start="26:8" pos:end="26:12">alloc</name></name>  <operator pos:start="26:15" pos:end="26:15">=</operator> <literal type="number" pos:start="26:17" pos:end="26:19">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="28:5" pos:end="28:35"><expr pos:start="28:5" pos:end="28:34"><name pos:start="28:5" pos:end="28:11"><name pos:start="28:5" pos:end="28:5">d</name><operator pos:start="28:6" pos:end="28:7">-&gt;</operator><name pos:start="28:8" pos:end="28:11">data</name></name>   <operator pos:start="28:15" pos:end="28:15">=</operator> <call pos:start="28:17" pos:end="28:34"><name pos:start="28:17" pos:end="28:24">g_malloc</name><argument_list pos:start="28:25" pos:end="28:34">(<argument pos:start="28:26" pos:end="28:33"><expr pos:start="28:26" pos:end="28:33"><name pos:start="28:26" pos:end="28:33"><name pos:start="28:26" pos:end="28:26">d</name><operator pos:start="28:27" pos:end="28:28">-&gt;</operator><name pos:start="28:29" pos:end="28:33">alloc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="30:5" pos:end="30:13">return <expr pos:start="30:12" pos:end="30:12"><name pos:start="30:12" pos:end="30:12">d</name></expr>;</return>

</block_content>}</block></function></unit>
