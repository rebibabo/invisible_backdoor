<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13543.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">decode_pal</name><parameter_list pos:start="1:22" pos:end="1:60">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:34">MSS12Context</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">ctx</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><name pos:start="1:42" pos:end="1:51">ArithCoder</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:59">acoder</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:18">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:15">ncol</name></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">r</name></decl>, <decl pos:start="5:21" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:21">g</name></decl>, <decl pos:start="5:24" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:24">b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">uint32_t</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">pal</name> <init pos:start="7:19" pos:end="7:54">= <expr pos:start="7:21" pos:end="7:54"><name pos:start="7:21" pos:end="7:28"><name pos:start="7:21" pos:end="7:23">ctx</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:28">pal</name></name> <operator pos:start="7:30" pos:end="7:30">+</operator> <literal type="number" pos:start="7:32" pos:end="7:36">256</literal> <operator pos:start="7:36" pos:end="7:36">-</operator> <name pos:start="7:38" pos:end="7:54"><name pos:start="7:38" pos:end="7:40">ctx</name><operator pos:start="7:41" pos:end="7:42">-&gt;</operator><name pos:start="7:43" pos:end="7:54">free_colours</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:27">(<expr pos:start="11:9" pos:end="11:26"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:26"><name pos:start="11:10" pos:end="11:12">ctx</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:26">free_colours</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:59"><expr pos:start="17:5" pos:end="17:58"><name pos:start="17:5" pos:end="17:8">ncol</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:58"><name pos:start="17:12" pos:end="17:27">arith_get_number</name><argument_list pos:start="17:28" pos:end="17:58">(<argument pos:start="17:29" pos:end="17:34"><expr pos:start="17:29" pos:end="17:34"><name pos:start="17:29" pos:end="17:34">acoder</name></expr></argument>, <argument pos:start="17:37" pos:end="17:57"><expr pos:start="17:37" pos:end="17:57"><name pos:start="17:37" pos:end="17:53"><name pos:start="17:37" pos:end="17:39">ctx</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:53">free_colours</name></name> <operator pos:start="17:55" pos:end="17:55">+</operator> <literal type="number" pos:start="17:57" pos:end="17:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="29:5">for <control pos:start="19:9" pos:end="19:30">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:25"><expr pos:start="19:17" pos:end="19:24"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:24">ncol</name></expr>;</condition> <incr pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:27">i</name><operator pos:start="19:28" pos:end="19:29">++</operator></expr></incr>)</control> <block pos:start="19:32" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:57">

        <expr_stmt pos:start="21:9" pos:end="21:38"><expr pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:9">r</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:37"><name pos:start="21:13" pos:end="21:26">arith_get_bits</name><argument_list pos:start="21:27" pos:end="21:37">(<argument pos:start="21:28" pos:end="21:33"><expr pos:start="21:28" pos:end="21:33"><name pos:start="21:28" pos:end="21:33">acoder</name></expr></argument>, <argument pos:start="21:36" pos:end="21:36"><expr pos:start="21:36" pos:end="21:36"><literal type="number" pos:start="21:36" pos:end="21:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:38"><expr pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:9">g</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:26">arith_get_bits</name><argument_list pos:start="23:27" pos:end="23:37">(<argument pos:start="23:28" pos:end="23:33"><expr pos:start="23:28" pos:end="23:33"><name pos:start="23:28" pos:end="23:33">acoder</name></expr></argument>, <argument pos:start="23:36" pos:end="23:36"><expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:9">b</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:37"><name pos:start="25:13" pos:end="25:26">arith_get_bits</name><argument_list pos:start="25:27" pos:end="25:37">(<argument pos:start="25:28" pos:end="25:33"><expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33">acoder</name></expr></argument>, <argument pos:start="25:36" pos:end="25:36"><expr pos:start="25:36" pos:end="25:36"><literal type="number" pos:start="25:36" pos:end="25:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:57"><expr pos:start="27:9" pos:end="27:56"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:12">pal</name><operator pos:start="27:13" pos:end="27:14">++</operator> <operator pos:start="27:16" pos:end="27:16">=</operator> <operator pos:start="27:18" pos:end="27:18">(</operator><literal type="number" pos:start="27:19" pos:end="27:22">0xFF</literal> <operator pos:start="27:24" pos:end="27:25">&lt;&lt;</operator> <literal type="number" pos:start="27:27" pos:end="27:28">24</literal><operator pos:start="27:29" pos:end="27:29">)</operator> <operator pos:start="27:31" pos:end="27:31">|</operator> <operator pos:start="27:33" pos:end="27:33">(</operator><name pos:start="27:34" pos:end="27:34">r</name> <operator pos:start="27:36" pos:end="27:37">&lt;&lt;</operator> <literal type="number" pos:start="27:39" pos:end="27:40">16</literal><operator pos:start="27:41" pos:end="27:41">)</operator> <operator pos:start="27:43" pos:end="27:43">|</operator> <operator pos:start="27:45" pos:end="27:45">(</operator><name pos:start="27:46" pos:end="27:46">g</name> <operator pos:start="27:48" pos:end="27:49">&lt;&lt;</operator> <literal type="number" pos:start="27:51" pos:end="27:51">8</literal><operator pos:start="27:52" pos:end="27:52">)</operator> <operator pos:start="27:54" pos:end="27:54">|</operator> <name pos:start="27:56" pos:end="27:56">b</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="33:5" pos:end="33:18">return <expr pos:start="33:12" pos:end="33:17"><operator pos:start="33:12" pos:end="33:12">!</operator><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:17">ncol</name></expr>;</return>

</block_content>}</block></function>
</unit>
