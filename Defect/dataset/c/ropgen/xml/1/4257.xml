<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4257.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">parse_ptl</name><parameter_list pos:start="1:22" pos:end="1:71">(<parameter pos:start="1:23" pos:end="1:36"><decl pos:start="1:23" pos:end="1:36"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:33">HEVCContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:46"><decl pos:start="1:39" pos:end="1:46"><type pos:start="1:39" pos:end="1:46"><name pos:start="1:39" pos:end="1:41">PTL</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">ptl</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:70"><decl pos:start="1:49" pos:end="1:70"><type pos:start="1:49" pos:end="1:70"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:70">max_num_sub_layers</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">HEVCLocalContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">lc</name> <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">gb</name> <init pos:start="9:23" pos:end="9:31">= <expr pos:start="9:25" pos:end="9:31"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:31"><name pos:start="9:26" pos:end="9:27">lc</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:52"><expr pos:start="11:5" pos:end="11:51"><call pos:start="11:5" pos:end="11:51"><name pos:start="11:5" pos:end="11:29">decode_profile_tier_level</name><argument_list pos:start="11:30" pos:end="11:51">(<argument pos:start="11:31" pos:end="11:31"><expr pos:start="11:31" pos:end="11:31"><name pos:start="11:31" pos:end="11:31">s</name></expr></argument>, <argument pos:start="11:34" pos:end="11:50"><expr pos:start="11:34" pos:end="11:50"><operator pos:start="11:34" pos:end="11:34">&amp;</operator><name pos:start="11:35" pos:end="11:50"><name pos:start="11:35" pos:end="11:37">ptl</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:50">general_ptl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:7">ptl</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:20">general_ptl</name><operator pos:start="13:21" pos:end="13:21">.</operator><name pos:start="13:22" pos:end="13:30">level_idc</name></name> <operator pos:start="13:32" pos:end="13:32">=</operator> <call pos:start="13:34" pos:end="13:48"><name pos:start="13:34" pos:end="13:41">get_bits</name><argument_list pos:start="13:42" pos:end="13:48">(<argument pos:start="13:43" pos:end="13:44"><expr pos:start="13:43" pos:end="13:44"><name pos:start="13:43" pos:end="13:44">gb</name></expr></argument>, <argument pos:start="13:47" pos:end="13:47"><expr pos:start="13:47" pos:end="13:47"><literal type="number" pos:start="13:47" pos:end="13:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="17:5" pos:end="23:5">for <control pos:start="17:9" pos:end="17:48">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:43"><expr pos:start="17:17" pos:end="17:42"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:38">max_num_sub_layers</name> <operator pos:start="17:40" pos:end="17:40">-</operator> <literal type="number" pos:start="17:42" pos:end="17:42">1</literal></expr>;</condition> <incr pos:start="17:45" pos:end="17:47"><expr pos:start="17:45" pos:end="17:47"><name pos:start="17:45" pos:end="17:45">i</name><operator pos:start="17:46" pos:end="17:47">++</operator></expr></incr>)</control> <block pos:start="17:50" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:63">

        <expr_stmt pos:start="19:9" pos:end="19:63"><expr pos:start="19:9" pos:end="19:62"><name pos:start="19:9" pos:end="19:46"><name pos:start="19:9" pos:end="19:11">ptl</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:43">sub_layer_profile_present_flag</name><index pos:start="19:44" pos:end="19:46">[<expr pos:start="19:45" pos:end="19:45"><name pos:start="19:45" pos:end="19:45">i</name></expr>]</index></name> <operator pos:start="19:48" pos:end="19:48">=</operator> <call pos:start="19:50" pos:end="19:62"><name pos:start="19:50" pos:end="19:58">get_bits1</name><argument_list pos:start="19:59" pos:end="19:62">(<argument pos:start="19:60" pos:end="19:61"><expr pos:start="19:60" pos:end="19:61"><name pos:start="19:60" pos:end="19:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:63"><expr pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:11">ptl</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:41">sub_layer_level_present_flag</name><index pos:start="21:42" pos:end="21:44">[<expr pos:start="21:43" pos:end="21:43"><name pos:start="21:43" pos:end="21:43">i</name></expr>]</index></name>   <operator pos:start="21:48" pos:end="21:48">=</operator> <call pos:start="21:50" pos:end="21:62"><name pos:start="21:50" pos:end="21:58">get_bits1</name><argument_list pos:start="21:59" pos:end="21:62">(<argument pos:start="21:60" pos:end="21:61"><expr pos:start="21:60" pos:end="21:61"><name pos:start="21:60" pos:end="21:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="25:5" pos:end="29:29"><if pos:start="25:5" pos:end="29:29">if <condition pos:start="25:8" pos:end="25:34">(<expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:26">max_num_sub_layers</name> <operator pos:start="25:28" pos:end="25:28">-</operator> <literal type="number" pos:start="25:30" pos:end="25:30">1</literal><operator pos:start="25:31" pos:end="25:31">&gt;</operator> <literal type="number" pos:start="25:33" pos:end="25:33">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="29:29"><block_content pos:start="27:9" pos:end="29:29">

        <for pos:start="27:9" pos:end="29:29">for <control pos:start="27:13" pos:end="27:52">(<init pos:start="27:14" pos:end="27:40"><expr pos:start="27:14" pos:end="27:39"><name pos:start="27:14" pos:end="27:14">i</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:35">max_num_sub_layers</name> <operator pos:start="27:37" pos:end="27:37">-</operator> <literal type="number" pos:start="27:39" pos:end="27:39">1</literal></expr>;</init> <condition pos:start="27:42" pos:end="27:47"><expr pos:start="27:42" pos:end="27:46"><name pos:start="27:42" pos:end="27:42">i</name> <operator pos:start="27:44" pos:end="27:44">&lt;</operator> <literal type="number" pos:start="27:46" pos:end="27:46">8</literal></expr>;</condition> <incr pos:start="27:49" pos:end="27:51"><expr pos:start="27:49" pos:end="27:51"><name pos:start="27:49" pos:end="27:49">i</name><operator pos:start="27:50" pos:end="27:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:13" pos:end="29:29"><block_content pos:start="29:13" pos:end="29:29">

            <expr_stmt pos:start="29:13" pos:end="29:29"><expr pos:start="29:13" pos:end="29:28"><call pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:21">skip_bits</name><argument_list pos:start="29:22" pos:end="29:28">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">gb</name></expr></argument>, <argument pos:start="29:27" pos:end="29:27"><expr pos:start="29:27" pos:end="29:27"><literal type="number" pos:start="29:27" pos:end="29:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt> <comment type="line" pos:start="29:31" pos:end="29:55">// reserved_zero_2bits[i]</comment>

    <for pos:start="31:5" pos:end="41:5">for <control pos:start="31:9" pos:end="31:48">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:43"><expr pos:start="31:17" pos:end="31:42"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:38">max_num_sub_layers</name> <operator pos:start="31:40" pos:end="31:40">-</operator> <literal type="number" pos:start="31:42" pos:end="31:42">1</literal></expr>;</condition> <incr pos:start="31:45" pos:end="31:47"><expr pos:start="31:45" pos:end="31:47"><name pos:start="31:45" pos:end="31:45">i</name><operator pos:start="31:46" pos:end="31:47">++</operator></expr></incr>)</control> <block pos:start="31:50" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:62">

        <if_stmt pos:start="33:9" pos:end="35:65"><if pos:start="33:9" pos:end="35:65">if <condition pos:start="33:12" pos:end="33:51">(<expr pos:start="33:13" pos:end="33:50"><name pos:start="33:13" pos:end="33:50"><name pos:start="33:13" pos:end="33:15">ptl</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:47">sub_layer_profile_present_flag</name><index pos:start="33:48" pos:end="33:50">[<expr pos:start="33:49" pos:end="33:49"><name pos:start="33:49" pos:end="33:49">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:65"><block_content pos:start="35:13" pos:end="35:65">

            <expr_stmt pos:start="35:13" pos:end="35:65"><expr pos:start="35:13" pos:end="35:64"><call pos:start="35:13" pos:end="35:64"><name pos:start="35:13" pos:end="35:37">decode_profile_tier_level</name><argument_list pos:start="35:38" pos:end="35:64">(<argument pos:start="35:39" pos:end="35:39"><expr pos:start="35:39" pos:end="35:39"><name pos:start="35:39" pos:end="35:39">s</name></expr></argument>, <argument pos:start="35:42" pos:end="35:63"><expr pos:start="35:42" pos:end="35:63"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:63"><name pos:start="35:43" pos:end="35:45">ptl</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:60">sub_layer_ptl</name><index pos:start="35:61" pos:end="35:63">[<expr pos:start="35:62" pos:end="35:62"><name pos:start="35:62" pos:end="35:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="39:62"><if pos:start="37:9" pos:end="39:62">if <condition pos:start="37:12" pos:end="37:49">(<expr pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:15">ptl</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:45">sub_layer_level_present_flag</name><index pos:start="37:46" pos:end="37:48">[<expr pos:start="37:47" pos:end="37:47"><name pos:start="37:47" pos:end="37:47">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:62"><block_content pos:start="39:13" pos:end="39:62">

            <expr_stmt pos:start="39:13" pos:end="39:62"><expr pos:start="39:13" pos:end="39:61"><name pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:15">ptl</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:30">sub_layer_ptl</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">i</name></expr>]</index></name><operator pos:start="39:34" pos:end="39:34">.</operator><name pos:start="39:35" pos:end="39:43">level_idc</name> <operator pos:start="39:45" pos:end="39:45">=</operator> <call pos:start="39:47" pos:end="39:61"><name pos:start="39:47" pos:end="39:54">get_bits</name><argument_list pos:start="39:55" pos:end="39:61">(<argument pos:start="39:56" pos:end="39:57"><expr pos:start="39:56" pos:end="39:57"><name pos:start="39:56" pos:end="39:57">gb</name></expr></argument>, <argument pos:start="39:60" pos:end="39:60"><expr pos:start="39:60" pos:end="39:60"><literal type="number" pos:start="39:60" pos:end="39:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
