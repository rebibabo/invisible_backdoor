<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15673.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_cblk</name><parameter_list pos:start="1:23" pos:end="5:58">(<parameter pos:start="1:24" pos:end="1:48"><decl pos:start="1:24" pos:end="1:48"><type pos:start="1:24" pos:end="1:48"><name pos:start="1:24" pos:end="1:45">Jpeg2000DecoderContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:77"><decl pos:start="1:51" pos:end="1:77"><type pos:start="1:51" pos:end="1:77"><name pos:start="1:51" pos:end="1:69">Jpeg2000CodingStyle</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:77">codsty</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:44"><decl pos:start="3:24" pos:end="3:44"><type pos:start="3:24" pos:end="3:44"><name pos:start="3:24" pos:end="3:40">Jpeg2000T1Context</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:44">t1</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:64"><decl pos:start="3:47" pos:end="3:64"><type pos:start="3:47" pos:end="3:64"><name pos:start="3:47" pos:end="3:58">Jpeg2000Cblk</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:64">cblk</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:32"><decl pos:start="5:24" pos:end="5:32"><type pos:start="5:24" pos:end="5:32"><name pos:start="5:24" pos:end="5:26">int</name></type> <name pos:start="5:28" pos:end="5:32">width</name></decl></parameter>, <parameter pos:start="5:35" pos:end="5:44"><decl pos:start="5:35" pos:end="5:44"><type pos:start="5:35" pos:end="5:44"><name pos:start="5:35" pos:end="5:37">int</name></type> <name pos:start="5:39" pos:end="5:44">height</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:57"><decl pos:start="5:47" pos:end="5:57"><type pos:start="5:47" pos:end="5:57"><name pos:start="5:47" pos:end="5:49">int</name></type> <name pos:start="5:51" pos:end="5:57">bandpos</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="107:1">{<block_content pos:start="9:5" pos:end="105:13">

    <decl_stmt pos:start="9:5" pos:end="9:93"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">passno</name> <init pos:start="9:16" pos:end="9:30">= <expr pos:start="9:18" pos:end="9:30"><name pos:start="9:18" pos:end="9:30"><name pos:start="9:18" pos:end="9:21">cblk</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:30">npasses</name></name></expr></init></decl>, <decl pos:start="9:33" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:38">pass_t</name> <init pos:start="9:40" pos:end="9:42">= <expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">2</literal></expr></init></decl>, <decl pos:start="9:45" pos:end="9:72"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:45" pos:end="9:48">bpno</name> <init pos:start="9:50" pos:end="9:72">= <expr pos:start="9:52" pos:end="9:72"><name pos:start="9:52" pos:end="9:68"><name pos:start="9:52" pos:end="9:55">cblk</name><operator pos:start="9:56" pos:end="9:57">-&gt;</operator><name pos:start="9:58" pos:end="9:68">nonzerobits</name></name> <operator pos:start="9:70" pos:end="9:70">-</operator> <literal type="number" pos:start="9:72" pos:end="9:72">1</literal></expr></init></decl>, <decl pos:start="9:75" pos:end="9:75"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:75" pos:end="9:75">y</name></decl>, <decl pos:start="9:78" pos:end="9:92"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:78" pos:end="9:88">clnpass_cnt</name> <init pos:start="9:90" pos:end="9:92">= <expr pos:start="9:92" pos:end="9:92"><literal type="number" pos:start="9:92" pos:end="9:92">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:70"><decl pos:start="11:5" pos:end="11:69"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:25">bpass_csty_symbol</name> <init pos:start="11:27" pos:end="11:69">= <expr pos:start="11:29" pos:end="11:69"><name pos:start="11:29" pos:end="11:48">JPEG2000_CBLK_BYPASS</name> <operator pos:start="11:50" pos:end="11:50">&amp;</operator> <name pos:start="11:52" pos:end="11:69"><name pos:start="11:52" pos:end="11:57">codsty</name><operator pos:start="11:58" pos:end="11:59">-&gt;</operator><name pos:start="11:60" pos:end="11:69">cblk_style</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:77"><decl pos:start="13:5" pos:end="13:76"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:35">vert_causal_ctx_csty_symbol</name> <init pos:start="13:37" pos:end="13:76">= <expr pos:start="13:39" pos:end="13:76"><name pos:start="13:39" pos:end="13:55">JPEG2000_CBLK_VSC</name> <operator pos:start="13:57" pos:end="13:57">&amp;</operator> <name pos:start="13:59" pos:end="13:76"><name pos:start="13:59" pos:end="13:64">codsty</name><operator pos:start="13:65" pos:end="13:66">-&gt;</operator><name pos:start="13:67" pos:end="13:76">cblk_style</name></name></expr></init></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="19:59">for <control pos:start="17:9" pos:end="17:32">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">y</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:27"><expr pos:start="17:17" pos:end="17:26"><name pos:start="17:17" pos:end="17:17">y</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:26">height</name></expr>;</condition> <incr pos:start="17:29" pos:end="17:31"><expr pos:start="17:29" pos:end="17:31"><name pos:start="17:29" pos:end="17:29">y</name><operator pos:start="17:30" pos:end="17:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:9" pos:end="19:59"><block_content pos:start="19:9" pos:end="19:59">

        <expr_stmt pos:start="19:9" pos:end="19:59"><expr pos:start="19:9" pos:end="19:58"><call pos:start="19:9" pos:end="19:58"><name pos:start="19:9" pos:end="19:14">memset</name><argument_list pos:start="19:15" pos:end="19:58">(<argument pos:start="19:16" pos:end="19:26"><expr pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:17">t1</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:23">data</name><index pos:start="19:24" pos:end="19:26">[<expr pos:start="19:25" pos:end="19:25"><name pos:start="19:25" pos:end="19:25">y</name></expr>]</index></name></expr></argument>, <argument pos:start="19:29" pos:end="19:29"><expr pos:start="19:29" pos:end="19:29"><literal type="number" pos:start="19:29" pos:end="19:29">0</literal></expr></argument>, <argument pos:start="19:32" pos:end="19:57"><expr pos:start="19:32" pos:end="19:57"><name pos:start="19:32" pos:end="19:36">width</name> <operator pos:start="19:38" pos:end="19:38">*</operator> <sizeof pos:start="19:40" pos:end="19:57">sizeof<argument_list pos:start="19:46" pos:end="19:57">(<argument pos:start="19:47" pos:end="19:56"><expr pos:start="19:47" pos:end="19:56"><operator pos:start="19:47" pos:end="19:47">*</operator><operator pos:start="19:48" pos:end="19:48">*</operator><name pos:start="19:49" pos:end="19:56"><name pos:start="19:49" pos:end="19:50">t1</name><operator pos:start="19:51" pos:end="19:52">-&gt;</operator><name pos:start="19:53" pos:end="19:56">data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="23:5" pos:end="23:67">/* If code-block contains no compressed data: nothing to do. */</comment>

    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:21"><name pos:start="25:10" pos:end="25:13">cblk</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:21">length</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="31:5" pos:end="33:65">for <control pos:start="31:9" pos:end="31:34">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">y</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:29"><expr pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:17">y</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:26">height</name><operator pos:start="31:27" pos:end="31:27">+</operator><literal type="number" pos:start="31:28" pos:end="31:28">2</literal></expr>;</condition> <incr pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:31">y</name><operator pos:start="31:32" pos:end="31:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:9" pos:end="33:65"><block_content pos:start="33:9" pos:end="33:65">

        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><call pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:14">memset</name><argument_list pos:start="33:15" pos:end="33:64">(<argument pos:start="33:16" pos:end="33:27"><expr pos:start="33:16" pos:end="33:27"><name pos:start="33:16" pos:end="33:27"><name pos:start="33:16" pos:end="33:17">t1</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:24">flags</name><index pos:start="33:25" pos:end="33:27">[<expr pos:start="33:26" pos:end="33:26"><name pos:start="33:26" pos:end="33:26">y</name></expr>]</index></name></expr></argument>, <argument pos:start="33:30" pos:end="33:30"><expr pos:start="33:30" pos:end="33:30"><literal type="number" pos:start="33:30" pos:end="33:30">0</literal></expr></argument>, <argument pos:start="33:33" pos:end="33:63"><expr pos:start="33:33" pos:end="33:63"><operator pos:start="33:33" pos:end="33:33">(</operator><name pos:start="33:34" pos:end="33:38">width</name> <operator pos:start="33:40" pos:end="33:40">+</operator> <literal type="number" pos:start="33:42" pos:end="33:42">2</literal><operator pos:start="33:43" pos:end="33:43">)</operator><operator pos:start="33:44" pos:end="33:44">*</operator><sizeof pos:start="33:45" pos:end="33:63">sizeof<argument_list pos:start="33:51" pos:end="33:63">(<argument pos:start="33:52" pos:end="33:62"><expr pos:start="33:52" pos:end="33:62"><operator pos:start="33:52" pos:end="33:52">*</operator><operator pos:start="33:53" pos:end="33:53">*</operator><name pos:start="33:54" pos:end="33:62"><name pos:start="33:54" pos:end="33:55">t1</name><operator pos:start="33:56" pos:end="33:57">-&gt;</operator><name pos:start="33:58" pos:end="33:62">flags</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:8">cblk</name><operator pos:start="37:9" pos:end="37:10">-&gt;</operator><name pos:start="37:11" pos:end="37:14">data</name><index pos:start="37:15" pos:end="37:28">[<expr pos:start="37:16" pos:end="37:27"><name pos:start="37:16" pos:end="37:27"><name pos:start="37:16" pos:end="37:19">cblk</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:27">length</name></name></expr>]</index></name> <operator pos:start="37:30" pos:end="37:30">=</operator> <literal type="number" pos:start="37:32" pos:end="37:35">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:38"><expr pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:8">cblk</name><operator pos:start="39:9" pos:end="39:10">-&gt;</operator><name pos:start="39:11" pos:end="39:14">data</name><index pos:start="39:15" pos:end="39:30">[<expr pos:start="39:16" pos:end="39:29"><name pos:start="39:16" pos:end="39:27"><name pos:start="39:16" pos:end="39:19">cblk</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:27">length</name></name><operator pos:start="39:28" pos:end="39:28">+</operator><literal type="number" pos:start="39:29" pos:end="39:29">1</literal></expr>]</index></name> <operator pos:start="39:32" pos:end="39:32">=</operator> <literal type="number" pos:start="39:34" pos:end="39:37">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:41"><expr pos:start="41:5" pos:end="41:40"><call pos:start="41:5" pos:end="41:40"><name pos:start="41:5" pos:end="41:18">ff_mqc_initdec</name><argument_list pos:start="41:19" pos:end="41:40">(<argument pos:start="41:20" pos:end="41:27"><expr pos:start="41:20" pos:end="41:27"><operator pos:start="41:20" pos:end="41:20">&amp;</operator><name pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:22">t1</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:27">mqc</name></name></expr></argument>, <argument pos:start="41:30" pos:end="41:39"><expr pos:start="41:30" pos:end="41:39"><name pos:start="41:30" pos:end="41:39"><name pos:start="41:30" pos:end="41:33">cblk</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:39">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="45:5" pos:end="103:5">while <condition pos:start="45:11" pos:end="45:20">(<expr pos:start="45:12" pos:end="45:19"><name pos:start="45:12" pos:end="45:17">passno</name><operator pos:start="45:18" pos:end="45:19">--</operator></expr>)</condition> <block pos:start="45:22" pos:end="103:5">{<block_content pos:start="47:9" pos:end="101:9">

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:21">(<expr pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:16">bpno</name> <operator pos:start="47:18" pos:end="47:18">&lt;</operator> <literal type="number" pos:start="47:20" pos:end="47:20">0</literal></expr>)</condition> <block pos:start="47:23" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:35">

            <expr_stmt pos:start="49:13" pos:end="49:61"><expr pos:start="49:13" pos:end="49:60"><call pos:start="49:13" pos:end="49:60"><name pos:start="49:13" pos:end="49:18">av_log</name><argument_list pos:start="49:19" pos:end="49:60">(<argument pos:start="49:20" pos:end="49:27"><expr pos:start="49:20" pos:end="49:27"><name pos:start="49:20" pos:end="49:27"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:27">avctx</name></name></expr></argument>, <argument pos:start="49:30" pos:end="49:41"><expr pos:start="49:30" pos:end="49:41"><name pos:start="49:30" pos:end="49:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:44" pos:end="49:59"><expr pos:start="49:44" pos:end="49:59"><literal type="string" pos:start="49:44" pos:end="49:59">"bpno invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="51:13" pos:end="51:35">return <expr pos:start="51:20" pos:end="51:34"><call pos:start="51:20" pos:end="51:34"><name pos:start="51:20" pos:end="51:26">AVERROR</name><argument_list pos:start="51:27" pos:end="51:34">(<argument pos:start="51:28" pos:end="51:33"><expr pos:start="51:28" pos:end="51:33"><name pos:start="51:28" pos:end="51:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="55:9" pos:end="89:9">switch<condition pos:start="55:15" pos:end="55:22">(<expr pos:start="55:16" pos:end="55:21"><name pos:start="55:16" pos:end="55:21">pass_t</name></expr>)</condition> <block pos:start="55:24" pos:end="89:9">{<block_content pos:start="57:9" pos:end="87:18">

        <case pos:start="57:9" pos:end="57:15">case <expr pos:start="57:14" pos:end="57:14"><literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="61:97"><expr pos:start="59:13" pos:end="61:96"><call pos:start="59:13" pos:end="61:96"><name pos:start="59:13" pos:end="59:26">decode_sigpass</name><argument_list pos:start="59:27" pos:end="61:96">(<argument pos:start="59:28" pos:end="59:29"><expr pos:start="59:28" pos:end="59:29"><name pos:start="59:28" pos:end="59:29">t1</name></expr></argument>, <argument pos:start="59:32" pos:end="59:36"><expr pos:start="59:32" pos:end="59:36"><name pos:start="59:32" pos:end="59:36">width</name></expr></argument>, <argument pos:start="59:39" pos:end="59:44"><expr pos:start="59:39" pos:end="59:44"><name pos:start="59:39" pos:end="59:44">height</name></expr></argument>, <argument pos:start="59:47" pos:end="59:54"><expr pos:start="59:47" pos:end="59:54"><name pos:start="59:47" pos:end="59:50">bpno</name> <operator pos:start="59:52" pos:end="59:52">+</operator> <literal type="number" pos:start="59:54" pos:end="59:54">1</literal></expr></argument>, <argument pos:start="59:57" pos:end="59:63"><expr pos:start="59:57" pos:end="59:63"><name pos:start="59:57" pos:end="59:63">bandpos</name></expr></argument>,

                           <argument pos:start="61:28" pos:end="61:66"><expr pos:start="61:28" pos:end="61:66"><name pos:start="61:28" pos:end="61:44">bpass_csty_symbol</name> <operator pos:start="61:46" pos:end="61:47">&amp;&amp;</operator> <operator pos:start="61:49" pos:end="61:49">(</operator><name pos:start="61:50" pos:end="61:60">clnpass_cnt</name> <operator pos:start="61:62" pos:end="61:63">&gt;=</operator> <literal type="number" pos:start="61:65" pos:end="61:65">4</literal><operator pos:start="61:66" pos:end="61:66">)</operator></expr></argument>, <argument pos:start="61:69" pos:end="61:95"><expr pos:start="61:69" pos:end="61:95"><name pos:start="61:69" pos:end="61:95">vert_causal_ctx_csty_symbol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:15">case <expr pos:start="65:14" pos:end="65:14"><literal type="number" pos:start="65:14" pos:end="65:14">1</literal></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:56"><expr pos:start="67:13" pos:end="67:55"><call pos:start="67:13" pos:end="67:55"><name pos:start="67:13" pos:end="67:26">decode_refpass</name><argument_list pos:start="67:27" pos:end="67:55">(<argument pos:start="67:28" pos:end="67:29"><expr pos:start="67:28" pos:end="67:29"><name pos:start="67:28" pos:end="67:29">t1</name></expr></argument>, <argument pos:start="67:32" pos:end="67:36"><expr pos:start="67:32" pos:end="67:36"><name pos:start="67:32" pos:end="67:36">width</name></expr></argument>, <argument pos:start="67:39" pos:end="67:44"><expr pos:start="67:39" pos:end="67:44"><name pos:start="67:39" pos:end="67:44">height</name></expr></argument>, <argument pos:start="67:47" pos:end="67:54"><expr pos:start="67:47" pos:end="67:54"><name pos:start="67:47" pos:end="67:50">bpno</name> <operator pos:start="67:52" pos:end="67:52">+</operator> <literal type="number" pos:start="67:54" pos:end="67:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="69:13" pos:end="71:53"><if pos:start="69:13" pos:end="71:53">if <condition pos:start="69:16" pos:end="69:54">(<expr pos:start="69:17" pos:end="69:53"><name pos:start="69:17" pos:end="69:33">bpass_csty_symbol</name> <operator pos:start="69:35" pos:end="69:36">&amp;&amp;</operator> <name pos:start="69:38" pos:end="69:48">clnpass_cnt</name> <operator pos:start="69:50" pos:end="69:51">&gt;=</operator> <literal type="number" pos:start="69:53" pos:end="69:53">4</literal></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:53"><block_content pos:start="71:17" pos:end="71:53">

                <expr_stmt pos:start="71:17" pos:end="71:53"><expr pos:start="71:17" pos:end="71:52"><call pos:start="71:17" pos:end="71:52"><name pos:start="71:17" pos:end="71:30">ff_mqc_initdec</name><argument_list pos:start="71:31" pos:end="71:52">(<argument pos:start="71:32" pos:end="71:39"><expr pos:start="71:32" pos:end="71:39"><operator pos:start="71:32" pos:end="71:32">&amp;</operator><name pos:start="71:33" pos:end="71:39"><name pos:start="71:33" pos:end="71:34">t1</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:39">mqc</name></name></expr></argument>, <argument pos:start="71:42" pos:end="71:51"><expr pos:start="71:42" pos:end="71:51"><name pos:start="71:42" pos:end="71:51"><name pos:start="71:42" pos:end="71:45">cblk</name><operator pos:start="71:46" pos:end="71:47">-&gt;</operator><name pos:start="71:48" pos:end="71:51">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <case pos:start="75:9" pos:end="75:15">case <expr pos:start="75:14" pos:end="75:14"><literal type="number" pos:start="75:14" pos:end="75:14">2</literal></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="79:99"><expr pos:start="77:13" pos:end="79:98"><call pos:start="77:13" pos:end="79:98"><name pos:start="77:13" pos:end="77:26">decode_clnpass</name><argument_list pos:start="77:27" pos:end="79:98">(<argument pos:start="77:28" pos:end="77:28"><expr pos:start="77:28" pos:end="77:28"><name pos:start="77:28" pos:end="77:28">s</name></expr></argument>, <argument pos:start="77:31" pos:end="77:32"><expr pos:start="77:31" pos:end="77:32"><name pos:start="77:31" pos:end="77:32">t1</name></expr></argument>, <argument pos:start="77:35" pos:end="77:39"><expr pos:start="77:35" pos:end="77:39"><name pos:start="77:35" pos:end="77:39">width</name></expr></argument>, <argument pos:start="77:42" pos:end="77:47"><expr pos:start="77:42" pos:end="77:47"><name pos:start="77:42" pos:end="77:47">height</name></expr></argument>, <argument pos:start="77:50" pos:end="77:57"><expr pos:start="77:50" pos:end="77:57"><name pos:start="77:50" pos:end="77:53">bpno</name> <operator pos:start="77:55" pos:end="77:55">+</operator> <literal type="number" pos:start="77:57" pos:end="77:57">1</literal></expr></argument>, <argument pos:start="77:60" pos:end="77:66"><expr pos:start="77:60" pos:end="77:66"><name pos:start="77:60" pos:end="77:66">bandpos</name></expr></argument>,

                           <argument pos:start="79:28" pos:end="79:68"><expr pos:start="79:28" pos:end="79:68"><name pos:start="79:28" pos:end="79:45"><name pos:start="79:28" pos:end="79:33">codsty</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:45">cblk_style</name></name> <operator pos:start="79:47" pos:end="79:47">&amp;</operator> <name pos:start="79:49" pos:end="79:68">JPEG2000_CBLK_SEGSYM</name></expr></argument>, <argument pos:start="79:71" pos:end="79:97"><expr pos:start="79:71" pos:end="79:97"><name pos:start="79:71" pos:end="79:97">vert_causal_ctx_csty_symbol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:42"><expr pos:start="81:13" pos:end="81:41"><name pos:start="81:13" pos:end="81:23">clnpass_cnt</name> <operator pos:start="81:25" pos:end="81:25">=</operator> <name pos:start="81:27" pos:end="81:37">clnpass_cnt</name> <operator pos:start="81:39" pos:end="81:39">+</operator> <literal type="number" pos:start="81:41" pos:end="81:41">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="85:53"><if pos:start="83:13" pos:end="85:53">if <condition pos:start="83:16" pos:end="83:54">(<expr pos:start="83:17" pos:end="83:53"><name pos:start="83:17" pos:end="83:33">bpass_csty_symbol</name> <operator pos:start="83:35" pos:end="83:36">&amp;&amp;</operator> <name pos:start="83:38" pos:end="83:48">clnpass_cnt</name> <operator pos:start="83:50" pos:end="83:51">&gt;=</operator> <literal type="number" pos:start="83:53" pos:end="83:53">4</literal></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:53"><block_content pos:start="85:17" pos:end="85:53">

                <expr_stmt pos:start="85:17" pos:end="85:53"><expr pos:start="85:17" pos:end="85:52"><call pos:start="85:17" pos:end="85:52"><name pos:start="85:17" pos:end="85:30">ff_mqc_initdec</name><argument_list pos:start="85:31" pos:end="85:52">(<argument pos:start="85:32" pos:end="85:39"><expr pos:start="85:32" pos:end="85:39"><operator pos:start="85:32" pos:end="85:32">&amp;</operator><name pos:start="85:33" pos:end="85:39"><name pos:start="85:33" pos:end="85:34">t1</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:39">mqc</name></name></expr></argument>, <argument pos:start="85:42" pos:end="85:51"><expr pos:start="85:42" pos:end="85:51"><name pos:start="85:42" pos:end="85:51"><name pos:start="85:42" pos:end="85:45">cblk</name><operator pos:start="85:46" pos:end="85:47">-&gt;</operator><name pos:start="85:48" pos:end="85:51">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="93:9" pos:end="93:17"><expr pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:14">pass_t</name><operator pos:start="93:15" pos:end="93:16">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="101:9"><if pos:start="95:9" pos:end="101:9">if <condition pos:start="95:12" pos:end="95:24">(<expr pos:start="95:13" pos:end="95:23"><name pos:start="95:13" pos:end="95:18">pass_t</name> <operator pos:start="95:20" pos:end="95:21">==</operator> <literal type="number" pos:start="95:23" pos:end="95:23">3</literal></expr>)</condition> <block pos:start="95:26" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:23">

            <expr_stmt pos:start="97:13" pos:end="97:19"><expr pos:start="97:13" pos:end="97:18"><name pos:start="97:13" pos:end="97:16">bpno</name><operator pos:start="97:17" pos:end="97:18">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:23"><expr pos:start="99:13" pos:end="99:22"><name pos:start="99:13" pos:end="99:18">pass_t</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
