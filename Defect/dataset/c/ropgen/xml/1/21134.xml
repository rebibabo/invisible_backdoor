<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21134.c" pos:tabs="8"><function pos:start="1:1" pos:end="30:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vga_mm_init</name><parameter_list pos:start="1:24" pos:end="3:67">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:32">VGAState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:65"><decl pos:start="1:38" pos:end="1:65"><type pos:start="1:38" pos:end="1:65"><name pos:start="1:38" pos:end="1:55">target_phys_addr_t</name></type> <name pos:start="1:57" pos:end="1:65">vram_base</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:52"><decl pos:start="3:25" pos:end="3:52"><type pos:start="3:25" pos:end="3:52"><name pos:start="3:25" pos:end="3:42">target_phys_addr_t</name></type> <name pos:start="3:44" pos:end="3:52">ctrl_base</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:66"><decl pos:start="3:55" pos:end="3:66"><type pos:start="3:55" pos:end="3:66"><name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:66">it_shift</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="30:1">{<block_content pos:start="7:5" pos:end="27:81">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:21">s_ioport_ctrl</name></decl>, <decl pos:start="7:24" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:36">vga_io_memory</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:15">it_shift</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:26">it_shift</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:86"><expr pos:start="13:5" pos:end="13:85"><name pos:start="13:5" pos:end="13:17">s_ioport_ctrl</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <call pos:start="13:21" pos:end="13:85"><name pos:start="13:21" pos:end="13:42">cpu_register_io_memory</name><argument_list pos:start="13:43" pos:end="13:85">(<argument pos:start="13:44" pos:end="13:44"><expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr></argument>, <argument pos:start="13:47" pos:end="13:62"><expr pos:start="13:47" pos:end="13:62"><name pos:start="13:47" pos:end="13:62">vga_mm_read_ctrl</name></expr></argument>, <argument pos:start="13:65" pos:end="13:81"><expr pos:start="13:65" pos:end="13:81"><name pos:start="13:65" pos:end="13:81">vga_mm_write_ctrl</name></expr></argument>, <argument pos:start="13:84" pos:end="13:84"><expr pos:start="13:84" pos:end="13:84"><name pos:start="13:84" pos:end="13:84">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:78"><expr pos:start="15:5" pos:end="15:77"><name pos:start="15:5" pos:end="15:17">vga_io_memory</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <call pos:start="15:21" pos:end="15:77"><name pos:start="15:21" pos:end="15:42">cpu_register_io_memory</name><argument_list pos:start="15:43" pos:end="15:77">(<argument pos:start="15:44" pos:end="15:44"><expr pos:start="15:44" pos:end="15:44"><literal type="number" pos:start="15:44" pos:end="15:44">0</literal></expr></argument>, <argument pos:start="15:47" pos:end="15:58"><expr pos:start="15:47" pos:end="15:58"><name pos:start="15:47" pos:end="15:58">vga_mem_read</name></expr></argument>, <argument pos:start="15:61" pos:end="15:73"><expr pos:start="15:61" pos:end="15:73"><name pos:start="15:61" pos:end="15:73">vga_mem_write</name></expr></argument>, <argument pos:start="15:76" pos:end="15:76"><expr pos:start="15:76" pos:end="15:76"><name pos:start="15:76" pos:end="15:76">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:56"><expr pos:start="19:5" pos:end="19:55"><call pos:start="19:5" pos:end="19:55"><name pos:start="19:5" pos:end="19:19">register_savevm</name><argument_list pos:start="19:20" pos:end="19:55">(<argument pos:start="19:21" pos:end="19:25"><expr pos:start="19:21" pos:end="19:25"><literal type="string" pos:start="19:21" pos:end="19:25">"vga"</literal></expr></argument>, <argument pos:start="19:28" pos:end="19:28"><expr pos:start="19:28" pos:end="19:28"><literal type="number" pos:start="19:28" pos:end="19:28">0</literal></expr></argument>, <argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><literal type="number" pos:start="19:31" pos:end="19:31">2</literal></expr></argument>, <argument pos:start="19:34" pos:end="19:41"><expr pos:start="19:34" pos:end="19:41"><name pos:start="19:34" pos:end="19:41">vga_save</name></expr></argument>, <argument pos:start="19:44" pos:end="19:51"><expr pos:start="19:44" pos:end="19:51"><name pos:start="19:44" pos:end="19:51">vga_load</name></expr></argument>, <argument pos:start="19:54" pos:end="19:54"><expr pos:start="19:54" pos:end="19:54"><name pos:start="19:54" pos:end="19:54">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:69"><expr pos:start="23:5" pos:end="23:68"><call pos:start="23:5" pos:end="23:68"><name pos:start="23:5" pos:end="23:32">cpu_register_physical_memory</name><argument_list pos:start="23:33" pos:end="23:68">(<argument pos:start="23:34" pos:end="23:42"><expr pos:start="23:34" pos:end="23:42"><name pos:start="23:34" pos:end="23:42">ctrl_base</name></expr></argument>, <argument pos:start="23:45" pos:end="23:52"><expr pos:start="23:45" pos:end="23:52"><literal type="number" pos:start="23:45" pos:end="23:52">0x100000</literal></expr></argument>, <argument pos:start="23:55" pos:end="23:67"><expr pos:start="23:55" pos:end="23:67"><name pos:start="23:55" pos:end="23:67">s_ioport_ctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:18">bank_offset</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:81"><expr pos:start="27:5" pos:end="27:80"><call pos:start="27:5" pos:end="27:80"><name pos:start="27:5" pos:end="27:32">cpu_register_physical_memory</name><argument_list pos:start="27:33" pos:end="27:80">(<argument pos:start="27:34" pos:end="27:55"><expr pos:start="27:34" pos:end="27:55"><name pos:start="27:34" pos:end="27:42">vram_base</name> <operator pos:start="27:44" pos:end="27:44">+</operator> <literal type="number" pos:start="27:46" pos:end="27:55">0x000a0000</literal></expr></argument>, <argument pos:start="27:58" pos:end="27:64"><expr pos:start="27:58" pos:end="27:64"><literal type="number" pos:start="27:58" pos:end="27:64">0x20000</literal></expr></argument>, <argument pos:start="27:67" pos:end="27:79"><expr pos:start="27:67" pos:end="27:79"><name pos:start="27:67" pos:end="27:79">vga_io_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


</block_content>}</block></function></unit>
