<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18482.c" pos:tabs="8"><function pos:start="1:1" pos:end="132:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">vp78_decode_frame</name><parameter_list pos:start="1:22" pos:end="2:50">(<parameter pos:start="1:23" pos:end="1:43"><decl pos:start="1:23" pos:end="1:43"><type pos:start="1:23" pos:end="1:43"><name pos:start="1:23" pos:end="1:36">AVCodecContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">avctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:49">void</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">data</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:60">int</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:71">got_frame</name></decl></parameter>,
                      <parameter pos:start="2:23" pos:end="2:37"><decl pos:start="2:23" pos:end="2:37"><type pos:start="2:23" pos:end="2:37"><name pos:start="2:23" pos:end="2:30">AVPacket</name> <modifier pos:start="2:32" pos:end="2:32">*</modifier></type><name pos:start="2:33" pos:end="2:37">avpkt</name></decl></parameter>, <parameter pos:start="2:40" pos:end="2:49"><decl pos:start="2:40" pos:end="2:49"><type pos:start="2:40" pos:end="2:49"><name pos:start="2:40" pos:end="2:42">int</name></type> <name pos:start="2:44" pos:end="2:49">is_vp7</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="132:1">{<block_content pos:start="4:5" pos:end="131:15">
    <decl_stmt pos:start="4:5" pos:end="4:37"><decl pos:start="4:5" pos:end="4:36"><type pos:start="4:5" pos:end="4:16"><name pos:start="4:5" pos:end="4:14">VP8Context</name> <modifier pos:start="4:16" pos:end="4:16">*</modifier></type><name pos:start="4:17" pos:end="4:17">s</name> <init pos:start="4:19" pos:end="4:36">= <expr pos:start="4:21" pos:end="4:36"><name pos:start="4:21" pos:end="4:36"><name pos:start="4:21" pos:end="4:25">avctx</name><operator pos:start="4:26" pos:end="4:27">-&gt;</operator><name pos:start="4:28" pos:end="4:36">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>, <decl pos:start="5:17" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:26">referenced</name></decl>, <decl pos:start="5:29" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:36">num_jobs</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:31"><decl pos:start="6:5" pos:end="6:30"><type pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:8">enum</name> <name pos:start="6:10" pos:end="6:18">AVDiscard</name></name></type> <name pos:start="6:20" pos:end="6:30">skip_thresh</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">VP8Frame</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:23">av_uninit</name><argument_list pos:start="7:24" pos:end="7:33">(<argument pos:start="7:25" pos:end="7:32"><expr pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:32">curframe</name></expr></argument>)</argument_list></decl>, <decl pos:start="7:36" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:14"><modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:46">prev_frame</name></decl>;</decl_stmt>
    <if_stmt pos:start="8:5" pos:end="11:67"><if pos:start="8:5" pos:end="9:67">if <condition pos:start="8:8" pos:end="8:15">(<expr pos:start="8:9" pos:end="8:14"><name pos:start="8:9" pos:end="8:14">is_vp7</name></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:67"><block_content pos:start="9:9" pos:end="9:67">
        <expr_stmt pos:start="9:9" pos:end="9:67"><expr pos:start="9:9" pos:end="9:66"><name pos:start="9:9" pos:end="9:11">ret</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <call pos:start="9:15" pos:end="9:66"><name pos:start="9:15" pos:end="9:37">vp7_decode_frame_header</name><argument_list pos:start="9:38" pos:end="9:66">(<argument pos:start="9:39" pos:end="9:39"><expr pos:start="9:39" pos:end="9:39"><name pos:start="9:39" pos:end="9:39">s</name></expr></argument>, <argument pos:start="9:42" pos:end="9:52"><expr pos:start="9:42" pos:end="9:52"><name pos:start="9:42" pos:end="9:52"><name pos:start="9:42" pos:end="9:46">avpkt</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:52">data</name></name></expr></argument>, <argument pos:start="9:55" pos:end="9:65"><expr pos:start="9:55" pos:end="9:65"><name pos:start="9:55" pos:end="9:65"><name pos:start="9:55" pos:end="9:59">avpkt</name><operator pos:start="9:60" pos:end="9:61">-&gt;</operator><name pos:start="9:62" pos:end="9:65">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="10:5" pos:end="11:67">else<block type="pseudo" pos:start="11:9" pos:end="11:67"><block_content pos:start="11:9" pos:end="11:67">
        <expr_stmt pos:start="11:9" pos:end="11:67"><expr pos:start="11:9" pos:end="11:66"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <call pos:start="11:15" pos:end="11:66"><name pos:start="11:15" pos:end="11:37">vp8_decode_frame_header</name><argument_list pos:start="11:38" pos:end="11:66">(<argument pos:start="11:39" pos:end="11:39"><expr pos:start="11:39" pos:end="11:39"><name pos:start="11:39" pos:end="11:39">s</name></expr></argument>, <argument pos:start="11:42" pos:end="11:52"><expr pos:start="11:42" pos:end="11:52"><name pos:start="11:42" pos:end="11:52"><name pos:start="11:42" pos:end="11:46">avpkt</name><operator pos:start="11:47" pos:end="11:48">-&gt;</operator><name pos:start="11:49" pos:end="11:52">data</name></name></expr></argument>, <argument pos:start="11:55" pos:end="11:65"><expr pos:start="11:55" pos:end="11:65"><name pos:start="11:55" pos:end="11:65"><name pos:start="11:55" pos:end="11:59">avpkt</name><operator pos:start="11:60" pos:end="11:61">-&gt;</operator><name pos:start="11:62" pos:end="11:65">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="12:5" pos:end="13:17"><if pos:start="12:5" pos:end="13:17">if <condition pos:start="12:8" pos:end="12:16">(<expr pos:start="12:9" pos:end="12:15"><name pos:start="12:9" pos:end="12:11">ret</name> <operator pos:start="12:13" pos:end="12:13">&lt;</operator> <literal type="number" pos:start="12:15" pos:end="12:15">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">
        <goto pos:start="13:9" pos:end="13:17">goto <name pos:start="13:14" pos:end="13:16">err</name>;</goto></block_content></block></if></if_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:47"><expr pos:start="14:5" pos:end="14:46"><name pos:start="14:5" pos:end="14:14">prev_frame</name> <operator pos:start="14:16" pos:end="14:16">=</operator> <name pos:start="14:18" pos:end="14:46"><name pos:start="14:18" pos:end="14:18">s</name><operator pos:start="14:19" pos:end="14:20">-&gt;</operator><name pos:start="14:21" pos:end="14:26">framep</name><index pos:start="14:27" pos:end="14:46">[<expr pos:start="14:28" pos:end="14:45"><name pos:start="14:28" pos:end="14:45">VP56_FRAME_CURRENT</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="16:56"><expr pos:start="15:5" pos:end="16:55"><name pos:start="15:5" pos:end="15:14">referenced</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <name pos:start="15:18" pos:end="15:31"><name pos:start="15:18" pos:end="15:18">s</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:31">update_last</name></name> <operator pos:start="15:33" pos:end="15:34">||</operator> <name pos:start="15:36" pos:end="15:51"><name pos:start="15:36" pos:end="15:36">s</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:51">update_golden</name></name> <operator pos:start="15:53" pos:end="15:54">==</operator> <name pos:start="15:56" pos:end="15:73">VP56_FRAME_CURRENT</name> <operator pos:start="15:75" pos:end="15:76">||</operator>
                 <name pos:start="16:18" pos:end="16:33"><name pos:start="16:18" pos:end="16:18">s</name><operator pos:start="16:19" pos:end="16:20">-&gt;</operator><name pos:start="16:21" pos:end="16:33">update_altref</name></name> <operator pos:start="16:35" pos:end="16:36">==</operator> <name pos:start="16:38" pos:end="16:55">VP56_FRAME_CURRENT</name></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="19:61"><expr pos:start="17:5" pos:end="19:60"><name pos:start="17:5" pos:end="17:15">skip_thresh</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <ternary pos:start="17:19" pos:end="19:60"><condition pos:start="17:19" pos:end="17:31"><expr pos:start="17:19" pos:end="17:29"><operator pos:start="17:19" pos:end="17:19">!</operator><name pos:start="17:20" pos:end="17:29">referenced</name></expr> ?</condition><then pos:start="17:33" pos:end="17:48"> <expr pos:start="17:33" pos:end="17:48"><name pos:start="17:33" pos:end="17:48">AVDISCARD_NONREF</name></expr>
                              </then><else pos:start="18:31" pos:end="19:60">: <expr pos:start="18:33" pos:end="19:60"><ternary pos:start="18:33" pos:end="19:60"><condition pos:start="18:33" pos:end="18:46"><expr pos:start="18:33" pos:end="18:44"><operator pos:start="18:33" pos:end="18:33">!</operator><name pos:start="18:34" pos:end="18:44"><name pos:start="18:34" pos:end="18:34">s</name><operator pos:start="18:35" pos:end="18:36">-&gt;</operator><name pos:start="18:37" pos:end="18:44">keyframe</name></name></expr> ?</condition><then pos:start="18:48" pos:end="18:63"> <expr pos:start="18:48" pos:end="18:63"><name pos:start="18:48" pos:end="18:63">AVDISCARD_NONKEY</name></expr>
                                             </then><else pos:start="19:46" pos:end="19:60">: <expr pos:start="19:48" pos:end="19:60"><name pos:start="19:48" pos:end="19:60">AVDISCARD_ALL</name></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>
    <if_stmt pos:start="20:5" pos:end="24:5"><if pos:start="20:5" pos:end="24:5">if <condition pos:start="20:8" pos:end="20:41">(<expr pos:start="20:9" pos:end="20:40"><name pos:start="20:9" pos:end="20:25"><name pos:start="20:9" pos:end="20:13">avctx</name><operator pos:start="20:14" pos:end="20:15">-&gt;</operator><name pos:start="20:16" pos:end="20:25">skip_frame</name></name> <operator pos:start="20:27" pos:end="20:28">&gt;=</operator> <name pos:start="20:30" pos:end="20:40">skip_thresh</name></expr>)</condition> <block pos:start="20:43" pos:end="24:5">{<block_content pos:start="21:9" pos:end="23:25">
        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:20">invisible</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <literal type="number" pos:start="21:24" pos:end="21:24">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:76"><expr pos:start="22:9" pos:end="22:75"><call pos:start="22:9" pos:end="22:75"><name pos:start="22:9" pos:end="22:14">memcpy</name><argument_list pos:start="22:15" pos:end="22:75">(<argument pos:start="22:16" pos:end="22:33"><expr pos:start="22:16" pos:end="22:33"><operator pos:start="22:16" pos:end="22:16">&amp;</operator><name pos:start="22:17" pos:end="22:33"><name pos:start="22:17" pos:end="22:17">s</name><operator pos:start="22:18" pos:end="22:19">-&gt;</operator><name pos:start="22:20" pos:end="22:30">next_framep</name><index pos:start="22:31" pos:end="22:33">[<expr pos:start="22:32" pos:end="22:32"><literal type="number" pos:start="22:32" pos:end="22:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="22:36" pos:end="22:48"><expr pos:start="22:36" pos:end="22:48"><operator pos:start="22:36" pos:end="22:36">&amp;</operator><name pos:start="22:37" pos:end="22:48"><name pos:start="22:37" pos:end="22:37">s</name><operator pos:start="22:38" pos:end="22:39">-&gt;</operator><name pos:start="22:40" pos:end="22:45">framep</name><index pos:start="22:46" pos:end="22:48">[<expr pos:start="22:47" pos:end="22:47"><literal type="number" pos:start="22:47" pos:end="22:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="22:51" pos:end="22:74"><expr pos:start="22:51" pos:end="22:74"><sizeof pos:start="22:51" pos:end="22:70">sizeof<argument_list pos:start="22:57" pos:end="22:70">(<argument pos:start="22:58" pos:end="22:69"><expr pos:start="22:58" pos:end="22:69"><name pos:start="22:58" pos:end="22:69"><name pos:start="22:58" pos:end="22:58">s</name><operator pos:start="22:59" pos:end="22:60">-&gt;</operator><name pos:start="22:61" pos:end="22:66">framep</name><index pos:start="22:67" pos:end="22:69">[<expr pos:start="22:68" pos:end="22:68"><literal type="number" pos:start="22:68" pos:end="22:68">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="22:72" pos:end="22:72">*</operator> <literal type="number" pos:start="22:74" pos:end="22:74">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <goto pos:start="23:9" pos:end="23:25">goto <name pos:start="23:14" pos:end="23:24">skip_decode</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:81"><expr pos:start="25:5" pos:end="25:80"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:21">deblock_filter</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:39"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:33">filter</name><operator pos:start="25:34" pos:end="25:34">.</operator><name pos:start="25:35" pos:end="25:39">level</name></name> <operator pos:start="25:41" pos:end="25:42">&amp;&amp;</operator> <name pos:start="25:44" pos:end="25:66"><name pos:start="25:44" pos:end="25:48">avctx</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:66">skip_loop_filter</name></name> <operator pos:start="25:68" pos:end="25:68">&lt;</operator> <name pos:start="25:70" pos:end="25:80">skip_thresh</name></expr>;</expr_stmt>
    <comment type="line" pos:start="26:5" pos:end="26:42">// release no longer referenced frames</comment>
    <for pos:start="27:5" pos:end="33:48">for <control pos:start="27:9" pos:end="27:27">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:21"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <literal type="number" pos:start="27:21" pos:end="27:21">5</literal></expr>;</condition> <incr pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:24">i</name><operator pos:start="27:25" pos:end="27:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="28:9" pos:end="33:48"><block_content pos:start="28:9" pos:end="33:48">
        <if_stmt pos:start="28:9" pos:end="33:48"><if pos:start="28:9" pos:end="33:48">if <condition pos:start="28:12" pos:end="32:59">(<expr pos:start="28:13" pos:end="32:58"><name pos:start="28:13" pos:end="28:24"><name pos:start="28:13" pos:end="28:13">s</name><operator pos:start="28:14" pos:end="28:15">-&gt;</operator><name pos:start="28:16" pos:end="28:21">frames</name><index pos:start="28:22" pos:end="28:24">[<expr pos:start="28:23" pos:end="28:23"><name pos:start="28:23" pos:end="28:23">i</name></expr>]</index></name><operator pos:start="28:25" pos:end="28:25">.</operator><name pos:start="28:26" pos:end="28:38"><name pos:start="28:26" pos:end="28:27">tf</name><operator pos:start="28:28" pos:end="28:28">.</operator><name pos:start="28:29" pos:end="28:29">f</name><operator pos:start="28:30" pos:end="28:31">-&gt;</operator><name pos:start="28:32" pos:end="28:35">data</name><index pos:start="28:36" pos:end="28:38">[<expr pos:start="28:37" pos:end="28:37"><literal type="number" pos:start="28:37" pos:end="28:37">0</literal></expr>]</index></name> <operator pos:start="28:40" pos:end="28:41">&amp;&amp;</operator>
            <operator pos:start="29:13" pos:end="29:13">&amp;</operator><name pos:start="29:14" pos:end="29:25"><name pos:start="29:14" pos:end="29:14">s</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:22">frames</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">i</name></expr>]</index></name> <operator pos:start="29:27" pos:end="29:28">!=</operator> <name pos:start="29:30" pos:end="29:39">prev_frame</name> <operator pos:start="29:41" pos:end="29:42">&amp;&amp;</operator>
            <operator pos:start="30:13" pos:end="30:13">&amp;</operator><name pos:start="30:14" pos:end="30:25"><name pos:start="30:14" pos:end="30:14">s</name><operator pos:start="30:15" pos:end="30:16">-&gt;</operator><name pos:start="30:17" pos:end="30:22">frames</name><index pos:start="30:23" pos:end="30:25">[<expr pos:start="30:24" pos:end="30:24"><name pos:start="30:24" pos:end="30:24">i</name></expr>]</index></name> <operator pos:start="30:27" pos:end="30:28">!=</operator> <name pos:start="30:30" pos:end="30:59"><name pos:start="30:30" pos:end="30:30">s</name><operator pos:start="30:31" pos:end="30:32">-&gt;</operator><name pos:start="30:33" pos:end="30:38">framep</name><index pos:start="30:39" pos:end="30:59">[<expr pos:start="30:40" pos:end="30:58"><name pos:start="30:40" pos:end="30:58">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="30:61" pos:end="30:62">&amp;&amp;</operator>
            <operator pos:start="31:13" pos:end="31:13">&amp;</operator><name pos:start="31:14" pos:end="31:25"><name pos:start="31:14" pos:end="31:14">s</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:22">frames</name><index pos:start="31:23" pos:end="31:25">[<expr pos:start="31:24" pos:end="31:24"><name pos:start="31:24" pos:end="31:24">i</name></expr>]</index></name> <operator pos:start="31:27" pos:end="31:28">!=</operator> <name pos:start="31:30" pos:end="31:57"><name pos:start="31:30" pos:end="31:30">s</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:38">framep</name><index pos:start="31:39" pos:end="31:57">[<expr pos:start="31:40" pos:end="31:56"><name pos:start="31:40" pos:end="31:56">VP56_FRAME_GOLDEN</name></expr>]</index></name>   <operator pos:start="31:61" pos:end="31:62">&amp;&amp;</operator>
            <operator pos:start="32:13" pos:end="32:13">&amp;</operator><name pos:start="32:14" pos:end="32:25"><name pos:start="32:14" pos:end="32:14">s</name><operator pos:start="32:15" pos:end="32:16">-&gt;</operator><name pos:start="32:17" pos:end="32:22">frames</name><index pos:start="32:23" pos:end="32:25">[<expr pos:start="32:24" pos:end="32:24"><name pos:start="32:24" pos:end="32:24">i</name></expr>]</index></name> <operator pos:start="32:27" pos:end="32:28">!=</operator> <name pos:start="32:30" pos:end="32:58"><name pos:start="32:30" pos:end="32:30">s</name><operator pos:start="32:31" pos:end="32:32">-&gt;</operator><name pos:start="32:33" pos:end="32:38">framep</name><index pos:start="32:39" pos:end="32:58">[<expr pos:start="32:40" pos:end="32:57"><name pos:start="32:40" pos:end="32:57">VP56_FRAME_GOLDEN2</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:48"><block_content pos:start="33:13" pos:end="33:48">
            <expr_stmt pos:start="33:13" pos:end="33:48"><expr pos:start="33:13" pos:end="33:47"><call pos:start="33:13" pos:end="33:47"><name pos:start="33:13" pos:end="33:29">vp8_release_frame</name><argument_list pos:start="33:30" pos:end="33:47">(<argument pos:start="33:31" pos:end="33:31"><expr pos:start="33:31" pos:end="33:31"><name pos:start="33:31" pos:end="33:31">s</name></expr></argument>, <argument pos:start="33:34" pos:end="33:46"><expr pos:start="33:34" pos:end="33:46"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:46"><name pos:start="33:35" pos:end="33:35">s</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:43">frames</name><index pos:start="33:44" pos:end="33:46">[<expr pos:start="33:45" pos:end="33:45"><name pos:start="33:45" pos:end="33:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>
    <expr_stmt pos:start="34:5" pos:end="34:71"><expr pos:start="34:5" pos:end="34:70"><name pos:start="34:5" pos:end="34:12">curframe</name> <operator pos:start="34:14" pos:end="34:14">=</operator> <name pos:start="34:16" pos:end="34:44"><name pos:start="34:16" pos:end="34:16">s</name><operator pos:start="34:17" pos:end="34:18">-&gt;</operator><name pos:start="34:19" pos:end="34:24">framep</name><index pos:start="34:25" pos:end="34:44">[<expr pos:start="34:26" pos:end="34:43"><name pos:start="34:26" pos:end="34:43">VP56_FRAME_CURRENT</name></expr>]</index></name> <operator pos:start="34:46" pos:end="34:46">=</operator> <call pos:start="34:48" pos:end="34:70"><name pos:start="34:48" pos:end="34:67">vp8_find_free_buffer</name><argument_list pos:start="34:68" pos:end="34:70">(<argument pos:start="34:69" pos:end="34:69"><expr pos:start="34:69" pos:end="34:69"><name pos:start="34:69" pos:end="34:69">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="35:5" pos:end="36:46"><if pos:start="35:5" pos:end="36:46">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:22">colorspace</name></name></expr>)</condition><block type="pseudo" pos:start="36:9" pos:end="36:46"><block_content pos:start="36:9" pos:end="36:46">
        <expr_stmt pos:start="36:9" pos:end="36:46"><expr pos:start="36:9" pos:end="36:45"><name pos:start="36:9" pos:end="36:25"><name pos:start="36:9" pos:end="36:13">avctx</name><operator pos:start="36:14" pos:end="36:15">-&gt;</operator><name pos:start="36:16" pos:end="36:25">colorspace</name></name> <operator pos:start="36:27" pos:end="36:27">=</operator> <name pos:start="36:29" pos:end="36:45">AVCOL_SPC_BT470BG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="37:5" pos:end="40:46"><if pos:start="37:5" pos:end="38:46">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:20">fullrange</name></name></expr>)</condition><block type="pseudo" pos:start="38:9" pos:end="38:46"><block_content pos:start="38:9" pos:end="38:46">
        <expr_stmt pos:start="38:9" pos:end="38:46"><expr pos:start="38:9" pos:end="38:45"><name pos:start="38:9" pos:end="38:26"><name pos:start="38:9" pos:end="38:13">avctx</name><operator pos:start="38:14" pos:end="38:15">-&gt;</operator><name pos:start="38:16" pos:end="38:26">color_range</name></name> <operator pos:start="38:28" pos:end="38:28">=</operator> <name pos:start="38:30" pos:end="38:45">AVCOL_RANGE_JPEG</name></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="39:5" pos:end="40:46">else<block type="pseudo" pos:start="40:9" pos:end="40:46"><block_content pos:start="40:9" pos:end="40:46">
        <expr_stmt pos:start="40:9" pos:end="40:46"><expr pos:start="40:9" pos:end="40:45"><name pos:start="40:9" pos:end="40:26"><name pos:start="40:9" pos:end="40:13">avctx</name><operator pos:start="40:14" pos:end="40:15">-&gt;</operator><name pos:start="40:16" pos:end="40:26">color_range</name></name> <operator pos:start="40:28" pos:end="40:28">=</operator> <name pos:start="40:30" pos:end="40:45">AVCOL_RANGE_MPEG</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <comment type="block" pos:start="41:5" pos:end="44:36">/* Given that arithmetic probabilities are updated every frame, it's quite
     * likely that the values we have on a random interframe are complete
     * junk if we didn't start decode on a keyframe. So just don't display
     * anything rather than junk. */</comment>
    <if_stmt pos:start="45:5" pos:end="52:5"><if pos:start="45:5" pos:end="52:5">if <condition pos:start="45:8" pos:end="47:57">(<expr pos:start="45:9" pos:end="47:56"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:20"><name pos:start="45:10" pos:end="45:10">s</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:20">keyframe</name></name> <operator pos:start="45:22" pos:end="45:23">&amp;&amp;</operator> <operator pos:start="45:25" pos:end="45:25">(</operator><operator pos:start="45:26" pos:end="45:26">!</operator><name pos:start="45:27" pos:end="45:56"><name pos:start="45:27" pos:end="45:27">s</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:35">framep</name><index pos:start="45:36" pos:end="45:56">[<expr pos:start="45:37" pos:end="45:55"><name pos:start="45:37" pos:end="45:55">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="45:58" pos:end="45:59">||</operator>
                         <operator pos:start="46:26" pos:end="46:26">!</operator><name pos:start="46:27" pos:end="46:54"><name pos:start="46:27" pos:end="46:27">s</name><operator pos:start="46:28" pos:end="46:29">-&gt;</operator><name pos:start="46:30" pos:end="46:35">framep</name><index pos:start="46:36" pos:end="46:54">[<expr pos:start="46:37" pos:end="46:53"><name pos:start="46:37" pos:end="46:53">VP56_FRAME_GOLDEN</name></expr>]</index></name>   <operator pos:start="46:58" pos:end="46:59">||</operator>
                         <operator pos:start="47:26" pos:end="47:26">!</operator><name pos:start="47:27" pos:end="47:55"><name pos:start="47:27" pos:end="47:27">s</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:35">framep</name><index pos:start="47:36" pos:end="47:55">[<expr pos:start="47:37" pos:end="47:54"><name pos:start="47:37" pos:end="47:54">VP56_FRAME_GOLDEN2</name></expr>]</index></name><operator pos:start="47:56" pos:end="47:56">)</operator></expr>)</condition> <block pos:start="47:59" pos:end="52:5">{<block_content pos:start="48:9" pos:end="51:17">
        <expr_stmt pos:start="48:9" pos:end="49:68"><expr pos:start="48:9" pos:end="49:67"><call pos:start="48:9" pos:end="49:67"><name pos:start="48:9" pos:end="48:14">av_log</name><argument_list pos:start="48:15" pos:end="49:67">(<argument pos:start="48:16" pos:end="48:20"><expr pos:start="48:16" pos:end="48:20"><name pos:start="48:16" pos:end="48:20">avctx</name></expr></argument>, <argument pos:start="48:23" pos:end="48:36"><expr pos:start="48:23" pos:end="48:36"><name pos:start="48:23" pos:end="48:36">AV_LOG_WARNING</name></expr></argument>,
               <argument pos:start="49:16" pos:end="49:66"><expr pos:start="49:16" pos:end="49:66"><literal type="string" pos:start="49:16" pos:end="49:66">"Discarding interframe without a prior keyframe!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="50:9" pos:end="50:34"><expr pos:start="50:9" pos:end="50:33"><name pos:start="50:9" pos:end="50:11">ret</name> <operator pos:start="50:13" pos:end="50:13">=</operator> <name pos:start="50:15" pos:end="50:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>
        <goto pos:start="51:9" pos:end="51:17">goto <name pos:start="51:14" pos:end="51:16">err</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="53:5" pos:end="53:44"><expr pos:start="53:5" pos:end="53:43"><name pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:12">curframe</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:16">tf</name><operator pos:start="53:17" pos:end="53:17">.</operator><name pos:start="53:18" pos:end="53:18">f</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:29">key_frame</name></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <name pos:start="53:33" pos:end="53:43"><name pos:start="53:33" pos:end="53:33">s</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:43">keyframe</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="54:5" pos:end="55:64"><expr pos:start="54:5" pos:end="55:63"><name pos:start="54:5" pos:end="54:29"><name pos:start="54:5" pos:end="54:12">curframe</name><operator pos:start="54:13" pos:end="54:14">-&gt;</operator><name pos:start="54:15" pos:end="54:16">tf</name><operator pos:start="54:17" pos:end="54:17">.</operator><name pos:start="54:18" pos:end="54:18">f</name><operator pos:start="54:19" pos:end="54:20">-&gt;</operator><name pos:start="54:21" pos:end="54:29">pict_type</name></name> <operator pos:start="54:31" pos:end="54:31">=</operator> <ternary pos:start="54:33" pos:end="55:63"><condition pos:start="54:33" pos:end="54:45"><expr pos:start="54:33" pos:end="54:43"><name pos:start="54:33" pos:end="54:43"><name pos:start="54:33" pos:end="54:33">s</name><operator pos:start="54:34" pos:end="54:35">-&gt;</operator><name pos:start="54:36" pos:end="54:43">keyframe</name></name></expr> ?</condition><then pos:start="54:47" pos:end="54:63"> <expr pos:start="54:47" pos:end="54:63"><name pos:start="54:47" pos:end="54:63">AV_PICTURE_TYPE_I</name></expr>
                                            </then><else pos:start="55:45" pos:end="55:63">: <expr pos:start="55:47" pos:end="55:63"><name pos:start="55:47" pos:end="55:63">AV_PICTURE_TYPE_P</name></expr></else></ternary></expr>;</expr_stmt>
    <if_stmt pos:start="56:5" pos:end="57:17"><if pos:start="56:5" pos:end="57:17">if <condition pos:start="56:8" pos:end="56:61">(<expr pos:start="56:9" pos:end="56:60"><operator pos:start="56:9" pos:end="56:9">(</operator><name pos:start="56:10" pos:end="56:12">ret</name> <operator pos:start="56:14" pos:end="56:14">=</operator> <call pos:start="56:16" pos:end="56:55"><name pos:start="56:16" pos:end="56:30">vp8_alloc_frame</name><argument_list pos:start="56:31" pos:end="56:55">(<argument pos:start="56:32" pos:end="56:32"><expr pos:start="56:32" pos:end="56:32"><name pos:start="56:32" pos:end="56:32">s</name></expr></argument>, <argument pos:start="56:35" pos:end="56:42"><expr pos:start="56:35" pos:end="56:42"><name pos:start="56:35" pos:end="56:42">curframe</name></expr></argument>, <argument pos:start="56:45" pos:end="56:54"><expr pos:start="56:45" pos:end="56:54"><name pos:start="56:45" pos:end="56:54">referenced</name></expr></argument>)</argument_list></call><operator pos:start="56:56" pos:end="56:56">)</operator> <operator pos:start="56:58" pos:end="56:58">&lt;</operator> <literal type="number" pos:start="56:60" pos:end="56:60">0</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:17"><block_content pos:start="57:9" pos:end="57:17">
        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">err</name>;</goto></block_content></block></if></if_stmt>
    <comment type="line" pos:start="58:5" pos:end="58:45">// check if golden and altref are swapped</comment>
    <if_stmt pos:start="59:5" pos:end="62:75"><if pos:start="59:5" pos:end="60:73">if <condition pos:start="59:8" pos:end="59:44">(<expr pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:24">update_altref</name></name> <operator pos:start="59:26" pos:end="59:27">!=</operator> <name pos:start="59:29" pos:end="59:43">VP56_FRAME_NONE</name></expr>)</condition><block type="pseudo" pos:start="60:9" pos:end="60:73"><block_content pos:start="60:9" pos:end="60:73">
        <expr_stmt pos:start="60:9" pos:end="60:73"><expr pos:start="60:9" pos:end="60:72"><name pos:start="60:9" pos:end="60:42"><name pos:start="60:9" pos:end="60:9">s</name><operator pos:start="60:10" pos:end="60:11">-&gt;</operator><name pos:start="60:12" pos:end="60:22">next_framep</name><index pos:start="60:23" pos:end="60:42">[<expr pos:start="60:24" pos:end="60:41"><name pos:start="60:24" pos:end="60:41">VP56_FRAME_GOLDEN2</name></expr>]</index></name> <operator pos:start="60:44" pos:end="60:44">=</operator> <name pos:start="60:46" pos:end="60:72"><name pos:start="60:46" pos:end="60:46">s</name><operator pos:start="60:47" pos:end="60:48">-&gt;</operator><name pos:start="60:49" pos:end="60:54">framep</name><index pos:start="60:55" pos:end="60:72">[<expr pos:start="60:56" pos:end="60:71"><name pos:start="60:56" pos:end="60:71"><name pos:start="60:56" pos:end="60:56">s</name><operator pos:start="60:57" pos:end="60:58">-&gt;</operator><name pos:start="60:59" pos:end="60:71">update_altref</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="61:5" pos:end="62:75">else<block type="pseudo" pos:start="62:9" pos:end="62:75"><block_content pos:start="62:9" pos:end="62:75">
        <expr_stmt pos:start="62:9" pos:end="62:75"><expr pos:start="62:9" pos:end="62:74"><name pos:start="62:9" pos:end="62:42"><name pos:start="62:9" pos:end="62:9">s</name><operator pos:start="62:10" pos:end="62:11">-&gt;</operator><name pos:start="62:12" pos:end="62:22">next_framep</name><index pos:start="62:23" pos:end="62:42">[<expr pos:start="62:24" pos:end="62:41"><name pos:start="62:24" pos:end="62:41">VP56_FRAME_GOLDEN2</name></expr>]</index></name> <operator pos:start="62:44" pos:end="62:44">=</operator> <name pos:start="62:46" pos:end="62:74"><name pos:start="62:46" pos:end="62:46">s</name><operator pos:start="62:47" pos:end="62:48">-&gt;</operator><name pos:start="62:49" pos:end="62:54">framep</name><index pos:start="62:55" pos:end="62:74">[<expr pos:start="62:56" pos:end="62:73"><name pos:start="62:56" pos:end="62:73">VP56_FRAME_GOLDEN2</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="63:5" pos:end="66:73"><if pos:start="63:5" pos:end="64:72">if <condition pos:start="63:8" pos:end="63:44">(<expr pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:24">update_golden</name></name> <operator pos:start="63:26" pos:end="63:27">!=</operator> <name pos:start="63:29" pos:end="63:43">VP56_FRAME_NONE</name></expr>)</condition><block type="pseudo" pos:start="64:9" pos:end="64:72"><block_content pos:start="64:9" pos:end="64:72">
        <expr_stmt pos:start="64:9" pos:end="64:72"><expr pos:start="64:9" pos:end="64:71"><name pos:start="64:9" pos:end="64:41"><name pos:start="64:9" pos:end="64:9">s</name><operator pos:start="64:10" pos:end="64:11">-&gt;</operator><name pos:start="64:12" pos:end="64:22">next_framep</name><index pos:start="64:23" pos:end="64:41">[<expr pos:start="64:24" pos:end="64:40"><name pos:start="64:24" pos:end="64:40">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="64:43" pos:end="64:43">=</operator> <name pos:start="64:45" pos:end="64:71"><name pos:start="64:45" pos:end="64:45">s</name><operator pos:start="64:46" pos:end="64:47">-&gt;</operator><name pos:start="64:48" pos:end="64:53">framep</name><index pos:start="64:54" pos:end="64:71">[<expr pos:start="64:55" pos:end="64:70"><name pos:start="64:55" pos:end="64:70"><name pos:start="64:55" pos:end="64:55">s</name><operator pos:start="64:56" pos:end="64:57">-&gt;</operator><name pos:start="64:58" pos:end="64:70">update_golden</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="65:5" pos:end="66:73">else<block type="pseudo" pos:start="66:9" pos:end="66:73"><block_content pos:start="66:9" pos:end="66:73">
        <expr_stmt pos:start="66:9" pos:end="66:73"><expr pos:start="66:9" pos:end="66:72"><name pos:start="66:9" pos:end="66:41"><name pos:start="66:9" pos:end="66:9">s</name><operator pos:start="66:10" pos:end="66:11">-&gt;</operator><name pos:start="66:12" pos:end="66:22">next_framep</name><index pos:start="66:23" pos:end="66:41">[<expr pos:start="66:24" pos:end="66:40"><name pos:start="66:24" pos:end="66:40">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="66:43" pos:end="66:43">=</operator> <name pos:start="66:45" pos:end="66:72"><name pos:start="66:45" pos:end="66:45">s</name><operator pos:start="66:46" pos:end="66:47">-&gt;</operator><name pos:start="66:48" pos:end="66:53">framep</name><index pos:start="66:54" pos:end="66:72">[<expr pos:start="66:55" pos:end="66:71"><name pos:start="66:55" pos:end="66:71">VP56_FRAME_GOLDEN</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="67:5" pos:end="70:77"><if pos:start="67:5" pos:end="68:55">if <condition pos:start="67:8" pos:end="67:23">(<expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:22">update_last</name></name></expr>)</condition><block type="pseudo" pos:start="68:9" pos:end="68:55"><block_content pos:start="68:9" pos:end="68:55">
        <expr_stmt pos:start="68:9" pos:end="68:55"><expr pos:start="68:9" pos:end="68:54"><name pos:start="68:9" pos:end="68:43"><name pos:start="68:9" pos:end="68:9">s</name><operator pos:start="68:10" pos:end="68:11">-&gt;</operator><name pos:start="68:12" pos:end="68:22">next_framep</name><index pos:start="68:23" pos:end="68:43">[<expr pos:start="68:24" pos:end="68:42"><name pos:start="68:24" pos:end="68:42">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="68:45" pos:end="68:45">=</operator> <name pos:start="68:47" pos:end="68:54">curframe</name></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="69:5" pos:end="70:77">else<block type="pseudo" pos:start="70:9" pos:end="70:77"><block_content pos:start="70:9" pos:end="70:77">
        <expr_stmt pos:start="70:9" pos:end="70:77"><expr pos:start="70:9" pos:end="70:76"><name pos:start="70:9" pos:end="70:43"><name pos:start="70:9" pos:end="70:9">s</name><operator pos:start="70:10" pos:end="70:11">-&gt;</operator><name pos:start="70:12" pos:end="70:22">next_framep</name><index pos:start="70:23" pos:end="70:43">[<expr pos:start="70:24" pos:end="70:42"><name pos:start="70:24" pos:end="70:42">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="70:45" pos:end="70:45">=</operator> <name pos:start="70:47" pos:end="70:76"><name pos:start="70:47" pos:end="70:47">s</name><operator pos:start="70:48" pos:end="70:49">-&gt;</operator><name pos:start="70:50" pos:end="70:55">framep</name><index pos:start="70:56" pos:end="70:76">[<expr pos:start="70:57" pos:end="70:75"><name pos:start="70:57" pos:end="70:75">VP56_FRAME_PREVIOUS</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="71:5" pos:end="71:50"><expr pos:start="71:5" pos:end="71:49"><name pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:18">next_framep</name><index pos:start="71:19" pos:end="71:38">[<expr pos:start="71:20" pos:end="71:37"><name pos:start="71:20" pos:end="71:37">VP56_FRAME_CURRENT</name></expr>]</index></name> <operator pos:start="71:40" pos:end="71:40">=</operator> <name pos:start="71:42" pos:end="71:49">curframe</name></expr>;</expr_stmt>
    <if_stmt pos:start="72:5" pos:end="73:38"><if pos:start="72:5" pos:end="73:38">if <condition pos:start="72:8" pos:end="72:44">(<expr pos:start="72:9" pos:end="72:43"><name pos:start="72:9" pos:end="72:43"><name pos:start="72:9" pos:end="72:13">avctx</name><operator pos:start="72:14" pos:end="72:15">-&gt;</operator><name pos:start="72:16" pos:end="72:20">codec</name><operator pos:start="72:21" pos:end="72:22">-&gt;</operator><name pos:start="72:23" pos:end="72:43">update_thread_context</name></name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:38"><block_content pos:start="73:9" pos:end="73:38">
        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><call pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:30">ff_thread_finish_setup</name><argument_list pos:start="73:31" pos:end="73:37">(<argument pos:start="73:32" pos:end="73:36"><expr pos:start="73:32" pos:end="73:36"><name pos:start="73:32" pos:end="73:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="74:5" pos:end="74:48"><expr pos:start="74:5" pos:end="74:47"><name pos:start="74:5" pos:end="74:15"><name pos:start="74:5" pos:end="74:5">s</name><operator pos:start="74:6" pos:end="74:7">-&gt;</operator><name pos:start="74:8" pos:end="74:15">linesize</name></name>   <operator pos:start="74:19" pos:end="74:19">=</operator> <name pos:start="74:21" pos:end="74:47"><name pos:start="74:21" pos:end="74:28">curframe</name><operator pos:start="74:29" pos:end="74:30">-&gt;</operator><name pos:start="74:31" pos:end="74:32">tf</name><operator pos:start="74:33" pos:end="74:33">.</operator><name pos:start="74:34" pos:end="74:34">f</name><operator pos:start="74:35" pos:end="74:36">-&gt;</operator><name pos:start="74:37" pos:end="74:44">linesize</name><index pos:start="74:45" pos:end="74:47">[<expr pos:start="74:46" pos:end="74:46"><literal type="number" pos:start="74:46" pos:end="74:46">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="75:5" pos:end="75:48"><expr pos:start="75:5" pos:end="75:47"><name pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:17">uvlinesize</name></name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:47"><name pos:start="75:21" pos:end="75:28">curframe</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:32">tf</name><operator pos:start="75:33" pos:end="75:33">.</operator><name pos:start="75:34" pos:end="75:34">f</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:44">linesize</name><index pos:start="75:45" pos:end="75:47">[<expr pos:start="75:46" pos:end="75:46"><literal type="number" pos:start="75:46" pos:end="75:46">1</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="76:5" pos:end="76:61"><expr pos:start="76:5" pos:end="76:60"><call pos:start="76:5" pos:end="76:60"><name pos:start="76:5" pos:end="76:10">memset</name><argument_list pos:start="76:11" pos:end="76:60">(<argument pos:start="76:12" pos:end="76:21"><expr pos:start="76:12" pos:end="76:21"><name pos:start="76:12" pos:end="76:21"><name pos:start="76:12" pos:end="76:12">s</name><operator pos:start="76:13" pos:end="76:14">-&gt;</operator><name pos:start="76:15" pos:end="76:21">top_nnz</name></name></expr></argument>, <argument pos:start="76:24" pos:end="76:24"><expr pos:start="76:24" pos:end="76:24"><literal type="number" pos:start="76:24" pos:end="76:24">0</literal></expr></argument>, <argument pos:start="76:27" pos:end="76:59"><expr pos:start="76:27" pos:end="76:59"><name pos:start="76:27" pos:end="76:37"><name pos:start="76:27" pos:end="76:27">s</name><operator pos:start="76:28" pos:end="76:29">-&gt;</operator><name pos:start="76:30" pos:end="76:37">mb_width</name></name> <operator pos:start="76:39" pos:end="76:39">*</operator> <sizeof pos:start="76:41" pos:end="76:59">sizeof<argument_list pos:start="76:47" pos:end="76:59">(<argument pos:start="76:48" pos:end="76:58"><expr pos:start="76:48" pos:end="76:58"><operator pos:start="76:48" pos:end="76:48">*</operator><name pos:start="76:49" pos:end="76:58"><name pos:start="76:49" pos:end="76:49">s</name><operator pos:start="76:50" pos:end="76:51">-&gt;</operator><name pos:start="76:52" pos:end="76:58">top_nnz</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="77:5" pos:end="78:33">/* Zero macroblock structures for top/top-left prediction
     * from outside the frame. */</comment>
    <if_stmt pos:start="79:5" pos:end="81:60"><if pos:start="79:5" pos:end="81:60">if <condition pos:start="79:8" pos:end="79:22">(<expr pos:start="79:9" pos:end="79:21"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:21"><name pos:start="79:10" pos:end="79:10">s</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:21">mb_layout</name></name></expr>)</condition><block type="pseudo" pos:start="80:9" pos:end="81:60"><block_content pos:start="80:9" pos:end="81:60">
        <expr_stmt pos:start="80:9" pos:end="81:60"><expr pos:start="80:9" pos:end="81:59"><call pos:start="80:9" pos:end="81:59"><name pos:start="80:9" pos:end="80:14">memset</name><argument_list pos:start="80:15" pos:end="81:59">(<argument pos:start="80:16" pos:end="80:52"><expr pos:start="80:16" pos:end="80:52"><name pos:start="80:16" pos:end="80:29"><name pos:start="80:16" pos:end="80:16">s</name><operator pos:start="80:17" pos:end="80:18">-&gt;</operator><name pos:start="80:19" pos:end="80:29">macroblocks</name></name> <operator pos:start="80:31" pos:end="80:31">+</operator> <name pos:start="80:33" pos:end="80:44"><name pos:start="80:33" pos:end="80:33">s</name><operator pos:start="80:34" pos:end="80:35">-&gt;</operator><name pos:start="80:36" pos:end="80:44">mb_height</name></name> <operator pos:start="80:46" pos:end="80:46">*</operator> <literal type="number" pos:start="80:48" pos:end="80:50">2</literal> <operator pos:start="80:50" pos:end="80:50">-</operator> <literal type="number" pos:start="80:52" pos:end="80:52">1</literal></expr></argument>, <argument pos:start="80:55" pos:end="80:55"><expr pos:start="80:55" pos:end="80:55"><literal type="number" pos:start="80:55" pos:end="80:55">0</literal></expr></argument>,
               <argument pos:start="81:16" pos:end="81:58"><expr pos:start="81:16" pos:end="81:58"><operator pos:start="81:16" pos:end="81:16">(</operator><name pos:start="81:17" pos:end="81:27"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:27">mb_width</name></name> <operator pos:start="81:29" pos:end="81:29">+</operator> <literal type="number" pos:start="81:31" pos:end="81:31">1</literal><operator pos:start="81:32" pos:end="81:32">)</operator> <operator pos:start="81:34" pos:end="81:34">*</operator> <sizeof pos:start="81:36" pos:end="81:58">sizeof<argument_list pos:start="81:42" pos:end="81:58">(<argument pos:start="81:43" pos:end="81:57"><expr pos:start="81:43" pos:end="81:57"><operator pos:start="81:43" pos:end="81:43">*</operator><name pos:start="81:44" pos:end="81:57"><name pos:start="81:44" pos:end="81:44">s</name><operator pos:start="81:45" pos:end="81:46">-&gt;</operator><name pos:start="81:47" pos:end="81:57">macroblocks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="82:5" pos:end="83:68"><if pos:start="82:5" pos:end="83:68">if <condition pos:start="82:8" pos:end="82:37">(<expr pos:start="82:9" pos:end="82:36"><operator pos:start="82:9" pos:end="82:9">!</operator><name pos:start="82:10" pos:end="82:21"><name pos:start="82:10" pos:end="82:10">s</name><operator pos:start="82:11" pos:end="82:12">-&gt;</operator><name pos:start="82:13" pos:end="82:21">mb_layout</name></name> <operator pos:start="82:23" pos:end="82:24">&amp;&amp;</operator> <name pos:start="82:26" pos:end="82:36"><name pos:start="82:26" pos:end="82:26">s</name><operator pos:start="82:27" pos:end="82:28">-&gt;</operator><name pos:start="82:29" pos:end="82:36">keyframe</name></name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:68"><block_content pos:start="83:9" pos:end="83:68">
        <expr_stmt pos:start="83:9" pos:end="83:68"><expr pos:start="83:9" pos:end="83:67"><call pos:start="83:9" pos:end="83:67"><name pos:start="83:9" pos:end="83:14">memset</name><argument_list pos:start="83:15" pos:end="83:67">(<argument pos:start="83:16" pos:end="83:40"><expr pos:start="83:16" pos:end="83:40"><name pos:start="83:16" pos:end="83:40"><name pos:start="83:16" pos:end="83:16">s</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:40">intra4x4_pred_mode_top</name></name></expr></argument>, <argument pos:start="83:43" pos:end="83:49"><expr pos:start="83:43" pos:end="83:49"><name pos:start="83:43" pos:end="83:49">DC_PRED</name></expr></argument>, <argument pos:start="83:52" pos:end="83:66"><expr pos:start="83:52" pos:end="83:66"><name pos:start="83:52" pos:end="83:62"><name pos:start="83:52" pos:end="83:52">s</name><operator pos:start="83:53" pos:end="83:54">-&gt;</operator><name pos:start="83:55" pos:end="83:62">mb_width</name></name> <operator pos:start="83:64" pos:end="83:64">*</operator> <literal type="number" pos:start="83:66" pos:end="83:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="84:5" pos:end="84:50"><expr pos:start="84:5" pos:end="84:49"><call pos:start="84:5" pos:end="84:49"><name pos:start="84:5" pos:end="84:10">memset</name><argument_list pos:start="84:11" pos:end="84:49">(<argument pos:start="84:12" pos:end="84:23"><expr pos:start="84:12" pos:end="84:23"><name pos:start="84:12" pos:end="84:23"><name pos:start="84:12" pos:end="84:12">s</name><operator pos:start="84:13" pos:end="84:14">-&gt;</operator><name pos:start="84:15" pos:end="84:23">ref_count</name></name></expr></argument>, <argument pos:start="84:26" pos:end="84:26"><expr pos:start="84:26" pos:end="84:26"><literal type="number" pos:start="84:26" pos:end="84:26">0</literal></expr></argument>, <argument pos:start="84:29" pos:end="84:48"><expr pos:start="84:29" pos:end="84:48"><sizeof pos:start="84:29" pos:end="84:48">sizeof<argument_list pos:start="84:35" pos:end="84:48">(<argument pos:start="84:36" pos:end="84:47"><expr pos:start="84:36" pos:end="84:47"><name pos:start="84:36" pos:end="84:47"><name pos:start="84:36" pos:end="84:36">s</name><operator pos:start="84:37" pos:end="84:38">-&gt;</operator><name pos:start="84:39" pos:end="84:47">ref_count</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="85:5" pos:end="95:5"><if pos:start="85:5" pos:end="95:5">if <condition pos:start="85:8" pos:end="85:26">(<expr pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:20">mb_layout</name></name> <operator pos:start="85:22" pos:end="85:23">==</operator> <literal type="number" pos:start="85:25" pos:end="85:25">1</literal></expr>)</condition> <block pos:start="85:28" pos:end="95:5">{<block_content pos:start="88:9" pos:end="94:64">
        <comment type="line" pos:start="86:9" pos:end="86:70">// Make sure the previous frame has read its segmentation map,</comment>
        <comment type="line" pos:start="87:9" pos:end="87:37">// if we re-use the same map.</comment>
        <if_stmt pos:start="88:9" pos:end="90:60"><if pos:start="88:9" pos:end="90:60">if <condition pos:start="88:12" pos:end="89:40">(<expr pos:start="88:13" pos:end="89:39"><name pos:start="88:13" pos:end="88:22">prev_frame</name> <operator pos:start="88:24" pos:end="88:25">&amp;&amp;</operator> <name pos:start="88:27" pos:end="88:49"><name pos:start="88:27" pos:end="88:27">s</name><operator pos:start="88:28" pos:end="88:29">-&gt;</operator><name pos:start="88:30" pos:end="88:41">segmentation</name><operator pos:start="88:42" pos:end="88:42">.</operator><name pos:start="88:43" pos:end="88:49">enabled</name></name> <operator pos:start="88:51" pos:end="88:52">&amp;&amp;</operator>
            <operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:39"><name pos:start="89:14" pos:end="89:14">s</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:28">segmentation</name><operator pos:start="89:29" pos:end="89:29">.</operator><name pos:start="89:30" pos:end="89:39">update_map</name></name></expr>)</condition><block type="pseudo" pos:start="90:13" pos:end="90:60"><block_content pos:start="90:13" pos:end="90:60">
            <expr_stmt pos:start="90:13" pos:end="90:60"><expr pos:start="90:13" pos:end="90:59"><call pos:start="90:13" pos:end="90:59"><name pos:start="90:13" pos:end="90:36">ff_thread_await_progress</name><argument_list pos:start="90:37" pos:end="90:59">(<argument pos:start="90:38" pos:end="90:52"><expr pos:start="90:38" pos:end="90:52"><operator pos:start="90:38" pos:end="90:38">&amp;</operator><name pos:start="90:39" pos:end="90:52"><name pos:start="90:39" pos:end="90:48">prev_frame</name><operator pos:start="90:49" pos:end="90:50">-&gt;</operator><name pos:start="90:51" pos:end="90:52">tf</name></name></expr></argument>, <argument pos:start="90:55" pos:end="90:55"><expr pos:start="90:55" pos:end="90:55"><literal type="number" pos:start="90:55" pos:end="90:55">1</literal></expr></argument>, <argument pos:start="90:58" pos:end="90:58"><expr pos:start="90:58" pos:end="90:58"><literal type="number" pos:start="90:58" pos:end="90:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="91:9" pos:end="94:64"><if pos:start="91:9" pos:end="92:64">if <condition pos:start="91:12" pos:end="91:19">(<expr pos:start="91:13" pos:end="91:18"><name pos:start="91:13" pos:end="91:18">is_vp7</name></expr>)</condition><block type="pseudo" pos:start="92:13" pos:end="92:64"><block_content pos:start="92:13" pos:end="92:64">
            <expr_stmt pos:start="92:13" pos:end="92:64"><expr pos:start="92:13" pos:end="92:63"><call pos:start="92:13" pos:end="92:63"><name pos:start="92:13" pos:end="92:34">vp7_decode_mv_mb_modes</name><argument_list pos:start="92:35" pos:end="92:63">(<argument pos:start="92:36" pos:end="92:40"><expr pos:start="92:36" pos:end="92:40"><name pos:start="92:36" pos:end="92:40">avctx</name></expr></argument>, <argument pos:start="92:43" pos:end="92:50"><expr pos:start="92:43" pos:end="92:50"><name pos:start="92:43" pos:end="92:50">curframe</name></expr></argument>, <argument pos:start="92:53" pos:end="92:62"><expr pos:start="92:53" pos:end="92:62"><name pos:start="92:53" pos:end="92:62">prev_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="93:9" pos:end="94:64">else<block type="pseudo" pos:start="94:13" pos:end="94:64"><block_content pos:start="94:13" pos:end="94:64">
            <expr_stmt pos:start="94:13" pos:end="94:64"><expr pos:start="94:13" pos:end="94:63"><call pos:start="94:13" pos:end="94:63"><name pos:start="94:13" pos:end="94:34">vp8_decode_mv_mb_modes</name><argument_list pos:start="94:35" pos:end="94:63">(<argument pos:start="94:36" pos:end="94:40"><expr pos:start="94:36" pos:end="94:40"><name pos:start="94:36" pos:end="94:40">avctx</name></expr></argument>, <argument pos:start="94:43" pos:end="94:50"><expr pos:start="94:43" pos:end="94:50"><name pos:start="94:43" pos:end="94:50">curframe</name></expr></argument>, <argument pos:start="94:53" pos:end="94:62"><expr pos:start="94:53" pos:end="94:62"><name pos:start="94:53" pos:end="94:62">prev_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="96:5" pos:end="99:71"><if pos:start="96:5" pos:end="97:21">if <condition pos:start="96:8" pos:end="96:53">(<expr pos:start="96:9" pos:end="96:52"><name pos:start="96:9" pos:end="96:33"><name pos:start="96:9" pos:end="96:13">avctx</name><operator pos:start="96:14" pos:end="96:15">-&gt;</operator><name pos:start="96:16" pos:end="96:33">active_thread_type</name></name> <operator pos:start="96:35" pos:end="96:36">==</operator> <name pos:start="96:38" pos:end="96:52">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:21"><block_content pos:start="97:9" pos:end="97:21">
        <expr_stmt pos:start="97:9" pos:end="97:21"><expr pos:start="97:9" pos:end="97:20"><name pos:start="97:9" pos:end="97:16">num_jobs</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <literal type="number" pos:start="97:20" pos:end="97:20">1</literal></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="98:5" pos:end="99:71">else<block type="pseudo" pos:start="99:9" pos:end="99:71"><block_content pos:start="99:9" pos:end="99:71">
        <expr_stmt pos:start="99:9" pos:end="99:71"><expr pos:start="99:9" pos:end="99:70"><name pos:start="99:9" pos:end="99:16">num_jobs</name> <operator pos:start="99:18" pos:end="99:18">=</operator> <call pos:start="99:20" pos:end="99:70"><name pos:start="99:20" pos:end="99:24">FFMIN</name><argument_list pos:start="99:25" pos:end="99:70">(<argument pos:start="99:26" pos:end="99:48"><expr pos:start="99:26" pos:end="99:48"><name pos:start="99:26" pos:end="99:48"><name pos:start="99:26" pos:end="99:26">s</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:48">num_coeff_partitions</name></name></expr></argument>, <argument pos:start="99:51" pos:end="99:69"><expr pos:start="99:51" pos:end="99:69"><name pos:start="99:51" pos:end="99:69"><name pos:start="99:51" pos:end="99:55">avctx</name><operator pos:start="99:56" pos:end="99:57">-&gt;</operator><name pos:start="99:58" pos:end="99:69">thread_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="100:5" pos:end="100:29"><expr pos:start="100:5" pos:end="100:28"><name pos:start="100:5" pos:end="100:15"><name pos:start="100:5" pos:end="100:5">s</name><operator pos:start="100:6" pos:end="100:7">-&gt;</operator><name pos:start="100:8" pos:end="100:15">num_jobs</name></name>   <operator pos:start="100:19" pos:end="100:19">=</operator> <name pos:start="100:21" pos:end="100:28">num_jobs</name></expr>;</expr_stmt>
    <expr_stmt pos:start="101:5" pos:end="101:29"><expr pos:start="101:5" pos:end="101:28"><name pos:start="101:5" pos:end="101:15"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:15">curframe</name></name>   <operator pos:start="101:19" pos:end="101:19">=</operator> <name pos:start="101:21" pos:end="101:28">curframe</name></expr>;</expr_stmt>
    <expr_stmt pos:start="102:5" pos:end="102:31"><expr pos:start="102:5" pos:end="102:30"><name pos:start="102:5" pos:end="102:17"><name pos:start="102:5" pos:end="102:5">s</name><operator pos:start="102:6" pos:end="102:7">-&gt;</operator><name pos:start="102:8" pos:end="102:17">prev_frame</name></name> <operator pos:start="102:19" pos:end="102:19">=</operator> <name pos:start="102:21" pos:end="102:30">prev_frame</name></expr>;</expr_stmt>
    <expr_stmt pos:start="103:5" pos:end="103:38"><expr pos:start="103:5" pos:end="103:37"><name pos:start="103:5" pos:end="103:25"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:16">mv_bounds</name><operator pos:start="103:17" pos:end="103:17">.</operator><name pos:start="103:18" pos:end="103:23">mv_min</name><operator pos:start="103:24" pos:end="103:24">.</operator><name pos:start="103:25" pos:end="103:25">y</name></name>   <operator pos:start="103:29" pos:end="103:29">=</operator> <operator pos:start="103:31" pos:end="103:31">-</operator><name pos:start="103:32" pos:end="103:37">MARGIN</name></expr>;</expr_stmt>
    <expr_stmt pos:start="104:5" pos:end="104:65"><expr pos:start="104:5" pos:end="104:64"><name pos:start="104:5" pos:end="104:25"><name pos:start="104:5" pos:end="104:5">s</name><operator pos:start="104:6" pos:end="104:7">-&gt;</operator><name pos:start="104:8" pos:end="104:16">mv_bounds</name><operator pos:start="104:17" pos:end="104:17">.</operator><name pos:start="104:18" pos:end="104:23">mv_max</name><operator pos:start="104:24" pos:end="104:24">.</operator><name pos:start="104:25" pos:end="104:25">y</name></name>   <operator pos:start="104:29" pos:end="104:29">=</operator> <operator pos:start="104:31" pos:end="104:31">(</operator><operator pos:start="104:32" pos:end="104:32">(</operator><name pos:start="104:33" pos:end="104:44"><name pos:start="104:33" pos:end="104:33">s</name><operator pos:start="104:34" pos:end="104:35">-&gt;</operator><name pos:start="104:36" pos:end="104:44">mb_height</name></name> <operator pos:start="104:46" pos:end="104:46">-</operator> <literal type="number" pos:start="104:48" pos:end="104:48">1</literal><operator pos:start="104:49" pos:end="104:49">)</operator> <operator pos:start="104:51" pos:end="104:52">&lt;&lt;</operator> <literal type="number" pos:start="104:54" pos:end="104:54">6</literal><operator pos:start="104:55" pos:end="104:55">)</operator> <operator pos:start="104:57" pos:end="104:57">+</operator> <name pos:start="104:59" pos:end="104:64">MARGIN</name></expr>;</expr_stmt>
    <for pos:start="105:5" pos:end="109:5">for <control pos:start="105:9" pos:end="105:37">(<init pos:start="105:10" pos:end="105:15"><expr pos:start="105:10" pos:end="105:14"><name pos:start="105:10" pos:end="105:10">i</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <literal type="number" pos:start="105:14" pos:end="105:14">0</literal></expr>;</init> <condition pos:start="105:17" pos:end="105:32"><expr pos:start="105:17" pos:end="105:31"><name pos:start="105:17" pos:end="105:17">i</name> <operator pos:start="105:19" pos:end="105:19">&lt;</operator> <name pos:start="105:21" pos:end="105:31">MAX_THREADS</name></expr>;</condition> <incr pos:start="105:34" pos:end="105:36"><expr pos:start="105:34" pos:end="105:36"><name pos:start="105:34" pos:end="105:34">i</name><operator pos:start="105:35" pos:end="105:36">++</operator></expr></incr>)</control> <block pos:start="105:39" pos:end="109:5">{<block_content pos:start="106:9" pos:end="108:47">
        <decl_stmt pos:start="106:9" pos:end="106:47"><decl pos:start="106:9" pos:end="106:46"><type pos:start="106:9" pos:end="106:23"><name pos:start="106:9" pos:end="106:21">VP8ThreadData</name> <modifier pos:start="106:23" pos:end="106:23">*</modifier></type><name pos:start="106:24" pos:end="106:25">td</name> <init pos:start="106:27" pos:end="106:46">= <expr pos:start="106:29" pos:end="106:46"><operator pos:start="106:29" pos:end="106:29">&amp;</operator><name pos:start="106:30" pos:end="106:46"><name pos:start="106:30" pos:end="106:30">s</name><operator pos:start="106:31" pos:end="106:32">-&gt;</operator><name pos:start="106:33" pos:end="106:43">thread_data</name><index pos:start="106:44" pos:end="106:46">[<expr pos:start="106:45" pos:end="106:45"><name pos:start="106:45" pos:end="106:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="107:9" pos:end="107:43"><expr pos:start="107:9" pos:end="107:42"><call pos:start="107:9" pos:end="107:42"><name pos:start="107:9" pos:end="107:19">atomic_init</name><argument_list pos:start="107:20" pos:end="107:42">(<argument pos:start="107:21" pos:end="107:38"><expr pos:start="107:21" pos:end="107:38"><operator pos:start="107:21" pos:end="107:21">&amp;</operator><name pos:start="107:22" pos:end="107:38"><name pos:start="107:22" pos:end="107:23">td</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:38">thread_mb_pos</name></name></expr></argument>, <argument pos:start="107:41" pos:end="107:41"><expr pos:start="107:41" pos:end="107:41"><literal type="number" pos:start="107:41" pos:end="107:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="108:9" pos:end="108:47"><expr pos:start="108:9" pos:end="108:46"><call pos:start="108:9" pos:end="108:46"><name pos:start="108:9" pos:end="108:19">atomic_init</name><argument_list pos:start="108:20" pos:end="108:46">(<argument pos:start="108:21" pos:end="108:36"><expr pos:start="108:21" pos:end="108:36"><operator pos:start="108:21" pos:end="108:21">&amp;</operator><name pos:start="108:22" pos:end="108:36"><name pos:start="108:22" pos:end="108:23">td</name><operator pos:start="108:24" pos:end="108:25">-&gt;</operator><name pos:start="108:26" pos:end="108:36">wait_mb_pos</name></name></expr></argument>, <argument pos:start="108:39" pos:end="108:45"><expr pos:start="108:39" pos:end="108:45"><name pos:start="108:39" pos:end="108:45">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <if_stmt pos:start="110:5" pos:end="115:34"><if pos:start="110:5" pos:end="112:34">if <condition pos:start="110:8" pos:end="110:15">(<expr pos:start="110:9" pos:end="110:14"><name pos:start="110:9" pos:end="110:14">is_vp7</name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="112:34"><block_content pos:start="111:9" pos:end="112:34">
        <expr_stmt pos:start="111:9" pos:end="112:34"><expr pos:start="111:9" pos:end="112:33"><call pos:start="111:9" pos:end="112:33"><name pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:13">avctx</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:23">execute2</name></name><argument_list pos:start="111:24" pos:end="112:33">(<argument pos:start="111:25" pos:end="111:29"><expr pos:start="111:25" pos:end="111:29"><name pos:start="111:25" pos:end="111:29">avctx</name></expr></argument>, <argument pos:start="111:32" pos:end="111:55"><expr pos:start="111:32" pos:end="111:55"><name pos:start="111:32" pos:end="111:55">vp7_decode_mb_row_sliced</name></expr></argument>, <argument pos:start="111:58" pos:end="111:71"><expr pos:start="111:58" pos:end="111:71"><name pos:start="111:58" pos:end="111:71"><name pos:start="111:58" pos:end="111:58">s</name><operator pos:start="111:59" pos:end="111:60">-&gt;</operator><name pos:start="111:61" pos:end="111:71">thread_data</name></name></expr></argument>, <argument pos:start="111:74" pos:end="111:77"><expr pos:start="111:74" pos:end="111:77"><name pos:start="111:74" pos:end="111:77">NULL</name></expr></argument>,
                        <argument pos:start="112:25" pos:end="112:32"><expr pos:start="112:25" pos:end="112:32"><name pos:start="112:25" pos:end="112:32">num_jobs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="113:5" pos:end="115:34">else<block type="pseudo" pos:start="114:9" pos:end="115:34"><block_content pos:start="114:9" pos:end="115:34">
        <expr_stmt pos:start="114:9" pos:end="115:34"><expr pos:start="114:9" pos:end="115:33"><call pos:start="114:9" pos:end="115:33"><name pos:start="114:9" pos:end="114:23"><name pos:start="114:9" pos:end="114:13">avctx</name><operator pos:start="114:14" pos:end="114:15">-&gt;</operator><name pos:start="114:16" pos:end="114:23">execute2</name></name><argument_list pos:start="114:24" pos:end="115:33">(<argument pos:start="114:25" pos:end="114:29"><expr pos:start="114:25" pos:end="114:29"><name pos:start="114:25" pos:end="114:29">avctx</name></expr></argument>, <argument pos:start="114:32" pos:end="114:55"><expr pos:start="114:32" pos:end="114:55"><name pos:start="114:32" pos:end="114:55">vp8_decode_mb_row_sliced</name></expr></argument>, <argument pos:start="114:58" pos:end="114:71"><expr pos:start="114:58" pos:end="114:71"><name pos:start="114:58" pos:end="114:71"><name pos:start="114:58" pos:end="114:58">s</name><operator pos:start="114:59" pos:end="114:60">-&gt;</operator><name pos:start="114:61" pos:end="114:71">thread_data</name></name></expr></argument>, <argument pos:start="114:74" pos:end="114:77"><expr pos:start="114:74" pos:end="114:77"><name pos:start="114:74" pos:end="114:77">NULL</name></expr></argument>,
                        <argument pos:start="115:25" pos:end="115:32"><expr pos:start="115:25" pos:end="115:32"><name pos:start="115:25" pos:end="115:32">num_jobs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="116:5" pos:end="116:57"><expr pos:start="116:5" pos:end="116:56"><call pos:start="116:5" pos:end="116:56"><name pos:start="116:5" pos:end="116:29">ff_thread_report_progress</name><argument_list pos:start="116:30" pos:end="116:56">(<argument pos:start="116:31" pos:end="116:43"><expr pos:start="116:31" pos:end="116:43"><operator pos:start="116:31" pos:end="116:31">&amp;</operator><name pos:start="116:32" pos:end="116:43"><name pos:start="116:32" pos:end="116:39">curframe</name><operator pos:start="116:40" pos:end="116:41">-&gt;</operator><name pos:start="116:42" pos:end="116:43">tf</name></name></expr></argument>, <argument pos:start="116:46" pos:end="116:52"><expr pos:start="116:46" pos:end="116:52"><name pos:start="116:46" pos:end="116:52">INT_MAX</name></expr></argument>, <argument pos:start="116:55" pos:end="116:55"><expr pos:start="116:55" pos:end="116:55"><literal type="number" pos:start="116:55" pos:end="116:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="117:5" pos:end="117:72"><expr pos:start="117:5" pos:end="117:71"><call pos:start="117:5" pos:end="117:71"><name pos:start="117:5" pos:end="117:10">memcpy</name><argument_list pos:start="117:11" pos:end="117:71">(<argument pos:start="117:12" pos:end="117:24"><expr pos:start="117:12" pos:end="117:24"><operator pos:start="117:12" pos:end="117:12">&amp;</operator><name pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:21">framep</name><index pos:start="117:22" pos:end="117:24">[<expr pos:start="117:23" pos:end="117:23"><literal type="number" pos:start="117:23" pos:end="117:23">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="117:27" pos:end="117:44"><expr pos:start="117:27" pos:end="117:44"><operator pos:start="117:27" pos:end="117:27">&amp;</operator><name pos:start="117:28" pos:end="117:44"><name pos:start="117:28" pos:end="117:28">s</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:41">next_framep</name><index pos:start="117:42" pos:end="117:44">[<expr pos:start="117:43" pos:end="117:43"><literal type="number" pos:start="117:43" pos:end="117:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="117:47" pos:end="117:70"><expr pos:start="117:47" pos:end="117:70"><sizeof pos:start="117:47" pos:end="117:66">sizeof<argument_list pos:start="117:53" pos:end="117:66">(<argument pos:start="117:54" pos:end="117:65"><expr pos:start="117:54" pos:end="117:65"><name pos:start="117:54" pos:end="117:65"><name pos:start="117:54" pos:end="117:54">s</name><operator pos:start="117:55" pos:end="117:56">-&gt;</operator><name pos:start="117:57" pos:end="117:62">framep</name><index pos:start="117:63" pos:end="117:65">[<expr pos:start="117:64" pos:end="117:64"><literal type="number" pos:start="117:64" pos:end="117:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="117:68" pos:end="117:68">*</operator> <literal type="number" pos:start="117:70" pos:end="117:70">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label pos:start="118:1" pos:end="118:12"><name pos:start="118:1" pos:end="118:11">skip_decode</name>:</label>
    <comment type="line" pos:start="119:5" pos:end="119:60">// if future frames don't use the updated probabilities,</comment>
    <comment type="line" pos:start="120:5" pos:end="120:40">// reset them to the values we saved</comment>
    <if_stmt pos:start="121:5" pos:end="122:32"><if pos:start="121:5" pos:end="122:32">if <condition pos:start="121:8" pos:end="121:33">(<expr pos:start="121:9" pos:end="121:32"><operator pos:start="121:9" pos:end="121:9">!</operator><name pos:start="121:10" pos:end="121:32"><name pos:start="121:10" pos:end="121:10">s</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:32">update_probabilities</name></name></expr>)</condition><block type="pseudo" pos:start="122:9" pos:end="122:32"><block_content pos:start="122:9" pos:end="122:32">
        <expr_stmt pos:start="122:9" pos:end="122:32"><expr pos:start="122:9" pos:end="122:31"><name pos:start="122:9" pos:end="122:18"><name pos:start="122:9" pos:end="122:9">s</name><operator pos:start="122:10" pos:end="122:11">-&gt;</operator><name pos:start="122:12" pos:end="122:15">prob</name><index pos:start="122:16" pos:end="122:18">[<expr pos:start="122:17" pos:end="122:17"><literal type="number" pos:start="122:17" pos:end="122:17">0</literal></expr>]</index></name> <operator pos:start="122:20" pos:end="122:20">=</operator> <name pos:start="122:22" pos:end="122:31"><name pos:start="122:22" pos:end="122:22">s</name><operator pos:start="122:23" pos:end="122:24">-&gt;</operator><name pos:start="122:25" pos:end="122:28">prob</name><index pos:start="122:29" pos:end="122:31">[<expr pos:start="122:30" pos:end="122:30"><literal type="number" pos:start="122:30" pos:end="122:30">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="123:5" pos:end="127:5"><if pos:start="123:5" pos:end="127:5">if <condition pos:start="123:8" pos:end="123:22">(<expr pos:start="123:9" pos:end="123:21"><operator pos:start="123:9" pos:end="123:9">!</operator><name pos:start="123:10" pos:end="123:21"><name pos:start="123:10" pos:end="123:10">s</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:21">invisible</name></name></expr>)</condition> <block pos:start="123:24" pos:end="127:5">{<block_content pos:start="124:9" pos:end="126:23">
        <if_stmt pos:start="124:9" pos:end="125:23"><if pos:start="124:9" pos:end="125:23">if <condition pos:start="124:12" pos:end="124:59">(<expr pos:start="124:13" pos:end="124:58"><operator pos:start="124:13" pos:end="124:13">(</operator><name pos:start="124:14" pos:end="124:16">ret</name> <operator pos:start="124:18" pos:end="124:18">=</operator> <call pos:start="124:20" pos:end="124:53"><name pos:start="124:20" pos:end="124:31">av_frame_ref</name><argument_list pos:start="124:32" pos:end="124:53">(<argument pos:start="124:33" pos:end="124:36"><expr pos:start="124:33" pos:end="124:36"><name pos:start="124:33" pos:end="124:36">data</name></expr></argument>, <argument pos:start="124:39" pos:end="124:52"><expr pos:start="124:39" pos:end="124:52"><name pos:start="124:39" pos:end="124:52"><name pos:start="124:39" pos:end="124:46">curframe</name><operator pos:start="124:47" pos:end="124:48">-&gt;</operator><name pos:start="124:49" pos:end="124:50">tf</name><operator pos:start="124:51" pos:end="124:51">.</operator><name pos:start="124:52" pos:end="124:52">f</name></name></expr></argument>)</argument_list></call><operator pos:start="124:54" pos:end="124:54">)</operator> <operator pos:start="124:56" pos:end="124:56">&lt;</operator> <literal type="number" pos:start="124:58" pos:end="124:58">0</literal></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:23"><block_content pos:start="125:13" pos:end="125:23">
            <return pos:start="125:13" pos:end="125:23">return <expr pos:start="125:20" pos:end="125:22"><name pos:start="125:20" pos:end="125:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="126:9" pos:end="126:23"><expr pos:start="126:9" pos:end="126:22"><operator pos:start="126:9" pos:end="126:9">*</operator><name pos:start="126:10" pos:end="126:18">got_frame</name> <operator pos:start="126:20" pos:end="126:20">=</operator> <literal type="number" pos:start="126:22" pos:end="126:22">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <return pos:start="128:5" pos:end="128:23">return <expr pos:start="128:12" pos:end="128:22"><name pos:start="128:12" pos:end="128:22"><name pos:start="128:12" pos:end="128:16">avpkt</name><operator pos:start="128:17" pos:end="128:18">-&gt;</operator><name pos:start="128:19" pos:end="128:22">size</name></name></expr>;</return>
<label pos:start="129:1" pos:end="129:4"><name pos:start="129:1" pos:end="129:3">err</name>:</label>
    <expr_stmt pos:start="130:5" pos:end="130:72"><expr pos:start="130:5" pos:end="130:71"><call pos:start="130:5" pos:end="130:71"><name pos:start="130:5" pos:end="130:10">memcpy</name><argument_list pos:start="130:11" pos:end="130:71">(<argument pos:start="130:12" pos:end="130:29"><expr pos:start="130:12" pos:end="130:29"><operator pos:start="130:12" pos:end="130:12">&amp;</operator><name pos:start="130:13" pos:end="130:29"><name pos:start="130:13" pos:end="130:13">s</name><operator pos:start="130:14" pos:end="130:15">-&gt;</operator><name pos:start="130:16" pos:end="130:26">next_framep</name><index pos:start="130:27" pos:end="130:29">[<expr pos:start="130:28" pos:end="130:28"><literal type="number" pos:start="130:28" pos:end="130:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="130:32" pos:end="130:44"><expr pos:start="130:32" pos:end="130:44"><operator pos:start="130:32" pos:end="130:32">&amp;</operator><name pos:start="130:33" pos:end="130:44"><name pos:start="130:33" pos:end="130:33">s</name><operator pos:start="130:34" pos:end="130:35">-&gt;</operator><name pos:start="130:36" pos:end="130:41">framep</name><index pos:start="130:42" pos:end="130:44">[<expr pos:start="130:43" pos:end="130:43"><literal type="number" pos:start="130:43" pos:end="130:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="130:47" pos:end="130:70"><expr pos:start="130:47" pos:end="130:70"><sizeof pos:start="130:47" pos:end="130:66">sizeof<argument_list pos:start="130:53" pos:end="130:66">(<argument pos:start="130:54" pos:end="130:65"><expr pos:start="130:54" pos:end="130:65"><name pos:start="130:54" pos:end="130:65"><name pos:start="130:54" pos:end="130:54">s</name><operator pos:start="130:55" pos:end="130:56">-&gt;</operator><name pos:start="130:57" pos:end="130:62">framep</name><index pos:start="130:63" pos:end="130:65">[<expr pos:start="130:64" pos:end="130:64"><literal type="number" pos:start="130:64" pos:end="130:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="130:68" pos:end="130:68">*</operator> <literal type="number" pos:start="130:70" pos:end="130:70">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="131:5" pos:end="131:15">return <expr pos:start="131:12" pos:end="131:14"><name pos:start="131:12" pos:end="131:14">ret</name></expr>;</return>
</block_content>}</block></function></unit>
