<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11072.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">ff_rtp_send_rtcp_feedback</name><parameter_list pos:start="1:30" pos:end="3:48">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">RTPDemuxContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:60">URLContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">fd</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:47"><decl pos:start="3:31" pos:end="3:47"><type pos:start="3:31" pos:end="3:47"><name pos:start="3:31" pos:end="3:41">AVIOContext</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:47">avio</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="125:1">{<block_content pos:start="7:5" pos:end="123:13">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:26">need_keyframe</name></decl>, <decl pos:start="7:29" pos:end="7:43"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:43">missing_packets</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">now</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint16_t</name></type> <name pos:start="15:14" pos:end="15:26">first_missing</name></decl>, <decl pos:start="15:29" pos:end="15:40"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:29" pos:end="15:40">missing_mask</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:11">fd</name> <operator pos:start="19:13" pos:end="19:14">&amp;&amp;</operator> <operator pos:start="19:16" pos:end="19:16">!</operator><name pos:start="19:17" pos:end="19:20">avio</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:75"><expr pos:start="25:5" pos:end="27:74"><name pos:start="25:5" pos:end="25:17">need_keyframe</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:30"><name pos:start="25:21" pos:end="25:21">s</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:30">handler</name></name> <operator pos:start="25:32" pos:end="25:33">&amp;&amp;</operator> <name pos:start="25:35" pos:end="25:59"><name pos:start="25:35" pos:end="25:35">s</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:44">handler</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:59">need_keyframe</name></name> <operator pos:start="25:61" pos:end="25:62">&amp;&amp;</operator>

                    <call pos:start="27:21" pos:end="27:74"><name pos:start="27:21" pos:end="27:45"><name pos:start="27:21" pos:end="27:21">s</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:30">handler</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:45">need_keyframe</name></name><argument_list pos:start="27:46" pos:end="27:74">(<argument pos:start="27:47" pos:end="27:73"><expr pos:start="27:47" pos:end="27:73"><name pos:start="27:47" pos:end="27:73"><name pos:start="27:47" pos:end="27:47">s</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:73">dynamic_protocol_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:77"><expr pos:start="29:5" pos:end="29:76"><name pos:start="29:5" pos:end="29:19">missing_packets</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:76"><name pos:start="29:23" pos:end="29:42">find_missing_packets</name><argument_list pos:start="29:43" pos:end="29:76">(<argument pos:start="29:44" pos:end="29:44"><expr pos:start="29:44" pos:end="29:44"><name pos:start="29:44" pos:end="29:44">s</name></expr></argument>, <argument pos:start="29:47" pos:end="29:60"><expr pos:start="29:47" pos:end="29:60"><operator pos:start="29:47" pos:end="29:47">&amp;</operator><name pos:start="29:48" pos:end="29:60">first_missing</name></expr></argument>, <argument pos:start="29:63" pos:end="29:75"><expr pos:start="29:63" pos:end="29:75"><operator pos:start="29:63" pos:end="29:63">&amp;</operator><name pos:start="29:64" pos:end="29:75">missing_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="35:17"><if pos:start="33:5" pos:end="35:17">if <condition pos:start="33:8" pos:end="33:43">(<expr pos:start="33:9" pos:end="33:42"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:22">need_keyframe</name> <operator pos:start="33:24" pos:end="33:25">&amp;&amp;</operator> <operator pos:start="33:27" pos:end="33:27">!</operator><name pos:start="33:28" pos:end="33:42">missing_packets</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:17"><block_content pos:start="35:9" pos:end="35:17">

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="41:26">/* Send new feedback if enough time has elapsed since the last

     * feedback packet. */</comment>



    <expr_stmt pos:start="45:5" pos:end="45:23"><expr pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:7">now</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:22"><name pos:start="45:11" pos:end="45:20">av_gettime</name><argument_list pos:start="45:21" pos:end="45:22">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="51:17"><if pos:start="47:5" pos:end="51:17">if <condition pos:start="47:8" pos:end="49:62">(<expr pos:start="47:9" pos:end="49:61"><name pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:29">last_feedback_time</name></name> <operator pos:start="47:31" pos:end="47:32">&amp;&amp;</operator>

        <operator pos:start="49:9" pos:end="49:9">(</operator><name pos:start="49:10" pos:end="49:12">now</name> <operator pos:start="49:14" pos:end="49:14">-</operator> <name pos:start="49:16" pos:end="49:36"><name pos:start="49:16" pos:end="49:16">s</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:36">last_feedback_time</name></name><operator pos:start="49:37" pos:end="49:37">)</operator> <operator pos:start="49:39" pos:end="49:39">&lt;</operator> <name pos:start="49:41" pos:end="49:61">MIN_FEEDBACK_INTERVAL</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:17"><block_content pos:start="51:9" pos:end="51:17">

        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:25">last_feedback_time</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:31">now</name></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="63:18"><if pos:start="57:5" pos:end="59:18">if <condition pos:start="57:8" pos:end="57:12">(<expr pos:start="57:9" pos:end="57:11"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:11">fd</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:18"><block_content pos:start="59:9" pos:end="59:18">

        <expr_stmt pos:start="59:9" pos:end="59:18"><expr pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:10">pb</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <name pos:start="59:14" pos:end="59:17">avio</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="61:5" pos:end="63:18">else if <condition pos:start="61:13" pos:end="61:40">(<expr pos:start="61:14" pos:end="61:39"><call pos:start="61:14" pos:end="61:35"><name pos:start="61:14" pos:end="61:30">avio_open_dyn_buf</name><argument_list pos:start="61:31" pos:end="61:35">(<argument pos:start="61:32" pos:end="61:34"><expr pos:start="61:32" pos:end="61:34"><operator pos:start="61:32" pos:end="61:32">&amp;</operator><name pos:start="61:33" pos:end="61:34">pb</name></expr></argument>)</argument_list></call> <operator pos:start="61:37" pos:end="61:37">&lt;</operator> <literal type="number" pos:start="61:39" pos:end="61:39">0</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:18"><block_content pos:start="63:9" pos:end="63:18">

        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="81:5"><if pos:start="67:5" pos:end="81:5">if <condition pos:start="67:8" pos:end="67:22">(<expr pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:21">need_keyframe</name></expr>)</condition> <block pos:start="67:24" pos:end="81:5">{<block_content pos:start="69:9" pos:end="79:31">

        <expr_stmt pos:start="69:9" pos:end="69:44"><expr pos:start="69:9" pos:end="69:43"><call pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:15">avio_w8</name><argument_list pos:start="69:16" pos:end="69:43">(<argument pos:start="69:17" pos:end="69:18"><expr pos:start="69:17" pos:end="69:18"><name pos:start="69:17" pos:end="69:18">pb</name></expr></argument>, <argument pos:start="69:21" pos:end="69:42"><expr pos:start="69:21" pos:end="69:42"><operator pos:start="69:21" pos:end="69:21">(</operator><name pos:start="69:22" pos:end="69:32">RTP_VERSION</name> <operator pos:start="69:34" pos:end="69:35">&lt;&lt;</operator> <literal type="number" pos:start="69:37" pos:end="69:37">6</literal><operator pos:start="69:38" pos:end="69:38">)</operator> <operator pos:start="69:40" pos:end="69:40">|</operator> <literal type="number" pos:start="69:42" pos:end="69:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="69:46" pos:end="69:54">/* PLI */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:31"><expr pos:start="71:9" pos:end="71:30"><call pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:15">avio_w8</name><argument_list pos:start="71:16" pos:end="71:30">(<argument pos:start="71:17" pos:end="71:18"><expr pos:start="71:17" pos:end="71:18"><name pos:start="71:17" pos:end="71:18">pb</name></expr></argument>, <argument pos:start="71:21" pos:end="71:29"><expr pos:start="71:21" pos:end="71:29"><name pos:start="71:21" pos:end="71:29">RTCP_PSFB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:25"><expr pos:start="73:9" pos:end="73:24"><call pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:17">avio_wb16</name><argument_list pos:start="73:18" pos:end="73:24">(<argument pos:start="73:19" pos:end="73:20"><expr pos:start="73:19" pos:end="73:20"><name pos:start="73:19" pos:end="73:20">pb</name></expr></argument>, <argument pos:start="73:23" pos:end="73:23"><expr pos:start="73:23" pos:end="73:23"><literal type="number" pos:start="73:23" pos:end="73:23">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="73:27" pos:end="73:51">/* length in words - 1 */</comment>

        <comment type="line" pos:start="75:9" pos:end="75:72">// our own SSRC: we use the server's SSRC + 1 to avoid conflicts</comment>

        <expr_stmt pos:start="77:9" pos:end="77:35"><expr pos:start="77:9" pos:end="77:34"><call pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:17">avio_wb32</name><argument_list pos:start="77:18" pos:end="77:34">(<argument pos:start="77:19" pos:end="77:20"><expr pos:start="77:19" pos:end="77:20"><name pos:start="77:19" pos:end="77:20">pb</name></expr></argument>, <argument pos:start="77:23" pos:end="77:33"><expr pos:start="77:23" pos:end="77:33"><name pos:start="77:23" pos:end="77:29"><name pos:start="77:23" pos:end="77:23">s</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:29">ssrc</name></name> <operator pos:start="77:31" pos:end="77:31">+</operator> <literal type="number" pos:start="77:33" pos:end="77:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:31"><expr pos:start="79:9" pos:end="79:30"><call pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:17">avio_wb32</name><argument_list pos:start="79:18" pos:end="79:30">(<argument pos:start="79:19" pos:end="79:20"><expr pos:start="79:19" pos:end="79:20"><name pos:start="79:19" pos:end="79:20">pb</name></expr></argument>, <argument pos:start="79:23" pos:end="79:29"><expr pos:start="79:23" pos:end="79:29"><name pos:start="79:23" pos:end="79:29"><name pos:start="79:23" pos:end="79:23">s</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:29">ssrc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="79:33" pos:end="79:46">// server SSRC</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="103:5"><if pos:start="85:5" pos:end="103:5">if <condition pos:start="85:8" pos:end="85:24">(<expr pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:23">missing_packets</name></expr>)</condition> <block pos:start="85:26" pos:end="103:5">{<block_content pos:start="87:9" pos:end="101:36">

        <expr_stmt pos:start="87:9" pos:end="87:44"><expr pos:start="87:9" pos:end="87:43"><call pos:start="87:9" pos:end="87:43"><name pos:start="87:9" pos:end="87:15">avio_w8</name><argument_list pos:start="87:16" pos:end="87:43">(<argument pos:start="87:17" pos:end="87:18"><expr pos:start="87:17" pos:end="87:18"><name pos:start="87:17" pos:end="87:18">pb</name></expr></argument>, <argument pos:start="87:21" pos:end="87:42"><expr pos:start="87:21" pos:end="87:42"><operator pos:start="87:21" pos:end="87:21">(</operator><name pos:start="87:22" pos:end="87:32">RTP_VERSION</name> <operator pos:start="87:34" pos:end="87:35">&lt;&lt;</operator> <literal type="number" pos:start="87:37" pos:end="87:37">6</literal><operator pos:start="87:38" pos:end="87:38">)</operator> <operator pos:start="87:40" pos:end="87:40">|</operator> <literal type="number" pos:start="87:42" pos:end="87:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="87:46" pos:end="87:55">/* NACK */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:32"><expr pos:start="89:9" pos:end="89:31"><call pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:15">avio_w8</name><argument_list pos:start="89:16" pos:end="89:31">(<argument pos:start="89:17" pos:end="89:18"><expr pos:start="89:17" pos:end="89:18"><name pos:start="89:17" pos:end="89:18">pb</name></expr></argument>, <argument pos:start="89:21" pos:end="89:30"><expr pos:start="89:21" pos:end="89:30"><name pos:start="89:21" pos:end="89:30">RTCP_RTPFB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:25"><expr pos:start="91:9" pos:end="91:24"><call pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:17">avio_wb16</name><argument_list pos:start="91:18" pos:end="91:24">(<argument pos:start="91:19" pos:end="91:20"><expr pos:start="91:19" pos:end="91:20"><name pos:start="91:19" pos:end="91:20">pb</name></expr></argument>, <argument pos:start="91:23" pos:end="91:23"><expr pos:start="91:23" pos:end="91:23"><literal type="number" pos:start="91:23" pos:end="91:23">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="91:27" pos:end="91:51">/* length in words - 1 */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:35"><expr pos:start="93:9" pos:end="93:34"><call pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:17">avio_wb32</name><argument_list pos:start="93:18" pos:end="93:34">(<argument pos:start="93:19" pos:end="93:20"><expr pos:start="93:19" pos:end="93:20"><name pos:start="93:19" pos:end="93:20">pb</name></expr></argument>, <argument pos:start="93:23" pos:end="93:33"><expr pos:start="93:23" pos:end="93:33"><name pos:start="93:23" pos:end="93:29"><name pos:start="93:23" pos:end="93:23">s</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:29">ssrc</name></name> <operator pos:start="93:31" pos:end="93:31">+</operator> <literal type="number" pos:start="93:33" pos:end="93:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:31"><expr pos:start="95:9" pos:end="95:30"><call pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:17">avio_wb32</name><argument_list pos:start="95:18" pos:end="95:30">(<argument pos:start="95:19" pos:end="95:20"><expr pos:start="95:19" pos:end="95:20"><name pos:start="95:19" pos:end="95:20">pb</name></expr></argument>, <argument pos:start="95:23" pos:end="95:29"><expr pos:start="95:23" pos:end="95:29"><name pos:start="95:23" pos:end="95:29"><name pos:start="95:23" pos:end="95:23">s</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:29">ssrc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="95:33" pos:end="95:46">// server SSRC</comment>



        <expr_stmt pos:start="99:9" pos:end="99:37"><expr pos:start="99:9" pos:end="99:36"><call pos:start="99:9" pos:end="99:36"><name pos:start="99:9" pos:end="99:17">avio_wb16</name><argument_list pos:start="99:18" pos:end="99:36">(<argument pos:start="99:19" pos:end="99:20"><expr pos:start="99:19" pos:end="99:20"><name pos:start="99:19" pos:end="99:20">pb</name></expr></argument>, <argument pos:start="99:23" pos:end="99:35"><expr pos:start="99:23" pos:end="99:35"><name pos:start="99:23" pos:end="99:35">first_missing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:36"><expr pos:start="101:9" pos:end="101:35"><call pos:start="101:9" pos:end="101:35"><name pos:start="101:9" pos:end="101:17">avio_wb16</name><argument_list pos:start="101:18" pos:end="101:35">(<argument pos:start="101:19" pos:end="101:20"><expr pos:start="101:19" pos:end="101:20"><name pos:start="101:19" pos:end="101:20">pb</name></expr></argument>, <argument pos:start="101:23" pos:end="101:34"><expr pos:start="101:23" pos:end="101:34"><name pos:start="101:23" pos:end="101:34">missing_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:19"><expr pos:start="107:5" pos:end="107:18"><call pos:start="107:5" pos:end="107:18"><name pos:start="107:5" pos:end="107:14">avio_flush</name><argument_list pos:start="107:15" pos:end="107:18">(<argument pos:start="107:16" pos:end="107:17"><expr pos:start="107:16" pos:end="107:17"><name pos:start="107:16" pos:end="107:17">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="111:17"><if pos:start="109:5" pos:end="111:17">if <condition pos:start="109:8" pos:end="109:12">(<expr pos:start="109:9" pos:end="109:11"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:11">fd</name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:17"><block_content pos:start="111:9" pos:end="111:17">

        <return pos:start="111:9" pos:end="111:17">return <expr pos:start="111:16" pos:end="111:16"><literal type="number" pos:start="111:16" pos:end="111:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:39"><expr pos:start="113:5" pos:end="113:38"><name pos:start="113:5" pos:end="113:7">len</name> <operator pos:start="113:9" pos:end="113:9">=</operator> <call pos:start="113:11" pos:end="113:38"><name pos:start="113:11" pos:end="113:28">avio_close_dyn_buf</name><argument_list pos:start="113:29" pos:end="113:38">(<argument pos:start="113:30" pos:end="113:31"><expr pos:start="113:30" pos:end="113:31"><name pos:start="113:30" pos:end="113:31">pb</name></expr></argument>, <argument pos:start="113:34" pos:end="113:37"><expr pos:start="113:34" pos:end="113:37"><operator pos:start="113:34" pos:end="113:34">&amp;</operator><name pos:start="113:35" pos:end="113:37">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:23">(<expr pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:11">len</name> <operator pos:start="115:13" pos:end="115:13">&gt;</operator> <literal type="number" pos:start="115:15" pos:end="115:15">0</literal> <operator pos:start="115:17" pos:end="115:18">&amp;&amp;</operator> <name pos:start="115:20" pos:end="115:22">buf</name></expr>)</condition> <block pos:start="115:25" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:21">

        <expr_stmt pos:start="117:9" pos:end="117:34"><expr pos:start="117:9" pos:end="117:33"><call pos:start="117:9" pos:end="117:33"><name pos:start="117:9" pos:end="117:19">ffurl_write</name><argument_list pos:start="117:20" pos:end="117:33">(<argument pos:start="117:21" pos:end="117:22"><expr pos:start="117:21" pos:end="117:22"><name pos:start="117:21" pos:end="117:22">fd</name></expr></argument>, <argument pos:start="117:25" pos:end="117:27"><expr pos:start="117:25" pos:end="117:27"><name pos:start="117:25" pos:end="117:27">buf</name></expr></argument>, <argument pos:start="117:30" pos:end="117:32"><expr pos:start="117:30" pos:end="117:32"><name pos:start="117:30" pos:end="117:32">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:21"><expr pos:start="119:9" pos:end="119:20"><call pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:15">av_free</name><argument_list pos:start="119:16" pos:end="119:20">(<argument pos:start="119:17" pos:end="119:19"><expr pos:start="119:17" pos:end="119:19"><name pos:start="119:17" pos:end="119:19">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
