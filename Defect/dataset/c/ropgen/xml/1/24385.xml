<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24385.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_htmlmarkup_to_ass</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:38">log_ctx</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:48">AVBPrint</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">dst</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:69"><decl pos:start="1:56" pos:end="1:69"><type pos:start="1:56" pos:end="1:69"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:65">char</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:69">in</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="253:1">{<block_content pos:start="5:5" pos:end="251:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:15">param</name></decl>, <decl pos:start="5:18" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:10"/><name pos:start="5:18" pos:end="5:28"><name pos:start="5:18" pos:end="5:23">buffer</name><index pos:start="5:24" pos:end="5:28">[<expr pos:start="5:25" pos:end="5:27"><literal type="number" pos:start="5:25" pos:end="5:27">128</literal></expr>]</index></name></decl>, <decl pos:start="5:31" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:10"/><name pos:start="5:31" pos:end="5:38"><name pos:start="5:31" pos:end="5:33">tmp</name><index pos:start="5:34" pos:end="5:38">[<expr pos:start="5:35" pos:end="5:37"><literal type="number" pos:start="5:35" pos:end="5:37">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:22">tag_close</name></decl>, <decl pos:start="7:25" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:28">sptr</name> <init pos:start="7:30" pos:end="7:32">= <expr pos:start="7:32" pos:end="7:32"><literal type="number" pos:start="7:32" pos:end="7:32">1</literal></expr></init></decl>, <decl pos:start="7:35" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:44">line_start</name> <init pos:start="7:46" pos:end="7:48">= <expr pos:start="7:48" pos:end="7:48"><literal type="number" pos:start="7:48" pos:end="7:48">1</literal></expr></init></decl>, <decl pos:start="7:51" pos:end="7:56"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:51" pos:end="7:52">an</name> <init pos:start="7:54" pos:end="7:56">= <expr pos:start="7:56" pos:end="7:56"><literal type="number" pos:start="7:56" pos:end="7:56">0</literal></expr></init></decl>, <decl pos:start="7:59" pos:end="7:65"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:59" pos:end="7:61">end</name> <init pos:start="7:63" pos:end="7:65">= <expr pos:start="7:65" pos:end="7:65"><literal type="number" pos:start="7:65" pos:end="7:65">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">SrtStack</name></type> <name pos:start="9:14" pos:end="9:22"><name pos:start="9:14" pos:end="9:18">stack</name><index pos:start="9:19" pos:end="9:22">[<expr pos:start="9:20" pos:end="9:21"><literal type="number" pos:start="9:20" pos:end="9:21">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:29">closing_brace_missing</name> <init pos:start="11:31" pos:end="11:33">= <expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:9">stack</name><index pos:start="15:10" pos:end="15:12">[<expr pos:start="15:11" pos:end="15:11"><literal type="number" pos:start="15:11" pos:end="15:11">0</literal></expr>]</index></name><operator pos:start="15:13" pos:end="15:13">.</operator><name pos:start="15:14" pos:end="15:19"><name pos:start="15:14" pos:end="15:16">tag</name><index pos:start="15:17" pos:end="15:19">[<expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>]</index></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:50"><expr pos:start="17:5" pos:end="17:49"><call pos:start="17:5" pos:end="17:49"><name pos:start="17:5" pos:end="17:10">strcpy</name><argument_list pos:start="17:11" pos:end="17:49">(<argument pos:start="17:12" pos:end="17:37"><expr pos:start="17:12" pos:end="17:37"><name pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:16">stack</name><index pos:start="17:17" pos:end="17:19">[<expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>]</index></name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:37"><name pos:start="17:21" pos:end="17:25">param</name><index pos:start="17:26" pos:end="17:37">[<expr pos:start="17:27" pos:end="17:36"><name pos:start="17:27" pos:end="17:36">PARAM_SIZE</name></expr>]</index></name></expr></argument>,  <argument pos:start="17:41" pos:end="17:48"><expr pos:start="17:41" pos:end="17:48"><literal type="string" pos:start="17:41" pos:end="17:48">"{\\fs}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:49"><expr pos:start="19:5" pos:end="19:48"><call pos:start="19:5" pos:end="19:48"><name pos:start="19:5" pos:end="19:10">strcpy</name><argument_list pos:start="19:11" pos:end="19:48">(<argument pos:start="19:12" pos:end="19:38"><expr pos:start="19:12" pos:end="19:38"><name pos:start="19:12" pos:end="19:19"><name pos:start="19:12" pos:end="19:16">stack</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>]</index></name><operator pos:start="19:20" pos:end="19:20">.</operator><name pos:start="19:21" pos:end="19:38"><name pos:start="19:21" pos:end="19:25">param</name><index pos:start="19:26" pos:end="19:38">[<expr pos:start="19:27" pos:end="19:37"><name pos:start="19:27" pos:end="19:37">PARAM_COLOR</name></expr>]</index></name></expr></argument>, <argument pos:start="19:41" pos:end="19:47"><expr pos:start="19:41" pos:end="19:47"><literal type="string" pos:start="19:41" pos:end="19:47">"{\\c}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:50"><expr pos:start="21:5" pos:end="21:49"><call pos:start="21:5" pos:end="21:49"><name pos:start="21:5" pos:end="21:10">strcpy</name><argument_list pos:start="21:11" pos:end="21:49">(<argument pos:start="21:12" pos:end="21:37"><expr pos:start="21:12" pos:end="21:37"><name pos:start="21:12" pos:end="21:19"><name pos:start="21:12" pos:end="21:16">stack</name><index pos:start="21:17" pos:end="21:19">[<expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>]</index></name><operator pos:start="21:20" pos:end="21:20">.</operator><name pos:start="21:21" pos:end="21:37"><name pos:start="21:21" pos:end="21:25">param</name><index pos:start="21:26" pos:end="21:37">[<expr pos:start="21:27" pos:end="21:36"><name pos:start="21:27" pos:end="21:36">PARAM_FACE</name></expr>]</index></name></expr></argument>,  <argument pos:start="21:41" pos:end="21:48"><expr pos:start="21:41" pos:end="21:48"><literal type="string" pos:start="21:41" pos:end="21:48">"{\\fn}"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="231:5">for <control pos:start="25:9" pos:end="25:29">(<init pos:start="25:10" pos:end="25:10">;</init> <condition pos:start="25:12" pos:end="25:23"><expr pos:start="25:12" pos:end="25:22"><operator pos:start="25:12" pos:end="25:12">!</operator><name pos:start="25:13" pos:end="25:15">end</name> <operator pos:start="25:17" pos:end="25:18">&amp;&amp;</operator> <operator pos:start="25:20" pos:end="25:20">*</operator><name pos:start="25:21" pos:end="25:22">in</name></expr>;</condition> <incr pos:start="25:25" pos:end="25:28"><expr pos:start="25:25" pos:end="25:28"><name pos:start="25:25" pos:end="25:26">in</name><operator pos:start="25:27" pos:end="25:28">++</operator></expr></incr>)</control> <block pos:start="25:31" pos:end="231:5">{<block_content pos:start="27:9" pos:end="229:27">

        <switch pos:start="27:9" pos:end="225:9">switch <condition pos:start="27:16" pos:end="27:20">(<expr pos:start="27:17" pos:end="27:19"><operator pos:start="27:17" pos:end="27:17">*</operator><name pos:start="27:18" pos:end="27:19">in</name></expr>)</condition> <block pos:start="27:22" pos:end="225:9">{<block_content pos:start="29:9" pos:end="223:18">

        <case pos:start="29:9" pos:end="29:18">case <expr pos:start="29:14" pos:end="29:17"><literal type="char" pos:start="29:14" pos:end="29:17">'\r'</literal></expr>:</case>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        <case pos:start="33:9" pos:end="33:18">case <expr pos:start="33:14" pos:end="33:17"><literal type="char" pos:start="33:14" pos:end="33:17">'\n'</literal></expr>:</case>

            <if_stmt pos:start="35:13" pos:end="41:13"><if pos:start="35:13" pos:end="41:13">if <condition pos:start="35:16" pos:end="35:27">(<expr pos:start="35:17" pos:end="35:26"><name pos:start="35:17" pos:end="35:26">line_start</name></expr>)</condition> <block pos:start="35:29" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:22">

                <expr_stmt pos:start="37:17" pos:end="37:24"><expr pos:start="37:17" pos:end="37:23"><name pos:start="37:17" pos:end="37:19">end</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">1</literal></expr>;</expr_stmt>

                <break pos:start="39:17" pos:end="39:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><call pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:29">rstrip_spaces_buf</name><argument_list pos:start="43:30" pos:end="43:34">(<argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:35"><expr pos:start="45:13" pos:end="45:34"><call pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:22">av_bprintf</name><argument_list pos:start="45:23" pos:end="45:34">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">dst</name></expr></argument>, <argument pos:start="45:29" pos:end="45:33"><expr pos:start="45:29" pos:end="45:33"><literal type="string" pos:start="45:29" pos:end="45:33">"\\N"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:27"><expr pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:22">line_start</name> <operator pos:start="47:24" pos:end="47:24">=</operator> <literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <case pos:start="51:9" pos:end="51:17">case <expr pos:start="51:14" pos:end="51:16"><literal type="char" pos:start="51:14" pos:end="51:16">' '</literal></expr>:</case>

            <if_stmt pos:start="53:13" pos:end="55:45"><if pos:start="53:13" pos:end="55:45">if <condition pos:start="53:16" pos:end="53:28">(<expr pos:start="53:17" pos:end="53:27"><operator pos:start="53:17" pos:end="53:17">!</operator><name pos:start="53:18" pos:end="53:27">line_start</name></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:45"><block_content pos:start="55:17" pos:end="55:45">

                <expr_stmt pos:start="55:17" pos:end="55:45"><expr pos:start="55:17" pos:end="55:44"><call pos:start="55:17" pos:end="55:44"><name pos:start="55:17" pos:end="55:31">av_bprint_chars</name><argument_list pos:start="55:32" pos:end="55:44">(<argument pos:start="55:33" pos:end="55:35"><expr pos:start="55:33" pos:end="55:35"><name pos:start="55:33" pos:end="55:35">dst</name></expr></argument>, <argument pos:start="55:38" pos:end="55:40"><expr pos:start="55:38" pos:end="55:40"><operator pos:start="55:38" pos:end="55:38">*</operator><name pos:start="55:39" pos:end="55:40">in</name></expr></argument>, <argument pos:start="55:43" pos:end="55:43"><expr pos:start="55:43" pos:end="55:43"><literal type="number" pos:start="55:43" pos:end="55:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:17">case <expr pos:start="59:14" pos:end="59:16"><literal type="char" pos:start="59:14" pos:end="59:16">'{'</literal></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:69"><expr pos:start="61:13" pos:end="61:68"><call pos:start="61:13" pos:end="61:68"><name pos:start="61:13" pos:end="61:29">handle_open_brace</name><argument_list pos:start="61:30" pos:end="61:68">(<argument pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><name pos:start="61:31" pos:end="61:33">dst</name></expr></argument>, <argument pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><operator pos:start="61:36" pos:end="61:36">&amp;</operator><name pos:start="61:37" pos:end="61:38">in</name></expr></argument>, <argument pos:start="61:41" pos:end="61:43"><expr pos:start="61:41" pos:end="61:43"><operator pos:start="61:41" pos:end="61:41">&amp;</operator><name pos:start="61:42" pos:end="61:43">an</name></expr></argument>, <argument pos:start="61:46" pos:end="61:67"><expr pos:start="61:46" pos:end="61:67"><operator pos:start="61:46" pos:end="61:46">&amp;</operator><name pos:start="61:47" pos:end="61:67">closing_brace_missing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:17">case <expr pos:start="65:14" pos:end="65:16"><literal type="char" pos:start="65:14" pos:end="65:16">'&lt;'</literal></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:21">tag_close</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:29"><name pos:start="67:25" pos:end="67:26">in</name><index pos:start="67:27" pos:end="67:29">[<expr pos:start="67:28" pos:end="67:28"><literal type="number" pos:start="67:28" pos:end="67:28">1</literal></expr>]</index></name> <operator pos:start="67:31" pos:end="67:32">==</operator> <literal type="char" pos:start="67:34" pos:end="67:36">'/'</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:20"><expr pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:15">len</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="217:13"><if pos:start="71:13" pos:end="217:13">if <condition pos:start="71:16" pos:end="71:84">(<expr pos:start="71:17" pos:end="71:83"><call pos:start="71:17" pos:end="71:67"><name pos:start="71:17" pos:end="71:22">sscanf</name><argument_list pos:start="71:23" pos:end="71:67">(<argument pos:start="71:24" pos:end="71:37"><expr pos:start="71:24" pos:end="71:37"><name pos:start="71:24" pos:end="71:25">in</name><operator pos:start="71:26" pos:end="71:26">+</operator><name pos:start="71:27" pos:end="71:35">tag_close</name><operator pos:start="71:36" pos:end="71:36">+</operator><literal type="number" pos:start="71:37" pos:end="71:37">1</literal></expr></argument>, <argument pos:start="71:40" pos:end="71:52"><expr pos:start="71:40" pos:end="71:52"><literal type="string" pos:start="71:40" pos:end="71:52">"%127[^&gt;]&gt;%n"</literal></expr></argument>, <argument pos:start="71:55" pos:end="71:60"><expr pos:start="71:55" pos:end="71:60"><name pos:start="71:55" pos:end="71:60">buffer</name></expr></argument>, <argument pos:start="71:63" pos:end="71:66"><expr pos:start="71:63" pos:end="71:66"><operator pos:start="71:63" pos:end="71:63">&amp;</operator><name pos:start="71:64" pos:end="71:66">len</name></expr></argument>)</argument_list></call> <operator pos:start="71:69" pos:end="71:70">&gt;=</operator> <literal type="number" pos:start="71:72" pos:end="71:72">1</literal> <operator pos:start="71:74" pos:end="71:75">&amp;&amp;</operator> <name pos:start="71:77" pos:end="71:79">len</name> <operator pos:start="71:81" pos:end="71:81">&gt;</operator> <literal type="number" pos:start="71:83" pos:end="71:83">0</literal></expr>)</condition> <block pos:start="71:86" pos:end="217:13">{<block_content pos:start="73:17" pos:end="215:17">

                <decl_stmt pos:start="73:17" pos:end="73:45"><decl pos:start="73:17" pos:end="73:44"><type pos:start="73:17" pos:end="73:28"><specifier pos:start="73:17" pos:end="73:21">const</specifier> <name pos:start="73:23" pos:end="73:26">char</name> <modifier pos:start="73:28" pos:end="73:28">*</modifier></type><name pos:start="73:29" pos:end="73:35">tagname</name> <init pos:start="73:37" pos:end="73:44">= <expr pos:start="73:39" pos:end="73:44"><name pos:start="73:39" pos:end="73:44">buffer</name></expr></init></decl>;</decl_stmt>

                <while pos:start="75:17" pos:end="77:30">while <condition pos:start="75:23" pos:end="75:39">(<expr pos:start="75:24" pos:end="75:38"><operator pos:start="75:24" pos:end="75:24">*</operator><name pos:start="75:25" pos:end="75:31">tagname</name> <operator pos:start="75:33" pos:end="75:34">==</operator> <literal type="char" pos:start="75:36" pos:end="75:38">' '</literal></expr>)</condition><block type="pseudo" pos:start="77:21" pos:end="77:30"><block_content pos:start="77:21" pos:end="77:30">

                    <expr_stmt pos:start="77:21" pos:end="77:30"><expr pos:start="77:21" pos:end="77:29"><name pos:start="77:21" pos:end="77:27">tagname</name><operator pos:start="77:28" pos:end="77:29">++</operator></expr>;</expr_stmt></block_content></block></while>

                <if_stmt pos:start="79:17" pos:end="81:33"><if pos:start="79:17" pos:end="81:33">if <condition pos:start="79:20" pos:end="79:51">(<expr pos:start="79:21" pos:end="79:50"><operator pos:start="79:21" pos:end="79:21">(</operator><name pos:start="79:22" pos:end="79:26">param</name> <operator pos:start="79:28" pos:end="79:28">=</operator> <call pos:start="79:30" pos:end="79:49"><name pos:start="79:30" pos:end="79:35">strchr</name><argument_list pos:start="79:36" pos:end="79:49">(<argument pos:start="79:37" pos:end="79:43"><expr pos:start="79:37" pos:end="79:43"><name pos:start="79:37" pos:end="79:43">tagname</name></expr></argument>, <argument pos:start="79:46" pos:end="79:48"><expr pos:start="79:46" pos:end="79:48"><literal type="char" pos:start="79:46" pos:end="79:48">' '</literal></expr></argument>)</argument_list></call><operator pos:start="79:50" pos:end="79:50">)</operator></expr>)</condition><block type="pseudo" pos:start="81:21" pos:end="81:33"><block_content pos:start="81:21" pos:end="81:33">

                    <expr_stmt pos:start="81:21" pos:end="81:33"><expr pos:start="81:21" pos:end="81:32"><operator pos:start="81:21" pos:end="81:21">*</operator><name pos:start="81:22" pos:end="81:26">param</name><operator pos:start="81:27" pos:end="81:28">++</operator> <operator pos:start="81:30" pos:end="81:30">=</operator> <literal type="number" pos:start="81:32" pos:end="81:32">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="83:17" pos:end="215:17"><if pos:start="83:17" pos:end="215:17">if <condition pos:start="83:20" pos:end="85:91">(<expr pos:start="83:21" pos:end="85:90"><operator pos:start="83:21" pos:end="83:21">(</operator><operator pos:start="83:22" pos:end="83:22">!</operator><name pos:start="83:23" pos:end="83:31">tag_close</name> <operator pos:start="83:33" pos:end="83:34">&amp;&amp;</operator> <name pos:start="83:36" pos:end="83:39">sptr</name> <operator pos:start="83:41" pos:end="83:41">&lt;</operator> <call pos:start="83:43" pos:end="83:63"><name pos:start="83:43" pos:end="83:56">FF_ARRAY_ELEMS</name><argument_list pos:start="83:57" pos:end="83:63">(<argument pos:start="83:58" pos:end="83:62"><expr pos:start="83:58" pos:end="83:62"><name pos:start="83:58" pos:end="83:62">stack</name></expr></argument>)</argument_list></call><operator pos:start="83:64" pos:end="83:64">)</operator> <operator pos:start="83:66" pos:end="83:67">||</operator>

                    <operator pos:start="85:21" pos:end="85:21">(</operator> <name pos:start="85:23" pos:end="85:31">tag_close</name> <operator pos:start="85:33" pos:end="85:34">&amp;&amp;</operator> <name pos:start="85:36" pos:end="85:39">sptr</name> <operator pos:start="85:41" pos:end="85:41">&gt;</operator> <literal type="number" pos:start="85:43" pos:end="85:43">0</literal> <operator pos:start="85:45" pos:end="85:46">&amp;&amp;</operator> <operator pos:start="85:48" pos:end="85:48">!</operator><call pos:start="85:49" pos:end="85:89"><name pos:start="85:49" pos:end="85:61">av_strcasecmp</name><argument_list pos:start="85:62" pos:end="85:89">(<argument pos:start="85:63" pos:end="85:79"><expr pos:start="85:63" pos:end="85:79"><name pos:start="85:63" pos:end="85:75"><name pos:start="85:63" pos:end="85:67">stack</name><index pos:start="85:68" pos:end="85:75">[<expr pos:start="85:69" pos:end="85:74"><name pos:start="85:69" pos:end="85:72">sptr</name><operator pos:start="85:73" pos:end="85:73">-</operator><literal type="number" pos:start="85:74" pos:end="85:74">1</literal></expr>]</index></name><operator pos:start="85:76" pos:end="85:76">.</operator><name pos:start="85:77" pos:end="85:79">tag</name></expr></argument>, <argument pos:start="85:82" pos:end="85:88"><expr pos:start="85:82" pos:end="85:88"><name pos:start="85:82" pos:end="85:88">tagname</name></expr></argument>)</argument_list></call><operator pos:start="85:90" pos:end="85:90">)</operator></expr>)</condition> <block pos:start="85:93" pos:end="215:17">{<block_content pos:start="87:21" pos:end="213:26">

                    <decl_stmt pos:start="87:21" pos:end="87:42"><decl pos:start="87:21" pos:end="87:25"><type pos:start="87:21" pos:end="87:23"><name pos:start="87:21" pos:end="87:23">int</name></type> <name pos:start="87:25" pos:end="87:25">i</name></decl>, <decl pos:start="87:28" pos:end="87:28"><type ref="prev" pos:start="87:21" pos:end="87:23"/><name pos:start="87:28" pos:end="87:28">j</name></decl>, <decl pos:start="87:31" pos:end="87:41"><type ref="prev" pos:start="87:21" pos:end="87:23"/><name pos:start="87:31" pos:end="87:37">unknown</name> <init pos:start="87:39" pos:end="87:41">= <expr pos:start="87:41" pos:end="87:41"><literal type="number" pos:start="87:41" pos:end="87:41">0</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:42"><expr pos:start="89:21" pos:end="89:41"><name pos:start="89:21" pos:end="89:22">in</name> <operator pos:start="89:24" pos:end="89:25">+=</operator> <name pos:start="89:27" pos:end="89:29">len</name> <operator pos:start="89:31" pos:end="89:31">+</operator> <name pos:start="89:33" pos:end="89:41">tag_close</name></expr>;</expr_stmt>

                    <if_stmt pos:start="91:21" pos:end="93:62"><if pos:start="91:21" pos:end="93:62">if <condition pos:start="91:24" pos:end="91:35">(<expr pos:start="91:25" pos:end="91:34"><operator pos:start="91:25" pos:end="91:25">!</operator><name pos:start="91:26" pos:end="91:34">tag_close</name></expr>)</condition><block type="pseudo" pos:start="93:25" pos:end="93:62"><block_content pos:start="93:25" pos:end="93:62">

                        <expr_stmt pos:start="93:25" pos:end="93:62"><expr pos:start="93:25" pos:end="93:61"><call pos:start="93:25" pos:end="93:61"><name pos:start="93:25" pos:end="93:30">memset</name><argument_list pos:start="93:31" pos:end="93:61">(<argument pos:start="93:32" pos:end="93:41"><expr pos:start="93:32" pos:end="93:41"><name pos:start="93:32" pos:end="93:36">stack</name><operator pos:start="93:37" pos:end="93:37">+</operator><name pos:start="93:38" pos:end="93:41">sptr</name></expr></argument>, <argument pos:start="93:44" pos:end="93:44"><expr pos:start="93:44" pos:end="93:44"><literal type="number" pos:start="93:44" pos:end="93:44">0</literal></expr></argument>, <argument pos:start="93:47" pos:end="93:60"><expr pos:start="93:47" pos:end="93:60"><sizeof pos:start="93:47" pos:end="93:60">sizeof<argument_list pos:start="93:53" pos:end="93:60">(<argument pos:start="93:54" pos:end="93:59"><expr pos:start="93:54" pos:end="93:59"><operator pos:start="93:54" pos:end="93:54">*</operator><name pos:start="93:55" pos:end="93:59">stack</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="95:21" pos:end="195:21"><if pos:start="95:21" pos:end="181:21">if <condition pos:start="95:24" pos:end="95:56">(<expr pos:start="95:25" pos:end="95:55"><operator pos:start="95:25" pos:end="95:25">!</operator><call pos:start="95:26" pos:end="95:55"><name pos:start="95:26" pos:end="95:38">av_strcasecmp</name><argument_list pos:start="95:39" pos:end="95:55">(<argument pos:start="95:40" pos:end="95:46"><expr pos:start="95:40" pos:end="95:46"><name pos:start="95:40" pos:end="95:46">tagname</name></expr></argument>, <argument pos:start="95:49" pos:end="95:54"><expr pos:start="95:49" pos:end="95:54"><literal type="string" pos:start="95:49" pos:end="95:54">"font"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:58" pos:end="181:21">{<block_content pos:start="97:25" pos:end="179:25">

                        <if_stmt pos:start="97:25" pos:end="179:25"><if pos:start="97:25" pos:end="113:25">if <condition pos:start="97:28" pos:end="97:38">(<expr pos:start="97:29" pos:end="97:37"><name pos:start="97:29" pos:end="97:37">tag_close</name></expr>)</condition> <block pos:start="97:40" pos:end="113:25">{<block_content pos:start="99:29" pos:end="111:41">

                            <for pos:start="99:29" pos:end="111:41">for <control pos:start="99:33" pos:end="99:61">(<init pos:start="99:34" pos:end="99:50"><expr pos:start="99:34" pos:end="99:49"><name pos:start="99:34" pos:end="99:34">i</name><operator pos:start="99:35" pos:end="99:35">=</operator><name pos:start="99:36" pos:end="99:47">PARAM_NUMBER</name><operator pos:start="99:48" pos:end="99:48">-</operator><literal type="number" pos:start="99:49" pos:end="99:49">1</literal></expr>;</init> <condition pos:start="99:52" pos:end="99:56"><expr pos:start="99:52" pos:end="99:55"><name pos:start="99:52" pos:end="99:52">i</name><operator pos:start="99:53" pos:end="99:54">&gt;=</operator><literal type="number" pos:start="99:55" pos:end="99:55">0</literal></expr>;</condition> <incr pos:start="99:58" pos:end="99:60"><expr pos:start="99:58" pos:end="99:60"><name pos:start="99:58" pos:end="99:58">i</name><operator pos:start="99:59" pos:end="99:60">--</operator></expr></incr>)</control><block type="pseudo" pos:start="101:33" pos:end="111:41"><block_content pos:start="101:33" pos:end="111:41">

                                <if_stmt pos:start="101:33" pos:end="111:41"><if pos:start="101:33" pos:end="111:41">if <condition pos:start="101:36" pos:end="101:62">(<expr pos:start="101:37" pos:end="101:61"><name pos:start="101:37" pos:end="101:49"><name pos:start="101:37" pos:end="101:41">stack</name><index pos:start="101:42" pos:end="101:49">[<expr pos:start="101:43" pos:end="101:48"><name pos:start="101:43" pos:end="101:46">sptr</name><operator pos:start="101:47" pos:end="101:47">-</operator><literal type="number" pos:start="101:48" pos:end="101:48">1</literal></expr>]</index></name><operator pos:start="101:50" pos:end="101:50">.</operator><name pos:start="101:51" pos:end="101:61"><name pos:start="101:51" pos:end="101:55">param</name><index pos:start="101:56" pos:end="101:58">[<expr pos:start="101:57" pos:end="101:57"><name pos:start="101:57" pos:end="101:57">i</name></expr>]</index><index pos:start="101:59" pos:end="101:61">[<expr pos:start="101:60" pos:end="101:60"><literal type="number" pos:start="101:60" pos:end="101:60">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="103:37" pos:end="111:41"><block_content pos:start="103:37" pos:end="111:41">

                                    <for pos:start="103:37" pos:end="111:41">for <control pos:start="103:41" pos:end="103:61">(<init pos:start="103:42" pos:end="103:50"><expr pos:start="103:42" pos:end="103:49"><name pos:start="103:42" pos:end="103:42">j</name><operator pos:start="103:43" pos:end="103:43">=</operator><name pos:start="103:44" pos:end="103:47">sptr</name><operator pos:start="103:48" pos:end="103:48">-</operator><literal type="number" pos:start="103:49" pos:end="103:49">2</literal></expr>;</init> <condition pos:start="103:52" pos:end="103:56"><expr pos:start="103:52" pos:end="103:55"><name pos:start="103:52" pos:end="103:52">j</name><operator pos:start="103:53" pos:end="103:54">&gt;=</operator><literal type="number" pos:start="103:55" pos:end="103:55">0</literal></expr>;</condition> <incr pos:start="103:58" pos:end="103:60"><expr pos:start="103:58" pos:end="103:60"><name pos:start="103:58" pos:end="103:58">j</name><operator pos:start="103:59" pos:end="103:60">--</operator></expr></incr>)</control><block type="pseudo" pos:start="105:41" pos:end="111:41"><block_content pos:start="105:41" pos:end="111:41">

                                        <if_stmt pos:start="105:41" pos:end="111:41"><if pos:start="105:41" pos:end="111:41">if <condition pos:start="105:44" pos:end="105:65">(<expr pos:start="105:45" pos:end="105:64"><name pos:start="105:45" pos:end="105:52"><name pos:start="105:45" pos:end="105:49">stack</name><index pos:start="105:50" pos:end="105:52">[<expr pos:start="105:51" pos:end="105:51"><name pos:start="105:51" pos:end="105:51">j</name></expr>]</index></name><operator pos:start="105:53" pos:end="105:53">.</operator><name pos:start="105:54" pos:end="105:64"><name pos:start="105:54" pos:end="105:58">param</name><index pos:start="105:59" pos:end="105:61">[<expr pos:start="105:60" pos:end="105:60"><name pos:start="105:60" pos:end="105:60">i</name></expr>]</index><index pos:start="105:62" pos:end="105:64">[<expr pos:start="105:63" pos:end="105:63"><literal type="number" pos:start="105:63" pos:end="105:63">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="105:67" pos:end="111:41">{<block_content pos:start="107:45" pos:end="109:50">

                                            <expr_stmt pos:start="107:45" pos:end="107:85"><expr pos:start="107:45" pos:end="107:84"><call pos:start="107:45" pos:end="107:84"><name pos:start="107:45" pos:end="107:54">av_bprintf</name><argument_list pos:start="107:55" pos:end="107:84">(<argument pos:start="107:56" pos:end="107:58"><expr pos:start="107:56" pos:end="107:58"><name pos:start="107:56" pos:end="107:58">dst</name></expr></argument>, <argument pos:start="107:61" pos:end="107:64"><expr pos:start="107:61" pos:end="107:64"><literal type="string" pos:start="107:61" pos:end="107:64">"%s"</literal></expr></argument>, <argument pos:start="107:67" pos:end="107:83"><expr pos:start="107:67" pos:end="107:83"><name pos:start="107:67" pos:end="107:74"><name pos:start="107:67" pos:end="107:71">stack</name><index pos:start="107:72" pos:end="107:74">[<expr pos:start="107:73" pos:end="107:73"><name pos:start="107:73" pos:end="107:73">j</name></expr>]</index></name><operator pos:start="107:75" pos:end="107:75">.</operator><name pos:start="107:76" pos:end="107:83"><name pos:start="107:76" pos:end="107:80">param</name><index pos:start="107:81" pos:end="107:83">[<expr pos:start="107:82" pos:end="107:82"><name pos:start="107:82" pos:end="107:82">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                            <break pos:start="109:45" pos:end="109:50">break;</break>

                                        </block_content>}</block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for>

                        </block_content>}</block></if> <else pos:start="113:27" pos:end="179:25">else <block pos:start="113:32" pos:end="179:25">{<block_content pos:start="115:29" pos:end="177:80">

                            <while pos:start="115:29" pos:end="171:29">while <condition pos:start="115:35" pos:end="115:41">(<expr pos:start="115:36" pos:end="115:40"><name pos:start="115:36" pos:end="115:40">param</name></expr>)</condition> <block pos:start="115:43" pos:end="171:29">{<block_content pos:start="117:33" pos:end="169:44">

                                <if_stmt pos:start="117:33" pos:end="165:33"><if pos:start="117:33" pos:end="133:33">if <condition pos:start="117:36" pos:end="117:71">(<expr pos:start="117:37" pos:end="117:70"><operator pos:start="117:37" pos:end="117:37">!</operator><call pos:start="117:38" pos:end="117:70"><name pos:start="117:38" pos:end="117:51">av_strncasecmp</name><argument_list pos:start="117:52" pos:end="117:70">(<argument pos:start="117:53" pos:end="117:57"><expr pos:start="117:53" pos:end="117:57"><name pos:start="117:53" pos:end="117:57">param</name></expr></argument>, <argument pos:start="117:60" pos:end="117:66"><expr pos:start="117:60" pos:end="117:66"><literal type="string" pos:start="117:60" pos:end="117:66">"size="</literal></expr></argument>, <argument pos:start="117:69" pos:end="117:69"><expr pos:start="117:69" pos:end="117:69"><literal type="number" pos:start="117:69" pos:end="117:69">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:73" pos:end="133:33">{<block_content pos:start="119:37" pos:end="131:37">

                                    <decl_stmt pos:start="119:37" pos:end="119:55"><decl pos:start="119:37" pos:end="119:54"><type pos:start="119:37" pos:end="119:44"><name pos:start="119:37" pos:end="119:44">unsigned</name></type> <name pos:start="119:46" pos:end="119:54">font_size</name></decl>;</decl_stmt>

                                    <expr_stmt pos:start="121:37" pos:end="121:67"><expr pos:start="121:37" pos:end="121:66"><name pos:start="121:37" pos:end="121:41">param</name> <operator pos:start="121:43" pos:end="121:44">+=</operator> <literal type="number" pos:start="121:46" pos:end="121:48">5</literal> <operator pos:start="121:48" pos:end="121:48">+</operator> <operator pos:start="121:50" pos:end="121:50">(</operator><name pos:start="121:51" pos:end="121:58"><name pos:start="121:51" pos:end="121:55">param</name><index pos:start="121:56" pos:end="121:58">[<expr pos:start="121:57" pos:end="121:57"><literal type="number" pos:start="121:57" pos:end="121:57">5</literal></expr>]</index></name> <operator pos:start="121:60" pos:end="121:61">==</operator> <literal type="char" pos:start="121:63" pos:end="121:65">'"'</literal><operator pos:start="121:66" pos:end="121:66">)</operator></expr>;</expr_stmt>

                                    <if_stmt pos:start="123:37" pos:end="131:37"><if pos:start="123:37" pos:end="131:37">if <condition pos:start="123:40" pos:end="123:77">(<expr pos:start="123:41" pos:end="123:76"><call pos:start="123:41" pos:end="123:71"><name pos:start="123:41" pos:end="123:46">sscanf</name><argument_list pos:start="123:47" pos:end="123:71">(<argument pos:start="123:48" pos:end="123:52"><expr pos:start="123:48" pos:end="123:52"><name pos:start="123:48" pos:end="123:52">param</name></expr></argument>, <argument pos:start="123:55" pos:end="123:58"><expr pos:start="123:55" pos:end="123:58"><literal type="string" pos:start="123:55" pos:end="123:58">"%u"</literal></expr></argument>, <argument pos:start="123:61" pos:end="123:70"><expr pos:start="123:61" pos:end="123:70"><operator pos:start="123:61" pos:end="123:61">&amp;</operator><name pos:start="123:62" pos:end="123:70">font_size</name></expr></argument>)</argument_list></call> <operator pos:start="123:73" pos:end="123:74">==</operator> <literal type="number" pos:start="123:76" pos:end="123:76">1</literal></expr>)</condition> <block pos:start="123:79" pos:end="131:37">{<block_content pos:start="125:41" pos:end="129:68">

                                        <expr_stmt pos:start="125:41" pos:end="129:68"><expr pos:start="125:41" pos:end="129:67"><call pos:start="125:41" pos:end="129:67"><name pos:start="125:41" pos:end="125:48">snprintf</name><argument_list pos:start="125:49" pos:end="129:67">(<argument pos:start="125:50" pos:end="125:78"><expr pos:start="125:50" pos:end="125:78"><name pos:start="125:50" pos:end="125:60"><name pos:start="125:50" pos:end="125:54">stack</name><index pos:start="125:55" pos:end="125:60">[<expr pos:start="125:56" pos:end="125:59"><name pos:start="125:56" pos:end="125:59">sptr</name></expr>]</index></name><operator pos:start="125:61" pos:end="125:61">.</operator><name pos:start="125:62" pos:end="125:78"><name pos:start="125:62" pos:end="125:66">param</name><index pos:start="125:67" pos:end="125:78">[<expr pos:start="125:68" pos:end="125:77"><name pos:start="125:68" pos:end="125:77">PARAM_SIZE</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="127:46" pos:end="127:79"><expr pos:start="127:46" pos:end="127:79"><sizeof pos:start="127:46" pos:end="127:79">sizeof<argument_list pos:start="127:52" pos:end="127:79">(<argument pos:start="127:53" pos:end="127:78"><expr pos:start="127:53" pos:end="127:78"><name pos:start="127:53" pos:end="127:60"><name pos:start="127:53" pos:end="127:57">stack</name><index pos:start="127:58" pos:end="127:60">[<expr pos:start="127:59" pos:end="127:59"><literal type="number" pos:start="127:59" pos:end="127:59">0</literal></expr>]</index></name><operator pos:start="127:61" pos:end="127:61">.</operator><name pos:start="127:62" pos:end="127:78"><name pos:start="127:62" pos:end="127:66">param</name><index pos:start="127:67" pos:end="127:78">[<expr pos:start="127:68" pos:end="127:77"><name pos:start="127:68" pos:end="127:77">PARAM_SIZE</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                             <argument pos:start="129:46" pos:end="129:55"><expr pos:start="129:46" pos:end="129:55"><literal type="string" pos:start="129:46" pos:end="129:55">"{\\fs%u}"</literal></expr></argument>, <argument pos:start="129:58" pos:end="129:66"><expr pos:start="129:58" pos:end="129:66"><name pos:start="129:58" pos:end="129:66">font_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    </block_content>}</block></if></if_stmt>

                                </block_content>}</block></if> <if type="elseif" pos:start="133:35" pos:end="145:33">else if <condition pos:start="133:43" pos:end="133:79">(<expr pos:start="133:44" pos:end="133:78"><operator pos:start="133:44" pos:end="133:44">!</operator><call pos:start="133:45" pos:end="133:78"><name pos:start="133:45" pos:end="133:58">av_strncasecmp</name><argument_list pos:start="133:59" pos:end="133:78">(<argument pos:start="133:60" pos:end="133:64"><expr pos:start="133:60" pos:end="133:64"><name pos:start="133:60" pos:end="133:64">param</name></expr></argument>, <argument pos:start="133:67" pos:end="133:74"><expr pos:start="133:67" pos:end="133:74"><literal type="string" pos:start="133:67" pos:end="133:74">"color="</literal></expr></argument>, <argument pos:start="133:77" pos:end="133:77"><expr pos:start="133:77" pos:end="133:77"><literal type="number" pos:start="133:77" pos:end="133:77">6</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:81" pos:end="145:33">{<block_content pos:start="135:37" pos:end="143:75">

                                    <expr_stmt pos:start="135:37" pos:end="135:67"><expr pos:start="135:37" pos:end="135:66"><name pos:start="135:37" pos:end="135:41">param</name> <operator pos:start="135:43" pos:end="135:44">+=</operator> <literal type="number" pos:start="135:46" pos:end="135:48">6</literal> <operator pos:start="135:48" pos:end="135:48">+</operator> <operator pos:start="135:50" pos:end="135:50">(</operator><name pos:start="135:51" pos:end="135:58"><name pos:start="135:51" pos:end="135:55">param</name><index pos:start="135:56" pos:end="135:58">[<expr pos:start="135:57" pos:end="135:57"><literal type="number" pos:start="135:57" pos:end="135:57">6</literal></expr>]</index></name> <operator pos:start="135:60" pos:end="135:61">==</operator> <literal type="char" pos:start="135:63" pos:end="135:65">'"'</literal><operator pos:start="135:66" pos:end="135:66">)</operator></expr>;</expr_stmt>

                                    <expr_stmt pos:start="137:37" pos:end="143:75"><expr pos:start="137:37" pos:end="143:74"><call pos:start="137:37" pos:end="143:74"><name pos:start="137:37" pos:end="137:44">snprintf</name><argument_list pos:start="137:45" pos:end="143:74">(<argument pos:start="137:46" pos:end="137:75"><expr pos:start="137:46" pos:end="137:75"><name pos:start="137:46" pos:end="137:56"><name pos:start="137:46" pos:end="137:50">stack</name><index pos:start="137:51" pos:end="137:56">[<expr pos:start="137:52" pos:end="137:55"><name pos:start="137:52" pos:end="137:55">sptr</name></expr>]</index></name><operator pos:start="137:57" pos:end="137:57">.</operator><name pos:start="137:58" pos:end="137:75"><name pos:start="137:58" pos:end="137:62">param</name><index pos:start="137:63" pos:end="137:75">[<expr pos:start="137:64" pos:end="137:74"><name pos:start="137:64" pos:end="137:74">PARAM_COLOR</name></expr>]</index></name></expr></argument>,

                                         <argument pos:start="139:42" pos:end="139:76"><expr pos:start="139:42" pos:end="139:76"><sizeof pos:start="139:42" pos:end="139:76">sizeof<argument_list pos:start="139:48" pos:end="139:76">(<argument pos:start="139:49" pos:end="139:75"><expr pos:start="139:49" pos:end="139:75"><name pos:start="139:49" pos:end="139:56"><name pos:start="139:49" pos:end="139:53">stack</name><index pos:start="139:54" pos:end="139:56">[<expr pos:start="139:55" pos:end="139:55"><literal type="number" pos:start="139:55" pos:end="139:55">0</literal></expr>]</index></name><operator pos:start="139:57" pos:end="139:57">.</operator><name pos:start="139:58" pos:end="139:75"><name pos:start="139:58" pos:end="139:62">param</name><index pos:start="139:63" pos:end="139:75">[<expr pos:start="139:64" pos:end="139:74"><name pos:start="139:64" pos:end="139:74">PARAM_COLOR</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                         <argument pos:start="141:42" pos:end="141:53"><expr pos:start="141:42" pos:end="141:53"><literal type="string" pos:start="141:42" pos:end="141:53">"{\\c&amp;H%X&amp;}"</literal></expr></argument>,

                                         <argument pos:start="143:42" pos:end="143:73"><expr pos:start="143:42" pos:end="143:73"><call pos:start="143:42" pos:end="143:73"><name pos:start="143:42" pos:end="143:57">html_color_parse</name><argument_list pos:start="143:58" pos:end="143:73">(<argument pos:start="143:59" pos:end="143:65"><expr pos:start="143:59" pos:end="143:65"><name pos:start="143:59" pos:end="143:65">log_ctx</name></expr></argument>, <argument pos:start="143:68" pos:end="143:72"><expr pos:start="143:68" pos:end="143:72"><name pos:start="143:68" pos:end="143:72">param</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></if> <if type="elseif" pos:start="145:35" pos:end="165:33">else if <condition pos:start="145:43" pos:end="145:78">(<expr pos:start="145:44" pos:end="145:77"><operator pos:start="145:44" pos:end="145:44">!</operator><call pos:start="145:45" pos:end="145:77"><name pos:start="145:45" pos:end="145:58">av_strncasecmp</name><argument_list pos:start="145:59" pos:end="145:77">(<argument pos:start="145:60" pos:end="145:64"><expr pos:start="145:60" pos:end="145:64"><name pos:start="145:60" pos:end="145:64">param</name></expr></argument>, <argument pos:start="145:67" pos:end="145:73"><expr pos:start="145:67" pos:end="145:73"><literal type="string" pos:start="145:67" pos:end="145:73">"face="</literal></expr></argument>, <argument pos:start="145:76" pos:end="145:76"><expr pos:start="145:76" pos:end="145:76"><literal type="number" pos:start="145:76" pos:end="145:76">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="145:80" pos:end="165:33">{<block_content pos:start="147:37" pos:end="163:62">

                                    <expr_stmt pos:start="147:37" pos:end="147:67"><expr pos:start="147:37" pos:end="147:66"><name pos:start="147:37" pos:end="147:41">param</name> <operator pos:start="147:43" pos:end="147:44">+=</operator> <literal type="number" pos:start="147:46" pos:end="147:48">5</literal> <operator pos:start="147:48" pos:end="147:48">+</operator> <operator pos:start="147:50" pos:end="147:50">(</operator><name pos:start="147:51" pos:end="147:58"><name pos:start="147:51" pos:end="147:55">param</name><index pos:start="147:56" pos:end="147:58">[<expr pos:start="147:57" pos:end="147:57"><literal type="number" pos:start="147:57" pos:end="147:57">5</literal></expr>]</index></name> <operator pos:start="147:60" pos:end="147:61">==</operator> <literal type="char" pos:start="147:63" pos:end="147:65">'"'</literal><operator pos:start="147:66" pos:end="147:66">)</operator></expr>;</expr_stmt>

                                    <expr_stmt pos:start="149:37" pos:end="151:80"><expr pos:start="149:37" pos:end="151:79"><name pos:start="149:37" pos:end="149:39">len</name> <operator pos:start="149:41" pos:end="149:41">=</operator> <call pos:start="149:43" pos:end="151:79"><name pos:start="149:43" pos:end="149:49">strcspn</name><argument_list pos:start="149:50" pos:end="151:79">(<argument pos:start="149:51" pos:end="149:55"><expr pos:start="149:51" pos:end="149:55"><name pos:start="149:51" pos:end="149:55">param</name></expr></argument>,

                                                  <argument pos:start="151:51" pos:end="151:78"><expr pos:start="151:51" pos:end="151:78"><ternary pos:start="151:51" pos:end="151:78"><condition pos:start="151:51" pos:end="151:68"><expr pos:start="151:51" pos:end="151:66"><name pos:start="151:51" pos:end="151:59"><name pos:start="151:51" pos:end="151:55">param</name><index pos:start="151:56" pos:end="151:59">[<expr pos:start="151:57" pos:end="151:58"><operator pos:start="151:57" pos:end="151:57">-</operator><literal type="number" pos:start="151:58" pos:end="151:58">1</literal></expr>]</index></name> <operator pos:start="151:61" pos:end="151:62">==</operator> <literal type="char" pos:start="151:64" pos:end="151:66">'"'</literal></expr> ?</condition><then pos:start="151:70" pos:end="151:73"> <expr pos:start="151:70" pos:end="151:73"><literal type="string" pos:start="151:70" pos:end="151:73">"\""</literal></expr> </then><else pos:start="151:75" pos:end="151:78">:<expr pos:start="151:76" pos:end="151:78"><literal type="string" pos:start="151:76" pos:end="151:78">" "</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="153:37" pos:end="155:74"><expr pos:start="153:37" pos:end="155:73"><call pos:start="153:37" pos:end="155:73"><name pos:start="153:37" pos:end="153:46">av_strlcpy</name><argument_list pos:start="153:47" pos:end="155:73">(<argument pos:start="153:48" pos:end="153:50"><expr pos:start="153:48" pos:end="153:50"><name pos:start="153:48" pos:end="153:50">tmp</name></expr></argument>, <argument pos:start="153:53" pos:end="153:57"><expr pos:start="153:53" pos:end="153:57"><name pos:start="153:53" pos:end="153:57">param</name></expr></argument>,

                                               <argument pos:start="155:48" pos:end="155:72"><expr pos:start="155:48" pos:end="155:72"><call pos:start="155:48" pos:end="155:72"><name pos:start="155:48" pos:end="155:52">FFMIN</name><argument_list pos:start="155:53" pos:end="155:72">(<argument pos:start="155:54" pos:end="155:64"><expr pos:start="155:54" pos:end="155:64"><sizeof pos:start="155:54" pos:end="155:64">sizeof<argument_list pos:start="155:60" pos:end="155:64">(<argument pos:start="155:61" pos:end="155:63"><expr pos:start="155:61" pos:end="155:63"><name pos:start="155:61" pos:end="155:63">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="155:67" pos:end="155:71"><expr pos:start="155:67" pos:end="155:71"><name pos:start="155:67" pos:end="155:69">len</name><operator pos:start="155:70" pos:end="155:70">+</operator><literal type="number" pos:start="155:71" pos:end="155:71">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="157:37" pos:end="157:49"><expr pos:start="157:37" pos:end="157:48"><name pos:start="157:37" pos:end="157:41">param</name> <operator pos:start="157:43" pos:end="157:44">+=</operator> <name pos:start="157:46" pos:end="157:48">len</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="159:37" pos:end="163:62"><expr pos:start="159:37" pos:end="163:61"><call pos:start="159:37" pos:end="163:61"><name pos:start="159:37" pos:end="159:44">snprintf</name><argument_list pos:start="159:45" pos:end="163:61">(<argument pos:start="159:46" pos:end="159:74"><expr pos:start="159:46" pos:end="159:74"><name pos:start="159:46" pos:end="159:56"><name pos:start="159:46" pos:end="159:50">stack</name><index pos:start="159:51" pos:end="159:56">[<expr pos:start="159:52" pos:end="159:55"><name pos:start="159:52" pos:end="159:55">sptr</name></expr>]</index></name><operator pos:start="159:57" pos:end="159:57">.</operator><name pos:start="159:58" pos:end="159:74"><name pos:start="159:58" pos:end="159:62">param</name><index pos:start="159:63" pos:end="159:74">[<expr pos:start="159:64" pos:end="159:73"><name pos:start="159:64" pos:end="159:73">PARAM_FACE</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="161:46" pos:end="161:79"><expr pos:start="161:46" pos:end="161:79"><sizeof pos:start="161:46" pos:end="161:79">sizeof<argument_list pos:start="161:52" pos:end="161:79">(<argument pos:start="161:53" pos:end="161:78"><expr pos:start="161:53" pos:end="161:78"><name pos:start="161:53" pos:end="161:60"><name pos:start="161:53" pos:end="161:57">stack</name><index pos:start="161:58" pos:end="161:60">[<expr pos:start="161:59" pos:end="161:59"><literal type="number" pos:start="161:59" pos:end="161:59">0</literal></expr>]</index></name><operator pos:start="161:61" pos:end="161:61">.</operator><name pos:start="161:62" pos:end="161:78"><name pos:start="161:62" pos:end="161:66">param</name><index pos:start="161:67" pos:end="161:78">[<expr pos:start="161:68" pos:end="161:77"><name pos:start="161:68" pos:end="161:77">PARAM_FACE</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                             <argument pos:start="163:46" pos:end="163:55"><expr pos:start="163:46" pos:end="163:55"><literal type="string" pos:start="163:46" pos:end="163:55">"{\\fn%s}"</literal></expr></argument>, <argument pos:start="163:58" pos:end="163:60"><expr pos:start="163:58" pos:end="163:60"><name pos:start="163:58" pos:end="163:60">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></if></if_stmt>

                                <if_stmt pos:start="167:33" pos:end="169:44"><if pos:start="167:33" pos:end="169:44">if <condition pos:start="167:36" pos:end="167:65">(<expr pos:start="167:37" pos:end="167:64"><operator pos:start="167:37" pos:end="167:37">(</operator><name pos:start="167:38" pos:end="167:42">param</name> <operator pos:start="167:44" pos:end="167:44">=</operator> <call pos:start="167:46" pos:end="167:63"><name pos:start="167:46" pos:end="167:51">strchr</name><argument_list pos:start="167:52" pos:end="167:63">(<argument pos:start="167:53" pos:end="167:57"><expr pos:start="167:53" pos:end="167:57"><name pos:start="167:53" pos:end="167:57">param</name></expr></argument>, <argument pos:start="167:60" pos:end="167:62"><expr pos:start="167:60" pos:end="167:62"><literal type="char" pos:start="167:60" pos:end="167:62">' '</literal></expr></argument>)</argument_list></call><operator pos:start="167:64" pos:end="167:64">)</operator></expr>)</condition><block type="pseudo" pos:start="169:37" pos:end="169:44"><block_content pos:start="169:37" pos:end="169:44">

                                    <expr_stmt pos:start="169:37" pos:end="169:44"><expr pos:start="169:37" pos:end="169:43"><name pos:start="169:37" pos:end="169:41">param</name><operator pos:start="169:42" pos:end="169:43">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            </block_content>}</block></while>

                            <for pos:start="173:29" pos:end="177:80">for <control pos:start="173:33" pos:end="173:58">(<init pos:start="173:34" pos:end="173:37"><expr pos:start="173:34" pos:end="173:36"><name pos:start="173:34" pos:end="173:34">i</name><operator pos:start="173:35" pos:end="173:35">=</operator><literal type="number" pos:start="173:36" pos:end="173:36">0</literal></expr>;</init> <condition pos:start="173:39" pos:end="173:53"><expr pos:start="173:39" pos:end="173:52"><name pos:start="173:39" pos:end="173:39">i</name><operator pos:start="173:40" pos:end="173:40">&lt;</operator><name pos:start="173:41" pos:end="173:52">PARAM_NUMBER</name></expr>;</condition> <incr pos:start="173:55" pos:end="173:57"><expr pos:start="173:55" pos:end="173:57"><name pos:start="173:55" pos:end="173:55">i</name><operator pos:start="173:56" pos:end="173:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="175:33" pos:end="177:80"><block_content pos:start="175:33" pos:end="177:80">

                                <if_stmt pos:start="175:33" pos:end="177:80"><if pos:start="175:33" pos:end="177:80">if <condition pos:start="175:36" pos:end="175:60">(<expr pos:start="175:37" pos:end="175:59"><name pos:start="175:37" pos:end="175:47"><name pos:start="175:37" pos:end="175:41">stack</name><index pos:start="175:42" pos:end="175:47">[<expr pos:start="175:43" pos:end="175:46"><name pos:start="175:43" pos:end="175:46">sptr</name></expr>]</index></name><operator pos:start="175:48" pos:end="175:48">.</operator><name pos:start="175:49" pos:end="175:59"><name pos:start="175:49" pos:end="175:53">param</name><index pos:start="175:54" pos:end="175:56">[<expr pos:start="175:55" pos:end="175:55"><name pos:start="175:55" pos:end="175:55">i</name></expr>]</index><index pos:start="175:57" pos:end="175:59">[<expr pos:start="175:58" pos:end="175:58"><literal type="number" pos:start="175:58" pos:end="175:58">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="177:37" pos:end="177:80"><block_content pos:start="177:37" pos:end="177:80">

                                    <expr_stmt pos:start="177:37" pos:end="177:80"><expr pos:start="177:37" pos:end="177:79"><call pos:start="177:37" pos:end="177:79"><name pos:start="177:37" pos:end="177:46">av_bprintf</name><argument_list pos:start="177:47" pos:end="177:79">(<argument pos:start="177:48" pos:end="177:50"><expr pos:start="177:48" pos:end="177:50"><name pos:start="177:48" pos:end="177:50">dst</name></expr></argument>, <argument pos:start="177:53" pos:end="177:56"><expr pos:start="177:53" pos:end="177:56"><literal type="string" pos:start="177:53" pos:end="177:56">"%s"</literal></expr></argument>, <argument pos:start="177:59" pos:end="177:78"><expr pos:start="177:59" pos:end="177:78"><name pos:start="177:59" pos:end="177:69"><name pos:start="177:59" pos:end="177:63">stack</name><index pos:start="177:64" pos:end="177:69">[<expr pos:start="177:65" pos:end="177:68"><name pos:start="177:65" pos:end="177:68">sptr</name></expr>]</index></name><operator pos:start="177:70" pos:end="177:70">.</operator><name pos:start="177:71" pos:end="177:78"><name pos:start="177:71" pos:end="177:75">param</name><index pos:start="177:76" pos:end="177:78">[<expr pos:start="177:77" pos:end="177:77"><name pos:start="177:77" pos:end="177:77">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="181:23" pos:end="185:21">else if <condition pos:start="181:31" pos:end="181:88">(<expr pos:start="181:32" pos:end="181:87"><name pos:start="181:32" pos:end="181:41"><name pos:start="181:32" pos:end="181:38">tagname</name><index pos:start="181:39" pos:end="181:41">[<expr pos:start="181:40" pos:end="181:40"><literal type="number" pos:start="181:40" pos:end="181:40">0</literal></expr>]</index></name> <operator pos:start="181:43" pos:end="181:44">&amp;&amp;</operator> <operator pos:start="181:46" pos:end="181:46">!</operator><name pos:start="181:47" pos:end="181:56"><name pos:start="181:47" pos:end="181:53">tagname</name><index pos:start="181:54" pos:end="181:56">[<expr pos:start="181:55" pos:end="181:55"><literal type="number" pos:start="181:55" pos:end="181:55">1</literal></expr>]</index></name> <operator pos:start="181:58" pos:end="181:59">&amp;&amp;</operator> <call pos:start="181:61" pos:end="181:87"><name pos:start="181:61" pos:end="181:70">av_stristr</name><argument_list pos:start="181:71" pos:end="181:87">(<argument pos:start="181:72" pos:end="181:77"><expr pos:start="181:72" pos:end="181:77"><literal type="string" pos:start="181:72" pos:end="181:77">"bisu"</literal></expr></argument>, <argument pos:start="181:80" pos:end="181:86"><expr pos:start="181:80" pos:end="181:86"><name pos:start="181:80" pos:end="181:86">tagname</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="181:90" pos:end="185:21">{<block_content pos:start="183:25" pos:end="183:94">

                        <expr_stmt pos:start="183:25" pos:end="183:94"><expr pos:start="183:25" pos:end="183:93"><call pos:start="183:25" pos:end="183:93"><name pos:start="183:25" pos:end="183:34">av_bprintf</name><argument_list pos:start="183:35" pos:end="183:93">(<argument pos:start="183:36" pos:end="183:38"><expr pos:start="183:36" pos:end="183:38"><name pos:start="183:36" pos:end="183:38">dst</name></expr></argument>, <argument pos:start="183:41" pos:end="183:50"><expr pos:start="183:41" pos:end="183:50"><literal type="string" pos:start="183:41" pos:end="183:50">"{\\%c%d}"</literal></expr></argument>, <argument pos:start="183:53" pos:end="183:80"><expr pos:start="183:53" pos:end="183:80"><operator pos:start="183:53" pos:end="183:53">(</operator><name pos:start="183:54" pos:end="183:57">char</name><operator pos:start="183:58" pos:end="183:58">)</operator><call pos:start="183:59" pos:end="183:80"><name pos:start="183:59" pos:end="183:68">av_tolower</name><argument_list pos:start="183:69" pos:end="183:80">(<argument pos:start="183:70" pos:end="183:79"><expr pos:start="183:70" pos:end="183:79"><name pos:start="183:70" pos:end="183:79"><name pos:start="183:70" pos:end="183:76">tagname</name><index pos:start="183:77" pos:end="183:79">[<expr pos:start="183:78" pos:end="183:78"><literal type="number" pos:start="183:78" pos:end="183:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="183:83" pos:end="183:92"><expr pos:start="183:83" pos:end="183:92"><operator pos:start="183:83" pos:end="183:83">!</operator><name pos:start="183:84" pos:end="183:92">tag_close</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="185:23" pos:end="189:21">else if <condition pos:start="185:31" pos:end="185:61">(<expr pos:start="185:32" pos:end="185:60"><operator pos:start="185:32" pos:end="185:32">!</operator><call pos:start="185:33" pos:end="185:60"><name pos:start="185:33" pos:end="185:45">av_strcasecmp</name><argument_list pos:start="185:46" pos:end="185:60">(<argument pos:start="185:47" pos:end="185:53"><expr pos:start="185:47" pos:end="185:53"><name pos:start="185:47" pos:end="185:53">tagname</name></expr></argument>, <argument pos:start="185:56" pos:end="185:59"><expr pos:start="185:56" pos:end="185:59"><literal type="string" pos:start="185:56" pos:end="185:59">"br"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="185:63" pos:end="189:21">{<block_content pos:start="187:25" pos:end="187:47">

                        <expr_stmt pos:start="187:25" pos:end="187:47"><expr pos:start="187:25" pos:end="187:46"><call pos:start="187:25" pos:end="187:46"><name pos:start="187:25" pos:end="187:34">av_bprintf</name><argument_list pos:start="187:35" pos:end="187:46">(<argument pos:start="187:36" pos:end="187:38"><expr pos:start="187:36" pos:end="187:38"><name pos:start="187:36" pos:end="187:38">dst</name></expr></argument>, <argument pos:start="187:41" pos:end="187:45"><expr pos:start="187:41" pos:end="187:45"><literal type="string" pos:start="187:41" pos:end="187:45">"\\N"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="189:23" pos:end="195:21">else <block pos:start="189:28" pos:end="195:21">{<block_content pos:start="191:25" pos:end="193:69">

                        <expr_stmt pos:start="191:25" pos:end="191:36"><expr pos:start="191:25" pos:end="191:35"><name pos:start="191:25" pos:end="191:31">unknown</name> <operator pos:start="191:33" pos:end="191:33">=</operator> <literal type="number" pos:start="191:35" pos:end="191:35">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="193:25" pos:end="193:69"><expr pos:start="193:25" pos:end="193:68"><call pos:start="193:25" pos:end="193:68"><name pos:start="193:25" pos:end="193:32">snprintf</name><argument_list pos:start="193:33" pos:end="193:68">(<argument pos:start="193:34" pos:end="193:36"><expr pos:start="193:34" pos:end="193:36"><name pos:start="193:34" pos:end="193:36">tmp</name></expr></argument>, <argument pos:start="193:39" pos:end="193:49"><expr pos:start="193:39" pos:end="193:49"><sizeof pos:start="193:39" pos:end="193:49">sizeof<argument_list pos:start="193:45" pos:end="193:49">(<argument pos:start="193:46" pos:end="193:48"><expr pos:start="193:46" pos:end="193:48"><name pos:start="193:46" pos:end="193:48">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="193:52" pos:end="193:58"><expr pos:start="193:52" pos:end="193:58"><literal type="string" pos:start="193:52" pos:end="193:58">"&lt;/%s&gt;"</literal></expr></argument>, <argument pos:start="193:61" pos:end="193:67"><expr pos:start="193:61" pos:end="193:67"><name pos:start="193:61" pos:end="193:67">tagname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="197:21" pos:end="211:57"><if pos:start="197:21" pos:end="201:21">if <condition pos:start="197:24" pos:end="197:34">(<expr pos:start="197:25" pos:end="197:33"><name pos:start="197:25" pos:end="197:33">tag_close</name></expr>)</condition> <block pos:start="197:36" pos:end="201:21">{<block_content pos:start="199:25" pos:end="199:31">

                        <expr_stmt pos:start="199:25" pos:end="199:31"><expr pos:start="199:25" pos:end="199:30"><name pos:start="199:25" pos:end="199:28">sptr</name><operator pos:start="199:29" pos:end="199:30">--</operator></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="201:23" pos:end="207:21">else if <condition pos:start="201:31" pos:end="201:59">(<expr pos:start="201:32" pos:end="201:58"><name pos:start="201:32" pos:end="201:38">unknown</name> <operator pos:start="201:40" pos:end="201:41">&amp;&amp;</operator> <operator pos:start="201:43" pos:end="201:43">!</operator><call pos:start="201:44" pos:end="201:58"><name pos:start="201:44" pos:end="201:49">strstr</name><argument_list pos:start="201:50" pos:end="201:58">(<argument pos:start="201:51" pos:end="201:52"><expr pos:start="201:51" pos:end="201:52"><name pos:start="201:51" pos:end="201:52">in</name></expr></argument>, <argument pos:start="201:55" pos:end="201:57"><expr pos:start="201:55" pos:end="201:57"><name pos:start="201:55" pos:end="201:57">tmp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="201:61" pos:end="207:21">{<block_content pos:start="203:25" pos:end="205:53">

                        <expr_stmt pos:start="203:25" pos:end="203:46"><expr pos:start="203:25" pos:end="203:45"><name pos:start="203:25" pos:end="203:26">in</name> <operator pos:start="203:28" pos:end="203:29">-=</operator> <name pos:start="203:31" pos:end="203:33">len</name> <operator pos:start="203:35" pos:end="203:35">+</operator> <name pos:start="203:37" pos:end="203:45">tag_close</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="205:25" pos:end="205:53"><expr pos:start="205:25" pos:end="205:52"><call pos:start="205:25" pos:end="205:52"><name pos:start="205:25" pos:end="205:39">av_bprint_chars</name><argument_list pos:start="205:40" pos:end="205:52">(<argument pos:start="205:41" pos:end="205:43"><expr pos:start="205:41" pos:end="205:43"><name pos:start="205:41" pos:end="205:43">dst</name></expr></argument>, <argument pos:start="205:46" pos:end="205:48"><expr pos:start="205:46" pos:end="205:48"><operator pos:start="205:46" pos:end="205:46">*</operator><name pos:start="205:47" pos:end="205:48">in</name></expr></argument>, <argument pos:start="205:51" pos:end="205:51"><expr pos:start="205:51" pos:end="205:51"><literal type="number" pos:start="205:51" pos:end="205:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="207:23" pos:end="211:57">else<block type="pseudo" pos:start="209:25" pos:end="211:57"><block_content pos:start="209:25" pos:end="211:57">

                        <expr_stmt pos:start="209:25" pos:end="211:57"><expr pos:start="209:25" pos:end="211:56"><call pos:start="209:25" pos:end="211:56"><name pos:start="209:25" pos:end="209:34">av_strlcpy</name><argument_list pos:start="209:35" pos:end="211:56">(<argument pos:start="209:36" pos:end="209:52"><expr pos:start="209:36" pos:end="209:52"><name pos:start="209:36" pos:end="209:48"><name pos:start="209:36" pos:end="209:40">stack</name><index pos:start="209:41" pos:end="209:48">[<expr pos:start="209:42" pos:end="209:47"><name pos:start="209:42" pos:end="209:45">sptr</name><operator pos:start="209:46" pos:end="209:47">++</operator></expr>]</index></name><operator pos:start="209:49" pos:end="209:49">.</operator><name pos:start="209:50" pos:end="209:52">tag</name></expr></argument>, <argument pos:start="209:55" pos:end="209:61"><expr pos:start="209:55" pos:end="209:61"><name pos:start="209:55" pos:end="209:61">tagname</name></expr></argument>,

                                   <argument pos:start="211:36" pos:end="211:55"><expr pos:start="211:36" pos:end="211:55"><sizeof pos:start="211:36" pos:end="211:55">sizeof<argument_list pos:start="211:42" pos:end="211:55">(<argument pos:start="211:43" pos:end="211:54"><expr pos:start="211:43" pos:end="211:54"><name pos:start="211:43" pos:end="211:50"><name pos:start="211:43" pos:end="211:47">stack</name><index pos:start="211:48" pos:end="211:50">[<expr pos:start="211:49" pos:end="211:49"><literal type="number" pos:start="211:49" pos:end="211:49">0</literal></expr>]</index></name><operator pos:start="211:51" pos:end="211:51">.</operator><name pos:start="211:52" pos:end="211:54">tag</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="213:21" pos:end="213:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        <default pos:start="219:9" pos:end="219:16">default:</default>

            <expr_stmt pos:start="221:13" pos:end="221:41"><expr pos:start="221:13" pos:end="221:40"><call pos:start="221:13" pos:end="221:40"><name pos:start="221:13" pos:end="221:27">av_bprint_chars</name><argument_list pos:start="221:28" pos:end="221:40">(<argument pos:start="221:29" pos:end="221:31"><expr pos:start="221:29" pos:end="221:31"><name pos:start="221:29" pos:end="221:31">dst</name></expr></argument>, <argument pos:start="221:34" pos:end="221:36"><expr pos:start="221:34" pos:end="221:36"><operator pos:start="221:34" pos:end="221:34">*</operator><name pos:start="221:35" pos:end="221:36">in</name></expr></argument>, <argument pos:start="221:39" pos:end="221:39"><expr pos:start="221:39" pos:end="221:39"><literal type="number" pos:start="221:39" pos:end="221:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="223:13" pos:end="223:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="227:9" pos:end="229:27"><if pos:start="227:9" pos:end="229:27">if <condition pos:start="227:12" pos:end="227:53">(<expr pos:start="227:13" pos:end="227:52"><operator pos:start="227:13" pos:end="227:13">*</operator><name pos:start="227:14" pos:end="227:15">in</name> <operator pos:start="227:17" pos:end="227:18">!=</operator> <literal type="char" pos:start="227:20" pos:end="227:22">' '</literal> <operator pos:start="227:24" pos:end="227:25">&amp;&amp;</operator> <operator pos:start="227:27" pos:end="227:27">*</operator><name pos:start="227:28" pos:end="227:29">in</name> <operator pos:start="227:31" pos:end="227:32">!=</operator> <literal type="char" pos:start="227:34" pos:end="227:37">'\r'</literal> <operator pos:start="227:39" pos:end="227:40">&amp;&amp;</operator> <operator pos:start="227:42" pos:end="227:42">*</operator><name pos:start="227:43" pos:end="227:44">in</name> <operator pos:start="227:46" pos:end="227:47">!=</operator> <literal type="char" pos:start="227:49" pos:end="227:52">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="229:13" pos:end="229:27"><block_content pos:start="229:13" pos:end="229:27">

            <expr_stmt pos:start="229:13" pos:end="229:27"><expr pos:start="229:13" pos:end="229:26"><name pos:start="229:13" pos:end="229:22">line_start</name> <operator pos:start="229:24" pos:end="229:24">=</operator> <literal type="number" pos:start="229:26" pos:end="229:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="235:5" pos:end="237:31"><if pos:start="235:5" pos:end="237:31">if <condition pos:start="235:8" pos:end="235:36">(<expr pos:start="235:9" pos:end="235:35"><operator pos:start="235:9" pos:end="235:9">!</operator><call pos:start="235:10" pos:end="235:35"><name pos:start="235:10" pos:end="235:30">av_bprint_is_complete</name><argument_list pos:start="235:31" pos:end="235:35">(<argument pos:start="235:32" pos:end="235:34"><expr pos:start="235:32" pos:end="235:34"><name pos:start="235:32" pos:end="235:34">dst</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="237:9" pos:end="237:31"><block_content pos:start="237:9" pos:end="237:31">

        <return pos:start="237:9" pos:end="237:31">return <expr pos:start="237:16" pos:end="237:30"><call pos:start="237:16" pos:end="237:30"><name pos:start="237:16" pos:end="237:22">AVERROR</name><argument_list pos:start="237:23" pos:end="237:30">(<argument pos:start="237:24" pos:end="237:29"><expr pos:start="237:24" pos:end="237:29"><name pos:start="237:24" pos:end="237:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="241:5" pos:end="243:22">while <condition pos:start="241:11" pos:end="241:72">(<expr pos:start="241:12" pos:end="241:71"><name pos:start="241:12" pos:end="241:19"><name pos:start="241:12" pos:end="241:14">dst</name><operator pos:start="241:15" pos:end="241:16">-&gt;</operator><name pos:start="241:17" pos:end="241:19">len</name></name> <operator pos:start="241:21" pos:end="241:22">&gt;=</operator> <literal type="number" pos:start="241:24" pos:end="241:24">2</literal> <operator pos:start="241:26" pos:end="241:27">&amp;&amp;</operator> <operator pos:start="241:29" pos:end="241:29">!</operator><call pos:start="241:30" pos:end="241:71"><name pos:start="241:30" pos:end="241:36">strncmp</name><argument_list pos:start="241:37" pos:end="241:71">(<argument pos:start="241:38" pos:end="241:60"><expr pos:start="241:38" pos:end="241:60"><operator pos:start="241:38" pos:end="241:38">&amp;</operator><name pos:start="241:39" pos:end="241:60"><name pos:start="241:39" pos:end="241:41">dst</name><operator pos:start="241:42" pos:end="241:43">-&gt;</operator><name pos:start="241:44" pos:end="241:46">str</name><index pos:start="241:47" pos:end="241:60">[<expr pos:start="241:48" pos:end="241:59"><name pos:start="241:48" pos:end="241:55"><name pos:start="241:48" pos:end="241:50">dst</name><operator pos:start="241:51" pos:end="241:52">-&gt;</operator><name pos:start="241:53" pos:end="241:55">len</name></name> <operator pos:start="241:57" pos:end="241:57">-</operator> <literal type="number" pos:start="241:59" pos:end="241:59">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="241:63" pos:end="241:67"><expr pos:start="241:63" pos:end="241:67"><literal type="string" pos:start="241:63" pos:end="241:67">"\\N"</literal></expr></argument>, <argument pos:start="241:70" pos:end="241:70"><expr pos:start="241:70" pos:end="241:70"><literal type="number" pos:start="241:70" pos:end="241:70">2</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="243:9" pos:end="243:22"><block_content pos:start="243:9" pos:end="243:22">

        <expr_stmt pos:start="243:9" pos:end="243:22"><expr pos:start="243:9" pos:end="243:21"><name pos:start="243:9" pos:end="243:16"><name pos:start="243:9" pos:end="243:11">dst</name><operator pos:start="243:12" pos:end="243:13">-&gt;</operator><name pos:start="243:14" pos:end="243:16">len</name></name> <operator pos:start="243:18" pos:end="243:19">-=</operator> <literal type="number" pos:start="243:21" pos:end="243:21">2</literal></expr>;</expr_stmt></block_content></block></while>

    <expr_stmt pos:start="245:5" pos:end="245:27"><expr pos:start="245:5" pos:end="245:26"><name pos:start="245:5" pos:end="245:22"><name pos:start="245:5" pos:end="245:7">dst</name><operator pos:start="245:8" pos:end="245:9">-&gt;</operator><name pos:start="245:10" pos:end="245:12">str</name><index pos:start="245:13" pos:end="245:22">[<expr pos:start="245:14" pos:end="245:21"><name pos:start="245:14" pos:end="245:21"><name pos:start="245:14" pos:end="245:16">dst</name><operator pos:start="245:17" pos:end="245:18">-&gt;</operator><name pos:start="245:19" pos:end="245:21">len</name></name></expr>]</index></name> <operator pos:start="245:24" pos:end="245:24">=</operator> <literal type="number" pos:start="245:26" pos:end="245:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:27"><expr pos:start="247:5" pos:end="247:26"><call pos:start="247:5" pos:end="247:26"><name pos:start="247:5" pos:end="247:21">rstrip_spaces_buf</name><argument_list pos:start="247:22" pos:end="247:26">(<argument pos:start="247:23" pos:end="247:25"><expr pos:start="247:23" pos:end="247:25"><name pos:start="247:23" pos:end="247:25">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="251:5" pos:end="251:13">return <expr pos:start="251:12" pos:end="251:12"><literal type="number" pos:start="251:12" pos:end="251:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
