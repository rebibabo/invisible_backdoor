<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11243.c" pos:tabs="8"><function pos:start="1:1" pos:end="305:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">decode_idat_chunk</name><parameter_list pos:start="1:29" pos:end="3:57">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><name pos:start="1:53" pos:end="1:65">PNGDecContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:68">s</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:44"><decl pos:start="3:30" pos:end="3:44"><type pos:start="3:30" pos:end="3:44"><name pos:start="3:30" pos:end="3:37">uint32_t</name></type> <name pos:start="3:39" pos:end="3:44">length</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:56"><decl pos:start="3:47" pos:end="3:56"><type pos:start="3:47" pos:end="3:56"><name pos:start="3:47" pos:end="3:53">AVFrame</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:56">p</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="305:1">{<block_content pos:start="7:5" pos:end="303:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:21">byte_depth</name> <init pos:start="9:23" pos:end="9:48">= <expr pos:start="9:25" pos:end="9:48"><ternary pos:start="9:25" pos:end="9:48"><condition pos:start="9:25" pos:end="9:42"><expr pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">bit_depth</name></name> <operator pos:start="9:38" pos:end="9:38">&gt;</operator> <literal type="number" pos:start="9:40" pos:end="9:40">8</literal></expr> ?</condition><then pos:start="9:44" pos:end="9:44"> <expr pos:start="9:44" pos:end="9:44"><literal type="number" pos:start="9:44" pos:end="9:44">2</literal></expr> </then><else pos:start="9:46" pos:end="9:48">: <expr pos:start="9:48" pos:end="9:48"><literal type="number" pos:start="9:48" pos:end="9:48">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:31">(<expr pos:start="13:9" pos:end="13:30"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:18"><name pos:start="13:11" pos:end="13:11">s</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:18">state</name></name> <operator pos:start="13:20" pos:end="13:20">&amp;</operator> <name pos:start="13:22" pos:end="13:29">PNG_IHDR</name><operator pos:start="13:30" pos:end="13:30">)</operator></expr>)</condition> <block pos:start="13:33" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:35">

        <expr_stmt pos:start="15:9" pos:end="15:59"><expr pos:start="15:9" pos:end="15:58"><call pos:start="15:9" pos:end="15:58"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:58">(<argument pos:start="15:16" pos:end="15:20"><expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">avctx</name></expr></argument>, <argument pos:start="15:23" pos:end="15:34"><expr pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:37" pos:end="15:57"><expr pos:start="15:37" pos:end="15:57"><literal type="string" pos:start="15:37" pos:end="15:57">"IDAT without IHDR\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="267:5"><if pos:start="21:5" pos:end="267:5">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:18"><name pos:start="21:11" pos:end="21:11">s</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">state</name></name> <operator pos:start="21:20" pos:end="21:20">&amp;</operator> <name pos:start="21:22" pos:end="21:29">PNG_IDAT</name><operator pos:start="21:30" pos:end="21:30">)</operator></expr>)</condition> <block pos:start="21:33" pos:end="267:5">{<block_content pos:start="25:9" pos:end="265:43">

        <comment type="block" pos:start="23:9" pos:end="23:29">/* init image info */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">width</name></name>  <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:32"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:32">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:13">avctx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:21">height</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:33"><name pos:start="27:25" pos:end="27:25">s</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:33">height</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:66"><expr pos:start="31:9" pos:end="31:65"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:19">channels</name></name>       <operator pos:start="31:27" pos:end="31:27">=</operator> <call pos:start="31:29" pos:end="31:65"><name pos:start="31:29" pos:end="31:50">ff_png_get_nb_channels</name><argument_list pos:start="31:51" pos:end="31:65">(<argument pos:start="31:52" pos:end="31:64"><expr pos:start="31:52" pos:end="31:64"><name pos:start="31:52" pos:end="31:64"><name pos:start="31:52" pos:end="31:52">s</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:64">color_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:25">bits_per_pixel</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <name pos:start="33:29" pos:end="33:40"><name pos:start="33:29" pos:end="33:29">s</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:40">bit_depth</name></name> <operator pos:start="33:42" pos:end="33:42">*</operator> <name pos:start="33:44" pos:end="33:54"><name pos:start="33:44" pos:end="33:44">s</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:54">channels</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:57"><expr pos:start="35:9" pos:end="35:56"><name pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:14">bpp</name></name>            <operator pos:start="35:27" pos:end="35:27">=</operator> <operator pos:start="35:29" pos:end="35:29">(</operator><name pos:start="35:30" pos:end="35:46"><name pos:start="35:30" pos:end="35:30">s</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:46">bits_per_pixel</name></name> <operator pos:start="35:48" pos:end="35:48">+</operator> <literal type="number" pos:start="35:50" pos:end="35:50">7</literal><operator pos:start="35:51" pos:end="35:51">)</operator> <operator pos:start="35:53" pos:end="35:54">&gt;&gt;</operator> <literal type="number" pos:start="35:56" pos:end="35:56">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:68"><expr pos:start="37:9" pos:end="37:67"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:19">row_size</name></name>       <operator pos:start="37:27" pos:end="37:27">=</operator> <operator pos:start="37:29" pos:end="37:29">(</operator><name pos:start="37:30" pos:end="37:37"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:37">cur_w</name></name> <operator pos:start="37:39" pos:end="37:39">*</operator> <name pos:start="37:41" pos:end="37:57"><name pos:start="37:41" pos:end="37:41">s</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:57">bits_per_pixel</name></name> <operator pos:start="37:59" pos:end="37:59">+</operator> <literal type="number" pos:start="37:61" pos:end="37:61">7</literal><operator pos:start="37:62" pos:end="37:62">)</operator> <operator pos:start="37:64" pos:end="37:65">&gt;&gt;</operator> <literal type="number" pos:start="37:67" pos:end="37:67">3</literal></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="109:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="43:52">(<expr pos:start="41:13" pos:end="43:51"><operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:25"><name pos:start="41:14" pos:end="41:14">s</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:25">bit_depth</name></name> <operator pos:start="41:27" pos:end="41:28">==</operator> <literal type="number" pos:start="41:30" pos:end="41:30">2</literal> <operator pos:start="41:32" pos:end="41:33">||</operator> <name pos:start="41:35" pos:end="41:46"><name pos:start="41:35" pos:end="41:35">s</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:46">bit_depth</name></name> <operator pos:start="41:48" pos:end="41:49">==</operator> <literal type="number" pos:start="41:51" pos:end="41:51">4</literal> <operator pos:start="41:53" pos:end="41:54">||</operator> <name pos:start="41:56" pos:end="41:67"><name pos:start="41:56" pos:end="41:56">s</name><operator pos:start="41:57" pos:end="41:58">-&gt;</operator><name pos:start="41:59" pos:end="41:67">bit_depth</name></name> <operator pos:start="41:69" pos:end="41:70">==</operator> <literal type="number" pos:start="41:72" pos:end="41:72">8</literal><operator pos:start="41:73" pos:end="41:73">)</operator> <operator pos:start="41:75" pos:end="41:76">&amp;&amp;</operator>

                <name pos:start="43:17" pos:end="43:29"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:29">color_type</name></name> <operator pos:start="43:31" pos:end="43:32">==</operator> <name pos:start="43:34" pos:end="43:51">PNG_COLOR_TYPE_RGB</name></expr>)</condition> <block pos:start="43:54" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:46">

            <expr_stmt pos:start="45:13" pos:end="45:46"><expr pos:start="45:13" pos:end="45:45"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:17">avctx</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:26">pix_fmt</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:45">AV_PIX_FMT_RGB24</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="53:9">else if <condition pos:start="47:19" pos:end="49:58">(<expr pos:start="47:20" pos:end="49:57"><operator pos:start="47:20" pos:end="47:20">(</operator><name pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:21">s</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:32">bit_depth</name></name> <operator pos:start="47:34" pos:end="47:35">==</operator> <literal type="number" pos:start="47:37" pos:end="47:37">2</literal> <operator pos:start="47:39" pos:end="47:40">||</operator> <name pos:start="47:42" pos:end="47:53"><name pos:start="47:42" pos:end="47:42">s</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:53">bit_depth</name></name> <operator pos:start="47:55" pos:end="47:56">==</operator> <literal type="number" pos:start="47:58" pos:end="47:58">4</literal> <operator pos:start="47:60" pos:end="47:61">||</operator> <name pos:start="47:63" pos:end="47:74"><name pos:start="47:63" pos:end="47:63">s</name><operator pos:start="47:64" pos:end="47:65">-&gt;</operator><name pos:start="47:66" pos:end="47:74">bit_depth</name></name> <operator pos:start="47:76" pos:end="47:77">==</operator> <literal type="number" pos:start="47:79" pos:end="47:79">8</literal><operator pos:start="47:80" pos:end="47:80">)</operator> <operator pos:start="47:82" pos:end="47:83">&amp;&amp;</operator>

                <name pos:start="49:17" pos:end="49:29"><name pos:start="49:17" pos:end="49:17">s</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:29">color_type</name></name> <operator pos:start="49:31" pos:end="49:32">==</operator> <name pos:start="49:34" pos:end="49:57">PNG_COLOR_TYPE_RGB_ALPHA</name></expr>)</condition> <block pos:start="49:60" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:45">

            <expr_stmt pos:start="51:13" pos:end="51:45"><expr pos:start="51:13" pos:end="51:44"><name pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:17">avctx</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:26">pix_fmt</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <name pos:start="51:30" pos:end="51:44">AV_PIX_FMT_RGBA</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="53:11" pos:end="59:9">else if <condition pos:start="53:19" pos:end="55:53">(<expr pos:start="53:20" pos:end="55:52"><operator pos:start="53:20" pos:end="53:20">(</operator><name pos:start="53:21" pos:end="53:32"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:32">bit_depth</name></name> <operator pos:start="53:34" pos:end="53:35">==</operator> <literal type="number" pos:start="53:37" pos:end="53:37">2</literal> <operator pos:start="53:39" pos:end="53:40">||</operator> <name pos:start="53:42" pos:end="53:53"><name pos:start="53:42" pos:end="53:42">s</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:53">bit_depth</name></name> <operator pos:start="53:55" pos:end="53:56">==</operator> <literal type="number" pos:start="53:58" pos:end="53:58">4</literal> <operator pos:start="53:60" pos:end="53:61">||</operator> <name pos:start="53:63" pos:end="53:74"><name pos:start="53:63" pos:end="53:63">s</name><operator pos:start="53:64" pos:end="53:65">-&gt;</operator><name pos:start="53:66" pos:end="53:74">bit_depth</name></name> <operator pos:start="53:76" pos:end="53:77">==</operator> <literal type="number" pos:start="53:79" pos:end="53:79">8</literal><operator pos:start="53:80" pos:end="53:80">)</operator> <operator pos:start="53:82" pos:end="53:83">&amp;&amp;</operator>

                <name pos:start="55:17" pos:end="55:29"><name pos:start="55:17" pos:end="55:17">s</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:29">color_type</name></name> <operator pos:start="55:31" pos:end="55:32">==</operator> <name pos:start="55:34" pos:end="55:52">PNG_COLOR_TYPE_GRAY</name></expr>)</condition> <block pos:start="55:55" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:46">

            <expr_stmt pos:start="57:13" pos:end="57:46"><expr pos:start="57:13" pos:end="57:45"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:17">avctx</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:26">pix_fmt</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator> <name pos:start="57:30" pos:end="57:45">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="59:11" pos:end="65:9">else if <condition pos:start="59:19" pos:end="61:53">(<expr pos:start="59:20" pos:end="61:52"><name pos:start="59:20" pos:end="59:31"><name pos:start="59:20" pos:end="59:20">s</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:31">bit_depth</name></name> <operator pos:start="59:33" pos:end="59:34">==</operator> <literal type="number" pos:start="59:36" pos:end="59:37">16</literal> <operator pos:start="59:39" pos:end="59:40">&amp;&amp;</operator>

                <name pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:29">color_type</name></name> <operator pos:start="61:31" pos:end="61:32">==</operator> <name pos:start="61:34" pos:end="61:52">PNG_COLOR_TYPE_GRAY</name></expr>)</condition> <block pos:start="61:55" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:49">

            <expr_stmt pos:start="63:13" pos:end="63:49"><expr pos:start="63:13" pos:end="63:48"><name pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:17">avctx</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:26">pix_fmt</name></name> <operator pos:start="63:28" pos:end="63:28">=</operator> <name pos:start="63:30" pos:end="63:48">AV_PIX_FMT_GRAY16BE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="65:11" pos:end="71:9">else if <condition pos:start="65:19" pos:end="67:52">(<expr pos:start="65:20" pos:end="67:51"><name pos:start="65:20" pos:end="65:31"><name pos:start="65:20" pos:end="65:20">s</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:31">bit_depth</name></name> <operator pos:start="65:33" pos:end="65:34">==</operator> <literal type="number" pos:start="65:36" pos:end="65:37">16</literal> <operator pos:start="65:39" pos:end="65:40">&amp;&amp;</operator>

                <name pos:start="67:17" pos:end="67:29"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:29">color_type</name></name> <operator pos:start="67:31" pos:end="67:32">==</operator> <name pos:start="67:34" pos:end="67:51">PNG_COLOR_TYPE_RGB</name></expr>)</condition> <block pos:start="67:54" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:48">

            <expr_stmt pos:start="69:13" pos:end="69:48"><expr pos:start="69:13" pos:end="69:47"><name pos:start="69:13" pos:end="69:26"><name pos:start="69:13" pos:end="69:17">avctx</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:26">pix_fmt</name></name> <operator pos:start="69:28" pos:end="69:28">=</operator> <name pos:start="69:30" pos:end="69:47">AV_PIX_FMT_RGB48BE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="71:11" pos:end="77:9">else if <condition pos:start="71:19" pos:end="73:58">(<expr pos:start="71:20" pos:end="73:57"><name pos:start="71:20" pos:end="71:31"><name pos:start="71:20" pos:end="71:20">s</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:31">bit_depth</name></name> <operator pos:start="71:33" pos:end="71:34">==</operator> <literal type="number" pos:start="71:36" pos:end="71:37">16</literal> <operator pos:start="71:39" pos:end="71:40">&amp;&amp;</operator>

                <name pos:start="73:17" pos:end="73:29"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:29">color_type</name></name> <operator pos:start="73:31" pos:end="73:32">==</operator> <name pos:start="73:34" pos:end="73:57">PNG_COLOR_TYPE_RGB_ALPHA</name></expr>)</condition> <block pos:start="73:60" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:49">

            <expr_stmt pos:start="75:13" pos:end="75:49"><expr pos:start="75:13" pos:end="75:48"><name pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:17">avctx</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:26">pix_fmt</name></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <name pos:start="75:30" pos:end="75:48">AV_PIX_FMT_RGBA64BE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="77:11" pos:end="83:9">else if <condition pos:start="77:19" pos:end="79:56">(<expr pos:start="77:20" pos:end="79:55"><operator pos:start="77:20" pos:end="77:20">(</operator><name pos:start="77:21" pos:end="77:37"><name pos:start="77:21" pos:end="77:21">s</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:37">bits_per_pixel</name></name> <operator pos:start="77:39" pos:end="77:40">==</operator> <literal type="number" pos:start="77:42" pos:end="77:42">1</literal> <operator pos:start="77:44" pos:end="77:45">||</operator> <name pos:start="77:47" pos:end="77:63"><name pos:start="77:47" pos:end="77:47">s</name><operator pos:start="77:48" pos:end="77:49">-&gt;</operator><name pos:start="77:50" pos:end="77:63">bits_per_pixel</name></name> <operator pos:start="77:65" pos:end="77:66">==</operator> <literal type="number" pos:start="77:68" pos:end="77:68">2</literal> <operator pos:start="77:70" pos:end="77:71">||</operator> <name pos:start="77:73" pos:end="77:89"><name pos:start="77:73" pos:end="77:73">s</name><operator pos:start="77:74" pos:end="77:75">-&gt;</operator><name pos:start="77:76" pos:end="77:89">bits_per_pixel</name></name> <operator pos:start="77:91" pos:end="77:92">==</operator> <literal type="number" pos:start="77:94" pos:end="77:94">4</literal> <operator pos:start="77:96" pos:end="77:97">||</operator> <name pos:start="77:99" pos:end="77:115"><name pos:start="77:99" pos:end="77:99">s</name><operator pos:start="77:100" pos:end="77:101">-&gt;</operator><name pos:start="77:102" pos:end="77:115">bits_per_pixel</name></name> <operator pos:start="77:117" pos:end="77:118">==</operator> <literal type="number" pos:start="77:120" pos:end="77:120">8</literal><operator pos:start="77:121" pos:end="77:121">)</operator> <operator pos:start="77:123" pos:end="77:124">&amp;&amp;</operator>

                <name pos:start="79:17" pos:end="79:29"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:29">color_type</name></name> <operator pos:start="79:31" pos:end="79:32">==</operator> <name pos:start="79:34" pos:end="79:55">PNG_COLOR_TYPE_PALETTE</name></expr>)</condition> <block pos:start="79:58" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:45">

            <expr_stmt pos:start="81:13" pos:end="81:45"><expr pos:start="81:13" pos:end="81:44"><name pos:start="81:13" pos:end="81:26"><name pos:start="81:13" pos:end="81:17">avctx</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:26">pix_fmt</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:44">AV_PIX_FMT_PAL8</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="83:11" pos:end="87:9">else if <condition pos:start="83:19" pos:end="83:102">(<expr pos:start="83:20" pos:end="83:101"><name pos:start="83:20" pos:end="83:31"><name pos:start="83:20" pos:end="83:20">s</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:31">bit_depth</name></name> <operator pos:start="83:33" pos:end="83:34">==</operator> <literal type="number" pos:start="83:36" pos:end="83:36">1</literal> <operator pos:start="83:38" pos:end="83:39">&amp;&amp;</operator> <name pos:start="83:41" pos:end="83:57"><name pos:start="83:41" pos:end="83:41">s</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:57">bits_per_pixel</name></name> <operator pos:start="83:59" pos:end="83:60">==</operator> <literal type="number" pos:start="83:62" pos:end="83:62">1</literal> <operator pos:start="83:64" pos:end="83:65">&amp;&amp;</operator> <name pos:start="83:67" pos:end="83:81"><name pos:start="83:67" pos:end="83:71">avctx</name><operator pos:start="83:72" pos:end="83:73">-&gt;</operator><name pos:start="83:74" pos:end="83:81">codec_id</name></name> <operator pos:start="83:83" pos:end="83:84">!=</operator> <name pos:start="83:86" pos:end="83:101">AV_CODEC_ID_APNG</name></expr>)</condition> <block pos:start="83:104" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:50">

            <expr_stmt pos:start="85:13" pos:end="85:50"><expr pos:start="85:13" pos:end="85:49"><name pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:17">avctx</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:26">pix_fmt</name></name> <operator pos:start="85:28" pos:end="85:28">=</operator> <name pos:start="85:30" pos:end="85:49">AV_PIX_FMT_MONOBLACK</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="87:11" pos:end="93:9">else if <condition pos:start="87:19" pos:end="89:59">(<expr pos:start="87:20" pos:end="89:58"><name pos:start="87:20" pos:end="87:31"><name pos:start="87:20" pos:end="87:20">s</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:31">bit_depth</name></name> <operator pos:start="87:33" pos:end="87:34">==</operator> <literal type="number" pos:start="87:36" pos:end="87:36">8</literal> <operator pos:start="87:38" pos:end="87:39">&amp;&amp;</operator>

                <name pos:start="89:17" pos:end="89:29"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:29">color_type</name></name> <operator pos:start="89:31" pos:end="89:32">==</operator> <name pos:start="89:34" pos:end="89:58">PNG_COLOR_TYPE_GRAY_ALPHA</name></expr>)</condition> <block pos:start="89:61" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:44">

            <expr_stmt pos:start="91:13" pos:end="91:44"><expr pos:start="91:13" pos:end="91:43"><name pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:17">avctx</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:26">pix_fmt</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:43">AV_PIX_FMT_YA8</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="93:11" pos:end="99:9">else if <condition pos:start="93:19" pos:end="95:59">(<expr pos:start="93:20" pos:end="95:58"><name pos:start="93:20" pos:end="93:31"><name pos:start="93:20" pos:end="93:20">s</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:31">bit_depth</name></name> <operator pos:start="93:33" pos:end="93:34">==</operator> <literal type="number" pos:start="93:36" pos:end="93:37">16</literal> <operator pos:start="93:39" pos:end="93:40">&amp;&amp;</operator>

                <name pos:start="95:17" pos:end="95:29"><name pos:start="95:17" pos:end="95:17">s</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:29">color_type</name></name> <operator pos:start="95:31" pos:end="95:32">==</operator> <name pos:start="95:34" pos:end="95:58">PNG_COLOR_TYPE_GRAY_ALPHA</name></expr>)</condition> <block pos:start="95:61" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:47">

            <expr_stmt pos:start="97:13" pos:end="97:47"><expr pos:start="97:13" pos:end="97:46"><name pos:start="97:13" pos:end="97:26"><name pos:start="97:13" pos:end="97:17">avctx</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:26">pix_fmt</name></name> <operator pos:start="97:28" pos:end="97:28">=</operator> <name pos:start="97:30" pos:end="97:46">AV_PIX_FMT_YA16BE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="99:11" pos:end="109:9">else <block pos:start="99:16" pos:end="109:9">{<block_content pos:start="101:13" pos:end="107:39">

            <expr_stmt pos:start="101:13" pos:end="105:49"><expr pos:start="101:13" pos:end="105:48"><call pos:start="101:13" pos:end="105:48"><name pos:start="101:13" pos:end="101:18">av_log</name><argument_list pos:start="101:19" pos:end="105:48">(<argument pos:start="101:20" pos:end="101:24"><expr pos:start="101:20" pos:end="101:24"><name pos:start="101:20" pos:end="101:24">avctx</name></expr></argument>, <argument pos:start="101:27" pos:end="101:38"><expr pos:start="101:27" pos:end="101:38"><name pos:start="101:27" pos:end="101:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:41" pos:end="103:41"><expr pos:start="101:41" pos:end="103:41"><literal type="string" pos:start="101:41" pos:end="101:67">"unsupported bit depth %d "</literal>

                    <literal type="string" pos:start="103:21" pos:end="103:41">"and color type %d\n"</literal></expr></argument>,

                    <argument pos:start="105:21" pos:end="105:32"><expr pos:start="105:21" pos:end="105:32"><name pos:start="105:21" pos:end="105:32"><name pos:start="105:21" pos:end="105:21">s</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:32">bit_depth</name></name></expr></argument>, <argument pos:start="105:35" pos:end="105:47"><expr pos:start="105:35" pos:end="105:47"><name pos:start="105:35" pos:end="105:47"><name pos:start="105:35" pos:end="105:35">s</name><operator pos:start="105:36" pos:end="105:37">-&gt;</operator><name pos:start="105:38" pos:end="105:47">color_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="107:13" pos:end="107:39">return <expr pos:start="107:20" pos:end="107:38"><name pos:start="107:20" pos:end="107:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="113:9" pos:end="165:9"><if pos:start="113:9" pos:end="165:9">if <condition pos:start="113:12" pos:end="113:67">(<expr pos:start="113:13" pos:end="113:66"><name pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:23">has_trns</name></name> <operator pos:start="113:25" pos:end="113:26">&amp;&amp;</operator> <name pos:start="113:28" pos:end="113:40"><name pos:start="113:28" pos:end="113:28">s</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:40">color_type</name></name> <operator pos:start="113:42" pos:end="113:43">!=</operator> <name pos:start="113:45" pos:end="113:66">PNG_COLOR_TYPE_PALETTE</name></expr>)</condition> <block pos:start="113:69" pos:end="165:9">{<block_content pos:start="115:13" pos:end="163:33">

            <switch pos:start="115:13" pos:end="159:13">switch <condition pos:start="115:20" pos:end="115:35">(<expr pos:start="115:21" pos:end="115:34"><name pos:start="115:21" pos:end="115:34"><name pos:start="115:21" pos:end="115:25">avctx</name><operator pos:start="115:26" pos:end="115:27">-&gt;</operator><name pos:start="115:28" pos:end="115:34">pix_fmt</name></name></expr>)</condition> <block pos:start="115:37" pos:end="159:13">{<block_content pos:start="117:13" pos:end="157:43">

            <case pos:start="117:13" pos:end="117:34">case <expr pos:start="117:18" pos:end="117:33"><name pos:start="117:18" pos:end="117:33">AV_PIX_FMT_RGB24</name></expr>:</case>

                <expr_stmt pos:start="119:17" pos:end="119:49"><expr pos:start="119:17" pos:end="119:48"><name pos:start="119:17" pos:end="119:30"><name pos:start="119:17" pos:end="119:21">avctx</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:30">pix_fmt</name></name> <operator pos:start="119:32" pos:end="119:32">=</operator> <name pos:start="119:34" pos:end="119:48">AV_PIX_FMT_RGBA</name></expr>;</expr_stmt>

                <break pos:start="121:17" pos:end="121:22">break;</break>



            <case pos:start="125:13" pos:end="125:36">case <expr pos:start="125:18" pos:end="125:35"><name pos:start="125:18" pos:end="125:35">AV_PIX_FMT_RGB48BE</name></expr>:</case>

                <expr_stmt pos:start="127:17" pos:end="127:53"><expr pos:start="127:17" pos:end="127:52"><name pos:start="127:17" pos:end="127:30"><name pos:start="127:17" pos:end="127:21">avctx</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:30">pix_fmt</name></name> <operator pos:start="127:32" pos:end="127:32">=</operator> <name pos:start="127:34" pos:end="127:52">AV_PIX_FMT_RGBA64BE</name></expr>;</expr_stmt>

                <break pos:start="129:17" pos:end="129:22">break;</break>



            <case pos:start="133:13" pos:end="133:34">case <expr pos:start="133:18" pos:end="133:33"><name pos:start="133:18" pos:end="133:33">AV_PIX_FMT_GRAY8</name></expr>:</case>

                <expr_stmt pos:start="135:17" pos:end="135:48"><expr pos:start="135:17" pos:end="135:47"><name pos:start="135:17" pos:end="135:30"><name pos:start="135:17" pos:end="135:21">avctx</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:30">pix_fmt</name></name> <operator pos:start="135:32" pos:end="135:32">=</operator> <name pos:start="135:34" pos:end="135:47">AV_PIX_FMT_YA8</name></expr>;</expr_stmt>

                <break pos:start="137:17" pos:end="137:22">break;</break>



            <case pos:start="141:13" pos:end="141:37">case <expr pos:start="141:18" pos:end="141:36"><name pos:start="141:18" pos:end="141:36">AV_PIX_FMT_GRAY16BE</name></expr>:</case>

                <expr_stmt pos:start="143:17" pos:end="143:51"><expr pos:start="143:17" pos:end="143:50"><name pos:start="143:17" pos:end="143:30"><name pos:start="143:17" pos:end="143:21">avctx</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:30">pix_fmt</name></name> <operator pos:start="143:32" pos:end="143:32">=</operator> <name pos:start="143:34" pos:end="143:50">AV_PIX_FMT_YA16BE</name></expr>;</expr_stmt>

                <break pos:start="145:17" pos:end="145:22">break;</break>



            <default pos:start="149:13" pos:end="149:20">default:</default>

                <expr_stmt pos:start="151:17" pos:end="155:53"><expr pos:start="151:17" pos:end="155:52"><call pos:start="151:17" pos:end="155:52"><name pos:start="151:17" pos:end="151:37">avpriv_request_sample</name><argument_list pos:start="151:38" pos:end="155:52">(<argument pos:start="151:39" pos:end="151:43"><expr pos:start="151:39" pos:end="151:43"><name pos:start="151:39" pos:end="151:43">avctx</name></expr></argument>, <argument pos:start="151:46" pos:end="153:53"><expr pos:start="151:46" pos:end="153:53"><literal type="string" pos:start="151:46" pos:end="151:60">"bit depth %d "</literal>

                        <literal type="string" pos:start="153:25" pos:end="153:53">"and color type %d with TRNS"</literal></expr></argument>,

                        <argument pos:start="155:25" pos:end="155:36"><expr pos:start="155:25" pos:end="155:36"><name pos:start="155:25" pos:end="155:36"><name pos:start="155:25" pos:end="155:25">s</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:36">bit_depth</name></name></expr></argument>, <argument pos:start="155:39" pos:end="155:51"><expr pos:start="155:39" pos:end="155:51"><name pos:start="155:39" pos:end="155:51"><name pos:start="155:39" pos:end="155:39">s</name><operator pos:start="155:40" pos:end="155:41">-&gt;</operator><name pos:start="155:42" pos:end="155:51">color_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="157:17" pos:end="157:43">return <expr pos:start="157:24" pos:end="157:42"><name pos:start="157:24" pos:end="157:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></switch>



            <expr_stmt pos:start="163:13" pos:end="163:33"><expr pos:start="163:13" pos:end="163:32"><name pos:start="163:13" pos:end="163:18"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:18">bpp</name></name> <operator pos:start="163:20" pos:end="163:21">+=</operator> <name pos:start="163:23" pos:end="163:32">byte_depth</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="169:9" pos:end="171:23"><if pos:start="169:9" pos:end="171:23">if <condition pos:start="169:12" pos:end="169:89">(<expr pos:start="169:13" pos:end="169:88"><operator pos:start="169:13" pos:end="169:13">(</operator><name pos:start="169:14" pos:end="169:16">ret</name> <operator pos:start="169:18" pos:end="169:18">=</operator> <call pos:start="169:20" pos:end="169:83"><name pos:start="169:20" pos:end="169:39">ff_thread_get_buffer</name><argument_list pos:start="169:40" pos:end="169:83">(<argument pos:start="169:41" pos:end="169:45"><expr pos:start="169:41" pos:end="169:45"><name pos:start="169:41" pos:end="169:45">avctx</name></expr></argument>, <argument pos:start="169:48" pos:end="169:58"><expr pos:start="169:48" pos:end="169:58"><operator pos:start="169:48" pos:end="169:48">&amp;</operator><name pos:start="169:49" pos:end="169:58"><name pos:start="169:49" pos:end="169:49">s</name><operator pos:start="169:50" pos:end="169:51">-&gt;</operator><name pos:start="169:52" pos:end="169:58">picture</name></name></expr></argument>, <argument pos:start="169:61" pos:end="169:82"><expr pos:start="169:61" pos:end="169:82"><name pos:start="169:61" pos:end="169:82">AV_GET_BUFFER_FLAG_REF</name></expr></argument>)</argument_list></call><operator pos:start="169:84" pos:end="169:84">)</operator> <operator pos:start="169:86" pos:end="169:86">&lt;</operator> <literal type="number" pos:start="169:88" pos:end="169:88">0</literal></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:23"><block_content pos:start="171:13" pos:end="171:23">

            <return pos:start="171:13" pos:end="171:23">return <expr pos:start="171:20" pos:end="171:22"><name pos:start="171:20" pos:end="171:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="173:9" pos:end="181:9"><if pos:start="173:9" pos:end="181:9">if <condition pos:start="173:12" pos:end="173:98">(<expr pos:start="173:13" pos:end="173:97"><name pos:start="173:13" pos:end="173:27"><name pos:start="173:13" pos:end="173:17">avctx</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:27">codec_id</name></name> <operator pos:start="173:29" pos:end="173:30">==</operator> <name pos:start="173:32" pos:end="173:47">AV_CODEC_ID_APNG</name> <operator pos:start="173:49" pos:end="173:50">&amp;&amp;</operator> <name pos:start="173:52" pos:end="173:69"><name pos:start="173:52" pos:end="173:52">s</name><operator pos:start="173:53" pos:end="173:54">-&gt;</operator><name pos:start="173:55" pos:end="173:69">last_dispose_op</name></name> <operator pos:start="173:71" pos:end="173:72">!=</operator> <name pos:start="173:74" pos:end="173:97">APNG_DISPOSE_OP_PREVIOUS</name></expr>)</condition> <block pos:start="173:100" pos:end="181:9">{<block_content pos:start="175:13" pos:end="179:27">

            <expr_stmt pos:start="175:13" pos:end="175:66"><expr pos:start="175:13" pos:end="175:65"><call pos:start="175:13" pos:end="175:65"><name pos:start="175:13" pos:end="175:36">ff_thread_release_buffer</name><argument_list pos:start="175:37" pos:end="175:65">(<argument pos:start="175:38" pos:end="175:42"><expr pos:start="175:38" pos:end="175:42"><name pos:start="175:38" pos:end="175:42">avctx</name></expr></argument>, <argument pos:start="175:45" pos:end="175:64"><expr pos:start="175:45" pos:end="175:64"><operator pos:start="175:45" pos:end="175:45">&amp;</operator><name pos:start="175:46" pos:end="175:64"><name pos:start="175:46" pos:end="175:46">s</name><operator pos:start="175:47" pos:end="175:48">-&gt;</operator><name pos:start="175:49" pos:end="175:64">previous_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="177:13" pos:end="179:27"><if pos:start="177:13" pos:end="179:27">if <condition pos:start="177:16" pos:end="177:102">(<expr pos:start="177:17" pos:end="177:101"><operator pos:start="177:17" pos:end="177:17">(</operator><name pos:start="177:18" pos:end="177:20">ret</name> <operator pos:start="177:22" pos:end="177:22">=</operator> <call pos:start="177:24" pos:end="177:96"><name pos:start="177:24" pos:end="177:43">ff_thread_get_buffer</name><argument_list pos:start="177:44" pos:end="177:96">(<argument pos:start="177:45" pos:end="177:49"><expr pos:start="177:45" pos:end="177:49"><name pos:start="177:45" pos:end="177:49">avctx</name></expr></argument>, <argument pos:start="177:52" pos:end="177:71"><expr pos:start="177:52" pos:end="177:71"><operator pos:start="177:52" pos:end="177:52">&amp;</operator><name pos:start="177:53" pos:end="177:71"><name pos:start="177:53" pos:end="177:53">s</name><operator pos:start="177:54" pos:end="177:55">-&gt;</operator><name pos:start="177:56" pos:end="177:71">previous_picture</name></name></expr></argument>, <argument pos:start="177:74" pos:end="177:95"><expr pos:start="177:74" pos:end="177:95"><name pos:start="177:74" pos:end="177:95">AV_GET_BUFFER_FLAG_REF</name></expr></argument>)</argument_list></call><operator pos:start="177:97" pos:end="177:97">)</operator> <operator pos:start="177:99" pos:end="177:99">&lt;</operator> <literal type="number" pos:start="177:101" pos:end="177:101">0</literal></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="179:27"><block_content pos:start="179:17" pos:end="179:27">

                <return pos:start="179:17" pos:end="179:27">return <expr pos:start="179:24" pos:end="179:26"><name pos:start="179:24" pos:end="179:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:38"><expr pos:start="183:9" pos:end="183:37"><call pos:start="183:9" pos:end="183:37"><name pos:start="183:9" pos:end="183:30">ff_thread_finish_setup</name><argument_list pos:start="183:31" pos:end="183:37">(<argument pos:start="183:32" pos:end="183:36"><expr pos:start="183:32" pos:end="183:36"><name pos:start="183:32" pos:end="183:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="187:9" pos:end="187:48"><expr pos:start="187:9" pos:end="187:47"><name pos:start="187:9" pos:end="187:20"><name pos:start="187:9" pos:end="187:9">p</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:20">pict_type</name></name>        <operator pos:start="187:29" pos:end="187:29">=</operator> <name pos:start="187:31" pos:end="187:47">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:32"><expr pos:start="189:9" pos:end="189:31"><name pos:start="189:9" pos:end="189:20"><name pos:start="189:9" pos:end="189:9">p</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:20">key_frame</name></name>        <operator pos:start="189:29" pos:end="189:29">=</operator> <literal type="number" pos:start="189:31" pos:end="189:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:50"><expr pos:start="191:9" pos:end="191:49"><name pos:start="191:9" pos:end="191:27"><name pos:start="191:9" pos:end="191:9">p</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:27">interlaced_frame</name></name> <operator pos:start="191:29" pos:end="191:29">=</operator> <operator pos:start="191:31" pos:end="191:31">!</operator><operator pos:start="191:32" pos:end="191:32">!</operator><name pos:start="191:33" pos:end="191:49"><name pos:start="191:33" pos:end="191:33">s</name><operator pos:start="191:34" pos:end="191:35">-&gt;</operator><name pos:start="191:36" pos:end="191:49">interlace_type</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="195:9" pos:end="195:45">/* compute the compressed row size */</comment>

        <if_stmt pos:start="197:9" pos:end="213:9"><if pos:start="197:9" pos:end="201:9">if <condition pos:start="197:12" pos:end="197:31">(<expr pos:start="197:13" pos:end="197:30"><operator pos:start="197:13" pos:end="197:13">!</operator><name pos:start="197:14" pos:end="197:30"><name pos:start="197:14" pos:end="197:14">s</name><operator pos:start="197:15" pos:end="197:16">-&gt;</operator><name pos:start="197:17" pos:end="197:30">interlace_type</name></name></expr>)</condition> <block pos:start="197:33" pos:end="201:9">{<block_content pos:start="199:13" pos:end="199:43">

            <expr_stmt pos:start="199:13" pos:end="199:43"><expr pos:start="199:13" pos:end="199:42"><name pos:start="199:13" pos:end="199:24"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:24">crow_size</name></name> <operator pos:start="199:26" pos:end="199:26">=</operator> <name pos:start="199:28" pos:end="199:38"><name pos:start="199:28" pos:end="199:28">s</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:38">row_size</name></name> <operator pos:start="199:40" pos:end="199:40">+</operator> <literal type="number" pos:start="199:42" pos:end="199:42">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="201:11" pos:end="213:9">else <block pos:start="201:16" pos:end="213:9">{<block_content pos:start="203:13" pos:end="211:48">

            <expr_stmt pos:start="203:13" pos:end="203:33"><expr pos:start="203:13" pos:end="203:32"><name pos:start="203:13" pos:end="203:19"><name pos:start="203:13" pos:end="203:13">s</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:19">pass</name></name>          <operator pos:start="203:30" pos:end="203:30">=</operator> <literal type="number" pos:start="203:32" pos:end="203:32">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="209:30"><expr pos:start="205:13" pos:end="209:29"><name pos:start="205:13" pos:end="205:28"><name pos:start="205:13" pos:end="205:13">s</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:28">pass_row_size</name></name> <operator pos:start="205:30" pos:end="205:30">=</operator> <call pos:start="205:32" pos:end="209:29"><name pos:start="205:32" pos:end="205:51">ff_png_pass_row_size</name><argument_list pos:start="205:52" pos:end="209:29">(<argument pos:start="205:53" pos:end="205:59"><expr pos:start="205:53" pos:end="205:59"><name pos:start="205:53" pos:end="205:59"><name pos:start="205:53" pos:end="205:53">s</name><operator pos:start="205:54" pos:end="205:55">-&gt;</operator><name pos:start="205:56" pos:end="205:59">pass</name></name></expr></argument>,

                    <argument pos:start="207:21" pos:end="207:37"><expr pos:start="207:21" pos:end="207:37"><name pos:start="207:21" pos:end="207:37"><name pos:start="207:21" pos:end="207:21">s</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:37">bits_per_pixel</name></name></expr></argument>,

                    <argument pos:start="209:21" pos:end="209:28"><expr pos:start="209:21" pos:end="209:28"><name pos:start="209:21" pos:end="209:28"><name pos:start="209:21" pos:end="209:21">s</name><operator pos:start="209:22" pos:end="209:23">-&gt;</operator><name pos:start="209:24" pos:end="209:28">cur_w</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:48"><expr pos:start="211:13" pos:end="211:47"><name pos:start="211:13" pos:end="211:24"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:24">crow_size</name></name> <operator pos:start="211:26" pos:end="211:26">=</operator> <name pos:start="211:28" pos:end="211:43"><name pos:start="211:28" pos:end="211:28">s</name><operator pos:start="211:29" pos:end="211:30">-&gt;</operator><name pos:start="211:31" pos:end="211:43">pass_row_size</name></name> <operator pos:start="211:45" pos:end="211:45">+</operator> <literal type="number" pos:start="211:47" pos:end="211:47">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="215:9" pos:end="217:43"><expr pos:start="215:9" pos:end="217:42"><call pos:start="215:9" pos:end="217:42"><name pos:start="215:9" pos:end="215:15">ff_dlog</name><argument_list pos:start="215:16" pos:end="217:42">(<argument pos:start="215:17" pos:end="215:21"><expr pos:start="215:17" pos:end="215:21"><name pos:start="215:17" pos:end="215:21">avctx</name></expr></argument>, <argument pos:start="215:24" pos:end="215:52"><expr pos:start="215:24" pos:end="215:52"><literal type="string" pos:start="215:24" pos:end="215:52">"row_size=%d crow_size =%d\n"</literal></expr></argument>,

                <argument pos:start="217:17" pos:end="217:27"><expr pos:start="217:17" pos:end="217:27"><name pos:start="217:17" pos:end="217:27"><name pos:start="217:17" pos:end="217:17">s</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:27">row_size</name></name></expr></argument>, <argument pos:start="217:30" pos:end="217:41"><expr pos:start="217:30" pos:end="217:41"><name pos:start="217:30" pos:end="217:41"><name pos:start="217:30" pos:end="217:30">s</name><operator pos:start="217:31" pos:end="217:32">-&gt;</operator><name pos:start="217:33" pos:end="217:41">crow_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:39"><expr pos:start="219:9" pos:end="219:38"><name pos:start="219:9" pos:end="219:20"><name pos:start="219:9" pos:end="219:9">s</name><operator pos:start="219:10" pos:end="219:11">-&gt;</operator><name pos:start="219:12" pos:end="219:20">image_buf</name></name>      <operator pos:start="219:27" pos:end="219:27">=</operator> <name pos:start="219:29" pos:end="219:38"><name pos:start="219:29" pos:end="219:29">p</name><operator pos:start="219:30" pos:end="219:31">-&gt;</operator><name pos:start="219:32" pos:end="219:35">data</name><index pos:start="219:36" pos:end="219:38">[<expr pos:start="219:37" pos:end="219:37"><literal type="number" pos:start="219:37" pos:end="219:37">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:43"><expr pos:start="221:9" pos:end="221:42"><name pos:start="221:9" pos:end="221:25"><name pos:start="221:9" pos:end="221:9">s</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:25">image_linesize</name></name> <operator pos:start="221:27" pos:end="221:27">=</operator> <name pos:start="221:29" pos:end="221:42"><name pos:start="221:29" pos:end="221:29">p</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:39">linesize</name><index pos:start="221:40" pos:end="221:42">[<expr pos:start="221:41" pos:end="221:41"><literal type="number" pos:start="221:41" pos:end="221:41">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <comment type="block" pos:start="223:9" pos:end="223:40">/* copy the palette if needed */</comment>

        <if_stmt pos:start="225:9" pos:end="227:67"><if pos:start="225:9" pos:end="227:67">if <condition pos:start="225:12" pos:end="225:46">(<expr pos:start="225:13" pos:end="225:45"><name pos:start="225:13" pos:end="225:26"><name pos:start="225:13" pos:end="225:17">avctx</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:26">pix_fmt</name></name> <operator pos:start="225:28" pos:end="225:29">==</operator> <name pos:start="225:31" pos:end="225:45">AV_PIX_FMT_PAL8</name></expr>)</condition><block type="pseudo" pos:start="227:13" pos:end="227:67"><block_content pos:start="227:13" pos:end="227:67">

            <expr_stmt pos:start="227:13" pos:end="227:67"><expr pos:start="227:13" pos:end="227:66"><call pos:start="227:13" pos:end="227:66"><name pos:start="227:13" pos:end="227:18">memcpy</name><argument_list pos:start="227:19" pos:end="227:66">(<argument pos:start="227:20" pos:end="227:29"><expr pos:start="227:20" pos:end="227:29"><name pos:start="227:20" pos:end="227:29"><name pos:start="227:20" pos:end="227:20">p</name><operator pos:start="227:21" pos:end="227:22">-&gt;</operator><name pos:start="227:23" pos:end="227:26">data</name><index pos:start="227:27" pos:end="227:29">[<expr pos:start="227:28" pos:end="227:28"><literal type="number" pos:start="227:28" pos:end="227:28">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="227:32" pos:end="227:41"><expr pos:start="227:32" pos:end="227:41"><name pos:start="227:32" pos:end="227:41"><name pos:start="227:32" pos:end="227:32">s</name><operator pos:start="227:33" pos:end="227:34">-&gt;</operator><name pos:start="227:35" pos:end="227:41">palette</name></name></expr></argument>, <argument pos:start="227:44" pos:end="227:65"><expr pos:start="227:44" pos:end="227:65"><literal type="number" pos:start="227:44" pos:end="227:46">256</literal> <operator pos:start="227:48" pos:end="227:48">*</operator> <sizeof pos:start="227:50" pos:end="227:65">sizeof<argument_list pos:start="227:56" pos:end="227:65">(<argument pos:start="227:57" pos:end="227:64"><expr pos:start="227:57" pos:end="227:64"><name pos:start="227:57" pos:end="227:64">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <comment type="block" pos:start="229:9" pos:end="229:64">/* empty row is used if differencing to the first row */</comment>

        <expr_stmt pos:start="231:9" pos:end="231:77"><expr pos:start="231:9" pos:end="231:76"><call pos:start="231:9" pos:end="231:76"><name pos:start="231:9" pos:end="231:30">av_fast_padded_mallocz</name><argument_list pos:start="231:31" pos:end="231:76">(<argument pos:start="231:32" pos:end="231:43"><expr pos:start="231:32" pos:end="231:43"><operator pos:start="231:32" pos:end="231:32">&amp;</operator><name pos:start="231:33" pos:end="231:43"><name pos:start="231:33" pos:end="231:33">s</name><operator pos:start="231:34" pos:end="231:35">-&gt;</operator><name pos:start="231:36" pos:end="231:43">last_row</name></name></expr></argument>, <argument pos:start="231:46" pos:end="231:62"><expr pos:start="231:46" pos:end="231:62"><operator pos:start="231:46" pos:end="231:46">&amp;</operator><name pos:start="231:47" pos:end="231:62"><name pos:start="231:47" pos:end="231:47">s</name><operator pos:start="231:48" pos:end="231:49">-&gt;</operator><name pos:start="231:50" pos:end="231:62">last_row_size</name></name></expr></argument>, <argument pos:start="231:65" pos:end="231:75"><expr pos:start="231:65" pos:end="231:75"><name pos:start="231:65" pos:end="231:75"><name pos:start="231:65" pos:end="231:65">s</name><operator pos:start="231:66" pos:end="231:67">-&gt;</operator><name pos:start="231:68" pos:end="231:75">row_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="233:9" pos:end="235:39"><if pos:start="233:9" pos:end="235:39">if <condition pos:start="233:12" pos:end="233:25">(<expr pos:start="233:13" pos:end="233:24"><operator pos:start="233:13" pos:end="233:13">!</operator><name pos:start="233:14" pos:end="233:24"><name pos:start="233:14" pos:end="233:14">s</name><operator pos:start="233:15" pos:end="233:16">-&gt;</operator><name pos:start="233:17" pos:end="233:24">last_row</name></name></expr>)</condition><block type="pseudo" pos:start="235:13" pos:end="235:39"><block_content pos:start="235:13" pos:end="235:39">

            <return pos:start="235:13" pos:end="235:39">return <expr pos:start="235:20" pos:end="235:38"><name pos:start="235:20" pos:end="235:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="237:9" pos:end="247:9"><if pos:start="237:9" pos:end="247:9">if <condition pos:start="237:12" pos:end="239:58">(<expr pos:start="237:13" pos:end="239:57"><name pos:start="237:13" pos:end="237:29"><name pos:start="237:13" pos:end="237:13">s</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:29">interlace_type</name></name> <operator pos:start="237:31" pos:end="237:32">||</operator>

                <name pos:start="239:17" pos:end="239:29"><name pos:start="239:17" pos:end="239:17">s</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:29">color_type</name></name> <operator pos:start="239:31" pos:end="239:32">==</operator> <name pos:start="239:34" pos:end="239:57">PNG_COLOR_TYPE_RGB_ALPHA</name></expr>)</condition> <block pos:start="239:60" pos:end="247:9">{<block_content pos:start="241:13" pos:end="245:43">

            <expr_stmt pos:start="241:13" pos:end="241:78"><expr pos:start="241:13" pos:end="241:77"><call pos:start="241:13" pos:end="241:77"><name pos:start="241:13" pos:end="241:33">av_fast_padded_malloc</name><argument_list pos:start="241:34" pos:end="241:77">(<argument pos:start="241:35" pos:end="241:45"><expr pos:start="241:35" pos:end="241:45"><operator pos:start="241:35" pos:end="241:35">&amp;</operator><name pos:start="241:36" pos:end="241:45"><name pos:start="241:36" pos:end="241:36">s</name><operator pos:start="241:37" pos:end="241:38">-&gt;</operator><name pos:start="241:39" pos:end="241:45">tmp_row</name></name></expr></argument>, <argument pos:start="241:48" pos:end="241:63"><expr pos:start="241:48" pos:end="241:63"><operator pos:start="241:48" pos:end="241:48">&amp;</operator><name pos:start="241:49" pos:end="241:63"><name pos:start="241:49" pos:end="241:49">s</name><operator pos:start="241:50" pos:end="241:51">-&gt;</operator><name pos:start="241:52" pos:end="241:63">tmp_row_size</name></name></expr></argument>, <argument pos:start="241:66" pos:end="241:76"><expr pos:start="241:66" pos:end="241:76"><name pos:start="241:66" pos:end="241:76"><name pos:start="241:66" pos:end="241:66">s</name><operator pos:start="241:67" pos:end="241:68">-&gt;</operator><name pos:start="241:69" pos:end="241:76">row_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="243:13" pos:end="245:43"><if pos:start="243:13" pos:end="245:43">if <condition pos:start="243:16" pos:end="243:28">(<expr pos:start="243:17" pos:end="243:27"><operator pos:start="243:17" pos:end="243:17">!</operator><name pos:start="243:18" pos:end="243:27"><name pos:start="243:18" pos:end="243:18">s</name><operator pos:start="243:19" pos:end="243:20">-&gt;</operator><name pos:start="243:21" pos:end="243:27">tmp_row</name></name></expr>)</condition><block type="pseudo" pos:start="245:17" pos:end="245:43"><block_content pos:start="245:17" pos:end="245:43">

                <return pos:start="245:17" pos:end="245:43">return <expr pos:start="245:24" pos:end="245:42"><name pos:start="245:24" pos:end="245:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="249:9" pos:end="249:28">/* compressed row */</comment>

        <expr_stmt pos:start="251:9" pos:end="251:77"><expr pos:start="251:9" pos:end="251:76"><call pos:start="251:9" pos:end="251:76"><name pos:start="251:9" pos:end="251:29">av_fast_padded_malloc</name><argument_list pos:start="251:30" pos:end="251:76">(<argument pos:start="251:31" pos:end="251:40"><expr pos:start="251:31" pos:end="251:40"><operator pos:start="251:31" pos:end="251:31">&amp;</operator><name pos:start="251:32" pos:end="251:40"><name pos:start="251:32" pos:end="251:32">s</name><operator pos:start="251:33" pos:end="251:34">-&gt;</operator><name pos:start="251:35" pos:end="251:40">buffer</name></name></expr></argument>, <argument pos:start="251:43" pos:end="251:57"><expr pos:start="251:43" pos:end="251:57"><operator pos:start="251:43" pos:end="251:43">&amp;</operator><name pos:start="251:44" pos:end="251:57"><name pos:start="251:44" pos:end="251:44">s</name><operator pos:start="251:45" pos:end="251:46">-&gt;</operator><name pos:start="251:47" pos:end="251:57">buffer_size</name></name></expr></argument>, <argument pos:start="251:60" pos:end="251:75"><expr pos:start="251:60" pos:end="251:75"><name pos:start="251:60" pos:end="251:70"><name pos:start="251:60" pos:end="251:60">s</name><operator pos:start="251:61" pos:end="251:62">-&gt;</operator><name pos:start="251:63" pos:end="251:70">row_size</name></name> <operator pos:start="251:72" pos:end="251:72">+</operator> <literal type="number" pos:start="251:74" pos:end="251:75">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="253:9" pos:end="255:35"><if pos:start="253:9" pos:end="255:35">if <condition pos:start="253:12" pos:end="253:23">(<expr pos:start="253:13" pos:end="253:22"><operator pos:start="253:13" pos:end="253:13">!</operator><name pos:start="253:14" pos:end="253:22"><name pos:start="253:14" pos:end="253:14">s</name><operator pos:start="253:15" pos:end="253:16">-&gt;</operator><name pos:start="253:17" pos:end="253:22">buffer</name></name></expr>)</condition><block type="pseudo" pos:start="255:13" pos:end="255:35"><block_content pos:start="255:13" pos:end="255:35">

            <return pos:start="255:13" pos:end="255:35">return <expr pos:start="255:20" pos:end="255:34"><call pos:start="255:20" pos:end="255:34"><name pos:start="255:20" pos:end="255:26">AVERROR</name><argument_list pos:start="255:27" pos:end="255:34">(<argument pos:start="255:28" pos:end="255:33"><expr pos:start="255:28" pos:end="255:33"><name pos:start="255:28" pos:end="255:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="259:9" pos:end="259:54">/* we want crow_buf+1 to be 16-byte aligned */</comment>

        <expr_stmt pos:start="261:9" pos:end="261:46"><expr pos:start="261:9" pos:end="261:45"><name pos:start="261:9" pos:end="261:19"><name pos:start="261:9" pos:end="261:9">s</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:19">crow_buf</name></name>          <operator pos:start="261:30" pos:end="261:30">=</operator> <name pos:start="261:32" pos:end="261:40"><name pos:start="261:32" pos:end="261:32">s</name><operator pos:start="261:33" pos:end="261:34">-&gt;</operator><name pos:start="261:35" pos:end="261:40">buffer</name></name> <operator pos:start="261:42" pos:end="261:42">+</operator> <literal type="number" pos:start="261:44" pos:end="261:45">15</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:44"><expr pos:start="263:9" pos:end="263:43"><name pos:start="263:9" pos:end="263:28"><name pos:start="263:9" pos:end="263:9">s</name><operator pos:start="263:10" pos:end="263:11">-&gt;</operator><name pos:start="263:12" pos:end="263:18">zstream</name><operator pos:start="263:19" pos:end="263:19">.</operator><name pos:start="263:20" pos:end="263:28">avail_out</name></name> <operator pos:start="263:30" pos:end="263:30">=</operator> <name pos:start="263:32" pos:end="263:43"><name pos:start="263:32" pos:end="263:32">s</name><operator pos:start="263:33" pos:end="263:34">-&gt;</operator><name pos:start="263:35" pos:end="263:43">crow_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:43"><expr pos:start="265:9" pos:end="265:42"><name pos:start="265:9" pos:end="265:27"><name pos:start="265:9" pos:end="265:9">s</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:18">zstream</name><operator pos:start="265:19" pos:end="265:19">.</operator><name pos:start="265:20" pos:end="265:27">next_out</name></name>  <operator pos:start="265:30" pos:end="265:30">=</operator> <name pos:start="265:32" pos:end="265:42"><name pos:start="265:32" pos:end="265:32">s</name><operator pos:start="265:33" pos:end="265:34">-&gt;</operator><name pos:start="265:35" pos:end="265:42">crow_buf</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="271:5" pos:end="271:25"><expr pos:start="271:5" pos:end="271:24"><name pos:start="271:5" pos:end="271:12"><name pos:start="271:5" pos:end="271:5">s</name><operator pos:start="271:6" pos:end="271:7">-&gt;</operator><name pos:start="271:8" pos:end="271:12">state</name></name> <operator pos:start="271:14" pos:end="271:15">|=</operator> <name pos:start="271:17" pos:end="271:24">PNG_IDAT</name></expr>;</expr_stmt>



    <comment type="block" pos:start="275:5" pos:end="275:62">/* set image to non-transparent bpp while decompressing */</comment>

    <if_stmt pos:start="277:5" pos:end="279:29"><if pos:start="277:5" pos:end="279:29">if <condition pos:start="277:8" pos:end="277:63">(<expr pos:start="277:9" pos:end="277:62"><name pos:start="277:9" pos:end="277:19"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:19">has_trns</name></name> <operator pos:start="277:21" pos:end="277:22">&amp;&amp;</operator> <name pos:start="277:24" pos:end="277:36"><name pos:start="277:24" pos:end="277:24">s</name><operator pos:start="277:25" pos:end="277:26">-&gt;</operator><name pos:start="277:27" pos:end="277:36">color_type</name></name> <operator pos:start="277:38" pos:end="277:39">!=</operator> <name pos:start="277:41" pos:end="277:62">PNG_COLOR_TYPE_PALETTE</name></expr>)</condition><block type="pseudo" pos:start="279:9" pos:end="279:29"><block_content pos:start="279:9" pos:end="279:29">

        <expr_stmt pos:start="279:9" pos:end="279:29"><expr pos:start="279:9" pos:end="279:28"><name pos:start="279:9" pos:end="279:14"><name pos:start="279:9" pos:end="279:9">s</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:14">bpp</name></name> <operator pos:start="279:16" pos:end="279:17">-=</operator> <name pos:start="279:19" pos:end="279:28">byte_depth</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="283:5" pos:end="283:37"><expr pos:start="283:5" pos:end="283:36"><name pos:start="283:5" pos:end="283:7">ret</name> <operator pos:start="283:9" pos:end="283:9">=</operator> <call pos:start="283:11" pos:end="283:36"><name pos:start="283:11" pos:end="283:25">png_decode_idat</name><argument_list pos:start="283:26" pos:end="283:36">(<argument pos:start="283:27" pos:end="283:27"><expr pos:start="283:27" pos:end="283:27"><name pos:start="283:27" pos:end="283:27">s</name></expr></argument>, <argument pos:start="283:30" pos:end="283:35"><expr pos:start="283:30" pos:end="283:35"><name pos:start="283:30" pos:end="283:35">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="287:5" pos:end="289:29"><if pos:start="287:5" pos:end="289:29">if <condition pos:start="287:8" pos:end="287:63">(<expr pos:start="287:9" pos:end="287:62"><name pos:start="287:9" pos:end="287:19"><name pos:start="287:9" pos:end="287:9">s</name><operator pos:start="287:10" pos:end="287:11">-&gt;</operator><name pos:start="287:12" pos:end="287:19">has_trns</name></name> <operator pos:start="287:21" pos:end="287:22">&amp;&amp;</operator> <name pos:start="287:24" pos:end="287:36"><name pos:start="287:24" pos:end="287:24">s</name><operator pos:start="287:25" pos:end="287:26">-&gt;</operator><name pos:start="287:27" pos:end="287:36">color_type</name></name> <operator pos:start="287:38" pos:end="287:39">!=</operator> <name pos:start="287:41" pos:end="287:62">PNG_COLOR_TYPE_PALETTE</name></expr>)</condition><block type="pseudo" pos:start="289:9" pos:end="289:29"><block_content pos:start="289:9" pos:end="289:29">

        <expr_stmt pos:start="289:9" pos:end="289:29"><expr pos:start="289:9" pos:end="289:28"><name pos:start="289:9" pos:end="289:14"><name pos:start="289:9" pos:end="289:9">s</name><operator pos:start="289:10" pos:end="289:11">-&gt;</operator><name pos:start="289:12" pos:end="289:14">bpp</name></name> <operator pos:start="289:16" pos:end="289:17">+=</operator> <name pos:start="289:19" pos:end="289:28">byte_depth</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="293:5" pos:end="295:19"><if pos:start="293:5" pos:end="295:19">if <condition pos:start="293:8" pos:end="293:16">(<expr pos:start="293:9" pos:end="293:15"><name pos:start="293:9" pos:end="293:11">ret</name> <operator pos:start="293:13" pos:end="293:13">&lt;</operator> <literal type="number" pos:start="293:15" pos:end="293:15">0</literal></expr>)</condition><block type="pseudo" pos:start="295:9" pos:end="295:19"><block_content pos:start="295:9" pos:end="295:19">

        <return pos:start="295:9" pos:end="295:19">return <expr pos:start="295:16" pos:end="295:18"><name pos:start="295:16" pos:end="295:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="299:5" pos:end="299:32"><expr pos:start="299:5" pos:end="299:31"><call pos:start="299:5" pos:end="299:31"><name pos:start="299:5" pos:end="299:20">bytestream2_skip</name><argument_list pos:start="299:21" pos:end="299:31">(<argument pos:start="299:22" pos:end="299:27"><expr pos:start="299:22" pos:end="299:27"><operator pos:start="299:22" pos:end="299:22">&amp;</operator><name pos:start="299:23" pos:end="299:27"><name pos:start="299:23" pos:end="299:23">s</name><operator pos:start="299:24" pos:end="299:25">-&gt;</operator><name pos:start="299:26" pos:end="299:27">gb</name></name></expr></argument>, <argument pos:start="299:30" pos:end="299:30"><expr pos:start="299:30" pos:end="299:30"><literal type="number" pos:start="299:30" pos:end="299:30">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="299:34" pos:end="299:42">/* crc */</comment>



    <return pos:start="303:5" pos:end="303:13">return <expr pos:start="303:12" pos:end="303:12"><literal type="number" pos:start="303:12" pos:end="303:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
