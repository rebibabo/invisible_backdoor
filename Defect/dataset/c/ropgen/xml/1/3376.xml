<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3376.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:20">do_rt_sigreturn</name><parameter_list pos:start="1:21" pos:end="1:40">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:36"><name pos:start="1:22" pos:end="1:34">CPUS390XState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">rt_sigframe</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:22">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">abi_ulong</name></type> <name pos:start="7:15" pos:end="7:24">frame_addr</name> <init pos:start="7:26" pos:end="7:40">= <expr pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:30">env</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">regs</name><index pos:start="7:37" pos:end="7:40">[<expr pos:start="7:38" pos:end="7:39"><literal type="number" pos:start="7:38" pos:end="7:39">15</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">sigset_t</name></type> <name pos:start="9:14" pos:end="9:16">set</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:48"><expr pos:start="13:5" pos:end="13:47"><call pos:start="13:5" pos:end="13:47"><name pos:start="13:5" pos:end="13:30">trace_user_do_rt_sigreturn</name><argument_list pos:start="13:31" pos:end="13:47">(<argument pos:start="13:32" pos:end="13:34"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:34">env</name></expr></argument>, <argument pos:start="13:37" pos:end="13:46"><expr pos:start="13:37" pos:end="13:46"><name pos:start="13:37" pos:end="13:46">frame_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:61">(<expr pos:start="15:9" pos:end="15:60"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:60"><name pos:start="15:10" pos:end="15:25">lock_user_struct</name><argument_list pos:start="15:26" pos:end="15:60">(<argument pos:start="15:27" pos:end="15:37"><expr pos:start="15:27" pos:end="15:37"><name pos:start="15:27" pos:end="15:37">VERIFY_READ</name></expr></argument>, <argument pos:start="15:40" pos:end="15:44"><expr pos:start="15:40" pos:end="15:44"><name pos:start="15:40" pos:end="15:44">frame</name></expr></argument>, <argument pos:start="15:47" pos:end="15:56"><expr pos:start="15:47" pos:end="15:56"><name pos:start="15:47" pos:end="15:56">frame_addr</name></expr></argument>, <argument pos:start="15:59" pos:end="15:59"><expr pos:start="15:59" pos:end="15:59"><literal type="number" pos:start="15:59" pos:end="15:59">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:63" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:22">

        <goto pos:start="17:9" pos:end="17:22">goto <name pos:start="17:14" pos:end="17:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:56"><expr pos:start="21:5" pos:end="21:55"><call pos:start="21:5" pos:end="21:55"><name pos:start="21:5" pos:end="21:25">target_to_host_sigset</name><argument_list pos:start="21:26" pos:end="21:55">(<argument pos:start="21:27" pos:end="21:30"><expr pos:start="21:27" pos:end="21:30"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:30">set</name></expr></argument>, <argument pos:start="21:33" pos:end="21:54"><expr pos:start="21:33" pos:end="21:54"><operator pos:start="21:33" pos:end="21:33">&amp;</operator><name pos:start="21:34" pos:end="21:54"><name pos:start="21:34" pos:end="21:38">frame</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:42">uc</name><operator pos:start="21:43" pos:end="21:43">.</operator><name pos:start="21:44" pos:end="21:54">tuc_sigmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><call pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:15">set_sigmask</name><argument_list pos:start="25:16" pos:end="25:21">(<argument pos:start="25:17" pos:end="25:20"><expr pos:start="25:17" pos:end="25:20"><operator pos:start="25:17" pos:end="25:17">&amp;</operator><name pos:start="25:18" pos:end="25:20">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:24" pos:end="25:41">/* ~_BLOCKABLE? */</comment>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:54">(<expr pos:start="29:9" pos:end="29:53"><call pos:start="29:9" pos:end="29:53"><name pos:start="29:9" pos:end="29:23">restore_sigregs</name><argument_list pos:start="29:24" pos:end="29:53">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">env</name></expr></argument>, <argument pos:start="29:30" pos:end="29:52"><expr pos:start="29:30" pos:end="29:52"><operator pos:start="29:30" pos:end="29:30">&amp;</operator><name pos:start="29:31" pos:end="29:52"><name pos:start="29:31" pos:end="29:35">frame</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:39">uc</name><operator pos:start="29:40" pos:end="29:40">.</operator><name pos:start="29:41" pos:end="29:52">tuc_mcontext</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:56" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:22">

        <goto pos:start="31:9" pos:end="31:22">goto <name pos:start="31:14" pos:end="31:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="39:61">(<expr pos:start="37:9" pos:end="39:60"><call pos:start="37:9" pos:end="39:49"><name pos:start="37:9" pos:end="37:22">do_sigaltstack</name><argument_list pos:start="37:23" pos:end="39:49">(<argument pos:start="37:24" pos:end="37:71"><expr pos:start="37:24" pos:end="37:71"><name pos:start="37:24" pos:end="37:33">frame_addr</name> <operator pos:start="37:35" pos:end="37:35">+</operator> <call pos:start="37:37" pos:end="37:71"><name pos:start="37:37" pos:end="37:44">offsetof</name><argument_list pos:start="37:45" pos:end="37:71">(<argument pos:start="37:46" pos:end="37:56"><expr pos:start="37:46" pos:end="37:56"><name pos:start="37:46" pos:end="37:56">rt_sigframe</name></expr></argument>, <argument pos:start="37:59" pos:end="37:70"><expr pos:start="37:59" pos:end="37:70"><name pos:start="37:59" pos:end="37:70"><name pos:start="37:59" pos:end="37:60">uc</name><operator pos:start="37:61" pos:end="37:61">.</operator><name pos:start="37:62" pos:end="37:70">tuc_stack</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:74" pos:end="37:74"><expr pos:start="37:74" pos:end="37:74"><literal type="number" pos:start="37:74" pos:end="37:74">0</literal></expr></argument>,

                       <argument pos:start="39:24" pos:end="39:48"><expr pos:start="39:24" pos:end="39:48"><call pos:start="39:24" pos:end="39:48"><name pos:start="39:24" pos:end="39:43">get_sp_from_cpustate</name><argument_list pos:start="39:44" pos:end="39:48">(<argument pos:start="39:45" pos:end="39:47"><expr pos:start="39:45" pos:end="39:47"><name pos:start="39:45" pos:end="39:47">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="39:51" pos:end="39:52">==</operator> <operator pos:start="39:54" pos:end="39:54">-</operator><name pos:start="39:55" pos:end="39:60">EFAULT</name></expr>)</condition> <block pos:start="39:63" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:22">

        <goto pos:start="41:9" pos:end="41:22">goto <name pos:start="41:14" pos:end="41:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><call pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:22">unlock_user_struct</name><argument_list pos:start="45:23" pos:end="45:44">(<argument pos:start="45:24" pos:end="45:28"><expr pos:start="45:24" pos:end="45:28"><name pos:start="45:24" pos:end="45:28">frame</name></expr></argument>, <argument pos:start="45:31" pos:end="45:40"><expr pos:start="45:31" pos:end="45:40"><name pos:start="45:31" pos:end="45:40">frame_addr</name></expr></argument>, <argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:35">return <expr pos:start="47:12" pos:end="47:34"><operator pos:start="47:12" pos:end="47:12">-</operator><name pos:start="47:13" pos:end="47:34">TARGET_QEMU_ESIGRETURN</name></expr>;</return>



<label pos:start="51:1" pos:end="51:9"><name pos:start="51:1" pos:end="51:8">badframe</name>:</label>

    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><call pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:22">unlock_user_struct</name><argument_list pos:start="53:23" pos:end="53:44">(<argument pos:start="53:24" pos:end="53:28"><expr pos:start="53:24" pos:end="53:28"><name pos:start="53:24" pos:end="53:28">frame</name></expr></argument>, <argument pos:start="53:31" pos:end="53:40"><expr pos:start="53:31" pos:end="53:40"><name pos:start="53:31" pos:end="53:40">frame_addr</name></expr></argument>, <argument pos:start="53:43" pos:end="53:43"><expr pos:start="53:43" pos:end="53:43"><literal type="number" pos:start="53:43" pos:end="53:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:30"><expr pos:start="55:5" pos:end="55:29"><call pos:start="55:5" pos:end="55:29"><name pos:start="55:5" pos:end="55:13">force_sig</name><argument_list pos:start="55:14" pos:end="55:29">(<argument pos:start="55:15" pos:end="55:28"><expr pos:start="55:15" pos:end="55:28"><name pos:start="55:15" pos:end="55:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
