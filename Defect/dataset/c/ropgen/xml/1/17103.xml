<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17103.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:10">ff_pca</name><parameter_list pos:start="1:11" pos:end="1:61">(<parameter pos:start="1:12" pos:end="1:19"><decl pos:start="1:12" pos:end="1:19"><type pos:start="1:12" pos:end="1:19"><name pos:start="1:12" pos:end="1:14">PCA</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:19">pca</name></decl></parameter>, <parameter pos:start="1:22" pos:end="1:40"><decl pos:start="1:22" pos:end="1:40"><type pos:start="1:22" pos:end="1:40"><name pos:start="1:22" pos:end="1:27">double</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:40">eigenvector</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><name pos:start="1:43" pos:end="1:48">double</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:60">eigenvalue</name></decl></parameter>)</parameter_list><block pos:start="1:62" pos:end="185:1">{<block_content pos:start="3:5" pos:end="183:14">

    <decl_stmt pos:start="3:5" pos:end="3:22"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">j</name></decl>, <decl pos:start="3:15" pos:end="3:15"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:15" pos:end="3:15">k</name></decl>, <decl pos:start="3:18" pos:end="3:21"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:18" pos:end="3:21">pass</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:15">n</name><init pos:start="5:16" pos:end="5:23">= <expr pos:start="5:18" pos:end="5:23"><name pos:start="5:18" pos:end="5:23"><name pos:start="5:18" pos:end="5:20">pca</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:23">n</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">double</name></type> <name pos:start="7:12" pos:end="7:15"><name pos:start="7:12" pos:end="7:12">z</name><index pos:start="7:13" pos:end="7:15">[<expr pos:start="7:14" pos:end="7:14"><name pos:start="7:14" pos:end="7:14">n</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:47"><expr pos:start="11:5" pos:end="11:46"><call pos:start="11:5" pos:end="11:46"><name pos:start="11:5" pos:end="11:10">memset</name><argument_list pos:start="11:11" pos:end="11:46">(<argument pos:start="11:12" pos:end="11:22"><expr pos:start="11:12" pos:end="11:22"><name pos:start="11:12" pos:end="11:22">eigenvector</name></expr></argument>, <argument pos:start="11:25" pos:end="11:25"><expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr></argument>, <argument pos:start="11:28" pos:end="11:45"><expr pos:start="11:28" pos:end="11:45"><sizeof pos:start="11:28" pos:end="11:41">sizeof<argument_list pos:start="11:34" pos:end="11:41">(<argument pos:start="11:35" pos:end="11:40"><expr pos:start="11:35" pos:end="11:40"><name pos:start="11:35" pos:end="11:40">double</name></expr></argument>)</argument_list></sizeof><operator pos:start="11:42" pos:end="11:42">*</operator><name pos:start="11:43" pos:end="11:43">n</name><operator pos:start="11:44" pos:end="11:44">*</operator><name pos:start="11:45" pos:end="11:45">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="15:5" pos:end="35:5">for<control pos:start="15:8" pos:end="15:22">(<init pos:start="15:9" pos:end="15:12"><expr pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:9">j</name><operator pos:start="15:10" pos:end="15:10">=</operator><literal type="number" pos:start="15:11" pos:end="15:11">0</literal></expr>;</init> <condition pos:start="15:14" pos:end="15:17"><expr pos:start="15:14" pos:end="15:16"><name pos:start="15:14" pos:end="15:14">j</name><operator pos:start="15:15" pos:end="15:15">&lt;</operator><name pos:start="15:16" pos:end="15:16">n</name></expr>;</condition> <incr pos:start="15:19" pos:end="15:21"><expr pos:start="15:19" pos:end="15:21"><name pos:start="15:19" pos:end="15:19">j</name><operator pos:start="15:20" pos:end="15:21">++</operator></expr></incr>)</control><block pos:start="15:23" pos:end="35:5">{<block_content pos:start="17:9" pos:end="33:16">

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:11">pca</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:17">mean</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">j</name></expr>]</index></name> <operator pos:start="17:22" pos:end="17:23">/=</operator> <name pos:start="17:25" pos:end="17:34"><name pos:start="17:25" pos:end="17:27">pca</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:34">count</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:19">eigenvector</name><index pos:start="19:20" pos:end="19:28">[<expr pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:21">j</name> <operator pos:start="19:23" pos:end="19:23">+</operator> <name pos:start="19:25" pos:end="19:25">j</name><operator pos:start="19:26" pos:end="19:26">*</operator><name pos:start="19:27" pos:end="19:27">n</name></expr>]</index></name> <operator pos:start="19:30" pos:end="19:30">=</operator> <literal type="number" pos:start="19:32" pos:end="19:34">1.0</literal></expr>;</expr_stmt>

        <for pos:start="21:9" pos:end="29:9">for<control pos:start="21:12" pos:end="21:27">(<init pos:start="21:13" pos:end="21:16"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:13">i</name><operator pos:start="21:14" pos:end="21:14">=</operator><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>;</init> <condition pos:start="21:18" pos:end="21:22"><expr pos:start="21:18" pos:end="21:21"><name pos:start="21:18" pos:end="21:18">i</name><operator pos:start="21:19" pos:end="21:20">&lt;=</operator><name pos:start="21:21" pos:end="21:21">j</name></expr>;</condition> <incr pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:24">i</name><operator pos:start="21:25" pos:end="21:26">++</operator></expr></incr>)</control><block pos:start="21:28" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:64">

            <expr_stmt pos:start="23:13" pos:end="23:51"><expr pos:start="23:13" pos:end="23:50"><name pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:15">pca</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:27">covariance</name><index pos:start="23:28" pos:end="23:36">[<expr pos:start="23:29" pos:end="23:35"><name pos:start="23:29" pos:end="23:29">j</name> <operator pos:start="23:31" pos:end="23:31">+</operator> <name pos:start="23:33" pos:end="23:33">i</name><operator pos:start="23:34" pos:end="23:34">*</operator><name pos:start="23:35" pos:end="23:35">n</name></expr>]</index></name> <operator pos:start="23:38" pos:end="23:39">/=</operator> <name pos:start="23:41" pos:end="23:50"><name pos:start="23:41" pos:end="23:43">pca</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:50">count</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:68"><expr pos:start="25:13" pos:end="25:67"><name pos:start="25:13" pos:end="25:36"><name pos:start="25:13" pos:end="25:15">pca</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:27">covariance</name><index pos:start="25:28" pos:end="25:36">[<expr pos:start="25:29" pos:end="25:35"><name pos:start="25:29" pos:end="25:29">j</name> <operator pos:start="25:31" pos:end="25:31">+</operator> <name pos:start="25:33" pos:end="25:33">i</name><operator pos:start="25:34" pos:end="25:34">*</operator><name pos:start="25:35" pos:end="25:35">n</name></expr>]</index></name> <operator pos:start="25:38" pos:end="25:39">-=</operator> <name pos:start="25:41" pos:end="25:52"><name pos:start="25:41" pos:end="25:43">pca</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:49">mean</name><index pos:start="25:50" pos:end="25:52">[<expr pos:start="25:51" pos:end="25:51"><name pos:start="25:51" pos:end="25:51">i</name></expr>]</index></name> <operator pos:start="25:54" pos:end="25:54">*</operator> <name pos:start="25:56" pos:end="25:67"><name pos:start="25:56" pos:end="25:58">pca</name><operator pos:start="25:59" pos:end="25:60">-&gt;</operator><name pos:start="25:61" pos:end="25:64">mean</name><index pos:start="25:65" pos:end="25:67">[<expr pos:start="25:66" pos:end="25:66"><name pos:start="25:66" pos:end="25:66">j</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:64"><expr pos:start="27:13" pos:end="27:63"><name pos:start="27:13" pos:end="27:36"><name pos:start="27:13" pos:end="27:15">pca</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:27">covariance</name><index pos:start="27:28" pos:end="27:36">[<expr pos:start="27:29" pos:end="27:35"><name pos:start="27:29" pos:end="27:29">i</name> <operator pos:start="27:31" pos:end="27:31">+</operator> <name pos:start="27:33" pos:end="27:33">j</name><operator pos:start="27:34" pos:end="27:34">*</operator><name pos:start="27:35" pos:end="27:35">n</name></expr>]</index></name> <operator pos:start="27:38" pos:end="27:38">=</operator> <name pos:start="27:40" pos:end="27:63"><name pos:start="27:40" pos:end="27:42">pca</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:54">covariance</name><index pos:start="27:55" pos:end="27:63">[<expr pos:start="27:56" pos:end="27:62"><name pos:start="27:56" pos:end="27:56">j</name> <operator pos:start="27:58" pos:end="27:58">+</operator> <name pos:start="27:60" pos:end="27:60">i</name><operator pos:start="27:61" pos:end="27:61">*</operator><name pos:start="27:62" pos:end="27:62">n</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="31:9" pos:end="31:48"><expr pos:start="31:9" pos:end="31:47"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:18">eigenvalue</name><index pos:start="31:19" pos:end="31:21">[<expr pos:start="31:20" pos:end="31:20"><name pos:start="31:20" pos:end="31:20">j</name></expr>]</index></name><operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:47"><name pos:start="31:24" pos:end="31:26">pca</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:38">covariance</name><index pos:start="31:39" pos:end="31:47">[<expr pos:start="31:40" pos:end="31:46"><name pos:start="31:40" pos:end="31:40">j</name> <operator pos:start="31:42" pos:end="31:42">+</operator> <name pos:start="31:44" pos:end="31:44">j</name><operator pos:start="31:45" pos:end="31:45">*</operator><name pos:start="31:46" pos:end="31:46">n</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:16"><expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:12"><name pos:start="33:9" pos:end="33:9">z</name><index pos:start="33:10" pos:end="33:12">[<expr pos:start="33:11" pos:end="33:11"><name pos:start="33:11" pos:end="33:11">j</name></expr>]</index></name><operator pos:start="33:13" pos:end="33:13">=</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="39:5" pos:end="179:5">for<control pos:start="39:8" pos:end="39:34">(<init pos:start="39:9" pos:end="39:15"><expr pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:12">pass</name><operator pos:start="39:13" pos:end="39:13">=</operator><literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:26"><expr pos:start="39:17" pos:end="39:25"><name pos:start="39:17" pos:end="39:20">pass</name> <operator pos:start="39:22" pos:end="39:22">&lt;</operator> <literal type="number" pos:start="39:24" pos:end="39:25">50</literal></expr>;</condition> <incr pos:start="39:28" pos:end="39:33"><expr pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:31">pass</name><operator pos:start="39:32" pos:end="39:33">++</operator></expr></incr>)</control><block pos:start="39:35" pos:end="179:5">{<block_content pos:start="41:9" pos:end="177:9">

        <decl_stmt pos:start="41:9" pos:end="41:21"><decl pos:start="41:9" pos:end="41:20"><type pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:14">double</name></type> <name pos:start="41:16" pos:end="41:18">sum</name><init pos:start="41:19" pos:end="41:20">=<expr pos:start="41:20" pos:end="41:20"><literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="45:9" pos:end="49:54">for<control pos:start="45:12" pos:end="45:26">(<init pos:start="45:13" pos:end="45:16"><expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:13">i</name><operator pos:start="45:14" pos:end="45:14">=</operator><literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>;</init> <condition pos:start="45:18" pos:end="45:21"><expr pos:start="45:18" pos:end="45:20"><name pos:start="45:18" pos:end="45:18">i</name><operator pos:start="45:19" pos:end="45:19">&lt;</operator><name pos:start="45:20" pos:end="45:20">n</name></expr>;</condition> <incr pos:start="45:23" pos:end="45:25"><expr pos:start="45:23" pos:end="45:25"><name pos:start="45:23" pos:end="45:23">i</name><operator pos:start="45:24" pos:end="45:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:13" pos:end="49:54"><block_content pos:start="47:13" pos:end="49:54">

            <for pos:start="47:13" pos:end="49:54">for<control pos:start="47:16" pos:end="47:32">(<init pos:start="47:17" pos:end="47:22"><expr pos:start="47:17" pos:end="47:21"><name pos:start="47:17" pos:end="47:17">j</name><operator pos:start="47:18" pos:end="47:18">=</operator><name pos:start="47:19" pos:end="47:19">i</name><operator pos:start="47:20" pos:end="47:20">+</operator><literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr>;</init> <condition pos:start="47:24" pos:end="47:27"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:24">j</name><operator pos:start="47:25" pos:end="47:25">&lt;</operator><name pos:start="47:26" pos:end="47:26">n</name></expr>;</condition> <incr pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><name pos:start="47:29" pos:end="47:29">j</name><operator pos:start="47:30" pos:end="47:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:17" pos:end="49:54"><block_content pos:start="49:17" pos:end="49:54">

                <expr_stmt pos:start="49:17" pos:end="49:54"><expr pos:start="49:17" pos:end="49:53"><name pos:start="49:17" pos:end="49:19">sum</name> <operator pos:start="49:21" pos:end="49:22">+=</operator> <call pos:start="49:24" pos:end="49:53"><name pos:start="49:24" pos:end="49:27">fabs</name><argument_list pos:start="49:28" pos:end="49:53">(<argument pos:start="49:29" pos:end="49:52"><expr pos:start="49:29" pos:end="49:52"><name pos:start="49:29" pos:end="49:52"><name pos:start="49:29" pos:end="49:31">pca</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:43">covariance</name><index pos:start="49:44" pos:end="49:52">[<expr pos:start="49:45" pos:end="49:51"><name pos:start="49:45" pos:end="49:45">j</name> <operator pos:start="49:47" pos:end="49:47">+</operator> <name pos:start="49:49" pos:end="49:49">i</name><operator pos:start="49:50" pos:end="49:50">*</operator><name pos:start="49:51" pos:end="49:51">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



        <if_stmt pos:start="53:9" pos:end="89:9"><if pos:start="53:9" pos:end="89:9">if<condition pos:start="53:11" pos:end="53:20">(<expr pos:start="53:12" pos:end="53:19"><name pos:start="53:12" pos:end="53:14">sum</name> <operator pos:start="53:16" pos:end="53:17">==</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>)</condition><block pos:start="53:21" pos:end="89:9">{<block_content pos:start="55:13" pos:end="87:24">

            <for pos:start="55:13" pos:end="85:13">for<control pos:start="55:16" pos:end="55:30">(<init pos:start="55:17" pos:end="55:20"><expr pos:start="55:17" pos:end="55:19"><name pos:start="55:17" pos:end="55:17">i</name><operator pos:start="55:18" pos:end="55:18">=</operator><literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>;</init> <condition pos:start="55:22" pos:end="55:25"><expr pos:start="55:22" pos:end="55:24"><name pos:start="55:22" pos:end="55:22">i</name><operator pos:start="55:23" pos:end="55:23">&lt;</operator><name pos:start="55:24" pos:end="55:24">n</name></expr>;</condition> <incr pos:start="55:27" pos:end="55:29"><expr pos:start="55:27" pos:end="55:29"><name pos:start="55:27" pos:end="55:27">i</name><operator pos:start="55:28" pos:end="55:29">++</operator></expr></incr>)</control><block pos:start="55:31" pos:end="85:13">{<block_content pos:start="57:17" pos:end="83:17">

                <decl_stmt pos:start="57:17" pos:end="57:36"><decl pos:start="57:17" pos:end="57:35"><type pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:22">double</name></type> <name pos:start="57:24" pos:end="57:31">maxvalue</name><init pos:start="57:32" pos:end="57:35">= <expr pos:start="57:34" pos:end="57:35"><operator pos:start="57:34" pos:end="57:34">-</operator><literal type="number" pos:start="57:35" pos:end="57:35">1</literal></expr></init></decl>;</decl_stmt>

                <for pos:start="59:17" pos:end="69:17">for<control pos:start="59:20" pos:end="59:34">(<init pos:start="59:21" pos:end="59:24"><expr pos:start="59:21" pos:end="59:23"><name pos:start="59:21" pos:end="59:21">j</name><operator pos:start="59:22" pos:end="59:22">=</operator><name pos:start="59:23" pos:end="59:23">i</name></expr>;</init> <condition pos:start="59:26" pos:end="59:29"><expr pos:start="59:26" pos:end="59:28"><name pos:start="59:26" pos:end="59:26">j</name><operator pos:start="59:27" pos:end="59:27">&lt;</operator><name pos:start="59:28" pos:end="59:28">n</name></expr>;</condition> <incr pos:start="59:31" pos:end="59:33"><expr pos:start="59:31" pos:end="59:33"><name pos:start="59:31" pos:end="59:31">j</name><operator pos:start="59:32" pos:end="59:33">++</operator></expr></incr>)</control><block pos:start="59:35" pos:end="69:17">{<block_content pos:start="61:21" pos:end="67:21">

                    <if_stmt pos:start="61:21" pos:end="67:21"><if pos:start="61:21" pos:end="67:21">if<condition pos:start="61:23" pos:end="61:48">(<expr pos:start="61:24" pos:end="61:47"><name pos:start="61:24" pos:end="61:36"><name pos:start="61:24" pos:end="61:33">eigenvalue</name><index pos:start="61:34" pos:end="61:36">[<expr pos:start="61:35" pos:end="61:35"><name pos:start="61:35" pos:end="61:35">j</name></expr>]</index></name> <operator pos:start="61:38" pos:end="61:38">&gt;</operator> <name pos:start="61:40" pos:end="61:47">maxvalue</name></expr>)</condition><block pos:start="61:49" pos:end="67:21">{<block_content pos:start="63:25" pos:end="65:29">

                        <expr_stmt pos:start="63:25" pos:end="63:48"><expr pos:start="63:25" pos:end="63:47"><name pos:start="63:25" pos:end="63:32">maxvalue</name><operator pos:start="63:33" pos:end="63:33">=</operator> <name pos:start="63:35" pos:end="63:47"><name pos:start="63:35" pos:end="63:44">eigenvalue</name><index pos:start="63:45" pos:end="63:47">[<expr pos:start="63:46" pos:end="63:46"><name pos:start="63:46" pos:end="63:46">j</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="65:25" pos:end="65:29"><expr pos:start="65:25" pos:end="65:28"><name pos:start="65:25" pos:end="65:25">k</name><operator pos:start="65:26" pos:end="65:26">=</operator> <name pos:start="65:28" pos:end="65:28">j</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="71:17" pos:end="71:45"><expr pos:start="71:17" pos:end="71:44"><name pos:start="71:17" pos:end="71:29"><name pos:start="71:17" pos:end="71:26">eigenvalue</name><index pos:start="71:27" pos:end="71:29">[<expr pos:start="71:28" pos:end="71:28"><name pos:start="71:28" pos:end="71:28">k</name></expr>]</index></name><operator pos:start="71:30" pos:end="71:30">=</operator> <name pos:start="71:32" pos:end="71:44"><name pos:start="71:32" pos:end="71:41">eigenvalue</name><index pos:start="71:42" pos:end="71:44">[<expr pos:start="71:43" pos:end="71:43"><name pos:start="71:43" pos:end="71:43">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:40"><expr pos:start="73:17" pos:end="73:39"><name pos:start="73:17" pos:end="73:29"><name pos:start="73:17" pos:end="73:26">eigenvalue</name><index pos:start="73:27" pos:end="73:29">[<expr pos:start="73:28" pos:end="73:28"><name pos:start="73:28" pos:end="73:28">i</name></expr>]</index></name><operator pos:start="73:30" pos:end="73:30">=</operator> <name pos:start="73:32" pos:end="73:39">maxvalue</name></expr>;</expr_stmt>

                <for pos:start="75:17" pos:end="83:17">for<control pos:start="75:20" pos:end="75:34">(<init pos:start="75:21" pos:end="75:24"><expr pos:start="75:21" pos:end="75:23"><name pos:start="75:21" pos:end="75:21">j</name><operator pos:start="75:22" pos:end="75:22">=</operator><literal type="number" pos:start="75:23" pos:end="75:23">0</literal></expr>;</init> <condition pos:start="75:26" pos:end="75:29"><expr pos:start="75:26" pos:end="75:28"><name pos:start="75:26" pos:end="75:26">j</name><operator pos:start="75:27" pos:end="75:27">&lt;</operator><name pos:start="75:28" pos:end="75:28">n</name></expr>;</condition> <incr pos:start="75:31" pos:end="75:33"><expr pos:start="75:31" pos:end="75:33"><name pos:start="75:31" pos:end="75:31">j</name><operator pos:start="75:32" pos:end="75:33">++</operator></expr></incr>)</control><block pos:start="75:35" pos:end="83:17">{<block_content pos:start="77:21" pos:end="81:46">

                    <decl_stmt pos:start="77:21" pos:end="77:53"><decl pos:start="77:21" pos:end="77:52"><type pos:start="77:21" pos:end="77:26"><name pos:start="77:21" pos:end="77:26">double</name></type> <name pos:start="77:28" pos:end="77:30">tmp</name><init pos:start="77:31" pos:end="77:52">= <expr pos:start="77:33" pos:end="77:52"><name pos:start="77:33" pos:end="77:52"><name pos:start="77:33" pos:end="77:43">eigenvector</name><index pos:start="77:44" pos:end="77:52">[<expr pos:start="77:45" pos:end="77:51"><name pos:start="77:45" pos:end="77:45">k</name> <operator pos:start="77:47" pos:end="77:47">+</operator> <name pos:start="77:49" pos:end="77:49">j</name><operator pos:start="77:50" pos:end="77:50">*</operator><name pos:start="77:51" pos:end="77:51">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:63"><expr pos:start="79:21" pos:end="79:62"><name pos:start="79:21" pos:end="79:40"><name pos:start="79:21" pos:end="79:31">eigenvector</name><index pos:start="79:32" pos:end="79:40">[<expr pos:start="79:33" pos:end="79:39"><name pos:start="79:33" pos:end="79:33">k</name> <operator pos:start="79:35" pos:end="79:35">+</operator> <name pos:start="79:37" pos:end="79:37">j</name><operator pos:start="79:38" pos:end="79:38">*</operator><name pos:start="79:39" pos:end="79:39">n</name></expr>]</index></name><operator pos:start="79:41" pos:end="79:41">=</operator> <name pos:start="79:43" pos:end="79:62"><name pos:start="79:43" pos:end="79:53">eigenvector</name><index pos:start="79:54" pos:end="79:62">[<expr pos:start="79:55" pos:end="79:61"><name pos:start="79:55" pos:end="79:55">i</name> <operator pos:start="79:57" pos:end="79:57">+</operator> <name pos:start="79:59" pos:end="79:59">j</name><operator pos:start="79:60" pos:end="79:60">*</operator><name pos:start="79:61" pos:end="79:61">n</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:46"><expr pos:start="81:21" pos:end="81:45"><name pos:start="81:21" pos:end="81:40"><name pos:start="81:21" pos:end="81:31">eigenvector</name><index pos:start="81:32" pos:end="81:40">[<expr pos:start="81:33" pos:end="81:39"><name pos:start="81:33" pos:end="81:33">i</name> <operator pos:start="81:35" pos:end="81:35">+</operator> <name pos:start="81:37" pos:end="81:37">j</name><operator pos:start="81:38" pos:end="81:38">*</operator><name pos:start="81:39" pos:end="81:39">n</name></expr>]</index></name><operator pos:start="81:41" pos:end="81:41">=</operator> <name pos:start="81:43" pos:end="81:45">tmp</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <return pos:start="87:13" pos:end="87:24">return <expr pos:start="87:20" pos:end="87:23"><name pos:start="87:20" pos:end="87:23">pass</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <for pos:start="93:9" pos:end="169:9">for<control pos:start="93:12" pos:end="93:26">(<init pos:start="93:13" pos:end="93:16"><expr pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:13">i</name><operator pos:start="93:14" pos:end="93:14">=</operator><literal type="number" pos:start="93:15" pos:end="93:15">0</literal></expr>;</init> <condition pos:start="93:18" pos:end="93:21"><expr pos:start="93:18" pos:end="93:20"><name pos:start="93:18" pos:end="93:18">i</name><operator pos:start="93:19" pos:end="93:19">&lt;</operator><name pos:start="93:20" pos:end="93:20">n</name></expr>;</condition> <incr pos:start="93:23" pos:end="93:25"><expr pos:start="93:23" pos:end="93:25"><name pos:start="93:23" pos:end="93:23">i</name><operator pos:start="93:24" pos:end="93:25">++</operator></expr></incr>)</control><block pos:start="93:27" pos:end="169:9">{<block_content pos:start="95:13" pos:end="167:13">

            <for pos:start="95:13" pos:end="167:13">for<control pos:start="95:16" pos:end="95:32">(<init pos:start="95:17" pos:end="95:22"><expr pos:start="95:17" pos:end="95:21"><name pos:start="95:17" pos:end="95:17">j</name><operator pos:start="95:18" pos:end="95:18">=</operator><name pos:start="95:19" pos:end="95:19">i</name><operator pos:start="95:20" pos:end="95:20">+</operator><literal type="number" pos:start="95:21" pos:end="95:21">1</literal></expr>;</init> <condition pos:start="95:24" pos:end="95:27"><expr pos:start="95:24" pos:end="95:26"><name pos:start="95:24" pos:end="95:24">j</name><operator pos:start="95:25" pos:end="95:25">&lt;</operator><name pos:start="95:26" pos:end="95:26">n</name></expr>;</condition> <incr pos:start="95:29" pos:end="95:31"><expr pos:start="95:29" pos:end="95:31"><name pos:start="95:29" pos:end="95:29">j</name><operator pos:start="95:30" pos:end="95:31">++</operator></expr></incr>)</control><block pos:start="95:33" pos:end="167:13">{<block_content pos:start="97:17" pos:end="165:45">

                <decl_stmt pos:start="97:17" pos:end="97:55"><decl pos:start="97:17" pos:end="97:54"><type pos:start="97:17" pos:end="97:22"><name pos:start="97:17" pos:end="97:22">double</name></type> <name pos:start="97:24" pos:end="97:28">covar</name><init pos:start="97:29" pos:end="97:54">= <expr pos:start="97:31" pos:end="97:54"><name pos:start="97:31" pos:end="97:54"><name pos:start="97:31" pos:end="97:33">pca</name><operator pos:start="97:34" pos:end="97:35">-&gt;</operator><name pos:start="97:36" pos:end="97:45">covariance</name><index pos:start="97:46" pos:end="97:54">[<expr pos:start="97:47" pos:end="97:53"><name pos:start="97:47" pos:end="97:47">j</name> <operator pos:start="97:49" pos:end="97:49">+</operator> <name pos:start="97:51" pos:end="97:51">i</name><operator pos:start="97:52" pos:end="97:52">*</operator><name pos:start="97:53" pos:end="97:53">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="99:17" pos:end="99:42"><decl pos:start="99:17" pos:end="99:24"><type pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:22">double</name></type> <name pos:start="99:24" pos:end="99:24">t</name></decl>,<decl pos:start="99:26" pos:end="99:26"><type ref="prev" pos:start="99:17" pos:end="99:22"/><name pos:start="99:26" pos:end="99:26">c</name></decl>,<decl pos:start="99:28" pos:end="99:28"><type ref="prev" pos:start="99:17" pos:end="99:22"/><name pos:start="99:28" pos:end="99:28">s</name></decl>,<decl pos:start="99:30" pos:end="99:32"><type ref="prev" pos:start="99:17" pos:end="99:22"/><name pos:start="99:30" pos:end="99:32">tau</name></decl>,<decl pos:start="99:34" pos:end="99:38"><type ref="prev" pos:start="99:17" pos:end="99:22"/><name pos:start="99:34" pos:end="99:38">theta</name></decl>, <decl pos:start="99:41" pos:end="99:41"><type ref="prev" pos:start="99:17" pos:end="99:22"/><name pos:start="99:41" pos:end="99:41">h</name></decl>;</decl_stmt>



                <if_stmt pos:start="103:17" pos:end="105:29"><if pos:start="103:17" pos:end="105:29">if<condition pos:start="103:19" pos:end="103:59">(<expr pos:start="103:20" pos:end="103:58"><name pos:start="103:20" pos:end="103:23">pass</name> <operator pos:start="103:25" pos:end="103:25">&lt;</operator> <literal type="number" pos:start="103:27" pos:end="103:27">3</literal> <operator pos:start="103:29" pos:end="103:30">&amp;&amp;</operator> <call pos:start="103:32" pos:end="103:42"><name pos:start="103:32" pos:end="103:35">fabs</name><argument_list pos:start="103:36" pos:end="103:42">(<argument pos:start="103:37" pos:end="103:41"><expr pos:start="103:37" pos:end="103:41"><name pos:start="103:37" pos:end="103:41">covar</name></expr></argument>)</argument_list></call> <operator pos:start="103:44" pos:end="103:44">&lt;</operator> <name pos:start="103:46" pos:end="103:48">sum</name> <operator pos:start="103:50" pos:end="103:50">/</operator> <operator pos:start="103:52" pos:end="103:52">(</operator><literal type="number" pos:start="103:53" pos:end="103:53">5</literal><operator pos:start="103:54" pos:end="103:54">*</operator><name pos:start="103:55" pos:end="103:55">n</name><operator pos:start="103:56" pos:end="103:56">*</operator><name pos:start="103:57" pos:end="103:57">n</name><operator pos:start="103:58" pos:end="103:58">)</operator></expr>)</condition><block type="pseudo" pos:start="105:21" pos:end="105:29"><block_content pos:start="105:21" pos:end="105:29"> <comment type="line" pos:start="103:61" pos:end="103:80">//FIXME why pass &lt; 3</comment>

                    <continue pos:start="105:21" pos:end="105:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="107:17" pos:end="109:29"><if pos:start="107:17" pos:end="109:29">if<condition pos:start="107:19" pos:end="107:38">(<expr pos:start="107:20" pos:end="107:37"><call pos:start="107:20" pos:end="107:30"><name pos:start="107:20" pos:end="107:23">fabs</name><argument_list pos:start="107:24" pos:end="107:30">(<argument pos:start="107:25" pos:end="107:29"><expr pos:start="107:25" pos:end="107:29"><name pos:start="107:25" pos:end="107:29">covar</name></expr></argument>)</argument_list></call> <operator pos:start="107:32" pos:end="107:33">==</operator> <literal type="number" pos:start="107:35" pos:end="107:37">0.0</literal></expr>)</condition><block type="pseudo" pos:start="109:21" pos:end="109:29"><block_content pos:start="109:21" pos:end="109:29"> <comment type="line" pos:start="107:40" pos:end="107:65">//FIXME shouldnt be needed</comment>

                    <continue pos:start="109:21" pos:end="109:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="111:17" pos:end="117:17"><if pos:start="111:17" pos:end="117:17">if<condition pos:start="111:19" pos:end="111:124">(<expr pos:start="111:20" pos:end="111:123"><name pos:start="111:20" pos:end="111:23">pass</name> <operator pos:start="111:25" pos:end="111:26">&gt;=</operator><literal type="number" pos:start="111:27" pos:end="111:27">3</literal> <operator pos:start="111:29" pos:end="111:30">&amp;&amp;</operator> <call pos:start="111:32" pos:end="111:63"><name pos:start="111:32" pos:end="111:35">fabs</name><argument_list pos:start="111:36" pos:end="111:63">(<argument pos:start="111:37" pos:end="111:62"><expr pos:start="111:37" pos:end="111:62"><operator pos:start="111:37" pos:end="111:37">(</operator><name pos:start="111:38" pos:end="111:50"><name pos:start="111:38" pos:end="111:47">eigenvalue</name><index pos:start="111:48" pos:end="111:50">[<expr pos:start="111:49" pos:end="111:49"><name pos:start="111:49" pos:end="111:49">j</name></expr>]</index></name><operator pos:start="111:51" pos:end="111:51">+</operator><name pos:start="111:52" pos:end="111:55"><name pos:start="111:52" pos:end="111:52">z</name><index pos:start="111:53" pos:end="111:55">[<expr pos:start="111:54" pos:end="111:54"><name pos:start="111:54" pos:end="111:54">j</name></expr>]</index></name><operator pos:start="111:56" pos:end="111:56">)</operator><operator pos:start="111:57" pos:end="111:57">/</operator><name pos:start="111:58" pos:end="111:62">covar</name></expr></argument>)</argument_list></call> <operator pos:start="111:65" pos:end="111:65">&gt;</operator> <operator pos:start="111:67" pos:end="111:67">(</operator><literal type="number" pos:start="111:68" pos:end="111:70">1LL</literal><operator pos:start="111:71" pos:end="111:72">&lt;&lt;</operator><literal type="number" pos:start="111:73" pos:end="111:74">32</literal><operator pos:start="111:75" pos:end="111:75">)</operator> <operator pos:start="111:77" pos:end="111:78">&amp;&amp;</operator> <call pos:start="111:80" pos:end="111:111"><name pos:start="111:80" pos:end="111:83">fabs</name><argument_list pos:start="111:84" pos:end="111:111">(<argument pos:start="111:85" pos:end="111:110"><expr pos:start="111:85" pos:end="111:110"><operator pos:start="111:85" pos:end="111:85">(</operator><name pos:start="111:86" pos:end="111:98"><name pos:start="111:86" pos:end="111:95">eigenvalue</name><index pos:start="111:96" pos:end="111:98">[<expr pos:start="111:97" pos:end="111:97"><name pos:start="111:97" pos:end="111:97">i</name></expr>]</index></name><operator pos:start="111:99" pos:end="111:99">+</operator><name pos:start="111:100" pos:end="111:103"><name pos:start="111:100" pos:end="111:100">z</name><index pos:start="111:101" pos:end="111:103">[<expr pos:start="111:102" pos:end="111:102"><name pos:start="111:102" pos:end="111:102">i</name></expr>]</index></name><operator pos:start="111:104" pos:end="111:104">)</operator><operator pos:start="111:105" pos:end="111:105">/</operator><name pos:start="111:106" pos:end="111:110">covar</name></expr></argument>)</argument_list></call> <operator pos:start="111:113" pos:end="111:113">&gt;</operator> <operator pos:start="111:115" pos:end="111:115">(</operator><literal type="number" pos:start="111:116" pos:end="111:118">1LL</literal><operator pos:start="111:119" pos:end="111:120">&lt;&lt;</operator><literal type="number" pos:start="111:121" pos:end="111:122">32</literal><operator pos:start="111:123" pos:end="111:123">)</operator></expr>)</condition><block pos:start="111:125" pos:end="117:17">{<block_content pos:start="113:21" pos:end="115:29">

                    <expr_stmt pos:start="113:21" pos:end="113:49"><expr pos:start="113:21" pos:end="113:48"><name pos:start="113:21" pos:end="113:44"><name pos:start="113:21" pos:end="113:23">pca</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:35">covariance</name><index pos:start="113:36" pos:end="113:44">[<expr pos:start="113:37" pos:end="113:43"><name pos:start="113:37" pos:end="113:37">j</name> <operator pos:start="113:39" pos:end="113:39">+</operator> <name pos:start="113:41" pos:end="113:41">i</name><operator pos:start="113:42" pos:end="113:42">*</operator><name pos:start="113:43" pos:end="113:43">n</name></expr>]</index></name><operator pos:start="113:45" pos:end="113:45">=</operator><literal type="number" pos:start="113:46" pos:end="113:48">0.0</literal></expr>;</expr_stmt>

                    <continue pos:start="115:21" pos:end="115:29">continue;</continue>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="121:17" pos:end="121:63"><expr pos:start="121:17" pos:end="121:62"><name pos:start="121:17" pos:end="121:17">h</name><operator pos:start="121:18" pos:end="121:18">=</operator> <operator pos:start="121:20" pos:end="121:20">(</operator><name pos:start="121:21" pos:end="121:33"><name pos:start="121:21" pos:end="121:30">eigenvalue</name><index pos:start="121:31" pos:end="121:33">[<expr pos:start="121:32" pos:end="121:32"><name pos:start="121:32" pos:end="121:32">j</name></expr>]</index></name><operator pos:start="121:34" pos:end="121:34">+</operator><name pos:start="121:35" pos:end="121:38"><name pos:start="121:35" pos:end="121:35">z</name><index pos:start="121:36" pos:end="121:38">[<expr pos:start="121:37" pos:end="121:37"><name pos:start="121:37" pos:end="121:37">j</name></expr>]</index></name><operator pos:start="121:39" pos:end="121:39">)</operator> <operator pos:start="121:41" pos:end="121:41">-</operator> <operator pos:start="121:43" pos:end="121:43">(</operator><name pos:start="121:44" pos:end="121:56"><name pos:start="121:44" pos:end="121:53">eigenvalue</name><index pos:start="121:54" pos:end="121:56">[<expr pos:start="121:55" pos:end="121:55"><name pos:start="121:55" pos:end="121:55">i</name></expr>]</index></name><operator pos:start="121:57" pos:end="121:57">+</operator><name pos:start="121:58" pos:end="121:61"><name pos:start="121:58" pos:end="121:58">z</name><index pos:start="121:59" pos:end="121:61">[<expr pos:start="121:60" pos:end="121:60"><name pos:start="121:60" pos:end="121:60">i</name></expr>]</index></name><operator pos:start="121:62" pos:end="121:62">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:34"><expr pos:start="123:17" pos:end="123:33"><name pos:start="123:17" pos:end="123:21">theta</name><operator pos:start="123:22" pos:end="123:22">=</operator><literal type="number" pos:start="123:23" pos:end="123:25">0.5</literal><operator pos:start="123:26" pos:end="123:26">*</operator><name pos:start="123:27" pos:end="123:27">h</name><operator pos:start="123:28" pos:end="123:28">/</operator><name pos:start="123:29" pos:end="123:33">covar</name></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:58"><expr pos:start="125:17" pos:end="125:57"><name pos:start="125:17" pos:end="125:17">t</name><operator pos:start="125:18" pos:end="125:18">=</operator><literal type="number" pos:start="125:19" pos:end="125:21">1.0</literal><operator pos:start="125:22" pos:end="125:22">/</operator><operator pos:start="125:23" pos:end="125:23">(</operator><call pos:start="125:24" pos:end="125:34"><name pos:start="125:24" pos:end="125:27">fabs</name><argument_list pos:start="125:28" pos:end="125:34">(<argument pos:start="125:29" pos:end="125:33"><expr pos:start="125:29" pos:end="125:33"><name pos:start="125:29" pos:end="125:33">theta</name></expr></argument>)</argument_list></call><operator pos:start="125:35" pos:end="125:35">+</operator><call pos:start="125:36" pos:end="125:56"><name pos:start="125:36" pos:end="125:39">sqrt</name><argument_list pos:start="125:40" pos:end="125:56">(<argument pos:start="125:41" pos:end="125:55"><expr pos:start="125:41" pos:end="125:55"><literal type="number" pos:start="125:41" pos:end="125:44">1.0</literal><operator pos:start="125:44" pos:end="125:44">+</operator><name pos:start="125:45" pos:end="125:49">theta</name><operator pos:start="125:50" pos:end="125:50">*</operator><name pos:start="125:51" pos:end="125:55">theta</name></expr></argument>)</argument_list></call><operator pos:start="125:57" pos:end="125:57">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="127:17" pos:end="127:39"><if pos:start="127:17" pos:end="127:39">if<condition pos:start="127:19" pos:end="127:31">(<expr pos:start="127:20" pos:end="127:30"><name pos:start="127:20" pos:end="127:24">theta</name> <operator pos:start="127:26" pos:end="127:26">&lt;</operator> <literal type="number" pos:start="127:28" pos:end="127:30">0.0</literal></expr>)</condition><block type="pseudo" pos:start="127:33" pos:end="127:39"><block_content pos:start="127:33" pos:end="127:39"> <expr_stmt pos:start="127:33" pos:end="127:39"><expr pos:start="127:33" pos:end="127:38"><name pos:start="127:33" pos:end="127:33">t</name> <operator pos:start="127:35" pos:end="127:35">=</operator> <operator pos:start="127:37" pos:end="127:37">-</operator><name pos:start="127:38" pos:end="127:38">t</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="131:17" pos:end="131:34"><expr pos:start="131:17" pos:end="131:33"><name pos:start="131:17" pos:end="131:17">c</name><operator pos:start="131:18" pos:end="131:18">=</operator><literal type="number" pos:start="131:19" pos:end="131:21">1.0</literal><operator pos:start="131:22" pos:end="131:22">/</operator><call pos:start="131:23" pos:end="131:33"><name pos:start="131:23" pos:end="131:26">sqrt</name><argument_list pos:start="131:27" pos:end="131:33">(<argument pos:start="131:28" pos:end="131:32"><expr pos:start="131:28" pos:end="131:32"><literal type="number" pos:start="131:28" pos:end="131:29">1</literal><operator pos:start="131:29" pos:end="131:29">+</operator><name pos:start="131:30" pos:end="131:30">t</name><operator pos:start="131:31" pos:end="131:31">*</operator><name pos:start="131:32" pos:end="131:32">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:22"><expr pos:start="133:17" pos:end="133:21"><name pos:start="133:17" pos:end="133:17">s</name><operator pos:start="133:18" pos:end="133:18">=</operator><name pos:start="133:19" pos:end="133:19">t</name><operator pos:start="133:20" pos:end="133:20">*</operator><name pos:start="133:21" pos:end="133:21">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:30"><expr pos:start="135:17" pos:end="135:29"><name pos:start="135:17" pos:end="135:19">tau</name><operator pos:start="135:20" pos:end="135:20">=</operator><name pos:start="135:21" pos:end="135:21">s</name><operator pos:start="135:22" pos:end="135:22">/</operator><operator pos:start="135:23" pos:end="135:23">(</operator><literal type="number" pos:start="135:24" pos:end="135:27">1.0</literal><operator pos:start="135:27" pos:end="135:27">+</operator><name pos:start="135:28" pos:end="135:28">c</name><operator pos:start="135:29" pos:end="135:29">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:32"><expr pos:start="137:17" pos:end="137:31"><name pos:start="137:17" pos:end="137:20"><name pos:start="137:17" pos:end="137:17">z</name><index pos:start="137:18" pos:end="137:20">[<expr pos:start="137:19" pos:end="137:19"><name pos:start="137:19" pos:end="137:19">i</name></expr>]</index></name> <operator pos:start="137:22" pos:end="137:23">-=</operator> <name pos:start="137:25" pos:end="137:25">t</name><operator pos:start="137:26" pos:end="137:26">*</operator><name pos:start="137:27" pos:end="137:31">covar</name></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="152:0"><expr pos:start="139:17" pos:end="139:31"><name pos:start="139:17" pos:end="139:20"><name pos:start="139:17" pos:end="139:17">z</name><index pos:start="139:18" pos:end="139:20">[<expr pos:start="139:19" pos:end="139:19"><name pos:start="139:19" pos:end="139:19">j</name></expr>]</index></name> <operator pos:start="139:22" pos:end="139:23">+=</operator> <name pos:start="139:25" pos:end="139:25">t</name><operator pos:start="139:26" pos:end="139:26">*</operator><name pos:start="139:27" pos:end="139:31">covar</name></expr>;</expr_stmt>



<cpp:define pos:start="143:1" pos:end="151:31">#<cpp:directive pos:start="143:2" pos:end="143:7">define</cpp:directive> <cpp:macro pos:start="143:9" pos:end="143:25"><name pos:start="143:9" pos:end="143:14">ROTATE</name><parameter_list pos:start="143:15" pos:end="143:25">(<parameter pos:start="143:16" pos:end="143:16"><type pos:start="143:16" pos:end="143:16"><name pos:start="143:16" pos:end="143:16">a</name></type></parameter>,<parameter pos:start="143:18" pos:end="143:18"><type pos:start="143:18" pos:end="143:18"><name pos:start="143:18" pos:end="143:18">i</name></type></parameter>,<parameter pos:start="143:20" pos:end="143:20"><type pos:start="143:20" pos:end="143:20"><name pos:start="143:20" pos:end="143:20">j</name></type></parameter>,<parameter pos:start="143:22" pos:end="143:22"><type pos:start="143:22" pos:end="143:22"><name pos:start="143:22" pos:end="143:22">k</name></type></parameter>,<parameter pos:start="143:24" pos:end="143:24"><type pos:start="143:24" pos:end="143:24"><name pos:start="143:24" pos:end="143:24">l</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="143:27" pos:end="151:31">{\

    double g=a[j + i*n];\

    double h=a[l + k*n];\

    a[j + i*n]=g-s*(h+g*tau);\

    a[l + k*n]=h+s*(g-h*tau); }</cpp:value></cpp:define>

                <for pos:start="153:17" pos:end="163:17">for<control pos:start="153:20" pos:end="153:34">(<init pos:start="153:21" pos:end="153:24"><expr pos:start="153:21" pos:end="153:23"><name pos:start="153:21" pos:end="153:21">k</name><operator pos:start="153:22" pos:end="153:22">=</operator><literal type="number" pos:start="153:23" pos:end="153:23">0</literal></expr>;</init> <condition pos:start="153:26" pos:end="153:29"><expr pos:start="153:26" pos:end="153:28"><name pos:start="153:26" pos:end="153:26">k</name><operator pos:start="153:27" pos:end="153:27">&lt;</operator><name pos:start="153:28" pos:end="153:28">n</name></expr>;</condition> <incr pos:start="153:31" pos:end="153:33"><expr pos:start="153:31" pos:end="153:33"><name pos:start="153:31" pos:end="153:31">k</name><operator pos:start="153:32" pos:end="153:33">++</operator></expr></incr>)</control> <block pos:start="153:36" pos:end="163:17">{<block_content pos:start="155:21" pos:end="161:47">

                    <if_stmt pos:start="155:21" pos:end="159:21"><if pos:start="155:21" pos:end="159:21">if<condition pos:start="155:23" pos:end="155:36">(<expr pos:start="155:24" pos:end="155:35"><name pos:start="155:24" pos:end="155:24">k</name><operator pos:start="155:25" pos:end="155:26">!=</operator><name pos:start="155:27" pos:end="155:27">i</name> <operator pos:start="155:29" pos:end="155:30">&amp;&amp;</operator> <name pos:start="155:32" pos:end="155:32">k</name><operator pos:start="155:33" pos:end="155:34">!=</operator><name pos:start="155:35" pos:end="155:35">j</name></expr>)</condition><block pos:start="155:37" pos:end="159:21">{<block_content pos:start="157:25" pos:end="157:91">

                        <macro pos:start="157:25" pos:end="157:91"><name pos:start="157:25" pos:end="157:30">ROTATE</name><argument_list pos:start="157:31" pos:end="157:91">(<argument pos:start="157:32" pos:end="157:46">pca-&gt;covariance</argument>,<argument pos:start="157:48" pos:end="157:57">FFMIN(k,i)</argument>,<argument pos:start="157:59" pos:end="157:68">FFMAX(k,i)</argument>,<argument pos:start="157:70" pos:end="157:79">FFMIN(k,j)</argument>,<argument pos:start="157:81" pos:end="157:90">FFMAX(k,j)</argument>)</argument_list></macro>

                    </block_content>}</block></if></if_stmt>

                    <macro pos:start="161:21" pos:end="161:47"><name pos:start="161:21" pos:end="161:26">ROTATE</name><argument_list pos:start="161:27" pos:end="161:47">(<argument pos:start="161:28" pos:end="161:38">eigenvector</argument>,<argument pos:start="161:40" pos:end="161:40">k</argument>,<argument pos:start="161:42" pos:end="161:42">i</argument>,<argument pos:start="161:44" pos:end="161:44">k</argument>,<argument pos:start="161:46" pos:end="161:46">j</argument>)</argument_list></macro>

                </block_content>}</block></for>

                <expr_stmt pos:start="165:17" pos:end="165:45"><expr pos:start="165:17" pos:end="165:44"><name pos:start="165:17" pos:end="165:40"><name pos:start="165:17" pos:end="165:19">pca</name><operator pos:start="165:20" pos:end="165:21">-&gt;</operator><name pos:start="165:22" pos:end="165:31">covariance</name><index pos:start="165:32" pos:end="165:40">[<expr pos:start="165:33" pos:end="165:39"><name pos:start="165:33" pos:end="165:33">j</name> <operator pos:start="165:35" pos:end="165:35">+</operator> <name pos:start="165:37" pos:end="165:37">i</name><operator pos:start="165:38" pos:end="165:38">*</operator><name pos:start="165:39" pos:end="165:39">n</name></expr>]</index></name><operator pos:start="165:41" pos:end="165:41">=</operator><literal type="number" pos:start="165:42" pos:end="165:44">0.0</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <for pos:start="171:9" pos:end="177:9">for <control pos:start="171:13" pos:end="171:27">(<init pos:start="171:14" pos:end="171:17"><expr pos:start="171:14" pos:end="171:16"><name pos:start="171:14" pos:end="171:14">i</name><operator pos:start="171:15" pos:end="171:15">=</operator><literal type="number" pos:start="171:16" pos:end="171:16">0</literal></expr>;</init> <condition pos:start="171:19" pos:end="171:22"><expr pos:start="171:19" pos:end="171:21"><name pos:start="171:19" pos:end="171:19">i</name><operator pos:start="171:20" pos:end="171:20">&lt;</operator><name pos:start="171:21" pos:end="171:21">n</name></expr>;</condition> <incr pos:start="171:24" pos:end="171:26"><expr pos:start="171:24" pos:end="171:26"><name pos:start="171:24" pos:end="171:24">i</name><operator pos:start="171:25" pos:end="171:26">++</operator></expr></incr>)</control> <block pos:start="171:29" pos:end="177:9">{<block_content pos:start="173:13" pos:end="175:21">

            <expr_stmt pos:start="173:13" pos:end="173:34"><expr pos:start="173:13" pos:end="173:33"><name pos:start="173:13" pos:end="173:25"><name pos:start="173:13" pos:end="173:22">eigenvalue</name><index pos:start="173:23" pos:end="173:25">[<expr pos:start="173:24" pos:end="173:24"><name pos:start="173:24" pos:end="173:24">i</name></expr>]</index></name> <operator pos:start="173:27" pos:end="173:28">+=</operator> <name pos:start="173:30" pos:end="173:33"><name pos:start="173:30" pos:end="173:30">z</name><index pos:start="173:31" pos:end="173:33">[<expr pos:start="173:32" pos:end="173:32"><name pos:start="173:32" pos:end="173:32">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:21"><expr pos:start="175:13" pos:end="175:20"><name pos:start="175:13" pos:end="175:16"><name pos:start="175:13" pos:end="175:13">z</name><index pos:start="175:14" pos:end="175:16">[<expr pos:start="175:15" pos:end="175:15"><name pos:start="175:15" pos:end="175:15">i</name></expr>]</index></name><operator pos:start="175:17" pos:end="175:17">=</operator><literal type="number" pos:start="175:18" pos:end="175:20">0.0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="183:5" pos:end="183:14">return <expr pos:start="183:12" pos:end="183:13"><operator pos:start="183:12" pos:end="183:12">-</operator><literal type="number" pos:start="183:13" pos:end="183:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
