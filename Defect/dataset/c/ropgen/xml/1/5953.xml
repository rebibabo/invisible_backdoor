<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5953.c" pos:tabs="8"><function pos:start="1:1" pos:end="211:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">matroska_parse_laces</name><parameter_list pos:start="1:32" pos:end="5:64">(<parameter pos:start="1:33" pos:end="1:62"><decl pos:start="1:33" pos:end="1:62"><type pos:start="1:33" pos:end="1:62"><name pos:start="1:33" pos:end="1:52">MatroskaDemuxContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:62">matroska</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:77"><decl pos:start="1:65" pos:end="1:77"><type pos:start="1:65" pos:end="1:77"><name pos:start="1:65" pos:end="1:71">uint8_t</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier><modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:77">buf</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:45"><decl pos:start="3:33" pos:end="3:45"><type pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:35">int</name><modifier pos:start="3:36" pos:end="3:36">*</modifier></type> <name pos:start="3:38" pos:end="3:45">buf_size</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:55"><decl pos:start="3:48" pos:end="3:55"><type pos:start="3:48" pos:end="3:55"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:55">type</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:51"><decl pos:start="5:33" pos:end="5:51"><type pos:start="5:33" pos:end="5:51"><name pos:start="5:33" pos:end="5:40">uint32_t</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier><modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:51">lace_buf</name></decl></parameter>, <parameter pos:start="5:54" pos:end="5:63"><decl pos:start="5:54" pos:end="5:63"><type pos:start="5:54" pos:end="5:63"><name pos:start="5:54" pos:end="5:56">int</name> <modifier pos:start="5:58" pos:end="5:58">*</modifier></type><name pos:start="5:59" pos:end="5:63">laces</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="211:1">{<block_content pos:start="9:5" pos:end="209:15">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">res</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">n</name></decl>, <decl pos:start="9:21" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:24">size</name> <init pos:start="9:26" pos:end="9:36">= <expr pos:start="9:28" pos:end="9:36"><operator pos:start="9:28" pos:end="9:28">*</operator><name pos:start="9:29" pos:end="9:36">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:17">data</name> <init pos:start="11:19" pos:end="11:24">= <expr pos:start="11:21" pos:end="11:24"><operator pos:start="11:21" pos:end="11:21">*</operator><name pos:start="11:22" pos:end="11:24">buf</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint32_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:23">lace_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="33:5"><if pos:start="17:5" pos:end="33:5">if <condition pos:start="17:8" pos:end="17:14">(<expr pos:start="17:9" pos:end="17:13"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:13">type</name></expr>)</condition> <block pos:start="17:16" pos:end="33:5">{<block_content pos:start="19:9" pos:end="31:17">

        <expr_stmt pos:start="19:9" pos:end="19:19"><expr pos:start="19:9" pos:end="19:18"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:14">laces</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:44"><expr pos:start="21:9" pos:end="21:43"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:17">lace_buf</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <call pos:start="21:21" pos:end="21:43"><name pos:start="21:21" pos:end="21:30">av_mallocz</name><argument_list pos:start="21:31" pos:end="21:43">(<argument pos:start="21:32" pos:end="21:42"><expr pos:start="21:32" pos:end="21:42"><sizeof pos:start="21:32" pos:end="21:42">sizeof<argument_list pos:start="21:38" pos:end="21:42">(<argument pos:start="21:39" pos:end="21:41"><expr pos:start="21:39" pos:end="21:41"><name pos:start="21:39" pos:end="21:41">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:35"><if pos:start="23:9" pos:end="25:35">if <condition pos:start="23:12" pos:end="23:23">(<expr pos:start="23:13" pos:end="23:22"><operator pos:start="23:13" pos:end="23:13">!</operator><operator pos:start="23:14" pos:end="23:14">*</operator><name pos:start="23:15" pos:end="23:22">lace_buf</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:35"><block_content pos:start="25:13" pos:end="25:35">

            <return pos:start="25:13" pos:end="25:35">return <expr pos:start="25:20" pos:end="25:34"><call pos:start="25:20" pos:end="25:34"><name pos:start="25:20" pos:end="25:26">AVERROR</name><argument_list pos:start="25:27" pos:end="25:34">(<argument pos:start="25:28" pos:end="25:33"><expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:20"><name pos:start="29:10" pos:end="29:17">lace_buf</name><index pos:start="29:18" pos:end="29:20">[<expr pos:start="29:19" pos:end="29:19"><literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>]</index></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:27">size</name></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:25"><expr pos:start="37:5" pos:end="37:24"><call pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:14">av_assert0</name><argument_list pos:start="37:15" pos:end="37:24">(<argument pos:start="37:16" pos:end="37:23"><expr pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:19">size</name> <operator pos:start="37:21" pos:end="37:21">&gt;</operator> <literal type="number" pos:start="37:23" pos:end="37:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:23"><expr pos:start="39:5" pos:end="39:22"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:10">laces</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <operator pos:start="39:14" pos:end="39:14">*</operator><name pos:start="39:15" pos:end="39:18">data</name> <operator pos:start="39:20" pos:end="39:20">+</operator> <literal type="number" pos:start="39:22" pos:end="39:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:14"><expr pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:8">data</name> <operator pos:start="41:10" pos:end="41:11">+=</operator> <literal type="number" pos:start="41:13" pos:end="41:13">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:14"><expr pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:8">size</name> <operator pos:start="43:10" pos:end="43:11">-=</operator> <literal type="number" pos:start="43:13" pos:end="43:13">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:49"><expr pos:start="45:5" pos:end="45:48"><name pos:start="45:5" pos:end="45:13">lace_size</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:48"><name pos:start="45:17" pos:end="45:26">av_mallocz</name><argument_list pos:start="45:27" pos:end="45:48">(<argument pos:start="45:28" pos:end="45:47"><expr pos:start="45:28" pos:end="45:47"><operator pos:start="45:28" pos:end="45:28">*</operator><name pos:start="45:29" pos:end="45:33">laces</name> <operator pos:start="45:35" pos:end="45:35">*</operator> <sizeof pos:start="45:37" pos:end="45:47">sizeof<argument_list pos:start="45:43" pos:end="45:47">(<argument pos:start="45:44" pos:end="45:46"><expr pos:start="45:44" pos:end="45:46"><name pos:start="45:44" pos:end="45:46">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:31"><if pos:start="47:5" pos:end="49:31">if <condition pos:start="47:8" pos:end="47:19">(<expr pos:start="47:9" pos:end="47:18"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:18">lace_size</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:31"><block_content pos:start="49:9" pos:end="49:31">

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:22">AVERROR</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <switch pos:start="53:5" pos:end="197:5">switch <condition pos:start="53:12" pos:end="53:17">(<expr pos:start="53:13" pos:end="53:16"><name pos:start="53:13" pos:end="53:16">type</name></expr>)</condition> <block pos:start="53:19" pos:end="197:5">{<block_content pos:start="55:5" pos:end="195:5">

    <case pos:start="55:5" pos:end="55:13">case <expr pos:start="55:10" pos:end="55:12"><literal type="number" pos:start="55:10" pos:end="55:12">0x1</literal></expr>:</case> <comment type="block" pos:start="55:15" pos:end="55:31">/* Xiph lacing */</comment> <block pos:start="55:33" pos:end="105:5">{<block_content pos:start="57:9" pos:end="103:14">

        <decl_stmt pos:start="57:9" pos:end="57:21"><decl pos:start="57:9" pos:end="57:20"><type pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:15">uint8_t</name></type> <name pos:start="57:17" pos:end="57:20">temp</name></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:27"><decl pos:start="59:9" pos:end="59:26"><type pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:16">uint32_t</name></type> <name pos:start="59:18" pos:end="59:22">total</name> <init pos:start="59:24" pos:end="59:26">= <expr pos:start="59:26" pos:end="59:26"><literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="61:9" pos:end="89:9">for <control pos:start="61:13" pos:end="61:52">(<init pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:18"><name pos:start="61:14" pos:end="61:14">n</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</init> <condition pos:start="61:21" pos:end="61:47"><expr pos:start="61:21" pos:end="61:46"><name pos:start="61:21" pos:end="61:23">res</name> <operator pos:start="61:25" pos:end="61:26">==</operator> <literal type="number" pos:start="61:28" pos:end="61:28">0</literal> <operator pos:start="61:30" pos:end="61:31">&amp;&amp;</operator> <name pos:start="61:33" pos:end="61:33">n</name> <operator pos:start="61:35" pos:end="61:35">&lt;</operator> <operator pos:start="61:37" pos:end="61:37">*</operator><name pos:start="61:38" pos:end="61:42">laces</name> <operator pos:start="61:44" pos:end="61:44">-</operator> <literal type="number" pos:start="61:46" pos:end="61:46">1</literal></expr>;</condition> <incr pos:start="61:49" pos:end="61:51"><expr pos:start="61:49" pos:end="61:51"><name pos:start="61:49" pos:end="61:49">n</name><operator pos:start="61:50" pos:end="61:51">++</operator></expr></incr>)</control> <block pos:start="61:54" pos:end="89:9">{<block_content pos:start="63:13" pos:end="87:34">

            <while pos:start="63:13" pos:end="85:13">while <condition pos:start="63:19" pos:end="63:21">(<expr pos:start="63:20" pos:end="63:20"><literal type="number" pos:start="63:20" pos:end="63:20">1</literal></expr>)</condition> <block pos:start="63:23" pos:end="85:13">{<block_content pos:start="65:17" pos:end="83:26">

                <if_stmt pos:start="65:17" pos:end="71:17"><if pos:start="65:17" pos:end="71:17">if <condition pos:start="65:20" pos:end="65:30">(<expr pos:start="65:21" pos:end="65:29"><name pos:start="65:21" pos:end="65:24">size</name> <operator pos:start="65:26" pos:end="65:27">==</operator> <literal type="number" pos:start="65:29" pos:end="65:29">0</literal></expr>)</condition> <block pos:start="65:32" pos:end="71:17">{<block_content pos:start="67:21" pos:end="69:26">

                    <expr_stmt pos:start="67:21" pos:end="67:46"><expr pos:start="67:21" pos:end="67:45"><name pos:start="67:21" pos:end="67:23">res</name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:45">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                    <break pos:start="69:21" pos:end="69:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:29"><expr pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:20">temp</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <operator pos:start="73:24" pos:end="73:24">*</operator><name pos:start="73:25" pos:end="73:28">data</name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:37"><expr pos:start="75:17" pos:end="75:36"><name pos:start="75:17" pos:end="75:28"><name pos:start="75:17" pos:end="75:25">lace_size</name><index pos:start="75:26" pos:end="75:28">[<expr pos:start="75:27" pos:end="75:27"><name pos:start="75:27" pos:end="75:27">n</name></expr>]</index></name> <operator pos:start="75:30" pos:end="75:31">+=</operator> <name pos:start="75:33" pos:end="75:36">temp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:26"><expr pos:start="77:17" pos:end="77:25"><name pos:start="77:17" pos:end="77:20">data</name> <operator pos:start="77:22" pos:end="77:23">+=</operator> <literal type="number" pos:start="77:25" pos:end="77:25">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:26"><expr pos:start="79:17" pos:end="79:25"><name pos:start="79:17" pos:end="79:20">size</name> <operator pos:start="79:22" pos:end="79:23">-=</operator> <literal type="number" pos:start="79:25" pos:end="79:25">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="81:17" pos:end="83:26"><if pos:start="81:17" pos:end="83:26">if <condition pos:start="81:20" pos:end="81:33">(<expr pos:start="81:21" pos:end="81:32"><name pos:start="81:21" pos:end="81:24">temp</name> <operator pos:start="81:26" pos:end="81:27">!=</operator> <literal type="number" pos:start="81:29" pos:end="81:32">0xff</literal></expr>)</condition><block type="pseudo" pos:start="83:21" pos:end="83:26"><block_content pos:start="83:21" pos:end="83:26">

                    <break pos:start="83:21" pos:end="83:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="87:13" pos:end="87:34"><expr pos:start="87:13" pos:end="87:33"><name pos:start="87:13" pos:end="87:17">total</name> <operator pos:start="87:19" pos:end="87:20">+=</operator> <name pos:start="87:22" pos:end="87:33"><name pos:start="87:22" pos:end="87:30">lace_size</name><index pos:start="87:31" pos:end="87:33">[<expr pos:start="87:32" pos:end="87:32"><name pos:start="87:32" pos:end="87:32">n</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:26">(<expr pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:16">size</name> <operator pos:start="91:18" pos:end="91:19">&lt;=</operator> <name pos:start="91:21" pos:end="91:25">total</name></expr>)</condition> <block pos:start="91:28" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:18">

            <expr_stmt pos:start="93:13" pos:end="93:38"><expr pos:start="93:13" pos:end="93:37"><name pos:start="93:13" pos:end="93:15">res</name> <operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:36"><expr pos:start="101:9" pos:end="101:35"><name pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:17">lace_size</name><index pos:start="101:18" pos:end="101:20">[<expr pos:start="101:19" pos:end="101:19"><name pos:start="101:19" pos:end="101:19">n</name></expr>]</index></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:27">size</name> <operator pos:start="101:29" pos:end="101:29">-</operator> <name pos:start="101:31" pos:end="101:35">total</name></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    </block_content>}</block>



    <case pos:start="109:5" pos:end="109:13">case <expr pos:start="109:10" pos:end="109:12"><literal type="number" pos:start="109:10" pos:end="109:12">0x2</literal></expr>:</case> <comment type="block" pos:start="109:15" pos:end="109:37">/* fixed-size lacing */</comment>

        <if_stmt pos:start="111:9" pos:end="117:9"><if pos:start="111:9" pos:end="117:9">if <condition pos:start="111:12" pos:end="111:28">(<expr pos:start="111:13" pos:end="111:27"><name pos:start="111:13" pos:end="111:16">size</name> <operator pos:start="111:18" pos:end="111:18">%</operator> <operator pos:start="111:20" pos:end="111:20">(</operator><operator pos:start="111:21" pos:end="111:21">*</operator><name pos:start="111:22" pos:end="111:26">laces</name><operator pos:start="111:27" pos:end="111:27">)</operator></expr>)</condition> <block pos:start="111:30" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:18">

            <expr_stmt pos:start="113:13" pos:end="113:38"><expr pos:start="113:13" pos:end="113:37"><name pos:start="113:13" pos:end="113:15">res</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <for pos:start="119:9" pos:end="121:41">for <control pos:start="119:13" pos:end="119:36">(<init pos:start="119:14" pos:end="119:19"><expr pos:start="119:14" pos:end="119:18"><name pos:start="119:14" pos:end="119:14">n</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <literal type="number" pos:start="119:18" pos:end="119:18">0</literal></expr>;</init> <condition pos:start="119:21" pos:end="119:31"><expr pos:start="119:21" pos:end="119:30"><name pos:start="119:21" pos:end="119:21">n</name> <operator pos:start="119:23" pos:end="119:23">&lt;</operator> <operator pos:start="119:25" pos:end="119:25">*</operator><name pos:start="119:26" pos:end="119:30">laces</name></expr>;</condition> <incr pos:start="119:33" pos:end="119:35"><expr pos:start="119:33" pos:end="119:35"><name pos:start="119:33" pos:end="119:33">n</name><operator pos:start="119:34" pos:end="119:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="121:13" pos:end="121:41"><block_content pos:start="121:13" pos:end="121:41">

            <expr_stmt pos:start="121:13" pos:end="121:41"><expr pos:start="121:13" pos:end="121:40"><name pos:start="121:13" pos:end="121:24"><name pos:start="121:13" pos:end="121:21">lace_size</name><index pos:start="121:22" pos:end="121:24">[<expr pos:start="121:23" pos:end="121:23"><name pos:start="121:23" pos:end="121:23">n</name></expr>]</index></name> <operator pos:start="121:26" pos:end="121:26">=</operator> <name pos:start="121:28" pos:end="121:31">size</name> <operator pos:start="121:33" pos:end="121:33">/</operator> <operator pos:start="121:35" pos:end="121:35">*</operator><name pos:start="121:36" pos:end="121:40">laces</name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="123:9" pos:end="123:14">break;</break>



    <case pos:start="127:5" pos:end="127:13">case <expr pos:start="127:10" pos:end="127:12"><literal type="number" pos:start="127:10" pos:end="127:12">0x3</literal></expr>:</case> <comment type="block" pos:start="127:15" pos:end="127:31">/* EBML lacing */</comment> <block pos:start="127:33" pos:end="195:5">{<block_content pos:start="129:9" pos:end="193:14">

        <decl_stmt pos:start="129:9" pos:end="129:21"><decl pos:start="129:9" pos:end="129:20"><type pos:start="129:9" pos:end="129:16"><name pos:start="129:9" pos:end="129:16">uint64_t</name></type> <name pos:start="129:18" pos:end="129:20">num</name></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="131:23"><decl pos:start="131:9" pos:end="131:22"><type pos:start="131:9" pos:end="131:16"><name pos:start="131:9" pos:end="131:16">uint64_t</name></type> <name pos:start="131:18" pos:end="131:22">total</name></decl>;</decl_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:62"><expr pos:start="133:9" pos:end="133:61"><name pos:start="133:9" pos:end="133:9">n</name> <operator pos:start="133:11" pos:end="133:11">=</operator> <call pos:start="133:13" pos:end="133:61"><name pos:start="133:13" pos:end="133:33">matroska_ebmlnum_uint</name><argument_list pos:start="133:34" pos:end="133:61">(<argument pos:start="133:35" pos:end="133:42"><expr pos:start="133:35" pos:end="133:42"><name pos:start="133:35" pos:end="133:42">matroska</name></expr></argument>, <argument pos:start="133:45" pos:end="133:48"><expr pos:start="133:45" pos:end="133:48"><name pos:start="133:45" pos:end="133:48">data</name></expr></argument>, <argument pos:start="133:51" pos:end="133:54"><expr pos:start="133:51" pos:end="133:54"><name pos:start="133:51" pos:end="133:54">size</name></expr></argument>, <argument pos:start="133:57" pos:end="133:60"><expr pos:start="133:57" pos:end="133:60"><operator pos:start="133:57" pos:end="133:57">&amp;</operator><name pos:start="133:58" pos:end="133:60">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="145:9"><if pos:start="135:9" pos:end="145:9">if <condition pos:start="135:12" pos:end="135:18">(<expr pos:start="135:13" pos:end="135:17"><name pos:start="135:13" pos:end="135:13">n</name> <operator pos:start="135:15" pos:end="135:15">&lt;</operator> <literal type="number" pos:start="135:17" pos:end="135:17">0</literal></expr>)</condition> <block pos:start="135:20" pos:end="145:9">{<block_content pos:start="137:13" pos:end="143:18">

            <expr_stmt pos:start="137:13" pos:end="139:46"><expr pos:start="137:13" pos:end="139:45"><call pos:start="137:13" pos:end="139:45"><name pos:start="137:13" pos:end="137:18">av_log</name><argument_list pos:start="137:19" pos:end="139:45">(<argument pos:start="137:20" pos:end="137:32"><expr pos:start="137:20" pos:end="137:32"><name pos:start="137:20" pos:end="137:32"><name pos:start="137:20" pos:end="137:27">matroska</name><operator pos:start="137:28" pos:end="137:29">-&gt;</operator><name pos:start="137:30" pos:end="137:32">ctx</name></name></expr></argument>, <argument pos:start="137:35" pos:end="137:45"><expr pos:start="137:35" pos:end="137:45"><name pos:start="137:35" pos:end="137:45">AV_LOG_INFO</name></expr></argument>,

                   <argument pos:start="139:20" pos:end="139:44"><expr pos:start="139:20" pos:end="139:44"><literal type="string" pos:start="139:20" pos:end="139:44">"EBML block data error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:20"><expr pos:start="141:13" pos:end="141:19"><name pos:start="141:13" pos:end="141:15">res</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <name pos:start="141:19" pos:end="141:19">n</name></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:18"><expr pos:start="147:9" pos:end="147:17"><name pos:start="147:9" pos:end="147:12">data</name> <operator pos:start="147:14" pos:end="147:15">+=</operator> <name pos:start="147:17" pos:end="147:17">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:18"><expr pos:start="149:9" pos:end="149:17"><name pos:start="149:9" pos:end="149:12">size</name> <operator pos:start="149:14" pos:end="149:15">-=</operator> <name pos:start="149:17" pos:end="149:17">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:35"><expr pos:start="151:9" pos:end="151:34"><name pos:start="151:9" pos:end="151:13">total</name> <operator pos:start="151:15" pos:end="151:15">=</operator> <name pos:start="151:17" pos:end="151:28"><name pos:start="151:17" pos:end="151:25">lace_size</name><index pos:start="151:26" pos:end="151:28">[<expr pos:start="151:27" pos:end="151:27"><literal type="number" pos:start="151:27" pos:end="151:27">0</literal></expr>]</index></name> <operator pos:start="151:30" pos:end="151:30">=</operator> <name pos:start="151:32" pos:end="151:34">num</name></expr>;</expr_stmt>

        <for pos:start="153:9" pos:end="181:9">for <control pos:start="153:13" pos:end="153:52">(<init pos:start="153:14" pos:end="153:19"><expr pos:start="153:14" pos:end="153:18"><name pos:start="153:14" pos:end="153:14">n</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">1</literal></expr>;</init> <condition pos:start="153:21" pos:end="153:47"><expr pos:start="153:21" pos:end="153:46"><name pos:start="153:21" pos:end="153:23">res</name> <operator pos:start="153:25" pos:end="153:26">==</operator> <literal type="number" pos:start="153:28" pos:end="153:28">0</literal> <operator pos:start="153:30" pos:end="153:31">&amp;&amp;</operator> <name pos:start="153:33" pos:end="153:33">n</name> <operator pos:start="153:35" pos:end="153:35">&lt;</operator> <operator pos:start="153:37" pos:end="153:37">*</operator><name pos:start="153:38" pos:end="153:42">laces</name> <operator pos:start="153:44" pos:end="153:44">-</operator> <literal type="number" pos:start="153:46" pos:end="153:46">1</literal></expr>;</condition> <incr pos:start="153:49" pos:end="153:51"><expr pos:start="153:49" pos:end="153:51"><name pos:start="153:49" pos:end="153:49">n</name><operator pos:start="153:50" pos:end="153:51">++</operator></expr></incr>)</control> <block pos:start="153:54" pos:end="181:9">{<block_content pos:start="155:13" pos:end="179:34">

            <decl_stmt pos:start="155:13" pos:end="155:25"><decl pos:start="155:13" pos:end="155:24"><type pos:start="155:13" pos:end="155:19"><name pos:start="155:13" pos:end="155:19">int64_t</name></type> <name pos:start="155:21" pos:end="155:24">snum</name></decl>;</decl_stmt>

            <decl_stmt pos:start="157:13" pos:end="157:18"><decl pos:start="157:13" pos:end="157:17"><type pos:start="157:13" pos:end="157:15"><name pos:start="157:13" pos:end="157:15">int</name></type> <name pos:start="157:17" pos:end="157:17">r</name></decl>;</decl_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:67"><expr pos:start="159:13" pos:end="159:66"><name pos:start="159:13" pos:end="159:13">r</name> <operator pos:start="159:15" pos:end="159:15">=</operator> <call pos:start="159:17" pos:end="159:66"><name pos:start="159:17" pos:end="159:37">matroska_ebmlnum_sint</name><argument_list pos:start="159:38" pos:end="159:66">(<argument pos:start="159:39" pos:end="159:46"><expr pos:start="159:39" pos:end="159:46"><name pos:start="159:39" pos:end="159:46">matroska</name></expr></argument>, <argument pos:start="159:49" pos:end="159:52"><expr pos:start="159:49" pos:end="159:52"><name pos:start="159:49" pos:end="159:52">data</name></expr></argument>, <argument pos:start="159:55" pos:end="159:58"><expr pos:start="159:55" pos:end="159:58"><name pos:start="159:55" pos:end="159:58">size</name></expr></argument>, <argument pos:start="159:61" pos:end="159:65"><expr pos:start="159:61" pos:end="159:65"><operator pos:start="159:61" pos:end="159:61">&amp;</operator><name pos:start="159:62" pos:end="159:65">snum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="161:13" pos:end="171:13"><if pos:start="161:13" pos:end="171:13">if <condition pos:start="161:16" pos:end="161:22">(<expr pos:start="161:17" pos:end="161:21"><name pos:start="161:17" pos:end="161:17">r</name> <operator pos:start="161:19" pos:end="161:19">&lt;</operator> <literal type="number" pos:start="161:21" pos:end="161:21">0</literal></expr>)</condition> <block pos:start="161:24" pos:end="171:13">{<block_content pos:start="163:17" pos:end="169:22">

                <expr_stmt pos:start="163:17" pos:end="165:50"><expr pos:start="163:17" pos:end="165:49"><call pos:start="163:17" pos:end="165:49"><name pos:start="163:17" pos:end="163:22">av_log</name><argument_list pos:start="163:23" pos:end="165:49">(<argument pos:start="163:24" pos:end="163:36"><expr pos:start="163:24" pos:end="163:36"><name pos:start="163:24" pos:end="163:36"><name pos:start="163:24" pos:end="163:31">matroska</name><operator pos:start="163:32" pos:end="163:33">-&gt;</operator><name pos:start="163:34" pos:end="163:36">ctx</name></name></expr></argument>, <argument pos:start="163:39" pos:end="163:49"><expr pos:start="163:39" pos:end="163:49"><name pos:start="163:39" pos:end="163:49">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="165:24" pos:end="165:48"><expr pos:start="165:24" pos:end="165:48"><literal type="string" pos:start="165:24" pos:end="165:48">"EBML block data error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:24"><expr pos:start="167:17" pos:end="167:23"><name pos:start="167:17" pos:end="167:19">res</name> <operator pos:start="167:21" pos:end="167:21">=</operator> <name pos:start="167:23" pos:end="167:23">r</name></expr>;</expr_stmt>

                <break pos:start="169:17" pos:end="169:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:22"><expr pos:start="173:13" pos:end="173:21"><name pos:start="173:13" pos:end="173:16">data</name> <operator pos:start="173:18" pos:end="173:19">+=</operator> <name pos:start="173:21" pos:end="173:21">r</name></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:22"><expr pos:start="175:13" pos:end="175:21"><name pos:start="175:13" pos:end="175:16">size</name> <operator pos:start="175:18" pos:end="175:19">-=</operator> <name pos:start="175:21" pos:end="175:21">r</name></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:51"><expr pos:start="177:13" pos:end="177:50"><name pos:start="177:13" pos:end="177:24"><name pos:start="177:13" pos:end="177:21">lace_size</name><index pos:start="177:22" pos:end="177:24">[<expr pos:start="177:23" pos:end="177:23"><name pos:start="177:23" pos:end="177:23">n</name></expr>]</index></name> <operator pos:start="177:26" pos:end="177:26">=</operator> <name pos:start="177:28" pos:end="177:43"><name pos:start="177:28" pos:end="177:36">lace_size</name><index pos:start="177:37" pos:end="177:43">[<expr pos:start="177:38" pos:end="177:42"><name pos:start="177:38" pos:end="177:38">n</name> <operator pos:start="177:40" pos:end="177:40">-</operator> <literal type="number" pos:start="177:42" pos:end="177:42">1</literal></expr>]</index></name> <operator pos:start="177:45" pos:end="177:45">+</operator> <name pos:start="177:47" pos:end="177:50">snum</name></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:34"><expr pos:start="179:13" pos:end="179:33"><name pos:start="179:13" pos:end="179:17">total</name> <operator pos:start="179:19" pos:end="179:20">+=</operator> <name pos:start="179:22" pos:end="179:33"><name pos:start="179:22" pos:end="179:30">lace_size</name><index pos:start="179:31" pos:end="179:33">[<expr pos:start="179:32" pos:end="179:32"><name pos:start="179:32" pos:end="179:32">n</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="183:9" pos:end="189:9"><if pos:start="183:9" pos:end="189:9">if <condition pos:start="183:12" pos:end="183:26">(<expr pos:start="183:13" pos:end="183:25"><name pos:start="183:13" pos:end="183:16">size</name> <operator pos:start="183:18" pos:end="183:19">&lt;=</operator> <name pos:start="183:21" pos:end="183:25">total</name></expr>)</condition> <block pos:start="183:28" pos:end="189:9">{<block_content pos:start="185:13" pos:end="187:18">

            <expr_stmt pos:start="185:13" pos:end="185:38"><expr pos:start="185:13" pos:end="185:37"><name pos:start="185:13" pos:end="185:15">res</name> <operator pos:start="185:17" pos:end="185:17">=</operator> <name pos:start="185:19" pos:end="185:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:45"><expr pos:start="191:9" pos:end="191:44"><name pos:start="191:9" pos:end="191:29"><name pos:start="191:9" pos:end="191:17">lace_size</name><index pos:start="191:18" pos:end="191:29">[<expr pos:start="191:19" pos:end="191:28"><operator pos:start="191:19" pos:end="191:19">*</operator><name pos:start="191:20" pos:end="191:24">laces</name> <operator pos:start="191:26" pos:end="191:26">-</operator> <literal type="number" pos:start="191:28" pos:end="191:28">1</literal></expr>]</index></name> <operator pos:start="191:31" pos:end="191:31">=</operator> <name pos:start="191:33" pos:end="191:36">size</name> <operator pos:start="191:38" pos:end="191:38">-</operator> <name pos:start="191:40" pos:end="191:44">total</name></expr>;</expr_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    </block_content>}</block>

    </block_content>}</block></switch>



    <expr_stmt pos:start="201:5" pos:end="201:21"><expr pos:start="201:5" pos:end="201:20"><operator pos:start="201:5" pos:end="201:5">*</operator><name pos:start="201:6" pos:end="201:8">buf</name>      <operator pos:start="201:15" pos:end="201:15">=</operator> <name pos:start="201:17" pos:end="201:20">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:26"><expr pos:start="203:5" pos:end="203:25"><operator pos:start="203:5" pos:end="203:5">*</operator><name pos:start="203:6" pos:end="203:13">lace_buf</name> <operator pos:start="203:15" pos:end="203:15">=</operator> <name pos:start="203:17" pos:end="203:25">lace_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:21"><expr pos:start="205:5" pos:end="205:20"><operator pos:start="205:5" pos:end="205:5">*</operator><name pos:start="205:6" pos:end="205:13">buf_size</name> <operator pos:start="205:15" pos:end="205:15">=</operator> <name pos:start="205:17" pos:end="205:20">size</name></expr>;</expr_stmt>



    <return pos:start="209:5" pos:end="209:15">return <expr pos:start="209:12" pos:end="209:14"><name pos:start="209:12" pos:end="209:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
