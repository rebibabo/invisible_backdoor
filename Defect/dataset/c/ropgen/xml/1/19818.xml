<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19818.c" pos:tabs="8"><function pos:start="1:1" pos:end="96:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">mpegvideo_extract_headers</name><parameter_list pos:start="1:38" pos:end="3:71">(<parameter pos:start="1:39" pos:end="1:61"><decl pos:start="1:39" pos:end="1:61"><type pos:start="1:39" pos:end="1:61"><name pos:start="1:39" pos:end="1:58">AVCodecParserContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">s</name></decl></parameter>,
                                      <parameter pos:start="2:39" pos:end="2:59"><decl pos:start="2:39" pos:end="2:59"><type pos:start="2:39" pos:end="2:59"><name pos:start="2:39" pos:end="2:52">AVCodecContext</name> <modifier pos:start="2:54" pos:end="2:54">*</modifier></type><name pos:start="2:55" pos:end="2:59">avctx</name></decl></parameter>,
                                      <parameter pos:start="3:39" pos:end="3:56"><decl pos:start="3:39" pos:end="3:56"><type pos:start="3:39" pos:end="3:56"><specifier pos:start="3:39" pos:end="3:43">const</specifier> <name pos:start="3:45" pos:end="3:51">uint8_t</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:56">buf</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:70"><decl pos:start="3:59" pos:end="3:70"><type pos:start="3:59" pos:end="3:70"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:70">buf_size</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="96:1">{<block_content pos:start="5:5" pos:end="95:11">
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ParseContext1</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">pc</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:27"><decl pos:start="6:5" pos:end="6:26"><type pos:start="6:5" pos:end="6:19"><specifier pos:start="6:5" pos:end="6:9">const</specifier> <name pos:start="6:11" pos:end="6:17">uint8_t</name> <modifier pos:start="6:19" pos:end="6:19">*</modifier></type><name pos:start="6:20" pos:end="6:26">buf_end</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:28">buf_start</name><init pos:start="7:29" pos:end="7:33">= <expr pos:start="7:31" pos:end="7:33"><name pos:start="7:31" pos:end="7:33">buf</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:24"><decl pos:start="8:5" pos:end="8:23"><type pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:12">uint32_t</name></type> <name pos:start="8:14" pos:end="8:23">start_code</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:24">frame_rate_index</name></decl>, <decl pos:start="9:27" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:34">ext_type</name></decl>, <decl pos:start="9:37" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:46">bytes_left</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:43"><decl pos:start="10:5" pos:end="10:24"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:24">frame_rate_ext_n</name></decl>, <decl pos:start="10:27" pos:end="10:42"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:27" pos:end="10:42">frame_rate_ext_d</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:82"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:25">picture_structure</name></decl>, <decl pos:start="11:28" pos:end="11:42"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:28" pos:end="11:42">top_field_first</name></decl>, <decl pos:start="11:45" pos:end="11:62"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:45" pos:end="11:62">repeat_first_field</name></decl>, <decl pos:start="11:65" pos:end="11:81"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:65" pos:end="11:81">progressive_frame</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:52"><decl pos:start="12:5" pos:end="12:22"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:22">horiz_size_ext</name></decl>, <decl pos:start="12:25" pos:end="12:37"><type ref="prev" pos:start="12:5" pos:end="12:7"/><name pos:start="12:25" pos:end="12:37">vert_size_ext</name></decl>, <decl pos:start="12:40" pos:end="12:51"><type ref="prev" pos:start="12:5" pos:end="12:7"/><name pos:start="12:40" pos:end="12:51">bit_rate_ext</name></decl>;</decl_stmt>
<comment type="line" pos:start="13:1" pos:end="13:40">//FIXME replace the crap with get_bits()</comment>
    <expr_stmt pos:start="14:5" pos:end="14:23"><expr pos:start="14:5" pos:end="14:22"><name pos:start="14:5" pos:end="14:18"><name pos:start="14:5" pos:end="14:5">s</name><operator pos:start="14:6" pos:end="14:7">-&gt;</operator><name pos:start="14:8" pos:end="14:18">repeat_pict</name></name> <operator pos:start="14:20" pos:end="14:20">=</operator> <literal type="number" pos:start="14:22" pos:end="14:22">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:11">buf_end</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:17">buf</name> <operator pos:start="15:19" pos:end="15:19">+</operator> <name pos:start="15:21" pos:end="15:28">buf_size</name></expr>;</expr_stmt>
    <while pos:start="16:5" pos:end="94:5">while <condition pos:start="16:11" pos:end="16:25">(<expr pos:start="16:12" pos:end="16:24"><name pos:start="16:12" pos:end="16:14">buf</name> <operator pos:start="16:16" pos:end="16:16">&lt;</operator> <name pos:start="16:18" pos:end="16:24">buf_end</name></expr>)</condition> <block pos:start="16:27" pos:end="94:5">{<block_content pos:start="17:9" pos:end="93:9">
        <expr_stmt pos:start="17:9" pos:end="17:23"><expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:18">start_code</name><operator pos:start="17:19" pos:end="17:19">=</operator> <operator pos:start="17:21" pos:end="17:21">-</operator><literal type="number" pos:start="17:22" pos:end="17:22">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:59"><expr pos:start="18:9" pos:end="18:58"><name pos:start="18:9" pos:end="18:11">buf</name><operator pos:start="18:12" pos:end="18:12">=</operator> <call pos:start="18:14" pos:end="18:58"><name pos:start="18:14" pos:end="18:31">ff_find_start_code</name><argument_list pos:start="18:32" pos:end="18:58">(<argument pos:start="18:33" pos:end="18:35"><expr pos:start="18:33" pos:end="18:35"><name pos:start="18:33" pos:end="18:35">buf</name></expr></argument>, <argument pos:start="18:38" pos:end="18:44"><expr pos:start="18:38" pos:end="18:44"><name pos:start="18:38" pos:end="18:44">buf_end</name></expr></argument>, <argument pos:start="18:47" pos:end="18:57"><expr pos:start="18:47" pos:end="18:57"><operator pos:start="18:47" pos:end="18:47">&amp;</operator><name pos:start="18:48" pos:end="18:57">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:18">bytes_left</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:28">buf_end</name> <operator pos:start="19:30" pos:end="19:30">-</operator> <name pos:start="19:32" pos:end="19:34">buf</name></expr>;</expr_stmt>
        <switch pos:start="20:9" pos:end="93:9">switch<condition pos:start="20:15" pos:end="20:26">(<expr pos:start="20:16" pos:end="20:25"><name pos:start="20:16" pos:end="20:25">start_code</name></expr>)</condition> <block pos:start="20:28" pos:end="93:9">{<block_content pos:start="21:9" pos:end="92:18">
        <case pos:start="21:9" pos:end="21:32">case <expr pos:start="21:14" pos:end="21:31"><name pos:start="21:14" pos:end="21:31">PICTURE_START_CODE</name></expr>:</case>
            <if_stmt pos:start="22:13" pos:end="24:13"><if pos:start="22:13" pos:end="24:13">if <condition pos:start="22:16" pos:end="22:32">(<expr pos:start="22:17" pos:end="22:31"><name pos:start="22:17" pos:end="22:26">bytes_left</name> <operator pos:start="22:28" pos:end="22:29">&gt;=</operator> <literal type="number" pos:start="22:31" pos:end="22:31">2</literal></expr>)</condition> <block pos:start="22:34" pos:end="24:13">{<block_content pos:start="23:17" pos:end="23:49">
                <expr_stmt pos:start="23:17" pos:end="23:49"><expr pos:start="23:17" pos:end="23:48"><name pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:28">pict_type</name></name> <operator pos:start="23:30" pos:end="23:30">=</operator> <operator pos:start="23:32" pos:end="23:32">(</operator><name pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:35">buf</name><index pos:start="23:36" pos:end="23:38">[<expr pos:start="23:37" pos:end="23:37"><literal type="number" pos:start="23:37" pos:end="23:37">1</literal></expr>]</index></name> <operator pos:start="23:40" pos:end="23:41">&gt;&gt;</operator> <literal type="number" pos:start="23:43" pos:end="23:43">3</literal><operator pos:start="23:44" pos:end="23:44">)</operator> <operator pos:start="23:46" pos:end="23:46">&amp;</operator> <literal type="number" pos:start="23:48" pos:end="23:48">7</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <break pos:start="25:13" pos:end="25:18">break;</break>
        <case pos:start="26:9" pos:end="26:28">case <expr pos:start="26:14" pos:end="26:27"><name pos:start="26:14" pos:end="26:27">SEQ_START_CODE</name></expr>:</case>
            <if_stmt pos:start="27:13" pos:end="37:13"><if pos:start="27:13" pos:end="37:13">if <condition pos:start="27:16" pos:end="27:32">(<expr pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:26">bytes_left</name> <operator pos:start="27:28" pos:end="27:29">&gt;=</operator> <literal type="number" pos:start="27:31" pos:end="27:31">7</literal></expr>)</condition> <block pos:start="27:34" pos:end="37:13">{<block_content pos:start="28:17" pos:end="36:34">
                <expr_stmt pos:start="28:17" pos:end="28:59"><expr pos:start="28:17" pos:end="28:58"><name pos:start="28:17" pos:end="28:25"><name pos:start="28:17" pos:end="28:18">pc</name><operator pos:start="28:19" pos:end="28:20">-&gt;</operator><name pos:start="28:21" pos:end="28:25">width</name></name>  <operator pos:start="28:28" pos:end="28:28">=</operator> <operator pos:start="28:30" pos:end="28:30">(</operator><name pos:start="28:31" pos:end="28:36"><name pos:start="28:31" pos:end="28:33">buf</name><index pos:start="28:34" pos:end="28:36">[<expr pos:start="28:35" pos:end="28:35"><literal type="number" pos:start="28:35" pos:end="28:35">0</literal></expr>]</index></name> <operator pos:start="28:38" pos:end="28:39">&lt;&lt;</operator> <literal type="number" pos:start="28:41" pos:end="28:41">4</literal><operator pos:start="28:42" pos:end="28:42">)</operator> <operator pos:start="28:44" pos:end="28:44">|</operator> <operator pos:start="28:46" pos:end="28:46">(</operator><name pos:start="28:47" pos:end="28:52"><name pos:start="28:47" pos:end="28:49">buf</name><index pos:start="28:50" pos:end="28:52">[<expr pos:start="28:51" pos:end="28:51"><literal type="number" pos:start="28:51" pos:end="28:51">1</literal></expr>]</index></name> <operator pos:start="28:54" pos:end="28:55">&gt;&gt;</operator> <literal type="number" pos:start="28:57" pos:end="28:57">4</literal><operator pos:start="28:58" pos:end="28:58">)</operator></expr>;</expr_stmt>
                <expr_stmt pos:start="29:17" pos:end="29:61"><expr pos:start="29:17" pos:end="29:60"><name pos:start="29:17" pos:end="29:26"><name pos:start="29:17" pos:end="29:18">pc</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:26">height</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <operator pos:start="29:30" pos:end="29:30">(</operator><operator pos:start="29:31" pos:end="29:31">(</operator><name pos:start="29:32" pos:end="29:37"><name pos:start="29:32" pos:end="29:34">buf</name><index pos:start="29:35" pos:end="29:37">[<expr pos:start="29:36" pos:end="29:36"><literal type="number" pos:start="29:36" pos:end="29:36">1</literal></expr>]</index></name> <operator pos:start="29:39" pos:end="29:39">&amp;</operator> <literal type="number" pos:start="29:41" pos:end="29:44">0x0f</literal><operator pos:start="29:45" pos:end="29:45">)</operator> <operator pos:start="29:47" pos:end="29:48">&lt;&lt;</operator> <literal type="number" pos:start="29:50" pos:end="29:50">8</literal><operator pos:start="29:51" pos:end="29:51">)</operator> <operator pos:start="29:53" pos:end="29:53">|</operator> <name pos:start="29:55" pos:end="29:60"><name pos:start="29:55" pos:end="29:57">buf</name><index pos:start="29:58" pos:end="29:60">[<expr pos:start="29:59" pos:end="29:59"><literal type="number" pos:start="29:59" pos:end="29:59">2</literal></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="30:17" pos:end="30:69"><expr pos:start="30:17" pos:end="30:68"><call pos:start="30:17" pos:end="30:68"><name pos:start="30:17" pos:end="30:38">avcodec_set_dimensions</name><argument_list pos:start="30:39" pos:end="30:68">(<argument pos:start="30:40" pos:end="30:44"><expr pos:start="30:40" pos:end="30:44"><name pos:start="30:40" pos:end="30:44">avctx</name></expr></argument>, <argument pos:start="30:47" pos:end="30:55"><expr pos:start="30:47" pos:end="30:55"><name pos:start="30:47" pos:end="30:55"><name pos:start="30:47" pos:end="30:48">pc</name><operator pos:start="30:49" pos:end="30:50">-&gt;</operator><name pos:start="30:51" pos:end="30:55">width</name></name></expr></argument>, <argument pos:start="30:58" pos:end="30:67"><expr pos:start="30:58" pos:end="30:67"><name pos:start="30:58" pos:end="30:67"><name pos:start="30:58" pos:end="30:59">pc</name><operator pos:start="30:60" pos:end="30:61">-&gt;</operator><name pos:start="30:62" pos:end="30:67">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="31:17" pos:end="31:48"><expr pos:start="31:17" pos:end="31:47"><name pos:start="31:17" pos:end="31:32">frame_rate_index</name> <operator pos:start="31:34" pos:end="31:34">=</operator> <name pos:start="31:36" pos:end="31:41"><name pos:start="31:36" pos:end="31:38">buf</name><index pos:start="31:39" pos:end="31:41">[<expr pos:start="31:40" pos:end="31:40"><literal type="number" pos:start="31:40" pos:end="31:40">3</literal></expr>]</index></name> <operator pos:start="31:43" pos:end="31:43">&amp;</operator> <literal type="number" pos:start="31:45" pos:end="31:47">0xf</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="32:17" pos:end="32:100"><expr pos:start="32:17" pos:end="32:99"><name pos:start="32:17" pos:end="32:34"><name pos:start="32:17" pos:end="32:18">pc</name><operator pos:start="32:19" pos:end="32:20">-&gt;</operator><name pos:start="32:21" pos:end="32:30">frame_rate</name><operator pos:start="32:31" pos:end="32:31">.</operator><name pos:start="32:32" pos:end="32:34">den</name></name> <operator pos:start="32:36" pos:end="32:36">=</operator> <name pos:start="32:38" pos:end="32:57"><name pos:start="32:38" pos:end="32:42">avctx</name><operator pos:start="32:43" pos:end="32:44">-&gt;</operator><name pos:start="32:45" pos:end="32:53">time_base</name><operator pos:start="32:54" pos:end="32:54">.</operator><name pos:start="32:55" pos:end="32:57">den</name></name> <operator pos:start="32:59" pos:end="32:59">=</operator> <name pos:start="32:61" pos:end="32:95"><name pos:start="32:61" pos:end="32:77">ff_frame_rate_tab</name><index pos:start="32:78" pos:end="32:95">[<expr pos:start="32:79" pos:end="32:94"><name pos:start="32:79" pos:end="32:94">frame_rate_index</name></expr>]</index></name><operator pos:start="32:96" pos:end="32:96">.</operator><name pos:start="32:97" pos:end="32:99">num</name></expr>;</expr_stmt>
                <expr_stmt pos:start="33:17" pos:end="33:100"><expr pos:start="33:17" pos:end="33:99"><name pos:start="33:17" pos:end="33:34"><name pos:start="33:17" pos:end="33:18">pc</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:30">frame_rate</name><operator pos:start="33:31" pos:end="33:31">.</operator><name pos:start="33:32" pos:end="33:34">num</name></name> <operator pos:start="33:36" pos:end="33:36">=</operator> <name pos:start="33:38" pos:end="33:57"><name pos:start="33:38" pos:end="33:42">avctx</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:53">time_base</name><operator pos:start="33:54" pos:end="33:54">.</operator><name pos:start="33:55" pos:end="33:57">num</name></name> <operator pos:start="33:59" pos:end="33:59">=</operator> <name pos:start="33:61" pos:end="33:95"><name pos:start="33:61" pos:end="33:77">ff_frame_rate_tab</name><index pos:start="33:78" pos:end="33:95">[<expr pos:start="33:79" pos:end="33:94"><name pos:start="33:79" pos:end="33:94">frame_rate_index</name></expr>]</index></name><operator pos:start="33:96" pos:end="33:96">.</operator><name pos:start="33:97" pos:end="33:99">den</name></expr>;</expr_stmt>
                <expr_stmt pos:start="34:17" pos:end="34:81"><expr pos:start="34:17" pos:end="34:80"><name pos:start="34:17" pos:end="34:31"><name pos:start="34:17" pos:end="34:21">avctx</name><operator pos:start="34:22" pos:end="34:23">-&gt;</operator><name pos:start="34:24" pos:end="34:31">bit_rate</name></name> <operator pos:start="34:33" pos:end="34:33">=</operator> <operator pos:start="34:35" pos:end="34:35">(</operator><operator pos:start="34:36" pos:end="34:36">(</operator><name pos:start="34:37" pos:end="34:42"><name pos:start="34:37" pos:end="34:39">buf</name><index pos:start="34:40" pos:end="34:42">[<expr pos:start="34:41" pos:end="34:41"><literal type="number" pos:start="34:41" pos:end="34:41">4</literal></expr>]</index></name><operator pos:start="34:43" pos:end="34:44">&lt;&lt;</operator><literal type="number" pos:start="34:45" pos:end="34:46">10</literal><operator pos:start="34:47" pos:end="34:47">)</operator> <operator pos:start="34:49" pos:end="34:49">|</operator> <operator pos:start="34:51" pos:end="34:51">(</operator><name pos:start="34:52" pos:end="34:57"><name pos:start="34:52" pos:end="34:54">buf</name><index pos:start="34:55" pos:end="34:57">[<expr pos:start="34:56" pos:end="34:56"><literal type="number" pos:start="34:56" pos:end="34:56">5</literal></expr>]</index></name><operator pos:start="34:58" pos:end="34:59">&lt;&lt;</operator><literal type="number" pos:start="34:60" pos:end="34:60">2</literal><operator pos:start="34:61" pos:end="34:61">)</operator> <operator pos:start="34:63" pos:end="34:63">|</operator> <operator pos:start="34:65" pos:end="34:65">(</operator><name pos:start="34:66" pos:end="34:71"><name pos:start="34:66" pos:end="34:68">buf</name><index pos:start="34:69" pos:end="34:71">[<expr pos:start="34:70" pos:end="34:70"><literal type="number" pos:start="34:70" pos:end="34:70">6</literal></expr>]</index></name><operator pos:start="34:72" pos:end="34:73">&gt;&gt;</operator><literal type="number" pos:start="34:74" pos:end="34:74">6</literal><operator pos:start="34:75" pos:end="34:75">)</operator><operator pos:start="34:76" pos:end="34:76">)</operator><operator pos:start="34:77" pos:end="34:77">*</operator><literal type="number" pos:start="34:78" pos:end="34:80">400</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="35:17" pos:end="35:54"><expr pos:start="35:17" pos:end="35:53"><name pos:start="35:17" pos:end="35:31"><name pos:start="35:17" pos:end="35:21">avctx</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:31">codec_id</name></name> <operator pos:start="35:33" pos:end="35:33">=</operator> <name pos:start="35:35" pos:end="35:53">CODEC_ID_MPEG1VIDEO</name></expr>;</expr_stmt>
                <expr_stmt pos:start="36:17" pos:end="36:34"><expr pos:start="36:17" pos:end="36:33"><name pos:start="36:17" pos:end="36:29"><name pos:start="36:17" pos:end="36:21">avctx</name><operator pos:start="36:22" pos:end="36:23">-&gt;</operator><name pos:start="36:24" pos:end="36:29">sub_id</name></name> <operator pos:start="36:31" pos:end="36:31">=</operator> <literal type="number" pos:start="36:33" pos:end="36:33">1</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <break pos:start="38:13" pos:end="38:18">break;</break>
        <case pos:start="39:9" pos:end="39:28">case <expr pos:start="39:14" pos:end="39:27"><name pos:start="39:14" pos:end="39:27">EXT_START_CODE</name></expr>:</case>
            <if_stmt pos:start="40:13" pos:end="82:13"><if pos:start="40:13" pos:end="82:13">if <condition pos:start="40:16" pos:end="40:32">(<expr pos:start="40:17" pos:end="40:31"><name pos:start="40:17" pos:end="40:26">bytes_left</name> <operator pos:start="40:28" pos:end="40:29">&gt;=</operator> <literal type="number" pos:start="40:31" pos:end="40:31">1</literal></expr>)</condition> <block pos:start="40:34" pos:end="82:13">{<block_content pos:start="41:17" pos:end="81:17">
                <expr_stmt pos:start="41:17" pos:end="41:41"><expr pos:start="41:17" pos:end="41:40"><name pos:start="41:17" pos:end="41:24">ext_type</name> <operator pos:start="41:26" pos:end="41:26">=</operator> <operator pos:start="41:28" pos:end="41:28">(</operator><name pos:start="41:29" pos:end="41:34"><name pos:start="41:29" pos:end="41:31">buf</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><literal type="number" pos:start="41:33" pos:end="41:33">0</literal></expr>]</index></name> <operator pos:start="41:36" pos:end="41:37">&gt;&gt;</operator> <literal type="number" pos:start="41:39" pos:end="41:39">4</literal><operator pos:start="41:40" pos:end="41:40">)</operator></expr>;</expr_stmt>
                <switch pos:start="42:17" pos:end="81:17">switch<condition pos:start="42:23" pos:end="42:32">(<expr pos:start="42:24" pos:end="42:31"><name pos:start="42:24" pos:end="42:31">ext_type</name></expr>)</condition> <block pos:start="42:34" pos:end="81:17">{<block_content pos:start="43:17" pos:end="80:26">
                <case pos:start="43:17" pos:end="43:25">case <expr pos:start="43:22" pos:end="43:24"><literal type="number" pos:start="43:22" pos:end="43:24">0x1</literal></expr>:</case> <comment type="block" pos:start="43:27" pos:end="43:50">/* sequence extension */</comment>
                    <if_stmt pos:start="44:21" pos:end="60:21"><if pos:start="44:21" pos:end="60:21">if <condition pos:start="44:24" pos:end="44:40">(<expr pos:start="44:25" pos:end="44:39"><name pos:start="44:25" pos:end="44:34">bytes_left</name> <operator pos:start="44:36" pos:end="44:37">&gt;=</operator> <literal type="number" pos:start="44:39" pos:end="44:39">6</literal></expr>)</condition> <block pos:start="44:42" pos:end="60:21">{<block_content pos:start="45:25" pos:end="59:42">
                        <expr_stmt pos:start="45:25" pos:end="45:77"><expr pos:start="45:25" pos:end="45:76"><name pos:start="45:25" pos:end="45:38">horiz_size_ext</name> <operator pos:start="45:40" pos:end="45:40">=</operator> <operator pos:start="45:42" pos:end="45:42">(</operator><operator pos:start="45:43" pos:end="45:43">(</operator><name pos:start="45:44" pos:end="45:49"><name pos:start="45:44" pos:end="45:46">buf</name><index pos:start="45:47" pos:end="45:49">[<expr pos:start="45:48" pos:end="45:48"><literal type="number" pos:start="45:48" pos:end="45:48">1</literal></expr>]</index></name> <operator pos:start="45:51" pos:end="45:51">&amp;</operator> <literal type="number" pos:start="45:53" pos:end="45:53">1</literal><operator pos:start="45:54" pos:end="45:54">)</operator> <operator pos:start="45:56" pos:end="45:57">&lt;&lt;</operator> <literal type="number" pos:start="45:59" pos:end="45:59">1</literal><operator pos:start="45:60" pos:end="45:60">)</operator> <operator pos:start="45:62" pos:end="45:62">|</operator> <operator pos:start="45:64" pos:end="45:64">(</operator><name pos:start="45:65" pos:end="45:70"><name pos:start="45:65" pos:end="45:67">buf</name><index pos:start="45:68" pos:end="45:70">[<expr pos:start="45:69" pos:end="45:69"><literal type="number" pos:start="45:69" pos:end="45:69">2</literal></expr>]</index></name> <operator pos:start="45:72" pos:end="45:73">&gt;&gt;</operator> <literal type="number" pos:start="45:75" pos:end="45:75">7</literal><operator pos:start="45:76" pos:end="45:76">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="46:25" pos:end="46:58"><expr pos:start="46:25" pos:end="46:57"><name pos:start="46:25" pos:end="46:37">vert_size_ext</name> <operator pos:start="46:39" pos:end="46:39">=</operator> <operator pos:start="46:41" pos:end="46:41">(</operator><name pos:start="46:42" pos:end="46:47"><name pos:start="46:42" pos:end="46:44">buf</name><index pos:start="46:45" pos:end="46:47">[<expr pos:start="46:46" pos:end="46:46"><literal type="number" pos:start="46:46" pos:end="46:46">2</literal></expr>]</index></name> <operator pos:start="46:49" pos:end="46:50">&gt;&gt;</operator> <literal type="number" pos:start="46:52" pos:end="46:52">5</literal><operator pos:start="46:53" pos:end="46:53">)</operator> <operator pos:start="46:55" pos:end="46:55">&amp;</operator> <literal type="number" pos:start="46:57" pos:end="46:57">3</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="47:25" pos:end="47:74"><expr pos:start="47:25" pos:end="47:73"><name pos:start="47:25" pos:end="47:36">bit_rate_ext</name> <operator pos:start="47:38" pos:end="47:38">=</operator> <operator pos:start="47:40" pos:end="47:40">(</operator><operator pos:start="47:41" pos:end="47:41">(</operator><name pos:start="47:42" pos:end="47:47"><name pos:start="47:42" pos:end="47:44">buf</name><index pos:start="47:45" pos:end="47:47">[<expr pos:start="47:46" pos:end="47:46"><literal type="number" pos:start="47:46" pos:end="47:46">2</literal></expr>]</index></name> <operator pos:start="47:49" pos:end="47:49">&amp;</operator> <literal type="number" pos:start="47:51" pos:end="47:54">0x1F</literal><operator pos:start="47:55" pos:end="47:55">)</operator><operator pos:start="47:56" pos:end="47:57">&lt;&lt;</operator><literal type="number" pos:start="47:58" pos:end="47:58">7</literal><operator pos:start="47:59" pos:end="47:59">)</operator> <operator pos:start="47:61" pos:end="47:61">|</operator> <operator pos:start="47:63" pos:end="47:63">(</operator><name pos:start="47:64" pos:end="47:69"><name pos:start="47:64" pos:end="47:66">buf</name><index pos:start="47:67" pos:end="47:69">[<expr pos:start="47:68" pos:end="47:68"><literal type="number" pos:start="47:68" pos:end="47:68">3</literal></expr>]</index></name><operator pos:start="47:70" pos:end="47:71">&gt;&gt;</operator><literal type="number" pos:start="47:72" pos:end="47:72">1</literal><operator pos:start="47:73" pos:end="47:73">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="48:25" pos:end="48:61"><expr pos:start="48:25" pos:end="48:60"><name pos:start="48:25" pos:end="48:40">frame_rate_ext_n</name> <operator pos:start="48:42" pos:end="48:42">=</operator> <operator pos:start="48:44" pos:end="48:44">(</operator><name pos:start="48:45" pos:end="48:50"><name pos:start="48:45" pos:end="48:47">buf</name><index pos:start="48:48" pos:end="48:50">[<expr pos:start="48:49" pos:end="48:49"><literal type="number" pos:start="48:49" pos:end="48:49">5</literal></expr>]</index></name> <operator pos:start="48:52" pos:end="48:53">&gt;&gt;</operator> <literal type="number" pos:start="48:55" pos:end="48:55">5</literal><operator pos:start="48:56" pos:end="48:56">)</operator> <operator pos:start="48:58" pos:end="48:58">&amp;</operator> <literal type="number" pos:start="48:60" pos:end="48:60">3</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="49:25" pos:end="49:59"><expr pos:start="49:25" pos:end="49:58"><name pos:start="49:25" pos:end="49:40">frame_rate_ext_d</name> <operator pos:start="49:42" pos:end="49:42">=</operator> <operator pos:start="49:44" pos:end="49:44">(</operator><name pos:start="49:45" pos:end="49:50"><name pos:start="49:45" pos:end="49:47">buf</name><index pos:start="49:48" pos:end="49:50">[<expr pos:start="49:49" pos:end="49:49"><literal type="number" pos:start="49:49" pos:end="49:49">5</literal></expr>]</index></name> <operator pos:start="49:52" pos:end="49:52">&amp;</operator> <literal type="number" pos:start="49:54" pos:end="49:57">0x1f</literal><operator pos:start="49:58" pos:end="49:58">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="50:25" pos:end="50:69"><expr pos:start="50:25" pos:end="50:68"><name pos:start="50:25" pos:end="50:48"><name pos:start="50:25" pos:end="50:26">pc</name><operator pos:start="50:27" pos:end="50:28">-&gt;</operator><name pos:start="50:29" pos:end="50:48">progressive_sequence</name></name> <operator pos:start="50:50" pos:end="50:50">=</operator> <name pos:start="50:52" pos:end="50:57"><name pos:start="50:52" pos:end="50:54">buf</name><index pos:start="50:55" pos:end="50:57">[<expr pos:start="50:56" pos:end="50:56"><literal type="number" pos:start="50:56" pos:end="50:56">1</literal></expr>]</index></name> <operator pos:start="50:59" pos:end="50:59">&amp;</operator> <operator pos:start="50:61" pos:end="50:61">(</operator><literal type="number" pos:start="50:62" pos:end="50:62">1</literal> <operator pos:start="50:64" pos:end="50:65">&lt;&lt;</operator> <literal type="number" pos:start="50:67" pos:end="50:67">3</literal><operator pos:start="50:68" pos:end="50:68">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="51:25" pos:end="51:60"><expr pos:start="51:25" pos:end="51:59"><name pos:start="51:25" pos:end="51:43"><name pos:start="51:25" pos:end="51:29">avctx</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:43">has_b_frames</name></name><operator pos:start="51:44" pos:end="51:44">=</operator> <operator pos:start="51:46" pos:end="51:46">!</operator><operator pos:start="51:47" pos:end="51:47">(</operator><name pos:start="51:48" pos:end="51:53"><name pos:start="51:48" pos:end="51:50">buf</name><index pos:start="51:51" pos:end="51:53">[<expr pos:start="51:52" pos:end="51:52"><literal type="number" pos:start="51:52" pos:end="51:52">5</literal></expr>]</index></name> <operator pos:start="51:55" pos:end="51:56">&gt;&gt;</operator> <literal type="number" pos:start="51:58" pos:end="51:58">7</literal><operator pos:start="51:59" pos:end="51:59">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="52:25" pos:end="52:60"><expr pos:start="52:25" pos:end="52:59"><name pos:start="52:25" pos:end="52:33"><name pos:start="52:25" pos:end="52:26">pc</name><operator pos:start="52:27" pos:end="52:28">-&gt;</operator><name pos:start="52:29" pos:end="52:33">width</name></name>  <operator pos:start="52:36" pos:end="52:37">|=</operator><operator pos:start="52:38" pos:end="52:38">(</operator><name pos:start="52:39" pos:end="52:52">horiz_size_ext</name> <operator pos:start="52:54" pos:end="52:55">&lt;&lt;</operator> <literal type="number" pos:start="52:57" pos:end="52:58">12</literal><operator pos:start="52:59" pos:end="52:59">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="53:25" pos:end="53:60"><expr pos:start="53:25" pos:end="53:59"><name pos:start="53:25" pos:end="53:34"><name pos:start="53:25" pos:end="53:26">pc</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:34">height</name></name> <operator pos:start="53:36" pos:end="53:37">|=</operator><operator pos:start="53:38" pos:end="53:38">(</operator> <name pos:start="53:40" pos:end="53:52">vert_size_ext</name> <operator pos:start="53:54" pos:end="53:55">&lt;&lt;</operator> <literal type="number" pos:start="53:57" pos:end="53:58">12</literal><operator pos:start="53:59" pos:end="53:59">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="54:25" pos:end="54:70"><expr pos:start="54:25" pos:end="54:69"><name pos:start="54:25" pos:end="54:39"><name pos:start="54:25" pos:end="54:29">avctx</name><operator pos:start="54:30" pos:end="54:31">-&gt;</operator><name pos:start="54:32" pos:end="54:39">bit_rate</name></name> <operator pos:start="54:41" pos:end="54:42">+=</operator> <operator pos:start="54:44" pos:end="54:44">(</operator><name pos:start="54:45" pos:end="54:56">bit_rate_ext</name> <operator pos:start="54:58" pos:end="54:59">&lt;&lt;</operator> <literal type="number" pos:start="54:61" pos:end="54:62">18</literal><operator pos:start="54:63" pos:end="54:63">)</operator> <operator pos:start="54:65" pos:end="54:65">*</operator> <literal type="number" pos:start="54:67" pos:end="54:69">400</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="55:25" pos:end="55:77"><expr pos:start="55:25" pos:end="55:76"><call pos:start="55:25" pos:end="55:76"><name pos:start="55:25" pos:end="55:46">avcodec_set_dimensions</name><argument_list pos:start="55:47" pos:end="55:76">(<argument pos:start="55:48" pos:end="55:52"><expr pos:start="55:48" pos:end="55:52"><name pos:start="55:48" pos:end="55:52">avctx</name></expr></argument>, <argument pos:start="55:55" pos:end="55:63"><expr pos:start="55:55" pos:end="55:63"><name pos:start="55:55" pos:end="55:63"><name pos:start="55:55" pos:end="55:56">pc</name><operator pos:start="55:57" pos:end="55:58">-&gt;</operator><name pos:start="55:59" pos:end="55:63">width</name></name></expr></argument>, <argument pos:start="55:66" pos:end="55:75"><expr pos:start="55:66" pos:end="55:75"><name pos:start="55:66" pos:end="55:75"><name pos:start="55:66" pos:end="55:67">pc</name><operator pos:start="55:68" pos:end="55:69">-&gt;</operator><name pos:start="55:70" pos:end="55:75">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="56:25" pos:end="56:91"><expr pos:start="56:25" pos:end="56:90"><name pos:start="56:25" pos:end="56:44"><name pos:start="56:25" pos:end="56:29">avctx</name><operator pos:start="56:30" pos:end="56:31">-&gt;</operator><name pos:start="56:32" pos:end="56:40">time_base</name><operator pos:start="56:41" pos:end="56:41">.</operator><name pos:start="56:42" pos:end="56:44">den</name></name> <operator pos:start="56:46" pos:end="56:46">=</operator> <name pos:start="56:48" pos:end="56:65"><name pos:start="56:48" pos:end="56:49">pc</name><operator pos:start="56:50" pos:end="56:51">-&gt;</operator><name pos:start="56:52" pos:end="56:61">frame_rate</name><operator pos:start="56:62" pos:end="56:62">.</operator><name pos:start="56:63" pos:end="56:65">den</name></name> <operator pos:start="56:67" pos:end="56:67">*</operator> <operator pos:start="56:69" pos:end="56:69">(</operator><name pos:start="56:70" pos:end="56:85">frame_rate_ext_n</name> <operator pos:start="56:87" pos:end="56:87">+</operator> <literal type="number" pos:start="56:89" pos:end="56:89">1</literal><operator pos:start="56:90" pos:end="56:90">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="57:25" pos:end="57:91"><expr pos:start="57:25" pos:end="57:90"><name pos:start="57:25" pos:end="57:44"><name pos:start="57:25" pos:end="57:29">avctx</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:40">time_base</name><operator pos:start="57:41" pos:end="57:41">.</operator><name pos:start="57:42" pos:end="57:44">num</name></name> <operator pos:start="57:46" pos:end="57:46">=</operator> <name pos:start="57:48" pos:end="57:65"><name pos:start="57:48" pos:end="57:49">pc</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:61">frame_rate</name><operator pos:start="57:62" pos:end="57:62">.</operator><name pos:start="57:63" pos:end="57:65">num</name></name> <operator pos:start="57:67" pos:end="57:67">*</operator> <operator pos:start="57:69" pos:end="57:69">(</operator><name pos:start="57:70" pos:end="57:85">frame_rate_ext_d</name> <operator pos:start="57:87" pos:end="57:87">+</operator> <literal type="number" pos:start="57:89" pos:end="57:89">1</literal><operator pos:start="57:90" pos:end="57:90">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="58:25" pos:end="58:62"><expr pos:start="58:25" pos:end="58:61"><name pos:start="58:25" pos:end="58:39"><name pos:start="58:25" pos:end="58:29">avctx</name><operator pos:start="58:30" pos:end="58:31">-&gt;</operator><name pos:start="58:32" pos:end="58:39">codec_id</name></name> <operator pos:start="58:41" pos:end="58:41">=</operator> <name pos:start="58:43" pos:end="58:61">CODEC_ID_MPEG2VIDEO</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="59:25" pos:end="59:42"><expr pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:37"><name pos:start="59:25" pos:end="59:29">avctx</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:37">sub_id</name></name> <operator pos:start="59:39" pos:end="59:39">=</operator> <literal type="number" pos:start="59:41" pos:end="59:41">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="59:44" pos:end="59:61">/* forces MPEG2 */</comment>
                    </block_content>}</block></if></if_stmt>
                    <break pos:start="61:21" pos:end="61:26">break;</break>
                <case pos:start="62:17" pos:end="62:25">case <expr pos:start="62:22" pos:end="62:24"><literal type="number" pos:start="62:22" pos:end="62:24">0x8</literal></expr>:</case> <comment type="block" pos:start="62:27" pos:end="62:56">/* picture coding extension */</comment>
                    <if_stmt pos:start="63:21" pos:end="79:21"><if pos:start="63:21" pos:end="79:21">if <condition pos:start="63:24" pos:end="63:40">(<expr pos:start="63:25" pos:end="63:39"><name pos:start="63:25" pos:end="63:34">bytes_left</name> <operator pos:start="63:36" pos:end="63:37">&gt;=</operator> <literal type="number" pos:start="63:39" pos:end="63:39">5</literal></expr>)</condition> <block pos:start="63:42" pos:end="79:21">{<block_content pos:start="64:25" pos:end="78:25">
                        <expr_stmt pos:start="64:25" pos:end="64:53"><expr pos:start="64:25" pos:end="64:52"><name pos:start="64:25" pos:end="64:41">picture_structure</name> <operator pos:start="64:43" pos:end="64:43">=</operator> <name pos:start="64:45" pos:end="64:50"><name pos:start="64:45" pos:end="64:47">buf</name><index pos:start="64:48" pos:end="64:50">[<expr pos:start="64:49" pos:end="64:49"><literal type="number" pos:start="64:49" pos:end="64:49">2</literal></expr>]</index></name><operator pos:start="64:51" pos:end="64:51">&amp;</operator><literal type="number" pos:start="64:52" pos:end="64:52">3</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="65:25" pos:end="65:60"><expr pos:start="65:25" pos:end="65:59"><name pos:start="65:25" pos:end="65:39">top_field_first</name> <operator pos:start="65:41" pos:end="65:41">=</operator> <name pos:start="65:43" pos:end="65:48"><name pos:start="65:43" pos:end="65:45">buf</name><index pos:start="65:46" pos:end="65:48">[<expr pos:start="65:47" pos:end="65:47"><literal type="number" pos:start="65:47" pos:end="65:47">3</literal></expr>]</index></name> <operator pos:start="65:50" pos:end="65:50">&amp;</operator> <operator pos:start="65:52" pos:end="65:52">(</operator><literal type="number" pos:start="65:53" pos:end="65:53">1</literal> <operator pos:start="65:55" pos:end="65:56">&lt;&lt;</operator> <literal type="number" pos:start="65:58" pos:end="65:58">7</literal><operator pos:start="65:59" pos:end="65:59">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="66:25" pos:end="66:63"><expr pos:start="66:25" pos:end="66:62"><name pos:start="66:25" pos:end="66:42">repeat_first_field</name> <operator pos:start="66:44" pos:end="66:44">=</operator> <name pos:start="66:46" pos:end="66:51"><name pos:start="66:46" pos:end="66:48">buf</name><index pos:start="66:49" pos:end="66:51">[<expr pos:start="66:50" pos:end="66:50"><literal type="number" pos:start="66:50" pos:end="66:50">3</literal></expr>]</index></name> <operator pos:start="66:53" pos:end="66:53">&amp;</operator> <operator pos:start="66:55" pos:end="66:55">(</operator><literal type="number" pos:start="66:56" pos:end="66:56">1</literal> <operator pos:start="66:58" pos:end="66:59">&lt;&lt;</operator> <literal type="number" pos:start="66:61" pos:end="66:61">1</literal><operator pos:start="66:62" pos:end="66:62">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="67:25" pos:end="67:62"><expr pos:start="67:25" pos:end="67:61"><name pos:start="67:25" pos:end="67:41">progressive_frame</name> <operator pos:start="67:43" pos:end="67:43">=</operator> <name pos:start="67:45" pos:end="67:50"><name pos:start="67:45" pos:end="67:47">buf</name><index pos:start="67:48" pos:end="67:50">[<expr pos:start="67:49" pos:end="67:49"><literal type="number" pos:start="67:49" pos:end="67:49">4</literal></expr>]</index></name> <operator pos:start="67:52" pos:end="67:52">&amp;</operator> <operator pos:start="67:54" pos:end="67:54">(</operator><literal type="number" pos:start="67:55" pos:end="67:55">1</literal> <operator pos:start="67:57" pos:end="67:58">&lt;&lt;</operator> <literal type="number" pos:start="67:60" pos:end="67:60">7</literal><operator pos:start="67:61" pos:end="67:61">)</operator></expr>;</expr_stmt>
                        <comment type="block" pos:start="68:25" pos:end="68:63">/* check if we must repeat the frame */</comment>
                        <if_stmt pos:start="69:25" pos:end="78:25"><if pos:start="69:25" pos:end="78:25">if <condition pos:start="69:28" pos:end="69:47">(<expr pos:start="69:29" pos:end="69:46"><name pos:start="69:29" pos:end="69:46">repeat_first_field</name></expr>)</condition> <block pos:start="69:49" pos:end="78:25">{<block_content pos:start="70:29" pos:end="77:29">
                            <if_stmt pos:start="70:29" pos:end="77:29"><if pos:start="70:29" pos:end="75:29">if <condition pos:start="70:32" pos:end="70:57">(<expr pos:start="70:33" pos:end="70:56"><name pos:start="70:33" pos:end="70:56"><name pos:start="70:33" pos:end="70:34">pc</name><operator pos:start="70:35" pos:end="70:36">-&gt;</operator><name pos:start="70:37" pos:end="70:56">progressive_sequence</name></name></expr>)</condition> <block pos:start="70:59" pos:end="75:29">{<block_content pos:start="71:33" pos:end="74:55">
                                <if_stmt pos:start="71:33" pos:end="74:55"><if pos:start="71:33" pos:end="72:55">if <condition pos:start="71:36" pos:end="71:52">(<expr pos:start="71:37" pos:end="71:51"><name pos:start="71:37" pos:end="71:51">top_field_first</name></expr>)</condition><block type="pseudo" pos:start="72:37" pos:end="72:55"><block_content pos:start="72:37" pos:end="72:55">
                                    <expr_stmt pos:start="72:37" pos:end="72:55"><expr pos:start="72:37" pos:end="72:54"><name pos:start="72:37" pos:end="72:50"><name pos:start="72:37" pos:end="72:37">s</name><operator pos:start="72:38" pos:end="72:39">-&gt;</operator><name pos:start="72:40" pos:end="72:50">repeat_pict</name></name> <operator pos:start="72:52" pos:end="72:52">=</operator> <literal type="number" pos:start="72:54" pos:end="72:54">4</literal></expr>;</expr_stmt></block_content></block></if>
                                <else pos:start="73:33" pos:end="74:55">else<block type="pseudo" pos:start="74:37" pos:end="74:55"><block_content pos:start="74:37" pos:end="74:55">
                                    <expr_stmt pos:start="74:37" pos:end="74:55"><expr pos:start="74:37" pos:end="74:54"><name pos:start="74:37" pos:end="74:50"><name pos:start="74:37" pos:end="74:37">s</name><operator pos:start="74:38" pos:end="74:39">-&gt;</operator><name pos:start="74:40" pos:end="74:50">repeat_pict</name></name> <operator pos:start="74:52" pos:end="74:52">=</operator> <literal type="number" pos:start="74:54" pos:end="74:54">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
                            </block_content>}</block></if> <if type="elseif" pos:start="75:31" pos:end="77:29">else if <condition pos:start="75:39" pos:end="75:57">(<expr pos:start="75:40" pos:end="75:56"><name pos:start="75:40" pos:end="75:56">progressive_frame</name></expr>)</condition> <block pos:start="75:59" pos:end="77:29">{<block_content pos:start="76:33" pos:end="76:51">
                                <expr_stmt pos:start="76:33" pos:end="76:51"><expr pos:start="76:33" pos:end="76:50"><name pos:start="76:33" pos:end="76:46"><name pos:start="76:33" pos:end="76:33">s</name><operator pos:start="76:34" pos:end="76:35">-&gt;</operator><name pos:start="76:36" pos:end="76:46">repeat_pict</name></name> <operator pos:start="76:48" pos:end="76:48">=</operator> <literal type="number" pos:start="76:50" pos:end="76:50">1</literal></expr>;</expr_stmt>
                            </block_content>}</block></if></if_stmt>
                        </block_content>}</block></if></if_stmt>
                    </block_content>}</block></if></if_stmt>
                    <break pos:start="80:21" pos:end="80:26">break;</break>
                </block_content>}</block></switch>
            </block_content>}</block></if></if_stmt>
            <break pos:start="83:13" pos:end="83:18">break;</break>
        <case pos:start="84:9" pos:end="84:16">case <expr pos:start="84:14" pos:end="84:15"><operator pos:start="84:14" pos:end="84:14">-</operator><literal type="number" pos:start="84:15" pos:end="84:15">1</literal></expr>:</case>
            <goto pos:start="85:13" pos:end="85:25">goto <name pos:start="85:18" pos:end="85:24">the_end</name>;</goto>
        <default pos:start="86:9" pos:end="86:16">default:</default>
            <comment type="block" pos:start="87:13" pos:end="88:70">/* we stop parsing when we encounter a slice. It ensures
               that this function takes a negligible amount of time */</comment>
            <if_stmt pos:start="89:13" pos:end="91:29"><if pos:start="89:13" pos:end="91:29">if <condition pos:start="89:16" pos:end="90:51">(<expr pos:start="89:17" pos:end="90:50"><name pos:start="89:17" pos:end="89:26">start_code</name> <operator pos:start="89:28" pos:end="89:29">&gt;=</operator> <name pos:start="89:31" pos:end="89:50">SLICE_MIN_START_CODE</name> <operator pos:start="89:52" pos:end="89:53">&amp;&amp;</operator>
                <name pos:start="90:17" pos:end="90:26">start_code</name> <operator pos:start="90:28" pos:end="90:29">&lt;=</operator> <name pos:start="90:31" pos:end="90:50">SLICE_MAX_START_CODE</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:29"><block_content pos:start="91:17" pos:end="91:29">
                <goto pos:start="91:17" pos:end="91:29">goto <name pos:start="91:22" pos:end="91:28">the_end</name>;</goto></block_content></block></if></if_stmt>
            <break pos:start="92:13" pos:end="92:18">break;</break>
        </block_content>}</block></switch>
    </block_content>}</block></while>
 <label pos:start="95:2" pos:end="95:9"><name pos:start="95:2" pos:end="95:8">the_end</name>:</label> <empty_stmt pos:start="95:11" pos:end="95:11">;</empty_stmt>
</block_content>}</block></function></unit>
