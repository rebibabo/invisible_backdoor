<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/522.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">QEMUFile</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:22">qemu_bufopen</name><parameter_list pos:start="1:23" pos:end="1:64">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:39">mode</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:63"><decl pos:start="1:42" pos:end="1:63"><type pos:start="1:42" pos:end="1:63"><name pos:start="1:42" pos:end="1:56">QEMUSizedBuffer</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">input</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:19">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">QEMUBuffer</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="11:24">(<expr pos:start="9:9" pos:end="11:23"><name pos:start="9:9" pos:end="9:12">mode</name> <operator pos:start="9:14" pos:end="9:15">==</operator> <name pos:start="9:17" pos:end="9:20">NULL</name> <operator pos:start="9:22" pos:end="9:23">||</operator> <operator pos:start="9:25" pos:end="9:25">(</operator><name pos:start="9:26" pos:end="9:32"><name pos:start="9:26" pos:end="9:29">mode</name><index pos:start="9:30" pos:end="9:32">[<expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr>]</index></name> <operator pos:start="9:34" pos:end="9:35">!=</operator> <literal type="char" pos:start="9:37" pos:end="9:39">'r'</literal> <operator pos:start="9:41" pos:end="9:42">&amp;&amp;</operator> <name pos:start="9:44" pos:end="9:50"><name pos:start="9:44" pos:end="9:47">mode</name><index pos:start="9:48" pos:end="9:50">[<expr pos:start="9:49" pos:end="9:49"><literal type="number" pos:start="9:49" pos:end="9:49">0</literal></expr>]</index></name> <operator pos:start="9:52" pos:end="9:53">!=</operator> <literal type="char" pos:start="9:55" pos:end="9:57">'w'</literal><operator pos:start="9:58" pos:end="9:58">)</operator> <operator pos:start="9:60" pos:end="9:61">||</operator>

        <name pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:12">mode</name><index pos:start="11:13" pos:end="11:15">[<expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">1</literal></expr>]</index></name> <operator pos:start="11:17" pos:end="11:18">!=</operator> <literal type="char" pos:start="11:20" pos:end="11:23">'\0'</literal></expr>)</condition> <block pos:start="11:26" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:20">

        <expr_stmt pos:start="13:9" pos:end="13:69"><expr pos:start="13:9" pos:end="13:68"><call pos:start="13:9" pos:end="13:68"><name pos:start="13:9" pos:end="13:20">error_report</name><argument_list pos:start="13:21" pos:end="13:68">(<argument pos:start="13:22" pos:end="13:67"><expr pos:start="13:22" pos:end="13:67"><literal type="string" pos:start="13:22" pos:end="13:67">"qemu_bufopen: Argument validity check failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:5">s</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:17">g_malloc0</name><argument_list pos:start="21:18" pos:end="21:37">(<argument pos:start="21:19" pos:end="21:36"><expr pos:start="21:19" pos:end="21:36"><sizeof pos:start="21:19" pos:end="21:36">sizeof<argument_list pos:start="21:25" pos:end="21:36">(<argument pos:start="21:26" pos:end="21:35"><expr pos:start="21:26" pos:end="21:35"><name pos:start="21:26" pos:end="21:35">QEMUBuffer</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:12">mode</name><index pos:start="23:13" pos:end="23:15">[<expr pos:start="23:14" pos:end="23:14"><literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>]</index></name> <operator pos:start="23:17" pos:end="23:18">==</operator> <literal type="char" pos:start="23:20" pos:end="23:22">'r'</literal></expr>)</condition> <block pos:start="23:25" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:23">

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:14">qsb</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:22">input</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:23">(<expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:14">qsb</name></name> <operator pos:start="31:16" pos:end="31:17">==</operator> <name pos:start="31:19" pos:end="31:22">NULL</name></expr>)</condition> <block pos:start="31:25" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:37">

        <expr_stmt pos:start="33:9" pos:end="33:37"><expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:14">qsb</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:36"><name pos:start="33:18" pos:end="33:27">qsb_create</name><argument_list pos:start="33:28" pos:end="33:36">(<argument pos:start="33:29" pos:end="33:32"><expr pos:start="33:29" pos:end="33:32"><name pos:start="33:29" pos:end="33:32">NULL</name></expr></argument>, <argument pos:start="33:35" pos:end="33:35"><expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:15"><name pos:start="37:10" pos:end="37:10">s</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:15">qsb</name></name></expr>)</condition> <block pos:start="37:18" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:20">

        <expr_stmt pos:start="39:9" pos:end="39:18"><expr pos:start="39:9" pos:end="39:17"><call pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:14">g_free</name><argument_list pos:start="39:15" pos:end="39:17">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:56"><expr pos:start="41:9" pos:end="41:55"><call pos:start="41:9" pos:end="41:55"><name pos:start="41:9" pos:end="41:20">error_report</name><argument_list pos:start="41:21" pos:end="41:55">(<argument pos:start="41:22" pos:end="41:54"><expr pos:start="41:22" pos:end="41:54"><literal type="string" pos:start="41:22" pos:end="41:54">"qemu_bufopen: qsb_create failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:20">return <expr pos:start="43:16" pos:end="43:19"><name pos:start="43:16" pos:end="43:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>





    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:23">(<expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:12">mode</name><index pos:start="51:13" pos:end="51:15">[<expr pos:start="51:14" pos:end="51:14"><literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>]</index></name> <operator pos:start="51:17" pos:end="51:18">==</operator> <literal type="char" pos:start="51:20" pos:end="51:22">'r'</literal></expr>)</condition> <block pos:start="51:25" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:51">

        <expr_stmt pos:start="53:9" pos:end="53:51"><expr pos:start="53:9" pos:end="53:50"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:15">file</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:50"><name pos:start="53:19" pos:end="53:32">qemu_fopen_ops</name><argument_list pos:start="53:33" pos:end="53:50">(<argument pos:start="53:34" pos:end="53:34"><expr pos:start="53:34" pos:end="53:34"><name pos:start="53:34" pos:end="53:34">s</name></expr></argument>, <argument pos:start="53:37" pos:end="53:49"><expr pos:start="53:37" pos:end="53:49"><operator pos:start="53:37" pos:end="53:37">&amp;</operator><name pos:start="53:38" pos:end="53:49">buf_read_ops</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:52">

        <expr_stmt pos:start="57:9" pos:end="57:52"><expr pos:start="57:9" pos:end="57:51"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:15">file</name></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="57:51"><name pos:start="57:19" pos:end="57:32">qemu_fopen_ops</name><argument_list pos:start="57:33" pos:end="57:51">(<argument pos:start="57:34" pos:end="57:34"><expr pos:start="57:34" pos:end="57:34"><name pos:start="57:34" pos:end="57:34">s</name></expr></argument>, <argument pos:start="57:37" pos:end="57:50"><expr pos:start="57:37" pos:end="57:50"><operator pos:start="57:37" pos:end="57:37">&amp;</operator><name pos:start="57:38" pos:end="57:50">buf_write_ops</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="61:5" pos:end="61:19">return <expr pos:start="61:12" pos:end="61:18"><name pos:start="61:12" pos:end="61:18"><name pos:start="61:12" pos:end="61:12">s</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:18">file</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
