<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1967.c" pos:tabs="8"><function pos:start="1:1" pos:end="239:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">dtext_prepare_text</name><parameter_list pos:start="1:30" pos:end="1:51">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:45">AVFilterContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="239:1">{<block_content pos:start="5:5" pos:end="237:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">DrawTextContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:26">dtext</name> <init pos:start="5:28" pos:end="5:38">= <expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:32">ctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:38">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">code</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>, <decl pos:start="7:24" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:24" pos:end="7:32">prev_code</name> <init pos:start="7:34" pos:end="7:36">= <expr pos:start="7:36" pos:end="7:36"><literal type="number" pos:start="7:36" pos:end="7:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">x</name> <init pos:start="9:11" pos:end="9:13">= <expr pos:start="9:13" pos:end="9:13"><literal type="number" pos:start="9:13" pos:end="9:13">0</literal></expr></init></decl>, <decl pos:start="9:16" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:16">y</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>, <decl pos:start="9:23" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:23">i</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>, <decl pos:start="9:30" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:32">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">text_height</name></decl>, <decl pos:start="11:22" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:29">baseline</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:14">text</name> <init pos:start="13:16" pos:end="13:28">= <expr pos:start="13:18" pos:end="13:28"><name pos:start="13:18" pos:end="13:28"><name pos:start="13:18" pos:end="13:22">dtext</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:28">text</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">str_w</name> <init pos:start="17:15" pos:end="17:17">= <expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></init></decl>, <decl pos:start="17:20" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:20" pos:end="17:22">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:38"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">y_min</name> <init pos:start="19:15" pos:end="19:21">= <expr pos:start="19:17" pos:end="19:21"><literal type="number" pos:start="19:17" pos:end="19:21">32000</literal></expr></init></decl>, <decl pos:start="19:24" pos:end="19:37"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:24" pos:end="19:28">y_max</name> <init pos:start="19:30" pos:end="19:37">= <expr pos:start="19:32" pos:end="19:37"><operator pos:start="19:32" pos:end="19:32">-</operator><literal type="number" pos:start="19:33" pos:end="19:37">32000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:13">FT_Vector</name></type> <name pos:start="21:15" pos:end="21:19">delta</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:44"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:9">Glyph</name> <modifier pos:start="23:11" pos:end="23:11">*</modifier></type><name pos:start="23:12" pos:end="23:16">glyph</name> <init pos:start="23:18" pos:end="23:23">= <expr pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:23">NULL</name></expr></init></decl>, <decl pos:start="23:26" pos:end="23:43"><type ref="prev" pos:start="23:5" pos:end="23:11"><modifier pos:start="23:26" pos:end="23:26">*</modifier></type><name pos:start="23:27" pos:end="23:36">prev_glyph</name> <init pos:start="23:38" pos:end="23:43">= <expr pos:start="23:40" pos:end="23:43"><name pos:start="23:40" pos:end="23:43">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:24"><decl pos:start="25:5" pos:end="25:23"><type pos:start="25:5" pos:end="25:9"><name pos:start="25:5" pos:end="25:9">Glyph</name></type> <name pos:start="25:11" pos:end="25:15">dummy</name> <init pos:start="25:17" pos:end="25:23">= <expr pos:start="25:19" pos:end="25:23"><block pos:start="25:19" pos:end="25:23">{ <expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:35"><decl pos:start="27:5" pos:end="27:34"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:13">width</name>  <init pos:start="27:16" pos:end="27:34">= <expr pos:start="27:18" pos:end="27:34"><name pos:start="27:18" pos:end="27:31"><name pos:start="27:18" pos:end="27:20">ctx</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:28">inputs</name><index pos:start="27:29" pos:end="27:31">[<expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">0</literal></expr>]</index></name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:34">w</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="34:0"><decl pos:start="29:5" pos:end="29:34"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:14">height</name> <init pos:start="29:16" pos:end="29:34">= <expr pos:start="29:18" pos:end="29:34"><name pos:start="29:18" pos:end="29:31"><name pos:start="29:18" pos:end="29:20">ctx</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:28">inputs</name><index pos:start="29:29" pos:end="29:31">[<expr pos:start="29:30" pos:end="29:30"><literal type="number" pos:start="29:30" pos:end="29:30">0</literal></expr>]</index></name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:34">h</name></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="33:1" pos:end="33:20">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:20">HAVE_LOCALTIME_R</name></expr></cpp:if>

    <decl_stmt pos:start="35:5" pos:end="35:25"><decl pos:start="35:5" pos:end="35:24"><type pos:start="35:5" pos:end="35:10"><name pos:start="35:5" pos:end="35:10">time_t</name></type> <name pos:start="35:12" pos:end="35:14">now</name> <init pos:start="35:16" pos:end="35:24">= <expr pos:start="35:18" pos:end="35:24"><call pos:start="35:18" pos:end="35:24"><name pos:start="35:18" pos:end="35:21">time</name><argument_list pos:start="35:22" pos:end="35:24">(<argument pos:start="35:23" pos:end="35:23"><expr pos:start="35:23" pos:end="35:23"><literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:20"><decl pos:start="37:5" pos:end="37:19"><type pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:10">struct</name> <name pos:start="37:12" pos:end="37:13">tm</name></name></type> <name pos:start="37:15" pos:end="37:19">ltime</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:40"><decl pos:start="39:5" pos:end="39:39"><type pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:11">uint8_t</name> <modifier pos:start="39:13" pos:end="39:13">*</modifier></type><name pos:start="39:14" pos:end="39:16">buf</name> <init pos:start="39:18" pos:end="39:39">= <expr pos:start="39:20" pos:end="39:39"><name pos:start="39:20" pos:end="39:39"><name pos:start="39:20" pos:end="39:24">dtext</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:39">expanded_text</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:45"><decl pos:start="41:5" pos:end="41:44"><type pos:start="41:5" pos:end="41:7"><name pos:start="41:5" pos:end="41:7">int</name></type> <name pos:start="41:9" pos:end="41:16">buf_size</name> <init pos:start="41:18" pos:end="41:44">= <expr pos:start="41:20" pos:end="41:44"><name pos:start="41:20" pos:end="41:44"><name pos:start="41:20" pos:end="41:24">dtext</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:44">expanded_text_size</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="45:5" pos:end="47:43"><if pos:start="45:5" pos:end="47:43">if <condition pos:start="45:8" pos:end="45:13">(<expr pos:start="45:9" pos:end="45:12"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:12">buf</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:43"><block_content pos:start="47:9" pos:end="47:43">

        <expr_stmt pos:start="47:9" pos:end="47:43"><expr pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:16">buf_size</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <literal type="number" pos:start="47:20" pos:end="47:20">2</literal><operator pos:start="47:21" pos:end="47:21">*</operator><call pos:start="47:22" pos:end="47:40"><name pos:start="47:22" pos:end="47:27">strlen</name><argument_list pos:start="47:28" pos:end="47:40">(<argument pos:start="47:29" pos:end="47:39"><expr pos:start="47:29" pos:end="47:39"><name pos:start="47:29" pos:end="47:39"><name pos:start="47:29" pos:end="47:33">dtext</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:39">text</name></name></expr></argument>)</argument_list></call><operator pos:start="47:41" pos:end="47:41">+</operator><literal type="number" pos:start="47:42" pos:end="47:42">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:30"><expr pos:start="51:5" pos:end="51:29"><call pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:15">localtime_r</name><argument_list pos:start="51:16" pos:end="51:29">(<argument pos:start="51:17" pos:end="51:20"><expr pos:start="51:17" pos:end="51:20"><operator pos:start="51:17" pos:end="51:17">&amp;</operator><name pos:start="51:18" pos:end="51:20">now</name></expr></argument>, <argument pos:start="51:23" pos:end="51:28"><expr pos:start="51:23" pos:end="51:28"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:28">ltime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="55:5" pos:end="65:5">while <condition pos:start="55:11" pos:end="55:45">(<expr pos:start="55:12" pos:end="55:44"><operator pos:start="55:12" pos:end="55:12">(</operator><name pos:start="55:13" pos:end="55:15">buf</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:43"><name pos:start="55:19" pos:end="55:28">av_realloc</name><argument_list pos:start="55:29" pos:end="55:43">(<argument pos:start="55:30" pos:end="55:32"><expr pos:start="55:30" pos:end="55:32"><name pos:start="55:30" pos:end="55:32">buf</name></expr></argument>, <argument pos:start="55:35" pos:end="55:42"><expr pos:start="55:35" pos:end="55:42"><name pos:start="55:35" pos:end="55:42">buf_size</name></expr></argument>)</argument_list></call><operator pos:start="55:44" pos:end="55:44">)</operator></expr>)</condition> <block pos:start="55:47" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:22">

        <expr_stmt pos:start="57:9" pos:end="57:17"><expr pos:start="57:9" pos:end="57:16"><operator pos:start="57:9" pos:end="57:9">*</operator><name pos:start="57:10" pos:end="57:12">buf</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <literal type="number" pos:start="57:16" pos:end="57:16">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:18"><if pos:start="59:9" pos:end="61:18">if <condition pos:start="59:12" pos:end="59:75">(<expr pos:start="59:13" pos:end="59:74"><call pos:start="59:13" pos:end="59:56"><name pos:start="59:13" pos:end="59:20">strftime</name><argument_list pos:start="59:21" pos:end="59:56">(<argument pos:start="59:22" pos:end="59:24"><expr pos:start="59:22" pos:end="59:24"><name pos:start="59:22" pos:end="59:24">buf</name></expr></argument>, <argument pos:start="59:27" pos:end="59:34"><expr pos:start="59:27" pos:end="59:34"><name pos:start="59:27" pos:end="59:34">buf_size</name></expr></argument>, <argument pos:start="59:37" pos:end="59:47"><expr pos:start="59:37" pos:end="59:47"><name pos:start="59:37" pos:end="59:47"><name pos:start="59:37" pos:end="59:41">dtext</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:47">text</name></name></expr></argument>, <argument pos:start="59:50" pos:end="59:55"><expr pos:start="59:50" pos:end="59:55"><operator pos:start="59:50" pos:end="59:50">&amp;</operator><name pos:start="59:51" pos:end="59:55">ltime</name></expr></argument>)</argument_list></call> <operator pos:start="59:58" pos:end="59:59">!=</operator> <literal type="number" pos:start="59:61" pos:end="59:61">0</literal> <operator pos:start="59:63" pos:end="59:64">||</operator> <operator pos:start="59:66" pos:end="59:66">*</operator><name pos:start="59:67" pos:end="59:69">buf</name> <operator pos:start="59:71" pos:end="59:72">==</operator> <literal type="number" pos:start="59:74" pos:end="59:74">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:18"><block_content pos:start="61:13" pos:end="61:18">

            <break pos:start="61:13" pos:end="61:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:22"><expr pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:16">buf_size</name> <operator pos:start="63:18" pos:end="63:19">*=</operator> <literal type="number" pos:start="63:21" pos:end="63:21">2</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="69:5" pos:end="71:31"><if pos:start="69:5" pos:end="71:31">if <condition pos:start="69:8" pos:end="69:13">(<expr pos:start="69:9" pos:end="69:12"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:12">buf</name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:31"><block_content pos:start="71:9" pos:end="71:31">

        <return pos:start="71:9" pos:end="71:31">return <expr pos:start="71:16" pos:end="71:30"><call pos:start="71:16" pos:end="71:30"><name pos:start="71:16" pos:end="71:22">AVERROR</name><argument_list pos:start="71:23" pos:end="71:30">(<argument pos:start="71:24" pos:end="71:29"><expr pos:start="71:24" pos:end="71:29"><name pos:start="71:24" pos:end="71:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:38"><expr pos:start="73:5" pos:end="73:37"><name pos:start="73:5" pos:end="73:8">text</name> <operator pos:start="73:10" pos:end="73:10">=</operator> <name pos:start="73:12" pos:end="73:31"><name pos:start="73:12" pos:end="73:16">dtext</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:31">expanded_text</name></name> <operator pos:start="73:33" pos:end="73:33">=</operator> <name pos:start="73:35" pos:end="73:37">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="78:0"><expr pos:start="75:5" pos:end="75:40"><name pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:9">dtext</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:29">expanded_text_size</name></name> <operator pos:start="75:31" pos:end="75:31">=</operator> <name pos:start="75:33" pos:end="75:40">buf_size</name></expr>;</expr_stmt>

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="81:5" pos:end="103:5"><if pos:start="81:5" pos:end="103:5">if <condition pos:start="81:8" pos:end="81:51">(<expr pos:start="81:9" pos:end="81:50"><operator pos:start="81:9" pos:end="81:9">(</operator><name pos:start="81:10" pos:end="81:12">len</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <call pos:start="81:16" pos:end="81:27"><name pos:start="81:16" pos:end="81:21">strlen</name><argument_list pos:start="81:22" pos:end="81:27">(<argument pos:start="81:23" pos:end="81:26"><expr pos:start="81:23" pos:end="81:26"><name pos:start="81:23" pos:end="81:26">text</name></expr></argument>)</argument_list></call><operator pos:start="81:28" pos:end="81:28">)</operator> <operator pos:start="81:30" pos:end="81:30">&gt;</operator> <name pos:start="81:32" pos:end="81:50"><name pos:start="81:32" pos:end="81:36">dtext</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:50">nb_positions</name></name></expr>)</condition> <block pos:start="81:53" pos:end="103:5">{<block_content pos:start="83:9" pos:end="101:9">

        <decl_stmt pos:start="83:9" pos:end="85:67"><decl pos:start="83:9" pos:end="85:66"><type pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:17">FT_Vector</name> <modifier pos:start="83:19" pos:end="83:19">*</modifier></type><name pos:start="83:20" pos:end="83:20">p</name> <init pos:start="83:22" pos:end="85:66">= <expr pos:start="83:24" pos:end="85:66"><call pos:start="83:24" pos:end="85:66"><name pos:start="83:24" pos:end="83:33">av_realloc</name><argument_list pos:start="83:34" pos:end="85:66">(<argument pos:start="83:35" pos:end="83:50"><expr pos:start="83:35" pos:end="83:50"><name pos:start="83:35" pos:end="83:50"><name pos:start="83:35" pos:end="83:39">dtext</name><operator pos:start="83:40" pos:end="83:41">-&gt;</operator><name pos:start="83:42" pos:end="83:50">positions</name></name></expr></argument>,

                                  <argument pos:start="85:35" pos:end="85:65"><expr pos:start="85:35" pos:end="85:65"><name pos:start="85:35" pos:end="85:37">len</name> <operator pos:start="85:39" pos:end="85:39">*</operator> <sizeof pos:start="85:41" pos:end="85:65">sizeof<argument_list pos:start="85:47" pos:end="85:65">(<argument pos:start="85:48" pos:end="85:64"><expr pos:start="85:48" pos:end="85:64"><operator pos:start="85:48" pos:end="85:48">*</operator><name pos:start="85:49" pos:end="85:64"><name pos:start="85:49" pos:end="85:53">dtext</name><operator pos:start="85:54" pos:end="85:55">-&gt;</operator><name pos:start="85:56" pos:end="85:64">positions</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="87:9" pos:end="101:9"><if pos:start="87:9" pos:end="95:9">if <condition pos:start="87:12" pos:end="87:15">(<expr pos:start="87:13" pos:end="87:14"><operator pos:start="87:13" pos:end="87:13">!</operator><name pos:start="87:14" pos:end="87:14">p</name></expr>)</condition> <block pos:start="87:17" pos:end="95:9">{<block_content pos:start="89:13" pos:end="93:35">

            <expr_stmt pos:start="89:13" pos:end="89:39"><expr pos:start="89:13" pos:end="89:38"><call pos:start="89:13" pos:end="89:38"><name pos:start="89:13" pos:end="89:20">av_freep</name><argument_list pos:start="89:21" pos:end="89:38">(<argument pos:start="89:22" pos:end="89:37"><expr pos:start="89:22" pos:end="89:37"><name pos:start="89:22" pos:end="89:37"><name pos:start="89:22" pos:end="89:26">dtext</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:37">positions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:36"><expr pos:start="91:13" pos:end="91:35"><name pos:start="91:13" pos:end="91:31"><name pos:start="91:13" pos:end="91:17">dtext</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:31">nb_positions</name></name> <operator pos:start="91:33" pos:end="91:33">=</operator> <literal type="number" pos:start="91:35" pos:end="91:35">0</literal></expr>;</expr_stmt>

            <return pos:start="93:13" pos:end="93:35">return <expr pos:start="93:20" pos:end="93:34"><call pos:start="93:20" pos:end="93:34"><name pos:start="93:20" pos:end="93:26">AVERROR</name><argument_list pos:start="93:27" pos:end="93:34">(<argument pos:start="93:28" pos:end="93:33"><expr pos:start="93:28" pos:end="93:33"><name pos:start="93:28" pos:end="93:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="101:9">else <block pos:start="95:16" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:38">

            <expr_stmt pos:start="97:13" pos:end="97:33"><expr pos:start="97:13" pos:end="97:32"><name pos:start="97:13" pos:end="97:28"><name pos:start="97:13" pos:end="97:17">dtext</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:28">positions</name></name> <operator pos:start="97:30" pos:end="97:30">=</operator> <name pos:start="97:32" pos:end="97:32">p</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:38"><expr pos:start="99:13" pos:end="99:37"><name pos:start="99:13" pos:end="99:31"><name pos:start="99:13" pos:end="99:17">dtext</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:31">nb_positions</name></name> <operator pos:start="99:33" pos:end="99:33">=</operator> <name pos:start="99:35" pos:end="99:37">len</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="107:5" pos:end="107:31">/* load and cache glyphs */</comment>

    <for pos:start="109:5" pos:end="133:5">for <control pos:start="109:9" pos:end="109:34">(<init pos:start="109:10" pos:end="109:25"><expr pos:start="109:10" pos:end="109:14"><name pos:start="109:10" pos:end="109:10">i</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <literal type="number" pos:start="109:14" pos:end="109:14">0</literal></expr><operator pos:start="109:15" pos:end="109:15">,</operator> <expr pos:start="109:17" pos:end="109:24"><name pos:start="109:17" pos:end="109:17">p</name> <operator pos:start="109:19" pos:end="109:19">=</operator> <name pos:start="109:21" pos:end="109:24">text</name></expr>;</init> <condition pos:start="109:27" pos:end="109:29"><expr pos:start="109:27" pos:end="109:28"><operator pos:start="109:27" pos:end="109:27">*</operator><name pos:start="109:28" pos:end="109:28">p</name></expr>;</condition> <incr pos:start="109:31" pos:end="109:33"><expr pos:start="109:31" pos:end="109:33"><name pos:start="109:31" pos:end="109:31">i</name><operator pos:start="109:32" pos:end="109:33">++</operator></expr></incr>)</control> <block pos:start="109:36" pos:end="133:5">{<block_content pos:start="111:9" pos:end="131:47">

        <macro pos:start="111:9" pos:end="111:39"><name pos:start="111:9" pos:end="111:16">GET_UTF8</name><argument_list pos:start="111:17" pos:end="111:39">(<argument pos:start="111:18" pos:end="111:21">code</argument>, <argument pos:start="111:24" pos:end="111:27">*p++</argument>, <argument pos:start="111:30" pos:end="111:38">continue;</argument>)</argument_list></macro><empty_stmt pos:start="111:40" pos:end="111:40">;</empty_stmt>



        <comment type="block" pos:start="115:9" pos:end="115:23">/* get glyph */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:26"><expr pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:18"><name pos:start="117:9" pos:end="117:13">dummy</name><operator pos:start="117:14" pos:end="117:14">.</operator><name pos:start="117:15" pos:end="117:18">code</name></name> <operator pos:start="117:20" pos:end="117:20">=</operator> <name pos:start="117:22" pos:end="117:25">code</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:69"><expr pos:start="119:9" pos:end="119:68"><name pos:start="119:9" pos:end="119:13">glyph</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <call pos:start="119:17" pos:end="119:68"><name pos:start="119:17" pos:end="119:28">av_tree_find</name><argument_list pos:start="119:29" pos:end="119:68">(<argument pos:start="119:30" pos:end="119:42"><expr pos:start="119:30" pos:end="119:42"><name pos:start="119:30" pos:end="119:42"><name pos:start="119:30" pos:end="119:34">dtext</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:42">glyphs</name></name></expr></argument>, <argument pos:start="119:45" pos:end="119:50"><expr pos:start="119:45" pos:end="119:50"><operator pos:start="119:45" pos:end="119:45">&amp;</operator><name pos:start="119:46" pos:end="119:50">dummy</name></expr></argument>, <argument pos:start="119:53" pos:end="119:61"><expr pos:start="119:53" pos:end="119:61"><name pos:start="119:53" pos:end="119:61">glyph_cmp</name></expr></argument>, <argument pos:start="119:64" pos:end="119:67"><expr pos:start="119:64" pos:end="119:67"><name pos:start="119:64" pos:end="119:67">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="123:48"><if pos:start="121:9" pos:end="123:48">if <condition pos:start="121:12" pos:end="121:19">(<expr pos:start="121:13" pos:end="121:18"><operator pos:start="121:13" pos:end="121:13">!</operator><name pos:start="121:14" pos:end="121:18">glyph</name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:48"><block_content pos:start="123:13" pos:end="123:48">

            <expr_stmt pos:start="123:13" pos:end="123:48"><expr pos:start="123:13" pos:end="123:47"><name pos:start="123:13" pos:end="123:15">ret</name> <operator pos:start="123:17" pos:end="123:17">=</operator> <call pos:start="123:19" pos:end="123:47"><name pos:start="123:19" pos:end="123:28">load_glyph</name><argument_list pos:start="123:29" pos:end="123:47">(<argument pos:start="123:30" pos:end="123:32"><expr pos:start="123:30" pos:end="123:32"><name pos:start="123:30" pos:end="123:32">ctx</name></expr></argument>, <argument pos:start="123:35" pos:end="123:40"><expr pos:start="123:35" pos:end="123:40"><operator pos:start="123:35" pos:end="123:35">&amp;</operator><name pos:start="123:36" pos:end="123:40">glyph</name></expr></argument>, <argument pos:start="123:43" pos:end="123:46"><expr pos:start="123:43" pos:end="123:46"><name pos:start="123:43" pos:end="123:46">code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="125:28"><if pos:start="125:9" pos:end="125:28">if <condition pos:start="125:12" pos:end="125:16">(<expr pos:start="125:13" pos:end="125:15"><name pos:start="125:13" pos:end="125:15">ret</name></expr>)</condition><block type="pseudo" pos:start="125:18" pos:end="125:28"><block_content pos:start="125:18" pos:end="125:28"> <return pos:start="125:18" pos:end="125:28">return <expr pos:start="125:25" pos:end="125:27"><name pos:start="125:25" pos:end="125:27">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:47"><expr pos:start="129:9" pos:end="129:46"><name pos:start="129:9" pos:end="129:13">y_min</name> <operator pos:start="129:15" pos:end="129:15">=</operator> <call pos:start="129:17" pos:end="129:46"><name pos:start="129:17" pos:end="129:21">FFMIN</name><argument_list pos:start="129:22" pos:end="129:46">(<argument pos:start="129:23" pos:end="129:38"><expr pos:start="129:23" pos:end="129:38"><name pos:start="129:23" pos:end="129:38"><name pos:start="129:23" pos:end="129:27">glyph</name><operator pos:start="129:28" pos:end="129:29">-&gt;</operator><name pos:start="129:30" pos:end="129:33">bbox</name><operator pos:start="129:34" pos:end="129:34">.</operator><name pos:start="129:35" pos:end="129:38">yMin</name></name></expr></argument>, <argument pos:start="129:41" pos:end="129:45"><expr pos:start="129:41" pos:end="129:45"><name pos:start="129:41" pos:end="129:45">y_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:47"><expr pos:start="131:9" pos:end="131:46"><name pos:start="131:9" pos:end="131:13">y_max</name> <operator pos:start="131:15" pos:end="131:15">=</operator> <call pos:start="131:17" pos:end="131:46"><name pos:start="131:17" pos:end="131:21">FFMAX</name><argument_list pos:start="131:22" pos:end="131:46">(<argument pos:start="131:23" pos:end="131:38"><expr pos:start="131:23" pos:end="131:38"><name pos:start="131:23" pos:end="131:38"><name pos:start="131:23" pos:end="131:27">glyph</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:33">bbox</name><operator pos:start="131:34" pos:end="131:34">.</operator><name pos:start="131:35" pos:end="131:38">yMax</name></name></expr></argument>, <argument pos:start="131:41" pos:end="131:45"><expr pos:start="131:41" pos:end="131:45"><name pos:start="131:41" pos:end="131:45">y_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="135:5" pos:end="135:32"><expr pos:start="135:5" pos:end="135:31"><name pos:start="135:5" pos:end="135:15">text_height</name> <operator pos:start="135:17" pos:end="135:17">=</operator> <name pos:start="135:19" pos:end="135:23">y_max</name> <operator pos:start="135:25" pos:end="135:25">-</operator> <name pos:start="135:27" pos:end="135:31">y_min</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:24"><expr pos:start="137:5" pos:end="137:23"><name pos:start="137:5" pos:end="137:12">baseline</name>    <operator pos:start="137:17" pos:end="137:17">=</operator> <name pos:start="137:19" pos:end="137:23">y_max</name></expr>;</expr_stmt>



    <comment type="block" pos:start="141:5" pos:end="141:50">/* compute and save position for each glyph */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:17"><expr pos:start="143:5" pos:end="143:16"><name pos:start="143:5" pos:end="143:9">glyph</name> <operator pos:start="143:11" pos:end="143:11">=</operator> <name pos:start="143:13" pos:end="143:16">NULL</name></expr>;</expr_stmt>

    <for pos:start="145:5" pos:end="221:5">for <control pos:start="145:9" pos:end="145:34">(<init pos:start="145:10" pos:end="145:25"><expr pos:start="145:10" pos:end="145:14"><name pos:start="145:10" pos:end="145:10">i</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <literal type="number" pos:start="145:14" pos:end="145:14">0</literal></expr><operator pos:start="145:15" pos:end="145:15">,</operator> <expr pos:start="145:17" pos:end="145:24"><name pos:start="145:17" pos:end="145:17">p</name> <operator pos:start="145:19" pos:end="145:19">=</operator> <name pos:start="145:21" pos:end="145:24">text</name></expr>;</init> <condition pos:start="145:27" pos:end="145:29"><expr pos:start="145:27" pos:end="145:28"><operator pos:start="145:27" pos:end="145:27">*</operator><name pos:start="145:28" pos:end="145:28">p</name></expr>;</condition> <incr pos:start="145:31" pos:end="145:33"><expr pos:start="145:31" pos:end="145:33"><name pos:start="145:31" pos:end="145:31">i</name><operator pos:start="145:32" pos:end="145:33">++</operator></expr></incr>)</control> <block pos:start="145:36" pos:end="221:5">{<block_content pos:start="147:9" pos:end="219:46">

        <macro pos:start="147:9" pos:end="147:39"><name pos:start="147:9" pos:end="147:16">GET_UTF8</name><argument_list pos:start="147:17" pos:end="147:39">(<argument pos:start="147:18" pos:end="147:21">code</argument>, <argument pos:start="147:24" pos:end="147:27">*p++</argument>, <argument pos:start="147:30" pos:end="147:38">continue;</argument>)</argument_list></macro><empty_stmt pos:start="147:40" pos:end="147:40">;</empty_stmt>



        <comment type="block" pos:start="151:9" pos:end="151:46">/* skip the \n in the sequence \r\n */</comment>

        <if_stmt pos:start="153:9" pos:end="155:21"><if pos:start="153:9" pos:end="155:21">if <condition pos:start="153:12" pos:end="153:46">(<expr pos:start="153:13" pos:end="153:45"><name pos:start="153:13" pos:end="153:21">prev_code</name> <operator pos:start="153:23" pos:end="153:24">==</operator> <literal type="char" pos:start="153:26" pos:end="153:29">'\r'</literal> <operator pos:start="153:31" pos:end="153:32">&amp;&amp;</operator> <name pos:start="153:34" pos:end="153:37">code</name> <operator pos:start="153:39" pos:end="153:40">==</operator> <literal type="char" pos:start="153:42" pos:end="153:45">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:21"><block_content pos:start="155:13" pos:end="155:21">

            <continue pos:start="155:13" pos:end="155:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="159:9" pos:end="159:25"><expr pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:17">prev_code</name> <operator pos:start="159:19" pos:end="159:19">=</operator> <name pos:start="159:21" pos:end="159:24">code</name></expr>;</expr_stmt>

        <if_stmt pos:start="161:9" pos:end="171:9"><if pos:start="161:9" pos:end="171:9">if <condition pos:start="161:12" pos:end="161:29">(<expr pos:start="161:13" pos:end="161:28"><call pos:start="161:13" pos:end="161:28"><name pos:start="161:13" pos:end="161:22">is_newline</name><argument_list pos:start="161:23" pos:end="161:28">(<argument pos:start="161:24" pos:end="161:27"><expr pos:start="161:24" pos:end="161:27"><name pos:start="161:24" pos:end="161:27">code</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:31" pos:end="171:9">{<block_content pos:start="163:13" pos:end="169:21">

            <expr_stmt pos:start="163:13" pos:end="163:47"><expr pos:start="163:13" pos:end="163:46"><name pos:start="163:13" pos:end="163:17">str_w</name> <operator pos:start="163:19" pos:end="163:19">=</operator> <call pos:start="163:21" pos:end="163:46"><name pos:start="163:21" pos:end="163:25">FFMAX</name><argument_list pos:start="163:26" pos:end="163:46">(<argument pos:start="163:27" pos:end="163:31"><expr pos:start="163:27" pos:end="163:31"><name pos:start="163:27" pos:end="163:31">str_w</name></expr></argument>, <argument pos:start="163:34" pos:end="163:45"><expr pos:start="163:34" pos:end="163:45"><name pos:start="163:34" pos:end="163:34">x</name> <operator pos:start="163:36" pos:end="163:36">-</operator> <name pos:start="163:38" pos:end="163:45"><name pos:start="163:38" pos:end="163:42">dtext</name><operator pos:start="163:43" pos:end="163:44">-&gt;</operator><name pos:start="163:45" pos:end="163:45">x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:29"><expr pos:start="165:13" pos:end="165:28"><name pos:start="165:13" pos:end="165:13">y</name> <operator pos:start="165:15" pos:end="165:16">+=</operator> <name pos:start="165:18" pos:end="165:28">text_height</name></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:18"><expr pos:start="167:13" pos:end="167:17"><name pos:start="167:13" pos:end="167:13">x</name> <operator pos:start="167:15" pos:end="167:15">=</operator> <literal type="number" pos:start="167:17" pos:end="167:17">0</literal></expr>;</expr_stmt>

            <continue pos:start="169:13" pos:end="169:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="175:9" pos:end="175:23">/* get glyph */</comment>

        <expr_stmt pos:start="177:9" pos:end="177:27"><expr pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:18">prev_glyph</name> <operator pos:start="177:20" pos:end="177:20">=</operator> <name pos:start="177:22" pos:end="177:26">glyph</name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:26"><expr pos:start="179:9" pos:end="179:25"><name pos:start="179:9" pos:end="179:18"><name pos:start="179:9" pos:end="179:13">dummy</name><operator pos:start="179:14" pos:end="179:14">.</operator><name pos:start="179:15" pos:end="179:18">code</name></name> <operator pos:start="179:20" pos:end="179:20">=</operator> <name pos:start="179:22" pos:end="179:25">code</name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:69"><expr pos:start="181:9" pos:end="181:68"><name pos:start="181:9" pos:end="181:13">glyph</name> <operator pos:start="181:15" pos:end="181:15">=</operator> <call pos:start="181:17" pos:end="181:68"><name pos:start="181:17" pos:end="181:28">av_tree_find</name><argument_list pos:start="181:29" pos:end="181:68">(<argument pos:start="181:30" pos:end="181:42"><expr pos:start="181:30" pos:end="181:42"><name pos:start="181:30" pos:end="181:42"><name pos:start="181:30" pos:end="181:34">dtext</name><operator pos:start="181:35" pos:end="181:36">-&gt;</operator><name pos:start="181:37" pos:end="181:42">glyphs</name></name></expr></argument>, <argument pos:start="181:45" pos:end="181:50"><expr pos:start="181:45" pos:end="181:50"><operator pos:start="181:45" pos:end="181:45">&amp;</operator><name pos:start="181:46" pos:end="181:50">dummy</name></expr></argument>, <argument pos:start="181:53" pos:end="181:61"><expr pos:start="181:53" pos:end="181:61"><name pos:start="181:53" pos:end="181:61">glyph_cmp</name></expr></argument>, <argument pos:start="181:64" pos:end="181:67"><expr pos:start="181:64" pos:end="181:67"><name pos:start="181:64" pos:end="181:67">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="185:9" pos:end="185:21">/* kerning */</comment>

        <if_stmt pos:start="187:9" pos:end="195:9"><if pos:start="187:9" pos:end="195:9">if <condition pos:start="187:12" pos:end="187:60">(<expr pos:start="187:13" pos:end="187:59"><name pos:start="187:13" pos:end="187:30"><name pos:start="187:13" pos:end="187:17">dtext</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:30">use_kerning</name></name> <operator pos:start="187:32" pos:end="187:33">&amp;&amp;</operator> <name pos:start="187:35" pos:end="187:44">prev_glyph</name> <operator pos:start="187:46" pos:end="187:47">&amp;&amp;</operator> <name pos:start="187:49" pos:end="187:59"><name pos:start="187:49" pos:end="187:53">glyph</name><operator pos:start="187:54" pos:end="187:55">-&gt;</operator><name pos:start="187:56" pos:end="187:59">code</name></name></expr>)</condition> <block pos:start="187:62" pos:end="195:9">{<block_content pos:start="189:13" pos:end="193:30">

            <expr_stmt pos:start="189:13" pos:end="191:55"><expr pos:start="189:13" pos:end="191:54"><call pos:start="189:13" pos:end="191:54"><name pos:start="189:13" pos:end="189:26">FT_Get_Kerning</name><argument_list pos:start="189:27" pos:end="191:54">(<argument pos:start="189:28" pos:end="189:38"><expr pos:start="189:28" pos:end="189:38"><name pos:start="189:28" pos:end="189:38"><name pos:start="189:28" pos:end="189:32">dtext</name><operator pos:start="189:33" pos:end="189:34">-&gt;</operator><name pos:start="189:35" pos:end="189:38">face</name></name></expr></argument>, <argument pos:start="189:41" pos:end="189:56"><expr pos:start="189:41" pos:end="189:56"><name pos:start="189:41" pos:end="189:56"><name pos:start="189:41" pos:end="189:50">prev_glyph</name><operator pos:start="189:51" pos:end="189:52">-&gt;</operator><name pos:start="189:53" pos:end="189:56">code</name></name></expr></argument>, <argument pos:start="189:59" pos:end="189:69"><expr pos:start="189:59" pos:end="189:69"><name pos:start="189:59" pos:end="189:69"><name pos:start="189:59" pos:end="189:63">glyph</name><operator pos:start="189:64" pos:end="189:65">-&gt;</operator><name pos:start="189:66" pos:end="189:69">code</name></name></expr></argument>,

                           <argument pos:start="191:28" pos:end="191:45"><expr pos:start="191:28" pos:end="191:45"><name pos:start="191:28" pos:end="191:45">ft_kerning_default</name></expr></argument>, <argument pos:start="191:48" pos:end="191:53"><expr pos:start="191:48" pos:end="191:53"><operator pos:start="191:48" pos:end="191:48">&amp;</operator><name pos:start="191:49" pos:end="191:53">delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:30"><expr pos:start="193:13" pos:end="193:29"><name pos:start="193:13" pos:end="193:13">x</name> <operator pos:start="193:15" pos:end="193:16">+=</operator> <name pos:start="193:18" pos:end="193:24"><name pos:start="193:18" pos:end="193:22">delta</name><operator pos:start="193:23" pos:end="193:23">.</operator><name pos:start="193:24" pos:end="193:24">x</name></name> <operator pos:start="193:26" pos:end="193:27">&gt;&gt;</operator> <literal type="number" pos:start="193:29" pos:end="193:29">6</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="199:9" pos:end="207:9"><if pos:start="199:9" pos:end="207:9">if <condition pos:start="199:12" pos:end="199:42">(<expr pos:start="199:13" pos:end="199:41"><name pos:start="199:13" pos:end="199:13">x</name> <operator pos:start="199:15" pos:end="199:15">+</operator> <name pos:start="199:17" pos:end="199:32"><name pos:start="199:17" pos:end="199:21">glyph</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:27">bbox</name><operator pos:start="199:28" pos:end="199:28">.</operator><name pos:start="199:29" pos:end="199:32">xMax</name></name> <operator pos:start="199:34" pos:end="199:35">&gt;=</operator> <name pos:start="199:37" pos:end="199:41">width</name></expr>)</condition> <block pos:start="199:44" pos:end="207:9">{<block_content pos:start="201:13" pos:end="205:18">

            <expr_stmt pos:start="201:13" pos:end="201:36"><expr pos:start="201:13" pos:end="201:35"><name pos:start="201:13" pos:end="201:17">str_w</name> <operator pos:start="201:19" pos:end="201:19">=</operator> <call pos:start="201:21" pos:end="201:35"><name pos:start="201:21" pos:end="201:25">FFMAX</name><argument_list pos:start="201:26" pos:end="201:35">(<argument pos:start="201:27" pos:end="201:31"><expr pos:start="201:27" pos:end="201:31"><name pos:start="201:27" pos:end="201:31">str_w</name></expr></argument>, <argument pos:start="201:34" pos:end="201:34"><expr pos:start="201:34" pos:end="201:34"><name pos:start="201:34" pos:end="201:34">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:29"><expr pos:start="203:13" pos:end="203:28"><name pos:start="203:13" pos:end="203:13">y</name> <operator pos:start="203:15" pos:end="203:16">+=</operator> <name pos:start="203:18" pos:end="203:28">text_height</name></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:18"><expr pos:start="205:13" pos:end="205:17"><name pos:start="205:13" pos:end="205:13">x</name> <operator pos:start="205:15" pos:end="205:15">=</operator> <literal type="number" pos:start="205:17" pos:end="205:17">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="211:9" pos:end="211:27">/* save position */</comment>

        <expr_stmt pos:start="213:9" pos:end="213:55"><expr pos:start="213:9" pos:end="213:54"><name pos:start="213:9" pos:end="213:27"><name pos:start="213:9" pos:end="213:13">dtext</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:24">positions</name><index pos:start="213:25" pos:end="213:27">[<expr pos:start="213:26" pos:end="213:26"><name pos:start="213:26" pos:end="213:26">i</name></expr>]</index></name><operator pos:start="213:28" pos:end="213:28">.</operator><name pos:start="213:29" pos:end="213:29">x</name> <operator pos:start="213:31" pos:end="213:31">=</operator> <name pos:start="213:33" pos:end="213:33">x</name> <operator pos:start="213:35" pos:end="213:35">+</operator> <name pos:start="213:37" pos:end="213:54"><name pos:start="213:37" pos:end="213:41">glyph</name><operator pos:start="213:42" pos:end="213:43">-&gt;</operator><name pos:start="213:44" pos:end="213:54">bitmap_left</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:65"><expr pos:start="215:9" pos:end="215:64"><name pos:start="215:9" pos:end="215:27"><name pos:start="215:9" pos:end="215:13">dtext</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:24">positions</name><index pos:start="215:25" pos:end="215:27">[<expr pos:start="215:26" pos:end="215:26"><name pos:start="215:26" pos:end="215:26">i</name></expr>]</index></name><operator pos:start="215:28" pos:end="215:28">.</operator><name pos:start="215:29" pos:end="215:29">y</name> <operator pos:start="215:31" pos:end="215:31">=</operator> <name pos:start="215:33" pos:end="215:33">y</name> <operator pos:start="215:35" pos:end="215:35">-</operator> <name pos:start="215:37" pos:end="215:53"><name pos:start="215:37" pos:end="215:41">glyph</name><operator pos:start="215:42" pos:end="215:43">-&gt;</operator><name pos:start="215:44" pos:end="215:53">bitmap_top</name></name> <operator pos:start="215:55" pos:end="215:55">+</operator> <name pos:start="215:57" pos:end="215:64">baseline</name></expr>;</expr_stmt>

        <if_stmt pos:start="217:9" pos:end="219:46"><if pos:start="217:9" pos:end="217:71">if <condition pos:start="217:12" pos:end="217:25">(<expr pos:start="217:13" pos:end="217:24"><name pos:start="217:13" pos:end="217:16">code</name> <operator pos:start="217:18" pos:end="217:19">==</operator> <literal type="char" pos:start="217:21" pos:end="217:24">'\t'</literal></expr>)</condition><block type="pseudo" pos:start="217:27" pos:end="217:71"><block_content pos:start="217:27" pos:end="217:71"> <expr_stmt pos:start="217:27" pos:end="217:71"><expr pos:start="217:27" pos:end="217:70"><name pos:start="217:27" pos:end="217:27">x</name>  <operator pos:start="217:30" pos:end="217:30">=</operator> <operator pos:start="217:32" pos:end="217:32">(</operator><name pos:start="217:33" pos:end="217:33">x</name> <operator pos:start="217:35" pos:end="217:35">/</operator> <name pos:start="217:37" pos:end="217:50"><name pos:start="217:37" pos:end="217:41">dtext</name><operator pos:start="217:42" pos:end="217:43">-&gt;</operator><name pos:start="217:44" pos:end="217:50">tabsize</name></name> <operator pos:start="217:52" pos:end="217:52">+</operator> <literal type="number" pos:start="217:54" pos:end="217:54">1</literal><operator pos:start="217:55" pos:end="217:55">)</operator><operator pos:start="217:56" pos:end="217:56">*</operator><name pos:start="217:57" pos:end="217:70"><name pos:start="217:57" pos:end="217:61">dtext</name><operator pos:start="217:62" pos:end="217:63">-&gt;</operator><name pos:start="217:64" pos:end="217:70">tabsize</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="219:9" pos:end="219:46">else<block type="pseudo" pos:start="219:27" pos:end="219:46"><block_content pos:start="219:27" pos:end="219:46">              <expr_stmt pos:start="219:27" pos:end="219:46"><expr pos:start="219:27" pos:end="219:45"><name pos:start="219:27" pos:end="219:27">x</name> <operator pos:start="219:29" pos:end="219:30">+=</operator> <name pos:start="219:32" pos:end="219:45"><name pos:start="219:32" pos:end="219:36">glyph</name><operator pos:start="219:37" pos:end="219:38">-&gt;</operator><name pos:start="219:39" pos:end="219:45">advance</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="225:5" pos:end="225:46"><expr pos:start="225:5" pos:end="225:45"><name pos:start="225:5" pos:end="225:9">str_w</name> <operator pos:start="225:11" pos:end="225:11">=</operator> <call pos:start="225:13" pos:end="225:45"><name pos:start="225:13" pos:end="225:17">FFMIN</name><argument_list pos:start="225:18" pos:end="225:45">(<argument pos:start="225:19" pos:end="225:27"><expr pos:start="225:19" pos:end="225:27"><name pos:start="225:19" pos:end="225:23">width</name> <operator pos:start="225:25" pos:end="225:25">-</operator> <literal type="number" pos:start="225:27" pos:end="225:27">1</literal></expr></argument>, <argument pos:start="225:30" pos:end="225:44"><expr pos:start="225:30" pos:end="225:44"><call pos:start="225:30" pos:end="225:44"><name pos:start="225:30" pos:end="225:34">FFMAX</name><argument_list pos:start="225:35" pos:end="225:44">(<argument pos:start="225:36" pos:end="225:40"><expr pos:start="225:36" pos:end="225:40"><name pos:start="225:36" pos:end="225:40">str_w</name></expr></argument>, <argument pos:start="225:43" pos:end="225:43"><expr pos:start="225:43" pos:end="225:43"><name pos:start="225:43" pos:end="225:43">x</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:47"><expr pos:start="227:5" pos:end="227:46"><name pos:start="227:5" pos:end="227:5">y</name>     <operator pos:start="227:11" pos:end="227:11">=</operator> <call pos:start="227:13" pos:end="227:46"><name pos:start="227:13" pos:end="227:17">FFMIN</name><argument_list pos:start="227:18" pos:end="227:46">(<argument pos:start="227:19" pos:end="227:33"><expr pos:start="227:19" pos:end="227:33"><name pos:start="227:19" pos:end="227:19">y</name> <operator pos:start="227:21" pos:end="227:21">+</operator> <name pos:start="227:23" pos:end="227:33">text_height</name></expr></argument>, <argument pos:start="227:36" pos:end="227:45"><expr pos:start="227:36" pos:end="227:45"><name pos:start="227:36" pos:end="227:41">height</name> <operator pos:start="227:43" pos:end="227:43">-</operator> <literal type="number" pos:start="227:45" pos:end="227:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="231:5" pos:end="231:21"><expr pos:start="231:5" pos:end="231:20"><name pos:start="231:5" pos:end="231:12"><name pos:start="231:5" pos:end="231:9">dtext</name><operator pos:start="231:10" pos:end="231:11">-&gt;</operator><name pos:start="231:12" pos:end="231:12">w</name></name> <operator pos:start="231:14" pos:end="231:14">=</operator> <name pos:start="231:16" pos:end="231:20">str_w</name></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:17"><expr pos:start="233:5" pos:end="233:16"><name pos:start="233:5" pos:end="233:12"><name pos:start="233:5" pos:end="233:9">dtext</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:12">h</name></name> <operator pos:start="233:14" pos:end="233:14">=</operator> <name pos:start="233:16" pos:end="233:16">y</name></expr>;</expr_stmt>



    <return pos:start="237:5" pos:end="237:13">return <expr pos:start="237:12" pos:end="237:12"><literal type="number" pos:start="237:12" pos:end="237:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
