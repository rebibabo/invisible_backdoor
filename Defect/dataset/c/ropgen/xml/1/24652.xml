<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24652.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">handle_control_message</name><parameter_list pos:start="1:35" pos:end="1:65">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:47">VirtIOSerial</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">vser</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:64"><decl pos:start="1:56" pos:end="1:64"><type pos:start="1:56" pos:end="1:64"><name pos:start="1:56" pos:end="1:59">void</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="185:1">{<block_content pos:start="5:5" pos:end="183:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:27">VirtIOSerialPort</name></name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:33">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:33"><name pos:start="7:5" pos:end="7:33"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:33">virtio_console_control</name></name></type> <name pos:start="7:35" pos:end="7:38">cpkt</name></decl>, <decl pos:start="7:41" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:33"><modifier pos:start="7:41" pos:end="7:41">*</modifier></type><name pos:start="7:42" pos:end="7:46">gcpkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:19">buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:21">buffer_len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:9">gcpkt</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <name pos:start="15:13" pos:end="15:15">buf</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:8">cpkt</name><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:14">event</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:38"><name pos:start="19:18" pos:end="19:23">lduw_p</name><argument_list pos:start="19:24" pos:end="19:38">(<argument pos:start="19:25" pos:end="19:37"><expr pos:start="19:25" pos:end="19:37"><operator pos:start="19:25" pos:end="19:25">&amp;</operator><name pos:start="19:26" pos:end="19:37"><name pos:start="19:26" pos:end="19:30">gcpkt</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:37">event</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:39"><expr pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:8">cpkt</name><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:14">value</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:38"><name pos:start="21:18" pos:end="21:23">lduw_p</name><argument_list pos:start="21:24" pos:end="21:38">(<argument pos:start="21:25" pos:end="21:37"><expr pos:start="21:25" pos:end="21:37"><operator pos:start="21:25" pos:end="21:25">&amp;</operator><name pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:30">gcpkt</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:37">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:52"><expr pos:start="25:5" pos:end="25:51"><name pos:start="25:5" pos:end="25:8">port</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:51"><name pos:start="25:12" pos:end="25:26">find_port_by_id</name><argument_list pos:start="25:27" pos:end="25:51">(<argument pos:start="25:28" pos:end="25:31"><expr pos:start="25:28" pos:end="25:31"><name pos:start="25:28" pos:end="25:31">vser</name></expr></argument>, <argument pos:start="25:34" pos:end="25:50"><expr pos:start="25:34" pos:end="25:50"><call pos:start="25:34" pos:end="25:50"><name pos:start="25:34" pos:end="25:38">ldl_p</name><argument_list pos:start="25:39" pos:end="25:50">(<argument pos:start="25:40" pos:end="25:49"><expr pos:start="25:40" pos:end="25:49"><operator pos:start="25:40" pos:end="25:40">&amp;</operator><name pos:start="25:41" pos:end="25:49"><name pos:start="25:41" pos:end="25:45">gcpkt</name><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:49">id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:15"><if pos:start="27:5" pos:end="29:15">if <condition pos:start="27:8" pos:end="27:59">(<expr pos:start="27:9" pos:end="27:58"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:13">port</name> <operator pos:start="27:15" pos:end="27:16">&amp;&amp;</operator> <name pos:start="27:18" pos:end="27:27"><name pos:start="27:18" pos:end="27:21">cpkt</name><operator pos:start="27:22" pos:end="27:22">.</operator><name pos:start="27:23" pos:end="27:27">event</name></name> <operator pos:start="27:29" pos:end="27:30">!=</operator> <name pos:start="27:32" pos:end="27:58">VIRTIO_CONSOLE_DEVICE_READY</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:15"><block_content pos:start="29:9" pos:end="29:15">

        <return pos:start="29:9" pos:end="29:15">return;</return></block_content></block></if></if_stmt>



    <switch pos:start="33:5" pos:end="183:5">switch<condition pos:start="33:11" pos:end="33:22">(<expr pos:start="33:12" pos:end="33:21"><name pos:start="33:12" pos:end="33:21"><name pos:start="33:12" pos:end="33:15">cpkt</name><operator pos:start="33:16" pos:end="33:16">.</operator><name pos:start="33:17" pos:end="33:21">event</name></name></expr>)</condition> <block pos:start="33:24" pos:end="183:5">{<block_content pos:start="35:5" pos:end="181:14">

    <case pos:start="35:5" pos:end="35:37">case <expr pos:start="35:10" pos:end="35:36"><name pos:start="35:10" pos:end="35:36">VIRTIO_CONSOLE_DEVICE_READY</name></expr>:</case>

        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="45:9">if <condition pos:start="37:12" pos:end="37:24">(<expr pos:start="37:13" pos:end="37:23"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:23"><name pos:start="37:14" pos:end="37:17">cpkt</name><operator pos:start="37:18" pos:end="37:18">.</operator><name pos:start="37:19" pos:end="37:23">value</name></name></expr>)</condition> <block pos:start="37:26" pos:end="45:9">{<block_content pos:start="39:13" pos:end="43:18">

            <expr_stmt pos:start="39:13" pos:end="41:47"><expr pos:start="39:13" pos:end="41:46"><call pos:start="39:13" pos:end="41:46"><name pos:start="39:13" pos:end="39:24">error_report</name><argument_list pos:start="39:25" pos:end="41:46">(<argument pos:start="39:26" pos:end="39:81"><expr pos:start="39:26" pos:end="39:81"><literal type="string" pos:start="39:26" pos:end="39:81">"virtio-serial-bus: Guest failure in adding device %s\n"</literal></expr></argument>,

                         <argument pos:start="41:26" pos:end="41:45"><expr pos:start="41:26" pos:end="41:45"><name pos:start="41:26" pos:end="41:45"><name pos:start="41:26" pos:end="41:29">vser</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:34">bus</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:40">qbus</name><operator pos:start="41:41" pos:end="41:41">.</operator><name pos:start="41:42" pos:end="41:45">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="47:9" pos:end="53:11">/*

         * The device is up, we can now tell the device about all the

         * ports we have here.

         */</comment>

        <macro pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:22">QTAILQ_FOREACH</name><argument_list pos:start="55:23" pos:end="55:48">(<argument pos:start="55:24" pos:end="55:27">port</argument>, <argument pos:start="55:30" pos:end="55:41">&amp;vser-&gt;ports</argument>, <argument pos:start="55:44" pos:end="55:47">next</argument>)</argument_list></macro> <block pos:start="55:50" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:65">

            <expr_stmt pos:start="57:13" pos:end="57:65"><expr pos:start="57:13" pos:end="57:64"><call pos:start="57:13" pos:end="57:64"><name pos:start="57:13" pos:end="57:30">send_control_event</name><argument_list pos:start="57:31" pos:end="57:64">(<argument pos:start="57:32" pos:end="57:35"><expr pos:start="57:32" pos:end="57:35"><name pos:start="57:32" pos:end="57:35">port</name></expr></argument>, <argument pos:start="57:38" pos:end="57:60"><expr pos:start="57:38" pos:end="57:60"><name pos:start="57:38" pos:end="57:60">VIRTIO_CONSOLE_PORT_ADD</name></expr></argument>, <argument pos:start="57:63" pos:end="57:63"><expr pos:start="57:63" pos:end="57:63"><literal type="number" pos:start="57:63" pos:end="57:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="61:9" pos:end="61:14">break;</break>



    <case pos:start="65:5" pos:end="65:35">case <expr pos:start="65:10" pos:end="65:34"><name pos:start="65:10" pos:end="65:34">VIRTIO_CONSOLE_PORT_READY</name></expr>:</case>

        <if_stmt pos:start="67:9" pos:end="75:9"><if pos:start="67:9" pos:end="75:9">if <condition pos:start="67:12" pos:end="67:24">(<expr pos:start="67:13" pos:end="67:23"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:23"><name pos:start="67:14" pos:end="67:17">cpkt</name><operator pos:start="67:18" pos:end="67:18">.</operator><name pos:start="67:19" pos:end="67:23">value</name></name></expr>)</condition> <block pos:start="67:26" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:18">

            <expr_stmt pos:start="69:13" pos:end="71:57"><expr pos:start="69:13" pos:end="71:56"><call pos:start="69:13" pos:end="71:56"><name pos:start="69:13" pos:end="69:24">error_report</name><argument_list pos:start="69:25" pos:end="71:56">(<argument pos:start="69:26" pos:end="69:93"><expr pos:start="69:26" pos:end="69:93"><literal type="string" pos:start="69:26" pos:end="69:93">"virtio-serial-bus: Guest failure in adding port %u for device %s\n"</literal></expr></argument>,

                         <argument pos:start="71:26" pos:end="71:33"><expr pos:start="71:26" pos:end="71:33"><name pos:start="71:26" pos:end="71:33"><name pos:start="71:26" pos:end="71:29">port</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:33">id</name></name></expr></argument>, <argument pos:start="71:36" pos:end="71:55"><expr pos:start="71:36" pos:end="71:55"><name pos:start="71:36" pos:end="71:55"><name pos:start="71:36" pos:end="71:39">vser</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:44">bus</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:50">qbus</name><operator pos:start="71:51" pos:end="71:51">.</operator><name pos:start="71:52" pos:end="71:55">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="77:9" pos:end="89:11">/*

         * Now that we know the guest asked for the port name, we're

         * sure the guest has initialised whatever state is necessary

         * for this port. Now's a good time to let the guest know if

         * this port is a console port so that the guest can hook it

         * up to hvc.

         */</comment>

        <if_stmt pos:start="91:9" pos:end="95:9"><if pos:start="91:9" pos:end="95:9">if <condition pos:start="91:12" pos:end="91:29">(<expr pos:start="91:13" pos:end="91:28"><name pos:start="91:13" pos:end="91:28"><name pos:start="91:13" pos:end="91:16">port</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:28">is_console</name></name></expr>)</condition> <block pos:start="91:31" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:69">

            <expr_stmt pos:start="93:13" pos:end="93:69"><expr pos:start="93:13" pos:end="93:68"><call pos:start="93:13" pos:end="93:68"><name pos:start="93:13" pos:end="93:30">send_control_event</name><argument_list pos:start="93:31" pos:end="93:68">(<argument pos:start="93:32" pos:end="93:35"><expr pos:start="93:32" pos:end="93:35"><name pos:start="93:32" pos:end="93:35">port</name></expr></argument>, <argument pos:start="93:38" pos:end="93:64"><expr pos:start="93:38" pos:end="93:64"><name pos:start="93:38" pos:end="93:64">VIRTIO_CONSOLE_CONSOLE_PORT</name></expr></argument>, <argument pos:start="93:67" pos:end="93:67"><expr pos:start="93:67" pos:end="93:67"><literal type="number" pos:start="93:67" pos:end="93:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="99:9" pos:end="125:9"><if pos:start="99:9" pos:end="125:9">if <condition pos:start="99:12" pos:end="99:23">(<expr pos:start="99:13" pos:end="99:22"><name pos:start="99:13" pos:end="99:22"><name pos:start="99:13" pos:end="99:16">port</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:22">name</name></name></expr>)</condition> <block pos:start="99:25" pos:end="125:9">{<block_content pos:start="101:13" pos:end="123:30">

            <expr_stmt pos:start="101:13" pos:end="101:57"><expr pos:start="101:13" pos:end="101:56"><call pos:start="101:13" pos:end="101:56"><name pos:start="101:13" pos:end="101:17">stw_p</name><argument_list pos:start="101:18" pos:end="101:56">(<argument pos:start="101:19" pos:end="101:29"><expr pos:start="101:19" pos:end="101:29"><operator pos:start="101:19" pos:end="101:19">&amp;</operator><name pos:start="101:20" pos:end="101:29"><name pos:start="101:20" pos:end="101:23">cpkt</name><operator pos:start="101:24" pos:end="101:24">.</operator><name pos:start="101:25" pos:end="101:29">event</name></name></expr></argument>, <argument pos:start="101:32" pos:end="101:55"><expr pos:start="101:32" pos:end="101:55"><name pos:start="101:32" pos:end="101:55">VIRTIO_CONSOLE_PORT_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:34"><expr pos:start="103:13" pos:end="103:33"><call pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:17">stw_p</name><argument_list pos:start="103:18" pos:end="103:33">(<argument pos:start="103:19" pos:end="103:29"><expr pos:start="103:19" pos:end="103:29"><operator pos:start="103:19" pos:end="103:19">&amp;</operator><name pos:start="103:20" pos:end="103:29"><name pos:start="103:20" pos:end="103:23">cpkt</name><operator pos:start="103:24" pos:end="103:24">.</operator><name pos:start="103:25" pos:end="103:29">value</name></name></expr></argument>, <argument pos:start="103:32" pos:end="103:32"><expr pos:start="103:32" pos:end="103:32"><literal type="number" pos:start="103:32" pos:end="103:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="107:13" pos:end="107:63"><expr pos:start="107:13" pos:end="107:62"><name pos:start="107:13" pos:end="107:22">buffer_len</name> <operator pos:start="107:24" pos:end="107:24">=</operator> <sizeof pos:start="107:26" pos:end="107:37">sizeof<argument_list pos:start="107:32" pos:end="107:37">(<argument pos:start="107:33" pos:end="107:36"><expr pos:start="107:33" pos:end="107:36"><name pos:start="107:33" pos:end="107:36">cpkt</name></expr></argument>)</argument_list></sizeof> <operator pos:start="107:39" pos:end="107:39">+</operator> <call pos:start="107:41" pos:end="107:58"><name pos:start="107:41" pos:end="107:46">strlen</name><argument_list pos:start="107:47" pos:end="107:58">(<argument pos:start="107:48" pos:end="107:57"><expr pos:start="107:48" pos:end="107:57"><name pos:start="107:48" pos:end="107:57"><name pos:start="107:48" pos:end="107:51">port</name><operator pos:start="107:52" pos:end="107:53">-&gt;</operator><name pos:start="107:54" pos:end="107:57">name</name></name></expr></argument>)</argument_list></call> <operator pos:start="107:60" pos:end="107:60">+</operator> <literal type="number" pos:start="107:62" pos:end="107:62">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:45"><expr pos:start="109:13" pos:end="109:44"><name pos:start="109:13" pos:end="109:18">buffer</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <call pos:start="109:22" pos:end="109:44"><name pos:start="109:22" pos:end="109:32">qemu_malloc</name><argument_list pos:start="109:33" pos:end="109:44">(<argument pos:start="109:34" pos:end="109:43"><expr pos:start="109:34" pos:end="109:43"><name pos:start="109:34" pos:end="109:43">buffer_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="113:13" pos:end="113:48"><expr pos:start="113:13" pos:end="113:47"><call pos:start="113:13" pos:end="113:47"><name pos:start="113:13" pos:end="113:18">memcpy</name><argument_list pos:start="113:19" pos:end="113:47">(<argument pos:start="113:20" pos:end="113:25"><expr pos:start="113:20" pos:end="113:25"><name pos:start="113:20" pos:end="113:25">buffer</name></expr></argument>, <argument pos:start="113:28" pos:end="113:32"><expr pos:start="113:28" pos:end="113:32"><operator pos:start="113:28" pos:end="113:28">&amp;</operator><name pos:start="113:29" pos:end="113:32">cpkt</name></expr></argument>, <argument pos:start="113:35" pos:end="113:46"><expr pos:start="113:35" pos:end="113:46"><sizeof pos:start="113:35" pos:end="113:46">sizeof<argument_list pos:start="113:41" pos:end="113:46">(<argument pos:start="113:42" pos:end="113:45"><expr pos:start="113:42" pos:end="113:45"><name pos:start="113:42" pos:end="113:45">cpkt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:74"><expr pos:start="115:13" pos:end="115:73"><call pos:start="115:13" pos:end="115:73"><name pos:start="115:13" pos:end="115:18">memcpy</name><argument_list pos:start="115:19" pos:end="115:73">(<argument pos:start="115:20" pos:end="115:40"><expr pos:start="115:20" pos:end="115:40"><name pos:start="115:20" pos:end="115:25">buffer</name> <operator pos:start="115:27" pos:end="115:27">+</operator> <sizeof pos:start="115:29" pos:end="115:40">sizeof<argument_list pos:start="115:35" pos:end="115:40">(<argument pos:start="115:36" pos:end="115:39"><expr pos:start="115:36" pos:end="115:39"><name pos:start="115:36" pos:end="115:39">cpkt</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="115:43" pos:end="115:52"><expr pos:start="115:43" pos:end="115:52"><name pos:start="115:43" pos:end="115:52"><name pos:start="115:43" pos:end="115:46">port</name><operator pos:start="115:47" pos:end="115:48">-&gt;</operator><name pos:start="115:49" pos:end="115:52">name</name></name></expr></argument>, <argument pos:start="115:55" pos:end="115:72"><expr pos:start="115:55" pos:end="115:72"><call pos:start="115:55" pos:end="115:72"><name pos:start="115:55" pos:end="115:60">strlen</name><argument_list pos:start="115:61" pos:end="115:72">(<argument pos:start="115:62" pos:end="115:71"><expr pos:start="115:62" pos:end="115:71"><name pos:start="115:62" pos:end="115:71"><name pos:start="115:62" pos:end="115:65">port</name><operator pos:start="115:66" pos:end="115:67">-&gt;</operator><name pos:start="115:68" pos:end="115:71">name</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:39"><expr pos:start="117:13" pos:end="117:38"><name pos:start="117:13" pos:end="117:34"><name pos:start="117:13" pos:end="117:18">buffer</name><index pos:start="117:19" pos:end="117:34">[<expr pos:start="117:20" pos:end="117:33"><name pos:start="117:20" pos:end="117:29">buffer_len</name> <operator pos:start="117:31" pos:end="117:31">-</operator> <literal type="number" pos:start="117:33" pos:end="117:33">1</literal></expr>]</index></name> <operator pos:start="117:36" pos:end="117:36">=</operator> <literal type="number" pos:start="117:38" pos:end="117:38">0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="121:13" pos:end="121:55"><expr pos:start="121:13" pos:end="121:54"><call pos:start="121:13" pos:end="121:54"><name pos:start="121:13" pos:end="121:28">send_control_msg</name><argument_list pos:start="121:29" pos:end="121:54">(<argument pos:start="121:30" pos:end="121:33"><expr pos:start="121:30" pos:end="121:33"><name pos:start="121:30" pos:end="121:33">port</name></expr></argument>, <argument pos:start="121:36" pos:end="121:41"><expr pos:start="121:36" pos:end="121:41"><name pos:start="121:36" pos:end="121:41">buffer</name></expr></argument>, <argument pos:start="121:44" pos:end="121:53"><expr pos:start="121:44" pos:end="121:53"><name pos:start="121:44" pos:end="121:53">buffer_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:30"><expr pos:start="123:13" pos:end="123:29"><call pos:start="123:13" pos:end="123:29"><name pos:start="123:13" pos:end="123:21">qemu_free</name><argument_list pos:start="123:22" pos:end="123:29">(<argument pos:start="123:23" pos:end="123:28"><expr pos:start="123:23" pos:end="123:28"><name pos:start="123:23" pos:end="123:28">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="129:9" pos:end="133:9"><if pos:start="129:9" pos:end="133:9">if <condition pos:start="129:12" pos:end="129:33">(<expr pos:start="129:13" pos:end="129:32"><name pos:start="129:13" pos:end="129:32"><name pos:start="129:13" pos:end="129:16">port</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:32">host_connected</name></name></expr>)</condition> <block pos:start="129:35" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:66">

            <expr_stmt pos:start="131:13" pos:end="131:66"><expr pos:start="131:13" pos:end="131:65"><call pos:start="131:13" pos:end="131:65"><name pos:start="131:13" pos:end="131:30">send_control_event</name><argument_list pos:start="131:31" pos:end="131:65">(<argument pos:start="131:32" pos:end="131:35"><expr pos:start="131:32" pos:end="131:35"><name pos:start="131:32" pos:end="131:35">port</name></expr></argument>, <argument pos:start="131:38" pos:end="131:61"><expr pos:start="131:38" pos:end="131:61"><name pos:start="131:38" pos:end="131:61">VIRTIO_CONSOLE_PORT_OPEN</name></expr></argument>, <argument pos:start="131:64" pos:end="131:64"><expr pos:start="131:64" pos:end="131:64"><literal type="number" pos:start="131:64" pos:end="131:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="137:9" pos:end="147:11">/*

         * When the guest has asked us for this information it means

         * the guest is all setup and has its virtqueues

         * initialised. If some app is interested in knowing about

         * this event, let it know.

         */</comment>

        <if_stmt pos:start="149:9" pos:end="153:9"><if pos:start="149:9" pos:end="153:9">if <condition pos:start="149:12" pos:end="149:36">(<expr pos:start="149:13" pos:end="149:35"><name pos:start="149:13" pos:end="149:35"><name pos:start="149:13" pos:end="149:16">port</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:22">info</name><operator pos:start="149:23" pos:end="149:24">-&gt;</operator><name pos:start="149:25" pos:end="149:35">guest_ready</name></name></expr>)</condition> <block pos:start="149:38" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:42">

            <expr_stmt pos:start="151:13" pos:end="151:42"><expr pos:start="151:13" pos:end="151:41"><call pos:start="151:13" pos:end="151:41"><name pos:start="151:13" pos:end="151:35"><name pos:start="151:13" pos:end="151:16">port</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:22">info</name><operator pos:start="151:23" pos:end="151:24">-&gt;</operator><name pos:start="151:25" pos:end="151:35">guest_ready</name></name><argument_list pos:start="151:36" pos:end="151:41">(<argument pos:start="151:37" pos:end="151:40"><expr pos:start="151:37" pos:end="151:40"><name pos:start="151:37" pos:end="151:40">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="155:9" pos:end="155:14">break;</break>



    <case pos:start="159:5" pos:end="159:34">case <expr pos:start="159:10" pos:end="159:33"><name pos:start="159:10" pos:end="159:33">VIRTIO_CONSOLE_PORT_OPEN</name></expr>:</case>

        <expr_stmt pos:start="161:9" pos:end="161:43"><expr pos:start="161:9" pos:end="161:42"><name pos:start="161:9" pos:end="161:29"><name pos:start="161:9" pos:end="161:12">port</name><operator pos:start="161:13" pos:end="161:14">-&gt;</operator><name pos:start="161:15" pos:end="161:29">guest_connected</name></name> <operator pos:start="161:31" pos:end="161:31">=</operator> <name pos:start="161:33" pos:end="161:42"><name pos:start="161:33" pos:end="161:36">cpkt</name><operator pos:start="161:37" pos:end="161:37">.</operator><name pos:start="161:38" pos:end="161:42">value</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="163:9" pos:end="169:9"><if pos:start="163:9" pos:end="169:9">if <condition pos:start="163:12" pos:end="163:49">(<expr pos:start="163:13" pos:end="163:48"><name pos:start="163:13" pos:end="163:22"><name pos:start="163:13" pos:end="163:16">cpkt</name><operator pos:start="163:17" pos:end="163:17">.</operator><name pos:start="163:18" pos:end="163:22">value</name></name> <operator pos:start="163:24" pos:end="163:25">&amp;&amp;</operator> <name pos:start="163:27" pos:end="163:48"><name pos:start="163:27" pos:end="163:30">port</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:36">info</name><operator pos:start="163:37" pos:end="163:38">-&gt;</operator><name pos:start="163:39" pos:end="163:48">guest_open</name></name></expr>)</condition> <block pos:start="163:51" pos:end="169:9">{<block_content pos:start="167:13" pos:end="167:41">

            <comment type="block" pos:start="165:13" pos:end="165:76">/* Send the guest opened notification if an app is interested */</comment>

            <expr_stmt pos:start="167:13" pos:end="167:41"><expr pos:start="167:13" pos:end="167:40"><call pos:start="167:13" pos:end="167:40"><name pos:start="167:13" pos:end="167:34"><name pos:start="167:13" pos:end="167:16">port</name><operator pos:start="167:17" pos:end="167:18">-&gt;</operator><name pos:start="167:19" pos:end="167:22">info</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:34">guest_open</name></name><argument_list pos:start="167:35" pos:end="167:40">(<argument pos:start="167:36" pos:end="167:39"><expr pos:start="167:36" pos:end="167:39"><name pos:start="167:36" pos:end="167:39">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="173:9" pos:end="179:9"><if pos:start="173:9" pos:end="179:9">if <condition pos:start="173:12" pos:end="173:51">(<expr pos:start="173:13" pos:end="173:50"><operator pos:start="173:13" pos:end="173:13">!</operator><name pos:start="173:14" pos:end="173:23"><name pos:start="173:14" pos:end="173:17">cpkt</name><operator pos:start="173:18" pos:end="173:18">.</operator><name pos:start="173:19" pos:end="173:23">value</name></name> <operator pos:start="173:25" pos:end="173:26">&amp;&amp;</operator> <name pos:start="173:28" pos:end="173:50"><name pos:start="173:28" pos:end="173:31">port</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:37">info</name><operator pos:start="173:38" pos:end="173:39">-&gt;</operator><name pos:start="173:40" pos:end="173:50">guest_close</name></name></expr>)</condition> <block pos:start="173:53" pos:end="179:9">{<block_content pos:start="177:13" pos:end="177:42">

            <comment type="block" pos:start="175:13" pos:end="175:76">/* Send the guest closed notification if an app is interested */</comment>

            <expr_stmt pos:start="177:13" pos:end="177:42"><expr pos:start="177:13" pos:end="177:41"><call pos:start="177:13" pos:end="177:41"><name pos:start="177:13" pos:end="177:35"><name pos:start="177:13" pos:end="177:16">port</name><operator pos:start="177:17" pos:end="177:18">-&gt;</operator><name pos:start="177:19" pos:end="177:22">info</name><operator pos:start="177:23" pos:end="177:24">-&gt;</operator><name pos:start="177:25" pos:end="177:35">guest_close</name></name><argument_list pos:start="177:36" pos:end="177:41">(<argument pos:start="177:37" pos:end="177:40"><expr pos:start="177:37" pos:end="177:40"><name pos:start="177:37" pos:end="177:40">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="181:9" pos:end="181:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
