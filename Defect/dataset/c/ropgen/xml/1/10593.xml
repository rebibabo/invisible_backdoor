<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10593.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">decode_mb_mode</name><parameter_list pos:start="1:20" pos:end="3:75">(<parameter pos:start="1:21" pos:end="1:33"><decl pos:start="1:21" pos:end="1:33"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:30">VP8Context</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">s</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:48">VP8Macroblock</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">mb</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:62"><decl pos:start="1:55" pos:end="1:62"><type pos:start="1:55" pos:end="1:62"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:62">mb_x</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:72"><decl pos:start="1:65" pos:end="1:72"><type pos:start="1:65" pos:end="1:72"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:72">mb_y</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:36"><decl pos:start="3:21" pos:end="3:36"><type pos:start="3:21" pos:end="3:36"><name pos:start="3:21" pos:end="3:27">uint8_t</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:36">segment</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:50"><decl pos:start="3:39" pos:end="3:50"><type pos:start="3:39" pos:end="3:50"><name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">ref</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:62"><decl pos:start="3:53" pos:end="3:62"><type pos:start="3:53" pos:end="3:62"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:62">layout</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:74"><decl pos:start="3:65" pos:end="3:74"><type pos:start="3:65" pos:end="3:74"><name pos:start="3:65" pos:end="3:67">int</name></type> <name pos:start="3:69" pos:end="3:74">is_vp7</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="157:1">{<block_content pos:start="7:5" pos:end="155:5">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VP56RangeCoder</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">c</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="15:61"><decl pos:start="9:5" pos:end="15:60"><type pos:start="9:5" pos:end="9:23"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <specifier pos:start="9:12" pos:end="9:16">const</specifier> <name pos:start="9:18" pos:end="9:21">char</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:41"><name pos:start="9:24" pos:end="9:39">vp7_feature_name</name><index pos:start="9:40" pos:end="9:41">[]</index></name> <init pos:start="9:43" pos:end="15:60">= <expr pos:start="9:45" pos:end="15:60"><block pos:start="9:45" pos:end="15:60">{ <expr pos:start="9:47" pos:end="9:55"><literal type="string" pos:start="9:47" pos:end="9:55">"q-index"</literal></expr>,

                                              <expr pos:start="11:47" pos:end="11:56"><literal type="string" pos:start="11:47" pos:end="11:56">"lf-delta"</literal></expr>,

                                              <expr pos:start="13:47" pos:end="13:69"><literal type="string" pos:start="13:47" pos:end="13:69">"partial-golden-update"</literal></expr>,

                                              <expr pos:start="15:47" pos:end="15:58"><literal type="string" pos:start="15:47" pos:end="15:58">"blit-pitch"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="17:5" pos:end="53:41"><if pos:start="17:5" pos:end="45:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">is_vp7</name></expr>)</condition> <block pos:start="17:17" pos:end="45:5">{<block_content pos:start="19:9" pos:end="43:9">

        <decl_stmt pos:start="19:9" pos:end="19:14"><decl pos:start="19:9" pos:end="19:13"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:21"><expr pos:start="21:9" pos:end="21:20"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:16">segment</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>;</expr_stmt>

        <for pos:start="23:9" pos:end="43:9">for <control pos:start="23:13" pos:end="23:31">(<init pos:start="23:14" pos:end="23:19"><expr pos:start="23:14" pos:end="23:18"><name pos:start="23:14" pos:end="23:14">i</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</init> <condition pos:start="23:21" pos:end="23:26"><expr pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:21">i</name> <operator pos:start="23:23" pos:end="23:23">&lt;</operator> <literal type="number" pos:start="23:25" pos:end="23:25">4</literal></expr>;</condition> <incr pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:28">i</name><operator pos:start="23:29" pos:end="23:30">++</operator></expr></incr>)</control> <block pos:start="23:33" pos:end="43:9">{<block_content pos:start="25:13" pos:end="41:12">

            <if_stmt pos:start="25:13" pos:end="41:12"><if pos:start="25:13" pos:end="41:12">if <condition pos:start="25:16" pos:end="25:38">(<expr pos:start="25:17" pos:end="25:37"><name pos:start="25:17" pos:end="25:37"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:34">feature_enabled</name><index pos:start="25:35" pos:end="25:37">[<expr pos:start="25:36" pos:end="25:36"><name pos:start="25:36" pos:end="25:36">i</name></expr>]</index></name></expr>)</condition> <block pos:start="25:40" pos:end="41:12">{<block_content pos:start="27:17" pos:end="39:17">

                <if_stmt pos:start="27:17" pos:end="39:17"><if pos:start="27:17" pos:end="39:17">if <condition pos:start="27:20" pos:end="27:77">(<expr pos:start="27:21" pos:end="27:76"><call pos:start="27:21" pos:end="27:76"><name pos:start="27:21" pos:end="27:45">vp56_rac_get_prob_branchy</name><argument_list pos:start="27:46" pos:end="27:76">(<argument pos:start="27:47" pos:end="27:47"><expr pos:start="27:47" pos:end="27:47"><name pos:start="27:47" pos:end="27:47">c</name></expr></argument>, <argument pos:start="27:50" pos:end="27:75"><expr pos:start="27:50" pos:end="27:75"><name pos:start="27:50" pos:end="27:75"><name pos:start="27:50" pos:end="27:50">s</name><operator pos:start="27:51" pos:end="27:52">-&gt;</operator><name pos:start="27:53" pos:end="27:72">feature_present_prob</name><index pos:start="27:73" pos:end="27:75">[<expr pos:start="27:74" pos:end="27:74"><name pos:start="27:74" pos:end="27:74">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:79" pos:end="39:17">{<block_content pos:start="29:23" pos:end="37:78">

                      <decl_stmt pos:start="29:23" pos:end="31:77"><decl pos:start="29:23" pos:end="31:76"><type pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:25">int</name></type> <name pos:start="29:27" pos:end="29:31">index</name> <init pos:start="29:33" pos:end="31:76">= <expr pos:start="29:35" pos:end="31:76"><call pos:start="29:35" pos:end="31:76"><name pos:start="29:35" pos:end="29:50">vp8_rac_get_tree</name><argument_list pos:start="29:51" pos:end="31:76">(<argument pos:start="29:52" pos:end="29:52"><expr pos:start="29:52" pos:end="29:52"><name pos:start="29:52" pos:end="29:52">c</name></expr></argument>, <argument pos:start="29:55" pos:end="29:76"><expr pos:start="29:55" pos:end="29:76"><name pos:start="29:55" pos:end="29:76">vp7_feature_index_tree</name></expr></argument>,

                                                   <argument pos:start="31:52" pos:end="31:75"><expr pos:start="31:52" pos:end="31:75"><name pos:start="31:52" pos:end="31:75"><name pos:start="31:52" pos:end="31:52">s</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:72">feature_index_prob</name><index pos:start="31:73" pos:end="31:75">[<expr pos:start="31:74" pos:end="31:74"><name pos:start="31:74" pos:end="31:74">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                      <expr_stmt pos:start="33:23" pos:end="37:78"><expr pos:start="33:23" pos:end="37:77"><call pos:start="33:23" pos:end="37:77"><name pos:start="33:23" pos:end="33:28">av_log</name><argument_list pos:start="33:29" pos:end="37:77">(<argument pos:start="33:30" pos:end="33:37"><expr pos:start="33:30" pos:end="33:37"><name pos:start="33:30" pos:end="33:37"><name pos:start="33:30" pos:end="33:30">s</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:37">avctx</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:53"><expr pos:start="33:40" pos:end="33:53"><name pos:start="33:40" pos:end="33:53">AV_LOG_WARNING</name></expr></argument>,

                             <argument pos:start="35:30" pos:end="35:78"><expr pos:start="35:30" pos:end="35:78"><literal type="string" pos:start="35:30" pos:end="35:78">"Feature %s present in macroblock (value 0x%x)\n"</literal></expr></argument>,

                             <argument pos:start="37:30" pos:end="37:48"><expr pos:start="37:30" pos:end="37:48"><name pos:start="37:30" pos:end="37:48"><name pos:start="37:30" pos:end="37:45">vp7_feature_name</name><index pos:start="37:46" pos:end="37:48">[<expr pos:start="37:47" pos:end="37:47"><name pos:start="37:47" pos:end="37:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="37:51" pos:end="37:76"><expr pos:start="37:51" pos:end="37:76"><name pos:start="37:51" pos:end="37:76"><name pos:start="37:51" pos:end="37:51">s</name><operator pos:start="37:52" pos:end="37:53">-&gt;</operator><name pos:start="37:54" pos:end="37:66">feature_value</name><index pos:start="37:67" pos:end="37:69">[<expr pos:start="37:68" pos:end="37:68"><name pos:start="37:68" pos:end="37:68">i</name></expr>]</index><index pos:start="37:70" pos:end="37:76">[<expr pos:start="37:71" pos:end="37:75"><name pos:start="37:71" pos:end="37:75">index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

           </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="45:7" pos:end="51:5">else if <condition pos:start="45:15" pos:end="45:42">(<expr pos:start="45:16" pos:end="45:41"><name pos:start="45:16" pos:end="45:41"><name pos:start="45:16" pos:end="45:16">s</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:30">segmentation</name><operator pos:start="45:31" pos:end="45:31">.</operator><name pos:start="45:32" pos:end="45:41">update_map</name></name></expr>)</condition> <block pos:start="45:44" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:75">

        <decl_stmt pos:start="47:9" pos:end="47:63"><decl pos:start="47:9" pos:end="47:62"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:15">bit</name>  <init pos:start="47:18" pos:end="47:62">= <expr pos:start="47:20" pos:end="47:62"><call pos:start="47:20" pos:end="47:62"><name pos:start="47:20" pos:end="47:36">vp56_rac_get_prob</name><argument_list pos:start="47:37" pos:end="47:62">(<argument pos:start="47:38" pos:end="47:38"><expr pos:start="47:38" pos:end="47:38"><name pos:start="47:38" pos:end="47:38">c</name></expr></argument>, <argument pos:start="47:41" pos:end="47:61"><expr pos:start="47:41" pos:end="47:61"><name pos:start="47:41" pos:end="47:61"><name pos:start="47:41" pos:end="47:41">s</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:47">prob</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:58">segmentid</name><index pos:start="47:59" pos:end="47:61">[<expr pos:start="47:60" pos:end="47:60"><literal type="number" pos:start="47:60" pos:end="47:60">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:75"><expr pos:start="49:9" pos:end="49:74"><operator pos:start="49:9" pos:end="49:9">*</operator><name pos:start="49:10" pos:end="49:16">segment</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:66"><name pos:start="49:20" pos:end="49:36">vp56_rac_get_prob</name><argument_list pos:start="49:37" pos:end="49:66">(<argument pos:start="49:38" pos:end="49:38"><expr pos:start="49:38" pos:end="49:38"><name pos:start="49:38" pos:end="49:38">c</name></expr></argument>, <argument pos:start="49:41" pos:end="49:65"><expr pos:start="49:41" pos:end="49:65"><name pos:start="49:41" pos:end="49:65"><name pos:start="49:41" pos:end="49:41">s</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:47">prob</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:58">segmentid</name><index pos:start="49:59" pos:end="49:65">[<expr pos:start="49:60" pos:end="49:64"><literal type="number" pos:start="49:60" pos:end="49:61">1</literal><operator pos:start="49:61" pos:end="49:61">+</operator><name pos:start="49:62" pos:end="49:64">bit</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="49:68" pos:end="49:68">+</operator> <literal type="number" pos:start="49:70" pos:end="49:70">2</literal><operator pos:start="49:71" pos:end="49:71">*</operator><name pos:start="49:72" pos:end="49:74">bit</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="53:41">else if <condition pos:start="51:15" pos:end="51:39">(<expr pos:start="51:16" pos:end="51:38"><name pos:start="51:16" pos:end="51:38"><name pos:start="51:16" pos:end="51:16">s</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:30">segmentation</name><operator pos:start="51:31" pos:end="51:31">.</operator><name pos:start="51:32" pos:end="51:38">enabled</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:41"><block_content pos:start="53:9" pos:end="53:41">

        <expr_stmt pos:start="53:9" pos:end="53:41"><expr pos:start="53:9" pos:end="53:40"><operator pos:start="53:9" pos:end="53:9">*</operator><name pos:start="53:10" pos:end="53:16">segment</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <ternary pos:start="53:20" pos:end="53:40"><condition pos:start="53:20" pos:end="53:24"><expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">ref</name></expr> ?</condition><then pos:start="53:26" pos:end="53:29"> <expr pos:start="53:26" pos:end="53:29"><operator pos:start="53:26" pos:end="53:26">*</operator><name pos:start="53:27" pos:end="53:29">ref</name></expr> </then><else pos:start="53:31" pos:end="53:40">: <expr pos:start="53:33" pos:end="53:40"><operator pos:start="53:33" pos:end="53:33">*</operator><name pos:start="53:34" pos:end="53:40">segment</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:6">mb</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:15">segment</name></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <operator pos:start="55:19" pos:end="55:19">*</operator><name pos:start="55:20" pos:end="55:26">segment</name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:77"><expr pos:start="59:5" pos:end="59:76"><name pos:start="59:5" pos:end="59:12"><name pos:start="59:5" pos:end="59:6">mb</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:12">skip</name></name> <operator pos:start="59:14" pos:end="59:14">=</operator> <ternary pos:start="59:16" pos:end="59:76"><condition pos:start="59:16" pos:end="59:34"><expr pos:start="59:16" pos:end="59:32"><name pos:start="59:16" pos:end="59:32"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:32">mbskip_enabled</name></name></expr> ?</condition><then pos:start="59:36" pos:end="59:72"> <expr pos:start="59:36" pos:end="59:72"><call pos:start="59:36" pos:end="59:72"><name pos:start="59:36" pos:end="59:52">vp56_rac_get_prob</name><argument_list pos:start="59:53" pos:end="59:72">(<argument pos:start="59:54" pos:end="59:54"><expr pos:start="59:54" pos:end="59:54"><name pos:start="59:54" pos:end="59:54">c</name></expr></argument>, <argument pos:start="59:57" pos:end="59:71"><expr pos:start="59:57" pos:end="59:71"><name pos:start="59:57" pos:end="59:71"><name pos:start="59:57" pos:end="59:57">s</name><operator pos:start="59:58" pos:end="59:59">-&gt;</operator><name pos:start="59:60" pos:end="59:63">prob</name><operator pos:start="59:64" pos:end="59:65">-&gt;</operator><name pos:start="59:66" pos:end="59:71">mbskip</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="59:74" pos:end="59:76">: <expr pos:start="59:76" pos:end="59:76"><literal type="number" pos:start="59:76" pos:end="59:76">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="155:5"><if pos:start="63:5" pos:end="101:5">if <condition pos:start="63:8" pos:end="63:20">(<expr pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:19">keyframe</name></name></expr>)</condition> <block pos:start="63:22" pos:end="101:5">{<block_content pos:start="65:9" pos:end="99:50">

        <expr_stmt pos:start="65:9" pos:end="67:62"><expr pos:start="65:9" pos:end="67:61"><name pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:10">mb</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:16">mode</name></name> <operator pos:start="65:18" pos:end="65:18">=</operator> <call pos:start="65:20" pos:end="67:61"><name pos:start="65:20" pos:end="65:35">vp8_rac_get_tree</name><argument_list pos:start="65:36" pos:end="67:61">(<argument pos:start="65:37" pos:end="65:37"><expr pos:start="65:37" pos:end="65:37"><name pos:start="65:37" pos:end="65:37">c</name></expr></argument>, <argument pos:start="65:40" pos:end="65:63"><expr pos:start="65:40" pos:end="65:63"><name pos:start="65:40" pos:end="65:63">vp8_pred16x16_tree_intra</name></expr></argument>,

                                    <argument pos:start="67:37" pos:end="67:60"><expr pos:start="67:37" pos:end="67:60"><name pos:start="67:37" pos:end="67:60">vp8_pred16x16_prob_intra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="71:9" pos:end="91:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:34">(<expr pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:14">mb</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:20">mode</name></name> <operator pos:start="71:22" pos:end="71:23">==</operator> <name pos:start="71:25" pos:end="71:33">MODE_I4x4</name></expr>)</condition> <block pos:start="71:36" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:61">

            <expr_stmt pos:start="73:13" pos:end="73:61"><expr pos:start="73:13" pos:end="73:60"><call pos:start="73:13" pos:end="73:60"><name pos:start="73:13" pos:end="73:33">decode_intra4x4_modes</name><argument_list pos:start="73:34" pos:end="73:60">(<argument pos:start="73:35" pos:end="73:35"><expr pos:start="73:35" pos:end="73:35"><name pos:start="73:35" pos:end="73:35">s</name></expr></argument>, <argument pos:start="73:38" pos:end="73:38"><expr pos:start="73:38" pos:end="73:38"><name pos:start="73:38" pos:end="73:38">c</name></expr></argument>, <argument pos:start="73:41" pos:end="73:42"><expr pos:start="73:41" pos:end="73:42"><name pos:start="73:41" pos:end="73:42">mb</name></expr></argument>, <argument pos:start="73:45" pos:end="73:48"><expr pos:start="73:45" pos:end="73:48"><name pos:start="73:45" pos:end="73:48">mb_x</name></expr></argument>, <argument pos:start="73:51" pos:end="73:51"><expr pos:start="73:51" pos:end="73:51"><literal type="number" pos:start="73:51" pos:end="73:51">1</literal></expr></argument>, <argument pos:start="73:54" pos:end="73:59"><expr pos:start="73:54" pos:end="73:59"><name pos:start="73:54" pos:end="73:59">layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="91:9">else <block pos:start="75:16" pos:end="91:9">{<block_content pos:start="77:13" pos:end="89:56">

            <decl_stmt pos:start="77:13" pos:end="79:87"><decl pos:start="77:13" pos:end="79:86"><type pos:start="77:13" pos:end="77:26"><specifier pos:start="77:13" pos:end="77:17">const</specifier> <name pos:start="77:19" pos:end="77:26">uint32_t</name></type> <name pos:start="77:28" pos:end="77:32">modes</name> <init pos:start="77:34" pos:end="79:86">= <expr pos:start="77:36" pos:end="79:86"><operator pos:start="77:36" pos:end="77:36">(</operator><ternary pos:start="77:37" pos:end="79:61"><condition pos:start="77:37" pos:end="77:44"><expr pos:start="77:37" pos:end="77:42"><name pos:start="77:37" pos:end="77:42">is_vp7</name></expr> ?</condition><then pos:start="77:46" pos:end="77:61"> <expr pos:start="77:46" pos:end="77:61"><name pos:start="77:46" pos:end="77:61">vp7_pred4x4_mode</name></expr>

                                           </then><else pos:start="79:44" pos:end="79:61">: <expr pos:start="79:46" pos:end="79:61"><name pos:start="79:46" pos:end="79:61">vp8_pred4x4_mode</name></expr></else></ternary><operator pos:start="79:62" pos:end="79:62">)</operator><index pos:start="79:63" pos:end="79:72">[<expr pos:start="79:64" pos:end="79:71"><name pos:start="79:64" pos:end="79:71"><name pos:start="79:64" pos:end="79:65">mb</name><operator pos:start="79:66" pos:end="79:67">-&gt;</operator><name pos:start="79:68" pos:end="79:71">mode</name></name></expr>]</index> <operator pos:start="79:74" pos:end="79:74">*</operator> <literal type="number" pos:start="79:76" pos:end="79:86">0x01010101u</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="81:13" pos:end="87:70"><if pos:start="81:13" pos:end="83:60">if <condition pos:start="81:16" pos:end="81:29">(<expr pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:28">mb_layout</name></name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:60"><block_content pos:start="83:17" pos:end="83:60">

                <expr_stmt pos:start="83:17" pos:end="83:60"><expr pos:start="83:17" pos:end="83:59"><call pos:start="83:17" pos:end="83:59"><name pos:start="83:17" pos:end="83:24">AV_WN32A</name><argument_list pos:start="83:25" pos:end="83:59">(<argument pos:start="83:26" pos:end="83:51"><expr pos:start="83:26" pos:end="83:51"><name pos:start="83:26" pos:end="83:51"><name pos:start="83:26" pos:end="83:27">mb</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:51">intra4x4_pred_mode_top</name></name></expr></argument>, <argument pos:start="83:54" pos:end="83:58"><expr pos:start="83:54" pos:end="83:58"><name pos:start="83:54" pos:end="83:58">modes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="85:13" pos:end="87:70">else<block type="pseudo" pos:start="87:17" pos:end="87:70"><block_content pos:start="87:17" pos:end="87:70">

                <expr_stmt pos:start="87:17" pos:end="87:70"><expr pos:start="87:17" pos:end="87:69"><call pos:start="87:17" pos:end="87:69"><name pos:start="87:17" pos:end="87:24">AV_WN32A</name><argument_list pos:start="87:25" pos:end="87:69">(<argument pos:start="87:26" pos:end="87:61"><expr pos:start="87:26" pos:end="87:61"><name pos:start="87:26" pos:end="87:50"><name pos:start="87:26" pos:end="87:26">s</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:50">intra4x4_pred_mode_top</name></name> <operator pos:start="87:52" pos:end="87:52">+</operator> <literal type="number" pos:start="87:54" pos:end="87:54">4</literal> <operator pos:start="87:56" pos:end="87:56">*</operator> <name pos:start="87:58" pos:end="87:61">mb_x</name></expr></argument>, <argument pos:start="87:64" pos:end="87:68"><expr pos:start="87:64" pos:end="87:68"><name pos:start="87:64" pos:end="87:68">modes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:56"><expr pos:start="89:13" pos:end="89:55"><call pos:start="89:13" pos:end="89:55"><name pos:start="89:13" pos:end="89:20">AV_WN32A</name><argument_list pos:start="89:21" pos:end="89:55">(<argument pos:start="89:22" pos:end="89:47"><expr pos:start="89:22" pos:end="89:47"><name pos:start="89:22" pos:end="89:47"><name pos:start="89:22" pos:end="89:22">s</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:47">intra4x4_pred_mode_left</name></name></expr></argument>, <argument pos:start="89:50" pos:end="89:54"><expr pos:start="89:50" pos:end="89:54"><name pos:start="89:50" pos:end="89:54">modes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="95:9" pos:end="97:73"><expr pos:start="95:9" pos:end="97:72"><name pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:10">mb</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:28">chroma_pred_mode</name></name> <operator pos:start="95:30" pos:end="95:30">=</operator> <call pos:start="95:32" pos:end="97:72"><name pos:start="95:32" pos:end="95:47">vp8_rac_get_tree</name><argument_list pos:start="95:48" pos:end="97:72">(<argument pos:start="95:49" pos:end="95:49"><expr pos:start="95:49" pos:end="95:49"><name pos:start="95:49" pos:end="95:49">c</name></expr></argument>, <argument pos:start="95:52" pos:end="95:68"><expr pos:start="95:52" pos:end="95:68"><name pos:start="95:52" pos:end="95:68">vp8_pred8x8c_tree</name></expr></argument>,

                                                <argument pos:start="97:49" pos:end="97:71"><expr pos:start="97:49" pos:end="97:71"><name pos:start="97:49" pos:end="97:71">vp8_pred8x8c_prob_intra</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:50"><expr pos:start="99:9" pos:end="99:49"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:10">mb</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:21">ref_frame</name></name>        <operator pos:start="99:30" pos:end="99:30">=</operator> <name pos:start="99:32" pos:end="99:49">VP56_FRAME_CURRENT</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="101:7" pos:end="131:5">else if <condition pos:start="101:15" pos:end="101:60">(<expr pos:start="101:16" pos:end="101:59"><call pos:start="101:16" pos:end="101:59"><name pos:start="101:16" pos:end="101:40">vp56_rac_get_prob_branchy</name><argument_list pos:start="101:41" pos:end="101:59">(<argument pos:start="101:42" pos:end="101:42"><expr pos:start="101:42" pos:end="101:42"><name pos:start="101:42" pos:end="101:42">c</name></expr></argument>, <argument pos:start="101:45" pos:end="101:58"><expr pos:start="101:45" pos:end="101:58"><name pos:start="101:45" pos:end="101:58"><name pos:start="101:45" pos:end="101:45">s</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:51">prob</name><operator pos:start="101:52" pos:end="101:53">-&gt;</operator><name pos:start="101:54" pos:end="101:58">intra</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:62" pos:end="131:5">{<block_content pos:start="105:9" pos:end="129:54">

        <comment type="line" pos:start="103:9" pos:end="103:25">// inter MB, 16.2</comment>

        <if_stmt pos:start="105:9" pos:end="115:48"><if pos:start="105:9" pos:end="111:87">if <condition pos:start="105:12" pos:end="105:56">(<expr pos:start="105:13" pos:end="105:55"><call pos:start="105:13" pos:end="105:55"><name pos:start="105:13" pos:end="105:37">vp56_rac_get_prob_branchy</name><argument_list pos:start="105:38" pos:end="105:55">(<argument pos:start="105:39" pos:end="105:39"><expr pos:start="105:39" pos:end="105:39"><name pos:start="105:39" pos:end="105:39">c</name></expr></argument>, <argument pos:start="105:42" pos:end="105:54"><expr pos:start="105:42" pos:end="105:54"><name pos:start="105:42" pos:end="105:54"><name pos:start="105:42" pos:end="105:42">s</name><operator pos:start="105:43" pos:end="105:44">-&gt;</operator><name pos:start="105:45" pos:end="105:48">prob</name><operator pos:start="105:49" pos:end="105:50">-&gt;</operator><name pos:start="105:51" pos:end="105:54">last</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="111:87"><block_content pos:start="107:13" pos:end="111:87">

            <expr_stmt pos:start="107:13" pos:end="111:87"><expr pos:start="107:13" pos:end="111:86"><name pos:start="107:13" pos:end="107:25"><name pos:start="107:13" pos:end="107:14">mb</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:25">ref_frame</name></name> <operator pos:start="107:27" pos:end="107:27">=</operator>

                <ternary pos:start="109:17" pos:end="111:86"><condition pos:start="109:17" pos:end="109:68"><expr pos:start="109:17" pos:end="109:66"><operator pos:start="109:17" pos:end="109:17">(</operator><operator pos:start="109:18" pos:end="109:18">!</operator><name pos:start="109:19" pos:end="109:24">is_vp7</name> <operator pos:start="109:26" pos:end="109:27">&amp;&amp;</operator> <call pos:start="109:29" pos:end="109:65"><name pos:start="109:29" pos:end="109:45">vp56_rac_get_prob</name><argument_list pos:start="109:46" pos:end="109:65">(<argument pos:start="109:47" pos:end="109:47"><expr pos:start="109:47" pos:end="109:47"><name pos:start="109:47" pos:end="109:47">c</name></expr></argument>, <argument pos:start="109:50" pos:end="109:64"><expr pos:start="109:50" pos:end="109:64"><name pos:start="109:50" pos:end="109:64"><name pos:start="109:50" pos:end="109:50">s</name><operator pos:start="109:51" pos:end="109:52">-&gt;</operator><name pos:start="109:53" pos:end="109:56">prob</name><operator pos:start="109:57" pos:end="109:58">-&gt;</operator><name pos:start="109:59" pos:end="109:64">golden</name></name></expr></argument>)</argument_list></call><operator pos:start="109:66" pos:end="109:66">)</operator></expr> ?</condition><then pos:start="109:70" pos:end="109:87"> <expr pos:start="109:70" pos:end="109:87"><name pos:start="109:70" pos:end="109:87">VP56_FRAME_GOLDEN2</name></expr> <comment type="block" pos:start="109:89" pos:end="109:100">/* altref */</comment>

                                                                   </then><else pos:start="111:68" pos:end="111:86">: <expr pos:start="111:70" pos:end="111:86"><name pos:start="111:70" pos:end="111:86">VP56_FRAME_GOLDEN</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="113:9" pos:end="115:48">else<block type="pseudo" pos:start="115:13" pos:end="115:48"><block_content pos:start="115:13" pos:end="115:48">

            <expr_stmt pos:start="115:13" pos:end="115:48"><expr pos:start="115:13" pos:end="115:47"><name pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:14">mb</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:25">ref_frame</name></name> <operator pos:start="115:27" pos:end="115:27">=</operator> <name pos:start="115:29" pos:end="115:47">VP56_FRAME_PREVIOUS</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:42"><expr pos:start="117:9" pos:end="117:41"><name pos:start="117:9" pos:end="117:39"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:20">ref_count</name><index pos:start="117:21" pos:end="117:39">[<expr pos:start="117:22" pos:end="117:38"><name pos:start="117:22" pos:end="117:34"><name pos:start="117:22" pos:end="117:23">mb</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:34">ref_frame</name></name> <operator pos:start="117:36" pos:end="117:36">-</operator> <literal type="number" pos:start="117:38" pos:end="117:38">1</literal></expr>]</index></name><operator pos:start="117:40" pos:end="117:41">++</operator></expr>;</expr_stmt>



        <comment type="line" pos:start="121:9" pos:end="121:31">// motion vectors, 16.3</comment>

        <if_stmt pos:start="123:9" pos:end="129:54"><if pos:start="123:9" pos:end="125:54">if <condition pos:start="123:12" pos:end="123:19">(<expr pos:start="123:13" pos:end="123:18"><name pos:start="123:13" pos:end="123:18">is_vp7</name></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:54"><block_content pos:start="125:13" pos:end="125:54">

            <expr_stmt pos:start="125:13" pos:end="125:54"><expr pos:start="125:13" pos:end="125:53"><call pos:start="125:13" pos:end="125:53"><name pos:start="125:13" pos:end="125:26">vp7_decode_mvs</name><argument_list pos:start="125:27" pos:end="125:53">(<argument pos:start="125:28" pos:end="125:28"><expr pos:start="125:28" pos:end="125:28"><name pos:start="125:28" pos:end="125:28">s</name></expr></argument>, <argument pos:start="125:31" pos:end="125:32"><expr pos:start="125:31" pos:end="125:32"><name pos:start="125:31" pos:end="125:32">mb</name></expr></argument>, <argument pos:start="125:35" pos:end="125:38"><expr pos:start="125:35" pos:end="125:38"><name pos:start="125:35" pos:end="125:38">mb_x</name></expr></argument>, <argument pos:start="125:41" pos:end="125:44"><expr pos:start="125:41" pos:end="125:44"><name pos:start="125:41" pos:end="125:44">mb_y</name></expr></argument>, <argument pos:start="125:47" pos:end="125:52"><expr pos:start="125:47" pos:end="125:52"><name pos:start="125:47" pos:end="125:52">layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="127:9" pos:end="129:54">else<block type="pseudo" pos:start="129:13" pos:end="129:54"><block_content pos:start="129:13" pos:end="129:54">

            <expr_stmt pos:start="129:13" pos:end="129:54"><expr pos:start="129:13" pos:end="129:53"><call pos:start="129:13" pos:end="129:53"><name pos:start="129:13" pos:end="129:26">vp8_decode_mvs</name><argument_list pos:start="129:27" pos:end="129:53">(<argument pos:start="129:28" pos:end="129:28"><expr pos:start="129:28" pos:end="129:28"><name pos:start="129:28" pos:end="129:28">s</name></expr></argument>, <argument pos:start="129:31" pos:end="129:32"><expr pos:start="129:31" pos:end="129:32"><name pos:start="129:31" pos:end="129:32">mb</name></expr></argument>, <argument pos:start="129:35" pos:end="129:38"><expr pos:start="129:35" pos:end="129:38"><name pos:start="129:35" pos:end="129:38">mb_x</name></expr></argument>, <argument pos:start="129:41" pos:end="129:44"><expr pos:start="129:41" pos:end="129:44"><name pos:start="129:41" pos:end="129:44">mb_y</name></expr></argument>, <argument pos:start="129:47" pos:end="129:52"><expr pos:start="129:47" pos:end="129:52"><name pos:start="129:47" pos:end="129:52">layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="131:7" pos:end="155:5">else <block pos:start="131:12" pos:end="155:5">{<block_content pos:start="135:9" pos:end="153:31">

        <comment type="line" pos:start="133:9" pos:end="133:25">// intra MB, 16.1</comment>

        <expr_stmt pos:start="135:9" pos:end="135:85"><expr pos:start="135:9" pos:end="135:84"><name pos:start="135:9" pos:end="135:16"><name pos:start="135:9" pos:end="135:10">mb</name><operator pos:start="135:11" pos:end="135:12">-&gt;</operator><name pos:start="135:13" pos:end="135:16">mode</name></name> <operator pos:start="135:18" pos:end="135:18">=</operator> <call pos:start="135:20" pos:end="135:84"><name pos:start="135:20" pos:end="135:35">vp8_rac_get_tree</name><argument_list pos:start="135:36" pos:end="135:84">(<argument pos:start="135:37" pos:end="135:37"><expr pos:start="135:37" pos:end="135:37"><name pos:start="135:37" pos:end="135:37">c</name></expr></argument>, <argument pos:start="135:40" pos:end="135:63"><expr pos:start="135:40" pos:end="135:63"><name pos:start="135:40" pos:end="135:63">vp8_pred16x16_tree_inter</name></expr></argument>, <argument pos:start="135:66" pos:end="135:83"><expr pos:start="135:66" pos:end="135:83"><name pos:start="135:66" pos:end="135:83"><name pos:start="135:66" pos:end="135:66">s</name><operator pos:start="135:67" pos:end="135:68">-&gt;</operator><name pos:start="135:69" pos:end="135:72">prob</name><operator pos:start="135:73" pos:end="135:74">-&gt;</operator><name pos:start="135:75" pos:end="135:83">pred16x16</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="139:9" pos:end="141:61"><if pos:start="139:9" pos:end="141:61">if <condition pos:start="139:12" pos:end="139:34">(<expr pos:start="139:13" pos:end="139:33"><name pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:14">mb</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:20">mode</name></name> <operator pos:start="139:22" pos:end="139:23">==</operator> <name pos:start="139:25" pos:end="139:33">MODE_I4x4</name></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:61"><block_content pos:start="141:13" pos:end="141:61">

            <expr_stmt pos:start="141:13" pos:end="141:61"><expr pos:start="141:13" pos:end="141:60"><call pos:start="141:13" pos:end="141:60"><name pos:start="141:13" pos:end="141:33">decode_intra4x4_modes</name><argument_list pos:start="141:34" pos:end="141:60">(<argument pos:start="141:35" pos:end="141:35"><expr pos:start="141:35" pos:end="141:35"><name pos:start="141:35" pos:end="141:35">s</name></expr></argument>, <argument pos:start="141:38" pos:end="141:38"><expr pos:start="141:38" pos:end="141:38"><name pos:start="141:38" pos:end="141:38">c</name></expr></argument>, <argument pos:start="141:41" pos:end="141:42"><expr pos:start="141:41" pos:end="141:42"><name pos:start="141:41" pos:end="141:42">mb</name></expr></argument>, <argument pos:start="141:45" pos:end="141:48"><expr pos:start="141:45" pos:end="141:48"><name pos:start="141:45" pos:end="141:48">mb_x</name></expr></argument>, <argument pos:start="141:51" pos:end="141:51"><expr pos:start="141:51" pos:end="141:51"><literal type="number" pos:start="141:51" pos:end="141:51">0</literal></expr></argument>, <argument pos:start="141:54" pos:end="141:59"><expr pos:start="141:54" pos:end="141:59"><name pos:start="141:54" pos:end="141:59">layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="145:9" pos:end="147:67"><expr pos:start="145:9" pos:end="147:66"><name pos:start="145:9" pos:end="145:28"><name pos:start="145:9" pos:end="145:10">mb</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:28">chroma_pred_mode</name></name> <operator pos:start="145:30" pos:end="145:30">=</operator> <call pos:start="145:32" pos:end="147:66"><name pos:start="145:32" pos:end="145:47">vp8_rac_get_tree</name><argument_list pos:start="145:48" pos:end="147:66">(<argument pos:start="145:49" pos:end="145:49"><expr pos:start="145:49" pos:end="145:49"><name pos:start="145:49" pos:end="145:49">c</name></expr></argument>, <argument pos:start="145:52" pos:end="145:68"><expr pos:start="145:52" pos:end="145:68"><name pos:start="145:52" pos:end="145:68">vp8_pred8x8c_tree</name></expr></argument>,

                                                <argument pos:start="147:49" pos:end="147:65"><expr pos:start="147:49" pos:end="147:65"><name pos:start="147:49" pos:end="147:65"><name pos:start="147:49" pos:end="147:49">s</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:55">prob</name><operator pos:start="147:56" pos:end="147:57">-&gt;</operator><name pos:start="147:58" pos:end="147:65">pred8x8c</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:50"><expr pos:start="149:9" pos:end="149:49"><name pos:start="149:9" pos:end="149:21"><name pos:start="149:9" pos:end="149:10">mb</name><operator pos:start="149:11" pos:end="149:12">-&gt;</operator><name pos:start="149:13" pos:end="149:21">ref_frame</name></name>        <operator pos:start="149:30" pos:end="149:30">=</operator> <name pos:start="149:32" pos:end="149:49">VP56_FRAME_CURRENT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:52"><expr pos:start="151:9" pos:end="151:51"><name pos:start="151:9" pos:end="151:24"><name pos:start="151:9" pos:end="151:10">mb</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:24">partitioning</name></name>     <operator pos:start="151:30" pos:end="151:30">=</operator> <name pos:start="151:32" pos:end="151:51">VP8_SPLITMVMODE_NONE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:31"><expr pos:start="153:9" pos:end="153:30"><call pos:start="153:9" pos:end="153:30"><name pos:start="153:9" pos:end="153:17">AV_ZERO32</name><argument_list pos:start="153:18" pos:end="153:30">(<argument pos:start="153:19" pos:end="153:29"><expr pos:start="153:19" pos:end="153:29"><operator pos:start="153:19" pos:end="153:19">&amp;</operator><name pos:start="153:20" pos:end="153:29"><name pos:start="153:20" pos:end="153:21">mb</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:26">bmv</name><index pos:start="153:27" pos:end="153:29">[<expr pos:start="153:28" pos:end="153:28"><literal type="number" pos:start="153:28" pos:end="153:28">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
