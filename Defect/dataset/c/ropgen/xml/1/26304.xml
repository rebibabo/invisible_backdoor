<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26304.c" pos:tabs="8"><function pos:start="1:1" pos:end="220:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">wv_get_value</name><parameter_list pos:start="1:24" pos:end="3:47">(<parameter pos:start="1:25" pos:end="1:48"><decl pos:start="1:25" pos:end="1:48"><type pos:start="1:25" pos:end="1:48"><name pos:start="1:25" pos:end="1:43">WavpackFrameContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:67"><decl pos:start="1:51" pos:end="1:67"><type pos:start="1:51" pos:end="1:67"><name pos:start="1:51" pos:end="1:63">GetBitContext</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:67">gb</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:35"><decl pos:start="3:25" pos:end="3:35"><type pos:start="3:25" pos:end="3:35"><name pos:start="3:25" pos:end="3:27">int</name></type> <name pos:start="3:29" pos:end="3:35">channel</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:46"><decl pos:start="3:38" pos:end="3:46"><type pos:start="3:38" pos:end="3:46"><name pos:start="3:38" pos:end="3:40">int</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:46">last</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="220:13">{<block_content pos:start="7:5" pos:end="220:13">

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">t</name></decl>, <decl pos:start="7:12" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:13">t2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">sign</name></decl>, <decl pos:start="9:15" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:18">base</name></decl>, <decl pos:start="9:21" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:23">add</name></decl>, <decl pos:start="9:26" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:28">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">WvChannel</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:16">c</name> <init pos:start="11:18" pos:end="11:36">= <expr pos:start="11:20" pos:end="11:36"><operator pos:start="11:20" pos:end="11:20">&amp;</operator><name pos:start="11:21" pos:end="11:36"><name pos:start="11:21" pos:end="11:23">ctx</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:27">ch</name><index pos:start="11:28" pos:end="11:36">[<expr pos:start="11:29" pos:end="11:35"><name pos:start="11:29" pos:end="11:35">channel</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:14"><expr pos:start="15:5" pos:end="15:13"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:9">last</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="220:13"><if pos:start="19:5" pos:end="220:13">if <condition pos:start="19:8" pos:end="21:32">(<expr pos:start="19:9" pos:end="21:31"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:19"><name pos:start="19:10" pos:end="19:12">ctx</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:16">ch</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>]</index></name><operator pos:start="19:20" pos:end="19:20">.</operator><name pos:start="19:21" pos:end="19:29"><name pos:start="19:21" pos:end="19:26">median</name><index pos:start="19:27" pos:end="19:29">[<expr pos:start="19:28" pos:end="19:28"><literal type="number" pos:start="19:28" pos:end="19:28">0</literal></expr>]</index></name> <operator pos:start="19:31" pos:end="19:31">&lt;</operator> <literal type="number" pos:start="19:33" pos:end="19:34">2U</literal><operator pos:start="19:35" pos:end="19:35">)</operator> <operator pos:start="19:37" pos:end="19:38">&amp;&amp;</operator> <operator pos:start="19:40" pos:end="19:40">(</operator><name pos:start="19:41" pos:end="19:50"><name pos:start="19:41" pos:end="19:43">ctx</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:47">ch</name><index pos:start="19:48" pos:end="19:50">[<expr pos:start="19:49" pos:end="19:49"><literal type="number" pos:start="19:49" pos:end="19:49">1</literal></expr>]</index></name><operator pos:start="19:51" pos:end="19:51">.</operator><name pos:start="19:52" pos:end="19:60"><name pos:start="19:52" pos:end="19:57">median</name><index pos:start="19:58" pos:end="19:60">[<expr pos:start="19:59" pos:end="19:59"><literal type="number" pos:start="19:59" pos:end="19:59">0</literal></expr>]</index></name> <operator pos:start="19:62" pos:end="19:62">&lt;</operator> <literal type="number" pos:start="19:64" pos:end="19:65">2U</literal><operator pos:start="19:66" pos:end="19:66">)</operator> <operator pos:start="19:68" pos:end="19:69">&amp;&amp;</operator>

        <operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:18"><name pos:start="21:10" pos:end="21:12">ctx</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:18">zero</name></name> <operator pos:start="21:20" pos:end="21:21">&amp;&amp;</operator> <operator pos:start="21:23" pos:end="21:23">!</operator><name pos:start="21:24" pos:end="21:31"><name pos:start="21:24" pos:end="21:26">ctx</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:31">one</name></name></expr>)</condition> <block pos:start="21:34" pos:end="220:13">{<block_content pos:start="23:9" pos:end="220:13">

        <if_stmt pos:start="23:9" pos:end="220:13"><if pos:start="23:9" pos:end="220:13">if <condition pos:start="23:12" pos:end="23:24">(<expr pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:15">ctx</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:23">zeroes</name></name></expr>)</condition> <block pos:start="23:26" pos:end="220:13">{<block_content pos:start="25:13" pos:end="220:13">

            <expr_stmt pos:start="25:13" pos:end="25:26"><expr pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:15">ctx</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:23">zeroes</name></name><operator pos:start="25:24" pos:end="25:25">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="27:13" pos:end="220:13"><if pos:start="27:13" pos:end="34:9">if <condition pos:start="27:16" pos:end="27:28">(<expr pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:19">ctx</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:27">zeroes</name></name></expr>)</condition> <block pos:start="27:30" pos:end="34:9">{<block_content pos:start="29:17" pos:end="31:25">

                <expr_stmt pos:start="29:17" pos:end="29:60"><expr pos:start="29:17" pos:end="29:59"><name pos:start="29:17" pos:end="29:29"><name pos:start="29:17" pos:end="29:17">c</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:29">slow_level</name></name> <operator pos:start="29:31" pos:end="29:32">-=</operator> <call pos:start="29:34" pos:end="29:59"><name pos:start="29:34" pos:end="29:44">LEVEL_DECAY</name><argument_list pos:start="29:45" pos:end="29:59">(<argument pos:start="29:46" pos:end="29:58"><expr pos:start="29:46" pos:end="29:58"><name pos:start="29:46" pos:end="29:58"><name pos:start="29:46" pos:end="29:46">c</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:58">slow_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="31:17" pos:end="31:25">return <expr pos:start="31:24" pos:end="31:24"><literal type="number" pos:start="31:24" pos:end="31:24">0</literal></expr>;</return>


        </block_content>}</block></if> <else pos:start="34:11" pos:end="220:13">else <block pos:start="34:16" pos:end="220:13">{<block_content pos:start="36:13" pos:end="220:13">

            <expr_stmt pos:start="36:13" pos:end="36:35"><expr pos:start="36:13" pos:end="36:34"><name pos:start="36:13" pos:end="36:13">t</name> <operator pos:start="36:15" pos:end="36:15">=</operator> <call pos:start="36:17" pos:end="36:34"><name pos:start="36:17" pos:end="36:30">get_unary_0_33</name><argument_list pos:start="36:31" pos:end="36:34">(<argument pos:start="36:32" pos:end="36:33"><expr pos:start="36:32" pos:end="36:33"><name pos:start="36:32" pos:end="36:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="38:13" pos:end="220:13"><if pos:start="38:13" pos:end="45:13">if <condition pos:start="38:16" pos:end="38:23">(<expr pos:start="38:17" pos:end="38:22"><name pos:start="38:17" pos:end="38:17">t</name> <operator pos:start="38:19" pos:end="38:20">&gt;=</operator> <literal type="number" pos:start="38:22" pos:end="38:22">2</literal></expr>)</condition> <block pos:start="38:25" pos:end="45:13">{<block_content pos:start="40:17" pos:end="43:55">

                <if_stmt pos:start="40:17" pos:end="43:55"><if pos:start="40:17" pos:end="43:55">if <condition pos:start="40:20" pos:end="40:46">(<expr pos:start="40:21" pos:end="40:45"><call pos:start="40:21" pos:end="40:37"><name pos:start="40:21" pos:end="40:33">get_bits_left</name><argument_list pos:start="40:34" pos:end="40:37">(<argument pos:start="40:35" pos:end="40:36"><expr pos:start="40:35" pos:end="40:36"><name pos:start="40:35" pos:end="40:36">gb</name></expr></argument>)</argument_list></call> <operator pos:start="40:39" pos:end="40:39">&lt;</operator> <name pos:start="40:41" pos:end="40:41">t</name> <operator pos:start="40:43" pos:end="40:43">-</operator> <literal type="number" pos:start="40:45" pos:end="40:45">1</literal></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:55"><block_content pos:start="43:17" pos:end="43:55">


                <expr_stmt pos:start="43:17" pos:end="43:55"><expr pos:start="43:17" pos:end="43:54"><name pos:start="43:17" pos:end="43:17">t</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <call pos:start="43:21" pos:end="43:39"><name pos:start="43:21" pos:end="43:28">get_bits</name><argument_list pos:start="43:29" pos:end="43:39">(<argument pos:start="43:30" pos:end="43:31"><expr pos:start="43:30" pos:end="43:31"><name pos:start="43:30" pos:end="43:31">gb</name></expr></argument>, <argument pos:start="43:34" pos:end="43:38"><expr pos:start="43:34" pos:end="43:38"><name pos:start="43:34" pos:end="43:34">t</name> <operator pos:start="43:36" pos:end="43:36">-</operator> <literal type="number" pos:start="43:38" pos:end="43:38">1</literal></expr></argument>)</argument_list></call> <operator pos:start="43:41" pos:end="43:41">|</operator> <operator pos:start="43:43" pos:end="43:43">(</operator><literal type="number" pos:start="43:44" pos:end="43:44">1</literal> <operator pos:start="43:46" pos:end="43:47">&lt;&lt;</operator> <operator pos:start="43:49" pos:end="43:49">(</operator><name pos:start="43:50" pos:end="43:50">t</name><operator pos:start="43:51" pos:end="43:51">-</operator><literal type="number" pos:start="43:52" pos:end="43:52">1</literal><operator pos:start="43:53" pos:end="43:53">)</operator><operator pos:start="43:54" pos:end="43:54">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="45:15" pos:end="220:13">else <block pos:start="45:20" pos:end="220:13">{<block_content pos:start="47:17" pos:end="220:13">

                <if_stmt pos:start="47:17" pos:end="51:28"><if pos:start="47:17" pos:end="51:28">if <condition pos:start="47:20" pos:end="47:42">(<expr pos:start="47:21" pos:end="47:41"><call pos:start="47:21" pos:end="47:37"><name pos:start="47:21" pos:end="47:33">get_bits_left</name><argument_list pos:start="47:34" pos:end="47:37">(<argument pos:start="47:35" pos:end="47:36"><expr pos:start="47:35" pos:end="47:36"><name pos:start="47:35" pos:end="47:36">gb</name></expr></argument>)</argument_list></call> <operator pos:start="47:39" pos:end="47:39">&lt;</operator> <literal type="number" pos:start="47:41" pos:end="47:41">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:28"><block_content pos:start="51:13" pos:end="51:28">



            <expr_stmt pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:15">ctx</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:23">zeroes</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:27">t</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="53:13" pos:end="220:13"><if pos:start="53:13" pos:end="220:13">if <condition pos:start="53:16" pos:end="53:28">(<expr pos:start="53:17" pos:end="53:27"><name pos:start="53:17" pos:end="53:27"><name pos:start="53:17" pos:end="53:19">ctx</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:27">zeroes</name></name></expr>)</condition> <block pos:start="53:30" pos:end="220:13">{<block_content pos:start="55:17" pos:end="220:13">

                <expr_stmt pos:start="55:17" pos:end="55:72"><expr pos:start="55:17" pos:end="55:71"><call pos:start="55:17" pos:end="55:71"><name pos:start="55:17" pos:end="55:22">memset</name><argument_list pos:start="55:23" pos:end="55:71">(<argument pos:start="55:24" pos:end="55:40"><expr pos:start="55:24" pos:end="55:40"><name pos:start="55:24" pos:end="55:33"><name pos:start="55:24" pos:end="55:26">ctx</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:30">ch</name><index pos:start="55:31" pos:end="55:33">[<expr pos:start="55:32" pos:end="55:32"><literal type="number" pos:start="55:32" pos:end="55:32">0</literal></expr>]</index></name><operator pos:start="55:34" pos:end="55:34">.</operator><name pos:start="55:35" pos:end="55:40">median</name></expr></argument>, <argument pos:start="55:43" pos:end="55:43"><expr pos:start="55:43" pos:end="55:43"><literal type="number" pos:start="55:43" pos:end="55:43">0</literal></expr></argument>, <argument pos:start="55:46" pos:end="55:70"><expr pos:start="55:46" pos:end="55:70"><sizeof pos:start="55:46" pos:end="55:70">sizeof<argument_list pos:start="55:52" pos:end="55:70">(<argument pos:start="55:53" pos:end="55:69"><expr pos:start="55:53" pos:end="55:69"><name pos:start="55:53" pos:end="55:62"><name pos:start="55:53" pos:end="55:55">ctx</name><operator pos:start="55:56" pos:end="55:57">-&gt;</operator><name pos:start="55:58" pos:end="55:59">ch</name><index pos:start="55:60" pos:end="55:62">[<expr pos:start="55:61" pos:end="55:61"><literal type="number" pos:start="55:61" pos:end="55:61">0</literal></expr>]</index></name><operator pos:start="55:63" pos:end="55:63">.</operator><name pos:start="55:64" pos:end="55:69">median</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:72"><expr pos:start="57:17" pos:end="57:71"><call pos:start="57:17" pos:end="57:71"><name pos:start="57:17" pos:end="57:22">memset</name><argument_list pos:start="57:23" pos:end="57:71">(<argument pos:start="57:24" pos:end="57:40"><expr pos:start="57:24" pos:end="57:40"><name pos:start="57:24" pos:end="57:33"><name pos:start="57:24" pos:end="57:26">ctx</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:30">ch</name><index pos:start="57:31" pos:end="57:33">[<expr pos:start="57:32" pos:end="57:32"><literal type="number" pos:start="57:32" pos:end="57:32">1</literal></expr>]</index></name><operator pos:start="57:34" pos:end="57:34">.</operator><name pos:start="57:35" pos:end="57:40">median</name></expr></argument>, <argument pos:start="57:43" pos:end="57:43"><expr pos:start="57:43" pos:end="57:43"><literal type="number" pos:start="57:43" pos:end="57:43">0</literal></expr></argument>, <argument pos:start="57:46" pos:end="57:70"><expr pos:start="57:46" pos:end="57:70"><sizeof pos:start="57:46" pos:end="57:70">sizeof<argument_list pos:start="57:52" pos:end="57:70">(<argument pos:start="57:53" pos:end="57:69"><expr pos:start="57:53" pos:end="57:69"><name pos:start="57:53" pos:end="57:62"><name pos:start="57:53" pos:end="57:55">ctx</name><operator pos:start="57:56" pos:end="57:57">-&gt;</operator><name pos:start="57:58" pos:end="57:59">ch</name><index pos:start="57:60" pos:end="57:62">[<expr pos:start="57:61" pos:end="57:61"><literal type="number" pos:start="57:61" pos:end="57:61">1</literal></expr>]</index></name><operator pos:start="57:63" pos:end="57:63">.</operator><name pos:start="57:64" pos:end="57:69">median</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:60"><expr pos:start="59:17" pos:end="59:59"><name pos:start="59:17" pos:end="59:29"><name pos:start="59:17" pos:end="59:17">c</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:29">slow_level</name></name> <operator pos:start="59:31" pos:end="59:32">-=</operator> <call pos:start="59:34" pos:end="59:59"><name pos:start="59:34" pos:end="59:44">LEVEL_DECAY</name><argument_list pos:start="59:45" pos:end="59:59">(<argument pos:start="59:46" pos:end="59:58"><expr pos:start="59:46" pos:end="59:58"><name pos:start="59:46" pos:end="59:58"><name pos:start="59:46" pos:end="59:46">c</name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator><name pos:start="59:49" pos:end="59:58">slow_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="61:17" pos:end="61:25">return <expr pos:start="61:24" pos:end="61:24"><literal type="number" pos:start="61:24" pos:end="61:24">0</literal></expr>;</return>






    <if_stmt pos:start="68:5" pos:end="220:13"><if pos:start="68:5" pos:end="74:5">if <condition pos:start="68:8" pos:end="68:18">(<expr pos:start="68:9" pos:end="68:17"><name pos:start="68:9" pos:end="68:17"><name pos:start="68:9" pos:end="68:11">ctx</name><operator pos:start="68:12" pos:end="68:13">-&gt;</operator><name pos:start="68:14" pos:end="68:17">zero</name></name></expr>)</condition> <block pos:start="68:20" pos:end="74:5">{<block_content pos:start="70:9" pos:end="72:22">

        <expr_stmt pos:start="70:9" pos:end="70:14"><expr pos:start="70:9" pos:end="70:13"><name pos:start="70:9" pos:end="70:9">t</name> <operator pos:start="70:11" pos:end="70:11">=</operator> <literal type="number" pos:start="70:13" pos:end="70:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="72:9" pos:end="72:22"><expr pos:start="72:9" pos:end="72:21"><name pos:start="72:9" pos:end="72:17"><name pos:start="72:9" pos:end="72:11">ctx</name><operator pos:start="72:12" pos:end="72:13">-&gt;</operator><name pos:start="72:14" pos:end="72:17">zero</name></name> <operator pos:start="72:19" pos:end="72:19">=</operator> <literal type="number" pos:start="72:21" pos:end="72:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="74:7" pos:end="220:13">else <block pos:start="74:12" pos:end="220:13">{<block_content pos:start="76:9" pos:end="220:13">

        <expr_stmt pos:start="76:9" pos:end="76:31"><expr pos:start="76:9" pos:end="76:30"><name pos:start="76:9" pos:end="76:9">t</name> <operator pos:start="76:11" pos:end="76:11">=</operator> <call pos:start="76:13" pos:end="76:30"><name pos:start="76:13" pos:end="76:26">get_unary_0_33</name><argument_list pos:start="76:27" pos:end="76:30">(<argument pos:start="76:28" pos:end="76:29"><expr pos:start="76:28" pos:end="76:29"><name pos:start="76:28" pos:end="76:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="78:9" pos:end="220:13"><if pos:start="78:9" pos:end="220:13">if <condition pos:start="78:12" pos:end="78:34">(<expr pos:start="78:13" pos:end="78:33"><call pos:start="78:13" pos:end="78:29"><name pos:start="78:13" pos:end="78:25">get_bits_left</name><argument_list pos:start="78:26" pos:end="78:29">(<argument pos:start="78:27" pos:end="78:28"><expr pos:start="78:27" pos:end="78:28"><name pos:start="78:27" pos:end="78:28">gb</name></expr></argument>)</argument_list></call> <operator pos:start="78:31" pos:end="78:31">&lt;</operator> <literal type="number" pos:start="78:33" pos:end="78:33">0</literal></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="220:13"><block_content pos:start="81:9" pos:end="220:13">


        <if_stmt pos:start="81:9" pos:end="220:13"><if pos:start="81:9" pos:end="220:13">if <condition pos:start="81:12" pos:end="81:20">(<expr pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:13">t</name> <operator pos:start="81:15" pos:end="81:16">==</operator> <literal type="number" pos:start="81:18" pos:end="81:19">16</literal></expr>)</condition> <block pos:start="81:22" pos:end="220:13">{<block_content pos:start="83:13" pos:end="220:13">

            <expr_stmt pos:start="83:13" pos:end="83:36"><expr pos:start="83:13" pos:end="83:35"><name pos:start="83:13" pos:end="83:14">t2</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <call pos:start="83:18" pos:end="83:35"><name pos:start="83:18" pos:end="83:31">get_unary_0_33</name><argument_list pos:start="83:32" pos:end="83:35">(<argument pos:start="83:33" pos:end="83:34"><expr pos:start="83:33" pos:end="83:34"><name pos:start="83:33" pos:end="83:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="220:13"><if pos:start="85:13" pos:end="92:13">if <condition pos:start="85:16" pos:end="85:23">(<expr pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:18">t2</name> <operator pos:start="85:20" pos:end="85:20">&lt;</operator> <literal type="number" pos:start="85:22" pos:end="85:22">2</literal></expr>)</condition> <block pos:start="85:25" pos:end="92:13">{<block_content pos:start="87:17" pos:end="90:24">

                <if_stmt pos:start="87:17" pos:end="90:24"><if pos:start="87:17" pos:end="90:24">if <condition pos:start="87:20" pos:end="87:42">(<expr pos:start="87:21" pos:end="87:41"><call pos:start="87:21" pos:end="87:37"><name pos:start="87:21" pos:end="87:33">get_bits_left</name><argument_list pos:start="87:34" pos:end="87:37">(<argument pos:start="87:35" pos:end="87:36"><expr pos:start="87:35" pos:end="87:36"><name pos:start="87:35" pos:end="87:36">gb</name></expr></argument>)</argument_list></call> <operator pos:start="87:39" pos:end="87:39">&lt;</operator> <literal type="number" pos:start="87:41" pos:end="87:41">0</literal></expr>)</condition><block type="pseudo" pos:start="90:17" pos:end="90:24"><block_content pos:start="90:17" pos:end="90:24">


                <expr_stmt pos:start="90:17" pos:end="90:24"><expr pos:start="90:17" pos:end="90:23"><name pos:start="90:17" pos:end="90:17">t</name> <operator pos:start="90:19" pos:end="90:20">+=</operator> <name pos:start="90:22" pos:end="90:23">t2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="92:15" pos:end="220:13">else <block pos:start="92:20" pos:end="220:13">{<block_content pos:start="94:17" pos:end="220:13">

                <if_stmt pos:start="94:17" pos:end="97:60"><if pos:start="94:17" pos:end="97:60">if <condition pos:start="94:20" pos:end="94:47">(<expr pos:start="94:21" pos:end="94:46"><call pos:start="94:21" pos:end="94:37"><name pos:start="94:21" pos:end="94:33">get_bits_left</name><argument_list pos:start="94:34" pos:end="94:37">(<argument pos:start="94:35" pos:end="94:36"><expr pos:start="94:35" pos:end="94:36"><name pos:start="94:35" pos:end="94:36">gb</name></expr></argument>)</argument_list></call> <operator pos:start="94:39" pos:end="94:39">&lt;</operator> <name pos:start="94:41" pos:end="94:42">t2</name> <operator pos:start="94:44" pos:end="94:44">-</operator> <literal type="number" pos:start="94:46" pos:end="94:46">1</literal></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:60"><block_content pos:start="97:17" pos:end="97:60">


                <expr_stmt pos:start="97:17" pos:end="97:60"><expr pos:start="97:17" pos:end="97:59"><name pos:start="97:17" pos:end="97:17">t</name> <operator pos:start="97:19" pos:end="97:20">+=</operator> <call pos:start="97:22" pos:end="97:41"><name pos:start="97:22" pos:end="97:29">get_bits</name><argument_list pos:start="97:30" pos:end="97:41">(<argument pos:start="97:31" pos:end="97:32"><expr pos:start="97:31" pos:end="97:32"><name pos:start="97:31" pos:end="97:32">gb</name></expr></argument>, <argument pos:start="97:35" pos:end="97:40"><expr pos:start="97:35" pos:end="97:40"><name pos:start="97:35" pos:end="97:36">t2</name> <operator pos:start="97:38" pos:end="97:38">-</operator> <literal type="number" pos:start="97:40" pos:end="97:40">1</literal></expr></argument>)</argument_list></call> <operator pos:start="97:43" pos:end="97:43">|</operator> <operator pos:start="97:45" pos:end="97:45">(</operator><literal type="number" pos:start="97:46" pos:end="97:46">1</literal> <operator pos:start="97:48" pos:end="97:49">&lt;&lt;</operator> <operator pos:start="97:51" pos:end="97:51">(</operator><name pos:start="97:52" pos:end="97:53">t2</name> <operator pos:start="97:55" pos:end="97:55">-</operator> <literal type="number" pos:start="97:57" pos:end="97:57">1</literal><operator pos:start="97:58" pos:end="97:58">)</operator><operator pos:start="97:59" pos:end="97:59">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>





        <if_stmt pos:start="103:9" pos:end="220:13"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:21">(<expr pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:15">ctx</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:20">one</name></name></expr>)</condition> <block pos:start="103:23" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:29">

            <expr_stmt pos:start="105:13" pos:end="105:29"><expr pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:20"><name pos:start="105:13" pos:end="105:15">ctx</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:20">one</name></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:24">t</name> <operator pos:start="105:26" pos:end="105:26">&amp;</operator> <literal type="number" pos:start="105:28" pos:end="105:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:29"><expr pos:start="107:13" pos:end="107:28"><name pos:start="107:13" pos:end="107:13">t</name> <operator pos:start="107:15" pos:end="107:15">=</operator> <operator pos:start="107:17" pos:end="107:17">(</operator><name pos:start="107:18" pos:end="107:18">t</name> <operator pos:start="107:20" pos:end="107:21">&gt;&gt;</operator> <literal type="number" pos:start="107:23" pos:end="107:23">1</literal><operator pos:start="107:24" pos:end="107:24">)</operator> <operator pos:start="107:26" pos:end="107:26">+</operator> <literal type="number" pos:start="107:28" pos:end="107:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="220:13">else <block pos:start="109:16" pos:end="220:13">{<block_content pos:start="111:13" pos:end="220:13">

            <expr_stmt pos:start="111:13" pos:end="111:29"><expr pos:start="111:13" pos:end="111:28"><name pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:15">ctx</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:20">one</name></name> <operator pos:start="111:22" pos:end="111:22">=</operator> <name pos:start="111:24" pos:end="111:24">t</name> <operator pos:start="111:26" pos:end="111:26">&amp;</operator> <literal type="number" pos:start="111:28" pos:end="111:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:20"><expr pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:13">t</name> <operator pos:start="113:15" pos:end="113:17">&gt;&gt;=</operator> <literal type="number" pos:start="113:19" pos:end="113:19">1</literal></expr>;</expr_stmt>


        <expr_stmt pos:start="116:9" pos:end="116:30"><expr pos:start="116:9" pos:end="116:29"><name pos:start="116:9" pos:end="116:17"><name pos:start="116:9" pos:end="116:11">ctx</name><operator pos:start="116:12" pos:end="116:13">-&gt;</operator><name pos:start="116:14" pos:end="116:17">zero</name></name> <operator pos:start="116:19" pos:end="116:19">=</operator> <operator pos:start="116:21" pos:end="116:21">!</operator><name pos:start="116:22" pos:end="116:29"><name pos:start="116:22" pos:end="116:24">ctx</name><operator pos:start="116:25" pos:end="116:26">-&gt;</operator><name pos:start="116:27" pos:end="116:29">one</name></name></expr>;</expr_stmt>




    <if_stmt pos:start="121:5" pos:end="123:32"><if pos:start="121:5" pos:end="123:32">if <condition pos:start="121:8" pos:end="121:32">(<expr pos:start="121:9" pos:end="121:31"><name pos:start="121:9" pos:end="121:19"><name pos:start="121:9" pos:end="121:11">ctx</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:19">hybrid</name></name> <operator pos:start="121:21" pos:end="121:22">&amp;&amp;</operator> <operator pos:start="121:24" pos:end="121:24">!</operator><name pos:start="121:25" pos:end="121:31">channel</name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:32"><block_content pos:start="123:9" pos:end="123:32">

        <expr_stmt pos:start="123:9" pos:end="123:32"><expr pos:start="123:9" pos:end="123:31"><call pos:start="123:9" pos:end="123:31"><name pos:start="123:9" pos:end="123:26">update_error_limit</name><argument_list pos:start="123:27" pos:end="123:31">(<argument pos:start="123:28" pos:end="123:30"><expr pos:start="123:28" pos:end="123:30"><name pos:start="123:28" pos:end="123:30">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="127:5" pos:end="220:13"><if pos:start="127:5" pos:end="135:5">if <condition pos:start="127:8" pos:end="127:11">(<expr pos:start="127:9" pos:end="127:10"><operator pos:start="127:9" pos:end="127:9">!</operator><name pos:start="127:10" pos:end="127:10">t</name></expr>)</condition> <block pos:start="127:13" pos:end="135:5">{<block_content pos:start="129:9" pos:end="133:19">

        <expr_stmt pos:start="129:9" pos:end="129:17"><expr pos:start="129:9" pos:end="129:16"><name pos:start="129:9" pos:end="129:12">base</name> <operator pos:start="129:14" pos:end="129:14">=</operator> <literal type="number" pos:start="129:16" pos:end="129:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:30"><expr pos:start="131:9" pos:end="131:29"><name pos:start="131:9" pos:end="131:11">add</name>  <operator pos:start="131:14" pos:end="131:14">=</operator> <call pos:start="131:16" pos:end="131:25"><name pos:start="131:16" pos:end="131:22">GET_MED</name><argument_list pos:start="131:23" pos:end="131:25">(<argument pos:start="131:24" pos:end="131:24"><expr pos:start="131:24" pos:end="131:24"><literal type="number" pos:start="131:24" pos:end="131:24">0</literal></expr></argument>)</argument_list></call> <operator pos:start="131:27" pos:end="131:27">-</operator> <literal type="number" pos:start="131:29" pos:end="131:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:19"><expr pos:start="133:9" pos:end="133:18"><call pos:start="133:9" pos:end="133:18"><name pos:start="133:9" pos:end="133:15">DEC_MED</name><argument_list pos:start="133:16" pos:end="133:18">(<argument pos:start="133:17" pos:end="133:17"><expr pos:start="133:17" pos:end="133:17"><literal type="number" pos:start="133:17" pos:end="133:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="135:7" pos:end="145:5">else if <condition pos:start="135:15" pos:end="135:22">(<expr pos:start="135:16" pos:end="135:21"><name pos:start="135:16" pos:end="135:16">t</name> <operator pos:start="135:18" pos:end="135:19">==</operator> <literal type="number" pos:start="135:21" pos:end="135:21">1</literal></expr>)</condition> <block pos:start="135:24" pos:end="145:5">{<block_content pos:start="137:9" pos:end="143:19">

        <expr_stmt pos:start="137:9" pos:end="137:26"><expr pos:start="137:9" pos:end="137:25"><name pos:start="137:9" pos:end="137:12">base</name> <operator pos:start="137:14" pos:end="137:14">=</operator> <call pos:start="137:16" pos:end="137:25"><name pos:start="137:16" pos:end="137:22">GET_MED</name><argument_list pos:start="137:23" pos:end="137:25">(<argument pos:start="137:24" pos:end="137:24"><expr pos:start="137:24" pos:end="137:24"><literal type="number" pos:start="137:24" pos:end="137:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:30"><expr pos:start="139:9" pos:end="139:29"><name pos:start="139:9" pos:end="139:11">add</name>  <operator pos:start="139:14" pos:end="139:14">=</operator> <call pos:start="139:16" pos:end="139:25"><name pos:start="139:16" pos:end="139:22">GET_MED</name><argument_list pos:start="139:23" pos:end="139:25">(<argument pos:start="139:24" pos:end="139:24"><expr pos:start="139:24" pos:end="139:24"><literal type="number" pos:start="139:24" pos:end="139:24">1</literal></expr></argument>)</argument_list></call> <operator pos:start="139:27" pos:end="139:27">-</operator> <literal type="number" pos:start="139:29" pos:end="139:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:19"><expr pos:start="141:9" pos:end="141:18"><call pos:start="141:9" pos:end="141:18"><name pos:start="141:9" pos:end="141:15">INC_MED</name><argument_list pos:start="141:16" pos:end="141:18">(<argument pos:start="141:17" pos:end="141:17"><expr pos:start="141:17" pos:end="141:17"><literal type="number" pos:start="141:17" pos:end="141:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:19"><expr pos:start="143:9" pos:end="143:18"><call pos:start="143:9" pos:end="143:18"><name pos:start="143:9" pos:end="143:15">DEC_MED</name><argument_list pos:start="143:16" pos:end="143:18">(<argument pos:start="143:17" pos:end="143:17"><expr pos:start="143:17" pos:end="143:17"><literal type="number" pos:start="143:17" pos:end="143:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="145:7" pos:end="157:5">else if <condition pos:start="145:15" pos:end="145:22">(<expr pos:start="145:16" pos:end="145:21"><name pos:start="145:16" pos:end="145:16">t</name> <operator pos:start="145:18" pos:end="145:19">==</operator> <literal type="number" pos:start="145:21" pos:end="145:21">2</literal></expr>)</condition> <block pos:start="145:24" pos:end="157:5">{<block_content pos:start="147:9" pos:end="155:19">

        <expr_stmt pos:start="147:9" pos:end="147:39"><expr pos:start="147:9" pos:end="147:38"><name pos:start="147:9" pos:end="147:12">base</name> <operator pos:start="147:14" pos:end="147:14">=</operator> <call pos:start="147:16" pos:end="147:25"><name pos:start="147:16" pos:end="147:22">GET_MED</name><argument_list pos:start="147:23" pos:end="147:25">(<argument pos:start="147:24" pos:end="147:24"><expr pos:start="147:24" pos:end="147:24"><literal type="number" pos:start="147:24" pos:end="147:24">0</literal></expr></argument>)</argument_list></call> <operator pos:start="147:27" pos:end="147:27">+</operator> <call pos:start="147:29" pos:end="147:38"><name pos:start="147:29" pos:end="147:35">GET_MED</name><argument_list pos:start="147:36" pos:end="147:38">(<argument pos:start="147:37" pos:end="147:37"><expr pos:start="147:37" pos:end="147:37"><literal type="number" pos:start="147:37" pos:end="147:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:30"><expr pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:11">add</name>  <operator pos:start="149:14" pos:end="149:14">=</operator> <call pos:start="149:16" pos:end="149:25"><name pos:start="149:16" pos:end="149:22">GET_MED</name><argument_list pos:start="149:23" pos:end="149:25">(<argument pos:start="149:24" pos:end="149:24"><expr pos:start="149:24" pos:end="149:24"><literal type="number" pos:start="149:24" pos:end="149:24">2</literal></expr></argument>)</argument_list></call> <operator pos:start="149:27" pos:end="149:27">-</operator> <literal type="number" pos:start="149:29" pos:end="149:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:19"><expr pos:start="151:9" pos:end="151:18"><call pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:15">INC_MED</name><argument_list pos:start="151:16" pos:end="151:18">(<argument pos:start="151:17" pos:end="151:17"><expr pos:start="151:17" pos:end="151:17"><literal type="number" pos:start="151:17" pos:end="151:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:19"><expr pos:start="153:9" pos:end="153:18"><call pos:start="153:9" pos:end="153:18"><name pos:start="153:9" pos:end="153:15">INC_MED</name><argument_list pos:start="153:16" pos:end="153:18">(<argument pos:start="153:17" pos:end="153:17"><expr pos:start="153:17" pos:end="153:17"><literal type="number" pos:start="153:17" pos:end="153:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:19"><expr pos:start="155:9" pos:end="155:18"><call pos:start="155:9" pos:end="155:18"><name pos:start="155:9" pos:end="155:15">DEC_MED</name><argument_list pos:start="155:16" pos:end="155:18">(<argument pos:start="155:17" pos:end="155:17"><expr pos:start="155:17" pos:end="155:17"><literal type="number" pos:start="155:17" pos:end="155:17">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="157:7" pos:end="220:13">else <block pos:start="157:12" pos:end="220:13">{<block_content pos:start="159:9" pos:end="220:13">

        <expr_stmt pos:start="159:9" pos:end="159:62"><expr pos:start="159:9" pos:end="159:61"><name pos:start="159:9" pos:end="159:12">base</name> <operator pos:start="159:14" pos:end="159:14">=</operator> <call pos:start="159:16" pos:end="159:25"><name pos:start="159:16" pos:end="159:22">GET_MED</name><argument_list pos:start="159:23" pos:end="159:25">(<argument pos:start="159:24" pos:end="159:24"><expr pos:start="159:24" pos:end="159:24"><literal type="number" pos:start="159:24" pos:end="159:24">0</literal></expr></argument>)</argument_list></call> <operator pos:start="159:27" pos:end="159:27">+</operator> <call pos:start="159:29" pos:end="159:38"><name pos:start="159:29" pos:end="159:35">GET_MED</name><argument_list pos:start="159:36" pos:end="159:38">(<argument pos:start="159:37" pos:end="159:37"><expr pos:start="159:37" pos:end="159:37"><literal type="number" pos:start="159:37" pos:end="159:37">1</literal></expr></argument>)</argument_list></call> <operator pos:start="159:40" pos:end="159:40">+</operator> <call pos:start="159:42" pos:end="159:51"><name pos:start="159:42" pos:end="159:48">GET_MED</name><argument_list pos:start="159:49" pos:end="159:51">(<argument pos:start="159:50" pos:end="159:50"><expr pos:start="159:50" pos:end="159:50"><literal type="number" pos:start="159:50" pos:end="159:50">2</literal></expr></argument>)</argument_list></call> <operator pos:start="159:53" pos:end="159:53">*</operator> <operator pos:start="159:55" pos:end="159:55">(</operator><name pos:start="159:56" pos:end="159:56">t</name> <operator pos:start="159:58" pos:end="159:58">-</operator> <literal type="number" pos:start="159:60" pos:end="159:60">2</literal><operator pos:start="159:61" pos:end="159:61">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:30"><expr pos:start="161:9" pos:end="161:29"><name pos:start="161:9" pos:end="161:11">add</name>  <operator pos:start="161:14" pos:end="161:14">=</operator> <call pos:start="161:16" pos:end="161:25"><name pos:start="161:16" pos:end="161:22">GET_MED</name><argument_list pos:start="161:23" pos:end="161:25">(<argument pos:start="161:24" pos:end="161:24"><expr pos:start="161:24" pos:end="161:24"><literal type="number" pos:start="161:24" pos:end="161:24">2</literal></expr></argument>)</argument_list></call> <operator pos:start="161:27" pos:end="161:27">-</operator> <literal type="number" pos:start="161:29" pos:end="161:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:19"><expr pos:start="163:9" pos:end="163:18"><call pos:start="163:9" pos:end="163:18"><name pos:start="163:9" pos:end="163:15">INC_MED</name><argument_list pos:start="163:16" pos:end="163:18">(<argument pos:start="163:17" pos:end="163:17"><expr pos:start="163:17" pos:end="163:17"><literal type="number" pos:start="163:17" pos:end="163:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:19"><expr pos:start="165:9" pos:end="165:18"><call pos:start="165:9" pos:end="165:18"><name pos:start="165:9" pos:end="165:15">INC_MED</name><argument_list pos:start="165:16" pos:end="165:18">(<argument pos:start="165:17" pos:end="165:17"><expr pos:start="165:17" pos:end="165:17"><literal type="number" pos:start="165:17" pos:end="165:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:19"><expr pos:start="167:9" pos:end="167:18"><call pos:start="167:9" pos:end="167:18"><name pos:start="167:9" pos:end="167:15">INC_MED</name><argument_list pos:start="167:16" pos:end="167:18">(<argument pos:start="167:17" pos:end="167:17"><expr pos:start="167:17" pos:end="167:17"><literal type="number" pos:start="167:17" pos:end="167:17">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <if_stmt pos:start="170:5" pos:end="220:13"><if pos:start="170:5" pos:end="181:5">if <condition pos:start="170:8" pos:end="170:24">(<expr pos:start="170:9" pos:end="170:23"><operator pos:start="170:9" pos:end="170:9">!</operator><name pos:start="170:10" pos:end="170:23"><name pos:start="170:10" pos:end="170:10">c</name><operator pos:start="170:11" pos:end="170:12">-&gt;</operator><name pos:start="170:13" pos:end="170:23">error_limit</name></name></expr>)</condition> <block pos:start="170:26" pos:end="181:5">{<block_content pos:start="176:9" pos:end="178:35">





        <expr_stmt pos:start="176:9" pos:end="176:39"><expr pos:start="176:9" pos:end="176:38"><name pos:start="176:9" pos:end="176:11">ret</name> <operator pos:start="176:13" pos:end="176:13">=</operator> <name pos:start="176:15" pos:end="176:18">base</name> <operator pos:start="176:20" pos:end="176:20">+</operator> <call pos:start="176:22" pos:end="176:38"><name pos:start="176:22" pos:end="176:29">get_tail</name><argument_list pos:start="176:30" pos:end="176:38">(<argument pos:start="176:31" pos:end="176:32"><expr pos:start="176:31" pos:end="176:32"><name pos:start="176:31" pos:end="176:32">gb</name></expr></argument>, <argument pos:start="176:35" pos:end="176:37"><expr pos:start="176:35" pos:end="176:37"><name pos:start="176:35" pos:end="176:37">add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="178:9" pos:end="178:35"><if pos:start="178:9" pos:end="178:35">if <condition pos:start="178:12" pos:end="178:35">(<expr pos:start="178:13" pos:end="178:34"><call pos:start="178:13" pos:end="178:29"><name pos:start="178:13" pos:end="178:25">get_bits_left</name><argument_list pos:start="178:26" pos:end="178:29">(<argument pos:start="178:27" pos:end="178:28"><expr pos:start="178:27" pos:end="178:28"><name pos:start="178:27" pos:end="178:28">gb</name></expr></argument>)</argument_list></call> <operator pos:start="178:31" pos:end="178:32">&lt;=</operator> <literal type="number" pos:start="178:34" pos:end="178:34">0</literal></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt>


    </block_content>}</block></if> <else pos:start="181:7" pos:end="220:13">else <block pos:start="181:12" pos:end="220:13">{<block_content pos:start="183:9" pos:end="220:13">

        <decl_stmt pos:start="183:9" pos:end="183:44"><decl pos:start="183:9" pos:end="183:43"><type pos:start="183:9" pos:end="183:11"><name pos:start="183:9" pos:end="183:11">int</name></type> <name pos:start="183:13" pos:end="183:15">mid</name> <init pos:start="183:17" pos:end="183:43">= <expr pos:start="183:19" pos:end="183:43"><operator pos:start="183:19" pos:end="183:19">(</operator><name pos:start="183:20" pos:end="183:23">base</name> <operator pos:start="183:25" pos:end="183:25">*</operator> <literal type="number" pos:start="183:27" pos:end="183:29">2</literal> <operator pos:start="183:29" pos:end="183:29">+</operator> <name pos:start="183:31" pos:end="183:33">add</name> <operator pos:start="183:35" pos:end="183:35">+</operator> <literal type="number" pos:start="183:37" pos:end="183:37">1</literal><operator pos:start="183:38" pos:end="183:38">)</operator> <operator pos:start="183:40" pos:end="183:41">&gt;&gt;</operator> <literal type="number" pos:start="183:43" pos:end="183:43">1</literal></expr></init></decl>;</decl_stmt>

        <while pos:start="185:9" pos:end="220:13">while <condition pos:start="185:15" pos:end="185:36">(<expr pos:start="185:16" pos:end="185:35"><name pos:start="185:16" pos:end="185:18">add</name> <operator pos:start="185:20" pos:end="185:20">&gt;</operator> <name pos:start="185:22" pos:end="185:35"><name pos:start="185:22" pos:end="185:22">c</name><operator pos:start="185:23" pos:end="185:24">-&gt;</operator><name pos:start="185:25" pos:end="185:35">error_limit</name></name></expr>)</condition> <block pos:start="185:38" pos:end="220:13">{<block_content pos:start="187:13" pos:end="220:13">

            <if_stmt pos:start="187:13" pos:end="198:37"><if pos:start="187:13" pos:end="198:37">if <condition pos:start="187:16" pos:end="187:39">(<expr pos:start="187:17" pos:end="187:38"><call pos:start="187:17" pos:end="187:33"><name pos:start="187:17" pos:end="187:29">get_bits_left</name><argument_list pos:start="187:30" pos:end="187:33">(<argument pos:start="187:31" pos:end="187:32"><expr pos:start="187:31" pos:end="187:32"><name pos:start="187:31" pos:end="187:32">gb</name></expr></argument>)</argument_list></call> <operator pos:start="187:35" pos:end="187:36">&lt;=</operator> <literal type="number" pos:start="187:38" pos:end="187:38">0</literal></expr>)</condition><block type="pseudo" pos:start="190:13" pos:end="198:37"><block_content pos:start="190:13" pos:end="198:37">


            <if_stmt pos:start="190:13" pos:end="198:37"><if pos:start="190:13" pos:end="196:13">if <condition pos:start="190:16" pos:end="190:30">(<expr pos:start="190:17" pos:end="190:29"><call pos:start="190:17" pos:end="190:29"><name pos:start="190:17" pos:end="190:25">get_bits1</name><argument_list pos:start="190:26" pos:end="190:29">(<argument pos:start="190:27" pos:end="190:28"><expr pos:start="190:27" pos:end="190:28"><name pos:start="190:27" pos:end="190:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="190:32" pos:end="196:13">{<block_content pos:start="192:17" pos:end="194:27">

                <expr_stmt pos:start="192:17" pos:end="192:36"><expr pos:start="192:17" pos:end="192:35"><name pos:start="192:17" pos:end="192:19">add</name> <operator pos:start="192:21" pos:end="192:22">-=</operator> <operator pos:start="192:24" pos:end="192:24">(</operator><name pos:start="192:25" pos:end="192:27">mid</name> <operator pos:start="192:29" pos:end="192:29">-</operator> <name pos:start="192:31" pos:end="192:34">base</name><operator pos:start="192:35" pos:end="192:35">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="194:17" pos:end="194:27"><expr pos:start="194:17" pos:end="194:26"><name pos:start="194:17" pos:end="194:20">base</name> <operator pos:start="194:22" pos:end="194:22">=</operator> <name pos:start="194:24" pos:end="194:26">mid</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="196:15" pos:end="198:37">else<block type="pseudo" pos:start="198:17" pos:end="198:37"><block_content pos:start="198:17" pos:end="198:37">

                <expr_stmt pos:start="198:17" pos:end="198:37"><expr pos:start="198:17" pos:end="198:36"><name pos:start="198:17" pos:end="198:19">add</name> <operator pos:start="198:21" pos:end="198:21">=</operator> <name pos:start="198:23" pos:end="198:25">mid</name> <operator pos:start="198:27" pos:end="198:27">-</operator> <name pos:start="198:29" pos:end="198:32">base</name> <operator pos:start="198:34" pos:end="198:34">-</operator> <literal type="number" pos:start="198:36" pos:end="198:36">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="200:13" pos:end="200:44"><expr pos:start="200:13" pos:end="200:43"><name pos:start="200:13" pos:end="200:15">mid</name> <operator pos:start="200:17" pos:end="200:17">=</operator> <operator pos:start="200:19" pos:end="200:19">(</operator><name pos:start="200:20" pos:end="200:23">base</name> <operator pos:start="200:25" pos:end="200:25">*</operator> <literal type="number" pos:start="200:27" pos:end="200:29">2</literal> <operator pos:start="200:29" pos:end="200:29">+</operator> <name pos:start="200:31" pos:end="200:33">add</name> <operator pos:start="200:35" pos:end="200:35">+</operator> <literal type="number" pos:start="200:37" pos:end="200:37">1</literal><operator pos:start="200:38" pos:end="200:38">)</operator> <operator pos:start="200:40" pos:end="200:41">&gt;&gt;</operator> <literal type="number" pos:start="200:43" pos:end="200:43">1</literal></expr>;</expr_stmt>


        <expr_stmt pos:start="203:9" pos:end="203:18"><expr pos:start="203:9" pos:end="203:17"><name pos:start="203:9" pos:end="203:11">ret</name> <operator pos:start="203:13" pos:end="203:13">=</operator> <name pos:start="203:15" pos:end="203:17">mid</name></expr>;</expr_stmt>


    <expr_stmt pos:start="206:5" pos:end="206:25"><expr pos:start="206:5" pos:end="206:24"><name pos:start="206:5" pos:end="206:8">sign</name> <operator pos:start="206:10" pos:end="206:10">=</operator> <call pos:start="206:12" pos:end="206:24"><name pos:start="206:12" pos:end="206:20">get_bits1</name><argument_list pos:start="206:21" pos:end="206:24">(<argument pos:start="206:22" pos:end="206:23"><expr pos:start="206:22" pos:end="206:23"><name pos:start="206:22" pos:end="206:23">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="208:5" pos:end="210:67"><if pos:start="208:5" pos:end="210:67">if <condition pos:start="208:8" pos:end="208:28">(<expr pos:start="208:9" pos:end="208:27"><name pos:start="208:9" pos:end="208:27"><name pos:start="208:9" pos:end="208:11">ctx</name><operator pos:start="208:12" pos:end="208:13">-&gt;</operator><name pos:start="208:14" pos:end="208:27">hybrid_bitrate</name></name></expr>)</condition><block type="pseudo" pos:start="210:9" pos:end="210:67"><block_content pos:start="210:9" pos:end="210:67">

        <expr_stmt pos:start="210:9" pos:end="210:67"><expr pos:start="210:9" pos:end="210:66"><name pos:start="210:9" pos:end="210:21"><name pos:start="210:9" pos:end="210:9">c</name><operator pos:start="210:10" pos:end="210:11">-&gt;</operator><name pos:start="210:12" pos:end="210:21">slow_level</name></name> <operator pos:start="210:23" pos:end="210:24">+=</operator> <call pos:start="210:26" pos:end="210:37"><name pos:start="210:26" pos:end="210:32">wp_log2</name><argument_list pos:start="210:33" pos:end="210:37">(<argument pos:start="210:34" pos:end="210:36"><expr pos:start="210:34" pos:end="210:36"><name pos:start="210:34" pos:end="210:36">ret</name></expr></argument>)</argument_list></call> <operator pos:start="210:39" pos:end="210:39">-</operator> <call pos:start="210:41" pos:end="210:66"><name pos:start="210:41" pos:end="210:51">LEVEL_DECAY</name><argument_list pos:start="210:52" pos:end="210:66">(<argument pos:start="210:53" pos:end="210:65"><expr pos:start="210:53" pos:end="210:65"><name pos:start="210:53" pos:end="210:65"><name pos:start="210:53" pos:end="210:53">c</name><operator pos:start="210:54" pos:end="210:55">-&gt;</operator><name pos:start="210:56" pos:end="210:65">slow_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="212:5" pos:end="212:29">return <expr pos:start="212:12" pos:end="212:28"><ternary pos:start="212:12" pos:end="212:28"><condition pos:start="212:12" pos:end="212:17"><expr pos:start="212:12" pos:end="212:15"><name pos:start="212:12" pos:end="212:15">sign</name></expr> ?</condition><then pos:start="212:19" pos:end="212:22"> <expr pos:start="212:19" pos:end="212:22"><operator pos:start="212:19" pos:end="212:19">~</operator><name pos:start="212:20" pos:end="212:22">ret</name></expr> </then><else pos:start="212:24" pos:end="212:28">: <expr pos:start="212:26" pos:end="212:28"><name pos:start="212:26" pos:end="212:28">ret</name></expr></else></ternary></expr>;</return>



<label pos:start="216:1" pos:end="216:6"><name pos:start="216:1" pos:end="216:5">error</name>:</label>

    <expr_stmt pos:start="218:5" pos:end="218:14"><expr pos:start="218:5" pos:end="218:13"><operator pos:start="218:5" pos:end="218:5">*</operator><name pos:start="218:6" pos:end="218:9">last</name> <operator pos:start="218:11" pos:end="218:11">=</operator> <literal type="number" pos:start="218:13" pos:end="218:13">1</literal></expr>;</expr_stmt>

    <return pos:start="220:5" pos:end="220:13">return <expr pos:start="220:12" pos:end="220:12"><literal type="number" pos:start="220:12" pos:end="220:12">0</literal></expr>;</return></block_content></block></while></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
