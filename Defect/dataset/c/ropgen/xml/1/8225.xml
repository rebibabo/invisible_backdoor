<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8225.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">new_connection</name><parameter_list pos:start="1:27" pos:end="1:54">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:40">server_fd</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:53">is_rtsp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:14">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:22">sockaddr_in</name></name></type> <name pos:start="5:24" pos:end="5:32">from_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">fd</name></decl>, <decl pos:start="7:13" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:15">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">HTTPContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:18">c</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:28"><expr pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:7">len</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <sizeof pos:start="13:11" pos:end="13:27">sizeof<argument_list pos:start="13:17" pos:end="13:27">(<argument pos:start="13:18" pos:end="13:26"><expr pos:start="13:18" pos:end="13:26"><name pos:start="13:18" pos:end="13:26">from_addr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:22"><expr pos:start="15:5" pos:end="17:21"><name pos:start="15:5" pos:end="15:6">fd</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="17:21"><name pos:start="15:10" pos:end="15:15">accept</name><argument_list pos:start="15:16" pos:end="17:21">(<argument pos:start="15:17" pos:end="15:25"><expr pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:25">server_fd</name></expr></argument>, <argument pos:start="15:28" pos:end="15:56"><expr pos:start="15:28" pos:end="15:56"><operator pos:start="15:28" pos:end="15:28">(</operator>struct <name pos:start="15:36" pos:end="15:43">sockaddr</name> <operator pos:start="15:45" pos:end="15:45">*</operator><operator pos:start="15:46" pos:end="15:46">)</operator><operator pos:start="15:47" pos:end="15:47">&amp;</operator><name pos:start="15:48" pos:end="15:56">from_addr</name></expr></argument>, 

                <argument pos:start="17:17" pos:end="17:20"><expr pos:start="17:17" pos:end="17:20"><operator pos:start="17:17" pos:end="17:17">&amp;</operator><name pos:start="17:18" pos:end="17:20">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:15"><if pos:start="19:5" pos:end="21:15">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:10">fd</name> <operator pos:start="19:12" pos:end="19:12">&lt;</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:15"><block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><call pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:9">fcntl</name><argument_list pos:start="23:10" pos:end="23:34">(<argument pos:start="23:11" pos:end="23:12"><expr pos:start="23:11" pos:end="23:12"><name pos:start="23:11" pos:end="23:12">fd</name></expr></argument>, <argument pos:start="23:15" pos:end="23:21"><expr pos:start="23:15" pos:end="23:21"><name pos:start="23:15" pos:end="23:21">F_SETFL</name></expr></argument>, <argument pos:start="23:24" pos:end="23:33"><expr pos:start="23:24" pos:end="23:33"><name pos:start="23:24" pos:end="23:33">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="29:39">/* XXX: should output a warning page when coming

       close to the connection limit */</comment>

    <if_stmt pos:start="31:5" pos:end="33:18"><if pos:start="31:5" pos:end="33:18">if <condition pos:start="31:8" pos:end="31:45">(<expr pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:22">nb_connections</name> <operator pos:start="31:24" pos:end="31:25">&gt;=</operator> <name pos:start="31:27" pos:end="31:44">nb_max_connections</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18">

        <goto pos:start="33:9" pos:end="33:18">goto <name pos:start="33:14" pos:end="33:17">fail</name>;</goto></block_content></block></if></if_stmt>

    

    <comment type="block" pos:start="37:5" pos:end="37:30">/* add a new connection */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:5">c</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <call pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:18">av_mallocz</name><argument_list pos:start="39:19" pos:end="39:39">(<argument pos:start="39:20" pos:end="39:38"><expr pos:start="39:20" pos:end="39:38"><sizeof pos:start="39:20" pos:end="39:38">sizeof<argument_list pos:start="39:26" pos:end="39:38">(<argument pos:start="39:27" pos:end="39:37"><expr pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:37">HTTPContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:18"><if pos:start="41:5" pos:end="43:18">if <condition pos:start="41:8" pos:end="41:11">(<expr pos:start="41:9" pos:end="41:10"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:10">c</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:18"><block_content pos:start="43:9" pos:end="43:18">

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">fail</name>;</goto></block_content></block></if></if_stmt>

    

    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:5">c</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:11">next</name></name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:28">first_http_ctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:18">first_http_ctx</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:22">c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:15"><expr pos:start="51:5" pos:end="51:14"><name pos:start="51:5" pos:end="51:9"><name pos:start="51:5" pos:end="51:5">c</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:9">fd</name></name> <operator pos:start="51:11" pos:end="51:11">=</operator> <name pos:start="51:13" pos:end="51:14">fd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:25"><expr pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:5">c</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:17">poll_entry</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:24">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:29"><expr pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:5">c</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:16">from_addr</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <name pos:start="55:20" pos:end="55:28">from_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:40"><expr pos:start="57:5" pos:end="57:39"><name pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:5">c</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:18">buffer_size</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:39">IOBUFFER_INIT_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:42"><expr pos:start="59:5" pos:end="59:41"><name pos:start="59:5" pos:end="59:13"><name pos:start="59:5" pos:end="59:5">c</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:13">buffer</name></name> <operator pos:start="59:15" pos:end="59:15">=</operator> <call pos:start="59:17" pos:end="59:41"><name pos:start="59:17" pos:end="59:25">av_malloc</name><argument_list pos:start="59:26" pos:end="59:41">(<argument pos:start="59:27" pos:end="59:40"><expr pos:start="59:27" pos:end="59:40"><name pos:start="59:27" pos:end="59:40"><name pos:start="59:27" pos:end="59:27">c</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:40">buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="63:18"><if pos:start="61:5" pos:end="63:18">if <condition pos:start="61:8" pos:end="61:19">(<expr pos:start="61:9" pos:end="61:18"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:18"><name pos:start="61:10" pos:end="61:10">c</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:18">buffer</name></name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:18"><block_content pos:start="63:9" pos:end="63:18">

        <goto pos:start="63:9" pos:end="63:18">goto <name pos:start="63:14" pos:end="63:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:21"><expr pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:18">nb_connections</name><operator pos:start="65:19" pos:end="65:20">++</operator></expr>;</expr_stmt>

    

    <expr_stmt pos:start="69:5" pos:end="69:35"><expr pos:start="69:5" pos:end="69:34"><call pos:start="69:5" pos:end="69:34"><name pos:start="69:5" pos:end="69:22">start_wait_request</name><argument_list pos:start="69:23" pos:end="69:34">(<argument pos:start="69:24" pos:end="69:24"><expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">c</name></expr></argument>, <argument pos:start="69:27" pos:end="69:33"><expr pos:start="69:27" pos:end="69:33"><name pos:start="69:27" pos:end="69:33">is_rtsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="73:5" pos:end="73:11">return;</return>



 <label pos:start="77:2" pos:end="77:6"><name pos:start="77:2" pos:end="77:5">fail</name>:</label>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:10">(<expr pos:start="79:9" pos:end="79:9"><name pos:start="79:9" pos:end="79:9">c</name></expr>)</condition> <block pos:start="79:12" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:19">

        <expr_stmt pos:start="81:9" pos:end="81:27"><expr pos:start="81:9" pos:end="81:26"><call pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:15">av_free</name><argument_list pos:start="81:16" pos:end="81:26">(<argument pos:start="81:17" pos:end="81:25"><expr pos:start="81:17" pos:end="81:25"><name pos:start="81:17" pos:end="81:25"><name pos:start="81:17" pos:end="81:17">c</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:25">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:19"><expr pos:start="83:9" pos:end="83:18"><call pos:start="83:9" pos:end="83:18"><name pos:start="83:9" pos:end="83:15">av_free</name><argument_list pos:start="83:16" pos:end="83:18">(<argument pos:start="83:17" pos:end="83:17"><expr pos:start="83:17" pos:end="83:17"><name pos:start="83:17" pos:end="83:17">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:14"><expr pos:start="87:5" pos:end="87:13"><call pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:9">close</name><argument_list pos:start="87:10" pos:end="87:13">(<argument pos:start="87:11" pos:end="87:12"><expr pos:start="87:11" pos:end="87:12"><name pos:start="87:11" pos:end="87:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
