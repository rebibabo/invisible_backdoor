<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18690.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">ppc_store_sdr1</name><parameter_list pos:start="1:20" pos:end="1:57">(<parameter pos:start="1:21" pos:end="1:36"><decl pos:start="1:21" pos:end="1:36"><type pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:31">CPUPPCState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:50">target_ulong</name></type> <name pos:start="1:52" pos:end="1:56">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <expr_stmt pos:start="5:5" pos:end="5:56"><expr pos:start="5:5" pos:end="5:55"><call pos:start="5:5" pos:end="5:55"><name pos:start="5:5" pos:end="5:11">LOG_MMU</name><argument_list pos:start="5:12" pos:end="5:55">(<argument pos:start="5:13" pos:end="5:37"><expr pos:start="5:13" pos:end="5:37"><literal type="string" pos:start="5:13" pos:end="5:18">"%s: "</literal> <name pos:start="5:20" pos:end="5:32">TARGET_FMT_lx</name> <literal type="string" pos:start="5:34" pos:end="5:37">"\n"</literal></expr></argument>, <argument pos:start="5:40" pos:end="5:47"><expr pos:start="5:40" pos:end="5:47"><name pos:start="5:40" pos:end="5:47">__func__</name></expr></argument>, <argument pos:start="5:50" pos:end="5:54"><expr pos:start="5:50" pos:end="5:54"><name pos:start="5:50" pos:end="5:54">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="7:5" pos:end="49:5"><if pos:start="7:5" pos:end="49:5">if <condition pos:start="7:8" pos:end="7:36">(<expr pos:start="7:9" pos:end="7:35"><name pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:11">env</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:16">spr</name><index pos:start="7:17" pos:end="7:26">[<expr pos:start="7:18" pos:end="7:25"><name pos:start="7:18" pos:end="7:25">SPR_SDR1</name></expr>]</index></name> <operator pos:start="7:28" pos:end="7:29">!=</operator> <name pos:start="7:31" pos:end="7:35">value</name></expr>)</condition> <block pos:start="7:38" pos:end="49:5">{<block_content pos:start="9:9" pos:end="47:26">

        <expr_stmt pos:start="9:9" pos:end="12:0"><expr pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:11">env</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:16">spr</name><index pos:start="9:17" pos:end="9:26">[<expr pos:start="9:18" pos:end="9:25"><name pos:start="9:18" pos:end="9:25">SPR_SDR1</name></expr>]</index></name> <operator pos:start="9:28" pos:end="9:28">=</operator> <name pos:start="9:30" pos:end="9:34">value</name></expr>;</expr_stmt>

<cpp:if pos:start="11:1" pos:end="11:25">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:25"><call pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:11">defined</name><argument_list pos:start="11:12" pos:end="11:25">(<argument pos:start="11:13" pos:end="11:24"><expr pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="13:9" pos:end="45:9"><if pos:start="13:9" pos:end="33:9">if <condition pos:start="13:12" pos:end="13:44">(<expr pos:start="13:13" pos:end="13:43"><name pos:start="13:13" pos:end="13:26"><name pos:start="13:13" pos:end="13:15">env</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:26">mmu_model</name></name> <operator pos:start="13:28" pos:end="13:28">&amp;</operator> <name pos:start="13:30" pos:end="13:43">POWERPC_MMU_64</name></expr>)</condition> <block pos:start="13:46" pos:end="33:9">{<block_content pos:start="15:13" pos:end="31:52">

            <decl_stmt pos:start="15:13" pos:end="15:60"><decl pos:start="15:13" pos:end="15:59"><type pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:24">target_ulong</name></type> <name pos:start="15:26" pos:end="15:33">htabsize</name> <init pos:start="15:35" pos:end="15:59">= <expr pos:start="15:37" pos:end="15:59"><name pos:start="15:37" pos:end="15:41">value</name> <operator pos:start="15:43" pos:end="15:43">&amp;</operator> <name pos:start="15:45" pos:end="15:59">SDR_64_HTABSIZE</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="19:13" pos:end="27:13"><if pos:start="19:13" pos:end="27:13">if <condition pos:start="19:16" pos:end="19:30">(<expr pos:start="19:17" pos:end="19:29"><name pos:start="19:17" pos:end="19:24">htabsize</name> <operator pos:start="19:26" pos:end="19:26">&gt;</operator> <literal type="number" pos:start="19:28" pos:end="19:29">28</literal></expr>)</condition> <block pos:start="19:32" pos:end="27:13">{<block_content pos:start="21:17" pos:end="25:30">

                <expr_stmt pos:start="21:17" pos:end="23:55"><expr pos:start="21:17" pos:end="23:54"><call pos:start="21:17" pos:end="23:54"><name pos:start="21:17" pos:end="21:23">fprintf</name><argument_list pos:start="21:24" pos:end="23:54">(<argument pos:start="21:25" pos:end="21:30"><expr pos:start="21:25" pos:end="21:30"><name pos:start="21:25" pos:end="21:30">stderr</name></expr></argument>, <argument pos:start="21:33" pos:end="23:43"><expr pos:start="21:33" pos:end="23:43"><literal type="string" pos:start="21:33" pos:end="21:53">"Invalid HTABSIZE 0x"</literal> <name pos:start="21:55" pos:end="21:67">TARGET_FMT_lx</name>

                        <literal type="string" pos:start="23:25" pos:end="23:43">" stored in SDR1\n"</literal></expr></argument>, <argument pos:start="23:46" pos:end="23:53"><expr pos:start="23:46" pos:end="23:53"><name pos:start="23:46" pos:end="23:53">htabsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="25:17" pos:end="25:30"><expr pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:24">htabsize</name> <operator pos:start="25:26" pos:end="25:26">=</operator> <literal type="number" pos:start="25:28" pos:end="25:29">28</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:59"><expr pos:start="29:13" pos:end="29:58"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:15">env</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:26">htab_mask</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <operator pos:start="29:30" pos:end="29:30">(</operator><literal type="number" pos:start="29:31" pos:end="29:34">1ULL</literal> <operator pos:start="29:36" pos:end="29:37">&lt;&lt;</operator> <operator pos:start="29:39" pos:end="29:39">(</operator><name pos:start="29:40" pos:end="29:47">htabsize</name> <operator pos:start="29:49" pos:end="29:49">+</operator> <literal type="number" pos:start="29:51" pos:end="29:52">18</literal><operator pos:start="29:53" pos:end="29:53">)</operator><operator pos:start="29:54" pos:end="29:54">)</operator> <operator pos:start="29:56" pos:end="29:56">-</operator> <literal type="number" pos:start="29:58" pos:end="29:58">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:52"><expr pos:start="31:13" pos:end="31:51"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:15">env</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:26">htab_base</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <name pos:start="31:30" pos:end="31:34">value</name> <operator pos:start="31:36" pos:end="31:36">&amp;</operator> <name pos:start="31:38" pos:end="31:51">SDR_64_HTABORG</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="45:9">else

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="35:8" pos:end="35:34">/* defined(TARGET_PPC64) */</comment>

        <block pos:start="37:9" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:52">

            <comment type="block" pos:start="39:13" pos:end="39:63">/* FIXME: Should check for valid HTABMASK values */</comment>

            <expr_stmt pos:start="41:13" pos:end="41:72"><expr pos:start="41:13" pos:end="41:71"><name pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:15">env</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:26">htab_mask</name></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <operator pos:start="41:30" pos:end="41:30">(</operator><operator pos:start="41:31" pos:end="41:31">(</operator><name pos:start="41:32" pos:end="41:36">value</name> <operator pos:start="41:38" pos:end="41:38">&amp;</operator> <name pos:start="41:40" pos:end="41:54">SDR_32_HTABMASK</name><operator pos:start="41:55" pos:end="41:55">)</operator> <operator pos:start="41:57" pos:end="41:58">&lt;&lt;</operator> <literal type="number" pos:start="41:60" pos:end="41:61">16</literal><operator pos:start="41:62" pos:end="41:62">)</operator> <operator pos:start="41:64" pos:end="41:64">|</operator> <literal type="number" pos:start="41:66" pos:end="41:71">0xFFFF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:52"><expr pos:start="43:13" pos:end="43:51"><name pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:15">env</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:26">htab_base</name></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <name pos:start="43:30" pos:end="43:34">value</name> <operator pos:start="43:36" pos:end="43:36">&amp;</operator> <name pos:start="43:38" pos:end="43:51">SDR_32_HTABORG</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><call pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:17">tlb_flush</name><argument_list pos:start="47:18" pos:end="47:25">(<argument pos:start="47:19" pos:end="47:21"><expr pos:start="47:19" pos:end="47:21"><name pos:start="47:19" pos:end="47:21">env</name></expr></argument>, <argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><literal type="number" pos:start="47:24" pos:end="47:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
