<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8810.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mov_read_extradata</name><parameter_list pos:start="1:30" pos:end="1:75">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:40">MOVContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">c</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><name pos:start="1:46" pos:end="1:56">AVIOContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">pb</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:69">MOVAtom</name></type> <name pos:start="1:71" pos:end="1:74">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">err</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:30">(<expr pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:9">c</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:13">fc</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:25">nb_streams</name></name> <operator pos:start="15:27" pos:end="15:27">&lt;</operator> <literal type="number" pos:start="15:29" pos:end="15:29">1</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17"> <comment type="line" pos:start="15:32" pos:end="15:60">// will happen with jp2 files</comment>

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:6">st</name><operator pos:start="19:7" pos:end="19:7">=</operator> <name pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:9">c</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:13">fc</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:22">streams</name><index pos:start="19:23" pos:end="19:43">[<expr pos:start="19:24" pos:end="19:42"><name pos:start="19:24" pos:end="19:40"><name pos:start="19:24" pos:end="19:24">c</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:28">fc</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:40">nb_streams</name></name><operator pos:start="19:41" pos:end="19:41">-</operator><literal type="number" pos:start="19:42" pos:end="19:42">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:93"><expr pos:start="21:5" pos:end="21:92"><name pos:start="21:5" pos:end="21:8">size</name><operator pos:start="21:9" pos:end="21:9">=</operator> <operator pos:start="21:11" pos:end="21:11">(</operator><name pos:start="21:12" pos:end="21:19">uint64_t</name><operator pos:start="21:20" pos:end="21:20">)</operator><name pos:start="21:21" pos:end="21:45"><name pos:start="21:21" pos:end="21:22">st</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:29">codec</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:45">extradata_size</name></name> <operator pos:start="21:47" pos:end="21:47">+</operator> <name pos:start="21:49" pos:end="21:57"><name pos:start="21:49" pos:end="21:52">atom</name><operator pos:start="21:53" pos:end="21:53">.</operator><name pos:start="21:54" pos:end="21:57">size</name></name> <operator pos:start="21:59" pos:end="21:59">+</operator> <literal type="number" pos:start="21:61" pos:end="21:63">8</literal> <operator pos:start="21:63" pos:end="21:63">+</operator> <name pos:start="21:65" pos:end="21:92">FF_INPUT_BUFFER_PADDING_SIZE</name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:35"><if pos:start="23:5" pos:end="25:35">if <condition pos:start="23:8" pos:end="23:56">(<expr pos:start="23:9" pos:end="23:55"><name pos:start="23:9" pos:end="23:12">size</name> <operator pos:start="23:14" pos:end="23:14">&gt;</operator> <name pos:start="23:16" pos:end="23:22">INT_MAX</name> <operator pos:start="23:24" pos:end="23:25">||</operator> <operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:35">uint64_t</name><operator pos:start="23:36" pos:end="23:36">)</operator><name pos:start="23:37" pos:end="23:45"><name pos:start="23:37" pos:end="23:40">atom</name><operator pos:start="23:41" pos:end="23:41">.</operator><name pos:start="23:42" pos:end="23:45">size</name></name> <operator pos:start="23:47" pos:end="23:47">&gt;</operator> <name pos:start="23:49" pos:end="23:55">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:35"><block_content pos:start="25:9" pos:end="25:35">

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:61">(<expr pos:start="27:9" pos:end="27:60"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:12">err</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:55"><name pos:start="27:16" pos:end="27:26">av_reallocp</name><argument_list pos:start="27:27" pos:end="27:55">(<argument pos:start="27:28" pos:end="27:48"><expr pos:start="27:28" pos:end="27:48"><operator pos:start="27:28" pos:end="27:28">&amp;</operator><name pos:start="27:29" pos:end="27:48"><name pos:start="27:29" pos:end="27:30">st</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:37">codec</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:48">extradata</name></name></expr></argument>, <argument pos:start="27:51" pos:end="27:54"><expr pos:start="27:51" pos:end="27:54"><name pos:start="27:51" pos:end="27:54">size</name></expr></argument>)</argument_list></call><operator pos:start="27:56" pos:end="27:56">)</operator> <operator pos:start="27:58" pos:end="27:58">&lt;</operator> <literal type="number" pos:start="27:60" pos:end="27:60">0</literal></expr>)</condition> <block pos:start="27:63" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:19">

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:10">st</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:17">codec</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:33">extradata_size</name></name> <operator pos:start="29:35" pos:end="29:35">=</operator> <literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">err</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:59"><expr pos:start="35:5" pos:end="35:58"><name pos:start="35:5" pos:end="35:7">buf</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <name pos:start="35:11" pos:end="35:30"><name pos:start="35:11" pos:end="35:12">st</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:19">codec</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:30">extradata</name></name> <operator pos:start="35:32" pos:end="35:32">+</operator> <name pos:start="35:34" pos:end="35:58"><name pos:start="35:34" pos:end="35:35">st</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:42">codec</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:58">extradata_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:67"><expr pos:start="37:5" pos:end="37:66"><name pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:6">st</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:13">codec</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:29">extradata_size</name></name><operator pos:start="37:30" pos:end="37:30">=</operator> <name pos:start="37:32" pos:end="37:35">size</name> <operator pos:start="37:37" pos:end="37:37">-</operator> <name pos:start="37:39" pos:end="37:66">FF_INPUT_BUFFER_PADDING_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:43"><expr pos:start="39:5" pos:end="39:42"><call pos:start="39:5" pos:end="39:42"><name pos:start="39:5" pos:end="39:11">AV_WB32</name><argument_list pos:start="39:12" pos:end="39:42">(       <argument pos:start="39:20" pos:end="39:22"><expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">buf</name></expr></argument>    , <argument pos:start="39:29" pos:end="39:41"><expr pos:start="39:29" pos:end="39:41"><name pos:start="39:29" pos:end="39:37"><name pos:start="39:29" pos:end="39:32">atom</name><operator pos:start="39:33" pos:end="39:33">.</operator><name pos:start="39:34" pos:end="39:37">size</name></name> <operator pos:start="39:39" pos:end="39:39">+</operator> <literal type="number" pos:start="39:41" pos:end="39:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:39"><expr pos:start="41:5" pos:end="41:38"><call pos:start="41:5" pos:end="41:38"><name pos:start="41:5" pos:end="41:11">AV_WL32</name><argument_list pos:start="41:12" pos:end="41:38">(       <argument pos:start="41:20" pos:end="41:26"><expr pos:start="41:20" pos:end="41:26"><name pos:start="41:20" pos:end="41:22">buf</name> <operator pos:start="41:24" pos:end="41:24">+</operator> <literal type="number" pos:start="41:26" pos:end="41:26">4</literal></expr></argument>, <argument pos:start="41:29" pos:end="41:37"><expr pos:start="41:29" pos:end="41:37"><name pos:start="41:29" pos:end="41:37"><name pos:start="41:29" pos:end="41:32">atom</name><operator pos:start="41:33" pos:end="41:33">.</operator><name pos:start="41:34" pos:end="41:37">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:38"><expr pos:start="43:5" pos:end="43:37"><call pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:13">avio_read</name><argument_list pos:start="43:14" pos:end="43:37">(<argument pos:start="43:15" pos:end="43:16"><expr pos:start="43:15" pos:end="43:16"><name pos:start="43:15" pos:end="43:16">pb</name></expr></argument>, <argument pos:start="43:19" pos:end="43:25"><expr pos:start="43:19" pos:end="43:25"><name pos:start="43:19" pos:end="43:21">buf</name> <operator pos:start="43:23" pos:end="43:23">+</operator> <literal type="number" pos:start="43:25" pos:end="43:25">8</literal></expr></argument>, <argument pos:start="43:28" pos:end="43:36"><expr pos:start="43:28" pos:end="43:36"><name pos:start="43:28" pos:end="43:36"><name pos:start="43:28" pos:end="43:31">atom</name><operator pos:start="43:32" pos:end="43:32">.</operator><name pos:start="43:33" pos:end="43:36">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
