<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26824.c" pos:tabs="8"><function pos:start="1:1" pos:end="261:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">aac_encode_frame</name><parameter_list pos:start="1:28" pos:end="3:69">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:35">uint8_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:42">frame</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:56"><decl pos:start="3:45" pos:end="3:56"><type pos:start="3:45" pos:end="3:56"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:56">buf_size</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:68"><decl pos:start="3:59" pos:end="3:68"><type pos:start="3:59" pos:end="3:68"><name pos:start="3:59" pos:end="3:62">void</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:68">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="261:1">{<block_content pos:start="7:5" pos:end="259:37">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AACEncContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:39">= <expr pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:28">avctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int16_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:20">samples</name> <init pos:start="9:22" pos:end="9:33">= <expr pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:24">s</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:33">samples</name></name></expr></init></decl>, <decl pos:start="9:36" pos:end="9:44"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:36" pos:end="9:36">*</modifier></type><name pos:start="9:37" pos:end="9:44">samples2</name></decl>, <decl pos:start="9:47" pos:end="9:49"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:47" pos:end="9:47">*</modifier></type><name pos:start="9:48" pos:end="9:49">la</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">ChannelElement</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">cpe</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">j</name></decl>, <decl pos:start="13:15" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:19">chans</name></decl>, <decl pos:start="13:22" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:24">tag</name></decl>, <decl pos:start="13:27" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:34">start_ch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:66"><decl pos:start="15:5" pos:end="15:65"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:27">chan_map</name> <init pos:start="15:29" pos:end="15:65">= <expr pos:start="15:31" pos:end="15:65"><name pos:start="15:31" pos:end="15:65"><name pos:start="15:31" pos:end="15:46">aac_chan_configs</name><index pos:start="15:47" pos:end="15:65">[<expr pos:start="15:48" pos:end="15:64"><name pos:start="15:48" pos:end="15:62"><name pos:start="15:48" pos:end="15:52">avctx</name><operator pos:start="15:53" pos:end="15:54">-&gt;</operator><name pos:start="15:55" pos:end="15:62">channels</name></name><operator pos:start="15:63" pos:end="15:63">-</operator><literal type="number" pos:start="15:64" pos:end="15:64">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:23">chan_el_counter</name><index pos:start="17:24" pos:end="17:26">[<expr pos:start="17:25" pos:end="17:25"><literal type="number" pos:start="17:25" pos:end="17:25">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:45"><decl pos:start="19:5" pos:end="19:44"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:19">FFPsyWindowInfo</name></type> <name pos:start="19:21" pos:end="19:44"><name pos:start="19:21" pos:end="19:27">windows</name><index pos:start="19:28" pos:end="19:44">[<expr pos:start="19:29" pos:end="19:43"><name pos:start="19:29" pos:end="19:43"><name pos:start="19:29" pos:end="19:33">avctx</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:43">channels</name></name></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:17"><if pos:start="23:5" pos:end="25:17">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:21">last_frame</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:17"><block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="57:5"><if pos:start="27:5" pos:end="57:5">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><name pos:start="27:9" pos:end="27:12">data</name></expr>)</condition> <block pos:start="27:15" pos:end="57:5">{<block_content pos:start="29:9" pos:end="55:9">

        <if_stmt pos:start="29:9" pos:end="55:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:22">(<expr pos:start="29:13" pos:end="29:21"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:21"><name pos:start="29:14" pos:end="29:14">s</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:21">psypp</name></name></expr>)</condition> <block pos:start="29:24" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:67">

            <expr_stmt pos:start="31:13" pos:end="33:67"><expr pos:start="31:13" pos:end="33:66"><call pos:start="31:13" pos:end="33:66"><name pos:start="31:13" pos:end="31:18">memcpy</name><argument_list pos:start="31:19" pos:end="33:66">(<argument pos:start="31:20" pos:end="31:54"><expr pos:start="31:20" pos:end="31:54"><name pos:start="31:20" pos:end="31:29"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:29">samples</name></name> <operator pos:start="31:31" pos:end="31:31">+</operator> <literal type="number" pos:start="31:33" pos:end="31:36">1024</literal> <operator pos:start="31:38" pos:end="31:38">*</operator> <name pos:start="31:40" pos:end="31:54"><name pos:start="31:40" pos:end="31:44">avctx</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:54">channels</name></name></expr></argument>, <argument pos:start="31:57" pos:end="31:60"><expr pos:start="31:57" pos:end="31:60"><name pos:start="31:57" pos:end="31:60">data</name></expr></argument>,

                   <argument pos:start="33:20" pos:end="33:65"><expr pos:start="33:20" pos:end="33:65"><literal type="number" pos:start="33:20" pos:end="33:23">1024</literal> <operator pos:start="33:25" pos:end="33:25">*</operator> <name pos:start="33:27" pos:end="33:41"><name pos:start="33:27" pos:end="33:31">avctx</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:41">channels</name></name> <operator pos:start="33:43" pos:end="33:43">*</operator> <sizeof pos:start="33:45" pos:end="33:65">sizeof<argument_list pos:start="33:51" pos:end="33:65">(<argument pos:start="33:52" pos:end="33:64"><expr pos:start="33:52" pos:end="33:64"><name pos:start="33:52" pos:end="33:64"><name pos:start="33:52" pos:end="33:52">s</name><operator pos:start="33:53" pos:end="33:54">-&gt;</operator><name pos:start="33:55" pos:end="33:61">samples</name><index pos:start="33:62" pos:end="33:64">[<expr pos:start="33:63" pos:end="33:63"><literal type="number" pos:start="33:63" pos:end="33:63">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="55:9">else <block pos:start="35:16" pos:end="55:9">{<block_content pos:start="37:13" pos:end="53:13">

            <expr_stmt pos:start="37:13" pos:end="37:25"><expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:20">start_ch</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:59"><expr pos:start="39:13" pos:end="39:58"><name pos:start="39:13" pos:end="39:20">samples2</name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:33"><name pos:start="39:24" pos:end="39:24">s</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:33">samples</name></name> <operator pos:start="39:35" pos:end="39:35">+</operator> <literal type="number" pos:start="39:37" pos:end="39:40">1024</literal> <operator pos:start="39:42" pos:end="39:42">*</operator> <name pos:start="39:44" pos:end="39:58"><name pos:start="39:44" pos:end="39:48">avctx</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:58">channels</name></name></expr>;</expr_stmt>

            <for pos:start="41:13" pos:end="53:13">for <control pos:start="41:17" pos:end="41:45">(<init pos:start="41:18" pos:end="41:23"><expr pos:start="41:18" pos:end="41:22"><name pos:start="41:18" pos:end="41:18">i</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">0</literal></expr>;</init> <condition pos:start="41:25" pos:end="41:40"><expr pos:start="41:25" pos:end="41:39"><name pos:start="41:25" pos:end="41:25">i</name> <operator pos:start="41:27" pos:end="41:27">&lt;</operator> <name pos:start="41:29" pos:end="41:39"><name pos:start="41:29" pos:end="41:36">chan_map</name><index pos:start="41:37" pos:end="41:39">[<expr pos:start="41:38" pos:end="41:38"><literal type="number" pos:start="41:38" pos:end="41:38">0</literal></expr>]</index></name></expr>;</condition> <incr pos:start="41:42" pos:end="41:44"><expr pos:start="41:42" pos:end="41:44"><name pos:start="41:42" pos:end="41:42">i</name><operator pos:start="41:43" pos:end="41:44">++</operator></expr></incr>)</control> <block pos:start="41:47" pos:end="53:13">{<block_content pos:start="43:17" pos:end="51:34">

                <expr_stmt pos:start="43:17" pos:end="43:36"><expr pos:start="43:17" pos:end="43:35"><name pos:start="43:17" pos:end="43:19">tag</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:35"><name pos:start="43:23" pos:end="43:30">chan_map</name><index pos:start="43:31" pos:end="43:35">[<expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:32">i</name><operator pos:start="43:33" pos:end="43:33">+</operator><literal type="number" pos:start="43:34" pos:end="43:34">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:48"><expr pos:start="45:17" pos:end="45:47"><name pos:start="45:17" pos:end="45:21">chans</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <ternary pos:start="45:25" pos:end="45:47"><condition pos:start="45:25" pos:end="45:41"><expr pos:start="45:25" pos:end="45:39"><name pos:start="45:25" pos:end="45:27">tag</name> <operator pos:start="45:29" pos:end="45:30">==</operator> <name pos:start="45:32" pos:end="45:39">TYPE_CPE</name></expr> ?</condition><then pos:start="45:43" pos:end="45:43"> <expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">2</literal></expr> </then><else pos:start="45:45" pos:end="45:47">: <expr pos:start="45:47" pos:end="45:47"><literal type="number" pos:start="45:47" pos:end="45:47">1</literal></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="49:72"><expr pos:start="47:17" pos:end="49:71"><call pos:start="47:17" pos:end="49:71"><name pos:start="47:17" pos:end="47:33">ff_psy_preprocess</name><argument_list pos:start="47:34" pos:end="49:71">(<argument pos:start="47:35" pos:end="47:42"><expr pos:start="47:35" pos:end="47:42"><name pos:start="47:35" pos:end="47:42"><name pos:start="47:35" pos:end="47:35">s</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:42">psypp</name></name></expr></argument>, <argument pos:start="47:45" pos:end="47:70"><expr pos:start="47:45" pos:end="47:70"><operator pos:start="47:45" pos:end="47:45">(</operator><name pos:start="47:46" pos:end="47:53">uint16_t</name><operator pos:start="47:54" pos:end="47:54">*</operator><operator pos:start="47:55" pos:end="47:55">)</operator><name pos:start="47:56" pos:end="47:59">data</name> <operator pos:start="47:61" pos:end="47:61">+</operator> <name pos:start="47:63" pos:end="47:70">start_ch</name></expr></argument>,

                                  <argument pos:start="49:35" pos:end="49:53"><expr pos:start="49:35" pos:end="49:53"><name pos:start="49:35" pos:end="49:42">samples2</name> <operator pos:start="49:44" pos:end="49:44">+</operator> <name pos:start="49:46" pos:end="49:53">start_ch</name></expr></argument>, <argument pos:start="49:56" pos:end="49:63"><expr pos:start="49:56" pos:end="49:63"><name pos:start="49:56" pos:end="49:63">start_ch</name></expr></argument>, <argument pos:start="49:66" pos:end="49:70"><expr pos:start="49:66" pos:end="49:70"><name pos:start="49:66" pos:end="49:70">chans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:34"><expr pos:start="51:17" pos:end="51:33"><name pos:start="51:17" pos:end="51:24">start_ch</name> <operator pos:start="51:26" pos:end="51:27">+=</operator> <name pos:start="51:29" pos:end="51:33">chans</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:29">(<expr pos:start="59:9" pos:end="59:28"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:28"><name pos:start="59:10" pos:end="59:14">avctx</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:28">frame_number</name></name></expr>)</condition> <block pos:start="59:31" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:17">

        <expr_stmt pos:start="61:9" pos:end="63:63"><expr pos:start="61:9" pos:end="63:62"><call pos:start="61:9" pos:end="63:62"><name pos:start="61:9" pos:end="61:14">memcpy</name><argument_list pos:start="61:15" pos:end="63:62">(<argument pos:start="61:16" pos:end="61:25"><expr pos:start="61:16" pos:end="61:25"><name pos:start="61:16" pos:end="61:25"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:25">samples</name></name></expr></argument>, <argument pos:start="61:28" pos:end="61:62"><expr pos:start="61:28" pos:end="61:62"><name pos:start="61:28" pos:end="61:37"><name pos:start="61:28" pos:end="61:28">s</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:37">samples</name></name> <operator pos:start="61:39" pos:end="61:39">+</operator> <literal type="number" pos:start="61:41" pos:end="61:44">1024</literal> <operator pos:start="61:46" pos:end="61:46">*</operator> <name pos:start="61:48" pos:end="61:62"><name pos:start="61:48" pos:end="61:52">avctx</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:62">channels</name></name></expr></argument>,

               <argument pos:start="63:16" pos:end="63:61"><expr pos:start="63:16" pos:end="63:61"><literal type="number" pos:start="63:16" pos:end="63:19">1024</literal> <operator pos:start="63:21" pos:end="63:21">*</operator> <name pos:start="63:23" pos:end="63:37"><name pos:start="63:23" pos:end="63:27">avctx</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:37">channels</name></name> <operator pos:start="63:39" pos:end="63:39">*</operator> <sizeof pos:start="63:41" pos:end="63:61">sizeof<argument_list pos:start="63:47" pos:end="63:61">(<argument pos:start="63:48" pos:end="63:60"><expr pos:start="63:48" pos:end="63:60"><name pos:start="63:48" pos:end="63:60"><name pos:start="63:48" pos:end="63:48">s</name><operator pos:start="63:49" pos:end="63:50">-&gt;</operator><name pos:start="63:51" pos:end="63:57">samples</name><index pos:start="63:58" pos:end="63:60">[<expr pos:start="63:59" pos:end="63:59"><literal type="number" pos:start="63:59" pos:end="63:59">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:17">return <expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:17"><expr pos:start="71:5" pos:end="71:16"><name pos:start="71:5" pos:end="71:12">start_ch</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <literal type="number" pos:start="71:16" pos:end="71:16">0</literal></expr>;</expr_stmt>

    <for pos:start="73:5" pos:end="127:5">for <control pos:start="73:9" pos:end="73:37">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:32"><expr pos:start="73:17" pos:end="73:31"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <name pos:start="73:21" pos:end="73:31"><name pos:start="73:21" pos:end="73:28">chan_map</name><index pos:start="73:29" pos:end="73:31">[<expr pos:start="73:30" pos:end="73:30"><literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr>]</index></name></expr>;</condition> <incr pos:start="73:34" pos:end="73:36"><expr pos:start="73:34" pos:end="73:36"><name pos:start="73:34" pos:end="73:34">i</name><operator pos:start="73:35" pos:end="73:36">++</operator></expr></incr>)</control> <block pos:start="73:39" pos:end="127:5">{<block_content pos:start="75:9" pos:end="125:26">

        <decl_stmt pos:start="75:9" pos:end="75:49"><decl pos:start="75:9" pos:end="75:48"><type pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:23">FFPsyWindowInfo</name><modifier pos:start="75:24" pos:end="75:24">*</modifier></type> <name pos:start="75:26" pos:end="75:27">wi</name> <init pos:start="75:29" pos:end="75:48">= <expr pos:start="75:31" pos:end="75:48"><name pos:start="75:31" pos:end="75:37">windows</name> <operator pos:start="75:39" pos:end="75:39">+</operator> <name pos:start="75:41" pos:end="75:48">start_ch</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:33"><expr pos:start="77:9" pos:end="77:32"><name pos:start="77:9" pos:end="77:11">tag</name>      <operator pos:start="77:18" pos:end="77:18">=</operator> <name pos:start="77:20" pos:end="77:32"><name pos:start="77:20" pos:end="77:27">chan_map</name><index pos:start="77:28" pos:end="77:32">[<expr pos:start="77:29" pos:end="77:31"><name pos:start="77:29" pos:end="77:29">i</name><operator pos:start="77:30" pos:end="77:30">+</operator><literal type="number" pos:start="77:31" pos:end="77:31">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:43"><expr pos:start="79:9" pos:end="79:42"><name pos:start="79:9" pos:end="79:13">chans</name>    <operator pos:start="79:18" pos:end="79:18">=</operator> <ternary pos:start="79:20" pos:end="79:42"><condition pos:start="79:20" pos:end="79:36"><expr pos:start="79:20" pos:end="79:34"><name pos:start="79:20" pos:end="79:22">tag</name> <operator pos:start="79:24" pos:end="79:25">==</operator> <name pos:start="79:27" pos:end="79:34">TYPE_CPE</name></expr> ?</condition><then pos:start="79:38" pos:end="79:38"> <expr pos:start="79:38" pos:end="79:38"><literal type="number" pos:start="79:38" pos:end="79:38">2</literal></expr> </then><else pos:start="79:40" pos:end="79:42">: <expr pos:start="79:42" pos:end="79:42"><literal type="number" pos:start="79:42" pos:end="79:42">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:11">cpe</name>      <operator pos:start="81:18" pos:end="81:18">=</operator> <operator pos:start="81:20" pos:end="81:20">&amp;</operator><name pos:start="81:21" pos:end="81:29"><name pos:start="81:21" pos:end="81:21">s</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:26">cpe</name><index pos:start="81:27" pos:end="81:29">[<expr pos:start="81:28" pos:end="81:28"><name pos:start="81:28" pos:end="81:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:38"><expr pos:start="83:9" pos:end="83:37"><name pos:start="83:9" pos:end="83:16">samples2</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:26">samples</name> <operator pos:start="83:28" pos:end="83:28">+</operator> <name pos:start="83:30" pos:end="83:37">start_ch</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:64"><expr pos:start="85:9" pos:end="85:63"><name pos:start="85:9" pos:end="85:10">la</name>       <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:27">samples2</name> <operator pos:start="85:29" pos:end="85:29">+</operator> <literal type="number" pos:start="85:31" pos:end="85:34">1024</literal> <operator pos:start="85:36" pos:end="85:36">*</operator> <name pos:start="85:38" pos:end="85:52"><name pos:start="85:38" pos:end="85:42">avctx</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:52">channels</name></name> <operator pos:start="85:54" pos:end="85:54">+</operator> <name pos:start="85:56" pos:end="85:63">start_ch</name></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="89:22"><if pos:start="87:9" pos:end="89:22">if <condition pos:start="87:12" pos:end="87:18">(<expr pos:start="87:13" pos:end="87:17"><operator pos:start="87:13" pos:end="87:13">!</operator><name pos:start="87:14" pos:end="87:17">data</name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:22"><block_content pos:start="89:13" pos:end="89:22">

            <expr_stmt pos:start="89:13" pos:end="89:22"><expr pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:14">la</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:21">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <for pos:start="91:9" pos:end="123:9">for <control pos:start="91:13" pos:end="91:35">(<init pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">j</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>;</init> <condition pos:start="91:21" pos:end="91:30"><expr pos:start="91:21" pos:end="91:29"><name pos:start="91:21" pos:end="91:21">j</name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <name pos:start="91:25" pos:end="91:29">chans</name></expr>;</condition> <incr pos:start="91:32" pos:end="91:34"><expr pos:start="91:32" pos:end="91:34"><name pos:start="91:32" pos:end="91:32">j</name><operator pos:start="91:33" pos:end="91:34">++</operator></expr></incr>)</control> <block pos:start="91:37" pos:end="123:9">{<block_content pos:start="93:13" pos:end="121:70">

            <decl_stmt pos:start="93:13" pos:end="93:59"><decl pos:start="93:13" pos:end="93:58"><type pos:start="93:13" pos:end="93:37"><name pos:start="93:13" pos:end="93:35">IndividualChannelStream</name> <modifier pos:start="93:37" pos:end="93:37">*</modifier></type><name pos:start="93:38" pos:end="93:40">ics</name> <init pos:start="93:42" pos:end="93:58">= <expr pos:start="93:44" pos:end="93:58"><operator pos:start="93:44" pos:end="93:44">&amp;</operator><name pos:start="93:45" pos:end="93:54"><name pos:start="93:45" pos:end="93:47">cpe</name><operator pos:start="93:48" pos:end="93:49">-&gt;</operator><name pos:start="93:50" pos:end="93:51">ch</name><index pos:start="93:52" pos:end="93:54">[<expr pos:start="93:53" pos:end="93:53"><name pos:start="93:53" pos:end="93:53">j</name></expr>]</index></name><operator pos:start="93:55" pos:end="93:55">.</operator><name pos:start="93:56" pos:end="93:58">ics</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="95:13" pos:end="95:18"><decl pos:start="95:13" pos:end="95:17"><type pos:start="95:13" pos:end="95:15"><name pos:start="95:13" pos:end="95:15">int</name></type> <name pos:start="95:17" pos:end="95:17">k</name></decl>;</decl_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:104"><expr pos:start="97:13" pos:end="97:103"><name pos:start="97:13" pos:end="97:17"><name pos:start="97:13" pos:end="97:14">wi</name><index pos:start="97:15" pos:end="97:17">[<expr pos:start="97:16" pos:end="97:16"><name pos:start="97:16" pos:end="97:16">j</name></expr>]</index></name> <operator pos:start="97:19" pos:end="97:19">=</operator> <call pos:start="97:21" pos:end="97:103"><name pos:start="97:21" pos:end="97:41">ff_psy_suggest_window</name><argument_list pos:start="97:42" pos:end="97:103">(<argument pos:start="97:43" pos:end="97:49"><expr pos:start="97:43" pos:end="97:49"><operator pos:start="97:43" pos:end="97:43">&amp;</operator><name pos:start="97:44" pos:end="97:49"><name pos:start="97:44" pos:end="97:44">s</name><operator pos:start="97:45" pos:end="97:46">-&gt;</operator><name pos:start="97:47" pos:end="97:49">psy</name></name></expr></argument>, <argument pos:start="97:52" pos:end="97:59"><expr pos:start="97:52" pos:end="97:59"><name pos:start="97:52" pos:end="97:59">samples2</name></expr></argument>, <argument pos:start="97:62" pos:end="97:63"><expr pos:start="97:62" pos:end="97:63"><name pos:start="97:62" pos:end="97:63">la</name></expr></argument>, <argument pos:start="97:66" pos:end="97:77"><expr pos:start="97:66" pos:end="97:77"><name pos:start="97:66" pos:end="97:73">start_ch</name> <operator pos:start="97:75" pos:end="97:75">+</operator> <name pos:start="97:77" pos:end="97:77">j</name></expr></argument>, <argument pos:start="97:80" pos:end="97:102"><expr pos:start="97:80" pos:end="97:102"><name pos:start="97:80" pos:end="97:102"><name pos:start="97:80" pos:end="97:82">ics</name><operator pos:start="97:83" pos:end="97:84">-&gt;</operator><name pos:start="97:85" pos:end="97:99">window_sequence</name><index pos:start="97:100" pos:end="97:102">[<expr pos:start="97:101" pos:end="97:101"><literal type="number" pos:start="97:101" pos:end="97:101">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:62"><expr pos:start="99:13" pos:end="99:61"><name pos:start="99:13" pos:end="99:35"><name pos:start="99:13" pos:end="99:15">ics</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:32">window_sequence</name><index pos:start="99:33" pos:end="99:35">[<expr pos:start="99:34" pos:end="99:34"><literal type="number" pos:start="99:34" pos:end="99:34">1</literal></expr>]</index></name> <operator pos:start="99:37" pos:end="99:37">=</operator> <name pos:start="99:39" pos:end="99:61"><name pos:start="99:39" pos:end="99:41">ics</name><operator pos:start="99:42" pos:end="99:43">-&gt;</operator><name pos:start="99:44" pos:end="99:58">window_sequence</name><index pos:start="99:59" pos:end="99:61">[<expr pos:start="99:60" pos:end="99:60"><literal type="number" pos:start="99:60" pos:end="99:60">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:59"><expr pos:start="101:13" pos:end="101:58"><name pos:start="101:13" pos:end="101:35"><name pos:start="101:13" pos:end="101:15">ics</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:32">window_sequence</name><index pos:start="101:33" pos:end="101:35">[<expr pos:start="101:34" pos:end="101:34"><literal type="number" pos:start="101:34" pos:end="101:34">0</literal></expr>]</index></name> <operator pos:start="101:37" pos:end="101:37">=</operator> <name pos:start="101:39" pos:end="101:43"><name pos:start="101:39" pos:end="101:40">wi</name><index pos:start="101:41" pos:end="101:43">[<expr pos:start="101:42" pos:end="101:42"><name pos:start="101:42" pos:end="101:42">j</name></expr>]</index></name><operator pos:start="101:44" pos:end="101:44">.</operator><name pos:start="101:45" pos:end="101:58"><name pos:start="101:45" pos:end="101:55">window_type</name><index pos:start="101:56" pos:end="101:58">[<expr pos:start="101:57" pos:end="101:57"><literal type="number" pos:start="101:57" pos:end="101:57">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:60"><expr pos:start="103:13" pos:end="103:59"><name pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:15">ics</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:30">use_kb_window</name><index pos:start="103:31" pos:end="103:33">[<expr pos:start="103:32" pos:end="103:32"><literal type="number" pos:start="103:32" pos:end="103:32">1</literal></expr>]</index></name>   <operator pos:start="103:37" pos:end="103:37">=</operator> <name pos:start="103:39" pos:end="103:59"><name pos:start="103:39" pos:end="103:41">ics</name><operator pos:start="103:42" pos:end="103:43">-&gt;</operator><name pos:start="103:44" pos:end="103:56">use_kb_window</name><index pos:start="103:57" pos:end="103:59">[<expr pos:start="103:58" pos:end="103:58"><literal type="number" pos:start="103:58" pos:end="103:58">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:57"><expr pos:start="105:13" pos:end="105:56"><name pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:15">ics</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:30">use_kb_window</name><index pos:start="105:31" pos:end="105:33">[<expr pos:start="105:32" pos:end="105:32"><literal type="number" pos:start="105:32" pos:end="105:32">0</literal></expr>]</index></name>   <operator pos:start="105:37" pos:end="105:37">=</operator> <name pos:start="105:39" pos:end="105:43"><name pos:start="105:39" pos:end="105:40">wi</name><index pos:start="105:41" pos:end="105:43">[<expr pos:start="105:42" pos:end="105:42"><name pos:start="105:42" pos:end="105:42">j</name></expr>]</index></name><operator pos:start="105:44" pos:end="105:44">.</operator><name pos:start="105:45" pos:end="105:56">window_shape</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:56"><expr pos:start="107:13" pos:end="107:55"><name pos:start="107:13" pos:end="107:28"><name pos:start="107:13" pos:end="107:15">ics</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:28">num_windows</name></name>        <operator pos:start="107:37" pos:end="107:37">=</operator> <name pos:start="107:39" pos:end="107:43"><name pos:start="107:39" pos:end="107:40">wi</name><index pos:start="107:41" pos:end="107:43">[<expr pos:start="107:42" pos:end="107:42"><name pos:start="107:42" pos:end="107:42">j</name></expr>]</index></name><operator pos:start="107:44" pos:end="107:44">.</operator><name pos:start="107:45" pos:end="107:55">num_windows</name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:78"><expr pos:start="109:13" pos:end="109:77"><name pos:start="109:13" pos:end="109:26"><name pos:start="109:13" pos:end="109:15">ics</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:26">swb_sizes</name></name>          <operator pos:start="109:37" pos:end="109:37">=</operator> <name pos:start="109:39" pos:end="109:77"><name pos:start="109:39" pos:end="109:39">s</name><operator pos:start="109:40" pos:end="109:41">-&gt;</operator><name pos:start="109:42" pos:end="109:44">psy</name><operator pos:start="109:45" pos:end="109:45">.</operator><name pos:start="109:46" pos:end="109:50">bands</name>    <index pos:start="109:55" pos:end="109:77">[<expr pos:start="109:56" pos:end="109:76"><name pos:start="109:56" pos:end="109:71"><name pos:start="109:56" pos:end="109:58">ics</name><operator pos:start="109:59" pos:end="109:60">-&gt;</operator><name pos:start="109:61" pos:end="109:71">num_windows</name></name> <operator pos:start="109:73" pos:end="109:74">==</operator> <literal type="number" pos:start="109:76" pos:end="109:76">8</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:78"><expr pos:start="111:13" pos:end="111:77"><name pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:15">ics</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:24">num_swb</name></name>            <operator pos:start="111:37" pos:end="111:37">=</operator> <name pos:start="111:39" pos:end="111:77"><name pos:start="111:39" pos:end="111:39">s</name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:44">psy</name><operator pos:start="111:45" pos:end="111:45">.</operator><name pos:start="111:46" pos:end="111:54">num_bands</name><index pos:start="111:55" pos:end="111:77">[<expr pos:start="111:56" pos:end="111:76"><name pos:start="111:56" pos:end="111:71"><name pos:start="111:56" pos:end="111:58">ics</name><operator pos:start="111:59" pos:end="111:60">-&gt;</operator><name pos:start="111:61" pos:end="111:71">num_windows</name></name> <operator pos:start="111:73" pos:end="111:74">==</operator> <literal type="number" pos:start="111:76" pos:end="111:76">8</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="113:13" pos:end="115:54">for <control pos:start="113:17" pos:end="113:50">(<init pos:start="113:18" pos:end="113:23"><expr pos:start="113:18" pos:end="113:22"><name pos:start="113:18" pos:end="113:18">k</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <literal type="number" pos:start="113:22" pos:end="113:22">0</literal></expr>;</init> <condition pos:start="113:25" pos:end="113:45"><expr pos:start="113:25" pos:end="113:44"><name pos:start="113:25" pos:end="113:25">k</name> <operator pos:start="113:27" pos:end="113:27">&lt;</operator> <name pos:start="113:29" pos:end="113:44"><name pos:start="113:29" pos:end="113:31">ics</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:44">num_windows</name></name></expr>;</condition> <incr pos:start="113:47" pos:end="113:49"><expr pos:start="113:47" pos:end="113:49"><name pos:start="113:47" pos:end="113:47">k</name><operator pos:start="113:48" pos:end="113:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:17" pos:end="115:54"><block_content pos:start="115:17" pos:end="115:54">

                <expr_stmt pos:start="115:17" pos:end="115:54"><expr pos:start="115:17" pos:end="115:53"><name pos:start="115:17" pos:end="115:33"><name pos:start="115:17" pos:end="115:19">ics</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:30">group_len</name><index pos:start="115:31" pos:end="115:33">[<expr pos:start="115:32" pos:end="115:32"><name pos:start="115:32" pos:end="115:32">k</name></expr>]</index></name> <operator pos:start="115:35" pos:end="115:35">=</operator> <name pos:start="115:37" pos:end="115:41"><name pos:start="115:37" pos:end="115:38">wi</name><index pos:start="115:39" pos:end="115:41">[<expr pos:start="115:40" pos:end="115:40"><name pos:start="115:40" pos:end="115:40">j</name></expr>]</index></name><operator pos:start="115:42" pos:end="115:42">.</operator><name pos:start="115:43" pos:end="115:53"><name pos:start="115:43" pos:end="115:50">grouping</name><index pos:start="115:51" pos:end="115:53">[<expr pos:start="115:52" pos:end="115:52"><name pos:start="115:52" pos:end="115:52">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="119:13" pos:end="119:42"><expr pos:start="119:13" pos:end="119:41"><name pos:start="119:13" pos:end="119:26"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:26">cur_channel</name></name> <operator pos:start="119:28" pos:end="119:28">=</operator> <name pos:start="119:30" pos:end="119:37">start_ch</name> <operator pos:start="119:39" pos:end="119:39">+</operator> <name pos:start="119:41" pos:end="119:41">j</name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:70"><expr pos:start="121:13" pos:end="121:69"><call pos:start="121:13" pos:end="121:69"><name pos:start="121:13" pos:end="121:33">apply_window_and_mdct</name><argument_list pos:start="121:34" pos:end="121:69">(<argument pos:start="121:35" pos:end="121:39"><expr pos:start="121:35" pos:end="121:39"><name pos:start="121:35" pos:end="121:39">avctx</name></expr></argument>, <argument pos:start="121:42" pos:end="121:42"><expr pos:start="121:42" pos:end="121:42"><name pos:start="121:42" pos:end="121:42">s</name></expr></argument>, <argument pos:start="121:45" pos:end="121:55"><expr pos:start="121:45" pos:end="121:55"><operator pos:start="121:45" pos:end="121:45">&amp;</operator><name pos:start="121:46" pos:end="121:55"><name pos:start="121:46" pos:end="121:48">cpe</name><operator pos:start="121:49" pos:end="121:50">-&gt;</operator><name pos:start="121:51" pos:end="121:52">ch</name><index pos:start="121:53" pos:end="121:55">[<expr pos:start="121:54" pos:end="121:54"><name pos:start="121:54" pos:end="121:54">j</name></expr>]</index></name></expr></argument>, <argument pos:start="121:58" pos:end="121:65"><expr pos:start="121:58" pos:end="121:65"><name pos:start="121:58" pos:end="121:65">samples2</name></expr></argument>, <argument pos:start="121:68" pos:end="121:68"><expr pos:start="121:68" pos:end="121:68"><name pos:start="121:68" pos:end="121:68">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="125:9" pos:end="125:26"><expr pos:start="125:9" pos:end="125:25"><name pos:start="125:9" pos:end="125:16">start_ch</name> <operator pos:start="125:18" pos:end="125:19">+=</operator> <name pos:start="125:21" pos:end="125:25">chans</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="129:5" pos:end="129:45"><expr pos:start="129:5" pos:end="129:44"><call pos:start="129:5" pos:end="129:44"><name pos:start="129:5" pos:end="129:17">init_put_bits</name><argument_list pos:start="129:18" pos:end="129:44">(<argument pos:start="129:19" pos:end="129:24"><expr pos:start="129:19" pos:end="129:24"><operator pos:start="129:19" pos:end="129:19">&amp;</operator><name pos:start="129:20" pos:end="129:24"><name pos:start="129:20" pos:end="129:20">s</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:24">pb</name></name></expr></argument>, <argument pos:start="129:27" pos:end="129:31"><expr pos:start="129:27" pos:end="129:31"><name pos:start="129:27" pos:end="129:31">frame</name></expr></argument>, <argument pos:start="129:34" pos:end="129:43"><expr pos:start="129:34" pos:end="129:43"><name pos:start="129:34" pos:end="129:41">buf_size</name><operator pos:start="129:42" pos:end="129:42">*</operator><literal type="number" pos:start="129:43" pos:end="129:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="133:55"><if pos:start="131:5" pos:end="133:55">if <condition pos:start="131:8" pos:end="131:81">(<expr pos:start="131:9" pos:end="131:80"><operator pos:start="131:9" pos:end="131:9">(</operator><name pos:start="131:10" pos:end="131:28"><name pos:start="131:10" pos:end="131:14">avctx</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:28">frame_number</name></name> <operator pos:start="131:30" pos:end="131:30">&amp;</operator> <literal type="number" pos:start="131:32" pos:end="131:35">0xFF</literal><operator pos:start="131:36" pos:end="131:36">)</operator><operator pos:start="131:37" pos:end="131:38">==</operator><literal type="number" pos:start="131:39" pos:end="131:39">1</literal> <operator pos:start="131:41" pos:end="131:42">&amp;&amp;</operator> <operator pos:start="131:44" pos:end="131:44">!</operator><operator pos:start="131:45" pos:end="131:45">(</operator><name pos:start="131:46" pos:end="131:57"><name pos:start="131:46" pos:end="131:50">avctx</name><operator pos:start="131:51" pos:end="131:52">-&gt;</operator><name pos:start="131:53" pos:end="131:57">flags</name></name> <operator pos:start="131:59" pos:end="131:59">&amp;</operator> <name pos:start="131:61" pos:end="131:79">CODEC_FLAG_BITEXACT</name><operator pos:start="131:80" pos:end="131:80">)</operator></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:55"><block_content pos:start="133:9" pos:end="133:55">

        <expr_stmt pos:start="133:9" pos:end="133:55"><expr pos:start="133:9" pos:end="133:54"><call pos:start="133:9" pos:end="133:54"><name pos:start="133:9" pos:end="133:26">put_bitstream_info</name><argument_list pos:start="133:27" pos:end="133:54">(<argument pos:start="133:28" pos:end="133:32"><expr pos:start="133:28" pos:end="133:32"><name pos:start="133:28" pos:end="133:32">avctx</name></expr></argument>, <argument pos:start="133:35" pos:end="133:35"><expr pos:start="133:35" pos:end="133:35"><name pos:start="133:35" pos:end="133:35">s</name></expr></argument>, <argument pos:start="133:38" pos:end="133:53"><expr pos:start="133:38" pos:end="133:53"><name pos:start="133:38" pos:end="133:53">LIBAVCODEC_IDENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:17"><expr pos:start="135:5" pos:end="135:16"><name pos:start="135:5" pos:end="135:12">start_ch</name> <operator pos:start="135:14" pos:end="135:14">=</operator> <literal type="number" pos:start="135:16" pos:end="135:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:56"><expr pos:start="137:5" pos:end="137:55"><call pos:start="137:5" pos:end="137:55"><name pos:start="137:5" pos:end="137:10">memset</name><argument_list pos:start="137:11" pos:end="137:55">(<argument pos:start="137:12" pos:end="137:26"><expr pos:start="137:12" pos:end="137:26"><name pos:start="137:12" pos:end="137:26">chan_el_counter</name></expr></argument>, <argument pos:start="137:29" pos:end="137:29"><expr pos:start="137:29" pos:end="137:29"><literal type="number" pos:start="137:29" pos:end="137:29">0</literal></expr></argument>, <argument pos:start="137:32" pos:end="137:54"><expr pos:start="137:32" pos:end="137:54"><sizeof pos:start="137:32" pos:end="137:54">sizeof<argument_list pos:start="137:38" pos:end="137:54">(<argument pos:start="137:39" pos:end="137:53"><expr pos:start="137:39" pos:end="137:53"><name pos:start="137:39" pos:end="137:53">chan_el_counter</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="139:5" pos:end="217:5">for <control pos:start="139:9" pos:end="139:37">(<init pos:start="139:10" pos:end="139:15"><expr pos:start="139:10" pos:end="139:14"><name pos:start="139:10" pos:end="139:10">i</name> <operator pos:start="139:12" pos:end="139:12">=</operator> <literal type="number" pos:start="139:14" pos:end="139:14">0</literal></expr>;</init> <condition pos:start="139:17" pos:end="139:32"><expr pos:start="139:17" pos:end="139:31"><name pos:start="139:17" pos:end="139:17">i</name> <operator pos:start="139:19" pos:end="139:19">&lt;</operator> <name pos:start="139:21" pos:end="139:31"><name pos:start="139:21" pos:end="139:28">chan_map</name><index pos:start="139:29" pos:end="139:31">[<expr pos:start="139:30" pos:end="139:30"><literal type="number" pos:start="139:30" pos:end="139:30">0</literal></expr>]</index></name></expr>;</condition> <incr pos:start="139:34" pos:end="139:36"><expr pos:start="139:34" pos:end="139:36"><name pos:start="139:34" pos:end="139:34">i</name><operator pos:start="139:35" pos:end="139:36">++</operator></expr></incr>)</control> <block pos:start="139:39" pos:end="217:5">{<block_content pos:start="141:9" pos:end="215:26">

        <decl_stmt pos:start="141:9" pos:end="141:49"><decl pos:start="141:9" pos:end="141:48"><type pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:23">FFPsyWindowInfo</name><modifier pos:start="141:24" pos:end="141:24">*</modifier></type> <name pos:start="141:26" pos:end="141:27">wi</name> <init pos:start="141:29" pos:end="141:48">= <expr pos:start="141:31" pos:end="141:48"><name pos:start="141:31" pos:end="141:37">windows</name> <operator pos:start="141:39" pos:end="141:39">+</operator> <name pos:start="141:41" pos:end="141:48">start_ch</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:33"><expr pos:start="143:9" pos:end="143:32"><name pos:start="143:9" pos:end="143:11">tag</name>      <operator pos:start="143:18" pos:end="143:18">=</operator> <name pos:start="143:20" pos:end="143:32"><name pos:start="143:20" pos:end="143:27">chan_map</name><index pos:start="143:28" pos:end="143:32">[<expr pos:start="143:29" pos:end="143:31"><name pos:start="143:29" pos:end="143:29">i</name><operator pos:start="143:30" pos:end="143:30">+</operator><literal type="number" pos:start="143:31" pos:end="143:31">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:43"><expr pos:start="145:9" pos:end="145:42"><name pos:start="145:9" pos:end="145:13">chans</name>    <operator pos:start="145:18" pos:end="145:18">=</operator> <ternary pos:start="145:20" pos:end="145:42"><condition pos:start="145:20" pos:end="145:36"><expr pos:start="145:20" pos:end="145:34"><name pos:start="145:20" pos:end="145:22">tag</name> <operator pos:start="145:24" pos:end="145:25">==</operator> <name pos:start="145:27" pos:end="145:34">TYPE_CPE</name></expr> ?</condition><then pos:start="145:38" pos:end="145:38"> <expr pos:start="145:38" pos:end="145:38"><literal type="number" pos:start="145:38" pos:end="145:38">2</literal></expr> </then><else pos:start="145:40" pos:end="145:42">: <expr pos:start="145:42" pos:end="145:42"><literal type="number" pos:start="145:42" pos:end="145:42">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:30"><expr pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:11">cpe</name>      <operator pos:start="147:18" pos:end="147:18">=</operator> <operator pos:start="147:20" pos:end="147:20">&amp;</operator><name pos:start="147:21" pos:end="147:29"><name pos:start="147:21" pos:end="147:21">s</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:26">cpe</name><index pos:start="147:27" pos:end="147:29">[<expr pos:start="147:28" pos:end="147:28"><name pos:start="147:28" pos:end="147:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="149:9" pos:end="153:9">for <control pos:start="149:13" pos:end="149:35">(<init pos:start="149:14" pos:end="149:19"><expr pos:start="149:14" pos:end="149:18"><name pos:start="149:14" pos:end="149:14">j</name> <operator pos:start="149:16" pos:end="149:16">=</operator> <literal type="number" pos:start="149:18" pos:end="149:18">0</literal></expr>;</init> <condition pos:start="149:21" pos:end="149:30"><expr pos:start="149:21" pos:end="149:29"><name pos:start="149:21" pos:end="149:21">j</name> <operator pos:start="149:23" pos:end="149:23">&lt;</operator> <name pos:start="149:25" pos:end="149:29">chans</name></expr>;</condition> <incr pos:start="149:32" pos:end="149:34"><expr pos:start="149:32" pos:end="149:34"><name pos:start="149:32" pos:end="149:32">j</name><operator pos:start="149:33" pos:end="149:34">++</operator></expr></incr>)</control> <block pos:start="149:37" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:78">

            <expr_stmt pos:start="151:13" pos:end="151:78"><expr pos:start="151:13" pos:end="151:77"><call pos:start="151:13" pos:end="151:77"><name pos:start="151:13" pos:end="151:43"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:20">coder</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:43">search_for_quantizers</name></name><argument_list pos:start="151:44" pos:end="151:77">(<argument pos:start="151:45" pos:end="151:49"><expr pos:start="151:45" pos:end="151:49"><name pos:start="151:45" pos:end="151:49">avctx</name></expr></argument>, <argument pos:start="151:52" pos:end="151:52"><expr pos:start="151:52" pos:end="151:52"><name pos:start="151:52" pos:end="151:52">s</name></expr></argument>, <argument pos:start="151:55" pos:end="151:65"><expr pos:start="151:55" pos:end="151:65"><operator pos:start="151:55" pos:end="151:55">&amp;</operator><name pos:start="151:56" pos:end="151:65"><name pos:start="151:56" pos:end="151:58">cpe</name><operator pos:start="151:59" pos:end="151:60">-&gt;</operator><name pos:start="151:61" pos:end="151:62">ch</name><index pos:start="151:63" pos:end="151:65">[<expr pos:start="151:64" pos:end="151:64"><name pos:start="151:64" pos:end="151:64">j</name></expr>]</index></name></expr></argument>, <argument pos:start="151:68" pos:end="151:76"><expr pos:start="151:68" pos:end="151:76"><name pos:start="151:68" pos:end="151:76"><name pos:start="151:68" pos:end="151:68">s</name><operator pos:start="151:69" pos:end="151:70">-&gt;</operator><name pos:start="151:71" pos:end="151:76">lambda</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="155:9" pos:end="155:31"><expr pos:start="155:9" pos:end="155:30"><name pos:start="155:9" pos:end="155:26"><name pos:start="155:9" pos:end="155:11">cpe</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:26">common_window</name></name> <operator pos:start="155:28" pos:end="155:28">=</operator> <literal type="number" pos:start="155:30" pos:end="155:30">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="179:9"><if pos:start="157:9" pos:end="179:9">if <condition pos:start="157:12" pos:end="161:58">(<expr pos:start="157:13" pos:end="161:57"><name pos:start="157:13" pos:end="157:17">chans</name> <operator pos:start="157:19" pos:end="157:19">&gt;</operator> <literal type="number" pos:start="157:21" pos:end="157:21">1</literal>

            <operator pos:start="159:13" pos:end="159:14">&amp;&amp;</operator> <name pos:start="159:16" pos:end="159:20"><name pos:start="159:16" pos:end="159:17">wi</name><index pos:start="159:18" pos:end="159:20">[<expr pos:start="159:19" pos:end="159:19"><literal type="number" pos:start="159:19" pos:end="159:19">0</literal></expr>]</index></name><operator pos:start="159:21" pos:end="159:21">.</operator><name pos:start="159:22" pos:end="159:35"><name pos:start="159:22" pos:end="159:32">window_type</name><index pos:start="159:33" pos:end="159:35">[<expr pos:start="159:34" pos:end="159:34"><literal type="number" pos:start="159:34" pos:end="159:34">0</literal></expr>]</index></name> <operator pos:start="159:37" pos:end="159:38">==</operator> <name pos:start="159:40" pos:end="159:44"><name pos:start="159:40" pos:end="159:41">wi</name><index pos:start="159:42" pos:end="159:44">[<expr pos:start="159:43" pos:end="159:43"><literal type="number" pos:start="159:43" pos:end="159:43">1</literal></expr>]</index></name><operator pos:start="159:45" pos:end="159:45">.</operator><name pos:start="159:46" pos:end="159:59"><name pos:start="159:46" pos:end="159:56">window_type</name><index pos:start="159:57" pos:end="159:59">[<expr pos:start="159:58" pos:end="159:58"><literal type="number" pos:start="159:58" pos:end="159:58">0</literal></expr>]</index></name>

            <operator pos:start="161:13" pos:end="161:14">&amp;&amp;</operator> <name pos:start="161:16" pos:end="161:20"><name pos:start="161:16" pos:end="161:17">wi</name><index pos:start="161:18" pos:end="161:20">[<expr pos:start="161:19" pos:end="161:19"><literal type="number" pos:start="161:19" pos:end="161:19">0</literal></expr>]</index></name><operator pos:start="161:21" pos:end="161:21">.</operator><name pos:start="161:22" pos:end="161:33">window_shape</name>   <operator pos:start="161:37" pos:end="161:38">==</operator> <name pos:start="161:40" pos:end="161:44"><name pos:start="161:40" pos:end="161:41">wi</name><index pos:start="161:42" pos:end="161:44">[<expr pos:start="161:43" pos:end="161:43"><literal type="number" pos:start="161:43" pos:end="161:43">1</literal></expr>]</index></name><operator pos:start="161:45" pos:end="161:45">.</operator><name pos:start="161:46" pos:end="161:57">window_shape</name></expr>)</condition> <block pos:start="161:60" pos:end="179:9">{<block_content pos:start="165:13" pos:end="177:13">



            <expr_stmt pos:start="165:13" pos:end="165:35"><expr pos:start="165:13" pos:end="165:34"><name pos:start="165:13" pos:end="165:30"><name pos:start="165:13" pos:end="165:15">cpe</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:30">common_window</name></name> <operator pos:start="165:32" pos:end="165:32">=</operator> <literal type="number" pos:start="165:34" pos:end="165:34">1</literal></expr>;</expr_stmt>

            <for pos:start="167:13" pos:end="177:13">for <control pos:start="167:17" pos:end="167:51">(<init pos:start="167:18" pos:end="167:23"><expr pos:start="167:18" pos:end="167:22"><name pos:start="167:18" pos:end="167:18">j</name> <operator pos:start="167:20" pos:end="167:20">=</operator> <literal type="number" pos:start="167:22" pos:end="167:22">0</literal></expr>;</init> <condition pos:start="167:25" pos:end="167:46"><expr pos:start="167:25" pos:end="167:45"><name pos:start="167:25" pos:end="167:25">j</name> <operator pos:start="167:27" pos:end="167:27">&lt;</operator> <name pos:start="167:29" pos:end="167:33"><name pos:start="167:29" pos:end="167:30">wi</name><index pos:start="167:31" pos:end="167:33">[<expr pos:start="167:32" pos:end="167:32"><literal type="number" pos:start="167:32" pos:end="167:32">0</literal></expr>]</index></name><operator pos:start="167:34" pos:end="167:34">.</operator><name pos:start="167:35" pos:end="167:45">num_windows</name></expr>;</condition> <incr pos:start="167:48" pos:end="167:50"><expr pos:start="167:48" pos:end="167:50"><name pos:start="167:48" pos:end="167:48">j</name><operator pos:start="167:49" pos:end="167:50">++</operator></expr></incr>)</control> <block pos:start="167:53" pos:end="177:13">{<block_content pos:start="169:17" pos:end="175:17">

                <if_stmt pos:start="169:17" pos:end="175:17"><if pos:start="169:17" pos:end="175:17">if <condition pos:start="169:20" pos:end="169:59">(<expr pos:start="169:21" pos:end="169:58"><name pos:start="169:21" pos:end="169:25"><name pos:start="169:21" pos:end="169:22">wi</name><index pos:start="169:23" pos:end="169:25">[<expr pos:start="169:24" pos:end="169:24"><literal type="number" pos:start="169:24" pos:end="169:24">0</literal></expr>]</index></name><operator pos:start="169:26" pos:end="169:26">.</operator><name pos:start="169:27" pos:end="169:37"><name pos:start="169:27" pos:end="169:34">grouping</name><index pos:start="169:35" pos:end="169:37">[<expr pos:start="169:36" pos:end="169:36"><name pos:start="169:36" pos:end="169:36">j</name></expr>]</index></name> <operator pos:start="169:39" pos:end="169:40">!=</operator> <name pos:start="169:42" pos:end="169:46"><name pos:start="169:42" pos:end="169:43">wi</name><index pos:start="169:44" pos:end="169:46">[<expr pos:start="169:45" pos:end="169:45"><literal type="number" pos:start="169:45" pos:end="169:45">1</literal></expr>]</index></name><operator pos:start="169:47" pos:end="169:47">.</operator><name pos:start="169:48" pos:end="169:58"><name pos:start="169:48" pos:end="169:55">grouping</name><index pos:start="169:56" pos:end="169:58">[<expr pos:start="169:57" pos:end="169:57"><name pos:start="169:57" pos:end="169:57">j</name></expr>]</index></name></expr>)</condition> <block pos:start="169:61" pos:end="175:17">{<block_content pos:start="171:21" pos:end="173:26">

                    <expr_stmt pos:start="171:21" pos:end="171:43"><expr pos:start="171:21" pos:end="171:42"><name pos:start="171:21" pos:end="171:38"><name pos:start="171:21" pos:end="171:23">cpe</name><operator pos:start="171:24" pos:end="171:25">-&gt;</operator><name pos:start="171:26" pos:end="171:38">common_window</name></name> <operator pos:start="171:40" pos:end="171:40">=</operator> <literal type="number" pos:start="171:42" pos:end="171:42">0</literal></expr>;</expr_stmt>

                    <break pos:start="173:21" pos:end="173:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="181:9" pos:end="183:55"><if pos:start="181:9" pos:end="183:55">if <condition pos:start="181:12" pos:end="181:58">(<expr pos:start="181:13" pos:end="181:57"><name pos:start="181:13" pos:end="181:30"><name pos:start="181:13" pos:end="181:15">cpe</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:30">common_window</name></name> <operator pos:start="181:32" pos:end="181:33">&amp;&amp;</operator> <name pos:start="181:35" pos:end="181:57"><name pos:start="181:35" pos:end="181:35">s</name><operator pos:start="181:36" pos:end="181:37">-&gt;</operator><name pos:start="181:38" pos:end="181:42">coder</name><operator pos:start="181:43" pos:end="181:44">-&gt;</operator><name pos:start="181:45" pos:end="181:57">search_for_ms</name></name></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:55"><block_content pos:start="183:13" pos:end="183:55">

            <expr_stmt pos:start="183:13" pos:end="183:55"><expr pos:start="183:13" pos:end="183:54"><call pos:start="183:13" pos:end="183:54"><name pos:start="183:13" pos:end="183:35"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:20">coder</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:35">search_for_ms</name></name><argument_list pos:start="183:36" pos:end="183:54">(<argument pos:start="183:37" pos:end="183:37"><expr pos:start="183:37" pos:end="183:37"><name pos:start="183:37" pos:end="183:37">s</name></expr></argument>, <argument pos:start="183:40" pos:end="183:42"><expr pos:start="183:40" pos:end="183:42"><name pos:start="183:40" pos:end="183:42">cpe</name></expr></argument>, <argument pos:start="183:45" pos:end="183:53"><expr pos:start="183:45" pos:end="183:53"><name pos:start="183:45" pos:end="183:53"><name pos:start="183:45" pos:end="183:45">s</name><operator pos:start="183:46" pos:end="183:47">-&gt;</operator><name pos:start="183:48" pos:end="183:53">lambda</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:48"><expr pos:start="185:9" pos:end="185:47"><call pos:start="185:9" pos:end="185:47"><name pos:start="185:9" pos:end="185:32">adjust_frame_information</name><argument_list pos:start="185:33" pos:end="185:47">(<argument pos:start="185:34" pos:end="185:34"><expr pos:start="185:34" pos:end="185:34"><name pos:start="185:34" pos:end="185:34">s</name></expr></argument>, <argument pos:start="185:37" pos:end="185:39"><expr pos:start="185:37" pos:end="185:39"><name pos:start="185:37" pos:end="185:39">cpe</name></expr></argument>, <argument pos:start="185:42" pos:end="185:46"><expr pos:start="185:42" pos:end="185:46"><name pos:start="185:42" pos:end="185:46">chans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:33"><expr pos:start="187:9" pos:end="187:32"><call pos:start="187:9" pos:end="187:32"><name pos:start="187:9" pos:end="187:16">put_bits</name><argument_list pos:start="187:17" pos:end="187:32">(<argument pos:start="187:18" pos:end="187:23"><expr pos:start="187:18" pos:end="187:23"><operator pos:start="187:18" pos:end="187:18">&amp;</operator><name pos:start="187:19" pos:end="187:23"><name pos:start="187:19" pos:end="187:19">s</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:23">pb</name></name></expr></argument>, <argument pos:start="187:26" pos:end="187:26"><expr pos:start="187:26" pos:end="187:26"><literal type="number" pos:start="187:26" pos:end="187:26">3</literal></expr></argument>, <argument pos:start="187:29" pos:end="187:31"><expr pos:start="187:29" pos:end="187:31"><name pos:start="187:29" pos:end="187:31">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:52"><expr pos:start="189:9" pos:end="189:51"><call pos:start="189:9" pos:end="189:51"><name pos:start="189:9" pos:end="189:16">put_bits</name><argument_list pos:start="189:17" pos:end="189:51">(<argument pos:start="189:18" pos:end="189:23"><expr pos:start="189:18" pos:end="189:23"><operator pos:start="189:18" pos:end="189:18">&amp;</operator><name pos:start="189:19" pos:end="189:23"><name pos:start="189:19" pos:end="189:19">s</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:23">pb</name></name></expr></argument>, <argument pos:start="189:26" pos:end="189:26"><expr pos:start="189:26" pos:end="189:26"><literal type="number" pos:start="189:26" pos:end="189:26">4</literal></expr></argument>, <argument pos:start="189:29" pos:end="189:50"><expr pos:start="189:29" pos:end="189:50"><name pos:start="189:29" pos:end="189:48"><name pos:start="189:29" pos:end="189:43">chan_el_counter</name><index pos:start="189:44" pos:end="189:48">[<expr pos:start="189:45" pos:end="189:47"><name pos:start="189:45" pos:end="189:47">tag</name></expr>]</index></name><operator pos:start="189:49" pos:end="189:50">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="191:9" pos:end="203:9"><if pos:start="191:9" pos:end="203:9">if <condition pos:start="191:12" pos:end="191:23">(<expr pos:start="191:13" pos:end="191:22"><name pos:start="191:13" pos:end="191:17">chans</name> <operator pos:start="191:19" pos:end="191:20">==</operator> <literal type="number" pos:start="191:22" pos:end="191:22">2</literal></expr>)</condition> <block pos:start="191:25" pos:end="203:9">{<block_content pos:start="193:13" pos:end="201:13">

            <expr_stmt pos:start="193:13" pos:end="193:52"><expr pos:start="193:13" pos:end="193:51"><call pos:start="193:13" pos:end="193:51"><name pos:start="193:13" pos:end="193:20">put_bits</name><argument_list pos:start="193:21" pos:end="193:51">(<argument pos:start="193:22" pos:end="193:27"><expr pos:start="193:22" pos:end="193:27"><operator pos:start="193:22" pos:end="193:22">&amp;</operator><name pos:start="193:23" pos:end="193:27"><name pos:start="193:23" pos:end="193:23">s</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:27">pb</name></name></expr></argument>, <argument pos:start="193:30" pos:end="193:30"><expr pos:start="193:30" pos:end="193:30"><literal type="number" pos:start="193:30" pos:end="193:30">1</literal></expr></argument>, <argument pos:start="193:33" pos:end="193:50"><expr pos:start="193:33" pos:end="193:50"><name pos:start="193:33" pos:end="193:50"><name pos:start="193:33" pos:end="193:35">cpe</name><operator pos:start="193:36" pos:end="193:37">-&gt;</operator><name pos:start="193:38" pos:end="193:50">common_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="201:13"><if pos:start="195:13" pos:end="201:13">if <condition pos:start="195:16" pos:end="195:35">(<expr pos:start="195:17" pos:end="195:34"><name pos:start="195:17" pos:end="195:34"><name pos:start="195:17" pos:end="195:19">cpe</name><operator pos:start="195:20" pos:end="195:21">-&gt;</operator><name pos:start="195:22" pos:end="195:34">common_window</name></name></expr>)</condition> <block pos:start="195:37" pos:end="201:13">{<block_content pos:start="197:17" pos:end="199:44">

                <expr_stmt pos:start="197:17" pos:end="197:49"><expr pos:start="197:17" pos:end="197:48"><call pos:start="197:17" pos:end="197:48"><name pos:start="197:17" pos:end="197:28">put_ics_info</name><argument_list pos:start="197:29" pos:end="197:48">(<argument pos:start="197:30" pos:end="197:30"><expr pos:start="197:30" pos:end="197:30"><name pos:start="197:30" pos:end="197:30">s</name></expr></argument>, <argument pos:start="197:33" pos:end="197:47"><expr pos:start="197:33" pos:end="197:47"><operator pos:start="197:33" pos:end="197:33">&amp;</operator><name pos:start="197:34" pos:end="197:43"><name pos:start="197:34" pos:end="197:36">cpe</name><operator pos:start="197:37" pos:end="197:38">-&gt;</operator><name pos:start="197:39" pos:end="197:40">ch</name><index pos:start="197:41" pos:end="197:43">[<expr pos:start="197:42" pos:end="197:42"><literal type="number" pos:start="197:42" pos:end="197:42">0</literal></expr>]</index></name><operator pos:start="197:44" pos:end="197:44">.</operator><name pos:start="197:45" pos:end="197:47">ics</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:44"><expr pos:start="199:17" pos:end="199:43"><call pos:start="199:17" pos:end="199:43"><name pos:start="199:17" pos:end="199:30">encode_ms_info</name><argument_list pos:start="199:31" pos:end="199:43">(<argument pos:start="199:32" pos:end="199:37"><expr pos:start="199:32" pos:end="199:37"><operator pos:start="199:32" pos:end="199:32">&amp;</operator><name pos:start="199:33" pos:end="199:37"><name pos:start="199:33" pos:end="199:33">s</name><operator pos:start="199:34" pos:end="199:35">-&gt;</operator><name pos:start="199:36" pos:end="199:37">pb</name></name></expr></argument>, <argument pos:start="199:40" pos:end="199:42"><expr pos:start="199:40" pos:end="199:42"><name pos:start="199:40" pos:end="199:42">cpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="205:9" pos:end="213:9">for <control pos:start="205:13" pos:end="205:35">(<init pos:start="205:14" pos:end="205:19"><expr pos:start="205:14" pos:end="205:18"><name pos:start="205:14" pos:end="205:14">j</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <literal type="number" pos:start="205:18" pos:end="205:18">0</literal></expr>;</init> <condition pos:start="205:21" pos:end="205:30"><expr pos:start="205:21" pos:end="205:29"><name pos:start="205:21" pos:end="205:21">j</name> <operator pos:start="205:23" pos:end="205:23">&lt;</operator> <name pos:start="205:25" pos:end="205:29">chans</name></expr>;</condition> <incr pos:start="205:32" pos:end="205:34"><expr pos:start="205:32" pos:end="205:34"><name pos:start="205:32" pos:end="205:32">j</name><operator pos:start="205:33" pos:end="205:34">++</operator></expr></incr>)</control> <block pos:start="205:37" pos:end="213:9">{<block_content pos:start="207:13" pos:end="211:81">

            <expr_stmt pos:start="207:13" pos:end="207:42"><expr pos:start="207:13" pos:end="207:41"><name pos:start="207:13" pos:end="207:26"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:26">cur_channel</name></name> <operator pos:start="207:28" pos:end="207:28">=</operator> <name pos:start="207:30" pos:end="207:37">start_ch</name> <operator pos:start="207:39" pos:end="207:39">+</operator> <name pos:start="207:41" pos:end="207:41">j</name></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:85"><expr pos:start="209:13" pos:end="209:84"><call pos:start="209:13" pos:end="209:84"><name pos:start="209:13" pos:end="209:32">ff_psy_set_band_info</name><argument_list pos:start="209:33" pos:end="209:84">(<argument pos:start="209:34" pos:end="209:40"><expr pos:start="209:34" pos:end="209:40"><operator pos:start="209:34" pos:end="209:34">&amp;</operator><name pos:start="209:35" pos:end="209:40"><name pos:start="209:35" pos:end="209:35">s</name><operator pos:start="209:36" pos:end="209:37">-&gt;</operator><name pos:start="209:38" pos:end="209:40">psy</name></name></expr></argument>, <argument pos:start="209:43" pos:end="209:56"><expr pos:start="209:43" pos:end="209:56"><name pos:start="209:43" pos:end="209:56"><name pos:start="209:43" pos:end="209:43">s</name><operator pos:start="209:44" pos:end="209:45">-&gt;</operator><name pos:start="209:46" pos:end="209:56">cur_channel</name></name></expr></argument>, <argument pos:start="209:59" pos:end="209:75"><expr pos:start="209:59" pos:end="209:75"><name pos:start="209:59" pos:end="209:68"><name pos:start="209:59" pos:end="209:61">cpe</name><operator pos:start="209:62" pos:end="209:63">-&gt;</operator><name pos:start="209:64" pos:end="209:65">ch</name><index pos:start="209:66" pos:end="209:68">[<expr pos:start="209:67" pos:end="209:67"><name pos:start="209:67" pos:end="209:67">j</name></expr>]</index></name><operator pos:start="209:69" pos:end="209:69">.</operator><name pos:start="209:70" pos:end="209:75">coeffs</name></expr></argument>, <argument pos:start="209:78" pos:end="209:83"><expr pos:start="209:78" pos:end="209:83"><operator pos:start="209:78" pos:end="209:78">&amp;</operator><name pos:start="209:79" pos:end="209:83"><name pos:start="209:79" pos:end="209:80">wi</name><index pos:start="209:81" pos:end="209:83">[<expr pos:start="209:82" pos:end="209:82"><name pos:start="209:82" pos:end="209:82">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:81"><expr pos:start="211:13" pos:end="211:80"><call pos:start="211:13" pos:end="211:80"><name pos:start="211:13" pos:end="211:37">encode_individual_channel</name><argument_list pos:start="211:38" pos:end="211:80">(<argument pos:start="211:39" pos:end="211:43"><expr pos:start="211:39" pos:end="211:43"><name pos:start="211:39" pos:end="211:43">avctx</name></expr></argument>, <argument pos:start="211:46" pos:end="211:46"><expr pos:start="211:46" pos:end="211:46"><name pos:start="211:46" pos:end="211:46">s</name></expr></argument>, <argument pos:start="211:49" pos:end="211:59"><expr pos:start="211:49" pos:end="211:59"><operator pos:start="211:49" pos:end="211:49">&amp;</operator><name pos:start="211:50" pos:end="211:59"><name pos:start="211:50" pos:end="211:52">cpe</name><operator pos:start="211:53" pos:end="211:54">-&gt;</operator><name pos:start="211:55" pos:end="211:56">ch</name><index pos:start="211:57" pos:end="211:59">[<expr pos:start="211:58" pos:end="211:58"><name pos:start="211:58" pos:end="211:58">j</name></expr>]</index></name></expr></argument>, <argument pos:start="211:62" pos:end="211:79"><expr pos:start="211:62" pos:end="211:79"><name pos:start="211:62" pos:end="211:79"><name pos:start="211:62" pos:end="211:64">cpe</name><operator pos:start="211:65" pos:end="211:66">-&gt;</operator><name pos:start="211:67" pos:end="211:79">common_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="215:9" pos:end="215:26"><expr pos:start="215:9" pos:end="215:25"><name pos:start="215:9" pos:end="215:16">start_ch</name> <operator pos:start="215:18" pos:end="215:19">+=</operator> <name pos:start="215:21" pos:end="215:25">chans</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="221:5" pos:end="221:34"><expr pos:start="221:5" pos:end="221:33"><call pos:start="221:5" pos:end="221:33"><name pos:start="221:5" pos:end="221:12">put_bits</name><argument_list pos:start="221:13" pos:end="221:33">(<argument pos:start="221:14" pos:end="221:19"><expr pos:start="221:14" pos:end="221:19"><operator pos:start="221:14" pos:end="221:14">&amp;</operator><name pos:start="221:15" pos:end="221:19"><name pos:start="221:15" pos:end="221:15">s</name><operator pos:start="221:16" pos:end="221:17">-&gt;</operator><name pos:start="221:18" pos:end="221:19">pb</name></name></expr></argument>, <argument pos:start="221:22" pos:end="221:22"><expr pos:start="221:22" pos:end="221:22"><literal type="number" pos:start="221:22" pos:end="221:22">3</literal></expr></argument>, <argument pos:start="221:25" pos:end="221:32"><expr pos:start="221:25" pos:end="221:32"><name pos:start="221:25" pos:end="221:32">TYPE_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:27"><expr pos:start="223:5" pos:end="223:26"><call pos:start="223:5" pos:end="223:26"><name pos:start="223:5" pos:end="223:18">flush_put_bits</name><argument_list pos:start="223:19" pos:end="223:26">(<argument pos:start="223:20" pos:end="223:25"><expr pos:start="223:20" pos:end="223:25"><operator pos:start="223:20" pos:end="223:20">&amp;</operator><name pos:start="223:21" pos:end="223:25"><name pos:start="223:21" pos:end="223:21">s</name><operator pos:start="223:22" pos:end="223:23">-&gt;</operator><name pos:start="223:24" pos:end="223:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:47"><expr pos:start="225:5" pos:end="225:46"><name pos:start="225:5" pos:end="225:21"><name pos:start="225:5" pos:end="225:9">avctx</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:21">frame_bits</name></name> <operator pos:start="225:23" pos:end="225:23">=</operator> <call pos:start="225:25" pos:end="225:46"><name pos:start="225:25" pos:end="225:38">put_bits_count</name><argument_list pos:start="225:39" pos:end="225:46">(<argument pos:start="225:40" pos:end="225:45"><expr pos:start="225:40" pos:end="225:45"><operator pos:start="225:40" pos:end="225:40">&amp;</operator><name pos:start="225:41" pos:end="225:45"><name pos:start="225:41" pos:end="225:41">s</name><operator pos:start="225:42" pos:end="225:43">-&gt;</operator><name pos:start="225:44" pos:end="225:45">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="229:5" pos:end="229:25">// rate control stuff</comment>

    <if_stmt pos:start="231:5" pos:end="239:5"><if pos:start="231:5" pos:end="239:5">if <condition pos:start="231:8" pos:end="231:44">(<expr pos:start="231:9" pos:end="231:43"><operator pos:start="231:9" pos:end="231:9">!</operator><operator pos:start="231:10" pos:end="231:10">(</operator><name pos:start="231:11" pos:end="231:22"><name pos:start="231:11" pos:end="231:15">avctx</name><operator pos:start="231:16" pos:end="231:17">-&gt;</operator><name pos:start="231:18" pos:end="231:22">flags</name></name> <operator pos:start="231:24" pos:end="231:24">&amp;</operator> <name pos:start="231:26" pos:end="231:42">CODEC_FLAG_QSCALE</name><operator pos:start="231:43" pos:end="231:43">)</operator></expr>)</condition> <block pos:start="231:46" pos:end="239:5">{<block_content pos:start="233:9" pos:end="237:46">

        <decl_stmt pos:start="233:9" pos:end="233:89"><decl pos:start="233:9" pos:end="233:88"><type pos:start="233:9" pos:end="233:13"><name pos:start="233:9" pos:end="233:13">float</name></type> <name pos:start="233:15" pos:end="233:19">ratio</name> <init pos:start="233:21" pos:end="233:88">= <expr pos:start="233:23" pos:end="233:88"><name pos:start="233:23" pos:end="233:37"><name pos:start="233:23" pos:end="233:27">avctx</name><operator pos:start="233:28" pos:end="233:29">-&gt;</operator><name pos:start="233:30" pos:end="233:37">bit_rate</name></name> <operator pos:start="233:39" pos:end="233:39">*</operator> <literal type="number" pos:start="233:41" pos:end="233:47">1024.0f</literal> <operator pos:start="233:49" pos:end="233:49">/</operator> <name pos:start="233:51" pos:end="233:68"><name pos:start="233:51" pos:end="233:55">avctx</name><operator pos:start="233:56" pos:end="233:57">-&gt;</operator><name pos:start="233:58" pos:end="233:68">sample_rate</name></name> <operator pos:start="233:70" pos:end="233:70">/</operator> <name pos:start="233:72" pos:end="233:88"><name pos:start="233:72" pos:end="233:76">avctx</name><operator pos:start="233:77" pos:end="233:78">-&gt;</operator><name pos:start="233:79" pos:end="233:88">frame_bits</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:27"><expr pos:start="235:9" pos:end="235:26"><name pos:start="235:9" pos:end="235:17"><name pos:start="235:9" pos:end="235:9">s</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:17">lambda</name></name> <operator pos:start="235:19" pos:end="235:20">*=</operator> <name pos:start="235:22" pos:end="235:26">ratio</name></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:46"><expr pos:start="237:9" pos:end="237:45"><name pos:start="237:9" pos:end="237:17"><name pos:start="237:9" pos:end="237:9">s</name><operator pos:start="237:10" pos:end="237:11">-&gt;</operator><name pos:start="237:12" pos:end="237:17">lambda</name></name> <operator pos:start="237:19" pos:end="237:19">=</operator> <call pos:start="237:21" pos:end="237:45"><name pos:start="237:21" pos:end="237:25">fminf</name><argument_list pos:start="237:26" pos:end="237:45">(<argument pos:start="237:27" pos:end="237:35"><expr pos:start="237:27" pos:end="237:35"><name pos:start="237:27" pos:end="237:35"><name pos:start="237:27" pos:end="237:27">s</name><operator pos:start="237:28" pos:end="237:29">-&gt;</operator><name pos:start="237:30" pos:end="237:35">lambda</name></name></expr></argument>, <argument pos:start="237:38" pos:end="237:44"><expr pos:start="237:38" pos:end="237:44"><literal type="number" pos:start="237:38" pos:end="237:44">65536.f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="243:5" pos:end="247:56"><if pos:start="243:5" pos:end="247:56">if <condition pos:start="243:8" pos:end="243:49">(<expr pos:start="243:9" pos:end="243:48"><name pos:start="243:9" pos:end="243:25"><name pos:start="243:9" pos:end="243:13">avctx</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:25">frame_bits</name></name> <operator pos:start="243:27" pos:end="243:27">&gt;</operator> <literal type="number" pos:start="243:29" pos:end="243:32">6144</literal><operator pos:start="243:33" pos:end="243:33">*</operator><name pos:start="243:34" pos:end="243:48"><name pos:start="243:34" pos:end="243:38">avctx</name><operator pos:start="243:39" pos:end="243:40">-&gt;</operator><name pos:start="243:41" pos:end="243:48">channels</name></name></expr>)</condition><block type="pseudo" pos:start="245:9" pos:end="247:56"><block_content pos:start="245:9" pos:end="247:56">

        <expr_stmt pos:start="245:9" pos:end="247:56"><expr pos:start="245:9" pos:end="247:55"><call pos:start="245:9" pos:end="247:55"><name pos:start="245:9" pos:end="245:14">av_log</name><argument_list pos:start="245:15" pos:end="247:55">(<argument pos:start="245:16" pos:end="245:20"><expr pos:start="245:16" pos:end="245:20"><name pos:start="245:16" pos:end="245:20">avctx</name></expr></argument>, <argument pos:start="245:23" pos:end="245:34"><expr pos:start="245:23" pos:end="245:34"><name pos:start="245:23" pos:end="245:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="245:37" pos:end="245:71"><expr pos:start="245:37" pos:end="245:71"><literal type="string" pos:start="245:37" pos:end="245:71">"input buffer violation %d &gt; %d.\n"</literal></expr></argument>,

               <argument pos:start="247:16" pos:end="247:32"><expr pos:start="247:16" pos:end="247:32"><name pos:start="247:16" pos:end="247:32"><name pos:start="247:16" pos:end="247:20">avctx</name><operator pos:start="247:21" pos:end="247:22">-&gt;</operator><name pos:start="247:23" pos:end="247:32">frame_bits</name></name></expr></argument>, <argument pos:start="247:35" pos:end="247:54"><expr pos:start="247:35" pos:end="247:54"><literal type="number" pos:start="247:35" pos:end="247:38">6144</literal><operator pos:start="247:39" pos:end="247:39">*</operator><name pos:start="247:40" pos:end="247:54"><name pos:start="247:40" pos:end="247:44">avctx</name><operator pos:start="247:45" pos:end="247:46">-&gt;</operator><name pos:start="247:47" pos:end="247:54">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="251:5" pos:end="253:26"><if pos:start="251:5" pos:end="253:26">if <condition pos:start="251:8" pos:end="251:14">(<expr pos:start="251:9" pos:end="251:13"><operator pos:start="251:9" pos:end="251:9">!</operator><name pos:start="251:10" pos:end="251:13">data</name></expr>)</condition><block type="pseudo" pos:start="253:9" pos:end="253:26"><block_content pos:start="253:9" pos:end="253:26">

        <expr_stmt pos:start="253:9" pos:end="253:26"><expr pos:start="253:9" pos:end="253:25"><name pos:start="253:9" pos:end="253:21"><name pos:start="253:9" pos:end="253:9">s</name><operator pos:start="253:10" pos:end="253:11">-&gt;</operator><name pos:start="253:12" pos:end="253:21">last_frame</name></name> <operator pos:start="253:23" pos:end="253:23">=</operator> <literal type="number" pos:start="253:25" pos:end="253:25">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="255:5" pos:end="257:59"><expr pos:start="255:5" pos:end="257:58"><call pos:start="255:5" pos:end="257:58"><name pos:start="255:5" pos:end="255:10">memcpy</name><argument_list pos:start="255:11" pos:end="257:58">(<argument pos:start="255:12" pos:end="255:21"><expr pos:start="255:12" pos:end="255:21"><name pos:start="255:12" pos:end="255:21"><name pos:start="255:12" pos:end="255:12">s</name><operator pos:start="255:13" pos:end="255:14">-&gt;</operator><name pos:start="255:15" pos:end="255:21">samples</name></name></expr></argument>, <argument pos:start="255:24" pos:end="255:58"><expr pos:start="255:24" pos:end="255:58"><name pos:start="255:24" pos:end="255:33"><name pos:start="255:24" pos:end="255:24">s</name><operator pos:start="255:25" pos:end="255:26">-&gt;</operator><name pos:start="255:27" pos:end="255:33">samples</name></name> <operator pos:start="255:35" pos:end="255:35">+</operator> <literal type="number" pos:start="255:37" pos:end="255:40">1024</literal> <operator pos:start="255:42" pos:end="255:42">*</operator> <name pos:start="255:44" pos:end="255:58"><name pos:start="255:44" pos:end="255:48">avctx</name><operator pos:start="255:49" pos:end="255:50">-&gt;</operator><name pos:start="255:51" pos:end="255:58">channels</name></name></expr></argument>,

           <argument pos:start="257:12" pos:end="257:57"><expr pos:start="257:12" pos:end="257:57"><literal type="number" pos:start="257:12" pos:end="257:15">1024</literal> <operator pos:start="257:17" pos:end="257:17">*</operator> <name pos:start="257:19" pos:end="257:33"><name pos:start="257:19" pos:end="257:23">avctx</name><operator pos:start="257:24" pos:end="257:25">-&gt;</operator><name pos:start="257:26" pos:end="257:33">channels</name></name> <operator pos:start="257:35" pos:end="257:35">*</operator> <sizeof pos:start="257:37" pos:end="257:57">sizeof<argument_list pos:start="257:43" pos:end="257:57">(<argument pos:start="257:44" pos:end="257:56"><expr pos:start="257:44" pos:end="257:56"><name pos:start="257:44" pos:end="257:56"><name pos:start="257:44" pos:end="257:44">s</name><operator pos:start="257:45" pos:end="257:46">-&gt;</operator><name pos:start="257:47" pos:end="257:53">samples</name><index pos:start="257:54" pos:end="257:56">[<expr pos:start="257:55" pos:end="257:55"><literal type="number" pos:start="257:55" pos:end="257:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="259:5" pos:end="259:37">return <expr pos:start="259:12" pos:end="259:36"><call pos:start="259:12" pos:end="259:33"><name pos:start="259:12" pos:end="259:25">put_bits_count</name><argument_list pos:start="259:26" pos:end="259:33">(<argument pos:start="259:27" pos:end="259:32"><expr pos:start="259:27" pos:end="259:32"><operator pos:start="259:27" pos:end="259:27">&amp;</operator><name pos:start="259:28" pos:end="259:32"><name pos:start="259:28" pos:end="259:28">s</name><operator pos:start="259:29" pos:end="259:30">-&gt;</operator><name pos:start="259:31" pos:end="259:32">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="259:34" pos:end="259:35">&gt;&gt;</operator><literal type="number" pos:start="259:36" pos:end="259:36">3</literal></expr>;</return>

</block_content>}</block></function>
</unit>
