<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3534.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">icp_pit_init</name><parameter_list pos:start="1:18" pos:end="1:56">(<parameter pos:start="1:19" pos:end="1:31"><decl pos:start="1:19" pos:end="1:31"><type pos:start="1:19" pos:end="1:31"><name pos:start="1:19" pos:end="1:26">uint32_t</name></type> <name pos:start="1:28" pos:end="1:31">base</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:41">qemu_irq</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">pic</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:55"><decl pos:start="1:49" pos:end="1:55"><type pos:start="1:49" pos:end="1:55"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:55">irq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="31:62">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">iomemtype</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">icp_pit_state</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:61"><expr pos:start="11:5" pos:end="11:60"><name pos:start="11:5" pos:end="11:5">s</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:22">icp_pit_state</name> <operator pos:start="11:24" pos:end="11:24">*</operator><operator pos:start="11:25" pos:end="11:25">)</operator><call pos:start="11:26" pos:end="11:60"><name pos:start="11:26" pos:end="11:37">qemu_mallocz</name><argument_list pos:start="11:38" pos:end="11:60">(<argument pos:start="11:39" pos:end="11:59"><expr pos:start="11:39" pos:end="11:59"><sizeof pos:start="11:39" pos:end="11:59">sizeof<argument_list pos:start="11:45" pos:end="11:59">(<argument pos:start="11:46" pos:end="11:58"><expr pos:start="11:46" pos:end="11:58"><name pos:start="11:46" pos:end="11:58">icp_pit_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:19"><expr pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:11">base</name></name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:18">base</name></expr>;</expr_stmt>

    <comment type="block" pos:start="15:5" pos:end="15:58">/* Timer 0 runs at the system clock speed (40MHz).  */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:12">timer</name><index pos:start="17:13" pos:end="17:15">[<expr pos:start="17:14" pos:end="17:14"><literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>]</index></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:52"><name pos:start="17:19" pos:end="17:32">arm_timer_init</name><argument_list pos:start="17:33" pos:end="17:52">(<argument pos:start="17:34" pos:end="17:41"><expr pos:start="17:34" pos:end="17:41"><literal type="number" pos:start="17:34" pos:end="17:41">40000000</literal></expr></argument>, <argument pos:start="17:44" pos:end="17:51"><expr pos:start="17:44" pos:end="17:51"><name pos:start="17:44" pos:end="17:51"><name pos:start="17:44" pos:end="17:46">pic</name><index pos:start="17:47" pos:end="17:51">[<expr pos:start="17:48" pos:end="17:50"><name pos:start="17:48" pos:end="17:50">irq</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="19:44">/* The other two timers run at 1MHz.  */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:56"><expr pos:start="21:5" pos:end="21:55"><name pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">timer</name><index pos:start="21:13" pos:end="21:15">[<expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">1</literal></expr>]</index></name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:55"><name pos:start="21:19" pos:end="21:32">arm_timer_init</name><argument_list pos:start="21:33" pos:end="21:55">(<argument pos:start="21:34" pos:end="21:40"><expr pos:start="21:34" pos:end="21:40"><literal type="number" pos:start="21:34" pos:end="21:40">1000000</literal></expr></argument>, <argument pos:start="21:43" pos:end="21:54"><expr pos:start="21:43" pos:end="21:54"><name pos:start="21:43" pos:end="21:54"><name pos:start="21:43" pos:end="21:45">pic</name><index pos:start="21:46" pos:end="21:54">[<expr pos:start="21:47" pos:end="21:53"><name pos:start="21:47" pos:end="21:49">irq</name> <operator pos:start="21:51" pos:end="21:51">+</operator> <literal type="number" pos:start="21:53" pos:end="21:53">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:56"><expr pos:start="23:5" pos:end="23:55"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:12">timer</name><index pos:start="23:13" pos:end="23:15">[<expr pos:start="23:14" pos:end="23:14"><literal type="number" pos:start="23:14" pos:end="23:14">2</literal></expr>]</index></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:55"><name pos:start="23:19" pos:end="23:32">arm_timer_init</name><argument_list pos:start="23:33" pos:end="23:55">(<argument pos:start="23:34" pos:end="23:40"><expr pos:start="23:34" pos:end="23:40"><literal type="number" pos:start="23:34" pos:end="23:40">1000000</literal></expr></argument>, <argument pos:start="23:43" pos:end="23:54"><expr pos:start="23:43" pos:end="23:54"><name pos:start="23:43" pos:end="23:54"><name pos:start="23:43" pos:end="23:45">pic</name><index pos:start="23:46" pos:end="23:54">[<expr pos:start="23:47" pos:end="23:53"><name pos:start="23:47" pos:end="23:49">irq</name> <operator pos:start="23:51" pos:end="23:51">+</operator> <literal type="number" pos:start="23:53" pos:end="23:53">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:59"><expr pos:start="27:5" pos:end="29:58"><name pos:start="27:5" pos:end="27:13">iomemtype</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="29:58"><name pos:start="27:17" pos:end="27:38">cpu_register_io_memory</name><argument_list pos:start="27:39" pos:end="29:58">(<argument pos:start="27:40" pos:end="27:40"><expr pos:start="27:40" pos:end="27:40"><literal type="number" pos:start="27:40" pos:end="27:40">0</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:56"><expr pos:start="27:43" pos:end="27:56"><name pos:start="27:43" pos:end="27:56">icp_pit_readfn</name></expr></argument>,

                                       <argument pos:start="29:40" pos:end="29:54"><expr pos:start="29:40" pos:end="29:54"><name pos:start="29:40" pos:end="29:54">icp_pit_writefn</name></expr></argument>, <argument pos:start="29:57" pos:end="29:57"><expr pos:start="29:57" pos:end="29:57"><name pos:start="29:57" pos:end="29:57">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:62"><expr pos:start="31:5" pos:end="31:61"><call pos:start="31:5" pos:end="31:61"><name pos:start="31:5" pos:end="31:32">cpu_register_physical_memory</name><argument_list pos:start="31:33" pos:end="31:61">(<argument pos:start="31:34" pos:end="31:37"><expr pos:start="31:34" pos:end="31:37"><name pos:start="31:34" pos:end="31:37">base</name></expr></argument>, <argument pos:start="31:40" pos:end="31:49"><expr pos:start="31:40" pos:end="31:49"><literal type="number" pos:start="31:40" pos:end="31:49">0x00000fff</literal></expr></argument>, <argument pos:start="31:52" pos:end="31:60"><expr pos:start="31:52" pos:end="31:60"><name pos:start="31:52" pos:end="31:60">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="33:5" pos:end="33:28">/* ??? Save/restore.  */</comment>

</block_content>}</block></function>
</unit>
