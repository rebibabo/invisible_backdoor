<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15369.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_tsw1</name><parameter_list pos:start="1:23" pos:end="3:66">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:30">uint8_t</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:37">frame</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:48"><decl pos:start="1:40" pos:end="1:48"><type pos:start="1:40" pos:end="1:48"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:48">width</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:60">height</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:41"><decl pos:start="3:24" pos:end="3:41"><type pos:start="3:24" pos:end="3:41"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:36">uint8_t</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">src</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:65"><decl pos:start="3:44" pos:end="3:65"><type pos:start="3:44" pos:end="3:65"><specifier pos:start="3:44" pos:end="3:48">const</specifier> <name pos:start="3:50" pos:end="3:56">uint8_t</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:65">src_end</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:30">frame_start</name> <init pos:start="7:32" pos:end="7:38">= <expr pos:start="7:34" pos:end="7:38"><name pos:start="7:34" pos:end="7:38">frame</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:28">frame_end</name>   <init pos:start="9:32" pos:end="9:55">= <expr pos:start="9:34" pos:end="9:55"><name pos:start="9:34" pos:end="9:38">frame</name> <operator pos:start="9:40" pos:end="9:40">+</operator> <name pos:start="9:42" pos:end="9:46">width</name> <operator pos:start="9:48" pos:end="9:48">*</operator> <name pos:start="9:50" pos:end="9:55">height</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">mask</name> <init pos:start="11:14" pos:end="11:22">= <expr pos:start="11:16" pos:end="11:22"><literal type="number" pos:start="11:16" pos:end="11:22">0x10000</literal></expr></init></decl>, <decl pos:start="11:25" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:30">bitbuf</name> <init pos:start="11:32" pos:end="11:34">= <expr pos:start="11:34" pos:end="11:34"><literal type="number" pos:start="11:34" pos:end="11:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">v</name></decl>, <decl pos:start="13:12" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:17">offset</name></decl>, <decl pos:start="13:20" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:24">count</name></decl>, <decl pos:start="13:27" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:34">segments</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:12">segments</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:40"><name pos:start="17:16" pos:end="17:34">bytestream_get_le32</name><argument_list pos:start="17:35" pos:end="17:40">(<argument pos:start="17:36" pos:end="17:39"><expr pos:start="17:36" pos:end="17:39"><operator pos:start="17:36" pos:end="17:36">&amp;</operator><name pos:start="17:37" pos:end="17:39">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:9">frame</name>   <operator pos:start="19:13" pos:end="19:14">+=</operator> <call pos:start="19:16" pos:end="19:40"><name pos:start="19:16" pos:end="19:34">bytestream_get_le32</name><argument_list pos:start="19:35" pos:end="19:40">(<argument pos:start="19:36" pos:end="19:39"><expr pos:start="19:36" pos:end="19:39"><operator pos:start="19:36" pos:end="19:36">&amp;</operator><name pos:start="19:37" pos:end="19:39">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:49">(<expr pos:start="21:9" pos:end="21:48"><name pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:13">frame</name> <argument_list type="generic" pos:start="21:15" pos:end="21:38">&lt; <argument pos:start="21:17" pos:end="21:36"><expr pos:start="21:17" pos:end="21:36"><name pos:start="21:17" pos:end="21:27">frame_start</name> <operator pos:start="21:29" pos:end="21:30">||</operator> <name pos:start="21:32" pos:end="21:36">frame</name></expr></argument> &gt;</argument_list></name> <name pos:start="21:40" pos:end="21:48">frame_end</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <while pos:start="25:5" pos:end="69:5">while <condition pos:start="25:11" pos:end="25:22">(<expr pos:start="25:12" pos:end="25:21"><name pos:start="25:12" pos:end="25:19">segments</name><operator pos:start="25:20" pos:end="25:21">--</operator></expr>)</condition> <block pos:start="25:24" pos:end="69:5">{<block_content pos:start="27:9" pos:end="67:19">

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="27:28">(<expr pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:16">mask</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <literal type="number" pos:start="27:21" pos:end="27:27">0x10000</literal></expr>)</condition> <block pos:start="27:30" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:21">

            <if_stmt pos:start="29:13" pos:end="31:26"><if pos:start="29:13" pos:end="31:26">if <condition pos:start="29:16" pos:end="29:31">(<expr pos:start="29:17" pos:end="29:30"><name pos:start="29:17" pos:end="29:19">src</name> <operator pos:start="29:21" pos:end="29:22">&gt;=</operator> <name pos:start="29:24" pos:end="29:30">src_end</name></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:26"><block_content pos:start="31:17" pos:end="31:26">

                <return pos:start="31:17" pos:end="31:26">return <expr pos:start="31:24" pos:end="31:25"><operator pos:start="31:24" pos:end="31:24">-</operator><literal type="number" pos:start="31:25" pos:end="31:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:47"><expr pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:18">bitbuf</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <call pos:start="33:22" pos:end="33:46"><name pos:start="33:22" pos:end="33:40">bytestream_get_le16</name><argument_list pos:start="33:41" pos:end="33:46">(<argument pos:start="33:42" pos:end="33:45"><expr pos:start="33:42" pos:end="33:45"><operator pos:start="33:42" pos:end="33:42">&amp;</operator><name pos:start="33:43" pos:end="33:45">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:21"><expr pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:16">mask</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <literal type="number" pos:start="35:20" pos:end="35:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="41:22"><if pos:start="39:9" pos:end="41:22">if <condition pos:start="39:12" pos:end="39:55">(<expr pos:start="39:13" pos:end="39:54"><name pos:start="39:13" pos:end="39:19">src_end</name> <operator pos:start="39:21" pos:end="39:21">-</operator> <name pos:start="39:23" pos:end="39:25">src</name> <operator pos:start="39:27" pos:end="39:27">&lt;</operator> <literal type="number" pos:start="39:29" pos:end="39:29">2</literal> <operator pos:start="39:31" pos:end="39:32">||</operator> <name pos:start="39:34" pos:end="39:42">frame_end</name> <operator pos:start="39:44" pos:end="39:44">-</operator> <name pos:start="39:46" pos:end="39:50">frame</name> <operator pos:start="39:52" pos:end="39:52">&lt;</operator> <literal type="number" pos:start="39:54" pos:end="39:54">2</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:22"><block_content pos:start="41:13" pos:end="41:22">

            <return pos:start="41:13" pos:end="41:22">return <expr pos:start="41:20" pos:end="41:21"><operator pos:start="41:20" pos:end="41:20">-</operator><literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="65:9"><if pos:start="43:9" pos:end="59:9">if <condition pos:start="43:12" pos:end="43:26">(<expr pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:18">bitbuf</name> <operator pos:start="43:20" pos:end="43:20">&amp;</operator> <name pos:start="43:22" pos:end="43:25">mask</name></expr>)</condition> <block pos:start="43:28" pos:end="59:9">{<block_content pos:start="45:13" pos:end="57:27">

            <expr_stmt pos:start="45:13" pos:end="45:42"><expr pos:start="45:13" pos:end="45:41"><name pos:start="45:13" pos:end="45:13">v</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:41"><name pos:start="45:17" pos:end="45:35">bytestream_get_le16</name><argument_list pos:start="45:36" pos:end="45:41">(<argument pos:start="45:37" pos:end="45:40"><expr pos:start="45:37" pos:end="45:40"><operator pos:start="45:37" pos:end="45:37">&amp;</operator><name pos:start="45:38" pos:end="45:40">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:39"><expr pos:start="47:13" pos:end="47:38"><name pos:start="47:13" pos:end="47:18">offset</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <operator pos:start="47:22" pos:end="47:22">(</operator><name pos:start="47:23" pos:end="47:23">v</name> <operator pos:start="47:25" pos:end="47:25">&amp;</operator> <literal type="number" pos:start="47:27" pos:end="47:32">0x1FFF</literal><operator pos:start="47:33" pos:end="47:33">)</operator> <operator pos:start="47:35" pos:end="47:36">&lt;&lt;</operator> <literal type="number" pos:start="47:38" pos:end="47:38">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:41"><expr pos:start="49:13" pos:end="49:40"><name pos:start="49:13" pos:end="49:17">count</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <operator pos:start="49:21" pos:end="49:21">(</operator><operator pos:start="49:22" pos:end="49:22">(</operator><name pos:start="49:23" pos:end="49:23">v</name> <operator pos:start="49:25" pos:end="49:26">&gt;&gt;</operator> <literal type="number" pos:start="49:28" pos:end="49:29">13</literal><operator pos:start="49:30" pos:end="49:30">)</operator> <operator pos:start="49:32" pos:end="49:32">+</operator> <literal type="number" pos:start="49:34" pos:end="49:34">2</literal><operator pos:start="49:35" pos:end="49:35">)</operator> <operator pos:start="49:37" pos:end="49:38">&lt;&lt;</operator> <literal type="number" pos:start="49:40" pos:end="49:40">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="53:26"><if pos:start="51:13" pos:end="53:26">if <condition pos:start="51:16" pos:end="51:74">(<expr pos:start="51:17" pos:end="51:73"><name pos:start="51:17" pos:end="51:21">frame</name> <operator pos:start="51:23" pos:end="51:23">-</operator> <name pos:start="51:25" pos:end="51:35">frame_start</name> <operator pos:start="51:37" pos:end="51:37">&lt;</operator> <name pos:start="51:39" pos:end="51:44">offset</name> <operator pos:start="51:46" pos:end="51:47">||</operator> <name pos:start="51:49" pos:end="51:57">frame_end</name> <operator pos:start="51:59" pos:end="51:59">-</operator> <name pos:start="51:61" pos:end="51:65">frame</name> <operator pos:start="51:67" pos:end="51:67">&lt;</operator> <name pos:start="51:69" pos:end="51:73">count</name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:26"><block_content pos:start="53:17" pos:end="53:26">

                <return pos:start="53:17" pos:end="53:26">return <expr pos:start="53:24" pos:end="53:25"><operator pos:start="53:24" pos:end="53:24">-</operator><literal type="number" pos:start="53:25" pos:end="53:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:52"><expr pos:start="55:13" pos:end="55:51"><call pos:start="55:13" pos:end="55:51"><name pos:start="55:13" pos:end="55:29">av_memcpy_backptr</name><argument_list pos:start="55:30" pos:end="55:51">(<argument pos:start="55:31" pos:end="55:35"><expr pos:start="55:31" pos:end="55:35"><name pos:start="55:31" pos:end="55:35">frame</name></expr></argument>, <argument pos:start="55:38" pos:end="55:43"><expr pos:start="55:38" pos:end="55:43"><name pos:start="55:38" pos:end="55:43">offset</name></expr></argument>, <argument pos:start="55:46" pos:end="55:50"><expr pos:start="55:46" pos:end="55:50"><name pos:start="55:46" pos:end="55:50">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:27"><expr pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:17">frame</name> <operator pos:start="57:19" pos:end="57:20">+=</operator> <name pos:start="57:22" pos:end="57:26">count</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="65:9">else <block pos:start="59:16" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:30">

            <expr_stmt pos:start="61:13" pos:end="61:30"><expr pos:start="61:13" pos:end="61:29"><operator pos:start="61:13" pos:end="61:13">*</operator><name pos:start="61:14" pos:end="61:18">frame</name><operator pos:start="61:19" pos:end="61:20">++</operator> <operator pos:start="61:22" pos:end="61:22">=</operator> <operator pos:start="61:24" pos:end="61:24">*</operator><name pos:start="61:25" pos:end="61:27">src</name><operator pos:start="61:28" pos:end="61:29">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:30"><expr pos:start="63:13" pos:end="63:29"><operator pos:start="63:13" pos:end="63:13">*</operator><name pos:start="63:14" pos:end="63:18">frame</name><operator pos:start="63:19" pos:end="63:20">++</operator> <operator pos:start="63:22" pos:end="63:22">=</operator> <operator pos:start="63:24" pos:end="63:24">*</operator><name pos:start="63:25" pos:end="63:27">src</name><operator pos:start="63:28" pos:end="63:29">++</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:19"><expr pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:12">mask</name> <operator pos:start="67:14" pos:end="67:16">&lt;&lt;=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
