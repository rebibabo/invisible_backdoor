<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3868.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">av_samples_get_buffer_size</name><parameter_list pos:start="1:31" pos:end="3:73">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:34">int</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:44">linesize</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:61">nb_channels</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:77">nb_samples</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:61"><decl pos:start="3:32" pos:end="3:61"><type pos:start="3:32" pos:end="3:61"><name pos:start="3:32" pos:end="3:50"><name pos:start="3:32" pos:end="3:35">enum</name> <name pos:start="3:37" pos:end="3:50">AVSampleFormat</name></name></type> <name pos:start="3:52" pos:end="3:61">sample_fmt</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:72"><decl pos:start="3:64" pos:end="3:72"><type pos:start="3:64" pos:end="3:72"><name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:72">align</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:56">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">line_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">sample_size</name> <init pos:start="9:21" pos:end="9:57">= <expr pos:start="9:23" pos:end="9:57"><call pos:start="9:23" pos:end="9:57"><name pos:start="9:23" pos:end="9:45">av_get_bytes_per_sample</name><argument_list pos:start="9:46" pos:end="9:57">(<argument pos:start="9:47" pos:end="9:56"><expr pos:start="9:47" pos:end="9:56"><name pos:start="9:47" pos:end="9:56">sample_fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:58"><decl pos:start="11:5" pos:end="11:57"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">planar</name>      <init pos:start="11:21" pos:end="11:57">= <expr pos:start="11:23" pos:end="11:57"><call pos:start="11:23" pos:end="11:57"><name pos:start="11:23" pos:end="11:45">av_sample_fmt_is_planar</name><argument_list pos:start="11:46" pos:end="11:57">(<argument pos:start="11:47" pos:end="11:56"><expr pos:start="11:47" pos:end="11:56"><name pos:start="11:47" pos:end="11:56">sample_fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:35">/* validate parameter ranges */</comment>

    <if_stmt pos:start="17:5" pos:end="32:5"><if pos:start="17:5" pos:end="32:5">if <condition pos:start="17:8" pos:end="17:60">(<expr pos:start="17:9" pos:end="17:59"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:20">sample_size</name> <operator pos:start="17:22" pos:end="17:23">||</operator> <name pos:start="17:25" pos:end="17:34">nb_samples</name> <operator pos:start="17:36" pos:end="17:37">&lt;=</operator> <literal type="number" pos:start="17:39" pos:end="17:39">0</literal> <operator pos:start="17:41" pos:end="17:42">||</operator> <name pos:start="17:44" pos:end="17:54">nb_channels</name> <operator pos:start="17:56" pos:end="17:57">&lt;=</operator> <literal type="number" pos:start="17:59" pos:end="17:59">0</literal></expr>)</condition><block type="pseudo" pos:start="24:5" pos:end="32:5"><block_content pos:start="24:5" pos:end="32:5">




    <comment type="block" pos:start="22:5" pos:end="22:48">/* auto-select alignment if not specified */</comment>

    <if_stmt pos:start="24:5" pos:end="32:5"><if pos:start="24:5" pos:end="32:5">if <condition pos:start="24:8" pos:end="24:15">(<expr pos:start="24:9" pos:end="24:14"><operator pos:start="24:9" pos:end="24:9">!</operator><name pos:start="24:10" pos:end="24:14">align</name></expr>)</condition> <block pos:start="24:17" pos:end="32:5">{<block_content pos:start="28:9" pos:end="30:45">



        <expr_stmt pos:start="28:9" pos:end="28:18"><expr pos:start="28:9" pos:end="28:17"><name pos:start="28:9" pos:end="28:13">align</name> <operator pos:start="28:15" pos:end="28:15">=</operator> <literal type="number" pos:start="28:17" pos:end="28:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="30:9" pos:end="30:45"><expr pos:start="30:9" pos:end="30:44"><name pos:start="30:9" pos:end="30:18">nb_samples</name> <operator pos:start="30:20" pos:end="30:20">=</operator> <call pos:start="30:22" pos:end="30:44"><name pos:start="30:22" pos:end="30:28">FFALIGN</name><argument_list pos:start="30:29" pos:end="30:44">(<argument pos:start="30:30" pos:end="30:39"><expr pos:start="30:30" pos:end="30:39"><name pos:start="30:30" pos:end="30:39">nb_samples</name></expr></argument>, <argument pos:start="30:42" pos:end="30:43"><expr pos:start="30:42" pos:end="30:43"><literal type="number" pos:start="30:42" pos:end="30:43">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="36:5" pos:end="36:36">/* check for integer overflow */</comment>

    <if_stmt pos:start="38:5" pos:end="47:80"><if pos:start="38:5" pos:end="47:80">if <condition pos:start="38:8" pos:end="40:92">(<expr pos:start="38:9" pos:end="40:91"><name pos:start="38:9" pos:end="38:19">nb_channels</name> <operator pos:start="38:21" pos:end="38:21">&gt;</operator> <name pos:start="38:23" pos:end="38:29">INT_MAX</name> <operator pos:start="38:31" pos:end="38:31">/</operator> <name pos:start="38:33" pos:end="38:37">align</name> <operator pos:start="38:39" pos:end="38:40">||</operator>

        <operator pos:start="40:9" pos:end="40:9">(</operator><name pos:start="40:10" pos:end="40:16">int64_t</name><operator pos:start="40:17" pos:end="40:17">)</operator><name pos:start="40:18" pos:end="40:28">nb_channels</name> <operator pos:start="40:30" pos:end="40:30">*</operator> <name pos:start="40:32" pos:end="40:41">nb_samples</name> <operator pos:start="40:43" pos:end="40:43">&gt;</operator> <operator pos:start="40:45" pos:end="40:45">(</operator><name pos:start="40:46" pos:end="40:52">INT_MAX</name> <operator pos:start="40:54" pos:end="40:54">-</operator> <operator pos:start="40:56" pos:end="40:56">(</operator><name pos:start="40:57" pos:end="40:61">align</name> <operator pos:start="40:63" pos:end="40:63">*</operator> <name pos:start="40:65" pos:end="40:75">nb_channels</name><operator pos:start="40:76" pos:end="40:76">)</operator><operator pos:start="40:77" pos:end="40:77">)</operator> <operator pos:start="40:79" pos:end="40:79">/</operator> <name pos:start="40:81" pos:end="40:91">sample_size</name></expr>)</condition><block type="pseudo" pos:start="45:5" pos:end="47:80"><block_content pos:start="45:5" pos:end="47:80">




    <expr_stmt pos:start="45:5" pos:end="47:80"><expr pos:start="45:5" pos:end="47:79"><name pos:start="45:5" pos:end="45:13">line_size</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <ternary pos:start="45:17" pos:end="47:79"><condition pos:start="45:17" pos:end="45:24"><expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22">planar</name></expr> ?</condition><then pos:start="45:26" pos:end="45:79"> <expr pos:start="45:26" pos:end="45:79"><call pos:start="45:26" pos:end="45:79"><name pos:start="45:26" pos:end="45:32">FFALIGN</name><argument_list pos:start="45:33" pos:end="45:79">(<argument pos:start="45:34" pos:end="45:57"><expr pos:start="45:34" pos:end="45:57"><name pos:start="45:34" pos:end="45:43">nb_samples</name> <operator pos:start="45:45" pos:end="45:45">*</operator> <name pos:start="45:47" pos:end="45:57">sample_size</name></expr></argument>,               <argument pos:start="45:74" pos:end="45:78"><expr pos:start="45:74" pos:end="45:78"><name pos:start="45:74" pos:end="45:78">align</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="45:81" pos:end="47:79">:

                         <expr pos:start="47:26" pos:end="47:79"><call pos:start="47:26" pos:end="47:79"><name pos:start="47:26" pos:end="47:32">FFALIGN</name><argument_list pos:start="47:33" pos:end="47:79">(<argument pos:start="47:34" pos:end="47:71"><expr pos:start="47:34" pos:end="47:71"><name pos:start="47:34" pos:end="47:43">nb_samples</name> <operator pos:start="47:45" pos:end="47:45">*</operator> <name pos:start="47:47" pos:end="47:57">sample_size</name> <operator pos:start="47:59" pos:end="47:59">*</operator> <name pos:start="47:61" pos:end="47:71">nb_channels</name></expr></argument>, <argument pos:start="47:74" pos:end="47:78"><expr pos:start="47:74" pos:end="47:78"><name pos:start="47:74" pos:end="47:78">align</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="51:30"><if pos:start="49:5" pos:end="51:30">if <condition pos:start="49:8" pos:end="49:17">(<expr pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:16">linesize</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:30"><block_content pos:start="51:9" pos:end="51:30">

        <expr_stmt pos:start="51:9" pos:end="51:30"><expr pos:start="51:9" pos:end="51:29"><operator pos:start="51:9" pos:end="51:9">*</operator><name pos:start="51:10" pos:end="51:17">linesize</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:29">line_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="55:5" pos:end="55:56">return <expr pos:start="55:12" pos:end="55:55"><ternary pos:start="55:12" pos:end="55:55"><condition pos:start="55:12" pos:end="55:19"><expr pos:start="55:12" pos:end="55:17"><name pos:start="55:12" pos:end="55:17">planar</name></expr> ?</condition><then pos:start="55:21" pos:end="55:43"> <expr pos:start="55:21" pos:end="55:43"><name pos:start="55:21" pos:end="55:29">line_size</name> <operator pos:start="55:31" pos:end="55:31">*</operator> <name pos:start="55:33" pos:end="55:43">nb_channels</name></expr> </then><else pos:start="55:45" pos:end="55:55">: <expr pos:start="55:47" pos:end="55:55"><name pos:start="55:47" pos:end="55:55">line_size</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function></unit>
