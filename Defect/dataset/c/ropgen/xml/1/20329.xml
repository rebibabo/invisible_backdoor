<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20329.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">vhost_dev_init</name><parameter_list pos:start="1:19" pos:end="3:76">(<parameter pos:start="1:20" pos:end="1:41"><decl pos:start="1:20" pos:end="1:41"><type pos:start="1:20" pos:end="1:41"><name pos:start="1:20" pos:end="1:35"><name pos:start="1:20" pos:end="1:25">struct</name> <name pos:start="1:27" pos:end="1:35">vhost_dev</name></name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">hdev</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:47">void</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:55">opaque</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:48"><decl pos:start="3:20" pos:end="3:48"><type pos:start="3:20" pos:end="3:48"><name pos:start="3:20" pos:end="3:35">VhostBackendType</name></type> <name pos:start="3:37" pos:end="3:48">backend_type</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:75"><decl pos:start="3:51" pos:end="3:75"><type pos:start="3:51" pos:end="3:75"><name pos:start="3:51" pos:end="3:58">uint32_t</name></type> <name pos:start="3:60" pos:end="3:75">busyloop_timeout</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="215:1">{<block_content pos:start="7:5" pos:end="213:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:21">features</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:8">hdev</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:27">migration_blocker</name></name> <operator pos:start="13:29" pos:end="13:29">=</operator> <name pos:start="13:31" pos:end="13:34">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:51"><expr pos:start="17:5" pos:end="17:50"><name pos:start="17:5" pos:end="17:5">r</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <call pos:start="17:9" pos:end="17:50"><name pos:start="17:9" pos:end="17:30">vhost_set_backend_type</name><argument_list pos:start="17:31" pos:end="17:50">(<argument pos:start="17:32" pos:end="17:35"><expr pos:start="17:32" pos:end="17:35"><name pos:start="17:32" pos:end="17:35">hdev</name></expr></argument>, <argument pos:start="17:38" pos:end="17:49"><expr pos:start="17:38" pos:end="17:49"><name pos:start="17:38" pos:end="17:49">backend_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><call pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:18">(<argument pos:start="19:12" pos:end="19:17"><expr pos:start="19:12" pos:end="19:17"><name pos:start="19:12" pos:end="19:12">r</name> <operator pos:start="19:14" pos:end="19:15">&gt;=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:58"><expr pos:start="23:5" pos:end="23:57"><name pos:start="23:5" pos:end="23:5">r</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:57"><name pos:start="23:9" pos:end="23:43"><name pos:start="23:9" pos:end="23:12">hdev</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:23">vhost_ops</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:43">vhost_backend_init</name></name><argument_list pos:start="23:44" pos:end="23:57">(<argument pos:start="23:45" pos:end="23:48"><expr pos:start="23:45" pos:end="23:48"><name pos:start="23:45" pos:end="23:48">hdev</name></expr></argument>, <argument pos:start="23:51" pos:end="23:56"><expr pos:start="23:51" pos:end="23:56"><name pos:start="23:51" pos:end="23:56">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:14">(<expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">r</name> <operator pos:start="25:11" pos:end="25:11">&lt;</operator> <literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr>)</condition> <block pos:start="25:16" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <goto pos:start="27:9" pos:end="27:18">goto <name pos:start="27:14" pos:end="27:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:76">(<expr pos:start="33:9" pos:end="33:75"><name pos:start="33:9" pos:end="33:21">used_memslots</name> <operator pos:start="33:23" pos:end="33:23">&gt;</operator> <call pos:start="33:25" pos:end="33:75"><name pos:start="33:25" pos:end="33:69"><name pos:start="33:25" pos:end="33:28">hdev</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:39">vhost_ops</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:69">vhost_backend_memslots_limit</name></name><argument_list pos:start="33:70" pos:end="33:75">(<argument pos:start="33:71" pos:end="33:74"><expr pos:start="33:71" pos:end="33:74"><name pos:start="33:71" pos:end="33:74">hdev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:78" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:18">

        <expr_stmt pos:start="35:9" pos:end="37:66"><expr pos:start="35:9" pos:end="37:65"><call pos:start="35:9" pos:end="37:65"><name pos:start="35:9" pos:end="35:15">fprintf</name><argument_list pos:start="35:16" pos:end="37:65">(<argument pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22">stderr</name></expr></argument>, <argument pos:start="35:25" pos:end="37:64"><expr pos:start="35:25" pos:end="37:64"><literal type="string" pos:start="35:25" pos:end="35:66">"vhost backend memory slots limit is less"</literal>

                <literal type="string" pos:start="37:17" pos:end="37:64">" than current number of present memory slots\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:15"><expr pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:9">r</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <operator pos:start="39:13" pos:end="39:13">-</operator><literal type="number" pos:start="39:14" pos:end="39:14">1</literal></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:18">goto <name pos:start="41:14" pos:end="41:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:51"><expr pos:start="45:5" pos:end="45:50"><call pos:start="45:5" pos:end="45:50"><name pos:start="45:5" pos:end="45:21">QLIST_INSERT_HEAD</name><argument_list pos:start="45:22" pos:end="45:50">(<argument pos:start="45:23" pos:end="45:36"><expr pos:start="45:23" pos:end="45:36"><operator pos:start="45:23" pos:end="45:23">&amp;</operator><name pos:start="45:24" pos:end="45:36">vhost_devices</name></expr></argument>, <argument pos:start="45:39" pos:end="45:42"><expr pos:start="45:39" pos:end="45:42"><name pos:start="45:39" pos:end="45:42">hdev</name></expr></argument>, <argument pos:start="45:45" pos:end="45:49"><expr pos:start="45:45" pos:end="45:49"><name pos:start="45:45" pos:end="45:49">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:47"><expr pos:start="49:5" pos:end="49:46"><name pos:start="49:5" pos:end="49:5">r</name> <operator pos:start="49:7" pos:end="49:7">=</operator> <call pos:start="49:9" pos:end="49:46"><name pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:12">hdev</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:23">vhost_ops</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:40">vhost_set_owner</name></name><argument_list pos:start="49:41" pos:end="49:46">(<argument pos:start="49:42" pos:end="49:45"><expr pos:start="49:42" pos:end="49:45"><name pos:start="49:42" pos:end="49:45">hdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:14">(<expr pos:start="51:9" pos:end="51:13"><name pos:start="51:9" pos:end="51:9">r</name> <operator pos:start="51:11" pos:end="51:11">&lt;</operator> <literal type="number" pos:start="51:13" pos:end="51:13">0</literal></expr>)</condition> <block pos:start="51:16" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:18">

        <goto pos:start="53:9" pos:end="53:18">goto <name pos:start="53:14" pos:end="53:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:61"><expr pos:start="59:5" pos:end="59:60"><name pos:start="59:5" pos:end="59:5">r</name> <operator pos:start="59:7" pos:end="59:7">=</operator> <call pos:start="59:9" pos:end="59:60"><name pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:12">hdev</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:23">vhost_ops</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:43">vhost_get_features</name></name><argument_list pos:start="59:44" pos:end="59:60">(<argument pos:start="59:45" pos:end="59:48"><expr pos:start="59:45" pos:end="59:48"><name pos:start="59:45" pos:end="59:48">hdev</name></expr></argument>, <argument pos:start="59:51" pos:end="59:59"><expr pos:start="59:51" pos:end="59:59"><operator pos:start="59:51" pos:end="59:51">&amp;</operator><name pos:start="59:52" pos:end="59:59">features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:14">(<expr pos:start="61:9" pos:end="61:13"><name pos:start="61:9" pos:end="61:9">r</name> <operator pos:start="61:11" pos:end="61:11">&lt;</operator> <literal type="number" pos:start="61:13" pos:end="61:13">0</literal></expr>)</condition> <block pos:start="61:16" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:18">

        <goto pos:start="63:9" pos:end="63:18">goto <name pos:start="63:14" pos:end="63:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="69:5" pos:end="79:5">for <control pos:start="69:9" pos:end="69:36">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">i</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:31"><expr pos:start="69:17" pos:end="69:30"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <name pos:start="69:21" pos:end="69:30"><name pos:start="69:21" pos:end="69:24">hdev</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:30">nvqs</name></name></expr>;</condition> <incr pos:start="69:33" pos:end="69:35"><expr pos:start="69:33" pos:end="69:35"><operator pos:start="69:33" pos:end="69:34">++</operator><name pos:start="69:35" pos:end="69:35">i</name></expr></incr>)</control> <block pos:start="69:38" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:9">

        <expr_stmt pos:start="71:9" pos:end="71:74"><expr pos:start="71:9" pos:end="71:73"><name pos:start="71:9" pos:end="71:9">r</name> <operator pos:start="71:11" pos:end="71:11">=</operator> <call pos:start="71:13" pos:end="71:73"><name pos:start="71:13" pos:end="71:32">vhost_virtqueue_init</name><argument_list pos:start="71:33" pos:end="71:73">(<argument pos:start="71:34" pos:end="71:37"><expr pos:start="71:34" pos:end="71:37"><name pos:start="71:34" pos:end="71:37">hdev</name></expr></argument>, <argument pos:start="71:40" pos:end="71:52"><expr pos:start="71:40" pos:end="71:52"><name pos:start="71:40" pos:end="71:48"><name pos:start="71:40" pos:end="71:43">hdev</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:48">vqs</name></name> <operator pos:start="71:50" pos:end="71:50">+</operator> <name pos:start="71:52" pos:end="71:52">i</name></expr></argument>, <argument pos:start="71:55" pos:end="71:72"><expr pos:start="71:55" pos:end="71:72"><name pos:start="71:55" pos:end="71:68"><name pos:start="71:55" pos:end="71:58">hdev</name><operator pos:start="71:59" pos:end="71:60">-&gt;</operator><name pos:start="71:61" pos:end="71:68">vq_index</name></name> <operator pos:start="71:70" pos:end="71:70">+</operator> <name pos:start="71:72" pos:end="71:72">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:18">(<expr pos:start="73:13" pos:end="73:17"><name pos:start="73:13" pos:end="73:13">r</name> <operator pos:start="73:15" pos:end="73:15">&lt;</operator> <literal type="number" pos:start="73:17" pos:end="73:17">0</literal></expr>)</condition> <block pos:start="73:20" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:25">

            <goto pos:start="75:13" pos:end="75:25">goto <name pos:start="75:18" pos:end="75:24">fail_vq</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="83:5" pos:end="99:5"><if pos:start="83:5" pos:end="99:5">if <condition pos:start="83:8" pos:end="83:25">(<expr pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:24">busyloop_timeout</name></expr>)</condition> <block pos:start="83:27" pos:end="99:5">{<block_content pos:start="85:9" pos:end="97:9">

        <for pos:start="85:9" pos:end="97:9">for <control pos:start="85:13" pos:end="85:40">(<init pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:14">i</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>;</init> <condition pos:start="85:21" pos:end="85:35"><expr pos:start="85:21" pos:end="85:34"><name pos:start="85:21" pos:end="85:21">i</name> <operator pos:start="85:23" pos:end="85:23">&lt;</operator> <name pos:start="85:25" pos:end="85:34"><name pos:start="85:25" pos:end="85:28">hdev</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:34">nvqs</name></name></expr>;</condition> <incr pos:start="85:37" pos:end="85:39"><expr pos:start="85:37" pos:end="85:39"><operator pos:start="85:37" pos:end="85:38">++</operator><name pos:start="85:39" pos:end="85:39">i</name></expr></incr>)</control> <block pos:start="85:42" pos:end="97:9">{<block_content pos:start="87:13" pos:end="95:13">

            <expr_stmt pos:start="87:13" pos:end="89:71"><expr pos:start="87:13" pos:end="89:70"><name pos:start="87:13" pos:end="87:13">r</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <call pos:start="87:17" pos:end="89:70"><name pos:start="87:17" pos:end="87:52">vhost_virtqueue_set_busyloop_timeout</name><argument_list pos:start="87:53" pos:end="89:70">(<argument pos:start="87:54" pos:end="87:57"><expr pos:start="87:54" pos:end="87:57"><name pos:start="87:54" pos:end="87:57">hdev</name></expr></argument>, <argument pos:start="87:60" pos:end="87:77"><expr pos:start="87:60" pos:end="87:77"><name pos:start="87:60" pos:end="87:73"><name pos:start="87:60" pos:end="87:63">hdev</name><operator pos:start="87:64" pos:end="87:65">-&gt;</operator><name pos:start="87:66" pos:end="87:73">vq_index</name></name> <operator pos:start="87:75" pos:end="87:75">+</operator> <name pos:start="87:77" pos:end="87:77">i</name></expr></argument>,

                                                     <argument pos:start="89:54" pos:end="89:69"><expr pos:start="89:54" pos:end="89:69"><name pos:start="89:54" pos:end="89:69">busyloop_timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="95:13"><if pos:start="91:13" pos:end="95:13">if <condition pos:start="91:16" pos:end="91:22">(<expr pos:start="91:17" pos:end="91:21"><name pos:start="91:17" pos:end="91:17">r</name> <operator pos:start="91:19" pos:end="91:19">&lt;</operator> <literal type="number" pos:start="91:21" pos:end="91:21">0</literal></expr>)</condition> <block pos:start="91:24" pos:end="95:13">{<block_content pos:start="93:17" pos:end="93:35">

                <goto pos:start="93:17" pos:end="93:35">goto <name pos:start="93:22" pos:end="93:34">fail_busyloop</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:30"><expr pos:start="103:5" pos:end="103:29"><name pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:8">hdev</name><operator pos:start="103:9" pos:end="103:10">-&gt;</operator><name pos:start="103:11" pos:end="103:18">features</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:29">features</name></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="135:6"><expr pos:start="107:5" pos:end="135:5"><name pos:start="107:5" pos:end="107:25"><name pos:start="107:5" pos:end="107:8">hdev</name><operator pos:start="107:9" pos:end="107:10">-&gt;</operator><name pos:start="107:11" pos:end="107:25">memory_listener</name></name> <operator pos:start="107:27" pos:end="107:27">=</operator> <operator pos:start="107:29" pos:end="107:29">(</operator><name pos:start="107:30" pos:end="107:43">MemoryListener</name><operator pos:start="107:44" pos:end="107:44">)</operator> <block pos:start="107:46" pos:end="135:5">{

        <expr pos:start="109:9" pos:end="109:28"><operator pos:start="109:9" pos:end="109:9">.</operator><name pos:start="109:10" pos:end="109:14">begin</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <name pos:start="109:18" pos:end="109:28">vhost_begin</name></expr>,

        <expr pos:start="111:9" pos:end="111:30"><operator pos:start="111:9" pos:end="111:9">.</operator><name pos:start="111:10" pos:end="111:15">commit</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <name pos:start="111:19" pos:end="111:30">vhost_commit</name></expr>,

        <expr pos:start="113:9" pos:end="113:38"><operator pos:start="113:9" pos:end="113:9">.</operator><name pos:start="113:10" pos:end="113:19">region_add</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <name pos:start="113:23" pos:end="113:38">vhost_region_add</name></expr>,

        <expr pos:start="115:9" pos:end="115:38"><operator pos:start="115:9" pos:end="115:9">.</operator><name pos:start="115:10" pos:end="115:19">region_del</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <name pos:start="115:23" pos:end="115:38">vhost_region_del</name></expr>,

        <expr pos:start="117:9" pos:end="117:38"><operator pos:start="117:9" pos:end="117:9">.</operator><name pos:start="117:10" pos:end="117:19">region_nop</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <name pos:start="117:23" pos:end="117:38">vhost_region_nop</name></expr>,

        <expr pos:start="119:9" pos:end="119:36"><operator pos:start="119:9" pos:end="119:9">.</operator><name pos:start="119:10" pos:end="119:18">log_start</name> <operator pos:start="119:20" pos:end="119:20">=</operator> <name pos:start="119:22" pos:end="119:36">vhost_log_start</name></expr>,

        <expr pos:start="121:9" pos:end="121:34"><operator pos:start="121:9" pos:end="121:9">.</operator><name pos:start="121:10" pos:end="121:17">log_stop</name> <operator pos:start="121:19" pos:end="121:19">=</operator> <name pos:start="121:21" pos:end="121:34">vhost_log_stop</name></expr>,

        <expr pos:start="123:9" pos:end="123:34"><operator pos:start="123:9" pos:end="123:9">.</operator><name pos:start="123:10" pos:end="123:17">log_sync</name> <operator pos:start="123:19" pos:end="123:19">=</operator> <name pos:start="123:21" pos:end="123:34">vhost_log_sync</name></expr>,

        <expr pos:start="125:9" pos:end="125:50"><operator pos:start="125:9" pos:end="125:9">.</operator><name pos:start="125:10" pos:end="125:25">log_global_start</name> <operator pos:start="125:27" pos:end="125:27">=</operator> <name pos:start="125:29" pos:end="125:50">vhost_log_global_start</name></expr>,

        <expr pos:start="127:9" pos:end="127:48"><operator pos:start="127:9" pos:end="127:9">.</operator><name pos:start="127:10" pos:end="127:24">log_global_stop</name> <operator pos:start="127:26" pos:end="127:26">=</operator> <name pos:start="127:28" pos:end="127:48">vhost_log_global_stop</name></expr>,

        <expr pos:start="129:9" pos:end="129:40"><operator pos:start="129:9" pos:end="129:9">.</operator><name pos:start="129:10" pos:end="129:20">eventfd_add</name> <operator pos:start="129:22" pos:end="129:22">=</operator> <name pos:start="129:24" pos:end="129:40">vhost_eventfd_add</name></expr>,

        <expr pos:start="131:9" pos:end="131:40"><operator pos:start="131:9" pos:end="131:9">.</operator><name pos:start="131:10" pos:end="131:20">eventfd_del</name> <operator pos:start="131:22" pos:end="131:22">=</operator> <name pos:start="131:24" pos:end="131:40">vhost_eventfd_del</name></expr>,

        <expr pos:start="133:9" pos:end="133:22"><operator pos:start="133:9" pos:end="133:9">.</operator><name pos:start="133:10" pos:end="133:17">priority</name> <operator pos:start="133:19" pos:end="133:19">=</operator> <literal type="number" pos:start="133:21" pos:end="133:22">10</literal></expr>

    }</block></expr>;</expr_stmt>



    <if_stmt pos:start="139:5" pos:end="155:5"><if pos:start="139:5" pos:end="155:5">if <condition pos:start="139:8" pos:end="139:40">(<expr pos:start="139:9" pos:end="139:39"><name pos:start="139:9" pos:end="139:31"><name pos:start="139:9" pos:end="139:12">hdev</name><operator pos:start="139:13" pos:end="139:14">-&gt;</operator><name pos:start="139:15" pos:end="139:31">migration_blocker</name></name> <operator pos:start="139:33" pos:end="139:34">==</operator> <name pos:start="139:36" pos:end="139:39">NULL</name></expr>)</condition> <block pos:start="139:42" pos:end="155:5">{<block_content pos:start="141:9" pos:end="153:9">

        <if_stmt pos:start="141:9" pos:end="153:9"><if pos:start="141:9" pos:end="147:9">if <condition pos:start="141:12" pos:end="141:60">(<expr pos:start="141:13" pos:end="141:59"><operator pos:start="141:13" pos:end="141:13">!</operator><operator pos:start="141:14" pos:end="141:14">(</operator><name pos:start="141:15" pos:end="141:28"><name pos:start="141:15" pos:end="141:18">hdev</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:28">features</name></name> <operator pos:start="141:30" pos:end="141:30">&amp;</operator> <operator pos:start="141:32" pos:end="141:32">(</operator><literal type="number" pos:start="141:33" pos:end="141:38">0x1ULL</literal> <operator pos:start="141:40" pos:end="141:41">&lt;&lt;</operator> <name pos:start="141:43" pos:end="141:57">VHOST_F_LOG_ALL</name><operator pos:start="141:58" pos:end="141:58">)</operator><operator pos:start="141:59" pos:end="141:59">)</operator></expr>)</condition> <block pos:start="141:62" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:83">

            <expr_stmt pos:start="143:13" pos:end="145:83"><expr pos:start="143:13" pos:end="145:82"><call pos:start="143:13" pos:end="145:82"><name pos:start="143:13" pos:end="143:22">error_setg</name><argument_list pos:start="143:23" pos:end="145:82">(<argument pos:start="143:24" pos:end="143:47"><expr pos:start="143:24" pos:end="143:47"><operator pos:start="143:24" pos:end="143:24">&amp;</operator><name pos:start="143:25" pos:end="143:47"><name pos:start="143:25" pos:end="143:28">hdev</name><operator pos:start="143:29" pos:end="143:30">-&gt;</operator><name pos:start="143:31" pos:end="143:47">migration_blocker</name></name></expr></argument>,

                       <argument pos:start="145:24" pos:end="145:81"><expr pos:start="145:24" pos:end="145:81"><literal type="string" pos:start="145:24" pos:end="145:81">"Migration disabled: vhost lacks VHOST_F_LOG_ALL feature."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="147:11" pos:end="153:9">else if <condition pos:start="147:19" pos:end="147:39">(<expr pos:start="147:20" pos:end="147:38"><operator pos:start="147:20" pos:end="147:20">!</operator><call pos:start="147:21" pos:end="147:38"><name pos:start="147:21" pos:end="147:36">qemu_memfd_check</name><argument_list pos:start="147:37" pos:end="147:38">()</argument_list></call></expr>)</condition> <block pos:start="147:41" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:79">

            <expr_stmt pos:start="149:13" pos:end="151:79"><expr pos:start="149:13" pos:end="151:78"><call pos:start="149:13" pos:end="151:78"><name pos:start="149:13" pos:end="149:22">error_setg</name><argument_list pos:start="149:23" pos:end="151:78">(<argument pos:start="149:24" pos:end="149:47"><expr pos:start="149:24" pos:end="149:47"><operator pos:start="149:24" pos:end="149:24">&amp;</operator><name pos:start="149:25" pos:end="149:47"><name pos:start="149:25" pos:end="149:28">hdev</name><operator pos:start="149:29" pos:end="149:30">-&gt;</operator><name pos:start="149:31" pos:end="149:47">migration_blocker</name></name></expr></argument>,

                       <argument pos:start="151:24" pos:end="151:77"><expr pos:start="151:24" pos:end="151:77"><literal type="string" pos:start="151:24" pos:end="151:77">"Migration disabled: failed to allocate shared memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="159:5" pos:end="163:5"><if pos:start="159:5" pos:end="163:5">if <condition pos:start="159:8" pos:end="159:40">(<expr pos:start="159:9" pos:end="159:39"><name pos:start="159:9" pos:end="159:31"><name pos:start="159:9" pos:end="159:12">hdev</name><operator pos:start="159:13" pos:end="159:14">-&gt;</operator><name pos:start="159:15" pos:end="159:31">migration_blocker</name></name> <operator pos:start="159:33" pos:end="159:34">!=</operator> <name pos:start="159:36" pos:end="159:39">NULL</name></expr>)</condition> <block pos:start="159:42" pos:end="163:5">{<block_content pos:start="161:9" pos:end="161:53">

        <expr_stmt pos:start="161:9" pos:end="161:53"><expr pos:start="161:9" pos:end="161:52"><call pos:start="161:9" pos:end="161:52"><name pos:start="161:9" pos:end="161:27">migrate_add_blocker</name><argument_list pos:start="161:28" pos:end="161:52">(<argument pos:start="161:29" pos:end="161:51"><expr pos:start="161:29" pos:end="161:51"><name pos:start="161:29" pos:end="161:51"><name pos:start="161:29" pos:end="161:32">hdev</name><operator pos:start="161:33" pos:end="161:34">-&gt;</operator><name pos:start="161:35" pos:end="161:51">migration_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:66"><expr pos:start="167:5" pos:end="167:65"><name pos:start="167:5" pos:end="167:13"><name pos:start="167:5" pos:end="167:8">hdev</name><operator pos:start="167:9" pos:end="167:10">-&gt;</operator><name pos:start="167:11" pos:end="167:13">mem</name></name> <operator pos:start="167:15" pos:end="167:15">=</operator> <call pos:start="167:17" pos:end="167:65"><name pos:start="167:17" pos:end="167:25">g_malloc0</name><argument_list pos:start="167:26" pos:end="167:65">(<argument pos:start="167:27" pos:end="167:64"><expr pos:start="167:27" pos:end="167:64"><call pos:start="167:27" pos:end="167:64"><name pos:start="167:27" pos:end="167:34">offsetof</name><argument_list pos:start="167:35" pos:end="167:64">(<argument pos:start="167:36" pos:end="167:54"><expr pos:start="167:36" pos:end="167:54">struct <name pos:start="167:43" pos:end="167:54">vhost_memory</name></expr></argument>, <argument pos:start="167:57" pos:end="167:63"><expr pos:start="167:57" pos:end="167:63"><name pos:start="167:57" pos:end="167:63">regions</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:29"><expr pos:start="169:5" pos:end="169:28"><name pos:start="169:5" pos:end="169:24"><name pos:start="169:5" pos:end="169:8">hdev</name><operator pos:start="169:9" pos:end="169:10">-&gt;</operator><name pos:start="169:11" pos:end="169:24">n_mem_sections</name></name> <operator pos:start="169:26" pos:end="169:26">=</operator> <literal type="number" pos:start="169:28" pos:end="169:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:30"><expr pos:start="171:5" pos:end="171:29"><name pos:start="171:5" pos:end="171:22"><name pos:start="171:5" pos:end="171:8">hdev</name><operator pos:start="171:9" pos:end="171:10">-&gt;</operator><name pos:start="171:11" pos:end="171:22">mem_sections</name></name> <operator pos:start="171:24" pos:end="171:24">=</operator> <name pos:start="171:26" pos:end="171:29">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:21"><expr pos:start="173:5" pos:end="173:20"><name pos:start="173:5" pos:end="173:13"><name pos:start="173:5" pos:end="173:8">hdev</name><operator pos:start="173:9" pos:end="173:10">-&gt;</operator><name pos:start="173:11" pos:end="173:13">log</name></name> <operator pos:start="173:15" pos:end="173:15">=</operator> <name pos:start="173:17" pos:end="173:20">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:23"><expr pos:start="175:5" pos:end="175:22"><name pos:start="175:5" pos:end="175:18"><name pos:start="175:5" pos:end="175:8">hdev</name><operator pos:start="175:9" pos:end="175:10">-&gt;</operator><name pos:start="175:11" pos:end="175:18">log_size</name></name> <operator pos:start="175:20" pos:end="175:20">=</operator> <literal type="number" pos:start="175:22" pos:end="175:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:30"><expr pos:start="177:5" pos:end="177:29"><name pos:start="177:5" pos:end="177:21"><name pos:start="177:5" pos:end="177:8">hdev</name><operator pos:start="177:9" pos:end="177:10">-&gt;</operator><name pos:start="177:11" pos:end="177:21">log_enabled</name></name> <operator pos:start="177:23" pos:end="177:23">=</operator> <name pos:start="177:25" pos:end="177:29">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:26"><expr pos:start="179:5" pos:end="179:25"><name pos:start="179:5" pos:end="179:17"><name pos:start="179:5" pos:end="179:8">hdev</name><operator pos:start="179:9" pos:end="179:10">-&gt;</operator><name pos:start="179:11" pos:end="179:17">started</name></name> <operator pos:start="179:19" pos:end="179:19">=</operator> <name pos:start="179:21" pos:end="179:25">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:33"><expr pos:start="181:5" pos:end="181:32"><name pos:start="181:5" pos:end="181:24"><name pos:start="181:5" pos:end="181:8">hdev</name><operator pos:start="181:9" pos:end="181:10">-&gt;</operator><name pos:start="181:11" pos:end="181:24">memory_changed</name></name> <operator pos:start="181:26" pos:end="181:26">=</operator> <name pos:start="181:28" pos:end="181:32">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:76"><expr pos:start="183:5" pos:end="183:75"><call pos:start="183:5" pos:end="183:75"><name pos:start="183:5" pos:end="183:28">memory_listener_register</name><argument_list pos:start="183:29" pos:end="183:75">(<argument pos:start="183:30" pos:end="183:51"><expr pos:start="183:30" pos:end="183:51"><operator pos:start="183:30" pos:end="183:30">&amp;</operator><name pos:start="183:31" pos:end="183:51"><name pos:start="183:31" pos:end="183:34">hdev</name><operator pos:start="183:35" pos:end="183:36">-&gt;</operator><name pos:start="183:37" pos:end="183:51">memory_listener</name></name></expr></argument>, <argument pos:start="183:54" pos:end="183:74"><expr pos:start="183:54" pos:end="183:74"><operator pos:start="183:54" pos:end="183:54">&amp;</operator><name pos:start="183:55" pos:end="183:74">address_space_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="185:5" pos:end="185:13">return <expr pos:start="185:12" pos:end="185:12"><literal type="number" pos:start="185:12" pos:end="185:12">0</literal></expr>;</return>

<label pos:start="187:1" pos:end="187:14"><name pos:start="187:1" pos:end="187:13">fail_busyloop</name>:</label>

    <while pos:start="189:5" pos:end="193:5">while <condition pos:start="189:11" pos:end="189:20">(<expr pos:start="189:12" pos:end="189:19"><operator pos:start="189:12" pos:end="189:13">--</operator><name pos:start="189:14" pos:end="189:14">i</name> <operator pos:start="189:16" pos:end="189:17">&gt;=</operator> <literal type="number" pos:start="189:19" pos:end="189:19">0</literal></expr>)</condition> <block pos:start="189:22" pos:end="193:5">{<block_content pos:start="191:9" pos:end="191:74">

        <expr_stmt pos:start="191:9" pos:end="191:74"><expr pos:start="191:9" pos:end="191:73"><call pos:start="191:9" pos:end="191:73"><name pos:start="191:9" pos:end="191:44">vhost_virtqueue_set_busyloop_timeout</name><argument_list pos:start="191:45" pos:end="191:73">(<argument pos:start="191:46" pos:end="191:49"><expr pos:start="191:46" pos:end="191:49"><name pos:start="191:46" pos:end="191:49">hdev</name></expr></argument>, <argument pos:start="191:52" pos:end="191:69"><expr pos:start="191:52" pos:end="191:69"><name pos:start="191:52" pos:end="191:65"><name pos:start="191:52" pos:end="191:55">hdev</name><operator pos:start="191:56" pos:end="191:57">-&gt;</operator><name pos:start="191:58" pos:end="191:65">vq_index</name></name> <operator pos:start="191:67" pos:end="191:67">+</operator> <name pos:start="191:69" pos:end="191:69">i</name></expr></argument>, <argument pos:start="191:72" pos:end="191:72"><expr pos:start="191:72" pos:end="191:72"><literal type="number" pos:start="191:72" pos:end="191:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="195:5" pos:end="195:19"><expr pos:start="195:5" pos:end="195:18"><name pos:start="195:5" pos:end="195:5">i</name> <operator pos:start="195:7" pos:end="195:7">=</operator> <name pos:start="195:9" pos:end="195:18"><name pos:start="195:9" pos:end="195:12">hdev</name><operator pos:start="195:13" pos:end="195:14">-&gt;</operator><name pos:start="195:15" pos:end="195:18">nvqs</name></name></expr>;</expr_stmt>

<label pos:start="197:1" pos:end="197:8"><name pos:start="197:1" pos:end="197:7">fail_vq</name>:</label>

    <while pos:start="199:5" pos:end="203:5">while <condition pos:start="199:11" pos:end="199:20">(<expr pos:start="199:12" pos:end="199:19"><operator pos:start="199:12" pos:end="199:13">--</operator><name pos:start="199:14" pos:end="199:14">i</name> <operator pos:start="199:16" pos:end="199:17">&gt;=</operator> <literal type="number" pos:start="199:19" pos:end="199:19">0</literal></expr>)</condition> <block pos:start="199:22" pos:end="203:5">{<block_content pos:start="201:9" pos:end="201:47">

        <expr_stmt pos:start="201:9" pos:end="201:47"><expr pos:start="201:9" pos:end="201:46"><call pos:start="201:9" pos:end="201:46"><name pos:start="201:9" pos:end="201:31">vhost_virtqueue_cleanup</name><argument_list pos:start="201:32" pos:end="201:46">(<argument pos:start="201:33" pos:end="201:45"><expr pos:start="201:33" pos:end="201:45"><name pos:start="201:33" pos:end="201:41"><name pos:start="201:33" pos:end="201:36">hdev</name><operator pos:start="201:37" pos:end="201:38">-&gt;</operator><name pos:start="201:39" pos:end="201:41">vqs</name></name> <operator pos:start="201:43" pos:end="201:43">+</operator> <name pos:start="201:45" pos:end="201:45">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

<label pos:start="205:1" pos:end="205:5"><name pos:start="205:1" pos:end="205:4">fail</name>:</label>

    <expr_stmt pos:start="207:5" pos:end="207:15"><expr pos:start="207:5" pos:end="207:14"><name pos:start="207:5" pos:end="207:5">r</name> <operator pos:start="207:7" pos:end="207:7">=</operator> <operator pos:start="207:9" pos:end="207:9">-</operator><name pos:start="207:10" pos:end="207:14">errno</name></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:49"><expr pos:start="209:5" pos:end="209:48"><call pos:start="209:5" pos:end="209:48"><name pos:start="209:5" pos:end="209:42"><name pos:start="209:5" pos:end="209:8">hdev</name><operator pos:start="209:9" pos:end="209:10">-&gt;</operator><name pos:start="209:11" pos:end="209:19">vhost_ops</name><operator pos:start="209:20" pos:end="209:21">-&gt;</operator><name pos:start="209:22" pos:end="209:42">vhost_backend_cleanup</name></name><argument_list pos:start="209:43" pos:end="209:48">(<argument pos:start="209:44" pos:end="209:47"><expr pos:start="209:44" pos:end="209:47"><name pos:start="209:44" pos:end="209:47">hdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:30"><expr pos:start="211:5" pos:end="211:29"><call pos:start="211:5" pos:end="211:29"><name pos:start="211:5" pos:end="211:16">QLIST_REMOVE</name><argument_list pos:start="211:17" pos:end="211:29">(<argument pos:start="211:18" pos:end="211:21"><expr pos:start="211:18" pos:end="211:21"><name pos:start="211:18" pos:end="211:21">hdev</name></expr></argument>, <argument pos:start="211:24" pos:end="211:28"><expr pos:start="211:24" pos:end="211:28"><name pos:start="211:24" pos:end="211:28">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="213:5" pos:end="213:13">return <expr pos:start="213:12" pos:end="213:12"><name pos:start="213:12" pos:end="213:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
