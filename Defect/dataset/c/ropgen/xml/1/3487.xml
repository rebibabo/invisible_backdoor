<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3487.c" pos:tabs="8"><function pos:start="1:1" pos:end="50:16"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:21">eth_rx</name><parameter_list pos:start="1:22" pos:end="1:74">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:36">NetClientState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">nc</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">buf</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:73"><decl pos:start="1:63" pos:end="1:73"><type pos:start="1:63" pos:end="1:73"><name pos:start="1:63" pos:end="1:68">size_t</name></type> <name pos:start="1:70" pos:end="1:73">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="50:16">{<block_content pos:start="5:5" pos:end="50:16">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:22">xlx_ethlite</name></name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:25">s</name> <init pos:start="5:27" pos:end="5:51">= <expr pos:start="5:29" pos:end="5:51"><call pos:start="5:29" pos:end="5:51"><name pos:start="5:29" pos:end="5:47">qemu_get_nic_opaque</name><argument_list pos:start="5:48" pos:end="5:51">(<argument pos:start="5:49" pos:end="5:50"><expr pos:start="5:49" pos:end="5:50"><name pos:start="5:49" pos:end="5:50">nc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">rxbase</name> <init pos:start="7:25" pos:end="7:48">= <expr pos:start="7:27" pos:end="7:48"><name pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:34">rxbuf</name></name> <operator pos:start="7:36" pos:end="7:36">*</operator> <operator pos:start="7:38" pos:end="7:38">(</operator><literal type="number" pos:start="7:39" pos:end="7:43">0x800</literal> <operator pos:start="7:45" pos:end="7:45">/</operator> <literal type="number" pos:start="7:47" pos:end="7:47">4</literal><operator pos:start="7:48" pos:end="7:48">)</operator></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:21">/* DA filter.  */</comment>

    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:66">(<expr pos:start="13:9" pos:end="13:65"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:16"><name pos:start="13:11" pos:end="13:13">buf</name><index pos:start="13:14" pos:end="13:16">[<expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>]</index></name> <operator pos:start="13:18" pos:end="13:18">&amp;</operator> <literal type="number" pos:start="13:20" pos:end="13:23">0x80</literal><operator pos:start="13:24" pos:end="13:24">)</operator> <operator pos:start="13:26" pos:end="13:27">&amp;&amp;</operator> <call pos:start="13:29" pos:end="13:65"><name pos:start="13:29" pos:end="13:34">memcmp</name><argument_list pos:start="13:35" pos:end="13:65">(<argument pos:start="13:36" pos:end="13:56"><expr pos:start="13:36" pos:end="13:56"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:56"><name pos:start="13:37" pos:end="13:37">s</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:43">conf</name><operator pos:start="13:44" pos:end="13:44">.</operator><name pos:start="13:45" pos:end="13:51">macaddr</name><operator pos:start="13:52" pos:end="13:52">.</operator><name pos:start="13:53" pos:end="13:53">a</name><index pos:start="13:54" pos:end="13:56">[<expr pos:start="13:55" pos:end="13:55"><literal type="number" pos:start="13:55" pos:end="13:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="13:59" pos:end="13:61"><expr pos:start="13:59" pos:end="13:61"><name pos:start="13:59" pos:end="13:61">buf</name></expr></argument>, <argument pos:start="13:64" pos:end="13:64"><expr pos:start="13:64" pos:end="13:64"><literal type="number" pos:start="13:64" pos:end="13:64">6</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">size</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="50:16"><if pos:start="19:5" pos:end="50:16">if <condition pos:start="19:8" pos:end="19:46">(<expr pos:start="19:9" pos:end="19:45"><name pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:15">regs</name><index pos:start="19:16" pos:end="19:36">[<expr pos:start="19:17" pos:end="19:35"><name pos:start="19:17" pos:end="19:22">rxbase</name> <operator pos:start="19:24" pos:end="19:24">+</operator> <name pos:start="19:26" pos:end="19:35">R_RX_CTRL0</name></expr>]</index></name> <operator pos:start="19:38" pos:end="19:38">&amp;</operator> <name pos:start="19:40" pos:end="19:45">CTRL_S</name></expr>)</condition> <block pos:start="19:48" pos:end="50:16">{<block_content pos:start="21:9" pos:end="50:16">

        <expr_stmt pos:start="21:9" pos:end="21:69"><expr pos:start="21:9" pos:end="21:68"><call pos:start="21:9" pos:end="21:68"><name pos:start="21:9" pos:end="21:9">D</name><argument_list pos:start="21:10" pos:end="21:68">(<argument pos:start="21:11" pos:end="21:67"><expr pos:start="21:11" pos:end="21:67"><call pos:start="21:11" pos:end="21:67"><name pos:start="21:11" pos:end="21:18">qemu_log</name><argument_list pos:start="21:19" pos:end="21:67">(<argument pos:start="21:20" pos:end="21:45"><expr pos:start="21:20" pos:end="21:45"><literal type="string" pos:start="21:20" pos:end="21:45">"ethlite lost packet %x\n"</literal></expr></argument>, <argument pos:start="21:48" pos:end="21:66"><expr pos:start="21:48" pos:end="21:66"><name pos:start="21:48" pos:end="21:66"><name pos:start="21:48" pos:end="21:48">s</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:54">regs</name><index pos:start="21:55" pos:end="21:66">[<expr pos:start="21:56" pos:end="21:65"><name pos:start="21:56" pos:end="21:65">R_RX_CTRL0</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="27:5" pos:end="27:62"><expr pos:start="27:5" pos:end="27:61"><call pos:start="27:5" pos:end="27:61"><name pos:start="27:5" pos:end="27:5">D</name><argument_list pos:start="27:6" pos:end="27:61">(<argument pos:start="27:7" pos:end="27:60"><expr pos:start="27:7" pos:end="27:60"><call pos:start="27:7" pos:end="27:60"><name pos:start="27:7" pos:end="27:14">qemu_log</name><argument_list pos:start="27:15" pos:end="27:60">(<argument pos:start="27:16" pos:end="27:35"><expr pos:start="27:16" pos:end="27:35"><literal type="string" pos:start="27:16" pos:end="27:35">"%s %zd rxbase=%x\n"</literal></expr></argument>, <argument pos:start="27:38" pos:end="27:45"><expr pos:start="27:38" pos:end="27:45"><name pos:start="27:38" pos:end="27:45">__func__</name></expr></argument>, <argument pos:start="27:48" pos:end="27:51"><expr pos:start="27:48" pos:end="27:51"><name pos:start="27:48" pos:end="27:51">size</name></expr></argument>, <argument pos:start="27:54" pos:end="27:59"><expr pos:start="27:54" pos:end="27:59"><name pos:start="27:54" pos:end="27:59">rxbase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="33:5" pos:end="33:52"><expr pos:start="33:5" pos:end="33:51"><call pos:start="33:5" pos:end="33:51"><name pos:start="33:5" pos:end="33:10">memcpy</name><argument_list pos:start="33:11" pos:end="33:51">(<argument pos:start="33:12" pos:end="33:39"><expr pos:start="33:12" pos:end="33:39"><operator pos:start="33:12" pos:end="33:12">&amp;</operator><name pos:start="33:13" pos:end="33:39"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:19">regs</name><index pos:start="33:20" pos:end="33:39">[<expr pos:start="33:21" pos:end="33:38"><name pos:start="33:21" pos:end="33:26">rxbase</name> <operator pos:start="33:28" pos:end="33:28">+</operator> <name pos:start="33:30" pos:end="33:38">R_RX_BUF0</name></expr>]</index></name></expr></argument>, <argument pos:start="33:42" pos:end="33:44"><expr pos:start="33:42" pos:end="33:44"><name pos:start="33:42" pos:end="33:44">buf</name></expr></argument>, <argument pos:start="33:47" pos:end="33:50"><expr pos:start="33:47" pos:end="33:50"><name pos:start="33:47" pos:end="33:50">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:43"><expr pos:start="37:5" pos:end="37:42"><name pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:11">regs</name><index pos:start="37:12" pos:end="37:32">[<expr pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:18">rxbase</name> <operator pos:start="37:20" pos:end="37:20">+</operator> <name pos:start="37:22" pos:end="37:31">R_RX_CTRL0</name></expr>]</index></name> <operator pos:start="37:34" pos:end="37:35">|=</operator> <name pos:start="37:37" pos:end="37:42">CTRL_S</name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="50:16"><if pos:start="39:5" pos:end="50:16">if <condition pos:start="39:8" pos:end="39:37">(<expr pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:15">regs</name><index pos:start="39:16" pos:end="39:27">[<expr pos:start="39:17" pos:end="39:26"><name pos:start="39:17" pos:end="39:26">R_RX_CTRL0</name></expr>]</index></name> <operator pos:start="39:29" pos:end="39:29">&amp;</operator> <name pos:start="39:31" pos:end="39:36">CTRL_I</name></expr>)</condition> <block pos:start="39:39" pos:end="50:16">{<block_content pos:start="41:9" pos:end="50:16">

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><call pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:21">eth_pulse_irq</name><argument_list pos:start="41:22" pos:end="41:24">(<argument pos:start="41:23" pos:end="41:23"><expr pos:start="41:23" pos:end="41:23"><name pos:start="41:23" pos:end="41:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <comment type="block" pos:start="46:5" pos:end="46:49">/* If c_rx_pingpong was set flip buffers.  */</comment>

    <expr_stmt pos:start="48:5" pos:end="48:33"><expr pos:start="48:5" pos:end="48:32"><name pos:start="48:5" pos:end="48:12"><name pos:start="48:5" pos:end="48:5">s</name><operator pos:start="48:6" pos:end="48:7">-&gt;</operator><name pos:start="48:8" pos:end="48:12">rxbuf</name></name> <operator pos:start="48:14" pos:end="48:15">^=</operator> <name pos:start="48:17" pos:end="48:32"><name pos:start="48:17" pos:end="48:17">s</name><operator pos:start="48:18" pos:end="48:19">-&gt;</operator><name pos:start="48:20" pos:end="48:32">c_rx_pingpong</name></name></expr>;</expr_stmt>

    <return pos:start="50:5" pos:end="50:16">return <expr pos:start="50:12" pos:end="50:15"><name pos:start="50:12" pos:end="50:15">size</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
