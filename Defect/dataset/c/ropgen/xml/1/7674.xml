<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7674.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:35">rgb16to15</name>)<parameter_list pos:start="1:37" pos:end="1:84">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">src</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">uint8_t</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">dst</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:83"><decl pos:start="1:72" pos:end="1:83"><type pos:start="1:72" pos:end="1:83"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:83">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:27"><specifier pos:start="5:5" pos:end="5:12">register</specifier> <specifier pos:start="5:14" pos:end="5:18">const</specifier> <name pos:start="5:20" pos:end="5:26">uint8_t</name><modifier pos:start="5:27" pos:end="5:27">*</modifier></type> <name pos:start="5:29" pos:end="5:29">s</name><init pos:start="5:30" pos:end="5:33">=<expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">src</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:21"><specifier pos:start="7:5" pos:end="7:12">register</specifier> <name pos:start="7:14" pos:end="7:20">uint8_t</name><modifier pos:start="7:21" pos:end="7:21">*</modifier></type> <name pos:start="7:23" pos:end="7:23">d</name><init pos:start="7:24" pos:end="7:27">=<expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:27">dst</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:28"><specifier pos:start="9:5" pos:end="9:12">register</specifier> <specifier pos:start="9:14" pos:end="9:18">const</specifier> <name pos:start="9:20" pos:end="9:26">uint8_t</name> <modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:31">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:25">mm_end</name></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:7">end</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <name pos:start="13:11" pos:end="13:11">s</name> <operator pos:start="13:13" pos:end="13:13">+</operator> <name pos:start="13:15" pos:end="13:22">src_size</name></expr>;</expr_stmt>

    <asm pos:start="15:5" pos:end="15:48">__asm__ <specifier pos:start="15:13" pos:end="15:20">volatile</specifier>(PREFETCH"    %0"::"m"(*s));</asm>

    <asm pos:start="17:5" pos:end="17:61">__asm__ <specifier pos:start="17:13" pos:end="17:20">volatile</specifier>("movq        %0, %%mm7"::"m"(mask15rg));</asm>

    <asm pos:start="19:5" pos:end="19:60">__asm__ <specifier pos:start="19:13" pos:end="19:20">volatile</specifier>("movq        %0, %%mm6"::"m"(mask15b));</asm>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:10">mm_end</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:16">end</name> <operator pos:start="21:18" pos:end="21:18">-</operator> <literal type="number" pos:start="21:20" pos:end="21:21">15</literal></expr>;</expr_stmt>

    <while pos:start="23:5" pos:end="67:5">while <condition pos:start="23:11" pos:end="23:20">(<expr pos:start="23:12" pos:end="23:19"><name pos:start="23:12" pos:end="23:12">s</name><operator pos:start="23:13" pos:end="23:13">&lt;</operator><name pos:start="23:14" pos:end="23:19">mm_end</name></expr>)</condition> <block pos:start="23:22" pos:end="67:5">{<block_content pos:start="25:9" pos:end="65:14">

        <asm pos:start="25:9" pos:end="61:10">__asm__ <specifier pos:start="25:17" pos:end="25:24">volatile</specifier>(

            PREFETCH"  32%1         \n\t"

            "movq        %1, %%mm0  \n\t"

            "movq       8%1, %%mm2  \n\t"

            "movq     %%mm0, %%mm1  \n\t"

            "movq     %%mm2, %%mm3  \n\t"

            "psrlq       $1, %%mm0  \n\t"

            "psrlq       $1, %%mm2  \n\t"

            "pand     %%mm7, %%mm0  \n\t"

            "pand     %%mm7, %%mm2  \n\t"

            "pand     %%mm6, %%mm1  \n\t"

            "pand     %%mm6, %%mm3  \n\t"

            "por      %%mm1, %%mm0  \n\t"

            "por      %%mm3, %%mm2  \n\t"

            MOVNTQ"   %%mm0,  %0    \n\t"

            MOVNTQ"   %%mm2, 8%0"

            :"=m"(*d)

            :"m"(*s)

        );</asm>

        <expr_stmt pos:start="63:9" pos:end="63:14"><expr pos:start="63:9" pos:end="63:13"><name pos:start="63:9" pos:end="63:9">d</name><operator pos:start="63:10" pos:end="63:11">+=</operator><literal type="number" pos:start="63:12" pos:end="63:13">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:14"><expr pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">+=</operator><literal type="number" pos:start="65:12" pos:end="65:13">16</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <asm pos:start="69:5" pos:end="69:40">__asm__ <specifier pos:start="69:13" pos:end="69:20">volatile</specifier>(SFENCE:::"memory");</asm>

    <asm pos:start="71:5" pos:end="71:38">__asm__ <specifier pos:start="71:13" pos:end="71:20">volatile</specifier>(EMMS:::"memory");</asm>

    <expr_stmt pos:start="73:5" pos:end="73:21"><expr pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:10">mm_end</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <name pos:start="73:14" pos:end="73:16">end</name> <operator pos:start="73:18" pos:end="73:18">-</operator> <literal type="number" pos:start="73:20" pos:end="73:20">3</literal></expr>;</expr_stmt>

    <while pos:start="75:5" pos:end="85:5">while <condition pos:start="75:11" pos:end="75:22">(<expr pos:start="75:12" pos:end="75:21"><name pos:start="75:12" pos:end="75:12">s</name> <operator pos:start="75:14" pos:end="75:14">&lt;</operator> <name pos:start="75:16" pos:end="75:21">mm_end</name></expr>)</condition> <block pos:start="75:24" pos:end="85:5">{<block_content pos:start="77:9" pos:end="83:13">

        <decl_stmt pos:start="77:9" pos:end="77:51"><decl pos:start="77:9" pos:end="77:50"><type pos:start="77:9" pos:end="77:25"><specifier pos:start="77:9" pos:end="77:16">register</specifier> <name pos:start="77:18" pos:end="77:25">uint32_t</name></type> <name pos:start="77:27" pos:end="77:27">x</name><init pos:start="77:28" pos:end="77:50">= <expr pos:start="77:30" pos:end="77:50"><operator pos:start="77:30" pos:end="77:30">*</operator><operator pos:start="77:31" pos:end="77:31">(</operator><operator pos:start="77:32" pos:end="77:32">(</operator><specifier pos:start="77:33" pos:end="77:37">const</specifier> <name pos:start="77:39" pos:end="77:46">uint32_t</name><operator pos:start="77:47" pos:end="77:47">*</operator><operator pos:start="77:48" pos:end="77:48">)</operator><name pos:start="77:49" pos:end="77:49">s</name><operator pos:start="77:50" pos:end="77:50">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:64"><expr pos:start="79:9" pos:end="79:63"><operator pos:start="79:9" pos:end="79:9">*</operator><operator pos:start="79:10" pos:end="79:10">(</operator><operator pos:start="79:11" pos:end="79:11">(</operator><name pos:start="79:12" pos:end="79:19">uint32_t</name> <operator pos:start="79:21" pos:end="79:21">*</operator><operator pos:start="79:22" pos:end="79:22">)</operator><name pos:start="79:23" pos:end="79:23">d</name><operator pos:start="79:24" pos:end="79:24">)</operator> <operator pos:start="79:26" pos:end="79:26">=</operator> <operator pos:start="79:28" pos:end="79:28">(</operator><operator pos:start="79:29" pos:end="79:29">(</operator><name pos:start="79:30" pos:end="79:30">x</name><operator pos:start="79:31" pos:end="79:32">&gt;&gt;</operator><literal type="number" pos:start="79:33" pos:end="79:33">1</literal><operator pos:start="79:34" pos:end="79:34">)</operator><operator pos:start="79:35" pos:end="79:35">&amp;</operator><literal type="number" pos:start="79:36" pos:end="79:45">0x7FE07FE0</literal><operator pos:start="79:46" pos:end="79:46">)</operator> <operator pos:start="79:48" pos:end="79:48">|</operator> <operator pos:start="79:50" pos:end="79:50">(</operator><name pos:start="79:51" pos:end="79:51">x</name><operator pos:start="79:52" pos:end="79:52">&amp;</operator><literal type="number" pos:start="79:53" pos:end="79:62">0x001F001F</literal><operator pos:start="79:63" pos:end="79:63">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:13"><expr pos:start="81:9" pos:end="81:12"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">+=</operator><literal type="number" pos:start="81:12" pos:end="81:12">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:13"><expr pos:start="83:9" pos:end="83:12"><name pos:start="83:9" pos:end="83:9">d</name><operator pos:start="83:10" pos:end="83:11">+=</operator><literal type="number" pos:start="83:12" pos:end="83:12">4</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:16">(<expr pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:9">s</name> <operator pos:start="87:11" pos:end="87:11">&lt;</operator> <name pos:start="87:13" pos:end="87:15">end</name></expr>)</condition> <block pos:start="87:18" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:56">

        <decl_stmt pos:start="89:9" pos:end="89:51"><decl pos:start="89:9" pos:end="89:50"><type pos:start="89:9" pos:end="89:25"><specifier pos:start="89:9" pos:end="89:16">register</specifier> <name pos:start="89:18" pos:end="89:25">uint16_t</name></type> <name pos:start="89:27" pos:end="89:27">x</name><init pos:start="89:28" pos:end="89:50">= <expr pos:start="89:30" pos:end="89:50"><operator pos:start="89:30" pos:end="89:30">*</operator><operator pos:start="89:31" pos:end="89:31">(</operator><operator pos:start="89:32" pos:end="89:32">(</operator><specifier pos:start="89:33" pos:end="89:37">const</specifier> <name pos:start="89:39" pos:end="89:46">uint16_t</name><operator pos:start="89:47" pos:end="89:47">*</operator><operator pos:start="89:48" pos:end="89:48">)</operator><name pos:start="89:49" pos:end="89:49">s</name><operator pos:start="89:50" pos:end="89:50">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:56"><expr pos:start="91:9" pos:end="91:55"><operator pos:start="91:9" pos:end="91:9">*</operator><operator pos:start="91:10" pos:end="91:10">(</operator><operator pos:start="91:11" pos:end="91:11">(</operator><name pos:start="91:12" pos:end="91:19">uint16_t</name> <operator pos:start="91:21" pos:end="91:21">*</operator><operator pos:start="91:22" pos:end="91:22">)</operator><name pos:start="91:23" pos:end="91:23">d</name><operator pos:start="91:24" pos:end="91:24">)</operator> <operator pos:start="91:26" pos:end="91:26">=</operator> <operator pos:start="91:28" pos:end="91:28">(</operator><operator pos:start="91:29" pos:end="91:29">(</operator><name pos:start="91:30" pos:end="91:30">x</name><operator pos:start="91:31" pos:end="91:32">&gt;&gt;</operator><literal type="number" pos:start="91:33" pos:end="91:33">1</literal><operator pos:start="91:34" pos:end="91:34">)</operator><operator pos:start="91:35" pos:end="91:35">&amp;</operator><literal type="number" pos:start="91:36" pos:end="91:41">0x7FE0</literal><operator pos:start="91:42" pos:end="91:42">)</operator> <operator pos:start="91:44" pos:end="91:44">|</operator> <operator pos:start="91:46" pos:end="91:46">(</operator><name pos:start="91:47" pos:end="91:47">x</name><operator pos:start="91:48" pos:end="91:48">&amp;</operator><literal type="number" pos:start="91:49" pos:end="91:54">0x001F</literal><operator pos:start="91:55" pos:end="91:55">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
