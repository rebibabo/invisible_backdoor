<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11057.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">parse_vlan</name><parameter_list pos:start="1:22" pos:end="1:72">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:33">DeviceState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">dev</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:48">Property</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">prop</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:66">char</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">str</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:13">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:13">VLANState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier><modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ptr</name> <init pos:start="5:21" pos:end="5:50">= <expr pos:start="5:23" pos:end="5:50"><call pos:start="5:23" pos:end="5:50"><name pos:start="5:23" pos:end="5:39">qdev_get_prop_ptr</name><argument_list pos:start="5:40" pos:end="5:50">(<argument pos:start="5:41" pos:end="5:43"><expr pos:start="5:41" pos:end="5:43"><name pos:start="5:41" pos:end="5:43">dev</name></expr></argument>, <argument pos:start="5:46" pos:end="5:49"><expr pos:start="5:46" pos:end="5:49"><name pos:start="5:46" pos:end="5:49">prop</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">id</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:23"><if pos:start="11:5" pos:end="13:23">if <condition pos:start="11:8" pos:end="11:36">(<expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:14">sscanf</name><argument_list pos:start="11:15" pos:end="11:30">(<argument pos:start="11:16" pos:end="11:18"><expr pos:start="11:16" pos:end="11:18"><name pos:start="11:16" pos:end="11:18">str</name></expr></argument>, <argument pos:start="11:21" pos:end="11:24"><expr pos:start="11:21" pos:end="11:24"><literal type="string" pos:start="11:21" pos:end="11:24">"%d"</literal></expr></argument>, <argument pos:start="11:27" pos:end="11:29"><expr pos:start="11:27" pos:end="11:29"><operator pos:start="11:27" pos:end="11:27">&amp;</operator><name pos:start="11:28" pos:end="11:29">id</name></expr></argument>)</argument_list></call> <operator pos:start="11:32" pos:end="11:33">!=</operator> <literal type="number" pos:start="11:35" pos:end="11:35">1</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:23"><block_content pos:start="13:9" pos:end="13:23">

        <return pos:start="13:9" pos:end="13:23">return <expr pos:start="13:16" pos:end="13:22"><operator pos:start="13:16" pos:end="13:16">-</operator><name pos:start="13:17" pos:end="13:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:8">ptr</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:32"><name pos:start="15:12" pos:end="15:25">qemu_find_vlan</name><argument_list pos:start="15:26" pos:end="15:32">(<argument pos:start="15:27" pos:end="15:28"><expr pos:start="15:27" pos:end="15:28"><name pos:start="15:27" pos:end="15:28">id</name></expr></argument>, <argument pos:start="15:31" pos:end="15:31"><expr pos:start="15:31" pos:end="15:31"><literal type="number" pos:start="15:31" pos:end="15:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:23"><if pos:start="17:5" pos:end="19:23">if <condition pos:start="17:8" pos:end="17:21">(<expr pos:start="17:9" pos:end="17:20"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:12">ptr</name> <operator pos:start="17:14" pos:end="17:15">==</operator> <name pos:start="17:17" pos:end="17:20">NULL</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:23"><block_content pos:start="19:9" pos:end="19:23">

        <return pos:start="19:9" pos:end="19:23">return <expr pos:start="19:16" pos:end="19:22"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:22">ENOENT</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="21:5" pos:end="21:13">return <expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
