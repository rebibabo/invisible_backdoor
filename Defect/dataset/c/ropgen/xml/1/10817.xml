<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10817.c" pos:tabs="8"><function pos:start="1:1" pos:end="38:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">avcodec_close</name><parameter_list pos:start="1:18" pos:end="1:40">(<parameter pos:start="1:19" pos:end="1:39"><decl pos:start="1:19" pos:end="1:39"><type pos:start="1:19" pos:end="1:34"><name pos:start="1:19" pos:end="1:32">AVCodecContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:39">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="38:1">{<block_content pos:start="5:5" pos:end="36:13">

    <expr_stmt pos:start="5:5" pos:end="5:31"><expr pos:start="5:5" pos:end="5:30"><name pos:start="5:5" pos:end="5:28">entangled_thread_counter</name><operator pos:start="5:29" pos:end="5:30">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="7:5" pos:end="15:5"><if pos:start="7:5" pos:end="15:5">if<condition pos:start="7:7" pos:end="7:37">(<expr pos:start="7:8" pos:end="7:36"><name pos:start="7:8" pos:end="7:31">entangled_thread_counter</name> <operator pos:start="7:33" pos:end="7:34">!=</operator> <literal type="number" pos:start="7:36" pos:end="7:36">1</literal></expr>)</condition><block pos:start="7:38" pos:end="15:5">{<block_content pos:start="9:9" pos:end="13:18">

        <expr_stmt pos:start="9:9" pos:end="9:97"><expr pos:start="9:9" pos:end="9:96"><call pos:start="9:9" pos:end="9:96"><name pos:start="9:9" pos:end="9:14">av_log</name><argument_list pos:start="9:15" pos:end="9:96">(<argument pos:start="9:16" pos:end="9:20"><expr pos:start="9:16" pos:end="9:20"><name pos:start="9:16" pos:end="9:20">avctx</name></expr></argument>, <argument pos:start="9:23" pos:end="9:34"><expr pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="9:37" pos:end="9:95"><expr pos:start="9:37" pos:end="9:95"><literal type="string" pos:start="9:37" pos:end="9:95">"insufficient thread locking around avcodec_open/close()\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:35"><expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:32">entangled_thread_counter</name><operator pos:start="11:33" pos:end="11:34">--</operator></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="21:35"><if pos:start="19:5" pos:end="21:35">if <condition pos:start="19:8" pos:end="19:47">(<expr pos:start="19:9" pos:end="19:46"><name pos:start="19:9" pos:end="19:22">ENABLE_THREADS</name> <operator pos:start="19:24" pos:end="19:25">&amp;&amp;</operator> <name pos:start="19:27" pos:end="19:46"><name pos:start="19:27" pos:end="19:31">avctx</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:46">thread_opaque</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:35"><block_content pos:start="21:9" pos:end="21:35">

        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><call pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:27">avcodec_thread_free</name><argument_list pos:start="21:28" pos:end="21:34">(<argument pos:start="21:29" pos:end="21:33"><expr pos:start="21:29" pos:end="21:33"><name pos:start="21:29" pos:end="21:33">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="25:35"><if pos:start="23:5" pos:end="25:35">if <condition pos:start="23:8" pos:end="23:28">(<expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:13">avctx</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:20">codec</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:27">close</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:35"><block_content pos:start="25:9" pos:end="25:35">

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><call pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">codec</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:27">close</name></name><argument_list pos:start="25:28" pos:end="25:34">(<argument pos:start="25:29" pos:end="25:33"><expr pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:33">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><call pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:32">avcodec_default_free_buffers</name><argument_list pos:start="27:33" pos:end="27:39">(<argument pos:start="27:34" pos:end="27:38"><expr pos:start="27:34" pos:end="27:38"><name pos:start="27:34" pos:end="27:38">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><call pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:12">av_freep</name><argument_list pos:start="29:13" pos:end="29:31">(<argument pos:start="29:14" pos:end="29:30"><expr pos:start="29:14" pos:end="29:30"><operator pos:start="29:14" pos:end="29:14">&amp;</operator><name pos:start="29:15" pos:end="29:30"><name pos:start="29:15" pos:end="29:19">avctx</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:30">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt pos:start="32:5" pos:end="32:24"><expr pos:start="32:5" pos:end="32:23"><name pos:start="32:5" pos:end="32:16"><name pos:start="32:5" pos:end="32:9">avctx</name><operator pos:start="32:10" pos:end="32:11">-&gt;</operator><name pos:start="32:12" pos:end="32:16">codec</name></name> <operator pos:start="32:18" pos:end="32:18">=</operator> <name pos:start="32:20" pos:end="32:23">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="34:5" pos:end="34:31"><expr pos:start="34:5" pos:end="34:30"><name pos:start="34:5" pos:end="34:28">entangled_thread_counter</name><operator pos:start="34:29" pos:end="34:30">--</operator></expr>;</expr_stmt>

    <return pos:start="36:5" pos:end="36:13">return <expr pos:start="36:12" pos:end="36:12"><literal type="number" pos:start="36:12" pos:end="36:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
