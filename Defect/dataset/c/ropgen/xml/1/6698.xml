<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6698.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">vnc_tls_validate_certificate</name><parameter_list pos:start="1:33" pos:end="1:46">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:43"><name pos:start="1:34" pos:end="1:41">VncState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="223:1">{<block_content pos:start="5:5" pos:end="221:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:26"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:24">gnutls_datum_t</name> <modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:31">certs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:23">nCerts</name></decl>, <decl pos:start="11:26" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:26" pos:end="11:26">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">time_t</name></type> <name pos:start="13:12" pos:end="13:14">now</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><call pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:13">VNC_DEBUG</name><argument_list pos:start="17:14" pos:end="17:48">(<argument pos:start="17:15" pos:end="17:47"><expr pos:start="17:15" pos:end="17:47"><literal type="string" pos:start="17:15" pos:end="17:47">"Validating client certificate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:80">(<expr pos:start="19:9" pos:end="19:79"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:12">ret</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:74"><name pos:start="19:16" pos:end="19:47">gnutls_certificate_verify_peers2</name> <argument_list pos:start="19:49" pos:end="19:74">(<argument pos:start="19:50" pos:end="19:64"><expr pos:start="19:50" pos:end="19:64"><name pos:start="19:50" pos:end="19:64"><name pos:start="19:50" pos:end="19:51">vs</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:56">tls</name><operator pos:start="19:57" pos:end="19:57">.</operator><name pos:start="19:58" pos:end="19:64">session</name></name></expr></argument>, <argument pos:start="19:67" pos:end="19:73"><expr pos:start="19:67" pos:end="19:73"><operator pos:start="19:67" pos:end="19:67">&amp;</operator><name pos:start="19:68" pos:end="19:73">status</name></expr></argument>)</argument_list></call><operator pos:start="19:75" pos:end="19:75">)</operator> <operator pos:start="19:77" pos:end="19:77">&lt;</operator> <literal type="number" pos:start="19:79" pos:end="19:79">0</literal></expr>)</condition> <block pos:start="19:82" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:62"><expr pos:start="21:9" pos:end="21:61"><call pos:start="21:9" pos:end="21:61"><name pos:start="21:9" pos:end="21:17">VNC_DEBUG</name><argument_list pos:start="21:18" pos:end="21:61">(<argument pos:start="21:19" pos:end="21:38"><expr pos:start="21:19" pos:end="21:38"><literal type="string" pos:start="21:19" pos:end="21:38">"Verify failed %s\n"</literal></expr></argument>, <argument pos:start="21:41" pos:end="21:60"><expr pos:start="21:41" pos:end="21:60"><call pos:start="21:41" pos:end="21:60"><name pos:start="21:41" pos:end="21:55">gnutls_strerror</name><argument_list pos:start="21:56" pos:end="21:60">(<argument pos:start="21:57" pos:end="21:59"><expr pos:start="21:57" pos:end="21:59"><name pos:start="21:57" pos:end="21:59">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:43">(<expr pos:start="29:9" pos:end="29:42"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:12">now</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:25"><name pos:start="29:16" pos:end="29:19">time</name><argument_list pos:start="29:20" pos:end="29:25">(<argument pos:start="29:21" pos:end="29:24"><expr pos:start="29:21" pos:end="29:24"><name pos:start="29:21" pos:end="29:24">NULL</name></expr></argument>)</argument_list></call><operator pos:start="29:26" pos:end="29:26">)</operator> <operator pos:start="29:28" pos:end="29:29">==</operator> <operator pos:start="29:31" pos:end="29:31">(</operator><operator pos:start="29:32" pos:end="29:32">(</operator><name pos:start="29:33" pos:end="29:38">time_t</name><operator pos:start="29:39" pos:end="29:39">)</operator><operator pos:start="29:40" pos:end="29:40">-</operator><literal type="number" pos:start="29:41" pos:end="29:41">1</literal><operator pos:start="29:42" pos:end="29:42">)</operator></expr>)</condition> <block pos:start="29:45" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:18">

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="69:5"><if pos:start="37:5" pos:end="65:5">if <condition pos:start="37:8" pos:end="37:20">(<expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:14">status</name> <operator pos:start="37:16" pos:end="37:17">!=</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition> <block pos:start="37:22" pos:end="65:5">{<block_content pos:start="39:9" pos:end="63:18">

        <if_stmt pos:start="39:9" pos:end="41:59"><if pos:start="39:9" pos:end="41:59">if <condition pos:start="39:12" pos:end="39:41">(<expr pos:start="39:13" pos:end="39:40"><name pos:start="39:13" pos:end="39:18">status</name> <operator pos:start="39:20" pos:end="39:20">&amp;</operator> <name pos:start="39:22" pos:end="39:40">GNUTLS_CERT_INVALID</name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:59"><block_content pos:start="41:13" pos:end="41:59">

            <expr_stmt pos:start="41:13" pos:end="41:59"><expr pos:start="41:13" pos:end="41:58"><call pos:start="41:13" pos:end="41:58"><name pos:start="41:13" pos:end="41:21">VNC_DEBUG</name><argument_list pos:start="41:22" pos:end="41:58">(<argument pos:start="41:23" pos:end="41:57"><expr pos:start="41:23" pos:end="41:57"><literal type="string" pos:start="41:23" pos:end="41:57">"The certificate is not trusted.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="45:9" pos:end="47:70"><if pos:start="45:9" pos:end="47:70">if <condition pos:start="45:12" pos:end="45:50">(<expr pos:start="45:13" pos:end="45:49"><name pos:start="45:13" pos:end="45:18">status</name> <operator pos:start="45:20" pos:end="45:20">&amp;</operator> <name pos:start="45:22" pos:end="45:49">GNUTLS_CERT_SIGNER_NOT_FOUND</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:70"><block_content pos:start="47:13" pos:end="47:70">

            <expr_stmt pos:start="47:13" pos:end="47:70"><expr pos:start="47:13" pos:end="47:69"><call pos:start="47:13" pos:end="47:69"><name pos:start="47:13" pos:end="47:21">VNC_DEBUG</name><argument_list pos:start="47:22" pos:end="47:69">(<argument pos:start="47:23" pos:end="47:68"><expr pos:start="47:23" pos:end="47:68"><literal type="string" pos:start="47:23" pos:end="47:68">"The certificate hasn't got a known issuer.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="51:9" pos:end="53:61"><if pos:start="51:9" pos:end="53:61">if <condition pos:start="51:12" pos:end="51:41">(<expr pos:start="51:13" pos:end="51:40"><name pos:start="51:13" pos:end="51:18">status</name> <operator pos:start="51:20" pos:end="51:20">&amp;</operator> <name pos:start="51:22" pos:end="51:40">GNUTLS_CERT_REVOKED</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:61"><block_content pos:start="53:13" pos:end="53:61">

            <expr_stmt pos:start="53:13" pos:end="53:61"><expr pos:start="53:13" pos:end="53:60"><call pos:start="53:13" pos:end="53:60"><name pos:start="53:13" pos:end="53:21">VNC_DEBUG</name><argument_list pos:start="53:22" pos:end="53:60">(<argument pos:start="53:23" pos:end="53:59"><expr pos:start="53:23" pos:end="53:59"><literal type="string" pos:start="53:23" pos:end="53:59">"The certificate has been revoked.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="57:9" pos:end="59:70"><if pos:start="57:9" pos:end="59:70">if <condition pos:start="57:12" pos:end="57:52">(<expr pos:start="57:13" pos:end="57:51"><name pos:start="57:13" pos:end="57:18">status</name> <operator pos:start="57:20" pos:end="57:20">&amp;</operator> <name pos:start="57:22" pos:end="57:51">GNUTLS_CERT_INSECURE_ALGORITHM</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:70"><block_content pos:start="59:13" pos:end="59:70">

            <expr_stmt pos:start="59:13" pos:end="59:70"><expr pos:start="59:13" pos:end="59:69"><call pos:start="59:13" pos:end="59:69"><name pos:start="59:13" pos:end="59:21">VNC_DEBUG</name><argument_list pos:start="59:22" pos:end="59:69">(<argument pos:start="59:23" pos:end="59:68"><expr pos:start="59:23" pos:end="59:68"><literal type="string" pos:start="59:23" pos:end="59:68">"The certificate uses an insecure algorithm\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="69:5">else <block pos:start="65:12" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:45">

        <expr_stmt pos:start="67:9" pos:end="67:45"><expr pos:start="67:9" pos:end="67:44"><call pos:start="67:9" pos:end="67:44"><name pos:start="67:9" pos:end="67:17">VNC_DEBUG</name><argument_list pos:start="67:18" pos:end="67:44">(<argument pos:start="67:19" pos:end="67:43"><expr pos:start="67:19" pos:end="67:43"><literal type="string" pos:start="67:19" pos:end="67:43">"Certificate is valid!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:35">/* Only support x509 for now */</comment>

    <if_stmt pos:start="75:5" pos:end="77:18"><if pos:start="75:5" pos:end="77:18">if <condition pos:start="75:8" pos:end="75:72">(<expr pos:start="75:9" pos:end="75:71"><call pos:start="75:9" pos:end="75:52"><name pos:start="75:9" pos:end="75:35">gnutls_certificate_type_get</name><argument_list pos:start="75:36" pos:end="75:52">(<argument pos:start="75:37" pos:end="75:51"><expr pos:start="75:37" pos:end="75:51"><name pos:start="75:37" pos:end="75:51"><name pos:start="75:37" pos:end="75:38">vs</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:43">tls</name><operator pos:start="75:44" pos:end="75:44">.</operator><name pos:start="75:45" pos:end="75:51">session</name></name></expr></argument>)</argument_list></call> <operator pos:start="75:54" pos:end="75:55">!=</operator> <name pos:start="75:57" pos:end="75:71">GNUTLS_CRT_X509</name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:18"><block_content pos:start="77:9" pos:end="77:18">

        <return pos:start="77:9" pos:end="77:18">return <expr pos:start="77:16" pos:end="77:17"><operator pos:start="77:16" pos:end="77:16">-</operator><literal type="number" pos:start="77:17" pos:end="77:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="83:18"><if pos:start="81:5" pos:end="83:18">if <condition pos:start="81:8" pos:end="81:74">(<expr pos:start="81:9" pos:end="81:73"><operator pos:start="81:9" pos:end="81:9">!</operator><operator pos:start="81:10" pos:end="81:10">(</operator><name pos:start="81:11" pos:end="81:15">certs</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <call pos:start="81:19" pos:end="81:72"><name pos:start="81:19" pos:end="81:46">gnutls_certificate_get_peers</name><argument_list pos:start="81:47" pos:end="81:72">(<argument pos:start="81:48" pos:end="81:62"><expr pos:start="81:48" pos:end="81:62"><name pos:start="81:48" pos:end="81:62"><name pos:start="81:48" pos:end="81:49">vs</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:54">tls</name><operator pos:start="81:55" pos:end="81:55">.</operator><name pos:start="81:56" pos:end="81:62">session</name></name></expr></argument>, <argument pos:start="81:65" pos:end="81:71"><expr pos:start="81:65" pos:end="81:71"><operator pos:start="81:65" pos:end="81:65">&amp;</operator><name pos:start="81:66" pos:end="81:71">nCerts</name></expr></argument>)</argument_list></call><operator pos:start="81:73" pos:end="81:73">)</operator></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:18"><block_content pos:start="83:9" pos:end="83:18">

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="87:5" pos:end="217:5">for <control pos:start="87:9" pos:end="87:34">(<init pos:start="87:10" pos:end="87:16"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">i</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr> ;</init> <condition pos:start="87:18" pos:end="87:29"><expr pos:start="87:18" pos:end="87:27"><name pos:start="87:18" pos:end="87:18">i</name> <operator pos:start="87:20" pos:end="87:20">&lt;</operator> <name pos:start="87:22" pos:end="87:27">nCerts</name></expr> ;</condition> <incr pos:start="87:31" pos:end="87:33"><expr pos:start="87:31" pos:end="87:33"><name pos:start="87:31" pos:end="87:31">i</name><operator pos:start="87:32" pos:end="87:33">++</operator></expr></incr>)</control> <block pos:start="87:36" pos:end="217:5">{<block_content pos:start="89:9" pos:end="215:38">

        <decl_stmt pos:start="89:9" pos:end="89:31"><decl pos:start="89:9" pos:end="89:30"><type pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:25">gnutls_x509_crt_t</name></type> <name pos:start="89:27" pos:end="89:30">cert</name></decl>;</decl_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:57"><expr pos:start="91:9" pos:end="91:56"><call pos:start="91:9" pos:end="91:56"><name pos:start="91:9" pos:end="91:17">VNC_DEBUG</name> <argument_list pos:start="91:19" pos:end="91:56">(<argument pos:start="91:20" pos:end="91:52"><expr pos:start="91:20" pos:end="91:52"><literal type="string" pos:start="91:20" pos:end="91:52">"Checking certificate chain %d\n"</literal></expr></argument>, <argument pos:start="91:55" pos:end="91:55"><expr pos:start="91:55" pos:end="91:55"><name pos:start="91:55" pos:end="91:55">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="95:22"><if pos:start="93:9" pos:end="95:22">if <condition pos:start="93:12" pos:end="93:45">(<expr pos:start="93:13" pos:end="93:44"><call pos:start="93:13" pos:end="93:40"><name pos:start="93:13" pos:end="93:32">gnutls_x509_crt_init</name> <argument_list pos:start="93:34" pos:end="93:40">(<argument pos:start="93:35" pos:end="93:39"><expr pos:start="93:35" pos:end="93:39"><operator pos:start="93:35" pos:end="93:35">&amp;</operator><name pos:start="93:36" pos:end="93:39">cert</name></expr></argument>)</argument_list></call> <operator pos:start="93:42" pos:end="93:42">&lt;</operator> <literal type="number" pos:start="93:44" pos:end="93:44">0</literal></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:22"><block_content pos:start="95:13" pos:end="95:22">

            <return pos:start="95:13" pos:end="95:22">return <expr pos:start="95:20" pos:end="95:21"><operator pos:start="95:20" pos:end="95:20">-</operator><literal type="number" pos:start="95:21" pos:end="95:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:77">(<expr pos:start="99:13" pos:end="99:76"><call pos:start="99:13" pos:end="99:72"><name pos:start="99:13" pos:end="99:34">gnutls_x509_crt_import</name><argument_list pos:start="99:35" pos:end="99:72">(<argument pos:start="99:36" pos:end="99:39"><expr pos:start="99:36" pos:end="99:39"><name pos:start="99:36" pos:end="99:39">cert</name></expr></argument>, <argument pos:start="99:42" pos:end="99:50"><expr pos:start="99:42" pos:end="99:50"><operator pos:start="99:42" pos:end="99:42">&amp;</operator><name pos:start="99:43" pos:end="99:50"><name pos:start="99:43" pos:end="99:47">certs</name><index pos:start="99:48" pos:end="99:50">[<expr pos:start="99:49" pos:end="99:49"><name pos:start="99:49" pos:end="99:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="99:53" pos:end="99:71"><expr pos:start="99:53" pos:end="99:71"><name pos:start="99:53" pos:end="99:71">GNUTLS_X509_FMT_DER</name></expr></argument>)</argument_list></call> <operator pos:start="99:74" pos:end="99:74">&lt;</operator> <literal type="number" pos:start="99:76" pos:end="99:76">0</literal></expr>)</condition> <block pos:start="99:79" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:22">

            <expr_stmt pos:start="101:13" pos:end="101:42"><expr pos:start="101:13" pos:end="101:41"><call pos:start="101:13" pos:end="101:41"><name pos:start="101:13" pos:end="101:34">gnutls_x509_crt_deinit</name> <argument_list pos:start="101:36" pos:end="101:41">(<argument pos:start="101:37" pos:end="101:40"><expr pos:start="101:37" pos:end="101:40"><name pos:start="101:37" pos:end="101:40">cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:22">return <expr pos:start="103:20" pos:end="103:21"><operator pos:start="103:20" pos:end="103:20">-</operator><literal type="number" pos:start="103:21" pos:end="103:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="109:9" pos:end="117:9"><if pos:start="109:9" pos:end="117:9">if <condition pos:start="109:12" pos:end="109:61">(<expr pos:start="109:13" pos:end="109:60"><call pos:start="109:13" pos:end="109:54"><name pos:start="109:13" pos:end="109:47">gnutls_x509_crt_get_expiration_time</name> <argument_list pos:start="109:49" pos:end="109:54">(<argument pos:start="109:50" pos:end="109:53"><expr pos:start="109:50" pos:end="109:53"><name pos:start="109:50" pos:end="109:53">cert</name></expr></argument>)</argument_list></call> <operator pos:start="109:56" pos:end="109:56">&lt;</operator> <name pos:start="109:58" pos:end="109:60">now</name></expr>)</condition> <block pos:start="109:63" pos:end="117:9">{<block_content pos:start="111:13" pos:end="115:22">

            <expr_stmt pos:start="111:13" pos:end="111:55"><expr pos:start="111:13" pos:end="111:54"><call pos:start="111:13" pos:end="111:54"><name pos:start="111:13" pos:end="111:21">VNC_DEBUG</name><argument_list pos:start="111:22" pos:end="111:54">(<argument pos:start="111:23" pos:end="111:53"><expr pos:start="111:23" pos:end="111:53"><literal type="string" pos:start="111:23" pos:end="111:53">"The certificate has expired\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:42"><expr pos:start="113:13" pos:end="113:41"><call pos:start="113:13" pos:end="113:41"><name pos:start="113:13" pos:end="113:34">gnutls_x509_crt_deinit</name> <argument_list pos:start="113:36" pos:end="113:41">(<argument pos:start="113:37" pos:end="113:40"><expr pos:start="113:37" pos:end="113:40"><name pos:start="113:37" pos:end="113:40">cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="115:13" pos:end="115:22">return <expr pos:start="115:20" pos:end="115:21"><operator pos:start="115:20" pos:end="115:20">-</operator><literal type="number" pos:start="115:21" pos:end="115:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="121:9" pos:end="129:9"><if pos:start="121:9" pos:end="129:9">if <condition pos:start="121:12" pos:end="121:61">(<expr pos:start="121:13" pos:end="121:60"><call pos:start="121:13" pos:end="121:54"><name pos:start="121:13" pos:end="121:47">gnutls_x509_crt_get_activation_time</name> <argument_list pos:start="121:49" pos:end="121:54">(<argument pos:start="121:50" pos:end="121:53"><expr pos:start="121:50" pos:end="121:53"><name pos:start="121:50" pos:end="121:53">cert</name></expr></argument>)</argument_list></call> <operator pos:start="121:56" pos:end="121:56">&gt;</operator> <name pos:start="121:58" pos:end="121:60">now</name></expr>)</condition> <block pos:start="121:63" pos:end="129:9">{<block_content pos:start="123:13" pos:end="127:22">

            <expr_stmt pos:start="123:13" pos:end="123:64"><expr pos:start="123:13" pos:end="123:63"><call pos:start="123:13" pos:end="123:63"><name pos:start="123:13" pos:end="123:21">VNC_DEBUG</name><argument_list pos:start="123:22" pos:end="123:63">(<argument pos:start="123:23" pos:end="123:62"><expr pos:start="123:23" pos:end="123:62"><literal type="string" pos:start="123:23" pos:end="123:62">"The certificate is not yet activated\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:42"><expr pos:start="125:13" pos:end="125:41"><call pos:start="125:13" pos:end="125:41"><name pos:start="125:13" pos:end="125:34">gnutls_x509_crt_deinit</name> <argument_list pos:start="125:36" pos:end="125:41">(<argument pos:start="125:37" pos:end="125:40"><expr pos:start="125:37" pos:end="125:40"><name pos:start="125:37" pos:end="125:40">cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="127:13" pos:end="127:22">return <expr pos:start="127:20" pos:end="127:21"><operator pos:start="127:20" pos:end="127:20">-</operator><literal type="number" pos:start="127:21" pos:end="127:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="133:9" pos:end="141:9"><if pos:start="133:9" pos:end="141:9">if <condition pos:start="133:12" pos:end="133:61">(<expr pos:start="133:13" pos:end="133:60"><call pos:start="133:13" pos:end="133:54"><name pos:start="133:13" pos:end="133:47">gnutls_x509_crt_get_activation_time</name> <argument_list pos:start="133:49" pos:end="133:54">(<argument pos:start="133:50" pos:end="133:53"><expr pos:start="133:50" pos:end="133:53"><name pos:start="133:50" pos:end="133:53">cert</name></expr></argument>)</argument_list></call> <operator pos:start="133:56" pos:end="133:56">&gt;</operator> <name pos:start="133:58" pos:end="133:60">now</name></expr>)</condition> <block pos:start="133:63" pos:end="141:9">{<block_content pos:start="135:13" pos:end="139:22">

            <expr_stmt pos:start="135:13" pos:end="135:64"><expr pos:start="135:13" pos:end="135:63"><call pos:start="135:13" pos:end="135:63"><name pos:start="135:13" pos:end="135:21">VNC_DEBUG</name><argument_list pos:start="135:22" pos:end="135:63">(<argument pos:start="135:23" pos:end="135:62"><expr pos:start="135:23" pos:end="135:62"><literal type="string" pos:start="135:23" pos:end="135:62">"The certificate is not yet activated\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:42"><expr pos:start="137:13" pos:end="137:41"><call pos:start="137:13" pos:end="137:41"><name pos:start="137:13" pos:end="137:34">gnutls_x509_crt_deinit</name> <argument_list pos:start="137:36" pos:end="137:41">(<argument pos:start="137:37" pos:end="137:40"><expr pos:start="137:37" pos:end="137:40"><name pos:start="137:37" pos:end="137:40">cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="139:13" pos:end="139:22">return <expr pos:start="139:20" pos:end="139:21"><operator pos:start="139:20" pos:end="139:20">-</operator><literal type="number" pos:start="139:21" pos:end="139:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="145:9" pos:end="211:9"><if pos:start="145:9" pos:end="211:9">if <condition pos:start="145:12" pos:end="145:19">(<expr pos:start="145:13" pos:end="145:18"><name pos:start="145:13" pos:end="145:13">i</name> <operator pos:start="145:15" pos:end="145:16">==</operator> <literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>)</condition> <block pos:start="145:21" pos:end="211:9">{<block_content pos:start="147:13" pos:end="209:13">

            <decl_stmt pos:start="147:13" pos:end="147:36"><decl pos:start="147:13" pos:end="147:35"><type pos:start="147:13" pos:end="147:18"><name pos:start="147:13" pos:end="147:18">size_t</name></type> <name pos:start="147:20" pos:end="147:28">dnameSize</name> <init pos:start="147:30" pos:end="147:35">= <expr pos:start="147:32" pos:end="147:35"><literal type="number" pos:start="147:32" pos:end="147:35">1024</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:48"><expr pos:start="149:13" pos:end="149:47"><name pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:14">vs</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:19">tls</name><operator pos:start="149:20" pos:end="149:20">.</operator><name pos:start="149:21" pos:end="149:25">dname</name></name> <operator pos:start="149:27" pos:end="149:27">=</operator> <call pos:start="149:29" pos:end="149:47"><name pos:start="149:29" pos:end="149:36">g_malloc</name><argument_list pos:start="149:37" pos:end="149:47">(<argument pos:start="149:38" pos:end="149:46"><expr pos:start="149:38" pos:end="149:46"><name pos:start="149:38" pos:end="149:46">dnameSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <label pos:start="151:9" pos:end="151:16"><name pos:start="151:9" pos:end="151:15">requery</name>:</label>

            <if_stmt pos:start="153:13" pos:end="171:13"><if pos:start="153:13" pos:end="171:13">if <condition pos:start="153:16" pos:end="153:86">(<expr pos:start="153:17" pos:end="153:85"><operator pos:start="153:17" pos:end="153:17">(</operator><name pos:start="153:18" pos:end="153:20">ret</name> <operator pos:start="153:22" pos:end="153:22">=</operator> <call pos:start="153:24" pos:end="153:79"><name pos:start="153:24" pos:end="153:45">gnutls_x509_crt_get_dn</name> <argument_list pos:start="153:47" pos:end="153:79">(<argument pos:start="153:48" pos:end="153:51"><expr pos:start="153:48" pos:end="153:51"><name pos:start="153:48" pos:end="153:51">cert</name></expr></argument>, <argument pos:start="153:54" pos:end="153:66"><expr pos:start="153:54" pos:end="153:66"><name pos:start="153:54" pos:end="153:66"><name pos:start="153:54" pos:end="153:55">vs</name><operator pos:start="153:56" pos:end="153:57">-&gt;</operator><name pos:start="153:58" pos:end="153:60">tls</name><operator pos:start="153:61" pos:end="153:61">.</operator><name pos:start="153:62" pos:end="153:66">dname</name></name></expr></argument>, <argument pos:start="153:69" pos:end="153:78"><expr pos:start="153:69" pos:end="153:78"><operator pos:start="153:69" pos:end="153:69">&amp;</operator><name pos:start="153:70" pos:end="153:78">dnameSize</name></expr></argument>)</argument_list></call><operator pos:start="153:80" pos:end="153:80">)</operator> <operator pos:start="153:82" pos:end="153:83">!=</operator> <literal type="number" pos:start="153:85" pos:end="153:85">0</literal></expr>)</condition> <block pos:start="153:88" pos:end="171:13">{<block_content pos:start="155:17" pos:end="169:26">

                <if_stmt pos:start="155:17" pos:end="161:17"><if pos:start="155:17" pos:end="161:17">if <condition pos:start="155:20" pos:end="155:56">(<expr pos:start="155:21" pos:end="155:55"><name pos:start="155:21" pos:end="155:23">ret</name> <operator pos:start="155:25" pos:end="155:26">==</operator> <name pos:start="155:28" pos:end="155:55">GNUTLS_E_SHORT_MEMORY_BUFFER</name></expr>)</condition> <block pos:start="155:58" pos:end="161:17">{<block_content pos:start="157:21" pos:end="159:33">

                    <expr_stmt pos:start="157:21" pos:end="157:72"><expr pos:start="157:21" pos:end="157:71"><name pos:start="157:21" pos:end="157:33"><name pos:start="157:21" pos:end="157:22">vs</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:27">tls</name><operator pos:start="157:28" pos:end="157:28">.</operator><name pos:start="157:29" pos:end="157:33">dname</name></name> <operator pos:start="157:35" pos:end="157:35">=</operator> <call pos:start="157:37" pos:end="157:71"><name pos:start="157:37" pos:end="157:45">g_realloc</name><argument_list pos:start="157:46" pos:end="157:71">(<argument pos:start="157:47" pos:end="157:59"><expr pos:start="157:47" pos:end="157:59"><name pos:start="157:47" pos:end="157:59"><name pos:start="157:47" pos:end="157:48">vs</name><operator pos:start="157:49" pos:end="157:50">-&gt;</operator><name pos:start="157:51" pos:end="157:53">tls</name><operator pos:start="157:54" pos:end="157:54">.</operator><name pos:start="157:55" pos:end="157:59">dname</name></name></expr></argument>, <argument pos:start="157:62" pos:end="157:70"><expr pos:start="157:62" pos:end="157:70"><name pos:start="157:62" pos:end="157:70">dnameSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="159:21" pos:end="159:33">goto <name pos:start="159:26" pos:end="159:32">requery</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:46"><expr pos:start="163:17" pos:end="163:45"><call pos:start="163:17" pos:end="163:45"><name pos:start="163:17" pos:end="163:38">gnutls_x509_crt_deinit</name> <argument_list pos:start="163:40" pos:end="163:45">(<argument pos:start="163:41" pos:end="163:44"><expr pos:start="163:41" pos:end="163:44"><name pos:start="163:41" pos:end="163:44">cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="167:49"><expr pos:start="165:17" pos:end="167:48"><call pos:start="165:17" pos:end="167:48"><name pos:start="165:17" pos:end="165:25">VNC_DEBUG</name><argument_list pos:start="165:26" pos:end="167:48">(<argument pos:start="165:27" pos:end="165:68"><expr pos:start="165:27" pos:end="165:68"><literal type="string" pos:start="165:27" pos:end="165:68">"Cannot get client distinguished name: %s"</literal></expr></argument>,

                          <argument pos:start="167:27" pos:end="167:47"><expr pos:start="167:27" pos:end="167:47"><call pos:start="167:27" pos:end="167:47"><name pos:start="167:27" pos:end="167:41">gnutls_strerror</name> <argument_list pos:start="167:43" pos:end="167:47">(<argument pos:start="167:44" pos:end="167:46"><expr pos:start="167:44" pos:end="167:46"><name pos:start="167:44" pos:end="167:46">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="169:17" pos:end="169:26">return <expr pos:start="169:24" pos:end="169:25"><operator pos:start="169:24" pos:end="169:24">-</operator><literal type="number" pos:start="169:25" pos:end="169:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="175:13" pos:end="209:13"><if pos:start="175:13" pos:end="209:13">if <condition pos:start="175:16" pos:end="175:39">(<expr pos:start="175:17" pos:end="175:38"><name pos:start="175:17" pos:end="175:38"><name pos:start="175:17" pos:end="175:18">vs</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:22">vd</name><operator pos:start="175:23" pos:end="175:24">-&gt;</operator><name pos:start="175:25" pos:end="175:27">tls</name><operator pos:start="175:28" pos:end="175:28">.</operator><name pos:start="175:29" pos:end="175:38">x509verify</name></name></expr>)</condition> <block pos:start="175:41" pos:end="209:13">{<block_content pos:start="177:17" pos:end="207:17">

                <decl_stmt pos:start="177:17" pos:end="177:26"><decl pos:start="177:17" pos:end="177:25"><type pos:start="177:17" pos:end="177:19"><name pos:start="177:17" pos:end="177:19">int</name></type> <name pos:start="177:21" pos:end="177:25">allow</name></decl>;</decl_stmt>

                <if_stmt pos:start="179:17" pos:end="187:17"><if pos:start="179:17" pos:end="187:17">if <condition pos:start="179:20" pos:end="179:37">(<expr pos:start="179:21" pos:end="179:36"><operator pos:start="179:21" pos:end="179:21">!</operator><name pos:start="179:22" pos:end="179:36"><name pos:start="179:22" pos:end="179:23">vs</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:27">vd</name><operator pos:start="179:28" pos:end="179:29">-&gt;</operator><name pos:start="179:30" pos:end="179:32">tls</name><operator pos:start="179:33" pos:end="179:33">.</operator><name pos:start="179:34" pos:end="179:36">acl</name></name></expr>)</condition> <block pos:start="179:39" pos:end="187:17">{<block_content pos:start="181:21" pos:end="185:29">

                    <expr_stmt pos:start="181:21" pos:end="181:67"><expr pos:start="181:21" pos:end="181:66"><call pos:start="181:21" pos:end="181:66"><name pos:start="181:21" pos:end="181:29">VNC_DEBUG</name><argument_list pos:start="181:30" pos:end="181:66">(<argument pos:start="181:31" pos:end="181:65"><expr pos:start="181:31" pos:end="181:65"><literal type="string" pos:start="181:31" pos:end="181:65">"no ACL activated, allowing access"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="183:21" pos:end="183:50"><expr pos:start="183:21" pos:end="183:49"><call pos:start="183:21" pos:end="183:49"><name pos:start="183:21" pos:end="183:42">gnutls_x509_crt_deinit</name> <argument_list pos:start="183:44" pos:end="183:49">(<argument pos:start="183:45" pos:end="183:48"><expr pos:start="183:45" pos:end="183:48"><name pos:start="183:45" pos:end="183:48">cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <continue pos:start="185:21" pos:end="185:29">continue;</continue>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="191:17" pos:end="193:65"><expr pos:start="191:17" pos:end="193:64"><name pos:start="191:17" pos:end="191:21">allow</name> <operator pos:start="191:23" pos:end="191:23">=</operator> <call pos:start="191:25" pos:end="193:64"><name pos:start="191:25" pos:end="191:49">qemu_acl_party_is_allowed</name><argument_list pos:start="191:50" pos:end="193:64">(<argument pos:start="191:51" pos:end="191:65"><expr pos:start="191:51" pos:end="191:65"><name pos:start="191:51" pos:end="191:65"><name pos:start="191:51" pos:end="191:52">vs</name><operator pos:start="191:53" pos:end="191:54">-&gt;</operator><name pos:start="191:55" pos:end="191:56">vd</name><operator pos:start="191:57" pos:end="191:58">-&gt;</operator><name pos:start="191:59" pos:end="191:61">tls</name><operator pos:start="191:62" pos:end="191:62">.</operator><name pos:start="191:63" pos:end="191:65">acl</name></name></expr></argument>,

                                                  <argument pos:start="193:51" pos:end="193:63"><expr pos:start="193:51" pos:end="193:63"><name pos:start="193:51" pos:end="193:63"><name pos:start="193:51" pos:end="193:52">vs</name><operator pos:start="193:53" pos:end="193:54">-&gt;</operator><name pos:start="193:55" pos:end="193:57">tls</name><operator pos:start="193:58" pos:end="193:58">.</operator><name pos:start="193:59" pos:end="193:63">dname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="197:17" pos:end="199:71"><expr pos:start="197:17" pos:end="199:70"><call pos:start="197:17" pos:end="199:70"><name pos:start="197:17" pos:end="197:25">VNC_DEBUG</name><argument_list pos:start="197:26" pos:end="199:70">(<argument pos:start="197:27" pos:end="197:61"><expr pos:start="197:27" pos:end="197:61"><literal type="string" pos:start="197:27" pos:end="197:61">"TLS x509 ACL check for %s is %s\n"</literal></expr></argument>,

                          <argument pos:start="199:27" pos:end="199:39"><expr pos:start="199:27" pos:end="199:39"><name pos:start="199:27" pos:end="199:39"><name pos:start="199:27" pos:end="199:28">vs</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:33">tls</name><operator pos:start="199:34" pos:end="199:34">.</operator><name pos:start="199:35" pos:end="199:39">dname</name></name></expr></argument>, <argument pos:start="199:42" pos:end="199:69"><expr pos:start="199:42" pos:end="199:69"><ternary pos:start="199:42" pos:end="199:69"><condition pos:start="199:42" pos:end="199:48"><expr pos:start="199:42" pos:end="199:46"><name pos:start="199:42" pos:end="199:46">allow</name></expr> ?</condition><then pos:start="199:50" pos:end="199:58"> <expr pos:start="199:50" pos:end="199:58"><literal type="string" pos:start="199:50" pos:end="199:58">"allowed"</literal></expr> </then><else pos:start="199:60" pos:end="199:69">: <expr pos:start="199:62" pos:end="199:69"><literal type="string" pos:start="199:62" pos:end="199:69">"denied"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="201:17" pos:end="207:17"><if pos:start="201:17" pos:end="207:17">if <condition pos:start="201:20" pos:end="201:27">(<expr pos:start="201:21" pos:end="201:26"><operator pos:start="201:21" pos:end="201:21">!</operator><name pos:start="201:22" pos:end="201:26">allow</name></expr>)</condition> <block pos:start="201:29" pos:end="207:17">{<block_content pos:start="203:21" pos:end="205:30">

                    <expr_stmt pos:start="203:21" pos:end="203:50"><expr pos:start="203:21" pos:end="203:49"><call pos:start="203:21" pos:end="203:49"><name pos:start="203:21" pos:end="203:42">gnutls_x509_crt_deinit</name> <argument_list pos:start="203:44" pos:end="203:49">(<argument pos:start="203:45" pos:end="203:48"><expr pos:start="203:45" pos:end="203:48"><name pos:start="203:45" pos:end="203:48">cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="205:21" pos:end="205:30">return <expr pos:start="205:28" pos:end="205:29"><operator pos:start="205:28" pos:end="205:28">-</operator><literal type="number" pos:start="205:29" pos:end="205:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="215:9" pos:end="215:38"><expr pos:start="215:9" pos:end="215:37"><call pos:start="215:9" pos:end="215:37"><name pos:start="215:9" pos:end="215:30">gnutls_x509_crt_deinit</name> <argument_list pos:start="215:32" pos:end="215:37">(<argument pos:start="215:33" pos:end="215:36"><expr pos:start="215:33" pos:end="215:36"><name pos:start="215:33" pos:end="215:36">cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="221:5" pos:end="221:13">return <expr pos:start="221:12" pos:end="221:12"><literal type="number" pos:start="221:12" pos:end="221:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
