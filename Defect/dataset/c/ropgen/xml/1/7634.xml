<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7634.c" pos:tabs="8"><function pos:start="1:1" pos:end="471:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:7">av_cold</name> <specifier pos:start="1:9" pos:end="1:14">static</specifier> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:30">auto_matrix</name><parameter_list pos:start="1:31" pos:end="1:45">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:41">SwrContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="471:1">{<block_content pos:start="5:5" pos:end="469:13">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:19">out_i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:63"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">double</name></type> <name pos:start="7:12" pos:end="7:57"><name pos:start="7:12" pos:end="7:17">matrix</name><index pos:start="7:18" pos:end="7:37">[<expr pos:start="7:19" pos:end="7:36"><name pos:start="7:19" pos:end="7:36">NUM_NAMED_CHANNELS</name></expr>]</index><index pos:start="7:38" pos:end="7:57">[<expr pos:start="7:39" pos:end="7:56"><name pos:start="7:39" pos:end="7:56">NUM_NAMED_CHANNELS</name></expr>]</index></name><init pos:start="7:58" pos:end="7:63">=<expr pos:start="7:59" pos:end="7:63"><block pos:start="7:59" pos:end="7:63">{<expr pos:start="7:60" pos:end="7:62"><block pos:start="7:60" pos:end="7:62">{<expr pos:start="7:61" pos:end="7:61"><literal type="number" pos:start="7:61" pos:end="7:61">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:23">unaccounted</name></decl>, <decl pos:start="9:26" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:26" pos:end="9:37">in_ch_layout</name></decl>, <decl pos:start="9:40" pos:end="9:52"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:40" pos:end="9:52">out_ch_layout</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type> <name pos:start="11:12" pos:end="11:18">maxcoef</name><init pos:start="11:19" pos:end="11:20">=<expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:17"><name pos:start="13:10" pos:end="13:12">buf</name><index pos:start="13:13" pos:end="13:17">[<expr pos:start="13:14" pos:end="13:16"><literal type="number" pos:start="13:14" pos:end="13:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:29">matrix_encoding</name> <init pos:start="15:31" pos:end="15:50">= <expr pos:start="15:33" pos:end="15:50"><name pos:start="15:33" pos:end="15:50"><name pos:start="15:33" pos:end="15:33">s</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:50">matrix_encoding</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">float</name></type> <name pos:start="17:11" pos:end="17:16">maxval</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:52"><expr pos:start="21:5" pos:end="21:51"><name pos:start="21:5" pos:end="21:16">in_ch_layout</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:51"><name pos:start="21:20" pos:end="21:31">clean_layout</name><argument_list pos:start="21:32" pos:end="21:51">(<argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><name pos:start="21:33" pos:end="21:33">s</name></expr></argument>, <argument pos:start="21:36" pos:end="21:50"><expr pos:start="21:36" pos:end="21:50"><name pos:start="21:36" pos:end="21:50"><name pos:start="21:36" pos:end="21:36">s</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:50">in_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:17">out_ch_layout</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:53"><name pos:start="23:21" pos:end="23:32">clean_layout</name><argument_list pos:start="23:33" pos:end="23:53">(<argument pos:start="23:34" pos:end="23:34"><expr pos:start="23:34" pos:end="23:34"><name pos:start="23:34" pos:end="23:34">s</name></expr></argument>, <argument pos:start="23:37" pos:end="23:52"><expr pos:start="23:37" pos:end="23:52"><name pos:start="23:37" pos:end="23:52"><name pos:start="23:37" pos:end="23:37">s</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:52">out_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="33:44"><if pos:start="27:5" pos:end="33:44">if<condition pos:start="27:7" pos:end="31:5">(   <expr pos:start="27:11" pos:end="29:59"><name pos:start="27:11" pos:end="27:23">out_ch_layout</name> <operator pos:start="27:25" pos:end="27:26">==</operator> <name pos:start="27:28" pos:end="27:54">AV_CH_LAYOUT_STEREO_DOWNMIX</name>

       <operator pos:start="29:8" pos:end="29:9">&amp;&amp;</operator> <operator pos:start="29:11" pos:end="29:11">(</operator><name pos:start="29:12" pos:end="29:23">in_ch_layout</name> <operator pos:start="29:25" pos:end="29:25">&amp;</operator> <name pos:start="29:27" pos:end="29:53">AV_CH_LAYOUT_STEREO_DOWNMIX</name><operator pos:start="29:54" pos:end="29:54">)</operator> <operator pos:start="29:56" pos:end="29:57">==</operator> <literal type="number" pos:start="29:59" pos:end="29:59">0</literal></expr>

    )</condition><block type="pseudo" pos:start="33:9" pos:end="33:44"><block_content pos:start="33:9" pos:end="33:44">

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:21">out_ch_layout</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:43">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:43"><if pos:start="37:5" pos:end="43:43">if<condition pos:start="37:7" pos:end="41:5">(    <expr pos:start="37:12" pos:end="39:60"><name pos:start="37:12" pos:end="37:23">in_ch_layout</name> <operator pos:start="37:25" pos:end="37:26">==</operator> <name pos:start="37:28" pos:end="37:54">AV_CH_LAYOUT_STEREO_DOWNMIX</name>

       <operator pos:start="39:8" pos:end="39:9">&amp;&amp;</operator> <operator pos:start="39:11" pos:end="39:11">(</operator><name pos:start="39:12" pos:end="39:24">out_ch_layout</name> <operator pos:start="39:26" pos:end="39:26">&amp;</operator> <name pos:start="39:28" pos:end="39:54">AV_CH_LAYOUT_STEREO_DOWNMIX</name><operator pos:start="39:55" pos:end="39:55">)</operator> <operator pos:start="39:57" pos:end="39:58">==</operator> <literal type="number" pos:start="39:60" pos:end="39:60">0</literal></expr>

    )</condition><block type="pseudo" pos:start="43:9" pos:end="43:43"><block_content pos:start="43:9" pos:end="43:43">

        <expr_stmt pos:start="43:9" pos:end="43:43"><expr pos:start="43:9" pos:end="43:42"><name pos:start="43:9" pos:end="43:20">in_ch_layout</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:42">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if<condition pos:start="47:7" pos:end="47:34">(<expr pos:start="47:8" pos:end="47:33"><operator pos:start="47:8" pos:end="47:8">!</operator><call pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:19">sane_layout</name><argument_list pos:start="47:20" pos:end="47:33">(<argument pos:start="47:21" pos:end="47:32"><expr pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:32">in_ch_layout</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="47:35" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:31">

        <expr_stmt pos:start="49:9" pos:end="49:76"><expr pos:start="49:9" pos:end="49:75"><call pos:start="49:9" pos:end="49:75"><name pos:start="49:9" pos:end="49:36">av_get_channel_layout_string</name><argument_list pos:start="49:37" pos:end="49:75">(<argument pos:start="49:38" pos:end="49:40"><expr pos:start="49:38" pos:end="49:40"><name pos:start="49:38" pos:end="49:40">buf</name></expr></argument>, <argument pos:start="49:43" pos:end="49:53"><expr pos:start="49:43" pos:end="49:53"><sizeof pos:start="49:43" pos:end="49:53">sizeof<argument_list pos:start="49:49" pos:end="49:53">(<argument pos:start="49:50" pos:end="49:52"><expr pos:start="49:50" pos:end="49:52"><name pos:start="49:50" pos:end="49:52">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:56" pos:end="49:57"><expr pos:start="49:56" pos:end="49:57"><operator pos:start="49:56" pos:end="49:56">-</operator><literal type="number" pos:start="49:57" pos:end="49:57">1</literal></expr></argument>, <argument pos:start="49:60" pos:end="49:74"><expr pos:start="49:60" pos:end="49:74"><name pos:start="49:60" pos:end="49:74"><name pos:start="49:60" pos:end="49:60">s</name><operator pos:start="49:61" pos:end="49:62">-&gt;</operator><name pos:start="49:63" pos:end="49:74">in_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:85"><expr pos:start="51:9" pos:end="51:84"><call pos:start="51:9" pos:end="51:84"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:84">(<argument pos:start="51:16" pos:end="51:16"><expr pos:start="51:16" pos:end="51:16"><name pos:start="51:16" pos:end="51:16">s</name></expr></argument>, <argument pos:start="51:19" pos:end="51:30"><expr pos:start="51:19" pos:end="51:30"><name pos:start="51:19" pos:end="51:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:33" pos:end="51:78"><expr pos:start="51:33" pos:end="51:78"><literal type="string" pos:start="51:33" pos:end="51:78">"Input channel layout '%s' is not supported\n"</literal></expr></argument>, <argument pos:start="51:81" pos:end="51:83"><expr pos:start="51:81" pos:end="51:83"><name pos:start="51:81" pos:end="51:83">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:31">return <expr pos:start="53:16" pos:end="53:30"><call pos:start="53:16" pos:end="53:30"><name pos:start="53:16" pos:end="53:22">AVERROR</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if<condition pos:start="59:7" pos:end="59:35">(<expr pos:start="59:8" pos:end="59:34"><operator pos:start="59:8" pos:end="59:8">!</operator><call pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:19">sane_layout</name><argument_list pos:start="59:20" pos:end="59:34">(<argument pos:start="59:21" pos:end="59:33"><expr pos:start="59:21" pos:end="59:33"><name pos:start="59:21" pos:end="59:33">out_ch_layout</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="59:36" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:31">

        <expr_stmt pos:start="61:9" pos:end="61:77"><expr pos:start="61:9" pos:end="61:76"><call pos:start="61:9" pos:end="61:76"><name pos:start="61:9" pos:end="61:36">av_get_channel_layout_string</name><argument_list pos:start="61:37" pos:end="61:76">(<argument pos:start="61:38" pos:end="61:40"><expr pos:start="61:38" pos:end="61:40"><name pos:start="61:38" pos:end="61:40">buf</name></expr></argument>, <argument pos:start="61:43" pos:end="61:53"><expr pos:start="61:43" pos:end="61:53"><sizeof pos:start="61:43" pos:end="61:53">sizeof<argument_list pos:start="61:49" pos:end="61:53">(<argument pos:start="61:50" pos:end="61:52"><expr pos:start="61:50" pos:end="61:52"><name pos:start="61:50" pos:end="61:52">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="61:56" pos:end="61:57"><expr pos:start="61:56" pos:end="61:57"><operator pos:start="61:56" pos:end="61:56">-</operator><literal type="number" pos:start="61:57" pos:end="61:57">1</literal></expr></argument>, <argument pos:start="61:60" pos:end="61:75"><expr pos:start="61:60" pos:end="61:75"><name pos:start="61:60" pos:end="61:75"><name pos:start="61:60" pos:end="61:60">s</name><operator pos:start="61:61" pos:end="61:62">-&gt;</operator><name pos:start="61:63" pos:end="61:75">out_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:86"><expr pos:start="63:9" pos:end="63:85"><call pos:start="63:9" pos:end="63:85"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:85">(<argument pos:start="63:16" pos:end="63:16"><expr pos:start="63:16" pos:end="63:16"><name pos:start="63:16" pos:end="63:16">s</name></expr></argument>, <argument pos:start="63:19" pos:end="63:30"><expr pos:start="63:19" pos:end="63:30"><name pos:start="63:19" pos:end="63:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:33" pos:end="63:79"><expr pos:start="63:33" pos:end="63:79"><literal type="string" pos:start="63:33" pos:end="63:79">"Output channel layout '%s' is not supported\n"</literal></expr></argument>, <argument pos:start="63:82" pos:end="63:84"><expr pos:start="63:82" pos:end="63:84"><name pos:start="63:82" pos:end="63:84">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:31">return <expr pos:start="65:16" pos:end="65:30"><call pos:start="65:16" pos:end="65:30"><name pos:start="65:16" pos:end="65:22">AVERROR</name><argument_list pos:start="65:23" pos:end="65:30">(<argument pos:start="65:24" pos:end="65:29"><expr pos:start="65:24" pos:end="65:29"><name pos:start="65:24" pos:end="65:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:44"><expr pos:start="71:5" pos:end="71:43"><call pos:start="71:5" pos:end="71:43"><name pos:start="71:5" pos:end="71:10">memset</name><argument_list pos:start="71:11" pos:end="71:43">(<argument pos:start="71:12" pos:end="71:20"><expr pos:start="71:12" pos:end="71:20"><name pos:start="71:12" pos:end="71:20"><name pos:start="71:12" pos:end="71:12">s</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:20">matrix</name></name></expr></argument>, <argument pos:start="71:23" pos:end="71:23"><expr pos:start="71:23" pos:end="71:23"><literal type="number" pos:start="71:23" pos:end="71:23">0</literal></expr></argument>, <argument pos:start="71:26" pos:end="71:42"><expr pos:start="71:26" pos:end="71:42"><sizeof pos:start="71:26" pos:end="71:42">sizeof<argument_list pos:start="71:32" pos:end="71:42">(<argument pos:start="71:33" pos:end="71:41"><expr pos:start="71:33" pos:end="71:41"><name pos:start="71:33" pos:end="71:41"><name pos:start="71:33" pos:end="71:33">s</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:41">matrix</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="73:5" pos:end="79:5">for<control pos:start="73:8" pos:end="73:43">(<init pos:start="73:9" pos:end="73:12"><expr pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:9">i</name><operator pos:start="73:10" pos:end="73:10">=</operator><literal type="number" pos:start="73:11" pos:end="73:11">0</literal></expr>;</init> <condition pos:start="73:14" pos:end="73:38"><expr pos:start="73:14" pos:end="73:37"><name pos:start="73:14" pos:end="73:14">i</name><operator pos:start="73:15" pos:end="73:15">&lt;</operator><call pos:start="73:16" pos:end="73:37"><name pos:start="73:16" pos:end="73:29">FF_ARRAY_ELEMS</name><argument_list pos:start="73:30" pos:end="73:37">(<argument pos:start="73:31" pos:end="73:36"><expr pos:start="73:31" pos:end="73:36"><name pos:start="73:31" pos:end="73:36">matrix</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><name pos:start="73:40" pos:end="73:40">i</name><operator pos:start="73:41" pos:end="73:42">++</operator></expr></incr>)</control><block pos:start="73:44" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:30">

        <if_stmt pos:start="75:9" pos:end="77:30"><if pos:start="75:9" pos:end="77:30">if<condition pos:start="75:11" pos:end="75:52">(<expr pos:start="75:12" pos:end="75:51"><name pos:start="75:12" pos:end="75:23">in_ch_layout</name> <operator pos:start="75:25" pos:end="75:25">&amp;</operator> <name pos:start="75:27" pos:end="75:39">out_ch_layout</name> <operator pos:start="75:41" pos:end="75:41">&amp;</operator> <operator pos:start="75:43" pos:end="75:43">(</operator><literal type="number" pos:start="75:44" pos:end="75:47">1ULL</literal><operator pos:start="75:48" pos:end="75:49">&lt;&lt;</operator><name pos:start="75:50" pos:end="75:50">i</name><operator pos:start="75:51" pos:end="75:51">)</operator></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:30"><block_content pos:start="77:13" pos:end="77:30">

            <expr_stmt pos:start="77:13" pos:end="77:30"><expr pos:start="77:13" pos:end="77:29"><name pos:start="77:13" pos:end="77:24"><name pos:start="77:13" pos:end="77:18">matrix</name><index pos:start="77:19" pos:end="77:21">[<expr pos:start="77:20" pos:end="77:20"><name pos:start="77:20" pos:end="77:20">i</name></expr>]</index><index pos:start="77:22" pos:end="77:24">[<expr pos:start="77:23" pos:end="77:23"><name pos:start="77:23" pos:end="77:23">i</name></expr>]</index></name><operator pos:start="77:25" pos:end="77:25">=</operator> <literal type="number" pos:start="77:27" pos:end="77:29">1.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="83:5" pos:end="83:47"><expr pos:start="83:5" pos:end="83:46"><name pos:start="83:5" pos:end="83:15">unaccounted</name><operator pos:start="83:16" pos:end="83:16">=</operator> <name pos:start="83:18" pos:end="83:29">in_ch_layout</name> <operator pos:start="83:31" pos:end="83:31">&amp;</operator> <operator pos:start="83:33" pos:end="83:33">~</operator><name pos:start="83:34" pos:end="83:46">out_ch_layout</name></expr>;</expr_stmt>



<comment type="line" pos:start="87:1" pos:end="87:32">//FIXME implement dolby surround</comment>

<comment type="line" pos:start="89:1" pos:end="89:26">//FIXME implement full ac3</comment>





    <if_stmt pos:start="95:5" pos:end="117:5"><if pos:start="95:5" pos:end="117:5">if<condition pos:start="95:7" pos:end="95:40">(<expr pos:start="95:8" pos:end="95:39"><name pos:start="95:8" pos:end="95:18">unaccounted</name> <operator pos:start="95:20" pos:end="95:20">&amp;</operator> <name pos:start="95:22" pos:end="95:39">AV_CH_FRONT_CENTER</name></expr>)</condition><block pos:start="95:41" pos:end="117:5">{<block_content pos:start="97:9" pos:end="115:26">

        <if_stmt pos:start="97:9" pos:end="115:26"><if pos:start="97:9" pos:end="113:9">if<condition pos:start="97:11" pos:end="97:72">(<expr pos:start="97:12" pos:end="97:71"><operator pos:start="97:12" pos:end="97:12">(</operator><name pos:start="97:13" pos:end="97:25">out_ch_layout</name> <operator pos:start="97:27" pos:end="97:27">&amp;</operator> <name pos:start="97:29" pos:end="97:47">AV_CH_LAYOUT_STEREO</name><operator pos:start="97:48" pos:end="97:48">)</operator> <operator pos:start="97:50" pos:end="97:51">==</operator> <name pos:start="97:53" pos:end="97:71">AV_CH_LAYOUT_STEREO</name></expr>)</condition><block pos:start="97:73" pos:end="113:9">{<block_content pos:start="99:13" pos:end="111:13">

            <if_stmt pos:start="99:13" pos:end="111:13"><if pos:start="99:13" pos:end="105:13">if<condition pos:start="99:15" pos:end="99:50">(<expr pos:start="99:16" pos:end="99:49"><name pos:start="99:16" pos:end="99:27">in_ch_layout</name> <operator pos:start="99:29" pos:end="99:29">&amp;</operator> <name pos:start="99:31" pos:end="99:49">AV_CH_LAYOUT_STEREO</name></expr>)</condition> <block pos:start="99:52" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:60">

                <expr_stmt pos:start="101:17" pos:end="101:60"><expr pos:start="101:17" pos:end="101:59"><name pos:start="101:17" pos:end="101:49"><name pos:start="101:17" pos:end="101:22">matrix</name><index pos:start="101:23" pos:end="101:35">[ <expr pos:start="101:25" pos:end="101:34"><name pos:start="101:25" pos:end="101:34">FRONT_LEFT</name></expr>]</index><index pos:start="101:36" pos:end="101:49">[<expr pos:start="101:37" pos:end="101:48"><name pos:start="101:37" pos:end="101:48">FRONT_CENTER</name></expr>]</index></name><operator pos:start="101:50" pos:end="101:51">+=</operator> <name pos:start="101:53" pos:end="101:59"><name pos:start="101:53" pos:end="101:53">s</name><operator pos:start="101:54" pos:end="101:55">-&gt;</operator><name pos:start="101:56" pos:end="101:59">clev</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:60"><expr pos:start="103:17" pos:end="103:59"><name pos:start="103:17" pos:end="103:49"><name pos:start="103:17" pos:end="103:22">matrix</name><index pos:start="103:23" pos:end="103:35">[<expr pos:start="103:24" pos:end="103:34"><name pos:start="103:24" pos:end="103:34">FRONT_RIGHT</name></expr>]</index><index pos:start="103:36" pos:end="103:49">[<expr pos:start="103:37" pos:end="103:48"><name pos:start="103:37" pos:end="103:48">FRONT_CENTER</name></expr>]</index></name><operator pos:start="103:50" pos:end="103:51">+=</operator> <name pos:start="103:53" pos:end="103:59"><name pos:start="103:53" pos:end="103:53">s</name><operator pos:start="103:54" pos:end="103:55">-&gt;</operator><name pos:start="103:56" pos:end="103:59">clev</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="105:15" pos:end="111:13">else <block pos:start="105:20" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:62">

                <expr_stmt pos:start="107:17" pos:end="107:62"><expr pos:start="107:17" pos:end="107:61"><name pos:start="107:17" pos:end="107:49"><name pos:start="107:17" pos:end="107:22">matrix</name><index pos:start="107:23" pos:end="107:35">[ <expr pos:start="107:25" pos:end="107:34"><name pos:start="107:25" pos:end="107:34">FRONT_LEFT</name></expr>]</index><index pos:start="107:36" pos:end="107:49">[<expr pos:start="107:37" pos:end="107:48"><name pos:start="107:37" pos:end="107:48">FRONT_CENTER</name></expr>]</index></name><operator pos:start="107:50" pos:end="107:51">+=</operator> <name pos:start="107:53" pos:end="107:61">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:62"><expr pos:start="109:17" pos:end="109:61"><name pos:start="109:17" pos:end="109:49"><name pos:start="109:17" pos:end="109:22">matrix</name><index pos:start="109:23" pos:end="109:35">[<expr pos:start="109:24" pos:end="109:34"><name pos:start="109:24" pos:end="109:34">FRONT_RIGHT</name></expr>]</index><index pos:start="109:36" pos:end="109:49">[<expr pos:start="109:37" pos:end="109:48"><name pos:start="109:37" pos:end="109:48">FRONT_CENTER</name></expr>]</index></name><operator pos:start="109:50" pos:end="109:51">+=</operator> <name pos:start="109:53" pos:end="109:61">M_SQRT1_2</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><else pos:start="113:10" pos:end="115:26">else<block type="pseudo" pos:start="115:13" pos:end="115:26"><block_content pos:start="115:13" pos:end="115:26">

            <expr_stmt pos:start="115:13" pos:end="115:26"><expr pos:start="115:13" pos:end="115:25"><call pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:22">av_assert0</name><argument_list pos:start="115:23" pos:end="115:25">(<argument pos:start="115:24" pos:end="115:24"><expr pos:start="115:24" pos:end="115:24"><literal type="number" pos:start="115:24" pos:end="115:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="119:5" pos:end="135:5"><if pos:start="119:5" pos:end="135:5">if<condition pos:start="119:7" pos:end="119:41">(<expr pos:start="119:8" pos:end="119:40"><name pos:start="119:8" pos:end="119:18">unaccounted</name> <operator pos:start="119:20" pos:end="119:20">&amp;</operator> <name pos:start="119:22" pos:end="119:40">AV_CH_LAYOUT_STEREO</name></expr>)</condition><block pos:start="119:42" pos:end="135:5">{<block_content pos:start="121:9" pos:end="133:26">

        <if_stmt pos:start="121:9" pos:end="133:26"><if pos:start="121:9" pos:end="131:9">if<condition pos:start="121:11" pos:end="121:46">(<expr pos:start="121:12" pos:end="121:45"><name pos:start="121:12" pos:end="121:24">out_ch_layout</name> <operator pos:start="121:26" pos:end="121:26">&amp;</operator> <name pos:start="121:28" pos:end="121:45">AV_CH_FRONT_CENTER</name></expr>)</condition><block pos:start="121:47" pos:end="131:9">{<block_content pos:start="123:13" pos:end="129:70">

            <expr_stmt pos:start="123:13" pos:end="123:58"><expr pos:start="123:13" pos:end="123:57"><name pos:start="123:13" pos:end="123:45"><name pos:start="123:13" pos:end="123:18">matrix</name><index pos:start="123:19" pos:end="123:32">[<expr pos:start="123:20" pos:end="123:31"><name pos:start="123:20" pos:end="123:31">FRONT_CENTER</name></expr>]</index><index pos:start="123:33" pos:end="123:45">[ <expr pos:start="123:35" pos:end="123:44"><name pos:start="123:35" pos:end="123:44">FRONT_LEFT</name></expr>]</index></name><operator pos:start="123:46" pos:end="123:47">+=</operator> <name pos:start="123:49" pos:end="123:57">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:58"><expr pos:start="125:13" pos:end="125:57"><name pos:start="125:13" pos:end="125:45"><name pos:start="125:13" pos:end="125:18">matrix</name><index pos:start="125:19" pos:end="125:32">[<expr pos:start="125:20" pos:end="125:31"><name pos:start="125:20" pos:end="125:31">FRONT_CENTER</name></expr>]</index><index pos:start="125:33" pos:end="125:45">[<expr pos:start="125:34" pos:end="125:44"><name pos:start="125:34" pos:end="125:44">FRONT_RIGHT</name></expr>]</index></name><operator pos:start="125:46" pos:end="125:47">+=</operator> <name pos:start="125:49" pos:end="125:57">M_SQRT1_2</name></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="129:70"><if pos:start="127:13" pos:end="129:70">if<condition pos:start="127:15" pos:end="127:49">(<expr pos:start="127:16" pos:end="127:48"><name pos:start="127:16" pos:end="127:27">in_ch_layout</name> <operator pos:start="127:29" pos:end="127:29">&amp;</operator> <name pos:start="127:31" pos:end="127:48">AV_CH_FRONT_CENTER</name></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:70"><block_content pos:start="129:17" pos:end="129:70">

                <expr_stmt pos:start="129:17" pos:end="129:70"><expr pos:start="129:17" pos:end="129:69"><name pos:start="129:17" pos:end="129:51"><name pos:start="129:17" pos:end="129:22">matrix</name><index pos:start="129:23" pos:end="129:36">[<expr pos:start="129:24" pos:end="129:35"><name pos:start="129:24" pos:end="129:35">FRONT_CENTER</name></expr>]</index><index pos:start="129:37" pos:end="129:51">[ <expr pos:start="129:39" pos:end="129:50"><name pos:start="129:39" pos:end="129:50">FRONT_CENTER</name></expr>]</index></name> <operator pos:start="129:53" pos:end="129:53">=</operator> <name pos:start="129:55" pos:end="129:61"><name pos:start="129:55" pos:end="129:55">s</name><operator pos:start="129:56" pos:end="129:57">-&gt;</operator><name pos:start="129:58" pos:end="129:61">clev</name></name><operator pos:start="129:62" pos:end="129:62">*</operator><call pos:start="129:63" pos:end="129:69"><name pos:start="129:63" pos:end="129:66">sqrt</name><argument_list pos:start="129:67" pos:end="129:69">(<argument pos:start="129:68" pos:end="129:68"><expr pos:start="129:68" pos:end="129:68"><literal type="number" pos:start="129:68" pos:end="129:68">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if><else pos:start="131:10" pos:end="133:26">else<block type="pseudo" pos:start="133:13" pos:end="133:26"><block_content pos:start="133:13" pos:end="133:26">

            <expr_stmt pos:start="133:13" pos:end="133:26"><expr pos:start="133:13" pos:end="133:25"><call pos:start="133:13" pos:end="133:25"><name pos:start="133:13" pos:end="133:22">av_assert0</name><argument_list pos:start="133:23" pos:end="133:25">(<argument pos:start="133:24" pos:end="133:24"><expr pos:start="133:24" pos:end="133:24"><literal type="number" pos:start="133:24" pos:end="133:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="139:5" pos:end="189:5"><if pos:start="139:5" pos:end="189:5">if<condition pos:start="139:7" pos:end="139:39">(<expr pos:start="139:8" pos:end="139:38"><name pos:start="139:8" pos:end="139:18">unaccounted</name> <operator pos:start="139:20" pos:end="139:20">&amp;</operator> <name pos:start="139:22" pos:end="139:38">AV_CH_BACK_CENTER</name></expr>)</condition><block pos:start="139:40" pos:end="189:5">{<block_content pos:start="141:9" pos:end="187:26">

        <if_stmt pos:start="141:9" pos:end="187:26"><if pos:start="141:9" pos:end="147:9">if<condition pos:start="141:11" pos:end="141:43">(<expr pos:start="141:12" pos:end="141:42"><name pos:start="141:12" pos:end="141:24">out_ch_layout</name> <operator pos:start="141:26" pos:end="141:26">&amp;</operator> <name pos:start="141:28" pos:end="141:42">AV_CH_BACK_LEFT</name></expr>)</condition><block pos:start="141:44" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:56">

            <expr_stmt pos:start="143:13" pos:end="143:56"><expr pos:start="143:13" pos:end="143:55"><name pos:start="143:13" pos:end="143:43"><name pos:start="143:13" pos:end="143:18">matrix</name><index pos:start="143:19" pos:end="143:30">[ <expr pos:start="143:21" pos:end="143:29"><name pos:start="143:21" pos:end="143:29">BACK_LEFT</name></expr>]</index><index pos:start="143:31" pos:end="143:43">[<expr pos:start="143:32" pos:end="143:42"><name pos:start="143:32" pos:end="143:42">BACK_CENTER</name></expr>]</index></name><operator pos:start="143:44" pos:end="143:45">+=</operator> <name pos:start="143:47" pos:end="143:55">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:56"><expr pos:start="145:13" pos:end="145:55"><name pos:start="145:13" pos:end="145:43"><name pos:start="145:13" pos:end="145:18">matrix</name><index pos:start="145:19" pos:end="145:30">[<expr pos:start="145:20" pos:end="145:29"><name pos:start="145:20" pos:end="145:29">BACK_RIGHT</name></expr>]</index><index pos:start="145:31" pos:end="145:43">[<expr pos:start="145:32" pos:end="145:42"><name pos:start="145:32" pos:end="145:42">BACK_CENTER</name></expr>]</index></name><operator pos:start="145:44" pos:end="145:45">+=</operator> <name pos:start="145:47" pos:end="145:55">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="147:10" pos:end="153:9">else if<condition pos:start="147:17" pos:end="147:49">(<expr pos:start="147:18" pos:end="147:48"><name pos:start="147:18" pos:end="147:30">out_ch_layout</name> <operator pos:start="147:32" pos:end="147:32">&amp;</operator> <name pos:start="147:34" pos:end="147:48">AV_CH_SIDE_LEFT</name></expr>)</condition><block pos:start="147:50" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:56">

            <expr_stmt pos:start="149:13" pos:end="149:56"><expr pos:start="149:13" pos:end="149:55"><name pos:start="149:13" pos:end="149:43"><name pos:start="149:13" pos:end="149:18">matrix</name><index pos:start="149:19" pos:end="149:30">[ <expr pos:start="149:21" pos:end="149:29"><name pos:start="149:21" pos:end="149:29">SIDE_LEFT</name></expr>]</index><index pos:start="149:31" pos:end="149:43">[<expr pos:start="149:32" pos:end="149:42"><name pos:start="149:32" pos:end="149:42">BACK_CENTER</name></expr>]</index></name><operator pos:start="149:44" pos:end="149:45">+=</operator> <name pos:start="149:47" pos:end="149:55">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:56"><expr pos:start="151:13" pos:end="151:55"><name pos:start="151:13" pos:end="151:43"><name pos:start="151:13" pos:end="151:18">matrix</name><index pos:start="151:19" pos:end="151:30">[<expr pos:start="151:20" pos:end="151:29"><name pos:start="151:20" pos:end="151:29">SIDE_RIGHT</name></expr>]</index><index pos:start="151:31" pos:end="151:43">[<expr pos:start="151:32" pos:end="151:42"><name pos:start="151:32" pos:end="151:42">BACK_CENTER</name></expr>]</index></name><operator pos:start="151:44" pos:end="151:45">+=</operator> <name pos:start="151:47" pos:end="151:55">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="153:10" pos:end="181:9">else if<condition pos:start="153:17" pos:end="153:50">(<expr pos:start="153:18" pos:end="153:49"><name pos:start="153:18" pos:end="153:30">out_ch_layout</name> <operator pos:start="153:32" pos:end="153:32">&amp;</operator> <name pos:start="153:34" pos:end="153:49">AV_CH_FRONT_LEFT</name></expr>)</condition><block pos:start="153:51" pos:end="181:9">{<block_content pos:start="155:13" pos:end="179:13">

            <if_stmt pos:start="155:13" pos:end="179:13"><if pos:start="155:13" pos:end="173:13">if <condition pos:start="155:16" pos:end="157:60">(<expr pos:start="155:17" pos:end="157:59"><name pos:start="155:17" pos:end="155:31">matrix_encoding</name> <operator pos:start="155:33" pos:end="155:34">==</operator> <name pos:start="155:36" pos:end="155:59">AV_MATRIX_ENCODING_DOLBY</name> <operator pos:start="155:61" pos:end="155:62">||</operator>

                <name pos:start="157:17" pos:end="157:31">matrix_encoding</name> <operator pos:start="157:33" pos:end="157:34">==</operator> <name pos:start="157:36" pos:end="157:59">AV_MATRIX_ENCODING_DPLII</name></expr>)</condition> <block pos:start="157:62" pos:end="173:13">{<block_content pos:start="159:17" pos:end="171:17">

                <if_stmt pos:start="159:17" pos:end="171:17"><if pos:start="159:17" pos:end="165:17">if <condition pos:start="159:20" pos:end="159:70">(<expr pos:start="159:21" pos:end="159:69"><name pos:start="159:21" pos:end="159:31">unaccounted</name> <operator pos:start="159:33" pos:end="159:33">&amp;</operator> <operator pos:start="159:35" pos:end="159:35">(</operator><name pos:start="159:36" pos:end="159:50">AV_CH_BACK_LEFT</name> <operator pos:start="159:52" pos:end="159:52">|</operator> <name pos:start="159:54" pos:end="159:68">AV_CH_SIDE_LEFT</name><operator pos:start="159:69" pos:end="159:69">)</operator></expr>)</condition> <block pos:start="159:72" pos:end="165:17">{<block_content pos:start="161:21" pos:end="163:76">

                    <expr_stmt pos:start="161:21" pos:end="161:76"><expr pos:start="161:21" pos:end="161:75"><name pos:start="161:21" pos:end="161:52"><name pos:start="161:21" pos:end="161:26">matrix</name><index pos:start="161:27" pos:end="161:39">[<expr pos:start="161:28" pos:end="161:37"><name pos:start="161:28" pos:end="161:37">FRONT_LEFT</name></expr> ]</index><index pos:start="161:40" pos:end="161:52">[<expr pos:start="161:41" pos:end="161:51"><name pos:start="161:41" pos:end="161:51">BACK_CENTER</name></expr>]</index></name> <operator pos:start="161:54" pos:end="161:55">-=</operator> <name pos:start="161:57" pos:end="161:63"><name pos:start="161:57" pos:end="161:57">s</name><operator pos:start="161:58" pos:end="161:59">-&gt;</operator><name pos:start="161:60" pos:end="161:63">slev</name></name> <operator pos:start="161:65" pos:end="161:65">*</operator> <name pos:start="161:67" pos:end="161:75">M_SQRT1_2</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="163:21" pos:end="163:76"><expr pos:start="163:21" pos:end="163:75"><name pos:start="163:21" pos:end="163:52"><name pos:start="163:21" pos:end="163:26">matrix</name><index pos:start="163:27" pos:end="163:39">[<expr pos:start="163:28" pos:end="163:38"><name pos:start="163:28" pos:end="163:38">FRONT_RIGHT</name></expr>]</index><index pos:start="163:40" pos:end="163:52">[<expr pos:start="163:41" pos:end="163:51"><name pos:start="163:41" pos:end="163:51">BACK_CENTER</name></expr>]</index></name> <operator pos:start="163:54" pos:end="163:55">+=</operator> <name pos:start="163:57" pos:end="163:63"><name pos:start="163:57" pos:end="163:57">s</name><operator pos:start="163:58" pos:end="163:59">-&gt;</operator><name pos:start="163:60" pos:end="163:63">slev</name></name> <operator pos:start="163:65" pos:end="163:65">*</operator> <name pos:start="163:67" pos:end="163:75">M_SQRT1_2</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="165:19" pos:end="171:17">else <block pos:start="165:24" pos:end="171:17">{<block_content pos:start="167:21" pos:end="169:64">

                    <expr_stmt pos:start="167:21" pos:end="167:64"><expr pos:start="167:21" pos:end="167:63"><name pos:start="167:21" pos:end="167:52"><name pos:start="167:21" pos:end="167:26">matrix</name><index pos:start="167:27" pos:end="167:39">[<expr pos:start="167:28" pos:end="167:37"><name pos:start="167:28" pos:end="167:37">FRONT_LEFT</name></expr> ]</index><index pos:start="167:40" pos:end="167:52">[<expr pos:start="167:41" pos:end="167:51"><name pos:start="167:41" pos:end="167:51">BACK_CENTER</name></expr>]</index></name> <operator pos:start="167:54" pos:end="167:55">-=</operator> <name pos:start="167:57" pos:end="167:63"><name pos:start="167:57" pos:end="167:57">s</name><operator pos:start="167:58" pos:end="167:59">-&gt;</operator><name pos:start="167:60" pos:end="167:63">slev</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="169:21" pos:end="169:64"><expr pos:start="169:21" pos:end="169:63"><name pos:start="169:21" pos:end="169:52"><name pos:start="169:21" pos:end="169:26">matrix</name><index pos:start="169:27" pos:end="169:39">[<expr pos:start="169:28" pos:end="169:38"><name pos:start="169:28" pos:end="169:38">FRONT_RIGHT</name></expr>]</index><index pos:start="169:40" pos:end="169:52">[<expr pos:start="169:41" pos:end="169:51"><name pos:start="169:41" pos:end="169:51">BACK_CENTER</name></expr>]</index></name> <operator pos:start="169:54" pos:end="169:55">+=</operator> <name pos:start="169:57" pos:end="169:63"><name pos:start="169:57" pos:end="169:57">s</name><operator pos:start="169:58" pos:end="169:59">-&gt;</operator><name pos:start="169:60" pos:end="169:63">slev</name></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="173:15" pos:end="179:13">else <block pos:start="173:20" pos:end="179:13">{<block_content pos:start="175:17" pos:end="177:69">

                <expr_stmt pos:start="175:17" pos:end="175:69"><expr pos:start="175:17" pos:end="175:68"><name pos:start="175:17" pos:end="175:48"><name pos:start="175:17" pos:end="175:22">matrix</name><index pos:start="175:23" pos:end="175:35">[ <expr pos:start="175:25" pos:end="175:34"><name pos:start="175:25" pos:end="175:34">FRONT_LEFT</name></expr>]</index><index pos:start="175:36" pos:end="175:48">[<expr pos:start="175:37" pos:end="175:47"><name pos:start="175:37" pos:end="175:47">BACK_CENTER</name></expr>]</index></name><operator pos:start="175:49" pos:end="175:50">+=</operator> <name pos:start="175:52" pos:end="175:58"><name pos:start="175:52" pos:end="175:52">s</name><operator pos:start="175:53" pos:end="175:54">-&gt;</operator><name pos:start="175:55" pos:end="175:58">slev</name></name><operator pos:start="175:59" pos:end="175:59">*</operator><name pos:start="175:60" pos:end="175:68">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:69"><expr pos:start="177:17" pos:end="177:68"><name pos:start="177:17" pos:end="177:48"><name pos:start="177:17" pos:end="177:22">matrix</name><index pos:start="177:23" pos:end="177:35">[<expr pos:start="177:24" pos:end="177:34"><name pos:start="177:24" pos:end="177:34">FRONT_RIGHT</name></expr>]</index><index pos:start="177:36" pos:end="177:48">[<expr pos:start="177:37" pos:end="177:47"><name pos:start="177:37" pos:end="177:47">BACK_CENTER</name></expr>]</index></name><operator pos:start="177:49" pos:end="177:50">+=</operator> <name pos:start="177:52" pos:end="177:58"><name pos:start="177:52" pos:end="177:52">s</name><operator pos:start="177:53" pos:end="177:54">-&gt;</operator><name pos:start="177:55" pos:end="177:58">slev</name></name><operator pos:start="177:59" pos:end="177:59">*</operator><name pos:start="177:60" pos:end="177:68">M_SQRT1_2</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="181:10" pos:end="185:9">else if<condition pos:start="181:17" pos:end="181:52">(<expr pos:start="181:18" pos:end="181:51"><name pos:start="181:18" pos:end="181:30">out_ch_layout</name> <operator pos:start="181:32" pos:end="181:32">&amp;</operator> <name pos:start="181:34" pos:end="181:51">AV_CH_FRONT_CENTER</name></expr>)</condition><block pos:start="181:53" pos:end="185:9">{<block_content pos:start="183:13" pos:end="183:67">

            <expr_stmt pos:start="183:13" pos:end="183:67"><expr pos:start="183:13" pos:end="183:66"><name pos:start="183:13" pos:end="183:46"><name pos:start="183:13" pos:end="183:18">matrix</name><index pos:start="183:19" pos:end="183:33">[ <expr pos:start="183:21" pos:end="183:32"><name pos:start="183:21" pos:end="183:32">FRONT_CENTER</name></expr>]</index><index pos:start="183:34" pos:end="183:46">[<expr pos:start="183:35" pos:end="183:45"><name pos:start="183:35" pos:end="183:45">BACK_CENTER</name></expr>]</index></name><operator pos:start="183:47" pos:end="183:48">+=</operator> <name pos:start="183:50" pos:end="183:56"><name pos:start="183:50" pos:end="183:50">s</name><operator pos:start="183:51" pos:end="183:52">-&gt;</operator><name pos:start="183:53" pos:end="183:56">slev</name></name><operator pos:start="183:57" pos:end="183:57">*</operator><name pos:start="183:58" pos:end="183:66">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="185:10" pos:end="187:26">else<block type="pseudo" pos:start="187:13" pos:end="187:26"><block_content pos:start="187:13" pos:end="187:26">

            <expr_stmt pos:start="187:13" pos:end="187:26"><expr pos:start="187:13" pos:end="187:25"><call pos:start="187:13" pos:end="187:25"><name pos:start="187:13" pos:end="187:22">av_assert0</name><argument_list pos:start="187:23" pos:end="187:25">(<argument pos:start="187:24" pos:end="187:24"><expr pos:start="187:24" pos:end="187:24"><literal type="number" pos:start="187:24" pos:end="187:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="191:5" pos:end="255:5"><if pos:start="191:5" pos:end="255:5">if<condition pos:start="191:7" pos:end="191:37">(<expr pos:start="191:8" pos:end="191:36"><name pos:start="191:8" pos:end="191:18">unaccounted</name> <operator pos:start="191:20" pos:end="191:20">&amp;</operator> <name pos:start="191:22" pos:end="191:36">AV_CH_BACK_LEFT</name></expr>)</condition><block pos:start="191:38" pos:end="255:5">{<block_content pos:start="193:9" pos:end="253:26">

        <if_stmt pos:start="193:9" pos:end="253:26"><if pos:start="193:9" pos:end="199:9">if<condition pos:start="193:11" pos:end="193:45">(<expr pos:start="193:12" pos:end="193:44"><name pos:start="193:12" pos:end="193:24">out_ch_layout</name> <operator pos:start="193:26" pos:end="193:26">&amp;</operator> <name pos:start="193:28" pos:end="193:44">AV_CH_BACK_CENTER</name></expr>)</condition><block pos:start="193:46" pos:end="199:9">{<block_content pos:start="195:13" pos:end="197:56">

            <expr_stmt pos:start="195:13" pos:end="195:56"><expr pos:start="195:13" pos:end="195:55"><name pos:start="195:13" pos:end="195:43"><name pos:start="195:13" pos:end="195:18">matrix</name><index pos:start="195:19" pos:end="195:31">[<expr pos:start="195:20" pos:end="195:30"><name pos:start="195:20" pos:end="195:30">BACK_CENTER</name></expr>]</index><index pos:start="195:32" pos:end="195:43">[ <expr pos:start="195:34" pos:end="195:42"><name pos:start="195:34" pos:end="195:42">BACK_LEFT</name></expr>]</index></name><operator pos:start="195:44" pos:end="195:45">+=</operator> <name pos:start="195:47" pos:end="195:55">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:56"><expr pos:start="197:13" pos:end="197:55"><name pos:start="197:13" pos:end="197:43"><name pos:start="197:13" pos:end="197:18">matrix</name><index pos:start="197:19" pos:end="197:31">[<expr pos:start="197:20" pos:end="197:30"><name pos:start="197:20" pos:end="197:30">BACK_CENTER</name></expr>]</index><index pos:start="197:32" pos:end="197:43">[<expr pos:start="197:33" pos:end="197:42"><name pos:start="197:33" pos:end="197:42">BACK_RIGHT</name></expr>]</index></name><operator pos:start="197:44" pos:end="197:45">+=</operator> <name pos:start="197:47" pos:end="197:55">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="199:10" pos:end="215:9">else if<condition pos:start="199:17" pos:end="199:49">(<expr pos:start="199:18" pos:end="199:48"><name pos:start="199:18" pos:end="199:30">out_ch_layout</name> <operator pos:start="199:32" pos:end="199:32">&amp;</operator> <name pos:start="199:34" pos:end="199:48">AV_CH_SIDE_LEFT</name></expr>)</condition><block pos:start="199:50" pos:end="215:9">{<block_content pos:start="201:13" pos:end="213:13">

            <if_stmt pos:start="201:13" pos:end="213:13"><if pos:start="201:13" pos:end="207:13">if<condition pos:start="201:15" pos:end="201:46">(<expr pos:start="201:16" pos:end="201:45"><name pos:start="201:16" pos:end="201:27">in_ch_layout</name> <operator pos:start="201:29" pos:end="201:29">&amp;</operator> <name pos:start="201:31" pos:end="201:45">AV_CH_SIDE_LEFT</name></expr>)</condition><block pos:start="201:47" pos:end="207:13">{<block_content pos:start="203:17" pos:end="205:59">

                <expr_stmt pos:start="203:17" pos:end="203:59"><expr pos:start="203:17" pos:end="203:58"><name pos:start="203:17" pos:end="203:46"><name pos:start="203:17" pos:end="203:22">matrix</name><index pos:start="203:23" pos:end="203:34">[ <expr pos:start="203:25" pos:end="203:33"><name pos:start="203:25" pos:end="203:33">SIDE_LEFT</name></expr>]</index><index pos:start="203:35" pos:end="203:46">[ <expr pos:start="203:37" pos:end="203:45"><name pos:start="203:37" pos:end="203:45">BACK_LEFT</name></expr>]</index></name><operator pos:start="203:47" pos:end="203:48">+=</operator> <name pos:start="203:50" pos:end="203:58">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:59"><expr pos:start="205:17" pos:end="205:58"><name pos:start="205:17" pos:end="205:46"><name pos:start="205:17" pos:end="205:22">matrix</name><index pos:start="205:23" pos:end="205:34">[<expr pos:start="205:24" pos:end="205:33"><name pos:start="205:24" pos:end="205:33">SIDE_RIGHT</name></expr>]</index><index pos:start="205:35" pos:end="205:46">[<expr pos:start="205:36" pos:end="205:45"><name pos:start="205:36" pos:end="205:45">BACK_RIGHT</name></expr>]</index></name><operator pos:start="205:47" pos:end="205:48">+=</operator> <name pos:start="205:50" pos:end="205:58">M_SQRT1_2</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="207:14" pos:end="213:13">else<block pos:start="207:18" pos:end="213:13">{<block_content pos:start="209:13" pos:end="211:49">

            <expr_stmt pos:start="209:13" pos:end="209:49"><expr pos:start="209:13" pos:end="209:48"><name pos:start="209:13" pos:end="209:42"><name pos:start="209:13" pos:end="209:18">matrix</name><index pos:start="209:19" pos:end="209:30">[ <expr pos:start="209:21" pos:end="209:29"><name pos:start="209:21" pos:end="209:29">SIDE_LEFT</name></expr>]</index><index pos:start="209:31" pos:end="209:42">[ <expr pos:start="209:33" pos:end="209:41"><name pos:start="209:33" pos:end="209:41">BACK_LEFT</name></expr>]</index></name><operator pos:start="209:43" pos:end="209:44">+=</operator> <literal type="number" pos:start="209:46" pos:end="209:48">1.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:49"><expr pos:start="211:13" pos:end="211:48"><name pos:start="211:13" pos:end="211:42"><name pos:start="211:13" pos:end="211:18">matrix</name><index pos:start="211:19" pos:end="211:30">[<expr pos:start="211:20" pos:end="211:29"><name pos:start="211:20" pos:end="211:29">SIDE_RIGHT</name></expr>]</index><index pos:start="211:31" pos:end="211:42">[<expr pos:start="211:32" pos:end="211:41"><name pos:start="211:32" pos:end="211:41">BACK_RIGHT</name></expr>]</index></name><operator pos:start="211:43" pos:end="211:44">+=</operator> <literal type="number" pos:start="211:46" pos:end="211:48">1.0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="215:10" pos:end="245:9">else if<condition pos:start="215:17" pos:end="215:50">(<expr pos:start="215:18" pos:end="215:49"><name pos:start="215:18" pos:end="215:30">out_ch_layout</name> <operator pos:start="215:32" pos:end="215:32">&amp;</operator> <name pos:start="215:34" pos:end="215:49">AV_CH_FRONT_LEFT</name></expr>)</condition><block pos:start="215:51" pos:end="245:9">{<block_content pos:start="217:13" pos:end="243:13">

            <if_stmt pos:start="217:13" pos:end="243:13"><if pos:start="217:13" pos:end="227:13">if <condition pos:start="217:16" pos:end="217:60">(<expr pos:start="217:17" pos:end="217:59"><name pos:start="217:17" pos:end="217:31">matrix_encoding</name> <operator pos:start="217:33" pos:end="217:34">==</operator> <name pos:start="217:36" pos:end="217:59">AV_MATRIX_ENCODING_DOLBY</name></expr>)</condition> <block pos:start="217:62" pos:end="227:13">{<block_content pos:start="219:17" pos:end="225:71">

                <expr_stmt pos:start="219:17" pos:end="219:71"><expr pos:start="219:17" pos:end="219:70"><name pos:start="219:17" pos:end="219:47"><name pos:start="219:17" pos:end="219:22">matrix</name><index pos:start="219:23" pos:end="219:35">[<expr pos:start="219:24" pos:end="219:33"><name pos:start="219:24" pos:end="219:33">FRONT_LEFT</name></expr> ]</index><index pos:start="219:36" pos:end="219:47">[<expr pos:start="219:37" pos:end="219:45"><name pos:start="219:37" pos:end="219:45">BACK_LEFT</name></expr> ]</index></name> <operator pos:start="219:49" pos:end="219:50">-=</operator> <name pos:start="219:52" pos:end="219:58"><name pos:start="219:52" pos:end="219:52">s</name><operator pos:start="219:53" pos:end="219:54">-&gt;</operator><name pos:start="219:55" pos:end="219:58">slev</name></name> <operator pos:start="219:60" pos:end="219:60">*</operator> <name pos:start="219:62" pos:end="219:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:71"><expr pos:start="221:17" pos:end="221:70"><name pos:start="221:17" pos:end="221:47"><name pos:start="221:17" pos:end="221:22">matrix</name><index pos:start="221:23" pos:end="221:35">[<expr pos:start="221:24" pos:end="221:33"><name pos:start="221:24" pos:end="221:33">FRONT_LEFT</name></expr> ]</index><index pos:start="221:36" pos:end="221:47">[<expr pos:start="221:37" pos:end="221:46"><name pos:start="221:37" pos:end="221:46">BACK_RIGHT</name></expr>]</index></name> <operator pos:start="221:49" pos:end="221:50">-=</operator> <name pos:start="221:52" pos:end="221:58"><name pos:start="221:52" pos:end="221:52">s</name><operator pos:start="221:53" pos:end="221:54">-&gt;</operator><name pos:start="221:55" pos:end="221:58">slev</name></name> <operator pos:start="221:60" pos:end="221:60">*</operator> <name pos:start="221:62" pos:end="221:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:71"><expr pos:start="223:17" pos:end="223:70"><name pos:start="223:17" pos:end="223:47"><name pos:start="223:17" pos:end="223:22">matrix</name><index pos:start="223:23" pos:end="223:35">[<expr pos:start="223:24" pos:end="223:34"><name pos:start="223:24" pos:end="223:34">FRONT_RIGHT</name></expr>]</index><index pos:start="223:36" pos:end="223:47">[<expr pos:start="223:37" pos:end="223:45"><name pos:start="223:37" pos:end="223:45">BACK_LEFT</name></expr> ]</index></name> <operator pos:start="223:49" pos:end="223:50">+=</operator> <name pos:start="223:52" pos:end="223:58"><name pos:start="223:52" pos:end="223:52">s</name><operator pos:start="223:53" pos:end="223:54">-&gt;</operator><name pos:start="223:55" pos:end="223:58">slev</name></name> <operator pos:start="223:60" pos:end="223:60">*</operator> <name pos:start="223:62" pos:end="223:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:71"><expr pos:start="225:17" pos:end="225:70"><name pos:start="225:17" pos:end="225:47"><name pos:start="225:17" pos:end="225:22">matrix</name><index pos:start="225:23" pos:end="225:35">[<expr pos:start="225:24" pos:end="225:34"><name pos:start="225:24" pos:end="225:34">FRONT_RIGHT</name></expr>]</index><index pos:start="225:36" pos:end="225:47">[<expr pos:start="225:37" pos:end="225:46"><name pos:start="225:37" pos:end="225:46">BACK_RIGHT</name></expr>]</index></name> <operator pos:start="225:49" pos:end="225:50">+=</operator> <name pos:start="225:52" pos:end="225:58"><name pos:start="225:52" pos:end="225:52">s</name><operator pos:start="225:53" pos:end="225:54">-&gt;</operator><name pos:start="225:55" pos:end="225:58">slev</name></name> <operator pos:start="225:60" pos:end="225:60">*</operator> <name pos:start="225:62" pos:end="225:70">M_SQRT1_2</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="227:15" pos:end="237:13">else if <condition pos:start="227:23" pos:end="227:67">(<expr pos:start="227:24" pos:end="227:66"><name pos:start="227:24" pos:end="227:38">matrix_encoding</name> <operator pos:start="227:40" pos:end="227:41">==</operator> <name pos:start="227:43" pos:end="227:66">AV_MATRIX_ENCODING_DPLII</name></expr>)</condition> <block pos:start="227:69" pos:end="237:13">{<block_content pos:start="229:17" pos:end="235:69">

                <expr_stmt pos:start="229:17" pos:end="229:69"><expr pos:start="229:17" pos:end="229:68"><name pos:start="229:17" pos:end="229:47"><name pos:start="229:17" pos:end="229:22">matrix</name><index pos:start="229:23" pos:end="229:35">[<expr pos:start="229:24" pos:end="229:33"><name pos:start="229:24" pos:end="229:33">FRONT_LEFT</name></expr> ]</index><index pos:start="229:36" pos:end="229:47">[<expr pos:start="229:37" pos:end="229:45"><name pos:start="229:37" pos:end="229:45">BACK_LEFT</name></expr> ]</index></name> <operator pos:start="229:49" pos:end="229:50">-=</operator> <name pos:start="229:52" pos:end="229:58"><name pos:start="229:52" pos:end="229:52">s</name><operator pos:start="229:53" pos:end="229:54">-&gt;</operator><name pos:start="229:55" pos:end="229:58">slev</name></name> <operator pos:start="229:60" pos:end="229:60">*</operator> <name pos:start="229:62" pos:end="229:68">SQRT3_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:71"><expr pos:start="231:17" pos:end="231:70"><name pos:start="231:17" pos:end="231:47"><name pos:start="231:17" pos:end="231:22">matrix</name><index pos:start="231:23" pos:end="231:35">[<expr pos:start="231:24" pos:end="231:33"><name pos:start="231:24" pos:end="231:33">FRONT_LEFT</name></expr> ]</index><index pos:start="231:36" pos:end="231:47">[<expr pos:start="231:37" pos:end="231:46"><name pos:start="231:37" pos:end="231:46">BACK_RIGHT</name></expr>]</index></name> <operator pos:start="231:49" pos:end="231:50">-=</operator> <name pos:start="231:52" pos:end="231:58"><name pos:start="231:52" pos:end="231:52">s</name><operator pos:start="231:53" pos:end="231:54">-&gt;</operator><name pos:start="231:55" pos:end="231:58">slev</name></name> <operator pos:start="231:60" pos:end="231:60">*</operator> <name pos:start="231:62" pos:end="231:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:71"><expr pos:start="233:17" pos:end="233:70"><name pos:start="233:17" pos:end="233:47"><name pos:start="233:17" pos:end="233:22">matrix</name><index pos:start="233:23" pos:end="233:35">[<expr pos:start="233:24" pos:end="233:34"><name pos:start="233:24" pos:end="233:34">FRONT_RIGHT</name></expr>]</index><index pos:start="233:36" pos:end="233:47">[<expr pos:start="233:37" pos:end="233:45"><name pos:start="233:37" pos:end="233:45">BACK_LEFT</name></expr> ]</index></name> <operator pos:start="233:49" pos:end="233:50">+=</operator> <name pos:start="233:52" pos:end="233:58"><name pos:start="233:52" pos:end="233:52">s</name><operator pos:start="233:53" pos:end="233:54">-&gt;</operator><name pos:start="233:55" pos:end="233:58">slev</name></name> <operator pos:start="233:60" pos:end="233:60">*</operator> <name pos:start="233:62" pos:end="233:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:69"><expr pos:start="235:17" pos:end="235:68"><name pos:start="235:17" pos:end="235:47"><name pos:start="235:17" pos:end="235:22">matrix</name><index pos:start="235:23" pos:end="235:35">[<expr pos:start="235:24" pos:end="235:34"><name pos:start="235:24" pos:end="235:34">FRONT_RIGHT</name></expr>]</index><index pos:start="235:36" pos:end="235:47">[<expr pos:start="235:37" pos:end="235:46"><name pos:start="235:37" pos:end="235:46">BACK_RIGHT</name></expr>]</index></name> <operator pos:start="235:49" pos:end="235:50">+=</operator> <name pos:start="235:52" pos:end="235:58"><name pos:start="235:52" pos:end="235:52">s</name><operator pos:start="235:53" pos:end="235:54">-&gt;</operator><name pos:start="235:55" pos:end="235:58">slev</name></name> <operator pos:start="235:60" pos:end="235:60">*</operator> <name pos:start="235:62" pos:end="235:68">SQRT3_2</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="237:15" pos:end="243:13">else <block pos:start="237:20" pos:end="243:13">{<block_content pos:start="239:17" pos:end="241:59">

                <expr_stmt pos:start="239:17" pos:end="239:59"><expr pos:start="239:17" pos:end="239:58"><name pos:start="239:17" pos:end="239:47"><name pos:start="239:17" pos:end="239:22">matrix</name><index pos:start="239:23" pos:end="239:35">[ <expr pos:start="239:25" pos:end="239:34"><name pos:start="239:25" pos:end="239:34">FRONT_LEFT</name></expr>]</index><index pos:start="239:36" pos:end="239:47">[ <expr pos:start="239:38" pos:end="239:46"><name pos:start="239:38" pos:end="239:46">BACK_LEFT</name></expr>]</index></name> <operator pos:start="239:49" pos:end="239:50">+=</operator> <name pos:start="239:52" pos:end="239:58"><name pos:start="239:52" pos:end="239:52">s</name><operator pos:start="239:53" pos:end="239:54">-&gt;</operator><name pos:start="239:55" pos:end="239:58">slev</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="241:17" pos:end="241:59"><expr pos:start="241:17" pos:end="241:58"><name pos:start="241:17" pos:end="241:47"><name pos:start="241:17" pos:end="241:22">matrix</name><index pos:start="241:23" pos:end="241:35">[<expr pos:start="241:24" pos:end="241:34"><name pos:start="241:24" pos:end="241:34">FRONT_RIGHT</name></expr>]</index><index pos:start="241:36" pos:end="241:47">[<expr pos:start="241:37" pos:end="241:46"><name pos:start="241:37" pos:end="241:46">BACK_RIGHT</name></expr>]</index></name> <operator pos:start="241:49" pos:end="241:50">+=</operator> <name pos:start="241:52" pos:end="241:58"><name pos:start="241:52" pos:end="241:52">s</name><operator pos:start="241:53" pos:end="241:54">-&gt;</operator><name pos:start="241:55" pos:end="241:58">slev</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="245:10" pos:end="251:9">else if<condition pos:start="245:17" pos:end="245:52">(<expr pos:start="245:18" pos:end="245:51"><name pos:start="245:18" pos:end="245:30">out_ch_layout</name> <operator pos:start="245:32" pos:end="245:32">&amp;</operator> <name pos:start="245:34" pos:end="245:51">AV_CH_FRONT_CENTER</name></expr>)</condition><block pos:start="245:53" pos:end="251:9">{<block_content pos:start="247:13" pos:end="249:66">

            <expr_stmt pos:start="247:13" pos:end="247:66"><expr pos:start="247:13" pos:end="247:65"><name pos:start="247:13" pos:end="247:45"><name pos:start="247:13" pos:end="247:18">matrix</name><index pos:start="247:19" pos:end="247:33">[ <expr pos:start="247:21" pos:end="247:32"><name pos:start="247:21" pos:end="247:32">FRONT_CENTER</name></expr>]</index><index pos:start="247:34" pos:end="247:45">[<expr pos:start="247:35" pos:end="247:43"><name pos:start="247:35" pos:end="247:43">BACK_LEFT</name></expr> ]</index></name><operator pos:start="247:46" pos:end="247:47">+=</operator> <name pos:start="247:49" pos:end="247:55"><name pos:start="247:49" pos:end="247:49">s</name><operator pos:start="247:50" pos:end="247:51">-&gt;</operator><name pos:start="247:52" pos:end="247:55">slev</name></name><operator pos:start="247:56" pos:end="247:56">*</operator><name pos:start="247:57" pos:end="247:65">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:66"><expr pos:start="249:13" pos:end="249:65"><name pos:start="249:13" pos:end="249:45"><name pos:start="249:13" pos:end="249:18">matrix</name><index pos:start="249:19" pos:end="249:33">[ <expr pos:start="249:21" pos:end="249:32"><name pos:start="249:21" pos:end="249:32">FRONT_CENTER</name></expr>]</index><index pos:start="249:34" pos:end="249:45">[<expr pos:start="249:35" pos:end="249:44"><name pos:start="249:35" pos:end="249:44">BACK_RIGHT</name></expr>]</index></name><operator pos:start="249:46" pos:end="249:47">+=</operator> <name pos:start="249:49" pos:end="249:55"><name pos:start="249:49" pos:end="249:49">s</name><operator pos:start="249:50" pos:end="249:51">-&gt;</operator><name pos:start="249:52" pos:end="249:55">slev</name></name><operator pos:start="249:56" pos:end="249:56">*</operator><name pos:start="249:57" pos:end="249:65">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="251:10" pos:end="253:26">else<block type="pseudo" pos:start="253:13" pos:end="253:26"><block_content pos:start="253:13" pos:end="253:26">

            <expr_stmt pos:start="253:13" pos:end="253:26"><expr pos:start="253:13" pos:end="253:25"><call pos:start="253:13" pos:end="253:25"><name pos:start="253:13" pos:end="253:22">av_assert0</name><argument_list pos:start="253:23" pos:end="253:25">(<argument pos:start="253:24" pos:end="253:24"><expr pos:start="253:24" pos:end="253:24"><literal type="number" pos:start="253:24" pos:end="253:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="259:5" pos:end="327:5"><if pos:start="259:5" pos:end="327:5">if<condition pos:start="259:7" pos:end="259:37">(<expr pos:start="259:8" pos:end="259:36"><name pos:start="259:8" pos:end="259:18">unaccounted</name> <operator pos:start="259:20" pos:end="259:20">&amp;</operator> <name pos:start="259:22" pos:end="259:36">AV_CH_SIDE_LEFT</name></expr>)</condition><block pos:start="259:38" pos:end="327:5">{<block_content pos:start="261:9" pos:end="325:26">

        <if_stmt pos:start="261:9" pos:end="325:26"><if pos:start="261:9" pos:end="281:9">if<condition pos:start="261:11" pos:end="261:43">(<expr pos:start="261:12" pos:end="261:42"><name pos:start="261:12" pos:end="261:24">out_ch_layout</name> <operator pos:start="261:26" pos:end="261:26">&amp;</operator> <name pos:start="261:28" pos:end="261:42">AV_CH_BACK_LEFT</name></expr>)</condition><block pos:start="261:44" pos:end="281:9">{<block_content pos:start="267:13" pos:end="279:13">

            <comment type="block" pos:start="263:13" pos:end="265:73">/* if back channels do not exist in the input, just copy side

               channels to back channels, otherwise mix side into back */</comment>

            <if_stmt pos:start="267:13" pos:end="279:13"><if pos:start="267:13" pos:end="273:13">if <condition pos:start="267:16" pos:end="267:47">(<expr pos:start="267:17" pos:end="267:46"><name pos:start="267:17" pos:end="267:28">in_ch_layout</name> <operator pos:start="267:30" pos:end="267:30">&amp;</operator> <name pos:start="267:32" pos:end="267:46">AV_CH_BACK_LEFT</name></expr>)</condition> <block pos:start="267:49" pos:end="273:13">{<block_content pos:start="269:17" pos:end="271:60">

                <expr_stmt pos:start="269:17" pos:end="269:60"><expr pos:start="269:17" pos:end="269:59"><name pos:start="269:17" pos:end="269:46"><name pos:start="269:17" pos:end="269:22">matrix</name><index pos:start="269:23" pos:end="269:34">[<expr pos:start="269:24" pos:end="269:32"><name pos:start="269:24" pos:end="269:32">BACK_LEFT</name></expr> ]</index><index pos:start="269:35" pos:end="269:46">[<expr pos:start="269:36" pos:end="269:44"><name pos:start="269:36" pos:end="269:44">SIDE_LEFT</name></expr> ]</index></name> <operator pos:start="269:48" pos:end="269:49">+=</operator> <name pos:start="269:51" pos:end="269:59">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:60"><expr pos:start="271:17" pos:end="271:59"><name pos:start="271:17" pos:end="271:46"><name pos:start="271:17" pos:end="271:22">matrix</name><index pos:start="271:23" pos:end="271:34">[<expr pos:start="271:24" pos:end="271:33"><name pos:start="271:24" pos:end="271:33">BACK_RIGHT</name></expr>]</index><index pos:start="271:35" pos:end="271:46">[<expr pos:start="271:36" pos:end="271:45"><name pos:start="271:36" pos:end="271:45">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="271:48" pos:end="271:49">+=</operator> <name pos:start="271:51" pos:end="271:59">M_SQRT1_2</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="273:15" pos:end="279:13">else <block pos:start="273:20" pos:end="279:13">{<block_content pos:start="275:17" pos:end="277:54">

                <expr_stmt pos:start="275:17" pos:end="275:54"><expr pos:start="275:17" pos:end="275:53"><name pos:start="275:17" pos:end="275:46"><name pos:start="275:17" pos:end="275:22">matrix</name><index pos:start="275:23" pos:end="275:34">[<expr pos:start="275:24" pos:end="275:32"><name pos:start="275:24" pos:end="275:32">BACK_LEFT</name></expr> ]</index><index pos:start="275:35" pos:end="275:46">[<expr pos:start="275:36" pos:end="275:44"><name pos:start="275:36" pos:end="275:44">SIDE_LEFT</name></expr> ]</index></name> <operator pos:start="275:48" pos:end="275:49">+=</operator> <literal type="number" pos:start="275:51" pos:end="275:53">1.0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="277:17" pos:end="277:54"><expr pos:start="277:17" pos:end="277:53"><name pos:start="277:17" pos:end="277:46"><name pos:start="277:17" pos:end="277:22">matrix</name><index pos:start="277:23" pos:end="277:34">[<expr pos:start="277:24" pos:end="277:33"><name pos:start="277:24" pos:end="277:33">BACK_RIGHT</name></expr>]</index><index pos:start="277:35" pos:end="277:46">[<expr pos:start="277:36" pos:end="277:45"><name pos:start="277:36" pos:end="277:45">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="277:48" pos:end="277:49">+=</operator> <literal type="number" pos:start="277:51" pos:end="277:53">1.0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="281:10" pos:end="287:9">else if<condition pos:start="281:17" pos:end="281:51">(<expr pos:start="281:18" pos:end="281:50"><name pos:start="281:18" pos:end="281:30">out_ch_layout</name> <operator pos:start="281:32" pos:end="281:32">&amp;</operator> <name pos:start="281:34" pos:end="281:50">AV_CH_BACK_CENTER</name></expr>)</condition><block pos:start="281:52" pos:end="287:9">{<block_content pos:start="283:13" pos:end="285:56">

            <expr_stmt pos:start="283:13" pos:end="283:56"><expr pos:start="283:13" pos:end="283:55"><name pos:start="283:13" pos:end="283:43"><name pos:start="283:13" pos:end="283:18">matrix</name><index pos:start="283:19" pos:end="283:31">[<expr pos:start="283:20" pos:end="283:30"><name pos:start="283:20" pos:end="283:30">BACK_CENTER</name></expr>]</index><index pos:start="283:32" pos:end="283:43">[ <expr pos:start="283:34" pos:end="283:42"><name pos:start="283:34" pos:end="283:42">SIDE_LEFT</name></expr>]</index></name><operator pos:start="283:44" pos:end="283:45">+=</operator> <name pos:start="283:47" pos:end="283:55">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:56"><expr pos:start="285:13" pos:end="285:55"><name pos:start="285:13" pos:end="285:43"><name pos:start="285:13" pos:end="285:18">matrix</name><index pos:start="285:19" pos:end="285:31">[<expr pos:start="285:20" pos:end="285:30"><name pos:start="285:20" pos:end="285:30">BACK_CENTER</name></expr>]</index><index pos:start="285:32" pos:end="285:43">[<expr pos:start="285:33" pos:end="285:42"><name pos:start="285:33" pos:end="285:42">SIDE_RIGHT</name></expr>]</index></name><operator pos:start="285:44" pos:end="285:45">+=</operator> <name pos:start="285:47" pos:end="285:55">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="287:10" pos:end="317:9">else if<condition pos:start="287:17" pos:end="287:50">(<expr pos:start="287:18" pos:end="287:49"><name pos:start="287:18" pos:end="287:30">out_ch_layout</name> <operator pos:start="287:32" pos:end="287:32">&amp;</operator> <name pos:start="287:34" pos:end="287:49">AV_CH_FRONT_LEFT</name></expr>)</condition><block pos:start="287:51" pos:end="317:9">{<block_content pos:start="289:13" pos:end="315:13">

            <if_stmt pos:start="289:13" pos:end="315:13"><if pos:start="289:13" pos:end="299:13">if <condition pos:start="289:16" pos:end="289:60">(<expr pos:start="289:17" pos:end="289:59"><name pos:start="289:17" pos:end="289:31">matrix_encoding</name> <operator pos:start="289:33" pos:end="289:34">==</operator> <name pos:start="289:36" pos:end="289:59">AV_MATRIX_ENCODING_DOLBY</name></expr>)</condition> <block pos:start="289:62" pos:end="299:13">{<block_content pos:start="291:17" pos:end="297:71">

                <expr_stmt pos:start="291:17" pos:end="291:71"><expr pos:start="291:17" pos:end="291:70"><name pos:start="291:17" pos:end="291:47"><name pos:start="291:17" pos:end="291:22">matrix</name><index pos:start="291:23" pos:end="291:35">[<expr pos:start="291:24" pos:end="291:33"><name pos:start="291:24" pos:end="291:33">FRONT_LEFT</name></expr> ]</index><index pos:start="291:36" pos:end="291:47">[<expr pos:start="291:37" pos:end="291:45"><name pos:start="291:37" pos:end="291:45">SIDE_LEFT</name></expr> ]</index></name> <operator pos:start="291:49" pos:end="291:50">-=</operator> <name pos:start="291:52" pos:end="291:58"><name pos:start="291:52" pos:end="291:52">s</name><operator pos:start="291:53" pos:end="291:54">-&gt;</operator><name pos:start="291:55" pos:end="291:58">slev</name></name> <operator pos:start="291:60" pos:end="291:60">*</operator> <name pos:start="291:62" pos:end="291:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="293:17" pos:end="293:71"><expr pos:start="293:17" pos:end="293:70"><name pos:start="293:17" pos:end="293:47"><name pos:start="293:17" pos:end="293:22">matrix</name><index pos:start="293:23" pos:end="293:35">[<expr pos:start="293:24" pos:end="293:33"><name pos:start="293:24" pos:end="293:33">FRONT_LEFT</name></expr> ]</index><index pos:start="293:36" pos:end="293:47">[<expr pos:start="293:37" pos:end="293:46"><name pos:start="293:37" pos:end="293:46">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="293:49" pos:end="293:50">-=</operator> <name pos:start="293:52" pos:end="293:58"><name pos:start="293:52" pos:end="293:52">s</name><operator pos:start="293:53" pos:end="293:54">-&gt;</operator><name pos:start="293:55" pos:end="293:58">slev</name></name> <operator pos:start="293:60" pos:end="293:60">*</operator> <name pos:start="293:62" pos:end="293:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:71"><expr pos:start="295:17" pos:end="295:70"><name pos:start="295:17" pos:end="295:47"><name pos:start="295:17" pos:end="295:22">matrix</name><index pos:start="295:23" pos:end="295:35">[<expr pos:start="295:24" pos:end="295:34"><name pos:start="295:24" pos:end="295:34">FRONT_RIGHT</name></expr>]</index><index pos:start="295:36" pos:end="295:47">[<expr pos:start="295:37" pos:end="295:45"><name pos:start="295:37" pos:end="295:45">SIDE_LEFT</name></expr> ]</index></name> <operator pos:start="295:49" pos:end="295:50">+=</operator> <name pos:start="295:52" pos:end="295:58"><name pos:start="295:52" pos:end="295:52">s</name><operator pos:start="295:53" pos:end="295:54">-&gt;</operator><name pos:start="295:55" pos:end="295:58">slev</name></name> <operator pos:start="295:60" pos:end="295:60">*</operator> <name pos:start="295:62" pos:end="295:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="297:17" pos:end="297:71"><expr pos:start="297:17" pos:end="297:70"><name pos:start="297:17" pos:end="297:47"><name pos:start="297:17" pos:end="297:22">matrix</name><index pos:start="297:23" pos:end="297:35">[<expr pos:start="297:24" pos:end="297:34"><name pos:start="297:24" pos:end="297:34">FRONT_RIGHT</name></expr>]</index><index pos:start="297:36" pos:end="297:47">[<expr pos:start="297:37" pos:end="297:46"><name pos:start="297:37" pos:end="297:46">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="297:49" pos:end="297:50">+=</operator> <name pos:start="297:52" pos:end="297:58"><name pos:start="297:52" pos:end="297:52">s</name><operator pos:start="297:53" pos:end="297:54">-&gt;</operator><name pos:start="297:55" pos:end="297:58">slev</name></name> <operator pos:start="297:60" pos:end="297:60">*</operator> <name pos:start="297:62" pos:end="297:70">M_SQRT1_2</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="299:15" pos:end="309:13">else if <condition pos:start="299:23" pos:end="299:67">(<expr pos:start="299:24" pos:end="299:66"><name pos:start="299:24" pos:end="299:38">matrix_encoding</name> <operator pos:start="299:40" pos:end="299:41">==</operator> <name pos:start="299:43" pos:end="299:66">AV_MATRIX_ENCODING_DPLII</name></expr>)</condition> <block pos:start="299:69" pos:end="309:13">{<block_content pos:start="301:17" pos:end="307:69">

                <expr_stmt pos:start="301:17" pos:end="301:69"><expr pos:start="301:17" pos:end="301:68"><name pos:start="301:17" pos:end="301:47"><name pos:start="301:17" pos:end="301:22">matrix</name><index pos:start="301:23" pos:end="301:35">[<expr pos:start="301:24" pos:end="301:33"><name pos:start="301:24" pos:end="301:33">FRONT_LEFT</name></expr> ]</index><index pos:start="301:36" pos:end="301:47">[<expr pos:start="301:37" pos:end="301:45"><name pos:start="301:37" pos:end="301:45">SIDE_LEFT</name></expr> ]</index></name> <operator pos:start="301:49" pos:end="301:50">-=</operator> <name pos:start="301:52" pos:end="301:58"><name pos:start="301:52" pos:end="301:52">s</name><operator pos:start="301:53" pos:end="301:54">-&gt;</operator><name pos:start="301:55" pos:end="301:58">slev</name></name> <operator pos:start="301:60" pos:end="301:60">*</operator> <name pos:start="301:62" pos:end="301:68">SQRT3_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="303:17" pos:end="303:71"><expr pos:start="303:17" pos:end="303:70"><name pos:start="303:17" pos:end="303:47"><name pos:start="303:17" pos:end="303:22">matrix</name><index pos:start="303:23" pos:end="303:35">[<expr pos:start="303:24" pos:end="303:33"><name pos:start="303:24" pos:end="303:33">FRONT_LEFT</name></expr> ]</index><index pos:start="303:36" pos:end="303:47">[<expr pos:start="303:37" pos:end="303:46"><name pos:start="303:37" pos:end="303:46">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="303:49" pos:end="303:50">-=</operator> <name pos:start="303:52" pos:end="303:58"><name pos:start="303:52" pos:end="303:52">s</name><operator pos:start="303:53" pos:end="303:54">-&gt;</operator><name pos:start="303:55" pos:end="303:58">slev</name></name> <operator pos:start="303:60" pos:end="303:60">*</operator> <name pos:start="303:62" pos:end="303:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="305:17" pos:end="305:71"><expr pos:start="305:17" pos:end="305:70"><name pos:start="305:17" pos:end="305:47"><name pos:start="305:17" pos:end="305:22">matrix</name><index pos:start="305:23" pos:end="305:35">[<expr pos:start="305:24" pos:end="305:34"><name pos:start="305:24" pos:end="305:34">FRONT_RIGHT</name></expr>]</index><index pos:start="305:36" pos:end="305:47">[<expr pos:start="305:37" pos:end="305:45"><name pos:start="305:37" pos:end="305:45">SIDE_LEFT</name></expr> ]</index></name> <operator pos:start="305:49" pos:end="305:50">+=</operator> <name pos:start="305:52" pos:end="305:58"><name pos:start="305:52" pos:end="305:52">s</name><operator pos:start="305:53" pos:end="305:54">-&gt;</operator><name pos:start="305:55" pos:end="305:58">slev</name></name> <operator pos:start="305:60" pos:end="305:60">*</operator> <name pos:start="305:62" pos:end="305:70">M_SQRT1_2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="307:17" pos:end="307:69"><expr pos:start="307:17" pos:end="307:68"><name pos:start="307:17" pos:end="307:47"><name pos:start="307:17" pos:end="307:22">matrix</name><index pos:start="307:23" pos:end="307:35">[<expr pos:start="307:24" pos:end="307:34"><name pos:start="307:24" pos:end="307:34">FRONT_RIGHT</name></expr>]</index><index pos:start="307:36" pos:end="307:47">[<expr pos:start="307:37" pos:end="307:46"><name pos:start="307:37" pos:end="307:46">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="307:49" pos:end="307:50">+=</operator> <name pos:start="307:52" pos:end="307:58"><name pos:start="307:52" pos:end="307:52">s</name><operator pos:start="307:53" pos:end="307:54">-&gt;</operator><name pos:start="307:55" pos:end="307:58">slev</name></name> <operator pos:start="307:60" pos:end="307:60">*</operator> <name pos:start="307:62" pos:end="307:68">SQRT3_2</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="309:15" pos:end="315:13">else <block pos:start="309:20" pos:end="315:13">{<block_content pos:start="311:17" pos:end="313:59">

                <expr_stmt pos:start="311:17" pos:end="311:59"><expr pos:start="311:17" pos:end="311:58"><name pos:start="311:17" pos:end="311:47"><name pos:start="311:17" pos:end="311:22">matrix</name><index pos:start="311:23" pos:end="311:35">[ <expr pos:start="311:25" pos:end="311:34"><name pos:start="311:25" pos:end="311:34">FRONT_LEFT</name></expr>]</index><index pos:start="311:36" pos:end="311:47">[ <expr pos:start="311:38" pos:end="311:46"><name pos:start="311:38" pos:end="311:46">SIDE_LEFT</name></expr>]</index></name> <operator pos:start="311:49" pos:end="311:50">+=</operator> <name pos:start="311:52" pos:end="311:58"><name pos:start="311:52" pos:end="311:52">s</name><operator pos:start="311:53" pos:end="311:54">-&gt;</operator><name pos:start="311:55" pos:end="311:58">slev</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:59"><expr pos:start="313:17" pos:end="313:58"><name pos:start="313:17" pos:end="313:47"><name pos:start="313:17" pos:end="313:22">matrix</name><index pos:start="313:23" pos:end="313:35">[<expr pos:start="313:24" pos:end="313:34"><name pos:start="313:24" pos:end="313:34">FRONT_RIGHT</name></expr>]</index><index pos:start="313:36" pos:end="313:47">[<expr pos:start="313:37" pos:end="313:46"><name pos:start="313:37" pos:end="313:46">SIDE_RIGHT</name></expr>]</index></name> <operator pos:start="313:49" pos:end="313:50">+=</operator> <name pos:start="313:52" pos:end="313:58"><name pos:start="313:52" pos:end="313:52">s</name><operator pos:start="313:53" pos:end="313:54">-&gt;</operator><name pos:start="313:55" pos:end="313:58">slev</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="317:10" pos:end="323:9">else if<condition pos:start="317:17" pos:end="317:52">(<expr pos:start="317:18" pos:end="317:51"><name pos:start="317:18" pos:end="317:30">out_ch_layout</name> <operator pos:start="317:32" pos:end="317:32">&amp;</operator> <name pos:start="317:34" pos:end="317:51">AV_CH_FRONT_CENTER</name></expr>)</condition><block pos:start="317:53" pos:end="323:9">{<block_content pos:start="319:13" pos:end="321:66">

            <expr_stmt pos:start="319:13" pos:end="319:66"><expr pos:start="319:13" pos:end="319:65"><name pos:start="319:13" pos:end="319:45"><name pos:start="319:13" pos:end="319:18">matrix</name><index pos:start="319:19" pos:end="319:33">[ <expr pos:start="319:21" pos:end="319:32"><name pos:start="319:21" pos:end="319:32">FRONT_CENTER</name></expr>]</index><index pos:start="319:34" pos:end="319:45">[<expr pos:start="319:35" pos:end="319:43"><name pos:start="319:35" pos:end="319:43">SIDE_LEFT</name></expr> ]</index></name><operator pos:start="319:46" pos:end="319:47">+=</operator> <name pos:start="319:49" pos:end="319:55"><name pos:start="319:49" pos:end="319:49">s</name><operator pos:start="319:50" pos:end="319:51">-&gt;</operator><name pos:start="319:52" pos:end="319:55">slev</name></name><operator pos:start="319:56" pos:end="319:56">*</operator><name pos:start="319:57" pos:end="319:65">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:66"><expr pos:start="321:13" pos:end="321:65"><name pos:start="321:13" pos:end="321:45"><name pos:start="321:13" pos:end="321:18">matrix</name><index pos:start="321:19" pos:end="321:33">[ <expr pos:start="321:21" pos:end="321:32"><name pos:start="321:21" pos:end="321:32">FRONT_CENTER</name></expr>]</index><index pos:start="321:34" pos:end="321:45">[<expr pos:start="321:35" pos:end="321:44"><name pos:start="321:35" pos:end="321:44">SIDE_RIGHT</name></expr>]</index></name><operator pos:start="321:46" pos:end="321:47">+=</operator> <name pos:start="321:49" pos:end="321:55"><name pos:start="321:49" pos:end="321:49">s</name><operator pos:start="321:50" pos:end="321:51">-&gt;</operator><name pos:start="321:52" pos:end="321:55">slev</name></name><operator pos:start="321:56" pos:end="321:56">*</operator><name pos:start="321:57" pos:end="321:65">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="323:10" pos:end="325:26">else<block type="pseudo" pos:start="325:13" pos:end="325:26"><block_content pos:start="325:13" pos:end="325:26">

            <expr_stmt pos:start="325:13" pos:end="325:26"><expr pos:start="325:13" pos:end="325:25"><call pos:start="325:13" pos:end="325:25"><name pos:start="325:13" pos:end="325:22">av_assert0</name><argument_list pos:start="325:23" pos:end="325:25">(<argument pos:start="325:24" pos:end="325:24"><expr pos:start="325:24" pos:end="325:24"><literal type="number" pos:start="325:24" pos:end="325:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="331:5" pos:end="349:5"><if pos:start="331:5" pos:end="349:5">if<condition pos:start="331:7" pos:end="331:48">(<expr pos:start="331:8" pos:end="331:47"><name pos:start="331:8" pos:end="331:18">unaccounted</name> <operator pos:start="331:20" pos:end="331:20">&amp;</operator> <name pos:start="331:22" pos:end="331:47">AV_CH_FRONT_LEFT_OF_CENTER</name></expr>)</condition><block pos:start="331:49" pos:end="349:5">{<block_content pos:start="333:9" pos:end="347:26">

        <if_stmt pos:start="333:9" pos:end="347:26"><if pos:start="333:9" pos:end="339:9">if<condition pos:start="333:11" pos:end="333:44">(<expr pos:start="333:12" pos:end="333:43"><name pos:start="333:12" pos:end="333:24">out_ch_layout</name> <operator pos:start="333:26" pos:end="333:26">&amp;</operator> <name pos:start="333:28" pos:end="333:43">AV_CH_FRONT_LEFT</name></expr>)</condition><block pos:start="333:45" pos:end="339:9">{<block_content pos:start="335:13" pos:end="337:61">

            <expr_stmt pos:start="335:13" pos:end="335:61"><expr pos:start="335:13" pos:end="335:60"><name pos:start="335:13" pos:end="335:54"><name pos:start="335:13" pos:end="335:18">matrix</name><index pos:start="335:19" pos:end="335:31">[ <expr pos:start="335:21" pos:end="335:30"><name pos:start="335:21" pos:end="335:30">FRONT_LEFT</name></expr>]</index><index pos:start="335:32" pos:end="335:54">[ <expr pos:start="335:34" pos:end="335:53"><name pos:start="335:34" pos:end="335:53">FRONT_LEFT_OF_CENTER</name></expr>]</index></name><operator pos:start="335:55" pos:end="335:56">+=</operator> <literal type="number" pos:start="335:58" pos:end="335:60">1.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:61"><expr pos:start="337:13" pos:end="337:60"><name pos:start="337:13" pos:end="337:54"><name pos:start="337:13" pos:end="337:18">matrix</name><index pos:start="337:19" pos:end="337:31">[<expr pos:start="337:20" pos:end="337:30"><name pos:start="337:20" pos:end="337:30">FRONT_RIGHT</name></expr>]</index><index pos:start="337:32" pos:end="337:54">[<expr pos:start="337:33" pos:end="337:53"><name pos:start="337:33" pos:end="337:53">FRONT_RIGHT_OF_CENTER</name></expr>]</index></name><operator pos:start="337:55" pos:end="337:56">+=</operator> <literal type="number" pos:start="337:58" pos:end="337:60">1.0</literal></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="339:10" pos:end="345:9">else if<condition pos:start="339:17" pos:end="339:52">(<expr pos:start="339:18" pos:end="339:51"><name pos:start="339:18" pos:end="339:30">out_ch_layout</name> <operator pos:start="339:32" pos:end="339:32">&amp;</operator> <name pos:start="339:34" pos:end="339:51">AV_CH_FRONT_CENTER</name></expr>)</condition><block pos:start="339:53" pos:end="345:9">{<block_content pos:start="341:13" pos:end="343:69">

            <expr_stmt pos:start="341:13" pos:end="341:69"><expr pos:start="341:13" pos:end="341:68"><name pos:start="341:13" pos:end="341:56"><name pos:start="341:13" pos:end="341:18">matrix</name><index pos:start="341:19" pos:end="341:33">[ <expr pos:start="341:21" pos:end="341:32"><name pos:start="341:21" pos:end="341:32">FRONT_CENTER</name></expr>]</index><index pos:start="341:34" pos:end="341:56">[ <expr pos:start="341:36" pos:end="341:55"><name pos:start="341:36" pos:end="341:55">FRONT_LEFT_OF_CENTER</name></expr>]</index></name><operator pos:start="341:57" pos:end="341:58">+=</operator> <name pos:start="341:60" pos:end="341:68">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:69"><expr pos:start="343:13" pos:end="343:68"><name pos:start="343:13" pos:end="343:56"><name pos:start="343:13" pos:end="343:18">matrix</name><index pos:start="343:19" pos:end="343:33">[ <expr pos:start="343:21" pos:end="343:32"><name pos:start="343:21" pos:end="343:32">FRONT_CENTER</name></expr>]</index><index pos:start="343:34" pos:end="343:56">[<expr pos:start="343:35" pos:end="343:55"><name pos:start="343:35" pos:end="343:55">FRONT_RIGHT_OF_CENTER</name></expr>]</index></name><operator pos:start="343:57" pos:end="343:58">+=</operator> <name pos:start="343:60" pos:end="343:68">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="345:10" pos:end="347:26">else<block type="pseudo" pos:start="347:13" pos:end="347:26"><block_content pos:start="347:13" pos:end="347:26">

            <expr_stmt pos:start="347:13" pos:end="347:26"><expr pos:start="347:13" pos:end="347:25"><call pos:start="347:13" pos:end="347:25"><name pos:start="347:13" pos:end="347:22">av_assert0</name><argument_list pos:start="347:23" pos:end="347:25">(<argument pos:start="347:24" pos:end="347:24"><expr pos:start="347:24" pos:end="347:24"><literal type="number" pos:start="347:24" pos:end="347:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="351:5" pos:end="351:49">/* mix LFE into front left/right or center */</comment>

    <if_stmt pos:start="353:5" pos:end="369:5"><if pos:start="353:5" pos:end="369:5">if <condition pos:start="353:8" pos:end="353:42">(<expr pos:start="353:9" pos:end="353:41"><name pos:start="353:9" pos:end="353:19">unaccounted</name> <operator pos:start="353:21" pos:end="353:21">&amp;</operator> <name pos:start="353:23" pos:end="353:41">AV_CH_LOW_FREQUENCY</name></expr>)</condition> <block pos:start="353:44" pos:end="369:5">{<block_content pos:start="355:9" pos:end="367:26">

        <if_stmt pos:start="355:9" pos:end="367:26"><if pos:start="355:9" pos:end="359:9">if <condition pos:start="355:12" pos:end="355:47">(<expr pos:start="355:13" pos:end="355:46"><name pos:start="355:13" pos:end="355:25">out_ch_layout</name> <operator pos:start="355:27" pos:end="355:27">&amp;</operator> <name pos:start="355:29" pos:end="355:46">AV_CH_FRONT_CENTER</name></expr>)</condition> <block pos:start="355:49" pos:end="359:9">{<block_content pos:start="357:13" pos:end="357:68">

            <expr_stmt pos:start="357:13" pos:end="357:68"><expr pos:start="357:13" pos:end="357:67"><name pos:start="357:13" pos:end="357:47"><name pos:start="357:13" pos:end="357:18">matrix</name><index pos:start="357:19" pos:end="357:32">[<expr pos:start="357:20" pos:end="357:31"><name pos:start="357:20" pos:end="357:31">FRONT_CENTER</name></expr>]</index><index pos:start="357:33" pos:end="357:47">[<expr pos:start="357:34" pos:end="357:46"><name pos:start="357:34" pos:end="357:46">LOW_FREQUENCY</name></expr>]</index></name> <operator pos:start="357:49" pos:end="357:50">+=</operator> <name pos:start="357:52" pos:end="357:67"><name pos:start="357:52" pos:end="357:52">s</name><operator pos:start="357:53" pos:end="357:54">-&gt;</operator><name pos:start="357:55" pos:end="357:67">lfe_mix_level</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="359:11" pos:end="365:9">else if <condition pos:start="359:19" pos:end="359:52">(<expr pos:start="359:20" pos:end="359:51"><name pos:start="359:20" pos:end="359:32">out_ch_layout</name> <operator pos:start="359:34" pos:end="359:34">&amp;</operator> <name pos:start="359:36" pos:end="359:51">AV_CH_FRONT_LEFT</name></expr>)</condition> <block pos:start="359:54" pos:end="365:9">{<block_content pos:start="361:13" pos:end="363:79">

            <expr_stmt pos:start="361:13" pos:end="361:79"><expr pos:start="361:13" pos:end="361:78"><name pos:start="361:13" pos:end="361:46"><name pos:start="361:13" pos:end="361:18">matrix</name><index pos:start="361:19" pos:end="361:31">[<expr pos:start="361:20" pos:end="361:29"><name pos:start="361:20" pos:end="361:29">FRONT_LEFT</name></expr> ]</index><index pos:start="361:32" pos:end="361:46">[<expr pos:start="361:33" pos:end="361:45"><name pos:start="361:33" pos:end="361:45">LOW_FREQUENCY</name></expr>]</index></name> <operator pos:start="361:48" pos:end="361:49">+=</operator> <name pos:start="361:51" pos:end="361:66"><name pos:start="361:51" pos:end="361:51">s</name><operator pos:start="361:52" pos:end="361:53">-&gt;</operator><name pos:start="361:54" pos:end="361:66">lfe_mix_level</name></name> <operator pos:start="361:68" pos:end="361:68">*</operator> <name pos:start="361:70" pos:end="361:78">M_SQRT1_2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:79"><expr pos:start="363:13" pos:end="363:78"><name pos:start="363:13" pos:end="363:46"><name pos:start="363:13" pos:end="363:18">matrix</name><index pos:start="363:19" pos:end="363:31">[<expr pos:start="363:20" pos:end="363:30"><name pos:start="363:20" pos:end="363:30">FRONT_RIGHT</name></expr>]</index><index pos:start="363:32" pos:end="363:46">[<expr pos:start="363:33" pos:end="363:45"><name pos:start="363:33" pos:end="363:45">LOW_FREQUENCY</name></expr>]</index></name> <operator pos:start="363:48" pos:end="363:49">+=</operator> <name pos:start="363:51" pos:end="363:66"><name pos:start="363:51" pos:end="363:51">s</name><operator pos:start="363:52" pos:end="363:53">-&gt;</operator><name pos:start="363:54" pos:end="363:66">lfe_mix_level</name></name> <operator pos:start="363:68" pos:end="363:68">*</operator> <name pos:start="363:70" pos:end="363:78">M_SQRT1_2</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="365:11" pos:end="367:26">else<block type="pseudo" pos:start="367:13" pos:end="367:26"><block_content pos:start="367:13" pos:end="367:26">

            <expr_stmt pos:start="367:13" pos:end="367:26"><expr pos:start="367:13" pos:end="367:25"><call pos:start="367:13" pos:end="367:25"><name pos:start="367:13" pos:end="367:22">av_assert0</name><argument_list pos:start="367:23" pos:end="367:25">(<argument pos:start="367:24" pos:end="367:24"><expr pos:start="367:24" pos:end="367:24"><literal type="number" pos:start="367:24" pos:end="367:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="373:5" pos:end="403:5">for<control pos:start="373:8" pos:end="373:29">(<init pos:start="373:9" pos:end="373:18"><expr pos:start="373:9" pos:end="373:17"><name pos:start="373:9" pos:end="373:13">out_i</name><operator pos:start="373:14" pos:end="373:14">=</operator><name pos:start="373:15" pos:end="373:15">i</name><operator pos:start="373:16" pos:end="373:16">=</operator><literal type="number" pos:start="373:17" pos:end="373:17">0</literal></expr>;</init> <condition pos:start="373:20" pos:end="373:24"><expr pos:start="373:20" pos:end="373:23"><name pos:start="373:20" pos:end="373:20">i</name><operator pos:start="373:21" pos:end="373:21">&lt;</operator><literal type="number" pos:start="373:22" pos:end="373:23">64</literal></expr>;</condition> <incr pos:start="373:26" pos:end="373:28"><expr pos:start="373:26" pos:end="373:28"><name pos:start="373:26" pos:end="373:26">i</name><operator pos:start="373:27" pos:end="373:28">++</operator></expr></incr>)</control><block pos:start="373:30" pos:end="403:5">{<block_content pos:start="375:9" pos:end="401:20">

        <decl_stmt pos:start="375:9" pos:end="375:21"><decl pos:start="375:9" pos:end="375:20"><type pos:start="375:9" pos:end="375:14"><name pos:start="375:9" pos:end="375:14">double</name></type> <name pos:start="375:16" pos:end="375:18">sum</name><init pos:start="375:19" pos:end="375:20">=<expr pos:start="375:20" pos:end="375:20"><literal type="number" pos:start="375:20" pos:end="375:20">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="377:9" pos:end="377:19"><decl pos:start="377:9" pos:end="377:18"><type pos:start="377:9" pos:end="377:11"><name pos:start="377:9" pos:end="377:11">int</name></type> <name pos:start="377:13" pos:end="377:16">in_i</name><init pos:start="377:17" pos:end="377:18">=<expr pos:start="377:18" pos:end="377:18"><literal type="number" pos:start="377:18" pos:end="377:18">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="379:9" pos:end="395:9">for<control pos:start="379:12" pos:end="379:27">(<init pos:start="379:13" pos:end="379:16"><expr pos:start="379:13" pos:end="379:15"><name pos:start="379:13" pos:end="379:13">j</name><operator pos:start="379:14" pos:end="379:14">=</operator><literal type="number" pos:start="379:15" pos:end="379:15">0</literal></expr>;</init> <condition pos:start="379:18" pos:end="379:22"><expr pos:start="379:18" pos:end="379:21"><name pos:start="379:18" pos:end="379:18">j</name><operator pos:start="379:19" pos:end="379:19">&lt;</operator><literal type="number" pos:start="379:20" pos:end="379:21">64</literal></expr>;</condition> <incr pos:start="379:24" pos:end="379:26"><expr pos:start="379:24" pos:end="379:26"><name pos:start="379:24" pos:end="379:24">j</name><operator pos:start="379:25" pos:end="379:26">++</operator></expr></incr>)</control><block pos:start="379:28" pos:end="395:9">{<block_content pos:start="381:13" pos:end="393:23">

            <if_stmt pos:start="381:13" pos:end="387:93"><if pos:start="381:13" pos:end="383:53">if <condition pos:start="381:16" pos:end="381:76">(<expr pos:start="381:17" pos:end="381:75"><name pos:start="381:17" pos:end="381:17">i</name> <operator pos:start="381:19" pos:end="381:19">&lt;</operator> <call pos:start="381:21" pos:end="381:42"><name pos:start="381:21" pos:end="381:34">FF_ARRAY_ELEMS</name><argument_list pos:start="381:35" pos:end="381:42">(<argument pos:start="381:36" pos:end="381:41"><expr pos:start="381:36" pos:end="381:41"><name pos:start="381:36" pos:end="381:41">matrix</name></expr></argument>)</argument_list></call> <operator pos:start="381:44" pos:end="381:45">&amp;&amp;</operator> <name pos:start="381:47" pos:end="381:47">j</name> <operator pos:start="381:49" pos:end="381:49">&lt;</operator> <call pos:start="381:51" pos:end="381:75"><name pos:start="381:51" pos:end="381:64">FF_ARRAY_ELEMS</name><argument_list pos:start="381:65" pos:end="381:75">(<argument pos:start="381:66" pos:end="381:74"><expr pos:start="381:66" pos:end="381:74"><name pos:start="381:66" pos:end="381:74"><name pos:start="381:66" pos:end="381:71">matrix</name><index pos:start="381:72" pos:end="381:74">[<expr pos:start="381:73" pos:end="381:73"><literal type="number" pos:start="381:73" pos:end="381:73">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="383:17" pos:end="383:53"><block_content pos:start="383:17" pos:end="383:53">

                <expr_stmt pos:start="383:17" pos:end="383:53"><expr pos:start="383:17" pos:end="383:52"><name pos:start="383:17" pos:end="383:38"><name pos:start="383:17" pos:end="383:17">s</name><operator pos:start="383:18" pos:end="383:19">-&gt;</operator><name pos:start="383:20" pos:end="383:25">matrix</name><index pos:start="383:26" pos:end="383:32">[<expr pos:start="383:27" pos:end="383:31"><name pos:start="383:27" pos:end="383:31">out_i</name></expr>]</index><index pos:start="383:33" pos:end="383:38">[<expr pos:start="383:34" pos:end="383:37"><name pos:start="383:34" pos:end="383:37">in_i</name></expr>]</index></name><operator pos:start="383:39" pos:end="383:39">=</operator> <name pos:start="383:41" pos:end="383:52"><name pos:start="383:41" pos:end="383:46">matrix</name><index pos:start="383:47" pos:end="383:49">[<expr pos:start="383:48" pos:end="383:48"><name pos:start="383:48" pos:end="383:48">i</name></expr>]</index><index pos:start="383:50" pos:end="383:52">[<expr pos:start="383:51" pos:end="383:51"><name pos:start="383:51" pos:end="383:51">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="385:13" pos:end="387:93">else<block type="pseudo" pos:start="387:17" pos:end="387:93"><block_content pos:start="387:17" pos:end="387:93">

                <expr_stmt pos:start="387:17" pos:end="387:93"><expr pos:start="387:17" pos:end="387:92"><name pos:start="387:17" pos:end="387:38"><name pos:start="387:17" pos:end="387:17">s</name><operator pos:start="387:18" pos:end="387:19">-&gt;</operator><name pos:start="387:20" pos:end="387:25">matrix</name><index pos:start="387:26" pos:end="387:32">[<expr pos:start="387:27" pos:end="387:31"><name pos:start="387:27" pos:end="387:31">out_i</name></expr>]</index><index pos:start="387:33" pos:end="387:38">[<expr pos:start="387:34" pos:end="387:37"><name pos:start="387:34" pos:end="387:37">in_i</name></expr>]</index></name><operator pos:start="387:39" pos:end="387:39">=</operator> <name pos:start="387:41" pos:end="387:41">i</name> <operator pos:start="387:43" pos:end="387:44">==</operator> <name pos:start="387:46" pos:end="387:46">j</name> <operator pos:start="387:48" pos:end="387:49">&amp;&amp;</operator> <operator pos:start="387:51" pos:end="387:51">(</operator><name pos:start="387:52" pos:end="387:63">in_ch_layout</name> <operator pos:start="387:65" pos:end="387:65">&amp;</operator> <name pos:start="387:67" pos:end="387:79">out_ch_layout</name> <operator pos:start="387:81" pos:end="387:81">&amp;</operator> <operator pos:start="387:83" pos:end="387:83">(</operator><literal type="number" pos:start="387:84" pos:end="387:87">1ULL</literal><operator pos:start="387:88" pos:end="387:89">&lt;&lt;</operator><name pos:start="387:90" pos:end="387:90">i</name><operator pos:start="387:91" pos:end="387:91">)</operator><operator pos:start="387:92" pos:end="387:92">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="389:13" pos:end="389:48"><expr pos:start="389:13" pos:end="389:47"><name pos:start="389:13" pos:end="389:15">sum</name> <operator pos:start="389:17" pos:end="389:18">+=</operator> <call pos:start="389:20" pos:end="389:47"><name pos:start="389:20" pos:end="389:23">fabs</name><argument_list pos:start="389:24" pos:end="389:47">(<argument pos:start="389:25" pos:end="389:46"><expr pos:start="389:25" pos:end="389:46"><name pos:start="389:25" pos:end="389:46"><name pos:start="389:25" pos:end="389:25">s</name><operator pos:start="389:26" pos:end="389:27">-&gt;</operator><name pos:start="389:28" pos:end="389:33">matrix</name><index pos:start="389:34" pos:end="389:40">[<expr pos:start="389:35" pos:end="389:39"><name pos:start="389:35" pos:end="389:39">out_i</name></expr>]</index><index pos:start="389:41" pos:end="389:46">[<expr pos:start="389:42" pos:end="389:45"><name pos:start="389:42" pos:end="389:45">in_i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="391:13" pos:end="393:23"><if pos:start="391:13" pos:end="393:23">if<condition pos:start="391:15" pos:end="391:40">(<expr pos:start="391:16" pos:end="391:39"><name pos:start="391:16" pos:end="391:27">in_ch_layout</name> <operator pos:start="391:29" pos:end="391:29">&amp;</operator> <operator pos:start="391:31" pos:end="391:31">(</operator><literal type="number" pos:start="391:32" pos:end="391:35">1ULL</literal><operator pos:start="391:36" pos:end="391:37">&lt;&lt;</operator><name pos:start="391:38" pos:end="391:38">j</name><operator pos:start="391:39" pos:end="391:39">)</operator></expr>)</condition><block type="pseudo" pos:start="393:17" pos:end="393:23"><block_content pos:start="393:17" pos:end="393:23">

                <expr_stmt pos:start="393:17" pos:end="393:23"><expr pos:start="393:17" pos:end="393:22"><name pos:start="393:17" pos:end="393:20">in_i</name><operator pos:start="393:21" pos:end="393:22">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="397:9" pos:end="397:37"><expr pos:start="397:9" pos:end="397:36"><name pos:start="397:9" pos:end="397:15">maxcoef</name><operator pos:start="397:16" pos:end="397:16">=</operator> <call pos:start="397:18" pos:end="397:36"><name pos:start="397:18" pos:end="397:22">FFMAX</name><argument_list pos:start="397:23" pos:end="397:36">(<argument pos:start="397:24" pos:end="397:30"><expr pos:start="397:24" pos:end="397:30"><name pos:start="397:24" pos:end="397:30">maxcoef</name></expr></argument>, <argument pos:start="397:33" pos:end="397:35"><expr pos:start="397:33" pos:end="397:35"><name pos:start="397:33" pos:end="397:35">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="399:9" pos:end="401:20"><if pos:start="399:9" pos:end="401:20">if<condition pos:start="399:11" pos:end="399:37">(<expr pos:start="399:12" pos:end="399:36"><name pos:start="399:12" pos:end="399:24">out_ch_layout</name> <operator pos:start="399:26" pos:end="399:26">&amp;</operator> <operator pos:start="399:28" pos:end="399:28">(</operator><literal type="number" pos:start="399:29" pos:end="399:32">1ULL</literal><operator pos:start="399:33" pos:end="399:34">&lt;&lt;</operator><name pos:start="399:35" pos:end="399:35">i</name><operator pos:start="399:36" pos:end="399:36">)</operator></expr>)</condition><block type="pseudo" pos:start="401:13" pos:end="401:20"><block_content pos:start="401:13" pos:end="401:20">

            <expr_stmt pos:start="401:13" pos:end="401:20"><expr pos:start="401:13" pos:end="401:19"><name pos:start="401:13" pos:end="401:17">out_i</name><operator pos:start="401:18" pos:end="401:19">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="405:5" pos:end="407:38"><if pos:start="405:5" pos:end="407:38">if<condition pos:start="405:7" pos:end="405:31">(<expr pos:start="405:8" pos:end="405:30"><name pos:start="405:8" pos:end="405:25"><name pos:start="405:8" pos:end="405:8">s</name><operator pos:start="405:9" pos:end="405:10">-&gt;</operator><name pos:start="405:11" pos:end="405:25">rematrix_volume</name></name>  <operator pos:start="405:28" pos:end="405:28">&lt;</operator> <literal type="number" pos:start="405:30" pos:end="405:30">0</literal></expr>)</condition><block type="pseudo" pos:start="407:9" pos:end="407:38"><block_content pos:start="407:9" pos:end="407:38">

        <expr_stmt pos:start="407:9" pos:end="407:38"><expr pos:start="407:9" pos:end="407:37"><name pos:start="407:9" pos:end="407:15">maxcoef</name> <operator pos:start="407:17" pos:end="407:17">=</operator> <operator pos:start="407:19" pos:end="407:19">-</operator><name pos:start="407:20" pos:end="407:37"><name pos:start="407:20" pos:end="407:20">s</name><operator pos:start="407:21" pos:end="407:22">-&gt;</operator><name pos:start="407:23" pos:end="407:37">rematrix_volume</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="411:5" pos:end="423:25"><if pos:start="411:5" pos:end="415:5">if <condition pos:start="411:8" pos:end="411:31">(<expr pos:start="411:9" pos:end="411:30"><name pos:start="411:9" pos:end="411:26"><name pos:start="411:9" pos:end="411:9">s</name><operator pos:start="411:10" pos:end="411:11">-&gt;</operator><name pos:start="411:12" pos:end="411:26">rematrix_maxval</name></name> <operator pos:start="411:28" pos:end="411:28">&gt;</operator> <literal type="number" pos:start="411:30" pos:end="411:30">0</literal></expr>)</condition> <block pos:start="411:33" pos:end="415:5">{<block_content pos:start="413:9" pos:end="413:36">

        <expr_stmt pos:start="413:9" pos:end="413:36"><expr pos:start="413:9" pos:end="413:35"><name pos:start="413:9" pos:end="413:14">maxval</name> <operator pos:start="413:16" pos:end="413:16">=</operator> <name pos:start="413:18" pos:end="413:35"><name pos:start="413:18" pos:end="413:18">s</name><operator pos:start="413:19" pos:end="413:20">-&gt;</operator><name pos:start="413:21" pos:end="413:35">rematrix_maxval</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="415:7" pos:end="421:5">else if <condition pos:start="415:15" pos:end="417:82">(   <expr pos:start="415:19" pos:end="417:81"><call pos:start="415:19" pos:end="415:61"><name pos:start="415:19" pos:end="415:42">av_get_packed_sample_fmt</name><argument_list pos:start="415:43" pos:end="415:61">(<argument pos:start="415:44" pos:end="415:60"><expr pos:start="415:44" pos:end="415:60"><name pos:start="415:44" pos:end="415:60"><name pos:start="415:44" pos:end="415:44">s</name><operator pos:start="415:45" pos:end="415:46">-&gt;</operator><name pos:start="415:47" pos:end="415:60">out_sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="415:63" pos:end="415:63">&lt;</operator> <name pos:start="415:65" pos:end="415:81">AV_SAMPLE_FMT_FLT</name>

               <operator pos:start="417:16" pos:end="417:17">||</operator> <call pos:start="417:19" pos:end="417:61"><name pos:start="417:19" pos:end="417:42">av_get_packed_sample_fmt</name><argument_list pos:start="417:43" pos:end="417:61">(<argument pos:start="417:44" pos:end="417:60"><expr pos:start="417:44" pos:end="417:60"><name pos:start="417:44" pos:end="417:60"><name pos:start="417:44" pos:end="417:44">s</name><operator pos:start="417:45" pos:end="417:46">-&gt;</operator><name pos:start="417:47" pos:end="417:60">int_sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="417:63" pos:end="417:63">&lt;</operator> <name pos:start="417:65" pos:end="417:81">AV_SAMPLE_FMT_FLT</name></expr>)</condition> <block pos:start="417:84" pos:end="421:5">{<block_content pos:start="419:9" pos:end="419:21">

        <expr_stmt pos:start="419:9" pos:end="419:21"><expr pos:start="419:9" pos:end="419:20"><name pos:start="419:9" pos:end="419:14">maxval</name> <operator pos:start="419:16" pos:end="419:16">=</operator> <literal type="number" pos:start="419:18" pos:end="419:20">1.0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="421:7" pos:end="423:25">else<block type="pseudo" pos:start="423:9" pos:end="423:25"><block_content pos:start="423:9" pos:end="423:25">

        <expr_stmt pos:start="423:9" pos:end="423:25"><expr pos:start="423:9" pos:end="423:24"><name pos:start="423:9" pos:end="423:14">maxval</name> <operator pos:start="423:16" pos:end="423:16">=</operator> <name pos:start="423:18" pos:end="423:24">INT_MAX</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="427:5" pos:end="439:5"><if pos:start="427:5" pos:end="439:5">if<condition pos:start="427:7" pos:end="427:51">(<expr pos:start="427:8" pos:end="427:50"><name pos:start="427:8" pos:end="427:14">maxcoef</name> <operator pos:start="427:16" pos:end="427:16">&gt;</operator> <name pos:start="427:18" pos:end="427:23">maxval</name> <operator pos:start="427:25" pos:end="427:26">||</operator> <name pos:start="427:28" pos:end="427:45"><name pos:start="427:28" pos:end="427:28">s</name><operator pos:start="427:29" pos:end="427:30">-&gt;</operator><name pos:start="427:31" pos:end="427:45">rematrix_volume</name></name>  <operator pos:start="427:48" pos:end="427:48">&lt;</operator> <literal type="number" pos:start="427:50" pos:end="427:50">0</literal></expr>)</condition><block pos:start="427:52" pos:end="439:5">{<block_content pos:start="429:9" pos:end="437:13">

        <expr_stmt pos:start="429:9" pos:end="429:26"><expr pos:start="429:9" pos:end="429:25"><name pos:start="429:9" pos:end="429:15">maxcoef</name> <operator pos:start="429:17" pos:end="429:18">/=</operator> <name pos:start="429:20" pos:end="429:25">maxval</name></expr>;</expr_stmt>

        <for pos:start="431:9" pos:end="437:13">for<control pos:start="431:12" pos:end="431:35">(<init pos:start="431:13" pos:end="431:16"><expr pos:start="431:13" pos:end="431:15"><name pos:start="431:13" pos:end="431:13">i</name><operator pos:start="431:14" pos:end="431:14">=</operator><literal type="number" pos:start="431:15" pos:end="431:15">0</literal></expr>;</init> <condition pos:start="431:18" pos:end="431:30"><expr pos:start="431:18" pos:end="431:29"><name pos:start="431:18" pos:end="431:18">i</name><operator pos:start="431:19" pos:end="431:19">&lt;</operator><name pos:start="431:20" pos:end="431:29">SWR_CH_MAX</name></expr>;</condition> <incr pos:start="431:32" pos:end="431:34"><expr pos:start="431:32" pos:end="431:34"><name pos:start="431:32" pos:end="431:32">i</name><operator pos:start="431:33" pos:end="431:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="433:13" pos:end="437:13"><block_content pos:start="433:13" pos:end="437:13">

            <for pos:start="433:13" pos:end="437:13">for<control pos:start="433:16" pos:end="433:39">(<init pos:start="433:17" pos:end="433:20"><expr pos:start="433:17" pos:end="433:19"><name pos:start="433:17" pos:end="433:17">j</name><operator pos:start="433:18" pos:end="433:18">=</operator><literal type="number" pos:start="433:19" pos:end="433:19">0</literal></expr>;</init> <condition pos:start="433:22" pos:end="433:34"><expr pos:start="433:22" pos:end="433:33"><name pos:start="433:22" pos:end="433:22">j</name><operator pos:start="433:23" pos:end="433:23">&lt;</operator><name pos:start="433:24" pos:end="433:33">SWR_CH_MAX</name></expr>;</condition> <incr pos:start="433:36" pos:end="433:38"><expr pos:start="433:36" pos:end="433:38"><name pos:start="433:36" pos:end="433:36">j</name><operator pos:start="433:37" pos:end="433:38">++</operator></expr></incr>)</control><block pos:start="433:40" pos:end="437:13">{<block_content pos:start="435:17" pos:end="435:43">

                <expr_stmt pos:start="435:17" pos:end="435:43"><expr pos:start="435:17" pos:end="435:42"><name pos:start="435:17" pos:end="435:31"><name pos:start="435:17" pos:end="435:17">s</name><operator pos:start="435:18" pos:end="435:19">-&gt;</operator><name pos:start="435:20" pos:end="435:25">matrix</name><index pos:start="435:26" pos:end="435:28">[<expr pos:start="435:27" pos:end="435:27"><name pos:start="435:27" pos:end="435:27">i</name></expr>]</index><index pos:start="435:29" pos:end="435:31">[<expr pos:start="435:30" pos:end="435:30"><name pos:start="435:30" pos:end="435:30">j</name></expr>]</index></name> <operator pos:start="435:33" pos:end="435:34">/=</operator> <name pos:start="435:36" pos:end="435:42">maxcoef</name></expr>;</expr_stmt>

            </block_content>}</block></for></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="443:5" pos:end="453:5"><if pos:start="443:5" pos:end="453:5">if<condition pos:start="443:7" pos:end="443:30">(<expr pos:start="443:8" pos:end="443:29"><name pos:start="443:8" pos:end="443:25"><name pos:start="443:8" pos:end="443:8">s</name><operator pos:start="443:9" pos:end="443:10">-&gt;</operator><name pos:start="443:11" pos:end="443:25">rematrix_volume</name></name> <operator pos:start="443:27" pos:end="443:27">&gt;</operator> <literal type="number" pos:start="443:29" pos:end="443:29">0</literal></expr>)</condition><block pos:start="443:31" pos:end="453:5">{<block_content pos:start="445:9" pos:end="451:13">

        <for pos:start="445:9" pos:end="451:13">for<control pos:start="445:12" pos:end="445:35">(<init pos:start="445:13" pos:end="445:16"><expr pos:start="445:13" pos:end="445:15"><name pos:start="445:13" pos:end="445:13">i</name><operator pos:start="445:14" pos:end="445:14">=</operator><literal type="number" pos:start="445:15" pos:end="445:15">0</literal></expr>;</init> <condition pos:start="445:18" pos:end="445:30"><expr pos:start="445:18" pos:end="445:29"><name pos:start="445:18" pos:end="445:18">i</name><operator pos:start="445:19" pos:end="445:19">&lt;</operator><name pos:start="445:20" pos:end="445:29">SWR_CH_MAX</name></expr>;</condition> <incr pos:start="445:32" pos:end="445:34"><expr pos:start="445:32" pos:end="445:34"><name pos:start="445:32" pos:end="445:32">i</name><operator pos:start="445:33" pos:end="445:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="447:13" pos:end="451:13"><block_content pos:start="447:13" pos:end="451:13">

            <for pos:start="447:13" pos:end="451:13">for<control pos:start="447:16" pos:end="447:39">(<init pos:start="447:17" pos:end="447:20"><expr pos:start="447:17" pos:end="447:19"><name pos:start="447:17" pos:end="447:17">j</name><operator pos:start="447:18" pos:end="447:18">=</operator><literal type="number" pos:start="447:19" pos:end="447:19">0</literal></expr>;</init> <condition pos:start="447:22" pos:end="447:34"><expr pos:start="447:22" pos:end="447:33"><name pos:start="447:22" pos:end="447:22">j</name><operator pos:start="447:23" pos:end="447:23">&lt;</operator><name pos:start="447:24" pos:end="447:33">SWR_CH_MAX</name></expr>;</condition> <incr pos:start="447:36" pos:end="447:38"><expr pos:start="447:36" pos:end="447:38"><name pos:start="447:36" pos:end="447:36">j</name><operator pos:start="447:37" pos:end="447:38">++</operator></expr></incr>)</control><block pos:start="447:40" pos:end="451:13">{<block_content pos:start="449:17" pos:end="449:54">

                <expr_stmt pos:start="449:17" pos:end="449:54"><expr pos:start="449:17" pos:end="449:53"><name pos:start="449:17" pos:end="449:31"><name pos:start="449:17" pos:end="449:17">s</name><operator pos:start="449:18" pos:end="449:19">-&gt;</operator><name pos:start="449:20" pos:end="449:25">matrix</name><index pos:start="449:26" pos:end="449:28">[<expr pos:start="449:27" pos:end="449:27"><name pos:start="449:27" pos:end="449:27">i</name></expr>]</index><index pos:start="449:29" pos:end="449:31">[<expr pos:start="449:30" pos:end="449:30"><name pos:start="449:30" pos:end="449:30">j</name></expr>]</index></name> <operator pos:start="449:33" pos:end="449:34">*=</operator> <name pos:start="449:36" pos:end="449:53"><name pos:start="449:36" pos:end="449:36">s</name><operator pos:start="449:37" pos:end="449:38">-&gt;</operator><name pos:start="449:39" pos:end="449:53">rematrix_volume</name></name></expr>;</expr_stmt>

            </block_content>}</block></for></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <for pos:start="457:5" pos:end="467:5">for<control pos:start="457:8" pos:end="457:69">(<init pos:start="457:9" pos:end="457:12"><expr pos:start="457:9" pos:end="457:11"><name pos:start="457:9" pos:end="457:9">i</name><operator pos:start="457:10" pos:end="457:10">=</operator><literal type="number" pos:start="457:11" pos:end="457:11">0</literal></expr>;</init> <condition pos:start="457:14" pos:end="457:64"><expr pos:start="457:14" pos:end="457:63"><name pos:start="457:14" pos:end="457:14">i</name><operator pos:start="457:15" pos:end="457:15">&lt;</operator><call pos:start="457:16" pos:end="457:63"><name pos:start="457:16" pos:end="457:48">av_get_channel_layout_nb_channels</name><argument_list pos:start="457:49" pos:end="457:63">(<argument pos:start="457:50" pos:end="457:62"><expr pos:start="457:50" pos:end="457:62"><name pos:start="457:50" pos:end="457:62">out_ch_layout</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="457:66" pos:end="457:68"><expr pos:start="457:66" pos:end="457:68"><name pos:start="457:66" pos:end="457:66">i</name><operator pos:start="457:67" pos:end="457:68">++</operator></expr></incr>)</control><block pos:start="457:70" pos:end="467:5">{<block_content pos:start="459:9" pos:end="465:41">

        <for pos:start="459:9" pos:end="463:9">for<control pos:start="459:12" pos:end="459:72">(<init pos:start="459:13" pos:end="459:16"><expr pos:start="459:13" pos:end="459:15"><name pos:start="459:13" pos:end="459:13">j</name><operator pos:start="459:14" pos:end="459:14">=</operator><literal type="number" pos:start="459:15" pos:end="459:15">0</literal></expr>;</init> <condition pos:start="459:18" pos:end="459:67"><expr pos:start="459:18" pos:end="459:66"><name pos:start="459:18" pos:end="459:18">j</name><operator pos:start="459:19" pos:end="459:19">&lt;</operator><call pos:start="459:20" pos:end="459:66"><name pos:start="459:20" pos:end="459:52">av_get_channel_layout_nb_channels</name><argument_list pos:start="459:53" pos:end="459:66">(<argument pos:start="459:54" pos:end="459:65"><expr pos:start="459:54" pos:end="459:65"><name pos:start="459:54" pos:end="459:65">in_ch_layout</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="459:69" pos:end="459:71"><expr pos:start="459:69" pos:end="459:71"><name pos:start="459:69" pos:end="459:69">j</name><operator pos:start="459:70" pos:end="459:71">++</operator></expr></incr>)</control><block pos:start="459:73" pos:end="463:9">{<block_content pos:start="461:13" pos:end="461:63">

            <expr_stmt pos:start="461:13" pos:end="461:63"><expr pos:start="461:13" pos:end="461:62"><call pos:start="461:13" pos:end="461:62"><name pos:start="461:13" pos:end="461:18">av_log</name><argument_list pos:start="461:19" pos:end="461:62">(<argument pos:start="461:20" pos:end="461:23"><expr pos:start="461:20" pos:end="461:23"><name pos:start="461:20" pos:end="461:23">NULL</name></expr></argument>, <argument pos:start="461:26" pos:end="461:37"><expr pos:start="461:26" pos:end="461:37"><name pos:start="461:26" pos:end="461:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="461:40" pos:end="461:44"><expr pos:start="461:40" pos:end="461:44"><literal type="string" pos:start="461:40" pos:end="461:44">"%f "</literal></expr></argument>, <argument pos:start="461:47" pos:end="461:61"><expr pos:start="461:47" pos:end="461:61"><name pos:start="461:47" pos:end="461:61"><name pos:start="461:47" pos:end="461:47">s</name><operator pos:start="461:48" pos:end="461:49">-&gt;</operator><name pos:start="461:50" pos:end="461:55">matrix</name><index pos:start="461:56" pos:end="461:58">[<expr pos:start="461:57" pos:end="461:57"><name pos:start="461:57" pos:end="461:57">i</name></expr>]</index><index pos:start="461:59" pos:end="461:61">[<expr pos:start="461:60" pos:end="461:60"><name pos:start="461:60" pos:end="461:60">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="465:9" pos:end="465:41"><expr pos:start="465:9" pos:end="465:40"><call pos:start="465:9" pos:end="465:40"><name pos:start="465:9" pos:end="465:14">av_log</name><argument_list pos:start="465:15" pos:end="465:40">(<argument pos:start="465:16" pos:end="465:19"><expr pos:start="465:16" pos:end="465:19"><name pos:start="465:16" pos:end="465:19">NULL</name></expr></argument>, <argument pos:start="465:22" pos:end="465:33"><expr pos:start="465:22" pos:end="465:33"><name pos:start="465:22" pos:end="465:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="465:36" pos:end="465:39"><expr pos:start="465:36" pos:end="465:39"><literal type="string" pos:start="465:36" pos:end="465:39">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="469:5" pos:end="469:13">return <expr pos:start="469:12" pos:end="469:12"><literal type="number" pos:start="469:12" pos:end="469:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
