<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20474.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint16_t</name></type> <name pos:start="1:17" pos:end="1:28">nvme_map_prp</name><parameter_list pos:start="1:29" pos:end="3:70">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:39">QEMUSGList</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">qsg</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><name pos:start="1:47" pos:end="1:58">QEMUIOVector</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">iov</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:78"><decl pos:start="1:66" pos:end="1:78"><type pos:start="1:66" pos:end="1:78"><name pos:start="1:66" pos:end="1:73">uint64_t</name></type> <name pos:start="1:75" pos:end="1:78">prp1</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:42"><decl pos:start="3:30" pos:end="3:42"><type pos:start="3:30" pos:end="3:42"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:42">prp2</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:56"><decl pos:start="3:45" pos:end="3:56"><type pos:start="3:45" pos:end="3:56"><name pos:start="3:45" pos:end="3:52">uint32_t</name></type> <name pos:start="3:54" pos:end="3:56">len</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:69"><decl pos:start="3:59" pos:end="3:69"><type pos:start="3:59" pos:end="3:69"><name pos:start="3:59" pos:end="3:66">NvmeCtrl</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:69">n</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="153:1">{<block_content pos:start="7:5" pos:end="151:41">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">hwaddr</name></type> <name pos:start="7:12" pos:end="7:20">trans_len</name> <init pos:start="7:22" pos:end="7:59">= <expr pos:start="7:24" pos:end="7:59"><name pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:24">n</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:35">page_size</name></name> <operator pos:start="7:37" pos:end="7:37">-</operator> <operator pos:start="7:39" pos:end="7:39">(</operator><name pos:start="7:40" pos:end="7:43">prp1</name> <operator pos:start="7:45" pos:end="7:45">%</operator> <name pos:start="7:47" pos:end="7:58"><name pos:start="7:47" pos:end="7:47">n</name><operator pos:start="7:48" pos:end="7:49">-&gt;</operator><name pos:start="7:50" pos:end="7:58">page_size</name></name><operator pos:start="7:59" pos:end="7:59">)</operator></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:36"><expr pos:start="9:5" pos:end="9:35"><name pos:start="9:5" pos:end="9:13">trans_len</name> <operator pos:start="9:15" pos:end="9:15">=</operator> <call pos:start="9:17" pos:end="9:35"><name pos:start="9:17" pos:end="9:19">MIN</name><argument_list pos:start="9:20" pos:end="9:35">(<argument pos:start="9:21" pos:end="9:23"><expr pos:start="9:21" pos:end="9:23"><name pos:start="9:21" pos:end="9:23">len</name></expr></argument>, <argument pos:start="9:26" pos:end="9:34"><expr pos:start="9:26" pos:end="9:34"><name pos:start="9:26" pos:end="9:34">trans_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">num_prps</name> <init pos:start="11:18" pos:end="11:44">= <expr pos:start="11:20" pos:end="11:44"><operator pos:start="11:20" pos:end="11:20">(</operator><name pos:start="11:21" pos:end="11:23">len</name> <operator pos:start="11:25" pos:end="11:26">&gt;&gt;</operator> <name pos:start="11:28" pos:end="11:39"><name pos:start="11:28" pos:end="11:28">n</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:39">page_bits</name></name><operator pos:start="11:40" pos:end="11:40">)</operator> <operator pos:start="11:42" pos:end="11:42">+</operator> <literal type="number" pos:start="11:44" pos:end="11:44">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="35:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:14">(<expr pos:start="15:9" pos:end="15:13"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:13">prp1</name></expr>)</condition> <block pos:start="15:16" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:45">

        <return pos:start="17:9" pos:end="17:45">return <expr pos:start="17:16" pos:end="17:44"><name pos:start="17:16" pos:end="17:33">NVME_INVALID_FIELD</name> <operator pos:start="17:35" pos:end="17:35">|</operator> <name pos:start="17:37" pos:end="17:44">NVME_DNR</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="29:5">else if <condition pos:start="19:15" pos:end="21:72">(<expr pos:start="19:16" pos:end="21:71"><name pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:16">n</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:23">cmbsz</name></name> <operator pos:start="19:25" pos:end="19:26">&amp;&amp;</operator> <name pos:start="19:28" pos:end="19:31">prp1</name> <operator pos:start="19:33" pos:end="19:34">&gt;=</operator> <name pos:start="19:36" pos:end="19:51"><name pos:start="19:36" pos:end="19:36">n</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:46">ctrl_mem</name><operator pos:start="19:47" pos:end="19:47">.</operator><name pos:start="19:48" pos:end="19:51">addr</name></name> <operator pos:start="19:53" pos:end="19:54">&amp;&amp;</operator>

               <name pos:start="21:16" pos:end="21:19">prp1</name> <operator pos:start="21:21" pos:end="21:21">&lt;</operator> <name pos:start="21:23" pos:end="21:38"><name pos:start="21:23" pos:end="21:23">n</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:33">ctrl_mem</name><operator pos:start="21:34" pos:end="21:34">.</operator><name pos:start="21:35" pos:end="21:38">addr</name></name> <operator pos:start="21:40" pos:end="21:40">+</operator> <call pos:start="21:42" pos:end="21:71"><name pos:start="21:42" pos:end="21:53">int128_get64</name><argument_list pos:start="21:54" pos:end="21:71">(<argument pos:start="21:55" pos:end="21:70"><expr pos:start="21:55" pos:end="21:70"><name pos:start="21:55" pos:end="21:70"><name pos:start="21:55" pos:end="21:55">n</name><operator pos:start="21:56" pos:end="21:57">-&gt;</operator><name pos:start="21:58" pos:end="21:65">ctrl_mem</name><operator pos:start="21:66" pos:end="21:66">.</operator><name pos:start="21:67" pos:end="21:70">size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:74" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:83">

        <expr_stmt pos:start="23:9" pos:end="23:21"><expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:11">qsg</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:16">nsg</name></name> <operator pos:start="23:18" pos:end="23:18">=</operator> <literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><call pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:23">qemu_iovec_init</name><argument_list pos:start="25:24" pos:end="25:38">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">iov</name></expr></argument>, <argument pos:start="25:30" pos:end="25:37"><expr pos:start="25:30" pos:end="25:37"><name pos:start="25:30" pos:end="25:37">num_prps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:83"><expr pos:start="27:9" pos:end="27:82"><call pos:start="27:9" pos:end="27:82"><name pos:start="27:9" pos:end="27:22">qemu_iovec_add</name><argument_list pos:start="27:23" pos:end="27:82">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">iov</name></expr></argument>, <argument pos:start="27:29" pos:end="27:70"><expr pos:start="27:29" pos:end="27:70"><operator pos:start="27:29" pos:end="27:29">(</operator><name pos:start="27:30" pos:end="27:33">void</name> <operator pos:start="27:35" pos:end="27:35">*</operator><operator pos:start="27:36" pos:end="27:36">)</operator><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:70"><name pos:start="27:38" pos:end="27:38">n</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:45">cmbuf</name><index pos:start="27:46" pos:end="27:70">[<expr pos:start="27:47" pos:end="27:69"><name pos:start="27:47" pos:end="27:50">prp1</name> <operator pos:start="27:52" pos:end="27:52">-</operator> <name pos:start="27:54" pos:end="27:69"><name pos:start="27:54" pos:end="27:54">n</name><operator pos:start="27:55" pos:end="27:56">-&gt;</operator><name pos:start="27:57" pos:end="27:64">ctrl_mem</name><operator pos:start="27:65" pos:end="27:65">.</operator><name pos:start="27:66" pos:end="27:69">addr</name></name></expr>]</index></name></expr></argument>, <argument pos:start="27:73" pos:end="27:81"><expr pos:start="27:73" pos:end="27:81"><name pos:start="27:73" pos:end="27:81">trans_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="35:5">else <block pos:start="29:12" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:46">

        <expr_stmt pos:start="31:9" pos:end="31:59"><expr pos:start="31:9" pos:end="31:58"><call pos:start="31:9" pos:end="31:58"><name pos:start="31:9" pos:end="31:27">pci_dma_sglist_init</name><argument_list pos:start="31:28" pos:end="31:58">(<argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:31">qsg</name></expr></argument>, <argument pos:start="31:34" pos:end="31:47"><expr pos:start="31:34" pos:end="31:47"><operator pos:start="31:34" pos:end="31:34">&amp;</operator><name pos:start="31:35" pos:end="31:47"><name pos:start="31:35" pos:end="31:35">n</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:47">parent_obj</name></name></expr></argument>, <argument pos:start="31:50" pos:end="31:57"><expr pos:start="31:50" pos:end="31:57"><name pos:start="31:50" pos:end="31:57">num_prps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:46"><expr pos:start="33:9" pos:end="33:45"><call pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:23">qemu_sglist_add</name><argument_list pos:start="33:24" pos:end="33:45">(<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">qsg</name></expr></argument>, <argument pos:start="33:30" pos:end="33:33"><expr pos:start="33:30" pos:end="33:33"><name pos:start="33:30" pos:end="33:33">prp1</name></expr></argument>, <argument pos:start="33:36" pos:end="33:44"><expr pos:start="33:36" pos:end="33:44"><name pos:start="33:36" pos:end="33:44">trans_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:7">len</name> <operator pos:start="37:9" pos:end="37:10">-=</operator> <name pos:start="37:12" pos:end="37:20">trans_len</name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="141:5"><if pos:start="39:5" pos:end="141:5">if <condition pos:start="39:8" pos:end="39:12">(<expr pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">len</name></expr>)</condition> <block pos:start="39:14" pos:end="141:5">{<block_content pos:start="41:9" pos:end="139:9">

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:18">(<expr pos:start="41:13" pos:end="41:17"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:17">prp2</name></expr>)</condition> <block pos:start="41:20" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:23">

            <goto pos:start="43:13" pos:end="43:23">goto <name pos:start="43:18" pos:end="43:22">unmap</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="139:9"><if pos:start="47:9" pos:end="121:9">if <condition pos:start="47:12" pos:end="47:31">(<expr pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:15">len</name> <operator pos:start="47:17" pos:end="47:17">&gt;</operator> <name pos:start="47:19" pos:end="47:30"><name pos:start="47:19" pos:end="47:19">n</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:30">page_size</name></name></expr>)</condition> <block pos:start="47:33" pos:end="121:9">{<block_content pos:start="49:13" pos:end="119:13">

            <decl_stmt pos:start="49:13" pos:end="49:47"><decl pos:start="49:13" pos:end="49:46"><type pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:20">uint64_t</name></type> <name pos:start="49:22" pos:end="49:46"><name pos:start="49:22" pos:end="49:29">prp_list</name><index pos:start="49:30" pos:end="49:46">[<expr pos:start="49:31" pos:end="49:45"><name pos:start="49:31" pos:end="49:45"><name pos:start="49:31" pos:end="49:31">n</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:45">max_prp_ents</name></name></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:38"><decl pos:start="51:13" pos:end="51:26"><type pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:20">uint32_t</name></type> <name pos:start="51:22" pos:end="51:26">nents</name></decl>, <decl pos:start="51:29" pos:end="51:37"><type ref="prev" pos:start="51:13" pos:end="51:20"/><name pos:start="51:29" pos:end="51:37">prp_trans</name></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:22"><decl pos:start="53:13" pos:end="53:21"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:17">i</name> <init pos:start="53:19" pos:end="53:21">= <expr pos:start="53:21" pos:end="53:21"><literal type="number" pos:start="53:21" pos:end="53:21">0</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="57:13" pos:end="57:61"><expr pos:start="57:13" pos:end="57:60"><name pos:start="57:13" pos:end="57:17">nents</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <operator pos:start="57:21" pos:end="57:21">(</operator><name pos:start="57:22" pos:end="57:24">len</name> <operator pos:start="57:26" pos:end="57:26">+</operator> <name pos:start="57:28" pos:end="57:39"><name pos:start="57:28" pos:end="57:28">n</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:39">page_size</name></name> <operator pos:start="57:41" pos:end="57:41">-</operator> <literal type="number" pos:start="57:43" pos:end="57:43">1</literal><operator pos:start="57:44" pos:end="57:44">)</operator> <operator pos:start="57:46" pos:end="57:47">&gt;&gt;</operator> <name pos:start="57:49" pos:end="57:60"><name pos:start="57:49" pos:end="57:49">n</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:60">page_bits</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:71"><expr pos:start="59:13" pos:end="59:70"><name pos:start="59:13" pos:end="59:21">prp_trans</name> <operator pos:start="59:23" pos:end="59:23">=</operator> <call pos:start="59:25" pos:end="59:51"><name pos:start="59:25" pos:end="59:27">MIN</name><argument_list pos:start="59:28" pos:end="59:51">(<argument pos:start="59:29" pos:end="59:43"><expr pos:start="59:29" pos:end="59:43"><name pos:start="59:29" pos:end="59:43"><name pos:start="59:29" pos:end="59:29">n</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:43">max_prp_ents</name></name></expr></argument>, <argument pos:start="59:46" pos:end="59:50"><expr pos:start="59:46" pos:end="59:50"><name pos:start="59:46" pos:end="59:50">nents</name></expr></argument>)</argument_list></call> <operator pos:start="59:53" pos:end="59:53">*</operator> <sizeof pos:start="59:55" pos:end="59:70">sizeof<argument_list pos:start="59:61" pos:end="59:70">(<argument pos:start="59:62" pos:end="59:69"><expr pos:start="59:62" pos:end="59:69"><name pos:start="59:62" pos:end="59:69">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:65"><expr pos:start="61:13" pos:end="61:64"><call pos:start="61:13" pos:end="61:64"><name pos:start="61:13" pos:end="61:26">nvme_addr_read</name><argument_list pos:start="61:27" pos:end="61:64">(<argument pos:start="61:28" pos:end="61:28"><expr pos:start="61:28" pos:end="61:28"><name pos:start="61:28" pos:end="61:28">n</name></expr></argument>, <argument pos:start="61:31" pos:end="61:34"><expr pos:start="61:31" pos:end="61:34"><name pos:start="61:31" pos:end="61:34">prp2</name></expr></argument>, <argument pos:start="61:37" pos:end="61:52"><expr pos:start="61:37" pos:end="61:52"><operator pos:start="61:37" pos:end="61:37">(</operator><name pos:start="61:38" pos:end="61:41">void</name> <operator pos:start="61:43" pos:end="61:43">*</operator><operator pos:start="61:44" pos:end="61:44">)</operator><name pos:start="61:45" pos:end="61:52">prp_list</name></expr></argument>, <argument pos:start="61:55" pos:end="61:63"><expr pos:start="61:55" pos:end="61:63"><name pos:start="61:55" pos:end="61:63">prp_trans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <while pos:start="63:13" pos:end="119:13">while <condition pos:start="63:19" pos:end="63:28">(<expr pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:22">len</name> <operator pos:start="63:24" pos:end="63:25">!=</operator> <literal type="number" pos:start="63:27" pos:end="63:27">0</literal></expr>)</condition> <block pos:start="63:30" pos:end="119:13">{<block_content pos:start="65:17" pos:end="117:20">

                <decl_stmt pos:start="65:17" pos:end="65:60"><decl pos:start="65:17" pos:end="65:59"><type pos:start="65:17" pos:end="65:24"><name pos:start="65:17" pos:end="65:24">uint64_t</name></type> <name pos:start="65:26" pos:end="65:32">prp_ent</name> <init pos:start="65:34" pos:end="65:59">= <expr pos:start="65:36" pos:end="65:59"><call pos:start="65:36" pos:end="65:59"><name pos:start="65:36" pos:end="65:46">le64_to_cpu</name><argument_list pos:start="65:47" pos:end="65:59">(<argument pos:start="65:48" pos:end="65:58"><expr pos:start="65:48" pos:end="65:58"><name pos:start="65:48" pos:end="65:58"><name pos:start="65:48" pos:end="65:55">prp_list</name><index pos:start="65:56" pos:end="65:58">[<expr pos:start="65:57" pos:end="65:57"><name pos:start="65:57" pos:end="65:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="69:17" pos:end="91:17"><if pos:start="69:17" pos:end="91:17">if <condition pos:start="69:20" pos:end="69:67">(<expr pos:start="69:21" pos:end="69:66"><name pos:start="69:21" pos:end="69:21">i</name> <operator pos:start="69:23" pos:end="69:24">==</operator> <name pos:start="69:26" pos:end="69:40"><name pos:start="69:26" pos:end="69:26">n</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:40">max_prp_ents</name></name> <operator pos:start="69:42" pos:end="69:42">-</operator> <literal type="number" pos:start="69:44" pos:end="69:44">1</literal> <operator pos:start="69:46" pos:end="69:47">&amp;&amp;</operator> <name pos:start="69:49" pos:end="69:51">len</name> <operator pos:start="69:53" pos:end="69:53">&gt;</operator> <name pos:start="69:55" pos:end="69:66"><name pos:start="69:55" pos:end="69:55">n</name><operator pos:start="69:56" pos:end="69:57">-&gt;</operator><name pos:start="69:58" pos:end="69:66">page_size</name></name></expr>)</condition> <block pos:start="69:69" pos:end="91:17">{<block_content pos:start="71:21" pos:end="89:55">

                    <if_stmt pos:start="71:21" pos:end="75:21"><if pos:start="71:21" pos:end="75:21">if <condition pos:start="71:24" pos:end="71:65">(<expr pos:start="71:25" pos:end="71:64"><operator pos:start="71:25" pos:end="71:25">!</operator><name pos:start="71:26" pos:end="71:32">prp_ent</name> <operator pos:start="71:34" pos:end="71:35">||</operator> <name pos:start="71:37" pos:end="71:43">prp_ent</name> <operator pos:start="71:45" pos:end="71:45">&amp;</operator> <operator pos:start="71:47" pos:end="71:47">(</operator><name pos:start="71:48" pos:end="71:59"><name pos:start="71:48" pos:end="71:48">n</name><operator pos:start="71:49" pos:end="71:50">-&gt;</operator><name pos:start="71:51" pos:end="71:59">page_size</name></name> <operator pos:start="71:61" pos:end="71:61">-</operator> <literal type="number" pos:start="71:63" pos:end="71:63">1</literal><operator pos:start="71:64" pos:end="71:64">)</operator></expr>)</condition> <block pos:start="71:67" pos:end="75:21">{<block_content pos:start="73:25" pos:end="73:35">

                        <goto pos:start="73:25" pos:end="73:35">goto <name pos:start="73:30" pos:end="73:34">unmap</name>;</goto>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="79:21" pos:end="79:26"><expr pos:start="79:21" pos:end="79:25"><name pos:start="79:21" pos:end="79:21">i</name> <operator pos:start="79:23" pos:end="79:23">=</operator> <literal type="number" pos:start="79:25" pos:end="79:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:69"><expr pos:start="81:21" pos:end="81:68"><name pos:start="81:21" pos:end="81:25">nents</name> <operator pos:start="81:27" pos:end="81:27">=</operator> <operator pos:start="81:29" pos:end="81:29">(</operator><name pos:start="81:30" pos:end="81:32">len</name> <operator pos:start="81:34" pos:end="81:34">+</operator> <name pos:start="81:36" pos:end="81:47"><name pos:start="81:36" pos:end="81:36">n</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:47">page_size</name></name> <operator pos:start="81:49" pos:end="81:49">-</operator> <literal type="number" pos:start="81:51" pos:end="81:51">1</literal><operator pos:start="81:52" pos:end="81:52">)</operator> <operator pos:start="81:54" pos:end="81:55">&gt;&gt;</operator> <name pos:start="81:57" pos:end="81:68"><name pos:start="81:57" pos:end="81:57">n</name><operator pos:start="81:58" pos:end="81:59">-&gt;</operator><name pos:start="81:60" pos:end="81:68">page_bits</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:79"><expr pos:start="83:21" pos:end="83:78"><name pos:start="83:21" pos:end="83:29">prp_trans</name> <operator pos:start="83:31" pos:end="83:31">=</operator> <call pos:start="83:33" pos:end="83:59"><name pos:start="83:33" pos:end="83:35">MIN</name><argument_list pos:start="83:36" pos:end="83:59">(<argument pos:start="83:37" pos:end="83:51"><expr pos:start="83:37" pos:end="83:51"><name pos:start="83:37" pos:end="83:51"><name pos:start="83:37" pos:end="83:37">n</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:51">max_prp_ents</name></name></expr></argument>, <argument pos:start="83:54" pos:end="83:58"><expr pos:start="83:54" pos:end="83:58"><name pos:start="83:54" pos:end="83:58">nents</name></expr></argument>)</argument_list></call> <operator pos:start="83:61" pos:end="83:61">*</operator> <sizeof pos:start="83:63" pos:end="83:78">sizeof<argument_list pos:start="83:69" pos:end="83:78">(<argument pos:start="83:70" pos:end="83:77"><expr pos:start="83:70" pos:end="83:77"><name pos:start="83:70" pos:end="83:77">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="87:35"><expr pos:start="85:21" pos:end="87:34"><call pos:start="85:21" pos:end="87:34"><name pos:start="85:21" pos:end="85:34">nvme_addr_read</name><argument_list pos:start="85:35" pos:end="87:34">(<argument pos:start="85:36" pos:end="85:36"><expr pos:start="85:36" pos:end="85:36"><name pos:start="85:36" pos:end="85:36">n</name></expr></argument>, <argument pos:start="85:39" pos:end="85:45"><expr pos:start="85:39" pos:end="85:45"><name pos:start="85:39" pos:end="85:45">prp_ent</name></expr></argument>, <argument pos:start="85:48" pos:end="85:63"><expr pos:start="85:48" pos:end="85:63"><operator pos:start="85:48" pos:end="85:48">(</operator><name pos:start="85:49" pos:end="85:52">void</name> <operator pos:start="85:54" pos:end="85:54">*</operator><operator pos:start="85:55" pos:end="85:55">)</operator><name pos:start="85:56" pos:end="85:63">prp_list</name></expr></argument>,

                        <argument pos:start="87:25" pos:end="87:33"><expr pos:start="87:25" pos:end="87:33"><name pos:start="87:25" pos:end="87:33">prp_trans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:55"><expr pos:start="89:21" pos:end="89:54"><name pos:start="89:21" pos:end="89:27">prp_ent</name> <operator pos:start="89:29" pos:end="89:29">=</operator> <call pos:start="89:31" pos:end="89:54"><name pos:start="89:31" pos:end="89:41">le64_to_cpu</name><argument_list pos:start="89:42" pos:end="89:54">(<argument pos:start="89:43" pos:end="89:53"><expr pos:start="89:43" pos:end="89:53"><name pos:start="89:43" pos:end="89:53"><name pos:start="89:43" pos:end="89:50">prp_list</name><index pos:start="89:51" pos:end="89:53">[<expr pos:start="89:52" pos:end="89:52"><name pos:start="89:52" pos:end="89:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="95:17" pos:end="99:17"><if pos:start="95:17" pos:end="99:17">if <condition pos:start="95:20" pos:end="95:61">(<expr pos:start="95:21" pos:end="95:60"><operator pos:start="95:21" pos:end="95:21">!</operator><name pos:start="95:22" pos:end="95:28">prp_ent</name> <operator pos:start="95:30" pos:end="95:31">||</operator> <name pos:start="95:33" pos:end="95:39">prp_ent</name> <operator pos:start="95:41" pos:end="95:41">&amp;</operator> <operator pos:start="95:43" pos:end="95:43">(</operator><name pos:start="95:44" pos:end="95:55"><name pos:start="95:44" pos:end="95:44">n</name><operator pos:start="95:45" pos:end="95:46">-&gt;</operator><name pos:start="95:47" pos:end="95:55">page_size</name></name> <operator pos:start="95:57" pos:end="95:57">-</operator> <literal type="number" pos:start="95:59" pos:end="95:59">1</literal><operator pos:start="95:60" pos:end="95:60">)</operator></expr>)</condition> <block pos:start="95:63" pos:end="99:17">{<block_content pos:start="97:21" pos:end="97:31">

                    <goto pos:start="97:21" pos:end="97:31">goto <name pos:start="97:26" pos:end="97:30">unmap</name>;</goto>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="103:17" pos:end="103:51"><expr pos:start="103:17" pos:end="103:50"><name pos:start="103:17" pos:end="103:25">trans_len</name> <operator pos:start="103:27" pos:end="103:27">=</operator> <call pos:start="103:29" pos:end="103:50"><name pos:start="103:29" pos:end="103:31">MIN</name><argument_list pos:start="103:32" pos:end="103:50">(<argument pos:start="103:33" pos:end="103:35"><expr pos:start="103:33" pos:end="103:35"><name pos:start="103:33" pos:end="103:35">len</name></expr></argument>, <argument pos:start="103:38" pos:end="103:49"><expr pos:start="103:38" pos:end="103:49"><name pos:start="103:38" pos:end="103:49"><name pos:start="103:38" pos:end="103:38">n</name><operator pos:start="103:39" pos:end="103:40">-&gt;</operator><name pos:start="103:41" pos:end="103:49">page_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="105:17" pos:end="113:17"><if pos:start="105:17" pos:end="109:17">if <condition pos:start="105:20" pos:end="105:29">(<expr pos:start="105:21" pos:end="105:28"><name pos:start="105:21" pos:end="105:28"><name pos:start="105:21" pos:end="105:23">qsg</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:28">nsg</name></name></expr>)</condition><block pos:start="105:30" pos:end="109:17">{<block_content pos:start="107:21" pos:end="107:61">

                    <expr_stmt pos:start="107:21" pos:end="107:61"><expr pos:start="107:21" pos:end="107:60"><call pos:start="107:21" pos:end="107:60"><name pos:start="107:21" pos:end="107:35">qemu_sglist_add</name><argument_list pos:start="107:36" pos:end="107:60">(<argument pos:start="107:37" pos:end="107:39"><expr pos:start="107:37" pos:end="107:39"><name pos:start="107:37" pos:end="107:39">qsg</name></expr></argument>, <argument pos:start="107:42" pos:end="107:48"><expr pos:start="107:42" pos:end="107:48"><name pos:start="107:42" pos:end="107:48">prp_ent</name></expr></argument>, <argument pos:start="107:51" pos:end="107:59"><expr pos:start="107:51" pos:end="107:59"><name pos:start="107:51" pos:end="107:59">trans_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="109:19" pos:end="113:17">else <block pos:start="109:24" pos:end="113:17">{<block_content pos:start="111:21" pos:end="111:98">

                    <expr_stmt pos:start="111:21" pos:end="111:98"><expr pos:start="111:21" pos:end="111:97"><call pos:start="111:21" pos:end="111:97"><name pos:start="111:21" pos:end="111:34">qemu_iovec_add</name><argument_list pos:start="111:35" pos:end="111:97">(<argument pos:start="111:36" pos:end="111:38"><expr pos:start="111:36" pos:end="111:38"><name pos:start="111:36" pos:end="111:38">iov</name></expr></argument>, <argument pos:start="111:41" pos:end="111:85"><expr pos:start="111:41" pos:end="111:85"><operator pos:start="111:41" pos:end="111:41">(</operator><name pos:start="111:42" pos:end="111:45">void</name> <operator pos:start="111:47" pos:end="111:47">*</operator><operator pos:start="111:48" pos:end="111:48">)</operator><operator pos:start="111:49" pos:end="111:49">&amp;</operator><name pos:start="111:50" pos:end="111:85"><name pos:start="111:50" pos:end="111:50">n</name><operator pos:start="111:51" pos:end="111:52">-&gt;</operator><name pos:start="111:53" pos:end="111:57">cmbuf</name><index pos:start="111:58" pos:end="111:85">[<expr pos:start="111:59" pos:end="111:84"><name pos:start="111:59" pos:end="111:65">prp_ent</name> <operator pos:start="111:67" pos:end="111:67">-</operator> <name pos:start="111:69" pos:end="111:84"><name pos:start="111:69" pos:end="111:69">n</name><operator pos:start="111:70" pos:end="111:71">-&gt;</operator><name pos:start="111:72" pos:end="111:79">ctrl_mem</name><operator pos:start="111:80" pos:end="111:80">.</operator><name pos:start="111:81" pos:end="111:84">addr</name></name></expr>]</index></name></expr></argument>, <argument pos:start="111:88" pos:end="111:96"><expr pos:start="111:88" pos:end="111:96"><name pos:start="111:88" pos:end="111:96">trans_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:33"><expr pos:start="115:17" pos:end="115:32"><name pos:start="115:17" pos:end="115:19">len</name> <operator pos:start="115:21" pos:end="115:22">-=</operator> <name pos:start="115:24" pos:end="115:32">trans_len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:20"><expr pos:start="117:17" pos:end="117:19"><name pos:start="117:17" pos:end="117:17">i</name><operator pos:start="117:18" pos:end="117:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="139:9">else <block pos:start="121:16" pos:end="139:9">{<block_content pos:start="123:13" pos:end="137:13">

            <if_stmt pos:start="123:13" pos:end="127:13"><if pos:start="123:13" pos:end="127:13">if <condition pos:start="123:16" pos:end="123:42">(<expr pos:start="123:17" pos:end="123:41"><name pos:start="123:17" pos:end="123:20">prp2</name> <operator pos:start="123:22" pos:end="123:22">&amp;</operator> <operator pos:start="123:24" pos:end="123:24">(</operator><name pos:start="123:25" pos:end="123:36"><name pos:start="123:25" pos:end="123:25">n</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:36">page_size</name></name> <operator pos:start="123:38" pos:end="123:38">-</operator> <literal type="number" pos:start="123:40" pos:end="123:40">1</literal><operator pos:start="123:41" pos:end="123:41">)</operator></expr>)</condition> <block pos:start="123:44" pos:end="127:13">{<block_content pos:start="125:17" pos:end="125:27">

                <goto pos:start="125:17" pos:end="125:27">goto <name pos:start="125:22" pos:end="125:26">unmap</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="129:13" pos:end="137:13"><if pos:start="129:13" pos:end="133:13">if <condition pos:start="129:16" pos:end="129:25">(<expr pos:start="129:17" pos:end="129:24"><name pos:start="129:17" pos:end="129:24"><name pos:start="129:17" pos:end="129:19">qsg</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:24">nsg</name></name></expr>)</condition> <block pos:start="129:27" pos:end="133:13">{<block_content pos:start="131:17" pos:end="131:48">

                <expr_stmt pos:start="131:17" pos:end="131:48"><expr pos:start="131:17" pos:end="131:47"><call pos:start="131:17" pos:end="131:47"><name pos:start="131:17" pos:end="131:31">qemu_sglist_add</name><argument_list pos:start="131:32" pos:end="131:47">(<argument pos:start="131:33" pos:end="131:35"><expr pos:start="131:33" pos:end="131:35"><name pos:start="131:33" pos:end="131:35">qsg</name></expr></argument>, <argument pos:start="131:38" pos:end="131:41"><expr pos:start="131:38" pos:end="131:41"><name pos:start="131:38" pos:end="131:41">prp2</name></expr></argument>, <argument pos:start="131:44" pos:end="131:46"><expr pos:start="131:44" pos:end="131:46"><name pos:start="131:44" pos:end="131:46">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="133:15" pos:end="137:13">else <block pos:start="133:20" pos:end="137:13">{<block_content pos:start="135:17" pos:end="135:91">

                <expr_stmt pos:start="135:17" pos:end="135:91"><expr pos:start="135:17" pos:end="135:90"><call pos:start="135:17" pos:end="135:90"><name pos:start="135:17" pos:end="135:30">qemu_iovec_add</name><argument_list pos:start="135:31" pos:end="135:90">(<argument pos:start="135:32" pos:end="135:34"><expr pos:start="135:32" pos:end="135:34"><name pos:start="135:32" pos:end="135:34">iov</name></expr></argument>, <argument pos:start="135:37" pos:end="135:78"><expr pos:start="135:37" pos:end="135:78"><operator pos:start="135:37" pos:end="135:37">(</operator><name pos:start="135:38" pos:end="135:41">void</name> <operator pos:start="135:43" pos:end="135:43">*</operator><operator pos:start="135:44" pos:end="135:44">)</operator><operator pos:start="135:45" pos:end="135:45">&amp;</operator><name pos:start="135:46" pos:end="135:78"><name pos:start="135:46" pos:end="135:46">n</name><operator pos:start="135:47" pos:end="135:48">-&gt;</operator><name pos:start="135:49" pos:end="135:53">cmbuf</name><index pos:start="135:54" pos:end="135:78">[<expr pos:start="135:55" pos:end="135:77"><name pos:start="135:55" pos:end="135:58">prp2</name> <operator pos:start="135:60" pos:end="135:60">-</operator> <name pos:start="135:62" pos:end="135:77"><name pos:start="135:62" pos:end="135:62">n</name><operator pos:start="135:63" pos:end="135:64">-&gt;</operator><name pos:start="135:65" pos:end="135:72">ctrl_mem</name><operator pos:start="135:73" pos:end="135:73">.</operator><name pos:start="135:74" pos:end="135:77">addr</name></name></expr>]</index></name></expr></argument>, <argument pos:start="135:81" pos:end="135:89"><expr pos:start="135:81" pos:end="135:89"><name pos:start="135:81" pos:end="135:89">trans_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="143:5" pos:end="143:24">return <expr pos:start="143:12" pos:end="143:23"><name pos:start="143:12" pos:end="143:23">NVME_SUCCESS</name></expr>;</return>



 <label pos:start="147:2" pos:end="147:7"><name pos:start="147:2" pos:end="147:6">unmap</name>:</label>

    <expr_stmt pos:start="149:5" pos:end="149:29"><expr pos:start="149:5" pos:end="149:28"><call pos:start="149:5" pos:end="149:28"><name pos:start="149:5" pos:end="149:23">qemu_sglist_destroy</name><argument_list pos:start="149:24" pos:end="149:28">(<argument pos:start="149:25" pos:end="149:27"><expr pos:start="149:25" pos:end="149:27"><name pos:start="149:25" pos:end="149:27">qsg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="151:5" pos:end="151:41">return <expr pos:start="151:12" pos:end="151:40"><name pos:start="151:12" pos:end="151:29">NVME_INVALID_FIELD</name> <operator pos:start="151:31" pos:end="151:31">|</operator> <name pos:start="151:33" pos:end="151:40">NVME_DNR</name></expr>;</return>

</block_content>}</block></function>
</unit>
