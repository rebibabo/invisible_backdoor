<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21996.c" pos:tabs="8"><function pos:start="1:1" pos:end="116:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">virtio_load</name><parameter_list pos:start="1:16" pos:end="1:48">(<parameter pos:start="1:17" pos:end="1:34"><decl pos:start="1:17" pos:end="1:34"><type pos:start="1:17" pos:end="1:34"><name pos:start="1:17" pos:end="1:28">VirtIODevice</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:34">vdev</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:47"><decl pos:start="1:37" pos:end="1:47"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:44">QEMUFile</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="116:1">{<block_content pos:start="5:5" pos:end="114:13">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">num</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>, <decl pos:start="5:17" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:19">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:21">features</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="11:58"><decl pos:start="9:5" pos:end="11:57"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:31">supported_features</name> <init pos:start="9:33" pos:end="11:57">=

        <expr pos:start="11:9" pos:end="11:57"><call pos:start="11:9" pos:end="11:57"><name pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:12">vdev</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:21">binding</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:35">get_features</name></name><argument_list pos:start="11:36" pos:end="11:57">(<argument pos:start="11:37" pos:end="11:56"><expr pos:start="11:37" pos:end="11:56"><name pos:start="11:37" pos:end="11:56"><name pos:start="11:37" pos:end="11:40">vdev</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:56">binding_opaque</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>




    <if_stmt pos:start="16:5" pos:end="24:5"><if pos:start="16:5" pos:end="24:5">if <condition pos:start="16:8" pos:end="16:35">(<expr pos:start="16:9" pos:end="16:34"><name pos:start="16:9" pos:end="16:34"><name pos:start="16:9" pos:end="16:12">vdev</name><operator pos:start="16:13" pos:end="16:14">-&gt;</operator><name pos:start="16:15" pos:end="16:21">binding</name><operator pos:start="16:22" pos:end="16:23">-&gt;</operator><name pos:start="16:24" pos:end="16:34">load_config</name></name></expr>)</condition> <block pos:start="16:37" pos:end="24:5">{<block_content pos:start="18:9" pos:end="22:23">

        <expr_stmt pos:start="18:9" pos:end="18:66"><expr pos:start="18:9" pos:end="18:65"><name pos:start="18:9" pos:end="18:11">ret</name> <operator pos:start="18:13" pos:end="18:13">=</operator> <call pos:start="18:15" pos:end="18:65"><name pos:start="18:15" pos:end="18:40"><name pos:start="18:15" pos:end="18:18">vdev</name><operator pos:start="18:19" pos:end="18:20">-&gt;</operator><name pos:start="18:21" pos:end="18:27">binding</name><operator pos:start="18:28" pos:end="18:29">-&gt;</operator><name pos:start="18:30" pos:end="18:40">load_config</name></name><argument_list pos:start="18:41" pos:end="18:65">(<argument pos:start="18:42" pos:end="18:61"><expr pos:start="18:42" pos:end="18:61"><name pos:start="18:42" pos:end="18:61"><name pos:start="18:42" pos:end="18:45">vdev</name><operator pos:start="18:46" pos:end="18:47">-&gt;</operator><name pos:start="18:48" pos:end="18:61">binding_opaque</name></name></expr></argument>, <argument pos:start="18:64" pos:end="18:64"><expr pos:start="18:64" pos:end="18:64"><name pos:start="18:64" pos:end="18:64">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="20:9" pos:end="22:23"><if pos:start="20:9" pos:end="22:23">if <condition pos:start="20:12" pos:end="20:16">(<expr pos:start="20:13" pos:end="20:15"><name pos:start="20:13" pos:end="20:15">ret</name></expr>)</condition><block type="pseudo" pos:start="22:13" pos:end="22:23"><block_content pos:start="22:13" pos:end="22:23">

            <return pos:start="22:13" pos:end="22:23">return <expr pos:start="22:20" pos:end="22:22"><name pos:start="22:20" pos:end="22:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="28:5" pos:end="28:34"><expr pos:start="28:5" pos:end="28:33"><call pos:start="28:5" pos:end="28:33"><name pos:start="28:5" pos:end="28:15">qemu_get_8s</name><argument_list pos:start="28:16" pos:end="28:33">(<argument pos:start="28:17" pos:end="28:17"><expr pos:start="28:17" pos:end="28:17"><name pos:start="28:17" pos:end="28:17">f</name></expr></argument>, <argument pos:start="28:20" pos:end="28:32"><expr pos:start="28:20" pos:end="28:32"><operator pos:start="28:20" pos:end="28:20">&amp;</operator><name pos:start="28:21" pos:end="28:32"><name pos:start="28:21" pos:end="28:24">vdev</name><operator pos:start="28:25" pos:end="28:26">-&gt;</operator><name pos:start="28:27" pos:end="28:32">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="30:5" pos:end="30:31"><expr pos:start="30:5" pos:end="30:30"><call pos:start="30:5" pos:end="30:30"><name pos:start="30:5" pos:end="30:15">qemu_get_8s</name><argument_list pos:start="30:16" pos:end="30:30">(<argument pos:start="30:17" pos:end="30:17"><expr pos:start="30:17" pos:end="30:17"><name pos:start="30:17" pos:end="30:17">f</name></expr></argument>, <argument pos:start="30:20" pos:end="30:29"><expr pos:start="30:20" pos:end="30:29"><operator pos:start="30:20" pos:end="30:20">&amp;</operator><name pos:start="30:21" pos:end="30:29"><name pos:start="30:21" pos:end="30:24">vdev</name><operator pos:start="30:25" pos:end="30:26">-&gt;</operator><name pos:start="30:27" pos:end="30:29">isr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="32:5" pos:end="32:40"><expr pos:start="32:5" pos:end="32:39"><call pos:start="32:5" pos:end="32:39"><name pos:start="32:5" pos:end="32:18">qemu_get_be16s</name><argument_list pos:start="32:19" pos:end="32:39">(<argument pos:start="32:20" pos:end="32:20"><expr pos:start="32:20" pos:end="32:20"><name pos:start="32:20" pos:end="32:20">f</name></expr></argument>, <argument pos:start="32:23" pos:end="32:38"><expr pos:start="32:23" pos:end="32:38"><operator pos:start="32:23" pos:end="32:23">&amp;</operator><name pos:start="32:24" pos:end="32:38"><name pos:start="32:24" pos:end="32:27">vdev</name><operator pos:start="32:28" pos:end="32:29">-&gt;</operator><name pos:start="32:30" pos:end="32:38">queue_sel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="34:5" pos:end="34:33"><expr pos:start="34:5" pos:end="34:32"><call pos:start="34:5" pos:end="34:32"><name pos:start="34:5" pos:end="34:18">qemu_get_be32s</name><argument_list pos:start="34:19" pos:end="34:32">(<argument pos:start="34:20" pos:end="34:20"><expr pos:start="34:20" pos:end="34:20"><name pos:start="34:20" pos:end="34:20">f</name></expr></argument>, <argument pos:start="34:23" pos:end="34:31"><expr pos:start="34:23" pos:end="34:31"><operator pos:start="34:23" pos:end="34:23">&amp;</operator><name pos:start="34:24" pos:end="34:31">features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="36:5" pos:end="44:5"><if pos:start="36:5" pos:end="44:5">if <condition pos:start="36:8" pos:end="36:39">(<expr pos:start="36:9" pos:end="36:38"><name pos:start="36:9" pos:end="36:16">features</name> <operator pos:start="36:18" pos:end="36:18">&amp;</operator> <operator pos:start="36:20" pos:end="36:20">~</operator><name pos:start="36:21" pos:end="36:38">supported_features</name></expr>)</condition> <block pos:start="36:41" pos:end="44:5">{<block_content pos:start="38:9" pos:end="42:18">

        <expr_stmt pos:start="38:9" pos:end="40:46"><expr pos:start="38:9" pos:end="40:45"><call pos:start="38:9" pos:end="40:45"><name pos:start="38:9" pos:end="38:15">fprintf</name><argument_list pos:start="38:16" pos:end="40:45">(<argument pos:start="38:17" pos:end="38:22"><expr pos:start="38:17" pos:end="38:22"><name pos:start="38:17" pos:end="38:22">stderr</name></expr></argument>, <argument pos:start="38:25" pos:end="38:77"><expr pos:start="38:25" pos:end="38:77"><literal type="string" pos:start="38:25" pos:end="38:77">"Features 0x%x unsupported. Allowed features: 0x%x\n"</literal></expr></argument>,

                <argument pos:start="40:17" pos:end="40:24"><expr pos:start="40:17" pos:end="40:24"><name pos:start="40:17" pos:end="40:24">features</name></expr></argument>, <argument pos:start="40:27" pos:end="40:44"><expr pos:start="40:27" pos:end="40:44"><name pos:start="40:27" pos:end="40:44">supported_features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="42:9" pos:end="42:18">return <expr pos:start="42:16" pos:end="42:17"><operator pos:start="42:16" pos:end="42:16">-</operator><literal type="number" pos:start="42:17" pos:end="42:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="46:5" pos:end="48:43"><if pos:start="46:5" pos:end="48:43">if <condition pos:start="46:8" pos:end="46:27">(<expr pos:start="46:9" pos:end="46:26"><name pos:start="46:9" pos:end="46:26"><name pos:start="46:9" pos:end="46:12">vdev</name><operator pos:start="46:13" pos:end="46:14">-&gt;</operator><name pos:start="46:15" pos:end="46:26">set_features</name></name></expr>)</condition><block type="pseudo" pos:start="48:9" pos:end="48:43"><block_content pos:start="48:9" pos:end="48:43">

        <expr_stmt pos:start="48:9" pos:end="48:43"><expr pos:start="48:9" pos:end="48:42"><call pos:start="48:9" pos:end="48:42"><name pos:start="48:9" pos:end="48:26"><name pos:start="48:9" pos:end="48:12">vdev</name><operator pos:start="48:13" pos:end="48:14">-&gt;</operator><name pos:start="48:15" pos:end="48:26">set_features</name></name><argument_list pos:start="48:27" pos:end="48:42">(<argument pos:start="48:28" pos:end="48:31"><expr pos:start="48:28" pos:end="48:31"><name pos:start="48:28" pos:end="48:31">vdev</name></expr></argument>, <argument pos:start="48:34" pos:end="48:41"><expr pos:start="48:34" pos:end="48:41"><name pos:start="48:34" pos:end="48:41">features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="50:5" pos:end="50:36"><expr pos:start="50:5" pos:end="50:35"><name pos:start="50:5" pos:end="50:24"><name pos:start="50:5" pos:end="50:8">vdev</name><operator pos:start="50:9" pos:end="50:10">-&gt;</operator><name pos:start="50:11" pos:end="50:24">guest_features</name></name> <operator pos:start="50:26" pos:end="50:26">=</operator> <name pos:start="50:28" pos:end="50:35">features</name></expr>;</expr_stmt>

    <expr_stmt pos:start="52:5" pos:end="52:40"><expr pos:start="52:5" pos:end="52:39"><name pos:start="52:5" pos:end="52:20"><name pos:start="52:5" pos:end="52:8">vdev</name><operator pos:start="52:9" pos:end="52:10">-&gt;</operator><name pos:start="52:11" pos:end="52:20">config_len</name></name> <operator pos:start="52:22" pos:end="52:22">=</operator> <call pos:start="52:24" pos:end="52:39"><name pos:start="52:24" pos:end="52:36">qemu_get_be32</name><argument_list pos:start="52:37" pos:end="52:39">(<argument pos:start="52:38" pos:end="52:38"><expr pos:start="52:38" pos:end="52:38"><name pos:start="52:38" pos:end="52:38">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="54:5" pos:end="54:55"><expr pos:start="54:5" pos:end="54:54"><call pos:start="54:5" pos:end="54:54"><name pos:start="54:5" pos:end="54:19">qemu_get_buffer</name><argument_list pos:start="54:20" pos:end="54:54">(<argument pos:start="54:21" pos:end="54:21"><expr pos:start="54:21" pos:end="54:21"><name pos:start="54:21" pos:end="54:21">f</name></expr></argument>, <argument pos:start="54:24" pos:end="54:35"><expr pos:start="54:24" pos:end="54:35"><name pos:start="54:24" pos:end="54:35"><name pos:start="54:24" pos:end="54:27">vdev</name><operator pos:start="54:28" pos:end="54:29">-&gt;</operator><name pos:start="54:30" pos:end="54:35">config</name></name></expr></argument>, <argument pos:start="54:38" pos:end="54:53"><expr pos:start="54:38" pos:end="54:53"><name pos:start="54:38" pos:end="54:53"><name pos:start="54:38" pos:end="54:41">vdev</name><operator pos:start="54:42" pos:end="54:43">-&gt;</operator><name pos:start="54:44" pos:end="54:53">config_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="58:5" pos:end="58:27"><expr pos:start="58:5" pos:end="58:26"><name pos:start="58:5" pos:end="58:7">num</name> <operator pos:start="58:9" pos:end="58:9">=</operator> <call pos:start="58:11" pos:end="58:26"><name pos:start="58:11" pos:end="58:23">qemu_get_be32</name><argument_list pos:start="58:24" pos:end="58:26">(<argument pos:start="58:25" pos:end="58:25"><expr pos:start="58:25" pos:end="58:25"><name pos:start="58:25" pos:end="58:25">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="62:5" pos:end="108:5">for <control pos:start="62:9" pos:end="62:29">(<init pos:start="62:10" pos:end="62:15"><expr pos:start="62:10" pos:end="62:14"><name pos:start="62:10" pos:end="62:10">i</name> <operator pos:start="62:12" pos:end="62:12">=</operator> <literal type="number" pos:start="62:14" pos:end="62:14">0</literal></expr>;</init> <condition pos:start="62:17" pos:end="62:24"><expr pos:start="62:17" pos:end="62:23"><name pos:start="62:17" pos:end="62:17">i</name> <operator pos:start="62:19" pos:end="62:19">&lt;</operator> <name pos:start="62:21" pos:end="62:23">num</name></expr>;</condition> <incr pos:start="62:26" pos:end="62:28"><expr pos:start="62:26" pos:end="62:28"><name pos:start="62:26" pos:end="62:26">i</name><operator pos:start="62:27" pos:end="62:28">++</operator></expr></incr>)</control> <block pos:start="62:31" pos:end="108:5">{<block_content pos:start="64:9" pos:end="106:9">

        <expr_stmt pos:start="64:9" pos:end="64:49"><expr pos:start="64:9" pos:end="64:48"><name pos:start="64:9" pos:end="64:19"><name pos:start="64:9" pos:end="64:12">vdev</name><operator pos:start="64:13" pos:end="64:14">-&gt;</operator><name pos:start="64:15" pos:end="64:16">vq</name><index pos:start="64:17" pos:end="64:19">[<expr pos:start="64:18" pos:end="64:18"><name pos:start="64:18" pos:end="64:18">i</name></expr>]</index></name><operator pos:start="64:20" pos:end="64:20">.</operator><name pos:start="64:21" pos:end="64:29"><name pos:start="64:21" pos:end="64:25">vring</name><operator pos:start="64:26" pos:end="64:26">.</operator><name pos:start="64:27" pos:end="64:29">num</name></name> <operator pos:start="64:31" pos:end="64:31">=</operator> <call pos:start="64:33" pos:end="64:48"><name pos:start="64:33" pos:end="64:45">qemu_get_be32</name><argument_list pos:start="64:46" pos:end="64:48">(<argument pos:start="64:47" pos:end="64:47"><expr pos:start="64:47" pos:end="64:47"><name pos:start="64:47" pos:end="64:47">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="66:9" pos:end="66:42"><expr pos:start="66:9" pos:end="66:41"><name pos:start="66:9" pos:end="66:19"><name pos:start="66:9" pos:end="66:12">vdev</name><operator pos:start="66:13" pos:end="66:14">-&gt;</operator><name pos:start="66:15" pos:end="66:16">vq</name><index pos:start="66:17" pos:end="66:19">[<expr pos:start="66:18" pos:end="66:18"><name pos:start="66:18" pos:end="66:18">i</name></expr>]</index></name><operator pos:start="66:20" pos:end="66:20">.</operator><name pos:start="66:21" pos:end="66:22">pa</name> <operator pos:start="66:24" pos:end="66:24">=</operator> <call pos:start="66:26" pos:end="66:41"><name pos:start="66:26" pos:end="66:38">qemu_get_be64</name><argument_list pos:start="66:39" pos:end="66:41">(<argument pos:start="66:40" pos:end="66:40"><expr pos:start="66:40" pos:end="66:40"><name pos:start="66:40" pos:end="66:40">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="68:9" pos:end="68:55"><expr pos:start="68:9" pos:end="68:54"><call pos:start="68:9" pos:end="68:54"><name pos:start="68:9" pos:end="68:22">qemu_get_be16s</name><argument_list pos:start="68:23" pos:end="68:54">(<argument pos:start="68:24" pos:end="68:24"><expr pos:start="68:24" pos:end="68:24"><name pos:start="68:24" pos:end="68:24">f</name></expr></argument>, <argument pos:start="68:27" pos:end="68:53"><expr pos:start="68:27" pos:end="68:53"><operator pos:start="68:27" pos:end="68:27">&amp;</operator><name pos:start="68:28" pos:end="68:38"><name pos:start="68:28" pos:end="68:31">vdev</name><operator pos:start="68:32" pos:end="68:33">-&gt;</operator><name pos:start="68:34" pos:end="68:35">vq</name><index pos:start="68:36" pos:end="68:38">[<expr pos:start="68:37" pos:end="68:37"><name pos:start="68:37" pos:end="68:37">i</name></expr>]</index></name><operator pos:start="68:39" pos:end="68:39">.</operator><name pos:start="68:40" pos:end="68:53">last_avail_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="72:9" pos:end="76:9"><if pos:start="72:9" pos:end="76:9">if <condition pos:start="72:12" pos:end="72:27">(<expr pos:start="72:13" pos:end="72:26"><name pos:start="72:13" pos:end="72:23"><name pos:start="72:13" pos:end="72:16">vdev</name><operator pos:start="72:17" pos:end="72:18">-&gt;</operator><name pos:start="72:19" pos:end="72:20">vq</name><index pos:start="72:21" pos:end="72:23">[<expr pos:start="72:22" pos:end="72:22"><name pos:start="72:22" pos:end="72:22">i</name></expr>]</index></name><operator pos:start="72:24" pos:end="72:24">.</operator><name pos:start="72:25" pos:end="72:26">pa</name></expr>)</condition> <block pos:start="72:29" pos:end="76:9">{<block_content pos:start="74:13" pos:end="74:41">

            <expr_stmt pos:start="74:13" pos:end="74:41"><expr pos:start="74:13" pos:end="74:40"><call pos:start="74:13" pos:end="74:40"><name pos:start="74:13" pos:end="74:26">virtqueue_init</name><argument_list pos:start="74:27" pos:end="74:40">(<argument pos:start="74:28" pos:end="74:39"><expr pos:start="74:28" pos:end="74:39"><operator pos:start="74:28" pos:end="74:28">&amp;</operator><name pos:start="74:29" pos:end="74:39"><name pos:start="74:29" pos:end="74:32">vdev</name><operator pos:start="74:33" pos:end="74:34">-&gt;</operator><name pos:start="74:35" pos:end="74:36">vq</name><index pos:start="74:37" pos:end="74:39">[<expr pos:start="74:38" pos:end="74:38"><name pos:start="74:38" pos:end="74:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="78:9" pos:end="78:79"><expr pos:start="78:9" pos:end="78:78"><name pos:start="78:9" pos:end="78:17">num_heads</name> <operator pos:start="78:19" pos:end="78:19">=</operator> <call pos:start="78:21" pos:end="78:49"><name pos:start="78:21" pos:end="78:35">vring_avail_idx</name><argument_list pos:start="78:36" pos:end="78:49">(<argument pos:start="78:37" pos:end="78:48"><expr pos:start="78:37" pos:end="78:48"><operator pos:start="78:37" pos:end="78:37">&amp;</operator><name pos:start="78:38" pos:end="78:48"><name pos:start="78:38" pos:end="78:41">vdev</name><operator pos:start="78:42" pos:end="78:43">-&gt;</operator><name pos:start="78:44" pos:end="78:45">vq</name><index pos:start="78:46" pos:end="78:48">[<expr pos:start="78:47" pos:end="78:47"><name pos:start="78:47" pos:end="78:47">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="78:51" pos:end="78:51">-</operator> <name pos:start="78:53" pos:end="78:63"><name pos:start="78:53" pos:end="78:56">vdev</name><operator pos:start="78:57" pos:end="78:58">-&gt;</operator><name pos:start="78:59" pos:end="78:60">vq</name><index pos:start="78:61" pos:end="78:63">[<expr pos:start="78:62" pos:end="78:62"><name pos:start="78:62" pos:end="78:62">i</name></expr>]</index></name><operator pos:start="78:64" pos:end="78:64">.</operator><name pos:start="78:65" pos:end="78:78">last_avail_idx</name></expr>;</expr_stmt>

	<comment type="block" pos:start="80:9" pos:end="80:79">/* Check it isn't doing very strange things with descriptor numbers. */</comment>

	<if_stmt pos:start="82:9" pos:end="96:9"><if pos:start="82:9" pos:end="96:9">if <condition pos:start="82:12" pos:end="82:46">(<expr pos:start="82:13" pos:end="82:45"><name pos:start="82:13" pos:end="82:21">num_heads</name> <operator pos:start="82:23" pos:end="82:23">&gt;</operator> <name pos:start="82:25" pos:end="82:35"><name pos:start="82:25" pos:end="82:28">vdev</name><operator pos:start="82:29" pos:end="82:30">-&gt;</operator><name pos:start="82:31" pos:end="82:32">vq</name><index pos:start="82:33" pos:end="82:35">[<expr pos:start="82:34" pos:end="82:34"><name pos:start="82:34" pos:end="82:34">i</name></expr>]</index></name><operator pos:start="82:36" pos:end="82:36">.</operator><name pos:start="82:37" pos:end="82:45"><name pos:start="82:37" pos:end="82:41">vring</name><operator pos:start="82:42" pos:end="82:42">.</operator><name pos:start="82:43" pos:end="82:45">num</name></name></expr>)</condition> <block pos:start="82:48" pos:end="96:9">{<block_content pos:start="84:17" pos:end="94:26">

		<expr_stmt pos:start="84:17" pos:end="92:63"><expr pos:start="84:17" pos:end="92:62"><call pos:start="84:17" pos:end="92:62"><name pos:start="84:17" pos:end="84:23">fprintf</name><argument_list pos:start="84:24" pos:end="92:62">(<argument pos:start="84:25" pos:end="84:30"><expr pos:start="84:25" pos:end="84:30"><name pos:start="84:25" pos:end="84:30">stderr</name></expr></argument>, <argument pos:start="84:33" pos:end="86:73"><expr pos:start="84:33" pos:end="86:73"><literal type="string" pos:start="84:33" pos:end="84:67">"VQ %d size 0x%x Guest index 0x%x "</literal>

                        <literal type="string" pos:start="86:25" pos:end="86:73">"inconsistent with Host index 0x%x: delta 0x%x\n"</literal></expr></argument>,

			<argument pos:start="88:25" pos:end="88:25"><expr pos:start="88:25" pos:end="88:25"><name pos:start="88:25" pos:end="88:25">i</name></expr></argument>, <argument pos:start="88:28" pos:end="88:48"><expr pos:start="88:28" pos:end="88:48"><name pos:start="88:28" pos:end="88:38"><name pos:start="88:28" pos:end="88:31">vdev</name><operator pos:start="88:32" pos:end="88:33">-&gt;</operator><name pos:start="88:34" pos:end="88:35">vq</name><index pos:start="88:36" pos:end="88:38">[<expr pos:start="88:37" pos:end="88:37"><name pos:start="88:37" pos:end="88:37">i</name></expr>]</index></name><operator pos:start="88:39" pos:end="88:39">.</operator><name pos:start="88:40" pos:end="88:48"><name pos:start="88:40" pos:end="88:44">vring</name><operator pos:start="88:45" pos:end="88:45">.</operator><name pos:start="88:46" pos:end="88:48">num</name></name></expr></argument>,

                        <argument pos:start="90:25" pos:end="90:53"><expr pos:start="90:25" pos:end="90:53"><call pos:start="90:25" pos:end="90:53"><name pos:start="90:25" pos:end="90:39">vring_avail_idx</name><argument_list pos:start="90:40" pos:end="90:53">(<argument pos:start="90:41" pos:end="90:52"><expr pos:start="90:41" pos:end="90:52"><operator pos:start="90:41" pos:end="90:41">&amp;</operator><name pos:start="90:42" pos:end="90:52"><name pos:start="90:42" pos:end="90:45">vdev</name><operator pos:start="90:46" pos:end="90:47">-&gt;</operator><name pos:start="90:48" pos:end="90:49">vq</name><index pos:start="90:50" pos:end="90:52">[<expr pos:start="90:51" pos:end="90:51"><name pos:start="90:51" pos:end="90:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                        <argument pos:start="92:25" pos:end="92:50"><expr pos:start="92:25" pos:end="92:50"><name pos:start="92:25" pos:end="92:35"><name pos:start="92:25" pos:end="92:28">vdev</name><operator pos:start="92:29" pos:end="92:30">-&gt;</operator><name pos:start="92:31" pos:end="92:32">vq</name><index pos:start="92:33" pos:end="92:35">[<expr pos:start="92:34" pos:end="92:34"><name pos:start="92:34" pos:end="92:34">i</name></expr>]</index></name><operator pos:start="92:36" pos:end="92:36">.</operator><name pos:start="92:37" pos:end="92:50">last_avail_idx</name></expr></argument>, <argument pos:start="92:53" pos:end="92:61"><expr pos:start="92:53" pos:end="92:61"><name pos:start="92:53" pos:end="92:61">num_heads</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="94:17" pos:end="94:26">return <expr pos:start="94:24" pos:end="94:25"><operator pos:start="94:24" pos:end="94:24">-</operator><literal type="number" pos:start="94:25" pos:end="94:25">1</literal></expr>;</return>

	</block_content>}</block></if></if_stmt>

        <if_stmt pos:start="98:9" pos:end="106:9"><if pos:start="98:9" pos:end="106:9">if <condition pos:start="98:12" pos:end="98:38">(<expr pos:start="98:13" pos:end="98:37"><name pos:start="98:13" pos:end="98:37"><name pos:start="98:13" pos:end="98:16">vdev</name><operator pos:start="98:17" pos:end="98:18">-&gt;</operator><name pos:start="98:19" pos:end="98:25">binding</name><operator pos:start="98:26" pos:end="98:27">-&gt;</operator><name pos:start="98:28" pos:end="98:37">load_queue</name></name></expr>)</condition> <block pos:start="98:40" pos:end="106:9">{<block_content pos:start="100:13" pos:end="104:27">

            <expr_stmt pos:start="100:13" pos:end="100:72"><expr pos:start="100:13" pos:end="100:71"><name pos:start="100:13" pos:end="100:15">ret</name> <operator pos:start="100:17" pos:end="100:17">=</operator> <call pos:start="100:19" pos:end="100:71"><name pos:start="100:19" pos:end="100:43"><name pos:start="100:19" pos:end="100:22">vdev</name><operator pos:start="100:23" pos:end="100:24">-&gt;</operator><name pos:start="100:25" pos:end="100:31">binding</name><operator pos:start="100:32" pos:end="100:33">-&gt;</operator><name pos:start="100:34" pos:end="100:43">load_queue</name></name><argument_list pos:start="100:44" pos:end="100:71">(<argument pos:start="100:45" pos:end="100:64"><expr pos:start="100:45" pos:end="100:64"><name pos:start="100:45" pos:end="100:64"><name pos:start="100:45" pos:end="100:48">vdev</name><operator pos:start="100:49" pos:end="100:50">-&gt;</operator><name pos:start="100:51" pos:end="100:64">binding_opaque</name></name></expr></argument>, <argument pos:start="100:67" pos:end="100:67"><expr pos:start="100:67" pos:end="100:67"><name pos:start="100:67" pos:end="100:67">i</name></expr></argument>, <argument pos:start="100:70" pos:end="100:70"><expr pos:start="100:70" pos:end="100:70"><name pos:start="100:70" pos:end="100:70">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="102:13" pos:end="104:27"><if pos:start="102:13" pos:end="104:27">if <condition pos:start="102:16" pos:end="102:20">(<expr pos:start="102:17" pos:end="102:19"><name pos:start="102:17" pos:end="102:19">ret</name></expr>)</condition><block type="pseudo" pos:start="104:17" pos:end="104:27"><block_content pos:start="104:17" pos:end="104:27">

                <return pos:start="104:17" pos:end="104:27">return <expr pos:start="104:24" pos:end="104:26"><name pos:start="104:24" pos:end="104:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="112:5" pos:end="112:49"><expr pos:start="112:5" pos:end="112:48"><call pos:start="112:5" pos:end="112:48"><name pos:start="112:5" pos:end="112:24">virtio_notify_vector</name><argument_list pos:start="112:25" pos:end="112:48">(<argument pos:start="112:26" pos:end="112:29"><expr pos:start="112:26" pos:end="112:29"><name pos:start="112:26" pos:end="112:29">vdev</name></expr></argument>, <argument pos:start="112:32" pos:end="112:47"><expr pos:start="112:32" pos:end="112:47"><name pos:start="112:32" pos:end="112:47">VIRTIO_NO_VECTOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="114:5" pos:end="114:13">return <expr pos:start="114:12" pos:end="114:12"><literal type="number" pos:start="114:12" pos:end="114:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
