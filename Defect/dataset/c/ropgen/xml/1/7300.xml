<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7300.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">megasas_scsi_realize</name><parameter_list pos:start="1:33" pos:end="1:62">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:42">PCIDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:54">Error</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier><modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="209:1">{<block_content pos:start="5:5" pos:end="207:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">d</name> <init pos:start="5:20" pos:end="5:32">= <expr pos:start="5:22" pos:end="5:32"><call pos:start="5:22" pos:end="5:32"><name pos:start="5:22" pos:end="5:27">DEVICE</name><argument_list pos:start="5:28" pos:end="5:32">(<argument pos:start="5:29" pos:end="5:31"><expr pos:start="5:29" pos:end="5:31"><name pos:start="5:29" pos:end="5:31">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MegasasState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><call pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:29">MEGASAS</name><argument_list pos:start="7:30" pos:end="7:34">(<argument pos:start="7:31" pos:end="7:33"><expr pos:start="7:31" pos:end="7:33"><name pos:start="7:31" pos:end="7:33">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MegasasBaseClass</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:23">b</name> <init pos:start="9:25" pos:end="9:53">= <expr pos:start="9:27" pos:end="9:53"><call pos:start="9:27" pos:end="9:53"><name pos:start="9:27" pos:end="9:50">MEGASAS_DEVICE_GET_CLASS</name><argument_list pos:start="9:51" pos:end="9:53">(<argument pos:start="9:52" pos:end="9:52"><expr pos:start="9:52" pos:end="9:52"><name pos:start="9:52" pos:end="9:52">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:21">pci_conf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:19">bar_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:14">err</name> <init pos:start="15:16" pos:end="15:21">= <expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:12">pci_conf</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:18">dev</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:26">config</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:31">/* PCI latency timer = 0 */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:12">pci_conf</name><index pos:start="27:13" pos:end="27:31">[<expr pos:start="27:14" pos:end="27:30"><name pos:start="27:14" pos:end="27:30">PCI_LATENCY_TIMER</name></expr>]</index></name> <operator pos:start="27:33" pos:end="27:33">=</operator> <literal type="number" pos:start="27:35" pos:end="27:35">0</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="29:5" pos:end="29:25">/* Interrupt pin 1 */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:39"><expr pos:start="31:5" pos:end="31:38"><name pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:12">pci_conf</name><index pos:start="31:13" pos:end="31:31">[<expr pos:start="31:14" pos:end="31:30"><name pos:start="31:14" pos:end="31:30">PCI_INTERRUPT_PIN</name></expr>]</index></name> <operator pos:start="31:33" pos:end="31:33">=</operator> <literal type="number" pos:start="31:35" pos:end="31:38">0x01</literal></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="67:5"><if pos:start="35:5" pos:end="67:5">if <condition pos:start="35:8" pos:end="35:34">(<expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:14">msi</name></name> <operator pos:start="35:16" pos:end="35:17">!=</operator> <name pos:start="35:19" pos:end="35:33">ON_OFF_AUTO_OFF</name></expr>)</condition> <block pos:start="35:36" pos:end="67:5">{<block_content pos:start="37:9" pos:end="65:9">

        <expr_stmt pos:start="37:9" pos:end="37:56"><expr pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:55"><name pos:start="37:15" pos:end="37:22">msi_init</name><argument_list pos:start="37:23" pos:end="37:55">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">dev</name></expr></argument>, <argument pos:start="37:29" pos:end="37:32"><expr pos:start="37:29" pos:end="37:32"><literal type="number" pos:start="37:29" pos:end="37:32">0x50</literal></expr></argument>, <argument pos:start="37:35" pos:end="37:35"><expr pos:start="37:35" pos:end="37:35"><literal type="number" pos:start="37:35" pos:end="37:35">1</literal></expr></argument>, <argument pos:start="37:38" pos:end="37:41"><expr pos:start="37:38" pos:end="37:41"><name pos:start="37:38" pos:end="37:41">true</name></expr></argument>, <argument pos:start="37:44" pos:end="37:48"><expr pos:start="37:44" pos:end="37:48"><name pos:start="37:44" pos:end="37:48">false</name></expr></argument>, <argument pos:start="37:51" pos:end="37:54"><expr pos:start="37:51" pos:end="37:54"><operator pos:start="37:51" pos:end="37:51">&amp;</operator><name pos:start="37:52" pos:end="37:54">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="39:9" pos:end="41:36">/* Any error other than -ENOTSUP(board's MSI support is broken)

         * is a programming error */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><call pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:14">assert</name><argument_list pos:start="43:15" pos:end="43:39">(<argument pos:start="43:16" pos:end="43:38"><expr pos:start="43:16" pos:end="43:38"><operator pos:start="43:16" pos:end="43:16">!</operator><name pos:start="43:17" pos:end="43:19">ret</name> <operator pos:start="43:21" pos:end="43:22">||</operator> <name pos:start="43:24" pos:end="43:26">ret</name> <operator pos:start="43:28" pos:end="43:29">==</operator> <operator pos:start="43:31" pos:end="43:31">-</operator><name pos:start="43:32" pos:end="43:38">ENOTSUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="65:9"><if pos:start="45:9" pos:end="57:9">if <condition pos:start="45:12" pos:end="45:44">(<expr pos:start="45:13" pos:end="45:43"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:18">&amp;&amp;</operator> <name pos:start="45:20" pos:end="45:25"><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:25">msi</name></name> <operator pos:start="45:27" pos:end="45:28">==</operator> <name pos:start="45:30" pos:end="45:43">ON_OFF_AUTO_ON</name></expr>)</condition> <block pos:start="45:46" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:19">

            <comment type="block" pos:start="47:13" pos:end="47:68">/* Can't satisfy user's explicit msi=on request, fail */</comment>

            <expr_stmt pos:start="49:13" pos:end="51:57"><expr pos:start="49:13" pos:end="51:56"><call pos:start="49:13" pos:end="51:56"><name pos:start="49:13" pos:end="49:29">error_append_hint</name><argument_list pos:start="49:30" pos:end="51:56">(<argument pos:start="49:31" pos:end="49:34"><expr pos:start="49:31" pos:end="49:34"><operator pos:start="49:31" pos:end="49:31">&amp;</operator><name pos:start="49:32" pos:end="49:34">err</name></expr></argument>, <argument pos:start="49:37" pos:end="51:55"><expr pos:start="49:37" pos:end="51:55"><literal type="string" pos:start="49:37" pos:end="49:76">"You have to use msi=auto (default) or "</literal>

                    <literal type="string" pos:start="51:21" pos:end="51:55">"msi=off with this machine type.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:39"><expr pos:start="53:13" pos:end="53:38"><call pos:start="53:13" pos:end="53:38"><name pos:start="53:13" pos:end="53:27">error_propagate</name><argument_list pos:start="53:28" pos:end="53:38">(<argument pos:start="53:29" pos:end="53:32"><expr pos:start="53:29" pos:end="53:32"><name pos:start="53:29" pos:end="53:32">errp</name></expr></argument>, <argument pos:start="53:35" pos:end="53:37"><expr pos:start="53:35" pos:end="53:37"><name pos:start="53:35" pos:end="53:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="57:11" pos:end="65:9">else if <condition pos:start="57:19" pos:end="57:23">(<expr pos:start="57:20" pos:end="57:22"><name pos:start="57:20" pos:end="57:22">ret</name></expr>)</condition> <block pos:start="57:25" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:28">

            <comment type="block" pos:start="59:13" pos:end="59:65">/* With msi=auto, we fall back to MSI off silently */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:37"><expr pos:start="61:13" pos:end="61:36"><name pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:18">msi</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:36">ON_OFF_AUTO_OFF</name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:28"><expr pos:start="63:13" pos:end="63:27"><call pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:22">error_free</name><argument_list pos:start="63:23" pos:end="63:27">(<argument pos:start="63:24" pos:end="63:26"><expr pos:start="63:24" pos:end="63:26"><name pos:start="63:24" pos:end="63:26">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="73:50"><expr pos:start="71:5" pos:end="73:49"><call pos:start="71:5" pos:end="73:49"><name pos:start="71:5" pos:end="71:25">memory_region_init_io</name><argument_list pos:start="71:26" pos:end="73:49">(<argument pos:start="71:27" pos:end="71:37"><expr pos:start="71:27" pos:end="71:37"><operator pos:start="71:27" pos:end="71:27">&amp;</operator><name pos:start="71:28" pos:end="71:37"><name pos:start="71:28" pos:end="71:28">s</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:37">mmio_io</name></name></expr></argument>, <argument pos:start="71:40" pos:end="71:48"><expr pos:start="71:40" pos:end="71:48"><call pos:start="71:40" pos:end="71:48"><name pos:start="71:40" pos:end="71:45">OBJECT</name><argument_list pos:start="71:46" pos:end="71:48">(<argument pos:start="71:47" pos:end="71:47"><expr pos:start="71:47" pos:end="71:47"><name pos:start="71:47" pos:end="71:47">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="71:51" pos:end="71:67"><expr pos:start="71:51" pos:end="71:67"><operator pos:start="71:51" pos:end="71:51">&amp;</operator><name pos:start="71:52" pos:end="71:67">megasas_mmio_ops</name></expr></argument>, <argument pos:start="71:70" pos:end="71:70"><expr pos:start="71:70" pos:end="71:70"><name pos:start="71:70" pos:end="71:70">s</name></expr></argument>,

                          <argument pos:start="73:27" pos:end="73:40"><expr pos:start="73:27" pos:end="73:40"><literal type="string" pos:start="73:27" pos:end="73:40">"megasas-mmio"</literal></expr></argument>, <argument pos:start="73:43" pos:end="73:48"><expr pos:start="73:43" pos:end="73:48"><literal type="number" pos:start="73:43" pos:end="73:48">0x4000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="77:45"><expr pos:start="75:5" pos:end="77:44"><call pos:start="75:5" pos:end="77:44"><name pos:start="75:5" pos:end="75:25">memory_region_init_io</name><argument_list pos:start="75:26" pos:end="77:44">(<argument pos:start="75:27" pos:end="75:37"><expr pos:start="75:27" pos:end="75:37"><operator pos:start="75:27" pos:end="75:27">&amp;</operator><name pos:start="75:28" pos:end="75:37"><name pos:start="75:28" pos:end="75:28">s</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:37">port_io</name></name></expr></argument>, <argument pos:start="75:40" pos:end="75:48"><expr pos:start="75:40" pos:end="75:48"><call pos:start="75:40" pos:end="75:48"><name pos:start="75:40" pos:end="75:45">OBJECT</name><argument_list pos:start="75:46" pos:end="75:48">(<argument pos:start="75:47" pos:end="75:47"><expr pos:start="75:47" pos:end="75:47"><name pos:start="75:47" pos:end="75:47">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:51" pos:end="75:67"><expr pos:start="75:51" pos:end="75:67"><operator pos:start="75:51" pos:end="75:51">&amp;</operator><name pos:start="75:52" pos:end="75:67">megasas_port_ops</name></expr></argument>, <argument pos:start="75:70" pos:end="75:70"><expr pos:start="75:70" pos:end="75:70"><name pos:start="75:70" pos:end="75:70">s</name></expr></argument>,

                          <argument pos:start="77:27" pos:end="77:38"><expr pos:start="77:27" pos:end="77:38"><literal type="string" pos:start="77:27" pos:end="77:38">"megasas-io"</literal></expr></argument>, <argument pos:start="77:41" pos:end="77:43"><expr pos:start="77:41" pos:end="77:43"><literal type="number" pos:start="77:41" pos:end="77:43">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="81:52"><expr pos:start="79:5" pos:end="81:51"><call pos:start="79:5" pos:end="81:51"><name pos:start="79:5" pos:end="79:25">memory_region_init_io</name><argument_list pos:start="79:26" pos:end="81:51">(<argument pos:start="79:27" pos:end="79:38"><expr pos:start="79:27" pos:end="79:38"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:38"><name pos:start="79:28" pos:end="79:28">s</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:38">queue_io</name></name></expr></argument>, <argument pos:start="79:41" pos:end="79:49"><expr pos:start="79:41" pos:end="79:49"><call pos:start="79:41" pos:end="79:49"><name pos:start="79:41" pos:end="79:46">OBJECT</name><argument_list pos:start="79:47" pos:end="79:49">(<argument pos:start="79:48" pos:end="79:48"><expr pos:start="79:48" pos:end="79:48"><name pos:start="79:48" pos:end="79:48">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:52" pos:end="79:69"><expr pos:start="79:52" pos:end="79:69"><operator pos:start="79:52" pos:end="79:52">&amp;</operator><name pos:start="79:53" pos:end="79:69">megasas_queue_ops</name></expr></argument>, <argument pos:start="79:72" pos:end="79:72"><expr pos:start="79:72" pos:end="79:72"><name pos:start="79:72" pos:end="79:72">s</name></expr></argument>,

                          <argument pos:start="81:27" pos:end="81:41"><expr pos:start="81:27" pos:end="81:41"><literal type="string" pos:start="81:27" pos:end="81:41">"megasas-queue"</literal></expr></argument>, <argument pos:start="81:44" pos:end="81:50"><expr pos:start="81:44" pos:end="81:50"><literal type="number" pos:start="81:44" pos:end="81:50">0x40000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="89:58">(<expr pos:start="85:9" pos:end="89:57"><call pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:24">megasas_use_msix</name><argument_list pos:start="85:25" pos:end="85:27">(<argument pos:start="85:26" pos:end="85:26"><expr pos:start="85:26" pos:end="85:26"><name pos:start="85:26" pos:end="85:26">s</name></expr></argument>)</argument_list></call> <operator pos:start="85:29" pos:end="85:30">&amp;&amp;</operator>

        <call pos:start="87:9" pos:end="89:57"><name pos:start="87:9" pos:end="87:17">msix_init</name><argument_list pos:start="87:18" pos:end="89:57">(<argument pos:start="87:19" pos:end="87:21"><expr pos:start="87:19" pos:end="87:21"><name pos:start="87:19" pos:end="87:21">dev</name></expr></argument>, <argument pos:start="87:24" pos:end="87:25"><expr pos:start="87:24" pos:end="87:25"><literal type="number" pos:start="87:24" pos:end="87:25">15</literal></expr></argument>, <argument pos:start="87:28" pos:end="87:38"><expr pos:start="87:28" pos:end="87:38"><operator pos:start="87:28" pos:end="87:28">&amp;</operator><name pos:start="87:29" pos:end="87:38"><name pos:start="87:29" pos:end="87:29">s</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:38">mmio_io</name></name></expr></argument>, <argument pos:start="87:41" pos:end="87:51"><expr pos:start="87:41" pos:end="87:51"><name pos:start="87:41" pos:end="87:51"><name pos:start="87:41" pos:end="87:41">b</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:51">mmio_bar</name></name></expr></argument>, <argument pos:start="87:54" pos:end="87:59"><expr pos:start="87:54" pos:end="87:59"><literal type="number" pos:start="87:54" pos:end="87:59">0x2000</literal></expr></argument>,

                  <argument pos:start="89:19" pos:end="89:29"><expr pos:start="89:19" pos:end="89:29"><operator pos:start="89:19" pos:end="89:19">&amp;</operator><name pos:start="89:20" pos:end="89:29"><name pos:start="89:20" pos:end="89:20">s</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:29">mmio_io</name></name></expr></argument>, <argument pos:start="89:32" pos:end="89:42"><expr pos:start="89:32" pos:end="89:42"><name pos:start="89:32" pos:end="89:42"><name pos:start="89:32" pos:end="89:32">b</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:42">mmio_bar</name></name></expr></argument>, <argument pos:start="89:45" pos:end="89:50"><expr pos:start="89:45" pos:end="89:50"><literal type="number" pos:start="89:45" pos:end="89:50">0x3800</literal></expr></argument>, <argument pos:start="89:53" pos:end="89:56"><expr pos:start="89:53" pos:end="89:56"><literal type="number" pos:start="89:53" pos:end="89:56">0x68</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:60" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:34">

        <expr_stmt pos:start="91:9" pos:end="91:34"><expr pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:15">msix</name></name> <operator pos:start="91:17" pos:end="91:17">=</operator> <name pos:start="91:19" pos:end="91:33">ON_OFF_AUTO_OFF</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="95:5" pos:end="99:5"><if pos:start="95:5" pos:end="99:5">if <condition pos:start="95:8" pos:end="95:28">(<expr pos:start="95:9" pos:end="95:27"><call pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:22">pci_is_express</name><argument_list pos:start="95:23" pos:end="95:27">(<argument pos:start="95:24" pos:end="95:26"><expr pos:start="95:24" pos:end="95:26"><name pos:start="95:24" pos:end="95:26">dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:30" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:42">

        <expr_stmt pos:start="97:9" pos:end="97:42"><expr pos:start="97:9" pos:end="97:41"><call pos:start="97:9" pos:end="97:41"><name pos:start="97:9" pos:end="97:30">pcie_endpoint_cap_init</name><argument_list pos:start="97:31" pos:end="97:41">(<argument pos:start="97:32" pos:end="97:34"><expr pos:start="97:32" pos:end="97:34"><name pos:start="97:32" pos:end="97:34">dev</name></expr></argument>, <argument pos:start="97:37" pos:end="97:40"><expr pos:start="97:37" pos:end="97:40"><literal type="number" pos:start="97:37" pos:end="97:40">0xa0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:76"><expr pos:start="103:5" pos:end="103:75"><name pos:start="103:5" pos:end="103:12">bar_type</name> <operator pos:start="103:14" pos:end="103:14">=</operator> <name pos:start="103:16" pos:end="103:44">PCI_BASE_ADDRESS_SPACE_MEMORY</name> <operator pos:start="103:46" pos:end="103:46">|</operator> <name pos:start="103:48" pos:end="103:75">PCI_BASE_ADDRESS_MEM_TYPE_64</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="107:61"><expr pos:start="105:5" pos:end="107:60"><call pos:start="105:5" pos:end="107:60"><name pos:start="105:5" pos:end="105:20">pci_register_bar</name><argument_list pos:start="105:21" pos:end="107:60">(<argument pos:start="105:22" pos:end="105:24"><expr pos:start="105:22" pos:end="105:24"><name pos:start="105:22" pos:end="105:24">dev</name></expr></argument>, <argument pos:start="105:27" pos:end="105:39"><expr pos:start="105:27" pos:end="105:39"><name pos:start="105:27" pos:end="105:39"><name pos:start="105:27" pos:end="105:27">b</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:39">ioport_bar</name></name></expr></argument>,

                     <argument pos:start="107:22" pos:end="107:46"><expr pos:start="107:22" pos:end="107:46"><name pos:start="107:22" pos:end="107:46">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="107:49" pos:end="107:59"><expr pos:start="107:49" pos:end="107:59"><operator pos:start="107:49" pos:end="107:49">&amp;</operator><name pos:start="107:50" pos:end="107:59"><name pos:start="107:50" pos:end="107:50">s</name><operator pos:start="107:51" pos:end="107:52">-&gt;</operator><name pos:start="107:53" pos:end="107:59">port_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:62"><expr pos:start="109:5" pos:end="109:61"><call pos:start="109:5" pos:end="109:61"><name pos:start="109:5" pos:end="109:20">pci_register_bar</name><argument_list pos:start="109:21" pos:end="109:61">(<argument pos:start="109:22" pos:end="109:24"><expr pos:start="109:22" pos:end="109:24"><name pos:start="109:22" pos:end="109:24">dev</name></expr></argument>, <argument pos:start="109:27" pos:end="109:37"><expr pos:start="109:27" pos:end="109:37"><name pos:start="109:27" pos:end="109:37"><name pos:start="109:27" pos:end="109:27">b</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:37">mmio_bar</name></name></expr></argument>, <argument pos:start="109:40" pos:end="109:47"><expr pos:start="109:40" pos:end="109:47"><name pos:start="109:40" pos:end="109:47">bar_type</name></expr></argument>, <argument pos:start="109:50" pos:end="109:60"><expr pos:start="109:50" pos:end="109:60"><operator pos:start="109:50" pos:end="109:50">&amp;</operator><name pos:start="109:51" pos:end="109:60"><name pos:start="109:51" pos:end="109:51">s</name><operator pos:start="109:52" pos:end="109:53">-&gt;</operator><name pos:start="109:54" pos:end="109:60">mmio_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:53"><expr pos:start="111:5" pos:end="111:52"><call pos:start="111:5" pos:end="111:52"><name pos:start="111:5" pos:end="111:20">pci_register_bar</name><argument_list pos:start="111:21" pos:end="111:52">(<argument pos:start="111:22" pos:end="111:24"><expr pos:start="111:22" pos:end="111:24"><name pos:start="111:22" pos:end="111:24">dev</name></expr></argument>, <argument pos:start="111:27" pos:end="111:27"><expr pos:start="111:27" pos:end="111:27"><literal type="number" pos:start="111:27" pos:end="111:27">3</literal></expr></argument>, <argument pos:start="111:30" pos:end="111:37"><expr pos:start="111:30" pos:end="111:37"><name pos:start="111:30" pos:end="111:37">bar_type</name></expr></argument>, <argument pos:start="111:40" pos:end="111:51"><expr pos:start="111:40" pos:end="111:51"><operator pos:start="111:40" pos:end="111:40">&amp;</operator><name pos:start="111:41" pos:end="111:51"><name pos:start="111:41" pos:end="111:41">s</name><operator pos:start="111:42" pos:end="111:43">-&gt;</operator><name pos:start="111:44" pos:end="111:51">queue_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="119:5"><if pos:start="115:5" pos:end="119:5">if <condition pos:start="115:8" pos:end="115:28">(<expr pos:start="115:9" pos:end="115:27"><call pos:start="115:9" pos:end="115:27"><name pos:start="115:9" pos:end="115:24">megasas_use_msix</name><argument_list pos:start="115:25" pos:end="115:27">(<argument pos:start="115:26" pos:end="115:26"><expr pos:start="115:26" pos:end="115:26"><name pos:start="115:26" pos:end="115:26">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:30" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:32">

        <expr_stmt pos:start="117:9" pos:end="117:32"><expr pos:start="117:9" pos:end="117:31"><call pos:start="117:9" pos:end="117:31"><name pos:start="117:9" pos:end="117:23">msix_vector_use</name><argument_list pos:start="117:24" pos:end="117:31">(<argument pos:start="117:25" pos:end="117:27"><expr pos:start="117:25" pos:end="117:27"><name pos:start="117:25" pos:end="117:27">dev</name></expr></argument>, <argument pos:start="117:30" pos:end="117:30"><expr pos:start="117:30" pos:end="117:30"><literal type="number" pos:start="117:30" pos:end="117:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:36"><expr pos:start="123:5" pos:end="123:35"><name pos:start="123:5" pos:end="123:15"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:15">fw_state</name></name> <operator pos:start="123:17" pos:end="123:17">=</operator> <name pos:start="123:19" pos:end="123:35">MFI_FWSTATE_READY</name></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="137:5"><if pos:start="125:5" pos:end="137:5">if <condition pos:start="125:8" pos:end="125:21">(<expr pos:start="125:9" pos:end="125:20"><operator pos:start="125:9" pos:end="125:9">!</operator><name pos:start="125:10" pos:end="125:20"><name pos:start="125:10" pos:end="125:10">s</name><operator pos:start="125:11" pos:end="125:12">-&gt;</operator><name pos:start="125:13" pos:end="125:20">sas_addr</name></name></expr>)</condition> <block pos:start="125:23" pos:end="137:5">{<block_content pos:start="127:9" pos:end="135:44">

        <expr_stmt pos:start="127:9" pos:end="129:60"><expr pos:start="127:9" pos:end="129:59"><name pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:19">sas_addr</name></name> <operator pos:start="127:21" pos:end="127:21">=</operator> <operator pos:start="127:23" pos:end="127:23">(</operator><operator pos:start="127:24" pos:end="127:24">(</operator><name pos:start="127:25" pos:end="127:47">NAA_LOCALLY_ASSIGNED_ID</name> <operator pos:start="127:49" pos:end="127:50">&lt;&lt;</operator> <literal type="number" pos:start="127:52" pos:end="127:53">24</literal><operator pos:start="127:54" pos:end="127:54">)</operator> <operator pos:start="127:56" pos:end="127:56">|</operator>

                       <name pos:start="129:24" pos:end="129:52">IEEE_COMPANY_LOCALLY_ASSIGNED</name><operator pos:start="129:53" pos:end="129:53">)</operator> <operator pos:start="129:55" pos:end="129:56">&lt;&lt;</operator> <literal type="number" pos:start="129:58" pos:end="129:59">36</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:53"><expr pos:start="131:9" pos:end="131:52"><name pos:start="131:9" pos:end="131:19"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:19">sas_addr</name></name> <operator pos:start="131:21" pos:end="131:22">|=</operator> <operator pos:start="131:24" pos:end="131:24">(</operator><call pos:start="131:25" pos:end="131:45"><name pos:start="131:25" pos:end="131:35">pci_bus_num</name><argument_list pos:start="131:36" pos:end="131:45">(<argument pos:start="131:37" pos:end="131:44"><expr pos:start="131:37" pos:end="131:44"><name pos:start="131:37" pos:end="131:44"><name pos:start="131:37" pos:end="131:39">dev</name><operator pos:start="131:40" pos:end="131:41">-&gt;</operator><name pos:start="131:42" pos:end="131:44">bus</name></name></expr></argument>)</argument_list></call> <operator pos:start="131:47" pos:end="131:48">&lt;&lt;</operator> <literal type="number" pos:start="131:50" pos:end="131:51">16</literal><operator pos:start="131:52" pos:end="131:52">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:51"><expr pos:start="133:9" pos:end="133:50"><name pos:start="133:9" pos:end="133:19"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:19">sas_addr</name></name> <operator pos:start="133:21" pos:end="133:22">|=</operator> <operator pos:start="133:24" pos:end="133:24">(</operator><call pos:start="133:25" pos:end="133:44"><name pos:start="133:25" pos:end="133:32">PCI_SLOT</name><argument_list pos:start="133:33" pos:end="133:44">(<argument pos:start="133:34" pos:end="133:43"><expr pos:start="133:34" pos:end="133:43"><name pos:start="133:34" pos:end="133:43"><name pos:start="133:34" pos:end="133:36">dev</name><operator pos:start="133:37" pos:end="133:38">-&gt;</operator><name pos:start="133:39" pos:end="133:43">devfn</name></name></expr></argument>)</argument_list></call> <operator pos:start="133:46" pos:end="133:47">&lt;&lt;</operator> <literal type="number" pos:start="133:49" pos:end="133:49">8</literal><operator pos:start="133:50" pos:end="133:50">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:44"><expr pos:start="135:9" pos:end="135:43"><name pos:start="135:9" pos:end="135:19"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:19">sas_addr</name></name> <operator pos:start="135:21" pos:end="135:22">|=</operator> <call pos:start="135:24" pos:end="135:43"><name pos:start="135:24" pos:end="135:31">PCI_FUNC</name><argument_list pos:start="135:32" pos:end="135:43">(<argument pos:start="135:33" pos:end="135:42"><expr pos:start="135:33" pos:end="135:42"><name pos:start="135:33" pos:end="135:42"><name pos:start="135:33" pos:end="135:35">dev</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:42">devfn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="139:5" pos:end="143:5"><if pos:start="139:5" pos:end="143:5">if <condition pos:start="139:8" pos:end="139:23">(<expr pos:start="139:9" pos:end="139:22"><operator pos:start="139:9" pos:end="139:9">!</operator><name pos:start="139:10" pos:end="139:22"><name pos:start="139:10" pos:end="139:10">s</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:22">hba_serial</name></name></expr>)</condition> <block pos:start="139:25" pos:end="143:5">{<block_content pos:start="141:9" pos:end="141:53">

        <expr_stmt pos:start="141:9" pos:end="141:53"><expr pos:start="141:9" pos:end="141:52"><name pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:21">hba_serial</name></name> <operator pos:start="141:23" pos:end="141:23">=</operator> <call pos:start="141:25" pos:end="141:52"><name pos:start="141:25" pos:end="141:32">g_strdup</name><argument_list pos:start="141:33" pos:end="141:52">(<argument pos:start="141:34" pos:end="141:51"><expr pos:start="141:34" pos:end="141:51"><name pos:start="141:34" pos:end="141:51">MEGASAS_HBA_SERIAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="145:5" pos:end="157:5"><if pos:start="145:5" pos:end="149:5">if <condition pos:start="145:8" pos:end="145:59">(<expr pos:start="145:9" pos:end="145:58"><name pos:start="145:9" pos:end="145:17"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:17">fw_sge</name></name> <operator pos:start="145:19" pos:end="145:20">&gt;=</operator> <name pos:start="145:22" pos:end="145:36">MEGASAS_MAX_SGE</name> <operator pos:start="145:38" pos:end="145:38">-</operator> <name pos:start="145:40" pos:end="145:58">MFI_PASS_FRAME_SIZE</name></expr>)</condition> <block pos:start="145:61" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:58">

        <expr_stmt pos:start="147:9" pos:end="147:58"><expr pos:start="147:9" pos:end="147:57"><name pos:start="147:9" pos:end="147:17"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:17">fw_sge</name></name> <operator pos:start="147:19" pos:end="147:19">=</operator> <name pos:start="147:21" pos:end="147:35">MEGASAS_MAX_SGE</name> <operator pos:start="147:37" pos:end="147:37">-</operator> <name pos:start="147:39" pos:end="147:57">MFI_PASS_FRAME_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="149:7" pos:end="153:5">else if <condition pos:start="149:15" pos:end="149:54">(<expr pos:start="149:16" pos:end="149:53"><name pos:start="149:16" pos:end="149:24"><name pos:start="149:16" pos:end="149:16">s</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:24">fw_sge</name></name> <operator pos:start="149:26" pos:end="149:27">&gt;=</operator> <literal type="number" pos:start="149:29" pos:end="149:33">128</literal> <operator pos:start="149:33" pos:end="149:33">-</operator> <name pos:start="149:35" pos:end="149:53">MFI_PASS_FRAME_SIZE</name></expr>)</condition> <block pos:start="149:56" pos:end="153:5">{<block_content pos:start="151:9" pos:end="151:46">

        <expr_stmt pos:start="151:9" pos:end="151:46"><expr pos:start="151:9" pos:end="151:45"><name pos:start="151:9" pos:end="151:17"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:17">fw_sge</name></name> <operator pos:start="151:19" pos:end="151:19">=</operator> <literal type="number" pos:start="151:21" pos:end="151:25">128</literal> <operator pos:start="151:25" pos:end="151:25">-</operator> <name pos:start="151:27" pos:end="151:45">MFI_PASS_FRAME_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="153:7" pos:end="157:5">else <block pos:start="153:12" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:45">

        <expr_stmt pos:start="155:9" pos:end="155:45"><expr pos:start="155:9" pos:end="155:44"><name pos:start="155:9" pos:end="155:17"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:17">fw_sge</name></name> <operator pos:start="155:19" pos:end="155:19">=</operator> <literal type="number" pos:start="155:21" pos:end="155:24">64</literal> <operator pos:start="155:24" pos:end="155:24">-</operator> <name pos:start="155:26" pos:end="155:44">MFI_PASS_FRAME_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="159:5" pos:end="163:5"><if pos:start="159:5" pos:end="163:5">if <condition pos:start="159:8" pos:end="159:40">(<expr pos:start="159:9" pos:end="159:39"><name pos:start="159:9" pos:end="159:18"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:18">fw_cmds</name></name> <operator pos:start="159:20" pos:end="159:20">&gt;</operator> <name pos:start="159:22" pos:end="159:39">MEGASAS_MAX_FRAMES</name></expr>)</condition> <block pos:start="159:42" pos:end="163:5">{<block_content pos:start="161:9" pos:end="161:40">

        <expr_stmt pos:start="161:9" pos:end="161:40"><expr pos:start="161:9" pos:end="161:39"><name pos:start="161:9" pos:end="161:18"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:18">fw_cmds</name></name> <operator pos:start="161:20" pos:end="161:20">=</operator> <name pos:start="161:22" pos:end="161:39">MEGASAS_MAX_FRAMES</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="165:5" pos:end="167:61"><expr pos:start="165:5" pos:end="167:60"><call pos:start="165:5" pos:end="167:60"><name pos:start="165:5" pos:end="165:22">trace_megasas_init</name><argument_list pos:start="165:23" pos:end="167:60">(<argument pos:start="165:24" pos:end="165:32"><expr pos:start="165:24" pos:end="165:32"><name pos:start="165:24" pos:end="165:32"><name pos:start="165:24" pos:end="165:24">s</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:32">fw_sge</name></name></expr></argument>, <argument pos:start="165:35" pos:end="165:44"><expr pos:start="165:35" pos:end="165:44"><name pos:start="165:35" pos:end="165:44"><name pos:start="165:35" pos:end="165:35">s</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:44">fw_cmds</name></name></expr></argument>,

                       <argument pos:start="167:24" pos:end="167:59"><expr pos:start="167:24" pos:end="167:59"><ternary pos:start="167:24" pos:end="167:59"><condition pos:start="167:24" pos:end="167:43"><expr pos:start="167:24" pos:end="167:41"><call pos:start="167:24" pos:end="167:41"><name pos:start="167:24" pos:end="167:38">megasas_is_jbod</name><argument_list pos:start="167:39" pos:end="167:41">(<argument pos:start="167:40" pos:end="167:40"><expr pos:start="167:40" pos:end="167:40"><name pos:start="167:40" pos:end="167:40">s</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="167:45" pos:end="167:50"> <expr pos:start="167:45" pos:end="167:50"><literal type="string" pos:start="167:45" pos:end="167:50">"jbod"</literal></expr> </then><else pos:start="167:52" pos:end="167:59">: <expr pos:start="167:54" pos:end="167:59"><literal type="string" pos:start="167:54" pos:end="167:59">"raid"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="171:5" pos:end="179:5"><if pos:start="171:5" pos:end="175:5">if <condition pos:start="171:8" pos:end="171:27">(<expr pos:start="171:9" pos:end="171:26"><call pos:start="171:9" pos:end="171:26"><name pos:start="171:9" pos:end="171:23">megasas_is_jbod</name><argument_list pos:start="171:24" pos:end="171:26">(<argument pos:start="171:25" pos:end="171:25"><expr pos:start="171:25" pos:end="171:25"><name pos:start="171:25" pos:end="171:25">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="171:29" pos:end="175:5">{<block_content pos:start="173:9" pos:end="173:37">

        <expr_stmt pos:start="173:9" pos:end="173:37"><expr pos:start="173:9" pos:end="173:36"><name pos:start="173:9" pos:end="173:18"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:18">fw_luns</name></name> <operator pos:start="173:20" pos:end="173:20">=</operator> <name pos:start="173:22" pos:end="173:36">MFI_MAX_SYS_PDS</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="175:7" pos:end="179:5">else <block pos:start="175:12" pos:end="179:5">{<block_content pos:start="177:9" pos:end="177:32">

        <expr_stmt pos:start="177:9" pos:end="177:32"><expr pos:start="177:9" pos:end="177:31"><name pos:start="177:9" pos:end="177:18"><name pos:start="177:9" pos:end="177:9">s</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:18">fw_luns</name></name> <operator pos:start="177:20" pos:end="177:20">=</operator> <name pos:start="177:22" pos:end="177:31">MFI_MAX_LD</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:23"><expr pos:start="181:5" pos:end="181:22"><name pos:start="181:5" pos:end="181:18"><name pos:start="181:5" pos:end="181:5">s</name><operator pos:start="181:6" pos:end="181:7">-&gt;</operator><name pos:start="181:8" pos:end="181:18">producer_pa</name></name> <operator pos:start="181:20" pos:end="181:20">=</operator> <literal type="number" pos:start="181:22" pos:end="181:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:23"><expr pos:start="183:5" pos:end="183:22"><name pos:start="183:5" pos:end="183:18"><name pos:start="183:5" pos:end="183:5">s</name><operator pos:start="183:6" pos:end="183:7">-&gt;</operator><name pos:start="183:8" pos:end="183:18">consumer_pa</name></name> <operator pos:start="183:20" pos:end="183:20">=</operator> <literal type="number" pos:start="183:22" pos:end="183:22">0</literal></expr>;</expr_stmt>

    <for pos:start="185:5" pos:end="195:5">for <control pos:start="185:9" pos:end="185:36">(<init pos:start="185:10" pos:end="185:15"><expr pos:start="185:10" pos:end="185:14"><name pos:start="185:10" pos:end="185:10">i</name> <operator pos:start="185:12" pos:end="185:12">=</operator> <literal type="number" pos:start="185:14" pos:end="185:14">0</literal></expr>;</init> <condition pos:start="185:17" pos:end="185:31"><expr pos:start="185:17" pos:end="185:30"><name pos:start="185:17" pos:end="185:17">i</name> <operator pos:start="185:19" pos:end="185:19">&lt;</operator> <name pos:start="185:21" pos:end="185:30"><name pos:start="185:21" pos:end="185:21">s</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:30">fw_cmds</name></name></expr>;</condition> <incr pos:start="185:33" pos:end="185:35"><expr pos:start="185:33" pos:end="185:35"><name pos:start="185:33" pos:end="185:33">i</name><operator pos:start="185:34" pos:end="185:35">++</operator></expr></incr>)</control> <block pos:start="185:38" pos:end="195:5">{<block_content pos:start="187:9" pos:end="193:31">

        <expr_stmt pos:start="187:9" pos:end="187:31"><expr pos:start="187:9" pos:end="187:30"><name pos:start="187:9" pos:end="187:20"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:17">frames</name><index pos:start="187:18" pos:end="187:20">[<expr pos:start="187:19" pos:end="187:19"><name pos:start="187:19" pos:end="187:19">i</name></expr>]</index></name><operator pos:start="187:21" pos:end="187:21">.</operator><name pos:start="187:22" pos:end="187:26">index</name> <operator pos:start="187:28" pos:end="187:28">=</operator> <name pos:start="187:30" pos:end="187:30">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:34"><expr pos:start="189:9" pos:end="189:33"><name pos:start="189:9" pos:end="189:20"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:17">frames</name><index pos:start="189:18" pos:end="189:20">[<expr pos:start="189:19" pos:end="189:19"><name pos:start="189:19" pos:end="189:19">i</name></expr>]</index></name><operator pos:start="189:21" pos:end="189:21">.</operator><name pos:start="189:22" pos:end="189:28">context</name> <operator pos:start="189:30" pos:end="189:30">=</operator> <operator pos:start="189:32" pos:end="189:32">-</operator><literal type="number" pos:start="189:33" pos:end="189:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:28"><expr pos:start="191:9" pos:end="191:27"><name pos:start="191:9" pos:end="191:20"><name pos:start="191:9" pos:end="191:9">s</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:17">frames</name><index pos:start="191:18" pos:end="191:20">[<expr pos:start="191:19" pos:end="191:19"><name pos:start="191:19" pos:end="191:19">i</name></expr>]</index></name><operator pos:start="191:21" pos:end="191:21">.</operator><name pos:start="191:22" pos:end="191:23">pa</name> <operator pos:start="191:25" pos:end="191:25">=</operator> <literal type="number" pos:start="191:27" pos:end="191:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:31"><expr pos:start="193:9" pos:end="193:30"><name pos:start="193:9" pos:end="193:20"><name pos:start="193:9" pos:end="193:9">s</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:17">frames</name><index pos:start="193:18" pos:end="193:20">[<expr pos:start="193:19" pos:end="193:19"><name pos:start="193:19" pos:end="193:19">i</name></expr>]</index></name><operator pos:start="193:21" pos:end="193:21">.</operator><name pos:start="193:22" pos:end="193:26">state</name> <operator pos:start="193:28" pos:end="193:28">=</operator> <name pos:start="193:30" pos:end="193:30">s</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="199:5" pos:end="201:43"><expr pos:start="199:5" pos:end="201:42"><call pos:start="199:5" pos:end="201:42"><name pos:start="199:5" pos:end="199:16">scsi_bus_new</name><argument_list pos:start="199:17" pos:end="201:42">(<argument pos:start="199:18" pos:end="199:24"><expr pos:start="199:18" pos:end="199:24"><operator pos:start="199:18" pos:end="199:18">&amp;</operator><name pos:start="199:19" pos:end="199:24"><name pos:start="199:19" pos:end="199:19">s</name><operator pos:start="199:20" pos:end="199:21">-&gt;</operator><name pos:start="199:22" pos:end="199:24">bus</name></name></expr></argument>, <argument pos:start="199:27" pos:end="199:40"><expr pos:start="199:27" pos:end="199:40"><sizeof pos:start="199:27" pos:end="199:40">sizeof<argument_list pos:start="199:33" pos:end="199:40">(<argument pos:start="199:34" pos:end="199:39"><expr pos:start="199:34" pos:end="199:39"><name pos:start="199:34" pos:end="199:39"><name pos:start="199:34" pos:end="199:34">s</name><operator pos:start="199:35" pos:end="199:36">-&gt;</operator><name pos:start="199:37" pos:end="199:39">bus</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="199:43" pos:end="199:53"><expr pos:start="199:43" pos:end="199:53"><call pos:start="199:43" pos:end="199:53"><name pos:start="199:43" pos:end="199:48">DEVICE</name><argument_list pos:start="199:49" pos:end="199:53">(<argument pos:start="199:50" pos:end="199:52"><expr pos:start="199:50" pos:end="199:52"><name pos:start="199:50" pos:end="199:52">dev</name></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="201:18" pos:end="201:35"><expr pos:start="201:18" pos:end="201:35"><operator pos:start="201:18" pos:end="201:18">&amp;</operator><name pos:start="201:19" pos:end="201:35">megasas_scsi_info</name></expr></argument>, <argument pos:start="201:38" pos:end="201:41"><expr pos:start="201:38" pos:end="201:41"><name pos:start="201:38" pos:end="201:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="203:5" pos:end="207:5"><if pos:start="203:5" pos:end="207:5">if <condition pos:start="203:8" pos:end="203:23">(<expr pos:start="203:9" pos:end="203:22"><operator pos:start="203:9" pos:end="203:9">!</operator><name pos:start="203:10" pos:end="203:22"><name pos:start="203:10" pos:end="203:10">d</name><operator pos:start="203:11" pos:end="203:12">-&gt;</operator><name pos:start="203:13" pos:end="203:22">hotplugged</name></name></expr>)</condition> <block pos:start="203:25" pos:end="207:5">{<block_content pos:start="205:9" pos:end="205:54">

        <expr_stmt pos:start="205:9" pos:end="205:54"><expr pos:start="205:9" pos:end="205:53"><call pos:start="205:9" pos:end="205:53"><name pos:start="205:9" pos:end="205:38">scsi_bus_legacy_handle_cmdline</name><argument_list pos:start="205:39" pos:end="205:53">(<argument pos:start="205:40" pos:end="205:46"><expr pos:start="205:40" pos:end="205:46"><operator pos:start="205:40" pos:end="205:40">&amp;</operator><name pos:start="205:41" pos:end="205:46"><name pos:start="205:41" pos:end="205:41">s</name><operator pos:start="205:42" pos:end="205:43">-&gt;</operator><name pos:start="205:44" pos:end="205:46">bus</name></name></expr></argument>, <argument pos:start="205:49" pos:end="205:52"><expr pos:start="205:49" pos:end="205:52"><name pos:start="205:49" pos:end="205:52">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
