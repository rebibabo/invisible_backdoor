<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23190.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:34">rdma_start_incoming_migration</name><parameter_list pos:start="1:35" pos:end="1:71">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:56">host_port</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:63">Error</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier><modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:17">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">RDMAContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:21">rdma</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:56"><expr pos:start="13:5" pos:end="13:55"><call pos:start="13:5" pos:end="13:55"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:55">(<argument pos:start="13:13" pos:end="13:54"><expr pos:start="13:13" pos:end="13:54"><literal type="string" pos:start="13:13" pos:end="13:54">"Starting RDMA-based incoming migration\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:54"><expr pos:start="15:5" pos:end="15:53"><name pos:start="15:5" pos:end="15:8">rdma</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:53"><name pos:start="15:12" pos:end="15:30">qemu_rdma_data_init</name><argument_list pos:start="15:31" pos:end="15:53">(<argument pos:start="15:32" pos:end="15:40"><expr pos:start="15:32" pos:end="15:40"><name pos:start="15:32" pos:end="15:40">host_port</name></expr></argument>, <argument pos:start="15:43" pos:end="15:52"><expr pos:start="15:43" pos:end="15:52"><operator pos:start="15:43" pos:end="15:43">&amp;</operator><name pos:start="15:44" pos:end="15:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:12">rdma</name> <operator pos:start="19:14" pos:end="19:15">==</operator> <name pos:start="19:17" pos:end="19:20">NULL</name></expr>)</condition> <block pos:start="19:23" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:48"><expr pos:start="27:5" pos:end="27:47"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:47"><name pos:start="27:11" pos:end="27:29">qemu_rdma_dest_init</name><argument_list pos:start="27:30" pos:end="27:47">(<argument pos:start="27:31" pos:end="27:34"><expr pos:start="27:31" pos:end="27:34"><name pos:start="27:31" pos:end="27:34">rdma</name></expr></argument>, <argument pos:start="27:37" pos:end="27:46"><expr pos:start="27:37" pos:end="27:46"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:46">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:12">(<expr pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">ret</name></expr>)</condition> <block pos:start="31:14" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:17">

        <goto pos:start="33:9" pos:end="33:17">goto <name pos:start="33:14" pos:end="33:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><call pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:11">DPRINTF</name><argument_list pos:start="39:12" pos:end="39:44">(<argument pos:start="39:13" pos:end="39:43"><expr pos:start="39:13" pos:end="39:43"><literal type="string" pos:start="39:13" pos:end="39:43">"qemu_rdma_dest_init success\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:7">ret</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:41"><name pos:start="43:11" pos:end="43:21">rdma_listen</name><argument_list pos:start="43:22" pos:end="43:41">(<argument pos:start="43:23" pos:end="43:37"><expr pos:start="43:23" pos:end="43:37"><name pos:start="43:23" pos:end="43:37"><name pos:start="43:23" pos:end="43:26">rdma</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:37">listen_id</name></name></expr></argument>, <argument pos:start="43:40" pos:end="43:40"><expr pos:start="43:40" pos:end="43:40"><literal type="number" pos:start="43:40" pos:end="43:40">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:12">(<expr pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">ret</name></expr>)</condition> <block pos:start="47:14" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:17">

        <expr_stmt pos:start="49:9" pos:end="49:44"><expr pos:start="49:9" pos:end="49:43"><call pos:start="49:9" pos:end="49:43"><name pos:start="49:9" pos:end="49:13">ERROR</name><argument_list pos:start="49:14" pos:end="49:43">(<argument pos:start="49:15" pos:end="49:18"><expr pos:start="49:15" pos:end="49:18"><name pos:start="49:15" pos:end="49:18">errp</name></expr></argument>, <argument pos:start="49:21" pos:end="49:42"><expr pos:start="49:21" pos:end="49:42"><literal type="string" pos:start="49:21" pos:end="49:42">"listening on socket!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:17">goto <name pos:start="51:14" pos:end="51:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:37"><expr pos:start="57:5" pos:end="57:36"><call pos:start="57:5" pos:end="57:36"><name pos:start="57:5" pos:end="57:11">DPRINTF</name><argument_list pos:start="57:12" pos:end="57:36">(<argument pos:start="57:13" pos:end="57:35"><expr pos:start="57:13" pos:end="57:35"><literal type="string" pos:start="57:13" pos:end="57:35">"rdma_listen success\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="65:53"><expr pos:start="61:5" pos:end="65:52"><call pos:start="61:5" pos:end="65:52"><name pos:start="61:5" pos:end="61:24">qemu_set_fd_handler2</name><argument_list pos:start="61:25" pos:end="65:52">(<argument pos:start="61:26" pos:end="61:42"><expr pos:start="61:26" pos:end="61:42"><name pos:start="61:26" pos:end="61:42"><name pos:start="61:26" pos:end="61:29">rdma</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:38">channel</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:42">fd</name></name></expr></argument>, <argument pos:start="61:45" pos:end="61:48"><expr pos:start="61:45" pos:end="61:48"><name pos:start="61:45" pos:end="61:48">NULL</name></expr></argument>,

                         <argument pos:start="63:26" pos:end="63:55"><expr pos:start="63:26" pos:end="63:55"><name pos:start="63:26" pos:end="63:55">rdma_accept_incoming_migration</name></expr></argument>, <argument pos:start="63:58" pos:end="63:61"><expr pos:start="63:58" pos:end="63:61"><name pos:start="63:58" pos:end="63:61">NULL</name></expr></argument>,

                            <argument pos:start="65:29" pos:end="65:51"><expr pos:start="65:29" pos:end="65:51"><operator pos:start="65:29" pos:end="65:29">(</operator><name pos:start="65:30" pos:end="65:33">void</name> <operator pos:start="65:35" pos:end="65:35">*</operator><operator pos:start="65:36" pos:end="65:36">)</operator><operator pos:start="65:37" pos:end="65:37">(</operator><name pos:start="65:38" pos:end="65:45">intptr_t</name><operator pos:start="65:46" pos:end="65:46">)</operator> <name pos:start="65:48" pos:end="65:51">rdma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:11">return;</return>

<label pos:start="69:1" pos:end="69:4"><name pos:start="69:1" pos:end="69:3">err</name>:</label>

    <expr_stmt pos:start="71:5" pos:end="71:37"><expr pos:start="71:5" pos:end="71:36"><call pos:start="71:5" pos:end="71:36"><name pos:start="71:5" pos:end="71:19">error_propagate</name><argument_list pos:start="71:20" pos:end="71:36">(<argument pos:start="71:21" pos:end="71:24"><expr pos:start="71:21" pos:end="71:24"><name pos:start="71:21" pos:end="71:24">errp</name></expr></argument>, <argument pos:start="71:27" pos:end="71:35"><expr pos:start="71:27" pos:end="71:35"><name pos:start="71:27" pos:end="71:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:17"><expr pos:start="73:5" pos:end="73:16"><call pos:start="73:5" pos:end="73:16"><name pos:start="73:5" pos:end="73:10">g_free</name><argument_list pos:start="73:11" pos:end="73:16">(<argument pos:start="73:12" pos:end="73:15"><expr pos:start="73:12" pos:end="73:15"><name pos:start="73:12" pos:end="73:15">rdma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
