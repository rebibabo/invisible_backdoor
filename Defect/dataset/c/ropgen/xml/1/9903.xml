<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9903.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">free_stream</name><parameter_list pos:start="1:24" pos:end="1:39">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:32">AVStream</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier><modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">pst</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:18">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:23">= <expr pos:start="5:20" pos:end="5:23"><operator pos:start="5:20" pos:end="5:20">*</operator><name pos:start="5:21" pos:end="5:23">pst</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:12">(<expr pos:start="11:9" pos:end="11:11"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:11">st</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>



    <for pos:start="17:5" pos:end="19:41">for <control pos:start="17:9" pos:end="17:42">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:37"><expr pos:start="17:17" pos:end="17:36"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:36"><name pos:start="17:21" pos:end="17:22">st</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:36">nb_side_data</name></name></expr>;</condition> <incr pos:start="17:39" pos:end="17:41"><expr pos:start="17:39" pos:end="17:41"><name pos:start="17:39" pos:end="17:39">i</name><operator pos:start="17:40" pos:end="17:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:9" pos:end="19:41"><block_content pos:start="19:9" pos:end="19:41">

        <expr_stmt pos:start="19:9" pos:end="19:41"><expr pos:start="19:9" pos:end="19:40"><call pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:16">av_freep</name><argument_list pos:start="19:17" pos:end="19:40">(<argument pos:start="19:18" pos:end="19:39"><expr pos:start="19:18" pos:end="19:39"><operator pos:start="19:18" pos:end="19:18">&amp;</operator><name pos:start="19:19" pos:end="19:34"><name pos:start="19:19" pos:end="19:20">st</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:31">side_data</name><index pos:start="19:32" pos:end="19:34">[<expr pos:start="19:33" pos:end="19:33"><name pos:start="19:33" pos:end="19:33">i</name></expr>]</index></name><operator pos:start="19:35" pos:end="19:35">.</operator><name pos:start="19:36" pos:end="19:39">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><call pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:12">av_freep</name><argument_list pos:start="21:13" pos:end="21:28">(<argument pos:start="21:14" pos:end="21:27"><expr pos:start="21:14" pos:end="21:27"><operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:27"><name pos:start="21:15" pos:end="21:16">st</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:27">side_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:36"><if pos:start="25:5" pos:end="27:36">if <condition pos:start="25:8" pos:end="25:19">(<expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:10">st</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:18">parser</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:36"><block_content pos:start="27:9" pos:end="27:36">

        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><call pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:23">av_parser_close</name><argument_list pos:start="27:24" pos:end="27:35">(<argument pos:start="27:25" pos:end="27:34"><expr pos:start="27:25" pos:end="27:34"><name pos:start="27:25" pos:end="27:34"><name pos:start="27:25" pos:end="27:26">st</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:34">parser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:43"><if pos:start="31:5" pos:end="33:43">if <condition pos:start="31:8" pos:end="31:30">(<expr pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:10">st</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:24">attached_pic</name><operator pos:start="31:25" pos:end="31:25">.</operator><name pos:start="31:26" pos:end="31:29">data</name></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:43"><block_content pos:start="33:9" pos:end="33:43">

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><call pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:23">av_packet_unref</name><argument_list pos:start="33:24" pos:end="33:42">(<argument pos:start="33:25" pos:end="33:41"><expr pos:start="33:25" pos:end="33:41"><operator pos:start="33:25" pos:end="33:25">&amp;</operator><name pos:start="33:26" pos:end="33:41"><name pos:start="33:26" pos:end="33:27">st</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:41">attached_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="53:5"><if pos:start="37:5" pos:end="53:5">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:10">st</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:20">internal</name></name></expr>)</condition> <block pos:start="37:23" pos:end="53:5">{<block_content pos:start="39:9" pos:end="51:61">

        <expr_stmt pos:start="39:9" pos:end="39:51"><expr pos:start="39:9" pos:end="39:50"><call pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:28">avcodec_free_context</name><argument_list pos:start="39:29" pos:end="39:50">(<argument pos:start="39:30" pos:end="39:49"><expr pos:start="39:30" pos:end="39:49"><operator pos:start="39:30" pos:end="39:30">&amp;</operator><name pos:start="39:31" pos:end="39:49"><name pos:start="39:31" pos:end="39:32">st</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:42">internal</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:49">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="41:9" pos:end="47:9">for <control pos:start="41:13" pos:end="41:52">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">i</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:47"><expr pos:start="41:21" pos:end="41:46"><name pos:start="41:21" pos:end="41:21">i</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <name pos:start="41:25" pos:end="41:46"><name pos:start="41:25" pos:end="41:26">st</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:36">internal</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:46">nb_bsfcs</name></name></expr>;</condition> <incr pos:start="41:49" pos:end="41:51"><expr pos:start="41:49" pos:end="41:51"><name pos:start="41:49" pos:end="41:49">i</name><operator pos:start="41:50" pos:end="41:51">++</operator></expr></incr>)</control> <block pos:start="41:54" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:43">

            <expr_stmt pos:start="43:13" pos:end="43:49"><expr pos:start="43:13" pos:end="43:48"><call pos:start="43:13" pos:end="43:48"><name pos:start="43:13" pos:end="43:23">av_bsf_free</name><argument_list pos:start="43:24" pos:end="43:48">(<argument pos:start="43:25" pos:end="43:47"><expr pos:start="43:25" pos:end="43:47"><operator pos:start="43:25" pos:end="43:25">&amp;</operator><name pos:start="43:26" pos:end="43:47"><name pos:start="43:26" pos:end="43:27">st</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:37">internal</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:44">bsfcs</name><index pos:start="43:45" pos:end="43:47">[<expr pos:start="43:46" pos:end="43:46"><name pos:start="43:46" pos:end="43:46">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:43"><expr pos:start="45:13" pos:end="45:42"><call pos:start="45:13" pos:end="45:42"><name pos:start="45:13" pos:end="45:20">av_freep</name><argument_list pos:start="45:21" pos:end="45:42">(<argument pos:start="45:22" pos:end="45:41"><expr pos:start="45:22" pos:end="45:41"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:41"><name pos:start="45:23" pos:end="45:24">st</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:34">internal</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:41">bsfcs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="49:9" pos:end="49:58"><expr pos:start="49:9" pos:end="49:57"><call pos:start="49:9" pos:end="49:57"><name pos:start="49:9" pos:end="49:19">av_bsf_free</name><argument_list pos:start="49:20" pos:end="49:57">(<argument pos:start="49:21" pos:end="49:56"><expr pos:start="49:21" pos:end="49:56"><operator pos:start="49:21" pos:end="49:21">&amp;</operator><name pos:start="49:22" pos:end="49:56"><name pos:start="49:22" pos:end="49:23">st</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:33">internal</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:52">extract_extradata</name><operator pos:start="49:53" pos:end="49:53">.</operator><name pos:start="49:54" pos:end="49:56">bsf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:61"><expr pos:start="51:9" pos:end="51:60"><call pos:start="51:9" pos:end="51:60"><name pos:start="51:9" pos:end="51:22">av_packet_free</name><argument_list pos:start="51:23" pos:end="51:60">(<argument pos:start="51:24" pos:end="51:59"><expr pos:start="51:24" pos:end="51:59"><operator pos:start="51:24" pos:end="51:24">&amp;</operator><name pos:start="51:25" pos:end="51:59"><name pos:start="51:25" pos:end="51:26">st</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:36">internal</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:55">extract_extradata</name><operator pos:start="51:56" pos:end="51:56">.</operator><name pos:start="51:57" pos:end="51:59">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:28"><expr pos:start="55:5" pos:end="55:27"><call pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:12">av_freep</name><argument_list pos:start="55:13" pos:end="55:27">(<argument pos:start="55:14" pos:end="55:26"><expr pos:start="55:14" pos:end="55:26"><operator pos:start="55:14" pos:end="55:14">&amp;</operator><name pos:start="55:15" pos:end="55:26"><name pos:start="55:15" pos:end="55:16">st</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:26">internal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:32"><expr pos:start="59:5" pos:end="59:31"><call pos:start="59:5" pos:end="59:31"><name pos:start="59:5" pos:end="59:16">av_dict_free</name><argument_list pos:start="59:17" pos:end="59:31">(<argument pos:start="59:18" pos:end="59:30"><expr pos:start="59:18" pos:end="59:30"><operator pos:start="59:18" pos:end="59:18">&amp;</operator><name pos:start="59:19" pos:end="59:30"><name pos:start="59:19" pos:end="59:20">st</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:30">metadata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:43"><expr pos:start="61:5" pos:end="61:42"><call pos:start="61:5" pos:end="61:42"><name pos:start="61:5" pos:end="61:27">avcodec_parameters_free</name><argument_list pos:start="61:28" pos:end="61:42">(<argument pos:start="61:29" pos:end="61:41"><expr pos:start="61:29" pos:end="61:41"><operator pos:start="61:29" pos:end="61:29">&amp;</operator><name pos:start="61:30" pos:end="61:41"><name pos:start="61:30" pos:end="61:31">st</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:41">codecpar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:34"><expr pos:start="63:5" pos:end="63:33"><call pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:12">av_freep</name><argument_list pos:start="63:13" pos:end="63:33">(<argument pos:start="63:14" pos:end="63:32"><expr pos:start="63:14" pos:end="63:32"><operator pos:start="63:14" pos:end="63:14">&amp;</operator><name pos:start="63:15" pos:end="63:32"><name pos:start="63:15" pos:end="63:16">st</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:28">probe_data</name><operator pos:start="63:29" pos:end="63:29">.</operator><name pos:start="63:30" pos:end="63:32">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="68:0"><expr pos:start="65:5" pos:end="65:32"><call pos:start="65:5" pos:end="65:32"><name pos:start="65:5" pos:end="65:12">av_freep</name><argument_list pos:start="65:13" pos:end="65:32">(<argument pos:start="65:14" pos:end="65:31"><expr pos:start="65:14" pos:end="65:31"><operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:31"><name pos:start="65:15" pos:end="65:16">st</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:31">index_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="67:1" pos:end="67:21">#<cpp:directive pos:start="67:2" pos:end="67:3">if</cpp:directive> <expr pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:21">FF_API_LAVF_AVCTX</name></expr></cpp:if>

<decl_stmt pos:start="69:1" pos:end="71:36"><decl pos:start="69:1" pos:end="71:35"><type pos:start="69:1" pos:end="69:31"><name pos:start="69:1" pos:end="69:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

    <name pos:start="71:5" pos:end="71:12">av_freep</name><argument_list pos:start="71:13" pos:end="71:35">(<argument pos:start="71:14" pos:end="71:34"><expr pos:start="71:14" pos:end="71:34"><operator pos:start="71:14" pos:end="71:14">&amp;</operator><name pos:start="71:15" pos:end="71:34"><name pos:start="71:15" pos:end="71:16">st</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:23">codec</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:34">extradata</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:42"><expr pos:start="73:5" pos:end="73:41"><call pos:start="73:5" pos:end="73:41"><name pos:start="73:5" pos:end="73:12">av_freep</name><argument_list pos:start="73:13" pos:end="73:41">(<argument pos:start="73:14" pos:end="73:40"><expr pos:start="73:14" pos:end="73:40"><operator pos:start="73:14" pos:end="73:14">&amp;</operator><name pos:start="73:15" pos:end="73:40"><name pos:start="73:15" pos:end="73:16">st</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:23">codec</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:40">subtitle_header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:25"><expr pos:start="75:5" pos:end="75:24"><call pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:12">av_freep</name><argument_list pos:start="75:13" pos:end="75:24">(<argument pos:start="75:14" pos:end="75:23"><expr pos:start="75:14" pos:end="75:23"><operator pos:start="75:14" pos:end="75:14">&amp;</operator><name pos:start="75:15" pos:end="75:23"><name pos:start="75:15" pos:end="75:16">st</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:23">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt pos:start="77:1" pos:end="81:29"><decl pos:start="77:1" pos:end="81:28"><type pos:start="77:1" pos:end="80:0"><name pos:start="77:1" pos:end="80:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif>

    <name pos:start="81:5" pos:end="81:12">av_freep</name><argument_list pos:start="81:13" pos:end="81:28">(<argument pos:start="81:14" pos:end="81:27"><expr pos:start="81:14" pos:end="81:27"><operator pos:start="81:14" pos:end="81:14">&amp;</operator><name pos:start="81:15" pos:end="81:27"><name pos:start="81:15" pos:end="81:16">st</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:27">priv_data</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <if_stmt pos:start="83:5" pos:end="85:44"><if pos:start="83:5" pos:end="85:44">if <condition pos:start="83:8" pos:end="83:17">(<expr pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:10">st</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:16">info</name></name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:44"><block_content pos:start="85:9" pos:end="85:44">

        <expr_stmt pos:start="85:9" pos:end="85:44"><expr pos:start="85:9" pos:end="85:43"><call pos:start="85:9" pos:end="85:43"><name pos:start="85:9" pos:end="85:16">av_freep</name><argument_list pos:start="85:17" pos:end="85:43">(<argument pos:start="85:18" pos:end="85:42"><expr pos:start="85:18" pos:end="85:42"><operator pos:start="85:18" pos:end="85:18">&amp;</operator><name pos:start="85:19" pos:end="85:42"><name pos:start="85:19" pos:end="85:20">st</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:26">info</name><operator pos:start="85:27" pos:end="85:28">-&gt;</operator><name pos:start="85:29" pos:end="85:42">duration_error</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:24"><expr pos:start="87:5" pos:end="87:23"><call pos:start="87:5" pos:end="87:23"><name pos:start="87:5" pos:end="87:12">av_freep</name><argument_list pos:start="87:13" pos:end="87:23">(<argument pos:start="87:14" pos:end="87:22"><expr pos:start="87:14" pos:end="87:22"><operator pos:start="87:14" pos:end="87:14">&amp;</operator><name pos:start="87:15" pos:end="87:22"><name pos:start="87:15" pos:end="87:16">st</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:22">info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:53"><expr pos:start="89:5" pos:end="89:52"><call pos:start="89:5" pos:end="89:52"><name pos:start="89:5" pos:end="89:12">av_freep</name><argument_list pos:start="89:13" pos:end="89:52">(<argument pos:start="89:14" pos:end="89:51"><expr pos:start="89:14" pos:end="89:51"><operator pos:start="89:14" pos:end="89:14">&amp;</operator><name pos:start="89:15" pos:end="89:51"><name pos:start="89:15" pos:end="89:16">st</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:51">recommended_encoder_configuration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:28"><expr pos:start="91:5" pos:end="91:27"><call pos:start="91:5" pos:end="91:27"><name pos:start="91:5" pos:end="91:12">av_freep</name><argument_list pos:start="91:13" pos:end="91:27">(<argument pos:start="91:14" pos:end="91:26"><expr pos:start="91:14" pos:end="91:26"><operator pos:start="91:14" pos:end="91:14">&amp;</operator><name pos:start="91:15" pos:end="91:26"><name pos:start="91:15" pos:end="91:16">st</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:26">priv_pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:18"><expr pos:start="95:5" pos:end="95:17"><call pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:12">av_freep</name><argument_list pos:start="95:13" pos:end="95:17">(<argument pos:start="95:14" pos:end="95:16"><expr pos:start="95:14" pos:end="95:16"><name pos:start="95:14" pos:end="95:16">pst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
