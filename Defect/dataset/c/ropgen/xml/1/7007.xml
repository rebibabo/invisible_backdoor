<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7007.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">get_video_frame</name><parameter_list pos:start="1:27" pos:end="1:58">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:37">VideoState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">is</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:50">AVFrame</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:23">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">got_picture</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:18"><if pos:start="9:5" pos:end="11:18">if <condition pos:start="9:8" pos:end="9:69">(<expr pos:start="9:9" pos:end="9:68"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:20">got_picture</name> <operator pos:start="9:22" pos:end="9:22">=</operator> <call pos:start="9:24" pos:end="9:63"><name pos:start="9:24" pos:end="9:43">decoder_decode_frame</name><argument_list pos:start="9:44" pos:end="9:63">(<argument pos:start="9:45" pos:end="9:55"><expr pos:start="9:45" pos:end="9:55"><operator pos:start="9:45" pos:end="9:45">&amp;</operator><name pos:start="9:46" pos:end="9:55"><name pos:start="9:46" pos:end="9:47">is</name><operator pos:start="9:48" pos:end="9:49">-&gt;</operator><name pos:start="9:50" pos:end="9:55">viddec</name></name></expr></argument>, <argument pos:start="9:58" pos:end="9:62"><expr pos:start="9:58" pos:end="9:62"><name pos:start="9:58" pos:end="9:62">frame</name></expr></argument>)</argument_list></call><operator pos:start="9:64" pos:end="9:64">)</operator> <operator pos:start="9:66" pos:end="9:66">&lt;</operator> <literal type="number" pos:start="9:68" pos:end="9:68">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:18"><block_content pos:start="11:9" pos:end="11:18">

        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="57:5"><if pos:start="15:5" pos:end="57:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:19">got_picture</name></expr>)</condition> <block pos:start="15:22" pos:end="57:5">{<block_content pos:start="17:9" pos:end="55:9">

        <decl_stmt pos:start="17:9" pos:end="17:26"><decl pos:start="17:9" pos:end="17:25"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">double</name></type> <name pos:start="17:16" pos:end="17:19">dpts</name> <init pos:start="17:21" pos:end="17:25">= <expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:25">NAN</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="23:64"><if pos:start="21:9" pos:end="23:64">if <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:17">frame</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:22">pts</name></name> <operator pos:start="21:24" pos:end="21:25">!=</operator> <name pos:start="21:27" pos:end="21:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:64"><block_content pos:start="23:13" pos:end="23:64">

            <expr_stmt pos:start="23:13" pos:end="23:64"><expr pos:start="23:13" pos:end="23:63"><name pos:start="23:13" pos:end="23:16">dpts</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:50"><name pos:start="23:20" pos:end="23:25">av_q2d</name><argument_list pos:start="23:26" pos:end="23:50">(<argument pos:start="23:27" pos:end="23:49"><expr pos:start="23:27" pos:end="23:49"><name pos:start="23:27" pos:end="23:49"><name pos:start="23:27" pos:end="23:28">is</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:38">video_st</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:49">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:52" pos:end="23:52">*</operator> <name pos:start="23:54" pos:end="23:63"><name pos:start="23:54" pos:end="23:58">frame</name><operator pos:start="23:59" pos:end="23:60">-&gt;</operator><name pos:start="23:61" pos:end="23:63">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:95"><expr pos:start="27:9" pos:end="27:94"><name pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:13">frame</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:34">sample_aspect_ratio</name></name> <operator pos:start="27:36" pos:end="27:36">=</operator> <call pos:start="27:38" pos:end="27:94"><name pos:start="27:38" pos:end="27:65">av_guess_sample_aspect_ratio</name><argument_list pos:start="27:66" pos:end="27:94">(<argument pos:start="27:67" pos:end="27:72"><expr pos:start="27:67" pos:end="27:72"><name pos:start="27:67" pos:end="27:72"><name pos:start="27:67" pos:end="27:68">is</name><operator pos:start="27:69" pos:end="27:70">-&gt;</operator><name pos:start="27:71" pos:end="27:72">ic</name></name></expr></argument>, <argument pos:start="27:75" pos:end="27:86"><expr pos:start="27:75" pos:end="27:86"><name pos:start="27:75" pos:end="27:86"><name pos:start="27:75" pos:end="27:76">is</name><operator pos:start="27:77" pos:end="27:78">-&gt;</operator><name pos:start="27:79" pos:end="27:86">video_st</name></name></expr></argument>, <argument pos:start="27:89" pos:end="27:93"><expr pos:start="27:89" pos:end="27:93"><name pos:start="27:89" pos:end="27:93">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="55:9"><if pos:start="31:9" pos:end="55:9">if <condition pos:start="31:12" pos:end="31:91">(<expr pos:start="31:13" pos:end="31:90"><name pos:start="31:13" pos:end="31:21">framedrop</name><operator pos:start="31:22" pos:end="31:22">&gt;</operator><literal type="number" pos:start="31:23" pos:end="31:23">0</literal> <operator pos:start="31:25" pos:end="31:26">||</operator> <operator pos:start="31:28" pos:end="31:28">(</operator><name pos:start="31:29" pos:end="31:37">framedrop</name> <operator pos:start="31:39" pos:end="31:40">&amp;&amp;</operator> <call pos:start="31:42" pos:end="31:65"><name pos:start="31:42" pos:end="31:61">get_master_sync_type</name><argument_list pos:start="31:62" pos:end="31:65">(<argument pos:start="31:63" pos:end="31:64"><expr pos:start="31:63" pos:end="31:64"><name pos:start="31:63" pos:end="31:64">is</name></expr></argument>)</argument_list></call> <operator pos:start="31:67" pos:end="31:68">!=</operator> <name pos:start="31:70" pos:end="31:89">AV_SYNC_VIDEO_MASTER</name><operator pos:start="31:90" pos:end="31:90">)</operator></expr>)</condition> <block pos:start="31:93" pos:end="55:9">{<block_content pos:start="33:13" pos:end="53:13">

            <if_stmt pos:start="33:13" pos:end="53:13"><if pos:start="33:13" pos:end="53:13">if <condition pos:start="33:16" pos:end="33:45">(<expr pos:start="33:17" pos:end="33:44"><name pos:start="33:17" pos:end="33:26"><name pos:start="33:17" pos:end="33:21">frame</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:26">pts</name></name> <operator pos:start="33:28" pos:end="33:29">!=</operator> <name pos:start="33:31" pos:end="33:44">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="33:47" pos:end="53:13">{<block_content pos:start="35:17" pos:end="51:17">

                <decl_stmt pos:start="35:17" pos:end="35:58"><decl pos:start="35:17" pos:end="35:57"><type pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22">double</name></type> <name pos:start="35:24" pos:end="35:27">diff</name> <init pos:start="35:29" pos:end="35:57">= <expr pos:start="35:31" pos:end="35:57"><name pos:start="35:31" pos:end="35:34">dpts</name> <operator pos:start="35:36" pos:end="35:36">-</operator> <call pos:start="35:38" pos:end="35:57"><name pos:start="35:38" pos:end="35:53">get_master_clock</name><argument_list pos:start="35:54" pos:end="35:57">(<argument pos:start="35:55" pos:end="35:56"><expr pos:start="35:55" pos:end="35:56"><name pos:start="35:55" pos:end="35:56">is</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="37:17" pos:end="51:17"><if pos:start="37:17" pos:end="51:17">if <condition pos:start="37:20" pos:end="43:42">(<expr pos:start="37:21" pos:end="43:41"><operator pos:start="37:21" pos:end="37:21">!</operator><call pos:start="37:22" pos:end="37:32"><name pos:start="37:22" pos:end="37:26">isnan</name><argument_list pos:start="37:27" pos:end="37:32">(<argument pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><name pos:start="37:28" pos:end="37:31">diff</name></expr></argument>)</argument_list></call> <operator pos:start="37:34" pos:end="37:35">&amp;&amp;</operator> <call pos:start="37:37" pos:end="37:46"><name pos:start="37:37" pos:end="37:40">fabs</name><argument_list pos:start="37:41" pos:end="37:46">(<argument pos:start="37:42" pos:end="37:45"><expr pos:start="37:42" pos:end="37:45"><name pos:start="37:42" pos:end="37:45">diff</name></expr></argument>)</argument_list></call> <operator pos:start="37:48" pos:end="37:48">&lt;</operator> <name pos:start="37:50" pos:end="37:68">AV_NOSYNC_THRESHOLD</name> <operator pos:start="37:70" pos:end="37:71">&amp;&amp;</operator>

                    <name pos:start="39:21" pos:end="39:24">diff</name> <operator pos:start="39:26" pos:end="39:26">-</operator> <name pos:start="39:28" pos:end="39:54"><name pos:start="39:28" pos:end="39:29">is</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:54">frame_last_filter_delay</name></name> <operator pos:start="39:56" pos:end="39:56">&lt;</operator> <literal type="number" pos:start="39:58" pos:end="39:58">0</literal> <operator pos:start="39:60" pos:end="39:61">&amp;&amp;</operator>

                    <name pos:start="41:21" pos:end="41:41"><name pos:start="41:21" pos:end="41:22">is</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:30">viddec</name><operator pos:start="41:31" pos:end="41:31">.</operator><name pos:start="41:32" pos:end="41:41">pkt_serial</name></name> <operator pos:start="41:43" pos:end="41:44">==</operator> <name pos:start="41:46" pos:end="41:62"><name pos:start="41:46" pos:end="41:47">is</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:55">vidclk</name><operator pos:start="41:56" pos:end="41:56">.</operator><name pos:start="41:57" pos:end="41:62">serial</name></name> <operator pos:start="41:64" pos:end="41:65">&amp;&amp;</operator>

                    <name pos:start="43:21" pos:end="43:41"><name pos:start="43:21" pos:end="43:22">is</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:30">videoq</name><operator pos:start="43:31" pos:end="43:31">.</operator><name pos:start="43:32" pos:end="43:41">nb_packets</name></name></expr>)</condition> <block pos:start="43:44" pos:end="51:17">{<block_content pos:start="45:21" pos:end="49:36">

                    <expr_stmt pos:start="45:21" pos:end="45:44"><expr pos:start="45:21" pos:end="45:43"><name pos:start="45:21" pos:end="45:41"><name pos:start="45:21" pos:end="45:22">is</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:41">frame_drops_early</name></name><operator pos:start="45:42" pos:end="45:43">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="47:21" pos:end="47:42"><expr pos:start="47:21" pos:end="47:41"><call pos:start="47:21" pos:end="47:41"><name pos:start="47:21" pos:end="47:34">av_frame_unref</name><argument_list pos:start="47:35" pos:end="47:41">(<argument pos:start="47:36" pos:end="47:40"><expr pos:start="47:36" pos:end="47:40"><name pos:start="47:36" pos:end="47:40">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:36"><expr pos:start="49:21" pos:end="49:35"><name pos:start="49:21" pos:end="49:31">got_picture</name> <operator pos:start="49:33" pos:end="49:33">=</operator> <literal type="number" pos:start="49:35" pos:end="49:35">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="61:5" pos:end="61:23">return <expr pos:start="61:12" pos:end="61:22"><name pos:start="61:12" pos:end="61:22">got_picture</name></expr>;</return>

</block_content>}</block></function>
</unit>
