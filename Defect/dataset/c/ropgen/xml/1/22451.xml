<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22451.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:44">mxf_parse_physical_source_package</name><parameter_list pos:start="1:45" pos:end="1:99">(<parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><name pos:start="1:46" pos:end="1:55">MXFContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">mxf</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:84"><decl pos:start="1:63" pos:end="1:84"><type pos:start="1:63" pos:end="1:84"><name pos:start="1:63" pos:end="1:70">MXFTrack</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:84">source_track</name></decl></parameter>, <parameter pos:start="1:87" pos:end="1:98"><decl pos:start="1:87" pos:end="1:98"><type pos:start="1:87" pos:end="1:98"><name pos:start="1:87" pos:end="1:94">AVStream</name> <modifier pos:start="1:96" pos:end="1:96">*</modifier></type><name pos:start="1:97" pos:end="1:98">st</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="159:1">{<block_content pos:start="5:5" pos:end="157:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFPackage</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:28">temp_package</name> <init pos:start="5:30" pos:end="5:35">= <expr pos:start="5:32" pos:end="5:35"><name pos:start="5:32" pos:end="5:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">MXFPackage</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:32">physical_package</name> <init pos:start="7:34" pos:end="7:39">= <expr pos:start="7:36" pos:end="7:39"><name pos:start="7:36" pos:end="7:39">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">MXFTrack</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:28">physical_track</name> <init pos:start="9:30" pos:end="9:35">= <expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:26">MXFStructuralComponent</name> <modifier pos:start="11:28" pos:end="11:28">*</modifier></type><name pos:start="11:29" pos:end="11:37">component</name> <init pos:start="11:39" pos:end="11:44">= <expr pos:start="11:41" pos:end="11:44"><name pos:start="11:41" pos:end="11:44">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:26">MXFStructuralComponent</name> <modifier pos:start="13:28" pos:end="13:28">*</modifier></type><name pos:start="13:29" pos:end="13:38">sourceclip</name> <init pos:start="13:40" pos:end="13:45">= <expr pos:start="13:42" pos:end="13:45"><name pos:start="13:42" pos:end="13:45">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:39"><type pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:24">MXFTimecodeComponent</name> <modifier pos:start="15:26" pos:end="15:26">*</modifier></type><name pos:start="15:27" pos:end="15:32">mxf_tc</name> <init pos:start="15:34" pos:end="15:39">= <expr pos:start="15:36" pos:end="15:39"><name pos:start="15:36" pos:end="15:39">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:46"><decl pos:start="17:5" pos:end="17:45"><type pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:24">MXFPulldownComponent</name> <modifier pos:start="17:26" pos:end="17:26">*</modifier></type><name pos:start="17:27" pos:end="17:38">mxf_pulldown</name> <init pos:start="17:40" pos:end="17:45">= <expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:12"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">j</name></decl>, <decl pos:start="19:15" pos:end="19:15"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:15">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:14">AVTimecode</name></type> <name pos:start="21:16" pos:end="21:17">tc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:14"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:27"><decl pos:start="25:5" pos:end="25:26"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">int64_t</name></type> <name pos:start="25:13" pos:end="25:26">start_position</name></decl>;</decl_stmt>



    <for pos:start="29:5" pos:end="153:5">for <control pos:start="29:9" pos:end="29:77">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:72"><expr pos:start="29:17" pos:end="29:71"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:71"><name pos:start="29:21" pos:end="29:32">source_track</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:42">sequence</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:71">structural_components_count</name></name></expr>;</condition> <incr pos:start="29:74" pos:end="29:76"><expr pos:start="29:74" pos:end="29:76"><name pos:start="29:74" pos:end="29:74">i</name><operator pos:start="29:75" pos:end="29:76">++</operator></expr></incr>)</control> <block pos:start="29:79" pos:end="153:5">{<block_content pos:start="31:9" pos:end="151:9">

        <expr_stmt pos:start="31:9" pos:end="31:116"><expr pos:start="31:9" pos:end="31:115"><name pos:start="31:9" pos:end="31:17">component</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:115"><name pos:start="31:21" pos:end="31:42">mxf_resolve_strong_ref</name><argument_list pos:start="31:43" pos:end="31:115">(<argument pos:start="31:44" pos:end="31:46"><expr pos:start="31:44" pos:end="31:46"><name pos:start="31:44" pos:end="31:46">mxf</name></expr></argument>, <argument pos:start="31:49" pos:end="31:102"><expr pos:start="31:49" pos:end="31:102"><operator pos:start="31:49" pos:end="31:49">&amp;</operator><name pos:start="31:50" pos:end="31:102"><name pos:start="31:50" pos:end="31:61">source_track</name><operator pos:start="31:62" pos:end="31:63">-&gt;</operator><name pos:start="31:64" pos:end="31:71">sequence</name><operator pos:start="31:72" pos:end="31:73">-&gt;</operator><name pos:start="31:74" pos:end="31:99">structural_components_refs</name><index pos:start="31:100" pos:end="31:102">[<expr pos:start="31:101" pos:end="31:101"><name pos:start="31:101" pos:end="31:101">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:105" pos:end="31:114"><expr pos:start="31:105" pos:end="31:114"><name pos:start="31:105" pos:end="31:114">SourceClip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:21"><if pos:start="33:9" pos:end="35:21">if <condition pos:start="33:12" pos:end="33:23">(<expr pos:start="33:13" pos:end="33:22"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:22">component</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:21"><block_content pos:start="35:13" pos:end="35:21">

            <continue pos:start="35:13" pos:end="35:21">continue;</continue></block_content></block></if></if_stmt>



        <for pos:start="39:9" pos:end="57:9">for <control pos:start="39:13" pos:end="39:49">(<init pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">j</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</init> <condition pos:start="39:21" pos:end="39:44"><expr pos:start="39:21" pos:end="39:43"><name pos:start="39:21" pos:end="39:21">j</name> <operator pos:start="39:23" pos:end="39:23">&lt;</operator> <name pos:start="39:25" pos:end="39:43"><name pos:start="39:25" pos:end="39:27">mxf</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:43">packages_count</name></name></expr>;</condition> <incr pos:start="39:46" pos:end="39:48"><expr pos:start="39:46" pos:end="39:48"><name pos:start="39:46" pos:end="39:46">j</name><operator pos:start="39:47" pos:end="39:48">++</operator></expr></incr>)</control> <block pos:start="39:51" pos:end="57:9">{<block_content pos:start="41:13" pos:end="55:13">

            <expr_stmt pos:start="41:13" pos:end="41:94"><expr pos:start="41:13" pos:end="41:93"><name pos:start="41:13" pos:end="41:24">temp_package</name> <operator pos:start="41:26" pos:end="41:26">=</operator> <call pos:start="41:28" pos:end="41:93"><name pos:start="41:28" pos:end="41:49">mxf_resolve_strong_ref</name><argument_list pos:start="41:50" pos:end="41:93">(<argument pos:start="41:51" pos:end="41:53"><expr pos:start="41:51" pos:end="41:53"><name pos:start="41:51" pos:end="41:53">mxf</name></expr></argument>, <argument pos:start="41:56" pos:end="41:77"><expr pos:start="41:56" pos:end="41:77"><operator pos:start="41:56" pos:end="41:56">&amp;</operator><name pos:start="41:57" pos:end="41:77"><name pos:start="41:57" pos:end="41:59">mxf</name><operator pos:start="41:60" pos:end="41:61">-&gt;</operator><name pos:start="41:62" pos:end="41:74">packages_refs</name><index pos:start="41:75" pos:end="41:77">[<expr pos:start="41:76" pos:end="41:76"><name pos:start="41:76" pos:end="41:76">j</name></expr>]</index></name></expr></argument>, <argument pos:start="41:80" pos:end="41:92"><expr pos:start="41:80" pos:end="41:92"><name pos:start="41:80" pos:end="41:92">SourcePackage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="45:25"><if pos:start="43:13" pos:end="45:25">if <condition pos:start="43:16" pos:end="43:30">(<expr pos:start="43:17" pos:end="43:29"><operator pos:start="43:17" pos:end="43:17">!</operator><name pos:start="43:18" pos:end="43:29">temp_package</name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:25"><block_content pos:start="45:17" pos:end="45:25">

                <continue pos:start="45:17" pos:end="45:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="47:13" pos:end="55:13"><if pos:start="47:13" pos:end="55:13">if <condition pos:start="47:16" pos:end="47:86">(<expr pos:start="47:17" pos:end="47:85"><operator pos:start="47:17" pos:end="47:17">!</operator><call pos:start="47:18" pos:end="47:85"><name pos:start="47:18" pos:end="47:23">memcmp</name><argument_list pos:start="47:24" pos:end="47:85">(<argument pos:start="47:25" pos:end="47:49"><expr pos:start="47:25" pos:end="47:49"><name pos:start="47:25" pos:end="47:49"><name pos:start="47:25" pos:end="47:36">temp_package</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:49">package_uid</name></name></expr></argument>, <argument pos:start="47:52" pos:end="47:80"><expr pos:start="47:52" pos:end="47:80"><name pos:start="47:52" pos:end="47:80"><name pos:start="47:52" pos:end="47:60">component</name><operator pos:start="47:61" pos:end="47:62">-&gt;</operator><name pos:start="47:63" pos:end="47:80">source_package_uid</name></name></expr></argument>, <argument pos:start="47:83" pos:end="47:84"><expr pos:start="47:83" pos:end="47:84"><literal type="number" pos:start="47:83" pos:end="47:84">16</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="47:87" pos:end="55:13">{<block_content pos:start="49:17" pos:end="53:22">

                <expr_stmt pos:start="49:17" pos:end="49:48"><expr pos:start="49:17" pos:end="49:47"><name pos:start="49:17" pos:end="49:32">physical_package</name> <operator pos:start="49:34" pos:end="49:34">=</operator> <name pos:start="49:36" pos:end="49:47">temp_package</name></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:39"><expr pos:start="51:17" pos:end="51:38"><name pos:start="51:17" pos:end="51:26">sourceclip</name> <operator pos:start="51:28" pos:end="51:28">=</operator> <name pos:start="51:30" pos:end="51:38">component</name></expr>;</expr_stmt>

                <break pos:start="53:17" pos:end="53:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="59:9" pos:end="61:18"><if pos:start="59:9" pos:end="61:18">if <condition pos:start="59:12" pos:end="59:30">(<expr pos:start="59:13" pos:end="59:29"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:29">physical_package</name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:18"><block_content pos:start="61:13" pos:end="61:18">

            <break pos:start="61:13" pos:end="61:18">break;</break></block_content></block></if></if_stmt>



        <comment type="block" pos:start="65:9" pos:end="65:77">/* the name of physical source package is name of the reel or tape */</comment>

        <if_stmt pos:start="67:9" pos:end="69:79"><if pos:start="67:9" pos:end="69:79">if <condition pos:start="67:12" pos:end="67:38">(<expr pos:start="67:13" pos:end="67:37"><name pos:start="67:13" pos:end="67:37"><name pos:start="67:13" pos:end="67:28">physical_package</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:34">name</name><index pos:start="67:35" pos:end="67:37">[<expr pos:start="67:36" pos:end="67:36"><literal type="number" pos:start="67:36" pos:end="67:36">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:79"><block_content pos:start="69:13" pos:end="69:79">

            <expr_stmt pos:start="69:13" pos:end="69:79"><expr pos:start="69:13" pos:end="69:78"><call pos:start="69:13" pos:end="69:78"><name pos:start="69:13" pos:end="69:23">av_dict_set</name><argument_list pos:start="69:24" pos:end="69:78">(<argument pos:start="69:25" pos:end="69:37"><expr pos:start="69:25" pos:end="69:37"><operator pos:start="69:25" pos:end="69:25">&amp;</operator><name pos:start="69:26" pos:end="69:37"><name pos:start="69:26" pos:end="69:27">st</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:37">metadata</name></name></expr></argument>, <argument pos:start="69:40" pos:end="69:50"><expr pos:start="69:40" pos:end="69:50"><literal type="string" pos:start="69:40" pos:end="69:50">"reel_name"</literal></expr></argument>, <argument pos:start="69:53" pos:end="69:74"><expr pos:start="69:53" pos:end="69:74"><name pos:start="69:53" pos:end="69:74"><name pos:start="69:53" pos:end="69:68">physical_package</name><operator pos:start="69:69" pos:end="69:70">-&gt;</operator><name pos:start="69:71" pos:end="69:74">name</name></name></expr></argument>, <argument pos:start="69:77" pos:end="69:77"><expr pos:start="69:77" pos:end="69:77"><literal type="number" pos:start="69:77" pos:end="69:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="73:9" pos:end="77:11">/* the source timecode is calculated by adding the start_position of the sourceclip from the file source package track

         * to the start_frame of the timecode component located on one of the tracks of the physical source package.

         */</comment>

        <for pos:start="79:9" pos:end="151:9">for <control pos:start="79:13" pos:end="79:60">(<init pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:18"><name pos:start="79:14" pos:end="79:14">j</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:55"><expr pos:start="79:21" pos:end="79:54"><name pos:start="79:21" pos:end="79:21">j</name> <operator pos:start="79:23" pos:end="79:23">&lt;</operator> <name pos:start="79:25" pos:end="79:54"><name pos:start="79:25" pos:end="79:40">physical_package</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:54">tracks_count</name></name></expr>;</condition> <incr pos:start="79:57" pos:end="79:59"><expr pos:start="79:57" pos:end="79:59"><name pos:start="79:57" pos:end="79:57">j</name><operator pos:start="79:58" pos:end="79:59">++</operator></expr></incr>)</control> <block pos:start="79:62" pos:end="151:9">{<block_content pos:start="81:13" pos:end="149:13">

            <if_stmt pos:start="81:13" pos:end="87:13"><if pos:start="81:13" pos:end="87:13">if <condition pos:start="81:16" pos:end="81:106">(<expr pos:start="81:17" pos:end="81:105"><operator pos:start="81:17" pos:end="81:17">!</operator><operator pos:start="81:18" pos:end="81:18">(</operator><name pos:start="81:19" pos:end="81:32">physical_track</name> <operator pos:start="81:34" pos:end="81:34">=</operator> <call pos:start="81:36" pos:end="81:104"><name pos:start="81:36" pos:end="81:57">mxf_resolve_strong_ref</name><argument_list pos:start="81:58" pos:end="81:104">(<argument pos:start="81:59" pos:end="81:61"><expr pos:start="81:59" pos:end="81:61"><name pos:start="81:59" pos:end="81:61">mxf</name></expr></argument>, <argument pos:start="81:64" pos:end="81:96"><expr pos:start="81:64" pos:end="81:96"><operator pos:start="81:64" pos:end="81:64">&amp;</operator><name pos:start="81:65" pos:end="81:96"><name pos:start="81:65" pos:end="81:80">physical_package</name><operator pos:start="81:81" pos:end="81:82">-&gt;</operator><name pos:start="81:83" pos:end="81:93">tracks_refs</name><index pos:start="81:94" pos:end="81:96">[<expr pos:start="81:95" pos:end="81:95"><name pos:start="81:95" pos:end="81:95">j</name></expr>]</index></name></expr></argument>, <argument pos:start="81:99" pos:end="81:103"><expr pos:start="81:99" pos:end="81:103"><name pos:start="81:99" pos:end="81:103">Track</name></expr></argument>)</argument_list></call><operator pos:start="81:105" pos:end="81:105">)</operator></expr>)</condition> <block pos:start="81:108" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:25">

                <expr_stmt pos:start="83:17" pos:end="83:93"><expr pos:start="83:17" pos:end="83:92"><call pos:start="83:17" pos:end="83:92"><name pos:start="83:17" pos:end="83:22">av_log</name><argument_list pos:start="83:23" pos:end="83:92">(<argument pos:start="83:24" pos:end="83:30"><expr pos:start="83:24" pos:end="83:30"><name pos:start="83:24" pos:end="83:30"><name pos:start="83:24" pos:end="83:26">mxf</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:30">fc</name></name></expr></argument>, <argument pos:start="83:33" pos:end="83:44"><expr pos:start="83:33" pos:end="83:44"><name pos:start="83:33" pos:end="83:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:47" pos:end="83:91"><expr pos:start="83:47" pos:end="83:91"><literal type="string" pos:start="83:47" pos:end="83:91">"could not resolve source track strong ref\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="85:17" pos:end="85:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="91:13" pos:end="97:13"><if pos:start="91:13" pos:end="97:13">if <condition pos:start="91:16" pos:end="91:115">(<expr pos:start="91:17" pos:end="91:114"><operator pos:start="91:17" pos:end="91:17">!</operator><operator pos:start="91:18" pos:end="91:18">(</operator><name pos:start="91:19" pos:end="91:42"><name pos:start="91:19" pos:end="91:32">physical_track</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:42">sequence</name></name> <operator pos:start="91:44" pos:end="91:44">=</operator> <call pos:start="91:46" pos:end="91:113"><name pos:start="91:46" pos:end="91:67">mxf_resolve_strong_ref</name><argument_list pos:start="91:68" pos:end="91:113">(<argument pos:start="91:69" pos:end="91:71"><expr pos:start="91:69" pos:end="91:71"><name pos:start="91:69" pos:end="91:71">mxf</name></expr></argument>, <argument pos:start="91:74" pos:end="91:102"><expr pos:start="91:74" pos:end="91:102"><operator pos:start="91:74" pos:end="91:74">&amp;</operator><name pos:start="91:75" pos:end="91:102"><name pos:start="91:75" pos:end="91:88">physical_track</name><operator pos:start="91:89" pos:end="91:90">-&gt;</operator><name pos:start="91:91" pos:end="91:102">sequence_ref</name></name></expr></argument>, <argument pos:start="91:105" pos:end="91:112"><expr pos:start="91:105" pos:end="91:112"><name pos:start="91:105" pos:end="91:112">Sequence</name></expr></argument>)</argument_list></call><operator pos:start="91:114" pos:end="91:114">)</operator></expr>)</condition> <block pos:start="91:117" pos:end="97:13">{<block_content pos:start="93:17" pos:end="95:25">

                <expr_stmt pos:start="93:17" pos:end="93:102"><expr pos:start="93:17" pos:end="93:101"><call pos:start="93:17" pos:end="93:101"><name pos:start="93:17" pos:end="93:22">av_log</name><argument_list pos:start="93:23" pos:end="93:101">(<argument pos:start="93:24" pos:end="93:30"><expr pos:start="93:24" pos:end="93:30"><name pos:start="93:24" pos:end="93:30"><name pos:start="93:24" pos:end="93:26">mxf</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:30">fc</name></name></expr></argument>, <argument pos:start="93:33" pos:end="93:44"><expr pos:start="93:33" pos:end="93:44"><name pos:start="93:33" pos:end="93:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:47" pos:end="93:100"><expr pos:start="93:47" pos:end="93:100"><literal type="string" pos:start="93:47" pos:end="93:100">"could not resolve source track sequence strong ref\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="95:17" pos:end="95:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <for pos:start="101:13" pos:end="149:13">for <control pos:start="101:17" pos:end="101:87">(<init pos:start="101:18" pos:end="101:23"><expr pos:start="101:18" pos:end="101:22"><name pos:start="101:18" pos:end="101:18">k</name> <operator pos:start="101:20" pos:end="101:20">=</operator> <literal type="number" pos:start="101:22" pos:end="101:22">0</literal></expr>;</init> <condition pos:start="101:25" pos:end="101:82"><expr pos:start="101:25" pos:end="101:81"><name pos:start="101:25" pos:end="101:25">k</name> <operator pos:start="101:27" pos:end="101:27">&lt;</operator> <name pos:start="101:29" pos:end="101:81"><name pos:start="101:29" pos:end="101:42">physical_track</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:52">sequence</name><operator pos:start="101:53" pos:end="101:54">-&gt;</operator><name pos:start="101:55" pos:end="101:81">structural_components_count</name></name></expr>;</condition> <incr pos:start="101:84" pos:end="101:86"><expr pos:start="101:84" pos:end="101:86"><name pos:start="101:84" pos:end="101:84">k</name><operator pos:start="101:85" pos:end="101:86">++</operator></expr></incr>)</control> <block pos:start="101:89" pos:end="149:13">{<block_content pos:start="103:17" pos:end="147:17">

                <expr_stmt pos:start="103:17" pos:end="103:133"><expr pos:start="103:17" pos:end="103:132"><name pos:start="103:17" pos:end="103:25">component</name> <operator pos:start="103:27" pos:end="103:27">=</operator> <call pos:start="103:29" pos:end="103:132"><name pos:start="103:29" pos:end="103:50">mxf_resolve_strong_ref</name><argument_list pos:start="103:51" pos:end="103:132">(<argument pos:start="103:52" pos:end="103:54"><expr pos:start="103:52" pos:end="103:54"><name pos:start="103:52" pos:end="103:54">mxf</name></expr></argument>, <argument pos:start="103:57" pos:end="103:112"><expr pos:start="103:57" pos:end="103:112"><operator pos:start="103:57" pos:end="103:57">&amp;</operator><name pos:start="103:58" pos:end="103:112"><name pos:start="103:58" pos:end="103:71">physical_track</name><operator pos:start="103:72" pos:end="103:73">-&gt;</operator><name pos:start="103:74" pos:end="103:81">sequence</name><operator pos:start="103:82" pos:end="103:83">-&gt;</operator><name pos:start="103:84" pos:end="103:109">structural_components_refs</name><index pos:start="103:110" pos:end="103:112">[<expr pos:start="103:111" pos:end="103:111"><name pos:start="103:111" pos:end="103:111">k</name></expr>]</index></name></expr></argument>, <argument pos:start="103:115" pos:end="103:131"><expr pos:start="103:115" pos:end="103:131"><name pos:start="103:115" pos:end="103:131">TimecodeComponent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="105:17" pos:end="123:17"><if pos:start="105:17" pos:end="123:17">if <condition pos:start="105:20" pos:end="105:31">(<expr pos:start="105:21" pos:end="105:30"><operator pos:start="105:21" pos:end="105:21">!</operator><name pos:start="105:22" pos:end="105:30">component</name></expr>)</condition><block pos:start="105:32" pos:end="123:17">{<block_content pos:start="109:21" pos:end="121:33">

                    <comment type="block" pos:start="107:21" pos:end="107:82">/* timcode component may be located on a pulldown component */</comment>

                    <expr_stmt pos:start="109:21" pos:end="109:137"><expr pos:start="109:21" pos:end="109:136"><name pos:start="109:21" pos:end="109:29">component</name> <operator pos:start="109:31" pos:end="109:31">=</operator> <call pos:start="109:33" pos:end="109:136"><name pos:start="109:33" pos:end="109:54">mxf_resolve_strong_ref</name><argument_list pos:start="109:55" pos:end="109:136">(<argument pos:start="109:56" pos:end="109:58"><expr pos:start="109:56" pos:end="109:58"><name pos:start="109:56" pos:end="109:58">mxf</name></expr></argument>, <argument pos:start="109:61" pos:end="109:116"><expr pos:start="109:61" pos:end="109:116"><operator pos:start="109:61" pos:end="109:61">&amp;</operator><name pos:start="109:62" pos:end="109:116"><name pos:start="109:62" pos:end="109:75">physical_track</name><operator pos:start="109:76" pos:end="109:77">-&gt;</operator><name pos:start="109:78" pos:end="109:85">sequence</name><operator pos:start="109:86" pos:end="109:87">-&gt;</operator><name pos:start="109:88" pos:end="109:113">structural_components_refs</name><index pos:start="109:114" pos:end="109:116">[<expr pos:start="109:115" pos:end="109:115"><name pos:start="109:115" pos:end="109:115">k</name></expr>]</index></name></expr></argument>, <argument pos:start="109:119" pos:end="109:135"><expr pos:start="109:119" pos:end="109:135"><name pos:start="109:119" pos:end="109:135">PulldownComponent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="111:21" pos:end="113:33"><if pos:start="111:21" pos:end="113:33">if <condition pos:start="111:24" pos:end="111:35">(<expr pos:start="111:25" pos:end="111:34"><operator pos:start="111:25" pos:end="111:25">!</operator><name pos:start="111:26" pos:end="111:34">component</name></expr>)</condition><block type="pseudo" pos:start="113:25" pos:end="113:33"><block_content pos:start="113:25" pos:end="113:33">

                        <continue pos:start="113:25" pos:end="113:33">continue;</continue></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:68"><expr pos:start="115:21" pos:end="115:67"><name pos:start="115:21" pos:end="115:32">mxf_pulldown</name> <operator pos:start="115:34" pos:end="115:34">=</operator> <operator pos:start="115:36" pos:end="115:36">(</operator><name pos:start="115:37" pos:end="115:56">MXFPulldownComponent</name><operator pos:start="115:57" pos:end="115:57">*</operator><operator pos:start="115:58" pos:end="115:58">)</operator><name pos:start="115:59" pos:end="115:67">component</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:113"><expr pos:start="117:21" pos:end="117:112"><name pos:start="117:21" pos:end="117:29">component</name> <operator pos:start="117:31" pos:end="117:31">=</operator> <call pos:start="117:33" pos:end="117:112"><name pos:start="117:33" pos:end="117:54">mxf_resolve_strong_ref</name><argument_list pos:start="117:55" pos:end="117:112">(<argument pos:start="117:56" pos:end="117:58"><expr pos:start="117:56" pos:end="117:58"><name pos:start="117:56" pos:end="117:58">mxf</name></expr></argument>, <argument pos:start="117:61" pos:end="117:92"><expr pos:start="117:61" pos:end="117:92"><operator pos:start="117:61" pos:end="117:61">&amp;</operator><name pos:start="117:62" pos:end="117:92"><name pos:start="117:62" pos:end="117:73">mxf_pulldown</name><operator pos:start="117:74" pos:end="117:75">-&gt;</operator><name pos:start="117:76" pos:end="117:92">input_segment_ref</name></name></expr></argument>, <argument pos:start="117:95" pos:end="117:111"><expr pos:start="117:95" pos:end="117:111"><name pos:start="117:95" pos:end="117:111">TimecodeComponent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="119:21" pos:end="121:33"><if pos:start="119:21" pos:end="121:33">if <condition pos:start="119:24" pos:end="119:35">(<expr pos:start="119:25" pos:end="119:34"><operator pos:start="119:25" pos:end="119:25">!</operator><name pos:start="119:26" pos:end="119:34">component</name></expr>)</condition><block type="pseudo" pos:start="121:25" pos:end="121:33"><block_content pos:start="121:25" pos:end="121:33">

                        <continue pos:start="121:25" pos:end="121:33">continue;</continue></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="127:17" pos:end="127:58"><expr pos:start="127:17" pos:end="127:57"><name pos:start="127:17" pos:end="127:22">mxf_tc</name> <operator pos:start="127:24" pos:end="127:24">=</operator> <operator pos:start="127:26" pos:end="127:26">(</operator><name pos:start="127:27" pos:end="127:46">MXFTimecodeComponent</name><operator pos:start="127:47" pos:end="127:47">*</operator><operator pos:start="127:48" pos:end="127:48">)</operator><name pos:start="127:49" pos:end="127:57">component</name></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:81"><expr pos:start="129:17" pos:end="129:80"><name pos:start="129:17" pos:end="129:21">flags</name> <operator pos:start="129:23" pos:end="129:23">=</operator> <ternary pos:start="129:25" pos:end="129:80"><condition pos:start="129:25" pos:end="129:49"><expr pos:start="129:25" pos:end="129:47"><name pos:start="129:25" pos:end="129:42"><name pos:start="129:25" pos:end="129:30">mxf_tc</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:42">drop_frame</name></name> <operator pos:start="129:44" pos:end="129:45">==</operator> <literal type="number" pos:start="129:47" pos:end="129:47">1</literal></expr> ?</condition><then pos:start="129:51" pos:end="129:76"> <expr pos:start="129:51" pos:end="129:76"><name pos:start="129:51" pos:end="129:76">AV_TIMECODE_FLAG_DROPFRAME</name></expr> </then><else pos:start="129:78" pos:end="129:80">: <expr pos:start="129:80" pos:end="129:80"><literal type="number" pos:start="129:80" pos:end="129:80">0</literal></expr></else></ternary></expr>;</expr_stmt>

                <comment type="block" pos:start="131:17" pos:end="131:87">/* scale sourceclip start_position to match physical track edit rate */</comment>

                <expr_stmt pos:start="133:17" pos:end="137:71"><expr pos:start="133:17" pos:end="137:70"><name pos:start="133:17" pos:end="133:30">start_position</name> <operator pos:start="133:32" pos:end="133:32">=</operator> <call pos:start="133:34" pos:end="137:70"><name pos:start="133:34" pos:end="133:45">av_rescale_q</name><argument_list pos:start="133:46" pos:end="137:70">(<argument pos:start="133:47" pos:end="133:72"><expr pos:start="133:47" pos:end="133:72"><name pos:start="133:47" pos:end="133:72"><name pos:start="133:47" pos:end="133:56">sourceclip</name><operator pos:start="133:57" pos:end="133:58">-&gt;</operator><name pos:start="133:59" pos:end="133:72">start_position</name></name></expr></argument>,

                                              <argument pos:start="135:47" pos:end="135:71"><expr pos:start="135:47" pos:end="135:71"><name pos:start="135:47" pos:end="135:71"><name pos:start="135:47" pos:end="135:60">physical_track</name><operator pos:start="135:61" pos:end="135:62">-&gt;</operator><name pos:start="135:63" pos:end="135:71">edit_rate</name></name></expr></argument>,

                                              <argument pos:start="137:47" pos:end="137:69"><expr pos:start="137:47" pos:end="137:69"><name pos:start="137:47" pos:end="137:69"><name pos:start="137:47" pos:end="137:58">source_track</name><operator pos:start="137:59" pos:end="137:60">-&gt;</operator><name pos:start="137:61" pos:end="137:69">edit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="141:17" pos:end="147:17"><if pos:start="141:17" pos:end="147:17">if <condition pos:start="141:20" pos:end="141:115">(<expr pos:start="141:21" pos:end="141:114"><call pos:start="141:21" pos:end="141:109"><name pos:start="141:21" pos:end="141:36">av_timecode_init</name><argument_list pos:start="141:37" pos:end="141:109">(<argument pos:start="141:38" pos:end="141:40"><expr pos:start="141:38" pos:end="141:40"><operator pos:start="141:38" pos:end="141:38">&amp;</operator><name pos:start="141:39" pos:end="141:40">tc</name></expr></argument>, <argument pos:start="141:43" pos:end="141:54"><expr pos:start="141:43" pos:end="141:54"><name pos:start="141:43" pos:end="141:54"><name pos:start="141:43" pos:end="141:48">mxf_tc</name><operator pos:start="141:49" pos:end="141:50">-&gt;</operator><name pos:start="141:51" pos:end="141:54">rate</name></name></expr></argument>, <argument pos:start="141:57" pos:end="141:61"><expr pos:start="141:57" pos:end="141:61"><name pos:start="141:57" pos:end="141:61">flags</name></expr></argument>, <argument pos:start="141:64" pos:end="141:99"><expr pos:start="141:64" pos:end="141:99"><name pos:start="141:64" pos:end="141:77">start_position</name> <operator pos:start="141:79" pos:end="141:79">+</operator> <name pos:start="141:81" pos:end="141:99"><name pos:start="141:81" pos:end="141:86">mxf_tc</name><operator pos:start="141:87" pos:end="141:88">-&gt;</operator><name pos:start="141:89" pos:end="141:99">start_frame</name></name></expr></argument>, <argument pos:start="141:102" pos:end="141:108"><expr pos:start="141:102" pos:end="141:108"><name pos:start="141:102" pos:end="141:108"><name pos:start="141:102" pos:end="141:104">mxf</name><operator pos:start="141:105" pos:end="141:106">-&gt;</operator><name pos:start="141:107" pos:end="141:108">fc</name></name></expr></argument>)</argument_list></call> <operator pos:start="141:111" pos:end="141:112">==</operator> <literal type="number" pos:start="141:114" pos:end="141:114">0</literal></expr>)</condition> <block pos:start="141:117" pos:end="147:17">{<block_content pos:start="143:21" pos:end="145:29">

                    <expr_stmt pos:start="143:21" pos:end="143:78"><expr pos:start="143:21" pos:end="143:77"><call pos:start="143:21" pos:end="143:77"><name pos:start="143:21" pos:end="143:45">mxf_add_timecode_metadata</name><argument_list pos:start="143:46" pos:end="143:77">(<argument pos:start="143:47" pos:end="143:59"><expr pos:start="143:47" pos:end="143:59"><operator pos:start="143:47" pos:end="143:47">&amp;</operator><name pos:start="143:48" pos:end="143:59"><name pos:start="143:48" pos:end="143:49">st</name><operator pos:start="143:50" pos:end="143:51">-&gt;</operator><name pos:start="143:52" pos:end="143:59">metadata</name></name></expr></argument>, <argument pos:start="143:62" pos:end="143:71"><expr pos:start="143:62" pos:end="143:71"><literal type="string" pos:start="143:62" pos:end="143:71">"timecode"</literal></expr></argument>, <argument pos:start="143:74" pos:end="143:76"><expr pos:start="143:74" pos:end="143:76"><operator pos:start="143:74" pos:end="143:74">&amp;</operator><name pos:start="143:75" pos:end="143:76">tc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="145:21" pos:end="145:29">return <expr pos:start="145:28" pos:end="145:28"><literal type="number" pos:start="145:28" pos:end="145:28">0</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="157:5" pos:end="157:13">return <expr pos:start="157:12" pos:end="157:12"><literal type="number" pos:start="157:12" pos:end="157:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
