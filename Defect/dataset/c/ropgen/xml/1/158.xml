<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/158.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">update_size</name><parameter_list pos:start="1:23" pos:end="1:57">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:42"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">ctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:49"><decl pos:start="1:45" pos:end="1:49"><type pos:start="1:45" pos:end="1:49"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:49">w</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:56"><decl pos:start="1:52" pos:end="1:56"><type pos:start="1:52" pos:end="1:56"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:56">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VP9Context</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:34">= <expr pos:start="5:21" pos:end="5:34"><name pos:start="5:21" pos:end="5:34"><name pos:start="5:21" pos:end="5:23">ctx</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">p</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:70">(<expr pos:start="11:9" pos:end="11:69"><name pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:30">above_partition_ctx</name></name> <operator pos:start="11:32" pos:end="11:33">&amp;&amp;</operator> <name pos:start="11:35" pos:end="11:35">w</name> <operator pos:start="11:37" pos:end="11:38">==</operator> <name pos:start="11:40" pos:end="11:49"><name pos:start="11:40" pos:end="11:42">ctx</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:49">width</name></name> <operator pos:start="11:51" pos:end="11:52">&amp;&amp;</operator> <name pos:start="11:54" pos:end="11:54">h</name> <operator pos:start="11:56" pos:end="11:57">==</operator> <name pos:start="11:59" pos:end="11:69"><name pos:start="11:59" pos:end="11:61">ctx</name><operator pos:start="11:62" pos:end="11:63">-&gt;</operator><name pos:start="11:64" pos:end="11:69">height</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:7">ctx</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:14">width</name></name>  <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:19">w</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:7">ctx</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:15">height</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:19">h</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:14">sb_cols</name></name>  <operator pos:start="21:17" pos:end="21:17">=</operator> <operator pos:start="21:19" pos:end="21:19">(</operator><name pos:start="21:20" pos:end="21:20">w</name> <operator pos:start="21:22" pos:end="21:22">+</operator> <literal type="number" pos:start="21:24" pos:end="21:25">63</literal><operator pos:start="21:26" pos:end="21:26">)</operator> <operator pos:start="21:28" pos:end="21:29">&gt;&gt;</operator> <literal type="number" pos:start="21:31" pos:end="21:31">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:14">sb_rows</name></name>  <operator pos:start="23:17" pos:end="23:17">=</operator> <operator pos:start="23:19" pos:end="23:19">(</operator><name pos:start="23:20" pos:end="23:20">h</name> <operator pos:start="23:22" pos:end="23:22">+</operator> <literal type="number" pos:start="23:24" pos:end="23:25">63</literal><operator pos:start="23:26" pos:end="23:26">)</operator> <operator pos:start="23:28" pos:end="23:29">&gt;&gt;</operator> <literal type="number" pos:start="23:31" pos:end="23:31">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:11">cols</name></name>     <operator pos:start="25:17" pos:end="25:17">=</operator> <operator pos:start="25:19" pos:end="25:19">(</operator><name pos:start="25:20" pos:end="25:20">w</name> <operator pos:start="25:22" pos:end="25:22">+</operator> <literal type="number" pos:start="25:24" pos:end="25:24">7</literal><operator pos:start="25:25" pos:end="25:25">)</operator> <operator pos:start="25:27" pos:end="25:28">&gt;&gt;</operator> <literal type="number" pos:start="25:30" pos:end="25:30">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="32:0"><expr pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:11">rows</name></name>     <operator pos:start="27:17" pos:end="27:17">=</operator> <operator pos:start="27:19" pos:end="27:19">(</operator><name pos:start="27:20" pos:end="27:20">h</name> <operator pos:start="27:22" pos:end="27:22">+</operator> <literal type="number" pos:start="27:24" pos:end="27:24">7</literal><operator pos:start="27:25" pos:end="27:25">)</operator> <operator pos:start="27:27" pos:end="27:28">&gt;&gt;</operator> <literal type="number" pos:start="27:30" pos:end="27:30">3</literal></expr>;</expr_stmt>



<cpp:define pos:start="31:1" pos:end="31:79">#<cpp:directive pos:start="31:2" pos:end="31:7">define</cpp:directive> <cpp:macro pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:14">assign</name><parameter_list pos:start="31:15" pos:end="31:28">(<parameter pos:start="31:16" pos:end="31:18"><type pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">var</name></type></parameter>, <parameter pos:start="31:21" pos:end="31:24"><type pos:start="31:21" pos:end="31:24"><name pos:start="31:21" pos:end="31:24">type</name></type></parameter>, <parameter pos:start="31:27" pos:end="31:27"><type pos:start="31:27" pos:end="31:27"><name pos:start="31:27" pos:end="31:27">n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="31:30" pos:end="31:79">var = (type) p; p += s-&gt;sb_cols * n * sizeof(*var)</cpp:value></cpp:define>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><call pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:11">av_free</name><argument_list pos:start="33:12" pos:end="33:35">(<argument pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:34">above_partition_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:80"><expr pos:start="35:5" pos:end="37:79"><name pos:start="35:5" pos:end="35:5">p</name> <operator pos:start="35:7" pos:end="35:7">=</operator> <call pos:start="35:9" pos:end="37:79"><name pos:start="35:9" pos:end="35:17">av_malloc</name><argument_list pos:start="35:18" pos:end="37:79">(<argument pos:start="35:19" pos:end="37:78"><expr pos:start="35:19" pos:end="37:78"><name pos:start="35:19" pos:end="35:28"><name pos:start="35:19" pos:end="35:19">s</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:28">sb_cols</name></name> <operator pos:start="35:30" pos:end="35:30">*</operator> <operator pos:start="35:32" pos:end="35:32">(</operator><literal type="number" pos:start="35:33" pos:end="35:37">240</literal> <operator pos:start="35:37" pos:end="35:37">+</operator> <sizeof pos:start="35:39" pos:end="35:55">sizeof<argument_list pos:start="35:45" pos:end="35:55">(<argument pos:start="35:46" pos:end="35:54"><expr pos:start="35:46" pos:end="35:54"><operator pos:start="35:46" pos:end="35:46">*</operator><name pos:start="35:47" pos:end="35:54"><name pos:start="35:47" pos:end="35:47">s</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:54">lflvl</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="35:57" pos:end="35:57">+</operator> <literal type="number" pos:start="35:59" pos:end="35:60">16</literal> <operator pos:start="35:62" pos:end="35:62">*</operator> <sizeof pos:start="35:64" pos:end="35:87">sizeof<argument_list pos:start="35:70" pos:end="35:87">(<argument pos:start="35:71" pos:end="35:86"><expr pos:start="35:71" pos:end="35:86"><operator pos:start="35:71" pos:end="35:71">*</operator><name pos:start="35:72" pos:end="35:86"><name pos:start="35:72" pos:end="35:72">s</name><operator pos:start="35:73" pos:end="35:74">-&gt;</operator><name pos:start="35:75" pos:end="35:86">above_mv_ctx</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="35:89" pos:end="35:89">+</operator>

                                <literal type="number" pos:start="37:33" pos:end="37:34">64</literal> <operator pos:start="37:36" pos:end="37:36">*</operator> <name pos:start="37:38" pos:end="37:47"><name pos:start="37:38" pos:end="37:38">s</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:47">sb_rows</name></name> <operator pos:start="37:49" pos:end="37:49">*</operator> <operator pos:start="37:51" pos:end="37:51">(</operator><literal type="number" pos:start="37:52" pos:end="37:54">1</literal> <operator pos:start="37:54" pos:end="37:54">+</operator> <sizeof pos:start="37:56" pos:end="37:72">sizeof<argument_list pos:start="37:62" pos:end="37:72">(<argument pos:start="37:63" pos:end="37:71"><expr pos:start="37:63" pos:end="37:71"><operator pos:start="37:63" pos:end="37:63">*</operator><name pos:start="37:64" pos:end="37:71"><name pos:start="37:64" pos:end="37:64">s</name><operator pos:start="37:65" pos:end="37:66">-&gt;</operator><name pos:start="37:67" pos:end="37:68">mv</name><index pos:start="37:69" pos:end="37:71">[<expr pos:start="37:70" pos:end="37:70"><literal type="number" pos:start="37:70" pos:end="37:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:74" pos:end="37:74">*</operator> <literal type="number" pos:start="37:76" pos:end="37:76">2</literal><operator pos:start="37:77" pos:end="37:77">)</operator><operator pos:start="37:78" pos:end="37:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:31"><if pos:start="39:5" pos:end="41:31">if <condition pos:start="39:8" pos:end="39:11">(<expr pos:start="39:9" pos:end="39:10"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:10">p</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:31"><block_content pos:start="41:9" pos:end="41:31">

        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><call pos:start="41:16" pos:end="41:30"><name pos:start="41:16" pos:end="41:22">AVERROR</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:62"><expr pos:start="43:5" pos:end="43:61"><call pos:start="43:5" pos:end="43:61"><name pos:start="43:5" pos:end="43:10">assign</name><argument_list pos:start="43:11" pos:end="43:61">(<argument pos:start="43:12" pos:end="43:33"><expr pos:start="43:12" pos:end="43:33"><name pos:start="43:12" pos:end="43:33"><name pos:start="43:12" pos:end="43:12">s</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:33">above_partition_ctx</name></name></expr></argument>, <argument pos:start="43:36" pos:end="43:44"><expr pos:start="43:36" pos:end="43:44"><name pos:start="43:36" pos:end="43:42">uint8_t</name> <operator pos:start="43:44" pos:end="43:44">*</operator></expr></argument>,              <argument pos:start="43:60" pos:end="43:60"><expr pos:start="43:60" pos:end="43:60"><literal type="number" pos:start="43:60" pos:end="43:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:62"><expr pos:start="45:5" pos:end="45:61"><call pos:start="45:5" pos:end="45:61"><name pos:start="45:5" pos:end="45:10">assign</name><argument_list pos:start="45:11" pos:end="45:61">(<argument pos:start="45:12" pos:end="45:28"><expr pos:start="45:12" pos:end="45:28"><name pos:start="45:12" pos:end="45:28"><name pos:start="45:12" pos:end="45:12">s</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:28">above_skip_ctx</name></name></expr></argument>,      <argument pos:start="45:36" pos:end="45:44"><expr pos:start="45:36" pos:end="45:44"><name pos:start="45:36" pos:end="45:42">uint8_t</name> <operator pos:start="45:44" pos:end="45:44">*</operator></expr></argument>,              <argument pos:start="45:60" pos:end="45:60"><expr pos:start="45:60" pos:end="45:60"><literal type="number" pos:start="45:60" pos:end="45:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:62"><expr pos:start="47:5" pos:end="47:61"><call pos:start="47:5" pos:end="47:61"><name pos:start="47:5" pos:end="47:10">assign</name><argument_list pos:start="47:11" pos:end="47:61">(<argument pos:start="47:12" pos:end="47:28"><expr pos:start="47:12" pos:end="47:28"><name pos:start="47:12" pos:end="47:28"><name pos:start="47:12" pos:end="47:12">s</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:28">above_txfm_ctx</name></name></expr></argument>,      <argument pos:start="47:36" pos:end="47:44"><expr pos:start="47:36" pos:end="47:44"><name pos:start="47:36" pos:end="47:42">uint8_t</name> <operator pos:start="47:44" pos:end="47:44">*</operator></expr></argument>,              <argument pos:start="47:60" pos:end="47:60"><expr pos:start="47:60" pos:end="47:60"><literal type="number" pos:start="47:60" pos:end="47:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:62"><expr pos:start="49:5" pos:end="49:61"><call pos:start="49:5" pos:end="49:61"><name pos:start="49:5" pos:end="49:10">assign</name><argument_list pos:start="49:11" pos:end="49:61">(<argument pos:start="49:12" pos:end="49:28"><expr pos:start="49:12" pos:end="49:28"><name pos:start="49:12" pos:end="49:28"><name pos:start="49:12" pos:end="49:12">s</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:28">above_mode_ctx</name></name></expr></argument>,      <argument pos:start="49:36" pos:end="49:44"><expr pos:start="49:36" pos:end="49:44"><name pos:start="49:36" pos:end="49:42">uint8_t</name> <operator pos:start="49:44" pos:end="49:44">*</operator></expr></argument>,             <argument pos:start="49:59" pos:end="49:60"><expr pos:start="49:59" pos:end="49:60"><literal type="number" pos:start="49:59" pos:end="49:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:62"><expr pos:start="51:5" pos:end="51:61"><call pos:start="51:5" pos:end="51:61"><name pos:start="51:5" pos:end="51:10">assign</name><argument_list pos:start="51:11" pos:end="51:61">(<argument pos:start="51:12" pos:end="51:29"><expr pos:start="51:12" pos:end="51:29"><name pos:start="51:12" pos:end="51:29"><name pos:start="51:12" pos:end="51:12">s</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:29">above_y_nnz_ctx</name></name></expr></argument>,     <argument pos:start="51:36" pos:end="51:44"><expr pos:start="51:36" pos:end="51:44"><name pos:start="51:36" pos:end="51:42">uint8_t</name> <operator pos:start="51:44" pos:end="51:44">*</operator></expr></argument>,             <argument pos:start="51:59" pos:end="51:60"><expr pos:start="51:59" pos:end="51:60"><literal type="number" pos:start="51:59" pos:end="51:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:62"><expr pos:start="53:5" pos:end="53:61"><call pos:start="53:5" pos:end="53:61"><name pos:start="53:5" pos:end="53:10">assign</name><argument_list pos:start="53:11" pos:end="53:61">(<argument pos:start="53:12" pos:end="53:33"><expr pos:start="53:12" pos:end="53:33"><name pos:start="53:12" pos:end="53:33"><name pos:start="53:12" pos:end="53:12">s</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:30">above_uv_nnz_ctx</name><index pos:start="53:31" pos:end="53:33">[<expr pos:start="53:32" pos:end="53:32"><literal type="number" pos:start="53:32" pos:end="53:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="53:36" pos:end="53:44"><expr pos:start="53:36" pos:end="53:44"><name pos:start="53:36" pos:end="53:42">uint8_t</name> <operator pos:start="53:44" pos:end="53:44">*</operator></expr></argument>,              <argument pos:start="53:60" pos:end="53:60"><expr pos:start="53:60" pos:end="53:60"><literal type="number" pos:start="53:60" pos:end="53:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:62"><expr pos:start="55:5" pos:end="55:61"><call pos:start="55:5" pos:end="55:61"><name pos:start="55:5" pos:end="55:10">assign</name><argument_list pos:start="55:11" pos:end="55:61">(<argument pos:start="55:12" pos:end="55:33"><expr pos:start="55:12" pos:end="55:33"><name pos:start="55:12" pos:end="55:33"><name pos:start="55:12" pos:end="55:12">s</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:30">above_uv_nnz_ctx</name><index pos:start="55:31" pos:end="55:33">[<expr pos:start="55:32" pos:end="55:32"><literal type="number" pos:start="55:32" pos:end="55:32">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="55:36" pos:end="55:44"><expr pos:start="55:36" pos:end="55:44"><name pos:start="55:36" pos:end="55:42">uint8_t</name> <operator pos:start="55:44" pos:end="55:44">*</operator></expr></argument>,              <argument pos:start="55:60" pos:end="55:60"><expr pos:start="55:60" pos:end="55:60"><literal type="number" pos:start="55:60" pos:end="55:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:62"><expr pos:start="57:5" pos:end="57:61"><call pos:start="57:5" pos:end="57:61"><name pos:start="57:5" pos:end="57:10">assign</name><argument_list pos:start="57:11" pos:end="57:61">(<argument pos:start="57:12" pos:end="57:32"><expr pos:start="57:12" pos:end="57:32"><name pos:start="57:12" pos:end="57:32"><name pos:start="57:12" pos:end="57:12">s</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:29">intra_pred_data</name><index pos:start="57:30" pos:end="57:32">[<expr pos:start="57:31" pos:end="57:31"><literal type="number" pos:start="57:31" pos:end="57:31">0</literal></expr>]</index></name></expr></argument>,  <argument pos:start="57:36" pos:end="57:44"><expr pos:start="57:36" pos:end="57:44"><name pos:start="57:36" pos:end="57:42">uint8_t</name> <operator pos:start="57:44" pos:end="57:44">*</operator></expr></argument>,             <argument pos:start="57:59" pos:end="57:60"><expr pos:start="57:59" pos:end="57:60"><literal type="number" pos:start="57:59" pos:end="57:60">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:62"><expr pos:start="59:5" pos:end="59:61"><call pos:start="59:5" pos:end="59:61"><name pos:start="59:5" pos:end="59:10">assign</name><argument_list pos:start="59:11" pos:end="59:61">(<argument pos:start="59:12" pos:end="59:32"><expr pos:start="59:12" pos:end="59:32"><name pos:start="59:12" pos:end="59:32"><name pos:start="59:12" pos:end="59:12">s</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:29">intra_pred_data</name><index pos:start="59:30" pos:end="59:32">[<expr pos:start="59:31" pos:end="59:31"><literal type="number" pos:start="59:31" pos:end="59:31">1</literal></expr>]</index></name></expr></argument>,  <argument pos:start="59:36" pos:end="59:44"><expr pos:start="59:36" pos:end="59:44"><name pos:start="59:36" pos:end="59:42">uint8_t</name> <operator pos:start="59:44" pos:end="59:44">*</operator></expr></argument>,             <argument pos:start="59:59" pos:end="59:60"><expr pos:start="59:59" pos:end="59:60"><literal type="number" pos:start="59:59" pos:end="59:60">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:62"><expr pos:start="61:5" pos:end="61:61"><call pos:start="61:5" pos:end="61:61"><name pos:start="61:5" pos:end="61:10">assign</name><argument_list pos:start="61:11" pos:end="61:61">(<argument pos:start="61:12" pos:end="61:32"><expr pos:start="61:12" pos:end="61:32"><name pos:start="61:12" pos:end="61:32"><name pos:start="61:12" pos:end="61:12">s</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:29">intra_pred_data</name><index pos:start="61:30" pos:end="61:32">[<expr pos:start="61:31" pos:end="61:31"><literal type="number" pos:start="61:31" pos:end="61:31">2</literal></expr>]</index></name></expr></argument>,  <argument pos:start="61:36" pos:end="61:44"><expr pos:start="61:36" pos:end="61:44"><name pos:start="61:36" pos:end="61:42">uint8_t</name> <operator pos:start="61:44" pos:end="61:44">*</operator></expr></argument>,             <argument pos:start="61:59" pos:end="61:60"><expr pos:start="61:59" pos:end="61:60"><literal type="number" pos:start="61:59" pos:end="61:60">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:62"><expr pos:start="63:5" pos:end="63:61"><call pos:start="63:5" pos:end="63:61"><name pos:start="63:5" pos:end="63:10">assign</name><argument_list pos:start="63:11" pos:end="63:61">(<argument pos:start="63:12" pos:end="63:31"><expr pos:start="63:12" pos:end="63:31"><name pos:start="63:12" pos:end="63:31"><name pos:start="63:12" pos:end="63:12">s</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:31">above_segpred_ctx</name></name></expr></argument>,   <argument pos:start="63:36" pos:end="63:44"><expr pos:start="63:36" pos:end="63:44"><name pos:start="63:36" pos:end="63:42">uint8_t</name> <operator pos:start="63:44" pos:end="63:44">*</operator></expr></argument>,              <argument pos:start="63:60" pos:end="63:60"><expr pos:start="63:60" pos:end="63:60"><literal type="number" pos:start="63:60" pos:end="63:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:62"><expr pos:start="65:5" pos:end="65:61"><call pos:start="65:5" pos:end="65:61"><name pos:start="65:5" pos:end="65:10">assign</name><argument_list pos:start="65:11" pos:end="65:61">(<argument pos:start="65:12" pos:end="65:29"><expr pos:start="65:12" pos:end="65:29"><name pos:start="65:12" pos:end="65:29"><name pos:start="65:12" pos:end="65:12">s</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:29">above_intra_ctx</name></name></expr></argument>,     <argument pos:start="65:36" pos:end="65:44"><expr pos:start="65:36" pos:end="65:44"><name pos:start="65:36" pos:end="65:42">uint8_t</name> <operator pos:start="65:44" pos:end="65:44">*</operator></expr></argument>,              <argument pos:start="65:60" pos:end="65:60"><expr pos:start="65:60" pos:end="65:60"><literal type="number" pos:start="65:60" pos:end="65:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:62"><expr pos:start="67:5" pos:end="67:61"><call pos:start="67:5" pos:end="67:61"><name pos:start="67:5" pos:end="67:10">assign</name><argument_list pos:start="67:11" pos:end="67:61">(<argument pos:start="67:12" pos:end="67:28"><expr pos:start="67:12" pos:end="67:28"><name pos:start="67:12" pos:end="67:28"><name pos:start="67:12" pos:end="67:12">s</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:28">above_comp_ctx</name></name></expr></argument>,      <argument pos:start="67:36" pos:end="67:44"><expr pos:start="67:36" pos:end="67:44"><name pos:start="67:36" pos:end="67:42">uint8_t</name> <operator pos:start="67:44" pos:end="67:44">*</operator></expr></argument>,              <argument pos:start="67:60" pos:end="67:60"><expr pos:start="67:60" pos:end="67:60"><literal type="number" pos:start="67:60" pos:end="67:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:62"><expr pos:start="69:5" pos:end="69:61"><call pos:start="69:5" pos:end="69:61"><name pos:start="69:5" pos:end="69:10">assign</name><argument_list pos:start="69:11" pos:end="69:61">(<argument pos:start="69:12" pos:end="69:27"><expr pos:start="69:12" pos:end="69:27"><name pos:start="69:12" pos:end="69:27"><name pos:start="69:12" pos:end="69:12">s</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:27">above_ref_ctx</name></name></expr></argument>,       <argument pos:start="69:36" pos:end="69:44"><expr pos:start="69:36" pos:end="69:44"><name pos:start="69:36" pos:end="69:42">uint8_t</name> <operator pos:start="69:44" pos:end="69:44">*</operator></expr></argument>,              <argument pos:start="69:60" pos:end="69:60"><expr pos:start="69:60" pos:end="69:60"><literal type="number" pos:start="69:60" pos:end="69:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:62"><expr pos:start="71:5" pos:end="71:61"><call pos:start="71:5" pos:end="71:61"><name pos:start="71:5" pos:end="71:10">assign</name><argument_list pos:start="71:11" pos:end="71:61">(<argument pos:start="71:12" pos:end="71:30"><expr pos:start="71:12" pos:end="71:30"><name pos:start="71:12" pos:end="71:30"><name pos:start="71:12" pos:end="71:12">s</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:30">above_filter_ctx</name></name></expr></argument>,    <argument pos:start="71:36" pos:end="71:44"><expr pos:start="71:36" pos:end="71:44"><name pos:start="71:36" pos:end="71:42">uint8_t</name> <operator pos:start="71:44" pos:end="71:44">*</operator></expr></argument>,              <argument pos:start="71:60" pos:end="71:60"><expr pos:start="71:60" pos:end="71:60"><literal type="number" pos:start="71:60" pos:end="71:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:62"><expr pos:start="73:5" pos:end="73:61"><call pos:start="73:5" pos:end="73:61"><name pos:start="73:5" pos:end="73:10">assign</name><argument_list pos:start="73:11" pos:end="73:61">(<argument pos:start="73:12" pos:end="73:19"><expr pos:start="73:12" pos:end="73:19"><name pos:start="73:12" pos:end="73:19"><name pos:start="73:12" pos:end="73:12">s</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:19">lflvl</name></name></expr></argument>,               <argument pos:start="73:36" pos:end="73:53"><expr pos:start="73:36" pos:end="73:53">struct <name pos:start="73:43" pos:end="73:51">VP9Filter</name> <operator pos:start="73:53" pos:end="73:53">*</operator></expr></argument>,     <argument pos:start="73:60" pos:end="73:60"><expr pos:start="73:60" pos:end="73:60"><literal type="number" pos:start="73:60" pos:end="73:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:62"><expr pos:start="75:5" pos:end="75:61"><call pos:start="75:5" pos:end="75:61"><name pos:start="75:5" pos:end="75:10">assign</name><argument_list pos:start="75:11" pos:end="75:61">(<argument pos:start="75:12" pos:end="75:26"><expr pos:start="75:12" pos:end="75:26"><name pos:start="75:12" pos:end="75:26"><name pos:start="75:12" pos:end="75:12">s</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:26">above_mv_ctx</name></name></expr></argument>,        <argument pos:start="75:36" pos:end="75:47"><expr pos:start="75:36" pos:end="75:47"><call pos:start="75:36" pos:end="75:44"><name pos:start="75:36" pos:end="75:41">VP56mv</name><argument_list pos:start="75:42" pos:end="75:44">(<argument pos:start="75:43" pos:end="75:43"><expr pos:start="75:43" pos:end="75:43"><operator pos:start="75:43" pos:end="75:43">*</operator></expr></argument>)</argument_list></call><index pos:start="75:45" pos:end="75:47">[<expr pos:start="75:46" pos:end="75:46"><literal type="number" pos:start="75:46" pos:end="75:46">2</literal></expr>]</index></expr></argument>,          <argument pos:start="75:59" pos:end="75:60"><expr pos:start="75:59" pos:end="75:60"><literal type="number" pos:start="75:59" pos:end="75:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:75"><expr pos:start="77:5" pos:end="77:74"><call pos:start="77:5" pos:end="77:74"><name pos:start="77:5" pos:end="77:10">assign</name><argument_list pos:start="77:11" pos:end="77:74">(<argument pos:start="77:12" pos:end="77:30"><expr pos:start="77:12" pos:end="77:30"><name pos:start="77:12" pos:end="77:30"><name pos:start="77:12" pos:end="77:12">s</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:30">segmentation_map</name></name></expr></argument>,    <argument pos:start="77:36" pos:end="77:44"><expr pos:start="77:36" pos:end="77:44"><name pos:start="77:36" pos:end="77:42">uint8_t</name> <operator pos:start="77:44" pos:end="77:44">*</operator></expr></argument>,             <argument pos:start="77:59" pos:end="77:73"><expr pos:start="77:59" pos:end="77:73"><literal type="number" pos:start="77:59" pos:end="77:60">64</literal> <operator pos:start="77:62" pos:end="77:62">*</operator> <name pos:start="77:64" pos:end="77:73"><name pos:start="77:64" pos:end="77:64">s</name><operator pos:start="77:65" pos:end="77:66">-&gt;</operator><name pos:start="77:67" pos:end="77:73">sb_rows</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:75"><expr pos:start="79:5" pos:end="79:74"><call pos:start="79:5" pos:end="79:74"><name pos:start="79:5" pos:end="79:10">assign</name><argument_list pos:start="79:11" pos:end="79:74">(<argument pos:start="79:12" pos:end="79:19"><expr pos:start="79:12" pos:end="79:19"><name pos:start="79:12" pos:end="79:19"><name pos:start="79:12" pos:end="79:12">s</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:16">mv</name><index pos:start="79:17" pos:end="79:19">[<expr pos:start="79:18" pos:end="79:18"><literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>]</index></name></expr></argument>,               <argument pos:start="79:36" pos:end="79:56"><expr pos:start="79:36" pos:end="79:56">struct <name pos:start="79:43" pos:end="79:54">VP9mvrefPair</name> <operator pos:start="79:56" pos:end="79:56">*</operator></expr></argument>, <argument pos:start="79:59" pos:end="79:73"><expr pos:start="79:59" pos:end="79:73"><literal type="number" pos:start="79:59" pos:end="79:60">64</literal> <operator pos:start="79:62" pos:end="79:62">*</operator> <name pos:start="79:64" pos:end="79:73"><name pos:start="79:64" pos:end="79:64">s</name><operator pos:start="79:65" pos:end="79:66">-&gt;</operator><name pos:start="79:67" pos:end="79:73">sb_rows</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="84:0"><expr pos:start="81:5" pos:end="81:74"><call pos:start="81:5" pos:end="81:74"><name pos:start="81:5" pos:end="81:10">assign</name><argument_list pos:start="81:11" pos:end="81:74">(<argument pos:start="81:12" pos:end="81:19"><expr pos:start="81:12" pos:end="81:19"><name pos:start="81:12" pos:end="81:19"><name pos:start="81:12" pos:end="81:12">s</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:16">mv</name><index pos:start="81:17" pos:end="81:19">[<expr pos:start="81:18" pos:end="81:18"><literal type="number" pos:start="81:18" pos:end="81:18">1</literal></expr>]</index></name></expr></argument>,               <argument pos:start="81:36" pos:end="81:56"><expr pos:start="81:36" pos:end="81:56">struct <name pos:start="81:43" pos:end="81:54">VP9mvrefPair</name> <operator pos:start="81:56" pos:end="81:56">*</operator></expr></argument>, <argument pos:start="81:59" pos:end="81:73"><expr pos:start="81:59" pos:end="81:73"><literal type="number" pos:start="81:59" pos:end="81:60">64</literal> <operator pos:start="81:62" pos:end="81:62">*</operator> <name pos:start="81:64" pos:end="81:73"><name pos:start="81:64" pos:end="81:64">s</name><operator pos:start="81:65" pos:end="81:66">-&gt;</operator><name pos:start="81:67" pos:end="81:73">sb_rows</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef pos:start="83:1" pos:end="83:13">#<cpp:directive pos:start="83:2" pos:end="83:6">undef</cpp:directive> <name pos:start="83:8" pos:end="83:13">assign</name></cpp:undef>



    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
