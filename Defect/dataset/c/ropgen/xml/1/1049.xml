<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1049.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:36">read_huff_channels</name><parameter_list pos:start="1:37" pos:end="3:75">(<parameter pos:start="1:38" pos:end="1:56"><decl pos:start="1:38" pos:end="1:56"><type pos:start="1:38" pos:end="1:56"><name pos:start="1:38" pos:end="1:53">MLPDecodeContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">m</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:76"><decl pos:start="1:59" pos:end="1:76"><type pos:start="1:59" pos:end="1:76"><name pos:start="1:59" pos:end="1:71">GetBitContext</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:76">gbp</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:56"><decl pos:start="3:38" pos:end="3:56"><type pos:start="3:38" pos:end="3:56"><name pos:start="3:38" pos:end="3:45">unsigned</name> <name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:56">substr</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:74"><decl pos:start="3:59" pos:end="3:74"><type pos:start="3:59" pos:end="3:74"><name pos:start="3:59" pos:end="3:66">unsigned</name> <name pos:start="3:68" pos:end="3:70">int</name></type> <name pos:start="3:72" pos:end="3:74">pos</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:13">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">SubStream</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:40">= <expr pos:start="7:20" pos:end="7:40"><operator pos:start="7:20" pos:end="7:20">&amp;</operator><name pos:start="7:21" pos:end="7:40"><name pos:start="7:21" pos:end="7:21">m</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">substream</name><index pos:start="7:33" pos:end="7:40">[<expr pos:start="7:34" pos:end="7:39"><name pos:start="7:34" pos:end="7:39">substr</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:20">mat</name></decl>, <decl pos:start="9:23" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:23" pos:end="9:29">channel</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="17:70">for <control pos:start="13:9" pos:end="13:57">(<init pos:start="13:10" pos:end="13:17"><expr pos:start="13:10" pos:end="13:16"><name pos:start="13:10" pos:end="13:12">mat</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</init> <condition pos:start="13:19" pos:end="13:50"><expr pos:start="13:19" pos:end="13:49"><name pos:start="13:19" pos:end="13:21">mat</name> <operator pos:start="13:23" pos:end="13:23">&lt;</operator> <name pos:start="13:25" pos:end="13:49"><name pos:start="13:25" pos:end="13:25">s</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:49">num_primitive_matrices</name></name></expr>;</condition> <incr pos:start="13:52" pos:end="13:56"><expr pos:start="13:52" pos:end="13:56"><name pos:start="13:52" pos:end="13:54">mat</name><operator pos:start="13:55" pos:end="13:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="15:9" pos:end="17:70"><block_content pos:start="15:9" pos:end="17:70">

        <if_stmt pos:start="15:9" pos:end="17:70"><if pos:start="15:9" pos:end="17:70">if <condition pos:start="15:12" pos:end="15:31">(<expr pos:start="15:13" pos:end="15:30"><name pos:start="15:13" pos:end="15:30"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:25">lsb_bypass</name><index pos:start="15:26" pos:end="15:30">[<expr pos:start="15:27" pos:end="15:29"><name pos:start="15:27" pos:end="15:29">mat</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:70"><block_content pos:start="17:13" pos:end="17:70">

            <expr_stmt pos:start="17:13" pos:end="17:70"><expr pos:start="17:13" pos:end="17:69"><name pos:start="17:13" pos:end="17:52"><name pos:start="17:13" pos:end="17:13">m</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:28">bypassed_lsbs</name><index pos:start="17:29" pos:end="17:47">[<expr pos:start="17:30" pos:end="17:46"><name pos:start="17:30" pos:end="17:32">pos</name> <operator pos:start="17:34" pos:end="17:34">+</operator> <name pos:start="17:36" pos:end="17:46"><name pos:start="17:36" pos:end="17:36">s</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:46">blockpos</name></name></expr>]</index><index pos:start="17:48" pos:end="17:52">[<expr pos:start="17:49" pos:end="17:51"><name pos:start="17:49" pos:end="17:51">mat</name></expr>]</index></name> <operator pos:start="17:54" pos:end="17:54">=</operator> <call pos:start="17:56" pos:end="17:69"><name pos:start="17:56" pos:end="17:64">get_bits1</name><argument_list pos:start="17:65" pos:end="17:69">(<argument pos:start="17:66" pos:end="17:68"><expr pos:start="17:66" pos:end="17:68"><name pos:start="17:66" pos:end="17:68">gbp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <for pos:start="21:5" pos:end="63:5">for <control pos:start="21:9" pos:end="21:72">(<init pos:start="21:10" pos:end="21:34"><expr pos:start="21:10" pos:end="21:33"><name pos:start="21:10" pos:end="21:16">channel</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:33"><name pos:start="21:20" pos:end="21:20">s</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:33">min_channel</name></name></expr>;</init> <condition pos:start="21:36" pos:end="21:61"><expr pos:start="21:36" pos:end="21:60"><name pos:start="21:36" pos:end="21:42">channel</name> <operator pos:start="21:44" pos:end="21:45">&lt;=</operator> <name pos:start="21:47" pos:end="21:60"><name pos:start="21:47" pos:end="21:47">s</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:60">max_channel</name></name></expr>;</condition> <incr pos:start="21:63" pos:end="21:71"><expr pos:start="21:63" pos:end="21:71"><name pos:start="21:63" pos:end="21:69">channel</name><operator pos:start="21:70" pos:end="21:71">++</operator></expr></incr>)</control> <block pos:start="21:74" pos:end="63:5">{<block_content pos:start="23:9" pos:end="61:62">

        <decl_stmt pos:start="23:9" pos:end="23:56"><decl pos:start="23:9" pos:end="23:55"><type pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:21">ChannelParams</name> <modifier pos:start="23:23" pos:end="23:23">*</modifier></type><name pos:start="23:24" pos:end="23:25">cp</name> <init pos:start="23:27" pos:end="23:55">= <expr pos:start="23:29" pos:end="23:55"><operator pos:start="23:29" pos:end="23:29">&amp;</operator><name pos:start="23:30" pos:end="23:55"><name pos:start="23:30" pos:end="23:30">s</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:46">channel_params</name><index pos:start="23:47" pos:end="23:55">[<expr pos:start="23:48" pos:end="23:54"><name pos:start="23:48" pos:end="23:54">channel</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:36"><decl pos:start="25:9" pos:end="25:35"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:20">codebook</name> <init pos:start="25:22" pos:end="25:35">= <expr pos:start="25:24" pos:end="25:35"><name pos:start="25:24" pos:end="25:35"><name pos:start="25:24" pos:end="25:25">cp</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:35">codebook</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:58"><decl pos:start="27:9" pos:end="27:57"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:27">quant_step_size</name> <init pos:start="27:29" pos:end="27:57">= <expr pos:start="27:31" pos:end="27:57"><name pos:start="27:31" pos:end="27:57"><name pos:start="27:31" pos:end="27:31">s</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:48">quant_step_size</name><index pos:start="27:49" pos:end="27:57">[<expr pos:start="27:50" pos:end="27:56"><name pos:start="27:50" pos:end="27:56">channel</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:55"><decl pos:start="29:9" pos:end="29:54"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:20">lsb_bits</name> <init pos:start="29:22" pos:end="29:54">= <expr pos:start="29:24" pos:end="29:54"><name pos:start="29:24" pos:end="29:36"><name pos:start="29:24" pos:end="29:25">cp</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:36">huff_lsbs</name></name> <operator pos:start="29:38" pos:end="29:38">-</operator> <name pos:start="29:40" pos:end="29:54">quant_step_size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:23"><decl pos:start="31:9" pos:end="31:22"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:18">result</name> <init pos:start="31:20" pos:end="31:22">= <expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="35:9" pos:end="39:69"><if pos:start="35:9" pos:end="39:69">if <condition pos:start="35:12" pos:end="35:25">(<expr pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:20">codebook</name> <operator pos:start="35:22" pos:end="35:22">&gt;</operator> <literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="39:69"><block_content pos:start="37:13" pos:end="39:69">

            <expr_stmt pos:start="37:13" pos:end="39:69"><expr pos:start="37:13" pos:end="39:68"><name pos:start="37:13" pos:end="37:18">result</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <call pos:start="37:22" pos:end="39:68"><name pos:start="37:22" pos:end="37:29">get_vlc2</name><argument_list pos:start="37:30" pos:end="39:68">(<argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">gbp</name></expr></argument>, <argument pos:start="37:36" pos:end="37:61"><expr pos:start="37:36" pos:end="37:61"><name pos:start="37:36" pos:end="37:55"><name pos:start="37:36" pos:end="37:43">huff_vlc</name><index pos:start="37:44" pos:end="37:55">[<expr pos:start="37:45" pos:end="37:54"><name pos:start="37:45" pos:end="37:52">codebook</name><operator pos:start="37:53" pos:end="37:53">-</operator><literal type="number" pos:start="37:54" pos:end="37:54">1</literal></expr>]</index></name><operator pos:start="37:56" pos:end="37:56">.</operator><name pos:start="37:57" pos:end="37:61">table</name></expr></argument>,

                            <argument pos:start="39:29" pos:end="39:36"><expr pos:start="39:29" pos:end="39:36"><name pos:start="39:29" pos:end="39:36">VLC_BITS</name></expr></argument>, <argument pos:start="39:39" pos:end="39:67"><expr pos:start="39:39" pos:end="39:67"><operator pos:start="39:39" pos:end="39:39">(</operator><literal type="number" pos:start="39:40" pos:end="39:42">9</literal> <operator pos:start="39:42" pos:end="39:42">+</operator> <name pos:start="39:44" pos:end="39:51">VLC_BITS</name> <operator pos:start="39:53" pos:end="39:53">-</operator> <literal type="number" pos:start="39:55" pos:end="39:55">1</literal><operator pos:start="39:56" pos:end="39:56">)</operator> <operator pos:start="39:58" pos:end="39:58">/</operator> <name pos:start="39:60" pos:end="39:67">VLC_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="43:9" pos:end="45:39"><if pos:start="43:9" pos:end="45:39">if <condition pos:start="43:12" pos:end="43:23">(<expr pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:18">result</name> <operator pos:start="43:20" pos:end="43:20">&lt;</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:39"><block_content pos:start="45:13" pos:end="45:39">

            <return pos:start="45:13" pos:end="45:39">return <expr pos:start="45:20" pos:end="45:38"><name pos:start="45:20" pos:end="45:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="49:9" pos:end="51:68"><if pos:start="49:9" pos:end="51:68">if <condition pos:start="49:12" pos:end="49:25">(<expr pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:20">lsb_bits</name> <operator pos:start="49:22" pos:end="49:22">&gt;</operator> <literal type="number" pos:start="49:24" pos:end="49:24">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:68"><block_content pos:start="51:13" pos:end="51:68">

            <expr_stmt pos:start="51:13" pos:end="51:68"><expr pos:start="51:13" pos:end="51:67"><name pos:start="51:13" pos:end="51:18">result</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <operator pos:start="51:22" pos:end="51:22">(</operator><name pos:start="51:23" pos:end="51:28">result</name> <operator pos:start="51:30" pos:end="51:31">&lt;&lt;</operator> <name pos:start="51:33" pos:end="51:40">lsb_bits</name><operator pos:start="51:41" pos:end="51:41">)</operator> <operator pos:start="51:43" pos:end="51:43">+</operator> <call pos:start="51:45" pos:end="51:67"><name pos:start="51:45" pos:end="51:52">get_bits</name><argument_list pos:start="51:53" pos:end="51:67">(<argument pos:start="51:54" pos:end="51:56"><expr pos:start="51:54" pos:end="51:56"><name pos:start="51:54" pos:end="51:56">gbp</name></expr></argument>, <argument pos:start="51:59" pos:end="51:66"><expr pos:start="51:59" pos:end="51:66"><name pos:start="51:59" pos:end="51:66">lsb_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:40"><expr pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:14">result</name>  <operator pos:start="55:17" pos:end="55:18">+=</operator> <name pos:start="55:20" pos:end="55:39"><name pos:start="55:20" pos:end="55:21">cp</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:39">sign_huff_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:35"><expr pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:14">result</name> <operator pos:start="57:16" pos:end="57:18">&lt;&lt;=</operator> <name pos:start="57:20" pos:end="57:34">quant_step_size</name></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:62"><expr pos:start="61:9" pos:end="61:61"><name pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:9">m</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:24">sample_buffer</name><index pos:start="61:25" pos:end="61:43">[<expr pos:start="61:26" pos:end="61:42"><name pos:start="61:26" pos:end="61:28">pos</name> <operator pos:start="61:30" pos:end="61:30">+</operator> <name pos:start="61:32" pos:end="61:42"><name pos:start="61:32" pos:end="61:32">s</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:42">blockpos</name></name></expr>]</index><index pos:start="61:44" pos:end="61:52">[<expr pos:start="61:45" pos:end="61:51"><name pos:start="61:45" pos:end="61:51">channel</name></expr>]</index></name> <operator pos:start="61:54" pos:end="61:54">=</operator> <name pos:start="61:56" pos:end="61:61">result</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
