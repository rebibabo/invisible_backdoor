<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23770.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int64_t</name></type> <name pos:start="1:9" pos:end="1:21">cpu_get_ticks</name><parameter_list pos:start="1:22" pos:end="1:27">(<parameter pos:start="1:23" pos:end="1:26"><decl pos:start="1:23" pos:end="1:26"><type pos:start="1:23" pos:end="1:26"><name pos:start="1:23" pos:end="1:26">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:5">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:19">(<expr pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:18">use_icount</name></expr>)</condition> <block pos:start="5:21" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:32">

        <return pos:start="7:9" pos:end="7:32">return <expr pos:start="7:16" pos:end="7:31"><call pos:start="7:16" pos:end="7:31"><name pos:start="7:16" pos:end="7:29">cpu_get_icount</name><argument_list pos:start="7:30" pos:end="7:31">()</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="11:5" pos:end="35:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:40">(<expr pos:start="11:9" pos:end="11:39"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:39"><name pos:start="11:10" pos:end="11:21">timers_state</name><operator pos:start="11:22" pos:end="11:22">.</operator><name pos:start="11:23" pos:end="11:39">cpu_ticks_enabled</name></name></expr>)</condition> <block pos:start="11:42" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:45">

        <return pos:start="13:9" pos:end="13:45">return <expr pos:start="13:16" pos:end="13:44"><name pos:start="13:16" pos:end="13:44"><name pos:start="13:16" pos:end="13:27">timers_state</name><operator pos:start="13:28" pos:end="13:28">.</operator><name pos:start="13:29" pos:end="13:44">cpu_ticks_offset</name></name></expr>;</return>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="35:5">else <block pos:start="15:12" pos:end="35:5">{<block_content pos:start="17:9" pos:end="33:53">

        <decl_stmt pos:start="17:9" pos:end="17:22"><decl pos:start="17:9" pos:end="17:21"><type pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15">int64_t</name></type> <name pos:start="17:17" pos:end="17:21">ticks</name></decl>;</decl_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:37"><expr pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:13">ticks</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:36"><name pos:start="19:17" pos:end="19:34">cpu_get_real_ticks</name><argument_list pos:start="19:35" pos:end="19:36">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="29:9"><if pos:start="21:9" pos:end="29:9">if <condition pos:start="21:12" pos:end="21:48">(<expr pos:start="21:13" pos:end="21:47"><name pos:start="21:13" pos:end="21:39"><name pos:start="21:13" pos:end="21:24">timers_state</name><operator pos:start="21:25" pos:end="21:25">.</operator><name pos:start="21:26" pos:end="21:39">cpu_ticks_prev</name></name> <operator pos:start="21:41" pos:end="21:41">&gt;</operator> <name pos:start="21:43" pos:end="21:47">ticks</name></expr>)</condition> <block pos:start="21:50" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:81">

            <comment type="block" pos:start="23:13" pos:end="25:34">/* Note: non increasing ticks may happen if the host uses

               software suspend */</comment>

            <expr_stmt pos:start="27:13" pos:end="27:81"><expr pos:start="27:13" pos:end="27:80"><name pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:24">timers_state</name><operator pos:start="27:25" pos:end="27:25">.</operator><name pos:start="27:26" pos:end="27:41">cpu_ticks_offset</name></name> <operator pos:start="27:43" pos:end="27:44">+=</operator> <name pos:start="27:46" pos:end="27:72"><name pos:start="27:46" pos:end="27:57">timers_state</name><operator pos:start="27:58" pos:end="27:58">.</operator><name pos:start="27:59" pos:end="27:72">cpu_ticks_prev</name></name> <operator pos:start="27:74" pos:end="27:74">-</operator> <name pos:start="27:76" pos:end="27:80">ticks</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:20">timers_state</name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:35">cpu_ticks_prev</name></name> <operator pos:start="31:37" pos:end="31:37">=</operator> <name pos:start="31:39" pos:end="31:43">ticks</name></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:53">return <expr pos:start="33:16" pos:end="33:52"><name pos:start="33:16" pos:end="33:20">ticks</name> <operator pos:start="33:22" pos:end="33:22">+</operator> <name pos:start="33:24" pos:end="33:52"><name pos:start="33:24" pos:end="33:35">timers_state</name><operator pos:start="33:36" pos:end="33:36">.</operator><name pos:start="33:37" pos:end="33:52">cpu_ticks_offset</name></name></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
