<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/625.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">exynos4210_combiner_init</name><parameter_list pos:start="1:36" pos:end="1:54">(<parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:48">SysBusDevice</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">sbd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name> <init pos:start="5:22" pos:end="5:34">= <expr pos:start="5:24" pos:end="5:34"><call pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:29">DEVICE</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">sbd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:27">Exynos4210CombinerState</name> <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:30">s</name> <init pos:start="7:32" pos:end="7:57">= <expr pos:start="7:34" pos:end="7:57"><call pos:start="7:34" pos:end="7:57"><name pos:start="7:34" pos:end="7:52">EXYNOS4210_COMBINER</name><argument_list pos:start="7:53" pos:end="7:57">(<argument pos:start="7:54" pos:end="7:56"><expr pos:start="7:54" pos:end="7:56"><name pos:start="7:54" pos:end="7:56">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="15:14">/* Allocate general purpose input signals and connect a handler to each of

     * them */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:66"><expr pos:start="17:5" pos:end="17:65"><call pos:start="17:5" pos:end="17:65"><name pos:start="17:5" pos:end="17:21">qdev_init_gpio_in</name><argument_list pos:start="17:22" pos:end="17:65">(<argument pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:25">dev</name></expr></argument>, <argument pos:start="17:28" pos:end="17:54"><expr pos:start="17:28" pos:end="17:54"><name pos:start="17:28" pos:end="17:54">exynos4210_combiner_handler</name></expr></argument>, <argument pos:start="17:57" pos:end="17:64"><expr pos:start="17:57" pos:end="17:64"><name pos:start="17:57" pos:end="17:64">IIC_NIRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:56">/* Connect SysBusDev irqs to device specific irqs */</comment>

    <for pos:start="23:5" pos:end="27:5">for <control pos:start="23:9" pos:end="23:34">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:29"><expr pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:28">IIC_NIRQ</name></expr>;</condition> <incr pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:31">i</name><operator pos:start="23:32" pos:end="23:33">++</operator></expr></incr>)</control> <block pos:start="23:36" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:48">

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><call pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:23">sysbus_init_irq</name><argument_list pos:start="25:24" pos:end="25:47">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">sbd</name></expr></argument>, <argument pos:start="25:30" pos:end="25:46"><expr pos:start="25:30" pos:end="25:46"><operator pos:start="25:30" pos:end="25:30">&amp;</operator><name pos:start="25:31" pos:end="25:46"><name pos:start="25:31" pos:end="25:31">s</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:43">output_irq</name><index pos:start="25:44" pos:end="25:46">[<expr pos:start="25:45" pos:end="25:45"><name pos:start="25:45" pos:end="25:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="31:5" pos:end="33:66"><expr pos:start="31:5" pos:end="33:65"><call pos:start="31:5" pos:end="33:65"><name pos:start="31:5" pos:end="31:25">memory_region_init_io</name><argument_list pos:start="31:26" pos:end="33:65">(<argument pos:start="31:27" pos:end="31:35"><expr pos:start="31:27" pos:end="31:35"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:35"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:35">iomem</name></name></expr></argument>, <argument pos:start="31:38" pos:end="31:46"><expr pos:start="31:38" pos:end="31:46"><call pos:start="31:38" pos:end="31:46"><name pos:start="31:38" pos:end="31:43">OBJECT</name><argument_list pos:start="31:44" pos:end="31:46">(<argument pos:start="31:45" pos:end="31:45"><expr pos:start="31:45" pos:end="31:45"><name pos:start="31:45" pos:end="31:45">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:49" pos:end="31:72"><expr pos:start="31:49" pos:end="31:72"><operator pos:start="31:49" pos:end="31:49">&amp;</operator><name pos:start="31:50" pos:end="31:72">exynos4210_combiner_ops</name></expr></argument>, <argument pos:start="31:75" pos:end="31:75"><expr pos:start="31:75" pos:end="31:75"><name pos:start="31:75" pos:end="31:75">s</name></expr></argument>,

                          <argument pos:start="33:27" pos:end="33:47"><expr pos:start="33:27" pos:end="33:47"><literal type="string" pos:start="33:27" pos:end="33:47">"exynos4210-combiner"</literal></expr></argument>, <argument pos:start="33:50" pos:end="33:64"><expr pos:start="33:50" pos:end="33:64"><name pos:start="33:50" pos:end="33:64">IIC_REGION_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:37"><expr pos:start="35:5" pos:end="35:36"><call pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:20">sysbus_init_mmio</name><argument_list pos:start="35:21" pos:end="35:36">(<argument pos:start="35:22" pos:end="35:24"><expr pos:start="35:22" pos:end="35:24"><name pos:start="35:22" pos:end="35:24">sbd</name></expr></argument>, <argument pos:start="35:27" pos:end="35:35"><expr pos:start="35:27" pos:end="35:35"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:35"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:35">iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
