<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17060.c" pos:tabs="8"><function pos:start="1:1" pos:end="229:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">h264_mp4toannexb_filter</name><parameter_list pos:start="1:35" pos:end="9:48">(<parameter pos:start="1:36" pos:end="1:65"><decl pos:start="1:36" pos:end="1:65"><type pos:start="1:36" pos:end="1:65"><name pos:start="1:36" pos:end="1:59">AVBitStreamFilterContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">bsfc</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:56"><decl pos:start="3:36" pos:end="3:56"><type pos:start="3:36" pos:end="3:56"><name pos:start="3:36" pos:end="3:49">AVCodecContext</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:56">avctx</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:74"><decl pos:start="3:59" pos:end="3:74"><type pos:start="3:59" pos:end="3:74"><specifier pos:start="3:59" pos:end="3:63">const</specifier> <name pos:start="3:65" pos:end="3:68">char</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier></type><name pos:start="3:71" pos:end="3:74">args</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:53"><decl pos:start="5:36" pos:end="5:53"><type pos:start="5:36" pos:end="5:53"><name pos:start="5:36" pos:end="5:42">uint8_t</name>  <modifier pos:start="5:45" pos:end="5:45">*</modifier><modifier pos:start="5:46" pos:end="5:46">*</modifier></type><name pos:start="5:47" pos:end="5:53">poutbuf</name></decl></parameter>, <parameter pos:start="5:56" pos:end="5:72"><decl pos:start="5:56" pos:end="5:72"><type pos:start="5:56" pos:end="5:72"><name pos:start="5:56" pos:end="5:58">int</name> <modifier pos:start="5:60" pos:end="5:60">*</modifier></type><name pos:start="5:61" pos:end="5:72">poutbuf_size</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:53"><decl pos:start="7:36" pos:end="7:53"><type pos:start="7:36" pos:end="7:53"><specifier pos:start="7:36" pos:end="7:40">const</specifier> <name pos:start="7:42" pos:end="7:48">uint8_t</name> <modifier pos:start="7:50" pos:end="7:50">*</modifier></type><name pos:start="7:51" pos:end="7:53">buf</name></decl></parameter>, <parameter pos:start="7:56" pos:end="7:72"><decl pos:start="7:56" pos:end="7:72"><type pos:start="7:56" pos:end="7:72"><name pos:start="7:56" pos:end="7:58">int</name></type>      <name pos:start="7:65" pos:end="7:72">buf_size</name></decl></parameter>,

                                   <parameter pos:start="9:36" pos:end="9:47"><decl pos:start="9:36" pos:end="9:47"><type pos:start="9:36" pos:end="9:47"><name pos:start="9:36" pos:end="9:38">int</name></type> <name pos:start="9:40" pos:end="9:47">keyframe</name></decl></parameter>)</parameter_list> <block pos:start="9:50" pos:end="229:1">{<block_content pos:start="11:5" pos:end="227:27">

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">H264BSFContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">ctx</name> <init pos:start="11:25" pos:end="11:41">= <expr pos:start="11:27" pos:end="11:41"><name pos:start="11:27" pos:end="11:41"><name pos:start="11:27" pos:end="11:30">bsfc</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:21">unit_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int32_t</name></type> <name pos:start="15:13" pos:end="15:20">nal_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:23">cumul_size</name> <init pos:start="17:25" pos:end="17:27">= <expr pos:start="17:27" pos:end="17:27"><literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:44"><decl pos:start="19:5" pos:end="19:43"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">uint8_t</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:26">buf_end</name> <init pos:start="19:28" pos:end="19:43">= <expr pos:start="19:30" pos:end="19:43"><name pos:start="19:30" pos:end="19:32">buf</name> <operator pos:start="19:34" pos:end="19:34">+</operator> <name pos:start="19:36" pos:end="19:43">buf_size</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:27">/* nothing to filter */</comment>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:55">(<expr pos:start="25:9" pos:end="25:54"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:25"><name pos:start="25:10" pos:end="25:14">avctx</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:25">extradata</name></name> <operator pos:start="25:27" pos:end="25:28">||</operator> <name pos:start="25:30" pos:end="25:50"><name pos:start="25:30" pos:end="25:34">avctx</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:50">extradata_size</name></name> <operator pos:start="25:52" pos:end="25:52">&lt;</operator> <literal type="number" pos:start="25:54" pos:end="25:54">6</literal></expr>)</condition> <block pos:start="25:57" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:17">

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:16">poutbuf</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <operator pos:start="27:20" pos:end="27:20">(</operator><name pos:start="27:21" pos:end="27:27">uint8_t</name><operator pos:start="27:28" pos:end="27:28">*</operator><operator pos:start="27:29" pos:end="27:29">)</operator> <name pos:start="27:31" pos:end="27:33">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:21">poutbuf_size</name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:32">buf_size</name></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:55">/* retrieve sps and pps NAL units from extradata */</comment>

    <if_stmt pos:start="39:5" pos:end="135:5"><if pos:start="39:5" pos:end="135:5">if <condition pos:start="39:8" pos:end="39:31">(<expr pos:start="39:9" pos:end="39:30"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:30"><name pos:start="39:10" pos:end="39:12">ctx</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:30">extradata_parsed</name></name></expr>)</condition> <block pos:start="39:33" pos:end="135:5">{<block_content pos:start="41:9" pos:end="133:34">

        <decl_stmt pos:start="41:9" pos:end="41:27"><decl pos:start="41:9" pos:end="41:26"><type pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:16">uint16_t</name></type> <name pos:start="41:18" pos:end="41:26">unit_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:32"><decl pos:start="43:9" pos:end="43:31"><type pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:16">uint64_t</name></type> <name pos:start="43:18" pos:end="43:27">total_size</name> <init pos:start="43:29" pos:end="43:31">= <expr pos:start="43:31" pos:end="43:31"><literal type="number" pos:start="43:31" pos:end="43:31">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:51"><decl pos:start="45:9" pos:end="45:27"><type pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:15">uint8_t</name> <modifier pos:start="45:17" pos:end="45:17">*</modifier></type><name pos:start="45:18" pos:end="45:20">out</name> <init pos:start="45:22" pos:end="45:27">= <expr pos:start="45:24" pos:end="45:27"><name pos:start="45:24" pos:end="45:27">NULL</name></expr></init></decl>, <decl pos:start="45:30" pos:end="45:36"><type ref="prev" pos:start="45:9" pos:end="45:17"/><name pos:start="45:30" pos:end="45:36">unit_nb</name></decl>, <decl pos:start="45:39" pos:end="45:50"><type ref="prev" pos:start="45:9" pos:end="45:17"/><name pos:start="45:39" pos:end="45:46">sps_done</name> <init pos:start="45:48" pos:end="45:50">= <expr pos:start="45:50" pos:end="45:50"><literal type="number" pos:start="45:50" pos:end="45:50">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:54"><decl pos:start="47:9" pos:end="47:53"><type pos:start="47:9" pos:end="47:23"><specifier pos:start="47:9" pos:end="47:13">const</specifier> <name pos:start="47:15" pos:end="47:21">uint8_t</name> <modifier pos:start="47:23" pos:end="47:23">*</modifier></type><name pos:start="47:24" pos:end="47:32">extradata</name> <init pos:start="47:34" pos:end="47:53">= <expr pos:start="47:36" pos:end="47:53"><name pos:start="47:36" pos:end="47:51"><name pos:start="47:36" pos:end="47:40">avctx</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:51">extradata</name></name><operator pos:start="47:52" pos:end="47:52">+</operator><literal type="number" pos:start="47:53" pos:end="47:53">4</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:59"><decl pos:start="49:9" pos:end="49:58"><type pos:start="49:9" pos:end="49:28"><specifier pos:start="49:9" pos:end="49:14">static</specifier> <specifier pos:start="49:16" pos:end="49:20">const</specifier> <name pos:start="49:22" pos:end="49:28">uint8_t</name></type> <name pos:start="49:30" pos:end="49:43"><name pos:start="49:30" pos:end="49:40">nalu_header</name><index pos:start="49:41" pos:end="49:43">[<expr pos:start="49:42" pos:end="49:42"><literal type="number" pos:start="49:42" pos:end="49:42">4</literal></expr>]</index></name> <init pos:start="49:45" pos:end="49:58">= <expr pos:start="49:47" pos:end="49:58"><block pos:start="49:47" pos:end="49:58">{<expr pos:start="49:48" pos:end="49:48"><literal type="number" pos:start="49:48" pos:end="49:48">0</literal></expr>, <expr pos:start="49:51" pos:end="49:51"><literal type="number" pos:start="49:51" pos:end="49:51">0</literal></expr>, <expr pos:start="49:54" pos:end="49:54"><literal type="number" pos:start="49:54" pos:end="49:54">0</literal></expr>, <expr pos:start="49:57" pos:end="49:57"><literal type="number" pos:start="49:57" pos:end="49:57">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="53:9" pos:end="53:40">/* retrieve length coded size */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:52"><expr pos:start="55:9" pos:end="55:51"><name pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:11">ctx</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:24">length_size</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <operator pos:start="55:28" pos:end="55:28">(</operator><operator pos:start="55:29" pos:end="55:29">*</operator><name pos:start="55:30" pos:end="55:38">extradata</name><operator pos:start="55:39" pos:end="55:40">++</operator> <operator pos:start="55:42" pos:end="55:42">&amp;</operator> <literal type="number" pos:start="55:44" pos:end="55:46">0x3</literal><operator pos:start="55:47" pos:end="55:47">)</operator> <operator pos:start="55:49" pos:end="55:49">+</operator> <literal type="number" pos:start="55:51" pos:end="55:51">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="59:35"><if pos:start="57:9" pos:end="59:35">if <condition pos:start="57:12" pos:end="57:34">(<expr pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:15">ctx</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:28">length_size</name></name> <operator pos:start="57:30" pos:end="57:31">==</operator> <literal type="number" pos:start="57:33" pos:end="57:33">3</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:35"><block_content pos:start="59:13" pos:end="59:35">

            <return pos:start="59:13" pos:end="59:35">return <expr pos:start="59:20" pos:end="59:34"><call pos:start="59:20" pos:end="59:34"><name pos:start="59:20" pos:end="59:26">AVERROR</name><argument_list pos:start="59:27" pos:end="59:34">(<argument pos:start="59:28" pos:end="59:33"><expr pos:start="59:28" pos:end="59:33"><name pos:start="59:28" pos:end="59:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="63:9" pos:end="63:42">/* retrieve sps and pps unit(s) */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:38"><expr pos:start="65:9" pos:end="65:37"><name pos:start="65:9" pos:end="65:15">unit_nb</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <operator pos:start="65:19" pos:end="65:19">*</operator><name pos:start="65:20" pos:end="65:28">extradata</name><operator pos:start="65:29" pos:end="65:30">++</operator> <operator pos:start="65:32" pos:end="65:32">&amp;</operator> <literal type="number" pos:start="65:34" pos:end="65:37">0x1f</literal></expr>;</expr_stmt> <comment type="block" pos:start="65:40" pos:end="65:66">/* number of sps unit(s) */</comment>

        <if_stmt pos:start="67:9" pos:end="73:9"><if pos:start="67:9" pos:end="73:9">if <condition pos:start="67:12" pos:end="67:21">(<expr pos:start="67:13" pos:end="67:20"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:20">unit_nb</name></expr>)</condition> <block pos:start="67:23" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:23">

            <expr_stmt pos:start="69:13" pos:end="69:35"><expr pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:19">unit_nb</name> <operator pos:start="69:21" pos:end="69:21">=</operator> <operator pos:start="69:23" pos:end="69:23">*</operator><name pos:start="69:24" pos:end="69:32">extradata</name><operator pos:start="69:33" pos:end="69:34">++</operator></expr>;</expr_stmt> <comment type="block" pos:start="69:37" pos:end="69:63">/* number of pps unit(s) */</comment>

            <expr_stmt pos:start="71:13" pos:end="71:23"><expr pos:start="71:13" pos:end="71:22"><name pos:start="71:13" pos:end="71:20">sps_done</name><operator pos:start="71:21" pos:end="71:22">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <while pos:start="75:9" pos:end="119:9">while <condition pos:start="75:15" pos:end="75:25">(<expr pos:start="75:16" pos:end="75:24"><name pos:start="75:16" pos:end="75:22">unit_nb</name><operator pos:start="75:23" pos:end="75:24">--</operator></expr>)</condition> <block pos:start="75:27" pos:end="119:9">{<block_content pos:start="77:13" pos:end="117:39">

            <decl_stmt pos:start="77:13" pos:end="77:22"><decl pos:start="77:13" pos:end="77:21"><type pos:start="77:13" pos:end="77:18"><name pos:start="77:13" pos:end="77:16">void</name> <modifier pos:start="77:18" pos:end="77:18">*</modifier></type><name pos:start="77:19" pos:end="77:21">tmp</name></decl>;</decl_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:43"><expr pos:start="81:13" pos:end="81:42"><name pos:start="81:13" pos:end="81:21">unit_size</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <call pos:start="81:25" pos:end="81:42"><name pos:start="81:25" pos:end="81:31">AV_RB16</name><argument_list pos:start="81:32" pos:end="81:42">(<argument pos:start="81:33" pos:end="81:41"><expr pos:start="81:33" pos:end="81:41"><name pos:start="81:33" pos:end="81:41">extradata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:38"><expr pos:start="83:13" pos:end="83:37"><name pos:start="83:13" pos:end="83:22">total_size</name> <operator pos:start="83:24" pos:end="83:25">+=</operator> <name pos:start="83:27" pos:end="83:35">unit_size</name><operator pos:start="83:36" pos:end="83:36">+</operator><literal type="number" pos:start="83:37" pos:end="83:37">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="93:13"><if pos:start="85:13" pos:end="93:13">if <condition pos:start="85:16" pos:end="87:79">(<expr pos:start="85:17" pos:end="87:78"><name pos:start="85:17" pos:end="85:26">total_size</name> <operator pos:start="85:28" pos:end="85:28">&gt;</operator> <name pos:start="85:30" pos:end="85:36">INT_MAX</name> <operator pos:start="85:38" pos:end="85:38">-</operator> <name pos:start="85:40" pos:end="85:67">FF_INPUT_BUFFER_PADDING_SIZE</name> <operator pos:start="85:69" pos:end="85:70">||</operator>

                <name pos:start="87:17" pos:end="87:25">extradata</name><operator pos:start="87:26" pos:end="87:26">+</operator><literal type="number" pos:start="87:27" pos:end="87:28">2</literal><operator pos:start="87:28" pos:end="87:28">+</operator><name pos:start="87:29" pos:end="87:37">unit_size</name> <operator pos:start="87:39" pos:end="87:39">&gt;</operator> <name pos:start="87:41" pos:end="87:56"><name pos:start="87:41" pos:end="87:45">avctx</name><operator pos:start="87:46" pos:end="87:47">-&gt;</operator><name pos:start="87:48" pos:end="87:56">extradata</name></name><operator pos:start="87:57" pos:end="87:57">+</operator><name pos:start="87:58" pos:end="87:78"><name pos:start="87:58" pos:end="87:62">avctx</name><operator pos:start="87:63" pos:end="87:64">-&gt;</operator><name pos:start="87:65" pos:end="87:78">extradata_size</name></name></expr>)</condition> <block pos:start="87:81" pos:end="93:13">{<block_content pos:start="89:17" pos:end="91:39">

                <expr_stmt pos:start="89:17" pos:end="89:29"><expr pos:start="89:17" pos:end="89:28"><call pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:23">av_free</name><argument_list pos:start="89:24" pos:end="89:28">(<argument pos:start="89:25" pos:end="89:27"><expr pos:start="89:25" pos:end="89:27"><name pos:start="89:25" pos:end="89:27">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="91:17" pos:end="91:39">return <expr pos:start="91:24" pos:end="91:38"><call pos:start="91:24" pos:end="91:38"><name pos:start="91:24" pos:end="91:30">AVERROR</name><argument_list pos:start="91:31" pos:end="91:38">(<argument pos:start="91:32" pos:end="91:37"><expr pos:start="91:32" pos:end="91:37"><name pos:start="91:32" pos:end="91:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:77"><expr pos:start="95:13" pos:end="95:76"><name pos:start="95:13" pos:end="95:15">tmp</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:76"><name pos:start="95:19" pos:end="95:28">av_realloc</name><argument_list pos:start="95:29" pos:end="95:76">(<argument pos:start="95:30" pos:end="95:32"><expr pos:start="95:30" pos:end="95:32"><name pos:start="95:30" pos:end="95:32">out</name></expr></argument>, <argument pos:start="95:35" pos:end="95:75"><expr pos:start="95:35" pos:end="95:75"><name pos:start="95:35" pos:end="95:44">total_size</name> <operator pos:start="95:46" pos:end="95:46">+</operator> <name pos:start="95:48" pos:end="95:75">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="103:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="97:21">(<expr pos:start="97:17" pos:end="97:20"><operator pos:start="97:17" pos:end="97:17">!</operator><name pos:start="97:18" pos:end="97:20">tmp</name></expr>)</condition> <block pos:start="97:23" pos:end="103:13">{<block_content pos:start="99:17" pos:end="101:39">

                <expr_stmt pos:start="99:17" pos:end="99:29"><expr pos:start="99:17" pos:end="99:28"><call pos:start="99:17" pos:end="99:28"><name pos:start="99:17" pos:end="99:23">av_free</name><argument_list pos:start="99:24" pos:end="99:28">(<argument pos:start="99:25" pos:end="99:27"><expr pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:27">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="101:17" pos:end="101:39">return <expr pos:start="101:24" pos:end="101:38"><call pos:start="101:24" pos:end="101:38"><name pos:start="101:24" pos:end="101:30">AVERROR</name><argument_list pos:start="101:31" pos:end="101:38">(<argument pos:start="101:32" pos:end="101:37"><expr pos:start="101:32" pos:end="101:37"><name pos:start="101:32" pos:end="101:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:22"><expr pos:start="105:13" pos:end="105:21"><name pos:start="105:13" pos:end="105:15">out</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <name pos:start="105:19" pos:end="105:21">tmp</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:63"><expr pos:start="107:13" pos:end="107:62"><call pos:start="107:13" pos:end="107:62"><name pos:start="107:13" pos:end="107:18">memcpy</name><argument_list pos:start="107:19" pos:end="107:62">(<argument pos:start="107:20" pos:end="107:45"><expr pos:start="107:20" pos:end="107:45"><name pos:start="107:20" pos:end="107:22">out</name><operator pos:start="107:23" pos:end="107:23">+</operator><name pos:start="107:24" pos:end="107:33">total_size</name><operator pos:start="107:34" pos:end="107:34">-</operator><name pos:start="107:35" pos:end="107:43">unit_size</name><operator pos:start="107:44" pos:end="107:44">-</operator><literal type="number" pos:start="107:45" pos:end="107:45">4</literal></expr></argument>, <argument pos:start="107:48" pos:end="107:58"><expr pos:start="107:48" pos:end="107:58"><name pos:start="107:48" pos:end="107:58">nalu_header</name></expr></argument>, <argument pos:start="107:61" pos:end="107:61"><expr pos:start="107:61" pos:end="107:61"><literal type="number" pos:start="107:61" pos:end="107:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:71"><expr pos:start="109:13" pos:end="109:70"><call pos:start="109:13" pos:end="109:70"><name pos:start="109:13" pos:end="109:18">memcpy</name><argument_list pos:start="109:19" pos:end="109:70">(<argument pos:start="109:20" pos:end="109:43"><expr pos:start="109:20" pos:end="109:43"><name pos:start="109:20" pos:end="109:22">out</name><operator pos:start="109:23" pos:end="109:23">+</operator><name pos:start="109:24" pos:end="109:33">total_size</name><operator pos:start="109:34" pos:end="109:34">-</operator><name pos:start="109:35" pos:end="109:43">unit_size</name></expr></argument>,   <argument pos:start="109:48" pos:end="109:58"><expr pos:start="109:48" pos:end="109:58"><name pos:start="109:48" pos:end="109:56">extradata</name><operator pos:start="109:57" pos:end="109:57">+</operator><literal type="number" pos:start="109:58" pos:end="109:58">2</literal></expr></argument>, <argument pos:start="109:61" pos:end="109:69"><expr pos:start="109:61" pos:end="109:69"><name pos:start="109:61" pos:end="109:69">unit_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:37"><expr pos:start="111:13" pos:end="111:36"><name pos:start="111:13" pos:end="111:21">extradata</name> <operator pos:start="111:23" pos:end="111:24">+=</operator> <literal type="number" pos:start="111:26" pos:end="111:27">2</literal><operator pos:start="111:27" pos:end="111:27">+</operator><name pos:start="111:28" pos:end="111:36">unit_size</name></expr>;</expr_stmt>



            <if_stmt pos:start="115:13" pos:end="117:39"><if pos:start="115:13" pos:end="117:39">if <condition pos:start="115:16" pos:end="115:40">(<expr pos:start="115:17" pos:end="115:39"><operator pos:start="115:17" pos:end="115:17">!</operator><name pos:start="115:18" pos:end="115:24">unit_nb</name> <operator pos:start="115:26" pos:end="115:27">&amp;&amp;</operator> <operator pos:start="115:29" pos:end="115:29">!</operator><name pos:start="115:30" pos:end="115:37">sps_done</name><operator pos:start="115:38" pos:end="115:39">++</operator></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:39"><block_content pos:start="117:17" pos:end="117:39">

                <expr_stmt pos:start="117:17" pos:end="117:39"><expr pos:start="117:17" pos:end="117:38"><name pos:start="117:17" pos:end="117:23">unit_nb</name> <operator pos:start="117:25" pos:end="117:25">=</operator> <operator pos:start="117:27" pos:end="117:27">*</operator><name pos:start="117:28" pos:end="117:36">extradata</name><operator pos:start="117:37" pos:end="117:38">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="117:41" pos:end="117:67">/* number of pps unit(s) */</comment>

        </block_content>}</block></while>



        <expr_stmt pos:start="123:9" pos:end="123:66"><expr pos:start="123:9" pos:end="123:65"><call pos:start="123:9" pos:end="123:65"><name pos:start="123:9" pos:end="123:14">memset</name><argument_list pos:start="123:15" pos:end="123:65">(<argument pos:start="123:16" pos:end="123:31"><expr pos:start="123:16" pos:end="123:31"><name pos:start="123:16" pos:end="123:18">out</name> <operator pos:start="123:20" pos:end="123:20">+</operator> <name pos:start="123:22" pos:end="123:31">total_size</name></expr></argument>, <argument pos:start="123:34" pos:end="123:34"><expr pos:start="123:34" pos:end="123:34"><literal type="number" pos:start="123:34" pos:end="123:34">0</literal></expr></argument>, <argument pos:start="123:37" pos:end="123:64"><expr pos:start="123:37" pos:end="123:64"><name pos:start="123:37" pos:end="123:64">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:34"><expr pos:start="125:9" pos:end="125:33"><call pos:start="125:9" pos:end="125:33"><name pos:start="125:9" pos:end="125:15">av_free</name><argument_list pos:start="125:16" pos:end="125:33">(<argument pos:start="125:17" pos:end="125:32"><expr pos:start="125:17" pos:end="125:32"><name pos:start="125:17" pos:end="125:32"><name pos:start="125:17" pos:end="125:21">avctx</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:32">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:36"><expr pos:start="127:9" pos:end="127:35"><name pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:13">avctx</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:24">extradata</name></name>      <operator pos:start="127:31" pos:end="127:31">=</operator> <name pos:start="127:33" pos:end="127:35">out</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:43"><expr pos:start="129:9" pos:end="129:42"><name pos:start="129:9" pos:end="129:29"><name pos:start="129:9" pos:end="129:13">avctx</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:29">extradata_size</name></name> <operator pos:start="129:31" pos:end="129:31">=</operator> <name pos:start="129:33" pos:end="129:42">total_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:34"><expr pos:start="131:9" pos:end="131:33"><name pos:start="131:9" pos:end="131:22"><name pos:start="131:9" pos:end="131:11">ctx</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:22">first_idr</name></name>        <operator pos:start="131:31" pos:end="131:31">=</operator> <literal type="number" pos:start="131:33" pos:end="131:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:34"><expr pos:start="133:9" pos:end="133:33"><name pos:start="133:9" pos:end="133:29"><name pos:start="133:9" pos:end="133:11">ctx</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:29">extradata_parsed</name></name> <operator pos:start="133:31" pos:end="133:31">=</operator> <literal type="number" pos:start="133:33" pos:end="133:33">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:22"><expr pos:start="139:5" pos:end="139:21"><operator pos:start="139:5" pos:end="139:5">*</operator><name pos:start="139:6" pos:end="139:17">poutbuf_size</name> <operator pos:start="139:19" pos:end="139:19">=</operator> <literal type="number" pos:start="139:21" pos:end="139:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:20"><expr pos:start="141:5" pos:end="141:19"><operator pos:start="141:5" pos:end="141:5">*</operator><name pos:start="141:6" pos:end="141:12">poutbuf</name> <operator pos:start="141:14" pos:end="141:14">=</operator> <name pos:start="141:16" pos:end="141:19">NULL</name></expr>;</expr_stmt>

    <do pos:start="143:5" pos:end="213:36">do <block pos:start="143:8" pos:end="213:5">{<block_content pos:start="145:9" pos:end="211:50">

        <if_stmt pos:start="145:9" pos:end="147:22"><if pos:start="145:9" pos:end="147:22">if <condition pos:start="145:12" pos:end="145:45">(<expr pos:start="145:13" pos:end="145:44"><name pos:start="145:13" pos:end="145:15">buf</name> <operator pos:start="145:17" pos:end="145:17">+</operator> <name pos:start="145:19" pos:end="145:34"><name pos:start="145:19" pos:end="145:21">ctx</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:34">length_size</name></name> <operator pos:start="145:36" pos:end="145:36">&gt;</operator> <name pos:start="145:38" pos:end="145:44">buf_end</name></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:22"><block_content pos:start="147:13" pos:end="147:22">

            <goto pos:start="147:13" pos:end="147:22">goto <name pos:start="147:18" pos:end="147:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="151:9" pos:end="161:36"><if pos:start="151:9" pos:end="155:9">if <condition pos:start="151:12" pos:end="151:34">(<expr pos:start="151:13" pos:end="151:33"><name pos:start="151:13" pos:end="151:28"><name pos:start="151:13" pos:end="151:15">ctx</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:28">length_size</name></name> <operator pos:start="151:30" pos:end="151:31">==</operator> <literal type="number" pos:start="151:33" pos:end="151:33">1</literal></expr>)</condition> <block pos:start="151:36" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:30">

            <expr_stmt pos:start="153:13" pos:end="153:30"><expr pos:start="153:13" pos:end="153:29"><name pos:start="153:13" pos:end="153:20">nal_size</name> <operator pos:start="153:22" pos:end="153:22">=</operator> <name pos:start="153:24" pos:end="153:29"><name pos:start="153:24" pos:end="153:26">buf</name><index pos:start="153:27" pos:end="153:29">[<expr pos:start="153:28" pos:end="153:28"><literal type="number" pos:start="153:28" pos:end="153:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="155:11" pos:end="159:9">else if <condition pos:start="155:19" pos:end="155:41">(<expr pos:start="155:20" pos:end="155:40"><name pos:start="155:20" pos:end="155:35"><name pos:start="155:20" pos:end="155:22">ctx</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:35">length_size</name></name> <operator pos:start="155:37" pos:end="155:38">==</operator> <literal type="number" pos:start="155:40" pos:end="155:40">2</literal></expr>)</condition> <block pos:start="155:43" pos:end="159:9">{<block_content pos:start="157:13" pos:end="157:36">

            <expr_stmt pos:start="157:13" pos:end="157:36"><expr pos:start="157:13" pos:end="157:35"><name pos:start="157:13" pos:end="157:20">nal_size</name> <operator pos:start="157:22" pos:end="157:22">=</operator> <call pos:start="157:24" pos:end="157:35"><name pos:start="157:24" pos:end="157:30">AV_RB16</name><argument_list pos:start="157:31" pos:end="157:35">(<argument pos:start="157:32" pos:end="157:34"><expr pos:start="157:32" pos:end="157:34"><name pos:start="157:32" pos:end="157:34">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="159:11" pos:end="161:36">else<block type="pseudo" pos:start="161:13" pos:end="161:36"><block_content pos:start="161:13" pos:end="161:36">

            <expr_stmt pos:start="161:13" pos:end="161:36"><expr pos:start="161:13" pos:end="161:35"><name pos:start="161:13" pos:end="161:20">nal_size</name> <operator pos:start="161:22" pos:end="161:22">=</operator> <call pos:start="161:24" pos:end="161:35"><name pos:start="161:24" pos:end="161:30">AV_RB32</name><argument_list pos:start="161:31" pos:end="161:35">(<argument pos:start="161:32" pos:end="161:34"><expr pos:start="161:32" pos:end="161:34"><name pos:start="161:32" pos:end="161:34">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="165:9" pos:end="165:32"><expr pos:start="165:9" pos:end="165:31"><name pos:start="165:9" pos:end="165:11">buf</name> <operator pos:start="165:13" pos:end="165:14">+=</operator> <name pos:start="165:16" pos:end="165:31"><name pos:start="165:16" pos:end="165:18">ctx</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:31">length_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:32"><expr pos:start="167:9" pos:end="167:31"><name pos:start="167:9" pos:end="167:17">unit_type</name> <operator pos:start="167:19" pos:end="167:19">=</operator> <operator pos:start="167:21" pos:end="167:21">*</operator><name pos:start="167:22" pos:end="167:24">buf</name> <operator pos:start="167:26" pos:end="167:26">&amp;</operator> <literal type="number" pos:start="167:28" pos:end="167:31">0x1f</literal></expr>;</expr_stmt>



        <if_stmt pos:start="171:9" pos:end="173:22"><if pos:start="171:9" pos:end="173:22">if <condition pos:start="171:12" pos:end="171:53">(<expr pos:start="171:13" pos:end="171:52"><name pos:start="171:13" pos:end="171:15">buf</name> <operator pos:start="171:17" pos:end="171:17">+</operator> <name pos:start="171:19" pos:end="171:26">nal_size</name> <operator pos:start="171:28" pos:end="171:28">&gt;</operator> <name pos:start="171:30" pos:end="171:36">buf_end</name> <operator pos:start="171:38" pos:end="171:39">||</operator> <name pos:start="171:41" pos:end="171:48">nal_size</name> <operator pos:start="171:50" pos:end="171:50">&lt;</operator> <literal type="number" pos:start="171:52" pos:end="171:52">0</literal></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:22"><block_content pos:start="173:13" pos:end="173:22">

            <goto pos:start="173:13" pos:end="173:22">goto <name pos:start="173:18" pos:end="173:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <comment type="block" pos:start="177:9" pos:end="177:73">/* prepend only to the first type 5 NAL unit of an IDR picture */</comment>

        <if_stmt pos:start="179:9" pos:end="205:9"><if pos:start="179:9" pos:end="191:9">if <condition pos:start="179:12" pos:end="179:45">(<expr pos:start="179:13" pos:end="179:44"><name pos:start="179:13" pos:end="179:26"><name pos:start="179:13" pos:end="179:15">ctx</name><operator pos:start="179:16" pos:end="179:17">-&gt;</operator><name pos:start="179:18" pos:end="179:26">first_idr</name></name> <operator pos:start="179:28" pos:end="179:29">&amp;&amp;</operator> <name pos:start="179:31" pos:end="179:39">unit_type</name> <operator pos:start="179:41" pos:end="179:42">==</operator> <literal type="number" pos:start="179:44" pos:end="179:44">5</literal></expr>)</condition> <block pos:start="179:47" pos:end="191:9">{<block_content pos:start="181:13" pos:end="189:31">

            <if_stmt pos:start="181:13" pos:end="187:26"><if pos:start="181:13" pos:end="187:26">if <condition pos:start="181:16" pos:end="185:50">(<expr pos:start="181:17" pos:end="185:49"><call pos:start="181:17" pos:end="185:45"><name pos:start="181:17" pos:end="181:30">alloc_and_copy</name><argument_list pos:start="181:31" pos:end="185:45">(<argument pos:start="181:32" pos:end="181:38"><expr pos:start="181:32" pos:end="181:38"><name pos:start="181:32" pos:end="181:38">poutbuf</name></expr></argument>, <argument pos:start="181:41" pos:end="181:52"><expr pos:start="181:41" pos:end="181:52"><name pos:start="181:41" pos:end="181:52">poutbuf_size</name></expr></argument>,

                               <argument pos:start="183:32" pos:end="183:47"><expr pos:start="183:32" pos:end="183:47"><name pos:start="183:32" pos:end="183:47"><name pos:start="183:32" pos:end="183:36">avctx</name><operator pos:start="183:37" pos:end="183:38">-&gt;</operator><name pos:start="183:39" pos:end="183:47">extradata</name></name></expr></argument>, <argument pos:start="183:50" pos:end="183:70"><expr pos:start="183:50" pos:end="183:70"><name pos:start="183:50" pos:end="183:70"><name pos:start="183:50" pos:end="183:54">avctx</name><operator pos:start="183:55" pos:end="183:56">-&gt;</operator><name pos:start="183:57" pos:end="183:70">extradata_size</name></name></expr></argument>,

                               <argument pos:start="185:32" pos:end="185:34"><expr pos:start="185:32" pos:end="185:34"><name pos:start="185:32" pos:end="185:34">buf</name></expr></argument>, <argument pos:start="185:37" pos:end="185:44"><expr pos:start="185:37" pos:end="185:44"><name pos:start="185:37" pos:end="185:44">nal_size</name></expr></argument>)</argument_list></call> <operator pos:start="185:47" pos:end="185:47">&lt;</operator> <literal type="number" pos:start="185:49" pos:end="185:49">0</literal></expr>)</condition><block type="pseudo" pos:start="187:17" pos:end="187:26"><block_content pos:start="187:17" pos:end="187:26">

                <goto pos:start="187:17" pos:end="187:26">goto <name pos:start="187:22" pos:end="187:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:31"><expr pos:start="189:13" pos:end="189:30"><name pos:start="189:13" pos:end="189:26"><name pos:start="189:13" pos:end="189:15">ctx</name><operator pos:start="189:16" pos:end="189:17">-&gt;</operator><name pos:start="189:18" pos:end="189:26">first_idr</name></name> <operator pos:start="189:28" pos:end="189:28">=</operator> <literal type="number" pos:start="189:30" pos:end="189:30">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="191:11" pos:end="205:9">else <block pos:start="191:16" pos:end="205:9">{<block_content pos:start="193:13" pos:end="203:35">

            <if_stmt pos:start="193:13" pos:end="199:26"><if pos:start="193:13" pos:end="199:26">if <condition pos:start="193:16" pos:end="197:50">(<expr pos:start="193:17" pos:end="197:49"><call pos:start="193:17" pos:end="197:45"><name pos:start="193:17" pos:end="193:30">alloc_and_copy</name><argument_list pos:start="193:31" pos:end="197:45">(<argument pos:start="193:32" pos:end="193:38"><expr pos:start="193:32" pos:end="193:38"><name pos:start="193:32" pos:end="193:38">poutbuf</name></expr></argument>, <argument pos:start="193:41" pos:end="193:52"><expr pos:start="193:41" pos:end="193:52"><name pos:start="193:41" pos:end="193:52">poutbuf_size</name></expr></argument>,

                               <argument pos:start="195:32" pos:end="195:35"><expr pos:start="195:32" pos:end="195:35"><name pos:start="195:32" pos:end="195:35">NULL</name></expr></argument>, <argument pos:start="195:38" pos:end="195:38"><expr pos:start="195:38" pos:end="195:38"><literal type="number" pos:start="195:38" pos:end="195:38">0</literal></expr></argument>,

                               <argument pos:start="197:32" pos:end="197:34"><expr pos:start="197:32" pos:end="197:34"><name pos:start="197:32" pos:end="197:34">buf</name></expr></argument>, <argument pos:start="197:37" pos:end="197:44"><expr pos:start="197:37" pos:end="197:44"><name pos:start="197:37" pos:end="197:44">nal_size</name></expr></argument>)</argument_list></call> <operator pos:start="197:47" pos:end="197:47">&lt;</operator> <literal type="number" pos:start="197:49" pos:end="197:49">0</literal></expr>)</condition><block type="pseudo" pos:start="199:17" pos:end="199:26"><block_content pos:start="199:17" pos:end="199:26">

                <goto pos:start="199:17" pos:end="199:26">goto <name pos:start="199:22" pos:end="199:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="201:13" pos:end="203:35"><if pos:start="201:13" pos:end="203:35">if <condition pos:start="201:16" pos:end="201:50">(<expr pos:start="201:17" pos:end="201:49"><operator pos:start="201:17" pos:end="201:17">!</operator><name pos:start="201:18" pos:end="201:31"><name pos:start="201:18" pos:end="201:20">ctx</name><operator pos:start="201:21" pos:end="201:22">-&gt;</operator><name pos:start="201:23" pos:end="201:31">first_idr</name></name> <operator pos:start="201:33" pos:end="201:34">&amp;&amp;</operator> <name pos:start="201:36" pos:end="201:44">unit_type</name> <operator pos:start="201:46" pos:end="201:47">==</operator> <literal type="number" pos:start="201:49" pos:end="201:49">1</literal></expr>)</condition><block type="pseudo" pos:start="203:17" pos:end="203:35"><block_content pos:start="203:17" pos:end="203:35">

                <expr_stmt pos:start="203:17" pos:end="203:35"><expr pos:start="203:17" pos:end="203:34"><name pos:start="203:17" pos:end="203:30"><name pos:start="203:17" pos:end="203:19">ctx</name><operator pos:start="203:20" pos:end="203:21">-&gt;</operator><name pos:start="203:22" pos:end="203:30">first_idr</name></name> <operator pos:start="203:32" pos:end="203:32">=</operator> <literal type="number" pos:start="203:34" pos:end="203:34">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="209:9" pos:end="209:24"><expr pos:start="209:9" pos:end="209:23"><name pos:start="209:9" pos:end="209:11">buf</name> <operator pos:start="209:13" pos:end="209:14">+=</operator> <name pos:start="209:16" pos:end="209:23">nal_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:50"><expr pos:start="211:9" pos:end="211:49"><name pos:start="211:9" pos:end="211:18">cumul_size</name> <operator pos:start="211:20" pos:end="211:21">+=</operator> <name pos:start="211:23" pos:end="211:30">nal_size</name> <operator pos:start="211:32" pos:end="211:32">+</operator> <name pos:start="211:34" pos:end="211:49"><name pos:start="211:34" pos:end="211:36">ctx</name><operator pos:start="211:37" pos:end="211:38">-&gt;</operator><name pos:start="211:39" pos:end="211:49">length_size</name></name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="213:13" pos:end="213:35">(<expr pos:start="213:14" pos:end="213:34"><name pos:start="213:14" pos:end="213:23">cumul_size</name> <operator pos:start="213:25" pos:end="213:25">&lt;</operator> <name pos:start="213:27" pos:end="213:34">buf_size</name></expr>)</condition>;</do>



    <return pos:start="217:5" pos:end="217:13">return <expr pos:start="217:12" pos:end="217:12"><literal type="number" pos:start="217:12" pos:end="217:12">1</literal></expr>;</return>



<label pos:start="221:1" pos:end="221:5"><name pos:start="221:1" pos:end="221:4">fail</name>:</label>

    <expr_stmt pos:start="223:5" pos:end="223:22"><expr pos:start="223:5" pos:end="223:21"><call pos:start="223:5" pos:end="223:21"><name pos:start="223:5" pos:end="223:12">av_freep</name><argument_list pos:start="223:13" pos:end="223:21">(<argument pos:start="223:14" pos:end="223:20"><expr pos:start="223:14" pos:end="223:20"><name pos:start="223:14" pos:end="223:20">poutbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:22"><expr pos:start="225:5" pos:end="225:21"><operator pos:start="225:5" pos:end="225:5">*</operator><name pos:start="225:6" pos:end="225:17">poutbuf_size</name> <operator pos:start="225:19" pos:end="225:19">=</operator> <literal type="number" pos:start="225:21" pos:end="225:21">0</literal></expr>;</expr_stmt>

    <return pos:start="227:5" pos:end="227:27">return <expr pos:start="227:12" pos:end="227:26"><call pos:start="227:12" pos:end="227:26"><name pos:start="227:12" pos:end="227:18">AVERROR</name><argument_list pos:start="227:19" pos:end="227:26">(<argument pos:start="227:20" pos:end="227:25"><expr pos:start="227:20" pos:end="227:25"><name pos:start="227:20" pos:end="227:25">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
