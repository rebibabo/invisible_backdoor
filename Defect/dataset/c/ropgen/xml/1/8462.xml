<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8462.c" pos:tabs="8"><function pos:start="1:1" pos:end="329:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">bdrv_open</name><parameter_list pos:start="1:14" pos:end="3:42">(<parameter pos:start="1:15" pos:end="1:34"><decl pos:start="1:15" pos:end="1:34"><type pos:start="1:15" pos:end="1:34"><name pos:start="1:15" pos:end="1:30">BlockDriverState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:34">bs</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:56">filename</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:72"><decl pos:start="1:59" pos:end="1:72"><type pos:start="1:59" pos:end="1:72"><name pos:start="1:59" pos:end="1:63">QDict</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:72">options</name></decl></parameter>,

              <parameter pos:start="3:15" pos:end="3:23"><decl pos:start="3:15" pos:end="3:23"><type pos:start="3:15" pos:end="3:23"><name pos:start="3:15" pos:end="3:17">int</name></type> <name pos:start="3:19" pos:end="3:23">flags</name></decl></parameter>, <parameter pos:start="3:26" pos:end="3:41"><decl pos:start="3:26" pos:end="3:41"><type pos:start="3:26" pos:end="3:41"><name pos:start="3:26" pos:end="3:36">BlockDriver</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">drv</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="329:1">{<block_content pos:start="7:5" pos:end="327:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:73">/* TODO: extra byte is a hack to ensure MAX_PATH space on Windows. */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:35"><name pos:start="11:10" pos:end="11:21">tmp_filename</name><index pos:start="11:22" pos:end="11:35">[<expr pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:30">PATH_MAX</name> <operator pos:start="11:32" pos:end="11:32">+</operator> <literal type="number" pos:start="11:34" pos:end="11:34">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">BlockDriverState</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:26">file</name> <init pos:start="13:28" pos:end="13:33">= <expr pos:start="13:30" pos:end="13:33"><name pos:start="13:30" pos:end="13:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">QDict</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:23">file_options</name> <init pos:start="15:25" pos:end="15:30">= <expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:44">/* NULL means an empty set of options */</comment>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:15">options</name> <operator pos:start="21:17" pos:end="21:18">==</operator> <name pos:start="21:20" pos:end="21:23">NULL</name></expr>)</condition> <block pos:start="21:26" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:30">

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:15">options</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:29"><name pos:start="23:19" pos:end="23:27">qdict_new</name><argument_list pos:start="23:28" pos:end="23:29">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:6">bs</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:15">options</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:25">options</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:11">options</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:42"><name pos:start="31:15" pos:end="31:33">qdict_clone_shallow</name><argument_list pos:start="31:34" pos:end="31:42">(<argument pos:start="31:35" pos:end="31:41"><expr pos:start="31:35" pos:end="31:41"><name pos:start="31:35" pos:end="31:41">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:59">/* For snapshot=on, create a temporary qcow2 overlay */</comment>

    <if_stmt pos:start="37:5" pos:end="163:5"><if pos:start="37:5" pos:end="163:5">if <condition pos:start="37:8" pos:end="37:32">(<expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:13">flags</name> <operator pos:start="37:15" pos:end="37:15">&amp;</operator> <name pos:start="37:17" pos:end="37:31">BDRV_O_SNAPSHOT</name></expr>)</condition> <block pos:start="37:34" pos:end="163:5">{<block_content pos:start="39:9" pos:end="161:29">

        <decl_stmt pos:start="39:9" pos:end="39:30"><decl pos:start="39:9" pos:end="39:29"><type pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:24">BlockDriverState</name> <modifier pos:start="39:26" pos:end="39:26">*</modifier></type><name pos:start="39:27" pos:end="39:29">bs1</name></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:27"><decl pos:start="41:9" pos:end="41:26"><type pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:15">int64_t</name></type> <name pos:start="41:17" pos:end="41:26">total_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:32"><decl pos:start="43:9" pos:end="43:31"><type pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:19">BlockDriver</name> <modifier pos:start="43:21" pos:end="43:21">*</modifier></type><name pos:start="43:22" pos:end="43:31">bdrv_qcow2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:44"><decl pos:start="45:9" pos:end="45:43"><type pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:27">QEMUOptionParameter</name> <modifier pos:start="45:29" pos:end="45:29">*</modifier></type><name pos:start="45:30" pos:end="45:43">create_options</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:40"><decl pos:start="47:9" pos:end="47:39"><type pos:start="47:9" pos:end="47:12"><name pos:start="47:9" pos:end="47:12">char</name></type> <name pos:start="47:14" pos:end="47:39"><name pos:start="47:14" pos:end="47:29">backing_filename</name><index pos:start="47:30" pos:end="47:39">[<expr pos:start="47:31" pos:end="47:38"><name pos:start="47:31" pos:end="47:38">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="59:9">if <condition pos:start="51:12" pos:end="51:37">(<expr pos:start="51:13" pos:end="51:36"><call pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:22">qdict_size</name><argument_list pos:start="51:23" pos:end="51:31">(<argument pos:start="51:24" pos:end="51:30"><expr pos:start="51:24" pos:end="51:30"><name pos:start="51:24" pos:end="51:30">options</name></expr></argument>)</argument_list></call> <operator pos:start="51:33" pos:end="51:34">!=</operator> <literal type="number" pos:start="51:36" pos:end="51:36">0</literal></expr>)</condition> <block pos:start="51:39" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:22">

            <expr_stmt pos:start="53:13" pos:end="53:79"><expr pos:start="53:13" pos:end="53:78"><call pos:start="53:13" pos:end="53:78"><name pos:start="53:13" pos:end="53:24">error_report</name><argument_list pos:start="53:25" pos:end="53:78">(<argument pos:start="53:26" pos:end="53:77"><expr pos:start="53:26" pos:end="53:77"><literal type="string" pos:start="53:26" pos:end="53:77">"Can't use snapshot=on with driver-specific options"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:26"><expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <operator pos:start="55:19" pos:end="55:19">-</operator><name pos:start="55:20" pos:end="55:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="57:13" pos:end="57:22">goto <name pos:start="57:18" pos:end="57:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:33"><expr pos:start="61:9" pos:end="61:32"><call pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:14">assert</name><argument_list pos:start="61:15" pos:end="61:32">(<argument pos:start="61:16" pos:end="61:31"><expr pos:start="61:16" pos:end="61:31"><name pos:start="61:16" pos:end="61:23">filename</name> <operator pos:start="61:25" pos:end="61:26">!=</operator> <name pos:start="61:28" pos:end="61:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="65:9" pos:end="67:52">/* if snapshot, we create a temporary backing file and open it

           instead of opening 'filename' directly */</comment>



        <comment type="block" pos:start="71:9" pos:end="71:48">/* if there is a backing file, use it */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:27"><expr pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:11">bs1</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:26"><name pos:start="73:15" pos:end="73:22">bdrv_new</name><argument_list pos:start="73:23" pos:end="73:26">(<argument pos:start="73:24" pos:end="73:25"><expr pos:start="73:24" pos:end="73:25"><literal type="string" pos:start="73:24" pos:end="73:25">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:53"><expr pos:start="75:9" pos:end="75:52"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:52"><name pos:start="75:15" pos:end="75:23">bdrv_open</name><argument_list pos:start="75:24" pos:end="75:52">(<argument pos:start="75:25" pos:end="75:27"><expr pos:start="75:25" pos:end="75:27"><name pos:start="75:25" pos:end="75:27">bs1</name></expr></argument>, <argument pos:start="75:30" pos:end="75:37"><expr pos:start="75:30" pos:end="75:37"><name pos:start="75:30" pos:end="75:37">filename</name></expr></argument>, <argument pos:start="75:40" pos:end="75:43"><expr pos:start="75:40" pos:end="75:43"><name pos:start="75:40" pos:end="75:43">NULL</name></expr></argument>, <argument pos:start="75:46" pos:end="75:46"><expr pos:start="75:46" pos:end="75:46"><literal type="number" pos:start="75:46" pos:end="75:46">0</literal></expr></argument>, <argument pos:start="75:49" pos:end="75:51"><expr pos:start="75:49" pos:end="75:51"><name pos:start="75:49" pos:end="75:51">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:20">(<expr pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">&lt;</operator> <literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>)</condition> <block pos:start="77:22" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:22">

            <expr_stmt pos:start="79:13" pos:end="79:29"><expr pos:start="79:13" pos:end="79:28"><call pos:start="79:13" pos:end="79:28"><name pos:start="79:13" pos:end="79:23">bdrv_delete</name><argument_list pos:start="79:24" pos:end="79:28">(<argument pos:start="79:25" pos:end="79:27"><expr pos:start="79:25" pos:end="79:27"><name pos:start="79:25" pos:end="79:27">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="81:13" pos:end="81:22">goto <name pos:start="81:18" pos:end="81:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:60"><expr pos:start="85:9" pos:end="85:59"><name pos:start="85:9" pos:end="85:18">total_size</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <call pos:start="85:22" pos:end="85:40"><name pos:start="85:22" pos:end="85:35">bdrv_getlength</name><argument_list pos:start="85:36" pos:end="85:40">(<argument pos:start="85:37" pos:end="85:39"><expr pos:start="85:37" pos:end="85:39"><name pos:start="85:37" pos:end="85:39">bs1</name></expr></argument>)</argument_list></call> <operator pos:start="85:42" pos:end="85:42">&amp;</operator> <name pos:start="85:44" pos:end="85:59">BDRV_SECTOR_MASK</name></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:25"><expr pos:start="89:9" pos:end="89:24"><call pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:19">bdrv_delete</name><argument_list pos:start="89:20" pos:end="89:24">(<argument pos:start="89:21" pos:end="89:23"><expr pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:23">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:67"><expr pos:start="93:9" pos:end="93:66"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:66"><name pos:start="93:15" pos:end="93:30">get_tmp_filename</name><argument_list pos:start="93:31" pos:end="93:66">(<argument pos:start="93:32" pos:end="93:43"><expr pos:start="93:32" pos:end="93:43"><name pos:start="93:32" pos:end="93:43">tmp_filename</name></expr></argument>, <argument pos:start="93:46" pos:end="93:65"><expr pos:start="93:46" pos:end="93:65"><sizeof pos:start="93:46" pos:end="93:65">sizeof<argument_list pos:start="93:52" pos:end="93:65">(<argument pos:start="93:53" pos:end="93:64"><expr pos:start="93:53" pos:end="93:64"><name pos:start="93:53" pos:end="93:64">tmp_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="99:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:20">(<expr pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">&lt;</operator> <literal type="number" pos:start="95:19" pos:end="95:19">0</literal></expr>)</condition> <block pos:start="95:22" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:22">

            <goto pos:start="97:13" pos:end="97:22">goto <name pos:start="97:18" pos:end="97:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="103:9" pos:end="103:52">/* Real path is meaningless for protocols */</comment>

        <if_stmt pos:start="105:9" pos:end="117:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:40">(<expr pos:start="105:13" pos:end="105:39"><call pos:start="105:13" pos:end="105:39"><name pos:start="105:13" pos:end="105:29">path_has_protocol</name><argument_list pos:start="105:30" pos:end="105:39">(<argument pos:start="105:31" pos:end="105:38"><expr pos:start="105:31" pos:end="105:38"><name pos:start="105:31" pos:end="105:38">filename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:42" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:37">

            <expr_stmt pos:start="107:13" pos:end="109:37"><expr pos:start="107:13" pos:end="109:36"><call pos:start="107:13" pos:end="109:36"><name pos:start="107:13" pos:end="107:20">snprintf</name><argument_list pos:start="107:21" pos:end="109:36">(<argument pos:start="107:22" pos:end="107:37"><expr pos:start="107:22" pos:end="107:37"><name pos:start="107:22" pos:end="107:37">backing_filename</name></expr></argument>, <argument pos:start="107:40" pos:end="107:63"><expr pos:start="107:40" pos:end="107:63"><sizeof pos:start="107:40" pos:end="107:63">sizeof<argument_list pos:start="107:46" pos:end="107:63">(<argument pos:start="107:47" pos:end="107:62"><expr pos:start="107:47" pos:end="107:62"><name pos:start="107:47" pos:end="107:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="109:22" pos:end="109:25"><expr pos:start="109:22" pos:end="109:25"><literal type="string" pos:start="109:22" pos:end="109:25">"%s"</literal></expr></argument>, <argument pos:start="109:28" pos:end="109:35"><expr pos:start="109:28" pos:end="109:35"><name pos:start="109:28" pos:end="109:35">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="111:11" pos:end="117:9">else if <condition pos:start="111:19" pos:end="111:57">(<expr pos:start="111:20" pos:end="111:56"><operator pos:start="111:20" pos:end="111:20">!</operator><call pos:start="111:21" pos:end="111:56"><name pos:start="111:21" pos:end="111:28">realpath</name><argument_list pos:start="111:29" pos:end="111:56">(<argument pos:start="111:30" pos:end="111:37"><expr pos:start="111:30" pos:end="111:37"><name pos:start="111:30" pos:end="111:37">filename</name></expr></argument>, <argument pos:start="111:40" pos:end="111:55"><expr pos:start="111:40" pos:end="111:55"><name pos:start="111:40" pos:end="111:55">backing_filename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:59" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:22">

            <expr_stmt pos:start="113:13" pos:end="113:25"><expr pos:start="113:13" pos:end="113:24"><name pos:start="113:13" pos:end="113:15">ret</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <operator pos:start="113:19" pos:end="113:19">-</operator><name pos:start="113:20" pos:end="113:24">errno</name></expr>;</expr_stmt>

            <goto pos:start="115:13" pos:end="115:22">goto <name pos:start="115:18" pos:end="115:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:47"><expr pos:start="121:9" pos:end="121:46"><name pos:start="121:9" pos:end="121:18">bdrv_qcow2</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <call pos:start="121:22" pos:end="121:46"><name pos:start="121:22" pos:end="121:37">bdrv_find_format</name><argument_list pos:start="121:38" pos:end="121:46">(<argument pos:start="121:39" pos:end="121:45"><expr pos:start="121:39" pos:end="121:45"><literal type="string" pos:start="121:39" pos:end="121:45">"qcow2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="125:55"><expr pos:start="123:9" pos:end="125:54"><name pos:start="123:9" pos:end="123:22">create_options</name> <operator pos:start="123:24" pos:end="123:24">=</operator> <call pos:start="123:26" pos:end="125:54"><name pos:start="123:26" pos:end="123:48">parse_option_parameters</name><argument_list pos:start="123:49" pos:end="125:54">(<argument pos:start="123:50" pos:end="123:51"><expr pos:start="123:50" pos:end="123:51"><literal type="string" pos:start="123:50" pos:end="123:51">""</literal></expr></argument>, <argument pos:start="123:54" pos:end="123:79"><expr pos:start="123:54" pos:end="123:79"><name pos:start="123:54" pos:end="123:79"><name pos:start="123:54" pos:end="123:63">bdrv_qcow2</name><operator pos:start="123:64" pos:end="123:65">-&gt;</operator><name pos:start="123:66" pos:end="123:79">create_options</name></name></expr></argument>,

                                                 <argument pos:start="125:50" pos:end="125:53"><expr pos:start="125:50" pos:end="125:53"><name pos:start="125:50" pos:end="125:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:77"><expr pos:start="129:9" pos:end="129:76"><call pos:start="129:9" pos:end="129:76"><name pos:start="129:9" pos:end="129:32">set_option_parameter_int</name><argument_list pos:start="129:33" pos:end="129:76">(<argument pos:start="129:34" pos:end="129:47"><expr pos:start="129:34" pos:end="129:47"><name pos:start="129:34" pos:end="129:47">create_options</name></expr></argument>, <argument pos:start="129:50" pos:end="129:63"><expr pos:start="129:50" pos:end="129:63"><name pos:start="129:50" pos:end="129:63">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="129:66" pos:end="129:75"><expr pos:start="129:66" pos:end="129:75"><name pos:start="129:66" pos:end="129:75">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="133:47"><expr pos:start="131:9" pos:end="133:46"><call pos:start="131:9" pos:end="133:46"><name pos:start="131:9" pos:end="131:28">set_option_parameter</name><argument_list pos:start="131:29" pos:end="133:46">(<argument pos:start="131:30" pos:end="131:43"><expr pos:start="131:30" pos:end="131:43"><name pos:start="131:30" pos:end="131:43">create_options</name></expr></argument>, <argument pos:start="131:46" pos:end="131:67"><expr pos:start="131:46" pos:end="131:67"><name pos:start="131:46" pos:end="131:67">BLOCK_OPT_BACKING_FILE</name></expr></argument>,

                             <argument pos:start="133:30" pos:end="133:45"><expr pos:start="133:30" pos:end="133:45"><name pos:start="133:30" pos:end="133:45">backing_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="141:9"><if pos:start="135:9" pos:end="141:9">if <condition pos:start="135:12" pos:end="135:16">(<expr pos:start="135:13" pos:end="135:15"><name pos:start="135:13" pos:end="135:15">drv</name></expr>)</condition> <block pos:start="135:18" pos:end="141:9">{<block_content pos:start="137:13" pos:end="139:34">

            <expr_stmt pos:start="137:13" pos:end="139:34"><expr pos:start="137:13" pos:end="139:33"><call pos:start="137:13" pos:end="139:33"><name pos:start="137:13" pos:end="137:32">set_option_parameter</name><argument_list pos:start="137:33" pos:end="139:33">(<argument pos:start="137:34" pos:end="137:47"><expr pos:start="137:34" pos:end="137:47"><name pos:start="137:34" pos:end="137:47">create_options</name></expr></argument>, <argument pos:start="137:50" pos:end="137:70"><expr pos:start="137:50" pos:end="137:70"><name pos:start="137:50" pos:end="137:70">BLOCK_OPT_BACKING_FMT</name></expr></argument>,

                <argument pos:start="139:17" pos:end="139:32"><expr pos:start="139:17" pos:end="139:32"><name pos:start="139:17" pos:end="139:32"><name pos:start="139:17" pos:end="139:19">drv</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:32">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:68"><expr pos:start="145:9" pos:end="145:67"><name pos:start="145:9" pos:end="145:11">ret</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <call pos:start="145:15" pos:end="145:67"><name pos:start="145:15" pos:end="145:25">bdrv_create</name><argument_list pos:start="145:26" pos:end="145:67">(<argument pos:start="145:27" pos:end="145:36"><expr pos:start="145:27" pos:end="145:36"><name pos:start="145:27" pos:end="145:36">bdrv_qcow2</name></expr></argument>, <argument pos:start="145:39" pos:end="145:50"><expr pos:start="145:39" pos:end="145:50"><name pos:start="145:39" pos:end="145:50">tmp_filename</name></expr></argument>, <argument pos:start="145:53" pos:end="145:66"><expr pos:start="145:53" pos:end="145:66"><name pos:start="145:53" pos:end="145:66">create_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:47"><expr pos:start="147:9" pos:end="147:46"><call pos:start="147:9" pos:end="147:46"><name pos:start="147:9" pos:end="147:30">free_option_parameters</name><argument_list pos:start="147:31" pos:end="147:46">(<argument pos:start="147:32" pos:end="147:45"><expr pos:start="147:32" pos:end="147:45"><name pos:start="147:32" pos:end="147:45">create_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="153:9"><if pos:start="149:9" pos:end="153:9">if <condition pos:start="149:12" pos:end="149:20">(<expr pos:start="149:13" pos:end="149:19"><name pos:start="149:13" pos:end="149:15">ret</name> <operator pos:start="149:17" pos:end="149:17">&lt;</operator> <literal type="number" pos:start="149:19" pos:end="149:19">0</literal></expr>)</condition> <block pos:start="149:22" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:22">

            <goto pos:start="151:13" pos:end="151:22">goto <name pos:start="151:18" pos:end="151:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:32"><expr pos:start="157:9" pos:end="157:31"><name pos:start="157:9" pos:end="157:16">filename</name> <operator pos:start="157:18" pos:end="157:18">=</operator> <name pos:start="157:20" pos:end="157:31">tmp_filename</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:25"><expr pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:11">drv</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <name pos:start="159:15" pos:end="159:24">bdrv_qcow2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:29"><expr pos:start="161:9" pos:end="161:28"><name pos:start="161:9" pos:end="161:24"><name pos:start="161:9" pos:end="161:10">bs</name><operator pos:start="161:11" pos:end="161:12">-&gt;</operator><name pos:start="161:13" pos:end="161:24">is_temporary</name></name> <operator pos:start="161:26" pos:end="161:26">=</operator> <literal type="number" pos:start="161:28" pos:end="161:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="167:5" pos:end="167:46">/* Open image file without format layer */</comment>

    <if_stmt pos:start="169:5" pos:end="173:5"><if pos:start="169:5" pos:end="173:5">if <condition pos:start="169:8" pos:end="169:28">(<expr pos:start="169:9" pos:end="169:27"><name pos:start="169:9" pos:end="169:13">flags</name> <operator pos:start="169:15" pos:end="169:15">&amp;</operator> <name pos:start="169:17" pos:end="169:27">BDRV_O_RDWR</name></expr>)</condition> <block pos:start="169:30" pos:end="173:5">{<block_content pos:start="171:9" pos:end="171:35">

        <expr_stmt pos:start="171:9" pos:end="171:35"><expr pos:start="171:9" pos:end="171:34"><name pos:start="171:9" pos:end="171:13">flags</name> <operator pos:start="171:15" pos:end="171:16">|=</operator> <name pos:start="171:18" pos:end="171:34">BDRV_O_ALLOW_RDWR</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:54"><expr pos:start="177:5" pos:end="177:53"><call pos:start="177:5" pos:end="177:53"><name pos:start="177:5" pos:end="177:20">extract_subqdict</name><argument_list pos:start="177:21" pos:end="177:53">(<argument pos:start="177:22" pos:end="177:28"><expr pos:start="177:22" pos:end="177:28"><name pos:start="177:22" pos:end="177:28">options</name></expr></argument>, <argument pos:start="177:31" pos:end="177:43"><expr pos:start="177:31" pos:end="177:43"><operator pos:start="177:31" pos:end="177:31">&amp;</operator><name pos:start="177:32" pos:end="177:43">file_options</name></expr></argument>, <argument pos:start="177:46" pos:end="177:52"><expr pos:start="177:46" pos:end="177:52"><literal type="string" pos:start="177:46" pos:end="177:52">"file."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="181:5" pos:end="183:53"><expr pos:start="181:5" pos:end="183:52"><name pos:start="181:5" pos:end="181:7">ret</name> <operator pos:start="181:9" pos:end="181:9">=</operator> <call pos:start="181:11" pos:end="183:52"><name pos:start="181:11" pos:end="181:24">bdrv_file_open</name><argument_list pos:start="181:25" pos:end="183:52">(<argument pos:start="181:26" pos:end="181:30"><expr pos:start="181:26" pos:end="181:30"><operator pos:start="181:26" pos:end="181:26">&amp;</operator><name pos:start="181:27" pos:end="181:30">file</name></expr></argument>, <argument pos:start="181:33" pos:end="181:40"><expr pos:start="181:33" pos:end="181:40"><name pos:start="181:33" pos:end="181:40">filename</name></expr></argument>, <argument pos:start="181:43" pos:end="181:54"><expr pos:start="181:43" pos:end="181:54"><name pos:start="181:43" pos:end="181:54">file_options</name></expr></argument>,

                         <argument pos:start="183:26" pos:end="183:51"><expr pos:start="183:26" pos:end="183:51"><call pos:start="183:26" pos:end="183:51"><name pos:start="183:26" pos:end="183:40">bdrv_open_flags</name><argument_list pos:start="183:41" pos:end="183:51">(<argument pos:start="183:42" pos:end="183:43"><expr pos:start="183:42" pos:end="183:43"><name pos:start="183:42" pos:end="183:43">bs</name></expr></argument>, <argument pos:start="183:46" pos:end="183:50"><expr pos:start="183:46" pos:end="183:50"><name pos:start="183:46" pos:end="183:50">flags</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="189:5"><if pos:start="185:5" pos:end="189:5">if <condition pos:start="185:8" pos:end="185:16">(<expr pos:start="185:9" pos:end="185:15"><name pos:start="185:9" pos:end="185:11">ret</name> <operator pos:start="185:13" pos:end="185:13">&lt;</operator> <literal type="number" pos:start="185:15" pos:end="185:15">0</literal></expr>)</condition> <block pos:start="185:18" pos:end="189:5">{<block_content pos:start="187:9" pos:end="187:18">

        <goto pos:start="187:9" pos:end="187:18">goto <name pos:start="187:14" pos:end="187:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="193:5" pos:end="193:44">/* Find the right image format driver */</comment>

    <if_stmt pos:start="195:5" pos:end="199:5"><if pos:start="195:5" pos:end="199:5">if <condition pos:start="195:8" pos:end="195:13">(<expr pos:start="195:9" pos:end="195:12"><operator pos:start="195:9" pos:end="195:9">!</operator><name pos:start="195:10" pos:end="195:12">drv</name></expr>)</condition> <block pos:start="195:15" pos:end="199:5">{<block_content pos:start="197:9" pos:end="197:54">

        <expr_stmt pos:start="197:9" pos:end="197:54"><expr pos:start="197:9" pos:end="197:53"><name pos:start="197:9" pos:end="197:11">ret</name> <operator pos:start="197:13" pos:end="197:13">=</operator> <call pos:start="197:15" pos:end="197:53"><name pos:start="197:15" pos:end="197:31">find_image_format</name><argument_list pos:start="197:32" pos:end="197:53">(<argument pos:start="197:33" pos:end="197:36"><expr pos:start="197:33" pos:end="197:36"><name pos:start="197:33" pos:end="197:36">file</name></expr></argument>, <argument pos:start="197:39" pos:end="197:46"><expr pos:start="197:39" pos:end="197:46"><name pos:start="197:39" pos:end="197:46">filename</name></expr></argument>, <argument pos:start="197:49" pos:end="197:52"><expr pos:start="197:49" pos:end="197:52"><operator pos:start="197:49" pos:end="197:49">&amp;</operator><name pos:start="197:50" pos:end="197:52">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="203:5" pos:end="207:5"><if pos:start="203:5" pos:end="207:5">if <condition pos:start="203:8" pos:end="203:13">(<expr pos:start="203:9" pos:end="203:12"><operator pos:start="203:9" pos:end="203:9">!</operator><name pos:start="203:10" pos:end="203:12">drv</name></expr>)</condition> <block pos:start="203:15" pos:end="207:5">{<block_content pos:start="205:9" pos:end="205:29">

        <goto pos:start="205:9" pos:end="205:29">goto <name pos:start="205:14" pos:end="205:28">unlink_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="211:5" pos:end="211:24">/* Open the image */</comment>

    <expr_stmt pos:start="213:5" pos:end="213:68"><expr pos:start="213:5" pos:end="213:67"><name pos:start="213:5" pos:end="213:7">ret</name> <operator pos:start="213:9" pos:end="213:9">=</operator> <call pos:start="213:11" pos:end="213:67"><name pos:start="213:11" pos:end="213:26">bdrv_open_common</name><argument_list pos:start="213:27" pos:end="213:67">(<argument pos:start="213:28" pos:end="213:29"><expr pos:start="213:28" pos:end="213:29"><name pos:start="213:28" pos:end="213:29">bs</name></expr></argument>, <argument pos:start="213:32" pos:end="213:35"><expr pos:start="213:32" pos:end="213:35"><name pos:start="213:32" pos:end="213:35">file</name></expr></argument>, <argument pos:start="213:38" pos:end="213:45"><expr pos:start="213:38" pos:end="213:45"><name pos:start="213:38" pos:end="213:45">filename</name></expr></argument>, <argument pos:start="213:48" pos:end="213:54"><expr pos:start="213:48" pos:end="213:54"><name pos:start="213:48" pos:end="213:54">options</name></expr></argument>, <argument pos:start="213:57" pos:end="213:61"><expr pos:start="213:57" pos:end="213:61"><name pos:start="213:57" pos:end="213:61">flags</name></expr></argument>, <argument pos:start="213:64" pos:end="213:66"><expr pos:start="213:64" pos:end="213:66"><name pos:start="213:64" pos:end="213:66">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="215:5" pos:end="219:5"><if pos:start="215:5" pos:end="219:5">if <condition pos:start="215:8" pos:end="215:16">(<expr pos:start="215:9" pos:end="215:15"><name pos:start="215:9" pos:end="215:11">ret</name> <operator pos:start="215:13" pos:end="215:13">&lt;</operator> <literal type="number" pos:start="215:15" pos:end="215:15">0</literal></expr>)</condition> <block pos:start="215:18" pos:end="219:5">{<block_content pos:start="217:9" pos:end="217:29">

        <goto pos:start="217:9" pos:end="217:29">goto <name pos:start="217:14" pos:end="217:28">unlink_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="223:5" pos:end="229:5"><if pos:start="223:5" pos:end="229:5">if <condition pos:start="223:8" pos:end="223:25">(<expr pos:start="223:9" pos:end="223:24"><name pos:start="223:9" pos:end="223:16"><name pos:start="223:9" pos:end="223:10">bs</name><operator pos:start="223:11" pos:end="223:12">-&gt;</operator><name pos:start="223:13" pos:end="223:16">file</name></name> <operator pos:start="223:18" pos:end="223:19">!=</operator> <name pos:start="223:21" pos:end="223:24">file</name></expr>)</condition> <block pos:start="223:27" pos:end="229:5">{<block_content pos:start="225:9" pos:end="227:20">

        <expr_stmt pos:start="225:9" pos:end="225:26"><expr pos:start="225:9" pos:end="225:25"><call pos:start="225:9" pos:end="225:25"><name pos:start="225:9" pos:end="225:19">bdrv_delete</name><argument_list pos:start="225:20" pos:end="225:25">(<argument pos:start="225:21" pos:end="225:24"><expr pos:start="225:21" pos:end="225:24"><name pos:start="225:21" pos:end="225:24">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:20"><expr pos:start="227:9" pos:end="227:19"><name pos:start="227:9" pos:end="227:12">file</name> <operator pos:start="227:14" pos:end="227:14">=</operator> <name pos:start="227:16" pos:end="227:19">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="233:5" pos:end="233:44">/* If there is a backing file, use it */</comment>

    <if_stmt pos:start="235:5" pos:end="245:5"><if pos:start="235:5" pos:end="245:5">if <condition pos:start="235:8" pos:end="235:41">(<expr pos:start="235:9" pos:end="235:40"><operator pos:start="235:9" pos:end="235:9">(</operator><name pos:start="235:10" pos:end="235:14">flags</name> <operator pos:start="235:16" pos:end="235:16">&amp;</operator> <name pos:start="235:18" pos:end="235:34">BDRV_O_NO_BACKING</name><operator pos:start="235:35" pos:end="235:35">)</operator> <operator pos:start="235:37" pos:end="235:38">==</operator> <literal type="number" pos:start="235:40" pos:end="235:40">0</literal></expr>)</condition> <block pos:start="235:43" pos:end="245:5">{<block_content pos:start="237:9" pos:end="243:9">

        <expr_stmt pos:start="237:9" pos:end="237:41"><expr pos:start="237:9" pos:end="237:40"><name pos:start="237:9" pos:end="237:11">ret</name> <operator pos:start="237:13" pos:end="237:13">=</operator> <call pos:start="237:15" pos:end="237:40"><name pos:start="237:15" pos:end="237:36">bdrv_open_backing_file</name><argument_list pos:start="237:37" pos:end="237:40">(<argument pos:start="237:38" pos:end="237:39"><expr pos:start="237:38" pos:end="237:39"><name pos:start="237:38" pos:end="237:39">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="239:9" pos:end="243:9"><if pos:start="239:9" pos:end="243:9">if <condition pos:start="239:12" pos:end="239:20">(<expr pos:start="239:13" pos:end="239:19"><name pos:start="239:13" pos:end="239:15">ret</name> <operator pos:start="239:17" pos:end="239:17">&lt;</operator> <literal type="number" pos:start="239:19" pos:end="239:19">0</literal></expr>)</condition> <block pos:start="239:22" pos:end="243:9">{<block_content pos:start="241:13" pos:end="241:32">

            <goto pos:start="241:13" pos:end="241:32">goto <name pos:start="241:18" pos:end="241:31">close_and_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="249:5" pos:end="249:48">/* Check if any unknown options were used */</comment>

    <if_stmt pos:start="251:5" pos:end="267:5"><if pos:start="251:5" pos:end="267:5">if <condition pos:start="251:8" pos:end="251:33">(<expr pos:start="251:9" pos:end="251:32"><call pos:start="251:9" pos:end="251:27"><name pos:start="251:9" pos:end="251:18">qdict_size</name><argument_list pos:start="251:19" pos:end="251:27">(<argument pos:start="251:20" pos:end="251:26"><expr pos:start="251:20" pos:end="251:26"><name pos:start="251:20" pos:end="251:26">options</name></expr></argument>)</argument_list></call> <operator pos:start="251:29" pos:end="251:30">!=</operator> <literal type="number" pos:start="251:32" pos:end="251:32">0</literal></expr>)</condition> <block pos:start="251:35" pos:end="267:5">{<block_content pos:start="253:9" pos:end="265:28">

        <decl_stmt pos:start="253:9" pos:end="253:55"><decl pos:start="253:9" pos:end="253:54"><type pos:start="253:9" pos:end="253:26"><specifier pos:start="253:9" pos:end="253:13">const</specifier> <name pos:start="253:15" pos:end="253:24">QDictEntry</name> <modifier pos:start="253:26" pos:end="253:26">*</modifier></type><name pos:start="253:27" pos:end="253:31">entry</name> <init pos:start="253:33" pos:end="253:54">= <expr pos:start="253:35" pos:end="253:54"><call pos:start="253:35" pos:end="253:54"><name pos:start="253:35" pos:end="253:45">qdict_first</name><argument_list pos:start="253:46" pos:end="253:54">(<argument pos:start="253:47" pos:end="253:53"><expr pos:start="253:47" pos:end="253:53"><name pos:start="253:47" pos:end="253:53">options</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="255:9" pos:end="259:59"><expr pos:start="255:9" pos:end="259:58"><call pos:start="255:9" pos:end="259:58"><name pos:start="255:9" pos:end="255:21">qerror_report</name><argument_list pos:start="255:22" pos:end="259:58">(<argument pos:start="255:23" pos:end="255:47"><expr pos:start="255:23" pos:end="255:47"><name pos:start="255:23" pos:end="255:47">ERROR_CLASS_GENERIC_ERROR</name></expr></argument>, <argument pos:start="255:50" pos:end="257:57"><expr pos:start="255:50" pos:end="257:57"><literal type="string" pos:start="255:50" pos:end="255:77">"Block format '%s' used by "</literal>

            <literal type="string" pos:start="257:13" pos:end="257:57">"device '%s' doesn't support the option '%s'"</literal></expr></argument>,

            <argument pos:start="259:13" pos:end="259:28"><expr pos:start="259:13" pos:end="259:28"><name pos:start="259:13" pos:end="259:28"><name pos:start="259:13" pos:end="259:15">drv</name><operator pos:start="259:16" pos:end="259:17">-&gt;</operator><name pos:start="259:18" pos:end="259:28">format_name</name></name></expr></argument>, <argument pos:start="259:31" pos:end="259:45"><expr pos:start="259:31" pos:end="259:45"><name pos:start="259:31" pos:end="259:45"><name pos:start="259:31" pos:end="259:32">bs</name><operator pos:start="259:33" pos:end="259:34">-&gt;</operator><name pos:start="259:35" pos:end="259:45">device_name</name></name></expr></argument>, <argument pos:start="259:48" pos:end="259:57"><expr pos:start="259:48" pos:end="259:57"><name pos:start="259:48" pos:end="259:57"><name pos:start="259:48" pos:end="259:52">entry</name><operator pos:start="259:53" pos:end="259:54">-&gt;</operator><name pos:start="259:55" pos:end="259:57">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="263:9" pos:end="263:22"><expr pos:start="263:9" pos:end="263:21"><name pos:start="263:9" pos:end="263:11">ret</name> <operator pos:start="263:13" pos:end="263:13">=</operator> <operator pos:start="263:15" pos:end="263:15">-</operator><name pos:start="263:16" pos:end="263:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="265:9" pos:end="265:28">goto <name pos:start="265:14" pos:end="265:27">close_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:21"><expr pos:start="269:5" pos:end="269:20"><call pos:start="269:5" pos:end="269:20"><name pos:start="269:5" pos:end="269:11">QDECREF</name><argument_list pos:start="269:12" pos:end="269:20">(<argument pos:start="269:13" pos:end="269:19"><expr pos:start="269:13" pos:end="269:19"><name pos:start="269:13" pos:end="269:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="273:5" pos:end="277:5"><if pos:start="273:5" pos:end="277:5">if <condition pos:start="273:8" pos:end="273:31">(<expr pos:start="273:9" pos:end="273:30"><operator pos:start="273:9" pos:end="273:9">!</operator><call pos:start="273:10" pos:end="273:30"><name pos:start="273:10" pos:end="273:26">bdrv_key_required</name><argument_list pos:start="273:27" pos:end="273:30">(<argument pos:start="273:28" pos:end="273:29"><expr pos:start="273:28" pos:end="273:29"><name pos:start="273:28" pos:end="273:29">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="273:33" pos:end="277:5">{<block_content pos:start="275:9" pos:end="275:43">

        <expr_stmt pos:start="275:9" pos:end="275:43"><expr pos:start="275:9" pos:end="275:42"><call pos:start="275:9" pos:end="275:42"><name pos:start="275:9" pos:end="275:32">bdrv_dev_change_media_cb</name><argument_list pos:start="275:33" pos:end="275:42">(<argument pos:start="275:34" pos:end="275:35"><expr pos:start="275:34" pos:end="275:35"><name pos:start="275:34" pos:end="275:35">bs</name></expr></argument>, <argument pos:start="275:38" pos:end="275:41"><expr pos:start="275:38" pos:end="275:41"><name pos:start="275:38" pos:end="275:41">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="281:5" pos:end="281:36">/* throttling disk I/O limits */</comment>

    <if_stmt pos:start="283:5" pos:end="287:5"><if pos:start="283:5" pos:end="287:5">if <condition pos:start="283:8" pos:end="283:30">(<expr pos:start="283:9" pos:end="283:29"><name pos:start="283:9" pos:end="283:29"><name pos:start="283:9" pos:end="283:10">bs</name><operator pos:start="283:11" pos:end="283:12">-&gt;</operator><name pos:start="283:13" pos:end="283:29">io_limits_enabled</name></name></expr>)</condition> <block pos:start="283:32" pos:end="287:5">{<block_content pos:start="285:9" pos:end="285:34">

        <expr_stmt pos:start="285:9" pos:end="285:34"><expr pos:start="285:9" pos:end="285:33"><call pos:start="285:9" pos:end="285:33"><name pos:start="285:9" pos:end="285:29">bdrv_io_limits_enable</name><argument_list pos:start="285:30" pos:end="285:33">(<argument pos:start="285:31" pos:end="285:32"><expr pos:start="285:31" pos:end="285:32"><name pos:start="285:31" pos:end="285:32">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="291:5" pos:end="291:13">return <expr pos:start="291:12" pos:end="291:12"><literal type="number" pos:start="291:12" pos:end="291:12">0</literal></expr>;</return>



<label pos:start="295:1" pos:end="295:16"><name pos:start="295:1" pos:end="295:15">unlink_and_fail</name>:</label>

    <if_stmt pos:start="297:5" pos:end="301:5"><if pos:start="297:5" pos:end="301:5">if <condition pos:start="297:8" pos:end="297:21">(<expr pos:start="297:9" pos:end="297:20"><name pos:start="297:9" pos:end="297:12">file</name> <operator pos:start="297:14" pos:end="297:15">!=</operator> <name pos:start="297:17" pos:end="297:20">NULL</name></expr>)</condition> <block pos:start="297:23" pos:end="301:5">{<block_content pos:start="299:9" pos:end="299:26">

        <expr_stmt pos:start="299:9" pos:end="299:26"><expr pos:start="299:9" pos:end="299:25"><call pos:start="299:9" pos:end="299:25"><name pos:start="299:9" pos:end="299:19">bdrv_delete</name><argument_list pos:start="299:20" pos:end="299:25">(<argument pos:start="299:21" pos:end="299:24"><expr pos:start="299:21" pos:end="299:24"><name pos:start="299:21" pos:end="299:24">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="303:5" pos:end="307:5"><if pos:start="303:5" pos:end="307:5">if <condition pos:start="303:8" pos:end="303:25">(<expr pos:start="303:9" pos:end="303:24"><name pos:start="303:9" pos:end="303:24"><name pos:start="303:9" pos:end="303:10">bs</name><operator pos:start="303:11" pos:end="303:12">-&gt;</operator><name pos:start="303:13" pos:end="303:24">is_temporary</name></name></expr>)</condition> <block pos:start="303:27" pos:end="307:5">{<block_content pos:start="305:9" pos:end="305:25">

        <expr_stmt pos:start="305:9" pos:end="305:25"><expr pos:start="305:9" pos:end="305:24"><call pos:start="305:9" pos:end="305:24"><name pos:start="305:9" pos:end="305:14">unlink</name><argument_list pos:start="305:15" pos:end="305:24">(<argument pos:start="305:16" pos:end="305:23"><expr pos:start="305:16" pos:end="305:23"><name pos:start="305:16" pos:end="305:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="309:1" pos:end="309:5"><name pos:start="309:1" pos:end="309:4">fail</name>:</label>

    <expr_stmt pos:start="311:5" pos:end="311:25"><expr pos:start="311:5" pos:end="311:24"><call pos:start="311:5" pos:end="311:24"><name pos:start="311:5" pos:end="311:11">QDECREF</name><argument_list pos:start="311:12" pos:end="311:24">(<argument pos:start="311:13" pos:end="311:23"><expr pos:start="311:13" pos:end="311:23"><name pos:start="311:13" pos:end="311:23"><name pos:start="311:13" pos:end="311:14">bs</name><operator pos:start="311:15" pos:end="311:16">-&gt;</operator><name pos:start="311:17" pos:end="311:23">options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="313:5" pos:end="313:21"><expr pos:start="313:5" pos:end="313:20"><call pos:start="313:5" pos:end="313:20"><name pos:start="313:5" pos:end="313:11">QDECREF</name><argument_list pos:start="313:12" pos:end="313:20">(<argument pos:start="313:13" pos:end="313:19"><expr pos:start="313:13" pos:end="313:19"><name pos:start="313:13" pos:end="313:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="315:5" pos:end="315:23"><expr pos:start="315:5" pos:end="315:22"><name pos:start="315:5" pos:end="315:15"><name pos:start="315:5" pos:end="315:6">bs</name><operator pos:start="315:7" pos:end="315:8">-&gt;</operator><name pos:start="315:9" pos:end="315:15">options</name></name> <operator pos:start="315:17" pos:end="315:17">=</operator> <name pos:start="315:19" pos:end="315:22">NULL</name></expr>;</expr_stmt>

    <return pos:start="317:5" pos:end="317:15">return <expr pos:start="317:12" pos:end="317:14"><name pos:start="317:12" pos:end="317:14">ret</name></expr>;</return>



<label pos:start="321:1" pos:end="321:15"><name pos:start="321:1" pos:end="321:14">close_and_fail</name>:</label>

    <expr_stmt pos:start="323:5" pos:end="323:19"><expr pos:start="323:5" pos:end="323:18"><call pos:start="323:5" pos:end="323:18"><name pos:start="323:5" pos:end="323:14">bdrv_close</name><argument_list pos:start="323:15" pos:end="323:18">(<argument pos:start="323:16" pos:end="323:17"><expr pos:start="323:16" pos:end="323:17"><name pos:start="323:16" pos:end="323:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:21"><expr pos:start="325:5" pos:end="325:20"><call pos:start="325:5" pos:end="325:20"><name pos:start="325:5" pos:end="325:11">QDECREF</name><argument_list pos:start="325:12" pos:end="325:20">(<argument pos:start="325:13" pos:end="325:19"><expr pos:start="325:13" pos:end="325:19"><name pos:start="325:13" pos:end="325:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="327:5" pos:end="327:15">return <expr pos:start="327:12" pos:end="327:14"><name pos:start="327:12" pos:end="327:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
