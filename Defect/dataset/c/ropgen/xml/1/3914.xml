<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3914.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">vscsi_send_iu</name><parameter_list pos:start="1:25" pos:end="3:57">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">VSCSIState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:49">vscsi_req</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">req</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:40"><decl pos:start="3:26" pos:end="3:40"><type pos:start="3:26" pos:end="3:40"><name pos:start="3:26" pos:end="3:33">uint64_t</name></type> <name pos:start="3:35" pos:end="3:40">length</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:49">uint8_t</name></type> <name pos:start="3:51" pos:end="3:56">format</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:14">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">long</name></type> <name pos:start="7:10" pos:end="7:11">rc</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:14" pos:end="7:16">rc1</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:28">/* First copy the SRP */</comment>

    <expr_stmt pos:start="13:5" pos:end="15:47"><expr pos:start="13:5" pos:end="15:46"><name pos:start="13:5" pos:end="13:6">rc</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="15:46"><name pos:start="13:10" pos:end="13:28">spapr_vio_dma_write</name><argument_list pos:start="13:29" pos:end="15:46">(<argument pos:start="13:30" pos:end="13:37"><expr pos:start="13:30" pos:end="13:37"><operator pos:start="13:30" pos:end="13:30">&amp;</operator><name pos:start="13:31" pos:end="13:37"><name pos:start="13:31" pos:end="13:31">s</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:37">vdev</name></name></expr></argument>, <argument pos:start="13:40" pos:end="13:61"><expr pos:start="13:40" pos:end="13:61"><name pos:start="13:40" pos:end="13:61"><name pos:start="13:40" pos:end="13:42">req</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:47">crq</name><operator pos:start="13:48" pos:end="13:48">.</operator><name pos:start="13:49" pos:end="13:49">s</name><operator pos:start="13:50" pos:end="13:50">.</operator><name pos:start="13:51" pos:end="13:61">IU_data_ptr</name></name></expr></argument>,

                             <argument pos:start="15:30" pos:end="15:37"><expr pos:start="15:30" pos:end="15:37"><operator pos:start="15:30" pos:end="15:30">&amp;</operator><name pos:start="15:31" pos:end="15:37"><name pos:start="15:31" pos:end="15:33">req</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:37">iu</name></name></expr></argument>, <argument pos:start="15:40" pos:end="15:45"><expr pos:start="15:40" pos:end="15:45"><name pos:start="15:40" pos:end="15:45">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:11">(<expr pos:start="17:9" pos:end="17:10"><name pos:start="17:9" pos:end="17:10">rc</name></expr>)</condition> <block pos:start="17:13" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:64">

        <expr_stmt pos:start="19:9" pos:end="19:64"><expr pos:start="19:9" pos:end="19:63"><call pos:start="19:9" pos:end="19:63"><name pos:start="19:9" pos:end="19:15">fprintf</name><argument_list pos:start="19:16" pos:end="19:63">(<argument pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:22">stderr</name></expr></argument>, <argument pos:start="19:25" pos:end="19:62"><expr pos:start="19:25" pos:end="19:62"><literal type="string" pos:start="19:25" pos:end="19:62">"vscsi_send_iu: DMA write failure !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:7">req</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:12">crq</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:14">s</name><operator pos:start="25:15" pos:end="25:15">.</operator><name pos:start="25:16" pos:end="25:20">valid</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <literal type="number" pos:start="25:24" pos:end="25:27">0x80</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:7">req</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:12">crq</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:14">s</name><operator pos:start="27:15" pos:end="27:15">.</operator><name pos:start="27:16" pos:end="27:21">format</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:30">format</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:7">req</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:12">crq</name><operator pos:start="29:13" pos:end="29:13">.</operator><name pos:start="29:14" pos:end="29:14">s</name><operator pos:start="29:15" pos:end="29:15">.</operator><name pos:start="29:16" pos:end="29:23">reserved</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <literal type="number" pos:start="29:27" pos:end="29:30">0x00</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:45"><expr pos:start="31:5" pos:end="31:44"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:7">req</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:12">crq</name><operator pos:start="31:13" pos:end="31:13">.</operator><name pos:start="31:14" pos:end="31:14">s</name><operator pos:start="31:15" pos:end="31:15">.</operator><name pos:start="31:16" pos:end="31:22">timeout</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <call pos:start="31:26" pos:end="31:44"><name pos:start="31:26" pos:end="31:36">cpu_to_be16</name><argument_list pos:start="31:37" pos:end="31:44">(<argument pos:start="31:38" pos:end="31:43"><expr pos:start="31:38" pos:end="31:43"><literal type="number" pos:start="31:38" pos:end="31:43">0x0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:47"><expr pos:start="33:5" pos:end="33:46"><name pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:7">req</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:12">crq</name><operator pos:start="33:13" pos:end="33:13">.</operator><name pos:start="33:14" pos:end="33:14">s</name><operator pos:start="33:15" pos:end="33:15">.</operator><name pos:start="33:16" pos:end="33:24">IU_length</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <call pos:start="33:28" pos:end="33:46"><name pos:start="33:28" pos:end="33:38">cpu_to_be16</name><argument_list pos:start="33:39" pos:end="33:46">(<argument pos:start="33:40" pos:end="33:45"><expr pos:start="33:40" pos:end="33:45"><name pos:start="33:40" pos:end="33:45">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:7">req</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:12">crq</name><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:14">s</name><operator pos:start="35:15" pos:end="35:15">.</operator><name pos:start="35:16" pos:end="35:26">IU_data_ptr</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:48"><name pos:start="35:30" pos:end="35:32">req</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:36">iu</name><operator pos:start="35:37" pos:end="35:37">.</operator><name pos:start="35:38" pos:end="35:40">srp</name><operator pos:start="35:41" pos:end="35:41">.</operator><name pos:start="35:42" pos:end="35:44">rsp</name><operator pos:start="35:45" pos:end="35:45">.</operator><name pos:start="35:46" pos:end="35:48">tag</name></name></expr>;</expr_stmt> <comment type="block" pos:start="35:51" pos:end="35:72">/* right byte order */</comment>



    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:10">rc</name> <operator pos:start="39:12" pos:end="39:13">==</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition> <block pos:start="39:18" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:33">

        <expr_stmt pos:start="41:9" pos:end="41:33"><expr pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:11">req</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">crq</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:18">s</name><operator pos:start="41:19" pos:end="41:19">.</operator><name pos:start="41:20" pos:end="41:25">status</name></name> <operator pos:start="41:27" pos:end="41:27">=</operator> <literal type="number" pos:start="41:29" pos:end="41:32">0x99</literal></expr>;</expr_stmt> <comment type="block" pos:start="41:35" pos:end="41:65">/* Just needs to be non-zero */</comment>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="47:5">else <block pos:start="43:12" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:33">

        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:11">req</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:16">crq</name><operator pos:start="45:17" pos:end="45:17">.</operator><name pos:start="45:18" pos:end="45:18">s</name><operator pos:start="45:19" pos:end="45:19">.</operator><name pos:start="45:20" pos:end="45:25">status</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <literal type="number" pos:start="45:29" pos:end="45:32">0x00</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:53"><expr pos:start="51:5" pos:end="51:52"><name pos:start="51:5" pos:end="51:7">rc1</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:52"><name pos:start="51:11" pos:end="51:28">spapr_vio_send_crq</name><argument_list pos:start="51:29" pos:end="51:52">(<argument pos:start="51:30" pos:end="51:37"><expr pos:start="51:30" pos:end="51:37"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:37"><name pos:start="51:31" pos:end="51:31">s</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:37">vdev</name></name></expr></argument>, <argument pos:start="51:40" pos:end="51:51"><expr pos:start="51:40" pos:end="51:51"><name pos:start="51:40" pos:end="51:51"><name pos:start="51:40" pos:end="51:42">req</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:47">crq</name><operator pos:start="51:48" pos:end="51:48">.</operator><name pos:start="51:49" pos:end="51:51">raw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:12">(<expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">rc1</name></expr>)</condition> <block pos:start="53:14" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:19">

        <expr_stmt pos:start="55:9" pos:end="55:67"><expr pos:start="55:9" pos:end="55:66"><call pos:start="55:9" pos:end="55:66"><name pos:start="55:9" pos:end="55:15">fprintf</name><argument_list pos:start="55:16" pos:end="55:66">(<argument pos:start="55:17" pos:end="55:22"><expr pos:start="55:17" pos:end="55:22"><name pos:start="55:17" pos:end="55:22">stderr</name></expr></argument>, <argument pos:start="55:25" pos:end="55:65"><expr pos:start="55:25" pos:end="55:65"><literal type="string" pos:start="55:25" pos:end="55:65">"vscsi_send_iu: Error sending response\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:19">return <expr pos:start="57:16" pos:end="57:18"><name pos:start="57:16" pos:end="57:18">rc1</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="63:5" pos:end="63:14">return <expr pos:start="63:12" pos:end="63:13"><name pos:start="63:12" pos:end="63:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
