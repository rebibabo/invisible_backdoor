<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17551.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint32_t</name></type> <name pos:start="1:10" pos:end="1:23">ide_data_readw</name><parameter_list pos:start="1:24" pos:end="1:52">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:46">uint32_t</name></type> <name pos:start="1:48" pos:end="1:51">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:15">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">IDEBus</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">bus</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">IDEState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:39">= <expr pos:start="7:19" pos:end="7:39"><call pos:start="7:19" pos:end="7:39"><name pos:start="7:19" pos:end="7:34">idebus_active_if</name><argument_list pos:start="7:35" pos:end="7:39">(<argument pos:start="7:36" pos:end="7:38"><expr pos:start="7:36" pos:end="7:38"><name pos:start="7:36" pos:end="7:38">bus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="17:74">/* PIO data access allowed only when DRQ bit is set. The result of a read

     * during PIO in is indeterminate, return 0 and don't move forward. */</comment>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:54">(<expr pos:start="19:9" pos:end="19:53"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:19"><name pos:start="19:11" pos:end="19:11">s</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:19">status</name></name> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <name pos:start="19:23" pos:end="19:30">DRQ_STAT</name><operator pos:start="19:31" pos:end="19:31">)</operator> <operator pos:start="19:33" pos:end="19:34">||</operator> <operator pos:start="19:36" pos:end="19:36">!</operator><call pos:start="19:37" pos:end="19:53"><name pos:start="19:37" pos:end="19:50">ide_is_pio_out</name><argument_list pos:start="19:51" pos:end="19:53">(<argument pos:start="19:52" pos:end="19:52"><expr pos:start="19:52" pos:end="19:52"><name pos:start="19:52" pos:end="19:52">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:56" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:20"><expr pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:5">p</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:19">data_ptr</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:28">(<expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:9">p</name> <operator pos:start="29:11" pos:end="29:11">+</operator> <literal type="number" pos:start="29:13" pos:end="29:13">2</literal> <operator pos:start="29:15" pos:end="29:15">&gt;</operator> <name pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:27">data_end</name></name></expr>)</condition> <block pos:start="29:30" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:17">

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:37"><name pos:start="37:11" pos:end="37:21">cpu_to_le16</name><argument_list pos:start="37:22" pos:end="37:37">(<argument pos:start="37:23" pos:end="37:36"><expr pos:start="37:23" pos:end="37:36"><operator pos:start="37:23" pos:end="37:23">*</operator><operator pos:start="37:24" pos:end="37:24">(</operator><name pos:start="37:25" pos:end="37:32">uint16_t</name> <operator pos:start="37:34" pos:end="37:34">*</operator><operator pos:start="37:35" pos:end="37:35">)</operator><name pos:start="37:36" pos:end="37:36">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:11"><expr pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:5">p</name> <operator pos:start="39:7" pos:end="39:8">+=</operator> <literal type="number" pos:start="39:10" pos:end="39:10">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:15">data_ptr</name></name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:19">p</name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:32"><if pos:start="43:5" pos:end="45:32">if <condition pos:start="43:8" pos:end="43:25">(<expr pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:9">p</name> <operator pos:start="43:11" pos:end="43:12">&gt;=</operator> <name pos:start="43:14" pos:end="43:24"><name pos:start="43:14" pos:end="43:14">s</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:24">data_end</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:32"><block_content pos:start="45:9" pos:end="45:32">

        <expr_stmt pos:start="45:9" pos:end="45:32"><expr pos:start="45:9" pos:end="45:31"><call pos:start="45:9" pos:end="45:31"><name pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:28">end_transfer_func</name></name><argument_list pos:start="45:29" pos:end="45:31">(<argument pos:start="45:30" pos:end="45:30"><expr pos:start="45:30" pos:end="45:30"><name pos:start="45:30" pos:end="45:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="47:5" pos:end="47:15">return <expr pos:start="47:12" pos:end="47:14"><name pos:start="47:12" pos:end="47:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
