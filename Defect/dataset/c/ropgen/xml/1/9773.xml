<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9773.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="151:1"><decl pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">ff_convert_matrix</name><argument_list pos:start="1:23" pos:end="7:63">(<argument pos:start="1:24" pos:end="1:38"><expr pos:start="1:24" pos:end="1:38"><name pos:start="1:24" pos:end="1:33">DSPContext</name> <operator pos:start="1:35" pos:end="1:35">*</operator><name pos:start="1:36" pos:end="1:38">dsp</name></expr></argument>, <argument pos:start="1:41" pos:end="1:55"><expr pos:start="1:41" pos:end="1:55"><call pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:43">int</name> <argument_list pos:start="1:45" pos:end="1:51">(<argument pos:start="1:46" pos:end="1:50"><expr pos:start="1:46" pos:end="1:50"><operator pos:start="1:46" pos:end="1:46">*</operator><name pos:start="1:47" pos:end="1:50">qmat</name></expr></argument>)</argument_list></call><index pos:start="1:52" pos:end="1:55">[<expr pos:start="1:53" pos:end="1:54"><literal type="number" pos:start="1:53" pos:end="1:54">64</literal></expr>]</index></expr></argument>,

                       <argument pos:start="3:24" pos:end="3:48"><expr pos:start="3:24" pos:end="3:48"><call pos:start="3:24" pos:end="3:41"><name pos:start="3:24" pos:end="3:31">uint16_t</name> <argument_list pos:start="3:33" pos:end="3:41">(<argument pos:start="3:34" pos:end="3:40"><expr pos:start="3:34" pos:end="3:40"><operator pos:start="3:34" pos:end="3:34">*</operator><name pos:start="3:35" pos:end="3:40">qmat16</name></expr></argument>)</argument_list></call><index pos:start="3:42" pos:end="3:44">[<expr pos:start="3:43" pos:end="3:43"><literal type="number" pos:start="3:43" pos:end="3:43">2</literal></expr>]</index><index pos:start="3:45" pos:end="3:48">[<expr pos:start="3:46" pos:end="3:47"><literal type="number" pos:start="3:46" pos:end="3:47">64</literal></expr>]</index></expr></argument>,

                       <argument pos:start="5:24" pos:end="5:51"><expr pos:start="5:24" pos:end="5:51"><specifier pos:start="5:24" pos:end="5:28">const</specifier> <name pos:start="5:30" pos:end="5:37">uint16_t</name> <operator pos:start="5:39" pos:end="5:39">*</operator><name pos:start="5:40" pos:end="5:51">quant_matrix</name></expr></argument>,

                       <argument pos:start="7:24" pos:end="7:31"><expr pos:start="7:24" pos:end="7:31"><name pos:start="7:24" pos:end="7:26">int</name> <name pos:start="7:28" pos:end="7:31">bias</name></expr></argument>, <argument pos:start="7:34" pos:end="7:41"><expr pos:start="7:34" pos:end="7:41"><name pos:start="7:34" pos:end="7:36">int</name> <name pos:start="7:38" pos:end="7:41">qmin</name></expr></argument>, <argument pos:start="7:44" pos:end="7:51"><expr pos:start="7:44" pos:end="7:51"><name pos:start="7:44" pos:end="7:46">int</name> <name pos:start="7:48" pos:end="7:51">qmax</name></expr></argument>, <argument pos:start="7:54" pos:end="7:62"><expr pos:start="7:54" pos:end="7:62"><name pos:start="7:54" pos:end="7:56">int</name> <name pos:start="7:58" pos:end="7:62">intra</name></expr></argument>)</argument_list>

<block pos:start="9:1" pos:end="151:1">{<block_content pos:start="11:5" pos:end="149:5">

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">qscale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">shift</name> <init pos:start="13:15" pos:end="13:17">= <expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="139:5">for <control pos:start="17:9" pos:end="17:49">(<init pos:start="17:10" pos:end="17:23"><expr pos:start="17:10" pos:end="17:22"><name pos:start="17:10" pos:end="17:15">qscale</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:22">qmin</name></expr>;</init> <condition pos:start="17:25" pos:end="17:39"><expr pos:start="17:25" pos:end="17:38"><name pos:start="17:25" pos:end="17:30">qscale</name> <operator pos:start="17:32" pos:end="17:33">&lt;=</operator> <name pos:start="17:35" pos:end="17:38">qmax</name></expr>;</condition> <incr pos:start="17:41" pos:end="17:48"><expr pos:start="17:41" pos:end="17:48"><name pos:start="17:41" pos:end="17:46">qscale</name><operator pos:start="17:47" pos:end="17:48">++</operator></expr></incr>)</control> <block pos:start="17:51" pos:end="139:5">{<block_content pos:start="19:9" pos:end="137:9">

        <decl_stmt pos:start="19:9" pos:end="19:14"><decl pos:start="19:9" pos:end="19:13"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">i</name></decl>;</decl_stmt>

        <if_stmt pos:start="21:9" pos:end="117:9"><if pos:start="21:9" pos:end="49:9">if <condition pos:start="21:12" pos:end="25:36">(<expr pos:start="21:13" pos:end="25:35"><name pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:15">dsp</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:21">fdct</name></name> <operator pos:start="21:23" pos:end="21:24">==</operator> <name pos:start="21:26" pos:end="21:45">ff_jpeg_fdct_islow_8</name> <operator pos:start="21:47" pos:end="21:48">||</operator>

            <name pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:15">dsp</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:21">fdct</name></name> <operator pos:start="23:23" pos:end="23:24">==</operator> <name pos:start="23:26" pos:end="23:46">ff_jpeg_fdct_islow_10</name> <operator pos:start="23:48" pos:end="23:49">||</operator>

            <name pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:15">dsp</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:21">fdct</name></name> <operator pos:start="25:23" pos:end="25:24">==</operator> <name pos:start="25:26" pos:end="25:35">ff_faandct</name></expr>)</condition> <block pos:start="25:38" pos:end="49:9">{<block_content pos:start="27:13" pos:end="47:13">

            <for pos:start="27:13" pos:end="47:13">for <control pos:start="27:17" pos:end="27:36">(<init pos:start="27:18" pos:end="27:23"><expr pos:start="27:18" pos:end="27:22"><name pos:start="27:18" pos:end="27:18">i</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>;</init> <condition pos:start="27:25" pos:end="27:31"><expr pos:start="27:25" pos:end="27:30"><name pos:start="27:25" pos:end="27:25">i</name> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <literal type="number" pos:start="27:29" pos:end="27:30">64</literal></expr>;</condition> <incr pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:33">i</name><operator pos:start="27:34" pos:end="27:35">++</operator></expr></incr>)</control> <block pos:start="27:38" pos:end="47:13">{<block_content pos:start="29:17" pos:end="45:68">

                <decl_stmt pos:start="29:17" pos:end="29:55"><decl pos:start="29:17" pos:end="29:54"><type pos:start="29:17" pos:end="29:25"><specifier pos:start="29:17" pos:end="29:21">const</specifier> <name pos:start="29:23" pos:end="29:25">int</name></type> <name pos:start="29:27" pos:end="29:27">j</name> <init pos:start="29:29" pos:end="29:54">= <expr pos:start="29:31" pos:end="29:54"><name pos:start="29:31" pos:end="29:54"><name pos:start="29:31" pos:end="29:33">dsp</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:51">idct_permutation</name><index pos:start="29:52" pos:end="29:54">[<expr pos:start="29:53" pos:end="29:53"><name pos:start="29:53" pos:end="29:53">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="31:17" pos:end="39:65">/* 16 &lt;= qscale * quant_matrix[i] &lt;= 7905

                 * Assume x = ff_aanscales[i] * qscale * quant_matrix[i]

                 *             19952 &lt;=              x  &lt;= 249205026

                 * (1 &lt;&lt; 36) / 19952 &gt;= (1 &lt;&lt; 36) / (x) &gt;= (1 &lt;&lt; 36) / 249205026

                 *           3444240 &gt;= (1 &lt;&lt; 36) / (x) &gt;= 275 */</comment>



                <expr_stmt pos:start="43:17" pos:end="45:68"><expr pos:start="43:17" pos:end="45:67"><name pos:start="43:17" pos:end="43:31"><name pos:start="43:17" pos:end="43:20">qmat</name><index pos:start="43:21" pos:end="43:28">[<expr pos:start="43:22" pos:end="43:27"><name pos:start="43:22" pos:end="43:27">qscale</name></expr>]</index><index pos:start="43:29" pos:end="43:31">[<expr pos:start="43:30" pos:end="43:30"><name pos:start="43:30" pos:end="43:30">i</name></expr>]</index></name> <operator pos:start="43:33" pos:end="43:33">=</operator> <operator pos:start="43:35" pos:end="43:35">(</operator><name pos:start="43:36" pos:end="43:38">int</name><operator pos:start="43:39" pos:end="43:39">)</operator><operator pos:start="43:40" pos:end="43:40">(</operator><operator pos:start="43:41" pos:end="43:41">(</operator><call pos:start="43:42" pos:end="43:52"><name pos:start="43:42" pos:end="43:49">UINT64_C</name><argument_list pos:start="43:50" pos:end="43:52">(<argument pos:start="43:51" pos:end="43:51"><expr pos:start="43:51" pos:end="43:51"><literal type="number" pos:start="43:51" pos:end="43:51">1</literal></expr></argument>)</argument_list></call> <operator pos:start="43:54" pos:end="43:55">&lt;&lt;</operator> <name pos:start="43:57" pos:end="43:66">QMAT_SHIFT</name><operator pos:start="43:67" pos:end="43:67">)</operator> <operator pos:start="43:69" pos:end="43:69">/</operator>

                                        <operator pos:start="45:41" pos:end="45:41">(</operator><name pos:start="45:42" pos:end="45:47">qscale</name> <operator pos:start="45:49" pos:end="45:49">*</operator> <name pos:start="45:51" pos:end="45:65"><name pos:start="45:51" pos:end="45:62">quant_matrix</name><index pos:start="45:63" pos:end="45:65">[<expr pos:start="45:64" pos:end="45:64"><name pos:start="45:64" pos:end="45:64">j</name></expr>]</index></name><operator pos:start="45:66" pos:end="45:66">)</operator><operator pos:start="45:67" pos:end="45:67">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="49:11" pos:end="73:9">else if <condition pos:start="49:19" pos:end="49:46">(<expr pos:start="49:20" pos:end="49:45"><name pos:start="49:20" pos:end="49:28"><name pos:start="49:20" pos:end="49:22">dsp</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:28">fdct</name></name> <operator pos:start="49:30" pos:end="49:31">==</operator> <name pos:start="49:33" pos:end="49:45">ff_fdct_ifast</name></expr>)</condition> <block pos:start="49:48" pos:end="73:9">{<block_content pos:start="51:13" pos:end="71:13">

            <for pos:start="51:13" pos:end="71:13">for <control pos:start="51:17" pos:end="51:36">(<init pos:start="51:18" pos:end="51:23"><expr pos:start="51:18" pos:end="51:22"><name pos:start="51:18" pos:end="51:18">i</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>;</init> <condition pos:start="51:25" pos:end="51:31"><expr pos:start="51:25" pos:end="51:30"><name pos:start="51:25" pos:end="51:25">i</name> <operator pos:start="51:27" pos:end="51:27">&lt;</operator> <literal type="number" pos:start="51:29" pos:end="51:30">64</literal></expr>;</condition> <incr pos:start="51:33" pos:end="51:35"><expr pos:start="51:33" pos:end="51:35"><name pos:start="51:33" pos:end="51:33">i</name><operator pos:start="51:34" pos:end="51:35">++</operator></expr></incr>)</control> <block pos:start="51:38" pos:end="71:13">{<block_content pos:start="53:17" pos:end="69:86">

                <decl_stmt pos:start="53:17" pos:end="53:55"><decl pos:start="53:17" pos:end="53:54"><type pos:start="53:17" pos:end="53:25"><specifier pos:start="53:17" pos:end="53:21">const</specifier> <name pos:start="53:23" pos:end="53:25">int</name></type> <name pos:start="53:27" pos:end="53:27">j</name> <init pos:start="53:29" pos:end="53:54">= <expr pos:start="53:31" pos:end="53:54"><name pos:start="53:31" pos:end="53:54"><name pos:start="53:31" pos:end="53:33">dsp</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:51">idct_permutation</name><index pos:start="53:52" pos:end="53:54">[<expr pos:start="53:53" pos:end="53:53"><name pos:start="53:53" pos:end="53:53">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="55:17" pos:end="63:65">/* 16 &lt;= qscale * quant_matrix[i] &lt;= 7905

                 * Assume x = ff_aanscales[i] * qscale * quant_matrix[i]

                 *             19952 &lt;=              x  &lt;= 249205026

                 * (1 &lt;&lt; 36) / 19952 &gt;= (1 &lt;&lt; 36) / (x) &gt;= (1 &lt;&lt; 36) / 249205026

                 *           3444240 &gt;= (1 &lt;&lt; 36) / (x) &gt;= 275 */</comment>



                <expr_stmt pos:start="67:17" pos:end="69:86"><expr pos:start="67:17" pos:end="69:85"><name pos:start="67:17" pos:end="67:31"><name pos:start="67:17" pos:end="67:20">qmat</name><index pos:start="67:21" pos:end="67:28">[<expr pos:start="67:22" pos:end="67:27"><name pos:start="67:22" pos:end="67:27">qscale</name></expr>]</index><index pos:start="67:29" pos:end="67:31">[<expr pos:start="67:30" pos:end="67:30"><name pos:start="67:30" pos:end="67:30">i</name></expr>]</index></name> <operator pos:start="67:33" pos:end="67:33">=</operator> <operator pos:start="67:35" pos:end="67:35">(</operator><name pos:start="67:36" pos:end="67:38">int</name><operator pos:start="67:39" pos:end="67:39">)</operator><operator pos:start="67:40" pos:end="67:40">(</operator><operator pos:start="67:41" pos:end="67:41">(</operator><call pos:start="67:42" pos:end="67:52"><name pos:start="67:42" pos:end="67:49">UINT64_C</name><argument_list pos:start="67:50" pos:end="67:52">(<argument pos:start="67:51" pos:end="67:51"><expr pos:start="67:51" pos:end="67:51"><literal type="number" pos:start="67:51" pos:end="67:51">1</literal></expr></argument>)</argument_list></call> <operator pos:start="67:54" pos:end="67:55">&lt;&lt;</operator> <operator pos:start="67:57" pos:end="67:57">(</operator><name pos:start="67:58" pos:end="67:67">QMAT_SHIFT</name> <operator pos:start="67:69" pos:end="67:69">+</operator> <literal type="number" pos:start="67:71" pos:end="67:72">14</literal><operator pos:start="67:73" pos:end="67:73">)</operator><operator pos:start="67:74" pos:end="67:74">)</operator> <operator pos:start="67:76" pos:end="67:76">/</operator>

                                        <operator pos:start="69:41" pos:end="69:41">(</operator><name pos:start="69:42" pos:end="69:56"><name pos:start="69:42" pos:end="69:53">ff_aanscales</name><index pos:start="69:54" pos:end="69:56">[<expr pos:start="69:55" pos:end="69:55"><name pos:start="69:55" pos:end="69:55">i</name></expr>]</index></name> <operator pos:start="69:58" pos:end="69:58">*</operator> <name pos:start="69:60" pos:end="69:65">qscale</name> <operator pos:start="69:67" pos:end="69:67">*</operator> <name pos:start="69:69" pos:end="69:83"><name pos:start="69:69" pos:end="69:80">quant_matrix</name><index pos:start="69:81" pos:end="69:83">[<expr pos:start="69:82" pos:end="69:82"><name pos:start="69:82" pos:end="69:82">j</name></expr>]</index></name><operator pos:start="69:84" pos:end="69:84">)</operator><operator pos:start="69:85" pos:end="69:85">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="117:9">else <block pos:start="73:16" pos:end="117:9">{<block_content pos:start="75:13" pos:end="115:13">

            <for pos:start="75:13" pos:end="115:13">for <control pos:start="75:17" pos:end="75:36">(<init pos:start="75:18" pos:end="75:23"><expr pos:start="75:18" pos:end="75:22"><name pos:start="75:18" pos:end="75:18">i</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>;</init> <condition pos:start="75:25" pos:end="75:31"><expr pos:start="75:25" pos:end="75:30"><name pos:start="75:25" pos:end="75:25">i</name> <operator pos:start="75:27" pos:end="75:27">&lt;</operator> <literal type="number" pos:start="75:29" pos:end="75:30">64</literal></expr>;</condition> <incr pos:start="75:33" pos:end="75:35"><expr pos:start="75:33" pos:end="75:35"><name pos:start="75:33" pos:end="75:33">i</name><operator pos:start="75:34" pos:end="75:35">++</operator></expr></incr>)</control> <block pos:start="75:38" pos:end="115:13">{<block_content pos:start="77:17" pos:end="113:54">

                <decl_stmt pos:start="77:17" pos:end="77:55"><decl pos:start="77:17" pos:end="77:54"><type pos:start="77:17" pos:end="77:25"><specifier pos:start="77:17" pos:end="77:21">const</specifier> <name pos:start="77:23" pos:end="77:25">int</name></type> <name pos:start="77:27" pos:end="77:27">j</name> <init pos:start="77:29" pos:end="77:54">= <expr pos:start="77:31" pos:end="77:54"><name pos:start="77:31" pos:end="77:54"><name pos:start="77:31" pos:end="77:33">dsp</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:51">idct_permutation</name><index pos:start="77:52" pos:end="77:54">[<expr pos:start="77:53" pos:end="77:53"><name pos:start="77:53" pos:end="77:53">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="79:17" pos:end="87:64">/* We can safely suppose that 16 &lt;= quant_matrix[i] &lt;= 255

                 * Assume x = qscale * quant_matrix[i]

                 * So             16 &lt;=              x  &lt;= 7905

                 * so (1 &lt;&lt; 19) / 16 &gt;= (1 &lt;&lt; 19) / (x) &gt;= (1 &lt;&lt; 19) / 7905

                 * so          32768 &gt;= (1 &lt;&lt; 19) / (x) &gt;= 67 */</comment>

                <expr_stmt pos:start="89:17" pos:end="91:68"><expr pos:start="89:17" pos:end="91:67"><name pos:start="89:17" pos:end="89:31"><name pos:start="89:17" pos:end="89:20">qmat</name><index pos:start="89:21" pos:end="89:28">[<expr pos:start="89:22" pos:end="89:27"><name pos:start="89:22" pos:end="89:27">qscale</name></expr>]</index><index pos:start="89:29" pos:end="89:31">[<expr pos:start="89:30" pos:end="89:30"><name pos:start="89:30" pos:end="89:30">i</name></expr>]</index></name> <operator pos:start="89:33" pos:end="89:33">=</operator> <operator pos:start="89:35" pos:end="89:35">(</operator><name pos:start="89:36" pos:end="89:38">int</name><operator pos:start="89:39" pos:end="89:39">)</operator><operator pos:start="89:40" pos:end="89:40">(</operator><operator pos:start="89:41" pos:end="89:41">(</operator><call pos:start="89:42" pos:end="89:52"><name pos:start="89:42" pos:end="89:49">UINT64_C</name><argument_list pos:start="89:50" pos:end="89:52">(<argument pos:start="89:51" pos:end="89:51"><expr pos:start="89:51" pos:end="89:51"><literal type="number" pos:start="89:51" pos:end="89:51">1</literal></expr></argument>)</argument_list></call> <operator pos:start="89:54" pos:end="89:55">&lt;&lt;</operator> <name pos:start="89:57" pos:end="89:66">QMAT_SHIFT</name><operator pos:start="89:67" pos:end="89:67">)</operator> <operator pos:start="89:69" pos:end="89:69">/</operator>

                                        <operator pos:start="91:41" pos:end="91:41">(</operator><name pos:start="91:42" pos:end="91:47">qscale</name> <operator pos:start="91:49" pos:end="91:49">*</operator> <name pos:start="91:51" pos:end="91:65"><name pos:start="91:51" pos:end="91:62">quant_matrix</name><index pos:start="91:63" pos:end="91:65">[<expr pos:start="91:64" pos:end="91:64"><name pos:start="91:64" pos:end="91:64">j</name></expr>]</index></name><operator pos:start="91:66" pos:end="91:66">)</operator><operator pos:start="91:67" pos:end="91:67">)</operator></expr>;</expr_stmt>

                <comment type="line" pos:start="93:17" pos:end="93:61">//qmat  [qscale][i] = (1 &lt;&lt; QMAT_SHIFT_MMX) /</comment>

                <comment type="line" pos:start="95:17" pos:end="95:65">//                    (qscale * quant_matrix[i]);</comment>

                <expr_stmt pos:start="97:17" pos:end="99:66"><expr pos:start="97:17" pos:end="99:65"><name pos:start="97:17" pos:end="97:36"><name pos:start="97:17" pos:end="97:22">qmat16</name><index pos:start="97:23" pos:end="97:30">[<expr pos:start="97:24" pos:end="97:29"><name pos:start="97:24" pos:end="97:29">qscale</name></expr>]</index><index pos:start="97:31" pos:end="97:33">[<expr pos:start="97:32" pos:end="97:32"><literal type="number" pos:start="97:32" pos:end="97:32">0</literal></expr>]</index><index pos:start="97:34" pos:end="97:36">[<expr pos:start="97:35" pos:end="97:35"><name pos:start="97:35" pos:end="97:35">i</name></expr>]</index></name> <operator pos:start="97:38" pos:end="97:38">=</operator> <operator pos:start="97:40" pos:end="97:40">(</operator><literal type="number" pos:start="97:41" pos:end="97:41">1</literal> <operator pos:start="97:43" pos:end="97:44">&lt;&lt;</operator> <name pos:start="97:46" pos:end="97:59">QMAT_SHIFT_MMX</name><operator pos:start="97:60" pos:end="97:60">)</operator> <operator pos:start="97:62" pos:end="97:62">/</operator>

                                       <operator pos:start="99:40" pos:end="99:40">(</operator><name pos:start="99:41" pos:end="99:46">qscale</name> <operator pos:start="99:48" pos:end="99:48">*</operator> <name pos:start="99:50" pos:end="99:64"><name pos:start="99:50" pos:end="99:61">quant_matrix</name><index pos:start="99:62" pos:end="99:64">[<expr pos:start="99:63" pos:end="99:63"><name pos:start="99:63" pos:end="99:63">j</name></expr>]</index></name><operator pos:start="99:65" pos:end="99:65">)</operator></expr>;</expr_stmt>



                <if_stmt pos:start="103:17" pos:end="107:57"><if pos:start="103:17" pos:end="107:57">if <condition pos:start="103:20" pos:end="105:54">(<expr pos:start="103:21" pos:end="105:53"><name pos:start="103:21" pos:end="103:40"><name pos:start="103:21" pos:end="103:26">qmat16</name><index pos:start="103:27" pos:end="103:34">[<expr pos:start="103:28" pos:end="103:33"><name pos:start="103:28" pos:end="103:33">qscale</name></expr>]</index><index pos:start="103:35" pos:end="103:37">[<expr pos:start="103:36" pos:end="103:36"><literal type="number" pos:start="103:36" pos:end="103:36">0</literal></expr>]</index><index pos:start="103:38" pos:end="103:40">[<expr pos:start="103:39" pos:end="103:39"><name pos:start="103:39" pos:end="103:39">i</name></expr>]</index></name> <operator pos:start="103:42" pos:end="103:43">==</operator> <literal type="number" pos:start="103:45" pos:end="103:45">0</literal> <operator pos:start="103:47" pos:end="103:48">||</operator>

                    <name pos:start="105:21" pos:end="105:40"><name pos:start="105:21" pos:end="105:26">qmat16</name><index pos:start="105:27" pos:end="105:34">[<expr pos:start="105:28" pos:end="105:33"><name pos:start="105:28" pos:end="105:33">qscale</name></expr>]</index><index pos:start="105:35" pos:end="105:37">[<expr pos:start="105:36" pos:end="105:36"><literal type="number" pos:start="105:36" pos:end="105:36">0</literal></expr>]</index><index pos:start="105:38" pos:end="105:40">[<expr pos:start="105:39" pos:end="105:39"><name pos:start="105:39" pos:end="105:39">i</name></expr>]</index></name> <operator pos:start="105:42" pos:end="105:43">==</operator> <literal type="number" pos:start="105:45" pos:end="105:47">128</literal> <operator pos:start="105:49" pos:end="105:49">*</operator> <literal type="number" pos:start="105:51" pos:end="105:53">256</literal></expr>)</condition><block type="pseudo" pos:start="107:21" pos:end="107:57"><block_content pos:start="107:21" pos:end="107:57">

                    <expr_stmt pos:start="107:21" pos:end="107:57"><expr pos:start="107:21" pos:end="107:56"><name pos:start="107:21" pos:end="107:40"><name pos:start="107:21" pos:end="107:26">qmat16</name><index pos:start="107:27" pos:end="107:34">[<expr pos:start="107:28" pos:end="107:33"><name pos:start="107:28" pos:end="107:33">qscale</name></expr>]</index><index pos:start="107:35" pos:end="107:37">[<expr pos:start="107:36" pos:end="107:36"><literal type="number" pos:start="107:36" pos:end="107:36">0</literal></expr>]</index><index pos:start="107:38" pos:end="107:40">[<expr pos:start="107:39" pos:end="107:39"><name pos:start="107:39" pos:end="107:39">i</name></expr>]</index></name> <operator pos:start="107:42" pos:end="107:42">=</operator> <literal type="number" pos:start="107:44" pos:end="107:46">128</literal> <operator pos:start="107:48" pos:end="107:48">*</operator> <literal type="number" pos:start="107:50" pos:end="107:54">256</literal> <operator pos:start="107:54" pos:end="107:54">-</operator> <literal type="number" pos:start="107:56" pos:end="107:56">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="109:17" pos:end="113:54"><expr pos:start="109:17" pos:end="113:53"><name pos:start="109:17" pos:end="109:36"><name pos:start="109:17" pos:end="109:22">qmat16</name><index pos:start="109:23" pos:end="109:30">[<expr pos:start="109:24" pos:end="109:29"><name pos:start="109:24" pos:end="109:29">qscale</name></expr>]</index><index pos:start="109:31" pos:end="109:33">[<expr pos:start="109:32" pos:end="109:32"><literal type="number" pos:start="109:32" pos:end="109:32">1</literal></expr>]</index><index pos:start="109:34" pos:end="109:36">[<expr pos:start="109:35" pos:end="109:35"><name pos:start="109:35" pos:end="109:35">i</name></expr>]</index></name> <operator pos:start="109:38" pos:end="109:38">=</operator>

                    <call pos:start="111:21" pos:end="113:53"><name pos:start="111:21" pos:end="111:31">ROUNDED_DIV</name><argument_list pos:start="111:32" pos:end="113:53">(<argument pos:start="111:33" pos:end="111:63"><expr pos:start="111:33" pos:end="111:63"><name pos:start="111:33" pos:end="111:36">bias</name> <operator pos:start="111:38" pos:end="111:39">&lt;&lt;</operator> <operator pos:start="111:41" pos:end="111:41">(</operator><literal type="number" pos:start="111:42" pos:end="111:45">16</literal> <operator pos:start="111:45" pos:end="111:45">-</operator> <name pos:start="111:47" pos:end="111:62">QUANT_BIAS_SHIFT</name><operator pos:start="111:63" pos:end="111:63">)</operator></expr></argument>,

                                <argument pos:start="113:33" pos:end="113:52"><expr pos:start="113:33" pos:end="113:52"><name pos:start="113:33" pos:end="113:52"><name pos:start="113:33" pos:end="113:38">qmat16</name><index pos:start="113:39" pos:end="113:46">[<expr pos:start="113:40" pos:end="113:45"><name pos:start="113:40" pos:end="113:45">qscale</name></expr>]</index><index pos:start="113:47" pos:end="113:49">[<expr pos:start="113:48" pos:end="113:48"><literal type="number" pos:start="113:48" pos:end="113:48">0</literal></expr>]</index><index pos:start="113:50" pos:end="113:52">[<expr pos:start="113:51" pos:end="113:51"><name pos:start="113:51" pos:end="113:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>



        <for pos:start="121:9" pos:end="137:9">for <control pos:start="121:13" pos:end="121:36">(<init pos:start="121:14" pos:end="121:23"><expr pos:start="121:14" pos:end="121:22"><name pos:start="121:14" pos:end="121:14">i</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <name pos:start="121:18" pos:end="121:22">intra</name></expr>;</init> <condition pos:start="121:25" pos:end="121:31"><expr pos:start="121:25" pos:end="121:30"><name pos:start="121:25" pos:end="121:25">i</name> <operator pos:start="121:27" pos:end="121:27">&lt;</operator> <literal type="number" pos:start="121:29" pos:end="121:30">64</literal></expr>;</condition> <incr pos:start="121:33" pos:end="121:35"><expr pos:start="121:33" pos:end="121:35"><name pos:start="121:33" pos:end="121:33">i</name><operator pos:start="121:34" pos:end="121:35">++</operator></expr></incr>)</control> <block pos:start="121:38" pos:end="137:9">{<block_content pos:start="123:13" pos:end="135:13">

            <decl_stmt pos:start="123:13" pos:end="123:31"><decl pos:start="123:13" pos:end="123:30"><type pos:start="123:13" pos:end="123:19"><name pos:start="123:13" pos:end="123:19">int64_t</name></type> <name pos:start="123:21" pos:end="123:23">max</name> <init pos:start="123:25" pos:end="123:30">= <expr pos:start="123:27" pos:end="123:30"><literal type="number" pos:start="123:27" pos:end="123:30">8191</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="125:13" pos:end="129:13"><if pos:start="125:13" pos:end="129:13">if <condition pos:start="125:16" pos:end="125:43">(<expr pos:start="125:17" pos:end="125:42"><name pos:start="125:17" pos:end="125:25"><name pos:start="125:17" pos:end="125:19">dsp</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:25">fdct</name></name> <operator pos:start="125:27" pos:end="125:28">==</operator> <name pos:start="125:30" pos:end="125:42">ff_fdct_ifast</name></expr>)</condition> <block pos:start="125:45" pos:end="129:13">{<block_content pos:start="127:17" pos:end="127:55">

                <expr_stmt pos:start="127:17" pos:end="127:55"><expr pos:start="127:17" pos:end="127:54"><name pos:start="127:17" pos:end="127:19">max</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <operator pos:start="127:23" pos:end="127:23">(</operator><literal type="number" pos:start="127:24" pos:end="127:29">8191LL</literal> <operator pos:start="127:31" pos:end="127:31">*</operator> <name pos:start="127:33" pos:end="127:47"><name pos:start="127:33" pos:end="127:44">ff_aanscales</name><index pos:start="127:45" pos:end="127:47">[<expr pos:start="127:46" pos:end="127:46"><name pos:start="127:46" pos:end="127:46">i</name></expr>]</index></name><operator pos:start="127:48" pos:end="127:48">)</operator> <operator pos:start="127:50" pos:end="127:51">&gt;&gt;</operator> <literal type="number" pos:start="127:53" pos:end="127:54">14</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <while pos:start="131:13" pos:end="135:13">while <condition pos:start="131:19" pos:end="131:64">(<expr pos:start="131:20" pos:end="131:63"><operator pos:start="131:20" pos:end="131:20">(</operator><operator pos:start="131:21" pos:end="131:21">(</operator><name pos:start="131:22" pos:end="131:24">max</name> <operator pos:start="131:26" pos:end="131:26">*</operator> <name pos:start="131:28" pos:end="131:42"><name pos:start="131:28" pos:end="131:31">qmat</name><index pos:start="131:32" pos:end="131:39">[<expr pos:start="131:33" pos:end="131:38"><name pos:start="131:33" pos:end="131:38">qscale</name></expr>]</index><index pos:start="131:40" pos:end="131:42">[<expr pos:start="131:41" pos:end="131:41"><name pos:start="131:41" pos:end="131:41">i</name></expr>]</index></name><operator pos:start="131:43" pos:end="131:43">)</operator> <operator pos:start="131:45" pos:end="131:46">&gt;&gt;</operator> <name pos:start="131:48" pos:end="131:52">shift</name><operator pos:start="131:53" pos:end="131:53">)</operator> <operator pos:start="131:55" pos:end="131:55">&gt;</operator> <name pos:start="131:57" pos:end="131:63">INT_MAX</name></expr>)</condition> <block pos:start="131:66" pos:end="135:13">{<block_content pos:start="133:17" pos:end="133:24">

                <expr_stmt pos:start="133:17" pos:end="133:24"><expr pos:start="133:17" pos:end="133:23"><name pos:start="133:17" pos:end="133:21">shift</name><operator pos:start="133:22" pos:end="133:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <if_stmt pos:start="141:5" pos:end="149:5"><if pos:start="141:5" pos:end="149:5">if <condition pos:start="141:8" pos:end="141:14">(<expr pos:start="141:9" pos:end="141:13"><name pos:start="141:9" pos:end="141:13">shift</name></expr>)</condition> <block pos:start="141:16" pos:end="149:5">{<block_content pos:start="143:9" pos:end="147:35">

        <expr_stmt pos:start="143:9" pos:end="147:35"><expr pos:start="143:9" pos:end="147:34"><call pos:start="143:9" pos:end="147:34"><name pos:start="143:9" pos:end="143:14">av_log</name><argument_list pos:start="143:15" pos:end="147:34">(<argument pos:start="143:16" pos:end="143:19"><expr pos:start="143:16" pos:end="143:19"><name pos:start="143:16" pos:end="143:19">NULL</name></expr></argument>, <argument pos:start="143:22" pos:end="143:32"><expr pos:start="143:22" pos:end="143:32"><name pos:start="143:22" pos:end="143:32">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="145:16" pos:end="145:76"><expr pos:start="145:16" pos:end="145:76"><literal type="string" pos:start="145:16" pos:end="145:76">"Warning, QMAT_SHIFT is larger than %d, overflows possible\n"</literal></expr></argument>,

               <argument pos:start="147:16" pos:end="147:33"><expr pos:start="147:16" pos:end="147:33"><name pos:start="147:16" pos:end="147:25">QMAT_SHIFT</name> <operator pos:start="147:27" pos:end="147:27">-</operator> <name pos:start="147:29" pos:end="147:33">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></decl></decl_stmt>
</unit>
