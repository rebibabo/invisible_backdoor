<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3564.c" pos:tabs="8"><function pos:start="1:1" pos:end="196:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">omap2_inth_write</name><parameter_list pos:start="1:29" pos:end="3:59">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:66"><decl pos:start="1:44" pos:end="1:66"><type pos:start="1:44" pos:end="1:66"><name pos:start="1:44" pos:end="1:61">target_phys_addr_t</name></type> <name pos:start="1:63" pos:end="1:66">addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:43">value</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:53">unsigned</name></type> <name pos:start="3:55" pos:end="3:58">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="196:1">{<block_content pos:start="7:5" pos:end="193:5">

    <decl_stmt pos:start="7:5" pos:end="7:74"><decl pos:start="7:5" pos:end="7:73"><type pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:30">omap_intr_handler_s</name></name> <modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:33">s</name> <init pos:start="7:35" pos:end="7:73">= <expr pos:start="7:37" pos:end="7:73"><operator pos:start="7:37" pos:end="7:37">(</operator>struct <name pos:start="7:45" pos:end="7:63">omap_intr_handler_s</name> <operator pos:start="7:65" pos:end="7:65">*</operator><operator pos:start="7:66" pos:end="7:66">)</operator> <name pos:start="7:68" pos:end="7:73">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">addr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">bank_no</name></decl>, <decl pos:start="11:18" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:24">line_no</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:48"><type pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:35">omap_intr_handler_bank_s</name></name> <modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:41">bank</name> <init pos:start="13:43" pos:end="13:48">= <expr pos:start="13:45" pos:end="13:48"><name pos:start="13:45" pos:end="13:48">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="32:5"><if pos:start="17:5" pos:end="32:5">if <condition pos:start="17:8" pos:end="17:33">(<expr pos:start="17:9" pos:end="17:32"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:15">offset</name> <operator pos:start="17:17" pos:end="17:17">&amp;</operator> <literal type="number" pos:start="17:19" pos:end="17:23">0xf80</literal><operator pos:start="17:24" pos:end="17:24">)</operator> <operator pos:start="17:26" pos:end="17:27">==</operator> <literal type="number" pos:start="17:29" pos:end="17:32">0x80</literal></expr>)</condition> <block pos:start="17:35" pos:end="32:5">{<block_content pos:start="19:9" pos:end="30:9">

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:15">bank_no</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <operator pos:start="19:19" pos:end="19:19">(</operator><name pos:start="19:20" pos:end="19:25">offset</name> <operator pos:start="19:27" pos:end="19:27">&amp;</operator> <literal type="number" pos:start="19:29" pos:end="19:32">0x60</literal><operator pos:start="19:33" pos:end="19:33">)</operator> <operator pos:start="19:35" pos:end="19:36">&gt;&gt;</operator> <literal type="number" pos:start="19:38" pos:end="19:38">5</literal></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="30:9"><if pos:start="21:9" pos:end="30:9">if <condition pos:start="21:12" pos:end="21:32">(<expr pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:19">bank_no</name> <operator pos:start="21:21" pos:end="21:21">&lt;</operator> <name pos:start="21:23" pos:end="21:31"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:31">nbanks</name></name></expr>)</condition> <block pos:start="21:34" pos:end="30:9">{<block_content pos:start="23:13" pos:end="25:37">

            <expr_stmt pos:start="23:13" pos:end="23:28"><expr pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:18">offset</name> <operator pos:start="23:20" pos:end="23:21">&amp;=</operator> <operator pos:start="23:23" pos:end="23:23">~</operator><literal type="number" pos:start="23:24" pos:end="23:27">0x60</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:37"><expr pos:start="25:13" pos:end="25:36"><name pos:start="25:13" pos:end="25:16">bank</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <operator pos:start="25:20" pos:end="25:20">&amp;</operator><name pos:start="25:21" pos:end="25:36"><name pos:start="25:21" pos:end="25:21">s</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:27">bank</name><index pos:start="25:28" pos:end="25:36">[<expr pos:start="25:29" pos:end="25:35"><name pos:start="25:29" pos:end="25:35">bank_no</name></expr>]</index></name></expr>;</expr_stmt>




        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="36:5" pos:end="193:5">switch <condition pos:start="36:12" pos:end="36:19">(<expr pos:start="36:13" pos:end="36:18"><name pos:start="36:13" pos:end="36:18">offset</name></expr>)</condition> <block pos:start="36:21" pos:end="193:5">{<block_content pos:start="38:5" pos:end="190:26">

    <case pos:start="38:5" pos:end="38:14">case <expr pos:start="38:10" pos:end="38:13"><literal type="number" pos:start="38:10" pos:end="38:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="38:17" pos:end="38:36">/* INTC_SYSCONFIG */</comment>

        <expr_stmt pos:start="40:9" pos:end="40:25"><expr pos:start="40:9" pos:end="40:24"><name pos:start="40:9" pos:end="40:19"><name pos:start="40:9" pos:end="40:9">s</name><operator pos:start="40:10" pos:end="40:11">-&gt;</operator><name pos:start="40:12" pos:end="40:19">autoidle</name></name> <operator pos:start="40:21" pos:end="40:22">&amp;=</operator> <literal type="number" pos:start="40:24" pos:end="40:24">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="42:9" pos:end="42:40"><expr pos:start="42:9" pos:end="42:39"><name pos:start="42:9" pos:end="42:19"><name pos:start="42:9" pos:end="42:9">s</name><operator pos:start="42:10" pos:end="42:11">-&gt;</operator><name pos:start="42:12" pos:end="42:19">autoidle</name></name> <operator pos:start="42:21" pos:end="42:22">|=</operator> <operator pos:start="42:24" pos:end="42:24">(</operator><name pos:start="42:25" pos:end="42:29">value</name> <operator pos:start="42:31" pos:end="42:31">&amp;</operator> <literal type="number" pos:start="42:33" pos:end="42:33">1</literal><operator pos:start="42:34" pos:end="42:34">)</operator> <operator pos:start="42:36" pos:end="42:37">&lt;&lt;</operator> <literal type="number" pos:start="42:39" pos:end="42:39">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="44:9" pos:end="46:45"><if pos:start="44:9" pos:end="46:45">if <condition pos:start="44:12" pos:end="44:22">(<expr pos:start="44:13" pos:end="44:21"><name pos:start="44:13" pos:end="44:17">value</name> <operator pos:start="44:19" pos:end="44:19">&amp;</operator> <literal type="number" pos:start="44:21" pos:end="44:21">2</literal></expr>)</condition><block type="pseudo" pos:start="46:13" pos:end="46:45"><block_content pos:start="46:13" pos:end="46:45">						<comment type="block" pos:start="44:65" pos:end="44:79">/* SOFTRESET */</comment>

            <expr_stmt pos:start="46:13" pos:end="46:45"><expr pos:start="46:13" pos:end="46:44"><call pos:start="46:13" pos:end="46:44"><name pos:start="46:13" pos:end="46:27">omap_inth_reset</name><argument_list pos:start="46:28" pos:end="46:44">(<argument pos:start="46:29" pos:end="46:43"><expr pos:start="46:29" pos:end="46:43"><operator pos:start="46:29" pos:end="46:29">&amp;</operator><name pos:start="46:30" pos:end="46:43"><name pos:start="46:30" pos:end="46:30">s</name><operator pos:start="46:31" pos:end="46:32">-&gt;</operator><name pos:start="46:33" pos:end="46:38">busdev</name><operator pos:start="46:39" pos:end="46:39">.</operator><name pos:start="46:40" pos:end="46:43">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>




    <case pos:start="51:5" pos:end="51:14">case <expr pos:start="51:10" pos:end="51:13"><literal type="number" pos:start="51:10" pos:end="51:13">0x48</literal></expr>:</case>	<comment type="block" pos:start="51:17" pos:end="51:34">/* INTC_CONTROL */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:15">mask</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <ternary pos:start="53:19" pos:end="53:38"><condition pos:start="53:19" pos:end="53:31"><expr pos:start="53:19" pos:end="53:29"><operator pos:start="53:19" pos:end="53:19">(</operator><name pos:start="53:20" pos:end="53:24">value</name> <operator pos:start="53:26" pos:end="53:26">&amp;</operator> <literal type="number" pos:start="53:28" pos:end="53:28">4</literal><operator pos:start="53:29" pos:end="53:29">)</operator></expr> ?</condition><then pos:start="53:33" pos:end="53:33"> <expr pos:start="53:33" pos:end="53:33"><literal type="number" pos:start="53:33" pos:end="53:33">0</literal></expr> </then><else pos:start="53:35" pos:end="53:38">: <expr pos:start="53:37" pos:end="53:38"><operator pos:start="53:37" pos:end="53:37">~</operator><literal type="number" pos:start="53:38" pos:end="53:38">0</literal></expr></else></ternary></expr>;</expr_stmt>				<comment type="block" pos:start="53:65" pos:end="53:80">/* GLOBALMASK */</comment>

        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:22">(<expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:17">value</name> <operator pos:start="55:19" pos:end="55:19">&amp;</operator> <literal type="number" pos:start="55:21" pos:end="55:21">2</literal></expr>)</condition> <block pos:start="55:24" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:35">					<comment type="block" pos:start="55:65" pos:end="55:79">/* NEWFIQAGR */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:47"><expr pos:start="57:13" pos:end="57:46"><call pos:start="57:13" pos:end="57:46"><name pos:start="57:13" pos:end="57:24">qemu_set_irq</name><argument_list pos:start="57:25" pos:end="57:46">(<argument pos:start="57:26" pos:end="57:42"><expr pos:start="57:26" pos:end="57:42"><name pos:start="57:26" pos:end="57:42"><name pos:start="57:26" pos:end="57:26">s</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:39">parent_intr</name><index pos:start="57:40" pos:end="57:42">[<expr pos:start="57:41" pos:end="57:41"><literal type="number" pos:start="57:41" pos:end="57:41">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:45" pos:end="57:45"><expr pos:start="57:45" pos:end="57:45"><literal type="number" pos:start="57:45" pos:end="57:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:31"><expr pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:22">new_agr</name><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><literal type="number" pos:start="59:24" pos:end="59:24">1</literal></expr>]</index></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <operator pos:start="59:29" pos:end="59:29">~</operator><literal type="number" pos:start="59:30" pos:end="59:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:35"><expr pos:start="61:13" pos:end="61:34"><call pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:28">omap_inth_update</name><argument_list pos:start="61:29" pos:end="61:34">(<argument pos:start="61:30" pos:end="61:30"><expr pos:start="61:30" pos:end="61:30"><name pos:start="61:30" pos:end="61:30">s</name></expr></argument>, <argument pos:start="61:33" pos:end="61:33"><expr pos:start="61:33" pos:end="61:33"><literal type="number" pos:start="61:33" pos:end="61:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="73:9"><if pos:start="65:9" pos:end="73:9">if <condition pos:start="65:12" pos:end="65:22">(<expr pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:17">value</name> <operator pos:start="65:19" pos:end="65:19">&amp;</operator> <literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>)</condition> <block pos:start="65:24" pos:end="73:9">{<block_content pos:start="67:13" pos:end="71:35">					<comment type="block" pos:start="65:65" pos:end="65:79">/* NEWIRQAGR */</comment>

            <expr_stmt pos:start="67:13" pos:end="67:47"><expr pos:start="67:13" pos:end="67:46"><call pos:start="67:13" pos:end="67:46"><name pos:start="67:13" pos:end="67:24">qemu_set_irq</name><argument_list pos:start="67:25" pos:end="67:46">(<argument pos:start="67:26" pos:end="67:42"><expr pos:start="67:26" pos:end="67:42"><name pos:start="67:26" pos:end="67:42"><name pos:start="67:26" pos:end="67:26">s</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:39">parent_intr</name><index pos:start="67:40" pos:end="67:42">[<expr pos:start="67:41" pos:end="67:41"><literal type="number" pos:start="67:41" pos:end="67:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:45" pos:end="67:45"><expr pos:start="67:45" pos:end="67:45"><literal type="number" pos:start="67:45" pos:end="67:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:31"><expr pos:start="69:13" pos:end="69:30"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:22">new_agr</name><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><literal type="number" pos:start="69:24" pos:end="69:24">0</literal></expr>]</index></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <operator pos:start="69:29" pos:end="69:29">~</operator><literal type="number" pos:start="69:30" pos:end="69:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:35"><expr pos:start="71:13" pos:end="71:34"><call pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:28">omap_inth_update</name><argument_list pos:start="71:29" pos:end="71:34">(<argument pos:start="71:30" pos:end="71:30"><expr pos:start="71:30" pos:end="71:30"><name pos:start="71:30" pos:end="71:30">s</name></expr></argument>, <argument pos:start="71:33" pos:end="71:33"><expr pos:start="71:33" pos:end="71:33"><literal type="number" pos:start="71:33" pos:end="71:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>




    <case pos:start="78:5" pos:end="78:14">case <expr pos:start="78:10" pos:end="78:13"><literal type="number" pos:start="78:10" pos:end="78:13">0x4c</literal></expr>:</case>	<comment type="block" pos:start="78:17" pos:end="78:37">/* INTC_PROTECTION */</comment>

        <comment type="block" pos:start="80:9" pos:end="82:75">/* TODO: Make a bitmap (or sizeof(char)map) of access privileges

         * for every register, see Chapter 3 and 4 for privileged mode.  */</comment>

        <if_stmt pos:start="84:9" pos:end="88:42"><if pos:start="84:9" pos:end="88:42">if <condition pos:start="84:12" pos:end="84:22">(<expr pos:start="84:13" pos:end="84:21"><name pos:start="84:13" pos:end="84:17">value</name> <operator pos:start="84:19" pos:end="84:19">&amp;</operator> <literal type="number" pos:start="84:21" pos:end="84:21">1</literal></expr>)</condition><block type="pseudo" pos:start="86:13" pos:end="88:42"><block_content pos:start="86:13" pos:end="88:42">

            <expr_stmt pos:start="86:13" pos:end="88:42"><expr pos:start="86:13" pos:end="88:41"><call pos:start="86:13" pos:end="88:41"><name pos:start="86:13" pos:end="86:19">fprintf</name><argument_list pos:start="86:20" pos:end="88:41">(<argument pos:start="86:21" pos:end="86:26"><expr pos:start="86:21" pos:end="86:26"><name pos:start="86:21" pos:end="86:26">stderr</name></expr></argument>, <argument pos:start="86:29" pos:end="86:66"><expr pos:start="86:29" pos:end="86:66"><literal type="string" pos:start="86:29" pos:end="86:66">"%s: protection mode enable attempt\n"</literal></expr></argument>,

                            <argument pos:start="88:29" pos:end="88:40"><expr pos:start="88:29" pos:end="88:40"><name pos:start="88:29" pos:end="88:40">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>




    <case pos:start="93:5" pos:end="93:14">case <expr pos:start="93:10" pos:end="93:13"><literal type="number" pos:start="93:10" pos:end="93:13">0x50</literal></expr>:</case>	<comment type="block" pos:start="93:17" pos:end="93:31">/* INTC_IDLE */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:26"><expr pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:19">autoidle</name></name> <operator pos:start="95:21" pos:end="95:22">&amp;=</operator> <operator pos:start="95:24" pos:end="95:24">~</operator><literal type="number" pos:start="95:25" pos:end="95:25">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:33"><expr pos:start="97:9" pos:end="97:32"><name pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:19">autoidle</name></name> <operator pos:start="97:21" pos:end="97:22">|=</operator> <name pos:start="97:24" pos:end="97:28">value</name> <operator pos:start="97:30" pos:end="97:30">&amp;</operator> <literal type="number" pos:start="97:32" pos:end="97:32">3</literal></expr>;</expr_stmt>




    <comment type="block" pos:start="102:5" pos:end="102:28">/* Per-bank registers */</comment>

    <case pos:start="104:5" pos:end="104:14">case <expr pos:start="104:10" pos:end="104:13"><literal type="number" pos:start="104:10" pos:end="104:13">0x84</literal></expr>:</case>	<comment type="block" pos:start="104:17" pos:end="104:30">/* INTC_MIR */</comment>

        <expr_stmt pos:start="106:9" pos:end="106:27"><expr pos:start="106:9" pos:end="106:26"><name pos:start="106:9" pos:end="106:18"><name pos:start="106:9" pos:end="106:12">bank</name><operator pos:start="106:13" pos:end="106:14">-&gt;</operator><name pos:start="106:15" pos:end="106:18">mask</name></name> <operator pos:start="106:20" pos:end="106:20">=</operator> <name pos:start="106:22" pos:end="106:26">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="108:9" pos:end="108:31"><expr pos:start="108:9" pos:end="108:30"><call pos:start="108:9" pos:end="108:30"><name pos:start="108:9" pos:end="108:24">omap_inth_update</name><argument_list pos:start="108:25" pos:end="108:30">(<argument pos:start="108:26" pos:end="108:26"><expr pos:start="108:26" pos:end="108:26"><name pos:start="108:26" pos:end="108:26">s</name></expr></argument>, <argument pos:start="108:29" pos:end="108:29"><expr pos:start="108:29" pos:end="108:29"><literal type="number" pos:start="108:29" pos:end="108:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="110:9" pos:end="110:31"><expr pos:start="110:9" pos:end="110:30"><call pos:start="110:9" pos:end="110:30"><name pos:start="110:9" pos:end="110:24">omap_inth_update</name><argument_list pos:start="110:25" pos:end="110:30">(<argument pos:start="110:26" pos:end="110:26"><expr pos:start="110:26" pos:end="110:26"><name pos:start="110:26" pos:end="110:26">s</name></expr></argument>, <argument pos:start="110:29" pos:end="110:29"><expr pos:start="110:29" pos:end="110:29"><literal type="number" pos:start="110:29" pos:end="110:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <case pos:start="115:5" pos:end="115:14">case <expr pos:start="115:10" pos:end="115:13"><literal type="number" pos:start="115:10" pos:end="115:13">0x88</literal></expr>:</case>	<comment type="block" pos:start="115:17" pos:end="115:36">/* INTC_MIR_CLEAR */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:29"><expr pos:start="117:9" pos:end="117:28"><name pos:start="117:9" pos:end="117:18"><name pos:start="117:9" pos:end="117:12">bank</name><operator pos:start="117:13" pos:end="117:14">-&gt;</operator><name pos:start="117:15" pos:end="117:18">mask</name></name> <operator pos:start="117:20" pos:end="117:21">&amp;=</operator> <operator pos:start="117:23" pos:end="117:23">~</operator><name pos:start="117:24" pos:end="117:28">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:31"><expr pos:start="119:9" pos:end="119:30"><call pos:start="119:9" pos:end="119:30"><name pos:start="119:9" pos:end="119:24">omap_inth_update</name><argument_list pos:start="119:25" pos:end="119:30">(<argument pos:start="119:26" pos:end="119:26"><expr pos:start="119:26" pos:end="119:26"><name pos:start="119:26" pos:end="119:26">s</name></expr></argument>, <argument pos:start="119:29" pos:end="119:29"><expr pos:start="119:29" pos:end="119:29"><literal type="number" pos:start="119:29" pos:end="119:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:31"><expr pos:start="121:9" pos:end="121:30"><call pos:start="121:9" pos:end="121:30"><name pos:start="121:9" pos:end="121:24">omap_inth_update</name><argument_list pos:start="121:25" pos:end="121:30">(<argument pos:start="121:26" pos:end="121:26"><expr pos:start="121:26" pos:end="121:26"><name pos:start="121:26" pos:end="121:26">s</name></expr></argument>, <argument pos:start="121:29" pos:end="121:29"><expr pos:start="121:29" pos:end="121:29"><literal type="number" pos:start="121:29" pos:end="121:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <case pos:start="126:5" pos:end="126:14">case <expr pos:start="126:10" pos:end="126:13"><literal type="number" pos:start="126:10" pos:end="126:13">0x8c</literal></expr>:</case>	<comment type="block" pos:start="126:17" pos:end="126:34">/* INTC_MIR_SET */</comment>

        <expr_stmt pos:start="128:9" pos:end="128:28"><expr pos:start="128:9" pos:end="128:27"><name pos:start="128:9" pos:end="128:18"><name pos:start="128:9" pos:end="128:12">bank</name><operator pos:start="128:13" pos:end="128:14">-&gt;</operator><name pos:start="128:15" pos:end="128:18">mask</name></name> <operator pos:start="128:20" pos:end="128:21">|=</operator> <name pos:start="128:23" pos:end="128:27">value</name></expr>;</expr_stmt>




    <case pos:start="133:5" pos:end="133:14">case <expr pos:start="133:10" pos:end="133:13"><literal type="number" pos:start="133:10" pos:end="133:13">0x90</literal></expr>:</case>	<comment type="block" pos:start="133:17" pos:end="133:34">/* INTC_ISR_SET */</comment>

        <expr_stmt pos:start="135:9" pos:end="135:41"><expr pos:start="135:9" pos:end="135:40"><name pos:start="135:9" pos:end="135:18"><name pos:start="135:9" pos:end="135:12">bank</name><operator pos:start="135:13" pos:end="135:14">-&gt;</operator><name pos:start="135:15" pos:end="135:18">irqs</name></name> <operator pos:start="135:20" pos:end="135:21">|=</operator> <name pos:start="135:23" pos:end="135:31"><name pos:start="135:23" pos:end="135:26">bank</name><operator pos:start="135:27" pos:end="135:28">-&gt;</operator><name pos:start="135:29" pos:end="135:31">swi</name></name> <operator pos:start="135:33" pos:end="135:34">|=</operator> <name pos:start="135:36" pos:end="135:40">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:31"><expr pos:start="137:9" pos:end="137:30"><call pos:start="137:9" pos:end="137:30"><name pos:start="137:9" pos:end="137:24">omap_inth_update</name><argument_list pos:start="137:25" pos:end="137:30">(<argument pos:start="137:26" pos:end="137:26"><expr pos:start="137:26" pos:end="137:26"><name pos:start="137:26" pos:end="137:26">s</name></expr></argument>, <argument pos:start="137:29" pos:end="137:29"><expr pos:start="137:29" pos:end="137:29"><literal type="number" pos:start="137:29" pos:end="137:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:31"><expr pos:start="139:9" pos:end="139:30"><call pos:start="139:9" pos:end="139:30"><name pos:start="139:9" pos:end="139:24">omap_inth_update</name><argument_list pos:start="139:25" pos:end="139:30">(<argument pos:start="139:26" pos:end="139:26"><expr pos:start="139:26" pos:end="139:26"><name pos:start="139:26" pos:end="139:26">s</name></expr></argument>, <argument pos:start="139:29" pos:end="139:29"><expr pos:start="139:29" pos:end="139:29"><literal type="number" pos:start="139:29" pos:end="139:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <case pos:start="144:5" pos:end="144:14">case <expr pos:start="144:10" pos:end="144:13"><literal type="number" pos:start="144:10" pos:end="144:13">0x94</literal></expr>:</case>	<comment type="block" pos:start="144:17" pos:end="144:36">/* INTC_ISR_CLEAR */</comment>

        <expr_stmt pos:start="146:9" pos:end="146:28"><expr pos:start="146:9" pos:end="146:27"><name pos:start="146:9" pos:end="146:17"><name pos:start="146:9" pos:end="146:12">bank</name><operator pos:start="146:13" pos:end="146:14">-&gt;</operator><name pos:start="146:15" pos:end="146:17">swi</name></name> <operator pos:start="146:19" pos:end="146:20">&amp;=</operator> <operator pos:start="146:22" pos:end="146:22">~</operator><name pos:start="146:23" pos:end="146:27">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="148:9" pos:end="148:46"><expr pos:start="148:9" pos:end="148:45"><name pos:start="148:9" pos:end="148:18"><name pos:start="148:9" pos:end="148:12">bank</name><operator pos:start="148:13" pos:end="148:14">-&gt;</operator><name pos:start="148:15" pos:end="148:18">irqs</name></name> <operator pos:start="148:20" pos:end="148:20">=</operator> <name pos:start="148:22" pos:end="148:30"><name pos:start="148:22" pos:end="148:25">bank</name><operator pos:start="148:26" pos:end="148:27">-&gt;</operator><name pos:start="148:28" pos:end="148:30">swi</name></name> <operator pos:start="148:32" pos:end="148:32">&amp;</operator> <name pos:start="148:34" pos:end="148:45"><name pos:start="148:34" pos:end="148:37">bank</name><operator pos:start="148:38" pos:end="148:39">-&gt;</operator><name pos:start="148:40" pos:end="148:45">inputs</name></name></expr>;</expr_stmt>




    <comment type="block" pos:start="153:5" pos:end="153:28">/* Per-line registers */</comment>

    <case pos:start="155:5" pos:end="155:25">case <expr pos:start="155:10" pos:end="155:24"><literal type="number" pos:start="155:10" pos:end="155:14">0x100</literal> <operator pos:start="155:16" pos:end="155:18">...</operator> <literal type="number" pos:start="155:20" pos:end="155:24">0x300</literal></expr>:</case>	<comment type="block" pos:start="155:33" pos:end="155:46">/* INTC_ILR */</comment>

        <expr_stmt pos:start="157:9" pos:end="157:40"><expr pos:start="157:9" pos:end="157:39"><name pos:start="157:9" pos:end="157:15">bank_no</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <operator pos:start="157:19" pos:end="157:19">(</operator><name pos:start="157:20" pos:end="157:25">offset</name> <operator pos:start="157:27" pos:end="157:27">-</operator> <literal type="number" pos:start="157:29" pos:end="157:33">0x100</literal><operator pos:start="157:34" pos:end="157:34">)</operator> <operator pos:start="157:36" pos:end="157:37">&gt;&gt;</operator> <literal type="number" pos:start="157:39" pos:end="157:39">7</literal></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="161:18"><if pos:start="159:9" pos:end="161:18">if <condition pos:start="159:12" pos:end="159:32">(<expr pos:start="159:13" pos:end="159:31"><name pos:start="159:13" pos:end="159:19">bank_no</name> <operator pos:start="159:21" pos:end="159:21">&gt;</operator> <name pos:start="159:23" pos:end="159:31"><name pos:start="159:23" pos:end="159:23">s</name><operator pos:start="159:24" pos:end="159:25">-&gt;</operator><name pos:start="159:26" pos:end="159:31">nbanks</name></name></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:18"><block_content pos:start="161:13" pos:end="161:18">

            <break pos:start="161:13" pos:end="161:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:33"><expr pos:start="163:9" pos:end="163:32"><name pos:start="163:9" pos:end="163:12">bank</name> <operator pos:start="163:14" pos:end="163:14">=</operator> <operator pos:start="163:16" pos:end="163:16">&amp;</operator><name pos:start="163:17" pos:end="163:32"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:23">bank</name><index pos:start="163:24" pos:end="163:32">[<expr pos:start="163:25" pos:end="163:31"><name pos:start="163:25" pos:end="163:31">bank_no</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:39"><expr pos:start="165:9" pos:end="165:38"><name pos:start="165:9" pos:end="165:15">line_no</name> <operator pos:start="165:17" pos:end="165:17">=</operator> <operator pos:start="165:19" pos:end="165:19">(</operator><name pos:start="165:20" pos:end="165:25">offset</name> <operator pos:start="165:27" pos:end="165:27">&amp;</operator> <literal type="number" pos:start="165:29" pos:end="165:32">0x7f</literal><operator pos:start="165:33" pos:end="165:33">)</operator> <operator pos:start="165:35" pos:end="165:36">&gt;&gt;</operator> <literal type="number" pos:start="165:38" pos:end="165:38">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:54"><expr pos:start="167:9" pos:end="167:53"><name pos:start="167:9" pos:end="167:31"><name pos:start="167:9" pos:end="167:12">bank</name><operator pos:start="167:13" pos:end="167:14">-&gt;</operator><name pos:start="167:15" pos:end="167:22">priority</name><index pos:start="167:23" pos:end="167:31">[<expr pos:start="167:24" pos:end="167:30"><name pos:start="167:24" pos:end="167:30">line_no</name></expr>]</index></name> <operator pos:start="167:33" pos:end="167:33">=</operator> <operator pos:start="167:35" pos:end="167:35">(</operator><name pos:start="167:36" pos:end="167:40">value</name> <operator pos:start="167:42" pos:end="167:43">&gt;&gt;</operator> <literal type="number" pos:start="167:45" pos:end="167:45">2</literal><operator pos:start="167:46" pos:end="167:46">)</operator> <operator pos:start="167:48" pos:end="167:48">&amp;</operator> <literal type="number" pos:start="167:50" pos:end="167:53">0x3f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:37"><expr pos:start="169:9" pos:end="169:36"><name pos:start="169:9" pos:end="169:17"><name pos:start="169:9" pos:end="169:12">bank</name><operator pos:start="169:13" pos:end="169:14">-&gt;</operator><name pos:start="169:15" pos:end="169:17">fiq</name></name> <operator pos:start="169:19" pos:end="169:20">&amp;=</operator> <operator pos:start="169:22" pos:end="169:22">~</operator><operator pos:start="169:23" pos:end="169:23">(</operator><literal type="number" pos:start="169:24" pos:end="169:24">1</literal> <operator pos:start="169:26" pos:end="169:27">&lt;&lt;</operator> <name pos:start="169:29" pos:end="169:35">line_no</name><operator pos:start="169:36" pos:end="169:36">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:44"><expr pos:start="171:9" pos:end="171:43"><name pos:start="171:9" pos:end="171:17"><name pos:start="171:9" pos:end="171:12">bank</name><operator pos:start="171:13" pos:end="171:14">-&gt;</operator><name pos:start="171:15" pos:end="171:17">fiq</name></name> <operator pos:start="171:19" pos:end="171:20">|=</operator> <operator pos:start="171:22" pos:end="171:22">(</operator><name pos:start="171:23" pos:end="171:27">value</name> <operator pos:start="171:29" pos:end="171:29">&amp;</operator> <literal type="number" pos:start="171:31" pos:end="171:31">1</literal><operator pos:start="171:32" pos:end="171:32">)</operator> <operator pos:start="171:34" pos:end="171:35">&lt;&lt;</operator> <name pos:start="171:37" pos:end="171:43">line_no</name></expr>;</expr_stmt>




    <case pos:start="176:5" pos:end="176:14">case <expr pos:start="176:10" pos:end="176:13"><literal type="number" pos:start="176:10" pos:end="176:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="176:17" pos:end="176:35">/* INTC_REVISION */</comment>

    <case pos:start="178:5" pos:end="178:14">case <expr pos:start="178:10" pos:end="178:13"><literal type="number" pos:start="178:10" pos:end="178:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="178:17" pos:end="178:36">/* INTC_SYSSTATUS */</comment>

    <case pos:start="180:5" pos:end="180:14">case <expr pos:start="180:10" pos:end="180:13"><literal type="number" pos:start="180:10" pos:end="180:13">0x40</literal></expr>:</case>	<comment type="block" pos:start="180:17" pos:end="180:34">/* INTC_SIR_IRQ */</comment>

    <case pos:start="182:5" pos:end="182:14">case <expr pos:start="182:10" pos:end="182:13"><literal type="number" pos:start="182:10" pos:end="182:13">0x44</literal></expr>:</case>	<comment type="block" pos:start="182:17" pos:end="182:34">/* INTC_SIR_FIQ */</comment>

    <case pos:start="184:5" pos:end="184:14">case <expr pos:start="184:10" pos:end="184:13"><literal type="number" pos:start="184:10" pos:end="184:13">0x80</literal></expr>:</case>	<comment type="block" pos:start="184:17" pos:end="184:30">/* INTC_ITR */</comment>

    <case pos:start="186:5" pos:end="186:14">case <expr pos:start="186:10" pos:end="186:13"><literal type="number" pos:start="186:10" pos:end="186:13">0x98</literal></expr>:</case>	<comment type="block" pos:start="186:17" pos:end="186:38">/* INTC_PENDING_IRQ */</comment>

    <case pos:start="188:5" pos:end="188:14">case <expr pos:start="188:10" pos:end="188:13"><literal type="number" pos:start="188:10" pos:end="188:13">0x9c</literal></expr>:</case>	<comment type="block" pos:start="188:17" pos:end="188:38">/* INTC_PENDING_FIQ */</comment>

        <expr_stmt pos:start="190:9" pos:end="190:26"><expr pos:start="190:9" pos:end="190:25"><call pos:start="190:9" pos:end="190:25"><name pos:start="190:9" pos:end="190:19">OMAP_RO_REG</name><argument_list pos:start="190:20" pos:end="190:25">(<argument pos:start="190:21" pos:end="190:24"><expr pos:start="190:21" pos:end="190:24"><name pos:start="190:21" pos:end="190:24">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></switch>


</block_content>}</block></function></unit>
