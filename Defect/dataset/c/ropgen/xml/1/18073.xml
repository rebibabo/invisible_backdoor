<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18073.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">get_last_needed_nal</name><parameter_list pos:start="1:31" pos:end="1:46">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:42">H264Context</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:23">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">nals_needed</name> <init pos:start="5:21" pos:end="5:23">= <expr pos:start="5:23" pos:end="5:23"><literal type="number" pos:start="5:23" pos:end="5:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="51:5">for <control pos:start="11:9" pos:end="11:40">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:35"><expr pos:start="11:17" pos:end="11:34"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:34"><name pos:start="11:21" pos:end="11:21">h</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:26">pkt</name><operator pos:start="11:27" pos:end="11:27">.</operator><name pos:start="11:28" pos:end="11:34">nb_nals</name></name></expr>;</condition> <incr pos:start="11:37" pos:end="11:39"><expr pos:start="11:37" pos:end="11:39"><name pos:start="11:37" pos:end="11:37">i</name><operator pos:start="11:38" pos:end="11:39">++</operator></expr></incr>)</control> <block pos:start="11:42" pos:end="51:5">{<block_content pos:start="13:9" pos:end="49:9">

        <decl_stmt pos:start="13:9" pos:end="13:40"><decl pos:start="13:9" pos:end="13:39"><type pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:16">H2645NAL</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:21">nal</name> <init pos:start="13:23" pos:end="13:39">= <expr pos:start="13:25" pos:end="13:39"><operator pos:start="13:25" pos:end="13:25">&amp;</operator><name pos:start="13:26" pos:end="13:39"><name pos:start="13:26" pos:end="13:26">h</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:31">pkt</name><operator pos:start="13:32" pos:end="13:32">.</operator><name pos:start="13:33" pos:end="13:36">nals</name><index pos:start="13:37" pos:end="13:39">[<expr pos:start="13:38" pos:end="13:38"><name pos:start="13:38" pos:end="13:38">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:25"><decl pos:start="15:9" pos:end="15:24"><type pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:21">GetBitContext</name></type> <name pos:start="15:23" pos:end="15:24">gb</name></decl>;</decl_stmt>



        <comment type="block" pos:start="19:9" pos:end="25:70">/* packets can sometimes contain multiple PPS/SPS,

         * e.g. two PAFF field pictures in one packet, or a demuxer

         * which splits NALs strangely if so, when frame threading we

         * can't start the next thread until we've read all of them */</comment>

        <switch pos:start="27:9" pos:end="49:9">switch <condition pos:start="27:16" pos:end="27:26">(<expr pos:start="27:17" pos:end="27:25"><name pos:start="27:17" pos:end="27:25"><name pos:start="27:17" pos:end="27:19">nal</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:25">type</name></name></expr>)</condition> <block pos:start="27:28" pos:end="49:9">{<block_content pos:start="29:9" pos:end="47:32">

        <case pos:start="29:9" pos:end="29:26">case <expr pos:start="29:14" pos:end="29:25"><name pos:start="29:14" pos:end="29:25">H264_NAL_SPS</name></expr>:</case>

        <case pos:start="31:9" pos:end="31:26">case <expr pos:start="31:14" pos:end="31:25"><name pos:start="31:14" pos:end="31:25">H264_NAL_PPS</name></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:23">nals_needed</name> <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:27">i</name></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:26">case <expr pos:start="37:14" pos:end="37:25"><name pos:start="37:14" pos:end="37:25">H264_NAL_DPA</name></expr>:</case>

        <case pos:start="39:9" pos:end="39:32">case <expr pos:start="39:14" pos:end="39:31"><name pos:start="39:14" pos:end="39:31">H264_NAL_IDR_SLICE</name></expr>:</case>

        <case pos:start="41:9" pos:end="41:28">case <expr pos:start="41:14" pos:end="41:27"><name pos:start="41:14" pos:end="41:27">H264_NAL_SLICE</name></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:67"><expr pos:start="43:13" pos:end="43:66"><call pos:start="43:13" pos:end="43:66"><name pos:start="43:13" pos:end="43:25">init_get_bits</name><argument_list pos:start="43:26" pos:end="43:66">(<argument pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:29">gb</name></expr></argument>, <argument pos:start="43:32" pos:end="43:44"><expr pos:start="43:32" pos:end="43:44"><name pos:start="43:32" pos:end="43:40"><name pos:start="43:32" pos:end="43:34">nal</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:40">data</name></name> <operator pos:start="43:42" pos:end="43:42">+</operator> <literal type="number" pos:start="43:44" pos:end="43:44">1</literal></expr></argument>, <argument pos:start="43:47" pos:end="43:65"><expr pos:start="43:47" pos:end="43:65"><operator pos:start="43:47" pos:end="43:47">(</operator><name pos:start="43:48" pos:end="43:56"><name pos:start="43:48" pos:end="43:50">nal</name><operator pos:start="43:51" pos:end="43:52">-&gt;</operator><name pos:start="43:53" pos:end="43:56">size</name></name> <operator pos:start="43:58" pos:end="43:58">-</operator> <literal type="number" pos:start="43:60" pos:end="43:60">1</literal><operator pos:start="43:61" pos:end="43:61">)</operator> <operator pos:start="43:63" pos:end="43:63">*</operator> <literal type="number" pos:start="43:65" pos:end="43:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:32"><if pos:start="45:13" pos:end="47:32">if <condition pos:start="45:16" pos:end="45:36">(<expr pos:start="45:17" pos:end="45:35"><operator pos:start="45:17" pos:end="45:17">!</operator><call pos:start="45:18" pos:end="45:35"><name pos:start="45:18" pos:end="45:30">get_ue_golomb</name><argument_list pos:start="45:31" pos:end="45:35">(<argument pos:start="45:32" pos:end="45:34"><expr pos:start="45:32" pos:end="45:34"><operator pos:start="45:32" pos:end="45:32">&amp;</operator><name pos:start="45:33" pos:end="45:34">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:32"><block_content pos:start="47:17" pos:end="47:32">

                <expr_stmt pos:start="47:17" pos:end="47:32"><expr pos:start="47:17" pos:end="47:31"><name pos:start="47:17" pos:end="47:27">nals_needed</name> <operator pos:start="47:29" pos:end="47:29">=</operator> <name pos:start="47:31" pos:end="47:31">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <return pos:start="55:5" pos:end="55:23">return <expr pos:start="55:12" pos:end="55:22"><name pos:start="55:12" pos:end="55:22">nals_needed</name></expr>;</return>

</block_content>}</block></function>
</unit>
