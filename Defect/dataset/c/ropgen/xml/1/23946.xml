<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23946.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">PCIDevice</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:26">nic_init</name><parameter_list pos:start="1:27" pos:end="1:71">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:33">PCIBus</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type> <name pos:start="1:37" pos:end="1:39">bus</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:48">NICInfo</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type> <name pos:start="1:52" pos:end="1:53">nd</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:70"><decl pos:start="1:56" pos:end="1:70"><type pos:start="1:56" pos:end="1:70"><name pos:start="1:56" pos:end="1:63">uint32_t</name></type> <name pos:start="1:65" pos:end="1:70">device</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:26">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">PCIEEPRO100State</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">EEPRO100State</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><call pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:10">logout</name><argument_list pos:start="11:11" pos:end="11:16">(<argument pos:start="11:12" pos:end="11:15"><expr pos:start="11:12" pos:end="11:15"><literal type="string" pos:start="11:12" pos:end="11:15">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="19:61"><expr pos:start="15:5" pos:end="19:60"><name pos:start="15:5" pos:end="15:5">d</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:25">PCIEEPRO100State</name> <operator pos:start="15:27" pos:end="15:27">*</operator><operator pos:start="15:28" pos:end="15:28">)</operator> <call pos:start="15:30" pos:end="19:60"><name pos:start="15:30" pos:end="15:48">pci_register_device</name><argument_list pos:start="15:49" pos:end="19:60">(<argument pos:start="15:50" pos:end="15:52"><expr pos:start="15:50" pos:end="15:52"><name pos:start="15:50" pos:end="15:52">bus</name></expr></argument>, <argument pos:start="15:55" pos:end="15:63"><expr pos:start="15:55" pos:end="15:63"><name pos:start="15:55" pos:end="15:63"><name pos:start="15:55" pos:end="15:56">nd</name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:63">model</name></name></expr></argument>,

                                                 <argument pos:start="17:50" pos:end="17:73"><expr pos:start="17:50" pos:end="17:73"><sizeof pos:start="17:50" pos:end="17:73">sizeof<argument_list pos:start="17:56" pos:end="17:73">(<argument pos:start="17:57" pos:end="17:72"><expr pos:start="17:57" pos:end="17:72"><name pos:start="17:57" pos:end="17:72">PCIEEPRO100State</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:76" pos:end="17:77"><expr pos:start="17:76" pos:end="17:77"><operator pos:start="17:76" pos:end="17:76">-</operator><literal type="number" pos:start="17:77" pos:end="17:77">1</literal></expr></argument>,

                                                 <argument pos:start="19:50" pos:end="19:53"><expr pos:start="19:50" pos:end="19:53"><name pos:start="19:50" pos:end="19:53">NULL</name></expr></argument>, <argument pos:start="19:56" pos:end="19:59"><expr pos:start="19:56" pos:end="19:59"><name pos:start="19:56" pos:end="19:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:5">s</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <operator pos:start="23:9" pos:end="23:9">&amp;</operator><name pos:start="23:10" pos:end="23:20"><name pos:start="23:10" pos:end="23:10">d</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:20">eepro100</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:13">device</name></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:22">device</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:14">pci_dev</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <operator pos:start="27:18" pos:end="27:18">&amp;</operator><name pos:start="27:19" pos:end="27:24"><name pos:start="27:19" pos:end="27:19">d</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:24">dev</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><call pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:13">pci_reset</name><argument_list pos:start="31:14" pos:end="31:16">(<argument pos:start="31:15" pos:end="31:15"><expr pos:start="31:15" pos:end="31:15"><name pos:start="31:15" pos:end="31:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="37:57">/* Add 64 * 2 EEPROM. i82557 and i82558 support a 64 word EEPROM,

     * i82559 and later support 64 or 256 word EEPROM. */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:44"><expr pos:start="39:5" pos:end="39:43"><name pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:13">eeprom</name></name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:43"><name pos:start="39:17" pos:end="39:30">eeprom93xx_new</name><argument_list pos:start="39:31" pos:end="39:43">(<argument pos:start="39:32" pos:end="39:42"><expr pos:start="39:32" pos:end="39:42"><name pos:start="39:32" pos:end="39:42">EEPROM_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:39">/* Handler for memory-mapped I/O */</comment>

    <expr_stmt pos:start="45:5" pos:end="47:68"><expr pos:start="45:5" pos:end="47:67"><name pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:5">d</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:15">eepro100</name><operator pos:start="45:16" pos:end="45:16">.</operator><name pos:start="45:17" pos:end="45:26">mmio_index</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator>

        <call pos:start="47:9" pos:end="47:67"><name pos:start="47:9" pos:end="47:30">cpu_register_io_memory</name><argument_list pos:start="47:31" pos:end="47:67">(<argument pos:start="47:32" pos:end="47:32"><expr pos:start="47:32" pos:end="47:32"><literal type="number" pos:start="47:32" pos:end="47:32">0</literal></expr></argument>, <argument pos:start="47:35" pos:end="47:47"><expr pos:start="47:35" pos:end="47:47"><name pos:start="47:35" pos:end="47:47">pci_mmio_read</name></expr></argument>, <argument pos:start="47:50" pos:end="47:63"><expr pos:start="47:50" pos:end="47:63"><name pos:start="47:50" pos:end="47:63">pci_mmio_write</name></expr></argument>, <argument pos:start="47:66" pos:end="47:66"><expr pos:start="47:66" pos:end="47:66"><name pos:start="47:66" pos:end="47:66">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="55:73"><expr pos:start="51:5" pos:end="55:72"><call pos:start="51:5" pos:end="55:72"><name pos:start="51:5" pos:end="51:26">pci_register_io_region</name><argument_list pos:start="51:27" pos:end="55:72">(<argument pos:start="51:28" pos:end="51:34"><expr pos:start="51:28" pos:end="51:34"><operator pos:start="51:28" pos:end="51:28">&amp;</operator><name pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:29">d</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:34">dev</name></name></expr></argument>, <argument pos:start="51:37" pos:end="51:37"><expr pos:start="51:37" pos:end="51:37"><literal type="number" pos:start="51:37" pos:end="51:37">0</literal></expr></argument>, <argument pos:start="51:40" pos:end="51:51"><expr pos:start="51:40" pos:end="51:51"><name pos:start="51:40" pos:end="51:51">PCI_MEM_SIZE</name></expr></argument>,

                           <argument pos:start="53:28" pos:end="55:57"><expr pos:start="53:28" pos:end="55:57"><name pos:start="53:28" pos:end="53:48">PCI_ADDRESS_SPACE_MEM</name> <operator pos:start="53:50" pos:end="53:50">|</operator>

                           <name pos:start="55:28" pos:end="55:57">PCI_ADDRESS_SPACE_MEM_PREFETCH</name></expr></argument>, <argument pos:start="55:60" pos:end="55:71"><expr pos:start="55:60" pos:end="55:71"><name pos:start="55:60" pos:end="55:71">pci_mmio_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="59:36"><expr pos:start="57:5" pos:end="59:35"><call pos:start="57:5" pos:end="59:35"><name pos:start="57:5" pos:end="57:26">pci_register_io_region</name><argument_list pos:start="57:27" pos:end="59:35">(<argument pos:start="57:28" pos:end="57:34"><expr pos:start="57:28" pos:end="57:34"><operator pos:start="57:28" pos:end="57:28">&amp;</operator><name pos:start="57:29" pos:end="57:34"><name pos:start="57:29" pos:end="57:29">d</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:34">dev</name></name></expr></argument>, <argument pos:start="57:37" pos:end="57:37"><expr pos:start="57:37" pos:end="57:37"><literal type="number" pos:start="57:37" pos:end="57:37">1</literal></expr></argument>, <argument pos:start="57:40" pos:end="57:50"><expr pos:start="57:40" pos:end="57:50"><name pos:start="57:40" pos:end="57:50">PCI_IO_SIZE</name></expr></argument>, <argument pos:start="57:53" pos:end="57:72"><expr pos:start="57:53" pos:end="57:72"><name pos:start="57:53" pos:end="57:72">PCI_ADDRESS_SPACE_IO</name></expr></argument>,

                           <argument pos:start="59:28" pos:end="59:34"><expr pos:start="59:28" pos:end="59:34"><name pos:start="59:28" pos:end="59:34">pci_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:41"><expr pos:start="61:5" pos:end="63:40"><call pos:start="61:5" pos:end="63:40"><name pos:start="61:5" pos:end="61:26">pci_register_io_region</name><argument_list pos:start="61:27" pos:end="63:40">(<argument pos:start="61:28" pos:end="61:34"><expr pos:start="61:28" pos:end="61:34"><operator pos:start="61:28" pos:end="61:28">&amp;</operator><name pos:start="61:29" pos:end="61:34"><name pos:start="61:29" pos:end="61:29">d</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:34">dev</name></name></expr></argument>, <argument pos:start="61:37" pos:end="61:37"><expr pos:start="61:37" pos:end="61:37"><literal type="number" pos:start="61:37" pos:end="61:37">2</literal></expr></argument>, <argument pos:start="61:40" pos:end="61:53"><expr pos:start="61:40" pos:end="61:53"><name pos:start="61:40" pos:end="61:53">PCI_FLASH_SIZE</name></expr></argument>, <argument pos:start="61:56" pos:end="61:76"><expr pos:start="61:56" pos:end="61:76"><name pos:start="61:56" pos:end="61:76">PCI_ADDRESS_SPACE_MEM</name></expr></argument>,

                           <argument pos:start="63:28" pos:end="63:39"><expr pos:start="63:28" pos:end="63:39"><name pos:start="63:28" pos:end="63:39">pci_mmio_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:39"><expr pos:start="67:5" pos:end="67:38"><call pos:start="67:5" pos:end="67:38"><name pos:start="67:5" pos:end="67:10">memcpy</name><argument_list pos:start="67:11" pos:end="67:38">(<argument pos:start="67:12" pos:end="67:21"><expr pos:start="67:12" pos:end="67:21"><name pos:start="67:12" pos:end="67:21"><name pos:start="67:12" pos:end="67:12">s</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:21">macaddr</name></name></expr></argument>, <argument pos:start="67:24" pos:end="67:34"><expr pos:start="67:24" pos:end="67:34"><name pos:start="67:24" pos:end="67:34"><name pos:start="67:24" pos:end="67:25">nd</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:34">macaddr</name></name></expr></argument>, <argument pos:start="67:37" pos:end="67:37"><expr pos:start="67:37" pos:end="67:37"><literal type="number" pos:start="67:37" pos:end="67:37">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:57"><expr pos:start="69:5" pos:end="69:56"><call pos:start="69:5" pos:end="69:56"><name pos:start="69:5" pos:end="69:10">logout</name><argument_list pos:start="69:11" pos:end="69:56">(<argument pos:start="69:12" pos:end="69:26"><expr pos:start="69:12" pos:end="69:26"><literal type="string" pos:start="69:12" pos:end="69:26">"macaddr: %s\n"</literal></expr></argument>, <argument pos:start="69:29" pos:end="69:55"><expr pos:start="69:29" pos:end="69:55"><call pos:start="69:29" pos:end="69:55"><name pos:start="69:29" pos:end="69:36">nic_dump</name><argument_list pos:start="69:37" pos:end="69:55">(<argument pos:start="69:38" pos:end="69:51"><expr pos:start="69:38" pos:end="69:51"><operator pos:start="69:38" pos:end="69:38">&amp;</operator><name pos:start="69:39" pos:end="69:51"><name pos:start="69:39" pos:end="69:39">s</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:48">macaddr</name><index pos:start="69:49" pos:end="69:51">[<expr pos:start="69:50" pos:end="69:50"><literal type="number" pos:start="69:50" pos:end="69:50">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="69:54" pos:end="69:54"><expr pos:start="69:54" pos:end="69:54"><literal type="number" pos:start="69:54" pos:end="69:54">6</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:30"><expr pos:start="71:5" pos:end="71:29"><call pos:start="71:5" pos:end="71:29"><name pos:start="71:5" pos:end="71:10">assert</name><argument_list pos:start="71:11" pos:end="71:29">(<argument pos:start="71:12" pos:end="71:28"><expr pos:start="71:12" pos:end="71:28"><name pos:start="71:12" pos:end="71:23"><name pos:start="71:12" pos:end="71:12">s</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:20">region</name><index pos:start="71:21" pos:end="71:23">[<expr pos:start="71:22" pos:end="71:22"><literal type="number" pos:start="71:22" pos:end="71:22">1</literal></expr>]</index></name> <operator pos:start="71:25" pos:end="71:26">==</operator> <literal type="number" pos:start="71:28" pos:end="71:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:17"><expr pos:start="75:5" pos:end="75:16"><call pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:13">nic_reset</name><argument_list pos:start="75:14" pos:end="75:16">(<argument pos:start="75:15" pos:end="75:15"><expr pos:start="75:15" pos:end="75:15"><name pos:start="75:15" pos:end="75:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="81:66"><expr pos:start="79:5" pos:end="81:65"><name pos:start="79:5" pos:end="79:9"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:9">vc</name></name> <operator pos:start="79:11" pos:end="79:11">=</operator> <call pos:start="79:13" pos:end="81:65"><name pos:start="79:13" pos:end="79:32">qemu_new_vlan_client</name><argument_list pos:start="79:33" pos:end="81:65">(<argument pos:start="79:34" pos:end="79:41"><expr pos:start="79:34" pos:end="79:41"><name pos:start="79:34" pos:end="79:41"><name pos:start="79:34" pos:end="79:35">nd</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:41">vlan</name></name></expr></argument>, <argument pos:start="79:44" pos:end="79:52"><expr pos:start="79:44" pos:end="79:52"><name pos:start="79:44" pos:end="79:52"><name pos:start="79:44" pos:end="79:45">nd</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:52">model</name></name></expr></argument>, <argument pos:start="79:55" pos:end="79:62"><expr pos:start="79:55" pos:end="79:62"><name pos:start="79:55" pos:end="79:62"><name pos:start="79:55" pos:end="79:56">nd</name><operator pos:start="79:57" pos:end="79:58">-&gt;</operator><name pos:start="79:59" pos:end="79:62">name</name></name></expr></argument>,

                                 <argument pos:start="81:34" pos:end="81:44"><expr pos:start="81:34" pos:end="81:44"><name pos:start="81:34" pos:end="81:44">nic_receive</name></expr></argument>, <argument pos:start="81:47" pos:end="81:61"><expr pos:start="81:47" pos:end="81:61"><name pos:start="81:47" pos:end="81:61">nic_can_receive</name></expr></argument>, <argument pos:start="81:64" pos:end="81:64"><expr pos:start="81:64" pos:end="81:64"><name pos:start="81:64" pos:end="81:64">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:48"><expr pos:start="85:5" pos:end="85:47"><call pos:start="85:5" pos:end="85:47"><name pos:start="85:5" pos:end="85:28">qemu_format_nic_info_str</name><argument_list pos:start="85:29" pos:end="85:47">(<argument pos:start="85:30" pos:end="85:34"><expr pos:start="85:30" pos:end="85:34"><name pos:start="85:30" pos:end="85:34"><name pos:start="85:30" pos:end="85:30">s</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:34">vc</name></name></expr></argument>, <argument pos:start="85:37" pos:end="85:46"><expr pos:start="85:37" pos:end="85:46"><name pos:start="85:37" pos:end="85:46"><name pos:start="85:37" pos:end="85:37">s</name><operator pos:start="85:38" pos:end="85:39">-&gt;</operator><name pos:start="85:40" pos:end="85:46">macaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:38"><expr pos:start="89:5" pos:end="89:37"><call pos:start="89:5" pos:end="89:37"><name pos:start="89:5" pos:end="89:23">qemu_register_reset</name><argument_list pos:start="89:24" pos:end="89:37">(<argument pos:start="89:25" pos:end="89:33"><expr pos:start="89:25" pos:end="89:33"><name pos:start="89:25" pos:end="89:33">nic_reset</name></expr></argument>, <argument pos:start="89:36" pos:end="89:36"><expr pos:start="89:36" pos:end="89:36"><name pos:start="89:36" pos:end="89:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:64"><expr pos:start="93:5" pos:end="93:63"><call pos:start="93:5" pos:end="93:63"><name pos:start="93:5" pos:end="93:19">register_savevm</name><argument_list pos:start="93:20" pos:end="93:63">(<argument pos:start="93:21" pos:end="93:32"><expr pos:start="93:21" pos:end="93:32"><name pos:start="93:21" pos:end="93:32"><name pos:start="93:21" pos:end="93:21">s</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:25">vc</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:32">model</name></name></expr></argument>, <argument pos:start="93:35" pos:end="93:36"><expr pos:start="93:35" pos:end="93:36"><operator pos:start="93:35" pos:end="93:35">-</operator><literal type="number" pos:start="93:36" pos:end="93:36">1</literal></expr></argument>, <argument pos:start="93:39" pos:end="93:39"><expr pos:start="93:39" pos:end="93:39"><literal type="number" pos:start="93:39" pos:end="93:39">3</literal></expr></argument>, <argument pos:start="93:42" pos:end="93:49"><expr pos:start="93:42" pos:end="93:49"><name pos:start="93:42" pos:end="93:49">nic_save</name></expr></argument>, <argument pos:start="93:52" pos:end="93:59"><expr pos:start="93:52" pos:end="93:59"><name pos:start="93:52" pos:end="93:59">nic_load</name></expr></argument>, <argument pos:start="93:62" pos:end="93:62"><expr pos:start="93:62" pos:end="93:62"><name pos:start="93:62" pos:end="93:62">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:26">return <expr pos:start="95:12" pos:end="95:25"><operator pos:start="95:12" pos:end="95:12">(</operator><name pos:start="95:13" pos:end="95:21">PCIDevice</name> <operator pos:start="95:23" pos:end="95:23">*</operator><operator pos:start="95:24" pos:end="95:24">)</operator><name pos:start="95:25" pos:end="95:25">d</name></expr>;</return>

</block_content>}</block></function>
</unit>
