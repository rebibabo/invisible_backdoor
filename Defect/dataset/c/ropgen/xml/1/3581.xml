<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3581.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">decode_p_block</name><parameter_list pos:start="1:27" pos:end="1:107">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:39">FourXContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">f</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">uint16_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">dst</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:67">uint16_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">src</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:83"><decl pos:start="1:75" pos:end="1:83"><type pos:start="1:75" pos:end="1:83"><name pos:start="1:75" pos:end="1:77">int</name></type> <name pos:start="1:79" pos:end="1:83">log2w</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:94"><decl pos:start="1:86" pos:end="1:94"><type pos:start="1:86" pos:end="1:94"><name pos:start="1:86" pos:end="1:88">int</name></type> <name pos:start="1:90" pos:end="1:94">log2h</name></decl></parameter>, <parameter pos:start="1:97" pos:end="1:106"><decl pos:start="1:97" pos:end="1:106"><type pos:start="1:97" pos:end="1:106"><name pos:start="1:97" pos:end="1:99">int</name></type> <name pos:start="1:101" pos:end="1:106">stride</name></decl></parameter>)</parameter_list><block pos:start="1:108" pos:end="89:1">{<block_content pos:start="3:5" pos:end="87:5">

    <decl_stmt pos:start="3:5" pos:end="3:46"><decl pos:start="3:5" pos:end="3:45"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:19">index</name><init pos:start="3:20" pos:end="3:45">= <expr pos:start="3:22" pos:end="3:45"><name pos:start="3:22" pos:end="3:45"><name pos:start="3:22" pos:end="3:31">size2index</name><index pos:start="3:32" pos:end="3:38">[<expr pos:start="3:33" pos:end="3:37"><name pos:start="3:33" pos:end="3:37">log2h</name></expr>]</index><index pos:start="3:39" pos:end="3:45">[<expr pos:start="3:40" pos:end="3:44"><name pos:start="3:40" pos:end="3:44">log2w</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:15">h</name><init pos:start="5:16" pos:end="5:25">= <expr pos:start="5:18" pos:end="5:25"><literal type="number" pos:start="5:18" pos:end="5:18">1</literal><operator pos:start="5:19" pos:end="5:20">&lt;&lt;</operator><name pos:start="5:21" pos:end="5:25">log2h</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:102"><decl pos:start="7:5" pos:end="7:101"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">code</name><init pos:start="7:13" pos:end="7:101">= <expr pos:start="7:15" pos:end="7:101"><call pos:start="7:15" pos:end="7:101"><name pos:start="7:15" pos:end="7:22">get_vlc2</name><argument_list pos:start="7:23" pos:end="7:101">(<argument pos:start="7:24" pos:end="7:29"><expr pos:start="7:24" pos:end="7:29"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:25">f</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:29">gb</name></name></expr></argument>, <argument pos:start="7:32" pos:end="7:76"><expr pos:start="7:32" pos:end="7:76"><name pos:start="7:32" pos:end="7:70"><name pos:start="7:32" pos:end="7:45">block_type_vlc</name><index pos:start="7:46" pos:end="7:63">[<expr pos:start="7:47" pos:end="7:62"><literal type="number" pos:start="7:47" pos:end="7:48">1</literal><operator pos:start="7:48" pos:end="7:48">-</operator><operator pos:start="7:49" pos:end="7:49">(</operator><name pos:start="7:50" pos:end="7:59"><name pos:start="7:50" pos:end="7:50">f</name><operator pos:start="7:51" pos:end="7:52">-&gt;</operator><name pos:start="7:53" pos:end="7:59">version</name></name><operator pos:start="7:60" pos:end="7:60">&gt;</operator><literal type="number" pos:start="7:61" pos:end="7:61">1</literal><operator pos:start="7:62" pos:end="7:62">)</operator></expr>]</index><index pos:start="7:64" pos:end="7:70">[<expr pos:start="7:65" pos:end="7:69"><name pos:start="7:65" pos:end="7:69">index</name></expr>]</index></name><operator pos:start="7:71" pos:end="7:71">.</operator><name pos:start="7:72" pos:end="7:76">table</name></expr></argument>, <argument pos:start="7:79" pos:end="7:97"><expr pos:start="7:79" pos:end="7:97"><name pos:start="7:79" pos:end="7:97">BLOCK_TYPE_VLC_BITS</name></expr></argument>, <argument pos:start="7:100" pos:end="7:100"><expr pos:start="7:100" pos:end="7:100"><literal type="number" pos:start="7:100" pos:end="7:100">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint16_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:19">start</name><init pos:start="9:20" pos:end="9:55">= <expr pos:start="9:22" pos:end="9:55"><operator pos:start="9:22" pos:end="9:22">(</operator><name pos:start="9:23" pos:end="9:30">uint16_t</name><operator pos:start="9:31" pos:end="9:31">*</operator><operator pos:start="9:32" pos:end="9:32">)</operator><name pos:start="9:33" pos:end="9:55"><name pos:start="9:33" pos:end="9:33">f</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:47">last_picture</name><operator pos:start="9:48" pos:end="9:48">.</operator><name pos:start="9:49" pos:end="9:52">data</name><index pos:start="9:53" pos:end="9:55">[<expr pos:start="9:54" pos:end="9:54"><literal type="number" pos:start="9:54" pos:end="9:54">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:70"><decl pos:start="11:5" pos:end="11:69"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint16_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">end</name><init pos:start="11:18" pos:end="11:69">= <expr pos:start="11:20" pos:end="11:69"><name pos:start="11:20" pos:end="11:24">start</name> <operator pos:start="11:26" pos:end="11:26">+</operator> <name pos:start="11:28" pos:end="11:33">stride</name><operator pos:start="11:34" pos:end="11:34">*</operator><operator pos:start="11:35" pos:end="11:35">(</operator><name pos:start="11:36" pos:end="11:51"><name pos:start="11:36" pos:end="11:36">f</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:43">avctx</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:51">height</name></name><operator pos:start="11:52" pos:end="11:52">-</operator><name pos:start="11:53" pos:end="11:53">h</name><operator pos:start="11:54" pos:end="11:54">+</operator><literal type="number" pos:start="11:55" pos:end="11:55">1</literal><operator pos:start="11:56" pos:end="11:56">)</operator> <operator pos:start="11:58" pos:end="11:58">-</operator> <operator pos:start="11:60" pos:end="11:60">(</operator><literal type="number" pos:start="11:61" pos:end="11:61">1</literal><operator pos:start="11:62" pos:end="11:63">&lt;&lt;</operator><name pos:start="11:64" pos:end="11:68">log2w</name><operator pos:start="11:69" pos:end="11:69">)</operator></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><call pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:30">(<argument pos:start="15:12" pos:end="15:29"><expr pos:start="15:12" pos:end="15:29"><name pos:start="15:12" pos:end="15:15">code</name><operator pos:start="15:16" pos:end="15:17">&gt;=</operator><literal type="number" pos:start="15:18" pos:end="15:18">0</literal> <operator pos:start="15:20" pos:end="15:21">&amp;&amp;</operator> <name pos:start="15:23" pos:end="15:26">code</name><operator pos:start="15:27" pos:end="15:28">&lt;=</operator><literal type="number" pos:start="15:29" pos:end="15:29">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="87:5"><if pos:start="19:5" pos:end="33:5">if<condition pos:start="19:7" pos:end="19:17">(<expr pos:start="19:8" pos:end="19:16"><name pos:start="19:8" pos:end="19:11">code</name> <operator pos:start="19:13" pos:end="19:14">==</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>)</condition><block pos:start="19:18" pos:end="33:5">{<block_content pos:start="21:9" pos:end="31:47">

        <expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:11">src</name> <operator pos:start="21:13" pos:end="21:14">+=</operator> <name pos:start="21:16" pos:end="21:40"><name pos:start="21:16" pos:end="21:16">f</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:20">mv</name><index pos:start="21:21" pos:end="21:40">[ <expr pos:start="21:23" pos:end="21:38"><operator pos:start="21:23" pos:end="21:23">*</operator><name pos:start="21:24" pos:end="21:36"><name pos:start="21:24" pos:end="21:24">f</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:36">bytestream</name></name><operator pos:start="21:37" pos:end="21:38">++</operator></expr> ]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if<condition pos:start="23:11" pos:end="23:36">(<expr pos:start="23:12" pos:end="23:35"><name pos:start="23:12" pos:end="23:16">start</name> <operator pos:start="23:18" pos:end="23:18">&gt;</operator> <name pos:start="23:20" pos:end="23:22">src</name> <operator pos:start="23:24" pos:end="23:25">||</operator> <name pos:start="23:27" pos:end="23:29">src</name> <operator pos:start="23:31" pos:end="23:31">&gt;</operator> <name pos:start="23:33" pos:end="23:35">end</name></expr>)</condition><block pos:start="23:37" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:19">

            <expr_stmt pos:start="25:13" pos:end="25:62"><expr pos:start="25:13" pos:end="25:61"><call pos:start="25:13" pos:end="25:61"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="25:61">(<argument pos:start="25:20" pos:end="25:27"><expr pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:20">f</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:27">avctx</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:41"><expr pos:start="25:30" pos:end="25:41"><name pos:start="25:30" pos:end="25:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:44" pos:end="25:60"><expr pos:start="25:44" pos:end="25:60"><literal type="string" pos:start="25:44" pos:end="25:60">"mv out of pic\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><call pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:12">mcdc</name><argument_list pos:start="31:13" pos:end="31:46">(<argument pos:start="31:14" pos:end="31:16"><expr pos:start="31:14" pos:end="31:16"><name pos:start="31:14" pos:end="31:16">dst</name></expr></argument>, <argument pos:start="31:19" pos:end="31:21"><expr pos:start="31:19" pos:end="31:21"><name pos:start="31:19" pos:end="31:21">src</name></expr></argument>, <argument pos:start="31:24" pos:end="31:28"><expr pos:start="31:24" pos:end="31:28"><name pos:start="31:24" pos:end="31:28">log2w</name></expr></argument>, <argument pos:start="31:31" pos:end="31:31"><expr pos:start="31:31" pos:end="31:31"><name pos:start="31:31" pos:end="31:31">h</name></expr></argument>, <argument pos:start="31:34" pos:end="31:39"><expr pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:39">stride</name></expr></argument>, <argument pos:start="31:42" pos:end="31:42"><expr pos:start="31:42" pos:end="31:42"><literal type="number" pos:start="31:42" pos:end="31:42">1</literal></expr></argument>, <argument pos:start="31:45" pos:end="31:45"><expr pos:start="31:45" pos:end="31:45"><literal type="number" pos:start="31:45" pos:end="31:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="33:6" pos:end="41:5">else if<condition pos:start="33:13" pos:end="33:23">(<expr pos:start="33:14" pos:end="33:22"><name pos:start="33:14" pos:end="33:17">code</name> <operator pos:start="33:19" pos:end="33:20">==</operator> <literal type="number" pos:start="33:22" pos:end="33:22">1</literal></expr>)</condition><block pos:start="33:24" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:94">

        <expr_stmt pos:start="35:9" pos:end="35:16"><expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:13">log2h</name><operator pos:start="35:14" pos:end="35:15">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:94"><expr pos:start="37:9" pos:end="37:93"><call pos:start="37:9" pos:end="37:93"><name pos:start="37:9" pos:end="37:22">decode_p_block</name><argument_list pos:start="37:23" pos:end="37:93">(<argument pos:start="37:24" pos:end="37:24"><expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">f</name></expr></argument>, <argument pos:start="37:27" pos:end="37:29"><expr pos:start="37:27" pos:end="37:29"><name pos:start="37:27" pos:end="37:29">dst</name></expr></argument>                  , <argument pos:start="37:50" pos:end="37:52"><expr pos:start="37:50" pos:end="37:52"><name pos:start="37:50" pos:end="37:52">src</name></expr></argument>                  , <argument pos:start="37:73" pos:end="37:77"><expr pos:start="37:73" pos:end="37:77"><name pos:start="37:73" pos:end="37:77">log2w</name></expr></argument>, <argument pos:start="37:80" pos:end="37:84"><expr pos:start="37:80" pos:end="37:84"><name pos:start="37:80" pos:end="37:84">log2h</name></expr></argument>, <argument pos:start="37:87" pos:end="37:92"><expr pos:start="37:87" pos:end="37:92"><name pos:start="37:87" pos:end="37:92">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:94"><expr pos:start="39:9" pos:end="39:93"><call pos:start="39:9" pos:end="39:93"><name pos:start="39:9" pos:end="39:22">decode_p_block</name><argument_list pos:start="39:23" pos:end="39:93">(<argument pos:start="39:24" pos:end="39:24"><expr pos:start="39:24" pos:end="39:24"><name pos:start="39:24" pos:end="39:24">f</name></expr></argument>, <argument pos:start="39:27" pos:end="39:47"><expr pos:start="39:27" pos:end="39:47"><name pos:start="39:27" pos:end="39:29">dst</name> <operator pos:start="39:31" pos:end="39:31">+</operator> <operator pos:start="39:33" pos:end="39:33">(</operator><name pos:start="39:34" pos:end="39:39">stride</name><operator pos:start="39:40" pos:end="39:41">&lt;&lt;</operator><name pos:start="39:42" pos:end="39:46">log2h</name><operator pos:start="39:47" pos:end="39:47">)</operator></expr></argument>, <argument pos:start="39:50" pos:end="39:70"><expr pos:start="39:50" pos:end="39:70"><name pos:start="39:50" pos:end="39:52">src</name> <operator pos:start="39:54" pos:end="39:54">+</operator> <operator pos:start="39:56" pos:end="39:56">(</operator><name pos:start="39:57" pos:end="39:62">stride</name><operator pos:start="39:63" pos:end="39:64">&lt;&lt;</operator><name pos:start="39:65" pos:end="39:69">log2h</name><operator pos:start="39:70" pos:end="39:70">)</operator></expr></argument>, <argument pos:start="39:73" pos:end="39:77"><expr pos:start="39:73" pos:end="39:77"><name pos:start="39:73" pos:end="39:77">log2w</name></expr></argument>, <argument pos:start="39:80" pos:end="39:84"><expr pos:start="39:80" pos:end="39:84"><name pos:start="39:80" pos:end="39:84">log2h</name></expr></argument>, <argument pos:start="39:87" pos:end="39:92"><expr pos:start="39:87" pos:end="39:92"><name pos:start="39:87" pos:end="39:92">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="41:6" pos:end="49:5">else if<condition pos:start="41:13" pos:end="41:23">(<expr pos:start="41:14" pos:end="41:22"><name pos:start="41:14" pos:end="41:17">code</name> <operator pos:start="41:19" pos:end="41:20">==</operator> <literal type="number" pos:start="41:22" pos:end="41:22">2</literal></expr>)</condition><block pos:start="41:24" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:84">

        <expr_stmt pos:start="43:9" pos:end="43:16"><expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:13">log2w</name><operator pos:start="43:14" pos:end="43:15">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:84"><expr pos:start="45:9" pos:end="45:83"><call pos:start="45:9" pos:end="45:83"><name pos:start="45:9" pos:end="45:22">decode_p_block</name><argument_list pos:start="45:23" pos:end="45:83">(<argument pos:start="45:24" pos:end="45:24"><expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">f</name></expr></argument>, <argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:29">dst</name></expr></argument>             , <argument pos:start="45:45" pos:end="45:47"><expr pos:start="45:45" pos:end="45:47"><name pos:start="45:45" pos:end="45:47">src</name></expr></argument>             , <argument pos:start="45:63" pos:end="45:67"><expr pos:start="45:63" pos:end="45:67"><name pos:start="45:63" pos:end="45:67">log2w</name></expr></argument>, <argument pos:start="45:70" pos:end="45:74"><expr pos:start="45:70" pos:end="45:74"><name pos:start="45:70" pos:end="45:74">log2h</name></expr></argument>, <argument pos:start="45:77" pos:end="45:82"><expr pos:start="45:77" pos:end="45:82"><name pos:start="45:77" pos:end="45:82">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:84"><expr pos:start="47:9" pos:end="47:83"><call pos:start="47:9" pos:end="47:83"><name pos:start="47:9" pos:end="47:22">decode_p_block</name><argument_list pos:start="47:23" pos:end="47:83">(<argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">f</name></expr></argument>, <argument pos:start="47:27" pos:end="47:42"><expr pos:start="47:27" pos:end="47:42"><name pos:start="47:27" pos:end="47:29">dst</name> <operator pos:start="47:31" pos:end="47:31">+</operator> <operator pos:start="47:33" pos:end="47:33">(</operator><literal type="number" pos:start="47:34" pos:end="47:34">1</literal><operator pos:start="47:35" pos:end="47:36">&lt;&lt;</operator><name pos:start="47:37" pos:end="47:41">log2w</name><operator pos:start="47:42" pos:end="47:42">)</operator></expr></argument>, <argument pos:start="47:45" pos:end="47:60"><expr pos:start="47:45" pos:end="47:60"><name pos:start="47:45" pos:end="47:47">src</name> <operator pos:start="47:49" pos:end="47:49">+</operator> <operator pos:start="47:51" pos:end="47:51">(</operator><literal type="number" pos:start="47:52" pos:end="47:52">1</literal><operator pos:start="47:53" pos:end="47:54">&lt;&lt;</operator><name pos:start="47:55" pos:end="47:59">log2w</name><operator pos:start="47:60" pos:end="47:60">)</operator></expr></argument>, <argument pos:start="47:63" pos:end="47:67"><expr pos:start="47:63" pos:end="47:67"><name pos:start="47:63" pos:end="47:67">log2w</name></expr></argument>, <argument pos:start="47:70" pos:end="47:74"><expr pos:start="47:70" pos:end="47:74"><name pos:start="47:70" pos:end="47:74">log2h</name></expr></argument>, <argument pos:start="47:77" pos:end="47:82"><expr pos:start="47:77" pos:end="47:82"><name pos:start="47:77" pos:end="47:82">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="49:6" pos:end="53:5">else if<condition pos:start="49:13" pos:end="49:39">(<expr pos:start="49:14" pos:end="49:38"><name pos:start="49:14" pos:end="49:17">code</name> <operator pos:start="49:19" pos:end="49:20">==</operator> <literal type="number" pos:start="49:22" pos:end="49:22">3</literal> <operator pos:start="49:24" pos:end="49:25">&amp;&amp;</operator> <name pos:start="49:27" pos:end="49:36"><name pos:start="49:27" pos:end="49:27">f</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:36">version</name></name><operator pos:start="49:37" pos:end="49:37">&lt;</operator><literal type="number" pos:start="49:38" pos:end="49:38">2</literal></expr>)</condition><block pos:start="49:40" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:47">

        <expr_stmt pos:start="51:9" pos:end="51:47"><expr pos:start="51:9" pos:end="51:46"><call pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:12">mcdc</name><argument_list pos:start="51:13" pos:end="51:46">(<argument pos:start="51:14" pos:end="51:16"><expr pos:start="51:14" pos:end="51:16"><name pos:start="51:14" pos:end="51:16">dst</name></expr></argument>, <argument pos:start="51:19" pos:end="51:21"><expr pos:start="51:19" pos:end="51:21"><name pos:start="51:19" pos:end="51:21">src</name></expr></argument>, <argument pos:start="51:24" pos:end="51:28"><expr pos:start="51:24" pos:end="51:28"><name pos:start="51:24" pos:end="51:28">log2w</name></expr></argument>, <argument pos:start="51:31" pos:end="51:31"><expr pos:start="51:31" pos:end="51:31"><name pos:start="51:31" pos:end="51:31">h</name></expr></argument>, <argument pos:start="51:34" pos:end="51:39"><expr pos:start="51:34" pos:end="51:39"><name pos:start="51:34" pos:end="51:39">stride</name></expr></argument>, <argument pos:start="51:42" pos:end="51:42"><expr pos:start="51:42" pos:end="51:42"><literal type="number" pos:start="51:42" pos:end="51:42">1</literal></expr></argument>, <argument pos:start="51:45" pos:end="51:45"><expr pos:start="51:45" pos:end="51:45"><literal type="number" pos:start="51:45" pos:end="51:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="53:6" pos:end="67:5">else if<condition pos:start="53:13" pos:end="53:23">(<expr pos:start="53:14" pos:end="53:22"><name pos:start="53:14" pos:end="53:17">code</name> <operator pos:start="53:19" pos:end="53:20">==</operator> <literal type="number" pos:start="53:22" pos:end="53:22">4</literal></expr>)</condition><block pos:start="53:24" pos:end="67:5">{<block_content pos:start="55:9" pos:end="65:74">

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:11">src</name> <operator pos:start="55:13" pos:end="55:14">+=</operator> <name pos:start="55:16" pos:end="55:40"><name pos:start="55:16" pos:end="55:16">f</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:20">mv</name><index pos:start="55:21" pos:end="55:40">[ <expr pos:start="55:23" pos:end="55:38"><operator pos:start="55:23" pos:end="55:23">*</operator><name pos:start="55:24" pos:end="55:36"><name pos:start="55:24" pos:end="55:24">f</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:36">bytestream</name></name><operator pos:start="55:37" pos:end="55:38">++</operator></expr> ]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if<condition pos:start="57:11" pos:end="57:36">(<expr pos:start="57:12" pos:end="57:35"><name pos:start="57:12" pos:end="57:16">start</name> <operator pos:start="57:18" pos:end="57:18">&gt;</operator> <name pos:start="57:20" pos:end="57:22">src</name> <operator pos:start="57:24" pos:end="57:25">||</operator> <name pos:start="57:27" pos:end="57:29">src</name> <operator pos:start="57:31" pos:end="57:31">&gt;</operator> <name pos:start="57:33" pos:end="57:35">end</name></expr>)</condition><block pos:start="57:37" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:19">

            <expr_stmt pos:start="59:13" pos:end="59:62"><expr pos:start="59:13" pos:end="59:61"><call pos:start="59:13" pos:end="59:61"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="59:61">(<argument pos:start="59:20" pos:end="59:27"><expr pos:start="59:20" pos:end="59:27"><name pos:start="59:20" pos:end="59:27"><name pos:start="59:20" pos:end="59:20">f</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:27">avctx</name></name></expr></argument>, <argument pos:start="59:30" pos:end="59:41"><expr pos:start="59:30" pos:end="59:41"><name pos:start="59:30" pos:end="59:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:44" pos:end="59:60"><expr pos:start="59:44" pos:end="59:60"><literal type="string" pos:start="59:44" pos:end="59:60">"mv out of pic\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:74"><expr pos:start="65:9" pos:end="65:73"><call pos:start="65:9" pos:end="65:73"><name pos:start="65:9" pos:end="65:12">mcdc</name><argument_list pos:start="65:13" pos:end="65:73">(<argument pos:start="65:14" pos:end="65:16"><expr pos:start="65:14" pos:end="65:16"><name pos:start="65:14" pos:end="65:16">dst</name></expr></argument>, <argument pos:start="65:19" pos:end="65:21"><expr pos:start="65:19" pos:end="65:21"><name pos:start="65:19" pos:end="65:21">src</name></expr></argument>, <argument pos:start="65:24" pos:end="65:28"><expr pos:start="65:24" pos:end="65:28"><name pos:start="65:24" pos:end="65:28">log2w</name></expr></argument>, <argument pos:start="65:31" pos:end="65:31"><expr pos:start="65:31" pos:end="65:31"><name pos:start="65:31" pos:end="65:31">h</name></expr></argument>, <argument pos:start="65:34" pos:end="65:39"><expr pos:start="65:34" pos:end="65:39"><name pos:start="65:34" pos:end="65:39">stride</name></expr></argument>, <argument pos:start="65:42" pos:end="65:42"><expr pos:start="65:42" pos:end="65:42"><literal type="number" pos:start="65:42" pos:end="65:42">1</literal></expr></argument>, <argument pos:start="65:45" pos:end="65:72"><expr pos:start="65:45" pos:end="65:72"><call pos:start="65:45" pos:end="65:72"><name pos:start="65:45" pos:end="65:54">av_le2ne16</name><argument_list pos:start="65:55" pos:end="65:72">(<argument pos:start="65:56" pos:end="65:71"><expr pos:start="65:56" pos:end="65:71"><operator pos:start="65:56" pos:end="65:56">*</operator><name pos:start="65:57" pos:end="65:69"><name pos:start="65:57" pos:end="65:57">f</name><operator pos:start="65:58" pos:end="65:59">-&gt;</operator><name pos:start="65:60" pos:end="65:69">wordstream</name></name><operator pos:start="65:70" pos:end="65:71">++</operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="67:6" pos:end="71:5">else if<condition pos:start="67:13" pos:end="67:23">(<expr pos:start="67:14" pos:end="67:22"><name pos:start="67:14" pos:end="67:17">code</name> <operator pos:start="67:19" pos:end="67:20">==</operator> <literal type="number" pos:start="67:22" pos:end="67:22">5</literal></expr>)</condition><block pos:start="67:24" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:74">

        <expr_stmt pos:start="69:9" pos:end="69:74"><expr pos:start="69:9" pos:end="69:73"><call pos:start="69:9" pos:end="69:73"><name pos:start="69:9" pos:end="69:12">mcdc</name><argument_list pos:start="69:13" pos:end="69:73">(<argument pos:start="69:14" pos:end="69:16"><expr pos:start="69:14" pos:end="69:16"><name pos:start="69:14" pos:end="69:16">dst</name></expr></argument>, <argument pos:start="69:19" pos:end="69:21"><expr pos:start="69:19" pos:end="69:21"><name pos:start="69:19" pos:end="69:21">src</name></expr></argument>, <argument pos:start="69:24" pos:end="69:28"><expr pos:start="69:24" pos:end="69:28"><name pos:start="69:24" pos:end="69:28">log2w</name></expr></argument>, <argument pos:start="69:31" pos:end="69:31"><expr pos:start="69:31" pos:end="69:31"><name pos:start="69:31" pos:end="69:31">h</name></expr></argument>, <argument pos:start="69:34" pos:end="69:39"><expr pos:start="69:34" pos:end="69:39"><name pos:start="69:34" pos:end="69:39">stride</name></expr></argument>, <argument pos:start="69:42" pos:end="69:42"><expr pos:start="69:42" pos:end="69:42"><literal type="number" pos:start="69:42" pos:end="69:42">0</literal></expr></argument>, <argument pos:start="69:45" pos:end="69:72"><expr pos:start="69:45" pos:end="69:72"><call pos:start="69:45" pos:end="69:72"><name pos:start="69:45" pos:end="69:54">av_le2ne16</name><argument_list pos:start="69:55" pos:end="69:72">(<argument pos:start="69:56" pos:end="69:71"><expr pos:start="69:56" pos:end="69:71"><operator pos:start="69:56" pos:end="69:56">*</operator><name pos:start="69:57" pos:end="69:69"><name pos:start="69:57" pos:end="69:57">f</name><operator pos:start="69:58" pos:end="69:59">-&gt;</operator><name pos:start="69:60" pos:end="69:69">wordstream</name></name><operator pos:start="69:70" pos:end="69:71">++</operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="71:6" pos:end="87:5">else if<condition pos:start="71:13" pos:end="71:23">(<expr pos:start="71:14" pos:end="71:22"><name pos:start="71:14" pos:end="71:17">code</name> <operator pos:start="71:19" pos:end="71:20">==</operator> <literal type="number" pos:start="71:22" pos:end="71:22">6</literal></expr>)</condition><block pos:start="71:24" pos:end="87:5">{<block_content pos:start="73:9" pos:end="85:9">

        <if_stmt pos:start="73:9" pos:end="85:9"><if pos:start="73:9" pos:end="79:9">if<condition pos:start="73:11" pos:end="73:17">(<expr pos:start="73:12" pos:end="73:16"><name pos:start="73:12" pos:end="73:16">log2w</name></expr>)</condition><block pos:start="73:18" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:50">

            <expr_stmt pos:start="75:13" pos:end="75:50"><expr pos:start="75:13" pos:end="75:49"><name pos:start="75:13" pos:end="75:18"><name pos:start="75:13" pos:end="75:15">dst</name><index pos:start="75:16" pos:end="75:18">[<expr pos:start="75:17" pos:end="75:17"><literal type="number" pos:start="75:17" pos:end="75:17">0</literal></expr>]</index></name> <operator pos:start="75:20" pos:end="75:20">=</operator> <call pos:start="75:22" pos:end="75:49"><name pos:start="75:22" pos:end="75:31">av_le2ne16</name><argument_list pos:start="75:32" pos:end="75:49">(<argument pos:start="75:33" pos:end="75:48"><expr pos:start="75:33" pos:end="75:48"><operator pos:start="75:33" pos:end="75:33">*</operator><name pos:start="75:34" pos:end="75:46"><name pos:start="75:34" pos:end="75:34">f</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:46">wordstream</name></name><operator pos:start="75:47" pos:end="75:48">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:50"><expr pos:start="77:13" pos:end="77:49"><name pos:start="77:13" pos:end="77:18"><name pos:start="77:13" pos:end="77:15">dst</name><index pos:start="77:16" pos:end="77:18">[<expr pos:start="77:17" pos:end="77:17"><literal type="number" pos:start="77:17" pos:end="77:17">1</literal></expr>]</index></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <call pos:start="77:22" pos:end="77:49"><name pos:start="77:22" pos:end="77:31">av_le2ne16</name><argument_list pos:start="77:32" pos:end="77:49">(<argument pos:start="77:33" pos:end="77:48"><expr pos:start="77:33" pos:end="77:48"><operator pos:start="77:33" pos:end="77:33">*</operator><name pos:start="77:34" pos:end="77:46"><name pos:start="77:34" pos:end="77:34">f</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:46">wordstream</name></name><operator pos:start="77:47" pos:end="77:48">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="79:10" pos:end="85:9">else<block pos:start="79:14" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:55">

            <expr_stmt pos:start="81:13" pos:end="81:55"><expr pos:start="81:13" pos:end="81:54"><name pos:start="81:13" pos:end="81:23"><name pos:start="81:13" pos:end="81:15">dst</name><index pos:start="81:16" pos:end="81:23">[<expr pos:start="81:17" pos:end="81:17"><literal type="number" pos:start="81:17" pos:end="81:17">0</literal></expr>     ]</index></name> <operator pos:start="81:25" pos:end="81:25">=</operator> <call pos:start="81:27" pos:end="81:54"><name pos:start="81:27" pos:end="81:36">av_le2ne16</name><argument_list pos:start="81:37" pos:end="81:54">(<argument pos:start="81:38" pos:end="81:53"><expr pos:start="81:38" pos:end="81:53"><operator pos:start="81:38" pos:end="81:38">*</operator><name pos:start="81:39" pos:end="81:51"><name pos:start="81:39" pos:end="81:39">f</name><operator pos:start="81:40" pos:end="81:41">-&gt;</operator><name pos:start="81:42" pos:end="81:51">wordstream</name></name><operator pos:start="81:52" pos:end="81:53">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:55"><expr pos:start="83:13" pos:end="83:54"><name pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:15">dst</name><index pos:start="83:16" pos:end="83:23">[<expr pos:start="83:17" pos:end="83:22"><name pos:start="83:17" pos:end="83:22">stride</name></expr>]</index></name> <operator pos:start="83:25" pos:end="83:25">=</operator> <call pos:start="83:27" pos:end="83:54"><name pos:start="83:27" pos:end="83:36">av_le2ne16</name><argument_list pos:start="83:37" pos:end="83:54">(<argument pos:start="83:38" pos:end="83:53"><expr pos:start="83:38" pos:end="83:53"><operator pos:start="83:38" pos:end="83:38">*</operator><name pos:start="83:39" pos:end="83:51"><name pos:start="83:39" pos:end="83:39">f</name><operator pos:start="83:40" pos:end="83:41">-&gt;</operator><name pos:start="83:42" pos:end="83:51">wordstream</name></name><operator pos:start="83:52" pos:end="83:53">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
