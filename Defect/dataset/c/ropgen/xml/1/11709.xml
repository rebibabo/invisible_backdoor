<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11709.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">quantize</name><parameter_list pos:start="1:21" pos:end="1:84">(<parameter pos:start="1:22" pos:end="1:35"><decl pos:start="1:22" pos:end="1:35"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:32">SnowContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:47"><decl pos:start="1:38" pos:end="1:47"><type pos:start="1:38" pos:end="1:47"><name pos:start="1:38" pos:end="1:44">SubBand</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">b</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:56">DWTELEM</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">src</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:73"><decl pos:start="1:64" pos:end="1:73"><type pos:start="1:64" pos:end="1:73"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:73">stride</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:83"><decl pos:start="1:76" pos:end="1:83"><type pos:start="1:76" pos:end="1:83"><name pos:start="1:76" pos:end="1:78">int</name></type> <name pos:start="1:80" pos:end="1:83">bias</name></decl></parameter>)</parameter_list><block pos:start="1:85" pos:end="105:1">{<block_content pos:start="3:5" pos:end="103:5">

    <decl_stmt pos:start="3:5" pos:end="3:30"><decl pos:start="3:5" pos:end="3:29"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:19">level</name><init pos:start="3:20" pos:end="3:29">= <expr pos:start="3:22" pos:end="3:29"><name pos:start="3:22" pos:end="3:29"><name pos:start="3:22" pos:end="3:22">b</name><operator pos:start="3:23" pos:end="3:24">-&gt;</operator><name pos:start="3:25" pos:end="3:29">level</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:15">w</name><init pos:start="5:16" pos:end="5:25">= <expr pos:start="5:18" pos:end="5:25"><name pos:start="5:18" pos:end="5:25"><name pos:start="5:18" pos:end="5:18">b</name><operator pos:start="5:19" pos:end="5:20">-&gt;</operator><name pos:start="5:21" pos:end="5:25">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:15">h</name><init pos:start="7:16" pos:end="7:26">= <expr pos:start="7:18" pos:end="7:26"><name pos:start="7:18" pos:end="7:26"><name pos:start="7:18" pos:end="7:18">b</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:26">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:18">qlog</name><init pos:start="9:19" pos:end="9:51">= <expr pos:start="9:21" pos:end="9:51"><call pos:start="9:21" pos:end="9:51"><name pos:start="9:21" pos:end="9:24">clip</name><argument_list pos:start="9:25" pos:end="9:51">(<argument pos:start="9:26" pos:end="9:42"><expr pos:start="9:26" pos:end="9:42"><name pos:start="9:26" pos:end="9:32"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:32">qlog</name></name> <operator pos:start="9:34" pos:end="9:34">+</operator> <name pos:start="9:36" pos:end="9:42"><name pos:start="9:36" pos:end="9:36">b</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:42">qlog</name></name></expr></argument>, <argument pos:start="9:45" pos:end="9:45"><expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">0</literal></expr></argument>, <argument pos:start="9:48" pos:end="9:50"><expr pos:start="9:48" pos:end="9:50"><literal type="number" pos:start="9:48" pos:end="9:50">128</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:18">qmul</name><init pos:start="11:19" pos:end="11:43">= <expr pos:start="11:21" pos:end="11:43"><name pos:start="11:21" pos:end="11:32"><name pos:start="11:21" pos:end="11:24">qexp</name><index pos:start="11:25" pos:end="11:32">[<expr pos:start="11:26" pos:end="11:31"><name pos:start="11:26" pos:end="11:29">qlog</name><operator pos:start="11:30" pos:end="11:30">&amp;</operator><literal type="number" pos:start="11:31" pos:end="11:31">7</literal></expr>]</index></name><operator pos:start="11:33" pos:end="11:34">&lt;&lt;</operator><operator pos:start="11:35" pos:end="11:35">(</operator><name pos:start="11:36" pos:end="11:39">qlog</name><operator pos:start="11:40" pos:end="11:41">&gt;&gt;</operator><literal type="number" pos:start="11:42" pos:end="11:42">3</literal><operator pos:start="11:43" pos:end="11:43">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">x</name></decl>,<decl pos:start="13:11" pos:end="13:11"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:11" pos:end="13:11">y</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:20">(<argument pos:start="17:12" pos:end="17:19"><expr pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:16">QROOT</name><operator pos:start="17:17" pos:end="17:18">==</operator><literal type="number" pos:start="17:19" pos:end="17:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:8">bias</name><operator pos:start="21:9" pos:end="21:9">=</operator> <ternary pos:start="21:11" pos:end="21:32"><condition pos:start="21:11" pos:end="21:16"><expr pos:start="21:11" pos:end="21:14"><name pos:start="21:11" pos:end="21:14">bias</name></expr> ?</condition><then pos:start="21:18" pos:end="21:18"> <expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr> </then><else pos:start="21:20" pos:end="21:32">: <expr pos:start="21:22" pos:end="21:32"><operator pos:start="21:22" pos:end="21:22">(</operator><literal type="number" pos:start="21:23" pos:end="21:23">3</literal><operator pos:start="21:24" pos:end="21:24">*</operator><name pos:start="21:25" pos:end="21:28">qmul</name><operator pos:start="21:29" pos:end="21:29">)</operator><operator pos:start="21:30" pos:end="21:31">&gt;&gt;</operator><literal type="number" pos:start="21:32" pos:end="21:32">3</literal></expr></else></ternary></expr>;</expr_stmt>

    

    <if_stmt pos:start="25:5" pos:end="103:5"><if pos:start="25:5" pos:end="63:5">if<condition pos:start="25:7" pos:end="25:13">(<expr pos:start="25:8" pos:end="25:12"><operator pos:start="25:8" pos:end="25:8">!</operator><name pos:start="25:9" pos:end="25:12">bias</name></expr>)</condition><block pos:start="25:14" pos:end="63:5">{<block_content pos:start="27:9" pos:end="61:9">

        <for pos:start="27:9" pos:end="61:9">for<control pos:start="27:12" pos:end="27:26">(<init pos:start="27:13" pos:end="27:16"><expr pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:13">y</name><operator pos:start="27:14" pos:end="27:14">=</operator><literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>;</init> <condition pos:start="27:18" pos:end="27:21"><expr pos:start="27:18" pos:end="27:20"><name pos:start="27:18" pos:end="27:18">y</name><operator pos:start="27:19" pos:end="27:19">&lt;</operator><name pos:start="27:20" pos:end="27:20">h</name></expr>;</condition> <incr pos:start="27:23" pos:end="27:25"><expr pos:start="27:23" pos:end="27:25"><name pos:start="27:23" pos:end="27:23">y</name><operator pos:start="27:24" pos:end="27:25">++</operator></expr></incr>)</control><block pos:start="27:27" pos:end="61:9">{<block_content pos:start="29:13" pos:end="59:13">

            <for pos:start="29:13" pos:end="59:13">for<control pos:start="29:16" pos:end="29:30">(<init pos:start="29:17" pos:end="29:20"><expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:17">x</name><operator pos:start="29:18" pos:end="29:18">=</operator><literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>;</init> <condition pos:start="29:22" pos:end="29:25"><expr pos:start="29:22" pos:end="29:24"><name pos:start="29:22" pos:end="29:22">x</name><operator pos:start="29:23" pos:end="29:23">&lt;</operator><name pos:start="29:24" pos:end="29:24">w</name></expr>;</condition> <incr pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:27">x</name><operator pos:start="29:28" pos:end="29:29">++</operator></expr></incr>)</control><block pos:start="29:31" pos:end="59:13">{<block_content pos:start="31:17" pos:end="57:17">

                <decl_stmt pos:start="31:17" pos:end="31:41"><decl pos:start="31:17" pos:end="31:40"><type pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:19">int</name></type> <name pos:start="31:21" pos:end="31:21">i</name><init pos:start="31:22" pos:end="31:40">= <expr pos:start="31:24" pos:end="31:40"><name pos:start="31:24" pos:end="31:40"><name pos:start="31:24" pos:end="31:26">src</name><index pos:start="31:27" pos:end="31:40">[<expr pos:start="31:28" pos:end="31:39"><name pos:start="31:28" pos:end="31:28">x</name> <operator pos:start="31:30" pos:end="31:30">+</operator> <name pos:start="31:32" pos:end="31:32">y</name><operator pos:start="31:33" pos:end="31:33">*</operator><name pos:start="31:34" pos:end="31:39">stride</name></expr>]</index></name></expr></init></decl>;</decl_stmt> 

                <comment type="line" pos:start="33:17" pos:end="33:37">//FIXME use threshold</comment>

                <comment type="line" pos:start="35:17" pos:end="35:32">//FIXME optimize</comment>

                <comment type="line" pos:start="37:17" pos:end="37:28">//FIXME bias</comment>

                <if_stmt pos:start="39:17" pos:end="57:17"><if pos:start="39:17" pos:end="47:17">if<condition pos:start="39:19" pos:end="39:24">(<expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:20">i</name><operator pos:start="39:21" pos:end="39:22">&gt;=</operator><literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr>)</condition><block pos:start="39:25" pos:end="47:17">{<block_content pos:start="41:21" pos:end="45:42">

                    <expr_stmt pos:start="41:21" pos:end="41:35"><expr pos:start="41:21" pos:end="41:34"><name pos:start="41:21" pos:end="41:21">i</name><operator pos:start="41:22" pos:end="41:24">&lt;&lt;=</operator> <name pos:start="41:26" pos:end="41:34">QEXPSHIFT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:29"><expr pos:start="43:21" pos:end="43:28"><name pos:start="43:21" pos:end="43:21">i</name><operator pos:start="43:22" pos:end="43:23">/=</operator> <name pos:start="43:25" pos:end="43:28">qmul</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:42"><expr pos:start="45:21" pos:end="45:41"><name pos:start="45:21" pos:end="45:37"><name pos:start="45:21" pos:end="45:23">src</name><index pos:start="45:24" pos:end="45:37">[<expr pos:start="45:25" pos:end="45:36"><name pos:start="45:25" pos:end="45:25">x</name> <operator pos:start="45:27" pos:end="45:27">+</operator> <name pos:start="45:29" pos:end="45:29">y</name><operator pos:start="45:30" pos:end="45:30">*</operator><name pos:start="45:31" pos:end="45:36">stride</name></expr>]</index></name><operator pos:start="45:38" pos:end="45:38">=</operator>  <name pos:start="45:41" pos:end="45:41">i</name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="47:18" pos:end="57:17">else<block pos:start="47:22" pos:end="57:17">{<block_content pos:start="49:21" pos:end="55:42">

                    <expr_stmt pos:start="49:21" pos:end="49:26"><expr pos:start="49:21" pos:end="49:25"><name pos:start="49:21" pos:end="49:21">i</name><operator pos:start="49:22" pos:end="49:22">=</operator> <operator pos:start="49:24" pos:end="49:24">-</operator><name pos:start="49:25" pos:end="49:25">i</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:35"><expr pos:start="51:21" pos:end="51:34"><name pos:start="51:21" pos:end="51:21">i</name><operator pos:start="51:22" pos:end="51:24">&lt;&lt;=</operator> <name pos:start="51:26" pos:end="51:34">QEXPSHIFT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="53:21" pos:end="53:29"><expr pos:start="53:21" pos:end="53:28"><name pos:start="53:21" pos:end="53:21">i</name><operator pos:start="53:22" pos:end="53:23">/=</operator> <name pos:start="53:25" pos:end="53:28">qmul</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:42"><expr pos:start="55:21" pos:end="55:41"><name pos:start="55:21" pos:end="55:37"><name pos:start="55:21" pos:end="55:23">src</name><index pos:start="55:24" pos:end="55:37">[<expr pos:start="55:25" pos:end="55:36"><name pos:start="55:25" pos:end="55:25">x</name> <operator pos:start="55:27" pos:end="55:27">+</operator> <name pos:start="55:29" pos:end="55:29">y</name><operator pos:start="55:30" pos:end="55:30">*</operator><name pos:start="55:31" pos:end="55:36">stride</name></expr>]</index></name><operator pos:start="55:38" pos:end="55:38">=</operator> <operator pos:start="55:40" pos:end="55:40">-</operator><name pos:start="55:41" pos:end="55:41">i</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if><else pos:start="63:6" pos:end="103:5">else<block pos:start="63:10" pos:end="103:5">{<block_content pos:start="65:9" pos:end="101:9">

        <for pos:start="65:9" pos:end="101:9">for<control pos:start="65:12" pos:end="65:26">(<init pos:start="65:13" pos:end="65:16"><expr pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:13">y</name><operator pos:start="65:14" pos:end="65:14">=</operator><literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>;</init> <condition pos:start="65:18" pos:end="65:21"><expr pos:start="65:18" pos:end="65:20"><name pos:start="65:18" pos:end="65:18">y</name><operator pos:start="65:19" pos:end="65:19">&lt;</operator><name pos:start="65:20" pos:end="65:20">h</name></expr>;</condition> <incr pos:start="65:23" pos:end="65:25"><expr pos:start="65:23" pos:end="65:25"><name pos:start="65:23" pos:end="65:23">y</name><operator pos:start="65:24" pos:end="65:25">++</operator></expr></incr>)</control><block pos:start="65:27" pos:end="101:9">{<block_content pos:start="67:13" pos:end="99:13">

            <for pos:start="67:13" pos:end="99:13">for<control pos:start="67:16" pos:end="67:30">(<init pos:start="67:17" pos:end="67:20"><expr pos:start="67:17" pos:end="67:19"><name pos:start="67:17" pos:end="67:17">x</name><operator pos:start="67:18" pos:end="67:18">=</operator><literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>;</init> <condition pos:start="67:22" pos:end="67:25"><expr pos:start="67:22" pos:end="67:24"><name pos:start="67:22" pos:end="67:22">x</name><operator pos:start="67:23" pos:end="67:23">&lt;</operator><name pos:start="67:24" pos:end="67:24">w</name></expr>;</condition> <incr pos:start="67:27" pos:end="67:29"><expr pos:start="67:27" pos:end="67:29"><name pos:start="67:27" pos:end="67:27">x</name><operator pos:start="67:28" pos:end="67:29">++</operator></expr></incr>)</control><block pos:start="67:31" pos:end="99:13">{<block_content pos:start="69:17" pos:end="97:17">

                <decl_stmt pos:start="69:17" pos:end="69:41"><decl pos:start="69:17" pos:end="69:40"><type pos:start="69:17" pos:end="69:19"><name pos:start="69:17" pos:end="69:19">int</name></type> <name pos:start="69:21" pos:end="69:21">i</name><init pos:start="69:22" pos:end="69:40">= <expr pos:start="69:24" pos:end="69:40"><name pos:start="69:24" pos:end="69:40"><name pos:start="69:24" pos:end="69:26">src</name><index pos:start="69:27" pos:end="69:40">[<expr pos:start="69:28" pos:end="69:39"><name pos:start="69:28" pos:end="69:28">x</name> <operator pos:start="69:30" pos:end="69:30">+</operator> <name pos:start="69:32" pos:end="69:32">y</name><operator pos:start="69:33" pos:end="69:33">*</operator><name pos:start="69:34" pos:end="69:39">stride</name></expr>]</index></name></expr></init></decl>;</decl_stmt> 

                

                <comment type="line" pos:start="73:17" pos:end="73:37">//FIXME use threshold</comment>

                <comment type="line" pos:start="75:17" pos:end="75:32">//FIXME optimize</comment>

                <comment type="line" pos:start="77:17" pos:end="77:28">//FIXME bias</comment>

                <if_stmt pos:start="79:17" pos:end="97:17"><if pos:start="79:17" pos:end="87:17">if<condition pos:start="79:19" pos:end="79:24">(<expr pos:start="79:20" pos:end="79:23"><name pos:start="79:20" pos:end="79:20">i</name><operator pos:start="79:21" pos:end="79:22">&gt;=</operator><literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr>)</condition><block pos:start="79:25" pos:end="87:17">{<block_content pos:start="81:21" pos:end="85:42">

                    <expr_stmt pos:start="81:21" pos:end="81:35"><expr pos:start="81:21" pos:end="81:34"><name pos:start="81:21" pos:end="81:21">i</name><operator pos:start="81:22" pos:end="81:24">&lt;&lt;=</operator> <name pos:start="81:26" pos:end="81:34">QEXPSHIFT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:41"><expr pos:start="83:21" pos:end="83:40"><name pos:start="83:21" pos:end="83:21">i</name><operator pos:start="83:22" pos:end="83:22">=</operator> <operator pos:start="83:24" pos:end="83:24">(</operator><name pos:start="83:25" pos:end="83:25">i</name> <operator pos:start="83:27" pos:end="83:27">+</operator> <name pos:start="83:29" pos:end="83:32">bias</name><operator pos:start="83:33" pos:end="83:33">)</operator> <operator pos:start="83:35" pos:end="83:35">/</operator> <name pos:start="83:37" pos:end="83:40">qmul</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:42"><expr pos:start="85:21" pos:end="85:41"><name pos:start="85:21" pos:end="85:37"><name pos:start="85:21" pos:end="85:23">src</name><index pos:start="85:24" pos:end="85:37">[<expr pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:25">x</name> <operator pos:start="85:27" pos:end="85:27">+</operator> <name pos:start="85:29" pos:end="85:29">y</name><operator pos:start="85:30" pos:end="85:30">*</operator><name pos:start="85:31" pos:end="85:36">stride</name></expr>]</index></name><operator pos:start="85:38" pos:end="85:38">=</operator>  <name pos:start="85:41" pos:end="85:41">i</name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="87:18" pos:end="97:17">else<block pos:start="87:22" pos:end="97:17">{<block_content pos:start="89:21" pos:end="95:42">

                    <expr_stmt pos:start="89:21" pos:end="89:26"><expr pos:start="89:21" pos:end="89:25"><name pos:start="89:21" pos:end="89:21">i</name><operator pos:start="89:22" pos:end="89:22">=</operator> <operator pos:start="89:24" pos:end="89:24">-</operator><name pos:start="89:25" pos:end="89:25">i</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:35"><expr pos:start="91:21" pos:end="91:34"><name pos:start="91:21" pos:end="91:21">i</name><operator pos:start="91:22" pos:end="91:24">&lt;&lt;=</operator> <name pos:start="91:26" pos:end="91:34">QEXPSHIFT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:41"><expr pos:start="93:21" pos:end="93:40"><name pos:start="93:21" pos:end="93:21">i</name><operator pos:start="93:22" pos:end="93:22">=</operator> <operator pos:start="93:24" pos:end="93:24">(</operator><name pos:start="93:25" pos:end="93:25">i</name> <operator pos:start="93:27" pos:end="93:27">+</operator> <name pos:start="93:29" pos:end="93:32">bias</name><operator pos:start="93:33" pos:end="93:33">)</operator> <operator pos:start="93:35" pos:end="93:35">/</operator> <name pos:start="93:37" pos:end="93:40">qmul</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:42"><expr pos:start="95:21" pos:end="95:41"><name pos:start="95:21" pos:end="95:37"><name pos:start="95:21" pos:end="95:23">src</name><index pos:start="95:24" pos:end="95:37">[<expr pos:start="95:25" pos:end="95:36"><name pos:start="95:25" pos:end="95:25">x</name> <operator pos:start="95:27" pos:end="95:27">+</operator> <name pos:start="95:29" pos:end="95:29">y</name><operator pos:start="95:30" pos:end="95:30">*</operator><name pos:start="95:31" pos:end="95:36">stride</name></expr>]</index></name><operator pos:start="95:38" pos:end="95:38">=</operator> <operator pos:start="95:40" pos:end="95:40">-</operator><name pos:start="95:41" pos:end="95:41">i</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
