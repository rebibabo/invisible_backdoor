<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4693.c" pos:tabs="8"><function pos:start="1:1" pos:end="249:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:45">avcodec_decode_audio4</name><parameter_list pos:start="1:46" pos:end="7:68">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:60"><decl pos:start="3:47" pos:end="3:60"><type pos:start="3:47" pos:end="3:60"><name pos:start="3:47" pos:end="3:53">AVFrame</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">frame</name></decl></parameter>,

                                              <parameter pos:start="5:47" pos:end="5:64"><decl pos:start="5:47" pos:end="5:64"><type pos:start="5:47" pos:end="5:64"><name pos:start="5:47" pos:end="5:49">int</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:64">got_frame_ptr</name></decl></parameter>,

                                              <parameter pos:start="7:47" pos:end="7:67"><decl pos:start="7:47" pos:end="7:67"><type pos:start="7:47" pos:end="7:67"><specifier pos:start="7:47" pos:end="7:51">const</specifier> <name pos:start="7:53" pos:end="7:60">AVPacket</name> <modifier pos:start="7:62" pos:end="7:62">*</modifier></type><name pos:start="7:63" pos:end="7:67">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="249:1">{<block_content pos:start="11:5" pos:end="247:15">

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">AVCodecInternal</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:25">avci</name> <init pos:start="11:27" pos:end="11:43">= <expr pos:start="11:29" pos:end="11:43"><name pos:start="11:29" pos:end="11:43"><name pos:start="11:29" pos:end="11:33">avctx</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:43">internal</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">planar</name></decl>, <decl pos:start="13:17" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:24">channels</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:18">got_frame_ptr</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="28:5"><if pos:start="23:5" pos:end="28:5">if <condition pos:start="23:8" pos:end="23:36">(<expr pos:start="23:9" pos:end="23:35"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:20"><name pos:start="23:10" pos:end="23:14">avpkt</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:20">data</name></name> <operator pos:start="23:22" pos:end="23:23">&amp;&amp;</operator> <name pos:start="23:25" pos:end="23:35"><name pos:start="23:25" pos:end="23:29">avpkt</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:35">size</name></name></expr>)</condition> <block pos:start="23:38" pos:end="28:5">{<block_content pos:start="25:9" pos:end="25:78">

        <expr_stmt pos:start="25:9" pos:end="25:78"><expr pos:start="25:9" pos:end="25:77"><call pos:start="25:9" pos:end="25:77"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:77">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:37" pos:end="25:76"><expr pos:start="25:37" pos:end="25:76"><literal type="string" pos:start="25:37" pos:end="25:76">"invalid packet: NULL data, size != 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="32:5" pos:end="37:5"><if pos:start="32:5" pos:end="37:5">if <condition pos:start="32:8" pos:end="32:49">(<expr pos:start="32:9" pos:end="32:48"><name pos:start="32:9" pos:end="32:26"><name pos:start="32:9" pos:end="32:13">avctx</name><operator pos:start="32:14" pos:end="32:15">-&gt;</operator><name pos:start="32:16" pos:end="32:20">codec</name><operator pos:start="32:21" pos:end="32:22">-&gt;</operator><name pos:start="32:23" pos:end="32:26">type</name></name> <operator pos:start="32:28" pos:end="32:29">!=</operator> <name pos:start="32:31" pos:end="32:48">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="32:51" pos:end="37:5">{<block_content pos:start="34:9" pos:end="34:70">

        <expr_stmt pos:start="34:9" pos:end="34:70"><expr pos:start="34:9" pos:end="34:69"><call pos:start="34:9" pos:end="34:69"><name pos:start="34:9" pos:end="34:14">av_log</name><argument_list pos:start="34:15" pos:end="34:69">(<argument pos:start="34:16" pos:end="34:20"><expr pos:start="34:16" pos:end="34:20"><name pos:start="34:16" pos:end="34:20">avctx</name></expr></argument>, <argument pos:start="34:23" pos:end="34:34"><expr pos:start="34:23" pos:end="34:34"><name pos:start="34:23" pos:end="34:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="34:37" pos:end="34:68"><expr pos:start="34:37" pos:end="34:68"><literal type="string" pos:start="34:37" pos:end="34:68">"Invalid media type for audio\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><call pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:30">avcodec_get_frame_defaults</name><argument_list pos:start="41:31" pos:end="41:37">(<argument pos:start="41:32" pos:end="41:36"><expr pos:start="41:32" pos:end="41:36"><name pos:start="41:32" pos:end="41:36">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="47:39"><if pos:start="45:5" pos:end="47:39">if <condition pos:start="45:8" pos:end="45:34">(<expr pos:start="45:9" pos:end="45:33"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:33"><name pos:start="45:10" pos:end="45:14">avctx</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:33">refcounted_frames</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:39"><block_content pos:start="47:9" pos:end="47:39">

        <expr_stmt pos:start="47:9" pos:end="47:39"><expr pos:start="47:9" pos:end="47:38"><call pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:22">av_frame_unref</name><argument_list pos:start="47:23" pos:end="47:38">(<argument pos:start="47:24" pos:end="47:37"><expr pos:start="47:24" pos:end="47:37"><operator pos:start="47:24" pos:end="47:24">&amp;</operator><name pos:start="47:25" pos:end="47:37"><name pos:start="47:25" pos:end="47:28">avci</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:37">to_free</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="219:5"><if pos:start="51:5" pos:end="219:5">if <condition pos:start="51:8" pos:end="51:119">(<expr pos:start="51:9" pos:end="51:118"><operator pos:start="51:9" pos:end="51:9">(</operator><name pos:start="51:10" pos:end="51:35"><name pos:start="51:10" pos:end="51:14">avctx</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:21">codec</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:35">capabilities</name></name> <operator pos:start="51:37" pos:end="51:37">&amp;</operator> <name pos:start="51:39" pos:end="51:53">CODEC_CAP_DELAY</name><operator pos:start="51:54" pos:end="51:54">)</operator> <operator pos:start="51:56" pos:end="51:57">||</operator> <name pos:start="51:59" pos:end="51:69"><name pos:start="51:59" pos:end="51:63">avpkt</name><operator pos:start="51:64" pos:end="51:65">-&gt;</operator><name pos:start="51:66" pos:end="51:69">size</name></name> <operator pos:start="51:71" pos:end="51:72">||</operator> <operator pos:start="51:74" pos:end="51:74">(</operator><name pos:start="51:75" pos:end="51:99"><name pos:start="51:75" pos:end="51:79">avctx</name><operator pos:start="51:80" pos:end="51:81">-&gt;</operator><name pos:start="51:82" pos:end="51:99">active_thread_type</name></name> <operator pos:start="51:101" pos:end="51:101">&amp;</operator> <name pos:start="51:103" pos:end="51:117">FF_THREAD_FRAME</name><operator pos:start="51:118" pos:end="51:118">)</operator></expr>)</condition> <block pos:start="51:121" pos:end="219:5">{<block_content pos:start="53:9" pos:end="217:34">

        <decl_stmt pos:start="53:9" pos:end="53:22"><decl pos:start="53:9" pos:end="53:21"><type pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:15">uint8_t</name> <modifier pos:start="53:17" pos:end="53:17">*</modifier></type><name pos:start="53:18" pos:end="53:21">side</name></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="55:22"><decl pos:start="55:9" pos:end="55:21"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:21">side_size</name></decl>;</decl_stmt>

        <comment type="line" pos:start="57:9" pos:end="57:48">// copy to ensure we do not change avpkt</comment>

        <decl_stmt pos:start="59:9" pos:end="59:30"><decl pos:start="59:9" pos:end="59:29"><type pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:16">AVPacket</name></type> <name pos:start="59:18" pos:end="59:20">tmp</name> <init pos:start="59:22" pos:end="59:29">= <expr pos:start="59:24" pos:end="59:29"><operator pos:start="59:24" pos:end="59:24">*</operator><name pos:start="59:25" pos:end="59:29">avpkt</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:56"><decl pos:start="61:9" pos:end="61:55"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:21">did_split</name> <init pos:start="61:23" pos:end="61:55">= <expr pos:start="61:25" pos:end="61:55"><call pos:start="61:25" pos:end="61:55"><name pos:start="61:25" pos:end="61:49">av_packet_split_side_data</name><argument_list pos:start="61:50" pos:end="61:55">(<argument pos:start="61:51" pos:end="61:54"><expr pos:start="61:51" pos:end="61:54"><operator pos:start="61:51" pos:end="61:51">&amp;</operator><name pos:start="61:52" pos:end="61:54">tmp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:40"><expr pos:start="63:9" pos:end="63:39"><call pos:start="63:9" pos:end="63:39"><name pos:start="63:9" pos:end="63:26">apply_param_change</name><argument_list pos:start="63:27" pos:end="63:39">(<argument pos:start="63:28" pos:end="63:32"><expr pos:start="63:28" pos:end="63:32"><name pos:start="63:28" pos:end="63:32">avctx</name></expr></argument>, <argument pos:start="63:35" pos:end="63:38"><expr pos:start="63:35" pos:end="63:38"><operator pos:start="63:35" pos:end="63:35">&amp;</operator><name pos:start="63:36" pos:end="63:38">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:26"><expr pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:13">avctx</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:18">pkt</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <operator pos:start="67:22" pos:end="67:22">&amp;</operator><name pos:start="67:23" pos:end="67:25">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="79:9"><if pos:start="69:9" pos:end="71:76">if <condition pos:start="69:12" pos:end="69:72">(<expr pos:start="69:13" pos:end="69:71"><name pos:start="69:13" pos:end="69:24">HAVE_THREADS</name> <operator pos:start="69:26" pos:end="69:27">&amp;&amp;</operator> <name pos:start="69:29" pos:end="69:53"><name pos:start="69:29" pos:end="69:33">avctx</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:53">active_thread_type</name></name> <operator pos:start="69:55" pos:end="69:55">&amp;</operator> <name pos:start="69:57" pos:end="69:71">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:76"><block_content pos:start="71:13" pos:end="71:76">

            <expr_stmt pos:start="71:13" pos:end="71:76"><expr pos:start="71:13" pos:end="71:75"><name pos:start="71:13" pos:end="71:15">ret</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <call pos:start="71:19" pos:end="71:75"><name pos:start="71:19" pos:end="71:40">ff_thread_decode_frame</name><argument_list pos:start="71:41" pos:end="71:75">(<argument pos:start="71:42" pos:end="71:46"><expr pos:start="71:42" pos:end="71:46"><name pos:start="71:42" pos:end="71:46">avctx</name></expr></argument>, <argument pos:start="71:49" pos:end="71:53"><expr pos:start="71:49" pos:end="71:53"><name pos:start="71:49" pos:end="71:53">frame</name></expr></argument>, <argument pos:start="71:56" pos:end="71:68"><expr pos:start="71:56" pos:end="71:68"><name pos:start="71:56" pos:end="71:68">got_frame_ptr</name></expr></argument>, <argument pos:start="71:71" pos:end="71:74"><expr pos:start="71:71" pos:end="71:74"><operator pos:start="71:71" pos:end="71:71">&amp;</operator><name pos:start="71:72" pos:end="71:74">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="73:9" pos:end="79:9">else <block pos:start="73:14" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:40">

            <expr_stmt pos:start="75:13" pos:end="75:74"><expr pos:start="75:13" pos:end="75:73"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <call pos:start="75:19" pos:end="75:73"><name pos:start="75:19" pos:end="75:38"><name pos:start="75:19" pos:end="75:23">avctx</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:30">codec</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:38">decode</name></name><argument_list pos:start="75:39" pos:end="75:73">(<argument pos:start="75:40" pos:end="75:44"><expr pos:start="75:40" pos:end="75:44"><name pos:start="75:40" pos:end="75:44">avctx</name></expr></argument>, <argument pos:start="75:47" pos:end="75:51"><expr pos:start="75:47" pos:end="75:51"><name pos:start="75:47" pos:end="75:51">frame</name></expr></argument>, <argument pos:start="75:54" pos:end="75:66"><expr pos:start="75:54" pos:end="75:66"><name pos:start="75:54" pos:end="75:66">got_frame_ptr</name></expr></argument>, <argument pos:start="75:69" pos:end="75:72"><expr pos:start="75:69" pos:end="75:72"><operator pos:start="75:69" pos:end="75:69">&amp;</operator><name pos:start="75:70" pos:end="75:72">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:40"><expr pos:start="77:13" pos:end="77:39"><name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:17">frame</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:26">pkt_dts</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <name pos:start="77:30" pos:end="77:39"><name pos:start="77:30" pos:end="77:34">avpkt</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:39">dts</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="81:9" pos:end="111:9"><if pos:start="81:9" pos:end="111:9">if <condition pos:start="81:12" pos:end="81:39">(<expr pos:start="81:13" pos:end="81:38"><name pos:start="81:13" pos:end="81:15">ret</name> <operator pos:start="81:17" pos:end="81:18">&gt;=</operator> <literal type="number" pos:start="81:20" pos:end="81:20">0</literal> <operator pos:start="81:22" pos:end="81:23">&amp;&amp;</operator> <operator pos:start="81:25" pos:end="81:25">*</operator><name pos:start="81:26" pos:end="81:38">got_frame_ptr</name></expr>)</condition> <block pos:start="81:41" pos:end="111:9">{<block_content pos:start="83:13" pos:end="109:56">

            <expr_stmt pos:start="83:13" pos:end="83:54"><expr pos:start="83:13" pos:end="83:53"><call pos:start="83:13" pos:end="83:53"><name pos:start="83:13" pos:end="83:39">add_metadata_from_side_data</name><argument_list pos:start="83:40" pos:end="83:53">(<argument pos:start="83:41" pos:end="83:45"><expr pos:start="83:41" pos:end="83:45"><name pos:start="83:41" pos:end="83:45">avctx</name></expr></argument>, <argument pos:start="83:48" pos:end="83:52"><expr pos:start="83:48" pos:end="83:52"><name pos:start="83:48" pos:end="83:52">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:34"><expr pos:start="85:13" pos:end="85:33"><name pos:start="85:13" pos:end="85:31"><name pos:start="85:13" pos:end="85:17">avctx</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:31">frame_number</name></name><operator pos:start="85:32" pos:end="85:33">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="93:82"><expr pos:start="87:13" pos:end="93:81"><call pos:start="87:13" pos:end="93:81"><name pos:start="87:13" pos:end="87:46">av_frame_set_best_effort_timestamp</name><argument_list pos:start="87:47" pos:end="93:81">(<argument pos:start="87:48" pos:end="87:52"><expr pos:start="87:48" pos:end="87:52"><name pos:start="87:48" pos:end="87:52">frame</name></expr></argument>,

                                               <argument pos:start="89:48" pos:end="93:80"><expr pos:start="89:48" pos:end="93:80"><call pos:start="89:48" pos:end="93:80"><name pos:start="89:48" pos:end="89:64">guess_correct_pts</name><argument_list pos:start="89:65" pos:end="93:80">(<argument pos:start="89:66" pos:end="89:70"><expr pos:start="89:66" pos:end="89:70"><name pos:start="89:66" pos:end="89:70">avctx</name></expr></argument>,

                                                                 <argument pos:start="91:66" pos:end="91:79"><expr pos:start="91:66" pos:end="91:79"><name pos:start="91:66" pos:end="91:79"><name pos:start="91:66" pos:end="91:70">frame</name><operator pos:start="91:71" pos:end="91:72">-&gt;</operator><name pos:start="91:73" pos:end="91:79">pkt_pts</name></name></expr></argument>,

                                                                 <argument pos:start="93:66" pos:end="93:79"><expr pos:start="93:66" pos:end="93:79"><name pos:start="93:66" pos:end="93:79"><name pos:start="93:66" pos:end="93:70">frame</name><operator pos:start="93:71" pos:end="93:72">-&gt;</operator><name pos:start="93:73" pos:end="93:79">pkt_dts</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="97:50"><if pos:start="95:13" pos:end="97:50">if <condition pos:start="95:16" pos:end="95:52">(<expr pos:start="95:17" pos:end="95:51"><name pos:start="95:17" pos:end="95:29"><name pos:start="95:17" pos:end="95:21">frame</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:29">format</name></name> <operator pos:start="95:31" pos:end="95:32">==</operator> <name pos:start="95:34" pos:end="95:51">AV_SAMPLE_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:50"><block_content pos:start="97:17" pos:end="97:50">

                <expr_stmt pos:start="97:17" pos:end="97:50"><expr pos:start="97:17" pos:end="97:49"><name pos:start="97:17" pos:end="97:29"><name pos:start="97:17" pos:end="97:21">frame</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:29">format</name></name> <operator pos:start="97:31" pos:end="97:31">=</operator> <name pos:start="97:33" pos:end="97:49"><name pos:start="97:33" pos:end="97:37">avctx</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:49">sample_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="99:13" pos:end="101:62"><if pos:start="99:13" pos:end="101:62">if <condition pos:start="99:16" pos:end="99:39">(<expr pos:start="99:17" pos:end="99:38"><operator pos:start="99:17" pos:end="99:17">!</operator><name pos:start="99:18" pos:end="99:38"><name pos:start="99:18" pos:end="99:22">frame</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:38">channel_layout</name></name></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:62"><block_content pos:start="101:17" pos:end="101:62">

                <expr_stmt pos:start="101:17" pos:end="101:62"><expr pos:start="101:17" pos:end="101:61"><name pos:start="101:17" pos:end="101:37"><name pos:start="101:17" pos:end="101:21">frame</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:37">channel_layout</name></name> <operator pos:start="101:39" pos:end="101:39">=</operator> <name pos:start="101:41" pos:end="101:61"><name pos:start="101:41" pos:end="101:45">avctx</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:61">channel_layout</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="103:13" pos:end="105:62"><if pos:start="103:13" pos:end="105:62">if <condition pos:start="103:16" pos:end="103:46">(<expr pos:start="103:17" pos:end="103:45"><operator pos:start="103:17" pos:end="103:17">!</operator><call pos:start="103:18" pos:end="103:45"><name pos:start="103:18" pos:end="103:38">av_frame_get_channels</name><argument_list pos:start="103:39" pos:end="103:45">(<argument pos:start="103:40" pos:end="103:44"><expr pos:start="103:40" pos:end="103:44"><name pos:start="103:40" pos:end="103:44">frame</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:62"><block_content pos:start="105:17" pos:end="105:62">

                <expr_stmt pos:start="105:17" pos:end="105:62"><expr pos:start="105:17" pos:end="105:61"><call pos:start="105:17" pos:end="105:61"><name pos:start="105:17" pos:end="105:37">av_frame_set_channels</name><argument_list pos:start="105:38" pos:end="105:61">(<argument pos:start="105:39" pos:end="105:43"><expr pos:start="105:39" pos:end="105:43"><name pos:start="105:39" pos:end="105:43">frame</name></expr></argument>, <argument pos:start="105:46" pos:end="105:60"><expr pos:start="105:46" pos:end="105:60"><name pos:start="105:46" pos:end="105:60"><name pos:start="105:46" pos:end="105:50">avctx</name><operator pos:start="105:51" pos:end="105:52">-&gt;</operator><name pos:start="105:53" pos:end="105:60">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="107:13" pos:end="109:56"><if pos:start="107:13" pos:end="109:56">if <condition pos:start="107:16" pos:end="107:36">(<expr pos:start="107:17" pos:end="107:35"><operator pos:start="107:17" pos:end="107:17">!</operator><name pos:start="107:18" pos:end="107:35"><name pos:start="107:18" pos:end="107:22">frame</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:35">sample_rate</name></name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:56"><block_content pos:start="109:17" pos:end="109:56">

                <expr_stmt pos:start="109:17" pos:end="109:56"><expr pos:start="109:17" pos:end="109:55"><name pos:start="109:17" pos:end="109:34"><name pos:start="109:17" pos:end="109:21">frame</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:34">sample_rate</name></name> <operator pos:start="109:36" pos:end="109:36">=</operator> <name pos:start="109:38" pos:end="109:55"><name pos:start="109:38" pos:end="109:42">avctx</name><operator pos:start="109:43" pos:end="109:44">-&gt;</operator><name pos:start="109:45" pos:end="109:55">sample_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:88"><expr pos:start="115:9" pos:end="115:87"><name pos:start="115:9" pos:end="115:12">side</name><operator pos:start="115:13" pos:end="115:13">=</operator> <call pos:start="115:15" pos:end="115:87"><name pos:start="115:15" pos:end="115:37">av_packet_get_side_data</name><argument_list pos:start="115:38" pos:end="115:87">(<argument pos:start="115:39" pos:end="115:48"><expr pos:start="115:39" pos:end="115:48"><name pos:start="115:39" pos:end="115:48"><name pos:start="115:39" pos:end="115:43">avctx</name><operator pos:start="115:44" pos:end="115:45">-&gt;</operator><name pos:start="115:46" pos:end="115:48">pkt</name></name></expr></argument>, <argument pos:start="115:51" pos:end="115:74"><expr pos:start="115:51" pos:end="115:74"><name pos:start="115:51" pos:end="115:74">AV_PKT_DATA_SKIP_SAMPLES</name></expr></argument>, <argument pos:start="115:77" pos:end="115:86"><expr pos:start="115:77" pos:end="115:86"><operator pos:start="115:77" pos:end="115:77">&amp;</operator><name pos:start="115:78" pos:end="115:86">side_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="125:9"><if pos:start="117:9" pos:end="125:9">if<condition pos:start="117:11" pos:end="117:33">(<expr pos:start="117:12" pos:end="117:32"><name pos:start="117:12" pos:end="117:15">side</name> <operator pos:start="117:17" pos:end="117:18">&amp;&amp;</operator> <name pos:start="117:20" pos:end="117:28">side_size</name><operator pos:start="117:29" pos:end="117:30">&gt;=</operator><literal type="number" pos:start="117:31" pos:end="117:32">10</literal></expr>)</condition> <block pos:start="117:35" pos:end="125:9">{<block_content pos:start="119:13" pos:end="123:50">

            <expr_stmt pos:start="119:13" pos:end="119:58"><expr pos:start="119:13" pos:end="119:57"><name pos:start="119:13" pos:end="119:41"><name pos:start="119:13" pos:end="119:17">avctx</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:27">internal</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:41">skip_samples</name></name> <operator pos:start="119:43" pos:end="119:43">=</operator> <call pos:start="119:45" pos:end="119:57"><name pos:start="119:45" pos:end="119:51">AV_RL32</name><argument_list pos:start="119:52" pos:end="119:57">(<argument pos:start="119:53" pos:end="119:56"><expr pos:start="119:53" pos:end="119:56"><name pos:start="119:53" pos:end="119:56">side</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="123:50"><expr pos:start="121:13" pos:end="123:49"><call pos:start="121:13" pos:end="123:49"><name pos:start="121:13" pos:end="121:18">av_log</name><argument_list pos:start="121:19" pos:end="123:49">(<argument pos:start="121:20" pos:end="121:24"><expr pos:start="121:20" pos:end="121:24"><name pos:start="121:20" pos:end="121:24">avctx</name></expr></argument>, <argument pos:start="121:27" pos:end="121:38"><expr pos:start="121:27" pos:end="121:38"><name pos:start="121:27" pos:end="121:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="121:41" pos:end="121:76"><expr pos:start="121:41" pos:end="121:76"><literal type="string" pos:start="121:41" pos:end="121:76">"skip %d samples due to side data\n"</literal></expr></argument>,

                   <argument pos:start="123:20" pos:end="123:48"><expr pos:start="123:20" pos:end="123:48"><name pos:start="123:20" pos:end="123:48"><name pos:start="123:20" pos:end="123:24">avctx</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:34">internal</name><operator pos:start="123:35" pos:end="123:36">-&gt;</operator><name pos:start="123:37" pos:end="123:48">skip_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="127:9" pos:end="181:9"><if pos:start="127:9" pos:end="181:9">if <condition pos:start="127:12" pos:end="127:60">(<expr pos:start="127:13" pos:end="127:59"><name pos:start="127:13" pos:end="127:41"><name pos:start="127:13" pos:end="127:17">avctx</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:27">internal</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:41">skip_samples</name></name> <operator pos:start="127:43" pos:end="127:44">&amp;&amp;</operator> <operator pos:start="127:46" pos:end="127:46">*</operator><name pos:start="127:47" pos:end="127:59">got_frame_ptr</name></expr>)</condition> <block pos:start="127:62" pos:end="181:9">{<block_content pos:start="129:13" pos:end="179:13">

            <if_stmt pos:start="129:13" pos:end="179:13"><if pos:start="129:13" pos:end="139:13">if<condition pos:start="129:15" pos:end="129:66">(<expr pos:start="129:16" pos:end="129:65"><name pos:start="129:16" pos:end="129:32"><name pos:start="129:16" pos:end="129:20">frame</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:32">nb_samples</name></name> <operator pos:start="129:34" pos:end="129:35">&lt;=</operator> <name pos:start="129:37" pos:end="129:65"><name pos:start="129:37" pos:end="129:41">avctx</name><operator pos:start="129:42" pos:end="129:43">-&gt;</operator><name pos:start="129:44" pos:end="129:51">internal</name><operator pos:start="129:52" pos:end="129:53">-&gt;</operator><name pos:start="129:54" pos:end="129:65">skip_samples</name></name></expr>)</condition><block pos:start="129:67" pos:end="139:13">{<block_content pos:start="131:17" pos:end="137:54">

                <expr_stmt pos:start="131:17" pos:end="131:35"><expr pos:start="131:17" pos:end="131:34"><operator pos:start="131:17" pos:end="131:17">*</operator><name pos:start="131:18" pos:end="131:30">got_frame_ptr</name> <operator pos:start="131:32" pos:end="131:32">=</operator> <literal type="number" pos:start="131:34" pos:end="131:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:67"><expr pos:start="133:17" pos:end="133:66"><name pos:start="133:17" pos:end="133:45"><name pos:start="133:17" pos:end="133:21">avctx</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:31">internal</name><operator pos:start="133:32" pos:end="133:33">-&gt;</operator><name pos:start="133:34" pos:end="133:45">skip_samples</name></name> <operator pos:start="133:47" pos:end="133:48">-=</operator> <name pos:start="133:50" pos:end="133:66"><name pos:start="133:50" pos:end="133:54">frame</name><operator pos:start="133:55" pos:end="133:56">-&gt;</operator><name pos:start="133:57" pos:end="133:66">nb_samples</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="137:54"><expr pos:start="135:17" pos:end="137:53"><call pos:start="135:17" pos:end="137:53"><name pos:start="135:17" pos:end="135:22">av_log</name><argument_list pos:start="135:23" pos:end="137:53">(<argument pos:start="135:24" pos:end="135:28"><expr pos:start="135:24" pos:end="135:28"><name pos:start="135:24" pos:end="135:28">avctx</name></expr></argument>, <argument pos:start="135:31" pos:end="135:42"><expr pos:start="135:31" pos:end="135:42"><name pos:start="135:31" pos:end="135:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="135:45" pos:end="135:79"><expr pos:start="135:45" pos:end="135:79"><literal type="string" pos:start="135:45" pos:end="135:79">"skip whole frame, skip left: %d\n"</literal></expr></argument>,

                       <argument pos:start="137:24" pos:end="137:52"><expr pos:start="137:24" pos:end="137:52"><name pos:start="137:24" pos:end="137:52"><name pos:start="137:24" pos:end="137:28">avctx</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:38">internal</name><operator pos:start="137:39" pos:end="137:40">-&gt;</operator><name pos:start="137:41" pos:end="137:52">skip_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="139:15" pos:end="179:13">else <block pos:start="139:20" pos:end="179:13">{<block_content pos:start="141:17" pos:end="177:50">

                <expr_stmt pos:start="141:17" pos:end="143:115"><expr pos:start="141:17" pos:end="143:114"><call pos:start="141:17" pos:end="143:114"><name pos:start="141:17" pos:end="141:31">av_samples_copy</name><argument_list pos:start="141:32" pos:end="143:114">(<argument pos:start="141:33" pos:end="141:52"><expr pos:start="141:33" pos:end="141:52"><name pos:start="141:33" pos:end="141:52"><name pos:start="141:33" pos:end="141:37">frame</name><operator pos:start="141:38" pos:end="141:39">-&gt;</operator><name pos:start="141:40" pos:end="141:52">extended_data</name></name></expr></argument>, <argument pos:start="141:55" pos:end="141:74"><expr pos:start="141:55" pos:end="141:74"><name pos:start="141:55" pos:end="141:74"><name pos:start="141:55" pos:end="141:59">frame</name><operator pos:start="141:60" pos:end="141:61">-&gt;</operator><name pos:start="141:62" pos:end="141:74">extended_data</name></name></expr></argument>, <argument pos:start="141:77" pos:end="141:77"><expr pos:start="141:77" pos:end="141:77"><literal type="number" pos:start="141:77" pos:end="141:77">0</literal></expr></argument>, <argument pos:start="141:80" pos:end="141:108"><expr pos:start="141:80" pos:end="141:108"><name pos:start="141:80" pos:end="141:108"><name pos:start="141:80" pos:end="141:84">avctx</name><operator pos:start="141:85" pos:end="141:86">-&gt;</operator><name pos:start="141:87" pos:end="141:94">internal</name><operator pos:start="141:95" pos:end="141:96">-&gt;</operator><name pos:start="141:97" pos:end="141:108">skip_samples</name></name></expr></argument>,

                                <argument pos:start="143:33" pos:end="143:81"><expr pos:start="143:33" pos:end="143:81"><name pos:start="143:33" pos:end="143:49"><name pos:start="143:33" pos:end="143:37">frame</name><operator pos:start="143:38" pos:end="143:39">-&gt;</operator><name pos:start="143:40" pos:end="143:49">nb_samples</name></name> <operator pos:start="143:51" pos:end="143:51">-</operator> <name pos:start="143:53" pos:end="143:81"><name pos:start="143:53" pos:end="143:57">avctx</name><operator pos:start="143:58" pos:end="143:59">-&gt;</operator><name pos:start="143:60" pos:end="143:67">internal</name><operator pos:start="143:68" pos:end="143:69">-&gt;</operator><name pos:start="143:70" pos:end="143:81">skip_samples</name></name></expr></argument>, <argument pos:start="143:84" pos:end="143:98"><expr pos:start="143:84" pos:end="143:98"><name pos:start="143:84" pos:end="143:98"><name pos:start="143:84" pos:end="143:88">avctx</name><operator pos:start="143:89" pos:end="143:90">-&gt;</operator><name pos:start="143:91" pos:end="143:98">channels</name></name></expr></argument>, <argument pos:start="143:101" pos:end="143:113"><expr pos:start="143:101" pos:end="143:113"><name pos:start="143:101" pos:end="143:113"><name pos:start="143:101" pos:end="143:105">frame</name><operator pos:start="143:106" pos:end="143:107">-&gt;</operator><name pos:start="143:108" pos:end="143:113">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="145:17" pos:end="169:17"><if pos:start="145:17" pos:end="165:17">if<condition pos:start="145:19" pos:end="145:65">(<expr pos:start="145:20" pos:end="145:64"><name pos:start="145:20" pos:end="145:42"><name pos:start="145:20" pos:end="145:24">avctx</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:38">pkt_timebase</name><operator pos:start="145:39" pos:end="145:39">.</operator><name pos:start="145:40" pos:end="145:42">num</name></name> <operator pos:start="145:44" pos:end="145:45">&amp;&amp;</operator> <name pos:start="145:47" pos:end="145:64"><name pos:start="145:47" pos:end="145:51">avctx</name><operator pos:start="145:52" pos:end="145:53">-&gt;</operator><name pos:start="145:54" pos:end="145:64">sample_rate</name></name></expr>)</condition> <block pos:start="145:67" pos:end="165:17">{<block_content pos:start="147:21" pos:end="163:101">

                    <decl_stmt pos:start="147:21" pos:end="151:72"><decl pos:start="147:21" pos:end="151:71"><type pos:start="147:21" pos:end="147:27"><name pos:start="147:21" pos:end="147:27">int64_t</name></type> <name pos:start="147:29" pos:end="147:35">diff_ts</name> <init pos:start="147:37" pos:end="151:71">= <macro pos:start="147:39" pos:end="151:71"><name pos:start="147:39" pos:end="147:50">av_rescale_q</name><argument_list pos:start="147:51" pos:end="151:71">(<argument pos:start="147:52" pos:end="147:80">avctx-&gt;internal-&gt;skip_samples</argument>,

                                                   <argument pos:start="149:52" pos:end="149:65">(AVRational){<literal type="number" pos:start="149:65" pos:end="149:65">1</literal></argument>, <argument pos:start="149:68" pos:end="149:86">avctx-&gt;sample_rate}</argument>,

                                                   <argument pos:start="151:52" pos:end="151:70">avctx-&gt;pkt_timebase</argument>)</argument_list></macro></init></decl>;</decl_stmt>

                    <if_stmt pos:start="153:21" pos:end="155:50"><if pos:start="153:21" pos:end="155:50">if<condition pos:start="153:23" pos:end="153:54">(<expr pos:start="153:24" pos:end="153:53"><name pos:start="153:24" pos:end="153:37"><name pos:start="153:24" pos:end="153:28">frame</name><operator pos:start="153:29" pos:end="153:30">-&gt;</operator><name pos:start="153:31" pos:end="153:37">pkt_pts</name></name><operator pos:start="153:38" pos:end="153:39">!=</operator><name pos:start="153:40" pos:end="153:53">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="155:25" pos:end="155:50"><block_content pos:start="155:25" pos:end="155:50">

                        <expr_stmt pos:start="155:25" pos:end="155:50"><expr pos:start="155:25" pos:end="155:49"><name pos:start="155:25" pos:end="155:38"><name pos:start="155:25" pos:end="155:29">frame</name><operator pos:start="155:30" pos:end="155:31">-&gt;</operator><name pos:start="155:32" pos:end="155:38">pkt_pts</name></name> <operator pos:start="155:40" pos:end="155:41">+=</operator> <name pos:start="155:43" pos:end="155:49">diff_ts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="157:21" pos:end="159:50"><if pos:start="157:21" pos:end="159:50">if<condition pos:start="157:23" pos:end="157:54">(<expr pos:start="157:24" pos:end="157:53"><name pos:start="157:24" pos:end="157:37"><name pos:start="157:24" pos:end="157:28">frame</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:37">pkt_dts</name></name><operator pos:start="157:38" pos:end="157:39">!=</operator><name pos:start="157:40" pos:end="157:53">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="159:25" pos:end="159:50"><block_content pos:start="159:25" pos:end="159:50">

                        <expr_stmt pos:start="159:25" pos:end="159:50"><expr pos:start="159:25" pos:end="159:49"><name pos:start="159:25" pos:end="159:38"><name pos:start="159:25" pos:end="159:29">frame</name><operator pos:start="159:30" pos:end="159:31">-&gt;</operator><name pos:start="159:32" pos:end="159:38">pkt_dts</name></name> <operator pos:start="159:40" pos:end="159:41">+=</operator> <name pos:start="159:43" pos:end="159:49">diff_ts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="161:21" pos:end="163:101"><if pos:start="161:21" pos:end="163:101">if <condition pos:start="161:24" pos:end="161:68">(<expr pos:start="161:25" pos:end="161:67"><call pos:start="161:25" pos:end="161:56"><name pos:start="161:25" pos:end="161:49">av_frame_get_pkt_duration</name><argument_list pos:start="161:50" pos:end="161:56">(<argument pos:start="161:51" pos:end="161:55"><expr pos:start="161:51" pos:end="161:55"><name pos:start="161:51" pos:end="161:55">frame</name></expr></argument>)</argument_list></call> <operator pos:start="161:58" pos:end="161:59">&gt;=</operator> <name pos:start="161:61" pos:end="161:67">diff_ts</name></expr>)</condition><block type="pseudo" pos:start="163:25" pos:end="163:101"><block_content pos:start="163:25" pos:end="163:101">

                        <expr_stmt pos:start="163:25" pos:end="163:101"><expr pos:start="163:25" pos:end="163:100"><call pos:start="163:25" pos:end="163:100"><name pos:start="163:25" pos:end="163:49">av_frame_set_pkt_duration</name><argument_list pos:start="163:50" pos:end="163:100">(<argument pos:start="163:51" pos:end="163:55"><expr pos:start="163:51" pos:end="163:55"><name pos:start="163:51" pos:end="163:55">frame</name></expr></argument>, <argument pos:start="163:58" pos:end="163:99"><expr pos:start="163:58" pos:end="163:99"><call pos:start="163:58" pos:end="163:89"><name pos:start="163:58" pos:end="163:82">av_frame_get_pkt_duration</name><argument_list pos:start="163:83" pos:end="163:89">(<argument pos:start="163:84" pos:end="163:88"><expr pos:start="163:84" pos:end="163:88"><name pos:start="163:84" pos:end="163:88">frame</name></expr></argument>)</argument_list></call> <operator pos:start="163:91" pos:end="163:91">-</operator> <name pos:start="163:93" pos:end="163:99">diff_ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="165:19" pos:end="169:17">else <block pos:start="165:24" pos:end="169:17">{<block_content pos:start="167:21" pos:end="167:104">

                    <expr_stmt pos:start="167:21" pos:end="167:104"><expr pos:start="167:21" pos:end="167:103"><call pos:start="167:21" pos:end="167:103"><name pos:start="167:21" pos:end="167:26">av_log</name><argument_list pos:start="167:27" pos:end="167:103">(<argument pos:start="167:28" pos:end="167:32"><expr pos:start="167:28" pos:end="167:32"><name pos:start="167:28" pos:end="167:32">avctx</name></expr></argument>, <argument pos:start="167:35" pos:end="167:48"><expr pos:start="167:35" pos:end="167:48"><name pos:start="167:35" pos:end="167:48">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="167:51" pos:end="167:102"><expr pos:start="167:51" pos:end="167:102"><literal type="string" pos:start="167:51" pos:end="167:102">"Could not update timestamps for skipped samples.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="171:17" pos:end="173:73"><expr pos:start="171:17" pos:end="173:72"><call pos:start="171:17" pos:end="173:72"><name pos:start="171:17" pos:end="171:22">av_log</name><argument_list pos:start="171:23" pos:end="173:72">(<argument pos:start="171:24" pos:end="171:28"><expr pos:start="171:24" pos:end="171:28"><name pos:start="171:24" pos:end="171:28">avctx</name></expr></argument>, <argument pos:start="171:31" pos:end="171:42"><expr pos:start="171:31" pos:end="171:42"><name pos:start="171:31" pos:end="171:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="171:45" pos:end="171:66"><expr pos:start="171:45" pos:end="171:66"><literal type="string" pos:start="171:45" pos:end="171:66">"skip %d/%d samples\n"</literal></expr></argument>,

                       <argument pos:start="173:24" pos:end="173:52"><expr pos:start="173:24" pos:end="173:52"><name pos:start="173:24" pos:end="173:52"><name pos:start="173:24" pos:end="173:28">avctx</name><operator pos:start="173:29" pos:end="173:30">-&gt;</operator><name pos:start="173:31" pos:end="173:38">internal</name><operator pos:start="173:39" pos:end="173:40">-&gt;</operator><name pos:start="173:41" pos:end="173:52">skip_samples</name></name></expr></argument>, <argument pos:start="173:55" pos:end="173:71"><expr pos:start="173:55" pos:end="173:71"><name pos:start="173:55" pos:end="173:71"><name pos:start="173:55" pos:end="173:59">frame</name><operator pos:start="173:60" pos:end="173:61">-&gt;</operator><name pos:start="173:62" pos:end="173:71">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:67"><expr pos:start="175:17" pos:end="175:66"><name pos:start="175:17" pos:end="175:33"><name pos:start="175:17" pos:end="175:21">frame</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:33">nb_samples</name></name> <operator pos:start="175:35" pos:end="175:36">-=</operator> <name pos:start="175:38" pos:end="175:66"><name pos:start="175:38" pos:end="175:42">avctx</name><operator pos:start="175:43" pos:end="175:44">-&gt;</operator><name pos:start="175:45" pos:end="175:52">internal</name><operator pos:start="175:53" pos:end="175:54">-&gt;</operator><name pos:start="175:55" pos:end="175:66">skip_samples</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:50"><expr pos:start="177:17" pos:end="177:49"><name pos:start="177:17" pos:end="177:45"><name pos:start="177:17" pos:end="177:21">avctx</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:31">internal</name><operator pos:start="177:32" pos:end="177:33">-&gt;</operator><name pos:start="177:34" pos:end="177:45">skip_samples</name></name> <operator pos:start="177:47" pos:end="177:47">=</operator> <literal type="number" pos:start="177:49" pos:end="177:49">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="185:9" pos:end="185:26"><expr pos:start="185:9" pos:end="185:25"><name pos:start="185:9" pos:end="185:18"><name pos:start="185:9" pos:end="185:13">avctx</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:18">pkt</name></name> <operator pos:start="185:20" pos:end="185:20">=</operator> <name pos:start="185:22" pos:end="185:25">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="187:9" pos:end="195:9"><if pos:start="187:9" pos:end="195:9">if <condition pos:start="187:12" pos:end="187:22">(<expr pos:start="187:13" pos:end="187:21"><name pos:start="187:13" pos:end="187:21">did_split</name></expr>)</condition> <block pos:start="187:24" pos:end="195:9">{<block_content pos:start="189:13" pos:end="193:34">

            <expr_stmt pos:start="189:13" pos:end="189:43"><expr pos:start="189:13" pos:end="189:42"><call pos:start="189:13" pos:end="189:42"><name pos:start="189:13" pos:end="189:36">ff_packet_free_side_data</name><argument_list pos:start="189:37" pos:end="189:42">(<argument pos:start="189:38" pos:end="189:41"><expr pos:start="189:38" pos:end="189:41"><operator pos:start="189:38" pos:end="189:38">&amp;</operator><name pos:start="189:39" pos:end="189:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="191:13" pos:end="193:34"><if pos:start="191:13" pos:end="193:34">if<condition pos:start="191:15" pos:end="191:31">(<expr pos:start="191:16" pos:end="191:30"><name pos:start="191:16" pos:end="191:18">ret</name> <operator pos:start="191:20" pos:end="191:21">==</operator> <name pos:start="191:23" pos:end="191:30"><name pos:start="191:23" pos:end="191:25">tmp</name><operator pos:start="191:26" pos:end="191:26">.</operator><name pos:start="191:27" pos:end="191:30">size</name></name></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:34"><block_content pos:start="193:17" pos:end="193:34">

                <expr_stmt pos:start="193:17" pos:end="193:34"><expr pos:start="193:17" pos:end="193:33"><name pos:start="193:17" pos:end="193:19">ret</name> <operator pos:start="193:21" pos:end="193:21">=</operator> <name pos:start="193:23" pos:end="193:33"><name pos:start="193:23" pos:end="193:27">avpkt</name><operator pos:start="193:28" pos:end="193:29">-&gt;</operator><name pos:start="193:30" pos:end="193:33">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="199:9" pos:end="217:34"><if pos:start="199:9" pos:end="215:9">if <condition pos:start="199:12" pos:end="199:39">(<expr pos:start="199:13" pos:end="199:38"><name pos:start="199:13" pos:end="199:15">ret</name> <operator pos:start="199:17" pos:end="199:18">&gt;=</operator> <literal type="number" pos:start="199:20" pos:end="199:20">0</literal> <operator pos:start="199:22" pos:end="199:23">&amp;&amp;</operator> <operator pos:start="199:25" pos:end="199:25">*</operator><name pos:start="199:26" pos:end="199:38">got_frame_ptr</name></expr>)</condition> <block pos:start="199:41" pos:end="215:9">{<block_content pos:start="201:13" pos:end="213:13">

            <if_stmt pos:start="201:13" pos:end="213:13"><if pos:start="201:13" pos:end="213:13">if <condition pos:start="201:16" pos:end="201:42">(<expr pos:start="201:17" pos:end="201:41"><operator pos:start="201:17" pos:end="201:17">!</operator><name pos:start="201:18" pos:end="201:41"><name pos:start="201:18" pos:end="201:22">avctx</name><operator pos:start="201:23" pos:end="201:24">-&gt;</operator><name pos:start="201:25" pos:end="201:41">refcounted_frames</name></name></expr>)</condition> <block pos:start="201:44" pos:end="213:13">{<block_content pos:start="203:17" pos:end="211:43">

                <expr_stmt pos:start="203:17" pos:end="203:39"><expr pos:start="203:17" pos:end="203:38"><name pos:start="203:17" pos:end="203:29"><name pos:start="203:17" pos:end="203:20">avci</name><operator pos:start="203:21" pos:end="203:22">-&gt;</operator><name pos:start="203:23" pos:end="203:29">to_free</name></name> <operator pos:start="203:31" pos:end="203:31">=</operator> <operator pos:start="203:33" pos:end="203:33">*</operator><name pos:start="203:34" pos:end="203:38">frame</name></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:65"><expr pos:start="205:17" pos:end="205:64"><name pos:start="205:17" pos:end="205:43"><name pos:start="205:17" pos:end="205:20">avci</name><operator pos:start="205:21" pos:end="205:22">-&gt;</operator><name pos:start="205:23" pos:end="205:29">to_free</name><operator pos:start="205:30" pos:end="205:30">.</operator><name pos:start="205:31" pos:end="205:43">extended_data</name></name> <operator pos:start="205:45" pos:end="205:45">=</operator> <name pos:start="205:47" pos:end="205:64"><name pos:start="205:47" pos:end="205:50">avci</name><operator pos:start="205:51" pos:end="205:52">-&gt;</operator><name pos:start="205:53" pos:end="205:59">to_free</name><operator pos:start="205:60" pos:end="205:60">.</operator><name pos:start="205:61" pos:end="205:64">data</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:58"><expr pos:start="207:17" pos:end="207:57"><call pos:start="207:17" pos:end="207:57"><name pos:start="207:17" pos:end="207:22">memset</name><argument_list pos:start="207:23" pos:end="207:57">(<argument pos:start="207:24" pos:end="207:33"><expr pos:start="207:24" pos:end="207:33"><name pos:start="207:24" pos:end="207:33"><name pos:start="207:24" pos:end="207:28">frame</name><operator pos:start="207:29" pos:end="207:30">-&gt;</operator><name pos:start="207:31" pos:end="207:33">buf</name></name></expr></argument>, <argument pos:start="207:36" pos:end="207:36"><expr pos:start="207:36" pos:end="207:36"><literal type="number" pos:start="207:36" pos:end="207:36">0</literal></expr></argument>, <argument pos:start="207:39" pos:end="207:56"><expr pos:start="207:39" pos:end="207:56"><sizeof pos:start="207:39" pos:end="207:56">sizeof<argument_list pos:start="207:45" pos:end="207:56">(<argument pos:start="207:46" pos:end="207:55"><expr pos:start="207:46" pos:end="207:55"><name pos:start="207:46" pos:end="207:55"><name pos:start="207:46" pos:end="207:50">frame</name><operator pos:start="207:51" pos:end="207:52">-&gt;</operator><name pos:start="207:53" pos:end="207:55">buf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:46"><expr pos:start="209:17" pos:end="209:45"><name pos:start="209:17" pos:end="209:35"><name pos:start="209:17" pos:end="209:21">frame</name><operator pos:start="209:22" pos:end="209:23">-&gt;</operator><name pos:start="209:24" pos:end="209:35">extended_buf</name></name>    <operator pos:start="209:40" pos:end="209:40">=</operator> <name pos:start="209:42" pos:end="209:45">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:43"><expr pos:start="211:17" pos:end="211:42"><name pos:start="211:17" pos:end="211:38"><name pos:start="211:17" pos:end="211:21">frame</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:38">nb_extended_buf</name></name> <operator pos:start="211:40" pos:end="211:40">=</operator> <literal type="number" pos:start="211:42" pos:end="211:42">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="215:11" pos:end="217:34">else if <condition pos:start="215:19" pos:end="215:34">(<expr pos:start="215:20" pos:end="215:33"><name pos:start="215:20" pos:end="215:33"><name pos:start="215:20" pos:end="215:24">frame</name><operator pos:start="215:25" pos:end="215:26">-&gt;</operator><name pos:start="215:27" pos:end="215:30">data</name><index pos:start="215:31" pos:end="215:33">[<expr pos:start="215:32" pos:end="215:32"><literal type="number" pos:start="215:32" pos:end="215:32">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="217:13" pos:end="217:34"><block_content pos:start="217:13" pos:end="217:34">

            <expr_stmt pos:start="217:13" pos:end="217:34"><expr pos:start="217:13" pos:end="217:33"><call pos:start="217:13" pos:end="217:33"><name pos:start="217:13" pos:end="217:26">av_frame_unref</name><argument_list pos:start="217:27" pos:end="217:33">(<argument pos:start="217:28" pos:end="217:32"><expr pos:start="217:28" pos:end="217:32"><name pos:start="217:28" pos:end="217:32">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="223:5" pos:end="227:46">/* many decoders assign whole AVFrames, thus overwriting extended_data;

     * make sure it's set correctly; assume decoders that actually use

     * extended_data are doing it correctly */</comment>

    <if_stmt pos:start="229:5" pos:end="243:5"><if pos:start="229:5" pos:end="239:5">if <condition pos:start="229:8" pos:end="229:23">(<expr pos:start="229:9" pos:end="229:22"><operator pos:start="229:9" pos:end="229:9">*</operator><name pos:start="229:10" pos:end="229:22">got_frame_ptr</name></expr>)</condition> <block pos:start="229:25" pos:end="239:5">{<block_content pos:start="231:9" pos:end="237:47">

        <expr_stmt pos:start="231:9" pos:end="231:58"><expr pos:start="231:9" pos:end="231:57"><name pos:start="231:9" pos:end="231:14">planar</name>   <operator pos:start="231:18" pos:end="231:18">=</operator> <call pos:start="231:20" pos:end="231:57"><name pos:start="231:20" pos:end="231:42">av_sample_fmt_is_planar</name><argument_list pos:start="231:43" pos:end="231:57">(<argument pos:start="231:44" pos:end="231:56"><expr pos:start="231:44" pos:end="231:56"><name pos:start="231:44" pos:end="231:56"><name pos:start="231:44" pos:end="231:48">frame</name><operator pos:start="231:49" pos:end="231:50">-&gt;</operator><name pos:start="231:51" pos:end="231:56">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:48"><expr pos:start="233:9" pos:end="233:47"><name pos:start="233:9" pos:end="233:16">channels</name> <operator pos:start="233:18" pos:end="233:18">=</operator> <call pos:start="233:20" pos:end="233:47"><name pos:start="233:20" pos:end="233:40">av_frame_get_channels</name><argument_list pos:start="233:41" pos:end="233:47">(<argument pos:start="233:42" pos:end="233:46"><expr pos:start="233:42" pos:end="233:46"><name pos:start="233:42" pos:end="233:46">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="235:9" pos:end="237:47"><if pos:start="235:9" pos:end="237:47">if <condition pos:start="235:12" pos:end="235:57">(<expr pos:start="235:13" pos:end="235:56"><operator pos:start="235:13" pos:end="235:13">!</operator><operator pos:start="235:14" pos:end="235:14">(</operator><name pos:start="235:15" pos:end="235:20">planar</name> <operator pos:start="235:22" pos:end="235:23">&amp;&amp;</operator> <name pos:start="235:25" pos:end="235:32">channels</name> <operator pos:start="235:34" pos:end="235:34">&gt;</operator> <name pos:start="235:36" pos:end="235:55">AV_NUM_DATA_POINTERS</name><operator pos:start="235:56" pos:end="235:56">)</operator></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:47"><block_content pos:start="237:13" pos:end="237:47">

            <expr_stmt pos:start="237:13" pos:end="237:47"><expr pos:start="237:13" pos:end="237:46"><name pos:start="237:13" pos:end="237:32"><name pos:start="237:13" pos:end="237:17">frame</name><operator pos:start="237:18" pos:end="237:19">-&gt;</operator><name pos:start="237:20" pos:end="237:32">extended_data</name></name> <operator pos:start="237:34" pos:end="237:34">=</operator> <name pos:start="237:36" pos:end="237:46"><name pos:start="237:36" pos:end="237:40">frame</name><operator pos:start="237:41" pos:end="237:42">-&gt;</operator><name pos:start="237:43" pos:end="237:46">data</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="239:7" pos:end="243:5">else <block pos:start="239:12" pos:end="243:5">{<block_content pos:start="241:9" pos:end="241:36">

        <expr_stmt pos:start="241:9" pos:end="241:36"><expr pos:start="241:9" pos:end="241:35"><name pos:start="241:9" pos:end="241:28"><name pos:start="241:9" pos:end="241:13">frame</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:28">extended_data</name></name> <operator pos:start="241:30" pos:end="241:30">=</operator> <name pos:start="241:32" pos:end="241:35">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="247:5" pos:end="247:15">return <expr pos:start="247:12" pos:end="247:14"><name pos:start="247:12" pos:end="247:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
