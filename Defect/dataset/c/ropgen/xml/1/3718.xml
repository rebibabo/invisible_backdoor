<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3718.c" pos:tabs="8"><function pos:start="1:1" pos:end="243:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">ff_h264_queue_decode_slice</name><parameter_list pos:start="1:31" pos:end="1:67">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:42">H264Context</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">h</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:66"><decl pos:start="1:48" pos:end="1:66"><type pos:start="1:48" pos:end="1:66"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:61">H2645NAL</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">nal</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="243:1">{<block_content pos:start="5:5" pos:end="241:13">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">H264SliceContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">sl</name> <init pos:start="5:26" pos:end="5:64">= <expr pos:start="5:28" pos:end="5:64"><name pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:28">h</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">slice_ctx</name></name> <operator pos:start="5:41" pos:end="5:41">+</operator> <name pos:start="5:43" pos:end="5:64"><name pos:start="5:43" pos:end="5:43">h</name><operator pos:start="5:44" pos:end="5:45">-&gt;</operator><name pos:start="5:46" pos:end="5:64">nb_slice_ctx_queued</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:62"><decl pos:start="7:5" pos:end="7:61"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">first_slice</name> <init pos:start="7:21" pos:end="7:61">= <expr pos:start="7:23" pos:end="7:61"><name pos:start="7:23" pos:end="7:24">sl</name> <operator pos:start="7:26" pos:end="7:27">==</operator> <name pos:start="7:29" pos:end="7:40"><name pos:start="7:29" pos:end="7:29">h</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">slice_ctx</name></name> <operator pos:start="7:42" pos:end="7:43">&amp;&amp;</operator> <operator pos:start="7:45" pos:end="7:45">!</operator><name pos:start="7:46" pos:end="7:61"><name pos:start="7:46" pos:end="7:46">h</name><operator pos:start="7:47" pos:end="7:48">-&gt;</operator><name pos:start="7:49" pos:end="7:61">current_slice</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:6">sl</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:10">gb</name></name> <operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:20"><name pos:start="13:14" pos:end="13:16">nal</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:20">gb</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:45"><name pos:start="17:11" pos:end="17:33">h264_slice_header_parse</name><argument_list pos:start="17:34" pos:end="17:45">(<argument pos:start="17:35" pos:end="17:35"><expr pos:start="17:35" pos:end="17:35"><name pos:start="17:35" pos:end="17:35">h</name></expr></argument>, <argument pos:start="17:38" pos:end="17:39"><expr pos:start="17:38" pos:end="17:39"><name pos:start="17:38" pos:end="17:39">sl</name></expr></argument>, <argument pos:start="17:42" pos:end="17:44"><expr pos:start="17:42" pos:end="17:44"><name pos:start="17:42" pos:end="17:44">nal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:19"><if pos:start="19:5" pos:end="21:19">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:19"><block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="25:5" pos:end="25:33">// discard redundant pictures</comment>

    <if_stmt pos:start="27:5" pos:end="29:17"><if pos:start="27:5" pos:end="29:17">if <condition pos:start="27:8" pos:end="27:36">(<expr pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:10">sl</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:31">redundant_pic_count</name></name> <operator pos:start="27:33" pos:end="27:33">&gt;</operator> <literal type="number" pos:start="27:35" pos:end="27:35">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:17"><block_content pos:start="29:9" pos:end="29:17">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:52">(<expr pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:10">sl</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:25">first_mb_addr</name></name> <operator pos:start="33:27" pos:end="33:28">==</operator> <literal type="number" pos:start="33:30" pos:end="33:30">0</literal> <operator pos:start="33:32" pos:end="33:33">||</operator> <operator pos:start="33:35" pos:end="33:35">!</operator><name pos:start="33:36" pos:end="33:51"><name pos:start="33:36" pos:end="33:36">h</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:51">current_slice</name></name></expr>)</condition> <block pos:start="33:54" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:9">

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:30">(<expr pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:13">h</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:29">setup_finished</name></name></expr>)</condition> <block pos:start="35:32" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:39">

            <expr_stmt pos:start="37:13" pos:end="37:64"><expr pos:start="37:13" pos:end="37:63"><call pos:start="37:13" pos:end="37:63"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="37:63">(<argument pos:start="37:20" pos:end="37:27"><expr pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:20">h</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">avctx</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:41"><expr pos:start="37:30" pos:end="37:41"><name pos:start="37:30" pos:end="37:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:44" pos:end="37:62"><expr pos:start="37:44" pos:end="37:62"><literal type="string" pos:start="37:44" pos:end="37:62">"Too many fields\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:39">return <expr pos:start="39:20" pos:end="39:38"><name pos:start="39:20" pos:end="39:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="127:5"><if pos:start="47:5" pos:end="127:5">if <condition pos:start="47:8" pos:end="47:31">(<expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:10">sl</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:25">first_mb_addr</name></name> <operator pos:start="47:27" pos:end="47:28">==</operator> <literal type="number" pos:start="47:30" pos:end="47:30">0</literal></expr>)</condition> <block pos:start="47:33" pos:end="127:5">{<block_content pos:start="49:9" pos:end="125:9"> <comment type="line" pos:start="47:35" pos:end="47:74">// FIXME better field boundary detection</comment>

        <if_stmt pos:start="49:9" pos:end="109:9"><if pos:start="49:9" pos:end="109:9">if <condition pos:start="49:12" pos:end="49:29">(<expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:13">h</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:28">current_slice</name></name></expr>)</condition> <block pos:start="49:31" pos:end="109:9">{<block_content pos:start="55:13" pos:end="107:43">

            <comment type="line" pos:start="51:13" pos:end="51:44">// this slice starts a new field</comment>

            <comment type="line" pos:start="53:13" pos:end="53:53">// first decode any pending queued slices</comment>

            <if_stmt pos:start="55:13" pos:end="77:13"><if pos:start="55:13" pos:end="77:13">if <condition pos:start="55:16" pos:end="55:39">(<expr pos:start="55:17" pos:end="55:38"><name pos:start="55:17" pos:end="55:38"><name pos:start="55:17" pos:end="55:17">h</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:38">nb_slice_ctx_queued</name></name></expr>)</condition> <block pos:start="55:41" pos:end="77:13">{<block_content pos:start="57:17" pos:end="75:34">

                <decl_stmt pos:start="57:17" pos:end="57:41"><decl pos:start="57:17" pos:end="57:40"><type pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:32">H264SliceContext</name></type> <name pos:start="57:34" pos:end="57:40">tmp_ctx</name></decl>;</decl_stmt>



                <expr_stmt pos:start="61:17" pos:end="61:55"><expr pos:start="61:17" pos:end="61:54"><name pos:start="61:17" pos:end="61:19">ret</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <call pos:start="61:23" pos:end="61:54"><name pos:start="61:23" pos:end="61:51">ff_h264_execute_decode_slices</name><argument_list pos:start="61:52" pos:end="61:54">(<argument pos:start="61:53" pos:end="61:53"><expr pos:start="61:53" pos:end="61:53"><name pos:start="61:53" pos:end="61:53">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="63:17" pos:end="65:31"><if pos:start="63:17" pos:end="65:31">if <condition pos:start="63:20" pos:end="63:75">(<expr pos:start="63:21" pos:end="63:74"><name pos:start="63:21" pos:end="63:23">ret</name> <operator pos:start="63:25" pos:end="63:25">&lt;</operator> <literal type="number" pos:start="63:27" pos:end="63:27">0</literal> <operator pos:start="63:29" pos:end="63:30">&amp;&amp;</operator> <operator pos:start="63:32" pos:end="63:32">(</operator><name pos:start="63:33" pos:end="63:57"><name pos:start="63:33" pos:end="63:33">h</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:40">avctx</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:57">err_recognition</name></name> <operator pos:start="63:59" pos:end="63:59">&amp;</operator> <name pos:start="63:61" pos:end="63:73">AV_EF_EXPLODE</name><operator pos:start="63:74" pos:end="63:74">)</operator></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:31"><block_content pos:start="65:21" pos:end="65:31">

                    <return pos:start="65:21" pos:end="65:31">return <expr pos:start="65:28" pos:end="65:30"><name pos:start="65:28" pos:end="65:30">ret</name></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="69:17" pos:end="69:64"><expr pos:start="69:17" pos:end="69:63"><call pos:start="69:17" pos:end="69:63"><name pos:start="69:17" pos:end="69:22">memcpy</name><argument_list pos:start="69:23" pos:end="69:63">(<argument pos:start="69:24" pos:end="69:31"><expr pos:start="69:24" pos:end="69:31"><operator pos:start="69:24" pos:end="69:24">&amp;</operator><name pos:start="69:25" pos:end="69:31">tmp_ctx</name></expr></argument>, <argument pos:start="69:34" pos:end="69:45"><expr pos:start="69:34" pos:end="69:45"><name pos:start="69:34" pos:end="69:45"><name pos:start="69:34" pos:end="69:34">h</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:45">slice_ctx</name></name></expr></argument>, <argument pos:start="69:48" pos:end="69:62"><expr pos:start="69:48" pos:end="69:62"><sizeof pos:start="69:48" pos:end="69:62">sizeof<argument_list pos:start="69:54" pos:end="69:62">(<argument pos:start="69:55" pos:end="69:61"><expr pos:start="69:55" pos:end="69:61"><name pos:start="69:55" pos:end="69:61">tmp_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:58"><expr pos:start="71:17" pos:end="71:57"><call pos:start="71:17" pos:end="71:57"><name pos:start="71:17" pos:end="71:22">memcpy</name><argument_list pos:start="71:23" pos:end="71:57">(<argument pos:start="71:24" pos:end="71:35"><expr pos:start="71:24" pos:end="71:35"><name pos:start="71:24" pos:end="71:35"><name pos:start="71:24" pos:end="71:24">h</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:35">slice_ctx</name></name></expr></argument>, <argument pos:start="71:38" pos:end="71:39"><expr pos:start="71:38" pos:end="71:39"><name pos:start="71:38" pos:end="71:39">sl</name></expr></argument>, <argument pos:start="71:42" pos:end="71:56"><expr pos:start="71:42" pos:end="71:56"><sizeof pos:start="71:42" pos:end="71:56">sizeof<argument_list pos:start="71:48" pos:end="71:56">(<argument pos:start="71:49" pos:end="71:55"><expr pos:start="71:49" pos:end="71:55"><name pos:start="71:49" pos:end="71:55">tmp_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:54"><expr pos:start="73:17" pos:end="73:53"><call pos:start="73:17" pos:end="73:53"><name pos:start="73:17" pos:end="73:22">memcpy</name><argument_list pos:start="73:23" pos:end="73:53">(<argument pos:start="73:24" pos:end="73:25"><expr pos:start="73:24" pos:end="73:25"><name pos:start="73:24" pos:end="73:25">sl</name></expr></argument>, <argument pos:start="73:28" pos:end="73:35"><expr pos:start="73:28" pos:end="73:35"><operator pos:start="73:28" pos:end="73:28">&amp;</operator><name pos:start="73:29" pos:end="73:35">tmp_ctx</name></expr></argument>, <argument pos:start="73:38" pos:end="73:52"><expr pos:start="73:38" pos:end="73:52"><sizeof pos:start="73:38" pos:end="73:52">sizeof<argument_list pos:start="73:44" pos:end="73:52">(<argument pos:start="73:45" pos:end="73:51"><expr pos:start="73:45" pos:end="73:51"><name pos:start="73:45" pos:end="73:51">tmp_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:34"><expr pos:start="75:17" pos:end="75:33"><name pos:start="75:17" pos:end="75:18">sl</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <name pos:start="75:22" pos:end="75:33"><name pos:start="75:22" pos:end="75:22">h</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:33">slice_ctx</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="81:13" pos:end="107:43"><if pos:start="81:13" pos:end="89:13">if <condition pos:start="81:16" pos:end="81:69">(<expr pos:start="81:17" pos:end="81:68"><name pos:start="81:17" pos:end="81:30"><name pos:start="81:17" pos:end="81:17">h</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:30">cur_pic_ptr</name></name> <operator pos:start="81:32" pos:end="81:33">&amp;&amp;</operator> <call pos:start="81:35" pos:end="81:50"><name pos:start="81:35" pos:end="81:47">FIELD_PICTURE</name><argument_list pos:start="81:48" pos:end="81:50">(<argument pos:start="81:49" pos:end="81:49"><expr pos:start="81:49" pos:end="81:49"><name pos:start="81:49" pos:end="81:49">h</name></expr></argument>)</argument_list></call> <operator pos:start="81:52" pos:end="81:53">&amp;&amp;</operator> <name pos:start="81:55" pos:end="81:68"><name pos:start="81:55" pos:end="81:55">h</name><operator pos:start="81:56" pos:end="81:57">-&gt;</operator><name pos:start="81:58" pos:end="81:68">first_field</name></name></expr>)</condition> <block pos:start="81:71" pos:end="89:13">{<block_content pos:start="83:17" pos:end="87:31">

                <expr_stmt pos:start="83:17" pos:end="83:60"><expr pos:start="83:17" pos:end="83:59"><name pos:start="83:17" pos:end="83:19">ret</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <call pos:start="83:23" pos:end="83:59"><name pos:start="83:23" pos:end="83:39">ff_h264_field_end</name><argument_list pos:start="83:40" pos:end="83:59">(<argument pos:start="83:41" pos:end="83:41"><expr pos:start="83:41" pos:end="83:41"><name pos:start="83:41" pos:end="83:41">h</name></expr></argument>, <argument pos:start="83:44" pos:end="83:55"><expr pos:start="83:44" pos:end="83:55"><name pos:start="83:44" pos:end="83:55"><name pos:start="83:44" pos:end="83:44">h</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:55">slice_ctx</name></name></expr></argument>, <argument pos:start="83:58" pos:end="83:58"><expr pos:start="83:58" pos:end="83:58"><literal type="number" pos:start="83:58" pos:end="83:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="85:17" pos:end="87:31"><if pos:start="85:17" pos:end="87:31">if <condition pos:start="85:20" pos:end="85:28">(<expr pos:start="85:21" pos:end="85:27"><name pos:start="85:21" pos:end="85:23">ret</name> <operator pos:start="85:25" pos:end="85:25">&lt;</operator> <literal type="number" pos:start="85:27" pos:end="85:27">0</literal></expr>)</condition><block type="pseudo" pos:start="87:21" pos:end="87:31"><block_content pos:start="87:21" pos:end="87:31">

                    <return pos:start="87:21" pos:end="87:31">return <expr pos:start="87:28" pos:end="87:30"><name pos:start="87:28" pos:end="87:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="89:15" pos:end="105:13">else if <condition pos:start="89:23" pos:end="89:121">(<expr pos:start="89:24" pos:end="89:120"><name pos:start="89:24" pos:end="89:37"><name pos:start="89:24" pos:end="89:24">h</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:37">cur_pic_ptr</name></name> <operator pos:start="89:39" pos:end="89:40">&amp;&amp;</operator> <operator pos:start="89:42" pos:end="89:42">!</operator><call pos:start="89:43" pos:end="89:58"><name pos:start="89:43" pos:end="89:55">FIELD_PICTURE</name><argument_list pos:start="89:56" pos:end="89:58">(<argument pos:start="89:57" pos:end="89:57"><expr pos:start="89:57" pos:end="89:57"><name pos:start="89:57" pos:end="89:57">h</name></expr></argument>)</argument_list></call> <operator pos:start="89:60" pos:end="89:61">&amp;&amp;</operator> <operator pos:start="89:63" pos:end="89:63">!</operator><name pos:start="89:64" pos:end="89:77"><name pos:start="89:64" pos:end="89:64">h</name><operator pos:start="89:65" pos:end="89:66">-&gt;</operator><name pos:start="89:67" pos:end="89:77">first_field</name></name> <operator pos:start="89:79" pos:end="89:80">&amp;&amp;</operator> <name pos:start="89:82" pos:end="89:97"><name pos:start="89:82" pos:end="89:82">h</name><operator pos:start="89:83" pos:end="89:84">-&gt;</operator><name pos:start="89:85" pos:end="89:97">nal_unit_type</name></name>  <operator pos:start="89:100" pos:end="89:101">==</operator> <name pos:start="89:103" pos:end="89:120">H264_NAL_IDR_SLICE</name></expr>)</condition> <block pos:start="89:123" pos:end="105:13">{<block_content pos:start="91:17" pos:end="103:31">

                <expr_stmt pos:start="91:17" pos:end="91:72"><expr pos:start="91:17" pos:end="91:71"><call pos:start="91:17" pos:end="91:71"><name pos:start="91:17" pos:end="91:22">av_log</name><argument_list pos:start="91:23" pos:end="91:71">(<argument pos:start="91:24" pos:end="91:24"><expr pos:start="91:24" pos:end="91:24"><name pos:start="91:24" pos:end="91:24">h</name></expr></argument>, <argument pos:start="91:27" pos:end="91:40"><expr pos:start="91:27" pos:end="91:40"><name pos:start="91:27" pos:end="91:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="91:43" pos:end="91:70"><expr pos:start="91:43" pos:end="91:70"><literal type="string" pos:start="91:43" pos:end="91:70">"Broken frame packetizing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:60"><expr pos:start="93:17" pos:end="93:59"><name pos:start="93:17" pos:end="93:19">ret</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <call pos:start="93:23" pos:end="93:59"><name pos:start="93:23" pos:end="93:39">ff_h264_field_end</name><argument_list pos:start="93:40" pos:end="93:59">(<argument pos:start="93:41" pos:end="93:41"><expr pos:start="93:41" pos:end="93:41"><name pos:start="93:41" pos:end="93:41">h</name></expr></argument>, <argument pos:start="93:44" pos:end="93:55"><expr pos:start="93:44" pos:end="93:55"><name pos:start="93:44" pos:end="93:55"><name pos:start="93:44" pos:end="93:44">h</name><operator pos:start="93:45" pos:end="93:46">-&gt;</operator><name pos:start="93:47" pos:end="93:55">slice_ctx</name></name></expr></argument>, <argument pos:start="93:58" pos:end="93:58"><expr pos:start="93:58" pos:end="93:58"><literal type="number" pos:start="93:58" pos:end="93:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:75"><expr pos:start="95:17" pos:end="95:74"><call pos:start="95:17" pos:end="95:74"><name pos:start="95:17" pos:end="95:41">ff_thread_report_progress</name><argument_list pos:start="95:42" pos:end="95:74">(<argument pos:start="95:43" pos:end="95:61"><expr pos:start="95:43" pos:end="95:61"><operator pos:start="95:43" pos:end="95:43">&amp;</operator><name pos:start="95:44" pos:end="95:61"><name pos:start="95:44" pos:end="95:44">h</name><operator pos:start="95:45" pos:end="95:46">-&gt;</operator><name pos:start="95:47" pos:end="95:57">cur_pic_ptr</name><operator pos:start="95:58" pos:end="95:59">-&gt;</operator><name pos:start="95:60" pos:end="95:61">tf</name></name></expr></argument>, <argument pos:start="95:64" pos:end="95:70"><expr pos:start="95:64" pos:end="95:70"><name pos:start="95:64" pos:end="95:70">INT_MAX</name></expr></argument>, <argument pos:start="95:73" pos:end="95:73"><expr pos:start="95:73" pos:end="95:73"><literal type="number" pos:start="95:73" pos:end="95:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:75"><expr pos:start="97:17" pos:end="97:74"><call pos:start="97:17" pos:end="97:74"><name pos:start="97:17" pos:end="97:41">ff_thread_report_progress</name><argument_list pos:start="97:42" pos:end="97:74">(<argument pos:start="97:43" pos:end="97:61"><expr pos:start="97:43" pos:end="97:61"><operator pos:start="97:43" pos:end="97:43">&amp;</operator><name pos:start="97:44" pos:end="97:61"><name pos:start="97:44" pos:end="97:44">h</name><operator pos:start="97:45" pos:end="97:46">-&gt;</operator><name pos:start="97:47" pos:end="97:57">cur_pic_ptr</name><operator pos:start="97:58" pos:end="97:59">-&gt;</operator><name pos:start="97:60" pos:end="97:61">tf</name></name></expr></argument>, <argument pos:start="97:64" pos:end="97:70"><expr pos:start="97:64" pos:end="97:70"><name pos:start="97:64" pos:end="97:70">INT_MAX</name></expr></argument>, <argument pos:start="97:73" pos:end="97:73"><expr pos:start="97:73" pos:end="97:73"><literal type="number" pos:start="97:73" pos:end="97:73">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:38"><expr pos:start="99:17" pos:end="99:37"><name pos:start="99:17" pos:end="99:30"><name pos:start="99:17" pos:end="99:17">h</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:30">cur_pic_ptr</name></name> <operator pos:start="99:32" pos:end="99:32">=</operator> <name pos:start="99:34" pos:end="99:37">NULL</name></expr>;</expr_stmt>

                <if_stmt pos:start="101:17" pos:end="103:31"><if pos:start="101:17" pos:end="103:31">if <condition pos:start="101:20" pos:end="101:28">(<expr pos:start="101:21" pos:end="101:27"><name pos:start="101:21" pos:end="101:23">ret</name> <operator pos:start="101:25" pos:end="101:25">&lt;</operator> <literal type="number" pos:start="101:27" pos:end="101:27">0</literal></expr>)</condition><block type="pseudo" pos:start="103:21" pos:end="103:31"><block_content pos:start="103:21" pos:end="103:31">

                    <return pos:start="103:21" pos:end="103:31">return <expr pos:start="103:28" pos:end="103:30"><name pos:start="103:28" pos:end="103:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="105:15" pos:end="107:43">else<block type="pseudo" pos:start="107:17" pos:end="107:43"><block_content pos:start="107:17" pos:end="107:43">

                <return pos:start="107:17" pos:end="107:43">return <expr pos:start="107:24" pos:end="107:42"><name pos:start="107:24" pos:end="107:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="113:9" pos:end="125:9"><if pos:start="113:9" pos:end="125:9">if <condition pos:start="113:12" pos:end="113:28">(<expr pos:start="113:13" pos:end="113:27"><operator pos:start="113:13" pos:end="113:13">!</operator><name pos:start="113:14" pos:end="113:27"><name pos:start="113:14" pos:end="113:14">h</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:27">first_field</name></name></expr>)</condition> <block pos:start="113:30" pos:end="125:9">{<block_content pos:start="115:13" pos:end="123:34">

            <if_stmt pos:start="115:13" pos:end="121:13"><if pos:start="115:13" pos:end="121:13">if <condition pos:start="115:16" pos:end="115:48">(<expr pos:start="115:17" pos:end="115:47"><name pos:start="115:17" pos:end="115:30"><name pos:start="115:17" pos:end="115:17">h</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:30">cur_pic_ptr</name></name> <operator pos:start="115:32" pos:end="115:33">&amp;&amp;</operator> <operator pos:start="115:35" pos:end="115:35">!</operator><name pos:start="115:36" pos:end="115:47"><name pos:start="115:36" pos:end="115:36">h</name><operator pos:start="115:37" pos:end="115:38">-&gt;</operator><name pos:start="115:39" pos:end="115:47">droppable</name></name></expr>)</condition> <block pos:start="115:50" pos:end="121:13">{<block_content pos:start="117:17" pos:end="119:85">

                <expr_stmt pos:start="117:17" pos:end="119:85"><expr pos:start="117:17" pos:end="119:84"><call pos:start="117:17" pos:end="119:84"><name pos:start="117:17" pos:end="117:41">ff_thread_report_progress</name><argument_list pos:start="117:42" pos:end="119:84">(<argument pos:start="117:43" pos:end="117:61"><expr pos:start="117:43" pos:end="117:61"><operator pos:start="117:43" pos:end="117:43">&amp;</operator><name pos:start="117:44" pos:end="117:61"><name pos:start="117:44" pos:end="117:44">h</name><operator pos:start="117:45" pos:end="117:46">-&gt;</operator><name pos:start="117:47" pos:end="117:57">cur_pic_ptr</name><operator pos:start="117:58" pos:end="117:59">-&gt;</operator><name pos:start="117:60" pos:end="117:61">tf</name></name></expr></argument>, <argument pos:start="117:64" pos:end="117:70"><expr pos:start="117:64" pos:end="117:70"><name pos:start="117:64" pos:end="117:70">INT_MAX</name></expr></argument>,

                                          <argument pos:start="119:43" pos:end="119:83"><expr pos:start="119:43" pos:end="119:83"><name pos:start="119:43" pos:end="119:62"><name pos:start="119:43" pos:end="119:43">h</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:62">picture_structure</name></name> <operator pos:start="119:64" pos:end="119:65">==</operator> <name pos:start="119:67" pos:end="119:83">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:34"><expr pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:26"><name pos:start="123:13" pos:end="123:13">h</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:26">cur_pic_ptr</name></name> <operator pos:start="123:28" pos:end="123:28">=</operator> <name pos:start="123:30" pos:end="123:33">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="131:5" pos:end="133:39"><if pos:start="131:5" pos:end="133:39">if <condition pos:start="131:8" pos:end="131:26">(<expr pos:start="131:9" pos:end="131:25"><operator pos:start="131:9" pos:end="131:9">!</operator><name pos:start="131:10" pos:end="131:25"><name pos:start="131:10" pos:end="131:10">h</name><operator pos:start="131:11" pos:end="131:12">-&gt;</operator><name pos:start="131:13" pos:end="131:25">current_slice</name></name></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:39"><block_content pos:start="133:9" pos:end="133:39">

        <expr_stmt pos:start="133:9" pos:end="133:39"><expr pos:start="133:9" pos:end="133:38"><call pos:start="133:9" pos:end="133:38"><name pos:start="133:9" pos:end="133:18">av_assert0</name><argument_list pos:start="133:19" pos:end="133:38">(<argument pos:start="133:20" pos:end="133:37"><expr pos:start="133:20" pos:end="133:37"><name pos:start="133:20" pos:end="133:21">sl</name> <operator pos:start="133:23" pos:end="133:24">==</operator> <name pos:start="133:26" pos:end="133:37"><name pos:start="133:26" pos:end="133:26">h</name><operator pos:start="133:27" pos:end="133:28">-&gt;</operator><name pos:start="133:29" pos:end="133:37">slice_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="137:5" pos:end="155:5"><if pos:start="137:5" pos:end="155:5">if <condition pos:start="137:8" pos:end="137:49">(<expr pos:start="137:9" pos:end="137:48"><name pos:start="137:9" pos:end="137:24"><name pos:start="137:9" pos:end="137:9">h</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:24">current_slice</name></name> <operator pos:start="137:26" pos:end="137:27">==</operator> <literal type="number" pos:start="137:29" pos:end="137:29">0</literal> <operator pos:start="137:31" pos:end="137:32">&amp;&amp;</operator> <operator pos:start="137:34" pos:end="137:34">!</operator><name pos:start="137:35" pos:end="137:48"><name pos:start="137:35" pos:end="137:35">h</name><operator pos:start="137:36" pos:end="137:37">-&gt;</operator><name pos:start="137:38" pos:end="137:48">first_field</name></name></expr>)</condition> <block pos:start="137:51" pos:end="155:5">{<block_content pos:start="139:9" pos:end="153:9">

        <if_stmt pos:start="139:9" pos:end="153:9"><if pos:start="139:9" pos:end="153:9">if <condition pos:start="139:12" pos:end="149:50">(

            <expr pos:start="141:13" pos:end="149:49"><operator pos:start="141:13" pos:end="141:13">(</operator><name pos:start="141:14" pos:end="141:33"><name pos:start="141:14" pos:end="141:14">h</name><operator pos:start="141:15" pos:end="141:16">-&gt;</operator><name pos:start="141:17" pos:end="141:21">avctx</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:33">skip_frame</name></name> <operator pos:start="141:35" pos:end="141:36">&gt;=</operator> <name pos:start="141:38" pos:end="141:53">AVDISCARD_NONREF</name> <operator pos:start="141:55" pos:end="141:56">&amp;&amp;</operator> <operator pos:start="141:58" pos:end="141:58">!</operator><name pos:start="141:59" pos:end="141:72"><name pos:start="141:59" pos:end="141:59">h</name><operator pos:start="141:60" pos:end="141:61">-&gt;</operator><name pos:start="141:62" pos:end="141:72">nal_ref_idc</name></name><operator pos:start="141:73" pos:end="141:73">)</operator> <operator pos:start="141:75" pos:end="141:76">||</operator>

            <operator pos:start="143:13" pos:end="143:13">(</operator><name pos:start="143:14" pos:end="143:33"><name pos:start="143:14" pos:end="143:14">h</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:21">avctx</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:33">skip_frame</name></name> <operator pos:start="143:35" pos:end="143:36">&gt;=</operator> <name pos:start="143:38" pos:end="143:52">AVDISCARD_BIDIR</name>  <operator pos:start="143:55" pos:end="143:56">&amp;&amp;</operator> <name pos:start="143:58" pos:end="143:75"><name pos:start="143:58" pos:end="143:59">sl</name><operator pos:start="143:60" pos:end="143:61">-&gt;</operator><name pos:start="143:62" pos:end="143:75">slice_type_nos</name></name> <operator pos:start="143:77" pos:end="143:78">==</operator> <name pos:start="143:80" pos:end="143:96">AV_PICTURE_TYPE_B</name><operator pos:start="143:97" pos:end="143:97">)</operator> <operator pos:start="143:99" pos:end="143:100">||</operator>

            <operator pos:start="145:13" pos:end="145:13">(</operator><name pos:start="145:14" pos:end="145:33"><name pos:start="145:14" pos:end="145:14">h</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:21">avctx</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:33">skip_frame</name></name> <operator pos:start="145:35" pos:end="145:36">&gt;=</operator> <name pos:start="145:38" pos:end="145:55">AVDISCARD_NONINTRA</name> <operator pos:start="145:57" pos:end="145:58">&amp;&amp;</operator> <name pos:start="145:60" pos:end="145:77"><name pos:start="145:60" pos:end="145:61">sl</name><operator pos:start="145:62" pos:end="145:63">-&gt;</operator><name pos:start="145:64" pos:end="145:77">slice_type_nos</name></name> <operator pos:start="145:79" pos:end="145:80">!=</operator> <name pos:start="145:82" pos:end="145:98">AV_PICTURE_TYPE_I</name><operator pos:start="145:99" pos:end="145:99">)</operator> <operator pos:start="145:101" pos:end="145:102">||</operator>

            <operator pos:start="147:13" pos:end="147:13">(</operator><name pos:start="147:14" pos:end="147:33"><name pos:start="147:14" pos:end="147:14">h</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:21">avctx</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:33">skip_frame</name></name> <operator pos:start="147:35" pos:end="147:36">&gt;=</operator> <name pos:start="147:38" pos:end="147:53">AVDISCARD_NONKEY</name> <operator pos:start="147:55" pos:end="147:56">&amp;&amp;</operator> <name pos:start="147:58" pos:end="147:73"><name pos:start="147:58" pos:end="147:58">h</name><operator pos:start="147:59" pos:end="147:60">-&gt;</operator><name pos:start="147:61" pos:end="147:73">nal_unit_type</name></name> <operator pos:start="147:75" pos:end="147:76">!=</operator> <name pos:start="147:78" pos:end="147:95">H264_NAL_IDR_SLICE</name> <operator pos:start="147:97" pos:end="147:98">&amp;&amp;</operator> <name pos:start="147:100" pos:end="147:139"><name pos:start="147:100" pos:end="147:100">h</name><operator pos:start="147:101" pos:end="147:102">-&gt;</operator><name pos:start="147:103" pos:end="147:105">sei</name><operator pos:start="147:106" pos:end="147:106">.</operator><name pos:start="147:107" pos:end="147:120">recovery_point</name><operator pos:start="147:121" pos:end="147:121">.</operator><name pos:start="147:122" pos:end="147:139">recovery_frame_cnt</name></name> <operator pos:start="147:141" pos:end="147:141">&lt;</operator> <literal type="number" pos:start="147:143" pos:end="147:143">0</literal><operator pos:start="147:144" pos:end="147:144">)</operator> <operator pos:start="147:146" pos:end="147:147">||</operator>

            <name pos:start="149:13" pos:end="149:32"><name pos:start="149:13" pos:end="149:13">h</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:20">avctx</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:32">skip_frame</name></name> <operator pos:start="149:34" pos:end="149:35">&gt;=</operator> <name pos:start="149:37" pos:end="149:49">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="149:52" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:21">

            <return pos:start="151:13" pos:end="151:21">return <expr pos:start="151:20" pos:end="151:20"><literal type="number" pos:start="151:20" pos:end="151:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="159:5" pos:end="187:5"><if pos:start="159:5" pos:end="187:5">if <condition pos:start="159:8" pos:end="159:21">(<expr pos:start="159:9" pos:end="159:20"><operator pos:start="159:9" pos:end="159:9">!</operator><name pos:start="159:10" pos:end="159:20">first_slice</name></expr>)</condition> <block pos:start="159:23" pos:end="187:5">{<block_content pos:start="161:9" pos:end="185:9">

        <decl_stmt pos:start="161:9" pos:end="161:70"><decl pos:start="161:9" pos:end="161:69"><type pos:start="161:9" pos:end="161:19"><specifier pos:start="161:9" pos:end="161:13">const</specifier> <name pos:start="161:15" pos:end="161:17">PPS</name> <modifier pos:start="161:19" pos:end="161:19">*</modifier></type><name pos:start="161:20" pos:end="161:22">pps</name> <init pos:start="161:24" pos:end="161:69">= <expr pos:start="161:26" pos:end="161:69"><operator pos:start="161:26" pos:end="161:26">(</operator><specifier pos:start="161:27" pos:end="161:31">const</specifier> <name pos:start="161:33" pos:end="161:35">PPS</name><operator pos:start="161:36" pos:end="161:36">*</operator><operator pos:start="161:37" pos:end="161:37">)</operator><name pos:start="161:38" pos:end="161:63"><name pos:start="161:38" pos:end="161:38">h</name><operator pos:start="161:39" pos:end="161:40">-&gt;</operator><name pos:start="161:41" pos:end="161:42">ps</name><operator pos:start="161:43" pos:end="161:43">.</operator><name pos:start="161:44" pos:end="161:51">pps_list</name><index pos:start="161:52" pos:end="161:63">[<expr pos:start="161:53" pos:end="161:62"><name pos:start="161:53" pos:end="161:62"><name pos:start="161:53" pos:end="161:54">sl</name><operator pos:start="161:55" pos:end="161:56">-&gt;</operator><name pos:start="161:57" pos:end="161:62">pps_id</name></name></expr>]</index></name><operator pos:start="161:64" pos:end="161:65">-&gt;</operator><name pos:start="161:66" pos:end="161:69">data</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="165:9" pos:end="175:9"><if pos:start="165:9" pos:end="175:9">if <condition pos:start="165:12" pos:end="169:54">(<expr pos:start="165:13" pos:end="167:68"><name pos:start="165:13" pos:end="165:29"><name pos:start="165:13" pos:end="165:13">h</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:17">ps</name><operator pos:start="165:18" pos:end="165:18">.</operator><name pos:start="165:19" pos:end="165:21">pps</name><operator pos:start="165:22" pos:end="165:23">-&gt;</operator><name pos:start="165:24" pos:end="165:29">sps_id</name></name> <operator pos:start="165:31" pos:end="165:32">!=</operator> <name pos:start="165:34" pos:end="165:44"><name pos:start="165:34" pos:end="165:36">pps</name><operator pos:start="165:37" pos:end="165:38">-&gt;</operator><name pos:start="165:39" pos:end="165:44">sps_id</name></name> <operator pos:start="165:46" pos:end="165:47">||</operator>

            <name pos:start="167:13" pos:end="167:41"><name pos:start="167:13" pos:end="167:13">h</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:17">ps</name><operator pos:start="167:18" pos:end="167:18">.</operator><name pos:start="167:19" pos:end="167:21">pps</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:41">transform_8x8_mode</name></name> <operator pos:start="167:43" pos:end="167:44">!=</operator> <name pos:start="167:46" pos:end="167:68"><name pos:start="167:46" pos:end="167:48">pps</name><operator pos:start="167:49" pos:end="167:50">-&gt;</operator><name pos:start="167:51" pos:end="167:68">transform_8x8_mode</name></name></expr> <comment type="block" pos:start="167:70" pos:end="169:53">/*||

            (h-&gt;setup_finished &amp;&amp; h-&gt;ps.pps != pps)*/</comment>)</condition> <block pos:start="169:56" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:39">

            <expr_stmt pos:start="171:13" pos:end="171:75"><expr pos:start="171:13" pos:end="171:74"><call pos:start="171:13" pos:end="171:74"><name pos:start="171:13" pos:end="171:18">av_log</name><argument_list pos:start="171:19" pos:end="171:74">(<argument pos:start="171:20" pos:end="171:27"><expr pos:start="171:20" pos:end="171:27"><name pos:start="171:20" pos:end="171:27"><name pos:start="171:20" pos:end="171:20">h</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:27">avctx</name></name></expr></argument>, <argument pos:start="171:30" pos:end="171:41"><expr pos:start="171:30" pos:end="171:41"><name pos:start="171:30" pos:end="171:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="171:44" pos:end="171:73"><expr pos:start="171:44" pos:end="171:73"><literal type="string" pos:start="171:44" pos:end="171:73">"PPS changed between slices\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="173:13" pos:end="173:39">return <expr pos:start="173:20" pos:end="173:38"><name pos:start="173:20" pos:end="173:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="177:9" pos:end="185:9"><if pos:start="177:9" pos:end="185:9">if <condition pos:start="177:12" pos:end="177:77">(<expr pos:start="177:13" pos:end="177:76"><name pos:start="177:13" pos:end="177:21"><name pos:start="177:13" pos:end="177:13">h</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:17">ps</name><operator pos:start="177:18" pos:end="177:18">.</operator><name pos:start="177:19" pos:end="177:21">sps</name></name> <operator pos:start="177:23" pos:end="177:24">!=</operator> <operator pos:start="177:26" pos:end="177:26">(</operator><specifier pos:start="177:27" pos:end="177:31">const</specifier> <name pos:start="177:33" pos:end="177:35">SPS</name><operator pos:start="177:36" pos:end="177:36">*</operator><operator pos:start="177:37" pos:end="177:37">)</operator><name pos:start="177:38" pos:end="177:70"><name pos:start="177:38" pos:end="177:38">h</name><operator pos:start="177:39" pos:end="177:40">-&gt;</operator><name pos:start="177:41" pos:end="177:42">ps</name><operator pos:start="177:43" pos:end="177:43">.</operator><name pos:start="177:44" pos:end="177:51">sps_list</name><index pos:start="177:52" pos:end="177:70">[<expr pos:start="177:53" pos:end="177:69"><name pos:start="177:53" pos:end="177:69"><name pos:start="177:53" pos:end="177:53">h</name><operator pos:start="177:54" pos:end="177:55">-&gt;</operator><name pos:start="177:56" pos:end="177:57">ps</name><operator pos:start="177:58" pos:end="177:58">.</operator><name pos:start="177:59" pos:end="177:61">pps</name><operator pos:start="177:62" pos:end="177:63">-&gt;</operator><name pos:start="177:64" pos:end="177:69">sps_id</name></name></expr>]</index></name><operator pos:start="177:71" pos:end="177:72">-&gt;</operator><name pos:start="177:73" pos:end="177:76">data</name></expr>)</condition> <block pos:start="177:79" pos:end="185:9">{<block_content pos:start="179:13" pos:end="183:39">

            <expr_stmt pos:start="179:13" pos:end="181:59"><expr pos:start="179:13" pos:end="181:58"><call pos:start="179:13" pos:end="181:58"><name pos:start="179:13" pos:end="179:18">av_log</name><argument_list pos:start="179:19" pos:end="181:58">(<argument pos:start="179:20" pos:end="179:27"><expr pos:start="179:20" pos:end="179:27"><name pos:start="179:20" pos:end="179:27"><name pos:start="179:20" pos:end="179:20">h</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:27">avctx</name></name></expr></argument>, <argument pos:start="179:30" pos:end="179:41"><expr pos:start="179:30" pos:end="179:41"><name pos:start="179:30" pos:end="179:41">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="181:16" pos:end="181:57"><expr pos:start="181:16" pos:end="181:57"><literal type="string" pos:start="181:16" pos:end="181:57">"SPS changed in the middle of the frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="183:13" pos:end="183:39">return <expr pos:start="183:20" pos:end="183:38"><name pos:start="183:20" pos:end="183:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="191:5" pos:end="225:5"><if pos:start="191:5" pos:end="199:5">if <condition pos:start="191:8" pos:end="191:30">(<expr pos:start="191:9" pos:end="191:29"><name pos:start="191:9" pos:end="191:24"><name pos:start="191:9" pos:end="191:9">h</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:24">current_slice</name></name> <operator pos:start="191:26" pos:end="191:27">==</operator> <literal type="number" pos:start="191:29" pos:end="191:29">0</literal></expr>)</condition> <block pos:start="191:32" pos:end="199:5">{<block_content pos:start="193:9" pos:end="197:23">

        <expr_stmt pos:start="193:9" pos:end="193:56"><expr pos:start="193:9" pos:end="193:55"><name pos:start="193:9" pos:end="193:11">ret</name> <operator pos:start="193:13" pos:end="193:13">=</operator> <call pos:start="193:15" pos:end="193:55"><name pos:start="193:15" pos:end="193:30">h264_field_start</name><argument_list pos:start="193:31" pos:end="193:55">(<argument pos:start="193:32" pos:end="193:32"><expr pos:start="193:32" pos:end="193:32"><name pos:start="193:32" pos:end="193:32">h</name></expr></argument>, <argument pos:start="193:35" pos:end="193:36"><expr pos:start="193:35" pos:end="193:36"><name pos:start="193:35" pos:end="193:36">sl</name></expr></argument>, <argument pos:start="193:39" pos:end="193:41"><expr pos:start="193:39" pos:end="193:41"><name pos:start="193:39" pos:end="193:41">nal</name></expr></argument>, <argument pos:start="193:44" pos:end="193:54"><expr pos:start="193:44" pos:end="193:54"><name pos:start="193:44" pos:end="193:54">first_slice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="195:9" pos:end="197:23"><if pos:start="195:9" pos:end="197:23">if <condition pos:start="195:12" pos:end="195:20">(<expr pos:start="195:13" pos:end="195:19"><name pos:start="195:13" pos:end="195:15">ret</name> <operator pos:start="195:17" pos:end="195:17">&lt;</operator> <literal type="number" pos:start="195:19" pos:end="195:19">0</literal></expr>)</condition><block type="pseudo" pos:start="197:13" pos:end="197:23"><block_content pos:start="197:13" pos:end="197:23">

            <return pos:start="197:13" pos:end="197:23">return <expr pos:start="197:20" pos:end="197:22"><name pos:start="197:20" pos:end="197:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="199:7" pos:end="225:5">else <block pos:start="199:12" pos:end="225:5">{<block_content pos:start="201:9" pos:end="223:9">

        <if_stmt pos:start="201:9" pos:end="223:9"><if pos:start="201:9" pos:end="213:9">if <condition pos:start="201:12" pos:end="203:56">(<expr pos:start="201:13" pos:end="203:55"><name pos:start="201:13" pos:end="201:32"><name pos:start="201:13" pos:end="201:13">h</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:32">picture_structure</name></name> <operator pos:start="201:34" pos:end="201:35">!=</operator> <name pos:start="201:37" pos:end="201:57"><name pos:start="201:37" pos:end="201:38">sl</name><operator pos:start="201:39" pos:end="201:40">-&gt;</operator><name pos:start="201:41" pos:end="201:57">picture_structure</name></name> <operator pos:start="201:59" pos:end="201:60">||</operator>

            <name pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:13">h</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:24">droppable</name></name>         <operator pos:start="203:34" pos:end="203:35">!=</operator> <operator pos:start="203:37" pos:end="203:37">(</operator><name pos:start="203:38" pos:end="203:49"><name pos:start="203:38" pos:end="203:40">nal</name><operator pos:start="203:41" pos:end="203:42">-&gt;</operator><name pos:start="203:43" pos:end="203:49">ref_idc</name></name> <operator pos:start="203:51" pos:end="203:52">==</operator> <literal type="number" pos:start="203:54" pos:end="203:54">0</literal><operator pos:start="203:55" pos:end="203:55">)</operator></expr>)</condition> <block pos:start="203:58" pos:end="213:9">{<block_content pos:start="205:13" pos:end="211:39">

            <expr_stmt pos:start="205:13" pos:end="209:64"><expr pos:start="205:13" pos:end="209:63"><call pos:start="205:13" pos:end="209:63"><name pos:start="205:13" pos:end="205:18">av_log</name><argument_list pos:start="205:19" pos:end="209:63">(<argument pos:start="205:20" pos:end="205:27"><expr pos:start="205:20" pos:end="205:27"><name pos:start="205:20" pos:end="205:27"><name pos:start="205:20" pos:end="205:20">h</name><operator pos:start="205:21" pos:end="205:22">-&gt;</operator><name pos:start="205:23" pos:end="205:27">avctx</name></name></expr></argument>, <argument pos:start="205:30" pos:end="205:41"><expr pos:start="205:30" pos:end="205:41"><name pos:start="205:30" pos:end="205:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="207:20" pos:end="207:83"><expr pos:start="207:20" pos:end="207:83"><literal type="string" pos:start="207:20" pos:end="207:83">"Changing field mode (%d -&gt; %d) between slices is not allowed\n"</literal></expr></argument>,

                   <argument pos:start="209:20" pos:end="209:39"><expr pos:start="209:20" pos:end="209:39"><name pos:start="209:20" pos:end="209:39"><name pos:start="209:20" pos:end="209:20">h</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:39">picture_structure</name></name></expr></argument>, <argument pos:start="209:42" pos:end="209:62"><expr pos:start="209:42" pos:end="209:62"><name pos:start="209:42" pos:end="209:62"><name pos:start="209:42" pos:end="209:43">sl</name><operator pos:start="209:44" pos:end="209:45">-&gt;</operator><name pos:start="209:46" pos:end="209:62">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="211:13" pos:end="211:39">return <expr pos:start="211:20" pos:end="211:38"><name pos:start="211:20" pos:end="211:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="213:11" pos:end="223:9">else if <condition pos:start="213:19" pos:end="213:35">(<expr pos:start="213:20" pos:end="213:34"><operator pos:start="213:20" pos:end="213:20">!</operator><name pos:start="213:21" pos:end="213:34"><name pos:start="213:21" pos:end="213:21">h</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:34">cur_pic_ptr</name></name></expr>)</condition> <block pos:start="213:37" pos:end="223:9">{<block_content pos:start="215:13" pos:end="221:39">

            <expr_stmt pos:start="215:13" pos:end="219:41"><expr pos:start="215:13" pos:end="219:40"><call pos:start="215:13" pos:end="219:40"><name pos:start="215:13" pos:end="215:18">av_log</name><argument_list pos:start="215:19" pos:end="219:40">(<argument pos:start="215:20" pos:end="215:27"><expr pos:start="215:20" pos:end="215:27"><name pos:start="215:20" pos:end="215:27"><name pos:start="215:20" pos:end="215:20">h</name><operator pos:start="215:21" pos:end="215:22">-&gt;</operator><name pos:start="215:23" pos:end="215:27">avctx</name></name></expr></argument>, <argument pos:start="215:30" pos:end="215:41"><expr pos:start="215:30" pos:end="215:41"><name pos:start="215:30" pos:end="215:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="217:20" pos:end="217:52"><expr pos:start="217:20" pos:end="217:52"><literal type="string" pos:start="217:20" pos:end="217:52">"unset cur_pic_ptr on slice %d\n"</literal></expr></argument>,

                   <argument pos:start="219:20" pos:end="219:39"><expr pos:start="219:20" pos:end="219:39"><name pos:start="219:20" pos:end="219:35"><name pos:start="219:20" pos:end="219:20">h</name><operator pos:start="219:21" pos:end="219:22">-&gt;</operator><name pos:start="219:23" pos:end="219:35">current_slice</name></name> <operator pos:start="219:37" pos:end="219:37">+</operator> <literal type="number" pos:start="219:39" pos:end="219:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="221:13" pos:end="221:39">return <expr pos:start="221:20" pos:end="221:38"><name pos:start="221:20" pos:end="221:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:38"><expr pos:start="229:5" pos:end="229:37"><name pos:start="229:5" pos:end="229:7">ret</name> <operator pos:start="229:9" pos:end="229:9">=</operator> <call pos:start="229:11" pos:end="229:37"><name pos:start="229:11" pos:end="229:25">h264_slice_init</name><argument_list pos:start="229:26" pos:end="229:37">(<argument pos:start="229:27" pos:end="229:27"><expr pos:start="229:27" pos:end="229:27"><name pos:start="229:27" pos:end="229:27">h</name></expr></argument>, <argument pos:start="229:30" pos:end="229:31"><expr pos:start="229:30" pos:end="229:31"><name pos:start="229:30" pos:end="229:31">sl</name></expr></argument>, <argument pos:start="229:34" pos:end="229:36"><expr pos:start="229:34" pos:end="229:36"><name pos:start="229:34" pos:end="229:36">nal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="231:5" pos:end="233:19"><if pos:start="231:5" pos:end="233:19">if <condition pos:start="231:8" pos:end="231:16">(<expr pos:start="231:9" pos:end="231:15"><name pos:start="231:9" pos:end="231:11">ret</name> <operator pos:start="231:13" pos:end="231:13">&lt;</operator> <literal type="number" pos:start="231:15" pos:end="231:15">0</literal></expr>)</condition><block type="pseudo" pos:start="233:9" pos:end="233:19"><block_content pos:start="233:9" pos:end="233:19">

        <return pos:start="233:9" pos:end="233:19">return <expr pos:start="233:16" pos:end="233:18"><name pos:start="233:16" pos:end="233:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="237:5" pos:end="237:29"><expr pos:start="237:5" pos:end="237:28"><name pos:start="237:5" pos:end="237:26"><name pos:start="237:5" pos:end="237:5">h</name><operator pos:start="237:6" pos:end="237:7">-&gt;</operator><name pos:start="237:8" pos:end="237:26">nb_slice_ctx_queued</name></name><operator pos:start="237:27" pos:end="237:28">++</operator></expr>;</expr_stmt>



    <return pos:start="241:5" pos:end="241:13">return <expr pos:start="241:12" pos:end="241:12"><literal type="number" pos:start="241:12" pos:end="241:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
