<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17890.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">unsigned</name> <name pos:start="1:17" pos:end="1:19">int</name></type> <name pos:start="1:21" pos:end="1:31">mszh_decomp</name><parameter_list pos:start="1:32" pos:end="1:115">(<parameter pos:start="1:33" pos:end="1:54"><decl pos:start="1:33" pos:end="1:54"><type pos:start="1:33" pos:end="1:54"><name pos:start="1:33" pos:end="1:40">unsigned</name> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type> <name pos:start="1:49" pos:end="1:54">srcptr</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:66">srclen</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:91"><decl pos:start="1:69" pos:end="1:91"><type pos:start="1:69" pos:end="1:91"><name pos:start="1:69" pos:end="1:76">unsigned</name> <name pos:start="1:78" pos:end="1:81">char</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type> <name pos:start="1:85" pos:end="1:91">destptr</name></decl></parameter>, <parameter pos:start="1:94" pos:end="1:114"><decl pos:start="1:94" pos:end="1:114"><type pos:start="1:94" pos:end="1:114"><name pos:start="1:94" pos:end="1:101">unsigned</name> <name pos:start="1:103" pos:end="1:105">int</name></type> <name pos:start="1:107" pos:end="1:114">destsize</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:33">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:17">char</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:30">destptr_bak</name> <init pos:start="5:32" pos:end="5:40">= <expr pos:start="5:34" pos:end="5:40"><name pos:start="5:34" pos:end="5:40">destptr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:30">destptr_end</name> <init pos:start="7:32" pos:end="7:51">= <expr pos:start="7:34" pos:end="7:51"><name pos:start="7:34" pos:end="7:40">destptr</name> <operator pos:start="7:42" pos:end="7:42">+</operator> <name pos:start="7:44" pos:end="7:51">destsize</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name></type> <name pos:start="9:19" pos:end="9:22">mask</name> <init pos:start="9:24" pos:end="9:26">= <expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name></type> <name pos:start="11:19" pos:end="11:25">maskbit</name> <init pos:start="11:27" pos:end="11:29">= <expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:20">ofs</name></decl>, <decl pos:start="13:23" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:23" pos:end="13:25">cnt</name></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="77:5">while <condition pos:start="17:11" pos:end="17:47">(<expr pos:start="17:12" pos:end="17:46"><name pos:start="17:12" pos:end="17:17">srclen</name> <operator pos:start="17:19" pos:end="17:19">&gt;</operator> <literal type="number" pos:start="17:21" pos:end="17:21">0</literal> <operator pos:start="17:23" pos:end="17:24">&amp;&amp;</operator> <name pos:start="17:26" pos:end="17:32">destptr</name> <operator pos:start="17:34" pos:end="17:34">&lt;</operator> <name pos:start="17:36" pos:end="17:46">destptr_end</name></expr>)</condition> <block pos:start="17:49" pos:end="77:5">{<block_content pos:start="19:9" pos:end="75:9">

        <if_stmt pos:start="19:9" pos:end="29:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:25">(<expr pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:19">maskbit</name> <operator pos:start="19:21" pos:end="19:22">==</operator> <literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr>)</condition> <block pos:start="19:27" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:21">

            <expr_stmt pos:start="21:13" pos:end="21:29"><expr pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:16">mask</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <operator pos:start="21:20" pos:end="21:20">*</operator><name pos:start="21:21" pos:end="21:26">srcptr</name><operator pos:start="21:27" pos:end="21:28">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:24"><expr pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:19">maskbit</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <literal type="number" pos:start="23:23" pos:end="23:23">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:21"><expr pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:18">srclen</name><operator pos:start="25:19" pos:end="25:20">--</operator></expr>;</expr_stmt>

            <continue pos:start="27:13" pos:end="27:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="31:9" pos:end="75:9"><if pos:start="31:9" pos:end="45:9">if <condition pos:start="31:12" pos:end="31:45">(<expr pos:start="31:13" pos:end="31:44"><operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:17">mask</name> <operator pos:start="31:19" pos:end="31:19">&amp;</operator> <operator pos:start="31:21" pos:end="31:21">(</operator><literal type="number" pos:start="31:22" pos:end="31:22">1</literal> <operator pos:start="31:24" pos:end="31:25">&lt;&lt;</operator> <operator pos:start="31:27" pos:end="31:27">(</operator><operator pos:start="31:28" pos:end="31:29">--</operator><name pos:start="31:30" pos:end="31:36">maskbit</name><operator pos:start="31:37" pos:end="31:37">)</operator><operator pos:start="31:38" pos:end="31:38">)</operator><operator pos:start="31:39" pos:end="31:39">)</operator> <operator pos:start="31:41" pos:end="31:42">==</operator> <literal type="number" pos:start="31:44" pos:end="31:44">0</literal></expr>)</condition> <block pos:start="31:47" pos:end="45:9">{<block_content pos:start="33:13" pos:end="43:24">

            <if_stmt pos:start="33:13" pos:end="35:22"><if pos:start="33:13" pos:end="35:22">if <condition pos:start="33:16" pos:end="33:42">(<expr pos:start="33:17" pos:end="33:41"><name pos:start="33:17" pos:end="33:23">destptr</name> <operator pos:start="33:25" pos:end="33:25">+</operator> <literal type="number" pos:start="33:27" pos:end="33:27">4</literal> <operator pos:start="33:29" pos:end="33:29">&gt;</operator> <name pos:start="33:31" pos:end="33:41">destptr_end</name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:22"><block_content pos:start="35:17" pos:end="35:22">

                <break pos:start="35:17" pos:end="35:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:39"><expr pos:start="37:13" pos:end="37:38"><call pos:start="37:13" pos:end="37:38"><name pos:start="37:13" pos:end="37:18">memcpy</name><argument_list pos:start="37:19" pos:end="37:38">(<argument pos:start="37:20" pos:end="37:26"><expr pos:start="37:20" pos:end="37:26"><name pos:start="37:20" pos:end="37:26">destptr</name></expr></argument>, <argument pos:start="37:29" pos:end="37:34"><expr pos:start="37:29" pos:end="37:34"><name pos:start="37:29" pos:end="37:34">srcptr</name></expr></argument>, <argument pos:start="37:37" pos:end="37:37"><expr pos:start="37:37" pos:end="37:37"><literal type="number" pos:start="37:37" pos:end="37:37">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:24"><expr pos:start="39:13" pos:end="39:23"><name pos:start="39:13" pos:end="39:18">srclen</name> <operator pos:start="39:20" pos:end="39:21">-=</operator> <literal type="number" pos:start="39:23" pos:end="39:23">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:25"><expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:19">destptr</name> <operator pos:start="41:21" pos:end="41:22">+=</operator> <literal type="number" pos:start="41:24" pos:end="41:24">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:24"><expr pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:18">srcptr</name> <operator pos:start="43:20" pos:end="43:21">+=</operator> <literal type="number" pos:start="43:23" pos:end="43:23">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="75:9">else <block pos:start="45:16" pos:end="75:9">{<block_content pos:start="47:13" pos:end="73:13">

            <expr_stmt pos:start="47:13" pos:end="47:28"><expr pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:15">ofs</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <operator pos:start="47:19" pos:end="47:19">*</operator><name pos:start="47:20" pos:end="47:25">srcptr</name><operator pos:start="47:26" pos:end="47:27">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:28"><expr pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:15">cnt</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <operator pos:start="49:19" pos:end="49:19">*</operator><name pos:start="49:20" pos:end="49:25">srcptr</name><operator pos:start="49:26" pos:end="49:27">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:29"><expr pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:15">ofs</name> <operator pos:start="51:17" pos:end="51:18">+=</operator> <name pos:start="51:20" pos:end="51:22">cnt</name> <operator pos:start="51:24" pos:end="51:24">*</operator> <literal type="number" pos:start="51:26" pos:end="51:28">256</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:42"><expr pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:15">cnt</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <operator pos:start="53:19" pos:end="53:19">(</operator><operator pos:start="53:20" pos:end="53:20">(</operator><name pos:start="53:21" pos:end="53:23">cnt</name> <operator pos:start="53:25" pos:end="53:26">&gt;&gt;</operator> <literal type="number" pos:start="53:28" pos:end="53:28">3</literal><operator pos:start="53:29" pos:end="53:29">)</operator> <operator pos:start="53:31" pos:end="53:31">&amp;</operator> <literal type="number" pos:start="53:33" pos:end="53:36">0x1f</literal><operator pos:start="53:37" pos:end="53:37">)</operator> <operator pos:start="53:39" pos:end="53:39">+</operator> <literal type="number" pos:start="53:41" pos:end="53:41">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:25"><expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:15">ofs</name> <operator pos:start="55:17" pos:end="55:18">&amp;=</operator> <literal type="number" pos:start="55:20" pos:end="55:24">0x7ff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:24"><expr pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:18">srclen</name> <operator pos:start="57:20" pos:end="57:21">-=</operator> <literal type="number" pos:start="57:23" pos:end="57:23">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:21"><expr pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:15">cnt</name> <operator pos:start="59:17" pos:end="59:18">*=</operator> <literal type="number" pos:start="59:20" pos:end="59:20">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="65:13"><if pos:start="61:13" pos:end="65:13">if <condition pos:start="61:16" pos:end="61:44">(<expr pos:start="61:17" pos:end="61:43"><name pos:start="61:17" pos:end="61:23">destptr</name> <operator pos:start="61:25" pos:end="61:25">+</operator> <name pos:start="61:27" pos:end="61:29">cnt</name> <operator pos:start="61:31" pos:end="61:31">&gt;</operator> <name pos:start="61:33" pos:end="61:43">destptr_end</name></expr>)</condition> <block pos:start="61:46" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:45">

                <expr_stmt pos:start="63:17" pos:end="63:45"><expr pos:start="63:17" pos:end="63:44"><name pos:start="63:17" pos:end="63:19">cnt</name> <operator pos:start="63:21" pos:end="63:21">=</operator>  <name pos:start="63:24" pos:end="63:34">destptr_end</name> <operator pos:start="63:36" pos:end="63:36">-</operator> <name pos:start="63:38" pos:end="63:44">destptr</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <for pos:start="67:13" pos:end="73:13">for <control pos:start="67:17" pos:end="67:34">(<init pos:start="67:18" pos:end="67:18">;</init> <condition pos:start="67:20" pos:end="67:27"><expr pos:start="67:20" pos:end="67:26"><name pos:start="67:20" pos:end="67:22">cnt</name> <operator pos:start="67:24" pos:end="67:24">&gt;</operator> <literal type="number" pos:start="67:26" pos:end="67:26">0</literal></expr>;</condition> <incr pos:start="67:29" pos:end="67:33"><expr pos:start="67:29" pos:end="67:33"><name pos:start="67:29" pos:end="67:31">cnt</name><operator pos:start="67:32" pos:end="67:33">--</operator></expr></incr>)</control> <block pos:start="67:36" pos:end="73:13">{<block_content pos:start="69:17" pos:end="71:26">

                <expr_stmt pos:start="69:17" pos:end="69:44"><expr pos:start="69:17" pos:end="69:43"><operator pos:start="69:17" pos:end="69:17">*</operator><name pos:start="69:18" pos:end="69:24">destptr</name> <operator pos:start="69:26" pos:end="69:26">=</operator> <operator pos:start="69:28" pos:end="69:28">*</operator><operator pos:start="69:29" pos:end="69:29">(</operator><name pos:start="69:30" pos:end="69:36">destptr</name> <operator pos:start="69:38" pos:end="69:38">-</operator> <name pos:start="69:40" pos:end="69:42">ofs</name><operator pos:start="69:43" pos:end="69:43">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:26"><expr pos:start="71:17" pos:end="71:25"><name pos:start="71:17" pos:end="71:23">destptr</name><operator pos:start="71:24" pos:end="71:25">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <return pos:start="81:5" pos:end="81:33">return <expr pos:start="81:12" pos:end="81:32"><name pos:start="81:12" pos:end="81:18">destptr</name> <operator pos:start="81:20" pos:end="81:20">-</operator> <name pos:start="81:22" pos:end="81:32">destptr_bak</name></expr>;</return>

</block_content>}</block></function>
</unit>
