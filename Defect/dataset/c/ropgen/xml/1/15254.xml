<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15254.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_tilehdr</name><parameter_list pos:start="1:26" pos:end="1:44">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:40">WmallDecodeCtx</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="5:5" pos:end="165:13">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:44"><name pos:start="5:14" pos:end="5:24">num_samples</name><index pos:start="5:25" pos:end="5:44">[<expr pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:43">WMALL_MAX_CHANNELS</name></expr>]</index></name> <init pos:start="5:46" pos:end="5:52">= <expr pos:start="5:48" pos:end="5:52"><block pos:start="5:48" pos:end="5:52">{ <expr pos:start="5:50" pos:end="5:50"><literal type="number" pos:start="5:50" pos:end="5:50">0</literal></expr> }</block></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="5:55" pos:end="5:121">/* sum of samples for all currently known subframes of a channel */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type>  <name pos:start="7:14" pos:end="7:50"><name pos:start="7:14" pos:end="7:30">contains_subframe</name><index pos:start="7:31" pos:end="7:50">[<expr pos:start="7:32" pos:end="7:49"><name pos:start="7:32" pos:end="7:49">WMALL_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt>   <comment type="block" pos:start="7:55" pos:end="7:118">/* flag indicating if a channel contains the current subframe */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:33">channels_for_cur_subframe</name> <init pos:start="9:35" pos:end="9:51">= <expr pos:start="9:37" pos:end="9:51"><name pos:start="9:37" pos:end="9:51"><name pos:start="9:37" pos:end="9:37">s</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:51">num_channels</name></name></expr></init></decl>;</decl_stmt>  <comment type="block" pos:start="9:55" pos:end="9:112">/* number of channels that contain the current subframe */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:28">fixed_channel_layout</name> <init pos:start="11:30" pos:end="11:32">= <expr pos:start="11:32" pos:end="11:32"><literal type="number" pos:start="11:32" pos:end="11:32">0</literal></expr></init></decl>;</decl_stmt>                     <comment type="block" pos:start="11:55" pos:end="11:134">/* flag indicating that all channels use the same subfra2me offsets and sizes */</comment>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:23">min_channel_len</name> <init pos:start="13:25" pos:end="13:27">= <expr pos:start="13:27" pos:end="13:27"><literal type="number" pos:start="13:27" pos:end="13:27">0</literal></expr></init></decl>;</decl_stmt>                          <comment type="block" pos:start="13:55" pos:end="13:135">/* smallest sum of samples (channels with this length will be processed first) */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">c</name></decl>, <decl pos:start="15:12" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:23">tile_aligned</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:34">/* reset tiling information */</comment>

    <for pos:start="21:5" pos:end="23:40">for <control pos:start="21:9" pos:end="21:41">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">c</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:36"><expr pos:start="21:17" pos:end="21:35"><name pos:start="21:17" pos:end="21:17">c</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:35"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:35">num_channels</name></name></expr>;</condition> <incr pos:start="21:38" pos:end="21:40"><expr pos:start="21:38" pos:end="21:40"><name pos:start="21:38" pos:end="21:38">c</name><operator pos:start="21:39" pos:end="21:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:9" pos:end="23:40"><block_content pos:start="23:9" pos:end="23:40">

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:18">channel</name><index pos:start="23:19" pos:end="23:21">[<expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">c</name></expr>]</index></name><operator pos:start="23:22" pos:end="23:22">.</operator><name pos:start="23:23" pos:end="23:35">num_subframes</name> <operator pos:start="23:37" pos:end="23:37">=</operator> <literal type="number" pos:start="23:39" pos:end="23:39">0</literal></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:16">tile_aligned</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:36"><name pos:start="27:20" pos:end="27:28">get_bits1</name><argument_list pos:start="27:29" pos:end="27:36">(<argument pos:start="27:30" pos:end="27:35"><expr pos:start="27:30" pos:end="27:35"><operator pos:start="27:30" pos:end="27:30">&amp;</operator><name pos:start="27:31" pos:end="27:35"><name pos:start="27:31" pos:end="27:31">s</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:33"><if pos:start="29:5" pos:end="31:33">if <condition pos:start="29:8" pos:end="29:50">(<expr pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:28">max_num_subframes</name></name> <operator pos:start="29:30" pos:end="29:31">==</operator> <literal type="number" pos:start="29:33" pos:end="29:33">1</literal> <operator pos:start="29:35" pos:end="29:36">||</operator> <name pos:start="29:38" pos:end="29:49">tile_aligned</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:33"><block_content pos:start="31:9" pos:end="31:33">

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:28">fixed_channel_layout</name> <operator pos:start="31:30" pos:end="31:30">=</operator> <literal type="number" pos:start="31:32" pos:end="31:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:66">/* loop until the frame data is split between the subframes */</comment>

    <do pos:start="37:5" pos:end="145:53">do <block pos:start="37:8" pos:end="145:5">{<block_content pos:start="39:9" pos:end="143:9">

        <decl_stmt pos:start="39:9" pos:end="39:37"><decl pos:start="39:9" pos:end="39:24"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:24">subframe_len</name></decl>, <decl pos:start="39:27" pos:end="39:36"><type ref="prev" pos:start="39:9" pos:end="39:11"/><name pos:start="39:27" pos:end="39:32">in_use</name> <init pos:start="39:34" pos:end="39:36">= <expr pos:start="39:36" pos:end="39:36"><literal type="number" pos:start="39:36" pos:end="39:36">0</literal></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="43:9" pos:end="43:55">/* check which channels contain the subframe */</comment>

        <for pos:start="45:9" pos:end="67:9">for <control pos:start="45:13" pos:end="45:45">(<init pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:18"><name pos:start="45:14" pos:end="45:14">c</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</init> <condition pos:start="45:21" pos:end="45:40"><expr pos:start="45:21" pos:end="45:39"><name pos:start="45:21" pos:end="45:21">c</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <name pos:start="45:25" pos:end="45:39"><name pos:start="45:25" pos:end="45:25">s</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:39">num_channels</name></name></expr>;</condition> <incr pos:start="45:42" pos:end="45:44"><expr pos:start="45:42" pos:end="45:44"><name pos:start="45:42" pos:end="45:42">c</name><operator pos:start="45:43" pos:end="45:44">++</operator></expr></incr>)</control> <block pos:start="45:47" pos:end="67:9">{<block_content pos:start="47:13" pos:end="65:41">

            <if_stmt pos:start="47:13" pos:end="65:41"><if pos:start="47:13" pos:end="63:13">if <condition pos:start="47:16" pos:end="47:50">(<expr pos:start="47:17" pos:end="47:49"><name pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:27">num_samples</name><index pos:start="47:28" pos:end="47:30">[<expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">c</name></expr>]</index></name> <operator pos:start="47:32" pos:end="47:33">==</operator> <name pos:start="47:35" pos:end="47:49">min_channel_len</name></expr>)</condition> <block pos:start="47:52" pos:end="63:13">{<block_content pos:start="49:17" pos:end="61:17">

                <if_stmt pos:start="49:17" pos:end="61:17"><if pos:start="49:17" pos:end="55:17">if <condition pos:start="49:20" pos:end="51:91">(<expr pos:start="49:21" pos:end="51:90"><name pos:start="49:21" pos:end="49:40">fixed_channel_layout</name> <operator pos:start="49:42" pos:end="49:43">||</operator> <name pos:start="49:45" pos:end="49:69">channels_for_cur_subframe</name> <operator pos:start="49:71" pos:end="49:72">==</operator> <literal type="number" pos:start="49:74" pos:end="49:74">1</literal> <operator pos:start="49:76" pos:end="49:77">||</operator>

                   <operator pos:start="51:20" pos:end="51:20">(</operator><name pos:start="51:21" pos:end="51:35">min_channel_len</name> <operator pos:start="51:37" pos:end="51:38">==</operator> <name pos:start="51:40" pos:end="51:59"><name pos:start="51:40" pos:end="51:40">s</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:59">samples_per_frame</name></name> <operator pos:start="51:61" pos:end="51:61">-</operator> <name pos:start="51:63" pos:end="51:89"><name pos:start="51:63" pos:end="51:63">s</name><operator pos:start="51:64" pos:end="51:65">-&gt;</operator><name pos:start="51:66" pos:end="51:89">min_samples_per_subframe</name></name><operator pos:start="51:90" pos:end="51:90">)</operator></expr>)</condition> <block pos:start="51:93" pos:end="55:17">{<block_content pos:start="53:21" pos:end="53:54">

                    <expr_stmt pos:start="53:21" pos:end="53:54"><expr pos:start="53:21" pos:end="53:53"><name pos:start="53:21" pos:end="53:40"><name pos:start="53:21" pos:end="53:37">contains_subframe</name><index pos:start="53:38" pos:end="53:40">[<expr pos:start="53:39" pos:end="53:39"><name pos:start="53:39" pos:end="53:39">c</name></expr>]</index></name> <operator pos:start="53:42" pos:end="53:42">=</operator> <name pos:start="53:44" pos:end="53:49">in_use</name> <operator pos:start="53:51" pos:end="53:51">=</operator> <literal type="number" pos:start="53:53" pos:end="53:53">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="55:19" pos:end="61:17">else <block pos:start="55:24" pos:end="61:17">{<block_content pos:start="57:21" pos:end="59:58">

                    <if_stmt pos:start="57:21" pos:end="59:58"><if pos:start="57:21" pos:end="59:58">if <condition pos:start="57:24" pos:end="57:42">(<expr pos:start="57:25" pos:end="57:41"><call pos:start="57:25" pos:end="57:41"><name pos:start="57:25" pos:end="57:33">get_bits1</name><argument_list pos:start="57:34" pos:end="57:41">(<argument pos:start="57:35" pos:end="57:40"><expr pos:start="57:35" pos:end="57:40"><operator pos:start="57:35" pos:end="57:35">&amp;</operator><name pos:start="57:36" pos:end="57:40"><name pos:start="57:36" pos:end="57:36">s</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:40">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="59:25" pos:end="59:58"><block_content pos:start="59:25" pos:end="59:58">

                        <expr_stmt pos:start="59:25" pos:end="59:58"><expr pos:start="59:25" pos:end="59:57"><name pos:start="59:25" pos:end="59:44"><name pos:start="59:25" pos:end="59:41">contains_subframe</name><index pos:start="59:42" pos:end="59:44">[<expr pos:start="59:43" pos:end="59:43"><name pos:start="59:43" pos:end="59:43">c</name></expr>]</index></name> <operator pos:start="59:46" pos:end="59:46">=</operator> <name pos:start="59:48" pos:end="59:53">in_use</name> <operator pos:start="59:55" pos:end="59:55">=</operator> <literal type="number" pos:start="59:57" pos:end="59:57">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="63:15" pos:end="65:41">else<block type="pseudo" pos:start="65:17" pos:end="65:41"><block_content pos:start="65:17" pos:end="65:41">

                <expr_stmt pos:start="65:17" pos:end="65:41"><expr pos:start="65:17" pos:end="65:40"><name pos:start="65:17" pos:end="65:36"><name pos:start="65:17" pos:end="65:33">contains_subframe</name><index pos:start="65:34" pos:end="65:36">[<expr pos:start="65:35" pos:end="65:35"><name pos:start="65:35" pos:end="65:35">c</name></expr>]</index></name> <operator pos:start="65:38" pos:end="65:38">=</operator> <literal type="number" pos:start="65:40" pos:end="65:40">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="71:9" pos:end="79:9"><if pos:start="71:9" pos:end="79:9">if <condition pos:start="71:12" pos:end="71:20">(<expr pos:start="71:13" pos:end="71:19"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:19">in_use</name></expr>)</condition> <block pos:start="71:22" pos:end="79:9">{<block_content pos:start="73:13" pos:end="77:39">

            <expr_stmt pos:start="73:13" pos:end="75:45"><expr pos:start="73:13" pos:end="75:44"><call pos:start="73:13" pos:end="75:44"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="75:44">(<argument pos:start="73:20" pos:end="73:27"><expr pos:start="73:20" pos:end="73:27"><name pos:start="73:20" pos:end="73:27"><name pos:start="73:20" pos:end="73:20">s</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:27">avctx</name></name></expr></argument>, <argument pos:start="73:30" pos:end="73:41"><expr pos:start="73:30" pos:end="73:41"><name pos:start="73:30" pos:end="73:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="75:20" pos:end="75:43"><expr pos:start="75:20" pos:end="75:43"><literal type="string" pos:start="75:20" pos:end="75:43">"Found empty subframe\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="77:13" pos:end="77:39">return <expr pos:start="77:20" pos:end="77:38"><name pos:start="77:20" pos:end="77:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="83:9" pos:end="83:67">/* get subframe length, subframe_len == 0 is not allowed */</comment>

        <if_stmt pos:start="85:9" pos:end="87:39"><if pos:start="85:9" pos:end="87:39">if <condition pos:start="85:12" pos:end="85:77">(<expr pos:start="85:13" pos:end="85:76"><operator pos:start="85:13" pos:end="85:13">(</operator><name pos:start="85:14" pos:end="85:25">subframe_len</name> <operator pos:start="85:27" pos:end="85:27">=</operator> <call pos:start="85:29" pos:end="85:70"><name pos:start="85:29" pos:end="85:50">decode_subframe_length</name><argument_list pos:start="85:51" pos:end="85:70">(<argument pos:start="85:52" pos:end="85:52"><expr pos:start="85:52" pos:end="85:52"><name pos:start="85:52" pos:end="85:52">s</name></expr></argument>, <argument pos:start="85:55" pos:end="85:69"><expr pos:start="85:55" pos:end="85:69"><name pos:start="85:55" pos:end="85:69">min_channel_len</name></expr></argument>)</argument_list></call><operator pos:start="85:71" pos:end="85:71">)</operator> <operator pos:start="85:73" pos:end="85:74">&lt;=</operator> <literal type="number" pos:start="85:76" pos:end="85:76">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:39"><block_content pos:start="87:13" pos:end="87:39">

            <return pos:start="87:13" pos:end="87:39">return <expr pos:start="87:20" pos:end="87:38"><name pos:start="87:20" pos:end="87:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="89:9" pos:end="89:83">/* add subframes to the individual channels and find new min_channel_len */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:40"><expr pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:23">min_channel_len</name> <operator pos:start="91:25" pos:end="91:26">+=</operator> <name pos:start="91:28" pos:end="91:39">subframe_len</name></expr>;</expr_stmt>

        <for pos:start="93:9" pos:end="143:9">for <control pos:start="93:13" pos:end="93:45">(<init pos:start="93:14" pos:end="93:19"><expr pos:start="93:14" pos:end="93:18"><name pos:start="93:14" pos:end="93:14">c</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <literal type="number" pos:start="93:18" pos:end="93:18">0</literal></expr>;</init> <condition pos:start="93:21" pos:end="93:40"><expr pos:start="93:21" pos:end="93:39"><name pos:start="93:21" pos:end="93:21">c</name> <operator pos:start="93:23" pos:end="93:23">&lt;</operator> <name pos:start="93:25" pos:end="93:39"><name pos:start="93:25" pos:end="93:25">s</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:39">num_channels</name></name></expr>;</condition> <incr pos:start="93:42" pos:end="93:44"><expr pos:start="93:42" pos:end="93:44"><name pos:start="93:42" pos:end="93:42">c</name><operator pos:start="93:43" pos:end="93:44">++</operator></expr></incr>)</control> <block pos:start="93:47" pos:end="143:9">{<block_content pos:start="95:13" pos:end="141:13">

            <decl_stmt pos:start="95:13" pos:end="95:51"><decl pos:start="95:13" pos:end="95:50"><type pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:27">WmallChannelCtx</name> <modifier pos:start="95:29" pos:end="95:29">*</modifier></type><name pos:start="95:30" pos:end="95:33">chan</name> <init pos:start="95:35" pos:end="95:50">= <expr pos:start="95:37" pos:end="95:50"><operator pos:start="95:37" pos:end="95:37">&amp;</operator><name pos:start="95:38" pos:end="95:50"><name pos:start="95:38" pos:end="95:38">s</name><operator pos:start="95:39" pos:end="95:40">-&gt;</operator><name pos:start="95:41" pos:end="95:47">channel</name><index pos:start="95:48" pos:end="95:50">[<expr pos:start="95:49" pos:end="95:49"><name pos:start="95:49" pos:end="95:49">c</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="99:13" pos:end="141:13"><if pos:start="99:13" pos:end="129:13">if <condition pos:start="99:16" pos:end="99:37">(<expr pos:start="99:17" pos:end="99:36"><name pos:start="99:17" pos:end="99:36"><name pos:start="99:17" pos:end="99:33">contains_subframe</name><index pos:start="99:34" pos:end="99:36">[<expr pos:start="99:35" pos:end="99:35"><name pos:start="99:35" pos:end="99:35">c</name></expr>]</index></name></expr>)</condition> <block pos:start="99:39" pos:end="129:13">{<block_content pos:start="101:17" pos:end="127:17">

                <if_stmt pos:start="101:17" pos:end="109:17"><if pos:start="101:17" pos:end="109:17">if <condition pos:start="101:20" pos:end="101:57">(<expr pos:start="101:21" pos:end="101:56"><name pos:start="101:21" pos:end="101:39"><name pos:start="101:21" pos:end="101:24">chan</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:39">num_subframes</name></name> <operator pos:start="101:41" pos:end="101:42">&gt;=</operator> <name pos:start="101:44" pos:end="101:56">MAX_SUBFRAMES</name></expr>)</condition> <block pos:start="101:59" pos:end="109:17">{<block_content pos:start="103:21" pos:end="107:47">

                    <expr_stmt pos:start="103:21" pos:end="105:65"><expr pos:start="103:21" pos:end="105:64"><call pos:start="103:21" pos:end="105:64"><name pos:start="103:21" pos:end="103:26">av_log</name><argument_list pos:start="103:27" pos:end="105:64">(<argument pos:start="103:28" pos:end="103:35"><expr pos:start="103:28" pos:end="103:35"><name pos:start="103:28" pos:end="103:35"><name pos:start="103:28" pos:end="103:28">s</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:35">avctx</name></name></expr></argument>, <argument pos:start="103:38" pos:end="103:49"><expr pos:start="103:38" pos:end="103:49"><name pos:start="103:38" pos:end="103:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="105:28" pos:end="105:63"><expr pos:start="105:28" pos:end="105:63"><literal type="string" pos:start="105:28" pos:end="105:63">"broken frame: num subframes &gt; 31\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="107:21" pos:end="107:47">return <expr pos:start="107:28" pos:end="107:46"><name pos:start="107:28" pos:end="107:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:71"><expr pos:start="111:17" pos:end="111:70"><name pos:start="111:17" pos:end="111:55"><name pos:start="111:17" pos:end="111:20">chan</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:34">subframe_len</name><index pos:start="111:35" pos:end="111:55">[<expr pos:start="111:36" pos:end="111:54"><name pos:start="111:36" pos:end="111:54"><name pos:start="111:36" pos:end="111:39">chan</name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:54">num_subframes</name></name></expr>]</index></name> <operator pos:start="111:57" pos:end="111:57">=</operator> <name pos:start="111:59" pos:end="111:70">subframe_len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:47"><expr pos:start="113:17" pos:end="113:46"><name pos:start="113:17" pos:end="113:30"><name pos:start="113:17" pos:end="113:27">num_samples</name><index pos:start="113:28" pos:end="113:30">[<expr pos:start="113:29" pos:end="113:29"><name pos:start="113:29" pos:end="113:29">c</name></expr>]</index></name> <operator pos:start="113:32" pos:end="113:33">+=</operator> <name pos:start="113:35" pos:end="113:46">subframe_len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:38"><expr pos:start="115:17" pos:end="115:37"><operator pos:start="115:17" pos:end="115:18">++</operator><name pos:start="115:19" pos:end="115:37"><name pos:start="115:19" pos:end="115:22">chan</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:37">num_subframes</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="117:17" pos:end="127:17"><if pos:start="117:17" pos:end="127:17">if <condition pos:start="117:20" pos:end="117:58">(<expr pos:start="117:21" pos:end="117:57"><name pos:start="117:21" pos:end="117:34"><name pos:start="117:21" pos:end="117:31">num_samples</name><index pos:start="117:32" pos:end="117:34">[<expr pos:start="117:33" pos:end="117:33"><name pos:start="117:33" pos:end="117:33">c</name></expr>]</index></name> <operator pos:start="117:36" pos:end="117:36">&gt;</operator> <name pos:start="117:38" pos:end="117:57"><name pos:start="117:38" pos:end="117:38">s</name><operator pos:start="117:39" pos:end="117:40">-&gt;</operator><name pos:start="117:41" pos:end="117:57">samples_per_frame</name></name></expr>)</condition> <block pos:start="117:60" pos:end="127:17">{<block_content pos:start="119:21" pos:end="125:47">

                    <expr_stmt pos:start="119:21" pos:end="123:65"><expr pos:start="119:21" pos:end="123:64"><call pos:start="119:21" pos:end="123:64"><name pos:start="119:21" pos:end="119:26">av_log</name><argument_list pos:start="119:27" pos:end="123:64">(<argument pos:start="119:28" pos:end="119:35"><expr pos:start="119:28" pos:end="119:35"><name pos:start="119:28" pos:end="119:35"><name pos:start="119:28" pos:end="119:28">s</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:35">avctx</name></name></expr></argument>, <argument pos:start="119:38" pos:end="119:49"><expr pos:start="119:38" pos:end="119:49"><name pos:start="119:38" pos:end="119:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:52" pos:end="121:70"><expr pos:start="119:52" pos:end="121:70"><literal type="string" pos:start="119:52" pos:end="119:67">"broken frame: "</literal>

                           <literal type="string" pos:start="121:28" pos:end="121:70">"channel len(%d) &gt; samples_per_frame(%d)\n"</literal></expr></argument>,

                           <argument pos:start="123:28" pos:end="123:41"><expr pos:start="123:28" pos:end="123:41"><name pos:start="123:28" pos:end="123:41"><name pos:start="123:28" pos:end="123:38">num_samples</name><index pos:start="123:39" pos:end="123:41">[<expr pos:start="123:40" pos:end="123:40"><name pos:start="123:40" pos:end="123:40">c</name></expr>]</index></name></expr></argument>, <argument pos:start="123:44" pos:end="123:63"><expr pos:start="123:44" pos:end="123:63"><name pos:start="123:44" pos:end="123:63"><name pos:start="123:44" pos:end="123:44">s</name><operator pos:start="123:45" pos:end="123:46">-&gt;</operator><name pos:start="123:47" pos:end="123:63">samples_per_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="125:21" pos:end="125:47">return <expr pos:start="125:28" pos:end="125:46"><name pos:start="125:28" pos:end="125:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="129:15" pos:end="141:13">else if <condition pos:start="129:23" pos:end="129:57">(<expr pos:start="129:24" pos:end="129:56"><name pos:start="129:24" pos:end="129:37"><name pos:start="129:24" pos:end="129:34">num_samples</name><index pos:start="129:35" pos:end="129:37">[<expr pos:start="129:36" pos:end="129:36"><name pos:start="129:36" pos:end="129:36">c</name></expr>]</index></name> <operator pos:start="129:39" pos:end="129:40">&lt;=</operator> <name pos:start="129:42" pos:end="129:56">min_channel_len</name></expr>)</condition> <block pos:start="129:59" pos:end="141:13">{<block_content pos:start="131:17" pos:end="139:44">

                <if_stmt pos:start="131:17" pos:end="137:17"><if pos:start="131:17" pos:end="137:17">if <condition pos:start="131:20" pos:end="131:53">(<expr pos:start="131:21" pos:end="131:52"><name pos:start="131:21" pos:end="131:34"><name pos:start="131:21" pos:end="131:31">num_samples</name><index pos:start="131:32" pos:end="131:34">[<expr pos:start="131:33" pos:end="131:33"><name pos:start="131:33" pos:end="131:33">c</name></expr>]</index></name> <operator pos:start="131:36" pos:end="131:36">&lt;</operator> <name pos:start="131:38" pos:end="131:52">min_channel_len</name></expr>)</condition> <block pos:start="131:55" pos:end="137:17">{<block_content pos:start="133:21" pos:end="135:53">

                    <expr_stmt pos:start="133:21" pos:end="133:50"><expr pos:start="133:21" pos:end="133:49"><name pos:start="133:21" pos:end="133:45">channels_for_cur_subframe</name> <operator pos:start="133:47" pos:end="133:47">=</operator> <literal type="number" pos:start="133:49" pos:end="133:49">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:53"><expr pos:start="135:21" pos:end="135:52"><name pos:start="135:21" pos:end="135:35">min_channel_len</name> <operator pos:start="135:37" pos:end="135:37">=</operator> <name pos:start="135:39" pos:end="135:52"><name pos:start="135:39" pos:end="135:49">num_samples</name><index pos:start="135:50" pos:end="135:52">[<expr pos:start="135:51" pos:end="135:51"><name pos:start="135:51" pos:end="135:51">c</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:44"><expr pos:start="139:17" pos:end="139:43"><operator pos:start="139:17" pos:end="139:18">++</operator><name pos:start="139:19" pos:end="139:43">channels_for_cur_subframe</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block> while <condition pos:start="145:13" pos:end="145:52">(<expr pos:start="145:14" pos:end="145:51"><name pos:start="145:14" pos:end="145:28">min_channel_len</name> <operator pos:start="145:30" pos:end="145:30">&lt;</operator> <name pos:start="145:32" pos:end="145:51"><name pos:start="145:32" pos:end="145:32">s</name><operator pos:start="145:33" pos:end="145:34">-&gt;</operator><name pos:start="145:35" pos:end="145:51">samples_per_frame</name></name></expr>)</condition>;</do>



    <for pos:start="149:5" pos:end="161:5">for <control pos:start="149:9" pos:end="149:41">(<init pos:start="149:10" pos:end="149:15"><expr pos:start="149:10" pos:end="149:14"><name pos:start="149:10" pos:end="149:10">c</name> <operator pos:start="149:12" pos:end="149:12">=</operator> <literal type="number" pos:start="149:14" pos:end="149:14">0</literal></expr>;</init> <condition pos:start="149:17" pos:end="149:36"><expr pos:start="149:17" pos:end="149:35"><name pos:start="149:17" pos:end="149:17">c</name> <operator pos:start="149:19" pos:end="149:19">&lt;</operator> <name pos:start="149:21" pos:end="149:35"><name pos:start="149:21" pos:end="149:21">s</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:35">num_channels</name></name></expr>;</condition> <incr pos:start="149:38" pos:end="149:40"><expr pos:start="149:38" pos:end="149:40"><name pos:start="149:38" pos:end="149:38">c</name><operator pos:start="149:39" pos:end="149:40">++</operator></expr></incr>)</control> <block pos:start="149:43" pos:end="161:5">{<block_content pos:start="151:9" pos:end="159:9">

        <decl_stmt pos:start="151:9" pos:end="151:26"><decl pos:start="151:9" pos:end="151:13"><type pos:start="151:9" pos:end="151:11"><name pos:start="151:9" pos:end="151:11">int</name></type> <name pos:start="151:13" pos:end="151:13">i</name></decl>, <decl pos:start="151:16" pos:end="151:25"><type ref="prev" pos:start="151:9" pos:end="151:11"/><name pos:start="151:16" pos:end="151:21">offset</name> <init pos:start="151:23" pos:end="151:25">= <expr pos:start="151:25" pos:end="151:25"><literal type="number" pos:start="151:25" pos:end="151:25">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="153:9" pos:end="159:9">for <control pos:start="153:13" pos:end="153:57">(<init pos:start="153:14" pos:end="153:19"><expr pos:start="153:14" pos:end="153:18"><name pos:start="153:14" pos:end="153:14">i</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>;</init> <condition pos:start="153:21" pos:end="153:52"><expr pos:start="153:21" pos:end="153:51"><name pos:start="153:21" pos:end="153:21">i</name> <operator pos:start="153:23" pos:end="153:23">&lt;</operator> <name pos:start="153:25" pos:end="153:37"><name pos:start="153:25" pos:end="153:25">s</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:34">channel</name><index pos:start="153:35" pos:end="153:37">[<expr pos:start="153:36" pos:end="153:36"><name pos:start="153:36" pos:end="153:36">c</name></expr>]</index></name><operator pos:start="153:38" pos:end="153:38">.</operator><name pos:start="153:39" pos:end="153:51">num_subframes</name></expr>;</condition> <incr pos:start="153:54" pos:end="153:56"><expr pos:start="153:54" pos:end="153:56"><name pos:start="153:54" pos:end="153:54">i</name><operator pos:start="153:55" pos:end="153:56">++</operator></expr></incr>)</control> <block pos:start="153:59" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:52">

            <expr_stmt pos:start="155:13" pos:end="155:55"><expr pos:start="155:13" pos:end="155:54"><name pos:start="155:13" pos:end="155:25"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:22">channel</name><index pos:start="155:23" pos:end="155:25">[<expr pos:start="155:24" pos:end="155:24"><name pos:start="155:24" pos:end="155:24">c</name></expr>]</index></name><operator pos:start="155:26" pos:end="155:26">.</operator><name pos:start="155:27" pos:end="155:45"><name pos:start="155:27" pos:end="155:42">subframe_offsets</name><index pos:start="155:43" pos:end="155:45">[<expr pos:start="155:44" pos:end="155:44"><name pos:start="155:44" pos:end="155:44">i</name></expr>]</index></name> <operator pos:start="155:47" pos:end="155:47">=</operator> <name pos:start="155:49" pos:end="155:54">offset</name></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:52"><expr pos:start="157:13" pos:end="157:51"><name pos:start="157:13" pos:end="157:18">offset</name> <operator pos:start="157:20" pos:end="157:21">+=</operator> <name pos:start="157:23" pos:end="157:35"><name pos:start="157:23" pos:end="157:23">s</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:32">channel</name><index pos:start="157:33" pos:end="157:35">[<expr pos:start="157:34" pos:end="157:34"><name pos:start="157:34" pos:end="157:34">c</name></expr>]</index></name><operator pos:start="157:36" pos:end="157:36">.</operator><name pos:start="157:37" pos:end="157:51"><name pos:start="157:37" pos:end="157:48">subframe_len</name><index pos:start="157:49" pos:end="157:51">[<expr pos:start="157:50" pos:end="157:50"><name pos:start="157:50" pos:end="157:50">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="165:5" pos:end="165:13">return <expr pos:start="165:12" pos:end="165:12"><literal type="number" pos:start="165:12" pos:end="165:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
