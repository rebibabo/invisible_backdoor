<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13539.c" pos:tabs="8"><function pos:start="1:1" pos:end="28:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:28">icp_pit_read</name><parameter_list pos:start="1:29" pos:end="3:43">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:49">hwaddr</name></type> <name pos:start="1:51" pos:end="1:56">offset</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:42"><decl pos:start="3:30" pos:end="3:42"><type pos:start="3:30" pos:end="3:42"><name pos:start="3:30" pos:end="3:37">unsigned</name></type> <name pos:start="3:39" pos:end="3:42">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="28:1">{<block_content pos:start="7:5" pos:end="26:54">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">icp_pit_state</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:46">= <expr pos:start="7:24" pos:end="7:46"><operator pos:start="7:24" pos:end="7:24">(</operator><name pos:start="7:25" pos:end="7:37">icp_pit_state</name> <operator pos:start="7:39" pos:end="7:39">*</operator><operator pos:start="7:40" pos:end="7:40">)</operator><name pos:start="7:41" pos:end="7:46">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:59">/* ??? Don't know the PrimeCell ID for this device.  */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:5">n</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <name pos:start="15:9" pos:end="15:14">offset</name> <operator pos:start="15:16" pos:end="15:17">&gt;&gt;</operator> <literal type="number" pos:start="15:19" pos:end="15:19">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="22:5"><if pos:start="17:5" pos:end="22:5">if <condition pos:start="17:8" pos:end="17:14">(<expr pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:9">n</name> <operator pos:start="17:11" pos:end="17:11">&gt;</operator> <literal type="number" pos:start="17:13" pos:end="17:13">2</literal></expr>)</condition> <block pos:start="17:16" pos:end="22:5">{<block_content pos:start="19:9" pos:end="19:74">

        <expr_stmt pos:start="19:9" pos:end="19:74"><expr pos:start="19:9" pos:end="19:73"><call pos:start="19:9" pos:end="19:73"><name pos:start="19:9" pos:end="19:21">qemu_log_mask</name><argument_list pos:start="19:22" pos:end="19:73">(<argument pos:start="19:23" pos:end="19:37"><expr pos:start="19:23" pos:end="19:37"><name pos:start="19:23" pos:end="19:37">LOG_GUEST_ERROR</name></expr></argument>, <argument pos:start="19:40" pos:end="19:59"><expr pos:start="19:40" pos:end="19:59"><literal type="string" pos:start="19:40" pos:end="19:59">"%s: Bad timer %d\n"</literal></expr></argument>, <argument pos:start="19:62" pos:end="19:69"><expr pos:start="19:62" pos:end="19:69"><name pos:start="19:62" pos:end="19:69">__func__</name></expr></argument>, <argument pos:start="19:72" pos:end="19:72"><expr pos:start="19:72" pos:end="19:72"><name pos:start="19:72" pos:end="19:72">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>



    <return pos:start="26:5" pos:end="26:54">return <expr pos:start="26:12" pos:end="26:53"><call pos:start="26:12" pos:end="26:53"><name pos:start="26:12" pos:end="26:25">arm_timer_read</name><argument_list pos:start="26:26" pos:end="26:53">(<argument pos:start="26:27" pos:end="26:37"><expr pos:start="26:27" pos:end="26:37"><name pos:start="26:27" pos:end="26:37"><name pos:start="26:27" pos:end="26:27">s</name><operator pos:start="26:28" pos:end="26:29">-&gt;</operator><name pos:start="26:30" pos:end="26:34">timer</name><index pos:start="26:35" pos:end="26:37">[<expr pos:start="26:36" pos:end="26:36"><name pos:start="26:36" pos:end="26:36">n</name></expr>]</index></name></expr></argument>, <argument pos:start="26:40" pos:end="26:52"><expr pos:start="26:40" pos:end="26:52"><name pos:start="26:40" pos:end="26:45">offset</name> <operator pos:start="26:47" pos:end="26:47">&amp;</operator> <literal type="number" pos:start="26:49" pos:end="26:52">0xff</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function></unit>
