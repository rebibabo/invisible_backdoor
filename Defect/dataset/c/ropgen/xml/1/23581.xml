<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23581.c" pos:tabs="8"><function pos:start="1:1" pos:end="340:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">qdm2_decode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="340:1">{<block_content pos:start="5:5" pos:end="338:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">QDM2Context</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:22">extradata</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">extradata_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">tmp_val</name></decl>, <decl pos:start="11:18" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:20">tmp</name></decl>, <decl pos:start="11:23" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:26">size</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="79:6">/* extradata parsing



    Structure:

    wave {

        frma (QDM2)

        QDCA

        QDCP

    }



    32  size (including this field)

    32  tag (=frma)

    32  type (=QDM2 or QDMC)



    32  size (including this field, in bytes)

    32  tag (=QDCA) // maybe mandatory parameters

    32  unknown (=1)

    32  channels (=2)

    32  samplerate (=44100)

    32  bitrate (=96000)

    32  block size (=4096)

    32  frame size (=256) (for one channel)

    32  packet size (=1300)



    32  size (including this field, in bytes)

    32  tag (=QDCP) // maybe some tuneable parameters

    32  float1 (=1.0)

    32  zero ?

    32  float2 (=1.0)

    32  float3 (=1.0)

    32  unknown (27)

    32  unknown (8)

    32  zero ?

    */</comment>



    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:58">(<expr pos:start="83:9" pos:end="83:57"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:25"><name pos:start="83:10" pos:end="83:14">avctx</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:25">extradata</name></name> <operator pos:start="83:27" pos:end="83:28">||</operator> <operator pos:start="83:30" pos:end="83:30">(</operator><name pos:start="83:31" pos:end="83:51"><name pos:start="83:31" pos:end="83:35">avctx</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:51">extradata_size</name></name> <operator pos:start="83:53" pos:end="83:53">&lt;</operator> <literal type="number" pos:start="83:55" pos:end="83:56">48</literal><operator pos:start="83:57" pos:end="83:57">)</operator></expr>)</condition> <block pos:start="83:60" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:18">

        <expr_stmt pos:start="85:9" pos:end="85:72"><expr pos:start="85:9" pos:end="85:71"><call pos:start="85:9" pos:end="85:71"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:71">(<argument pos:start="85:16" pos:end="85:20"><expr pos:start="85:16" pos:end="85:20"><name pos:start="85:16" pos:end="85:20">avctx</name></expr></argument>, <argument pos:start="85:23" pos:end="85:34"><expr pos:start="85:23" pos:end="85:34"><name pos:start="85:23" pos:end="85:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:37" pos:end="85:70"><expr pos:start="85:37" pos:end="85:70"><literal type="string" pos:start="85:37" pos:end="85:70">"extradata missing or truncated\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:18">return <expr pos:start="87:16" pos:end="87:17"><operator pos:start="87:16" pos:end="87:16">-</operator><literal type="number" pos:start="87:17" pos:end="87:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:33"><expr pos:start="93:5" pos:end="93:32"><name pos:start="93:5" pos:end="93:13">extradata</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <name pos:start="93:17" pos:end="93:32"><name pos:start="93:17" pos:end="93:21">avctx</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:32">extradata</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:43"><expr pos:start="95:5" pos:end="95:42"><name pos:start="95:5" pos:end="95:18">extradata_size</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <name pos:start="95:22" pos:end="95:42"><name pos:start="95:22" pos:end="95:26">avctx</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:42">extradata_size</name></name></expr>;</expr_stmt>



    <while pos:start="99:5" pos:end="109:5">while <condition pos:start="99:11" pos:end="99:30">(<expr pos:start="99:12" pos:end="99:29"><name pos:start="99:12" pos:end="99:25">extradata_size</name> <operator pos:start="99:27" pos:end="99:27">&gt;</operator> <literal type="number" pos:start="99:29" pos:end="99:29">7</literal></expr>)</condition> <block pos:start="99:32" pos:end="109:5">{<block_content pos:start="101:9" pos:end="107:25">

        <if_stmt pos:start="101:9" pos:end="103:18"><if pos:start="101:9" pos:end="103:18">if <condition pos:start="101:12" pos:end="101:45">(<expr pos:start="101:13" pos:end="101:44"><operator pos:start="101:13" pos:end="101:13">!</operator><call pos:start="101:14" pos:end="101:44"><name pos:start="101:14" pos:end="101:19">memcmp</name><argument_list pos:start="101:20" pos:end="101:44">(<argument pos:start="101:21" pos:end="101:29"><expr pos:start="101:21" pos:end="101:29"><name pos:start="101:21" pos:end="101:29">extradata</name></expr></argument>, <argument pos:start="101:32" pos:end="101:40"><expr pos:start="101:32" pos:end="101:40"><literal type="string" pos:start="101:32" pos:end="101:40">"frmaQDM"</literal></expr></argument>, <argument pos:start="101:43" pos:end="101:43"><expr pos:start="101:43" pos:end="101:43"><literal type="number" pos:start="101:43" pos:end="101:43">7</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:18"><block_content pos:start="103:13" pos:end="103:18">

            <break pos:start="103:13" pos:end="103:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:20"><expr pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:17">extradata</name><operator pos:start="105:18" pos:end="105:19">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:25"><expr pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:22">extradata_size</name><operator pos:start="107:23" pos:end="107:24">--</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="113:5" pos:end="121:5"><if pos:start="113:5" pos:end="121:5">if <condition pos:start="113:8" pos:end="113:28">(<expr pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:22">extradata_size</name> <operator pos:start="113:24" pos:end="113:24">&lt;</operator> <literal type="number" pos:start="113:26" pos:end="113:27">12</literal></expr>)</condition> <block pos:start="113:30" pos:end="121:5">{<block_content pos:start="115:9" pos:end="119:18">

        <expr_stmt pos:start="115:9" pos:end="117:31"><expr pos:start="115:9" pos:end="117:30"><call pos:start="115:9" pos:end="117:30"><name pos:start="115:9" pos:end="115:14">av_log</name><argument_list pos:start="115:15" pos:end="117:30">(<argument pos:start="115:16" pos:end="115:20"><expr pos:start="115:16" pos:end="115:20"><name pos:start="115:16" pos:end="115:20">avctx</name></expr></argument>, <argument pos:start="115:23" pos:end="115:34"><expr pos:start="115:23" pos:end="115:34"><name pos:start="115:23" pos:end="115:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="115:37" pos:end="115:65"><expr pos:start="115:37" pos:end="115:65"><literal type="string" pos:start="115:37" pos:end="115:65">"not enough extradata (%i)\n"</literal></expr></argument>,

               <argument pos:start="117:16" pos:end="117:29"><expr pos:start="117:16" pos:end="117:29"><name pos:start="117:16" pos:end="117:29">extradata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="119:9" pos:end="119:18">return <expr pos:start="119:16" pos:end="119:17"><operator pos:start="119:16" pos:end="119:16">-</operator><literal type="number" pos:start="119:17" pos:end="119:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="131:5"><if pos:start="125:5" pos:end="131:5">if <condition pos:start="125:8" pos:end="125:40">(<expr pos:start="125:9" pos:end="125:39"><call pos:start="125:9" pos:end="125:39"><name pos:start="125:9" pos:end="125:14">memcmp</name><argument_list pos:start="125:15" pos:end="125:39">(<argument pos:start="125:16" pos:end="125:24"><expr pos:start="125:16" pos:end="125:24"><name pos:start="125:16" pos:end="125:24">extradata</name></expr></argument>, <argument pos:start="125:27" pos:end="125:35"><expr pos:start="125:27" pos:end="125:35"><literal type="string" pos:start="125:27" pos:end="125:35">"frmaQDM"</literal></expr></argument>, <argument pos:start="125:38" pos:end="125:38"><expr pos:start="125:38" pos:end="125:38"><literal type="number" pos:start="125:38" pos:end="125:38">7</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:42" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:18">

        <expr_stmt pos:start="127:9" pos:end="127:73"><expr pos:start="127:9" pos:end="127:72"><call pos:start="127:9" pos:end="127:72"><name pos:start="127:9" pos:end="127:14">av_log</name><argument_list pos:start="127:15" pos:end="127:72">(<argument pos:start="127:16" pos:end="127:20"><expr pos:start="127:16" pos:end="127:20"><name pos:start="127:16" pos:end="127:20">avctx</name></expr></argument>, <argument pos:start="127:23" pos:end="127:34"><expr pos:start="127:23" pos:end="127:34"><name pos:start="127:23" pos:end="127:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:37" pos:end="127:71"><expr pos:start="127:37" pos:end="127:71"><literal type="string" pos:start="127:37" pos:end="127:71">"invalid headers, QDM? not found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="129:9" pos:end="129:18">return <expr pos:start="129:16" pos:end="129:17"><operator pos:start="129:16" pos:end="129:16">-</operator><literal type="number" pos:start="129:17" pos:end="129:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="135:5" pos:end="143:5"><if pos:start="135:5" pos:end="143:5">if <condition pos:start="135:8" pos:end="135:28">(<expr pos:start="135:9" pos:end="135:27"><name pos:start="135:9" pos:end="135:20"><name pos:start="135:9" pos:end="135:17">extradata</name><index pos:start="135:18" pos:end="135:20">[<expr pos:start="135:19" pos:end="135:19"><literal type="number" pos:start="135:19" pos:end="135:19">7</literal></expr>]</index></name> <operator pos:start="135:22" pos:end="135:23">==</operator> <literal type="char" pos:start="135:25" pos:end="135:27">'C'</literal></expr>)</condition> <block pos:start="135:30" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:18">

<comment type="line" pos:start="137:1" pos:end="137:25">//        s-&gt;is_qdmc = 1;</comment>

        <expr_stmt pos:start="139:9" pos:end="139:90"><expr pos:start="139:9" pos:end="139:89"><call pos:start="139:9" pos:end="139:89"><name pos:start="139:9" pos:end="139:14">av_log</name><argument_list pos:start="139:15" pos:end="139:89">(<argument pos:start="139:16" pos:end="139:20"><expr pos:start="139:16" pos:end="139:20"><name pos:start="139:16" pos:end="139:20">avctx</name></expr></argument>, <argument pos:start="139:23" pos:end="139:34"><expr pos:start="139:23" pos:end="139:34"><name pos:start="139:23" pos:end="139:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:37" pos:end="139:88"><expr pos:start="139:37" pos:end="139:88"><literal type="string" pos:start="139:37" pos:end="139:88">"stream is QDMC version 1, which is not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="141:9" pos:end="141:18">return <expr pos:start="141:16" pos:end="141:17"><operator pos:start="141:16" pos:end="141:16">-</operator><literal type="number" pos:start="141:17" pos:end="141:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:19"><expr pos:start="147:5" pos:end="147:18"><name pos:start="147:5" pos:end="147:13">extradata</name> <operator pos:start="147:15" pos:end="147:16">+=</operator> <literal type="number" pos:start="147:18" pos:end="147:18">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:24"><expr pos:start="149:5" pos:end="149:23"><name pos:start="149:5" pos:end="149:18">extradata_size</name> <operator pos:start="149:20" pos:end="149:21">-=</operator> <literal type="number" pos:start="149:23" pos:end="149:23">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:30"><expr pos:start="153:5" pos:end="153:29"><name pos:start="153:5" pos:end="153:8">size</name> <operator pos:start="153:10" pos:end="153:10">=</operator> <call pos:start="153:12" pos:end="153:29"><name pos:start="153:12" pos:end="153:18">AV_RB32</name><argument_list pos:start="153:19" pos:end="153:29">(<argument pos:start="153:20" pos:end="153:28"><expr pos:start="153:20" pos:end="153:28"><name pos:start="153:20" pos:end="153:28">extradata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="157:5" pos:end="165:5"><if pos:start="157:5" pos:end="165:5">if<condition pos:start="157:7" pos:end="157:29">(<expr pos:start="157:8" pos:end="157:28"><name pos:start="157:8" pos:end="157:11">size</name> <operator pos:start="157:13" pos:end="157:13">&gt;</operator> <name pos:start="157:15" pos:end="157:28">extradata_size</name></expr>)</condition><block pos:start="157:30" pos:end="165:5">{<block_content pos:start="159:9" pos:end="163:18">

        <expr_stmt pos:start="159:9" pos:end="161:37"><expr pos:start="159:9" pos:end="161:36"><call pos:start="159:9" pos:end="161:36"><name pos:start="159:9" pos:end="159:14">av_log</name><argument_list pos:start="159:15" pos:end="161:36">(<argument pos:start="159:16" pos:end="159:20"><expr pos:start="159:16" pos:end="159:20"><name pos:start="159:16" pos:end="159:20">avctx</name></expr></argument>, <argument pos:start="159:23" pos:end="159:34"><expr pos:start="159:23" pos:end="159:34"><name pos:start="159:23" pos:end="159:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="159:37" pos:end="159:73"><expr pos:start="159:37" pos:end="159:73"><literal type="string" pos:start="159:37" pos:end="159:73">"extradata size too small, %i &lt; %i\n"</literal></expr></argument>,

               <argument pos:start="161:16" pos:end="161:29"><expr pos:start="161:16" pos:end="161:29"><name pos:start="161:16" pos:end="161:29">extradata_size</name></expr></argument>, <argument pos:start="161:32" pos:end="161:35"><expr pos:start="161:32" pos:end="161:35"><name pos:start="161:32" pos:end="161:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="163:9" pos:end="163:18">return <expr pos:start="163:16" pos:end="163:17"><operator pos:start="163:16" pos:end="163:16">-</operator><literal type="number" pos:start="163:17" pos:end="163:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:19"><expr pos:start="169:5" pos:end="169:18"><name pos:start="169:5" pos:end="169:13">extradata</name> <operator pos:start="169:15" pos:end="169:16">+=</operator> <literal type="number" pos:start="169:18" pos:end="169:18">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:52"><expr pos:start="171:5" pos:end="171:51"><call pos:start="171:5" pos:end="171:51"><name pos:start="171:5" pos:end="171:10">av_log</name><argument_list pos:start="171:11" pos:end="171:51">(<argument pos:start="171:12" pos:end="171:16"><expr pos:start="171:12" pos:end="171:16"><name pos:start="171:12" pos:end="171:16">avctx</name></expr></argument>, <argument pos:start="171:19" pos:end="171:30"><expr pos:start="171:19" pos:end="171:30"><name pos:start="171:19" pos:end="171:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="171:33" pos:end="171:44"><expr pos:start="171:33" pos:end="171:44"><literal type="string" pos:start="171:33" pos:end="171:44">"size: %d\n"</literal></expr></argument>, <argument pos:start="171:47" pos:end="171:50"><expr pos:start="171:47" pos:end="171:50"><name pos:start="171:47" pos:end="171:50">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="173:5" pos:end="179:5"><if pos:start="173:5" pos:end="179:5">if <condition pos:start="173:8" pos:end="173:55">(<expr pos:start="173:9" pos:end="173:54"><call pos:start="173:9" pos:end="173:26"><name pos:start="173:9" pos:end="173:15">AV_RB32</name><argument_list pos:start="173:16" pos:end="173:26">(<argument pos:start="173:17" pos:end="173:25"><expr pos:start="173:17" pos:end="173:25"><name pos:start="173:17" pos:end="173:25">extradata</name></expr></argument>)</argument_list></call> <operator pos:start="173:28" pos:end="173:29">!=</operator> <call pos:start="173:31" pos:end="173:54"><name pos:start="173:31" pos:end="173:37">MKBETAG</name><argument_list pos:start="173:38" pos:end="173:54">(<argument pos:start="173:39" pos:end="173:41"><expr pos:start="173:39" pos:end="173:41"><literal type="char" pos:start="173:39" pos:end="173:41">'Q'</literal></expr></argument>,<argument pos:start="173:43" pos:end="173:45"><expr pos:start="173:43" pos:end="173:45"><literal type="char" pos:start="173:43" pos:end="173:45">'D'</literal></expr></argument>,<argument pos:start="173:47" pos:end="173:49"><expr pos:start="173:47" pos:end="173:49"><literal type="char" pos:start="173:47" pos:end="173:49">'C'</literal></expr></argument>,<argument pos:start="173:51" pos:end="173:53"><expr pos:start="173:51" pos:end="173:53"><literal type="char" pos:start="173:51" pos:end="173:53">'A'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="173:57" pos:end="179:5">{<block_content pos:start="175:9" pos:end="177:18">

        <expr_stmt pos:start="175:9" pos:end="175:75"><expr pos:start="175:9" pos:end="175:74"><call pos:start="175:9" pos:end="175:74"><name pos:start="175:9" pos:end="175:14">av_log</name><argument_list pos:start="175:15" pos:end="175:74">(<argument pos:start="175:16" pos:end="175:20"><expr pos:start="175:16" pos:end="175:20"><name pos:start="175:16" pos:end="175:20">avctx</name></expr></argument>, <argument pos:start="175:23" pos:end="175:34"><expr pos:start="175:23" pos:end="175:34"><name pos:start="175:23" pos:end="175:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="175:37" pos:end="175:73"><expr pos:start="175:37" pos:end="175:73"><literal type="string" pos:start="175:37" pos:end="175:73">"invalid extradata, expecting QDCA\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="177:9" pos:end="177:18">return <expr pos:start="177:16" pos:end="177:17"><operator pos:start="177:16" pos:end="177:16">-</operator><literal type="number" pos:start="177:17" pos:end="177:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:19"><expr pos:start="183:5" pos:end="183:18"><name pos:start="183:5" pos:end="183:13">extradata</name> <operator pos:start="183:15" pos:end="183:16">+=</operator> <literal type="number" pos:start="183:18" pos:end="183:18">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:72"><expr pos:start="187:5" pos:end="187:71"><name pos:start="187:5" pos:end="187:19"><name pos:start="187:5" pos:end="187:9">avctx</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:19">channels</name></name> <operator pos:start="187:21" pos:end="187:21">=</operator> <name pos:start="187:23" pos:end="187:36"><name pos:start="187:23" pos:end="187:23">s</name><operator pos:start="187:24" pos:end="187:25">-&gt;</operator><name pos:start="187:26" pos:end="187:36">nb_channels</name></name> <operator pos:start="187:38" pos:end="187:38">=</operator> <name pos:start="187:40" pos:end="187:50"><name pos:start="187:40" pos:end="187:40">s</name><operator pos:start="187:41" pos:end="187:42">-&gt;</operator><name pos:start="187:43" pos:end="187:50">channels</name></name> <operator pos:start="187:52" pos:end="187:52">=</operator> <call pos:start="187:54" pos:end="187:71"><name pos:start="187:54" pos:end="187:60">AV_RB32</name><argument_list pos:start="187:61" pos:end="187:71">(<argument pos:start="187:62" pos:end="187:70"><expr pos:start="187:62" pos:end="187:70"><name pos:start="187:62" pos:end="187:70">extradata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:19"><expr pos:start="189:5" pos:end="189:18"><name pos:start="189:5" pos:end="189:13">extradata</name> <operator pos:start="189:15" pos:end="189:16">+=</operator> <literal type="number" pos:start="189:18" pos:end="189:18">4</literal></expr>;</expr_stmt>

    <if_stmt pos:start="191:5" pos:end="196:44"><if pos:start="191:5" pos:end="196:44">if <condition pos:start="191:8" pos:end="191:39">(<expr pos:start="191:9" pos:end="191:38"><name pos:start="191:9" pos:end="191:19"><name pos:start="191:9" pos:end="191:9">s</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:19">channels</name></name> <operator pos:start="191:21" pos:end="191:21">&gt;</operator> <name pos:start="191:23" pos:end="191:38">MPA_MAX_CHANNELS</name></expr>)</condition><block type="pseudo" pos:start="196:5" pos:end="196:44"><block_content pos:start="196:5" pos:end="196:44">




    <expr_stmt pos:start="196:5" pos:end="196:44"><expr pos:start="196:5" pos:end="196:43"><name pos:start="196:5" pos:end="196:22"><name pos:start="196:5" pos:end="196:9">avctx</name><operator pos:start="196:10" pos:end="196:11">-&gt;</operator><name pos:start="196:12" pos:end="196:22">sample_rate</name></name> <operator pos:start="196:24" pos:end="196:24">=</operator> <call pos:start="196:26" pos:end="196:43"><name pos:start="196:26" pos:end="196:32">AV_RB32</name><argument_list pos:start="196:33" pos:end="196:43">(<argument pos:start="196:34" pos:end="196:42"><expr pos:start="196:34" pos:end="196:42"><name pos:start="196:34" pos:end="196:42">extradata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="198:5" pos:end="198:19"><expr pos:start="198:5" pos:end="198:18"><name pos:start="198:5" pos:end="198:13">extradata</name> <operator pos:start="198:15" pos:end="198:16">+=</operator> <literal type="number" pos:start="198:18" pos:end="198:18">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="202:5" pos:end="202:41"><expr pos:start="202:5" pos:end="202:40"><name pos:start="202:5" pos:end="202:19"><name pos:start="202:5" pos:end="202:9">avctx</name><operator pos:start="202:10" pos:end="202:11">-&gt;</operator><name pos:start="202:12" pos:end="202:19">bit_rate</name></name> <operator pos:start="202:21" pos:end="202:21">=</operator> <call pos:start="202:23" pos:end="202:40"><name pos:start="202:23" pos:end="202:29">AV_RB32</name><argument_list pos:start="202:30" pos:end="202:40">(<argument pos:start="202:31" pos:end="202:39"><expr pos:start="202:31" pos:end="202:39"><name pos:start="202:31" pos:end="202:39">extradata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="204:5" pos:end="204:19"><expr pos:start="204:5" pos:end="204:18"><name pos:start="204:5" pos:end="204:13">extradata</name> <operator pos:start="204:15" pos:end="204:16">+=</operator> <literal type="number" pos:start="204:18" pos:end="204:18">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="208:5" pos:end="208:39"><expr pos:start="208:5" pos:end="208:38"><name pos:start="208:5" pos:end="208:17"><name pos:start="208:5" pos:end="208:5">s</name><operator pos:start="208:6" pos:end="208:7">-&gt;</operator><name pos:start="208:8" pos:end="208:17">group_size</name></name> <operator pos:start="208:19" pos:end="208:19">=</operator> <call pos:start="208:21" pos:end="208:38"><name pos:start="208:21" pos:end="208:27">AV_RB32</name><argument_list pos:start="208:28" pos:end="208:38">(<argument pos:start="208:29" pos:end="208:37"><expr pos:start="208:29" pos:end="208:37"><name pos:start="208:29" pos:end="208:37">extradata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="210:5" pos:end="210:19"><expr pos:start="210:5" pos:end="210:18"><name pos:start="210:5" pos:end="210:13">extradata</name> <operator pos:start="210:15" pos:end="210:16">+=</operator> <literal type="number" pos:start="210:18" pos:end="210:18">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="214:5" pos:end="214:37"><expr pos:start="214:5" pos:end="214:36"><name pos:start="214:5" pos:end="214:15"><name pos:start="214:5" pos:end="214:5">s</name><operator pos:start="214:6" pos:end="214:7">-&gt;</operator><name pos:start="214:8" pos:end="214:15">fft_size</name></name> <operator pos:start="214:17" pos:end="214:17">=</operator> <call pos:start="214:19" pos:end="214:36"><name pos:start="214:19" pos:end="214:25">AV_RB32</name><argument_list pos:start="214:26" pos:end="214:36">(<argument pos:start="214:27" pos:end="214:35"><expr pos:start="214:27" pos:end="214:35"><name pos:start="214:27" pos:end="214:35">extradata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="216:5" pos:end="216:19"><expr pos:start="216:5" pos:end="216:18"><name pos:start="216:5" pos:end="216:13">extradata</name> <operator pos:start="216:15" pos:end="216:16">+=</operator> <literal type="number" pos:start="216:18" pos:end="216:18">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="220:5" pos:end="220:42"><expr pos:start="220:5" pos:end="220:41"><name pos:start="220:5" pos:end="220:20"><name pos:start="220:5" pos:end="220:5">s</name><operator pos:start="220:6" pos:end="220:7">-&gt;</operator><name pos:start="220:8" pos:end="220:20">checksum_size</name></name> <operator pos:start="220:22" pos:end="220:22">=</operator> <call pos:start="220:24" pos:end="220:41"><name pos:start="220:24" pos:end="220:30">AV_RB32</name><argument_list pos:start="220:31" pos:end="220:41">(<argument pos:start="220:32" pos:end="220:40"><expr pos:start="220:32" pos:end="220:40"><name pos:start="220:32" pos:end="220:40">extradata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="224:5" pos:end="224:44"><expr pos:start="224:5" pos:end="224:43"><name pos:start="224:5" pos:end="224:16"><name pos:start="224:5" pos:end="224:5">s</name><operator pos:start="224:6" pos:end="224:7">-&gt;</operator><name pos:start="224:8" pos:end="224:16">fft_order</name></name> <operator pos:start="224:18" pos:end="224:18">=</operator> <call pos:start="224:20" pos:end="224:39"><name pos:start="224:20" pos:end="224:26">av_log2</name><argument_list pos:start="224:27" pos:end="224:39">(<argument pos:start="224:28" pos:end="224:38"><expr pos:start="224:28" pos:end="224:38"><name pos:start="224:28" pos:end="224:38"><name pos:start="224:28" pos:end="224:28">s</name><operator pos:start="224:29" pos:end="224:30">-&gt;</operator><name pos:start="224:31" pos:end="224:38">fft_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="224:41" pos:end="224:41">+</operator> <literal type="number" pos:start="224:43" pos:end="224:43">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="226:5" pos:end="226:40"><expr pos:start="226:5" pos:end="226:39"><name pos:start="226:5" pos:end="226:21"><name pos:start="226:5" pos:end="226:5">s</name><operator pos:start="226:6" pos:end="226:7">-&gt;</operator><name pos:start="226:8" pos:end="226:21">fft_frame_size</name></name> <operator pos:start="226:23" pos:end="226:23">=</operator> <literal type="number" pos:start="226:25" pos:end="226:25">2</literal> <operator pos:start="226:27" pos:end="226:27">*</operator> <name pos:start="226:29" pos:end="226:39"><name pos:start="226:29" pos:end="226:29">s</name><operator pos:start="226:30" pos:end="226:31">-&gt;</operator><name pos:start="226:32" pos:end="226:39">fft_size</name></name></expr>;</expr_stmt> <comment type="line" pos:start="226:42" pos:end="226:66">// complex has two floats</comment>



    <comment type="line" pos:start="230:5" pos:end="230:41">// something like max decodable tones</comment>

    <expr_stmt pos:start="232:5" pos:end="232:48"><expr pos:start="232:5" pos:end="232:47"><name pos:start="232:5" pos:end="232:18"><name pos:start="232:5" pos:end="232:5">s</name><operator pos:start="232:6" pos:end="232:7">-&gt;</operator><name pos:start="232:8" pos:end="232:18">group_order</name></name> <operator pos:start="232:20" pos:end="232:20">=</operator> <call pos:start="232:22" pos:end="232:43"><name pos:start="232:22" pos:end="232:28">av_log2</name><argument_list pos:start="232:29" pos:end="232:43">(<argument pos:start="232:30" pos:end="232:42"><expr pos:start="232:30" pos:end="232:42"><name pos:start="232:30" pos:end="232:42"><name pos:start="232:30" pos:end="232:30">s</name><operator pos:start="232:31" pos:end="232:32">-&gt;</operator><name pos:start="232:33" pos:end="232:42">group_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="232:45" pos:end="232:45">+</operator> <literal type="number" pos:start="232:47" pos:end="232:47">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="234:5" pos:end="234:39"><expr pos:start="234:5" pos:end="234:38"><name pos:start="234:5" pos:end="234:17"><name pos:start="234:5" pos:end="234:5">s</name><operator pos:start="234:6" pos:end="234:7">-&gt;</operator><name pos:start="234:8" pos:end="234:17">frame_size</name></name> <operator pos:start="234:19" pos:end="234:19">=</operator> <name pos:start="234:21" pos:end="234:33"><name pos:start="234:21" pos:end="234:21">s</name><operator pos:start="234:22" pos:end="234:23">-&gt;</operator><name pos:start="234:24" pos:end="234:33">group_size</name></name> <operator pos:start="234:35" pos:end="234:35">/</operator> <literal type="number" pos:start="234:37" pos:end="234:38">16</literal></expr>;</expr_stmt> <comment type="line" pos:start="234:41" pos:end="234:72">// 16 iterations per super block</comment>





    <expr_stmt pos:start="240:5" pos:end="240:39"><expr pos:start="240:5" pos:end="240:38"><name pos:start="240:5" pos:end="240:19"><name pos:start="240:5" pos:end="240:5">s</name><operator pos:start="240:6" pos:end="240:7">-&gt;</operator><name pos:start="240:8" pos:end="240:19">sub_sampling</name></name> <operator pos:start="240:21" pos:end="240:21">=</operator> <name pos:start="240:23" pos:end="240:34"><name pos:start="240:23" pos:end="240:23">s</name><operator pos:start="240:24" pos:end="240:25">-&gt;</operator><name pos:start="240:26" pos:end="240:34">fft_order</name></name> <operator pos:start="240:36" pos:end="240:36">-</operator> <literal type="number" pos:start="240:38" pos:end="240:38">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="242:5" pos:end="242:60"><expr pos:start="242:5" pos:end="242:59"><name pos:start="242:5" pos:end="242:22"><name pos:start="242:5" pos:end="242:5">s</name><operator pos:start="242:6" pos:end="242:7">-&gt;</operator><name pos:start="242:8" pos:end="242:22">frequency_range</name></name> <operator pos:start="242:24" pos:end="242:24">=</operator> <literal type="number" pos:start="242:26" pos:end="242:28">255</literal> <operator pos:start="242:30" pos:end="242:30">/</operator> <operator pos:start="242:32" pos:end="242:32">(</operator><literal type="number" pos:start="242:33" pos:end="242:33">1</literal> <operator pos:start="242:35" pos:end="242:36">&lt;&lt;</operator> <operator pos:start="242:38" pos:end="242:38">(</operator><literal type="number" pos:start="242:39" pos:end="242:41">2</literal> <operator pos:start="242:41" pos:end="242:41">-</operator> <name pos:start="242:43" pos:end="242:57"><name pos:start="242:43" pos:end="242:43">s</name><operator pos:start="242:44" pos:end="242:45">-&gt;</operator><name pos:start="242:46" pos:end="242:57">sub_sampling</name></name><operator pos:start="242:58" pos:end="242:58">)</operator><operator pos:start="242:59" pos:end="242:59">)</operator></expr>;</expr_stmt>



    <switch pos:start="246:5" pos:end="262:5">switch <condition pos:start="246:12" pos:end="246:52">(<expr pos:start="246:13" pos:end="246:51"><operator pos:start="246:13" pos:end="246:13">(</operator><name pos:start="246:14" pos:end="246:28"><name pos:start="246:14" pos:end="246:14">s</name><operator pos:start="246:15" pos:end="246:16">-&gt;</operator><name pos:start="246:17" pos:end="246:28">sub_sampling</name></name> <operator pos:start="246:30" pos:end="246:30">*</operator> <literal type="number" pos:start="246:32" pos:end="246:34">2</literal> <operator pos:start="246:34" pos:end="246:34">+</operator> <name pos:start="246:36" pos:end="246:46"><name pos:start="246:36" pos:end="246:36">s</name><operator pos:start="246:37" pos:end="246:38">-&gt;</operator><name pos:start="246:39" pos:end="246:46">channels</name></name> <operator pos:start="246:48" pos:end="246:48">-</operator> <literal type="number" pos:start="246:50" pos:end="246:50">1</literal><operator pos:start="246:51" pos:end="246:51">)</operator></expr>)</condition> <block pos:start="246:54" pos:end="262:5">{<block_content pos:start="248:9" pos:end="260:44">

        <case pos:start="248:9" pos:end="248:15">case <expr pos:start="248:14" pos:end="248:14"><literal type="number" pos:start="248:14" pos:end="248:14">0</literal></expr>:</case> <expr_stmt pos:start="248:17" pos:end="248:25"><expr pos:start="248:17" pos:end="248:24"><name pos:start="248:17" pos:end="248:19">tmp</name> <operator pos:start="248:21" pos:end="248:21">=</operator> <literal type="number" pos:start="248:23" pos:end="248:24">40</literal></expr>;</expr_stmt> <break pos:start="248:27" pos:end="248:32">break;</break>

        <case pos:start="250:9" pos:end="250:15">case <expr pos:start="250:14" pos:end="250:14"><literal type="number" pos:start="250:14" pos:end="250:14">1</literal></expr>:</case> <expr_stmt pos:start="250:17" pos:end="250:25"><expr pos:start="250:17" pos:end="250:24"><name pos:start="250:17" pos:end="250:19">tmp</name> <operator pos:start="250:21" pos:end="250:21">=</operator> <literal type="number" pos:start="250:23" pos:end="250:24">48</literal></expr>;</expr_stmt> <break pos:start="250:27" pos:end="250:32">break;</break>

        <case pos:start="252:9" pos:end="252:15">case <expr pos:start="252:14" pos:end="252:14"><literal type="number" pos:start="252:14" pos:end="252:14">2</literal></expr>:</case> <expr_stmt pos:start="252:17" pos:end="252:25"><expr pos:start="252:17" pos:end="252:24"><name pos:start="252:17" pos:end="252:19">tmp</name> <operator pos:start="252:21" pos:end="252:21">=</operator> <literal type="number" pos:start="252:23" pos:end="252:24">56</literal></expr>;</expr_stmt> <break pos:start="252:27" pos:end="252:32">break;</break>

        <case pos:start="254:9" pos:end="254:15">case <expr pos:start="254:14" pos:end="254:14"><literal type="number" pos:start="254:14" pos:end="254:14">3</literal></expr>:</case> <expr_stmt pos:start="254:17" pos:end="254:25"><expr pos:start="254:17" pos:end="254:24"><name pos:start="254:17" pos:end="254:19">tmp</name> <operator pos:start="254:21" pos:end="254:21">=</operator> <literal type="number" pos:start="254:23" pos:end="254:24">72</literal></expr>;</expr_stmt> <break pos:start="254:27" pos:end="254:32">break;</break>

        <case pos:start="256:9" pos:end="256:15">case <expr pos:start="256:14" pos:end="256:14"><literal type="number" pos:start="256:14" pos:end="256:14">4</literal></expr>:</case> <expr_stmt pos:start="256:17" pos:end="256:25"><expr pos:start="256:17" pos:end="256:24"><name pos:start="256:17" pos:end="256:19">tmp</name> <operator pos:start="256:21" pos:end="256:21">=</operator> <literal type="number" pos:start="256:23" pos:end="256:24">80</literal></expr>;</expr_stmt> <break pos:start="256:27" pos:end="256:32">break;</break>

        <case pos:start="258:9" pos:end="258:15">case <expr pos:start="258:14" pos:end="258:14"><literal type="number" pos:start="258:14" pos:end="258:14">5</literal></expr>:</case> <expr_stmt pos:start="258:17" pos:end="258:26"><expr pos:start="258:17" pos:end="258:25"><name pos:start="258:17" pos:end="258:19">tmp</name> <operator pos:start="258:21" pos:end="258:21">=</operator> <literal type="number" pos:start="258:23" pos:end="258:25">100</literal></expr>;</expr_stmt><break pos:start="258:27" pos:end="258:32">break;</break>

        <default pos:start="260:9" pos:end="260:16">default:</default> <expr_stmt pos:start="260:18" pos:end="260:37"><expr pos:start="260:18" pos:end="260:36"><name pos:start="260:18" pos:end="260:20">tmp</name><operator pos:start="260:21" pos:end="260:21">=</operator><name pos:start="260:22" pos:end="260:36"><name pos:start="260:22" pos:end="260:22">s</name><operator pos:start="260:23" pos:end="260:24">-&gt;</operator><name pos:start="260:25" pos:end="260:36">sub_sampling</name></name></expr>;</expr_stmt> <break pos:start="260:39" pos:end="260:44">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="264:5" pos:end="264:16"><expr pos:start="264:5" pos:end="264:15"><name pos:start="264:5" pos:end="264:11">tmp_val</name> <operator pos:start="264:13" pos:end="264:13">=</operator> <literal type="number" pos:start="264:15" pos:end="264:15">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="266:5" pos:end="266:53"><if pos:start="266:5" pos:end="266:53">if <condition pos:start="266:8" pos:end="266:39">(<expr pos:start="266:9" pos:end="266:38"><operator pos:start="266:9" pos:end="266:9">(</operator><name pos:start="266:10" pos:end="266:12">tmp</name> <operator pos:start="266:14" pos:end="266:14">*</operator> <literal type="number" pos:start="266:16" pos:end="266:19">1000</literal><operator pos:start="266:20" pos:end="266:20">)</operator> <operator pos:start="266:22" pos:end="266:22">&lt;</operator> <name pos:start="266:24" pos:end="266:38"><name pos:start="266:24" pos:end="266:28">avctx</name><operator pos:start="266:29" pos:end="266:30">-&gt;</operator><name pos:start="266:31" pos:end="266:38">bit_rate</name></name></expr>)</condition><block type="pseudo" pos:start="266:42" pos:end="266:53"><block_content pos:start="266:42" pos:end="266:53">  <expr_stmt pos:start="266:42" pos:end="266:53"><expr pos:start="266:42" pos:end="266:52"><name pos:start="266:42" pos:end="266:48">tmp_val</name> <operator pos:start="266:50" pos:end="266:50">=</operator> <literal type="number" pos:start="266:52" pos:end="266:52">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="268:5" pos:end="268:53"><if pos:start="268:5" pos:end="268:53">if <condition pos:start="268:8" pos:end="268:39">(<expr pos:start="268:9" pos:end="268:38"><operator pos:start="268:9" pos:end="268:9">(</operator><name pos:start="268:10" pos:end="268:12">tmp</name> <operator pos:start="268:14" pos:end="268:14">*</operator> <literal type="number" pos:start="268:16" pos:end="268:19">1440</literal><operator pos:start="268:20" pos:end="268:20">)</operator> <operator pos:start="268:22" pos:end="268:22">&lt;</operator> <name pos:start="268:24" pos:end="268:38"><name pos:start="268:24" pos:end="268:28">avctx</name><operator pos:start="268:29" pos:end="268:30">-&gt;</operator><name pos:start="268:31" pos:end="268:38">bit_rate</name></name></expr>)</condition><block type="pseudo" pos:start="268:42" pos:end="268:53"><block_content pos:start="268:42" pos:end="268:53">  <expr_stmt pos:start="268:42" pos:end="268:53"><expr pos:start="268:42" pos:end="268:52"><name pos:start="268:42" pos:end="268:48">tmp_val</name> <operator pos:start="268:50" pos:end="268:50">=</operator> <literal type="number" pos:start="268:52" pos:end="268:52">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="270:5" pos:end="270:53"><if pos:start="270:5" pos:end="270:53">if <condition pos:start="270:8" pos:end="270:39">(<expr pos:start="270:9" pos:end="270:38"><operator pos:start="270:9" pos:end="270:9">(</operator><name pos:start="270:10" pos:end="270:12">tmp</name> <operator pos:start="270:14" pos:end="270:14">*</operator> <literal type="number" pos:start="270:16" pos:end="270:19">1760</literal><operator pos:start="270:20" pos:end="270:20">)</operator> <operator pos:start="270:22" pos:end="270:22">&lt;</operator> <name pos:start="270:24" pos:end="270:38"><name pos:start="270:24" pos:end="270:28">avctx</name><operator pos:start="270:29" pos:end="270:30">-&gt;</operator><name pos:start="270:31" pos:end="270:38">bit_rate</name></name></expr>)</condition><block type="pseudo" pos:start="270:42" pos:end="270:53"><block_content pos:start="270:42" pos:end="270:53">  <expr_stmt pos:start="270:42" pos:end="270:53"><expr pos:start="270:42" pos:end="270:52"><name pos:start="270:42" pos:end="270:48">tmp_val</name> <operator pos:start="270:50" pos:end="270:50">=</operator> <literal type="number" pos:start="270:52" pos:end="270:52">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="272:5" pos:end="272:53"><if pos:start="272:5" pos:end="272:53">if <condition pos:start="272:8" pos:end="272:39">(<expr pos:start="272:9" pos:end="272:38"><operator pos:start="272:9" pos:end="272:9">(</operator><name pos:start="272:10" pos:end="272:12">tmp</name> <operator pos:start="272:14" pos:end="272:14">*</operator> <literal type="number" pos:start="272:16" pos:end="272:19">2240</literal><operator pos:start="272:20" pos:end="272:20">)</operator> <operator pos:start="272:22" pos:end="272:22">&lt;</operator> <name pos:start="272:24" pos:end="272:38"><name pos:start="272:24" pos:end="272:28">avctx</name><operator pos:start="272:29" pos:end="272:30">-&gt;</operator><name pos:start="272:31" pos:end="272:38">bit_rate</name></name></expr>)</condition><block type="pseudo" pos:start="272:42" pos:end="272:53"><block_content pos:start="272:42" pos:end="272:53">  <expr_stmt pos:start="272:42" pos:end="272:53"><expr pos:start="272:42" pos:end="272:52"><name pos:start="272:42" pos:end="272:48">tmp_val</name> <operator pos:start="272:50" pos:end="272:50">=</operator> <literal type="number" pos:start="272:52" pos:end="272:52">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="274:5" pos:end="274:33"><expr pos:start="274:5" pos:end="274:32"><name pos:start="274:5" pos:end="274:22"><name pos:start="274:5" pos:end="274:5">s</name><operator pos:start="274:6" pos:end="274:7">-&gt;</operator><name pos:start="274:8" pos:end="274:22">cm_table_select</name></name> <operator pos:start="274:24" pos:end="274:24">=</operator> <name pos:start="274:26" pos:end="274:32">tmp_val</name></expr>;</expr_stmt>



    <if_stmt pos:start="278:5" pos:end="284:55"><if pos:start="278:5" pos:end="280:19">if <condition pos:start="278:8" pos:end="278:29">(<expr pos:start="278:9" pos:end="278:28"><name pos:start="278:9" pos:end="278:23"><name pos:start="278:9" pos:end="278:9">s</name><operator pos:start="278:10" pos:end="278:11">-&gt;</operator><name pos:start="278:12" pos:end="278:23">sub_sampling</name></name> <operator pos:start="278:25" pos:end="278:26">==</operator> <literal type="number" pos:start="278:28" pos:end="278:28">0</literal></expr>)</condition><block type="pseudo" pos:start="280:9" pos:end="280:19"><block_content pos:start="280:9" pos:end="280:19">

        <expr_stmt pos:start="280:9" pos:end="280:19"><expr pos:start="280:9" pos:end="280:18"><name pos:start="280:9" pos:end="280:11">tmp</name> <operator pos:start="280:13" pos:end="280:13">=</operator> <literal type="number" pos:start="280:15" pos:end="280:18">7999</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="282:5" pos:end="284:55">else<block type="pseudo" pos:start="284:9" pos:end="284:55"><block_content pos:start="284:9" pos:end="284:55">

        <expr_stmt pos:start="284:9" pos:end="284:55"><expr pos:start="284:9" pos:end="284:54"><name pos:start="284:9" pos:end="284:11">tmp</name> <operator pos:start="284:13" pos:end="284:13">=</operator> <operator pos:start="284:15" pos:end="284:15">(</operator><operator pos:start="284:16" pos:end="284:16">(</operator><operator pos:start="284:17" pos:end="284:17">-</operator><operator pos:start="284:18" pos:end="284:18">(</operator><name pos:start="284:19" pos:end="284:33"><name pos:start="284:19" pos:end="284:19">s</name><operator pos:start="284:20" pos:end="284:21">-&gt;</operator><name pos:start="284:22" pos:end="284:33">sub_sampling</name></name> <operator pos:start="284:35" pos:end="284:35">-</operator><literal type="number" pos:start="284:36" pos:end="284:36">1</literal><operator pos:start="284:37" pos:end="284:37">)</operator><operator pos:start="284:38" pos:end="284:38">)</operator> <operator pos:start="284:40" pos:end="284:40">&amp;</operator> <literal type="number" pos:start="284:42" pos:end="284:45">8000</literal><operator pos:start="284:46" pos:end="284:46">)</operator> <operator pos:start="284:48" pos:end="284:48">+</operator> <literal type="number" pos:start="284:50" pos:end="284:54">20000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <comment type="block" pos:start="286:5" pos:end="294:6">/*

    0: 7999 -&gt; 0

    1: 20000 -&gt; 2

    2: 28000 -&gt; 2

    */</comment>

    <if_stmt pos:start="296:5" pos:end="306:35"><if pos:start="296:5" pos:end="298:35">if <condition pos:start="296:8" pos:end="296:19">(<expr pos:start="296:9" pos:end="296:18"><name pos:start="296:9" pos:end="296:11">tmp</name> <operator pos:start="296:13" pos:end="296:13">&lt;</operator> <literal type="number" pos:start="296:15" pos:end="296:18">8000</literal></expr>)</condition><block type="pseudo" pos:start="298:9" pos:end="298:35"><block_content pos:start="298:9" pos:end="298:35">

        <expr_stmt pos:start="298:9" pos:end="298:35"><expr pos:start="298:9" pos:end="298:34"><name pos:start="298:9" pos:end="298:30"><name pos:start="298:9" pos:end="298:9">s</name><operator pos:start="298:10" pos:end="298:11">-&gt;</operator><name pos:start="298:12" pos:end="298:30">coeff_per_sb_select</name></name> <operator pos:start="298:32" pos:end="298:32">=</operator> <literal type="number" pos:start="298:34" pos:end="298:34">0</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="300:5" pos:end="302:35">else if <condition pos:start="300:13" pos:end="300:26">(<expr pos:start="300:14" pos:end="300:25"><name pos:start="300:14" pos:end="300:16">tmp</name> <operator pos:start="300:18" pos:end="300:19">&lt;=</operator> <literal type="number" pos:start="300:21" pos:end="300:25">16000</literal></expr>)</condition><block type="pseudo" pos:start="302:9" pos:end="302:35"><block_content pos:start="302:9" pos:end="302:35">

        <expr_stmt pos:start="302:9" pos:end="302:35"><expr pos:start="302:9" pos:end="302:34"><name pos:start="302:9" pos:end="302:30"><name pos:start="302:9" pos:end="302:9">s</name><operator pos:start="302:10" pos:end="302:11">-&gt;</operator><name pos:start="302:12" pos:end="302:30">coeff_per_sb_select</name></name> <operator pos:start="302:32" pos:end="302:32">=</operator> <literal type="number" pos:start="302:34" pos:end="302:34">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="304:5" pos:end="306:35">else<block type="pseudo" pos:start="306:9" pos:end="306:35"><block_content pos:start="306:9" pos:end="306:35">

        <expr_stmt pos:start="306:9" pos:end="306:35"><expr pos:start="306:9" pos:end="306:34"><name pos:start="306:9" pos:end="306:30"><name pos:start="306:9" pos:end="306:9">s</name><operator pos:start="306:10" pos:end="306:11">-&gt;</operator><name pos:start="306:12" pos:end="306:30">coeff_per_sb_select</name></name> <operator pos:start="306:32" pos:end="306:32">=</operator> <literal type="number" pos:start="306:34" pos:end="306:34">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="line" pos:start="310:5" pos:end="310:32">// Fail on unknown fft order</comment>

    <if_stmt pos:start="312:5" pos:end="318:5"><if pos:start="312:5" pos:end="318:5">if <condition pos:start="312:8" pos:end="312:49">(<expr pos:start="312:9" pos:end="312:48"><operator pos:start="312:9" pos:end="312:9">(</operator><name pos:start="312:10" pos:end="312:21"><name pos:start="312:10" pos:end="312:10">s</name><operator pos:start="312:11" pos:end="312:12">-&gt;</operator><name pos:start="312:13" pos:end="312:21">fft_order</name></name> <operator pos:start="312:23" pos:end="312:23">&lt;</operator> <literal type="number" pos:start="312:25" pos:end="312:25">7</literal><operator pos:start="312:26" pos:end="312:26">)</operator> <operator pos:start="312:28" pos:end="312:29">||</operator> <operator pos:start="312:31" pos:end="312:31">(</operator><name pos:start="312:32" pos:end="312:43"><name pos:start="312:32" pos:end="312:32">s</name><operator pos:start="312:33" pos:end="312:34">-&gt;</operator><name pos:start="312:35" pos:end="312:43">fft_order</name></name> <operator pos:start="312:45" pos:end="312:45">&gt;</operator> <literal type="number" pos:start="312:47" pos:end="312:47">9</literal><operator pos:start="312:48" pos:end="312:48">)</operator></expr>)</condition> <block pos:start="312:51" pos:end="318:5">{<block_content pos:start="314:9" pos:end="316:18">

        <expr_stmt pos:start="314:9" pos:end="314:103"><expr pos:start="314:9" pos:end="314:102"><call pos:start="314:9" pos:end="314:102"><name pos:start="314:9" pos:end="314:14">av_log</name><argument_list pos:start="314:15" pos:end="314:102">(<argument pos:start="314:16" pos:end="314:20"><expr pos:start="314:16" pos:end="314:20"><name pos:start="314:16" pos:end="314:20">avctx</name></expr></argument>, <argument pos:start="314:23" pos:end="314:34"><expr pos:start="314:23" pos:end="314:34"><name pos:start="314:23" pos:end="314:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="314:37" pos:end="314:87"><expr pos:start="314:37" pos:end="314:87"><literal type="string" pos:start="314:37" pos:end="314:87">"Unknown FFT order (%d), contact the developers!\n"</literal></expr></argument>, <argument pos:start="314:90" pos:end="314:101"><expr pos:start="314:90" pos:end="314:101"><name pos:start="314:90" pos:end="314:101"><name pos:start="314:90" pos:end="314:90">s</name><operator pos:start="314:91" pos:end="314:92">-&gt;</operator><name pos:start="314:93" pos:end="314:101">fft_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="316:9" pos:end="316:18">return <expr pos:start="316:16" pos:end="316:17"><operator pos:start="316:16" pos:end="316:16">-</operator><literal type="number" pos:start="316:17" pos:end="316:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="322:5" pos:end="322:55"><expr pos:start="322:5" pos:end="322:54"><call pos:start="322:5" pos:end="322:54"><name pos:start="322:5" pos:end="322:16">ff_rdft_init</name><argument_list pos:start="322:17" pos:end="322:54">(<argument pos:start="322:18" pos:end="322:29"><expr pos:start="322:18" pos:end="322:29"><operator pos:start="322:18" pos:end="322:18">&amp;</operator><name pos:start="322:19" pos:end="322:29"><name pos:start="322:19" pos:end="322:19">s</name><operator pos:start="322:20" pos:end="322:21">-&gt;</operator><name pos:start="322:22" pos:end="322:29">rdft_ctx</name></name></expr></argument>, <argument pos:start="322:32" pos:end="322:43"><expr pos:start="322:32" pos:end="322:43"><name pos:start="322:32" pos:end="322:43"><name pos:start="322:32" pos:end="322:32">s</name><operator pos:start="322:33" pos:end="322:34">-&gt;</operator><name pos:start="322:35" pos:end="322:43">fft_order</name></name></expr></argument>, <argument pos:start="322:46" pos:end="322:53"><expr pos:start="322:46" pos:end="322:53"><name pos:start="322:46" pos:end="322:53">IDFT_C2R</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="324:5" pos:end="324:31"><expr pos:start="324:5" pos:end="324:30"><call pos:start="324:5" pos:end="324:30"><name pos:start="324:5" pos:end="324:18">ff_mpadsp_init</name><argument_list pos:start="324:19" pos:end="324:30">(<argument pos:start="324:20" pos:end="324:29"><expr pos:start="324:20" pos:end="324:29"><operator pos:start="324:20" pos:end="324:20">&amp;</operator><name pos:start="324:21" pos:end="324:29"><name pos:start="324:21" pos:end="324:21">s</name><operator pos:start="324:22" pos:end="324:23">-&gt;</operator><name pos:start="324:24" pos:end="324:29">mpadsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="328:5" pos:end="328:17"><expr pos:start="328:5" pos:end="328:16"><call pos:start="328:5" pos:end="328:16"><name pos:start="328:5" pos:end="328:13">qdm2_init</name><argument_list pos:start="328:14" pos:end="328:16">(<argument pos:start="328:15" pos:end="328:15"><expr pos:start="328:15" pos:end="328:15"><name pos:start="328:15" pos:end="328:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="332:5" pos:end="332:42"><expr pos:start="332:5" pos:end="332:41"><name pos:start="332:5" pos:end="332:21"><name pos:start="332:5" pos:end="332:9">avctx</name><operator pos:start="332:10" pos:end="332:11">-&gt;</operator><name pos:start="332:12" pos:end="332:21">sample_fmt</name></name> <operator pos:start="332:23" pos:end="332:23">=</operator> <name pos:start="332:25" pos:end="332:41">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt>



<comment type="line" pos:start="336:1" pos:end="336:22">//    dump_context(s);</comment>

    <return pos:start="338:5" pos:end="338:13">return <expr pos:start="338:12" pos:end="338:12"><literal type="number" pos:start="338:12" pos:end="338:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
