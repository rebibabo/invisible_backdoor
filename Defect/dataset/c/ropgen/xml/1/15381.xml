<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15381.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_wave</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:17"><if pos:start="9:5" pos:end="11:17">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:9">c</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:13">fc</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:25">nb_streams</name></name> <operator pos:start="9:27" pos:end="9:27">&lt;</operator> <literal type="number" pos:start="9:29" pos:end="9:29">1</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:17"><block_content pos:start="11:9" pos:end="11:17">

        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:6">st</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <name pos:start="13:10" pos:end="13:44"><name pos:start="13:10" pos:end="13:10">c</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:14">fc</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:23">streams</name><index pos:start="13:24" pos:end="13:44">[<expr pos:start="13:25" pos:end="13:43"><name pos:start="13:25" pos:end="13:41"><name pos:start="13:25" pos:end="13:25">c</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:29">fc</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:41">nb_streams</name></name><operator pos:start="13:42" pos:end="13:42">-</operator><literal type="number" pos:start="13:43" pos:end="13:43">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="19:35"><if pos:start="17:5" pos:end="19:35">if <condition pos:start="17:8" pos:end="17:38">(<expr pos:start="17:9" pos:end="17:37"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:17">uint64_t</name><operator pos:start="17:18" pos:end="17:18">)</operator><name pos:start="17:19" pos:end="17:27"><name pos:start="17:19" pos:end="17:22">atom</name><operator pos:start="17:23" pos:end="17:23">.</operator><name pos:start="17:24" pos:end="17:27">size</name></name> <operator pos:start="17:29" pos:end="17:29">&gt;</operator> <operator pos:start="17:31" pos:end="17:31">(</operator><literal type="number" pos:start="17:32" pos:end="17:32">1</literal><operator pos:start="17:33" pos:end="17:34">&lt;&lt;</operator><literal type="number" pos:start="17:35" pos:end="17:36">30</literal><operator pos:start="17:37" pos:end="17:37">)</operator></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:35"><block_content pos:start="19:9" pos:end="19:35">

        <return pos:start="19:9" pos:end="19:35">return <expr pos:start="19:16" pos:end="19:34"><name pos:start="19:16" pos:end="19:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="49:33"><if pos:start="23:5" pos:end="39:5">if <condition pos:start="23:8" pos:end="23:91">(<expr pos:start="23:9" pos:end="23:90"><name pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:10">st</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:17">codec</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:27">codec_id</name></name> <operator pos:start="23:29" pos:end="23:30">==</operator> <name pos:start="23:32" pos:end="23:47">AV_CODEC_ID_QDM2</name> <operator pos:start="23:49" pos:end="23:50">||</operator> <name pos:start="23:52" pos:end="23:70"><name pos:start="23:52" pos:end="23:53">st</name><operator pos:start="23:54" pos:end="23:55">-&gt;</operator><name pos:start="23:56" pos:end="23:60">codec</name><operator pos:start="23:61" pos:end="23:62">-&gt;</operator><name pos:start="23:63" pos:end="23:70">codec_id</name></name> <operator pos:start="23:72" pos:end="23:73">==</operator> <name pos:start="23:75" pos:end="23:90">AV_CODEC_ID_QDMC</name></expr>)</condition> <block pos:start="23:93" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:55">

        <comment type="line" pos:start="25:9" pos:end="25:73">// pass all frma atom to codec, needed at least for QDMC and QDM2</comment>

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><call pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:15">av_free</name><argument_list pos:start="27:16" pos:end="27:37">(<argument pos:start="27:17" pos:end="27:36"><expr pos:start="27:17" pos:end="27:36"><name pos:start="27:17" pos:end="27:36"><name pos:start="27:17" pos:end="27:18">st</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:25">codec</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:36">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:84"><expr pos:start="29:9" pos:end="29:83"><name pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:10">st</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:17">codec</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:28">extradata</name></name> <operator pos:start="29:30" pos:end="29:30">=</operator> <call pos:start="29:32" pos:end="29:83"><name pos:start="29:32" pos:end="29:41">av_mallocz</name><argument_list pos:start="29:42" pos:end="29:83">(<argument pos:start="29:43" pos:end="29:82"><expr pos:start="29:43" pos:end="29:82"><name pos:start="29:43" pos:end="29:51"><name pos:start="29:43" pos:end="29:46">atom</name><operator pos:start="29:47" pos:end="29:47">.</operator><name pos:start="29:48" pos:end="29:51">size</name></name> <operator pos:start="29:53" pos:end="29:53">+</operator> <name pos:start="29:55" pos:end="29:82">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:35"><if pos:start="31:9" pos:end="33:35">if <condition pos:start="31:12" pos:end="31:34">(<expr pos:start="31:13" pos:end="31:33"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:33"><name pos:start="31:14" pos:end="31:15">st</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:22">codec</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:33">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:35"><block_content pos:start="33:13" pos:end="33:35">

            <return pos:start="33:13" pos:end="33:35">return <expr pos:start="33:20" pos:end="33:34"><call pos:start="33:20" pos:end="33:34"><name pos:start="33:20" pos:end="33:26">AVERROR</name><argument_list pos:start="33:27" pos:end="33:34">(<argument pos:start="33:28" pos:end="33:33"><expr pos:start="33:28" pos:end="33:33"><name pos:start="33:28" pos:end="33:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:10">st</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:17">codec</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:33">extradata_size</name></name> <operator pos:start="35:35" pos:end="35:35">=</operator> <name pos:start="35:37" pos:end="35:45"><name pos:start="35:37" pos:end="35:40">atom</name><operator pos:start="35:41" pos:end="35:41">.</operator><name pos:start="35:42" pos:end="35:45">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:55"><expr pos:start="37:9" pos:end="37:54"><call pos:start="37:9" pos:end="37:54"><name pos:start="37:9" pos:end="37:17">avio_read</name><argument_list pos:start="37:18" pos:end="37:54">(<argument pos:start="37:19" pos:end="37:20"><expr pos:start="37:19" pos:end="37:20"><name pos:start="37:19" pos:end="37:20">pb</name></expr></argument>, <argument pos:start="37:23" pos:end="37:42"><expr pos:start="37:23" pos:end="37:42"><name pos:start="37:23" pos:end="37:42"><name pos:start="37:23" pos:end="37:24">st</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:31">codec</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:42">extradata</name></name></expr></argument>, <argument pos:start="37:45" pos:end="37:53"><expr pos:start="37:45" pos:end="37:53"><name pos:start="37:45" pos:end="37:53"><name pos:start="37:45" pos:end="37:48">atom</name><operator pos:start="37:49" pos:end="37:49">.</operator><name pos:start="37:50" pos:end="37:53">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="47:5">else if <condition pos:start="39:15" pos:end="39:29">(<expr pos:start="39:16" pos:end="39:28"><name pos:start="39:16" pos:end="39:24"><name pos:start="39:16" pos:end="39:19">atom</name><operator pos:start="39:20" pos:end="39:20">.</operator><name pos:start="39:21" pos:end="39:24">size</name></name> <operator pos:start="39:26" pos:end="39:26">&gt;</operator> <literal type="number" pos:start="39:28" pos:end="39:28">8</literal></expr>)</condition> <block pos:start="39:31" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:23"> <comment type="block" pos:start="39:33" pos:end="39:62">/* to read frma, esds atoms */</comment>

        <decl_stmt pos:start="41:9" pos:end="41:16"><decl pos:start="41:9" pos:end="41:15"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:15">ret</name></decl>;</decl_stmt>

        <if_stmt pos:start="43:9" pos:end="45:23"><if pos:start="43:9" pos:end="45:23">if <condition pos:start="43:12" pos:end="43:54">(<expr pos:start="43:13" pos:end="43:53"><operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:16">ret</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:48"><name pos:start="43:20" pos:end="43:35">mov_read_default</name><argument_list pos:start="43:36" pos:end="43:48">(<argument pos:start="43:37" pos:end="43:37"><expr pos:start="43:37" pos:end="43:37"><name pos:start="43:37" pos:end="43:37">c</name></expr></argument>, <argument pos:start="43:40" pos:end="43:41"><expr pos:start="43:40" pos:end="43:41"><name pos:start="43:40" pos:end="43:41">pb</name></expr></argument>, <argument pos:start="43:44" pos:end="43:47"><expr pos:start="43:44" pos:end="43:47"><name pos:start="43:44" pos:end="43:47">atom</name></expr></argument>)</argument_list></call><operator pos:start="43:49" pos:end="43:49">)</operator> <operator pos:start="43:51" pos:end="43:51">&lt;</operator> <literal type="number" pos:start="43:53" pos:end="43:53">0</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:23"><block_content pos:start="45:13" pos:end="45:23">

            <return pos:start="45:13" pos:end="45:23">return <expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="49:33">else<block type="pseudo" pos:start="49:9" pos:end="49:33"><block_content pos:start="49:9" pos:end="49:33">

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><call pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:17">avio_skip</name><argument_list pos:start="49:18" pos:end="49:32">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">pb</name></expr></argument>, <argument pos:start="49:23" pos:end="49:31"><expr pos:start="49:23" pos:end="49:31"><name pos:start="49:23" pos:end="49:31"><name pos:start="49:23" pos:end="49:26">atom</name><operator pos:start="49:27" pos:end="49:27">.</operator><name pos:start="49:28" pos:end="49:31">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
