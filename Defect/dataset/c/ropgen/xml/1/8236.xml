<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8236.c" pos:tabs="8"><function pos:start="1:1" pos:end="64:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">qemu_savevm_state_begin</name><parameter_list pos:start="1:29" pos:end="3:59">(<parameter pos:start="1:30" pos:end="1:40"><decl pos:start="1:30" pos:end="1:40"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:37">QEMUFile</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">f</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:58"><decl pos:start="3:30" pos:end="3:58"><type pos:start="3:30" pos:end="3:58"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:50">MigrationParams</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:58">params</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="64:1">{<block_content pos:start="7:5" pos:end="62:5">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">SaveStateEntry</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">se</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><call pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:28">trace_savevm_state_begin</name><argument_list pos:start="13:29" pos:end="13:30">()</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="15:5" pos:end="15:53"><name pos:start="15:5" pos:end="15:18">QTAILQ_FOREACH</name><argument_list pos:start="15:19" pos:end="15:53">(<argument pos:start="15:20" pos:end="15:21">se</argument>, <argument pos:start="15:24" pos:end="15:45">&amp;savevm_state.handlers</argument>, <argument pos:start="15:48" pos:end="15:52">entry</argument>)</argument_list></macro> <block pos:start="15:55" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:48">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:45">(<expr pos:start="17:13" pos:end="17:44"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:20"><name pos:start="17:14" pos:end="17:15">se</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:20">ops</name></name> <operator pos:start="17:22" pos:end="17:23">||</operator> <operator pos:start="17:25" pos:end="17:25">!</operator><name pos:start="17:26" pos:end="17:44"><name pos:start="17:26" pos:end="17:27">se</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:32">ops</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:44">set_params</name></name></expr>)</condition> <block pos:start="17:47" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:21">

            <continue pos:start="19:13" pos:end="19:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><call pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:10">se</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:15">ops</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:27">set_params</name></name><argument_list pos:start="23:28" pos:end="23:47">(<argument pos:start="23:29" pos:end="23:34"><expr pos:start="23:29" pos:end="23:34"><name pos:start="23:29" pos:end="23:34">params</name></expr></argument>, <argument pos:start="23:37" pos:end="23:46"><expr pos:start="23:37" pos:end="23:46"><name pos:start="23:37" pos:end="23:46"><name pos:start="23:37" pos:end="23:38">se</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:46">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <macro pos:start="29:5" pos:end="29:53"><name pos:start="29:5" pos:end="29:18">QTAILQ_FOREACH</name><argument_list pos:start="29:19" pos:end="29:53">(<argument pos:start="29:20" pos:end="29:21">se</argument>, <argument pos:start="29:24" pos:end="29:45">&amp;savevm_state.handlers</argument>, <argument pos:start="29:48" pos:end="29:52">entry</argument>)</argument_list></macro> <block pos:start="29:55" pos:end="62:5">{<block_content pos:start="31:9" pos:end="60:9">

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:50">(<expr pos:start="31:13" pos:end="31:49"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:20"><name pos:start="31:14" pos:end="31:15">se</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:20">ops</name></name> <operator pos:start="31:22" pos:end="31:23">||</operator> <operator pos:start="31:25" pos:end="31:25">!</operator><name pos:start="31:26" pos:end="31:49"><name pos:start="31:26" pos:end="31:27">se</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:32">ops</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:49">save_live_setup</name></name></expr>)</condition> <block pos:start="31:52" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:21">

            <continue pos:start="33:13" pos:end="33:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="45:9">if <condition pos:start="37:12" pos:end="37:42">(<expr pos:start="37:13" pos:end="37:41"><name pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:14">se</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:19">ops</name></name> <operator pos:start="37:21" pos:end="37:22">&amp;&amp;</operator> <name pos:start="37:24" pos:end="37:41"><name pos:start="37:24" pos:end="37:25">se</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:30">ops</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:41">is_active</name></name></expr>)</condition> <block pos:start="37:44" pos:end="45:9">{<block_content pos:start="39:13" pos:end="43:13">

            <if_stmt pos:start="39:13" pos:end="43:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:48">(<expr pos:start="39:17" pos:end="39:47"><operator pos:start="39:17" pos:end="39:17">!</operator><call pos:start="39:18" pos:end="39:47"><name pos:start="39:18" pos:end="39:35"><name pos:start="39:18" pos:end="39:19">se</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:24">ops</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:35">is_active</name></name><argument_list pos:start="39:36" pos:end="39:47">(<argument pos:start="39:37" pos:end="39:46"><expr pos:start="39:37" pos:end="39:46"><name pos:start="39:37" pos:end="39:46"><name pos:start="39:37" pos:end="39:38">se</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:46">opaque</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:50" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:25">

                <continue pos:start="41:17" pos:end="41:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:58"><expr pos:start="47:9" pos:end="47:57"><call pos:start="47:9" pos:end="47:57"><name pos:start="47:9" pos:end="47:27">save_section_header</name><argument_list pos:start="47:28" pos:end="47:57">(<argument pos:start="47:29" pos:end="47:29"><expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">f</name></expr></argument>, <argument pos:start="47:32" pos:end="47:33"><expr pos:start="47:32" pos:end="47:33"><name pos:start="47:32" pos:end="47:33">se</name></expr></argument>, <argument pos:start="47:36" pos:end="47:56"><expr pos:start="47:36" pos:end="47:56"><name pos:start="47:36" pos:end="47:56">QEMU_VM_SECTION_START</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:54"><expr pos:start="51:9" pos:end="51:53"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:53"><name pos:start="51:15" pos:end="51:38"><name pos:start="51:15" pos:end="51:16">se</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:21">ops</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:38">save_live_setup</name></name><argument_list pos:start="51:39" pos:end="51:53">(<argument pos:start="51:40" pos:end="51:40"><expr pos:start="51:40" pos:end="51:40"><name pos:start="51:40" pos:end="51:40">f</name></expr></argument>, <argument pos:start="51:43" pos:end="51:52"><expr pos:start="51:43" pos:end="51:52"><name pos:start="51:43" pos:end="51:52"><name pos:start="51:43" pos:end="51:44">se</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:52">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <if_stmt pos:start="54:9" pos:end="60:9"><if pos:start="54:9" pos:end="60:9">if <condition pos:start="54:12" pos:end="54:20">(<expr pos:start="54:13" pos:end="54:19"><name pos:start="54:13" pos:end="54:15">ret</name> <operator pos:start="54:17" pos:end="54:17">&lt;</operator> <literal type="number" pos:start="54:19" pos:end="54:19">0</literal></expr>)</condition> <block pos:start="54:22" pos:end="60:9">{<block_content pos:start="56:13" pos:end="58:18">

            <expr_stmt pos:start="56:13" pos:end="56:40"><expr pos:start="56:13" pos:end="56:39"><call pos:start="56:13" pos:end="56:39"><name pos:start="56:13" pos:end="56:31">qemu_file_set_error</name><argument_list pos:start="56:32" pos:end="56:39">(<argument pos:start="56:33" pos:end="56:33"><expr pos:start="56:33" pos:end="56:33"><name pos:start="56:33" pos:end="56:33">f</name></expr></argument>, <argument pos:start="56:36" pos:end="56:38"><expr pos:start="56:36" pos:end="56:38"><name pos:start="56:36" pos:end="56:38">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="58:13" pos:end="58:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

</block_content>}</block></function></unit>
