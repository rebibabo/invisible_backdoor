<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4691.c" pos:tabs="8"><function pos:start="1:1" pos:end="279:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">connect_to_ssh</name><parameter_list pos:start="1:26" pos:end="3:70">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:38">BDRVSSHState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:48">QDict</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:57">options</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:39">ssh_flags</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:55">creat_mode</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:69"><decl pos:start="3:58" pos:end="3:69"><type pos:start="3:58" pos:end="3:69"><name pos:start="3:58" pos:end="3:62">Error</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier><modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:69">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="279:1">{<block_content pos:start="7:5" pos:end="277:15">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">r</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:20">host</name></decl>, <decl pos:start="9:23" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:16"><modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:27">user</name></decl>, <decl pos:start="9:30" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:16"><modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:34">path</name></decl>, <decl pos:start="9:37" pos:end="9:51"><type ref="prev" pos:start="9:5" pos:end="9:16"><modifier pos:start="9:37" pos:end="9:37">*</modifier></type><name pos:start="9:38" pos:end="9:51">host_key_check</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">port</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:39">(<expr pos:start="15:9" pos:end="15:38"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:38"><name pos:start="15:10" pos:end="15:21">qdict_haskey</name><argument_list pos:start="15:22" pos:end="15:38">(<argument pos:start="15:23" pos:end="15:29"><expr pos:start="15:23" pos:end="15:29"><name pos:start="15:23" pos:end="15:29">options</name></expr></argument>, <argument pos:start="15:32" pos:end="15:37"><expr pos:start="15:32" pos:end="15:37"><literal type="string" pos:start="15:32" pos:end="15:37">"host"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:41" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:17">

        <expr_stmt pos:start="17:9" pos:end="17:22"><expr pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <operator pos:start="17:15" pos:end="17:15">-</operator><name pos:start="17:16" pos:end="17:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:54"><expr pos:start="19:9" pos:end="19:53"><call pos:start="19:9" pos:end="19:53"><name pos:start="19:9" pos:end="19:18">error_setg</name><argument_list pos:start="19:19" pos:end="19:53">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">errp</name></expr></argument>, <argument pos:start="19:26" pos:end="19:52"><expr pos:start="19:26" pos:end="19:52"><literal type="string" pos:start="19:26" pos:end="19:52">"No hostname was specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:8">host</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:41"><name pos:start="25:12" pos:end="25:24">qdict_get_str</name><argument_list pos:start="25:25" pos:end="25:41">(<argument pos:start="25:26" pos:end="25:32"><expr pos:start="25:26" pos:end="25:32"><name pos:start="25:26" pos:end="25:32">options</name></expr></argument>, <argument pos:start="25:35" pos:end="25:40"><expr pos:start="25:35" pos:end="25:40"><literal type="string" pos:start="25:35" pos:end="25:40">"host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:38">(<expr pos:start="29:9" pos:end="29:37"><call pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:20">qdict_haskey</name><argument_list pos:start="29:21" pos:end="29:37">(<argument pos:start="29:22" pos:end="29:28"><expr pos:start="29:22" pos:end="29:28"><name pos:start="29:22" pos:end="29:28">options</name></expr></argument>, <argument pos:start="29:31" pos:end="29:36"><expr pos:start="29:31" pos:end="29:36"><literal type="string" pos:start="29:31" pos:end="29:36">"port"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:40" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:46">

        <expr_stmt pos:start="31:9" pos:end="31:46"><expr pos:start="31:9" pos:end="31:45"><name pos:start="31:9" pos:end="31:12">port</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:45"><name pos:start="31:16" pos:end="31:28">qdict_get_int</name><argument_list pos:start="31:29" pos:end="31:45">(<argument pos:start="31:30" pos:end="31:36"><expr pos:start="31:30" pos:end="31:36"><name pos:start="31:30" pos:end="31:36">options</name></expr></argument>, <argument pos:start="31:39" pos:end="31:44"><expr pos:start="31:39" pos:end="31:44"><literal type="string" pos:start="31:39" pos:end="31:44">"port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="37:5">else <block pos:start="33:12" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:18">

        <expr_stmt pos:start="35:9" pos:end="35:18"><expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:12">port</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <literal type="number" pos:start="35:16" pos:end="35:17">22</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:39">(<expr pos:start="41:9" pos:end="41:38"><operator pos:start="41:9" pos:end="41:9">!</operator><call pos:start="41:10" pos:end="41:38"><name pos:start="41:10" pos:end="41:21">qdict_haskey</name><argument_list pos:start="41:22" pos:end="41:38">(<argument pos:start="41:23" pos:end="41:29"><expr pos:start="41:23" pos:end="41:29"><name pos:start="41:23" pos:end="41:29">options</name></expr></argument>, <argument pos:start="41:32" pos:end="41:37"><expr pos:start="41:32" pos:end="41:37"><literal type="string" pos:start="41:32" pos:end="41:37">"path"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:41" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:17">

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <operator pos:start="43:15" pos:end="43:15">-</operator><name pos:start="43:16" pos:end="43:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:50"><expr pos:start="45:9" pos:end="45:49"><call pos:start="45:9" pos:end="45:49"><name pos:start="45:9" pos:end="45:18">error_setg</name><argument_list pos:start="45:19" pos:end="45:49">(<argument pos:start="45:20" pos:end="45:23"><expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">errp</name></expr></argument>, <argument pos:start="45:26" pos:end="45:48"><expr pos:start="45:26" pos:end="45:48"><literal type="string" pos:start="45:26" pos:end="45:48">"No path was specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:17">goto <name pos:start="47:14" pos:end="47:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:42"><expr pos:start="51:5" pos:end="51:41"><name pos:start="51:5" pos:end="51:8">path</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <call pos:start="51:12" pos:end="51:41"><name pos:start="51:12" pos:end="51:24">qdict_get_str</name><argument_list pos:start="51:25" pos:end="51:41">(<argument pos:start="51:26" pos:end="51:32"><expr pos:start="51:26" pos:end="51:32"><name pos:start="51:26" pos:end="51:32">options</name></expr></argument>, <argument pos:start="51:35" pos:end="51:40"><expr pos:start="51:35" pos:end="51:40"><literal type="string" pos:start="51:35" pos:end="51:40">"path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="73:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:38">(<expr pos:start="55:9" pos:end="55:37"><call pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:20">qdict_haskey</name><argument_list pos:start="55:21" pos:end="55:37">(<argument pos:start="55:22" pos:end="55:28"><expr pos:start="55:22" pos:end="55:28"><name pos:start="55:22" pos:end="55:28">options</name></expr></argument>, <argument pos:start="55:31" pos:end="55:36"><expr pos:start="55:31" pos:end="55:36"><literal type="string" pos:start="55:31" pos:end="55:36">"user"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:40" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:46">

        <expr_stmt pos:start="57:9" pos:end="57:46"><expr pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:12">user</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:45"><name pos:start="57:16" pos:end="57:28">qdict_get_str</name><argument_list pos:start="57:29" pos:end="57:45">(<argument pos:start="57:30" pos:end="57:36"><expr pos:start="57:30" pos:end="57:36"><name pos:start="57:30" pos:end="57:36">options</name></expr></argument>, <argument pos:start="57:39" pos:end="57:44"><expr pos:start="57:39" pos:end="57:44"><literal type="string" pos:start="57:39" pos:end="57:44">"user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="73:5">else <block pos:start="59:12" pos:end="73:5">{<block_content pos:start="61:9" pos:end="71:9">

        <expr_stmt pos:start="61:9" pos:end="61:33"><expr pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:12">user</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <call pos:start="61:16" pos:end="61:32"><name pos:start="61:16" pos:end="61:30">g_get_user_name</name><argument_list pos:start="61:31" pos:end="61:32">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="71:9"><if pos:start="63:9" pos:end="71:9">if <condition pos:start="63:12" pos:end="63:18">(<expr pos:start="63:13" pos:end="63:17"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:17">user</name></expr>)</condition> <block pos:start="63:20" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:21">

            <expr_stmt pos:start="65:13" pos:end="65:65"><expr pos:start="65:13" pos:end="65:64"><call pos:start="65:13" pos:end="65:64"><name pos:start="65:13" pos:end="65:28">error_setg_errno</name><argument_list pos:start="65:29" pos:end="65:64">(<argument pos:start="65:30" pos:end="65:33"><expr pos:start="65:30" pos:end="65:33"><name pos:start="65:30" pos:end="65:33">errp</name></expr></argument>, <argument pos:start="65:36" pos:end="65:40"><expr pos:start="65:36" pos:end="65:40"><name pos:start="65:36" pos:end="65:40">errno</name></expr></argument>, <argument pos:start="65:43" pos:end="65:63"><expr pos:start="65:43" pos:end="65:63"><literal type="string" pos:start="65:43" pos:end="65:63">"Can't get user name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:25"><expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:15">ret</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <operator pos:start="67:19" pos:end="67:19">-</operator><name pos:start="67:20" pos:end="67:24">errno</name></expr>;</expr_stmt>

            <goto pos:start="69:13" pos:end="69:21">goto <name pos:start="69:18" pos:end="69:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:48">(<expr pos:start="77:9" pos:end="77:47"><call pos:start="77:9" pos:end="77:47"><name pos:start="77:9" pos:end="77:20">qdict_haskey</name><argument_list pos:start="77:21" pos:end="77:47">(<argument pos:start="77:22" pos:end="77:28"><expr pos:start="77:22" pos:end="77:28"><name pos:start="77:22" pos:end="77:28">options</name></expr></argument>, <argument pos:start="77:31" pos:end="77:46"><expr pos:start="77:31" pos:end="77:46"><literal type="string" pos:start="77:31" pos:end="77:46">"host_key_check"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:50" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:66">

        <expr_stmt pos:start="79:9" pos:end="79:66"><expr pos:start="79:9" pos:end="79:65"><name pos:start="79:9" pos:end="79:22">host_key_check</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <call pos:start="79:26" pos:end="79:65"><name pos:start="79:26" pos:end="79:38">qdict_get_str</name><argument_list pos:start="79:39" pos:end="79:65">(<argument pos:start="79:40" pos:end="79:46"><expr pos:start="79:40" pos:end="79:46"><name pos:start="79:40" pos:end="79:46">options</name></expr></argument>, <argument pos:start="79:49" pos:end="79:64"><expr pos:start="79:49" pos:end="79:64"><literal type="string" pos:start="79:49" pos:end="79:64">"host_key_check"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="81:7" pos:end="85:5">else <block pos:start="81:12" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:31">

        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:22">host_key_check</name> <operator pos:start="83:24" pos:end="83:24">=</operator> <literal type="string" pos:start="83:26" pos:end="83:30">"yes"</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:56">/* Construct the host:port name for inet_connect. */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:24"><expr pos:start="91:5" pos:end="91:23"><call pos:start="91:5" pos:end="91:23"><name pos:start="91:5" pos:end="91:10">g_free</name><argument_list pos:start="91:11" pos:end="91:23">(<argument pos:start="91:12" pos:end="91:22"><expr pos:start="91:12" pos:end="91:22"><name pos:start="91:12" pos:end="91:22"><name pos:start="91:12" pos:end="91:12">s</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:22">hostport</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:55"><expr pos:start="93:5" pos:end="93:54"><name pos:start="93:5" pos:end="93:15"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:15">hostport</name></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <call pos:start="93:19" pos:end="93:54"><name pos:start="93:19" pos:end="93:33">g_strdup_printf</name><argument_list pos:start="93:34" pos:end="93:54">(<argument pos:start="93:35" pos:end="93:41"><expr pos:start="93:35" pos:end="93:41"><literal type="string" pos:start="93:35" pos:end="93:41">"%s:%d"</literal></expr></argument>, <argument pos:start="93:44" pos:end="93:47"><expr pos:start="93:44" pos:end="93:47"><name pos:start="93:44" pos:end="93:47">host</name></expr></argument>, <argument pos:start="93:50" pos:end="93:53"><expr pos:start="93:50" pos:end="93:53"><name pos:start="93:50" pos:end="93:53">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:38">/* Open the socket and connect. */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:46"><expr pos:start="99:5" pos:end="99:45"><name pos:start="99:5" pos:end="99:11"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:11">sock</name></name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:45"><name pos:start="99:15" pos:end="99:26">inet_connect</name><argument_list pos:start="99:27" pos:end="99:45">(<argument pos:start="99:28" pos:end="99:38"><expr pos:start="99:28" pos:end="99:38"><name pos:start="99:28" pos:end="99:38"><name pos:start="99:28" pos:end="99:28">s</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:38">hostport</name></name></expr></argument>, <argument pos:start="99:41" pos:end="99:44"><expr pos:start="99:41" pos:end="99:44"><name pos:start="99:41" pos:end="99:44">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:20">(<expr pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:15"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:15">sock</name></name> <operator pos:start="101:17" pos:end="101:17">&lt;</operator> <literal type="number" pos:start="101:19" pos:end="101:19">0</literal></expr>)</condition> <block pos:start="101:22" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:17">

        <expr_stmt pos:start="103:9" pos:end="103:19"><expr pos:start="103:9" pos:end="103:18"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <operator pos:start="103:15" pos:end="103:15">-</operator><name pos:start="103:16" pos:end="103:18">EIO</name></expr>;</expr_stmt>

        <goto pos:start="105:9" pos:end="105:17">goto <name pos:start="105:14" pos:end="105:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:29">/* Create SSH session. */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:40"><expr pos:start="113:5" pos:end="113:39"><name pos:start="113:5" pos:end="113:14"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:14">session</name></name> <operator pos:start="113:16" pos:end="113:16">=</operator> <call pos:start="113:18" pos:end="113:39"><name pos:start="113:18" pos:end="113:37">libssh2_session_init</name><argument_list pos:start="113:38" pos:end="113:39">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="128:0"><if pos:start="115:5" pos:end="128:0">if <condition pos:start="115:8" pos:end="115:20">(<expr pos:start="115:9" pos:end="115:19"><operator pos:start="115:9" pos:end="115:9">!</operator><name pos:start="115:10" pos:end="115:19"><name pos:start="115:10" pos:end="115:10">s</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:19">session</name></name></expr>)</condition> <block pos:start="115:22" pos:end="128:0">{<block_content pos:start="117:9" pos:end="121:17">

        <expr_stmt pos:start="117:9" pos:end="117:22"><expr pos:start="117:9" pos:end="117:21"><name pos:start="117:9" pos:end="117:11">ret</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <operator pos:start="117:15" pos:end="117:15">-</operator><name pos:start="117:16" pos:end="117:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:76"><expr pos:start="119:9" pos:end="119:75"><call pos:start="119:9" pos:end="119:75"><name pos:start="119:9" pos:end="119:26">session_error_setg</name><argument_list pos:start="119:27" pos:end="119:75">(<argument pos:start="119:28" pos:end="119:31"><expr pos:start="119:28" pos:end="119:31"><name pos:start="119:28" pos:end="119:31">errp</name></expr></argument>, <argument pos:start="119:34" pos:end="119:34"><expr pos:start="119:34" pos:end="119:34"><name pos:start="119:34" pos:end="119:34">s</name></expr></argument>, <argument pos:start="119:37" pos:end="119:74"><expr pos:start="119:37" pos:end="119:74"><literal type="string" pos:start="119:37" pos:end="119:74">"failed to initialize libssh2 session"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="121:9" pos:end="121:17">goto <name pos:start="121:14" pos:end="121:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="127:1" pos:end="127:22">#<cpp:directive pos:start="127:2" pos:end="127:3">if</cpp:directive> <expr pos:start="127:5" pos:end="127:22"><name pos:start="127:5" pos:end="127:17">TRACE_LIBSSH2</name> <operator pos:start="127:19" pos:end="127:20">!=</operator> <literal type="number" pos:start="127:22" pos:end="127:22">0</literal></expr></cpp:if>

    <expr_stmt pos:start="129:5" pos:end="132:0"><expr pos:start="129:5" pos:end="129:44"><call pos:start="129:5" pos:end="129:44"><name pos:start="129:5" pos:end="129:17">libssh2_trace</name><argument_list pos:start="129:18" pos:end="129:44">(<argument pos:start="129:19" pos:end="129:28"><expr pos:start="129:19" pos:end="129:28"><name pos:start="129:19" pos:end="129:28"><name pos:start="129:19" pos:end="129:19">s</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:28">session</name></name></expr></argument>, <argument pos:start="129:31" pos:end="129:43"><expr pos:start="129:31" pos:end="129:43"><name pos:start="129:31" pos:end="129:43">TRACE_LIBSSH2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="131:1" pos:end="131:6">#<cpp:directive pos:start="131:2" pos:end="131:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="135:5" pos:end="135:55"><expr pos:start="135:5" pos:end="135:54"><name pos:start="135:5" pos:end="135:5">r</name> <operator pos:start="135:7" pos:end="135:7">=</operator> <call pos:start="135:9" pos:end="135:54"><name pos:start="135:9" pos:end="135:33">libssh2_session_handshake</name><argument_list pos:start="135:34" pos:end="135:54">(<argument pos:start="135:35" pos:end="135:44"><expr pos:start="135:35" pos:end="135:44"><name pos:start="135:35" pos:end="135:44"><name pos:start="135:35" pos:end="135:35">s</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:44">session</name></name></expr></argument>, <argument pos:start="135:47" pos:end="135:53"><expr pos:start="135:47" pos:end="135:53"><name pos:start="135:47" pos:end="135:53"><name pos:start="135:47" pos:end="135:47">s</name><operator pos:start="135:48" pos:end="135:49">-&gt;</operator><name pos:start="135:50" pos:end="135:53">sock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="145:5"><if pos:start="137:5" pos:end="145:5">if <condition pos:start="137:8" pos:end="137:15">(<expr pos:start="137:9" pos:end="137:14"><name pos:start="137:9" pos:end="137:9">r</name> <operator pos:start="137:11" pos:end="137:12">!=</operator> <literal type="number" pos:start="137:14" pos:end="137:14">0</literal></expr>)</condition> <block pos:start="137:17" pos:end="145:5">{<block_content pos:start="139:9" pos:end="143:17">

        <expr_stmt pos:start="139:9" pos:end="139:22"><expr pos:start="139:9" pos:end="139:21"><name pos:start="139:9" pos:end="139:11">ret</name> <operator pos:start="139:13" pos:end="139:13">=</operator> <operator pos:start="139:15" pos:end="139:15">-</operator><name pos:start="139:16" pos:end="139:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:71"><expr pos:start="141:9" pos:end="141:70"><call pos:start="141:9" pos:end="141:70"><name pos:start="141:9" pos:end="141:26">session_error_setg</name><argument_list pos:start="141:27" pos:end="141:70">(<argument pos:start="141:28" pos:end="141:31"><expr pos:start="141:28" pos:end="141:31"><name pos:start="141:28" pos:end="141:31">errp</name></expr></argument>, <argument pos:start="141:34" pos:end="141:34"><expr pos:start="141:34" pos:end="141:34"><name pos:start="141:34" pos:end="141:34">s</name></expr></argument>, <argument pos:start="141:37" pos:end="141:69"><expr pos:start="141:37" pos:end="141:69"><literal type="string" pos:start="141:37" pos:end="141:69">"failed to establish SSH session"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="143:9" pos:end="143:17">goto <name pos:start="143:14" pos:end="143:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:58">/* Check the remote host's key against known_hosts. */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:62"><expr pos:start="151:5" pos:end="151:61"><name pos:start="151:5" pos:end="151:7">ret</name> <operator pos:start="151:9" pos:end="151:9">=</operator> <call pos:start="151:11" pos:end="151:61"><name pos:start="151:11" pos:end="151:24">check_host_key</name><argument_list pos:start="151:25" pos:end="151:61">(<argument pos:start="151:26" pos:end="151:26"><expr pos:start="151:26" pos:end="151:26"><name pos:start="151:26" pos:end="151:26">s</name></expr></argument>, <argument pos:start="151:29" pos:end="151:32"><expr pos:start="151:29" pos:end="151:32"><name pos:start="151:29" pos:end="151:32">host</name></expr></argument>, <argument pos:start="151:35" pos:end="151:38"><expr pos:start="151:35" pos:end="151:38"><name pos:start="151:35" pos:end="151:38">port</name></expr></argument>, <argument pos:start="151:41" pos:end="151:54"><expr pos:start="151:41" pos:end="151:54"><name pos:start="151:41" pos:end="151:54">host_key_check</name></expr></argument>, <argument pos:start="151:57" pos:end="151:60"><expr pos:start="151:57" pos:end="151:60"><name pos:start="151:57" pos:end="151:60">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="157:5"><if pos:start="153:5" pos:end="157:5">if <condition pos:start="153:8" pos:end="153:16">(<expr pos:start="153:9" pos:end="153:15"><name pos:start="153:9" pos:end="153:11">ret</name> <operator pos:start="153:13" pos:end="153:13">&lt;</operator> <literal type="number" pos:start="153:15" pos:end="153:15">0</literal></expr>)</condition> <block pos:start="153:18" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:17">

        <goto pos:start="155:9" pos:end="155:17">goto <name pos:start="155:14" pos:end="155:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:23">/* Authenticate. */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:38"><expr pos:start="163:5" pos:end="163:37"><name pos:start="163:5" pos:end="163:7">ret</name> <operator pos:start="163:9" pos:end="163:9">=</operator> <call pos:start="163:11" pos:end="163:37"><name pos:start="163:11" pos:end="163:22">authenticate</name><argument_list pos:start="163:23" pos:end="163:37">(<argument pos:start="163:24" pos:end="163:24"><expr pos:start="163:24" pos:end="163:24"><name pos:start="163:24" pos:end="163:24">s</name></expr></argument>, <argument pos:start="163:27" pos:end="163:30"><expr pos:start="163:27" pos:end="163:30"><name pos:start="163:27" pos:end="163:30">user</name></expr></argument>, <argument pos:start="163:33" pos:end="163:36"><expr pos:start="163:33" pos:end="163:36"><name pos:start="163:33" pos:end="163:36">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="165:5" pos:end="169:5"><if pos:start="165:5" pos:end="169:5">if <condition pos:start="165:8" pos:end="165:16">(<expr pos:start="165:9" pos:end="165:15"><name pos:start="165:9" pos:end="165:11">ret</name> <operator pos:start="165:13" pos:end="165:13">&lt;</operator> <literal type="number" pos:start="165:15" pos:end="165:15">0</literal></expr>)</condition> <block pos:start="165:18" pos:end="169:5">{<block_content pos:start="167:9" pos:end="167:17">

        <goto pos:start="167:9" pos:end="167:17">goto <name pos:start="167:14" pos:end="167:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="173:5" pos:end="173:21">/* Start SFTP. */</comment>

    <expr_stmt pos:start="175:5" pos:end="175:44"><expr pos:start="175:5" pos:end="175:43"><name pos:start="175:5" pos:end="175:11"><name pos:start="175:5" pos:end="175:5">s</name><operator pos:start="175:6" pos:end="175:7">-&gt;</operator><name pos:start="175:8" pos:end="175:11">sftp</name></name> <operator pos:start="175:13" pos:end="175:13">=</operator> <call pos:start="175:15" pos:end="175:43"><name pos:start="175:15" pos:end="175:31">libssh2_sftp_init</name><argument_list pos:start="175:32" pos:end="175:43">(<argument pos:start="175:33" pos:end="175:42"><expr pos:start="175:33" pos:end="175:42"><name pos:start="175:33" pos:end="175:42"><name pos:start="175:33" pos:end="175:33">s</name><operator pos:start="175:34" pos:end="175:35">-&gt;</operator><name pos:start="175:36" pos:end="175:42">session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="177:5" pos:end="185:5"><if pos:start="177:5" pos:end="185:5">if <condition pos:start="177:8" pos:end="177:17">(<expr pos:start="177:9" pos:end="177:16"><operator pos:start="177:9" pos:end="177:9">!</operator><name pos:start="177:10" pos:end="177:16"><name pos:start="177:10" pos:end="177:10">s</name><operator pos:start="177:11" pos:end="177:12">-&gt;</operator><name pos:start="177:13" pos:end="177:16">sftp</name></name></expr>)</condition> <block pos:start="177:19" pos:end="185:5">{<block_content pos:start="179:9" pos:end="183:17">

        <expr_stmt pos:start="179:9" pos:end="179:72"><expr pos:start="179:9" pos:end="179:71"><call pos:start="179:9" pos:end="179:71"><name pos:start="179:9" pos:end="179:26">session_error_setg</name><argument_list pos:start="179:27" pos:end="179:71">(<argument pos:start="179:28" pos:end="179:31"><expr pos:start="179:28" pos:end="179:31"><name pos:start="179:28" pos:end="179:31">errp</name></expr></argument>, <argument pos:start="179:34" pos:end="179:34"><expr pos:start="179:34" pos:end="179:34"><name pos:start="179:34" pos:end="179:34">s</name></expr></argument>, <argument pos:start="179:37" pos:end="179:70"><expr pos:start="179:37" pos:end="179:70"><literal type="string" pos:start="179:37" pos:end="179:70">"failed to initialize sftp handle"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:22"><expr pos:start="181:9" pos:end="181:21"><name pos:start="181:9" pos:end="181:11">ret</name> <operator pos:start="181:13" pos:end="181:13">=</operator> <operator pos:start="181:15" pos:end="181:15">-</operator><name pos:start="181:16" pos:end="181:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="183:9" pos:end="183:17">goto <name pos:start="183:14" pos:end="183:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="189:5" pos:end="189:31">/* Open the remote file. */</comment>

    <expr_stmt pos:start="191:5" pos:end="193:41"><expr pos:start="191:5" pos:end="193:40"><call pos:start="191:5" pos:end="193:40"><name pos:start="191:5" pos:end="191:11">DPRINTF</name><argument_list pos:start="191:12" pos:end="193:40">(<argument pos:start="191:13" pos:end="191:55"><expr pos:start="191:13" pos:end="191:55"><literal type="string" pos:start="191:13" pos:end="191:55">"opening file %s flags=0x%x creat_mode=0%o"</literal></expr></argument>,

            <argument pos:start="193:13" pos:end="193:16"><expr pos:start="193:13" pos:end="193:16"><name pos:start="193:13" pos:end="193:16">path</name></expr></argument>, <argument pos:start="193:19" pos:end="193:27"><expr pos:start="193:19" pos:end="193:27"><name pos:start="193:19" pos:end="193:27">ssh_flags</name></expr></argument>, <argument pos:start="193:30" pos:end="193:39"><expr pos:start="193:30" pos:end="193:39"><name pos:start="193:30" pos:end="193:39">creat_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:77"><expr pos:start="195:5" pos:end="195:76"><name pos:start="195:5" pos:end="195:18"><name pos:start="195:5" pos:end="195:5">s</name><operator pos:start="195:6" pos:end="195:7">-&gt;</operator><name pos:start="195:8" pos:end="195:18">sftp_handle</name></name> <operator pos:start="195:20" pos:end="195:20">=</operator> <call pos:start="195:22" pos:end="195:76"><name pos:start="195:22" pos:end="195:38">libssh2_sftp_open</name><argument_list pos:start="195:39" pos:end="195:76">(<argument pos:start="195:40" pos:end="195:46"><expr pos:start="195:40" pos:end="195:46"><name pos:start="195:40" pos:end="195:46"><name pos:start="195:40" pos:end="195:40">s</name><operator pos:start="195:41" pos:end="195:42">-&gt;</operator><name pos:start="195:43" pos:end="195:46">sftp</name></name></expr></argument>, <argument pos:start="195:49" pos:end="195:52"><expr pos:start="195:49" pos:end="195:52"><name pos:start="195:49" pos:end="195:52">path</name></expr></argument>, <argument pos:start="195:55" pos:end="195:63"><expr pos:start="195:55" pos:end="195:63"><name pos:start="195:55" pos:end="195:63">ssh_flags</name></expr></argument>, <argument pos:start="195:66" pos:end="195:75"><expr pos:start="195:66" pos:end="195:75"><name pos:start="195:66" pos:end="195:75">creat_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="197:5" pos:end="205:5"><if pos:start="197:5" pos:end="205:5">if <condition pos:start="197:8" pos:end="197:24">(<expr pos:start="197:9" pos:end="197:23"><operator pos:start="197:9" pos:end="197:9">!</operator><name pos:start="197:10" pos:end="197:23"><name pos:start="197:10" pos:end="197:10">s</name><operator pos:start="197:11" pos:end="197:12">-&gt;</operator><name pos:start="197:13" pos:end="197:23">sftp_handle</name></name></expr>)</condition> <block pos:start="197:26" pos:end="205:5">{<block_content pos:start="199:9" pos:end="203:17">

        <expr_stmt pos:start="199:9" pos:end="199:77"><expr pos:start="199:9" pos:end="199:76"><call pos:start="199:9" pos:end="199:76"><name pos:start="199:9" pos:end="199:26">session_error_setg</name><argument_list pos:start="199:27" pos:end="199:76">(<argument pos:start="199:28" pos:end="199:31"><expr pos:start="199:28" pos:end="199:31"><name pos:start="199:28" pos:end="199:31">errp</name></expr></argument>, <argument pos:start="199:34" pos:end="199:34"><expr pos:start="199:34" pos:end="199:34"><name pos:start="199:34" pos:end="199:34">s</name></expr></argument>, <argument pos:start="199:37" pos:end="199:69"><expr pos:start="199:37" pos:end="199:69"><literal type="string" pos:start="199:37" pos:end="199:69">"failed to open remote file '%s'"</literal></expr></argument>, <argument pos:start="199:72" pos:end="199:75"><expr pos:start="199:72" pos:end="199:75"><name pos:start="199:72" pos:end="199:75">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:22"><expr pos:start="201:9" pos:end="201:21"><name pos:start="201:9" pos:end="201:11">ret</name> <operator pos:start="201:13" pos:end="201:13">=</operator> <operator pos:start="201:15" pos:end="201:15">-</operator><name pos:start="201:16" pos:end="201:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="203:9" pos:end="203:17">goto <name pos:start="203:14" pos:end="203:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:54"><expr pos:start="209:5" pos:end="209:53"><name pos:start="209:5" pos:end="209:5">r</name> <operator pos:start="209:7" pos:end="209:7">=</operator> <call pos:start="209:9" pos:end="209:53"><name pos:start="209:9" pos:end="209:26">libssh2_sftp_fstat</name><argument_list pos:start="209:27" pos:end="209:53">(<argument pos:start="209:28" pos:end="209:41"><expr pos:start="209:28" pos:end="209:41"><name pos:start="209:28" pos:end="209:41"><name pos:start="209:28" pos:end="209:28">s</name><operator pos:start="209:29" pos:end="209:30">-&gt;</operator><name pos:start="209:31" pos:end="209:41">sftp_handle</name></name></expr></argument>, <argument pos:start="209:44" pos:end="209:52"><expr pos:start="209:44" pos:end="209:52"><operator pos:start="209:44" pos:end="209:44">&amp;</operator><name pos:start="209:45" pos:end="209:52"><name pos:start="209:45" pos:end="209:45">s</name><operator pos:start="209:46" pos:end="209:47">-&gt;</operator><name pos:start="209:48" pos:end="209:52">attrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="211:5" pos:end="217:5"><if pos:start="211:5" pos:end="217:5">if <condition pos:start="211:8" pos:end="211:14">(<expr pos:start="211:9" pos:end="211:13"><name pos:start="211:9" pos:end="211:9">r</name> <operator pos:start="211:11" pos:end="211:11">&lt;</operator> <literal type="number" pos:start="211:13" pos:end="211:13">0</literal></expr>)</condition> <block pos:start="211:16" pos:end="217:5">{<block_content pos:start="213:9" pos:end="215:23">

        <expr_stmt pos:start="213:9" pos:end="213:67"><expr pos:start="213:9" pos:end="213:66"><call pos:start="213:9" pos:end="213:66"><name pos:start="213:9" pos:end="213:23">sftp_error_setg</name><argument_list pos:start="213:24" pos:end="213:66">(<argument pos:start="213:25" pos:end="213:28"><expr pos:start="213:25" pos:end="213:28"><name pos:start="213:25" pos:end="213:28">errp</name></expr></argument>, <argument pos:start="213:31" pos:end="213:31"><expr pos:start="213:31" pos:end="213:31"><name pos:start="213:31" pos:end="213:31">s</name></expr></argument>, <argument pos:start="213:34" pos:end="213:65"><expr pos:start="213:34" pos:end="213:65"><literal type="string" pos:start="213:34" pos:end="213:65">"failed to read file attributes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="215:9" pos:end="215:23">return <expr pos:start="215:16" pos:end="215:22"><operator pos:start="215:16" pos:end="215:16">-</operator><name pos:start="215:17" pos:end="215:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="221:5" pos:end="225:7">/* Delete the options we've used; any not deleted will cause the

     * block layer to give an error about unused options.

     */</comment>

    <expr_stmt pos:start="227:5" pos:end="227:31"><expr pos:start="227:5" pos:end="227:30"><call pos:start="227:5" pos:end="227:30"><name pos:start="227:5" pos:end="227:13">qdict_del</name><argument_list pos:start="227:14" pos:end="227:30">(<argument pos:start="227:15" pos:end="227:21"><expr pos:start="227:15" pos:end="227:21"><name pos:start="227:15" pos:end="227:21">options</name></expr></argument>, <argument pos:start="227:24" pos:end="227:29"><expr pos:start="227:24" pos:end="227:29"><literal type="string" pos:start="227:24" pos:end="227:29">"host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:31"><expr pos:start="229:5" pos:end="229:30"><call pos:start="229:5" pos:end="229:30"><name pos:start="229:5" pos:end="229:13">qdict_del</name><argument_list pos:start="229:14" pos:end="229:30">(<argument pos:start="229:15" pos:end="229:21"><expr pos:start="229:15" pos:end="229:21"><name pos:start="229:15" pos:end="229:21">options</name></expr></argument>, <argument pos:start="229:24" pos:end="229:29"><expr pos:start="229:24" pos:end="229:29"><literal type="string" pos:start="229:24" pos:end="229:29">"port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:31"><expr pos:start="231:5" pos:end="231:30"><call pos:start="231:5" pos:end="231:30"><name pos:start="231:5" pos:end="231:13">qdict_del</name><argument_list pos:start="231:14" pos:end="231:30">(<argument pos:start="231:15" pos:end="231:21"><expr pos:start="231:15" pos:end="231:21"><name pos:start="231:15" pos:end="231:21">options</name></expr></argument>, <argument pos:start="231:24" pos:end="231:29"><expr pos:start="231:24" pos:end="231:29"><literal type="string" pos:start="231:24" pos:end="231:29">"user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:31"><expr pos:start="233:5" pos:end="233:30"><call pos:start="233:5" pos:end="233:30"><name pos:start="233:5" pos:end="233:13">qdict_del</name><argument_list pos:start="233:14" pos:end="233:30">(<argument pos:start="233:15" pos:end="233:21"><expr pos:start="233:15" pos:end="233:21"><name pos:start="233:15" pos:end="233:21">options</name></expr></argument>, <argument pos:start="233:24" pos:end="233:29"><expr pos:start="233:24" pos:end="233:29"><literal type="string" pos:start="233:24" pos:end="233:29">"path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:41"><expr pos:start="235:5" pos:end="235:40"><call pos:start="235:5" pos:end="235:40"><name pos:start="235:5" pos:end="235:13">qdict_del</name><argument_list pos:start="235:14" pos:end="235:40">(<argument pos:start="235:15" pos:end="235:21"><expr pos:start="235:15" pos:end="235:21"><name pos:start="235:15" pos:end="235:21">options</name></expr></argument>, <argument pos:start="235:24" pos:end="235:39"><expr pos:start="235:24" pos:end="235:39"><literal type="string" pos:start="235:24" pos:end="235:39">"host_key_check"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="239:5" pos:end="239:13">return <expr pos:start="239:12" pos:end="239:12"><literal type="number" pos:start="239:12" pos:end="239:12">0</literal></expr>;</return>



 <label pos:start="243:2" pos:end="243:5"><name pos:start="243:2" pos:end="243:4">err</name>:</label>

    <if_stmt pos:start="245:5" pos:end="249:5"><if pos:start="245:5" pos:end="249:5">if <condition pos:start="245:8" pos:end="245:23">(<expr pos:start="245:9" pos:end="245:22"><name pos:start="245:9" pos:end="245:22"><name pos:start="245:9" pos:end="245:9">s</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:22">sftp_handle</name></name></expr>)</condition> <block pos:start="245:25" pos:end="249:5">{<block_content pos:start="247:9" pos:end="247:43">

        <expr_stmt pos:start="247:9" pos:end="247:43"><expr pos:start="247:9" pos:end="247:42"><call pos:start="247:9" pos:end="247:42"><name pos:start="247:9" pos:end="247:26">libssh2_sftp_close</name><argument_list pos:start="247:27" pos:end="247:42">(<argument pos:start="247:28" pos:end="247:41"><expr pos:start="247:28" pos:end="247:41"><name pos:start="247:28" pos:end="247:41"><name pos:start="247:28" pos:end="247:28">s</name><operator pos:start="247:29" pos:end="247:30">-&gt;</operator><name pos:start="247:31" pos:end="247:41">sftp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:26"><expr pos:start="251:5" pos:end="251:25"><name pos:start="251:5" pos:end="251:18"><name pos:start="251:5" pos:end="251:5">s</name><operator pos:start="251:6" pos:end="251:7">-&gt;</operator><name pos:start="251:8" pos:end="251:18">sftp_handle</name></name> <operator pos:start="251:20" pos:end="251:20">=</operator> <name pos:start="251:22" pos:end="251:25">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="253:5" pos:end="257:5"><if pos:start="253:5" pos:end="257:5">if <condition pos:start="253:8" pos:end="253:16">(<expr pos:start="253:9" pos:end="253:15"><name pos:start="253:9" pos:end="253:15"><name pos:start="253:9" pos:end="253:9">s</name><operator pos:start="253:10" pos:end="253:11">-&gt;</operator><name pos:start="253:12" pos:end="253:15">sftp</name></name></expr>)</condition> <block pos:start="253:18" pos:end="257:5">{<block_content pos:start="255:9" pos:end="255:39">

        <expr_stmt pos:start="255:9" pos:end="255:39"><expr pos:start="255:9" pos:end="255:38"><call pos:start="255:9" pos:end="255:38"><name pos:start="255:9" pos:end="255:29">libssh2_sftp_shutdown</name><argument_list pos:start="255:30" pos:end="255:38">(<argument pos:start="255:31" pos:end="255:37"><expr pos:start="255:31" pos:end="255:37"><name pos:start="255:31" pos:end="255:37"><name pos:start="255:31" pos:end="255:31">s</name><operator pos:start="255:32" pos:end="255:33">-&gt;</operator><name pos:start="255:34" pos:end="255:37">sftp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:19"><expr pos:start="259:5" pos:end="259:18"><name pos:start="259:5" pos:end="259:11"><name pos:start="259:5" pos:end="259:5">s</name><operator pos:start="259:6" pos:end="259:7">-&gt;</operator><name pos:start="259:8" pos:end="259:11">sftp</name></name> <operator pos:start="259:13" pos:end="259:13">=</operator> <name pos:start="259:15" pos:end="259:18">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="261:5" pos:end="271:5"><if pos:start="261:5" pos:end="271:5">if <condition pos:start="261:8" pos:end="261:19">(<expr pos:start="261:9" pos:end="261:18"><name pos:start="261:9" pos:end="261:18"><name pos:start="261:9" pos:end="261:9">s</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:18">session</name></name></expr>)</condition> <block pos:start="261:21" pos:end="271:5">{<block_content pos:start="263:9" pos:end="269:41">

        <expr_stmt pos:start="263:9" pos:end="267:63"><expr pos:start="263:9" pos:end="267:62"><call pos:start="263:9" pos:end="267:62"><name pos:start="263:9" pos:end="263:34">libssh2_session_disconnect</name><argument_list pos:start="263:35" pos:end="267:62">(<argument pos:start="263:36" pos:end="263:45"><expr pos:start="263:36" pos:end="263:45"><name pos:start="263:36" pos:end="263:45"><name pos:start="263:36" pos:end="263:36">s</name><operator pos:start="263:37" pos:end="263:38">-&gt;</operator><name pos:start="263:39" pos:end="263:45">session</name></name></expr></argument>,

                                   <argument pos:start="265:36" pos:end="267:61"><expr pos:start="265:36" pos:end="267:61"><literal type="string" pos:start="265:36" pos:end="265:59">"from qemu ssh client: "</literal>

                                   <literal type="string" pos:start="267:36" pos:end="267:61">"error opening connection"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:41"><expr pos:start="269:9" pos:end="269:40"><call pos:start="269:9" pos:end="269:40"><name pos:start="269:9" pos:end="269:28">libssh2_session_free</name><argument_list pos:start="269:29" pos:end="269:40">(<argument pos:start="269:30" pos:end="269:39"><expr pos:start="269:30" pos:end="269:39"><name pos:start="269:30" pos:end="269:39"><name pos:start="269:30" pos:end="269:30">s</name><operator pos:start="269:31" pos:end="269:32">-&gt;</operator><name pos:start="269:33" pos:end="269:39">session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:22"><expr pos:start="273:5" pos:end="273:21"><name pos:start="273:5" pos:end="273:14"><name pos:start="273:5" pos:end="273:5">s</name><operator pos:start="273:6" pos:end="273:7">-&gt;</operator><name pos:start="273:8" pos:end="273:14">session</name></name> <operator pos:start="273:16" pos:end="273:16">=</operator> <name pos:start="273:18" pos:end="273:21">NULL</name></expr>;</expr_stmt>



    <return pos:start="277:5" pos:end="277:15">return <expr pos:start="277:12" pos:end="277:14"><name pos:start="277:12" pos:end="277:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
