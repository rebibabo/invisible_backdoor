<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24120.c" pos:tabs="8"><function pos:start="1:1" pos:end="207:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_sidx</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="207:1">{<block_content pos:start="5:5" pos:end="205:13">

    <decl_stmt pos:start="5:5" pos:end="5:63"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:18">offset</name> <init pos:start="5:20" pos:end="5:46">= <expr pos:start="5:22" pos:end="5:46"><call pos:start="5:22" pos:end="5:34"><name pos:start="5:22" pos:end="5:30">avio_tell</name><argument_list pos:start="5:31" pos:end="5:34">(<argument pos:start="5:32" pos:end="5:33"><expr pos:start="5:32" pos:end="5:33"><name pos:start="5:32" pos:end="5:33">pb</name></expr></argument>)</argument_list></call> <operator pos:start="5:36" pos:end="5:36">+</operator> <name pos:start="5:38" pos:end="5:46"><name pos:start="5:38" pos:end="5:41">atom</name><operator pos:start="5:42" pos:end="5:42">.</operator><name pos:start="5:43" pos:end="5:46">size</name></name></expr></init></decl>, <decl pos:start="5:49" pos:end="5:51"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:49" pos:end="5:51">pts</name></decl>, <decl pos:start="5:54" pos:end="5:62"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:54" pos:end="5:62">timestamp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:19">version</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:14">i</name></decl>, <decl pos:start="9:17" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:17" pos:end="9:17">j</name></decl>, <decl pos:start="9:20" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:20" pos:end="9:27">track_id</name></decl>, <decl pos:start="9:30" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:30" pos:end="9:39">item_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name> <init pos:start="11:18" pos:end="11:23">= <expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:20">ref_st</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20">MOVStreamContext</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:24">sc</name></decl>, <decl pos:start="15:27" pos:end="15:40"><type ref="prev" pos:start="15:5" pos:end="15:22"><modifier pos:start="15:27" pos:end="15:27">*</modifier></type><name pos:start="15:28" pos:end="15:33">ref_sc</name> <init pos:start="15:35" pos:end="15:40">= <expr pos:start="15:37" pos:end="15:40"><name pos:start="15:37" pos:end="15:40">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:14">AVRational</name></type> <name pos:start="17:16" pos:end="17:24">timescale</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:11">version</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:25"><name pos:start="21:15" pos:end="21:21">avio_r8</name><argument_list pos:start="21:22" pos:end="21:25">(<argument pos:start="21:23" pos:end="21:24"><expr pos:start="21:23" pos:end="21:24"><name pos:start="21:23" pos:end="21:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:15">version</name> <operator pos:start="23:17" pos:end="23:17">&gt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">1</literal></expr>)</condition> <block pos:start="23:22" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:17">

        <expr_stmt pos:start="25:9" pos:end="25:65"><expr pos:start="25:9" pos:end="25:64"><call pos:start="25:9" pos:end="25:64"><name pos:start="25:9" pos:end="25:29">avpriv_request_sample</name><argument_list pos:start="25:30" pos:end="25:64">(<argument pos:start="25:31" pos:end="25:35"><expr pos:start="25:31" pos:end="25:35"><name pos:start="25:31" pos:end="25:35"><name pos:start="25:31" pos:end="25:31">c</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:35">fc</name></name></expr></argument>, <argument pos:start="25:38" pos:end="25:54"><expr pos:start="25:38" pos:end="25:54"><literal type="string" pos:start="25:38" pos:end="25:54">"sidx version %u"</literal></expr></argument>, <argument pos:start="25:57" pos:end="25:63"><expr pos:start="25:57" pos:end="25:63"><name pos:start="25:57" pos:end="25:63">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><call pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:13">avio_rb24</name><argument_list pos:start="33:14" pos:end="33:17">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><name pos:start="33:15" pos:end="33:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="33:20" pos:end="33:27">// flags</comment>



    <expr_stmt pos:start="37:5" pos:end="37:29"><expr pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:12">track_id</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:28"><name pos:start="37:16" pos:end="37:24">avio_rb32</name><argument_list pos:start="37:25" pos:end="37:28">(<argument pos:start="37:26" pos:end="37:27"><expr pos:start="37:26" pos:end="37:27"><name pos:start="37:26" pos:end="37:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="37:31" pos:end="37:45">// Reference ID</comment>

    <for pos:start="39:5" pos:end="49:5">for <control pos:start="39:9" pos:end="39:43">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:38"><expr pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:37"><name pos:start="39:21" pos:end="39:21">c</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:25">fc</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:37">nb_streams</name></name></expr>;</condition> <incr pos:start="39:40" pos:end="39:42"><expr pos:start="39:40" pos:end="39:42"><name pos:start="39:40" pos:end="39:40">i</name><operator pos:start="39:41" pos:end="39:42">++</operator></expr></incr>)</control> <block pos:start="39:45" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:9">

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:46">(<expr pos:start="41:13" pos:end="41:45"><name pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:13">c</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:17">fc</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:26">streams</name><index pos:start="41:27" pos:end="41:29">[<expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">i</name></expr>]</index></name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:33">id</name> <operator pos:start="41:35" pos:end="41:36">==</operator> <name pos:start="41:38" pos:end="41:45">track_id</name></expr>)</condition> <block pos:start="41:48" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:18">

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:14">st</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:34"><name pos:start="43:18" pos:end="43:18">c</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:22">fc</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:31">streams</name><index pos:start="43:32" pos:end="43:34">[<expr pos:start="43:33" pos:end="43:33"><name pos:start="43:33" pos:end="43:33">i</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:12">(<expr pos:start="51:9" pos:end="51:11"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:11">st</name></expr>)</condition> <block pos:start="51:14" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:17">

        <expr_stmt pos:start="53:9" pos:end="53:94"><expr pos:start="53:9" pos:end="53:93"><call pos:start="53:9" pos:end="53:93"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:93">(<argument pos:start="53:16" pos:end="53:20"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:16">c</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:20">fc</name></name></expr></argument>, <argument pos:start="53:23" pos:end="53:36"><expr pos:start="53:23" pos:end="53:36"><name pos:start="53:23" pos:end="53:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="53:39" pos:end="53:82"><expr pos:start="53:39" pos:end="53:82"><literal type="string" pos:start="53:39" pos:end="53:82">"could not find corresponding track id %d\n"</literal></expr></argument>, <argument pos:start="53:85" pos:end="53:92"><expr pos:start="53:85" pos:end="53:92"><name pos:start="53:85" pos:end="53:92">track_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:17">return <expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:23"><expr pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:6">sc</name> <operator pos:start="61:8" pos:end="61:8">=</operator> <name pos:start="61:10" pos:end="61:22"><name pos:start="61:10" pos:end="61:11">st</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:22">priv_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:44"><expr pos:start="65:5" pos:end="65:43"><name pos:start="65:5" pos:end="65:13">timescale</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <call pos:start="65:17" pos:end="65:43"><name pos:start="65:17" pos:end="65:25">av_make_q</name><argument_list pos:start="65:26" pos:end="65:43">(<argument pos:start="65:27" pos:end="65:27"><expr pos:start="65:27" pos:end="65:27"><literal type="number" pos:start="65:27" pos:end="65:27">1</literal></expr></argument>, <argument pos:start="65:30" pos:end="65:42"><expr pos:start="65:30" pos:end="65:42"><call pos:start="65:30" pos:end="65:42"><name pos:start="65:30" pos:end="65:38">avio_rb32</name><argument_list pos:start="65:39" pos:end="65:42">(<argument pos:start="65:40" pos:end="65:41"><expr pos:start="65:40" pos:end="65:41"><name pos:start="65:40" pos:end="65:41">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:27">(<expr pos:start="69:9" pos:end="69:26"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:17">timescale</name><operator pos:start="69:18" pos:end="69:18">.</operator><name pos:start="69:19" pos:end="69:21">den</name></name> <operator pos:start="69:23" pos:end="69:24">&lt;=</operator> <literal type="number" pos:start="69:26" pos:end="69:26">0</literal></expr>)</condition> <block pos:start="69:29" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:35">

        <expr_stmt pos:start="71:9" pos:end="71:84"><expr pos:start="71:9" pos:end="71:83"><call pos:start="71:9" pos:end="71:83"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:83">(<argument pos:start="71:16" pos:end="71:20"><expr pos:start="71:16" pos:end="71:20"><name pos:start="71:16" pos:end="71:20"><name pos:start="71:16" pos:end="71:16">c</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:20">fc</name></name></expr></argument>, <argument pos:start="71:23" pos:end="71:34"><expr pos:start="71:23" pos:end="71:34"><name pos:start="71:23" pos:end="71:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:37" pos:end="71:67"><expr pos:start="71:37" pos:end="71:67"><literal type="string" pos:start="71:37" pos:end="71:67">"Invalid sidx timescale 1/%d\n"</literal></expr></argument>, <argument pos:start="71:70" pos:end="71:82"><expr pos:start="71:70" pos:end="71:82"><name pos:start="71:70" pos:end="71:82"><name pos:start="71:70" pos:end="71:78">timescale</name><operator pos:start="71:79" pos:end="71:79">.</operator><name pos:start="71:80" pos:end="71:82">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:35">return <expr pos:start="73:16" pos:end="73:34"><name pos:start="73:16" pos:end="73:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="91:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:21">(<expr pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:15">version</name> <operator pos:start="79:17" pos:end="79:18">==</operator> <literal type="number" pos:start="79:20" pos:end="79:20">0</literal></expr>)</condition> <block pos:start="79:23" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:32">

        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:11">pts</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:27"><name pos:start="81:15" pos:end="81:23">avio_rb32</name><argument_list pos:start="81:24" pos:end="81:27">(<argument pos:start="81:25" pos:end="81:26"><expr pos:start="81:25" pos:end="81:26"><name pos:start="81:25" pos:end="81:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:32"><expr pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:14">offset</name> <operator pos:start="83:16" pos:end="83:17">+=</operator> <call pos:start="83:19" pos:end="83:31"><name pos:start="83:19" pos:end="83:27">avio_rb32</name><argument_list pos:start="83:28" pos:end="83:31">(<argument pos:start="83:29" pos:end="83:30"><expr pos:start="83:29" pos:end="83:30"><name pos:start="83:29" pos:end="83:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="91:5">else <block pos:start="85:12" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:32">

        <expr_stmt pos:start="87:9" pos:end="87:28"><expr pos:start="87:9" pos:end="87:27"><name pos:start="87:9" pos:end="87:11">pts</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <call pos:start="87:15" pos:end="87:27"><name pos:start="87:15" pos:end="87:23">avio_rb64</name><argument_list pos:start="87:24" pos:end="87:27">(<argument pos:start="87:25" pos:end="87:26"><expr pos:start="87:25" pos:end="87:26"><name pos:start="87:25" pos:end="87:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:32"><expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:14">offset</name> <operator pos:start="89:16" pos:end="89:17">+=</operator> <call pos:start="89:19" pos:end="89:31"><name pos:start="89:19" pos:end="89:27">avio_rb64</name><argument_list pos:start="89:28" pos:end="89:31">(<argument pos:start="89:29" pos:end="89:30"><expr pos:start="89:29" pos:end="89:30"><name pos:start="89:29" pos:end="89:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:18"><expr pos:start="95:5" pos:end="95:17"><call pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:13">avio_rb16</name><argument_list pos:start="95:14" pos:end="95:17">(<argument pos:start="95:15" pos:end="95:16"><expr pos:start="95:15" pos:end="95:16"><name pos:start="95:15" pos:end="95:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="95:20" pos:end="95:30">// reserved</comment>



    <expr_stmt pos:start="99:5" pos:end="99:31"><expr pos:start="99:5" pos:end="99:30"><name pos:start="99:5" pos:end="99:14">item_count</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <call pos:start="99:18" pos:end="99:30"><name pos:start="99:18" pos:end="99:26">avio_rb16</name><argument_list pos:start="99:27" pos:end="99:30">(<argument pos:start="99:28" pos:end="99:29"><expr pos:start="99:28" pos:end="99:29"><name pos:start="99:28" pos:end="99:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="103:5" pos:end="141:5">for <control pos:start="103:9" pos:end="103:36">(<init pos:start="103:10" pos:end="103:15"><expr pos:start="103:10" pos:end="103:14"><name pos:start="103:10" pos:end="103:10">i</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <literal type="number" pos:start="103:14" pos:end="103:14">0</literal></expr>;</init> <condition pos:start="103:17" pos:end="103:31"><expr pos:start="103:17" pos:end="103:30"><name pos:start="103:17" pos:end="103:17">i</name> <operator pos:start="103:19" pos:end="103:19">&lt;</operator> <name pos:start="103:21" pos:end="103:30">item_count</name></expr>;</condition> <incr pos:start="103:33" pos:end="103:35"><expr pos:start="103:33" pos:end="103:35"><name pos:start="103:33" pos:end="103:33">i</name><operator pos:start="103:34" pos:end="103:35">++</operator></expr></incr>)</control> <block pos:start="103:38" pos:end="141:5">{<block_content pos:start="105:9" pos:end="139:24">

        <decl_stmt pos:start="105:9" pos:end="105:18"><decl pos:start="105:9" pos:end="105:17"><type pos:start="105:9" pos:end="105:11"><name pos:start="105:9" pos:end="105:11">int</name></type> <name pos:start="105:13" pos:end="105:17">index</name></decl>;</decl_stmt>

        <decl_stmt pos:start="107:9" pos:end="107:49"><decl pos:start="107:9" pos:end="107:48"><type pos:start="107:9" pos:end="107:31"><name pos:start="107:9" pos:end="107:29">MOVFragmentStreamInfo</name> <modifier pos:start="107:31" pos:end="107:31">*</modifier></type> <name pos:start="107:33" pos:end="107:48">frag_stream_info</name></decl>;</decl_stmt>

        <decl_stmt pos:start="109:9" pos:end="109:38"><decl pos:start="109:9" pos:end="109:37"><type pos:start="109:9" pos:end="109:16"><name pos:start="109:9" pos:end="109:16">uint32_t</name></type> <name pos:start="109:18" pos:end="109:21">size</name> <init pos:start="109:23" pos:end="109:37">= <expr pos:start="109:25" pos:end="109:37"><call pos:start="109:25" pos:end="109:37"><name pos:start="109:25" pos:end="109:33">avio_rb32</name><argument_list pos:start="109:34" pos:end="109:37">(<argument pos:start="109:35" pos:end="109:36"><expr pos:start="109:35" pos:end="109:36"><name pos:start="109:35" pos:end="109:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="111:9" pos:end="111:42"><decl pos:start="111:9" pos:end="111:41"><type pos:start="111:9" pos:end="111:16"><name pos:start="111:9" pos:end="111:16">uint32_t</name></type> <name pos:start="111:18" pos:end="111:25">duration</name> <init pos:start="111:27" pos:end="111:41">= <expr pos:start="111:29" pos:end="111:41"><call pos:start="111:29" pos:end="111:41"><name pos:start="111:29" pos:end="111:37">avio_rb32</name><argument_list pos:start="111:38" pos:end="111:41">(<argument pos:start="111:39" pos:end="111:40"><expr pos:start="111:39" pos:end="111:40"><name pos:start="111:39" pos:end="111:40">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="113:9" pos:end="119:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:30">(<expr pos:start="113:13" pos:end="113:29"><name pos:start="113:13" pos:end="113:16">size</name> <operator pos:start="113:18" pos:end="113:18">&amp;</operator> <literal type="number" pos:start="113:20" pos:end="113:29">0x80000000</literal></expr>)</condition> <block pos:start="113:32" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:40">

            <expr_stmt pos:start="115:13" pos:end="115:66"><expr pos:start="115:13" pos:end="115:65"><call pos:start="115:13" pos:end="115:65"><name pos:start="115:13" pos:end="115:33">avpriv_request_sample</name><argument_list pos:start="115:34" pos:end="115:65">(<argument pos:start="115:35" pos:end="115:39"><expr pos:start="115:35" pos:end="115:39"><name pos:start="115:35" pos:end="115:39"><name pos:start="115:35" pos:end="115:35">c</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:39">fc</name></name></expr></argument>, <argument pos:start="115:42" pos:end="115:64"><expr pos:start="115:42" pos:end="115:64"><literal type="string" pos:start="115:42" pos:end="115:64">"sidx reference_type 1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="117:13" pos:end="117:40">return <expr pos:start="117:20" pos:end="117:39"><name pos:start="117:20" pos:end="117:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:22"><expr pos:start="121:9" pos:end="121:21"><call pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:17">avio_rb32</name><argument_list pos:start="121:18" pos:end="121:21">(<argument pos:start="121:19" pos:end="121:20"><expr pos:start="121:19" pos:end="121:20"><name pos:start="121:19" pos:end="121:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="121:24" pos:end="121:35">// sap_flags</comment>

        <expr_stmt pos:start="123:9" pos:end="123:64"><expr pos:start="123:9" pos:end="123:63"><name pos:start="123:9" pos:end="123:17">timestamp</name> <operator pos:start="123:19" pos:end="123:19">=</operator> <call pos:start="123:21" pos:end="123:63"><name pos:start="123:21" pos:end="123:32">av_rescale_q</name><argument_list pos:start="123:33" pos:end="123:63">(<argument pos:start="123:34" pos:end="123:36"><expr pos:start="123:34" pos:end="123:36"><name pos:start="123:34" pos:end="123:36">pts</name></expr></argument>, <argument pos:start="123:39" pos:end="123:51"><expr pos:start="123:39" pos:end="123:51"><name pos:start="123:39" pos:end="123:51"><name pos:start="123:39" pos:end="123:40">st</name><operator pos:start="123:41" pos:end="123:42">-&gt;</operator><name pos:start="123:43" pos:end="123:51">time_base</name></name></expr></argument>, <argument pos:start="123:54" pos:end="123:62"><expr pos:start="123:54" pos:end="123:62"><name pos:start="123:54" pos:end="123:62">timescale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:45"><expr pos:start="127:9" pos:end="127:44"><name pos:start="127:9" pos:end="127:13">index</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <call pos:start="127:17" pos:end="127:44"><name pos:start="127:17" pos:end="127:33">update_frag_index</name><argument_list pos:start="127:34" pos:end="127:44">(<argument pos:start="127:35" pos:end="127:35"><expr pos:start="127:35" pos:end="127:35"><name pos:start="127:35" pos:end="127:35">c</name></expr></argument>, <argument pos:start="127:38" pos:end="127:43"><expr pos:start="127:38" pos:end="127:43"><name pos:start="127:38" pos:end="127:43">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:81"><expr pos:start="129:9" pos:end="129:80"><name pos:start="129:9" pos:end="129:24">frag_stream_info</name> <operator pos:start="129:26" pos:end="129:26">=</operator> <call pos:start="129:28" pos:end="129:80"><name pos:start="129:28" pos:end="129:47">get_frag_stream_info</name><argument_list pos:start="129:48" pos:end="129:80">(<argument pos:start="129:49" pos:end="129:62"><expr pos:start="129:49" pos:end="129:62"><operator pos:start="129:49" pos:end="129:49">&amp;</operator><name pos:start="129:50" pos:end="129:62"><name pos:start="129:50" pos:end="129:50">c</name><operator pos:start="129:51" pos:end="129:52">-&gt;</operator><name pos:start="129:53" pos:end="129:62">frag_index</name></name></expr></argument>, <argument pos:start="129:65" pos:end="129:69"><expr pos:start="129:65" pos:end="129:69"><name pos:start="129:65" pos:end="129:69">index</name></expr></argument>, <argument pos:start="129:72" pos:end="129:79"><expr pos:start="129:72" pos:end="129:79"><name pos:start="129:72" pos:end="129:79">track_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="133:51"><if pos:start="131:9" pos:end="133:51">if <condition pos:start="131:12" pos:end="131:29">(<expr pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:28">frag_stream_info</name></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:51"><block_content pos:start="133:13" pos:end="133:51">

            <expr_stmt pos:start="133:13" pos:end="133:51"><expr pos:start="133:13" pos:end="133:50"><name pos:start="133:13" pos:end="133:38"><name pos:start="133:13" pos:end="133:28">frag_stream_info</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:38">sidx_pts</name></name> <operator pos:start="133:40" pos:end="133:40">=</operator> <name pos:start="133:42" pos:end="133:50">timestamp</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:23"><expr pos:start="137:9" pos:end="137:22"><name pos:start="137:9" pos:end="137:14">offset</name> <operator pos:start="137:16" pos:end="137:17">+=</operator> <name pos:start="137:19" pos:end="137:22">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:24"><expr pos:start="139:9" pos:end="139:23"><name pos:start="139:9" pos:end="139:11">pts</name> <operator pos:start="139:13" pos:end="139:14">+=</operator> <name pos:start="139:16" pos:end="139:23">duration</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="145:5" pos:end="145:39"><expr pos:start="145:5" pos:end="145:38"><name pos:start="145:5" pos:end="145:16"><name pos:start="145:5" pos:end="145:6">st</name><operator pos:start="145:7" pos:end="145:8">-&gt;</operator><name pos:start="145:9" pos:end="145:16">duration</name></name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:32"><name pos:start="145:20" pos:end="145:21">sc</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:32">track_end</name></name> <operator pos:start="145:34" pos:end="145:34">=</operator> <name pos:start="145:36" pos:end="145:38">pts</name></expr>;</expr_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:21"><expr pos:start="149:5" pos:end="149:20"><name pos:start="149:5" pos:end="149:16"><name pos:start="149:5" pos:end="149:6">sc</name><operator pos:start="149:7" pos:end="149:8">-&gt;</operator><name pos:start="149:9" pos:end="149:16">has_sidx</name></name> <operator pos:start="149:18" pos:end="149:18">=</operator> <literal type="number" pos:start="149:20" pos:end="149:20">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="153:5" pos:end="201:5"><if pos:start="153:5" pos:end="201:5">if <condition pos:start="153:8" pos:end="153:32">(<expr pos:start="153:9" pos:end="153:31"><name pos:start="153:9" pos:end="153:14">offset</name> <operator pos:start="153:16" pos:end="153:17">==</operator> <call pos:start="153:19" pos:end="153:31"><name pos:start="153:19" pos:end="153:27">avio_size</name><argument_list pos:start="153:28" pos:end="153:31">(<argument pos:start="153:29" pos:end="153:30"><expr pos:start="153:29" pos:end="153:30"><name pos:start="153:29" pos:end="153:30">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="153:34" pos:end="201:5">{<block_content pos:start="159:9" pos:end="199:35">

        <comment type="line" pos:start="155:9" pos:end="155:69">// Find first entry in fragment index that came from an sidx.</comment>

        <comment type="line" pos:start="157:9" pos:end="157:59">// This will pretty much always be the first entry.</comment>

        <for pos:start="159:9" pos:end="181:9">for <control pos:start="159:13" pos:end="159:52">(<init pos:start="159:14" pos:end="159:19"><expr pos:start="159:14" pos:end="159:18"><name pos:start="159:14" pos:end="159:14">i</name> <operator pos:start="159:16" pos:end="159:16">=</operator> <literal type="number" pos:start="159:18" pos:end="159:18">0</literal></expr>;</init> <condition pos:start="159:21" pos:end="159:47"><expr pos:start="159:21" pos:end="159:46"><name pos:start="159:21" pos:end="159:21">i</name> <operator pos:start="159:23" pos:end="159:23">&lt;</operator> <name pos:start="159:25" pos:end="159:46"><name pos:start="159:25" pos:end="159:25">c</name><operator pos:start="159:26" pos:end="159:27">-&gt;</operator><name pos:start="159:28" pos:end="159:37">frag_index</name><operator pos:start="159:38" pos:end="159:38">.</operator><name pos:start="159:39" pos:end="159:46">nb_items</name></name></expr>;</condition> <incr pos:start="159:49" pos:end="159:51"><expr pos:start="159:49" pos:end="159:51"><name pos:start="159:49" pos:end="159:49">i</name><operator pos:start="159:50" pos:end="159:51">++</operator></expr></incr>)</control> <block pos:start="159:54" pos:end="181:9">{<block_content pos:start="161:13" pos:end="179:13">

            <decl_stmt pos:start="161:13" pos:end="161:65"><decl pos:start="161:13" pos:end="161:64"><type pos:start="161:13" pos:end="161:34"><name pos:start="161:13" pos:end="161:32">MOVFragmentIndexItem</name> <modifier pos:start="161:34" pos:end="161:34">*</modifier></type> <name pos:start="161:36" pos:end="161:39">item</name> <init pos:start="161:41" pos:end="161:64">= <expr pos:start="161:43" pos:end="161:64"><operator pos:start="161:43" pos:end="161:43">&amp;</operator><name pos:start="161:44" pos:end="161:64"><name pos:start="161:44" pos:end="161:44">c</name><operator pos:start="161:45" pos:end="161:46">-&gt;</operator><name pos:start="161:47" pos:end="161:56">frag_index</name><operator pos:start="161:57" pos:end="161:57">.</operator><name pos:start="161:58" pos:end="161:61">item</name><index pos:start="161:62" pos:end="161:64">[<expr pos:start="161:63" pos:end="161:63"><name pos:start="161:63" pos:end="161:63">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="163:13" pos:end="179:13">for <control pos:start="163:17" pos:end="163:72">(<init pos:start="163:18" pos:end="163:23"><expr pos:start="163:18" pos:end="163:22"><name pos:start="163:18" pos:end="163:18">j</name> <operator pos:start="163:20" pos:end="163:20">=</operator> <literal type="number" pos:start="163:22" pos:end="163:22">0</literal></expr>;</init> <condition pos:start="163:25" pos:end="163:67"><expr pos:start="163:25" pos:end="163:66"><name pos:start="163:25" pos:end="163:30">ref_st</name> <operator pos:start="163:32" pos:end="163:33">==</operator> <name pos:start="163:35" pos:end="163:38">NULL</name> <operator pos:start="163:40" pos:end="163:41">&amp;&amp;</operator> <name pos:start="163:43" pos:end="163:43">j</name> <operator pos:start="163:45" pos:end="163:45">&lt;</operator> <name pos:start="163:47" pos:end="163:66"><name pos:start="163:47" pos:end="163:50">item</name><operator pos:start="163:51" pos:end="163:52">-&gt;</operator><name pos:start="163:53" pos:end="163:66">nb_stream_info</name></name></expr>;</condition> <incr pos:start="163:69" pos:end="163:71"><expr pos:start="163:69" pos:end="163:71"><name pos:start="163:69" pos:end="163:69">j</name><operator pos:start="163:70" pos:end="163:71">++</operator></expr></incr>)</control> <block pos:start="163:74" pos:end="179:13">{<block_content pos:start="165:17" pos:end="177:17">

                <decl_stmt pos:start="165:17" pos:end="165:43"><decl pos:start="165:17" pos:end="165:42"><type pos:start="165:17" pos:end="165:39"><name pos:start="165:17" pos:end="165:37">MOVFragmentStreamInfo</name> <modifier pos:start="165:39" pos:end="165:39">*</modifier></type> <name pos:start="165:41" pos:end="165:42">si</name></decl>;</decl_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:43"><expr pos:start="167:17" pos:end="167:42"><name pos:start="167:17" pos:end="167:18">si</name> <operator pos:start="167:20" pos:end="167:20">=</operator> <operator pos:start="167:22" pos:end="167:22">&amp;</operator><name pos:start="167:23" pos:end="167:42"><name pos:start="167:23" pos:end="167:26">item</name><operator pos:start="167:27" pos:end="167:28">-&gt;</operator><name pos:start="167:29" pos:end="167:39">stream_info</name><index pos:start="167:40" pos:end="167:42">[<expr pos:start="167:41" pos:end="167:41"><name pos:start="167:41" pos:end="167:41">j</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="169:17" pos:end="177:17"><if pos:start="169:17" pos:end="177:17">if <condition pos:start="169:20" pos:end="169:51">(<expr pos:start="169:21" pos:end="169:50"><name pos:start="169:21" pos:end="169:32"><name pos:start="169:21" pos:end="169:22">si</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:32">sidx_pts</name></name> <operator pos:start="169:34" pos:end="169:35">!=</operator> <name pos:start="169:37" pos:end="169:50">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="169:53" pos:end="177:17">{<block_content pos:start="171:21" pos:end="175:26">

                    <expr_stmt pos:start="171:21" pos:end="171:47"><expr pos:start="171:21" pos:end="171:46"><name pos:start="171:21" pos:end="171:26">ref_st</name> <operator pos:start="171:28" pos:end="171:28">=</operator> <name pos:start="171:30" pos:end="171:46"><name pos:start="171:30" pos:end="171:30">c</name><operator pos:start="171:31" pos:end="171:32">-&gt;</operator><name pos:start="171:33" pos:end="171:34">fc</name><operator pos:start="171:35" pos:end="171:36">-&gt;</operator><name pos:start="171:37" pos:end="171:43">streams</name><index pos:start="171:44" pos:end="171:46">[<expr pos:start="171:45" pos:end="171:45"><name pos:start="171:45" pos:end="171:45">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="173:21" pos:end="173:47"><expr pos:start="173:21" pos:end="173:46"><name pos:start="173:21" pos:end="173:26">ref_sc</name> <operator pos:start="173:28" pos:end="173:28">=</operator> <name pos:start="173:30" pos:end="173:46"><name pos:start="173:30" pos:end="173:35">ref_st</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:46">priv_data</name></name></expr>;</expr_stmt>

                    <break pos:start="175:21" pos:end="175:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <for pos:start="183:9" pos:end="195:9">for <control pos:start="183:13" pos:end="183:47">(<init pos:start="183:14" pos:end="183:19"><expr pos:start="183:14" pos:end="183:18"><name pos:start="183:14" pos:end="183:14">i</name> <operator pos:start="183:16" pos:end="183:16">=</operator> <literal type="number" pos:start="183:18" pos:end="183:18">0</literal></expr>;</init> <condition pos:start="183:21" pos:end="183:42"><expr pos:start="183:21" pos:end="183:41"><name pos:start="183:21" pos:end="183:21">i</name> <operator pos:start="183:23" pos:end="183:23">&lt;</operator> <name pos:start="183:25" pos:end="183:41"><name pos:start="183:25" pos:end="183:25">c</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:29">fc</name><operator pos:start="183:30" pos:end="183:31">-&gt;</operator><name pos:start="183:32" pos:end="183:41">nb_streams</name></name></expr>;</condition> <incr pos:start="183:44" pos:end="183:46"><expr pos:start="183:44" pos:end="183:46"><name pos:start="183:44" pos:end="183:44">i</name><operator pos:start="183:45" pos:end="183:46">++</operator></expr></incr>)</control> <block pos:start="183:49" pos:end="195:9">{<block_content pos:start="185:13" pos:end="193:13">

            <expr_stmt pos:start="185:13" pos:end="185:35"><expr pos:start="185:13" pos:end="185:34"><name pos:start="185:13" pos:end="185:14">st</name> <operator pos:start="185:16" pos:end="185:16">=</operator> <name pos:start="185:18" pos:end="185:34"><name pos:start="185:18" pos:end="185:18">c</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:22">fc</name><operator pos:start="185:23" pos:end="185:24">-&gt;</operator><name pos:start="185:25" pos:end="185:31">streams</name><index pos:start="185:32" pos:end="185:34">[<expr pos:start="185:33" pos:end="185:33"><name pos:start="185:33" pos:end="185:33">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:31"><expr pos:start="187:13" pos:end="187:30"><name pos:start="187:13" pos:end="187:14">sc</name> <operator pos:start="187:16" pos:end="187:16">=</operator> <name pos:start="187:18" pos:end="187:30"><name pos:start="187:18" pos:end="187:19">st</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:30">priv_data</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="189:13" pos:end="193:13"><if pos:start="189:13" pos:end="193:13">if <condition pos:start="189:16" pos:end="189:30">(<expr pos:start="189:17" pos:end="189:29"><operator pos:start="189:17" pos:end="189:17">!</operator><name pos:start="189:18" pos:end="189:29"><name pos:start="189:18" pos:end="189:19">sc</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:29">has_sidx</name></name></expr>)</condition> <block pos:start="189:32" pos:end="193:13">{<block_content pos:start="191:17" pos:end="191:112">

                <expr_stmt pos:start="191:17" pos:end="191:112"><expr pos:start="191:17" pos:end="191:111"><name pos:start="191:17" pos:end="191:28"><name pos:start="191:17" pos:end="191:18">st</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:28">duration</name></name> <operator pos:start="191:30" pos:end="191:30">=</operator> <name pos:start="191:32" pos:end="191:44"><name pos:start="191:32" pos:end="191:33">sc</name><operator pos:start="191:34" pos:end="191:35">-&gt;</operator><name pos:start="191:36" pos:end="191:44">track_end</name></name> <operator pos:start="191:46" pos:end="191:46">=</operator> <call pos:start="191:48" pos:end="191:111"><name pos:start="191:48" pos:end="191:57">av_rescale</name><argument_list pos:start="191:58" pos:end="191:111">(<argument pos:start="191:59" pos:end="191:74"><expr pos:start="191:59" pos:end="191:74"><name pos:start="191:59" pos:end="191:74"><name pos:start="191:59" pos:end="191:64">ref_st</name><operator pos:start="191:65" pos:end="191:66">-&gt;</operator><name pos:start="191:67" pos:end="191:74">duration</name></name></expr></argument>, <argument pos:start="191:77" pos:end="191:90"><expr pos:start="191:77" pos:end="191:90"><name pos:start="191:77" pos:end="191:90"><name pos:start="191:77" pos:end="191:78">sc</name><operator pos:start="191:79" pos:end="191:80">-&gt;</operator><name pos:start="191:81" pos:end="191:90">time_scale</name></name></expr></argument>, <argument pos:start="191:93" pos:end="191:110"><expr pos:start="191:93" pos:end="191:110"><name pos:start="191:93" pos:end="191:110"><name pos:start="191:93" pos:end="191:98">ref_sc</name><operator pos:start="191:99" pos:end="191:100">-&gt;</operator><name pos:start="191:101" pos:end="191:110">time_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="199:9" pos:end="199:35"><expr pos:start="199:9" pos:end="199:34"><name pos:start="199:9" pos:end="199:30"><name pos:start="199:9" pos:end="199:9">c</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:21">frag_index</name><operator pos:start="199:22" pos:end="199:22">.</operator><name pos:start="199:23" pos:end="199:30">complete</name></name> <operator pos:start="199:32" pos:end="199:32">=</operator> <literal type="number" pos:start="199:34" pos:end="199:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="205:5" pos:end="205:13">return <expr pos:start="205:12" pos:end="205:12"><literal type="number" pos:start="205:12" pos:end="205:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
