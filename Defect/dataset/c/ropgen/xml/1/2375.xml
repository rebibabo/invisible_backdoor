<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2375.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:14"><name pos:start="1:1" pos:end="1:12">SnapshotInfo</name> <modifier pos:start="1:14" pos:end="1:14">*</modifier></type><name pos:start="1:15" pos:end="1:56">qmp_blockdev_snapshot_delete_internal_sync</name><parameter_list pos:start="1:57" pos:end="11:70">(<parameter pos:start="1:58" pos:end="1:75"><decl pos:start="1:58" pos:end="1:75"><type pos:start="1:58" pos:end="1:75"><specifier pos:start="1:58" pos:end="1:62">const</specifier> <name pos:start="1:64" pos:end="1:67">char</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:75">device</name></decl></parameter>,

                                                         <parameter pos:start="3:58" pos:end="3:68"><decl pos:start="3:58" pos:end="3:68"><type pos:start="3:58" pos:end="3:68"><name pos:start="3:58" pos:end="3:61">bool</name></type> <name pos:start="3:63" pos:end="3:68">has_id</name></decl></parameter>,

                                                         <parameter pos:start="5:58" pos:end="5:71"><decl pos:start="5:58" pos:end="5:71"><type pos:start="5:58" pos:end="5:71"><specifier pos:start="5:58" pos:end="5:62">const</specifier> <name pos:start="5:64" pos:end="5:67">char</name> <modifier pos:start="5:69" pos:end="5:69">*</modifier></type><name pos:start="5:70" pos:end="5:71">id</name></decl></parameter>,

                                                         <parameter pos:start="7:58" pos:end="7:70"><decl pos:start="7:58" pos:end="7:70"><type pos:start="7:58" pos:end="7:70"><name pos:start="7:58" pos:end="7:61">bool</name></type> <name pos:start="7:63" pos:end="7:70">has_name</name></decl></parameter>,

                                                         <parameter pos:start="9:58" pos:end="9:73"><decl pos:start="9:58" pos:end="9:73"><type pos:start="9:58" pos:end="9:73"><specifier pos:start="9:58" pos:end="9:62">const</specifier> <name pos:start="9:64" pos:end="9:67">char</name> <modifier pos:start="9:69" pos:end="9:69">*</modifier></type><name pos:start="9:70" pos:end="9:73">name</name></decl></parameter>,

                                                         <parameter pos:start="11:58" pos:end="11:69"><decl pos:start="11:58" pos:end="11:69"><type pos:start="11:58" pos:end="11:69"><name pos:start="11:58" pos:end="11:62">Error</name> <modifier pos:start="11:64" pos:end="11:64">*</modifier><modifier pos:start="11:65" pos:end="11:65">*</modifier></type><name pos:start="11:66" pos:end="11:69">errp</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="121:1">{<block_content pos:start="15:5" pos:end="119:16">

    <decl_stmt pos:start="15:5" pos:end="15:45"><decl pos:start="15:5" pos:end="15:44"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20">BlockDriverState</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:24">bs</name> <init pos:start="15:26" pos:end="15:44">= <expr pos:start="15:28" pos:end="15:44"><call pos:start="15:28" pos:end="15:44"><name pos:start="15:28" pos:end="15:36">bdrv_find</name><argument_list pos:start="15:37" pos:end="15:44">(<argument pos:start="15:38" pos:end="15:43"><expr pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:43">device</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:20">QEMUSnapshotInfo</name></type> <name pos:start="17:22" pos:end="17:23">sn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">Error</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:20">local_err</name> <init pos:start="19:22" pos:end="19:27">= <expr pos:start="19:24" pos:end="19:27"><name pos:start="19:24" pos:end="19:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:30"><decl pos:start="21:5" pos:end="21:29"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:16">SnapshotInfo</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:22">info</name> <init pos:start="21:24" pos:end="21:29">= <expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:12"><decl pos:start="23:5" pos:end="23:11"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:11">bs</name></expr>)</condition> <block pos:start="27:14" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:20">

        <expr_stmt pos:start="29:9" pos:end="29:55"><expr pos:start="29:9" pos:end="29:54"><call pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:17">error_set</name><argument_list pos:start="29:18" pos:end="29:54">(<argument pos:start="29:19" pos:end="29:22"><expr pos:start="29:19" pos:end="29:22"><name pos:start="29:19" pos:end="29:22">errp</name></expr></argument>, <argument pos:start="29:25" pos:end="29:45"><expr pos:start="29:25" pos:end="29:45"><name pos:start="29:25" pos:end="29:45">QERR_DEVICE_NOT_FOUND</name></expr></argument>, <argument pos:start="29:48" pos:end="29:53"><expr pos:start="29:48" pos:end="29:53"><name pos:start="29:48" pos:end="29:53">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:20">return <expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:15">has_id</name></expr>)</condition> <block pos:start="37:18" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:18">

        <expr_stmt pos:start="39:9" pos:end="39:18"><expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:10">id</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:17">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:18">(<expr pos:start="45:9" pos:end="45:17"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:17">has_name</name></expr>)</condition> <block pos:start="45:20" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:20">

        <expr_stmt pos:start="47:9" pos:end="47:20"><expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:12">name</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <name pos:start="47:16" pos:end="47:19">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:21">(<expr pos:start="53:9" pos:end="53:20"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:11">id</name> <operator pos:start="53:13" pos:end="53:14">&amp;&amp;</operator> <operator pos:start="53:16" pos:end="53:16">!</operator><name pos:start="53:17" pos:end="53:20">name</name></expr>)</condition> <block pos:start="53:23" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:20">

        <expr_stmt pos:start="55:9" pos:end="55:56"><expr pos:start="55:9" pos:end="55:55"><call pos:start="55:9" pos:end="55:55"><name pos:start="55:9" pos:end="55:18">error_setg</name><argument_list pos:start="55:19" pos:end="55:55">(<argument pos:start="55:20" pos:end="55:23"><expr pos:start="55:20" pos:end="55:23"><name pos:start="55:20" pos:end="55:23">errp</name></expr></argument>, <argument pos:start="55:26" pos:end="55:54"><expr pos:start="55:26" pos:end="55:54"><literal type="string" pos:start="55:26" pos:end="55:54">"Name or id must be provided"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:20">return <expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:75"><expr pos:start="63:5" pos:end="63:74"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:74"><name pos:start="63:11" pos:end="63:43">bdrv_snapshot_find_by_id_and_name</name><argument_list pos:start="63:44" pos:end="63:74">(<argument pos:start="63:45" pos:end="63:46"><expr pos:start="63:45" pos:end="63:46"><name pos:start="63:45" pos:end="63:46">bs</name></expr></argument>, <argument pos:start="63:49" pos:end="63:50"><expr pos:start="63:49" pos:end="63:50"><name pos:start="63:49" pos:end="63:50">id</name></expr></argument>, <argument pos:start="63:53" pos:end="63:56"><expr pos:start="63:53" pos:end="63:56"><name pos:start="63:53" pos:end="63:56">name</name></expr></argument>, <argument pos:start="63:59" pos:end="63:61"><expr pos:start="63:59" pos:end="63:61"><operator pos:start="63:59" pos:end="63:59">&amp;</operator><name pos:start="63:60" pos:end="63:61">sn</name></expr></argument>, <argument pos:start="63:64" pos:end="63:73"><expr pos:start="63:64" pos:end="63:73"><operator pos:start="63:64" pos:end="63:64">&amp;</operator><name pos:start="63:65" pos:end="63:73">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:18">(<expr pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:17">local_err</name></expr>)</condition> <block pos:start="65:20" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:20">

        <expr_stmt pos:start="67:9" pos:end="67:41"><expr pos:start="67:9" pos:end="67:40"><call pos:start="67:9" pos:end="67:40"><name pos:start="67:9" pos:end="67:23">error_propagate</name><argument_list pos:start="67:24" pos:end="67:40">(<argument pos:start="67:25" pos:end="67:28"><expr pos:start="67:25" pos:end="67:28"><name pos:start="67:25" pos:end="67:28">errp</name></expr></argument>, <argument pos:start="67:31" pos:end="67:39"><expr pos:start="67:31" pos:end="67:39"><name pos:start="67:31" pos:end="67:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:20">return <expr pos:start="69:16" pos:end="69:19"><name pos:start="69:16" pos:end="69:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="85:5"><if pos:start="73:5" pos:end="85:5">if <condition pos:start="73:8" pos:end="73:13">(<expr pos:start="73:9" pos:end="73:12"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:12">ret</name></expr>)</condition> <block pos:start="73:15" pos:end="85:5">{<block_content pos:start="75:9" pos:end="83:20">

        <expr_stmt pos:start="75:9" pos:end="81:63"><expr pos:start="75:9" pos:end="81:62"><call pos:start="75:9" pos:end="81:62"><name pos:start="75:9" pos:end="75:18">error_setg</name><argument_list pos:start="75:19" pos:end="81:62">(<argument pos:start="75:20" pos:end="75:23"><expr pos:start="75:20" pos:end="75:23"><name pos:start="75:20" pos:end="75:23">errp</name></expr></argument>,

                   <argument pos:start="77:20" pos:end="79:32"><expr pos:start="77:20" pos:end="79:32"><literal type="string" pos:start="77:20" pos:end="77:75">"Snapshot with id '%s' and name '%s' does not exist on "</literal>

                   <literal type="string" pos:start="79:20" pos:end="79:32">"device '%s'"</literal></expr></argument>,

                   <argument pos:start="81:20" pos:end="81:34"><expr pos:start="81:20" pos:end="81:34"><call pos:start="81:20" pos:end="81:34"><name pos:start="81:20" pos:end="81:30">STR_OR_NULL</name><argument_list pos:start="81:31" pos:end="81:34">(<argument pos:start="81:32" pos:end="81:33"><expr pos:start="81:32" pos:end="81:33"><name pos:start="81:32" pos:end="81:33">id</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:37" pos:end="81:53"><expr pos:start="81:37" pos:end="81:53"><call pos:start="81:37" pos:end="81:53"><name pos:start="81:37" pos:end="81:47">STR_OR_NULL</name><argument_list pos:start="81:48" pos:end="81:53">(<argument pos:start="81:49" pos:end="81:52"><expr pos:start="81:49" pos:end="81:52"><name pos:start="81:49" pos:end="81:52">name</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:56" pos:end="81:61"><expr pos:start="81:56" pos:end="81:61"><name pos:start="81:56" pos:end="81:61">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:20">return <expr pos:start="83:16" pos:end="83:19"><name pos:start="83:16" pos:end="83:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:51"><expr pos:start="89:5" pos:end="89:50"><call pos:start="89:5" pos:end="89:50"><name pos:start="89:5" pos:end="89:24">bdrv_snapshot_delete</name><argument_list pos:start="89:25" pos:end="89:50">(<argument pos:start="89:26" pos:end="89:27"><expr pos:start="89:26" pos:end="89:27"><name pos:start="89:26" pos:end="89:27">bs</name></expr></argument>, <argument pos:start="89:30" pos:end="89:31"><expr pos:start="89:30" pos:end="89:31"><name pos:start="89:30" pos:end="89:31">id</name></expr></argument>, <argument pos:start="89:34" pos:end="89:37"><expr pos:start="89:34" pos:end="89:37"><name pos:start="89:34" pos:end="89:37">name</name></expr></argument>, <argument pos:start="89:40" pos:end="89:49"><expr pos:start="89:40" pos:end="89:49"><operator pos:start="89:40" pos:end="89:40">&amp;</operator><name pos:start="89:41" pos:end="89:49">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:18">(<expr pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:17">local_err</name></expr>)</condition> <block pos:start="91:20" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:20">

        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><call pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:23">error_propagate</name><argument_list pos:start="93:24" pos:end="93:40">(<argument pos:start="93:25" pos:end="93:28"><expr pos:start="93:25" pos:end="93:28"><name pos:start="93:25" pos:end="93:28">errp</name></expr></argument>, <argument pos:start="93:31" pos:end="93:39"><expr pos:start="93:31" pos:end="93:39"><name pos:start="93:31" pos:end="93:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:20">return <expr pos:start="95:16" pos:end="95:19"><name pos:start="95:16" pos:end="95:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:43"><expr pos:start="101:5" pos:end="101:42"><name pos:start="101:5" pos:end="101:8">info</name> <operator pos:start="101:10" pos:end="101:10">=</operator> <call pos:start="101:12" pos:end="101:42"><name pos:start="101:12" pos:end="101:20">g_malloc0</name><argument_list pos:start="101:21" pos:end="101:42">(<argument pos:start="101:22" pos:end="101:41"><expr pos:start="101:22" pos:end="101:41"><sizeof pos:start="101:22" pos:end="101:41">sizeof<argument_list pos:start="101:28" pos:end="101:41">(<argument pos:start="101:29" pos:end="101:40"><expr pos:start="101:29" pos:end="101:40"><name pos:start="101:29" pos:end="101:40">SnapshotInfo</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:35"><expr pos:start="103:5" pos:end="103:34"><name pos:start="103:5" pos:end="103:12"><name pos:start="103:5" pos:end="103:8">info</name><operator pos:start="103:9" pos:end="103:10">-&gt;</operator><name pos:start="103:11" pos:end="103:12">id</name></name> <operator pos:start="103:14" pos:end="103:14">=</operator> <call pos:start="103:16" pos:end="103:34"><name pos:start="103:16" pos:end="103:23">g_strdup</name><argument_list pos:start="103:24" pos:end="103:34">(<argument pos:start="103:25" pos:end="103:33"><expr pos:start="103:25" pos:end="103:33"><name pos:start="103:25" pos:end="103:33"><name pos:start="103:25" pos:end="103:26">sn</name><operator pos:start="103:27" pos:end="103:27">.</operator><name pos:start="103:28" pos:end="103:33">id_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:14"><name pos:start="105:5" pos:end="105:8">info</name><operator pos:start="105:9" pos:end="105:10">-&gt;</operator><name pos:start="105:11" pos:end="105:14">name</name></name> <operator pos:start="105:16" pos:end="105:16">=</operator> <call pos:start="105:18" pos:end="105:34"><name pos:start="105:18" pos:end="105:25">g_strdup</name><argument_list pos:start="105:26" pos:end="105:34">(<argument pos:start="105:27" pos:end="105:33"><expr pos:start="105:27" pos:end="105:33"><name pos:start="105:27" pos:end="105:33"><name pos:start="105:27" pos:end="105:28">sn</name><operator pos:start="105:29" pos:end="105:29">.</operator><name pos:start="105:30" pos:end="105:33">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:35"><expr pos:start="107:5" pos:end="107:34"><name pos:start="107:5" pos:end="107:19"><name pos:start="107:5" pos:end="107:8">info</name><operator pos:start="107:9" pos:end="107:10">-&gt;</operator><name pos:start="107:11" pos:end="107:19">date_nsec</name></name> <operator pos:start="107:21" pos:end="107:21">=</operator> <name pos:start="107:23" pos:end="107:34"><name pos:start="107:23" pos:end="107:24">sn</name><operator pos:start="107:25" pos:end="107:25">.</operator><name pos:start="107:26" pos:end="107:34">date_nsec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:33"><expr pos:start="109:5" pos:end="109:32"><name pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:8">info</name><operator pos:start="109:9" pos:end="109:10">-&gt;</operator><name pos:start="109:11" pos:end="109:18">date_sec</name></name> <operator pos:start="109:20" pos:end="109:20">=</operator> <name pos:start="109:22" pos:end="109:32"><name pos:start="109:22" pos:end="109:23">sn</name><operator pos:start="109:24" pos:end="109:24">.</operator><name pos:start="109:25" pos:end="109:32">date_sec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:43"><expr pos:start="111:5" pos:end="111:42"><name pos:start="111:5" pos:end="111:23"><name pos:start="111:5" pos:end="111:8">info</name><operator pos:start="111:9" pos:end="111:10">-&gt;</operator><name pos:start="111:11" pos:end="111:23">vm_state_size</name></name> <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:42"><name pos:start="111:27" pos:end="111:28">sn</name><operator pos:start="111:29" pos:end="111:29">.</operator><name pos:start="111:30" pos:end="111:42">vm_state_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:56"><expr pos:start="113:5" pos:end="113:55"><name pos:start="113:5" pos:end="113:23"><name pos:start="113:5" pos:end="113:8">info</name><operator pos:start="113:9" pos:end="113:10">-&gt;</operator><name pos:start="113:11" pos:end="113:23">vm_clock_nsec</name></name> <operator pos:start="113:25" pos:end="113:25">=</operator> <name pos:start="113:27" pos:end="113:42"><name pos:start="113:27" pos:end="113:28">sn</name><operator pos:start="113:29" pos:end="113:29">.</operator><name pos:start="113:30" pos:end="113:42">vm_clock_nsec</name></name> <operator pos:start="113:44" pos:end="113:44">%</operator> <literal type="number" pos:start="113:46" pos:end="113:55">1000000000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:55"><expr pos:start="115:5" pos:end="115:54"><name pos:start="115:5" pos:end="115:22"><name pos:start="115:5" pos:end="115:8">info</name><operator pos:start="115:9" pos:end="115:10">-&gt;</operator><name pos:start="115:11" pos:end="115:22">vm_clock_sec</name></name> <operator pos:start="115:24" pos:end="115:24">=</operator> <name pos:start="115:26" pos:end="115:41"><name pos:start="115:26" pos:end="115:27">sn</name><operator pos:start="115:28" pos:end="115:28">.</operator><name pos:start="115:29" pos:end="115:41">vm_clock_nsec</name></name> <operator pos:start="115:43" pos:end="115:43">/</operator> <literal type="number" pos:start="115:45" pos:end="115:54">1000000000</literal></expr>;</expr_stmt>



    <return pos:start="119:5" pos:end="119:16">return <expr pos:start="119:12" pos:end="119:15"><name pos:start="119:12" pos:end="119:15">info</name></expr>;</return>

</block_content>}</block></function>
</unit>
