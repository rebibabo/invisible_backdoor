<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12562.c" pos:tabs="8"><function pos:start="1:1" pos:end="211:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ffm_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="211:1">{<block_content pos:start="5:5" pos:end="209:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">FFMContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ffm</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:29">= <expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">bit_rate</name></decl>, <decl pos:start="13:19" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:19">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:39"><expr pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:7">ffm</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:20">packet_size</name></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <name pos:start="17:24" pos:end="17:38">FFM_PACKET_SIZE</name></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:16">/* header */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:44"><expr pos:start="23:5" pos:end="23:43"><call pos:start="23:5" pos:end="23:43"><name pos:start="23:5" pos:end="23:12">put_le32</name><argument_list pos:start="23:13" pos:end="23:43">(<argument pos:start="23:14" pos:end="23:15"><expr pos:start="23:14" pos:end="23:15"><name pos:start="23:14" pos:end="23:15">pb</name></expr></argument>, <argument pos:start="23:18" pos:end="23:42"><expr pos:start="23:18" pos:end="23:42"><call pos:start="23:18" pos:end="23:42"><name pos:start="23:18" pos:end="23:22">MKTAG</name><argument_list pos:start="23:23" pos:end="23:42">(<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><literal type="char" pos:start="23:24" pos:end="23:26">'F'</literal></expr></argument>, <argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><literal type="char" pos:start="23:29" pos:end="23:31">'F'</literal></expr></argument>, <argument pos:start="23:34" pos:end="23:36"><expr pos:start="23:34" pos:end="23:36"><literal type="char" pos:start="23:34" pos:end="23:36">'M'</literal></expr></argument>, <argument pos:start="23:39" pos:end="23:41"><expr pos:start="23:39" pos:end="23:41"><literal type="char" pos:start="23:39" pos:end="23:41">'1'</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><call pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:12">put_be32</name><argument_list pos:start="25:13" pos:end="25:34">(<argument pos:start="25:14" pos:end="25:15"><expr pos:start="25:14" pos:end="25:15"><name pos:start="25:14" pos:end="25:15">pb</name></expr></argument>, <argument pos:start="25:18" pos:end="25:33"><expr pos:start="25:18" pos:end="25:33"><name pos:start="25:18" pos:end="25:33"><name pos:start="25:18" pos:end="25:20">ffm</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:33">packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:51">/* XXX: store write position in other file ? */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><call pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:12">put_be64</name><argument_list pos:start="29:13" pos:end="29:34">(<argument pos:start="29:14" pos:end="29:15"><expr pos:start="29:14" pos:end="29:15"><name pos:start="29:14" pos:end="29:15">pb</name></expr></argument>, <argument pos:start="29:18" pos:end="29:33"><expr pos:start="29:18" pos:end="29:33"><name pos:start="29:18" pos:end="29:33"><name pos:start="29:18" pos:end="29:20">ffm</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:33">packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:37" pos:end="29:64">/* current write position */</comment>



    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><call pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:12">put_be32</name><argument_list pos:start="33:13" pos:end="33:31">(<argument pos:start="33:14" pos:end="33:15"><expr pos:start="33:14" pos:end="33:15"><name pos:start="33:14" pos:end="33:15">pb</name></expr></argument>, <argument pos:start="33:18" pos:end="33:30"><expr pos:start="33:18" pos:end="33:30"><name pos:start="33:18" pos:end="33:30"><name pos:start="33:18" pos:end="33:18">s</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:30">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:17"><expr pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:12">bit_rate</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</expr_stmt>

    <for pos:start="37:5" pos:end="43:5">for<control pos:start="37:8" pos:end="37:32">(<init pos:start="37:9" pos:end="37:12"><expr pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:9">i</name><operator pos:start="37:10" pos:end="37:10">=</operator><literal type="number" pos:start="37:11" pos:end="37:11">0</literal></expr>;</init><condition pos:start="37:13" pos:end="37:28"><expr pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:13">i</name><operator pos:start="37:14" pos:end="37:14">&lt;</operator><name pos:start="37:15" pos:end="37:27"><name pos:start="37:15" pos:end="37:15">s</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:27">nb_streams</name></name></expr>;</condition><incr pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:29">i</name><operator pos:start="37:30" pos:end="37:31">++</operator></expr></incr>)</control> <block pos:start="37:34" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:40">

        <expr_stmt pos:start="39:9" pos:end="39:27"><expr pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:10">st</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:26"><name pos:start="39:14" pos:end="39:14">s</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:23">streams</name><index pos:start="39:24" pos:end="39:26">[<expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:40"><expr pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:16">bit_rate</name> <operator pos:start="41:18" pos:end="41:19">+=</operator> <name pos:start="41:21" pos:end="41:39"><name pos:start="41:21" pos:end="41:22">st</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:29">codec</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:39">bit_rate</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="45:5" pos:end="45:27"><expr pos:start="45:5" pos:end="45:26"><call pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:12">put_be32</name><argument_list pos:start="45:13" pos:end="45:26">(<argument pos:start="45:14" pos:end="45:15"><expr pos:start="45:14" pos:end="45:15"><name pos:start="45:14" pos:end="45:15">pb</name></expr></argument>, <argument pos:start="45:18" pos:end="45:25"><expr pos:start="45:18" pos:end="45:25"><name pos:start="45:18" pos:end="45:25">bit_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:25">/* list of streams */</comment>

    <for pos:start="51:5" pos:end="177:5">for<control pos:start="51:8" pos:end="51:32">(<init pos:start="51:9" pos:end="51:12"><expr pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:9">i</name><operator pos:start="51:10" pos:end="51:10">=</operator><literal type="number" pos:start="51:11" pos:end="51:11">0</literal></expr>;</init><condition pos:start="51:13" pos:end="51:28"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:13">i</name><operator pos:start="51:14" pos:end="51:14">&lt;</operator><name pos:start="51:15" pos:end="51:27"><name pos:start="51:15" pos:end="51:15">s</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:27">nb_streams</name></name></expr>;</condition><incr pos:start="51:29" pos:end="51:31"><expr pos:start="51:29" pos:end="51:31"><name pos:start="51:29" pos:end="51:29">i</name><operator pos:start="51:30" pos:end="51:31">++</operator></expr></incr>)</control> <block pos:start="51:34" pos:end="177:5">{<block_content pos:start="53:9" pos:end="175:9">

        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:10">st</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <name pos:start="53:14" pos:end="53:26"><name pos:start="53:14" pos:end="53:14">s</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:23">streams</name><index pos:start="53:24" pos:end="53:26">[<expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:44"><expr pos:start="55:9" pos:end="55:43"><call pos:start="55:9" pos:end="55:43"><name pos:start="55:9" pos:end="55:23">av_set_pts_info</name><argument_list pos:start="55:24" pos:end="55:43">(<argument pos:start="55:25" pos:end="55:26"><expr pos:start="55:25" pos:end="55:26"><name pos:start="55:25" pos:end="55:26">st</name></expr></argument>, <argument pos:start="55:29" pos:end="55:30"><expr pos:start="55:29" pos:end="55:30"><literal type="number" pos:start="55:29" pos:end="55:30">64</literal></expr></argument>, <argument pos:start="55:33" pos:end="55:33"><expr pos:start="55:33" pos:end="55:33"><literal type="number" pos:start="55:33" pos:end="55:33">1</literal></expr></argument>, <argument pos:start="55:36" pos:end="55:42"><expr pos:start="55:36" pos:end="55:42"><literal type="number" pos:start="55:36" pos:end="55:42">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:26"><expr pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:13">codec</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:18">st</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:25">codec</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="61:9" pos:end="61:26">/* generic info */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><call pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:16">put_be32</name><argument_list pos:start="63:17" pos:end="63:37">(<argument pos:start="63:18" pos:end="63:19"><expr pos:start="63:18" pos:end="63:19"><name pos:start="63:18" pos:end="63:19">pb</name></expr></argument>, <argument pos:start="63:22" pos:end="63:36"><expr pos:start="63:22" pos:end="63:36"><name pos:start="63:22" pos:end="63:36"><name pos:start="63:22" pos:end="63:26">codec</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:36">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:40"><expr pos:start="65:9" pos:end="65:39"><call pos:start="65:9" pos:end="65:39"><name pos:start="65:9" pos:end="65:16">put_byte</name><argument_list pos:start="65:17" pos:end="65:39">(<argument pos:start="65:18" pos:end="65:19"><expr pos:start="65:18" pos:end="65:19"><name pos:start="65:18" pos:end="65:19">pb</name></expr></argument>, <argument pos:start="65:22" pos:end="65:38"><expr pos:start="65:22" pos:end="65:38"><name pos:start="65:22" pos:end="65:38"><name pos:start="65:22" pos:end="65:26">codec</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:38">codec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:38"><expr pos:start="67:9" pos:end="67:37"><call pos:start="67:9" pos:end="67:37"><name pos:start="67:9" pos:end="67:16">put_be32</name><argument_list pos:start="67:17" pos:end="67:37">(<argument pos:start="67:18" pos:end="67:19"><expr pos:start="67:18" pos:end="67:19"><name pos:start="67:18" pos:end="67:19">pb</name></expr></argument>, <argument pos:start="67:22" pos:end="67:36"><expr pos:start="67:22" pos:end="67:36"><name pos:start="67:22" pos:end="67:36"><name pos:start="67:22" pos:end="67:26">codec</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:36">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><call pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:16">put_be32</name><argument_list pos:start="69:17" pos:end="69:33">(<argument pos:start="69:18" pos:end="69:19"><expr pos:start="69:18" pos:end="69:19"><name pos:start="69:18" pos:end="69:19">pb</name></expr></argument>, <argument pos:start="69:22" pos:end="69:32"><expr pos:start="69:22" pos:end="69:32"><name pos:start="69:22" pos:end="69:32"><name pos:start="69:22" pos:end="69:23">st</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:32">quality</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:35"><expr pos:start="71:9" pos:end="71:34"><call pos:start="71:9" pos:end="71:34"><name pos:start="71:9" pos:end="71:16">put_be32</name><argument_list pos:start="71:17" pos:end="71:34">(<argument pos:start="71:18" pos:end="71:19"><expr pos:start="71:18" pos:end="71:19"><name pos:start="71:18" pos:end="71:19">pb</name></expr></argument>, <argument pos:start="71:22" pos:end="71:33"><expr pos:start="71:22" pos:end="71:33"><name pos:start="71:22" pos:end="71:33"><name pos:start="71:22" pos:end="71:26">codec</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:33">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:36"><expr pos:start="73:9" pos:end="73:35"><call pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:16">put_be32</name><argument_list pos:start="73:17" pos:end="73:35">(<argument pos:start="73:18" pos:end="73:19"><expr pos:start="73:18" pos:end="73:19"><name pos:start="73:18" pos:end="73:19">pb</name></expr></argument>, <argument pos:start="73:22" pos:end="73:34"><expr pos:start="73:22" pos:end="73:34"><name pos:start="73:22" pos:end="73:34"><name pos:start="73:22" pos:end="73:26">codec</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:34">flags2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:35"><expr pos:start="75:9" pos:end="75:34"><call pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:16">put_be32</name><argument_list pos:start="75:17" pos:end="75:34">(<argument pos:start="75:18" pos:end="75:19"><expr pos:start="75:18" pos:end="75:19"><name pos:start="75:18" pos:end="75:19">pb</name></expr></argument>, <argument pos:start="75:22" pos:end="75:33"><expr pos:start="75:22" pos:end="75:33"><name pos:start="75:22" pos:end="75:33"><name pos:start="75:22" pos:end="75:26">codec</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:33">debug</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="77:9" pos:end="77:27">/* specific info */</comment>

        <switch pos:start="79:9" pos:end="167:9">switch<condition pos:start="79:15" pos:end="79:33">(<expr pos:start="79:16" pos:end="79:32"><name pos:start="79:16" pos:end="79:32"><name pos:start="79:16" pos:end="79:20">codec</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:32">codec_type</name></name></expr>)</condition> <block pos:start="79:35" pos:end="167:9">{<block_content pos:start="81:9" pos:end="165:22">

        <case pos:start="81:9" pos:end="81:30">case <expr pos:start="81:14" pos:end="81:29"><name pos:start="81:14" pos:end="81:29">CODEC_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:47"><expr pos:start="83:13" pos:end="83:46"><call pos:start="83:13" pos:end="83:46"><name pos:start="83:13" pos:end="83:20">put_be32</name><argument_list pos:start="83:21" pos:end="83:46">(<argument pos:start="83:22" pos:end="83:23"><expr pos:start="83:22" pos:end="83:23"><name pos:start="83:22" pos:end="83:23">pb</name></expr></argument>, <argument pos:start="83:26" pos:end="83:45"><expr pos:start="83:26" pos:end="83:45"><name pos:start="83:26" pos:end="83:45"><name pos:start="83:26" pos:end="83:30">codec</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:41">time_base</name><operator pos:start="83:42" pos:end="83:42">.</operator><name pos:start="83:43" pos:end="83:45">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:47"><expr pos:start="85:13" pos:end="85:46"><call pos:start="85:13" pos:end="85:46"><name pos:start="85:13" pos:end="85:20">put_be32</name><argument_list pos:start="85:21" pos:end="85:46">(<argument pos:start="85:22" pos:end="85:23"><expr pos:start="85:22" pos:end="85:23"><name pos:start="85:22" pos:end="85:23">pb</name></expr></argument>, <argument pos:start="85:26" pos:end="85:45"><expr pos:start="85:26" pos:end="85:45"><name pos:start="85:26" pos:end="85:45"><name pos:start="85:26" pos:end="85:30">codec</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:41">time_base</name><operator pos:start="85:42" pos:end="85:42">.</operator><name pos:start="85:43" pos:end="85:45">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:39"><expr pos:start="87:13" pos:end="87:38"><call pos:start="87:13" pos:end="87:38"><name pos:start="87:13" pos:end="87:20">put_be16</name><argument_list pos:start="87:21" pos:end="87:38">(<argument pos:start="87:22" pos:end="87:23"><expr pos:start="87:22" pos:end="87:23"><name pos:start="87:22" pos:end="87:23">pb</name></expr></argument>, <argument pos:start="87:26" pos:end="87:37"><expr pos:start="87:26" pos:end="87:37"><name pos:start="87:26" pos:end="87:37"><name pos:start="87:26" pos:end="87:30">codec</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:37">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:40"><expr pos:start="89:13" pos:end="89:39"><call pos:start="89:13" pos:end="89:39"><name pos:start="89:13" pos:end="89:20">put_be16</name><argument_list pos:start="89:21" pos:end="89:39">(<argument pos:start="89:22" pos:end="89:23"><expr pos:start="89:22" pos:end="89:23"><name pos:start="89:22" pos:end="89:23">pb</name></expr></argument>, <argument pos:start="89:26" pos:end="89:38"><expr pos:start="89:26" pos:end="89:38"><name pos:start="89:26" pos:end="89:38"><name pos:start="89:26" pos:end="89:30">codec</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:38">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:42"><expr pos:start="91:13" pos:end="91:41"><call pos:start="91:13" pos:end="91:41"><name pos:start="91:13" pos:end="91:20">put_be16</name><argument_list pos:start="91:21" pos:end="91:41">(<argument pos:start="91:22" pos:end="91:23"><expr pos:start="91:22" pos:end="91:23"><name pos:start="91:22" pos:end="91:23">pb</name></expr></argument>, <argument pos:start="91:26" pos:end="91:40"><expr pos:start="91:26" pos:end="91:40"><name pos:start="91:26" pos:end="91:40"><name pos:start="91:26" pos:end="91:30">codec</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:40">gop_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:41"><expr pos:start="93:13" pos:end="93:40"><call pos:start="93:13" pos:end="93:40"><name pos:start="93:13" pos:end="93:20">put_be32</name><argument_list pos:start="93:21" pos:end="93:40">(<argument pos:start="93:22" pos:end="93:23"><expr pos:start="93:22" pos:end="93:23"><name pos:start="93:22" pos:end="93:23">pb</name></expr></argument>, <argument pos:start="93:26" pos:end="93:39"><expr pos:start="93:26" pos:end="93:39"><name pos:start="93:26" pos:end="93:39"><name pos:start="93:26" pos:end="93:30">codec</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:39">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:38"><expr pos:start="95:13" pos:end="95:37"><call pos:start="95:13" pos:end="95:37"><name pos:start="95:13" pos:end="95:20">put_byte</name><argument_list pos:start="95:21" pos:end="95:37">(<argument pos:start="95:22" pos:end="95:23"><expr pos:start="95:22" pos:end="95:23"><name pos:start="95:22" pos:end="95:23">pb</name></expr></argument>, <argument pos:start="95:26" pos:end="95:36"><expr pos:start="95:26" pos:end="95:36"><name pos:start="95:26" pos:end="95:36"><name pos:start="95:26" pos:end="95:30">codec</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:36">qmin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:38"><expr pos:start="97:13" pos:end="97:37"><call pos:start="97:13" pos:end="97:37"><name pos:start="97:13" pos:end="97:20">put_byte</name><argument_list pos:start="97:21" pos:end="97:37">(<argument pos:start="97:22" pos:end="97:23"><expr pos:start="97:22" pos:end="97:23"><name pos:start="97:22" pos:end="97:23">pb</name></expr></argument>, <argument pos:start="97:26" pos:end="97:36"><expr pos:start="97:26" pos:end="97:36"><name pos:start="97:26" pos:end="97:36"><name pos:start="97:26" pos:end="97:30">codec</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:36">qmax</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:43"><expr pos:start="99:13" pos:end="99:42"><call pos:start="99:13" pos:end="99:42"><name pos:start="99:13" pos:end="99:20">put_byte</name><argument_list pos:start="99:21" pos:end="99:42">(<argument pos:start="99:22" pos:end="99:23"><expr pos:start="99:22" pos:end="99:23"><name pos:start="99:22" pos:end="99:23">pb</name></expr></argument>, <argument pos:start="99:26" pos:end="99:41"><expr pos:start="99:26" pos:end="99:41"><name pos:start="99:26" pos:end="99:41"><name pos:start="99:26" pos:end="99:30">codec</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:41">max_qdiff</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:61"><expr pos:start="101:13" pos:end="101:60"><call pos:start="101:13" pos:end="101:60"><name pos:start="101:13" pos:end="101:20">put_be16</name><argument_list pos:start="101:21" pos:end="101:60">(<argument pos:start="101:22" pos:end="101:23"><expr pos:start="101:22" pos:end="101:23"><name pos:start="101:22" pos:end="101:23">pb</name></expr></argument>, <argument pos:start="101:26" pos:end="101:59"><expr pos:start="101:26" pos:end="101:59"><operator pos:start="101:26" pos:end="101:26">(</operator><name pos:start="101:27" pos:end="101:29">int</name><operator pos:start="101:30" pos:end="101:30">)</operator> <operator pos:start="101:32" pos:end="101:32">(</operator><name pos:start="101:33" pos:end="101:48"><name pos:start="101:33" pos:end="101:37">codec</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:48">qcompress</name></name> <operator pos:start="101:50" pos:end="101:50">*</operator> <literal type="number" pos:start="101:52" pos:end="101:58">10000.0</literal><operator pos:start="101:59" pos:end="101:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:57"><expr pos:start="103:13" pos:end="103:56"><call pos:start="103:13" pos:end="103:56"><name pos:start="103:13" pos:end="103:20">put_be16</name><argument_list pos:start="103:21" pos:end="103:56">(<argument pos:start="103:22" pos:end="103:23"><expr pos:start="103:22" pos:end="103:23"><name pos:start="103:22" pos:end="103:23">pb</name></expr></argument>, <argument pos:start="103:26" pos:end="103:55"><expr pos:start="103:26" pos:end="103:55"><operator pos:start="103:26" pos:end="103:26">(</operator><name pos:start="103:27" pos:end="103:29">int</name><operator pos:start="103:30" pos:end="103:30">)</operator> <operator pos:start="103:32" pos:end="103:32">(</operator><name pos:start="103:33" pos:end="103:44"><name pos:start="103:33" pos:end="103:37">codec</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:44">qblur</name></name> <operator pos:start="103:46" pos:end="103:46">*</operator> <literal type="number" pos:start="103:48" pos:end="103:54">10000.0</literal><operator pos:start="103:55" pos:end="103:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:52"><expr pos:start="105:13" pos:end="105:51"><call pos:start="105:13" pos:end="105:51"><name pos:start="105:13" pos:end="105:20">put_be32</name><argument_list pos:start="105:21" pos:end="105:51">(<argument pos:start="105:22" pos:end="105:23"><expr pos:start="105:22" pos:end="105:23"><name pos:start="105:22" pos:end="105:23">pb</name></expr></argument>, <argument pos:start="105:26" pos:end="105:50"><expr pos:start="105:26" pos:end="105:50"><name pos:start="105:26" pos:end="105:50"><name pos:start="105:26" pos:end="105:30">codec</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:50">bit_rate_tolerance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:39"><expr pos:start="107:13" pos:end="107:38"><call pos:start="107:13" pos:end="107:38"><name pos:start="107:13" pos:end="107:20">put_strz</name><argument_list pos:start="107:21" pos:end="107:38">(<argument pos:start="107:22" pos:end="107:23"><expr pos:start="107:22" pos:end="107:23"><name pos:start="107:22" pos:end="107:23">pb</name></expr></argument>, <argument pos:start="107:26" pos:end="107:37"><expr pos:start="107:26" pos:end="107:37"><name pos:start="107:26" pos:end="107:37"><name pos:start="107:26" pos:end="107:30">codec</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:37">rc_eq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:45"><expr pos:start="109:13" pos:end="109:44"><call pos:start="109:13" pos:end="109:44"><name pos:start="109:13" pos:end="109:20">put_be32</name><argument_list pos:start="109:21" pos:end="109:44">(<argument pos:start="109:22" pos:end="109:23"><expr pos:start="109:22" pos:end="109:23"><name pos:start="109:22" pos:end="109:23">pb</name></expr></argument>, <argument pos:start="109:26" pos:end="109:43"><expr pos:start="109:26" pos:end="109:43"><name pos:start="109:26" pos:end="109:43"><name pos:start="109:26" pos:end="109:30">codec</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:43">rc_max_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:45"><expr pos:start="111:13" pos:end="111:44"><call pos:start="111:13" pos:end="111:44"><name pos:start="111:13" pos:end="111:20">put_be32</name><argument_list pos:start="111:21" pos:end="111:44">(<argument pos:start="111:22" pos:end="111:23"><expr pos:start="111:22" pos:end="111:23"><name pos:start="111:22" pos:end="111:23">pb</name></expr></argument>, <argument pos:start="111:26" pos:end="111:43"><expr pos:start="111:26" pos:end="111:43"><name pos:start="111:26" pos:end="111:43"><name pos:start="111:26" pos:end="111:30">codec</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:43">rc_min_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:48"><expr pos:start="113:13" pos:end="113:47"><call pos:start="113:13" pos:end="113:47"><name pos:start="113:13" pos:end="113:20">put_be32</name><argument_list pos:start="113:21" pos:end="113:47">(<argument pos:start="113:22" pos:end="113:23"><expr pos:start="113:22" pos:end="113:23"><name pos:start="113:22" pos:end="113:23">pb</name></expr></argument>, <argument pos:start="113:26" pos:end="113:46"><expr pos:start="113:26" pos:end="113:46"><name pos:start="113:26" pos:end="113:46"><name pos:start="113:26" pos:end="113:30">codec</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:46">rc_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:60"><expr pos:start="115:13" pos:end="115:59"><call pos:start="115:13" pos:end="115:59"><name pos:start="115:13" pos:end="115:20">put_be64</name><argument_list pos:start="115:21" pos:end="115:59">(<argument pos:start="115:22" pos:end="115:23"><expr pos:start="115:22" pos:end="115:23"><name pos:start="115:22" pos:end="115:23">pb</name></expr></argument>, <argument pos:start="115:26" pos:end="115:58"><expr pos:start="115:26" pos:end="115:58"><call pos:start="115:26" pos:end="115:58"><name pos:start="115:26" pos:end="115:35">av_dbl2int</name><argument_list pos:start="115:36" pos:end="115:58">(<argument pos:start="115:37" pos:end="115:57"><expr pos:start="115:37" pos:end="115:57"><name pos:start="115:37" pos:end="115:57"><name pos:start="115:37" pos:end="115:41">codec</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:57">i_quant_factor</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:60"><expr pos:start="117:13" pos:end="117:59"><call pos:start="117:13" pos:end="117:59"><name pos:start="117:13" pos:end="117:20">put_be64</name><argument_list pos:start="117:21" pos:end="117:59">(<argument pos:start="117:22" pos:end="117:23"><expr pos:start="117:22" pos:end="117:23"><name pos:start="117:22" pos:end="117:23">pb</name></expr></argument>, <argument pos:start="117:26" pos:end="117:58"><expr pos:start="117:26" pos:end="117:58"><call pos:start="117:26" pos:end="117:58"><name pos:start="117:26" pos:end="117:35">av_dbl2int</name><argument_list pos:start="117:36" pos:end="117:58">(<argument pos:start="117:37" pos:end="117:57"><expr pos:start="117:37" pos:end="117:57"><name pos:start="117:37" pos:end="117:57"><name pos:start="117:37" pos:end="117:41">codec</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:57">b_quant_factor</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:60"><expr pos:start="119:13" pos:end="119:59"><call pos:start="119:13" pos:end="119:59"><name pos:start="119:13" pos:end="119:20">put_be64</name><argument_list pos:start="119:21" pos:end="119:59">(<argument pos:start="119:22" pos:end="119:23"><expr pos:start="119:22" pos:end="119:23"><name pos:start="119:22" pos:end="119:23">pb</name></expr></argument>, <argument pos:start="119:26" pos:end="119:58"><expr pos:start="119:26" pos:end="119:58"><call pos:start="119:26" pos:end="119:58"><name pos:start="119:26" pos:end="119:35">av_dbl2int</name><argument_list pos:start="119:36" pos:end="119:58">(<argument pos:start="119:37" pos:end="119:57"><expr pos:start="119:37" pos:end="119:57"><name pos:start="119:37" pos:end="119:57"><name pos:start="119:37" pos:end="119:41">codec</name><operator pos:start="119:42" pos:end="119:43">-&gt;</operator><name pos:start="119:44" pos:end="119:57">i_quant_offset</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:60"><expr pos:start="121:13" pos:end="121:59"><call pos:start="121:13" pos:end="121:59"><name pos:start="121:13" pos:end="121:20">put_be64</name><argument_list pos:start="121:21" pos:end="121:59">(<argument pos:start="121:22" pos:end="121:23"><expr pos:start="121:22" pos:end="121:23"><name pos:start="121:22" pos:end="121:23">pb</name></expr></argument>, <argument pos:start="121:26" pos:end="121:58"><expr pos:start="121:26" pos:end="121:58"><call pos:start="121:26" pos:end="121:58"><name pos:start="121:26" pos:end="121:35">av_dbl2int</name><argument_list pos:start="121:36" pos:end="121:58">(<argument pos:start="121:37" pos:end="121:57"><expr pos:start="121:37" pos:end="121:57"><name pos:start="121:37" pos:end="121:57"><name pos:start="121:37" pos:end="121:41">codec</name><operator pos:start="121:42" pos:end="121:43">-&gt;</operator><name pos:start="121:44" pos:end="121:57">b_quant_offset</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:42"><expr pos:start="123:13" pos:end="123:41"><call pos:start="123:13" pos:end="123:41"><name pos:start="123:13" pos:end="123:20">put_be32</name><argument_list pos:start="123:21" pos:end="123:41">(<argument pos:start="123:22" pos:end="123:23"><expr pos:start="123:22" pos:end="123:23"><name pos:start="123:22" pos:end="123:23">pb</name></expr></argument>, <argument pos:start="123:26" pos:end="123:40"><expr pos:start="123:26" pos:end="123:40"><name pos:start="123:26" pos:end="123:40"><name pos:start="123:26" pos:end="123:30">codec</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:40">dct_algo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:55"><expr pos:start="125:13" pos:end="125:54"><call pos:start="125:13" pos:end="125:54"><name pos:start="125:13" pos:end="125:20">put_be32</name><argument_list pos:start="125:21" pos:end="125:54">(<argument pos:start="125:22" pos:end="125:23"><expr pos:start="125:22" pos:end="125:23"><name pos:start="125:22" pos:end="125:23">pb</name></expr></argument>, <argument pos:start="125:26" pos:end="125:53"><expr pos:start="125:26" pos:end="125:53"><name pos:start="125:26" pos:end="125:53"><name pos:start="125:26" pos:end="125:30">codec</name><operator pos:start="125:31" pos:end="125:32">-&gt;</operator><name pos:start="125:33" pos:end="125:53">strict_std_compliance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:46"><expr pos:start="127:13" pos:end="127:45"><call pos:start="127:13" pos:end="127:45"><name pos:start="127:13" pos:end="127:20">put_be32</name><argument_list pos:start="127:21" pos:end="127:45">(<argument pos:start="127:22" pos:end="127:23"><expr pos:start="127:22" pos:end="127:23"><name pos:start="127:22" pos:end="127:23">pb</name></expr></argument>, <argument pos:start="127:26" pos:end="127:44"><expr pos:start="127:26" pos:end="127:44"><name pos:start="127:26" pos:end="127:44"><name pos:start="127:26" pos:end="127:30">codec</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:44">max_b_frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:53"><expr pos:start="129:13" pos:end="129:52"><call pos:start="129:13" pos:end="129:52"><name pos:start="129:13" pos:end="129:20">put_be32</name><argument_list pos:start="129:21" pos:end="129:52">(<argument pos:start="129:22" pos:end="129:23"><expr pos:start="129:22" pos:end="129:23"><name pos:start="129:22" pos:end="129:23">pb</name></expr></argument>, <argument pos:start="129:26" pos:end="129:51"><expr pos:start="129:26" pos:end="129:51"><name pos:start="129:26" pos:end="129:51"><name pos:start="129:26" pos:end="129:30">codec</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:51">luma_elim_threshold</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:55"><expr pos:start="131:13" pos:end="131:54"><call pos:start="131:13" pos:end="131:54"><name pos:start="131:13" pos:end="131:20">put_be32</name><argument_list pos:start="131:21" pos:end="131:54">(<argument pos:start="131:22" pos:end="131:23"><expr pos:start="131:22" pos:end="131:23"><name pos:start="131:22" pos:end="131:23">pb</name></expr></argument>, <argument pos:start="131:26" pos:end="131:53"><expr pos:start="131:26" pos:end="131:53"><name pos:start="131:26" pos:end="131:53"><name pos:start="131:26" pos:end="131:30">codec</name><operator pos:start="131:31" pos:end="131:32">-&gt;</operator><name pos:start="131:33" pos:end="131:53">chroma_elim_threshold</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:44"><expr pos:start="133:13" pos:end="133:43"><call pos:start="133:13" pos:end="133:43"><name pos:start="133:13" pos:end="133:20">put_be32</name><argument_list pos:start="133:21" pos:end="133:43">(<argument pos:start="133:22" pos:end="133:23"><expr pos:start="133:22" pos:end="133:23"><name pos:start="133:22" pos:end="133:23">pb</name></expr></argument>, <argument pos:start="133:26" pos:end="133:42"><expr pos:start="133:26" pos:end="133:42"><name pos:start="133:26" pos:end="133:42"><name pos:start="133:26" pos:end="133:30">codec</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:42">mpeg_quant</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:52"><expr pos:start="135:13" pos:end="135:51"><call pos:start="135:13" pos:end="135:51"><name pos:start="135:13" pos:end="135:20">put_be32</name><argument_list pos:start="135:21" pos:end="135:51">(<argument pos:start="135:22" pos:end="135:23"><expr pos:start="135:22" pos:end="135:23"><name pos:start="135:22" pos:end="135:23">pb</name></expr></argument>, <argument pos:start="135:26" pos:end="135:50"><expr pos:start="135:26" pos:end="135:50"><name pos:start="135:26" pos:end="135:50"><name pos:start="135:26" pos:end="135:30">codec</name><operator pos:start="135:31" pos:end="135:32">-&gt;</operator><name pos:start="135:33" pos:end="135:50">intra_dc_precision</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:43"><expr pos:start="137:13" pos:end="137:42"><call pos:start="137:13" pos:end="137:42"><name pos:start="137:13" pos:end="137:20">put_be32</name><argument_list pos:start="137:21" pos:end="137:42">(<argument pos:start="137:22" pos:end="137:23"><expr pos:start="137:22" pos:end="137:23"><name pos:start="137:22" pos:end="137:23">pb</name></expr></argument>, <argument pos:start="137:26" pos:end="137:41"><expr pos:start="137:26" pos:end="137:41"><name pos:start="137:26" pos:end="137:41"><name pos:start="137:26" pos:end="137:30">codec</name><operator pos:start="137:31" pos:end="137:32">-&gt;</operator><name pos:start="137:33" pos:end="137:41">me_method</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:45"><expr pos:start="139:13" pos:end="139:44"><call pos:start="139:13" pos:end="139:44"><name pos:start="139:13" pos:end="139:20">put_be32</name><argument_list pos:start="139:21" pos:end="139:44">(<argument pos:start="139:22" pos:end="139:23"><expr pos:start="139:22" pos:end="139:23"><name pos:start="139:22" pos:end="139:23">pb</name></expr></argument>, <argument pos:start="139:26" pos:end="139:43"><expr pos:start="139:26" pos:end="139:43"><name pos:start="139:26" pos:end="139:43"><name pos:start="139:26" pos:end="139:30">codec</name><operator pos:start="139:31" pos:end="139:32">-&gt;</operator><name pos:start="139:33" pos:end="139:43">mb_decision</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:45"><expr pos:start="141:13" pos:end="141:44"><call pos:start="141:13" pos:end="141:44"><name pos:start="141:13" pos:end="141:20">put_be32</name><argument_list pos:start="141:21" pos:end="141:44">(<argument pos:start="141:22" pos:end="141:23"><expr pos:start="141:22" pos:end="141:23"><name pos:start="141:22" pos:end="141:23">pb</name></expr></argument>, <argument pos:start="141:26" pos:end="141:43"><expr pos:start="141:26" pos:end="141:43"><name pos:start="141:26" pos:end="141:43"><name pos:start="141:26" pos:end="141:30">codec</name><operator pos:start="141:31" pos:end="141:32">-&gt;</operator><name pos:start="141:33" pos:end="141:43">nsse_weight</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:48"><expr pos:start="143:13" pos:end="143:47"><call pos:start="143:13" pos:end="143:47"><name pos:start="143:13" pos:end="143:20">put_be32</name><argument_list pos:start="143:21" pos:end="143:47">(<argument pos:start="143:22" pos:end="143:23"><expr pos:start="143:22" pos:end="143:23"><name pos:start="143:22" pos:end="143:23">pb</name></expr></argument>, <argument pos:start="143:26" pos:end="143:46"><expr pos:start="143:26" pos:end="143:46"><name pos:start="143:26" pos:end="143:46"><name pos:start="143:26" pos:end="143:30">codec</name><operator pos:start="143:31" pos:end="143:32">-&gt;</operator><name pos:start="143:33" pos:end="143:46">frame_skip_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:68"><expr pos:start="145:13" pos:end="145:67"><call pos:start="145:13" pos:end="145:67"><name pos:start="145:13" pos:end="145:20">put_be64</name><argument_list pos:start="145:21" pos:end="145:67">(<argument pos:start="145:22" pos:end="145:23"><expr pos:start="145:22" pos:end="145:23"><name pos:start="145:22" pos:end="145:23">pb</name></expr></argument>, <argument pos:start="145:26" pos:end="145:66"><expr pos:start="145:26" pos:end="145:66"><call pos:start="145:26" pos:end="145:66"><name pos:start="145:26" pos:end="145:35">av_dbl2int</name><argument_list pos:start="145:36" pos:end="145:66">(<argument pos:start="145:37" pos:end="145:65"><expr pos:start="145:37" pos:end="145:65"><name pos:start="145:37" pos:end="145:65"><name pos:start="145:37" pos:end="145:41">codec</name><operator pos:start="145:42" pos:end="145:43">-&gt;</operator><name pos:start="145:44" pos:end="145:65">rc_buffer_aggressivity</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:43"><expr pos:start="147:13" pos:end="147:42"><call pos:start="147:13" pos:end="147:42"><name pos:start="147:13" pos:end="147:20">put_be32</name><argument_list pos:start="147:21" pos:end="147:42">(<argument pos:start="147:22" pos:end="147:23"><expr pos:start="147:22" pos:end="147:23"><name pos:start="147:22" pos:end="147:23">pb</name></expr></argument>, <argument pos:start="147:26" pos:end="147:41"><expr pos:start="147:26" pos:end="147:41"><name pos:start="147:26" pos:end="147:41"><name pos:start="147:26" pos:end="147:30">codec</name><operator pos:start="147:31" pos:end="147:32">-&gt;</operator><name pos:start="147:33" pos:end="147:41">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:46"><expr pos:start="149:13" pos:end="149:45"><call pos:start="149:13" pos:end="149:45"><name pos:start="149:13" pos:end="149:20">put_byte</name><argument_list pos:start="149:21" pos:end="149:45">(<argument pos:start="149:22" pos:end="149:23"><expr pos:start="149:22" pos:end="149:23"><name pos:start="149:22" pos:end="149:23">pb</name></expr></argument>, <argument pos:start="149:26" pos:end="149:44"><expr pos:start="149:26" pos:end="149:44"><name pos:start="149:26" pos:end="149:44"><name pos:start="149:26" pos:end="149:30">codec</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:44">thread_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="151:13" pos:end="151:18">break;</break>

        <case pos:start="153:9" pos:end="153:30">case <expr pos:start="153:14" pos:end="153:29"><name pos:start="153:14" pos:end="153:29">CODEC_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="155:13" pos:end="155:45"><expr pos:start="155:13" pos:end="155:44"><call pos:start="155:13" pos:end="155:44"><name pos:start="155:13" pos:end="155:20">put_be32</name><argument_list pos:start="155:21" pos:end="155:44">(<argument pos:start="155:22" pos:end="155:23"><expr pos:start="155:22" pos:end="155:23"><name pos:start="155:22" pos:end="155:23">pb</name></expr></argument>, <argument pos:start="155:26" pos:end="155:43"><expr pos:start="155:26" pos:end="155:43"><name pos:start="155:26" pos:end="155:43"><name pos:start="155:26" pos:end="155:30">codec</name><operator pos:start="155:31" pos:end="155:32">-&gt;</operator><name pos:start="155:33" pos:end="155:43">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:42"><expr pos:start="157:13" pos:end="157:41"><call pos:start="157:13" pos:end="157:41"><name pos:start="157:13" pos:end="157:20">put_le16</name><argument_list pos:start="157:21" pos:end="157:41">(<argument pos:start="157:22" pos:end="157:23"><expr pos:start="157:22" pos:end="157:23"><name pos:start="157:22" pos:end="157:23">pb</name></expr></argument>, <argument pos:start="157:26" pos:end="157:40"><expr pos:start="157:26" pos:end="157:40"><name pos:start="157:26" pos:end="157:40"><name pos:start="157:26" pos:end="157:30">codec</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:40">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:44"><expr pos:start="159:13" pos:end="159:43"><call pos:start="159:13" pos:end="159:43"><name pos:start="159:13" pos:end="159:20">put_le16</name><argument_list pos:start="159:21" pos:end="159:43">(<argument pos:start="159:22" pos:end="159:23"><expr pos:start="159:22" pos:end="159:23"><name pos:start="159:22" pos:end="159:23">pb</name></expr></argument>, <argument pos:start="159:26" pos:end="159:42"><expr pos:start="159:26" pos:end="159:42"><name pos:start="159:26" pos:end="159:42"><name pos:start="159:26" pos:end="159:30">codec</name><operator pos:start="159:31" pos:end="159:32">-&gt;</operator><name pos:start="159:33" pos:end="159:42">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="161:13" pos:end="161:18">break;</break>

        <default pos:start="163:9" pos:end="163:16">default:</default>

            <return pos:start="165:13" pos:end="165:22">return <expr pos:start="165:20" pos:end="165:21"><operator pos:start="165:20" pos:end="165:20">-</operator><literal type="number" pos:start="165:21" pos:end="165:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <if_stmt pos:start="169:9" pos:end="175:9"><if pos:start="169:9" pos:end="175:9">if <condition pos:start="169:12" pos:end="169:52">(<expr pos:start="169:13" pos:end="169:51"><name pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:17">codec</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:24">flags</name></name> <operator pos:start="169:26" pos:end="169:26">&amp;</operator> <name pos:start="169:28" pos:end="169:51">CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="169:54" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:68">

            <expr_stmt pos:start="171:13" pos:end="171:48"><expr pos:start="171:13" pos:end="171:47"><call pos:start="171:13" pos:end="171:47"><name pos:start="171:13" pos:end="171:20">put_be32</name><argument_list pos:start="171:21" pos:end="171:47">(<argument pos:start="171:22" pos:end="171:23"><expr pos:start="171:22" pos:end="171:23"><name pos:start="171:22" pos:end="171:23">pb</name></expr></argument>, <argument pos:start="171:26" pos:end="171:46"><expr pos:start="171:26" pos:end="171:46"><name pos:start="171:26" pos:end="171:46"><name pos:start="171:26" pos:end="171:30">codec</name><operator pos:start="171:31" pos:end="171:32">-&gt;</operator><name pos:start="171:33" pos:end="171:46">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:68"><expr pos:start="173:13" pos:end="173:67"><call pos:start="173:13" pos:end="173:67"><name pos:start="173:13" pos:end="173:22">put_buffer</name><argument_list pos:start="173:23" pos:end="173:67">(<argument pos:start="173:24" pos:end="173:25"><expr pos:start="173:24" pos:end="173:25"><name pos:start="173:24" pos:end="173:25">pb</name></expr></argument>, <argument pos:start="173:28" pos:end="173:43"><expr pos:start="173:28" pos:end="173:43"><name pos:start="173:28" pos:end="173:43"><name pos:start="173:28" pos:end="173:32">codec</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:43">extradata</name></name></expr></argument>, <argument pos:start="173:46" pos:end="173:66"><expr pos:start="173:46" pos:end="173:66"><name pos:start="173:46" pos:end="173:66"><name pos:start="173:46" pos:end="173:50">codec</name><operator pos:start="173:51" pos:end="173:52">-&gt;</operator><name pos:start="173:53" pos:end="173:66">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="181:5" pos:end="181:42">/* flush until end of block reached */</comment>

    <while pos:start="183:5" pos:end="185:24">while <condition pos:start="183:11" pos:end="183:51">(<expr pos:start="183:12" pos:end="183:50"><operator pos:start="183:12" pos:end="183:12">(</operator><call pos:start="183:13" pos:end="183:25"><name pos:start="183:13" pos:end="183:21">url_ftell</name><argument_list pos:start="183:22" pos:end="183:25">(<argument pos:start="183:23" pos:end="183:24"><expr pos:start="183:23" pos:end="183:24"><name pos:start="183:23" pos:end="183:24">pb</name></expr></argument>)</argument_list></call> <operator pos:start="183:27" pos:end="183:27">%</operator> <name pos:start="183:29" pos:end="183:44"><name pos:start="183:29" pos:end="183:31">ffm</name><operator pos:start="183:32" pos:end="183:33">-&gt;</operator><name pos:start="183:34" pos:end="183:44">packet_size</name></name><operator pos:start="183:45" pos:end="183:45">)</operator> <operator pos:start="183:47" pos:end="183:48">!=</operator> <literal type="number" pos:start="183:50" pos:end="183:50">0</literal></expr>)</condition><block type="pseudo" pos:start="185:9" pos:end="185:24"><block_content pos:start="185:9" pos:end="185:24">

        <expr_stmt pos:start="185:9" pos:end="185:24"><expr pos:start="185:9" pos:end="185:23"><call pos:start="185:9" pos:end="185:23"><name pos:start="185:9" pos:end="185:16">put_byte</name><argument_list pos:start="185:17" pos:end="185:23">(<argument pos:start="185:18" pos:end="185:19"><expr pos:start="185:18" pos:end="185:19"><name pos:start="185:18" pos:end="185:19">pb</name></expr></argument>, <argument pos:start="185:22" pos:end="185:22"><expr pos:start="185:22" pos:end="185:22"><literal type="number" pos:start="185:22" pos:end="185:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <expr_stmt pos:start="189:5" pos:end="189:25"><expr pos:start="189:5" pos:end="189:24"><call pos:start="189:5" pos:end="189:24"><name pos:start="189:5" pos:end="189:20">put_flush_packet</name><argument_list pos:start="189:21" pos:end="189:24">(<argument pos:start="189:22" pos:end="189:23"><expr pos:start="189:22" pos:end="189:23"><name pos:start="189:22" pos:end="189:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="193:5" pos:end="193:25">/* init packet mux */</comment>

    <expr_stmt pos:start="195:5" pos:end="195:34"><expr pos:start="195:5" pos:end="195:33"><name pos:start="195:5" pos:end="195:19"><name pos:start="195:5" pos:end="195:7">ffm</name><operator pos:start="195:8" pos:end="195:9">-&gt;</operator><name pos:start="195:10" pos:end="195:19">packet_ptr</name></name> <operator pos:start="195:21" pos:end="195:21">=</operator> <name pos:start="195:23" pos:end="195:33"><name pos:start="195:23" pos:end="195:25">ffm</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:33">packet</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:71"><expr pos:start="197:5" pos:end="197:70"><name pos:start="197:5" pos:end="197:19"><name pos:start="197:5" pos:end="197:7">ffm</name><operator pos:start="197:8" pos:end="197:9">-&gt;</operator><name pos:start="197:10" pos:end="197:19">packet_end</name></name> <operator pos:start="197:21" pos:end="197:21">=</operator> <name pos:start="197:23" pos:end="197:33"><name pos:start="197:23" pos:end="197:25">ffm</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:33">packet</name></name> <operator pos:start="197:35" pos:end="197:35">+</operator> <name pos:start="197:37" pos:end="197:52"><name pos:start="197:37" pos:end="197:39">ffm</name><operator pos:start="197:40" pos:end="197:41">-&gt;</operator><name pos:start="197:42" pos:end="197:52">packet_size</name></name> <operator pos:start="197:54" pos:end="197:54">-</operator> <name pos:start="197:56" pos:end="197:70">FFM_HEADER_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:43"><expr pos:start="199:5" pos:end="199:42"><call pos:start="199:5" pos:end="199:42"><name pos:start="199:5" pos:end="199:10">assert</name><argument_list pos:start="199:11" pos:end="199:42">(<argument pos:start="199:12" pos:end="199:41"><expr pos:start="199:12" pos:end="199:41"><name pos:start="199:12" pos:end="199:26"><name pos:start="199:12" pos:end="199:14">ffm</name><operator pos:start="199:15" pos:end="199:16">-&gt;</operator><name pos:start="199:17" pos:end="199:26">packet_end</name></name> <operator pos:start="199:28" pos:end="199:29">&gt;=</operator> <name pos:start="199:31" pos:end="199:41"><name pos:start="199:31" pos:end="199:33">ffm</name><operator pos:start="199:34" pos:end="199:35">-&gt;</operator><name pos:start="199:36" pos:end="199:41">packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:26"><expr pos:start="201:5" pos:end="201:25"><name pos:start="201:5" pos:end="201:21"><name pos:start="201:5" pos:end="201:7">ffm</name><operator pos:start="201:8" pos:end="201:9">-&gt;</operator><name pos:start="201:10" pos:end="201:21">frame_offset</name></name> <operator pos:start="201:23" pos:end="201:23">=</operator> <literal type="number" pos:start="201:25" pos:end="201:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:17"><expr pos:start="203:5" pos:end="203:16"><name pos:start="203:5" pos:end="203:12"><name pos:start="203:5" pos:end="203:7">ffm</name><operator pos:start="203:8" pos:end="203:9">-&gt;</operator><name pos:start="203:10" pos:end="203:12">dts</name></name> <operator pos:start="203:14" pos:end="203:14">=</operator> <literal type="number" pos:start="203:16" pos:end="203:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:26"><expr pos:start="205:5" pos:end="205:25"><name pos:start="205:5" pos:end="205:21"><name pos:start="205:5" pos:end="205:7">ffm</name><operator pos:start="205:8" pos:end="205:9">-&gt;</operator><name pos:start="205:10" pos:end="205:21">first_packet</name></name> <operator pos:start="205:23" pos:end="205:23">=</operator> <literal type="number" pos:start="205:25" pos:end="205:25">1</literal></expr>;</expr_stmt>



    <return pos:start="209:5" pos:end="209:13">return <expr pos:start="209:12" pos:end="209:12"><literal type="number" pos:start="209:12" pos:end="209:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
