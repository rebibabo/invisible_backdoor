<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1639.c" pos:tabs="8"><function pos:start="1:1" pos:end="633:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">wma_decode_init</name><parameter_list pos:start="1:27" pos:end="1:50">(<parameter pos:start="1:28" pos:end="1:49"><decl pos:start="1:28" pos:end="1:49"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type> <name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="633:1">{<block_content pos:start="5:5" pos:end="631:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">WMADecodeContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:17">flags1</name></decl>, <decl pos:start="7:20" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:25">flags2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">float</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:17">window</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:22">extradata</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">float</name></type> <name pos:start="13:11" pos:end="13:14">bps1</name></decl>, <decl pos:start="13:17" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:9"/><name pos:start="13:17" pos:end="13:25">high_freq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:18"><specifier pos:start="15:5" pos:end="15:12">volatile</specifier> <name pos:start="15:14" pos:end="15:18">float</name></type> <name pos:start="15:20" pos:end="15:22">bps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">sample_rate1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:22">coef_vlc_table</name></decl>;</decl_stmt>

    

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:18">sample_rate</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:39"><name pos:start="23:22" pos:end="23:26">avctx</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:39">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:18">nb_channels</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:36"><name pos:start="25:22" pos:end="25:26">avctx</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:36">channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:15">bit_rate</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:33"><name pos:start="27:19" pos:end="27:23">avctx</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:33">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:18">block_align</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:39"><name pos:start="29:22" pos:end="29:26">avctx</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:39">block_align</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:43">(<expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:20">codec</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:24">id</name></name> <operator pos:start="33:26" pos:end="33:27">==</operator> <name pos:start="33:29" pos:end="33:42">CODEC_ID_WMAV1</name></expr>)</condition> <block pos:start="33:45" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:23">

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:18">version</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="41:5">else <block pos:start="37:12" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:23">

        <expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:18">version</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    

    <comment type="block" pos:start="45:5" pos:end="45:28">/* extract flag infos */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:15"><expr pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:10">flags1</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:15"><expr pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:10">flags2</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:13">extradata</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:32"><name pos:start="51:17" pos:end="51:21">avctx</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:32">extradata</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="67:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:54">(<expr pos:start="53:9" pos:end="53:53"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:18">version</name></name> <operator pos:start="53:20" pos:end="53:21">==</operator> <literal type="number" pos:start="53:23" pos:end="53:23">1</literal> <operator pos:start="53:25" pos:end="53:26">&amp;&amp;</operator> <name pos:start="53:28" pos:end="53:48"><name pos:start="53:28" pos:end="53:32">avctx</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:48">extradata_size</name></name> <operator pos:start="53:50" pos:end="53:51">&gt;=</operator> <literal type="number" pos:start="53:53" pos:end="53:53">4</literal></expr>)</condition> <block pos:start="53:56" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:52">

        <expr_stmt pos:start="55:9" pos:end="55:52"><expr pos:start="55:9" pos:end="55:51"><name pos:start="55:9" pos:end="55:14">flags1</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:29"><name pos:start="55:18" pos:end="55:26">extradata</name><index pos:start="55:27" pos:end="55:29">[<expr pos:start="55:28" pos:end="55:28"><literal type="number" pos:start="55:28" pos:end="55:28">0</literal></expr>]</index></name> <operator pos:start="55:31" pos:end="55:31">|</operator> <operator pos:start="55:33" pos:end="55:33">(</operator><name pos:start="55:34" pos:end="55:45"><name pos:start="55:34" pos:end="55:42">extradata</name><index pos:start="55:43" pos:end="55:45">[<expr pos:start="55:44" pos:end="55:44"><literal type="number" pos:start="55:44" pos:end="55:44">1</literal></expr>]</index></name> <operator pos:start="55:47" pos:end="55:48">&lt;&lt;</operator> <literal type="number" pos:start="55:50" pos:end="55:50">8</literal><operator pos:start="55:51" pos:end="55:51">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:52"><expr pos:start="57:9" pos:end="57:51"><name pos:start="57:9" pos:end="57:14">flags2</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:29"><name pos:start="57:18" pos:end="57:26">extradata</name><index pos:start="57:27" pos:end="57:29">[<expr pos:start="57:28" pos:end="57:28"><literal type="number" pos:start="57:28" pos:end="57:28">2</literal></expr>]</index></name> <operator pos:start="57:31" pos:end="57:31">|</operator> <operator pos:start="57:33" pos:end="57:33">(</operator><name pos:start="57:34" pos:end="57:45"><name pos:start="57:34" pos:end="57:42">extradata</name><index pos:start="57:43" pos:end="57:45">[<expr pos:start="57:44" pos:end="57:44"><literal type="number" pos:start="57:44" pos:end="57:44">3</literal></expr>]</index></name> <operator pos:start="57:47" pos:end="57:48">&lt;&lt;</operator> <literal type="number" pos:start="57:50" pos:end="57:50">8</literal><operator pos:start="57:51" pos:end="57:51">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="67:5">else if <condition pos:start="59:15" pos:end="59:61">(<expr pos:start="59:16" pos:end="59:60"><name pos:start="59:16" pos:end="59:25"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:25">version</name></name> <operator pos:start="59:27" pos:end="59:28">==</operator> <literal type="number" pos:start="59:30" pos:end="59:30">2</literal> <operator pos:start="59:32" pos:end="59:33">&amp;&amp;</operator> <name pos:start="59:35" pos:end="59:55"><name pos:start="59:35" pos:end="59:39">avctx</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:55">extradata_size</name></name> <operator pos:start="59:57" pos:end="59:58">&gt;=</operator> <literal type="number" pos:start="59:60" pos:end="59:60">6</literal></expr>)</condition> <block pos:start="59:63" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:52">

        <expr_stmt pos:start="61:9" pos:end="63:56"><expr pos:start="61:9" pos:end="63:55"><name pos:start="61:9" pos:end="61:14">flags1</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:29"><name pos:start="61:18" pos:end="61:26">extradata</name><index pos:start="61:27" pos:end="61:29">[<expr pos:start="61:28" pos:end="61:28"><literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr>]</index></name> <operator pos:start="61:31" pos:end="61:31">|</operator> <operator pos:start="61:33" pos:end="61:33">(</operator><name pos:start="61:34" pos:end="61:45"><name pos:start="61:34" pos:end="61:42">extradata</name><index pos:start="61:43" pos:end="61:45">[<expr pos:start="61:44" pos:end="61:44"><literal type="number" pos:start="61:44" pos:end="61:44">1</literal></expr>]</index></name> <operator pos:start="61:47" pos:end="61:48">&lt;&lt;</operator> <literal type="number" pos:start="61:50" pos:end="61:50">8</literal><operator pos:start="61:51" pos:end="61:51">)</operator> <operator pos:start="61:53" pos:end="61:53">|</operator> 

            <operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:25"><name pos:start="63:14" pos:end="63:22">extradata</name><index pos:start="63:23" pos:end="63:25">[<expr pos:start="63:24" pos:end="63:24"><literal type="number" pos:start="63:24" pos:end="63:24">2</literal></expr>]</index></name> <operator pos:start="63:27" pos:end="63:28">&lt;&lt;</operator> <literal type="number" pos:start="63:30" pos:end="63:31">16</literal><operator pos:start="63:32" pos:end="63:32">)</operator> <operator pos:start="63:34" pos:end="63:34">|</operator> <operator pos:start="63:36" pos:end="63:36">(</operator><name pos:start="63:37" pos:end="63:48"><name pos:start="63:37" pos:end="63:45">extradata</name><index pos:start="63:46" pos:end="63:48">[<expr pos:start="63:47" pos:end="63:47"><literal type="number" pos:start="63:47" pos:end="63:47">3</literal></expr>]</index></name> <operator pos:start="63:50" pos:end="63:51">&lt;&lt;</operator> <literal type="number" pos:start="63:53" pos:end="63:54">24</literal><operator pos:start="63:55" pos:end="63:55">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:52"><expr pos:start="65:9" pos:end="65:51"><name pos:start="65:9" pos:end="65:14">flags2</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <name pos:start="65:18" pos:end="65:29"><name pos:start="65:18" pos:end="65:26">extradata</name><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><literal type="number" pos:start="65:28" pos:end="65:28">4</literal></expr>]</index></name> <operator pos:start="65:31" pos:end="65:31">|</operator> <operator pos:start="65:33" pos:end="65:33">(</operator><name pos:start="65:34" pos:end="65:45"><name pos:start="65:34" pos:end="65:42">extradata</name><index pos:start="65:43" pos:end="65:45">[<expr pos:start="65:44" pos:end="65:44"><literal type="number" pos:start="65:44" pos:end="65:44">5</literal></expr>]</index></name> <operator pos:start="65:47" pos:end="65:48">&lt;&lt;</operator> <literal type="number" pos:start="65:50" pos:end="65:50">8</literal><operator pos:start="65:51" pos:end="65:51">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:37"><expr pos:start="69:5" pos:end="69:36"><name pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:18">use_exp_vlc</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:27">flags2</name> <operator pos:start="69:29" pos:end="69:29">&amp;</operator> <literal type="number" pos:start="69:31" pos:end="69:36">0x0001</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:43"><expr pos:start="71:5" pos:end="71:42"><name pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:24">use_bit_reservoir</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <name pos:start="71:28" pos:end="71:33">flags2</name> <operator pos:start="71:35" pos:end="71:35">&amp;</operator> <literal type="number" pos:start="71:37" pos:end="71:42">0x0002</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:48"><expr pos:start="73:5" pos:end="73:47"><name pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:29">use_variable_block_len</name></name> <operator pos:start="73:31" pos:end="73:31">=</operator> <name pos:start="73:33" pos:end="73:38">flags2</name> <operator pos:start="73:40" pos:end="73:40">&amp;</operator> <literal type="number" pos:start="73:42" pos:end="73:47">0x0004</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:33">/* compute MDCT block size */</comment>

    <if_stmt pos:start="79:5" pos:end="93:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:32">(<expr pos:start="79:9" pos:end="79:31"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:22">sample_rate</name></name> <operator pos:start="79:24" pos:end="79:25">&lt;=</operator> <literal type="number" pos:start="79:27" pos:end="79:31">16000</literal></expr>)</condition> <block pos:start="79:34" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:30">

        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:25">frame_len_bits</name></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <literal type="number" pos:start="81:29" pos:end="81:29">9</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="83:7" pos:end="89:5">else if <condition pos:start="83:15" pos:end="85:60">(<expr pos:start="83:16" pos:end="85:59"><name pos:start="83:16" pos:end="83:29"><name pos:start="83:16" pos:end="83:16">s</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:29">sample_rate</name></name> <operator pos:start="83:31" pos:end="83:32">&lt;=</operator> <literal type="number" pos:start="83:34" pos:end="83:38">22050</literal> <operator pos:start="83:40" pos:end="83:41">||</operator> 

               <operator pos:start="85:16" pos:end="85:16">(</operator><name pos:start="85:17" pos:end="85:30"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:30">sample_rate</name></name> <operator pos:start="85:32" pos:end="85:33">&lt;=</operator> <literal type="number" pos:start="85:35" pos:end="85:39">32000</literal> <operator pos:start="85:41" pos:end="85:42">&amp;&amp;</operator> <name pos:start="85:44" pos:end="85:53"><name pos:start="85:44" pos:end="85:44">s</name><operator pos:start="85:45" pos:end="85:46">-&gt;</operator><name pos:start="85:47" pos:end="85:53">version</name></name> <operator pos:start="85:55" pos:end="85:56">==</operator> <literal type="number" pos:start="85:58" pos:end="85:58">1</literal><operator pos:start="85:59" pos:end="85:59">)</operator></expr>)</condition> <block pos:start="85:62" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:31">

        <expr_stmt pos:start="87:9" pos:end="87:31"><expr pos:start="87:9" pos:end="87:30"><name pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:25">frame_len_bits</name></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <literal type="number" pos:start="87:29" pos:end="87:30">10</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="93:5">else <block pos:start="89:12" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:31">

        <expr_stmt pos:start="91:9" pos:end="91:31"><expr pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:25">frame_len_bits</name></name> <operator pos:start="91:27" pos:end="91:27">=</operator> <literal type="number" pos:start="91:29" pos:end="91:30">11</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:42"><expr pos:start="95:5" pos:end="95:41"><name pos:start="95:5" pos:end="95:16"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:16">frame_len</name></name> <operator pos:start="95:18" pos:end="95:18">=</operator> <literal type="number" pos:start="95:20" pos:end="95:20">1</literal> <operator pos:start="95:22" pos:end="95:23">&lt;&lt;</operator> <name pos:start="95:25" pos:end="95:41"><name pos:start="95:25" pos:end="95:25">s</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:41">frame_len_bits</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="119:5"><if pos:start="97:5" pos:end="115:5">if <condition pos:start="97:8" pos:end="97:34">(<expr pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:33">use_variable_block_len</name></name></expr>)</condition> <block pos:start="97:36" pos:end="115:5">{<block_content pos:start="99:9" pos:end="113:35">

        <decl_stmt pos:start="99:9" pos:end="99:23"><decl pos:start="99:9" pos:end="99:18"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:18">nb_max</name></decl>, <decl pos:start="99:21" pos:end="99:22"><type ref="prev" pos:start="99:9" pos:end="99:11"/><name pos:start="99:21" pos:end="99:22">nb</name></decl>;</decl_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:37"><expr pos:start="101:9" pos:end="101:36"><name pos:start="101:9" pos:end="101:10">nb</name> <operator pos:start="101:12" pos:end="101:12">=</operator> <operator pos:start="101:14" pos:end="101:14">(</operator><operator pos:start="101:15" pos:end="101:15">(</operator><name pos:start="101:16" pos:end="101:21">flags2</name> <operator pos:start="101:23" pos:end="101:24">&gt;&gt;</operator> <literal type="number" pos:start="101:26" pos:end="101:26">3</literal><operator pos:start="101:27" pos:end="101:27">)</operator> <operator pos:start="101:29" pos:end="101:29">&amp;</operator> <literal type="number" pos:start="101:31" pos:end="101:31">3</literal><operator pos:start="101:32" pos:end="101:32">)</operator> <operator pos:start="101:34" pos:end="101:34">+</operator> <literal type="number" pos:start="101:36" pos:end="101:36">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="105:20"><if pos:start="103:9" pos:end="105:20">if <condition pos:start="103:12" pos:end="103:52">(<expr pos:start="103:13" pos:end="103:51"><operator pos:start="103:13" pos:end="103:13">(</operator><name pos:start="103:14" pos:end="103:24"><name pos:start="103:14" pos:end="103:14">s</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:24">bit_rate</name></name> <operator pos:start="103:26" pos:end="103:26">/</operator> <name pos:start="103:28" pos:end="103:41"><name pos:start="103:28" pos:end="103:28">s</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:41">nb_channels</name></name><operator pos:start="103:42" pos:end="103:42">)</operator> <operator pos:start="103:44" pos:end="103:45">&gt;=</operator> <literal type="number" pos:start="103:47" pos:end="103:51">32000</literal></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:20"><block_content pos:start="105:13" pos:end="105:20">

            <expr_stmt pos:start="105:13" pos:end="105:20"><expr pos:start="105:13" pos:end="105:19"><name pos:start="105:13" pos:end="105:14">nb</name> <operator pos:start="105:16" pos:end="105:17">+=</operator> <literal type="number" pos:start="105:19" pos:end="105:19">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:52"><expr pos:start="107:9" pos:end="107:51"><name pos:start="107:9" pos:end="107:14">nb_max</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <name pos:start="107:18" pos:end="107:34"><name pos:start="107:18" pos:end="107:18">s</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:34">frame_len_bits</name></name> <operator pos:start="107:36" pos:end="107:36">-</operator> <name pos:start="107:38" pos:end="107:51">BLOCK_MIN_BITS</name></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="111:24"><if pos:start="109:9" pos:end="111:24">if <condition pos:start="109:12" pos:end="109:24">(<expr pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:14">nb</name> <operator pos:start="109:16" pos:end="109:16">&gt;</operator> <name pos:start="109:18" pos:end="109:23">nb_max</name></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:24"><block_content pos:start="111:13" pos:end="111:24">

            <expr_stmt pos:start="111:13" pos:end="111:24"><expr pos:start="111:13" pos:end="111:23"><name pos:start="111:13" pos:end="111:14">nb</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <name pos:start="111:18" pos:end="111:23">nb_max</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:35"><expr pos:start="113:9" pos:end="113:34"><name pos:start="113:9" pos:end="113:25"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:25">nb_block_sizes</name></name> <operator pos:start="113:27" pos:end="113:27">=</operator> <name pos:start="113:29" pos:end="113:30">nb</name> <operator pos:start="113:32" pos:end="113:32">+</operator> <literal type="number" pos:start="113:34" pos:end="113:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="115:7" pos:end="119:5">else <block pos:start="115:12" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:30">

        <expr_stmt pos:start="117:9" pos:end="117:30"><expr pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:25">nb_block_sizes</name></name> <operator pos:start="117:27" pos:end="117:27">=</operator> <literal type="number" pos:start="117:29" pos:end="117:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:40">/* init rate dependant parameters */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:28"><expr pos:start="125:5" pos:end="125:27"><name pos:start="125:5" pos:end="125:23"><name pos:start="125:5" pos:end="125:5">s</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:23">use_noise_coding</name></name> <operator pos:start="125:25" pos:end="125:25">=</operator> <literal type="number" pos:start="125:27" pos:end="125:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:37"><expr pos:start="127:5" pos:end="127:36"><name pos:start="127:5" pos:end="127:13">high_freq</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <name pos:start="127:17" pos:end="127:30"><name pos:start="127:17" pos:end="127:17">s</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:30">sample_rate</name></name> <operator pos:start="127:32" pos:end="127:32">*</operator> <literal type="number" pos:start="127:34" pos:end="127:36">0.5</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="131:5" pos:end="131:53">/* if version 2, then the rates are normalized */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:34"><expr pos:start="133:5" pos:end="133:33"><name pos:start="133:5" pos:end="133:16">sample_rate1</name> <operator pos:start="133:18" pos:end="133:18">=</operator> <name pos:start="133:20" pos:end="133:33"><name pos:start="133:20" pos:end="133:20">s</name><operator pos:start="133:21" pos:end="133:22">-&gt;</operator><name pos:start="133:23" pos:end="133:33">sample_rate</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="157:5"><if pos:start="135:5" pos:end="157:5">if <condition pos:start="135:8" pos:end="135:24">(<expr pos:start="135:9" pos:end="135:23"><name pos:start="135:9" pos:end="135:18"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:18">version</name></name> <operator pos:start="135:20" pos:end="135:21">==</operator> <literal type="number" pos:start="135:23" pos:end="135:23">2</literal></expr>)</condition> <block pos:start="135:26" pos:end="157:5">{<block_content pos:start="137:9" pos:end="155:32">

        <if_stmt pos:start="137:9" pos:end="155:32"><if pos:start="137:9" pos:end="139:33">if <condition pos:start="137:12" pos:end="137:34">(<expr pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:24">sample_rate1</name> <operator pos:start="137:26" pos:end="137:27">&gt;=</operator> <literal type="number" pos:start="137:29" pos:end="137:33">44100</literal></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:33"><block_content pos:start="139:13" pos:end="139:33"> 

            <expr_stmt pos:start="139:13" pos:end="139:33"><expr pos:start="139:13" pos:end="139:32"><name pos:start="139:13" pos:end="139:24">sample_rate1</name> <operator pos:start="139:26" pos:end="139:26">=</operator> <literal type="number" pos:start="139:28" pos:end="139:32">44100</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="141:9" pos:end="143:33">else if <condition pos:start="141:17" pos:end="141:39">(<expr pos:start="141:18" pos:end="141:38"><name pos:start="141:18" pos:end="141:29">sample_rate1</name> <operator pos:start="141:31" pos:end="141:32">&gt;=</operator> <literal type="number" pos:start="141:34" pos:end="141:38">22050</literal></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:33"><block_content pos:start="143:13" pos:end="143:33"> 

            <expr_stmt pos:start="143:13" pos:end="143:33"><expr pos:start="143:13" pos:end="143:32"><name pos:start="143:13" pos:end="143:24">sample_rate1</name> <operator pos:start="143:26" pos:end="143:26">=</operator> <literal type="number" pos:start="143:28" pos:end="143:32">22050</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="145:9" pos:end="147:33">else if <condition pos:start="145:17" pos:end="145:39">(<expr pos:start="145:18" pos:end="145:38"><name pos:start="145:18" pos:end="145:29">sample_rate1</name> <operator pos:start="145:31" pos:end="145:32">&gt;=</operator> <literal type="number" pos:start="145:34" pos:end="145:38">16000</literal></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:33"><block_content pos:start="147:13" pos:end="147:33"> 

            <expr_stmt pos:start="147:13" pos:end="147:33"><expr pos:start="147:13" pos:end="147:32"><name pos:start="147:13" pos:end="147:24">sample_rate1</name> <operator pos:start="147:26" pos:end="147:26">=</operator> <literal type="number" pos:start="147:28" pos:end="147:32">16000</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="149:9" pos:end="151:33">else if <condition pos:start="149:17" pos:end="149:39">(<expr pos:start="149:18" pos:end="149:38"><name pos:start="149:18" pos:end="149:29">sample_rate1</name> <operator pos:start="149:31" pos:end="149:32">&gt;=</operator> <literal type="number" pos:start="149:34" pos:end="149:38">11025</literal></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:33"><block_content pos:start="151:13" pos:end="151:33"> 

            <expr_stmt pos:start="151:13" pos:end="151:33"><expr pos:start="151:13" pos:end="151:32"><name pos:start="151:13" pos:end="151:24">sample_rate1</name> <operator pos:start="151:26" pos:end="151:26">=</operator> <literal type="number" pos:start="151:28" pos:end="151:32">11025</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="153:9" pos:end="155:32">else if <condition pos:start="153:17" pos:end="153:38">(<expr pos:start="153:18" pos:end="153:37"><name pos:start="153:18" pos:end="153:29">sample_rate1</name> <operator pos:start="153:31" pos:end="153:32">&gt;=</operator> <literal type="number" pos:start="153:34" pos:end="153:37">8000</literal></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:32"><block_content pos:start="155:13" pos:end="155:32"> 

            <expr_stmt pos:start="155:13" pos:end="155:32"><expr pos:start="155:13" pos:end="155:31"><name pos:start="155:13" pos:end="155:24">sample_rate1</name> <operator pos:start="155:26" pos:end="155:26">=</operator> <literal type="number" pos:start="155:28" pos:end="155:31">8000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:72"><expr pos:start="161:5" pos:end="161:71"><name pos:start="161:5" pos:end="161:7">bps</name> <operator pos:start="161:9" pos:end="161:9">=</operator> <operator pos:start="161:11" pos:end="161:11">(</operator><name pos:start="161:12" pos:end="161:16">float</name><operator pos:start="161:17" pos:end="161:17">)</operator><name pos:start="161:18" pos:end="161:28"><name pos:start="161:18" pos:end="161:18">s</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:28">bit_rate</name></name> <operator pos:start="161:30" pos:end="161:30">/</operator> <operator pos:start="161:32" pos:end="161:32">(</operator><name pos:start="161:33" pos:end="161:37">float</name><operator pos:start="161:38" pos:end="161:38">)</operator><operator pos:start="161:39" pos:end="161:39">(</operator><name pos:start="161:40" pos:end="161:53"><name pos:start="161:40" pos:end="161:40">s</name><operator pos:start="161:41" pos:end="161:42">-&gt;</operator><name pos:start="161:43" pos:end="161:53">nb_channels</name></name> <operator pos:start="161:55" pos:end="161:55">*</operator> <name pos:start="161:57" pos:end="161:70"><name pos:start="161:57" pos:end="161:57">s</name><operator pos:start="161:58" pos:end="161:59">-&gt;</operator><name pos:start="161:60" pos:end="161:70">sample_rate</name></name><operator pos:start="161:71" pos:end="161:71">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:71"><expr pos:start="163:5" pos:end="163:70"><name pos:start="163:5" pos:end="163:23"><name pos:start="163:5" pos:end="163:5">s</name><operator pos:start="163:6" pos:end="163:7">-&gt;</operator><name pos:start="163:8" pos:end="163:23">byte_offset_bits</name></name> <operator pos:start="163:25" pos:end="163:25">=</operator> <call pos:start="163:27" pos:end="163:66"><name pos:start="163:27" pos:end="163:33">av_log2</name><argument_list pos:start="163:34" pos:end="163:66">(<argument pos:start="163:35" pos:end="163:65"><expr pos:start="163:35" pos:end="163:65"><operator pos:start="163:35" pos:end="163:35">(</operator><name pos:start="163:36" pos:end="163:38">int</name><operator pos:start="163:39" pos:end="163:39">)</operator><operator pos:start="163:40" pos:end="163:40">(</operator><name pos:start="163:41" pos:end="163:43">bps</name> <operator pos:start="163:45" pos:end="163:45">*</operator> <name pos:start="163:47" pos:end="163:58"><name pos:start="163:47" pos:end="163:47">s</name><operator pos:start="163:48" pos:end="163:49">-&gt;</operator><name pos:start="163:50" pos:end="163:58">frame_len</name></name> <operator pos:start="163:60" pos:end="163:60">/</operator> <literal type="number" pos:start="163:62" pos:end="163:64">8.0</literal><operator pos:start="163:65" pos:end="163:65">)</operator></expr></argument>)</argument_list></call> <operator pos:start="163:68" pos:end="163:68">+</operator> <literal type="number" pos:start="163:70" pos:end="163:70">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="167:5" pos:end="169:22">/* compute high frequency value and choose if noise coding should

       be activated */</comment>

    <expr_stmt pos:start="171:5" pos:end="171:15"><expr pos:start="171:5" pos:end="171:14"><name pos:start="171:5" pos:end="171:8">bps1</name> <operator pos:start="171:10" pos:end="171:10">=</operator> <name pos:start="171:12" pos:end="171:14">bps</name></expr>;</expr_stmt>

    <if_stmt pos:start="173:5" pos:end="175:25"><if pos:start="173:5" pos:end="175:25">if <condition pos:start="173:8" pos:end="173:28">(<expr pos:start="173:9" pos:end="173:27"><name pos:start="173:9" pos:end="173:22"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:22">nb_channels</name></name> <operator pos:start="173:24" pos:end="173:25">==</operator> <literal type="number" pos:start="173:27" pos:end="173:27">2</literal></expr>)</condition><block type="pseudo" pos:start="175:9" pos:end="175:25"><block_content pos:start="175:9" pos:end="175:25">

        <expr_stmt pos:start="175:9" pos:end="175:25"><expr pos:start="175:9" pos:end="175:24"><name pos:start="175:9" pos:end="175:12">bps1</name> <operator pos:start="175:14" pos:end="175:14">=</operator> <name pos:start="175:16" pos:end="175:18">bps</name> <operator pos:start="175:20" pos:end="175:20">*</operator> <literal type="number" pos:start="175:22" pos:end="175:24">1.6</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="177:5" pos:end="247:5"><if pos:start="177:5" pos:end="187:5">if <condition pos:start="177:8" pos:end="177:30">(<expr pos:start="177:9" pos:end="177:29"><name pos:start="177:9" pos:end="177:20">sample_rate1</name> <operator pos:start="177:22" pos:end="177:23">==</operator> <literal type="number" pos:start="177:25" pos:end="177:29">44100</literal></expr>)</condition> <block pos:start="177:32" pos:end="187:5">{<block_content pos:start="179:9" pos:end="185:40">

        <if_stmt pos:start="179:9" pos:end="185:40"><if pos:start="179:9" pos:end="181:36">if <condition pos:start="179:12" pos:end="179:25">(<expr pos:start="179:13" pos:end="179:24"><name pos:start="179:13" pos:end="179:16">bps1</name> <operator pos:start="179:18" pos:end="179:19">&gt;=</operator> <literal type="number" pos:start="179:21" pos:end="179:24">0.61</literal></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:36"><block_content pos:start="181:13" pos:end="181:36">

            <expr_stmt pos:start="181:13" pos:end="181:36"><expr pos:start="181:13" pos:end="181:35"><name pos:start="181:13" pos:end="181:31"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:31">use_noise_coding</name></name> <operator pos:start="181:33" pos:end="181:33">=</operator> <literal type="number" pos:start="181:35" pos:end="181:35">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="183:9" pos:end="185:40">else<block type="pseudo" pos:start="185:13" pos:end="185:40"><block_content pos:start="185:13" pos:end="185:40">

            <expr_stmt pos:start="185:13" pos:end="185:40"><expr pos:start="185:13" pos:end="185:39"><name pos:start="185:13" pos:end="185:21">high_freq</name> <operator pos:start="185:23" pos:end="185:23">=</operator> <name pos:start="185:25" pos:end="185:33">high_freq</name> <operator pos:start="185:35" pos:end="185:35">*</operator> <literal type="number" pos:start="185:37" pos:end="185:39">0.4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="187:7" pos:end="201:5">else if <condition pos:start="187:15" pos:end="187:37">(<expr pos:start="187:16" pos:end="187:36"><name pos:start="187:16" pos:end="187:27">sample_rate1</name> <operator pos:start="187:29" pos:end="187:30">==</operator> <literal type="number" pos:start="187:32" pos:end="187:36">22050</literal></expr>)</condition> <block pos:start="187:39" pos:end="201:5">{<block_content pos:start="189:9" pos:end="199:40">

        <if_stmt pos:start="189:9" pos:end="199:40"><if pos:start="189:9" pos:end="191:36">if <condition pos:start="189:12" pos:end="189:25">(<expr pos:start="189:13" pos:end="189:24"><name pos:start="189:13" pos:end="189:16">bps1</name> <operator pos:start="189:18" pos:end="189:19">&gt;=</operator> <literal type="number" pos:start="189:21" pos:end="189:24">1.16</literal></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:36"><block_content pos:start="191:13" pos:end="191:36">

            <expr_stmt pos:start="191:13" pos:end="191:36"><expr pos:start="191:13" pos:end="191:35"><name pos:start="191:13" pos:end="191:31"><name pos:start="191:13" pos:end="191:13">s</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:31">use_noise_coding</name></name> <operator pos:start="191:33" pos:end="191:33">=</operator> <literal type="number" pos:start="191:35" pos:end="191:35">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="193:9" pos:end="195:40">else if <condition pos:start="193:17" pos:end="193:30">(<expr pos:start="193:18" pos:end="193:29"><name pos:start="193:18" pos:end="193:21">bps1</name> <operator pos:start="193:23" pos:end="193:24">&gt;=</operator> <literal type="number" pos:start="193:26" pos:end="193:29">0.72</literal></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:40"><block_content pos:start="195:13" pos:end="195:40"> 

            <expr_stmt pos:start="195:13" pos:end="195:40"><expr pos:start="195:13" pos:end="195:39"><name pos:start="195:13" pos:end="195:21">high_freq</name> <operator pos:start="195:23" pos:end="195:23">=</operator> <name pos:start="195:25" pos:end="195:33">high_freq</name> <operator pos:start="195:35" pos:end="195:35">*</operator> <literal type="number" pos:start="195:37" pos:end="195:39">0.7</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="197:9" pos:end="199:40">else<block type="pseudo" pos:start="199:13" pos:end="199:40"><block_content pos:start="199:13" pos:end="199:40">

            <expr_stmt pos:start="199:13" pos:end="199:40"><expr pos:start="199:13" pos:end="199:39"><name pos:start="199:13" pos:end="199:21">high_freq</name> <operator pos:start="199:23" pos:end="199:23">=</operator> <name pos:start="199:25" pos:end="199:33">high_freq</name> <operator pos:start="199:35" pos:end="199:35">*</operator> <literal type="number" pos:start="199:37" pos:end="199:39">0.6</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="201:7" pos:end="211:5">else if <condition pos:start="201:15" pos:end="201:37">(<expr pos:start="201:16" pos:end="201:36"><name pos:start="201:16" pos:end="201:27">sample_rate1</name> <operator pos:start="201:29" pos:end="201:30">==</operator> <literal type="number" pos:start="201:32" pos:end="201:36">16000</literal></expr>)</condition> <block pos:start="201:39" pos:end="211:5">{<block_content pos:start="203:9" pos:end="209:40">

        <if_stmt pos:start="203:9" pos:end="209:40"><if pos:start="203:9" pos:end="205:40">if <condition pos:start="203:12" pos:end="203:22">(<expr pos:start="203:13" pos:end="203:21"><name pos:start="203:13" pos:end="203:15">bps</name> <operator pos:start="203:17" pos:end="203:17">&gt;</operator> <literal type="number" pos:start="203:19" pos:end="203:21">0.5</literal></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:40"><block_content pos:start="205:13" pos:end="205:40">

            <expr_stmt pos:start="205:13" pos:end="205:40"><expr pos:start="205:13" pos:end="205:39"><name pos:start="205:13" pos:end="205:21">high_freq</name> <operator pos:start="205:23" pos:end="205:23">=</operator> <name pos:start="205:25" pos:end="205:33">high_freq</name> <operator pos:start="205:35" pos:end="205:35">*</operator> <literal type="number" pos:start="205:37" pos:end="205:39">0.5</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="207:9" pos:end="209:40">else<block type="pseudo" pos:start="209:13" pos:end="209:40"><block_content pos:start="209:13" pos:end="209:40">

            <expr_stmt pos:start="209:13" pos:end="209:40"><expr pos:start="209:13" pos:end="209:39"><name pos:start="209:13" pos:end="209:21">high_freq</name> <operator pos:start="209:23" pos:end="209:23">=</operator> <name pos:start="209:25" pos:end="209:33">high_freq</name> <operator pos:start="209:35" pos:end="209:35">*</operator> <literal type="number" pos:start="209:37" pos:end="209:39">0.3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="211:7" pos:end="215:5">else if <condition pos:start="211:15" pos:end="211:37">(<expr pos:start="211:16" pos:end="211:36"><name pos:start="211:16" pos:end="211:27">sample_rate1</name> <operator pos:start="211:29" pos:end="211:30">==</operator> <literal type="number" pos:start="211:32" pos:end="211:36">11025</literal></expr>)</condition> <block pos:start="211:39" pos:end="215:5">{<block_content pos:start="213:9" pos:end="213:36">

        <expr_stmt pos:start="213:9" pos:end="213:36"><expr pos:start="213:9" pos:end="213:35"><name pos:start="213:9" pos:end="213:17">high_freq</name> <operator pos:start="213:19" pos:end="213:19">=</operator> <name pos:start="213:21" pos:end="213:29">high_freq</name> <operator pos:start="213:31" pos:end="213:31">*</operator> <literal type="number" pos:start="213:33" pos:end="213:35">0.7</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="215:7" pos:end="231:5">else if <condition pos:start="215:15" pos:end="215:36">(<expr pos:start="215:16" pos:end="215:35"><name pos:start="215:16" pos:end="215:27">sample_rate1</name> <operator pos:start="215:29" pos:end="215:30">==</operator> <literal type="number" pos:start="215:32" pos:end="215:35">8000</literal></expr>)</condition> <block pos:start="215:38" pos:end="231:5">{<block_content pos:start="217:9" pos:end="229:9">

        <if_stmt pos:start="217:9" pos:end="229:9"><if pos:start="217:9" pos:end="221:9">if <condition pos:start="217:12" pos:end="217:25">(<expr pos:start="217:13" pos:end="217:24"><name pos:start="217:13" pos:end="217:15">bps</name> <operator pos:start="217:17" pos:end="217:18">&lt;=</operator> <literal type="number" pos:start="217:20" pos:end="217:24">0.625</literal></expr>)</condition> <block pos:start="217:27" pos:end="221:9">{<block_content pos:start="219:13" pos:end="219:40">

            <expr_stmt pos:start="219:13" pos:end="219:40"><expr pos:start="219:13" pos:end="219:39"><name pos:start="219:13" pos:end="219:21">high_freq</name> <operator pos:start="219:23" pos:end="219:23">=</operator> <name pos:start="219:25" pos:end="219:33">high_freq</name> <operator pos:start="219:35" pos:end="219:35">*</operator> <literal type="number" pos:start="219:37" pos:end="219:39">0.5</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="221:11" pos:end="225:9">else if <condition pos:start="221:19" pos:end="221:30">(<expr pos:start="221:20" pos:end="221:29"><name pos:start="221:20" pos:end="221:22">bps</name> <operator pos:start="221:24" pos:end="221:24">&gt;</operator> <literal type="number" pos:start="221:26" pos:end="221:29">0.75</literal></expr>)</condition> <block pos:start="221:32" pos:end="225:9">{<block_content pos:start="223:13" pos:end="223:36">

            <expr_stmt pos:start="223:13" pos:end="223:36"><expr pos:start="223:13" pos:end="223:35"><name pos:start="223:13" pos:end="223:31"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:31">use_noise_coding</name></name> <operator pos:start="223:33" pos:end="223:33">=</operator> <literal type="number" pos:start="223:35" pos:end="223:35">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="225:11" pos:end="229:9">else <block pos:start="225:16" pos:end="229:9">{<block_content pos:start="227:13" pos:end="227:41">

            <expr_stmt pos:start="227:13" pos:end="227:41"><expr pos:start="227:13" pos:end="227:40"><name pos:start="227:13" pos:end="227:21">high_freq</name> <operator pos:start="227:23" pos:end="227:23">=</operator> <name pos:start="227:25" pos:end="227:33">high_freq</name> <operator pos:start="227:35" pos:end="227:35">*</operator> <literal type="number" pos:start="227:37" pos:end="227:40">0.65</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="231:7" pos:end="247:5">else <block pos:start="231:12" pos:end="247:5">{<block_content pos:start="233:9" pos:end="245:9">

        <if_stmt pos:start="233:9" pos:end="245:9"><if pos:start="233:9" pos:end="237:9">if <condition pos:start="233:12" pos:end="233:23">(<expr pos:start="233:13" pos:end="233:22"><name pos:start="233:13" pos:end="233:15">bps</name> <operator pos:start="233:17" pos:end="233:18">&gt;=</operator> <literal type="number" pos:start="233:20" pos:end="233:22">0.8</literal></expr>)</condition> <block pos:start="233:25" pos:end="237:9">{<block_content pos:start="235:13" pos:end="235:41">

            <expr_stmt pos:start="235:13" pos:end="235:41"><expr pos:start="235:13" pos:end="235:40"><name pos:start="235:13" pos:end="235:21">high_freq</name> <operator pos:start="235:23" pos:end="235:23">=</operator> <name pos:start="235:25" pos:end="235:33">high_freq</name> <operator pos:start="235:35" pos:end="235:35">*</operator> <literal type="number" pos:start="235:37" pos:end="235:40">0.75</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="237:11" pos:end="241:9">else if <condition pos:start="237:19" pos:end="237:30">(<expr pos:start="237:20" pos:end="237:29"><name pos:start="237:20" pos:end="237:22">bps</name> <operator pos:start="237:24" pos:end="237:25">&gt;=</operator> <literal type="number" pos:start="237:27" pos:end="237:29">0.6</literal></expr>)</condition> <block pos:start="237:32" pos:end="241:9">{<block_content pos:start="239:13" pos:end="239:40">

            <expr_stmt pos:start="239:13" pos:end="239:40"><expr pos:start="239:13" pos:end="239:39"><name pos:start="239:13" pos:end="239:21">high_freq</name> <operator pos:start="239:23" pos:end="239:23">=</operator> <name pos:start="239:25" pos:end="239:33">high_freq</name> <operator pos:start="239:35" pos:end="239:35">*</operator> <literal type="number" pos:start="239:37" pos:end="239:39">0.6</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="241:11" pos:end="245:9">else <block pos:start="241:16" pos:end="245:9">{<block_content pos:start="243:13" pos:end="243:40">

            <expr_stmt pos:start="243:13" pos:end="243:40"><expr pos:start="243:13" pos:end="243:39"><name pos:start="243:13" pos:end="243:21">high_freq</name> <operator pos:start="243:23" pos:end="243:23">=</operator> <name pos:start="243:25" pos:end="243:33">high_freq</name> <operator pos:start="243:35" pos:end="243:35">*</operator> <literal type="number" pos:start="243:37" pos:end="243:39">0.5</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:57"><expr pos:start="249:5" pos:end="249:56"><call pos:start="249:5" pos:end="249:56"><name pos:start="249:5" pos:end="249:11">dprintf</name><argument_list pos:start="249:12" pos:end="249:56">(<argument pos:start="249:13" pos:end="249:39"><expr pos:start="249:13" pos:end="249:39"><literal type="string" pos:start="249:13" pos:end="249:39">"flags1=0x%x flags2=0x%x\n"</literal></expr></argument>, <argument pos:start="249:42" pos:end="249:47"><expr pos:start="249:42" pos:end="249:47"><name pos:start="249:42" pos:end="249:47">flags1</name></expr></argument>, <argument pos:start="249:50" pos:end="249:55"><expr pos:start="249:50" pos:end="249:55"><name pos:start="249:50" pos:end="249:55">flags2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="255:27"><expr pos:start="251:5" pos:end="255:26"><call pos:start="251:5" pos:end="255:26"><name pos:start="251:5" pos:end="251:11">dprintf</name><argument_list pos:start="251:12" pos:end="255:26">(<argument pos:start="251:13" pos:end="251:79"><expr pos:start="251:13" pos:end="251:79"><literal type="string" pos:start="251:13" pos:end="251:79">"version=%d channels=%d sample_rate=%d bitrate=%d block_align=%d\n"</literal></expr></argument>,

           <argument pos:start="253:12" pos:end="253:21"><expr pos:start="253:12" pos:end="253:21"><name pos:start="253:12" pos:end="253:21"><name pos:start="253:12" pos:end="253:12">s</name><operator pos:start="253:13" pos:end="253:14">-&gt;</operator><name pos:start="253:15" pos:end="253:21">version</name></name></expr></argument>, <argument pos:start="253:24" pos:end="253:37"><expr pos:start="253:24" pos:end="253:37"><name pos:start="253:24" pos:end="253:37"><name pos:start="253:24" pos:end="253:24">s</name><operator pos:start="253:25" pos:end="253:26">-&gt;</operator><name pos:start="253:27" pos:end="253:37">nb_channels</name></name></expr></argument>, <argument pos:start="253:40" pos:end="253:53"><expr pos:start="253:40" pos:end="253:53"><name pos:start="253:40" pos:end="253:53"><name pos:start="253:40" pos:end="253:40">s</name><operator pos:start="253:41" pos:end="253:42">-&gt;</operator><name pos:start="253:43" pos:end="253:53">sample_rate</name></name></expr></argument>, <argument pos:start="253:56" pos:end="253:66"><expr pos:start="253:56" pos:end="253:66"><name pos:start="253:56" pos:end="253:66"><name pos:start="253:56" pos:end="253:56">s</name><operator pos:start="253:57" pos:end="253:58">-&gt;</operator><name pos:start="253:59" pos:end="253:66">bit_rate</name></name></expr></argument>, 

           <argument pos:start="255:12" pos:end="255:25"><expr pos:start="255:12" pos:end="255:25"><name pos:start="255:12" pos:end="255:25"><name pos:start="255:12" pos:end="255:12">s</name><operator pos:start="255:13" pos:end="255:14">-&gt;</operator><name pos:start="255:15" pos:end="255:25">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="259:54"><expr pos:start="257:5" pos:end="259:53"><call pos:start="257:5" pos:end="259:53"><name pos:start="257:5" pos:end="257:11">dprintf</name><argument_list pos:start="257:12" pos:end="259:53">(<argument pos:start="257:13" pos:end="257:56"><expr pos:start="257:13" pos:end="257:56"><literal type="string" pos:start="257:13" pos:end="257:56">"bps=%f bps1=%f high_freq=%f bitoffset=%d\n"</literal></expr></argument>, 

           <argument pos:start="259:12" pos:end="259:14"><expr pos:start="259:12" pos:end="259:14"><name pos:start="259:12" pos:end="259:14">bps</name></expr></argument>, <argument pos:start="259:17" pos:end="259:20"><expr pos:start="259:17" pos:end="259:20"><name pos:start="259:17" pos:end="259:20">bps1</name></expr></argument>, <argument pos:start="259:23" pos:end="259:31"><expr pos:start="259:23" pos:end="259:31"><name pos:start="259:23" pos:end="259:31">high_freq</name></expr></argument>, <argument pos:start="259:34" pos:end="259:52"><expr pos:start="259:34" pos:end="259:52"><name pos:start="259:34" pos:end="259:52"><name pos:start="259:34" pos:end="259:34">s</name><operator pos:start="259:35" pos:end="259:36">-&gt;</operator><name pos:start="259:37" pos:end="259:52">byte_offset_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="263:67"><expr pos:start="261:5" pos:end="263:66"><call pos:start="261:5" pos:end="263:66"><name pos:start="261:5" pos:end="261:11">dprintf</name><argument_list pos:start="261:12" pos:end="263:66">(<argument pos:start="261:13" pos:end="261:68"><expr pos:start="261:13" pos:end="261:68"><literal type="string" pos:start="261:13" pos:end="261:68">"use_noise_coding=%d use_exp_vlc=%d nb_block_sizes=%d\n"</literal></expr></argument>,

           <argument pos:start="263:12" pos:end="263:30"><expr pos:start="263:12" pos:end="263:30"><name pos:start="263:12" pos:end="263:30"><name pos:start="263:12" pos:end="263:12">s</name><operator pos:start="263:13" pos:end="263:14">-&gt;</operator><name pos:start="263:15" pos:end="263:30">use_noise_coding</name></name></expr></argument>, <argument pos:start="263:33" pos:end="263:46"><expr pos:start="263:33" pos:end="263:46"><name pos:start="263:33" pos:end="263:46"><name pos:start="263:33" pos:end="263:33">s</name><operator pos:start="263:34" pos:end="263:35">-&gt;</operator><name pos:start="263:36" pos:end="263:46">use_exp_vlc</name></name></expr></argument>, <argument pos:start="263:49" pos:end="263:65"><expr pos:start="263:49" pos:end="263:65"><name pos:start="263:49" pos:end="263:65"><name pos:start="263:49" pos:end="263:49">s</name><operator pos:start="263:50" pos:end="263:51">-&gt;</operator><name pos:start="263:52" pos:end="263:65">nb_block_sizes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="267:5" pos:end="267:70">/* compute the scale factor band sizes for each MDCT block size */</comment>

    <block pos:start="269:5" pos:end="468:0">{<block_content pos:start="271:9" pos:end="461:9">

        <decl_stmt pos:start="271:9" pos:end="271:51"><decl pos:start="271:9" pos:end="271:13"><type pos:start="271:9" pos:end="271:11"><name pos:start="271:9" pos:end="271:11">int</name></type> <name pos:start="271:13" pos:end="271:13">a</name></decl>, <decl pos:start="271:16" pos:end="271:16"><type ref="prev" pos:start="271:9" pos:end="271:11"/><name pos:start="271:16" pos:end="271:16">b</name></decl>, <decl pos:start="271:19" pos:end="271:21"><type ref="prev" pos:start="271:9" pos:end="271:11"/><name pos:start="271:19" pos:end="271:21">pos</name></decl>, <decl pos:start="271:24" pos:end="271:27"><type ref="prev" pos:start="271:9" pos:end="271:11"/><name pos:start="271:24" pos:end="271:27">lpos</name></decl>, <decl pos:start="271:30" pos:end="271:30"><type ref="prev" pos:start="271:9" pos:end="271:11"/><name pos:start="271:30" pos:end="271:30">k</name></decl>, <decl pos:start="271:33" pos:end="271:41"><type ref="prev" pos:start="271:9" pos:end="271:11"/><name pos:start="271:33" pos:end="271:41">block_len</name></decl>, <decl pos:start="271:44" pos:end="271:44"><type ref="prev" pos:start="271:9" pos:end="271:11"/><name pos:start="271:44" pos:end="271:44">i</name></decl>, <decl pos:start="271:47" pos:end="271:47"><type ref="prev" pos:start="271:9" pos:end="271:11"/><name pos:start="271:47" pos:end="271:47">j</name></decl>, <decl pos:start="271:50" pos:end="271:50"><type ref="prev" pos:start="271:9" pos:end="271:11"/><name pos:start="271:50" pos:end="271:50">n</name></decl>;</decl_stmt>

        <decl_stmt pos:start="273:9" pos:end="273:29"><decl pos:start="273:9" pos:end="273:28"><type pos:start="273:9" pos:end="273:23"><specifier pos:start="273:9" pos:end="273:13">const</specifier> <name pos:start="273:15" pos:end="273:21">uint8_t</name> <modifier pos:start="273:23" pos:end="273:23">*</modifier></type><name pos:start="273:24" pos:end="273:28">table</name></decl>;</decl_stmt>

        

        <if_stmt pos:start="277:9" pos:end="285:9"><if pos:start="277:9" pos:end="281:9">if <condition pos:start="277:12" pos:end="277:28">(<expr pos:start="277:13" pos:end="277:27"><name pos:start="277:13" pos:end="277:22"><name pos:start="277:13" pos:end="277:13">s</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:22">version</name></name> <operator pos:start="277:24" pos:end="277:25">==</operator> <literal type="number" pos:start="277:27" pos:end="277:27">1</literal></expr>)</condition> <block pos:start="277:30" pos:end="281:9">{<block_content pos:start="279:13" pos:end="279:31">

            <expr_stmt pos:start="279:13" pos:end="279:31"><expr pos:start="279:13" pos:end="279:30"><name pos:start="279:13" pos:end="279:26"><name pos:start="279:13" pos:end="279:13">s</name><operator pos:start="279:14" pos:end="279:15">-&gt;</operator><name pos:start="279:16" pos:end="279:26">coefs_start</name></name> <operator pos:start="279:28" pos:end="279:28">=</operator> <literal type="number" pos:start="279:30" pos:end="279:30">3</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="281:11" pos:end="285:9">else <block pos:start="281:16" pos:end="285:9">{<block_content pos:start="283:13" pos:end="283:31">

            <expr_stmt pos:start="283:13" pos:end="283:31"><expr pos:start="283:13" pos:end="283:30"><name pos:start="283:13" pos:end="283:26"><name pos:start="283:13" pos:end="283:13">s</name><operator pos:start="283:14" pos:end="283:15">-&gt;</operator><name pos:start="283:16" pos:end="283:26">coefs_start</name></name> <operator pos:start="283:28" pos:end="283:28">=</operator> <literal type="number" pos:start="283:30" pos:end="283:30">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <for pos:start="287:9" pos:end="461:9">for<control pos:start="287:12" pos:end="287:46">(<init pos:start="287:13" pos:end="287:18"><expr pos:start="287:13" pos:end="287:17"><name pos:start="287:13" pos:end="287:13">k</name> <operator pos:start="287:15" pos:end="287:15">=</operator> <literal type="number" pos:start="287:17" pos:end="287:17">0</literal></expr>;</init> <condition pos:start="287:20" pos:end="287:41"><expr pos:start="287:20" pos:end="287:40"><name pos:start="287:20" pos:end="287:20">k</name> <operator pos:start="287:22" pos:end="287:22">&lt;</operator> <name pos:start="287:24" pos:end="287:40"><name pos:start="287:24" pos:end="287:24">s</name><operator pos:start="287:25" pos:end="287:26">-&gt;</operator><name pos:start="287:27" pos:end="287:40">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="287:43" pos:end="287:45"><expr pos:start="287:43" pos:end="287:45"><name pos:start="287:43" pos:end="287:43">k</name><operator pos:start="287:44" pos:end="287:45">++</operator></expr></incr>)</control> <block pos:start="287:48" pos:end="461:9">{<block_content pos:start="289:13" pos:end="460:0">

            <expr_stmt pos:start="289:13" pos:end="289:42"><expr pos:start="289:13" pos:end="289:41"><name pos:start="289:13" pos:end="289:21">block_len</name> <operator pos:start="289:23" pos:end="289:23">=</operator> <name pos:start="289:25" pos:end="289:36"><name pos:start="289:25" pos:end="289:25">s</name><operator pos:start="289:26" pos:end="289:27">-&gt;</operator><name pos:start="289:28" pos:end="289:36">frame_len</name></name> <operator pos:start="289:38" pos:end="289:39">&gt;&gt;</operator> <name pos:start="289:41" pos:end="289:41">k</name></expr>;</expr_stmt>



            <if_stmt pos:start="293:13" pos:end="395:13"><if pos:start="293:13" pos:end="325:13">if <condition pos:start="293:16" pos:end="293:32">(<expr pos:start="293:17" pos:end="293:31"><name pos:start="293:17" pos:end="293:26"><name pos:start="293:17" pos:end="293:17">s</name><operator pos:start="293:18" pos:end="293:19">-&gt;</operator><name pos:start="293:20" pos:end="293:26">version</name></name> <operator pos:start="293:28" pos:end="293:29">==</operator> <literal type="number" pos:start="293:31" pos:end="293:31">1</literal></expr>)</condition> <block pos:start="293:34" pos:end="325:13">{<block_content pos:start="295:17" pos:end="323:41">

                <expr_stmt pos:start="295:17" pos:end="295:25"><expr pos:start="295:17" pos:end="295:24"><name pos:start="295:17" pos:end="295:20">lpos</name> <operator pos:start="295:22" pos:end="295:22">=</operator> <literal type="number" pos:start="295:24" pos:end="295:24">0</literal></expr>;</expr_stmt>

                <for pos:start="297:17" pos:end="321:17">for<control pos:start="297:20" pos:end="297:33">(<init pos:start="297:21" pos:end="297:24"><expr pos:start="297:21" pos:end="297:23"><name pos:start="297:21" pos:end="297:21">i</name><operator pos:start="297:22" pos:end="297:22">=</operator><literal type="number" pos:start="297:23" pos:end="297:23">0</literal></expr>;</init><condition pos:start="297:25" pos:end="297:29"><expr pos:start="297:25" pos:end="297:28"><name pos:start="297:25" pos:end="297:25">i</name><operator pos:start="297:26" pos:end="297:26">&lt;</operator><literal type="number" pos:start="297:27" pos:end="297:28">25</literal></expr>;</condition><incr pos:start="297:30" pos:end="297:32"><expr pos:start="297:30" pos:end="297:32"><name pos:start="297:30" pos:end="297:30">i</name><operator pos:start="297:31" pos:end="297:32">++</operator></expr></incr>)</control> <block pos:start="297:35" pos:end="321:17">{<block_content pos:start="299:21" pos:end="319:31">

                    <expr_stmt pos:start="299:21" pos:end="299:46"><expr pos:start="299:21" pos:end="299:45"><name pos:start="299:21" pos:end="299:21">a</name> <operator pos:start="299:23" pos:end="299:23">=</operator> <name pos:start="299:25" pos:end="299:45"><name pos:start="299:25" pos:end="299:42">wma_critical_freqs</name><index pos:start="299:43" pos:end="299:45">[<expr pos:start="299:44" pos:end="299:44"><name pos:start="299:44" pos:end="299:44">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="301:21" pos:end="301:39"><expr pos:start="301:21" pos:end="301:38"><name pos:start="301:21" pos:end="301:21">b</name> <operator pos:start="301:23" pos:end="301:23">=</operator> <name pos:start="301:25" pos:end="301:38"><name pos:start="301:25" pos:end="301:25">s</name><operator pos:start="301:26" pos:end="301:27">-&gt;</operator><name pos:start="301:28" pos:end="301:38">sample_rate</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="303:21" pos:end="303:64"><expr pos:start="303:21" pos:end="303:63"><name pos:start="303:21" pos:end="303:23">pos</name> <operator pos:start="303:25" pos:end="303:25">=</operator> <operator pos:start="303:27" pos:end="303:27">(</operator><operator pos:start="303:28" pos:end="303:28">(</operator><name pos:start="303:29" pos:end="303:37">block_len</name> <operator pos:start="303:39" pos:end="303:39">*</operator> <literal type="number" pos:start="303:41" pos:end="303:41">2</literal> <operator pos:start="303:43" pos:end="303:43">*</operator> <name pos:start="303:45" pos:end="303:45">a</name><operator pos:start="303:46" pos:end="303:46">)</operator>  <operator pos:start="303:49" pos:end="303:49">+</operator> <operator pos:start="303:51" pos:end="303:51">(</operator><name pos:start="303:52" pos:end="303:52">b</name> <operator pos:start="303:54" pos:end="303:55">&gt;&gt;</operator> <literal type="number" pos:start="303:57" pos:end="303:57">1</literal><operator pos:start="303:58" pos:end="303:58">)</operator><operator pos:start="303:59" pos:end="303:59">)</operator> <operator pos:start="303:61" pos:end="303:61">/</operator> <name pos:start="303:63" pos:end="303:63">b</name></expr>;</expr_stmt>

                    <if_stmt pos:start="305:21" pos:end="307:40"><if pos:start="305:21" pos:end="307:40">if <condition pos:start="305:24" pos:end="305:40">(<expr pos:start="305:25" pos:end="305:39"><name pos:start="305:25" pos:end="305:27">pos</name> <operator pos:start="305:29" pos:end="305:29">&gt;</operator> <name pos:start="305:31" pos:end="305:39">block_len</name></expr>)</condition><block type="pseudo" pos:start="307:25" pos:end="307:40"><block_content pos:start="307:25" pos:end="307:40"> 

                        <expr_stmt pos:start="307:25" pos:end="307:40"><expr pos:start="307:25" pos:end="307:39"><name pos:start="307:25" pos:end="307:27">pos</name> <operator pos:start="307:29" pos:end="307:29">=</operator> <name pos:start="307:31" pos:end="307:39">block_len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="309:21" pos:end="309:57"><expr pos:start="309:21" pos:end="309:56"><name pos:start="309:21" pos:end="309:43"><name pos:start="309:21" pos:end="309:21">s</name><operator pos:start="309:22" pos:end="309:23">-&gt;</operator><name pos:start="309:24" pos:end="309:37">exponent_bands</name><index pos:start="309:38" pos:end="309:40">[<expr pos:start="309:39" pos:end="309:39"><literal type="number" pos:start="309:39" pos:end="309:39">0</literal></expr>]</index><index pos:start="309:41" pos:end="309:43">[<expr pos:start="309:42" pos:end="309:42"><name pos:start="309:42" pos:end="309:42">i</name></expr>]</index></name> <operator pos:start="309:45" pos:end="309:45">=</operator> <name pos:start="309:47" pos:end="309:49">pos</name> <operator pos:start="309:51" pos:end="309:51">-</operator> <name pos:start="309:53" pos:end="309:56">lpos</name></expr>;</expr_stmt>

                    <if_stmt pos:start="311:21" pos:end="317:21"><if pos:start="311:21" pos:end="317:21">if <condition pos:start="311:24" pos:end="311:41">(<expr pos:start="311:25" pos:end="311:40"><name pos:start="311:25" pos:end="311:27">pos</name> <operator pos:start="311:29" pos:end="311:30">&gt;=</operator> <name pos:start="311:32" pos:end="311:40">block_len</name></expr>)</condition> <block pos:start="311:43" pos:end="317:21">{<block_content pos:start="313:25" pos:end="315:30">

                        <expr_stmt pos:start="313:25" pos:end="313:28"><expr pos:start="313:25" pos:end="313:27"><name pos:start="313:25" pos:end="313:25">i</name><operator pos:start="313:26" pos:end="313:27">++</operator></expr>;</expr_stmt>

                        <break pos:start="315:25" pos:end="315:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="319:21" pos:end="319:31"><expr pos:start="319:21" pos:end="319:30"><name pos:start="319:21" pos:end="319:24">lpos</name> <operator pos:start="319:26" pos:end="319:26">=</operator> <name pos:start="319:28" pos:end="319:30">pos</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="323:17" pos:end="323:41"><expr pos:start="323:17" pos:end="323:40"><name pos:start="323:17" pos:end="323:36"><name pos:start="323:17" pos:end="323:17">s</name><operator pos:start="323:18" pos:end="323:19">-&gt;</operator><name pos:start="323:20" pos:end="323:33">exponent_sizes</name><index pos:start="323:34" pos:end="323:36">[<expr pos:start="323:35" pos:end="323:35"><literal type="number" pos:start="323:35" pos:end="323:35">0</literal></expr>]</index></name> <operator pos:start="323:38" pos:end="323:38">=</operator> <name pos:start="323:40" pos:end="323:40">i</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="325:15" pos:end="395:13">else <block pos:start="325:20" pos:end="395:13">{<block_content pos:start="329:17" pos:end="393:17">

                <comment type="block" pos:start="327:17" pos:end="327:38">/* hardcoded tables */</comment>

                <expr_stmt pos:start="329:17" pos:end="329:29"><expr pos:start="329:17" pos:end="329:28"><name pos:start="329:17" pos:end="329:21">table</name> <operator pos:start="329:23" pos:end="329:23">=</operator> <name pos:start="329:25" pos:end="329:28">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="331:17" pos:end="331:59"><expr pos:start="331:17" pos:end="331:58"><name pos:start="331:17" pos:end="331:17">a</name> <operator pos:start="331:19" pos:end="331:19">=</operator> <name pos:start="331:21" pos:end="331:37"><name pos:start="331:21" pos:end="331:21">s</name><operator pos:start="331:22" pos:end="331:23">-&gt;</operator><name pos:start="331:24" pos:end="331:37">frame_len_bits</name></name> <operator pos:start="331:39" pos:end="331:39">-</operator> <name pos:start="331:41" pos:end="331:54">BLOCK_MIN_BITS</name> <operator pos:start="331:56" pos:end="331:56">-</operator> <name pos:start="331:58" pos:end="331:58">k</name></expr>;</expr_stmt>

                <if_stmt pos:start="333:17" pos:end="347:17"><if pos:start="333:17" pos:end="347:17">if <condition pos:start="333:20" pos:end="333:26">(<expr pos:start="333:21" pos:end="333:25"><name pos:start="333:21" pos:end="333:21">a</name> <operator pos:start="333:23" pos:end="333:23">&lt;</operator> <literal type="number" pos:start="333:25" pos:end="333:25">3</literal></expr>)</condition> <block pos:start="333:28" pos:end="347:17">{<block_content pos:start="335:21" pos:end="345:55">

                    <if_stmt pos:start="335:21" pos:end="345:55"><if pos:start="335:21" pos:end="337:55">if <condition pos:start="335:24" pos:end="335:48">(<expr pos:start="335:25" pos:end="335:47"><name pos:start="335:25" pos:end="335:38"><name pos:start="335:25" pos:end="335:25">s</name><operator pos:start="335:26" pos:end="335:27">-&gt;</operator><name pos:start="335:28" pos:end="335:38">sample_rate</name></name> <operator pos:start="335:40" pos:end="335:41">&gt;=</operator> <literal type="number" pos:start="335:43" pos:end="335:47">44100</literal></expr>)</condition><block type="pseudo" pos:start="337:25" pos:end="337:55"><block_content pos:start="337:25" pos:end="337:55">

                        <expr_stmt pos:start="337:25" pos:end="337:55"><expr pos:start="337:25" pos:end="337:54"><name pos:start="337:25" pos:end="337:29">table</name> <operator pos:start="337:31" pos:end="337:31">=</operator> <name pos:start="337:33" pos:end="337:54"><name pos:start="337:33" pos:end="337:51">exponent_band_44100</name><index pos:start="337:52" pos:end="337:54">[<expr pos:start="337:53" pos:end="337:53"><name pos:start="337:53" pos:end="337:53">a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="339:21" pos:end="341:55">else if <condition pos:start="339:29" pos:end="339:53">(<expr pos:start="339:30" pos:end="339:52"><name pos:start="339:30" pos:end="339:43"><name pos:start="339:30" pos:end="339:30">s</name><operator pos:start="339:31" pos:end="339:32">-&gt;</operator><name pos:start="339:33" pos:end="339:43">sample_rate</name></name> <operator pos:start="339:45" pos:end="339:46">&gt;=</operator> <literal type="number" pos:start="339:48" pos:end="339:52">32000</literal></expr>)</condition><block type="pseudo" pos:start="341:25" pos:end="341:55"><block_content pos:start="341:25" pos:end="341:55">

                        <expr_stmt pos:start="341:25" pos:end="341:55"><expr pos:start="341:25" pos:end="341:54"><name pos:start="341:25" pos:end="341:29">table</name> <operator pos:start="341:31" pos:end="341:31">=</operator> <name pos:start="341:33" pos:end="341:54"><name pos:start="341:33" pos:end="341:51">exponent_band_32000</name><index pos:start="341:52" pos:end="341:54">[<expr pos:start="341:53" pos:end="341:53"><name pos:start="341:53" pos:end="341:53">a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="343:21" pos:end="345:55">else if <condition pos:start="343:29" pos:end="343:53">(<expr pos:start="343:30" pos:end="343:52"><name pos:start="343:30" pos:end="343:43"><name pos:start="343:30" pos:end="343:30">s</name><operator pos:start="343:31" pos:end="343:32">-&gt;</operator><name pos:start="343:33" pos:end="343:43">sample_rate</name></name> <operator pos:start="343:45" pos:end="343:46">&gt;=</operator> <literal type="number" pos:start="343:48" pos:end="343:52">22050</literal></expr>)</condition><block type="pseudo" pos:start="345:25" pos:end="345:55"><block_content pos:start="345:25" pos:end="345:55">

                        <expr_stmt pos:start="345:25" pos:end="345:55"><expr pos:start="345:25" pos:end="345:54"><name pos:start="345:25" pos:end="345:29">table</name> <operator pos:start="345:31" pos:end="345:31">=</operator> <name pos:start="345:33" pos:end="345:54"><name pos:start="345:33" pos:end="345:51">exponent_band_22050</name><index pos:start="345:52" pos:end="345:54">[<expr pos:start="345:53" pos:end="345:53"><name pos:start="345:53" pos:end="345:53">a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="349:17" pos:end="393:17"><if pos:start="349:17" pos:end="359:17">if <condition pos:start="349:20" pos:end="349:26">(<expr pos:start="349:21" pos:end="349:25"><name pos:start="349:21" pos:end="349:25">table</name></expr>)</condition> <block pos:start="349:28" pos:end="359:17">{<block_content pos:start="351:21" pos:end="357:45">

                    <expr_stmt pos:start="351:21" pos:end="351:33"><expr pos:start="351:21" pos:end="351:32"><name pos:start="351:21" pos:end="351:21">n</name> <operator pos:start="351:23" pos:end="351:23">=</operator> <operator pos:start="351:25" pos:end="351:25">*</operator><name pos:start="351:26" pos:end="351:30">table</name><operator pos:start="351:31" pos:end="351:32">++</operator></expr>;</expr_stmt>

                    <for pos:start="353:21" pos:end="355:59">for<control pos:start="353:24" pos:end="353:36">(<init pos:start="353:25" pos:end="353:28"><expr pos:start="353:25" pos:end="353:27"><name pos:start="353:25" pos:end="353:25">i</name><operator pos:start="353:26" pos:end="353:26">=</operator><literal type="number" pos:start="353:27" pos:end="353:27">0</literal></expr>;</init><condition pos:start="353:29" pos:end="353:32"><expr pos:start="353:29" pos:end="353:31"><name pos:start="353:29" pos:end="353:29">i</name><operator pos:start="353:30" pos:end="353:30">&lt;</operator><name pos:start="353:31" pos:end="353:31">n</name></expr>;</condition><incr pos:start="353:33" pos:end="353:35"><expr pos:start="353:33" pos:end="353:35"><name pos:start="353:33" pos:end="353:33">i</name><operator pos:start="353:34" pos:end="353:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="355:25" pos:end="355:59"><block_content pos:start="355:25" pos:end="355:59">

                        <expr_stmt pos:start="355:25" pos:end="355:59"><expr pos:start="355:25" pos:end="355:58"><name pos:start="355:25" pos:end="355:47"><name pos:start="355:25" pos:end="355:25">s</name><operator pos:start="355:26" pos:end="355:27">-&gt;</operator><name pos:start="355:28" pos:end="355:41">exponent_bands</name><index pos:start="355:42" pos:end="355:44">[<expr pos:start="355:43" pos:end="355:43"><name pos:start="355:43" pos:end="355:43">k</name></expr>]</index><index pos:start="355:45" pos:end="355:47">[<expr pos:start="355:46" pos:end="355:46"><name pos:start="355:46" pos:end="355:46">i</name></expr>]</index></name> <operator pos:start="355:49" pos:end="355:49">=</operator> <name pos:start="355:51" pos:end="355:58"><name pos:start="355:51" pos:end="355:55">table</name><index pos:start="355:56" pos:end="355:58">[<expr pos:start="355:57" pos:end="355:57"><name pos:start="355:57" pos:end="355:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="357:21" pos:end="357:45"><expr pos:start="357:21" pos:end="357:44"><name pos:start="357:21" pos:end="357:40"><name pos:start="357:21" pos:end="357:21">s</name><operator pos:start="357:22" pos:end="357:23">-&gt;</operator><name pos:start="357:24" pos:end="357:37">exponent_sizes</name><index pos:start="357:38" pos:end="357:40">[<expr pos:start="357:39" pos:end="357:39"><name pos:start="357:39" pos:end="357:39">k</name></expr>]</index></name> <operator pos:start="357:42" pos:end="357:42">=</operator> <name pos:start="357:44" pos:end="357:44">n</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="359:19" pos:end="393:17">else <block pos:start="359:24" pos:end="393:17">{<block_content pos:start="361:21" pos:end="391:45">

                    <expr_stmt pos:start="361:21" pos:end="361:26"><expr pos:start="361:21" pos:end="361:25"><name pos:start="361:21" pos:end="361:21">j</name> <operator pos:start="361:23" pos:end="361:23">=</operator> <literal type="number" pos:start="361:25" pos:end="361:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="363:21" pos:end="363:29"><expr pos:start="363:21" pos:end="363:28"><name pos:start="363:21" pos:end="363:24">lpos</name> <operator pos:start="363:26" pos:end="363:26">=</operator> <literal type="number" pos:start="363:28" pos:end="363:28">0</literal></expr>;</expr_stmt>

                    <for pos:start="365:21" pos:end="389:21">for<control pos:start="365:24" pos:end="365:37">(<init pos:start="365:25" pos:end="365:28"><expr pos:start="365:25" pos:end="365:27"><name pos:start="365:25" pos:end="365:25">i</name><operator pos:start="365:26" pos:end="365:26">=</operator><literal type="number" pos:start="365:27" pos:end="365:27">0</literal></expr>;</init><condition pos:start="365:29" pos:end="365:33"><expr pos:start="365:29" pos:end="365:32"><name pos:start="365:29" pos:end="365:29">i</name><operator pos:start="365:30" pos:end="365:30">&lt;</operator><literal type="number" pos:start="365:31" pos:end="365:32">25</literal></expr>;</condition><incr pos:start="365:34" pos:end="365:36"><expr pos:start="365:34" pos:end="365:36"><name pos:start="365:34" pos:end="365:34">i</name><operator pos:start="365:35" pos:end="365:36">++</operator></expr></incr>)</control> <block pos:start="365:39" pos:end="389:21">{<block_content pos:start="367:25" pos:end="387:35">

                        <expr_stmt pos:start="367:25" pos:end="367:50"><expr pos:start="367:25" pos:end="367:49"><name pos:start="367:25" pos:end="367:25">a</name> <operator pos:start="367:27" pos:end="367:27">=</operator> <name pos:start="367:29" pos:end="367:49"><name pos:start="367:29" pos:end="367:46">wma_critical_freqs</name><index pos:start="367:47" pos:end="367:49">[<expr pos:start="367:48" pos:end="367:48"><name pos:start="367:48" pos:end="367:48">i</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="369:25" pos:end="369:43"><expr pos:start="369:25" pos:end="369:42"><name pos:start="369:25" pos:end="369:25">b</name> <operator pos:start="369:27" pos:end="369:27">=</operator> <name pos:start="369:29" pos:end="369:42"><name pos:start="369:29" pos:end="369:29">s</name><operator pos:start="369:30" pos:end="369:31">-&gt;</operator><name pos:start="369:32" pos:end="369:42">sample_rate</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="371:25" pos:end="371:74"><expr pos:start="371:25" pos:end="371:73"><name pos:start="371:25" pos:end="371:27">pos</name> <operator pos:start="371:29" pos:end="371:29">=</operator> <operator pos:start="371:31" pos:end="371:31">(</operator><operator pos:start="371:32" pos:end="371:32">(</operator><name pos:start="371:33" pos:end="371:41">block_len</name> <operator pos:start="371:43" pos:end="371:43">*</operator> <literal type="number" pos:start="371:45" pos:end="371:45">2</literal> <operator pos:start="371:47" pos:end="371:47">*</operator> <name pos:start="371:49" pos:end="371:49">a</name><operator pos:start="371:50" pos:end="371:50">)</operator>  <operator pos:start="371:53" pos:end="371:53">+</operator> <operator pos:start="371:55" pos:end="371:55">(</operator><name pos:start="371:56" pos:end="371:56">b</name> <operator pos:start="371:58" pos:end="371:59">&lt;&lt;</operator> <literal type="number" pos:start="371:61" pos:end="371:61">1</literal><operator pos:start="371:62" pos:end="371:62">)</operator><operator pos:start="371:63" pos:end="371:63">)</operator> <operator pos:start="371:65" pos:end="371:65">/</operator> <operator pos:start="371:67" pos:end="371:67">(</operator><literal type="number" pos:start="371:68" pos:end="371:68">4</literal> <operator pos:start="371:70" pos:end="371:70">*</operator> <name pos:start="371:72" pos:end="371:72">b</name><operator pos:start="371:73" pos:end="371:73">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="373:25" pos:end="373:34"><expr pos:start="373:25" pos:end="373:33"><name pos:start="373:25" pos:end="373:27">pos</name> <operator pos:start="373:29" pos:end="373:31">&lt;&lt;=</operator> <literal type="number" pos:start="373:33" pos:end="373:33">2</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="375:25" pos:end="377:44"><if pos:start="375:25" pos:end="377:44">if <condition pos:start="375:28" pos:end="375:44">(<expr pos:start="375:29" pos:end="375:43"><name pos:start="375:29" pos:end="375:31">pos</name> <operator pos:start="375:33" pos:end="375:33">&gt;</operator> <name pos:start="375:35" pos:end="375:43">block_len</name></expr>)</condition><block type="pseudo" pos:start="377:29" pos:end="377:44"><block_content pos:start="377:29" pos:end="377:44"> 

                            <expr_stmt pos:start="377:29" pos:end="377:44"><expr pos:start="377:29" pos:end="377:43"><name pos:start="377:29" pos:end="377:31">pos</name> <operator pos:start="377:33" pos:end="377:33">=</operator> <name pos:start="377:35" pos:end="377:43">block_len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="379:25" pos:end="381:67"><if pos:start="379:25" pos:end="381:67">if <condition pos:start="379:28" pos:end="379:39">(<expr pos:start="379:29" pos:end="379:38"><name pos:start="379:29" pos:end="379:31">pos</name> <operator pos:start="379:33" pos:end="379:33">&gt;</operator> <name pos:start="379:35" pos:end="379:38">lpos</name></expr>)</condition><block type="pseudo" pos:start="381:29" pos:end="381:67"><block_content pos:start="381:29" pos:end="381:67">

                            <expr_stmt pos:start="381:29" pos:end="381:67"><expr pos:start="381:29" pos:end="381:66"><name pos:start="381:29" pos:end="381:53"><name pos:start="381:29" pos:end="381:29">s</name><operator pos:start="381:30" pos:end="381:31">-&gt;</operator><name pos:start="381:32" pos:end="381:45">exponent_bands</name><index pos:start="381:46" pos:end="381:48">[<expr pos:start="381:47" pos:end="381:47"><name pos:start="381:47" pos:end="381:47">k</name></expr>]</index><index pos:start="381:49" pos:end="381:53">[<expr pos:start="381:50" pos:end="381:52"><name pos:start="381:50" pos:end="381:50">j</name><operator pos:start="381:51" pos:end="381:52">++</operator></expr>]</index></name> <operator pos:start="381:55" pos:end="381:55">=</operator> <name pos:start="381:57" pos:end="381:59">pos</name> <operator pos:start="381:61" pos:end="381:61">-</operator> <name pos:start="381:63" pos:end="381:66">lpos</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="383:25" pos:end="385:34"><if pos:start="383:25" pos:end="385:34">if <condition pos:start="383:28" pos:end="383:45">(<expr pos:start="383:29" pos:end="383:44"><name pos:start="383:29" pos:end="383:31">pos</name> <operator pos:start="383:33" pos:end="383:34">&gt;=</operator> <name pos:start="383:36" pos:end="383:44">block_len</name></expr>)</condition><block type="pseudo" pos:start="385:29" pos:end="385:34"><block_content pos:start="385:29" pos:end="385:34">

                            <break pos:start="385:29" pos:end="385:34">break;</break></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="387:25" pos:end="387:35"><expr pos:start="387:25" pos:end="387:34"><name pos:start="387:25" pos:end="387:28">lpos</name> <operator pos:start="387:30" pos:end="387:30">=</operator> <name pos:start="387:32" pos:end="387:34">pos</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="391:21" pos:end="391:45"><expr pos:start="391:21" pos:end="391:44"><name pos:start="391:21" pos:end="391:40"><name pos:start="391:21" pos:end="391:21">s</name><operator pos:start="391:22" pos:end="391:23">-&gt;</operator><name pos:start="391:24" pos:end="391:37">exponent_sizes</name><index pos:start="391:38" pos:end="391:40">[<expr pos:start="391:39" pos:end="391:39"><name pos:start="391:39" pos:end="391:39">k</name></expr>]</index></name> <operator pos:start="391:42" pos:end="391:42">=</operator> <name pos:start="391:44" pos:end="391:44">j</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="399:13" pos:end="399:37">/* max number of coefs */</comment>

            <expr_stmt pos:start="401:13" pos:end="401:79"><expr pos:start="401:13" pos:end="401:78"><name pos:start="401:13" pos:end="401:27"><name pos:start="401:13" pos:end="401:13">s</name><operator pos:start="401:14" pos:end="401:15">-&gt;</operator><name pos:start="401:16" pos:end="401:24">coefs_end</name><index pos:start="401:25" pos:end="401:27">[<expr pos:start="401:26" pos:end="401:26"><name pos:start="401:26" pos:end="401:26">k</name></expr>]</index></name> <operator pos:start="401:29" pos:end="401:29">=</operator> <operator pos:start="401:31" pos:end="401:31">(</operator><name pos:start="401:32" pos:end="401:43"><name pos:start="401:32" pos:end="401:32">s</name><operator pos:start="401:33" pos:end="401:34">-&gt;</operator><name pos:start="401:35" pos:end="401:43">frame_len</name></name> <operator pos:start="401:45" pos:end="401:45">-</operator> <operator pos:start="401:47" pos:end="401:47">(</operator><operator pos:start="401:48" pos:end="401:48">(</operator><name pos:start="401:49" pos:end="401:60"><name pos:start="401:49" pos:end="401:49">s</name><operator pos:start="401:50" pos:end="401:51">-&gt;</operator><name pos:start="401:52" pos:end="401:60">frame_len</name></name> <operator pos:start="401:62" pos:end="401:62">*</operator> <literal type="number" pos:start="401:64" pos:end="401:64">9</literal><operator pos:start="401:65" pos:end="401:65">)</operator> <operator pos:start="401:67" pos:end="401:67">/</operator> <literal type="number" pos:start="401:69" pos:end="401:71">100</literal><operator pos:start="401:72" pos:end="401:72">)</operator><operator pos:start="401:73" pos:end="401:73">)</operator> <operator pos:start="401:75" pos:end="401:76">&gt;&gt;</operator> <name pos:start="401:78" pos:end="401:78">k</name></expr>;</expr_stmt>

            <comment type="block" pos:start="403:13" pos:end="403:39">/* high freq computation */</comment>

            <expr_stmt pos:start="405:13" pos:end="407:64"><expr pos:start="405:13" pos:end="407:63"><name pos:start="405:13" pos:end="405:33"><name pos:start="405:13" pos:end="405:13">s</name><operator pos:start="405:14" pos:end="405:15">-&gt;</operator><name pos:start="405:16" pos:end="405:30">high_band_start</name><index pos:start="405:31" pos:end="405:33">[<expr pos:start="405:32" pos:end="405:32"><name pos:start="405:32" pos:end="405:32">k</name></expr>]</index></name> <operator pos:start="405:35" pos:end="405:35">=</operator> <operator pos:start="405:37" pos:end="405:37">(</operator><name pos:start="405:38" pos:end="405:40">int</name><operator pos:start="405:41" pos:end="405:41">)</operator><operator pos:start="405:42" pos:end="405:42">(</operator><operator pos:start="405:43" pos:end="405:43">(</operator><name pos:start="405:44" pos:end="405:52">block_len</name> <operator pos:start="405:54" pos:end="405:54">*</operator> <literal type="number" pos:start="405:56" pos:end="405:56">2</literal> <operator pos:start="405:58" pos:end="405:58">*</operator> <name pos:start="405:60" pos:end="405:68">high_freq</name><operator pos:start="405:69" pos:end="405:69">)</operator> <operator pos:start="405:71" pos:end="405:71">/</operator> 

                                          <name pos:start="407:43" pos:end="407:56"><name pos:start="407:43" pos:end="407:43">s</name><operator pos:start="407:44" pos:end="407:45">-&gt;</operator><name pos:start="407:46" pos:end="407:56">sample_rate</name></name> <operator pos:start="407:58" pos:end="407:58">+</operator> <literal type="number" pos:start="407:60" pos:end="407:62">0.5</literal><operator pos:start="407:63" pos:end="407:63">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="409:13" pos:end="409:37"><expr pos:start="409:13" pos:end="409:36"><name pos:start="409:13" pos:end="409:13">n</name> <operator pos:start="409:15" pos:end="409:15">=</operator> <name pos:start="409:17" pos:end="409:36"><name pos:start="409:17" pos:end="409:17">s</name><operator pos:start="409:18" pos:end="409:19">-&gt;</operator><name pos:start="409:20" pos:end="409:33">exponent_sizes</name><index pos:start="409:34" pos:end="409:36">[<expr pos:start="409:35" pos:end="409:35"><name pos:start="409:35" pos:end="409:35">k</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="411:13" pos:end="411:18"><expr pos:start="411:13" pos:end="411:17"><name pos:start="411:13" pos:end="411:13">j</name> <operator pos:start="411:15" pos:end="411:15">=</operator> <literal type="number" pos:start="411:17" pos:end="411:17">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="413:13" pos:end="413:20"><expr pos:start="413:13" pos:end="413:19"><name pos:start="413:13" pos:end="413:15">pos</name> <operator pos:start="413:17" pos:end="413:17">=</operator> <literal type="number" pos:start="413:19" pos:end="413:19">0</literal></expr>;</expr_stmt>

            <for pos:start="415:13" pos:end="437:13">for<control pos:start="415:16" pos:end="415:28">(<init pos:start="415:17" pos:end="415:20"><expr pos:start="415:17" pos:end="415:19"><name pos:start="415:17" pos:end="415:17">i</name><operator pos:start="415:18" pos:end="415:18">=</operator><literal type="number" pos:start="415:19" pos:end="415:19">0</literal></expr>;</init><condition pos:start="415:21" pos:end="415:24"><expr pos:start="415:21" pos:end="415:23"><name pos:start="415:21" pos:end="415:21">i</name><operator pos:start="415:22" pos:end="415:22">&lt;</operator><name pos:start="415:23" pos:end="415:23">n</name></expr>;</condition><incr pos:start="415:25" pos:end="415:27"><expr pos:start="415:25" pos:end="415:27"><name pos:start="415:25" pos:end="415:25">i</name><operator pos:start="415:26" pos:end="415:27">++</operator></expr></incr>)</control> <block pos:start="415:30" pos:end="437:13">{<block_content pos:start="417:17" pos:end="435:65">

                <decl_stmt pos:start="417:17" pos:end="417:31"><decl pos:start="417:17" pos:end="417:25"><type pos:start="417:17" pos:end="417:19"><name pos:start="417:17" pos:end="417:19">int</name></type> <name pos:start="417:21" pos:end="417:25">start</name></decl>, <decl pos:start="417:28" pos:end="417:30"><type ref="prev" pos:start="417:17" pos:end="417:19"/><name pos:start="417:28" pos:end="417:30">end</name></decl>;</decl_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:28"><expr pos:start="419:17" pos:end="419:27"><name pos:start="419:17" pos:end="419:21">start</name> <operator pos:start="419:23" pos:end="419:23">=</operator> <name pos:start="419:25" pos:end="419:27">pos</name></expr>;</expr_stmt>

                <expr_stmt pos:start="421:17" pos:end="421:47"><expr pos:start="421:17" pos:end="421:46"><name pos:start="421:17" pos:end="421:19">pos</name> <operator pos:start="421:21" pos:end="421:22">+=</operator> <name pos:start="421:24" pos:end="421:46"><name pos:start="421:24" pos:end="421:24">s</name><operator pos:start="421:25" pos:end="421:26">-&gt;</operator><name pos:start="421:27" pos:end="421:40">exponent_bands</name><index pos:start="421:41" pos:end="421:43">[<expr pos:start="421:42" pos:end="421:42"><name pos:start="421:42" pos:end="421:42">k</name></expr>]</index><index pos:start="421:44" pos:end="421:46">[<expr pos:start="421:45" pos:end="421:45"><name pos:start="421:45" pos:end="421:45">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="423:17" pos:end="423:26"><expr pos:start="423:17" pos:end="423:25"><name pos:start="423:17" pos:end="423:19">end</name> <operator pos:start="423:21" pos:end="423:21">=</operator> <name pos:start="423:23" pos:end="423:25">pos</name></expr>;</expr_stmt>

                <if_stmt pos:start="425:17" pos:end="427:50"><if pos:start="425:17" pos:end="427:50">if <condition pos:start="425:20" pos:end="425:50">(<expr pos:start="425:21" pos:end="425:49"><name pos:start="425:21" pos:end="425:25">start</name> <operator pos:start="425:27" pos:end="425:27">&lt;</operator> <name pos:start="425:29" pos:end="425:49"><name pos:start="425:29" pos:end="425:29">s</name><operator pos:start="425:30" pos:end="425:31">-&gt;</operator><name pos:start="425:32" pos:end="425:46">high_band_start</name><index pos:start="425:47" pos:end="425:49">[<expr pos:start="425:48" pos:end="425:48"><name pos:start="425:48" pos:end="425:48">k</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="427:21" pos:end="427:50"><block_content pos:start="427:21" pos:end="427:50">

                    <expr_stmt pos:start="427:21" pos:end="427:50"><expr pos:start="427:21" pos:end="427:49"><name pos:start="427:21" pos:end="427:25">start</name> <operator pos:start="427:27" pos:end="427:27">=</operator> <name pos:start="427:29" pos:end="427:49"><name pos:start="427:29" pos:end="427:29">s</name><operator pos:start="427:30" pos:end="427:31">-&gt;</operator><name pos:start="427:32" pos:end="427:46">high_band_start</name><index pos:start="427:47" pos:end="427:49">[<expr pos:start="427:48" pos:end="427:48"><name pos:start="427:48" pos:end="427:48">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="429:17" pos:end="431:42"><if pos:start="429:17" pos:end="431:42">if <condition pos:start="429:20" pos:end="429:42">(<expr pos:start="429:21" pos:end="429:41"><name pos:start="429:21" pos:end="429:23">end</name> <operator pos:start="429:25" pos:end="429:25">&gt;</operator> <name pos:start="429:27" pos:end="429:41"><name pos:start="429:27" pos:end="429:27">s</name><operator pos:start="429:28" pos:end="429:29">-&gt;</operator><name pos:start="429:30" pos:end="429:38">coefs_end</name><index pos:start="429:39" pos:end="429:41">[<expr pos:start="429:40" pos:end="429:40"><name pos:start="429:40" pos:end="429:40">k</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="431:21" pos:end="431:42"><block_content pos:start="431:21" pos:end="431:42">

                    <expr_stmt pos:start="431:21" pos:end="431:42"><expr pos:start="431:21" pos:end="431:41"><name pos:start="431:21" pos:end="431:23">end</name> <operator pos:start="431:25" pos:end="431:25">=</operator> <name pos:start="431:27" pos:end="431:41"><name pos:start="431:27" pos:end="431:27">s</name><operator pos:start="431:28" pos:end="431:29">-&gt;</operator><name pos:start="431:30" pos:end="431:38">coefs_end</name><index pos:start="431:39" pos:end="431:41">[<expr pos:start="431:40" pos:end="431:40"><name pos:start="431:40" pos:end="431:40">k</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="433:17" pos:end="435:65"><if pos:start="433:17" pos:end="435:65">if <condition pos:start="433:20" pos:end="433:32">(<expr pos:start="433:21" pos:end="433:31"><name pos:start="433:21" pos:end="433:23">end</name> <operator pos:start="433:25" pos:end="433:25">&gt;</operator> <name pos:start="433:27" pos:end="433:31">start</name></expr>)</condition><block type="pseudo" pos:start="435:21" pos:end="435:65"><block_content pos:start="435:21" pos:end="435:65">

                    <expr_stmt pos:start="435:21" pos:end="435:65"><expr pos:start="435:21" pos:end="435:64"><name pos:start="435:21" pos:end="435:50"><name pos:start="435:21" pos:end="435:21">s</name><operator pos:start="435:22" pos:end="435:23">-&gt;</operator><name pos:start="435:24" pos:end="435:42">exponent_high_bands</name><index pos:start="435:43" pos:end="435:45">[<expr pos:start="435:44" pos:end="435:44"><name pos:start="435:44" pos:end="435:44">k</name></expr>]</index><index pos:start="435:46" pos:end="435:50">[<expr pos:start="435:47" pos:end="435:49"><name pos:start="435:47" pos:end="435:47">j</name><operator pos:start="435:48" pos:end="435:49">++</operator></expr>]</index></name> <operator pos:start="435:52" pos:end="435:52">=</operator> <name pos:start="435:54" pos:end="435:56">end</name> <operator pos:start="435:58" pos:end="435:58">-</operator> <name pos:start="435:60" pos:end="435:64">start</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="439:13" pos:end="460:0"><expr pos:start="439:13" pos:end="439:41"><name pos:start="439:13" pos:end="439:37"><name pos:start="439:13" pos:end="439:13">s</name><operator pos:start="439:14" pos:end="439:15">-&gt;</operator><name pos:start="439:16" pos:end="439:34">exponent_high_sizes</name><index pos:start="439:35" pos:end="439:37">[<expr pos:start="439:36" pos:end="439:36"><name pos:start="439:36" pos:end="439:36">k</name></expr>]</index></name> <operator pos:start="439:39" pos:end="439:39">=</operator> <name pos:start="439:41" pos:end="439:41">j</name></expr>;</expr_stmt>

<cpp:if pos:start="441:1" pos:end="441:5">#<cpp:directive pos:start="441:2" pos:end="441:3">if</cpp:directive> <expr pos:start="441:5" pos:end="441:5"><literal type="number" pos:start="441:5" pos:end="441:5">0</literal></expr></cpp:if>

            tprintf("%5d: coefs_end=%d high_band_start=%d nb_high_bands=%d: ",

                  s-&gt;frame_len &gt;&gt; k, 

                  s-&gt;coefs_end[k],

                  s-&gt;high_band_start[k],

                  s-&gt;exponent_high_sizes[k]);

            for(j=0;j&lt;s-&gt;exponent_high_sizes[k];j++)

                tprintf(" %d", s-&gt;exponent_high_bands[k][j]);

            tprintf("\n");

<cpp:endif pos:start="459:1" pos:end="459:6">#<cpp:directive pos:start="459:2" pos:end="459:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></for>

    </block_content>}</block>



<cpp:ifdef pos:start="467:1" pos:end="467:12">#<cpp:directive pos:start="467:2" pos:end="467:6">ifdef</cpp:directive> <name pos:start="467:8" pos:end="467:12">TRACE</name></cpp:ifdef>

    <block pos:start="469:5" pos:end="492:0">{<block_content pos:start="471:9" pos:end="487:9">

        <decl_stmt pos:start="471:9" pos:end="471:17"><decl pos:start="471:9" pos:end="471:13"><type pos:start="471:9" pos:end="471:11"><name pos:start="471:9" pos:end="471:11">int</name></type> <name pos:start="471:13" pos:end="471:13">i</name></decl>, <decl pos:start="471:16" pos:end="471:16"><type ref="prev" pos:start="471:9" pos:end="471:11"/><name pos:start="471:16" pos:end="471:16">j</name></decl>;</decl_stmt>

        <for pos:start="473:9" pos:end="487:9">for<control pos:start="473:12" pos:end="473:46">(<init pos:start="473:13" pos:end="473:18"><expr pos:start="473:13" pos:end="473:17"><name pos:start="473:13" pos:end="473:13">i</name> <operator pos:start="473:15" pos:end="473:15">=</operator> <literal type="number" pos:start="473:17" pos:end="473:17">0</literal></expr>;</init> <condition pos:start="473:20" pos:end="473:41"><expr pos:start="473:20" pos:end="473:40"><name pos:start="473:20" pos:end="473:20">i</name> <operator pos:start="473:22" pos:end="473:22">&lt;</operator> <name pos:start="473:24" pos:end="473:40"><name pos:start="473:24" pos:end="473:24">s</name><operator pos:start="473:25" pos:end="473:26">-&gt;</operator><name pos:start="473:27" pos:end="473:40">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="473:43" pos:end="473:45"><expr pos:start="473:43" pos:end="473:45"><name pos:start="473:43" pos:end="473:43">i</name><operator pos:start="473:44" pos:end="473:45">++</operator></expr></incr>)</control> <block pos:start="473:48" pos:end="487:9">{<block_content pos:start="475:13" pos:end="485:26">

            <expr_stmt pos:start="475:13" pos:end="479:41"><expr pos:start="475:13" pos:end="479:40"><call pos:start="475:13" pos:end="479:40"><name pos:start="475:13" pos:end="475:19">tprintf</name><argument_list pos:start="475:20" pos:end="479:40">(<argument pos:start="475:21" pos:end="475:33"><expr pos:start="475:21" pos:end="475:33"><literal type="string" pos:start="475:21" pos:end="475:33">"%5d: n=%2d:"</literal></expr></argument>, 

                   <argument pos:start="477:20" pos:end="477:36"><expr pos:start="477:20" pos:end="477:36"><name pos:start="477:20" pos:end="477:31"><name pos:start="477:20" pos:end="477:20">s</name><operator pos:start="477:21" pos:end="477:22">-&gt;</operator><name pos:start="477:23" pos:end="477:31">frame_len</name></name> <operator pos:start="477:33" pos:end="477:34">&gt;&gt;</operator> <name pos:start="477:36" pos:end="477:36">i</name></expr></argument>, 

                   <argument pos:start="479:20" pos:end="479:39"><expr pos:start="479:20" pos:end="479:39"><name pos:start="479:20" pos:end="479:39"><name pos:start="479:20" pos:end="479:20">s</name><operator pos:start="479:21" pos:end="479:22">-&gt;</operator><name pos:start="479:23" pos:end="479:36">exponent_sizes</name><index pos:start="479:37" pos:end="479:39">[<expr pos:start="479:38" pos:end="479:38"><name pos:start="479:38" pos:end="479:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="481:13" pos:end="483:56">for<control pos:start="481:16" pos:end="481:47">(<init pos:start="481:17" pos:end="481:20"><expr pos:start="481:17" pos:end="481:19"><name pos:start="481:17" pos:end="481:17">j</name><operator pos:start="481:18" pos:end="481:18">=</operator><literal type="number" pos:start="481:19" pos:end="481:19">0</literal></expr>;</init><condition pos:start="481:21" pos:end="481:43"><expr pos:start="481:21" pos:end="481:42"><name pos:start="481:21" pos:end="481:21">j</name><operator pos:start="481:22" pos:end="481:22">&lt;</operator><name pos:start="481:23" pos:end="481:42"><name pos:start="481:23" pos:end="481:23">s</name><operator pos:start="481:24" pos:end="481:25">-&gt;</operator><name pos:start="481:26" pos:end="481:39">exponent_sizes</name><index pos:start="481:40" pos:end="481:42">[<expr pos:start="481:41" pos:end="481:41"><name pos:start="481:41" pos:end="481:41">i</name></expr>]</index></name></expr>;</condition><incr pos:start="481:44" pos:end="481:46"><expr pos:start="481:44" pos:end="481:46"><name pos:start="481:44" pos:end="481:44">j</name><operator pos:start="481:45" pos:end="481:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="483:17" pos:end="483:56"><block_content pos:start="483:17" pos:end="483:56">

                <expr_stmt pos:start="483:17" pos:end="483:56"><expr pos:start="483:17" pos:end="483:55"><call pos:start="483:17" pos:end="483:55"><name pos:start="483:17" pos:end="483:23">tprintf</name><argument_list pos:start="483:24" pos:end="483:55">(<argument pos:start="483:25" pos:end="483:29"><expr pos:start="483:25" pos:end="483:29"><literal type="string" pos:start="483:25" pos:end="483:29">" %d"</literal></expr></argument>, <argument pos:start="483:32" pos:end="483:54"><expr pos:start="483:32" pos:end="483:54"><name pos:start="483:32" pos:end="483:54"><name pos:start="483:32" pos:end="483:32">s</name><operator pos:start="483:33" pos:end="483:34">-&gt;</operator><name pos:start="483:35" pos:end="483:48">exponent_bands</name><index pos:start="483:49" pos:end="483:51">[<expr pos:start="483:50" pos:end="483:50"><name pos:start="483:50" pos:end="483:50">i</name></expr>]</index><index pos:start="483:52" pos:end="483:54">[<expr pos:start="483:53" pos:end="483:53"><name pos:start="483:53" pos:end="483:53">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="485:13" pos:end="485:26"><expr pos:start="485:13" pos:end="485:25"><call pos:start="485:13" pos:end="485:25"><name pos:start="485:13" pos:end="485:19">tprintf</name><argument_list pos:start="485:20" pos:end="485:25">(<argument pos:start="485:21" pos:end="485:24"><expr pos:start="485:21" pos:end="485:24"><literal type="string" pos:start="485:21" pos:end="485:24">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block>

<cpp:endif pos:start="491:1" pos:end="491:6">#<cpp:directive pos:start="491:2" pos:end="491:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="495:5" pos:end="495:19">/* init MDCT */</comment>

    <for pos:start="497:5" pos:end="499:68">for<control pos:start="497:8" pos:end="497:42">(<init pos:start="497:9" pos:end="497:14"><expr pos:start="497:9" pos:end="497:13"><name pos:start="497:9" pos:end="497:9">i</name> <operator pos:start="497:11" pos:end="497:11">=</operator> <literal type="number" pos:start="497:13" pos:end="497:13">0</literal></expr>;</init> <condition pos:start="497:16" pos:end="497:37"><expr pos:start="497:16" pos:end="497:36"><name pos:start="497:16" pos:end="497:16">i</name> <operator pos:start="497:18" pos:end="497:18">&lt;</operator> <name pos:start="497:20" pos:end="497:36"><name pos:start="497:20" pos:end="497:20">s</name><operator pos:start="497:21" pos:end="497:22">-&gt;</operator><name pos:start="497:23" pos:end="497:36">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="497:39" pos:end="497:41"><expr pos:start="497:39" pos:end="497:41"><name pos:start="497:39" pos:end="497:39">i</name><operator pos:start="497:40" pos:end="497:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="499:9" pos:end="499:68"><block_content pos:start="499:9" pos:end="499:68">

        <expr_stmt pos:start="499:9" pos:end="499:68"><expr pos:start="499:9" pos:end="499:67"><call pos:start="499:9" pos:end="499:67"><name pos:start="499:9" pos:end="499:20">ff_mdct_init</name><argument_list pos:start="499:21" pos:end="499:67">(<argument pos:start="499:22" pos:end="499:36"><expr pos:start="499:22" pos:end="499:36"><operator pos:start="499:22" pos:end="499:22">&amp;</operator><name pos:start="499:23" pos:end="499:36"><name pos:start="499:23" pos:end="499:23">s</name><operator pos:start="499:24" pos:end="499:25">-&gt;</operator><name pos:start="499:26" pos:end="499:33">mdct_ctx</name><index pos:start="499:34" pos:end="499:36">[<expr pos:start="499:35" pos:end="499:35"><name pos:start="499:35" pos:end="499:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="499:39" pos:end="499:63"><expr pos:start="499:39" pos:end="499:63"><name pos:start="499:39" pos:end="499:55"><name pos:start="499:39" pos:end="499:39">s</name><operator pos:start="499:40" pos:end="499:41">-&gt;</operator><name pos:start="499:42" pos:end="499:55">frame_len_bits</name></name> <operator pos:start="499:57" pos:end="499:57">-</operator> <name pos:start="499:59" pos:end="499:59">i</name> <operator pos:start="499:61" pos:end="499:61">+</operator> <literal type="number" pos:start="499:63" pos:end="499:63">1</literal></expr></argument>, <argument pos:start="499:66" pos:end="499:66"><expr pos:start="499:66" pos:end="499:66"><literal type="number" pos:start="499:66" pos:end="499:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    

    <comment type="block" pos:start="503:5" pos:end="503:49">/* init MDCT windows : simple sinus window */</comment>

    <for pos:start="505:5" pos:end="525:5">for<control pos:start="505:8" pos:end="505:42">(<init pos:start="505:9" pos:end="505:14"><expr pos:start="505:9" pos:end="505:13"><name pos:start="505:9" pos:end="505:9">i</name> <operator pos:start="505:11" pos:end="505:11">=</operator> <literal type="number" pos:start="505:13" pos:end="505:13">0</literal></expr>;</init> <condition pos:start="505:16" pos:end="505:37"><expr pos:start="505:16" pos:end="505:36"><name pos:start="505:16" pos:end="505:16">i</name> <operator pos:start="505:18" pos:end="505:18">&lt;</operator> <name pos:start="505:20" pos:end="505:36"><name pos:start="505:20" pos:end="505:20">s</name><operator pos:start="505:21" pos:end="505:22">-&gt;</operator><name pos:start="505:23" pos:end="505:36">nb_block_sizes</name></name></expr>;</condition> <incr pos:start="505:39" pos:end="505:41"><expr pos:start="505:39" pos:end="505:41"><name pos:start="505:39" pos:end="505:39">i</name><operator pos:start="505:40" pos:end="505:41">++</operator></expr></incr>)</control> <block pos:start="505:44" pos:end="525:5">{<block_content pos:start="507:9" pos:end="523:31">

        <decl_stmt pos:start="507:9" pos:end="507:17"><decl pos:start="507:9" pos:end="507:13"><type pos:start="507:9" pos:end="507:11"><name pos:start="507:9" pos:end="507:11">int</name></type> <name pos:start="507:13" pos:end="507:13">n</name></decl>, <decl pos:start="507:16" pos:end="507:16"><type ref="prev" pos:start="507:9" pos:end="507:11"/><name pos:start="507:16" pos:end="507:16">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="509:9" pos:end="509:20"><decl pos:start="509:9" pos:end="509:19"><type pos:start="509:9" pos:end="509:13"><name pos:start="509:9" pos:end="509:13">float</name></type> <name pos:start="509:15" pos:end="509:19">alpha</name></decl>;</decl_stmt>

        <expr_stmt pos:start="511:9" pos:end="511:41"><expr pos:start="511:9" pos:end="511:40"><name pos:start="511:9" pos:end="511:9">n</name> <operator pos:start="511:11" pos:end="511:11">=</operator> <literal type="number" pos:start="511:13" pos:end="511:13">1</literal> <operator pos:start="511:15" pos:end="511:16">&lt;&lt;</operator> <operator pos:start="511:18" pos:end="511:18">(</operator><name pos:start="511:19" pos:end="511:35"><name pos:start="511:19" pos:end="511:19">s</name><operator pos:start="511:20" pos:end="511:21">-&gt;</operator><name pos:start="511:22" pos:end="511:35">frame_len_bits</name></name> <operator pos:start="511:37" pos:end="511:37">-</operator> <name pos:start="511:39" pos:end="511:39">i</name><operator pos:start="511:40" pos:end="511:40">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="513:9" pos:end="513:46"><expr pos:start="513:9" pos:end="513:45"><name pos:start="513:9" pos:end="513:14">window</name> <operator pos:start="513:16" pos:end="513:16">=</operator> <call pos:start="513:18" pos:end="513:45"><name pos:start="513:18" pos:end="513:26">av_malloc</name><argument_list pos:start="513:27" pos:end="513:45">(<argument pos:start="513:28" pos:end="513:44"><expr pos:start="513:28" pos:end="513:44"><sizeof pos:start="513:28" pos:end="513:40">sizeof<argument_list pos:start="513:34" pos:end="513:40">(<argument pos:start="513:35" pos:end="513:39"><expr pos:start="513:35" pos:end="513:39"><name pos:start="513:35" pos:end="513:39">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="513:42" pos:end="513:42">*</operator> <name pos:start="513:44" pos:end="513:44">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="515:9" pos:end="515:33"><expr pos:start="515:9" pos:end="515:32"><name pos:start="515:9" pos:end="515:13">alpha</name> <operator pos:start="515:15" pos:end="515:15">=</operator> <name pos:start="515:17" pos:end="515:20">M_PI</name> <operator pos:start="515:22" pos:end="515:22">/</operator> <operator pos:start="515:24" pos:end="515:24">(</operator><literal type="number" pos:start="515:25" pos:end="515:27">2.0</literal> <operator pos:start="515:29" pos:end="515:29">*</operator> <name pos:start="515:31" pos:end="515:31">n</name><operator pos:start="515:32" pos:end="515:32">)</operator></expr>;</expr_stmt>

        <for pos:start="517:9" pos:end="521:9">for<control pos:start="517:12" pos:end="517:24">(<init pos:start="517:13" pos:end="517:16"><expr pos:start="517:13" pos:end="517:15"><name pos:start="517:13" pos:end="517:13">j</name><operator pos:start="517:14" pos:end="517:14">=</operator><literal type="number" pos:start="517:15" pos:end="517:15">0</literal></expr>;</init><condition pos:start="517:17" pos:end="517:20"><expr pos:start="517:17" pos:end="517:19"><name pos:start="517:17" pos:end="517:17">j</name><operator pos:start="517:18" pos:end="517:18">&lt;</operator><name pos:start="517:19" pos:end="517:19">n</name></expr>;</condition><incr pos:start="517:21" pos:end="517:23"><expr pos:start="517:21" pos:end="517:23"><name pos:start="517:21" pos:end="517:21">j</name><operator pos:start="517:22" pos:end="517:23">++</operator></expr></incr>)</control> <block pos:start="517:26" pos:end="521:9">{<block_content pos:start="519:13" pos:end="519:55">

            <expr_stmt pos:start="519:13" pos:end="519:55"><expr pos:start="519:13" pos:end="519:54"><name pos:start="519:13" pos:end="519:29"><name pos:start="519:13" pos:end="519:18">window</name><index pos:start="519:19" pos:end="519:29">[<expr pos:start="519:20" pos:end="519:28"><name pos:start="519:20" pos:end="519:20">n</name> <operator pos:start="519:22" pos:end="519:22">-</operator> <name pos:start="519:24" pos:end="519:24">j</name> <operator pos:start="519:26" pos:end="519:26">-</operator> <literal type="number" pos:start="519:28" pos:end="519:28">1</literal></expr>]</index></name> <operator pos:start="519:31" pos:end="519:31">=</operator> <call pos:start="519:33" pos:end="519:54"><name pos:start="519:33" pos:end="519:35">sin</name><argument_list pos:start="519:36" pos:end="519:54">(<argument pos:start="519:37" pos:end="519:53"><expr pos:start="519:37" pos:end="519:53"><operator pos:start="519:37" pos:end="519:37">(</operator><name pos:start="519:38" pos:end="519:38">j</name> <operator pos:start="519:40" pos:end="519:40">+</operator> <literal type="number" pos:start="519:42" pos:end="519:44">0.5</literal><operator pos:start="519:45" pos:end="519:45">)</operator> <operator pos:start="519:47" pos:end="519:47">*</operator> <name pos:start="519:49" pos:end="519:53">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="523:9" pos:end="523:31"><expr pos:start="523:9" pos:end="523:30"><name pos:start="523:9" pos:end="523:21"><name pos:start="523:9" pos:end="523:9">s</name><operator pos:start="523:10" pos:end="523:11">-&gt;</operator><name pos:start="523:12" pos:end="523:18">windows</name><index pos:start="523:19" pos:end="523:21">[<expr pos:start="523:20" pos:end="523:20"><name pos:start="523:20" pos:end="523:20">i</name></expr>]</index></name> <operator pos:start="523:23" pos:end="523:23">=</operator> <name pos:start="523:25" pos:end="523:30">window</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="529:5" pos:end="529:31"><expr pos:start="529:5" pos:end="529:30"><name pos:start="529:5" pos:end="529:26"><name pos:start="529:5" pos:end="529:5">s</name><operator pos:start="529:6" pos:end="529:7">-&gt;</operator><name pos:start="529:8" pos:end="529:26">reset_block_lengths</name></name> <operator pos:start="529:28" pos:end="529:28">=</operator> <literal type="number" pos:start="529:30" pos:end="529:30">1</literal></expr>;</expr_stmt>

    

    <if_stmt pos:start="533:5" pos:end="585:5"><if pos:start="533:5" pos:end="585:5">if <condition pos:start="533:8" pos:end="533:28">(<expr pos:start="533:9" pos:end="533:27"><name pos:start="533:9" pos:end="533:27"><name pos:start="533:9" pos:end="533:9">s</name><operator pos:start="533:10" pos:end="533:11">-&gt;</operator><name pos:start="533:12" pos:end="533:27">use_noise_coding</name></name></expr>)</condition> <block pos:start="533:30" pos:end="585:5">{<block_content pos:start="539:9" pos:end="583:40">



        <comment type="block" pos:start="537:9" pos:end="537:38">/* init the noise generator */</comment>

        <if_stmt pos:start="539:9" pos:end="550:0"><if pos:start="539:9" pos:end="541:33">if <condition pos:start="539:12" pos:end="539:27">(<expr pos:start="539:13" pos:end="539:26"><name pos:start="539:13" pos:end="539:26"><name pos:start="539:13" pos:end="539:13">s</name><operator pos:start="539:14" pos:end="539:15">-&gt;</operator><name pos:start="539:16" pos:end="539:26">use_exp_vlc</name></name></expr>)</condition><block type="pseudo" pos:start="541:13" pos:end="541:33"><block_content pos:start="541:13" pos:end="541:33">

            <expr_stmt pos:start="541:13" pos:end="541:33"><expr pos:start="541:13" pos:end="541:32"><name pos:start="541:13" pos:end="541:25"><name pos:start="541:13" pos:end="541:13">s</name><operator pos:start="541:14" pos:end="541:15">-&gt;</operator><name pos:start="541:16" pos:end="541:25">noise_mult</name></name> <operator pos:start="541:27" pos:end="541:27">=</operator> <literal type="number" pos:start="541:29" pos:end="541:32">0.02</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="543:9" pos:end="550:0">else<block type="pseudo" pos:start="545:13" pos:end="550:0"><block_content pos:start="545:13" pos:end="550:0">

            <expr_stmt pos:start="545:13" pos:end="550:0"><expr pos:start="545:13" pos:end="545:32"><name pos:start="545:13" pos:end="545:25"><name pos:start="545:13" pos:end="545:13">s</name><operator pos:start="545:14" pos:end="545:15">-&gt;</operator><name pos:start="545:16" pos:end="545:25">noise_mult</name></name> <operator pos:start="545:27" pos:end="545:27">=</operator> <literal type="number" pos:start="545:29" pos:end="545:32">0.04</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

               

<cpp:ifdef pos:start="549:1" pos:end="549:12">#<cpp:directive pos:start="549:2" pos:end="549:6">ifdef</cpp:directive> <name pos:start="549:8" pos:end="549:12">TRACE</name></cpp:ifdef>

        <for pos:start="551:9" pos:end="556:0">for<control pos:start="551:12" pos:end="551:37">(<init pos:start="551:13" pos:end="551:16"><expr pos:start="551:13" pos:end="551:15"><name pos:start="551:13" pos:end="551:13">i</name><operator pos:start="551:14" pos:end="551:14">=</operator><literal type="number" pos:start="551:15" pos:end="551:15">0</literal></expr>;</init><condition pos:start="551:17" pos:end="551:33"><expr pos:start="551:17" pos:end="551:32"><name pos:start="551:17" pos:end="551:17">i</name><operator pos:start="551:18" pos:end="551:18">&lt;</operator><name pos:start="551:19" pos:end="551:32">NOISE_TAB_SIZE</name></expr>;</condition><incr pos:start="551:34" pos:end="551:36"><expr pos:start="551:34" pos:end="551:36"><name pos:start="551:34" pos:end="551:34">i</name><operator pos:start="551:35" pos:end="551:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="553:13" pos:end="556:0"><block_content pos:start="553:13" pos:end="556:0">

            <expr_stmt pos:start="553:13" pos:end="556:0"><expr pos:start="553:13" pos:end="553:51"><name pos:start="553:13" pos:end="553:29"><name pos:start="553:13" pos:end="553:13">s</name><operator pos:start="553:14" pos:end="553:15">-&gt;</operator><name pos:start="553:16" pos:end="553:26">noise_table</name><index pos:start="553:27" pos:end="553:29">[<expr pos:start="553:28" pos:end="553:28"><name pos:start="553:28" pos:end="553:28">i</name></expr>]</index></name> <operator pos:start="553:31" pos:end="553:31">=</operator> <literal type="number" pos:start="553:33" pos:end="553:35">1.0</literal> <operator pos:start="553:37" pos:end="553:37">*</operator> <name pos:start="553:39" pos:end="553:51"><name pos:start="553:39" pos:end="553:39">s</name><operator pos:start="553:40" pos:end="553:41">-&gt;</operator><name pos:start="553:42" pos:end="553:51">noise_mult</name></name></expr>;</expr_stmt></block_content></block></for>

<cpp:else pos:start="555:1" pos:end="555:5">#<cpp:directive pos:start="555:2" pos:end="555:5">else</cpp:directive></cpp:else>

        <block pos:start="557:9" pos:end="578:0">{<block_content pos:start="559:13" pos:end="573:13">

            <decl_stmt pos:start="559:13" pos:end="559:30"><decl pos:start="559:13" pos:end="559:29"><type pos:start="559:13" pos:end="559:24"><name pos:start="559:13" pos:end="559:20">unsigned</name> <name pos:start="559:22" pos:end="559:24">int</name></type> <name pos:start="559:26" pos:end="559:29">seed</name></decl>;</decl_stmt>

            <decl_stmt pos:start="561:13" pos:end="561:23"><decl pos:start="561:13" pos:end="561:22"><type pos:start="561:13" pos:end="561:17"><name pos:start="561:13" pos:end="561:17">float</name></type> <name pos:start="561:19" pos:end="561:22">norm</name></decl>;</decl_stmt>

            <expr_stmt pos:start="563:13" pos:end="563:21"><expr pos:start="563:13" pos:end="563:20"><name pos:start="563:13" pos:end="563:16">seed</name> <operator pos:start="563:18" pos:end="563:18">=</operator> <literal type="number" pos:start="563:20" pos:end="563:20">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="565:13" pos:end="565:72"><expr pos:start="565:13" pos:end="565:71"><name pos:start="565:13" pos:end="565:16">norm</name> <operator pos:start="565:18" pos:end="565:18">=</operator> <operator pos:start="565:20" pos:end="565:20">(</operator><literal type="number" pos:start="565:21" pos:end="565:23">1.0</literal> <operator pos:start="565:25" pos:end="565:25">/</operator> <operator pos:start="565:27" pos:end="565:27">(</operator><name pos:start="565:28" pos:end="565:32">float</name><operator pos:start="565:33" pos:end="565:33">)</operator><operator pos:start="565:34" pos:end="565:34">(</operator><literal type="number" pos:start="565:35" pos:end="565:37">1LL</literal> <operator pos:start="565:39" pos:end="565:40">&lt;&lt;</operator> <literal type="number" pos:start="565:42" pos:end="565:43">31</literal><operator pos:start="565:44" pos:end="565:44">)</operator><operator pos:start="565:45" pos:end="565:45">)</operator> <operator pos:start="565:47" pos:end="565:47">*</operator> <call pos:start="565:49" pos:end="565:55"><name pos:start="565:49" pos:end="565:52">sqrt</name><argument_list pos:start="565:53" pos:end="565:55">(<argument pos:start="565:54" pos:end="565:54"><expr pos:start="565:54" pos:end="565:54"><literal type="number" pos:start="565:54" pos:end="565:54">3</literal></expr></argument>)</argument_list></call> <operator pos:start="565:57" pos:end="565:57">*</operator> <name pos:start="565:59" pos:end="565:71"><name pos:start="565:59" pos:end="565:59">s</name><operator pos:start="565:60" pos:end="565:61">-&gt;</operator><name pos:start="565:62" pos:end="565:71">noise_mult</name></name></expr>;</expr_stmt>

            <for pos:start="567:13" pos:end="573:13">for<control pos:start="567:16" pos:end="567:41">(<init pos:start="567:17" pos:end="567:20"><expr pos:start="567:17" pos:end="567:19"><name pos:start="567:17" pos:end="567:17">i</name><operator pos:start="567:18" pos:end="567:18">=</operator><literal type="number" pos:start="567:19" pos:end="567:19">0</literal></expr>;</init><condition pos:start="567:21" pos:end="567:37"><expr pos:start="567:21" pos:end="567:36"><name pos:start="567:21" pos:end="567:21">i</name><operator pos:start="567:22" pos:end="567:22">&lt;</operator><name pos:start="567:23" pos:end="567:36">NOISE_TAB_SIZE</name></expr>;</condition><incr pos:start="567:38" pos:end="567:40"><expr pos:start="567:38" pos:end="567:40"><name pos:start="567:38" pos:end="567:38">i</name><operator pos:start="567:39" pos:end="567:40">++</operator></expr></incr>)</control> <block pos:start="567:43" pos:end="573:13">{<block_content pos:start="569:17" pos:end="571:62">

                <expr_stmt pos:start="569:17" pos:end="569:41"><expr pos:start="569:17" pos:end="569:40"><name pos:start="569:17" pos:end="569:20">seed</name> <operator pos:start="569:22" pos:end="569:22">=</operator> <name pos:start="569:24" pos:end="569:27">seed</name> <operator pos:start="569:29" pos:end="569:29">*</operator> <literal type="number" pos:start="569:31" pos:end="569:38">314159</literal> <operator pos:start="569:38" pos:end="569:38">+</operator> <literal type="number" pos:start="569:40" pos:end="569:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="571:17" pos:end="571:62"><expr pos:start="571:17" pos:end="571:61"><name pos:start="571:17" pos:end="571:33"><name pos:start="571:17" pos:end="571:17">s</name><operator pos:start="571:18" pos:end="571:19">-&gt;</operator><name pos:start="571:20" pos:end="571:30">noise_table</name><index pos:start="571:31" pos:end="571:33">[<expr pos:start="571:32" pos:end="571:32"><name pos:start="571:32" pos:end="571:32">i</name></expr>]</index></name> <operator pos:start="571:35" pos:end="571:35">=</operator> <operator pos:start="571:37" pos:end="571:37">(</operator><name pos:start="571:38" pos:end="571:42">float</name><operator pos:start="571:43" pos:end="571:43">)</operator><operator pos:start="571:44" pos:end="571:44">(</operator><operator pos:start="571:45" pos:end="571:45">(</operator><name pos:start="571:46" pos:end="571:48">int</name><operator pos:start="571:49" pos:end="571:49">)</operator><name pos:start="571:50" pos:end="571:53">seed</name><operator pos:start="571:54" pos:end="571:54">)</operator> <operator pos:start="571:56" pos:end="571:56">*</operator> <name pos:start="571:58" pos:end="571:61">norm</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block>

<cpp:endif pos:start="577:1" pos:end="577:6">#<cpp:directive pos:start="577:2" pos:end="577:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="579:9" pos:end="583:40"><expr pos:start="579:9" pos:end="583:39"><call pos:start="579:9" pos:end="583:39"><name pos:start="579:9" pos:end="579:16">init_vlc</name><argument_list pos:start="579:17" pos:end="583:39">(<argument pos:start="579:18" pos:end="579:30"><expr pos:start="579:18" pos:end="579:30"><operator pos:start="579:18" pos:end="579:18">&amp;</operator><name pos:start="579:19" pos:end="579:30"><name pos:start="579:19" pos:end="579:19">s</name><operator pos:start="579:20" pos:end="579:21">-&gt;</operator><name pos:start="579:22" pos:end="579:30">hgain_vlc</name></name></expr></argument>, <argument pos:start="579:33" pos:end="579:33"><expr pos:start="579:33" pos:end="579:33"><literal type="number" pos:start="579:33" pos:end="579:33">9</literal></expr></argument>, <argument pos:start="579:36" pos:end="579:57"><expr pos:start="579:36" pos:end="579:57"><sizeof pos:start="579:36" pos:end="579:57">sizeof<argument_list pos:start="579:42" pos:end="579:57">(<argument pos:start="579:43" pos:end="579:56"><expr pos:start="579:43" pos:end="579:56"><name pos:start="579:43" pos:end="579:56">hgain_huffbits</name></expr></argument>)</argument_list></sizeof></expr></argument>, 

                 <argument pos:start="581:18" pos:end="581:31"><expr pos:start="581:18" pos:end="581:31"><name pos:start="581:18" pos:end="581:31">hgain_huffbits</name></expr></argument>, <argument pos:start="581:34" pos:end="581:34"><expr pos:start="581:34" pos:end="581:34"><literal type="number" pos:start="581:34" pos:end="581:34">1</literal></expr></argument>, <argument pos:start="581:37" pos:end="581:37"><expr pos:start="581:37" pos:end="581:37"><literal type="number" pos:start="581:37" pos:end="581:37">1</literal></expr></argument>,

                 <argument pos:start="583:18" pos:end="583:32"><expr pos:start="583:18" pos:end="583:32"><name pos:start="583:18" pos:end="583:32">hgain_huffcodes</name></expr></argument>, <argument pos:start="583:35" pos:end="583:35"><expr pos:start="583:35" pos:end="583:35"><literal type="number" pos:start="583:35" pos:end="583:35">2</literal></expr></argument>, <argument pos:start="583:38" pos:end="583:38"><expr pos:start="583:38" pos:end="583:38"><literal type="number" pos:start="583:38" pos:end="583:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="589:5" pos:end="601:5"><if pos:start="589:5" pos:end="597:5">if <condition pos:start="589:8" pos:end="589:23">(<expr pos:start="589:9" pos:end="589:22"><name pos:start="589:9" pos:end="589:22"><name pos:start="589:9" pos:end="589:9">s</name><operator pos:start="589:10" pos:end="589:11">-&gt;</operator><name pos:start="589:12" pos:end="589:22">use_exp_vlc</name></name></expr>)</condition> <block pos:start="589:25" pos:end="597:5">{<block_content pos:start="591:9" pos:end="595:40">

        <expr_stmt pos:start="591:9" pos:end="595:40"><expr pos:start="591:9" pos:end="595:39"><call pos:start="591:9" pos:end="595:39"><name pos:start="591:9" pos:end="591:16">init_vlc</name><argument_list pos:start="591:17" pos:end="595:39">(<argument pos:start="591:18" pos:end="591:28"><expr pos:start="591:18" pos:end="591:28"><operator pos:start="591:18" pos:end="591:18">&amp;</operator><name pos:start="591:19" pos:end="591:28"><name pos:start="591:19" pos:end="591:19">s</name><operator pos:start="591:20" pos:end="591:21">-&gt;</operator><name pos:start="591:22" pos:end="591:28">exp_vlc</name></name></expr></argument>, <argument pos:start="591:31" pos:end="591:31"><expr pos:start="591:31" pos:end="591:31"><literal type="number" pos:start="591:31" pos:end="591:31">9</literal></expr></argument>, <argument pos:start="591:34" pos:end="591:55"><expr pos:start="591:34" pos:end="591:55"><sizeof pos:start="591:34" pos:end="591:55">sizeof<argument_list pos:start="591:40" pos:end="591:55">(<argument pos:start="591:41" pos:end="591:54"><expr pos:start="591:41" pos:end="591:54"><name pos:start="591:41" pos:end="591:54">scale_huffbits</name></expr></argument>)</argument_list></sizeof></expr></argument>, 

                 <argument pos:start="593:18" pos:end="593:31"><expr pos:start="593:18" pos:end="593:31"><name pos:start="593:18" pos:end="593:31">scale_huffbits</name></expr></argument>, <argument pos:start="593:34" pos:end="593:34"><expr pos:start="593:34" pos:end="593:34"><literal type="number" pos:start="593:34" pos:end="593:34">1</literal></expr></argument>, <argument pos:start="593:37" pos:end="593:37"><expr pos:start="593:37" pos:end="593:37"><literal type="number" pos:start="593:37" pos:end="593:37">1</literal></expr></argument>,

                 <argument pos:start="595:18" pos:end="595:32"><expr pos:start="595:18" pos:end="595:32"><name pos:start="595:18" pos:end="595:32">scale_huffcodes</name></expr></argument>, <argument pos:start="595:35" pos:end="595:35"><expr pos:start="595:35" pos:end="595:35"><literal type="number" pos:start="595:35" pos:end="595:35">4</literal></expr></argument>, <argument pos:start="595:38" pos:end="595:38"><expr pos:start="595:38" pos:end="595:38"><literal type="number" pos:start="595:38" pos:end="595:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="597:7" pos:end="601:5">else <block pos:start="597:12" pos:end="601:5">{<block_content pos:start="599:9" pos:end="599:47">

        <expr_stmt pos:start="599:9" pos:end="599:47"><expr pos:start="599:9" pos:end="599:46"><call pos:start="599:9" pos:end="599:46"><name pos:start="599:9" pos:end="599:29">wma_lsp_to_curve_init</name><argument_list pos:start="599:30" pos:end="599:46">(<argument pos:start="599:31" pos:end="599:31"><expr pos:start="599:31" pos:end="599:31"><name pos:start="599:31" pos:end="599:31">s</name></expr></argument>, <argument pos:start="599:34" pos:end="599:45"><expr pos:start="599:34" pos:end="599:45"><name pos:start="599:34" pos:end="599:45"><name pos:start="599:34" pos:end="599:34">s</name><operator pos:start="599:35" pos:end="599:36">-&gt;</operator><name pos:start="599:37" pos:end="599:45">frame_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="605:5" pos:end="605:52">/* choose the VLC tables for the coefficients */</comment>

    <expr_stmt pos:start="607:5" pos:end="607:23"><expr pos:start="607:5" pos:end="607:22"><name pos:start="607:5" pos:end="607:18">coef_vlc_table</name> <operator pos:start="607:20" pos:end="607:20">=</operator> <literal type="number" pos:start="607:22" pos:end="607:22">2</literal></expr>;</expr_stmt>

    <if_stmt pos:start="609:5" pos:end="619:5"><if pos:start="609:5" pos:end="619:5">if <condition pos:start="609:8" pos:end="609:32">(<expr pos:start="609:9" pos:end="609:31"><name pos:start="609:9" pos:end="609:22"><name pos:start="609:9" pos:end="609:9">s</name><operator pos:start="609:10" pos:end="609:11">-&gt;</operator><name pos:start="609:12" pos:end="609:22">sample_rate</name></name> <operator pos:start="609:24" pos:end="609:25">&gt;=</operator> <literal type="number" pos:start="609:27" pos:end="609:31">32000</literal></expr>)</condition> <block pos:start="609:34" pos:end="619:5">{<block_content pos:start="611:9" pos:end="617:31">

        <if_stmt pos:start="611:9" pos:end="617:31"><if pos:start="611:9" pos:end="613:31">if <condition pos:start="611:12" pos:end="611:24">(<expr pos:start="611:13" pos:end="611:23"><name pos:start="611:13" pos:end="611:16">bps1</name> <operator pos:start="611:18" pos:end="611:18">&lt;</operator> <literal type="number" pos:start="611:20" pos:end="611:23">0.72</literal></expr>)</condition><block type="pseudo" pos:start="613:13" pos:end="613:31"><block_content pos:start="613:13" pos:end="613:31">

            <expr_stmt pos:start="613:13" pos:end="613:31"><expr pos:start="613:13" pos:end="613:30"><name pos:start="613:13" pos:end="613:26">coef_vlc_table</name> <operator pos:start="613:28" pos:end="613:28">=</operator> <literal type="number" pos:start="613:30" pos:end="613:30">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="615:9" pos:end="617:31">else if <condition pos:start="615:17" pos:end="615:29">(<expr pos:start="615:18" pos:end="615:28"><name pos:start="615:18" pos:end="615:21">bps1</name> <operator pos:start="615:23" pos:end="615:23">&lt;</operator> <literal type="number" pos:start="615:25" pos:end="615:28">1.16</literal></expr>)</condition><block type="pseudo" pos:start="617:13" pos:end="617:31"><block_content pos:start="617:13" pos:end="617:31">

            <expr_stmt pos:start="617:13" pos:end="617:31"><expr pos:start="617:13" pos:end="617:30"><name pos:start="617:13" pos:end="617:26">coef_vlc_table</name> <operator pos:start="617:28" pos:end="617:28">=</operator> <literal type="number" pos:start="617:30" pos:end="617:30">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="623:5" pos:end="625:50"><expr pos:start="623:5" pos:end="625:49"><call pos:start="623:5" pos:end="625:49"><name pos:start="623:5" pos:end="623:17">init_coef_vlc</name><argument_list pos:start="623:18" pos:end="625:49">(<argument pos:start="623:19" pos:end="623:33"><expr pos:start="623:19" pos:end="623:33"><operator pos:start="623:19" pos:end="623:19">&amp;</operator><name pos:start="623:20" pos:end="623:33"><name pos:start="623:20" pos:end="623:20">s</name><operator pos:start="623:21" pos:end="623:22">-&gt;</operator><name pos:start="623:23" pos:end="623:30">coef_vlc</name><index pos:start="623:31" pos:end="623:33">[<expr pos:start="623:32" pos:end="623:32"><literal type="number" pos:start="623:32" pos:end="623:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="623:36" pos:end="623:51"><expr pos:start="623:36" pos:end="623:51"><operator pos:start="623:36" pos:end="623:36">&amp;</operator><name pos:start="623:37" pos:end="623:51"><name pos:start="623:37" pos:end="623:37">s</name><operator pos:start="623:38" pos:end="623:39">-&gt;</operator><name pos:start="623:40" pos:end="623:48">run_table</name><index pos:start="623:49" pos:end="623:51">[<expr pos:start="623:50" pos:end="623:50"><literal type="number" pos:start="623:50" pos:end="623:50">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="623:54" pos:end="623:71"><expr pos:start="623:54" pos:end="623:71"><operator pos:start="623:54" pos:end="623:54">&amp;</operator><name pos:start="623:55" pos:end="623:71"><name pos:start="623:55" pos:end="623:55">s</name><operator pos:start="623:56" pos:end="623:57">-&gt;</operator><name pos:start="623:58" pos:end="623:68">level_table</name><index pos:start="623:69" pos:end="623:71">[<expr pos:start="623:70" pos:end="623:70"><literal type="number" pos:start="623:70" pos:end="623:70">0</literal></expr>]</index></name></expr></argument>,

                  <argument pos:start="625:19" pos:end="625:48"><expr pos:start="625:19" pos:end="625:48"><operator pos:start="625:19" pos:end="625:19">&amp;</operator><name pos:start="625:20" pos:end="625:48"><name pos:start="625:20" pos:end="625:28">coef_vlcs</name><index pos:start="625:29" pos:end="625:48">[<expr pos:start="625:30" pos:end="625:47"><name pos:start="625:30" pos:end="625:43">coef_vlc_table</name> <operator pos:start="625:45" pos:end="625:45">*</operator> <literal type="number" pos:start="625:47" pos:end="625:47">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="627:5" pos:end="629:54"><expr pos:start="627:5" pos:end="629:53"><call pos:start="627:5" pos:end="629:53"><name pos:start="627:5" pos:end="627:17">init_coef_vlc</name><argument_list pos:start="627:18" pos:end="629:53">(<argument pos:start="627:19" pos:end="627:33"><expr pos:start="627:19" pos:end="627:33"><operator pos:start="627:19" pos:end="627:19">&amp;</operator><name pos:start="627:20" pos:end="627:33"><name pos:start="627:20" pos:end="627:20">s</name><operator pos:start="627:21" pos:end="627:22">-&gt;</operator><name pos:start="627:23" pos:end="627:30">coef_vlc</name><index pos:start="627:31" pos:end="627:33">[<expr pos:start="627:32" pos:end="627:32"><literal type="number" pos:start="627:32" pos:end="627:32">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="627:36" pos:end="627:51"><expr pos:start="627:36" pos:end="627:51"><operator pos:start="627:36" pos:end="627:36">&amp;</operator><name pos:start="627:37" pos:end="627:51"><name pos:start="627:37" pos:end="627:37">s</name><operator pos:start="627:38" pos:end="627:39">-&gt;</operator><name pos:start="627:40" pos:end="627:48">run_table</name><index pos:start="627:49" pos:end="627:51">[<expr pos:start="627:50" pos:end="627:50"><literal type="number" pos:start="627:50" pos:end="627:50">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="627:54" pos:end="627:71"><expr pos:start="627:54" pos:end="627:71"><operator pos:start="627:54" pos:end="627:54">&amp;</operator><name pos:start="627:55" pos:end="627:71"><name pos:start="627:55" pos:end="627:55">s</name><operator pos:start="627:56" pos:end="627:57">-&gt;</operator><name pos:start="627:58" pos:end="627:68">level_table</name><index pos:start="627:69" pos:end="627:71">[<expr pos:start="627:70" pos:end="627:70"><literal type="number" pos:start="627:70" pos:end="627:70">1</literal></expr>]</index></name></expr></argument>,

                  <argument pos:start="629:19" pos:end="629:52"><expr pos:start="629:19" pos:end="629:52"><operator pos:start="629:19" pos:end="629:19">&amp;</operator><name pos:start="629:20" pos:end="629:52"><name pos:start="629:20" pos:end="629:28">coef_vlcs</name><index pos:start="629:29" pos:end="629:52">[<expr pos:start="629:30" pos:end="629:51"><name pos:start="629:30" pos:end="629:43">coef_vlc_table</name> <operator pos:start="629:45" pos:end="629:45">*</operator> <literal type="number" pos:start="629:47" pos:end="629:49">2</literal> <operator pos:start="629:49" pos:end="629:49">+</operator> <literal type="number" pos:start="629:51" pos:end="629:51">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="631:5" pos:end="631:13">return <expr pos:start="631:12" pos:end="631:12"><literal type="number" pos:start="631:12" pos:end="631:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
