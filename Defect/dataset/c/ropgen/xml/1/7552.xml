<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7552.c" pos:tabs="8"><function pos:start="1:1" pos:end="243:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">av_parse_time</name><parameter_list pos:start="1:18" pos:end="1:70">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:34"><name pos:start="1:19" pos:end="1:25">int64_t</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:34">timeval</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:55"><decl pos:start="1:37" pos:end="1:55"><type pos:start="1:37" pos:end="1:55"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:55">timestr</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:69">duration</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="243:1">{<block_content pos:start="5:5" pos:end="241:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:13">t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:13">tm</name></name></type> <name pos:start="9:15" pos:end="9:16">dt</name> <init pos:start="9:18" pos:end="9:24">= <expr pos:start="9:20" pos:end="9:24"><block pos:start="9:20" pos:end="9:24">{ <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="19:6"><decl pos:start="13:5" pos:end="19:5"><type pos:start="13:5" pos:end="13:29"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <specifier pos:start="13:12" pos:end="13:16">const</specifier> <name pos:start="13:18" pos:end="13:21">char</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier> <specifier pos:start="13:25" pos:end="13:29">const</specifier></type> <name pos:start="13:31" pos:end="13:40"><name pos:start="13:31" pos:end="13:38">date_fmt</name><index pos:start="13:39" pos:end="13:40">[]</index></name> <init pos:start="13:42" pos:end="19:5">= <expr pos:start="13:44" pos:end="19:5"><block pos:start="13:44" pos:end="19:5">{

        <expr pos:start="15:9" pos:end="15:18"><literal type="string" pos:start="15:9" pos:end="15:18">"%Y-%m-%d"</literal></expr>,

        <expr pos:start="17:9" pos:end="17:16"><literal type="string" pos:start="17:9" pos:end="17:16">"%Y%m%d"</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="27:6"><decl pos:start="21:5" pos:end="27:5"><type pos:start="21:5" pos:end="21:29"><specifier pos:start="21:5" pos:end="21:10">static</specifier> <specifier pos:start="21:12" pos:end="21:16">const</specifier> <name pos:start="21:18" pos:end="21:21">char</name> <modifier pos:start="21:23" pos:end="21:23">*</modifier> <specifier pos:start="21:25" pos:end="21:29">const</specifier></type> <name pos:start="21:31" pos:end="21:40"><name pos:start="21:31" pos:end="21:38">time_fmt</name><index pos:start="21:39" pos:end="21:40">[]</index></name> <init pos:start="21:42" pos:end="27:5">= <expr pos:start="21:44" pos:end="27:5"><block pos:start="21:44" pos:end="27:5">{

        <expr pos:start="23:9" pos:end="23:18"><literal type="string" pos:start="23:9" pos:end="23:18">"%H:%M:%S"</literal></expr>,

        <expr pos:start="25:9" pos:end="25:16"><literal type="string" pos:start="25:9" pos:end="25:16">"%H%M%S"</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:18"><decl pos:start="29:5" pos:end="29:17"><type pos:start="29:5" pos:end="29:16"><specifier pos:start="29:5" pos:end="29:9">const</specifier> <name pos:start="29:11" pos:end="29:14">char</name> <modifier pos:start="29:16" pos:end="29:16">*</modifier></type><name pos:start="29:17" pos:end="29:17">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:20"><decl pos:start="31:5" pos:end="31:14"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:14">is_utc</name></decl>, <decl pos:start="31:17" pos:end="31:19"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:17" pos:end="31:19">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:16"><decl pos:start="33:5" pos:end="33:15"><type pos:start="33:5" pos:end="33:8"><name pos:start="33:5" pos:end="33:8">char</name></type> <name pos:start="33:10" pos:end="33:15">lastch</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="40:0"><decl pos:start="35:5" pos:end="35:20"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:16">negative</name> <init pos:start="35:18" pos:end="35:20">= <expr pos:start="35:20" pos:end="35:20"><literal type="number" pos:start="35:20" pos:end="35:20">0</literal></expr></init></decl>;</decl_stmt>



<cpp:undef pos:start="39:1" pos:end="39:11">#<cpp:directive pos:start="39:2" pos:end="39:6">undef</cpp:directive> <name pos:start="39:8" pos:end="39:11">time</name></cpp:undef>

    <decl_stmt pos:start="41:5" pos:end="41:25"><decl pos:start="41:5" pos:end="41:24"><type pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:10">time_t</name></type> <name pos:start="41:12" pos:end="41:14">now</name> <init pos:start="41:16" pos:end="41:24">= <expr pos:start="41:18" pos:end="41:24"><call pos:start="41:18" pos:end="41:24"><name pos:start="41:18" pos:end="41:21">time</name><argument_list pos:start="41:22" pos:end="41:24">(<argument pos:start="41:23" pos:end="41:23"><expr pos:start="41:23" pos:end="41:23"><literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:7">len</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:25"><name pos:start="45:11" pos:end="45:16">strlen</name><argument_list pos:start="45:17" pos:end="45:25">(<argument pos:start="45:18" pos:end="45:24"><expr pos:start="45:18" pos:end="45:24"><name pos:start="45:18" pos:end="45:24">timestr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:22"><if pos:start="47:5" pos:end="49:34">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:11">len</name> <operator pos:start="47:13" pos:end="47:13">&gt;</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:34"><block_content pos:start="49:9" pos:end="49:34">

        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:14">lastch</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:33"><name pos:start="49:18" pos:end="49:24">timestr</name><index pos:start="49:25" pos:end="49:33">[<expr pos:start="49:26" pos:end="49:32"><name pos:start="49:26" pos:end="49:28">len</name> <operator pos:start="49:30" pos:end="49:30">-</operator> <literal type="number" pos:start="49:32" pos:end="49:32">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="51:5" pos:end="53:22">else<block type="pseudo" pos:start="53:9" pos:end="53:22"><block_content pos:start="53:9" pos:end="53:22">

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:14">lastch</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="char" pos:start="53:18" pos:end="53:21">'\0'</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:46"><expr pos:start="55:5" pos:end="55:45"><name pos:start="55:5" pos:end="55:10">is_utc</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <operator pos:start="55:14" pos:end="55:14">(</operator><name pos:start="55:15" pos:end="55:20">lastch</name> <operator pos:start="55:22" pos:end="55:23">==</operator> <literal type="char" pos:start="55:25" pos:end="55:27">'z'</literal> <operator pos:start="55:29" pos:end="55:30">||</operator> <name pos:start="55:32" pos:end="55:37">lastch</name> <operator pos:start="55:39" pos:end="55:40">==</operator> <literal type="char" pos:start="55:42" pos:end="55:44">'Z'</literal><operator pos:start="55:45" pos:end="55:45">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:16"><expr pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:5">p</name> <operator pos:start="59:7" pos:end="59:7">=</operator> <name pos:start="59:9" pos:end="59:15">timestr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:13"><expr pos:start="61:5" pos:end="61:12"><name pos:start="61:5" pos:end="61:5">q</name> <operator pos:start="61:7" pos:end="61:7">=</operator> <name pos:start="61:9" pos:end="61:12">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="175:5"><if pos:start="63:5" pos:end="137:5">if <condition pos:start="63:8" pos:end="63:18">(<expr pos:start="63:9" pos:end="63:17"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:17">duration</name></expr>)</condition> <block pos:start="63:20" pos:end="137:5">{<block_content pos:start="65:9" pos:end="135:9">

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:49">(<expr pos:start="65:13" pos:end="65:48"><operator pos:start="65:13" pos:end="65:13">!</operator><call pos:start="65:14" pos:end="65:48"><name pos:start="65:14" pos:end="65:27">av_strncasecmp</name><argument_list pos:start="65:28" pos:end="65:48">(<argument pos:start="65:29" pos:end="65:35"><expr pos:start="65:29" pos:end="65:35"><name pos:start="65:29" pos:end="65:35">timestr</name></expr></argument>, <argument pos:start="65:38" pos:end="65:42"><expr pos:start="65:38" pos:end="65:42"><literal type="string" pos:start="65:38" pos:end="65:42">"now"</literal></expr></argument>, <argument pos:start="65:45" pos:end="65:47"><expr pos:start="65:45" pos:end="65:47"><name pos:start="65:45" pos:end="65:47">len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:51" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:21">

            <expr_stmt pos:start="67:13" pos:end="67:47"><expr pos:start="67:13" pos:end="67:46"><operator pos:start="67:13" pos:end="67:13">*</operator><name pos:start="67:14" pos:end="67:20">timeval</name> <operator pos:start="67:22" pos:end="67:22">=</operator> <operator pos:start="67:24" pos:end="67:24">(</operator><name pos:start="67:25" pos:end="67:31">int64_t</name><operator pos:start="67:32" pos:end="67:32">)</operator> <name pos:start="67:34" pos:end="67:36">now</name> <operator pos:start="67:38" pos:end="67:38">*</operator> <literal type="number" pos:start="67:40" pos:end="67:46">1000000</literal></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:21">return <expr pos:start="69:20" pos:end="69:20"><literal type="number" pos:start="69:20" pos:end="69:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="75:9" pos:end="75:43">/* parse the year-month-day part */</comment>

        <for pos:start="77:9" pos:end="87:9">for <control pos:start="77:13" pos:end="77:54">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">i</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:49"><expr pos:start="77:21" pos:end="77:48"><name pos:start="77:21" pos:end="77:21">i</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <call pos:start="77:25" pos:end="77:48"><name pos:start="77:25" pos:end="77:38">FF_ARRAY_ELEMS</name><argument_list pos:start="77:39" pos:end="77:48">(<argument pos:start="77:40" pos:end="77:47"><expr pos:start="77:40" pos:end="77:47"><name pos:start="77:40" pos:end="77:47">date_fmt</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="77:51" pos:end="77:53"><expr pos:start="77:51" pos:end="77:53"><name pos:start="77:51" pos:end="77:51">i</name><operator pos:start="77:52" pos:end="77:53">++</operator></expr></incr>)</control> <block pos:start="77:56" pos:end="87:9">{<block_content pos:start="79:13" pos:end="85:13">

            <expr_stmt pos:start="79:13" pos:end="79:52"><expr pos:start="79:13" pos:end="79:51"><name pos:start="79:13" pos:end="79:13">q</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <call pos:start="79:17" pos:end="79:51"><name pos:start="79:17" pos:end="79:30">small_strptime</name><argument_list pos:start="79:31" pos:end="79:51">(<argument pos:start="79:32" pos:end="79:32"><expr pos:start="79:32" pos:end="79:32"><name pos:start="79:32" pos:end="79:32">p</name></expr></argument>, <argument pos:start="79:35" pos:end="79:45"><expr pos:start="79:35" pos:end="79:45"><name pos:start="79:35" pos:end="79:45"><name pos:start="79:35" pos:end="79:42">date_fmt</name><index pos:start="79:43" pos:end="79:45">[<expr pos:start="79:44" pos:end="79:44"><name pos:start="79:44" pos:end="79:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="79:48" pos:end="79:50"><expr pos:start="79:48" pos:end="79:50"><operator pos:start="79:48" pos:end="79:48">&amp;</operator><name pos:start="79:49" pos:end="79:50">dt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="85:13"><if pos:start="81:13" pos:end="85:13">if <condition pos:start="81:16" pos:end="81:18">(<expr pos:start="81:17" pos:end="81:17"><name pos:start="81:17" pos:end="81:17">q</name></expr>)</condition> <block pos:start="81:20" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:22">

                <break pos:start="83:17" pos:end="83:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="91:9" pos:end="93:41">/* if the year-month-day part is missing, then take the

         * current year-month-day time */</comment>

        <if_stmt pos:start="95:9" pos:end="113:9"><if pos:start="95:9" pos:end="109:9">if <condition pos:start="95:12" pos:end="95:15">(<expr pos:start="95:13" pos:end="95:14"><operator pos:start="95:13" pos:end="95:13">!</operator><name pos:start="95:14" pos:end="95:14">q</name></expr>)</condition> <block pos:start="95:17" pos:end="109:9">{<block_content pos:start="97:13" pos:end="107:51">

            <if_stmt pos:start="97:13" pos:end="105:13"><if pos:start="97:13" pos:end="101:13">if <condition pos:start="97:16" pos:end="97:23">(<expr pos:start="97:17" pos:end="97:22"><name pos:start="97:17" pos:end="97:22">is_utc</name></expr>)</condition> <block pos:start="97:25" pos:end="101:13">{<block_content pos:start="99:17" pos:end="99:35">

                <expr_stmt pos:start="99:17" pos:end="99:35"><expr pos:start="99:17" pos:end="99:34"><name pos:start="99:17" pos:end="99:18">dt</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <operator pos:start="99:22" pos:end="99:22">*</operator><call pos:start="99:23" pos:end="99:34"><name pos:start="99:23" pos:end="99:28">gmtime</name><argument_list pos:start="99:29" pos:end="99:34">(<argument pos:start="99:30" pos:end="99:33"><expr pos:start="99:30" pos:end="99:33"><operator pos:start="99:30" pos:end="99:30">&amp;</operator><name pos:start="99:31" pos:end="99:33">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="101:15" pos:end="105:13">else <block pos:start="101:20" pos:end="105:13">{<block_content pos:start="103:17" pos:end="103:38">

                <expr_stmt pos:start="103:17" pos:end="103:38"><expr pos:start="103:17" pos:end="103:37"><name pos:start="103:17" pos:end="103:18">dt</name> <operator pos:start="103:20" pos:end="103:20">=</operator> <operator pos:start="103:22" pos:end="103:22">*</operator><call pos:start="103:23" pos:end="103:37"><name pos:start="103:23" pos:end="103:31">localtime</name><argument_list pos:start="103:32" pos:end="103:37">(<argument pos:start="103:33" pos:end="103:36"><expr pos:start="103:33" pos:end="103:36"><operator pos:start="103:33" pos:end="103:33">&amp;</operator><name pos:start="103:34" pos:end="103:36">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:51"><expr pos:start="107:13" pos:end="107:50"><name pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:14">dt</name><operator pos:start="107:15" pos:end="107:15">.</operator><name pos:start="107:16" pos:end="107:22">tm_hour</name></name> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:34"><name pos:start="107:26" pos:end="107:27">dt</name><operator pos:start="107:28" pos:end="107:28">.</operator><name pos:start="107:29" pos:end="107:34">tm_min</name></name> <operator pos:start="107:36" pos:end="107:36">=</operator> <name pos:start="107:38" pos:end="107:46"><name pos:start="107:38" pos:end="107:39">dt</name><operator pos:start="107:40" pos:end="107:40">.</operator><name pos:start="107:41" pos:end="107:46">tm_sec</name></name> <operator pos:start="107:48" pos:end="107:48">=</operator> <literal type="number" pos:start="107:50" pos:end="107:50">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="113:9">else <block pos:start="109:16" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:18">

            <expr_stmt pos:start="111:13" pos:end="111:18"><expr pos:start="111:13" pos:end="111:17"><name pos:start="111:13" pos:end="111:13">p</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <name pos:start="111:17" pos:end="111:17">q</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="117:9" pos:end="119:16"><if pos:start="117:9" pos:end="119:16">if <condition pos:start="117:12" pos:end="117:48">(<expr pos:start="117:13" pos:end="117:47"><operator pos:start="117:13" pos:end="117:13">*</operator><name pos:start="117:14" pos:end="117:14">p</name> <operator pos:start="117:16" pos:end="117:17">==</operator> <literal type="char" pos:start="117:19" pos:end="117:21">'T'</literal> <operator pos:start="117:23" pos:end="117:24">||</operator> <operator pos:start="117:26" pos:end="117:26">*</operator><name pos:start="117:27" pos:end="117:27">p</name> <operator pos:start="117:29" pos:end="117:30">==</operator> <literal type="char" pos:start="117:32" pos:end="117:34">'t'</literal> <operator pos:start="117:36" pos:end="117:37">||</operator> <operator pos:start="117:39" pos:end="117:39">*</operator><name pos:start="117:40" pos:end="117:40">p</name> <operator pos:start="117:42" pos:end="117:43">==</operator> <literal type="char" pos:start="117:45" pos:end="117:47">' '</literal></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:16"><block_content pos:start="119:13" pos:end="119:16">

            <expr_stmt pos:start="119:13" pos:end="119:16"><expr pos:start="119:13" pos:end="119:15"><name pos:start="119:13" pos:end="119:13">p</name><operator pos:start="119:14" pos:end="119:15">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="123:9" pos:end="123:47">/* parse the hour-minute-second part */</comment>

        <for pos:start="125:9" pos:end="135:9">for <control pos:start="125:13" pos:end="125:54">(<init pos:start="125:14" pos:end="125:19"><expr pos:start="125:14" pos:end="125:18"><name pos:start="125:14" pos:end="125:14">i</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <literal type="number" pos:start="125:18" pos:end="125:18">0</literal></expr>;</init> <condition pos:start="125:21" pos:end="125:49"><expr pos:start="125:21" pos:end="125:48"><name pos:start="125:21" pos:end="125:21">i</name> <operator pos:start="125:23" pos:end="125:23">&lt;</operator> <call pos:start="125:25" pos:end="125:48"><name pos:start="125:25" pos:end="125:38">FF_ARRAY_ELEMS</name><argument_list pos:start="125:39" pos:end="125:48">(<argument pos:start="125:40" pos:end="125:47"><expr pos:start="125:40" pos:end="125:47"><name pos:start="125:40" pos:end="125:47">time_fmt</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="125:51" pos:end="125:53"><expr pos:start="125:51" pos:end="125:53"><name pos:start="125:51" pos:end="125:51">i</name><operator pos:start="125:52" pos:end="125:53">++</operator></expr></incr>)</control> <block pos:start="125:56" pos:end="135:9">{<block_content pos:start="127:13" pos:end="133:13">

            <expr_stmt pos:start="127:13" pos:end="127:52"><expr pos:start="127:13" pos:end="127:51"><name pos:start="127:13" pos:end="127:13">q</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <call pos:start="127:17" pos:end="127:51"><name pos:start="127:17" pos:end="127:30">small_strptime</name><argument_list pos:start="127:31" pos:end="127:51">(<argument pos:start="127:32" pos:end="127:32"><expr pos:start="127:32" pos:end="127:32"><name pos:start="127:32" pos:end="127:32">p</name></expr></argument>, <argument pos:start="127:35" pos:end="127:45"><expr pos:start="127:35" pos:end="127:45"><name pos:start="127:35" pos:end="127:45"><name pos:start="127:35" pos:end="127:42">time_fmt</name><index pos:start="127:43" pos:end="127:45">[<expr pos:start="127:44" pos:end="127:44"><name pos:start="127:44" pos:end="127:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="127:48" pos:end="127:50"><expr pos:start="127:48" pos:end="127:50"><operator pos:start="127:48" pos:end="127:48">&amp;</operator><name pos:start="127:49" pos:end="127:50">dt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="133:13"><if pos:start="129:13" pos:end="133:13">if <condition pos:start="129:16" pos:end="129:18">(<expr pos:start="129:17" pos:end="129:17"><name pos:start="129:17" pos:end="129:17">q</name></expr>)</condition> <block pos:start="129:20" pos:end="133:13">{<block_content pos:start="131:17" pos:end="131:22">

                <break pos:start="131:17" pos:end="131:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="137:7" pos:end="175:5">else <block pos:start="137:12" pos:end="175:5">{<block_content pos:start="141:9" pos:end="173:9">

        <comment type="block" pos:start="139:9" pos:end="139:41">/* parse timestr as a duration */</comment>

        <if_stmt pos:start="141:9" pos:end="147:9"><if pos:start="141:9" pos:end="147:9">if <condition pos:start="141:12" pos:end="141:24">(<expr pos:start="141:13" pos:end="141:23"><name pos:start="141:13" pos:end="141:16"><name pos:start="141:13" pos:end="141:13">p</name><index pos:start="141:14" pos:end="141:16">[<expr pos:start="141:15" pos:end="141:15"><literal type="number" pos:start="141:15" pos:end="141:15">0</literal></expr>]</index></name> <operator pos:start="141:18" pos:end="141:19">==</operator> <literal type="char" pos:start="141:21" pos:end="141:23">'-'</literal></expr>)</condition> <block pos:start="141:26" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:16">

            <expr_stmt pos:start="143:13" pos:end="143:25"><expr pos:start="143:13" pos:end="143:24"><name pos:start="143:13" pos:end="143:20">negative</name> <operator pos:start="143:22" pos:end="143:22">=</operator> <literal type="number" pos:start="143:24" pos:end="143:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:16"><expr pos:start="145:13" pos:end="145:15"><operator pos:start="145:13" pos:end="145:14">++</operator><name pos:start="145:15" pos:end="145:15">p</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="149:9" pos:end="149:39">/* parse timestr as HH:MM:SS */</comment>

        <expr_stmt pos:start="151:9" pos:end="151:48"><expr pos:start="151:9" pos:end="151:47"><name pos:start="151:9" pos:end="151:9">q</name> <operator pos:start="151:11" pos:end="151:11">=</operator> <call pos:start="151:13" pos:end="151:47"><name pos:start="151:13" pos:end="151:26">small_strptime</name><argument_list pos:start="151:27" pos:end="151:47">(<argument pos:start="151:28" pos:end="151:28"><expr pos:start="151:28" pos:end="151:28"><name pos:start="151:28" pos:end="151:28">p</name></expr></argument>, <argument pos:start="151:31" pos:end="151:41"><expr pos:start="151:31" pos:end="151:41"><name pos:start="151:31" pos:end="151:41"><name pos:start="151:31" pos:end="151:38">time_fmt</name><index pos:start="151:39" pos:end="151:41">[<expr pos:start="151:40" pos:end="151:40"><literal type="number" pos:start="151:40" pos:end="151:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:44" pos:end="151:46"><expr pos:start="151:44" pos:end="151:46"><operator pos:start="151:44" pos:end="151:44">&amp;</operator><name pos:start="151:45" pos:end="151:46">dt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="153:9" pos:end="173:9"><if pos:start="153:9" pos:end="173:9">if <condition pos:start="153:12" pos:end="153:15">(<expr pos:start="153:13" pos:end="153:14"><operator pos:start="153:13" pos:end="153:13">!</operator><name pos:start="153:14" pos:end="153:14">q</name></expr>)</condition> <block pos:start="153:17" pos:end="173:9">{<block_content pos:start="157:13" pos:end="171:27">

            <comment type="block" pos:start="155:13" pos:end="155:37">/* parse timestr as S+ */</comment>

            <expr_stmt pos:start="157:13" pos:end="157:50"><expr pos:start="157:13" pos:end="157:49"><name pos:start="157:13" pos:end="157:21"><name pos:start="157:13" pos:end="157:14">dt</name><operator pos:start="157:15" pos:end="157:15">.</operator><name pos:start="157:16" pos:end="157:21">tm_sec</name></name> <operator pos:start="157:23" pos:end="157:23">=</operator> <call pos:start="157:25" pos:end="157:49"><name pos:start="157:25" pos:end="157:30">strtol</name><argument_list pos:start="157:31" pos:end="157:49">(<argument pos:start="157:32" pos:end="157:32"><expr pos:start="157:32" pos:end="157:32"><name pos:start="157:32" pos:end="157:32">p</name></expr></argument>, <argument pos:start="157:35" pos:end="157:44"><expr pos:start="157:35" pos:end="157:44"><operator pos:start="157:35" pos:end="157:35">(</operator><name pos:start="157:36" pos:end="157:39">void</name> <operator pos:start="157:41" pos:end="157:41">*</operator><operator pos:start="157:42" pos:end="157:42">)</operator><operator pos:start="157:43" pos:end="157:43">&amp;</operator><name pos:start="157:44" pos:end="157:44">q</name></expr></argument>, <argument pos:start="157:47" pos:end="157:48"><expr pos:start="157:47" pos:end="157:48"><literal type="number" pos:start="157:47" pos:end="157:48">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="167:13"><if pos:start="159:13" pos:end="167:13">if <condition pos:start="159:16" pos:end="159:23">(<expr pos:start="159:17" pos:end="159:22"><name pos:start="159:17" pos:end="159:17">q</name> <operator pos:start="159:19" pos:end="159:20">==</operator> <name pos:start="159:22" pos:end="159:22">p</name></expr>)</condition> <block pos:start="159:25" pos:end="167:13">{<block_content pos:start="163:17" pos:end="165:39">

                <comment type="block" pos:start="161:17" pos:end="161:48">/* the parsing didn't succeed */</comment>

                <expr_stmt pos:start="163:17" pos:end="163:37"><expr pos:start="163:17" pos:end="163:36"><operator pos:start="163:17" pos:end="163:17">*</operator><name pos:start="163:18" pos:end="163:24">timeval</name> <operator pos:start="163:26" pos:end="163:26">=</operator> <name pos:start="163:28" pos:end="163:36">INT64_MIN</name></expr>;</expr_stmt>

                <return pos:start="165:17" pos:end="165:39">return <expr pos:start="165:24" pos:end="165:38"><call pos:start="165:24" pos:end="165:38"><name pos:start="165:24" pos:end="165:30">AVERROR</name><argument_list pos:start="165:31" pos:end="165:38">(<argument pos:start="165:32" pos:end="165:37"><expr pos:start="165:32" pos:end="165:37"><name pos:start="165:32" pos:end="165:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:26"><expr pos:start="169:13" pos:end="169:25"><name pos:start="169:13" pos:end="169:21"><name pos:start="169:13" pos:end="169:14">dt</name><operator pos:start="169:15" pos:end="169:15">.</operator><name pos:start="169:16" pos:end="169:21">tm_min</name></name> <operator pos:start="169:23" pos:end="169:23">=</operator> <literal type="number" pos:start="169:25" pos:end="169:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:27"><expr pos:start="171:13" pos:end="171:26"><name pos:start="171:13" pos:end="171:22"><name pos:start="171:13" pos:end="171:14">dt</name><operator pos:start="171:15" pos:end="171:15">.</operator><name pos:start="171:16" pos:end="171:22">tm_hour</name></name> <operator pos:start="171:24" pos:end="171:24">=</operator> <literal type="number" pos:start="171:26" pos:end="171:26">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="179:5" pos:end="179:52">/* Now we have all the fields that we can get */</comment>

    <if_stmt pos:start="181:5" pos:end="187:5"><if pos:start="181:5" pos:end="187:5">if <condition pos:start="181:8" pos:end="181:11">(<expr pos:start="181:9" pos:end="181:10"><operator pos:start="181:9" pos:end="181:9">!</operator><name pos:start="181:10" pos:end="181:10">q</name></expr>)</condition> <block pos:start="181:13" pos:end="187:5">{<block_content pos:start="183:9" pos:end="185:31">

        <expr_stmt pos:start="183:9" pos:end="183:29"><expr pos:start="183:9" pos:end="183:28"><operator pos:start="183:9" pos:end="183:9">*</operator><name pos:start="183:10" pos:end="183:16">timeval</name> <operator pos:start="183:18" pos:end="183:18">=</operator> <name pos:start="183:20" pos:end="183:28">INT64_MIN</name></expr>;</expr_stmt>

        <return pos:start="185:9" pos:end="185:31">return <expr pos:start="185:16" pos:end="185:30"><call pos:start="185:16" pos:end="185:30"><name pos:start="185:16" pos:end="185:22">AVERROR</name><argument_list pos:start="185:23" pos:end="185:30">(<argument pos:start="185:24" pos:end="185:29"><expr pos:start="185:24" pos:end="185:29"><name pos:start="185:24" pos:end="185:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="191:5" pos:end="209:5"><if pos:start="191:5" pos:end="195:5">if <condition pos:start="191:8" pos:end="191:17">(<expr pos:start="191:9" pos:end="191:16"><name pos:start="191:9" pos:end="191:16">duration</name></expr>)</condition> <block pos:start="191:19" pos:end="195:5">{<block_content pos:start="193:9" pos:end="193:59">

        <expr_stmt pos:start="193:9" pos:end="193:59"><expr pos:start="193:9" pos:end="193:58"><name pos:start="193:9" pos:end="193:9">t</name> <operator pos:start="193:11" pos:end="193:11">=</operator> <name pos:start="193:13" pos:end="193:22"><name pos:start="193:13" pos:end="193:14">dt</name><operator pos:start="193:15" pos:end="193:15">.</operator><name pos:start="193:16" pos:end="193:22">tm_hour</name></name> <operator pos:start="193:24" pos:end="193:24">*</operator> <literal type="number" pos:start="193:26" pos:end="193:31">3600</literal> <operator pos:start="193:31" pos:end="193:31">+</operator> <name pos:start="193:33" pos:end="193:41"><name pos:start="193:33" pos:end="193:34">dt</name><operator pos:start="193:35" pos:end="193:35">.</operator><name pos:start="193:36" pos:end="193:41">tm_min</name></name> <operator pos:start="193:43" pos:end="193:43">*</operator> <literal type="number" pos:start="193:45" pos:end="193:48">60</literal> <operator pos:start="193:48" pos:end="193:48">+</operator> <name pos:start="193:50" pos:end="193:58"><name pos:start="193:50" pos:end="193:51">dt</name><operator pos:start="193:52" pos:end="193:52">.</operator><name pos:start="193:53" pos:end="193:58">tm_sec</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="195:7" pos:end="209:5">else <block pos:start="195:12" pos:end="209:5">{<block_content pos:start="197:9" pos:end="207:9">

        <expr_stmt pos:start="197:9" pos:end="197:25"><expr pos:start="197:9" pos:end="197:24"><name pos:start="197:9" pos:end="197:19"><name pos:start="197:9" pos:end="197:10">dt</name><operator pos:start="197:11" pos:end="197:11">.</operator><name pos:start="197:12" pos:end="197:19">tm_isdst</name></name> <operator pos:start="197:21" pos:end="197:21">=</operator> <operator pos:start="197:23" pos:end="197:23">-</operator><literal type="number" pos:start="197:24" pos:end="197:24">1</literal></expr>;</expr_stmt>       <comment type="block" pos:start="197:33" pos:end="197:45">/* unknown */</comment>

        <if_stmt pos:start="199:9" pos:end="207:9"><if pos:start="199:9" pos:end="203:9">if <condition pos:start="199:12" pos:end="199:19">(<expr pos:start="199:13" pos:end="199:18"><name pos:start="199:13" pos:end="199:18">is_utc</name></expr>)</condition> <block pos:start="199:21" pos:end="203:9">{<block_content pos:start="201:13" pos:end="201:31">

            <expr_stmt pos:start="201:13" pos:end="201:31"><expr pos:start="201:13" pos:end="201:30"><name pos:start="201:13" pos:end="201:13">t</name> <operator pos:start="201:15" pos:end="201:15">=</operator> <call pos:start="201:17" pos:end="201:30"><name pos:start="201:17" pos:end="201:25">av_timegm</name><argument_list pos:start="201:26" pos:end="201:30">(<argument pos:start="201:27" pos:end="201:29"><expr pos:start="201:27" pos:end="201:29"><operator pos:start="201:27" pos:end="201:27">&amp;</operator><name pos:start="201:28" pos:end="201:29">dt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="203:11" pos:end="207:9">else <block pos:start="203:16" pos:end="207:9">{<block_content pos:start="205:13" pos:end="205:28">

            <expr_stmt pos:start="205:13" pos:end="205:28"><expr pos:start="205:13" pos:end="205:27"><name pos:start="205:13" pos:end="205:13">t</name> <operator pos:start="205:15" pos:end="205:15">=</operator> <call pos:start="205:17" pos:end="205:27"><name pos:start="205:17" pos:end="205:22">mktime</name><argument_list pos:start="205:23" pos:end="205:27">(<argument pos:start="205:24" pos:end="205:26"><expr pos:start="205:24" pos:end="205:26"><operator pos:start="205:24" pos:end="205:24">&amp;</operator><name pos:start="205:25" pos:end="205:26">dt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="213:5" pos:end="213:17"><expr pos:start="213:5" pos:end="213:16"><name pos:start="213:5" pos:end="213:5">t</name> <operator pos:start="213:7" pos:end="213:8">*=</operator> <literal type="number" pos:start="213:10" pos:end="213:16">1000000</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="217:5" pos:end="217:30">/* parse the .m... part */</comment>

    <if_stmt pos:start="219:5" pos:end="237:5"><if pos:start="219:5" pos:end="237:5">if <condition pos:start="219:8" pos:end="219:18">(<expr pos:start="219:9" pos:end="219:17"><operator pos:start="219:9" pos:end="219:9">*</operator><name pos:start="219:10" pos:end="219:10">q</name> <operator pos:start="219:12" pos:end="219:13">==</operator> <literal type="char" pos:start="219:15" pos:end="219:17">'.'</literal></expr>)</condition> <block pos:start="219:20" pos:end="237:5">{<block_content pos:start="221:9" pos:end="235:17">

        <decl_stmt pos:start="221:9" pos:end="221:19"><decl pos:start="221:9" pos:end="221:15"><type pos:start="221:9" pos:end="221:11"><name pos:start="221:9" pos:end="221:11">int</name></type> <name pos:start="221:13" pos:end="221:15">val</name></decl>, <decl pos:start="221:18" pos:end="221:18"><type ref="prev" pos:start="221:9" pos:end="221:11"/><name pos:start="221:18" pos:end="221:18">n</name></decl>;</decl_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:12"><expr pos:start="223:9" pos:end="223:11"><name pos:start="223:9" pos:end="223:9">q</name><operator pos:start="223:10" pos:end="223:11">++</operator></expr>;</expr_stmt>

        <for pos:start="225:9" pos:end="233:9">for <control pos:start="225:13" pos:end="225:55">(<init pos:start="225:14" pos:end="225:33"><expr pos:start="225:14" pos:end="225:20"><name pos:start="225:14" pos:end="225:16">val</name> <operator pos:start="225:18" pos:end="225:18">=</operator> <literal type="number" pos:start="225:20" pos:end="225:20">0</literal></expr><operator pos:start="225:21" pos:end="225:21">,</operator> <expr pos:start="225:23" pos:end="225:32"><name pos:start="225:23" pos:end="225:23">n</name> <operator pos:start="225:25" pos:end="225:25">=</operator> <literal type="number" pos:start="225:27" pos:end="225:32">100000</literal></expr>;</init> <condition pos:start="225:35" pos:end="225:41"><expr pos:start="225:35" pos:end="225:40"><name pos:start="225:35" pos:end="225:35">n</name> <operator pos:start="225:37" pos:end="225:38">&gt;=</operator> <literal type="number" pos:start="225:40" pos:end="225:40">1</literal></expr>;</condition> <incr pos:start="225:43" pos:end="225:54"><expr pos:start="225:43" pos:end="225:49"><name pos:start="225:43" pos:end="225:43">n</name> <operator pos:start="225:45" pos:end="225:46">/=</operator> <literal type="number" pos:start="225:48" pos:end="225:49">10</literal></expr><operator pos:start="225:50" pos:end="225:50">,</operator> <expr pos:start="225:52" pos:end="225:54"><name pos:start="225:52" pos:end="225:52">q</name><operator pos:start="225:53" pos:end="225:54">++</operator></expr></incr>)</control> <block pos:start="225:57" pos:end="233:9">{<block_content pos:start="227:13" pos:end="231:34">

            <if_stmt pos:start="227:13" pos:end="229:22"><if pos:start="227:13" pos:end="229:22">if <condition pos:start="227:16" pos:end="227:29">(<expr pos:start="227:17" pos:end="227:28"><operator pos:start="227:17" pos:end="227:17">!</operator><call pos:start="227:18" pos:end="227:28"><name pos:start="227:18" pos:end="227:24">isdigit</name><argument_list pos:start="227:25" pos:end="227:28">(<argument pos:start="227:26" pos:end="227:27"><expr pos:start="227:26" pos:end="227:27"><operator pos:start="227:26" pos:end="227:26">*</operator><name pos:start="227:27" pos:end="227:27">q</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="229:17" pos:end="229:22"><block_content pos:start="229:17" pos:end="229:22">

                <break pos:start="229:17" pos:end="229:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:34"><expr pos:start="231:13" pos:end="231:33"><name pos:start="231:13" pos:end="231:15">val</name> <operator pos:start="231:17" pos:end="231:18">+=</operator> <name pos:start="231:20" pos:end="231:20">n</name> <operator pos:start="231:22" pos:end="231:22">*</operator> <operator pos:start="231:24" pos:end="231:24">(</operator><operator pos:start="231:25" pos:end="231:25">*</operator><name pos:start="231:26" pos:end="231:26">q</name> <operator pos:start="231:28" pos:end="231:28">-</operator> <literal type="char" pos:start="231:30" pos:end="231:32">'0'</literal><operator pos:start="231:33" pos:end="231:33">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="235:9" pos:end="235:17"><expr pos:start="235:9" pos:end="235:16"><name pos:start="235:9" pos:end="235:9">t</name> <operator pos:start="235:11" pos:end="235:12">+=</operator> <name pos:start="235:14" pos:end="235:16">val</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:33"><expr pos:start="239:5" pos:end="239:32"><operator pos:start="239:5" pos:end="239:5">*</operator><name pos:start="239:6" pos:end="239:12">timeval</name> <operator pos:start="239:14" pos:end="239:14">=</operator> <ternary pos:start="239:16" pos:end="239:32"><condition pos:start="239:16" pos:end="239:25"><expr pos:start="239:16" pos:end="239:23"><name pos:start="239:16" pos:end="239:23">negative</name></expr> ?</condition><then pos:start="239:27" pos:end="239:28"> <expr pos:start="239:27" pos:end="239:28"><operator pos:start="239:27" pos:end="239:27">-</operator><name pos:start="239:28" pos:end="239:28">t</name></expr> </then><else pos:start="239:30" pos:end="239:32">: <expr pos:start="239:32" pos:end="239:32"><name pos:start="239:32" pos:end="239:32">t</name></expr></else></ternary></expr>;</expr_stmt>

    <return pos:start="241:5" pos:end="241:13">return <expr pos:start="241:12" pos:end="241:12"><literal type="number" pos:start="241:12" pos:end="241:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
