<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18957.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:14"><name pos:start="1:1" pos:end="1:13">FFAMediaCodec</name><modifier pos:start="1:14" pos:end="1:14">*</modifier></type> <name pos:start="1:16" pos:end="1:49">ff_AMediaCodec_createEncoderByType</name><parameter_list pos:start="1:50" pos:end="1:67">(<parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:62"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:60">char</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">mime</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:16">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">JNIEnv</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">env</name> <init pos:start="5:17" pos:end="5:22">= <expr pos:start="5:19" pos:end="5:22"><name pos:start="5:19" pos:end="5:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">FFAMediaCodec</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:24">codec</name> <init pos:start="7:26" pos:end="7:31">= <expr pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">jstring</name></type> <name pos:start="9:13" pos:end="9:21">mime_type</name> <init pos:start="9:23" pos:end="9:28">= <expr pos:start="9:25" pos:end="9:28"><name pos:start="9:25" pos:end="9:28">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:46"><expr pos:start="13:5" pos:end="13:45"><name pos:start="13:5" pos:end="13:9">codec</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:45"><name pos:start="13:13" pos:end="13:22">av_mallocz</name><argument_list pos:start="13:23" pos:end="13:45">(<argument pos:start="13:24" pos:end="13:44"><expr pos:start="13:24" pos:end="13:44"><sizeof pos:start="13:24" pos:end="13:44">sizeof<argument_list pos:start="13:30" pos:end="13:44">(<argument pos:start="13:31" pos:end="13:43"><expr pos:start="13:31" pos:end="13:43"><name pos:start="13:31" pos:end="13:43">FFAMediaCodec</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:15">(<expr pos:start="15:9" pos:end="15:14"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:14">codec</name></expr>)</condition> <block pos:start="15:17" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:9">codec</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:16">class</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <operator pos:start="21:20" pos:end="21:20">&amp;</operator><name pos:start="21:21" pos:end="21:37">amediacodec_class</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:7">env</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:31"><name pos:start="25:11" pos:end="25:24">ff_jni_get_env</name><argument_list pos:start="25:25" pos:end="25:31">(<argument pos:start="25:26" pos:end="25:30"><expr pos:start="25:26" pos:end="25:30"><name pos:start="25:26" pos:end="25:30">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:12">env</name></expr>)</condition> <block pos:start="27:15" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:20">

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><call pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:16">av_freep</name><argument_list pos:start="29:17" pos:end="29:24">(<argument pos:start="29:18" pos:end="29:23"><expr pos:start="29:18" pos:end="29:23"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:23">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:20">return <expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:89">(<expr pos:start="37:9" pos:end="37:88"><call pos:start="37:9" pos:end="37:84"><name pos:start="37:9" pos:end="37:27">ff_jni_init_jfields</name><argument_list pos:start="37:28" pos:end="37:84">(<argument pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:31">env</name></expr></argument>, <argument pos:start="37:34" pos:end="37:48"><expr pos:start="37:34" pos:end="37:48"><operator pos:start="37:34" pos:end="37:34">&amp;</operator><name pos:start="37:35" pos:end="37:48"><name pos:start="37:35" pos:end="37:39">codec</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:48">jfields</name></name></expr></argument>, <argument pos:start="37:51" pos:end="37:73"><expr pos:start="37:51" pos:end="37:73"><name pos:start="37:51" pos:end="37:73">jni_amediacodec_mapping</name></expr></argument>, <argument pos:start="37:76" pos:end="37:76"><expr pos:start="37:76" pos:end="37:76"><literal type="number" pos:start="37:76" pos:end="37:76">1</literal></expr></argument>, <argument pos:start="37:79" pos:end="37:83"><expr pos:start="37:79" pos:end="37:83"><name pos:start="37:79" pos:end="37:83">codec</name></expr></argument>)</argument_list></call> <operator pos:start="37:86" pos:end="37:86">&lt;</operator> <literal type="number" pos:start="37:88" pos:end="37:88">0</literal></expr>)</condition> <block pos:start="37:91" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:18">

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:62"><expr pos:start="45:5" pos:end="45:61"><name pos:start="45:5" pos:end="45:13">mime_type</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:61"><name pos:start="45:17" pos:end="45:43">ff_jni_utf_chars_to_jstring</name><argument_list pos:start="45:44" pos:end="45:61">(<argument pos:start="45:45" pos:end="45:47"><expr pos:start="45:45" pos:end="45:47"><name pos:start="45:45" pos:end="45:47">env</name></expr></argument>, <argument pos:start="45:50" pos:end="45:53"><expr pos:start="45:50" pos:end="45:53"><name pos:start="45:50" pos:end="45:53">mime</name></expr></argument>, <argument pos:start="45:56" pos:end="45:60"><expr pos:start="45:56" pos:end="45:60"><name pos:start="45:56" pos:end="45:60">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:19">(<expr pos:start="47:9" pos:end="47:18"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:18">mime_type</name></expr>)</condition> <block pos:start="47:21" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:18">

        <goto pos:start="49:9" pos:end="49:18">goto <name pos:start="49:14" pos:end="49:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:142"><expr pos:start="55:5" pos:end="55:141"><name pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:9">codec</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:17">object</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <call pos:start="55:21" pos:end="55:141"><name pos:start="55:21" pos:end="55:50"><operator pos:start="55:21" pos:end="55:21">(</operator><operator pos:start="55:22" pos:end="55:22">*</operator><name pos:start="55:23" pos:end="55:25">env</name><operator pos:start="55:26" pos:end="55:26">)</operator><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:50">CallStaticObjectMethod</name></name><argument_list pos:start="55:51" pos:end="55:141">(<argument pos:start="55:52" pos:end="55:54"><expr pos:start="55:52" pos:end="55:54"><name pos:start="55:52" pos:end="55:54">env</name></expr></argument>, <argument pos:start="55:57" pos:end="55:87"><expr pos:start="55:57" pos:end="55:87"><name pos:start="55:57" pos:end="55:87"><name pos:start="55:57" pos:end="55:61">codec</name><operator pos:start="55:62" pos:end="55:63">-&gt;</operator><name pos:start="55:64" pos:end="55:70">jfields</name><operator pos:start="55:71" pos:end="55:71">.</operator><name pos:start="55:72" pos:end="55:87">mediacodec_class</name></name></expr></argument>, <argument pos:start="55:90" pos:end="55:129"><expr pos:start="55:90" pos:end="55:129"><name pos:start="55:90" pos:end="55:129"><name pos:start="55:90" pos:end="55:94">codec</name><operator pos:start="55:95" pos:end="55:96">-&gt;</operator><name pos:start="55:97" pos:end="55:103">jfields</name><operator pos:start="55:104" pos:end="55:104">.</operator><name pos:start="55:105" pos:end="55:129">create_encoder_by_type_id</name></name></expr></argument>, <argument pos:start="55:132" pos:end="55:140"><expr pos:start="55:132" pos:end="55:140"><name pos:start="55:132" pos:end="55:140">mime_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:50">(<expr pos:start="57:9" pos:end="57:49"><call pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:30">ff_jni_exception_check</name><argument_list pos:start="57:31" pos:end="57:45">(<argument pos:start="57:32" pos:end="57:34"><expr pos:start="57:32" pos:end="57:34"><name pos:start="57:32" pos:end="57:34">env</name></expr></argument>, <argument pos:start="57:37" pos:end="57:37"><expr pos:start="57:37" pos:end="57:37"><literal type="number" pos:start="57:37" pos:end="57:37">1</literal></expr></argument>, <argument pos:start="57:40" pos:end="57:44"><expr pos:start="57:40" pos:end="57:44"><name pos:start="57:40" pos:end="57:44">codec</name></expr></argument>)</argument_list></call> <operator pos:start="57:47" pos:end="57:47">&lt;</operator> <literal type="number" pos:start="57:49" pos:end="57:49">0</literal></expr>)</condition> <block pos:start="57:52" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:18">

        <goto pos:start="59:9" pos:end="59:18">goto <name pos:start="59:14" pos:end="59:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:61"><expr pos:start="65:5" pos:end="65:60"><name pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:9">codec</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:17">object</name></name> <operator pos:start="65:19" pos:end="65:19">=</operator> <call pos:start="65:21" pos:end="65:60"><name pos:start="65:21" pos:end="65:40"><operator pos:start="65:21" pos:end="65:21">(</operator><operator pos:start="65:22" pos:end="65:22">*</operator><name pos:start="65:23" pos:end="65:25">env</name><operator pos:start="65:26" pos:end="65:26">)</operator><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:40">NewGlobalRef</name></name><argument_list pos:start="65:41" pos:end="65:60">(<argument pos:start="65:42" pos:end="65:44"><expr pos:start="65:42" pos:end="65:44"><name pos:start="65:42" pos:end="65:44">env</name></expr></argument>, <argument pos:start="65:47" pos:end="65:59"><expr pos:start="65:47" pos:end="65:59"><name pos:start="65:47" pos:end="65:59"><name pos:start="65:47" pos:end="65:51">codec</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:59">object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:23">(<expr pos:start="67:9" pos:end="67:22"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:22"><name pos:start="67:10" pos:end="67:14">codec</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:22">object</name></name></expr>)</condition> <block pos:start="67:25" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:18">

        <goto pos:start="69:9" pos:end="69:18">goto <name pos:start="69:14" pos:end="69:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:44">(<expr pos:start="75:9" pos:end="75:43"><call pos:start="75:9" pos:end="75:39"><name pos:start="75:9" pos:end="75:32">codec_init_static_fields</name><argument_list pos:start="75:33" pos:end="75:39">(<argument pos:start="75:34" pos:end="75:38"><expr pos:start="75:34" pos:end="75:38"><name pos:start="75:34" pos:end="75:38">codec</name></expr></argument>)</argument_list></call> <operator pos:start="75:41" pos:end="75:41">&lt;</operator> <literal type="number" pos:start="75:43" pos:end="75:43">0</literal></expr>)</condition> <block pos:start="75:46" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:18">

        <goto pos:start="77:9" pos:end="77:18">goto <name pos:start="77:14" pos:end="77:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="87:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:82">(<expr pos:start="83:9" pos:end="83:81"><name pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:13">codec</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:22">jfields</name><operator pos:start="83:23" pos:end="83:23">.</operator><name pos:start="83:24" pos:end="83:42">get_input_buffer_id</name></name> <operator pos:start="83:44" pos:end="83:45">&amp;&amp;</operator> <name pos:start="83:47" pos:end="83:81"><name pos:start="83:47" pos:end="83:51">codec</name><operator pos:start="83:52" pos:end="83:53">-&gt;</operator><name pos:start="83:54" pos:end="83:60">jfields</name><operator pos:start="83:61" pos:end="83:61">.</operator><name pos:start="83:62" pos:end="83:81">get_output_buffer_id</name></name></expr>)</condition> <block pos:start="83:84" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:38">

        <expr_stmt pos:start="85:9" pos:end="85:38"><expr pos:start="85:9" pos:end="85:37"><name pos:start="85:9" pos:end="85:33"><name pos:start="85:9" pos:end="85:13">codec</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:33">has_get_i_o_buffer</name></name> <operator pos:start="85:35" pos:end="85:35">=</operator> <literal type="number" pos:start="85:37" pos:end="85:37">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="91:5" pos:end="91:17">return <expr pos:start="91:12" pos:end="91:16"><name pos:start="91:12" pos:end="91:16">codec</name></expr>;</return>

<label pos:start="93:1" pos:end="93:5"><name pos:start="93:1" pos:end="93:4">fail</name>:</label>

    <expr_stmt pos:start="95:5" pos:end="95:82"><expr pos:start="95:5" pos:end="95:81"><call pos:start="95:5" pos:end="95:81"><name pos:start="95:5" pos:end="95:24">ff_jni_reset_jfields</name><argument_list pos:start="95:25" pos:end="95:81">(<argument pos:start="95:26" pos:end="95:28"><expr pos:start="95:26" pos:end="95:28"><name pos:start="95:26" pos:end="95:28">env</name></expr></argument>, <argument pos:start="95:31" pos:end="95:45"><expr pos:start="95:31" pos:end="95:45"><operator pos:start="95:31" pos:end="95:31">&amp;</operator><name pos:start="95:32" pos:end="95:45"><name pos:start="95:32" pos:end="95:36">codec</name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:45">jfields</name></name></expr></argument>, <argument pos:start="95:48" pos:end="95:70"><expr pos:start="95:48" pos:end="95:70"><name pos:start="95:48" pos:end="95:70">jni_amediacodec_mapping</name></expr></argument>, <argument pos:start="95:73" pos:end="95:73"><expr pos:start="95:73" pos:end="95:73"><literal type="number" pos:start="95:73" pos:end="95:73">1</literal></expr></argument>, <argument pos:start="95:76" pos:end="95:80"><expr pos:start="95:76" pos:end="95:80"><name pos:start="95:76" pos:end="95:80">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="103:5"><if pos:start="99:5" pos:end="103:5">if <condition pos:start="99:8" pos:end="99:18">(<expr pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:17">mime_type</name></expr>)</condition> <block pos:start="99:20" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:47">

        <expr_stmt pos:start="101:9" pos:end="101:47"><expr pos:start="101:9" pos:end="101:46"><call pos:start="101:9" pos:end="101:46"><name pos:start="101:9" pos:end="101:30"><operator pos:start="101:9" pos:end="101:9">(</operator><operator pos:start="101:10" pos:end="101:10">*</operator><name pos:start="101:11" pos:end="101:13">env</name><operator pos:start="101:14" pos:end="101:14">)</operator><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:30">DeleteLocalRef</name></name><argument_list pos:start="101:31" pos:end="101:46">(<argument pos:start="101:32" pos:end="101:34"><expr pos:start="101:32" pos:end="101:34"><name pos:start="101:32" pos:end="101:34">env</name></expr></argument>, <argument pos:start="101:37" pos:end="101:45"><expr pos:start="101:37" pos:end="101:45"><name pos:start="101:37" pos:end="101:45">mime_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:21"><expr pos:start="107:5" pos:end="107:20"><call pos:start="107:5" pos:end="107:20"><name pos:start="107:5" pos:end="107:12">av_freep</name><argument_list pos:start="107:13" pos:end="107:20">(<argument pos:start="107:14" pos:end="107:19"><expr pos:start="107:14" pos:end="107:19"><operator pos:start="107:14" pos:end="107:14">&amp;</operator><name pos:start="107:15" pos:end="107:19">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="111:5" pos:end="111:16">return <expr pos:start="111:12" pos:end="111:15"><name pos:start="111:12" pos:end="111:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
