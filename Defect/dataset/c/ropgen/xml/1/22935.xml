<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22935.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:62"><name pos:start="1:1" pos:end="1:17">restore_fpu_state</name><argument_list pos:start="1:18" pos:end="1:62">(<argument pos:start="1:19" pos:end="1:36">CPUSPARCState *env</argument>, <argument pos:start="1:39" pos:end="1:61">qemu_siginfo_fpu_t *fpu</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:9" pos:end="71:19">

        <decl_stmt pos:start="5:9" pos:end="52:0"><decl pos:start="5:9" pos:end="5:15"><type pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:15">err</name></decl>;</decl_stmt>

<cpp:if pos:start="7:1" pos:end="7:5">#<cpp:directive pos:start="7:2" pos:end="7:3">if</cpp:directive> <expr pos:start="7:5" pos:end="7:5"><literal type="number" pos:start="7:5" pos:end="7:5">0</literal></expr></cpp:if>

<cpp:ifdef pos:start="9:1" pos:end="9:17">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:17">CONFIG_SMP</name></cpp:ifdef>

        if (current-&gt;flags &amp; PF_USEDFPU)

                regs-&gt;psr &amp;= ~PSR_EF;

<cpp:else pos:start="15:1" pos:end="15:5">#<cpp:directive pos:start="15:2" pos:end="15:5">else</cpp:directive></cpp:else>

        if (current == last_task_used_math) {

                last_task_used_math = 0;

                regs-&gt;psr &amp;= ~PSR_EF;

        }

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

        current-&gt;used_math = 1;

        current-&gt;flags &amp;= ~PF_USEDFPU;

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="33:1" pos:end="33:5">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:5"><literal type="number" pos:start="33:5" pos:end="33:5">0</literal></expr></cpp:if>

        if (verify_area (VERIFY_READ, fpu, sizeof(*fpu)))

                return -EFAULT;

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="43:1" pos:end="43:5">#<cpp:directive pos:start="43:2" pos:end="43:3">if</cpp:directive> <expr pos:start="43:5" pos:end="43:5"><literal type="number" pos:start="43:5" pos:end="43:5">0</literal></expr></cpp:if>

        <comment type="block" pos:start="45:9" pos:end="45:28">/* XXX: incorrect */</comment>

        err = __copy_from_user(&amp;env-&gt;fpr[0], &amp;fpu-&gt;si_float_regs[0],

	                             (sizeof(unsigned long) * 32));

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="53:9" pos:end="70:0"><expr pos:start="53:9" pos:end="53:49"><name pos:start="53:9" pos:end="53:11">err</name> <operator pos:start="53:13" pos:end="53:14">|=</operator> <call pos:start="53:16" pos:end="53:49"><name pos:start="53:16" pos:end="53:25">__get_user</name><argument_list pos:start="53:26" pos:end="53:49">(<argument pos:start="53:27" pos:end="53:34"><expr pos:start="53:27" pos:end="53:34"><name pos:start="53:27" pos:end="53:34"><name pos:start="53:27" pos:end="53:29">env</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:34">fsr</name></name></expr></argument>, <argument pos:start="53:37" pos:end="53:48"><expr pos:start="53:37" pos:end="53:48"><operator pos:start="53:37" pos:end="53:37">&amp;</operator><name pos:start="53:38" pos:end="53:48"><name pos:start="53:38" pos:end="53:40">fpu</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:48">si_fsr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="55:1" pos:end="55:5">#<cpp:directive pos:start="55:2" pos:end="55:3">if</cpp:directive> <expr pos:start="55:5" pos:end="55:5"><literal type="number" pos:start="55:5" pos:end="55:5">0</literal></expr></cpp:if>

        err |= __get_user(current-&gt;thread.fpqdepth, &amp;fpu-&gt;si_fpqdepth);

        if (current-&gt;thread.fpqdepth != 0)

                err |= __copy_from_user(&amp;current-&gt;thread.fpqueue[0],

                                        &amp;fpu-&gt;si_fpqueue[0],

                                        ((sizeof(unsigned long) +

                                        (sizeof(unsigned long *)))*16));

<cpp:endif pos:start="69:1" pos:end="69:6">#<cpp:directive pos:start="69:2" pos:end="69:6">endif</cpp:directive></cpp:endif>

        <return pos:start="71:9" pos:end="71:19">return <expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">err</name></expr>;</return>

</block_content>}</block>
</unit>
