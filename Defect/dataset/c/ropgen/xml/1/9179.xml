<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9179.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ff_xvmc_field_start</name><parameter_list pos:start="1:24" pos:end="1:65">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:38">MpegEncContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:64"><decl pos:start="1:44" pos:end="1:64"><type pos:start="1:44" pos:end="1:64"><name pos:start="1:44" pos:end="1:57">AVCodecContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:64">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:10">

    <decl_stmt pos:start="5:5" pos:end="5:99"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:23">xvmc_pix_fmt</name></name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:29">last</name></decl>, <decl pos:start="5:32" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:25"><modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:36">next</name></decl>, <decl pos:start="5:39" pos:end="5:98"><type ref="prev" pos:start="5:5" pos:end="5:25"><modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:45">render</name> <init pos:start="5:47" pos:end="5:98">= <expr pos:start="5:49" pos:end="5:98"><operator pos:start="5:49" pos:end="5:49">(</operator>struct <name pos:start="5:57" pos:end="5:68">xvmc_pix_fmt</name><operator pos:start="5:69" pos:end="5:69">*</operator><operator pos:start="5:70" pos:end="5:70">)</operator><name pos:start="5:71" pos:end="5:98"><name pos:start="5:71" pos:end="5:71">s</name><operator pos:start="5:72" pos:end="5:73">-&gt;</operator><name pos:start="5:74" pos:end="5:88">current_picture</name><operator pos:start="5:89" pos:end="5:89">.</operator><name pos:start="5:90" pos:end="5:90">f</name><operator pos:start="5:91" pos:end="5:91">.</operator><name pos:start="5:92" pos:end="5:95">data</name><index pos:start="5:96" pos:end="5:98">[<expr pos:start="5:97" pos:end="5:97"><literal type="number" pos:start="5:97" pos:end="5:97">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:28">mb_block_count</name> <init pos:start="7:30" pos:end="7:58">= <expr pos:start="7:32" pos:end="7:58"><literal type="number" pos:start="7:32" pos:end="7:34">4</literal> <operator pos:start="7:34" pos:end="7:34">+</operator> <operator pos:start="7:36" pos:end="7:36">(</operator><literal type="number" pos:start="7:37" pos:end="7:37">1</literal> <operator pos:start="7:39" pos:end="7:40">&lt;&lt;</operator> <name pos:start="7:42" pos:end="7:57"><name pos:start="7:42" pos:end="7:42">s</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:57">chroma_format</name></name><operator pos:start="7:58" pos:end="7:58">)</operator></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:18"><expr pos:start="11:5" pos:end="11:17"><call pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:17">(<argument pos:start="11:12" pos:end="11:16"><expr pos:start="11:12" pos:end="11:16"><name pos:start="11:12" pos:end="11:16">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="29:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="21:27">(<expr pos:start="13:9" pos:end="21:26"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:15">render</name> <operator pos:start="13:17" pos:end="13:18">||</operator> <name pos:start="13:20" pos:end="13:34"><name pos:start="13:20" pos:end="13:25">render</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:34">xvmc_id</name></name> <operator pos:start="13:36" pos:end="13:37">!=</operator> <name pos:start="13:39" pos:end="13:48">AV_XVMC_ID</name> <operator pos:start="13:50" pos:end="13:51">||</operator>

        <operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:28"><name pos:start="15:10" pos:end="15:15">render</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:28">data_blocks</name></name> <operator pos:start="15:30" pos:end="15:31">||</operator> <operator pos:start="15:33" pos:end="15:33">!</operator><name pos:start="15:34" pos:end="15:50"><name pos:start="15:34" pos:end="15:39">render</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:50">mv_blocks</name></name> <operator pos:start="15:52" pos:end="15:53">||</operator>

        <operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:17">unsigned</name> <name pos:start="17:19" pos:end="17:21">int</name><operator pos:start="17:22" pos:end="17:22">)</operator><name pos:start="17:23" pos:end="17:49"><name pos:start="17:23" pos:end="17:28">render</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:49">allocated_mv_blocks</name></name>   <operator pos:start="17:53" pos:end="17:53">&gt;</operator> <name pos:start="17:55" pos:end="17:61">INT_MAX</name><operator pos:start="17:62" pos:end="17:62">/</operator><operator pos:start="17:63" pos:end="17:63">(</operator><literal type="number" pos:start="17:64" pos:end="17:65">64</literal><operator pos:start="17:66" pos:end="17:66">*</operator><literal type="number" pos:start="17:67" pos:end="17:67">6</literal><operator pos:start="17:68" pos:end="17:68">)</operator> <operator pos:start="17:70" pos:end="17:71">||</operator>

        <operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:17">unsigned</name> <name pos:start="19:19" pos:end="19:21">int</name><operator pos:start="19:22" pos:end="19:22">)</operator><name pos:start="19:23" pos:end="19:51"><name pos:start="19:23" pos:end="19:28">render</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:51">allocated_data_blocks</name></name> <operator pos:start="19:53" pos:end="19:53">&gt;</operator> <name pos:start="19:55" pos:end="19:61">INT_MAX</name><operator pos:start="19:62" pos:end="19:62">/</operator><literal type="number" pos:start="19:63" pos:end="19:64">64</literal>     <operator pos:start="19:70" pos:end="19:71">||</operator>

        <operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:26"><name pos:start="21:10" pos:end="21:15">render</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:26">p_surface</name></name></expr>)</condition> <block pos:start="21:29" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:18">

        <expr_stmt pos:start="23:9" pos:end="25:59"><expr pos:start="23:9" pos:end="25:58"><call pos:start="23:9" pos:end="25:58"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="25:58">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="25:16" pos:end="25:57"><expr pos:start="25:16" pos:end="25:57"><literal type="string" pos:start="25:16" pos:end="25:57">"Render token doesn't look as expected.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return> <comment type="line" pos:start="27:20" pos:end="27:60">// make sure that this is a render packet</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:37">(<expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:14">render</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:36">filled_mv_blocks_num</name></name></expr>)</condition> <block pos:start="33:39" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:18">

        <expr_stmt pos:start="35:9" pos:end="39:45"><expr pos:start="35:9" pos:end="39:44"><call pos:start="35:9" pos:end="39:44"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="39:44">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="37:16" pos:end="37:68"><expr pos:start="37:16" pos:end="37:68"><literal type="string" pos:start="37:16" pos:end="37:68">"Rendering surface contains %i unprocessed blocks.\n"</literal></expr></argument>,

               <argument pos:start="39:16" pos:end="39:43"><expr pos:start="39:16" pos:end="39:43"><name pos:start="39:16" pos:end="39:43"><name pos:start="39:16" pos:end="39:21">render</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:43">filled_mv_blocks_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="63:5"><if pos:start="45:5" pos:end="63:5">if <condition pos:start="45:8" pos:end="55:97">(<expr pos:start="45:9" pos:end="55:96"><name pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:14">render</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:35">allocated_mv_blocks</name></name>   <operator pos:start="45:39" pos:end="45:39">&lt;</operator> <literal type="number" pos:start="45:41" pos:end="45:41">1</literal> <operator pos:start="45:43" pos:end="45:44">||</operator>

        <name pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:14">render</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:37">allocated_data_blocks</name></name> <operator pos:start="47:39" pos:end="47:39">&lt;</operator>  <name pos:start="47:42" pos:end="47:68"><name pos:start="47:42" pos:end="47:47">render</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:68">allocated_mv_blocks</name></name><operator pos:start="47:69" pos:end="47:69">*</operator><name pos:start="47:70" pos:end="47:83">mb_block_count</name> <operator pos:start="47:85" pos:end="47:86">||</operator>

        <name pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:14">render</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:35">start_mv_blocks_num</name></name>   <operator pos:start="49:39" pos:end="49:40">&gt;=</operator> <name pos:start="49:42" pos:end="49:68"><name pos:start="49:42" pos:end="49:47">render</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:68">allocated_mv_blocks</name></name>                <operator pos:start="49:85" pos:end="49:86">||</operator>

        <name pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:14">render</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:40">next_free_data_block_num</name></name> <operator pos:start="51:42" pos:end="51:42">&gt;</operator>

                        <name pos:start="53:25" pos:end="53:53"><name pos:start="53:25" pos:end="53:30">render</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:53">allocated_data_blocks</name></name> <operator pos:start="53:55" pos:end="53:55">-</operator>

                        <name pos:start="55:25" pos:end="55:38">mb_block_count</name><operator pos:start="55:39" pos:end="55:39">*</operator><operator pos:start="55:40" pos:end="55:40">(</operator><name pos:start="55:41" pos:end="55:67"><name pos:start="55:41" pos:end="55:46">render</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:67">allocated_mv_blocks</name></name><operator pos:start="55:68" pos:end="55:68">-</operator><name pos:start="55:69" pos:end="55:95"><name pos:start="55:69" pos:end="55:74">render</name><operator pos:start="55:75" pos:end="55:76">-&gt;</operator><name pos:start="55:77" pos:end="55:95">start_mv_blocks_num</name></name><operator pos:start="55:96" pos:end="55:96">)</operator></expr>)</condition> <block pos:start="55:99" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:18">

        <expr_stmt pos:start="57:9" pos:end="59:92"><expr pos:start="57:9" pos:end="59:91"><call pos:start="57:9" pos:end="59:91"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="59:91">(<argument pos:start="57:16" pos:end="57:20"><expr pos:start="57:16" pos:end="57:20"><name pos:start="57:16" pos:end="57:20">avctx</name></expr></argument>, <argument pos:start="57:23" pos:end="57:34"><expr pos:start="57:23" pos:end="57:34"><name pos:start="57:23" pos:end="57:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="59:16" pos:end="59:90"><expr pos:start="59:16" pos:end="59:90"><literal type="string" pos:start="59:16" pos:end="59:90">"Rendering surface doesn't provide enough block structures to work with.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:18">return <expr pos:start="61:16" pos:end="61:17"><operator pos:start="61:16" pos:end="61:16">-</operator><literal type="number" pos:start="61:17" pos:end="61:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:53"><expr pos:start="67:5" pos:end="67:52"><name pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:10">render</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:29">picture_structure</name></name> <operator pos:start="67:31" pos:end="67:31">=</operator> <name pos:start="67:33" pos:end="67:52"><name pos:start="67:33" pos:end="67:33">s</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:52">picture_structure</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:71"><expr pos:start="69:5" pos:end="69:70"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:10">render</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:17">flags</name></name>             <operator pos:start="69:31" pos:end="69:31">=</operator> <ternary pos:start="69:33" pos:end="69:70"><condition pos:start="69:33" pos:end="69:48"><expr pos:start="69:33" pos:end="69:46"><name pos:start="69:33" pos:end="69:46"><name pos:start="69:33" pos:end="69:33">s</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:46">first_field</name></name></expr> ?</condition><then pos:start="69:50" pos:end="69:50"> <expr pos:start="69:50" pos:end="69:50"><literal type="number" pos:start="69:50" pos:end="69:50">0</literal></expr> </then><else pos:start="69:52" pos:end="69:70">: <expr pos:start="69:54" pos:end="69:70"><name pos:start="69:54" pos:end="69:70">XVMC_SECOND_FIELD</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:37"><expr pos:start="71:5" pos:end="71:36"><name pos:start="71:5" pos:end="71:28"><name pos:start="71:5" pos:end="71:10">render</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:28">p_future_surface</name></name>  <operator pos:start="71:31" pos:end="71:31">=</operator> <name pos:start="71:33" pos:end="71:36">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:37"><expr pos:start="73:5" pos:end="73:36"><name pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:10">render</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:26">p_past_surface</name></name>    <operator pos:start="73:31" pos:end="73:31">=</operator> <name pos:start="73:33" pos:end="73:36">NULL</name></expr>;</expr_stmt>



    <switch pos:start="77:5" pos:end="115:5">switch<condition pos:start="77:11" pos:end="77:24">(<expr pos:start="77:12" pos:end="77:23"><name pos:start="77:12" pos:end="77:23"><name pos:start="77:12" pos:end="77:12">s</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:23">pict_type</name></name></expr>)</condition> <block pos:start="77:26" pos:end="115:5">{<block_content pos:start="79:9" pos:end="113:21">

        <case pos:start="79:9" pos:end="79:32">case  <expr pos:start="79:15" pos:end="79:31"><name pos:start="79:15" pos:end="79:31">AV_PICTURE_TYPE_I</name></expr>:</case>

            <return pos:start="81:13" pos:end="81:21">return <expr pos:start="81:20" pos:end="81:20"><literal type="number" pos:start="81:20" pos:end="81:20">0</literal></expr>;</return> <comment type="line" pos:start="81:23" pos:end="81:56">// no prediction from other frames</comment>

        <case pos:start="83:9" pos:end="83:32">case  <expr pos:start="83:15" pos:end="83:31"><name pos:start="83:15" pos:end="83:31">AV_PICTURE_TYPE_B</name></expr>:</case>

            <expr_stmt pos:start="85:13" pos:end="85:67"><expr pos:start="85:13" pos:end="85:66"><name pos:start="85:13" pos:end="85:16">next</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <operator pos:start="85:20" pos:end="85:20">(</operator>struct <name pos:start="85:28" pos:end="85:39">xvmc_pix_fmt</name><operator pos:start="85:40" pos:end="85:40">*</operator><operator pos:start="85:41" pos:end="85:41">)</operator><name pos:start="85:42" pos:end="85:66"><name pos:start="85:42" pos:end="85:42">s</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:56">next_picture</name><operator pos:start="85:57" pos:end="85:57">.</operator><name pos:start="85:58" pos:end="85:58">f</name><operator pos:start="85:59" pos:end="85:59">.</operator><name pos:start="85:60" pos:end="85:63">data</name><index pos:start="85:64" pos:end="85:66">[<expr pos:start="85:65" pos:end="85:65"><literal type="number" pos:start="85:65" pos:end="85:65">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="87:13" pos:end="89:26"><if pos:start="87:13" pos:end="89:26">if <condition pos:start="87:16" pos:end="87:22">(<expr pos:start="87:17" pos:end="87:21"><operator pos:start="87:17" pos:end="87:17">!</operator><name pos:start="87:18" pos:end="87:21">next</name></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:26"><block_content pos:start="89:17" pos:end="89:26">

                <return pos:start="89:17" pos:end="89:26">return <expr pos:start="89:24" pos:end="89:25"><operator pos:start="89:24" pos:end="89:24">-</operator><literal type="number" pos:start="89:25" pos:end="89:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="91:13" pos:end="93:26"><if pos:start="91:13" pos:end="93:26">if <condition pos:start="91:16" pos:end="91:44">(<expr pos:start="91:17" pos:end="91:43"><name pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:20">next</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:29">xvmc_id</name></name> <operator pos:start="91:31" pos:end="91:32">!=</operator> <name pos:start="91:34" pos:end="91:43">AV_XVMC_ID</name></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:26"><block_content pos:start="93:17" pos:end="93:26">

                <return pos:start="93:17" pos:end="93:26">return <expr pos:start="93:24" pos:end="93:25"><operator pos:start="93:24" pos:end="93:24">-</operator><literal type="number" pos:start="93:25" pos:end="93:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:55"><expr pos:start="95:13" pos:end="95:54"><name pos:start="95:13" pos:end="95:36"><name pos:start="95:13" pos:end="95:18">render</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:36">p_future_surface</name></name> <operator pos:start="95:38" pos:end="95:38">=</operator> <name pos:start="95:40" pos:end="95:54"><name pos:start="95:40" pos:end="95:43">next</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:54">p_surface</name></name></expr>;</expr_stmt>

            <comment type="line" pos:start="97:13" pos:end="97:62">// no return here, going to set forward prediction</comment>

        <case pos:start="99:9" pos:end="99:32">case  <expr pos:start="99:15" pos:end="99:31"><name pos:start="99:15" pos:end="99:31">AV_PICTURE_TYPE_P</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:67"><expr pos:start="101:13" pos:end="101:66"><name pos:start="101:13" pos:end="101:16">last</name> <operator pos:start="101:18" pos:end="101:18">=</operator> <operator pos:start="101:20" pos:end="101:20">(</operator>struct <name pos:start="101:28" pos:end="101:39">xvmc_pix_fmt</name><operator pos:start="101:40" pos:end="101:40">*</operator><operator pos:start="101:41" pos:end="101:41">)</operator><name pos:start="101:42" pos:end="101:66"><name pos:start="101:42" pos:end="101:42">s</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:56">last_picture</name><operator pos:start="101:57" pos:end="101:57">.</operator><name pos:start="101:58" pos:end="101:58">f</name><operator pos:start="101:59" pos:end="101:59">.</operator><name pos:start="101:60" pos:end="101:63">data</name><index pos:start="101:64" pos:end="101:66">[<expr pos:start="101:65" pos:end="101:65"><literal type="number" pos:start="101:65" pos:end="101:65">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="105:30"><if pos:start="103:13" pos:end="105:30">if <condition pos:start="103:16" pos:end="103:22">(<expr pos:start="103:17" pos:end="103:21"><operator pos:start="103:17" pos:end="103:17">!</operator><name pos:start="103:18" pos:end="103:21">last</name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:30"><block_content pos:start="105:17" pos:end="105:30">

                <expr_stmt pos:start="105:17" pos:end="105:30"><expr pos:start="105:17" pos:end="105:29"><name pos:start="105:17" pos:end="105:20">last</name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:29">render</name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="105:32" pos:end="105:69">// predict second field from the first</comment>

            <if_stmt pos:start="107:13" pos:end="109:26"><if pos:start="107:13" pos:end="109:26">if <condition pos:start="107:16" pos:end="107:44">(<expr pos:start="107:17" pos:end="107:43"><name pos:start="107:17" pos:end="107:29"><name pos:start="107:17" pos:end="107:20">last</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:29">xvmc_id</name></name> <operator pos:start="107:31" pos:end="107:32">!=</operator> <name pos:start="107:34" pos:end="107:43">AV_XVMC_ID</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:26"><block_content pos:start="109:17" pos:end="109:26">

                <return pos:start="109:17" pos:end="109:26">return <expr pos:start="109:24" pos:end="109:25"><operator pos:start="109:24" pos:end="109:24">-</operator><literal type="number" pos:start="109:25" pos:end="109:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:53"><expr pos:start="111:13" pos:end="111:52"><name pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:18">render</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:34">p_past_surface</name></name> <operator pos:start="111:36" pos:end="111:36">=</operator> <name pos:start="111:38" pos:end="111:52"><name pos:start="111:38" pos:end="111:41">last</name><operator pos:start="111:42" pos:end="111:43">-&gt;</operator><name pos:start="111:44" pos:end="111:52">p_surface</name></name></expr>;</expr_stmt>

            <return pos:start="113:13" pos:end="113:21">return <expr pos:start="113:20" pos:end="113:20"><literal type="number" pos:start="113:20" pos:end="113:20">0</literal></expr>;</return>

    </block_content>}</block></switch>



<return pos:start="119:1" pos:end="119:10">return <expr pos:start="119:8" pos:end="119:9"><operator pos:start="119:8" pos:end="119:8">-</operator><literal type="number" pos:start="119:9" pos:end="119:9">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
