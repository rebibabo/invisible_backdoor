<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22579.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">h261_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:61">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:43">got_frame</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:60"><decl pos:start="3:46" pos:end="3:60"><type pos:start="3:46" pos:end="3:60"><name pos:start="3:46" pos:end="3:53">AVPacket</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="165:1">{<block_content pos:start="7:5" pos:end="163:43">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">H261Context</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">h</name>     <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">MpegEncContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:21">s</name>  <init pos:start="13:24" pos:end="13:30">= <expr pos:start="13:26" pos:end="13:30"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:27">h</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:30">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:17">pict</name> <init pos:start="17:19" pos:end="17:24">= <expr pos:start="17:21" pos:end="17:24"><name pos:start="17:21" pos:end="17:24">data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:77"><expr pos:start="21:5" pos:end="21:76"><call pos:start="21:5" pos:end="21:76"><name pos:start="21:5" pos:end="21:11">av_dlog</name><argument_list pos:start="21:12" pos:end="21:76">(<argument pos:start="21:13" pos:end="21:17"><expr pos:start="21:13" pos:end="21:17"><name pos:start="21:13" pos:end="21:17">avctx</name></expr></argument>, <argument pos:start="21:20" pos:end="21:44"><expr pos:start="21:20" pos:end="21:44"><literal type="string" pos:start="21:20" pos:end="21:44">"*****frame %d size=%d\n"</literal></expr></argument>, <argument pos:start="21:47" pos:end="21:65"><expr pos:start="21:47" pos:end="21:65"><name pos:start="21:47" pos:end="21:65"><name pos:start="21:47" pos:end="21:51">avctx</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:65">frame_number</name></name></expr></argument>, <argument pos:start="21:68" pos:end="21:75"><expr pos:start="21:68" pos:end="21:75"><name pos:start="21:68" pos:end="21:75">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:74"><expr pos:start="23:5" pos:end="23:73"><call pos:start="23:5" pos:end="23:73"><name pos:start="23:5" pos:end="23:11">av_dlog</name><argument_list pos:start="23:12" pos:end="23:73">(<argument pos:start="23:13" pos:end="23:17"><expr pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:17">avctx</name></expr></argument>, <argument pos:start="23:20" pos:end="23:40"><expr pos:start="23:20" pos:end="23:40"><literal type="string" pos:start="23:20" pos:end="23:40">"bytes=%x %x %x %x\n"</literal></expr></argument>, <argument pos:start="23:43" pos:end="23:48"><expr pos:start="23:43" pos:end="23:48"><name pos:start="23:43" pos:end="23:48"><name pos:start="23:43" pos:end="23:45">buf</name><index pos:start="23:46" pos:end="23:48">[<expr pos:start="23:47" pos:end="23:47"><literal type="number" pos:start="23:47" pos:end="23:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:51" pos:end="23:56"><expr pos:start="23:51" pos:end="23:56"><name pos:start="23:51" pos:end="23:56"><name pos:start="23:51" pos:end="23:53">buf</name><index pos:start="23:54" pos:end="23:56">[<expr pos:start="23:55" pos:end="23:55"><literal type="number" pos:start="23:55" pos:end="23:55">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:59" pos:end="23:64"><expr pos:start="23:59" pos:end="23:64"><name pos:start="23:59" pos:end="23:64"><name pos:start="23:59" pos:end="23:61">buf</name><index pos:start="23:62" pos:end="23:64">[<expr pos:start="23:63" pos:end="23:63"><literal type="number" pos:start="23:63" pos:end="23:63">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:67" pos:end="23:72"><expr pos:start="23:67" pos:end="23:72"><name pos:start="23:67" pos:end="23:72"><name pos:start="23:67" pos:end="23:69">buf</name><index pos:start="23:70" pos:end="23:72">[<expr pos:start="23:71" pos:end="23:71"><literal type="number" pos:start="23:71" pos:end="23:71">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:12">flags</name></name>  <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:21">avctx</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:28">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:13">flags2</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:29"><name pos:start="27:17" pos:end="27:21">avctx</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:29">flags2</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:5">h</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:29">gob_start_code_skipped</name></name> <operator pos:start="31:31" pos:end="31:31">=</operator> <literal type="number" pos:start="31:33" pos:end="31:33">0</literal></expr>;</expr_stmt>



<label pos:start="35:1" pos:end="35:6"><name pos:start="35:1" pos:end="35:5">retry</name>:</label>

    <expr_stmt pos:start="37:5" pos:end="37:45"><expr pos:start="37:5" pos:end="37:44"><call pos:start="37:5" pos:end="37:44"><name pos:start="37:5" pos:end="37:17">init_get_bits</name><argument_list pos:start="37:18" pos:end="37:44">(<argument pos:start="37:19" pos:end="37:24"><expr pos:start="37:19" pos:end="37:24"><operator pos:start="37:19" pos:end="37:19">&amp;</operator><name pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:24">gb</name></name></expr></argument>, <argument pos:start="37:27" pos:end="37:29"><expr pos:start="37:27" pos:end="37:29"><name pos:start="37:27" pos:end="37:29">buf</name></expr></argument>, <argument pos:start="37:32" pos:end="37:43"><expr pos:start="37:32" pos:end="37:43"><name pos:start="37:32" pos:end="37:39">buf_size</name> <operator pos:start="37:41" pos:end="37:41">*</operator> <literal type="number" pos:start="37:43" pos:end="37:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="47:22"><if pos:start="41:5" pos:end="47:22">if <condition pos:start="41:8" pos:end="41:32">(<expr pos:start="41:9" pos:end="41:31"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:31"><name pos:start="41:10" pos:end="41:10">s</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:31">context_initialized</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="47:22"><block_content pos:start="45:9" pos:end="47:22">

        <comment type="line" pos:start="43:9" pos:end="43:66">// we need the IDCT permutaton for reading a custom matrix</comment>

        <if_stmt pos:start="45:9" pos:end="47:22"><if pos:start="45:9" pos:end="47:22">if <condition pos:start="45:12" pos:end="45:38">(<expr pos:start="45:13" pos:end="45:37"><call pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:30">ff_MPV_common_init</name><argument_list pos:start="45:31" pos:end="45:33">(<argument pos:start="45:32" pos:end="45:32"><expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">s</name></expr></argument>)</argument_list></call> <operator pos:start="45:35" pos:end="45:35">&lt;</operator> <literal type="number" pos:start="45:37" pos:end="45:37">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:22"><block_content pos:start="47:13" pos:end="47:22">

            <return pos:start="47:13" pos:end="47:22">return <expr pos:start="47:20" pos:end="47:21"><operator pos:start="47:20" pos:end="47:20">-</operator><literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:39"><name pos:start="51:11" pos:end="51:36">h261_decode_picture_header</name><argument_list pos:start="51:37" pos:end="51:39">(<argument pos:start="51:38" pos:end="51:38"><expr pos:start="51:38" pos:end="51:38"><name pos:start="51:38" pos:end="51:38">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:41">/* skip if the header was thrashed */</comment>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:16">(<expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">&lt;</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>)</condition> <block pos:start="57:18" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:18">

        <expr_stmt pos:start="59:9" pos:end="59:59"><expr pos:start="59:9" pos:end="59:58"><call pos:start="59:9" pos:end="59:58"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="59:58">(<argument pos:start="59:16" pos:end="59:23"><expr pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:23">avctx</name></name></expr></argument>, <argument pos:start="59:26" pos:end="59:37"><expr pos:start="59:26" pos:end="59:37"><name pos:start="59:26" pos:end="59:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:40" pos:end="59:57"><expr pos:start="59:40" pos:end="59:57"><literal type="string" pos:start="59:40" pos:end="59:57">"header damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:18">return <expr pos:start="61:16" pos:end="61:17"><operator pos:start="61:16" pos:end="61:16">-</operator><literal type="number" pos:start="61:17" pos:end="61:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="77:5"><if pos:start="67:5" pos:end="77:5">if <condition pos:start="67:8" pos:end="67:75">(<expr pos:start="67:9" pos:end="67:74"><name pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:16">width</name></name> <operator pos:start="67:18" pos:end="67:19">!=</operator> <name pos:start="67:21" pos:end="67:38"><name pos:start="67:21" pos:end="67:25">avctx</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:38">coded_width</name></name> <operator pos:start="67:40" pos:end="67:41">||</operator> <name pos:start="67:43" pos:end="67:51"><name pos:start="67:43" pos:end="67:43">s</name><operator pos:start="67:44" pos:end="67:45">-&gt;</operator><name pos:start="67:46" pos:end="67:51">height</name></name> <operator pos:start="67:53" pos:end="67:54">!=</operator> <name pos:start="67:56" pos:end="67:74"><name pos:start="67:56" pos:end="67:60">avctx</name><operator pos:start="67:61" pos:end="67:62">-&gt;</operator><name pos:start="67:63" pos:end="67:74">coded_height</name></name></expr>)</condition> <block pos:start="67:77" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:30">

        <decl_stmt pos:start="69:9" pos:end="69:43"><decl pos:start="69:9" pos:end="69:42"><type pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:20">ParseContext</name></type> <name pos:start="69:22" pos:end="69:23">pc</name> <init pos:start="69:25" pos:end="69:42">= <expr pos:start="69:27" pos:end="69:42"><name pos:start="69:27" pos:end="69:42"><name pos:start="69:27" pos:end="69:27">s</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:42">parse_context</name></name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="69:45" pos:end="69:91">// FIXME move this demuxing hack to libavformat</comment>

        <expr_stmt pos:start="71:9" pos:end="71:36"><expr pos:start="71:9" pos:end="71:35"><name pos:start="71:9" pos:end="71:31"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:24">parse_context</name><operator pos:start="71:25" pos:end="71:25">.</operator><name pos:start="71:26" pos:end="71:31">buffer</name></name> <operator pos:start="71:33" pos:end="71:33">=</operator> <literal type="number" pos:start="71:35" pos:end="71:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:29"><expr pos:start="73:9" pos:end="73:28"><call pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:25">ff_MPV_common_end</name><argument_list pos:start="73:26" pos:end="73:28">(<argument pos:start="73:27" pos:end="73:27"><expr pos:start="73:27" pos:end="73:27"><name pos:start="73:27" pos:end="73:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:24">parse_context</name></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <name pos:start="75:28" pos:end="75:29">pc</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="79:5" pos:end="91:5"><if pos:start="79:5" pos:end="91:5">if <condition pos:start="79:8" pos:end="79:32">(<expr pos:start="79:9" pos:end="79:31"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:31"><name pos:start="79:10" pos:end="79:10">s</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:31">context_initialized</name></name></expr>)</condition> <block pos:start="79:34" pos:end="91:5">{<block_content pos:start="81:9" pos:end="89:19">

        <expr_stmt pos:start="81:9" pos:end="81:60"><expr pos:start="81:9" pos:end="81:59"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:59"><name pos:start="81:15" pos:end="81:31">ff_set_dimensions</name><argument_list pos:start="81:32" pos:end="81:59">(<argument pos:start="81:33" pos:end="81:37"><expr pos:start="81:33" pos:end="81:37"><name pos:start="81:33" pos:end="81:37">avctx</name></expr></argument>, <argument pos:start="81:40" pos:end="81:47"><expr pos:start="81:40" pos:end="81:47"><name pos:start="81:40" pos:end="81:47"><name pos:start="81:40" pos:end="81:40">s</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:47">width</name></name></expr></argument>, <argument pos:start="81:50" pos:end="81:58"><expr pos:start="81:50" pos:end="81:58"><name pos:start="81:50" pos:end="81:58"><name pos:start="81:50" pos:end="81:50">s</name><operator pos:start="81:51" pos:end="81:52">-&gt;</operator><name pos:start="81:53" pos:end="81:58">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:23"><if pos:start="83:9" pos:end="85:23">if <condition pos:start="83:12" pos:end="83:20">(<expr pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:17">&lt;</operator> <literal type="number" pos:start="83:19" pos:end="83:19">0</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:23"><block_content pos:start="85:13" pos:end="85:23">

            <return pos:start="85:13" pos:end="85:23">return <expr pos:start="85:20" pos:end="85:22"><name pos:start="85:20" pos:end="85:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <goto pos:start="89:9" pos:end="89:19">goto <name pos:start="89:14" pos:end="89:18">retry</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="95:5" pos:end="95:29">// for skipping the frame</comment>

    <expr_stmt pos:start="97:5" pos:end="97:50"><expr pos:start="97:5" pos:end="97:49"><name pos:start="97:5" pos:end="97:34"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:22">current_picture</name><operator pos:start="97:23" pos:end="97:23">.</operator><name pos:start="97:24" pos:end="97:24">f</name><operator pos:start="97:25" pos:end="97:25">.</operator><name pos:start="97:26" pos:end="97:34">pict_type</name></name> <operator pos:start="97:36" pos:end="97:36">=</operator> <name pos:start="97:38" pos:end="97:49"><name pos:start="97:38" pos:end="97:38">s</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:49">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:71"><expr pos:start="99:5" pos:end="99:70"><name pos:start="99:5" pos:end="99:34"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:22">current_picture</name><operator pos:start="99:23" pos:end="99:23">.</operator><name pos:start="99:24" pos:end="99:24">f</name><operator pos:start="99:25" pos:end="99:25">.</operator><name pos:start="99:26" pos:end="99:34">key_frame</name></name> <operator pos:start="99:36" pos:end="99:36">=</operator> <name pos:start="99:38" pos:end="99:49"><name pos:start="99:38" pos:end="99:38">s</name><operator pos:start="99:39" pos:end="99:40">-&gt;</operator><name pos:start="99:41" pos:end="99:49">pict_type</name></name> <operator pos:start="99:51" pos:end="99:52">==</operator> <name pos:start="99:54" pos:end="99:70">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>



    <if_stmt pos:start="103:5" pos:end="109:47"><if pos:start="103:5" pos:end="109:47">if <condition pos:start="103:8" pos:end="107:44">(<expr pos:start="103:9" pos:end="107:43"><operator pos:start="103:9" pos:end="103:9">(</operator><name pos:start="103:10" pos:end="103:26"><name pos:start="103:10" pos:end="103:14">avctx</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:26">skip_frame</name></name> <operator pos:start="103:28" pos:end="103:29">&gt;=</operator> <name pos:start="103:31" pos:end="103:46">AVDISCARD_NONREF</name> <operator pos:start="103:48" pos:end="103:49">&amp;&amp;</operator> <name pos:start="103:51" pos:end="103:62"><name pos:start="103:51" pos:end="103:51">s</name><operator pos:start="103:52" pos:end="103:53">-&gt;</operator><name pos:start="103:54" pos:end="103:62">pict_type</name></name> <operator pos:start="103:64" pos:end="103:65">==</operator> <name pos:start="103:67" pos:end="103:83">AV_PICTURE_TYPE_B</name><operator pos:start="103:84" pos:end="103:84">)</operator> <operator pos:start="103:86" pos:end="103:87">||</operator>

        <operator pos:start="105:9" pos:end="105:9">(</operator><name pos:start="105:10" pos:end="105:26"><name pos:start="105:10" pos:end="105:14">avctx</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:26">skip_frame</name></name> <operator pos:start="105:28" pos:end="105:29">&gt;=</operator> <name pos:start="105:31" pos:end="105:46">AVDISCARD_NONKEY</name> <operator pos:start="105:48" pos:end="105:49">&amp;&amp;</operator> <name pos:start="105:51" pos:end="105:62"><name pos:start="105:51" pos:end="105:51">s</name><operator pos:start="105:52" pos:end="105:53">-&gt;</operator><name pos:start="105:54" pos:end="105:62">pict_type</name></name> <operator pos:start="105:64" pos:end="105:65">!=</operator> <name pos:start="105:67" pos:end="105:83">AV_PICTURE_TYPE_I</name><operator pos:start="105:84" pos:end="105:84">)</operator> <operator pos:start="105:86" pos:end="105:87">||</operator>

         <name pos:start="107:10" pos:end="107:26"><name pos:start="107:10" pos:end="107:14">avctx</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:26">skip_frame</name></name> <operator pos:start="107:28" pos:end="107:29">&gt;=</operator> <name pos:start="107:31" pos:end="107:43">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:47"><block_content pos:start="109:9" pos:end="109:47">

        <return pos:start="109:9" pos:end="109:47">return <expr pos:start="109:16" pos:end="109:46"><call pos:start="109:16" pos:end="109:46"><name pos:start="109:16" pos:end="109:33">get_consumed_bytes</name><argument_list pos:start="109:34" pos:end="109:46">(<argument pos:start="109:35" pos:end="109:35"><expr pos:start="109:35" pos:end="109:35"><name pos:start="109:35" pos:end="109:35">s</name></expr></argument>, <argument pos:start="109:38" pos:end="109:45"><expr pos:start="109:38" pos:end="109:45"><name pos:start="109:38" pos:end="109:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="115:18"><if pos:start="113:5" pos:end="115:18">if <condition pos:start="113:8" pos:end="113:41">(<expr pos:start="113:9" pos:end="113:40"><call pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:26">ff_MPV_frame_start</name><argument_list pos:start="113:27" pos:end="113:36">(<argument pos:start="113:28" pos:end="113:28"><expr pos:start="113:28" pos:end="113:28"><name pos:start="113:28" pos:end="113:28">s</name></expr></argument>, <argument pos:start="113:31" pos:end="113:35"><expr pos:start="113:31" pos:end="113:35"><name pos:start="113:31" pos:end="113:35">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="113:38" pos:end="113:38">&lt;</operator> <literal type="number" pos:start="113:40" pos:end="113:40">0</literal></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:18"><block_content pos:start="115:9" pos:end="115:18">

        <return pos:start="115:9" pos:end="115:18">return <expr pos:start="115:16" pos:end="115:17"><operator pos:start="115:16" pos:end="115:16">-</operator><literal type="number" pos:start="115:17" pos:end="115:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:30"><expr pos:start="119:5" pos:end="119:29"><call pos:start="119:5" pos:end="119:29"><name pos:start="119:5" pos:end="119:26">ff_mpeg_er_frame_start</name><argument_list pos:start="119:27" pos:end="119:29">(<argument pos:start="119:28" pos:end="119:28"><expr pos:start="119:28" pos:end="119:28"><name pos:start="119:28" pos:end="119:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:32">/* decode each macroblock */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:16"><expr pos:start="125:5" pos:end="125:15"><name pos:start="125:5" pos:end="125:11"><name pos:start="125:5" pos:end="125:5">s</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:11">mb_x</name></name> <operator pos:start="125:13" pos:end="125:13">=</operator> <literal type="number" pos:start="125:15" pos:end="125:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:16"><expr pos:start="127:5" pos:end="127:15"><name pos:start="127:5" pos:end="127:11"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:11">mb_y</name></name> <operator pos:start="127:13" pos:end="127:13">=</operator> <literal type="number" pos:start="127:15" pos:end="127:15">0</literal></expr>;</expr_stmt>



    <while pos:start="131:5" pos:end="139:5">while <condition pos:start="131:11" pos:end="131:57">(<expr pos:start="131:12" pos:end="131:56"><name pos:start="131:12" pos:end="131:24"><name pos:start="131:12" pos:end="131:12">h</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:24">gob_number</name></name> <operator pos:start="131:26" pos:end="131:26">&lt;</operator> <operator pos:start="131:28" pos:end="131:28">(</operator><ternary pos:start="131:29" pos:end="131:55"><condition pos:start="131:29" pos:end="131:48"><expr pos:start="131:29" pos:end="131:46"><name pos:start="131:29" pos:end="131:40"><name pos:start="131:29" pos:end="131:29">s</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:40">mb_height</name></name> <operator pos:start="131:42" pos:end="131:43">==</operator> <literal type="number" pos:start="131:45" pos:end="131:46">18</literal></expr> ?</condition><then pos:start="131:50" pos:end="131:51"> <expr pos:start="131:50" pos:end="131:51"><literal type="number" pos:start="131:50" pos:end="131:51">12</literal></expr> </then><else pos:start="131:53" pos:end="131:55">: <expr pos:start="131:55" pos:end="131:55"><literal type="number" pos:start="131:55" pos:end="131:55">5</literal></expr></else></ternary><operator pos:start="131:56" pos:end="131:56">)</operator></expr>)</condition> <block pos:start="131:59" pos:end="139:5">{<block_content pos:start="133:9" pos:end="137:27">

        <if_stmt pos:start="133:9" pos:end="135:18"><if pos:start="133:9" pos:end="135:18">if <condition pos:start="133:12" pos:end="133:31">(<expr pos:start="133:13" pos:end="133:30"><call pos:start="133:13" pos:end="133:26"><name pos:start="133:13" pos:end="133:23">h261_resync</name><argument_list pos:start="133:24" pos:end="133:26">(<argument pos:start="133:25" pos:end="133:25"><expr pos:start="133:25" pos:end="133:25"><name pos:start="133:25" pos:end="133:25">h</name></expr></argument>)</argument_list></call> <operator pos:start="133:28" pos:end="133:28">&lt;</operator> <literal type="number" pos:start="133:30" pos:end="133:30">0</literal></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:18"><block_content pos:start="135:13" pos:end="135:18">

            <break pos:start="135:13" pos:end="135:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:27"><expr pos:start="137:9" pos:end="137:26"><call pos:start="137:9" pos:end="137:26"><name pos:start="137:9" pos:end="137:23">h261_decode_gob</name><argument_list pos:start="137:24" pos:end="137:26">(<argument pos:start="137:25" pos:end="137:25"><expr pos:start="137:25" pos:end="137:25"><name pos:start="137:25" pos:end="137:25">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="141:5" pos:end="141:24"><expr pos:start="141:5" pos:end="141:23"><call pos:start="141:5" pos:end="141:23"><name pos:start="141:5" pos:end="141:20">ff_MPV_frame_end</name><argument_list pos:start="141:21" pos:end="141:23">(<argument pos:start="141:22" pos:end="141:22"><expr pos:start="141:22" pos:end="141:22"><name pos:start="141:22" pos:end="141:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:82"><expr pos:start="145:5" pos:end="145:81"><call pos:start="145:5" pos:end="145:81"><name pos:start="145:5" pos:end="145:10">assert</name><argument_list pos:start="145:11" pos:end="145:81">(<argument pos:start="145:12" pos:end="145:80"><expr pos:start="145:12" pos:end="145:80"><name pos:start="145:12" pos:end="145:41"><name pos:start="145:12" pos:end="145:12">s</name><operator pos:start="145:13" pos:end="145:14">-&gt;</operator><name pos:start="145:15" pos:end="145:29">current_picture</name><operator pos:start="145:30" pos:end="145:30">.</operator><name pos:start="145:31" pos:end="145:31">f</name><operator pos:start="145:32" pos:end="145:32">.</operator><name pos:start="145:33" pos:end="145:41">pict_type</name></name> <operator pos:start="145:43" pos:end="145:44">==</operator> <name pos:start="145:46" pos:end="145:80"><name pos:start="145:46" pos:end="145:46">s</name><operator pos:start="145:47" pos:end="145:48">-&gt;</operator><name pos:start="145:49" pos:end="145:67">current_picture_ptr</name><operator pos:start="145:68" pos:end="145:69">-&gt;</operator><name pos:start="145:70" pos:end="145:70">f</name><operator pos:start="145:71" pos:end="145:71">.</operator><name pos:start="145:72" pos:end="145:80">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:59"><expr pos:start="147:5" pos:end="147:58"><call pos:start="147:5" pos:end="147:58"><name pos:start="147:5" pos:end="147:10">assert</name><argument_list pos:start="147:11" pos:end="147:58">(<argument pos:start="147:12" pos:end="147:57"><expr pos:start="147:12" pos:end="147:57"><name pos:start="147:12" pos:end="147:41"><name pos:start="147:12" pos:end="147:12">s</name><operator pos:start="147:13" pos:end="147:14">-&gt;</operator><name pos:start="147:15" pos:end="147:29">current_picture</name><operator pos:start="147:30" pos:end="147:30">.</operator><name pos:start="147:31" pos:end="147:31">f</name><operator pos:start="147:32" pos:end="147:32">.</operator><name pos:start="147:33" pos:end="147:41">pict_type</name></name> <operator pos:start="147:43" pos:end="147:44">==</operator> <name pos:start="147:46" pos:end="147:57"><name pos:start="147:46" pos:end="147:46">s</name><operator pos:start="147:47" pos:end="147:48">-&gt;</operator><name pos:start="147:49" pos:end="147:57">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="151:5" pos:end="153:19"><if pos:start="151:5" pos:end="153:19">if <condition pos:start="151:8" pos:end="151:67">(<expr pos:start="151:9" pos:end="151:66"><operator pos:start="151:9" pos:end="151:9">(</operator><name pos:start="151:10" pos:end="151:12">ret</name> <operator pos:start="151:14" pos:end="151:14">=</operator> <call pos:start="151:16" pos:end="151:61"><name pos:start="151:16" pos:end="151:27">av_frame_ref</name><argument_list pos:start="151:28" pos:end="151:61">(<argument pos:start="151:29" pos:end="151:32"><expr pos:start="151:29" pos:end="151:32"><name pos:start="151:29" pos:end="151:32">pict</name></expr></argument>, <argument pos:start="151:35" pos:end="151:60"><expr pos:start="151:35" pos:end="151:60"><operator pos:start="151:35" pos:end="151:35">&amp;</operator><name pos:start="151:36" pos:end="151:60"><name pos:start="151:36" pos:end="151:36">s</name><operator pos:start="151:37" pos:end="151:38">-&gt;</operator><name pos:start="151:39" pos:end="151:57">current_picture_ptr</name><operator pos:start="151:58" pos:end="151:59">-&gt;</operator><name pos:start="151:60" pos:end="151:60">f</name></name></expr></argument>)</argument_list></call><operator pos:start="151:62" pos:end="151:62">)</operator> <operator pos:start="151:64" pos:end="151:64">&lt;</operator> <literal type="number" pos:start="151:66" pos:end="151:66">0</literal></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:19"><block_content pos:start="153:9" pos:end="153:19">

        <return pos:start="153:9" pos:end="153:19">return <expr pos:start="153:16" pos:end="153:18"><name pos:start="153:16" pos:end="153:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:51"><expr pos:start="155:5" pos:end="155:50"><call pos:start="155:5" pos:end="155:50"><name pos:start="155:5" pos:end="155:23">ff_print_debug_info</name><argument_list pos:start="155:24" pos:end="155:50">(<argument pos:start="155:25" pos:end="155:25"><expr pos:start="155:25" pos:end="155:25"><name pos:start="155:25" pos:end="155:25">s</name></expr></argument>, <argument pos:start="155:28" pos:end="155:49"><expr pos:start="155:28" pos:end="155:49"><name pos:start="155:28" pos:end="155:49"><name pos:start="155:28" pos:end="155:28">s</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:49">current_picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:19"><expr pos:start="159:5" pos:end="159:18"><operator pos:start="159:5" pos:end="159:5">*</operator><name pos:start="159:6" pos:end="159:14">got_frame</name> <operator pos:start="159:16" pos:end="159:16">=</operator> <literal type="number" pos:start="159:18" pos:end="159:18">1</literal></expr>;</expr_stmt>



    <return pos:start="163:5" pos:end="163:43">return <expr pos:start="163:12" pos:end="163:42"><call pos:start="163:12" pos:end="163:42"><name pos:start="163:12" pos:end="163:29">get_consumed_bytes</name><argument_list pos:start="163:30" pos:end="163:42">(<argument pos:start="163:31" pos:end="163:31"><expr pos:start="163:31" pos:end="163:31"><name pos:start="163:31" pos:end="163:31">s</name></expr></argument>, <argument pos:start="163:34" pos:end="163:41"><expr pos:start="163:34" pos:end="163:41"><name pos:start="163:34" pos:end="163:41">buf_size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
