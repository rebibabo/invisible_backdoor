<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14763.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">get_physical_address_code</name><parameter_list pos:start="1:37" pos:end="5:71">(<parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:45">CPUState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">env</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:65"><decl pos:start="3:38" pos:end="3:65"><type pos:start="3:38" pos:end="3:65"><name pos:start="3:38" pos:end="3:55">target_phys_addr_t</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:65">physical</name></decl></parameter>, <parameter pos:start="3:68" pos:end="3:76"><decl pos:start="3:68" pos:end="3:76"><type pos:start="3:68" pos:end="3:76"><name pos:start="3:68" pos:end="3:70">int</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:76">prot</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:57"><decl pos:start="5:38" pos:end="5:57"><type pos:start="5:38" pos:end="5:57"><name pos:start="5:38" pos:end="5:49">target_ulong</name></type> <name pos:start="5:51" pos:end="5:57">address</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:70"><decl pos:start="5:60" pos:end="5:70"><type pos:start="5:60" pos:end="5:70"><name pos:start="5:60" pos:end="5:62">int</name></type> <name pos:start="5:64" pos:end="5:70">is_user</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="95:1">{<block_content pos:start="9:5" pos:end="93:13">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:20">context</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">is_nucleus</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:64">(<expr pos:start="17:9" pos:end="17:63"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:17"><name pos:start="17:10" pos:end="17:12">env</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:17">lsu</name></name> <operator pos:start="17:19" pos:end="17:19">&amp;</operator> <name pos:start="17:21" pos:end="17:26">IMMU_E</name><operator pos:start="17:27" pos:end="17:27">)</operator> <operator pos:start="17:29" pos:end="17:30">==</operator> <literal type="number" pos:start="17:32" pos:end="17:32">0</literal> <operator pos:start="17:34" pos:end="17:35">||</operator> <operator pos:start="17:37" pos:end="17:37">(</operator><name pos:start="17:38" pos:end="17:48"><name pos:start="17:38" pos:end="17:40">env</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:48">pstate</name></name> <operator pos:start="17:50" pos:end="17:50">&amp;</operator> <name pos:start="17:52" pos:end="17:57">PS_RED</name><operator pos:start="17:58" pos:end="17:58">)</operator> <operator pos:start="17:60" pos:end="17:61">!=</operator> <literal type="number" pos:start="17:63" pos:end="17:63">0</literal></expr>)</condition> <block pos:start="17:66" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:17">

        <comment type="block" pos:start="19:9" pos:end="19:27">/* IMMU disabled */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:58"><expr pos:start="21:9" pos:end="21:57"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:17">physical</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <call pos:start="21:21" pos:end="21:57"><name pos:start="21:21" pos:end="21:48">ultrasparc_truncate_physical</name><argument_list pos:start="21:49" pos:end="21:57">(<argument pos:start="21:50" pos:end="21:56"><expr pos:start="21:50" pos:end="21:56"><name pos:start="21:50" pos:end="21:56">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:13">prot</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:25">PAGE_EXEC</name></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:53"><expr pos:start="31:5" pos:end="31:52"><name pos:start="31:5" pos:end="31:11">context</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:43"><name pos:start="31:15" pos:end="31:17">env</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:23">dmmu</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:43">mmu_primary_context</name></name> <operator pos:start="31:45" pos:end="31:45">&amp;</operator> <literal type="number" pos:start="31:47" pos:end="31:52">0x1fff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:14">is_nucleus</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:24"><name pos:start="33:18" pos:end="33:20">env</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:24">tl</name></name> <operator pos:start="33:26" pos:end="33:26">&gt;</operator> <literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr>;</expr_stmt>



    <for pos:start="37:5" pos:end="82:0">for <control pos:start="37:9" pos:end="37:28">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:23"><expr pos:start="37:17" pos:end="37:22"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <literal type="number" pos:start="37:21" pos:end="37:22">64</literal></expr>;</condition> <incr pos:start="37:25" pos:end="37:27"><expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:25">i</name><operator pos:start="37:26" pos:end="37:27">++</operator></expr></incr>)</control> <block pos:start="37:30" pos:end="82:0">{<block_content pos:start="41:9" pos:end="77:9">

        <comment type="line" pos:start="39:9" pos:end="39:41">// ctx match, vaddr match, valid?</comment>

        <if_stmt pos:start="41:9" pos:end="77:9"><if pos:start="41:9" pos:end="77:9">if <condition pos:start="41:12" pos:end="45:45">(<expr pos:start="41:13" pos:end="45:44"><call pos:start="41:13" pos:end="45:44"><name pos:start="41:13" pos:end="41:32">ultrasparc_tag_match</name><argument_list pos:start="41:33" pos:end="45:44">(<argument pos:start="41:34" pos:end="41:46"><expr pos:start="41:34" pos:end="41:46"><operator pos:start="41:34" pos:end="41:34">&amp;</operator><name pos:start="41:35" pos:end="41:46"><name pos:start="41:35" pos:end="41:37">env</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:43">itlb</name><index pos:start="41:44" pos:end="41:46">[<expr pos:start="41:45" pos:end="41:45"><name pos:start="41:45" pos:end="41:45">i</name></expr>]</index></name></expr></argument>,

                                 <argument pos:start="43:34" pos:end="43:40"><expr pos:start="43:34" pos:end="43:40"><name pos:start="43:34" pos:end="43:40">address</name></expr></argument>, <argument pos:start="43:43" pos:end="43:49"><expr pos:start="43:43" pos:end="43:49"><name pos:start="43:43" pos:end="43:49">context</name></expr></argument>, <argument pos:start="43:52" pos:end="43:59"><expr pos:start="43:52" pos:end="43:59"><name pos:start="43:52" pos:end="43:59">physical</name></expr></argument>,

                                 <argument pos:start="45:34" pos:end="45:43"><expr pos:start="45:34" pos:end="45:43"><name pos:start="45:34" pos:end="45:43">is_nucleus</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:47" pos:end="77:9">{<block_content pos:start="49:13" pos:end="75:21">

            <comment type="line" pos:start="47:13" pos:end="47:25">// access ok?</comment>

            <if_stmt pos:start="49:13" pos:end="69:13"><if pos:start="49:13" pos:end="69:13">if <condition pos:start="49:16" pos:end="49:52">(<expr pos:start="49:17" pos:end="49:51"><operator pos:start="49:17" pos:end="49:17">(</operator><name pos:start="49:18" pos:end="49:29"><name pos:start="49:18" pos:end="49:20">env</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:26">itlb</name><index pos:start="49:27" pos:end="49:29">[<expr pos:start="49:28" pos:end="49:28"><name pos:start="49:28" pos:end="49:28">i</name></expr>]</index></name><operator pos:start="49:30" pos:end="49:30">.</operator><name pos:start="49:31" pos:end="49:33">tte</name> <operator pos:start="49:35" pos:end="49:35">&amp;</operator> <literal type="number" pos:start="49:37" pos:end="49:39">0x4</literal><operator pos:start="49:40" pos:end="49:40">)</operator> <operator pos:start="49:42" pos:end="49:43">&amp;&amp;</operator> <name pos:start="49:45" pos:end="49:51">is_user</name></expr>)</condition> <block pos:start="49:54" pos:end="69:13">{<block_content pos:start="51:17" pos:end="67:25">

                <if_stmt pos:start="51:17" pos:end="53:39"><if pos:start="51:17" pos:end="53:39">if <condition pos:start="51:20" pos:end="51:35">(<expr pos:start="51:21" pos:end="51:34"><name pos:start="51:21" pos:end="51:34"><name pos:start="51:21" pos:end="51:23">env</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:29">immu</name><operator pos:start="51:30" pos:end="51:30">.</operator><name pos:start="51:31" pos:end="51:34">sfsr</name></name></expr>)</condition><block type="pseudo" pos:start="53:21" pos:end="53:39"><block_content pos:start="53:21" pos:end="53:39"> <comment type="block" pos:start="51:37" pos:end="51:63">/* Fault status register */</comment>

                    <expr_stmt pos:start="53:21" pos:end="53:39"><expr pos:start="53:21" pos:end="53:38"><name pos:start="53:21" pos:end="53:34"><name pos:start="53:21" pos:end="53:23">env</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:29">immu</name><operator pos:start="53:30" pos:end="53:30">.</operator><name pos:start="53:31" pos:end="53:34">sfsr</name></name> <operator pos:start="53:36" pos:end="53:36">=</operator> <literal type="number" pos:start="53:38" pos:end="53:38">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="53:41" pos:end="55:62">/* overflow (not read before

                                             another fault) */</comment>

                <expr_stmt pos:start="57:17" pos:end="57:53"><expr pos:start="57:17" pos:end="57:52"><name pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:19">env</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:25">immu</name><operator pos:start="57:26" pos:end="57:26">.</operator><name pos:start="57:27" pos:end="57:30">sfsr</name></name> <operator pos:start="57:32" pos:end="57:33">|=</operator> <operator pos:start="57:35" pos:end="57:35">(</operator><name pos:start="57:36" pos:end="57:42">is_user</name> <operator pos:start="57:44" pos:end="57:45">&lt;&lt;</operator> <literal type="number" pos:start="57:47" pos:end="57:47">3</literal><operator pos:start="57:48" pos:end="57:48">)</operator> <operator pos:start="57:50" pos:end="57:50">|</operator> <literal type="number" pos:start="57:52" pos:end="57:52">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="62:0"><expr pos:start="59:17" pos:end="59:48"><name pos:start="59:17" pos:end="59:36"><name pos:start="59:17" pos:end="59:19">env</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:36">exception_index</name></name> <operator pos:start="59:38" pos:end="59:38">=</operator> <name pos:start="59:40" pos:end="59:48">TT_TFAULT</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="61:1" pos:end="61:16">#<cpp:directive pos:start="61:2" pos:end="61:6">ifdef</cpp:directive> <name pos:start="61:8" pos:end="61:16">DEBUG_MMU</name></cpp:ifdef>

                <expr_stmt pos:start="63:17" pos:end="66:0"><expr pos:start="63:17" pos:end="63:60"><call pos:start="63:17" pos:end="63:60"><name pos:start="63:17" pos:end="63:22">printf</name><argument_list pos:start="63:23" pos:end="63:60">(<argument pos:start="63:24" pos:end="63:50"><expr pos:start="63:24" pos:end="63:50"><literal type="string" pos:start="63:24" pos:end="63:38">"TFAULT at 0x%"</literal> <name pos:start="63:40" pos:end="63:45">PRIx64</name> <literal type="string" pos:start="63:47" pos:end="63:50">"\n"</literal></expr></argument>, <argument pos:start="63:53" pos:end="63:59"><expr pos:start="63:53" pos:end="63:59"><name pos:start="63:53" pos:end="63:59">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>

                <return pos:start="67:17" pos:end="67:25">return <expr pos:start="67:24" pos:end="67:24"><literal type="number" pos:start="67:24" pos:end="67:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:30"><expr pos:start="71:13" pos:end="71:29"><operator pos:start="71:13" pos:end="71:13">*</operator><name pos:start="71:14" pos:end="71:17">prot</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <name pos:start="71:21" pos:end="71:29">PAGE_EXEC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:43"><expr pos:start="73:13" pos:end="73:42"><call pos:start="73:13" pos:end="73:42"><name pos:start="73:13" pos:end="73:24">TTE_SET_USED</name><argument_list pos:start="73:25" pos:end="73:42">(<argument pos:start="73:26" pos:end="73:41"><expr pos:start="73:26" pos:end="73:41"><name pos:start="73:26" pos:end="73:37"><name pos:start="73:26" pos:end="73:28">env</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:34">itlb</name><index pos:start="73:35" pos:end="73:37">[<expr pos:start="73:36" pos:end="73:36"><name pos:start="73:36" pos:end="73:36">i</name></expr>]</index></name><operator pos:start="73:38" pos:end="73:38">.</operator><name pos:start="73:39" pos:end="73:41">tte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="75:13" pos:end="75:21">return <expr pos:start="75:20" pos:end="75:20"><literal type="number" pos:start="75:20" pos:end="75:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<cpp:ifdef pos:start="81:1" pos:end="81:16">#<cpp:directive pos:start="81:2" pos:end="81:6">ifdef</cpp:directive> <name pos:start="81:8" pos:end="81:16">DEBUG_MMU</name></cpp:ifdef>

    <expr_stmt pos:start="83:5" pos:end="86:0"><expr pos:start="83:5" pos:end="83:47"><call pos:start="83:5" pos:end="83:47"><name pos:start="83:5" pos:end="83:10">printf</name><argument_list pos:start="83:11" pos:end="83:47">(<argument pos:start="83:12" pos:end="83:37"><expr pos:start="83:12" pos:end="83:37"><literal type="string" pos:start="83:12" pos:end="83:25">"TMISS at 0x%"</literal> <name pos:start="83:27" pos:end="83:32">PRIx64</name> <literal type="string" pos:start="83:34" pos:end="83:37">"\n"</literal></expr></argument>, <argument pos:start="83:40" pos:end="83:46"><expr pos:start="83:40" pos:end="83:46"><name pos:start="83:40" pos:end="83:46">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="85:1" pos:end="85:6">#<cpp:directive pos:start="85:2" pos:end="85:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="87:5" pos:end="87:63">/* Context is stored in DMMU (dmmuregs[1]) also for IMMU */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:60"><expr pos:start="89:5" pos:end="89:59"><name pos:start="89:5" pos:end="89:24"><name pos:start="89:5" pos:end="89:7">env</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:13">immu</name><operator pos:start="89:14" pos:end="89:14">.</operator><name pos:start="89:15" pos:end="89:24">tag_access</name></name> <operator pos:start="89:26" pos:end="89:26">=</operator> <operator pos:start="89:28" pos:end="89:28">(</operator><name pos:start="89:29" pos:end="89:35">address</name> <operator pos:start="89:37" pos:end="89:37">&amp;</operator> <operator pos:start="89:39" pos:end="89:39">~</operator><literal type="number" pos:start="89:40" pos:end="89:48">0x1fffULL</literal><operator pos:start="89:49" pos:end="89:49">)</operator> <operator pos:start="89:51" pos:end="89:51">|</operator> <name pos:start="89:53" pos:end="89:59">context</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:36"><expr pos:start="91:5" pos:end="91:35"><name pos:start="91:5" pos:end="91:24"><name pos:start="91:5" pos:end="91:7">env</name><operator pos:start="91:8" pos:end="91:9">-&gt;</operator><name pos:start="91:10" pos:end="91:24">exception_index</name></name> <operator pos:start="91:26" pos:end="91:26">=</operator> <name pos:start="91:28" pos:end="91:35">TT_TMISS</name></expr>;</expr_stmt>

    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
