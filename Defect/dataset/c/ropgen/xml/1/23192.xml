<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23192.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">test_opts_parse_number</name><parameter_list pos:start="1:35" pos:end="1:40">(<parameter pos:start="1:36" pos:end="1:39"><decl pos:start="1:36" pos:end="1:39"><type pos:start="1:36" pos:end="1:39"><name pos:start="1:36" pos:end="1:39">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:35">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">err</name> <init pos:start="5:16" pos:end="5:21">= <expr pos:start="5:18" pos:end="5:21"><name pos:start="5:18" pos:end="5:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">QemuOpts</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">opts</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:26">/* Lower limit zero */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:76"><expr pos:start="13:5" pos:end="13:75"><name pos:start="13:5" pos:end="13:8">opts</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:75"><name pos:start="13:12" pos:end="13:26">qemu_opts_parse</name><argument_list pos:start="13:27" pos:end="13:75">(<argument pos:start="13:28" pos:end="13:40"><expr pos:start="13:28" pos:end="13:40"><operator pos:start="13:28" pos:end="13:28">&amp;</operator><name pos:start="13:29" pos:end="13:40">opts_list_01</name></expr></argument>, <argument pos:start="13:43" pos:end="13:53"><expr pos:start="13:43" pos:end="13:53"><literal type="string" pos:start="13:43" pos:end="13:53">"number1=0"</literal></expr></argument>, <argument pos:start="13:56" pos:end="13:60"><expr pos:start="13:56" pos:end="13:60"><name pos:start="13:56" pos:end="13:60">false</name></expr></argument>, <argument pos:start="13:63" pos:end="13:74"><expr pos:start="13:63" pos:end="13:74"><operator pos:start="13:63" pos:end="13:63">&amp;</operator><name pos:start="13:64" pos:end="13:74">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><call pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:20">g_assert_cmpuint</name><argument_list pos:start="15:21" pos:end="15:45">(<argument pos:start="15:22" pos:end="15:37"><expr pos:start="15:22" pos:end="15:37"><call pos:start="15:22" pos:end="15:37"><name pos:start="15:22" pos:end="15:31">opts_count</name><argument_list pos:start="15:32" pos:end="15:37">(<argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:40" pos:end="15:41"><expr pos:start="15:40" pos:end="15:41"><operator pos:start="15:40" pos:end="15:41">==</operator></expr></argument>, <argument pos:start="15:44" pos:end="15:44"><expr pos:start="15:44" pos:end="15:44"><literal type="number" pos:start="15:44" pos:end="15:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:69"><expr pos:start="17:5" pos:end="17:68"><call pos:start="17:5" pos:end="17:68"><name pos:start="17:5" pos:end="17:20">g_assert_cmpuint</name><argument_list pos:start="17:21" pos:end="17:68">(<argument pos:start="17:22" pos:end="17:60"><expr pos:start="17:22" pos:end="17:60"><call pos:start="17:22" pos:end="17:60"><name pos:start="17:22" pos:end="17:40">qemu_opt_get_number</name><argument_list pos:start="17:41" pos:end="17:60">(<argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">opts</name></expr></argument>, <argument pos:start="17:48" pos:end="17:56"><expr pos:start="17:48" pos:end="17:56"><literal type="string" pos:start="17:48" pos:end="17:56">"number1"</literal></expr></argument>, <argument pos:start="17:59" pos:end="17:59"><expr pos:start="17:59" pos:end="17:59"><literal type="number" pos:start="17:59" pos:end="17:59">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:63" pos:end="17:64"><expr pos:start="17:63" pos:end="17:64"><operator pos:start="17:63" pos:end="17:64">==</operator></expr></argument>, <argument pos:start="17:67" pos:end="17:67"><expr pos:start="17:67" pos:end="17:67"><literal type="number" pos:start="17:67" pos:end="17:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:28">/* Upper limit 2^64-1 */</comment>

    <expr_stmt pos:start="23:5" pos:end="27:48"><expr pos:start="23:5" pos:end="27:47"><name pos:start="23:5" pos:end="23:8">opts</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="27:47"><name pos:start="23:12" pos:end="23:26">qemu_opts_parse</name><argument_list pos:start="23:27" pos:end="27:47">(<argument pos:start="23:28" pos:end="23:40"><expr pos:start="23:28" pos:end="23:40"><operator pos:start="23:28" pos:end="23:28">&amp;</operator><name pos:start="23:29" pos:end="23:40">opts_list_01</name></expr></argument>,

                           <argument pos:start="25:28" pos:end="25:68"><expr pos:start="25:28" pos:end="25:68"><literal type="string" pos:start="25:28" pos:end="25:68">"number1=18446744073709551615,number2=-1"</literal></expr></argument>,

                           <argument pos:start="27:28" pos:end="27:32"><expr pos:start="27:28" pos:end="27:32"><name pos:start="27:28" pos:end="27:32">false</name></expr></argument>, <argument pos:start="27:35" pos:end="27:46"><expr pos:start="27:35" pos:end="27:46"><operator pos:start="27:35" pos:end="27:35">&amp;</operator><name pos:start="27:36" pos:end="27:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><call pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:20">g_assert_cmpuint</name><argument_list pos:start="29:21" pos:end="29:45">(<argument pos:start="29:22" pos:end="29:37"><expr pos:start="29:22" pos:end="29:37"><call pos:start="29:22" pos:end="29:37"><name pos:start="29:22" pos:end="29:31">opts_count</name><argument_list pos:start="29:32" pos:end="29:37">(<argument pos:start="29:33" pos:end="29:36"><expr pos:start="29:33" pos:end="29:36"><name pos:start="29:33" pos:end="29:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:40" pos:end="29:41"><expr pos:start="29:40" pos:end="29:41"><operator pos:start="29:40" pos:end="29:41">==</operator></expr></argument>, <argument pos:start="29:44" pos:end="29:44"><expr pos:start="29:44" pos:end="29:44"><literal type="number" pos:start="29:44" pos:end="29:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:77"><expr pos:start="31:5" pos:end="31:76"><call pos:start="31:5" pos:end="31:76"><name pos:start="31:5" pos:end="31:19">g_assert_cmphex</name><argument_list pos:start="31:20" pos:end="31:76">(<argument pos:start="31:21" pos:end="31:59"><expr pos:start="31:21" pos:end="31:59"><call pos:start="31:21" pos:end="31:59"><name pos:start="31:21" pos:end="31:39">qemu_opt_get_number</name><argument_list pos:start="31:40" pos:end="31:59">(<argument pos:start="31:41" pos:end="31:44"><expr pos:start="31:41" pos:end="31:44"><name pos:start="31:41" pos:end="31:44">opts</name></expr></argument>, <argument pos:start="31:47" pos:end="31:55"><expr pos:start="31:47" pos:end="31:55"><literal type="string" pos:start="31:47" pos:end="31:55">"number1"</literal></expr></argument>, <argument pos:start="31:58" pos:end="31:58"><expr pos:start="31:58" pos:end="31:58"><literal type="number" pos:start="31:58" pos:end="31:58">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:62" pos:end="31:63"><expr pos:start="31:62" pos:end="31:63"><operator pos:start="31:62" pos:end="31:63">==</operator></expr></argument>, <argument pos:start="31:66" pos:end="31:75"><expr pos:start="31:66" pos:end="31:75"><name pos:start="31:66" pos:end="31:75">UINT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:77"><expr pos:start="33:5" pos:end="33:76"><call pos:start="33:5" pos:end="33:76"><name pos:start="33:5" pos:end="33:19">g_assert_cmphex</name><argument_list pos:start="33:20" pos:end="33:76">(<argument pos:start="33:21" pos:end="33:59"><expr pos:start="33:21" pos:end="33:59"><call pos:start="33:21" pos:end="33:59"><name pos:start="33:21" pos:end="33:39">qemu_opt_get_number</name><argument_list pos:start="33:40" pos:end="33:59">(<argument pos:start="33:41" pos:end="33:44"><expr pos:start="33:41" pos:end="33:44"><name pos:start="33:41" pos:end="33:44">opts</name></expr></argument>, <argument pos:start="33:47" pos:end="33:55"><expr pos:start="33:47" pos:end="33:55"><literal type="string" pos:start="33:47" pos:end="33:55">"number2"</literal></expr></argument>, <argument pos:start="33:58" pos:end="33:58"><expr pos:start="33:58" pos:end="33:58"><literal type="number" pos:start="33:58" pos:end="33:58">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:62" pos:end="33:63"><expr pos:start="33:62" pos:end="33:63"><operator pos:start="33:62" pos:end="33:63">==</operator></expr></argument>, <argument pos:start="33:66" pos:end="33:75"><expr pos:start="33:66" pos:end="33:75"><name pos:start="33:66" pos:end="33:75">UINT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:27">/* Above upper limit */</comment>

    <expr_stmt pos:start="39:5" pos:end="41:48"><expr pos:start="39:5" pos:end="41:47"><name pos:start="39:5" pos:end="39:8">opts</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="41:47"><name pos:start="39:12" pos:end="39:26">qemu_opts_parse</name><argument_list pos:start="39:27" pos:end="41:47">(<argument pos:start="39:28" pos:end="39:40"><expr pos:start="39:28" pos:end="39:40"><operator pos:start="39:28" pos:end="39:28">&amp;</operator><name pos:start="39:29" pos:end="39:40">opts_list_01</name></expr></argument>, <argument pos:start="39:43" pos:end="39:72"><expr pos:start="39:43" pos:end="39:72"><literal type="string" pos:start="39:43" pos:end="39:72">"number1=18446744073709551616"</literal></expr></argument>,

                           <argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:32">false</name></expr></argument>, <argument pos:start="41:35" pos:end="41:46"><expr pos:start="41:35" pos:end="41:46"><operator pos:start="41:35" pos:end="41:35">&amp;</operator><name pos:start="41:36" pos:end="41:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="43:5" pos:end="43:28">/* BUG: should reject */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:46"><expr pos:start="45:5" pos:end="45:45"><call pos:start="45:5" pos:end="45:45"><name pos:start="45:5" pos:end="45:20">g_assert_cmpuint</name><argument_list pos:start="45:21" pos:end="45:45">(<argument pos:start="45:22" pos:end="45:37"><expr pos:start="45:22" pos:end="45:37"><call pos:start="45:22" pos:end="45:37"><name pos:start="45:22" pos:end="45:31">opts_count</name><argument_list pos:start="45:32" pos:end="45:37">(<argument pos:start="45:33" pos:end="45:36"><expr pos:start="45:33" pos:end="45:36"><name pos:start="45:33" pos:end="45:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:40" pos:end="45:41"><expr pos:start="45:40" pos:end="45:41"><operator pos:start="45:40" pos:end="45:41">==</operator></expr></argument>, <argument pos:start="45:44" pos:end="45:44"><expr pos:start="45:44" pos:end="45:44"><literal type="number" pos:start="45:44" pos:end="45:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:78"><expr pos:start="47:5" pos:end="47:77"><call pos:start="47:5" pos:end="47:77"><name pos:start="47:5" pos:end="47:20">g_assert_cmpuint</name><argument_list pos:start="47:21" pos:end="47:77">(<argument pos:start="47:22" pos:end="47:60"><expr pos:start="47:22" pos:end="47:60"><call pos:start="47:22" pos:end="47:60"><name pos:start="47:22" pos:end="47:40">qemu_opt_get_number</name><argument_list pos:start="47:41" pos:end="47:60">(<argument pos:start="47:42" pos:end="47:45"><expr pos:start="47:42" pos:end="47:45"><name pos:start="47:42" pos:end="47:45">opts</name></expr></argument>, <argument pos:start="47:48" pos:end="47:56"><expr pos:start="47:48" pos:end="47:56"><literal type="string" pos:start="47:48" pos:end="47:56">"number1"</literal></expr></argument>, <argument pos:start="47:59" pos:end="47:59"><expr pos:start="47:59" pos:end="47:59"><literal type="number" pos:start="47:59" pos:end="47:59">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:63" pos:end="47:64"><expr pos:start="47:63" pos:end="47:64"><operator pos:start="47:63" pos:end="47:64">==</operator></expr></argument>, <argument pos:start="47:67" pos:end="47:76"><expr pos:start="47:67" pos:end="47:76"><name pos:start="47:67" pos:end="47:76">UINT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:27">/* Below lower limit */</comment>

    <expr_stmt pos:start="53:5" pos:end="55:48"><expr pos:start="53:5" pos:end="55:47"><name pos:start="53:5" pos:end="53:8">opts</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <call pos:start="53:12" pos:end="55:47"><name pos:start="53:12" pos:end="53:26">qemu_opts_parse</name><argument_list pos:start="53:27" pos:end="55:47">(<argument pos:start="53:28" pos:end="53:40"><expr pos:start="53:28" pos:end="53:40"><operator pos:start="53:28" pos:end="53:28">&amp;</operator><name pos:start="53:29" pos:end="53:40">opts_list_01</name></expr></argument>, <argument pos:start="53:43" pos:end="53:73"><expr pos:start="53:43" pos:end="53:73"><literal type="string" pos:start="53:43" pos:end="53:73">"number1=-18446744073709551616"</literal></expr></argument>,

                           <argument pos:start="55:28" pos:end="55:32"><expr pos:start="55:28" pos:end="55:32"><name pos:start="55:28" pos:end="55:32">false</name></expr></argument>, <argument pos:start="55:35" pos:end="55:46"><expr pos:start="55:35" pos:end="55:46"><operator pos:start="55:35" pos:end="55:35">&amp;</operator><name pos:start="55:36" pos:end="55:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="57:5" pos:end="57:28">/* BUG: should reject */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:46"><expr pos:start="59:5" pos:end="59:45"><call pos:start="59:5" pos:end="59:45"><name pos:start="59:5" pos:end="59:20">g_assert_cmpuint</name><argument_list pos:start="59:21" pos:end="59:45">(<argument pos:start="59:22" pos:end="59:37"><expr pos:start="59:22" pos:end="59:37"><call pos:start="59:22" pos:end="59:37"><name pos:start="59:22" pos:end="59:31">opts_count</name><argument_list pos:start="59:32" pos:end="59:37">(<argument pos:start="59:33" pos:end="59:36"><expr pos:start="59:33" pos:end="59:36"><name pos:start="59:33" pos:end="59:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:40" pos:end="59:41"><expr pos:start="59:40" pos:end="59:41"><operator pos:start="59:40" pos:end="59:41">==</operator></expr></argument>, <argument pos:start="59:44" pos:end="59:44"><expr pos:start="59:44" pos:end="59:44"><literal type="number" pos:start="59:44" pos:end="59:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:78"><expr pos:start="61:5" pos:end="61:77"><call pos:start="61:5" pos:end="61:77"><name pos:start="61:5" pos:end="61:20">g_assert_cmpuint</name><argument_list pos:start="61:21" pos:end="61:77">(<argument pos:start="61:22" pos:end="61:60"><expr pos:start="61:22" pos:end="61:60"><call pos:start="61:22" pos:end="61:60"><name pos:start="61:22" pos:end="61:40">qemu_opt_get_number</name><argument_list pos:start="61:41" pos:end="61:60">(<argument pos:start="61:42" pos:end="61:45"><expr pos:start="61:42" pos:end="61:45"><name pos:start="61:42" pos:end="61:45">opts</name></expr></argument>, <argument pos:start="61:48" pos:end="61:56"><expr pos:start="61:48" pos:end="61:56"><literal type="string" pos:start="61:48" pos:end="61:56">"number1"</literal></expr></argument>, <argument pos:start="61:59" pos:end="61:59"><expr pos:start="61:59" pos:end="61:59"><literal type="number" pos:start="61:59" pos:end="61:59">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:63" pos:end="61:64"><expr pos:start="61:63" pos:end="61:64"><operator pos:start="61:63" pos:end="61:64">==</operator></expr></argument>, <argument pos:start="61:67" pos:end="61:76"><expr pos:start="61:67" pos:end="61:76"><name pos:start="61:67" pos:end="61:76">UINT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:23">/* Hex and octal */</comment>

    <expr_stmt pos:start="67:5" pos:end="69:48"><expr pos:start="67:5" pos:end="69:47"><name pos:start="67:5" pos:end="67:8">opts</name> <operator pos:start="67:10" pos:end="67:10">=</operator> <call pos:start="67:12" pos:end="69:47"><name pos:start="67:12" pos:end="67:26">qemu_opts_parse</name><argument_list pos:start="67:27" pos:end="69:47">(<argument pos:start="67:28" pos:end="67:40"><expr pos:start="67:28" pos:end="67:40"><operator pos:start="67:28" pos:end="67:28">&amp;</operator><name pos:start="67:29" pos:end="67:40">opts_list_01</name></expr></argument>, <argument pos:start="67:43" pos:end="67:68"><expr pos:start="67:43" pos:end="67:68"><literal type="string" pos:start="67:43" pos:end="67:68">"number1=0x2a,number2=052"</literal></expr></argument>,

                           <argument pos:start="69:28" pos:end="69:32"><expr pos:start="69:28" pos:end="69:32"><name pos:start="69:28" pos:end="69:32">false</name></expr></argument>, <argument pos:start="69:35" pos:end="69:46"><expr pos:start="69:35" pos:end="69:46"><operator pos:start="69:35" pos:end="69:35">&amp;</operator><name pos:start="69:36" pos:end="69:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:46"><expr pos:start="71:5" pos:end="71:45"><call pos:start="71:5" pos:end="71:45"><name pos:start="71:5" pos:end="71:20">g_assert_cmpuint</name><argument_list pos:start="71:21" pos:end="71:45">(<argument pos:start="71:22" pos:end="71:37"><expr pos:start="71:22" pos:end="71:37"><call pos:start="71:22" pos:end="71:37"><name pos:start="71:22" pos:end="71:31">opts_count</name><argument_list pos:start="71:32" pos:end="71:37">(<argument pos:start="71:33" pos:end="71:36"><expr pos:start="71:33" pos:end="71:36"><name pos:start="71:33" pos:end="71:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="71:40" pos:end="71:41"><expr pos:start="71:40" pos:end="71:41"><operator pos:start="71:40" pos:end="71:41">==</operator></expr></argument>, <argument pos:start="71:44" pos:end="71:44"><expr pos:start="71:44" pos:end="71:44"><literal type="number" pos:start="71:44" pos:end="71:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:70"><expr pos:start="73:5" pos:end="73:69"><call pos:start="73:5" pos:end="73:69"><name pos:start="73:5" pos:end="73:20">g_assert_cmpuint</name><argument_list pos:start="73:21" pos:end="73:69">(<argument pos:start="73:22" pos:end="73:60"><expr pos:start="73:22" pos:end="73:60"><call pos:start="73:22" pos:end="73:60"><name pos:start="73:22" pos:end="73:40">qemu_opt_get_number</name><argument_list pos:start="73:41" pos:end="73:60">(<argument pos:start="73:42" pos:end="73:45"><expr pos:start="73:42" pos:end="73:45"><name pos:start="73:42" pos:end="73:45">opts</name></expr></argument>, <argument pos:start="73:48" pos:end="73:56"><expr pos:start="73:48" pos:end="73:56"><literal type="string" pos:start="73:48" pos:end="73:56">"number1"</literal></expr></argument>, <argument pos:start="73:59" pos:end="73:59"><expr pos:start="73:59" pos:end="73:59"><literal type="number" pos:start="73:59" pos:end="73:59">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:63" pos:end="73:64"><expr pos:start="73:63" pos:end="73:64"><operator pos:start="73:63" pos:end="73:64">==</operator></expr></argument>, <argument pos:start="73:67" pos:end="73:68"><expr pos:start="73:67" pos:end="73:68"><literal type="number" pos:start="73:67" pos:end="73:68">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:70"><expr pos:start="75:5" pos:end="75:69"><call pos:start="75:5" pos:end="75:69"><name pos:start="75:5" pos:end="75:20">g_assert_cmpuint</name><argument_list pos:start="75:21" pos:end="75:69">(<argument pos:start="75:22" pos:end="75:60"><expr pos:start="75:22" pos:end="75:60"><call pos:start="75:22" pos:end="75:60"><name pos:start="75:22" pos:end="75:40">qemu_opt_get_number</name><argument_list pos:start="75:41" pos:end="75:60">(<argument pos:start="75:42" pos:end="75:45"><expr pos:start="75:42" pos:end="75:45"><name pos:start="75:42" pos:end="75:45">opts</name></expr></argument>, <argument pos:start="75:48" pos:end="75:56"><expr pos:start="75:48" pos:end="75:56"><literal type="string" pos:start="75:48" pos:end="75:56">"number2"</literal></expr></argument>, <argument pos:start="75:59" pos:end="75:59"><expr pos:start="75:59" pos:end="75:59"><literal type="number" pos:start="75:59" pos:end="75:59">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:63" pos:end="75:64"><expr pos:start="75:63" pos:end="75:64"><operator pos:start="75:63" pos:end="75:64">==</operator></expr></argument>, <argument pos:start="75:67" pos:end="75:68"><expr pos:start="75:67" pos:end="75:68"><literal type="number" pos:start="75:67" pos:end="75:68">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:17">/* Invalid */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:67"><expr pos:start="81:5" pos:end="81:66"><name pos:start="81:5" pos:end="81:8">opts</name> <operator pos:start="81:10" pos:end="81:10">=</operator> <call pos:start="81:12" pos:end="81:66"><name pos:start="81:12" pos:end="81:26">qemu_opts_parse</name><argument_list pos:start="81:27" pos:end="81:66">(<argument pos:start="81:28" pos:end="81:40"><expr pos:start="81:28" pos:end="81:40"><operator pos:start="81:28" pos:end="81:28">&amp;</operator><name pos:start="81:29" pos:end="81:40">opts_list_01</name></expr></argument>, <argument pos:start="81:43" pos:end="81:52"><expr pos:start="81:43" pos:end="81:52"><literal type="string" pos:start="81:43" pos:end="81:52">"number1="</literal></expr></argument>, <argument pos:start="81:55" pos:end="81:59"><expr pos:start="81:55" pos:end="81:59"><name pos:start="81:55" pos:end="81:59">false</name></expr></argument>, <argument pos:start="81:62" pos:end="81:65"><expr pos:start="81:62" pos:end="81:65"><operator pos:start="81:62" pos:end="81:62">&amp;</operator><name pos:start="81:63" pos:end="81:65">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="83:5" pos:end="83:28">/* BUG: should reject */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:46"><expr pos:start="85:5" pos:end="85:45"><call pos:start="85:5" pos:end="85:45"><name pos:start="85:5" pos:end="85:20">g_assert_cmpuint</name><argument_list pos:start="85:21" pos:end="85:45">(<argument pos:start="85:22" pos:end="85:37"><expr pos:start="85:22" pos:end="85:37"><call pos:start="85:22" pos:end="85:37"><name pos:start="85:22" pos:end="85:31">opts_count</name><argument_list pos:start="85:32" pos:end="85:37">(<argument pos:start="85:33" pos:end="85:36"><expr pos:start="85:33" pos:end="85:36"><name pos:start="85:33" pos:end="85:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:40" pos:end="85:41"><expr pos:start="85:40" pos:end="85:41"><operator pos:start="85:40" pos:end="85:41">==</operator></expr></argument>, <argument pos:start="85:44" pos:end="85:44"><expr pos:start="85:44" pos:end="85:44"><literal type="number" pos:start="85:44" pos:end="85:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:69"><expr pos:start="87:5" pos:end="87:68"><call pos:start="87:5" pos:end="87:68"><name pos:start="87:5" pos:end="87:20">g_assert_cmpuint</name><argument_list pos:start="87:21" pos:end="87:68">(<argument pos:start="87:22" pos:end="87:60"><expr pos:start="87:22" pos:end="87:60"><call pos:start="87:22" pos:end="87:60"><name pos:start="87:22" pos:end="87:40">qemu_opt_get_number</name><argument_list pos:start="87:41" pos:end="87:60">(<argument pos:start="87:42" pos:end="87:45"><expr pos:start="87:42" pos:end="87:45"><name pos:start="87:42" pos:end="87:45">opts</name></expr></argument>, <argument pos:start="87:48" pos:end="87:56"><expr pos:start="87:48" pos:end="87:56"><literal type="string" pos:start="87:48" pos:end="87:56">"number1"</literal></expr></argument>, <argument pos:start="87:59" pos:end="87:59"><expr pos:start="87:59" pos:end="87:59"><literal type="number" pos:start="87:59" pos:end="87:59">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="87:63" pos:end="87:64"><expr pos:start="87:63" pos:end="87:64"><operator pos:start="87:63" pos:end="87:64">==</operator></expr></argument>, <argument pos:start="87:67" pos:end="87:67"><expr pos:start="87:67" pos:end="87:67"><literal type="number" pos:start="87:67" pos:end="87:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:71"><expr pos:start="89:5" pos:end="89:70"><name pos:start="89:5" pos:end="89:8">opts</name> <operator pos:start="89:10" pos:end="89:10">=</operator> <call pos:start="89:12" pos:end="89:70"><name pos:start="89:12" pos:end="89:26">qemu_opts_parse</name><argument_list pos:start="89:27" pos:end="89:70">(<argument pos:start="89:28" pos:end="89:40"><expr pos:start="89:28" pos:end="89:40"><operator pos:start="89:28" pos:end="89:28">&amp;</operator><name pos:start="89:29" pos:end="89:40">opts_list_01</name></expr></argument>, <argument pos:start="89:43" pos:end="89:56"><expr pos:start="89:43" pos:end="89:56"><literal type="string" pos:start="89:43" pos:end="89:56">"number1=eins"</literal></expr></argument>, <argument pos:start="89:59" pos:end="89:63"><expr pos:start="89:59" pos:end="89:63"><name pos:start="89:59" pos:end="89:63">false</name></expr></argument>, <argument pos:start="89:66" pos:end="89:69"><expr pos:start="89:66" pos:end="89:69"><operator pos:start="89:66" pos:end="89:66">&amp;</operator><name pos:start="89:67" pos:end="89:69">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:30"><expr pos:start="91:5" pos:end="91:29"><call pos:start="91:5" pos:end="91:29"><name pos:start="91:5" pos:end="91:23">error_free_or_abort</name><argument_list pos:start="91:24" pos:end="91:29">(<argument pos:start="91:25" pos:end="91:28"><expr pos:start="91:25" pos:end="91:28"><operator pos:start="91:25" pos:end="91:25">&amp;</operator><name pos:start="91:26" pos:end="91:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:20"><expr pos:start="93:5" pos:end="93:19"><call pos:start="93:5" pos:end="93:19"><name pos:start="93:5" pos:end="93:12">g_assert</name><argument_list pos:start="93:13" pos:end="93:19">(<argument pos:start="93:14" pos:end="93:18"><expr pos:start="93:14" pos:end="93:18"><operator pos:start="93:14" pos:end="93:14">!</operator><name pos:start="93:15" pos:end="93:18">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:28">/* Leading whitespace */</comment>

    <expr_stmt pos:start="99:5" pos:end="101:48"><expr pos:start="99:5" pos:end="101:47"><name pos:start="99:5" pos:end="99:8">opts</name> <operator pos:start="99:10" pos:end="99:10">=</operator> <call pos:start="99:12" pos:end="101:47"><name pos:start="99:12" pos:end="99:26">qemu_opts_parse</name><argument_list pos:start="99:27" pos:end="101:47">(<argument pos:start="99:28" pos:end="99:40"><expr pos:start="99:28" pos:end="99:40"><operator pos:start="99:28" pos:end="99:28">&amp;</operator><name pos:start="99:29" pos:end="99:40">opts_list_01</name></expr></argument>, <argument pos:start="99:43" pos:end="99:57"><expr pos:start="99:43" pos:end="99:57"><literal type="string" pos:start="99:43" pos:end="99:57">"number1= \t42"</literal></expr></argument>,

                           <argument pos:start="101:28" pos:end="101:32"><expr pos:start="101:28" pos:end="101:32"><name pos:start="101:28" pos:end="101:32">false</name></expr></argument>, <argument pos:start="101:35" pos:end="101:46"><expr pos:start="101:35" pos:end="101:46"><operator pos:start="101:35" pos:end="101:35">&amp;</operator><name pos:start="101:36" pos:end="101:46">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:46"><expr pos:start="103:5" pos:end="103:45"><call pos:start="103:5" pos:end="103:45"><name pos:start="103:5" pos:end="103:20">g_assert_cmpuint</name><argument_list pos:start="103:21" pos:end="103:45">(<argument pos:start="103:22" pos:end="103:37"><expr pos:start="103:22" pos:end="103:37"><call pos:start="103:22" pos:end="103:37"><name pos:start="103:22" pos:end="103:31">opts_count</name><argument_list pos:start="103:32" pos:end="103:37">(<argument pos:start="103:33" pos:end="103:36"><expr pos:start="103:33" pos:end="103:36"><name pos:start="103:33" pos:end="103:36">opts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="103:40" pos:end="103:41"><expr pos:start="103:40" pos:end="103:41"><operator pos:start="103:40" pos:end="103:41">==</operator></expr></argument>, <argument pos:start="103:44" pos:end="103:44"><expr pos:start="103:44" pos:end="103:44"><literal type="number" pos:start="103:44" pos:end="103:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:70"><expr pos:start="105:5" pos:end="105:69"><call pos:start="105:5" pos:end="105:69"><name pos:start="105:5" pos:end="105:20">g_assert_cmpuint</name><argument_list pos:start="105:21" pos:end="105:69">(<argument pos:start="105:22" pos:end="105:60"><expr pos:start="105:22" pos:end="105:60"><call pos:start="105:22" pos:end="105:60"><name pos:start="105:22" pos:end="105:40">qemu_opt_get_number</name><argument_list pos:start="105:41" pos:end="105:60">(<argument pos:start="105:42" pos:end="105:45"><expr pos:start="105:42" pos:end="105:45"><name pos:start="105:42" pos:end="105:45">opts</name></expr></argument>, <argument pos:start="105:48" pos:end="105:56"><expr pos:start="105:48" pos:end="105:56"><literal type="string" pos:start="105:48" pos:end="105:56">"number1"</literal></expr></argument>, <argument pos:start="105:59" pos:end="105:59"><expr pos:start="105:59" pos:end="105:59"><literal type="number" pos:start="105:59" pos:end="105:59">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="105:63" pos:end="105:64"><expr pos:start="105:63" pos:end="105:64"><operator pos:start="105:63" pos:end="105:64">==</operator></expr></argument>, <argument pos:start="105:67" pos:end="105:68"><expr pos:start="105:67" pos:end="105:68"><literal type="number" pos:start="105:67" pos:end="105:68">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:23">/* Trailing crap */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:71"><expr pos:start="111:5" pos:end="111:70"><name pos:start="111:5" pos:end="111:8">opts</name> <operator pos:start="111:10" pos:end="111:10">=</operator> <call pos:start="111:12" pos:end="111:70"><name pos:start="111:12" pos:end="111:26">qemu_opts_parse</name><argument_list pos:start="111:27" pos:end="111:70">(<argument pos:start="111:28" pos:end="111:40"><expr pos:start="111:28" pos:end="111:40"><operator pos:start="111:28" pos:end="111:28">&amp;</operator><name pos:start="111:29" pos:end="111:40">opts_list_01</name></expr></argument>, <argument pos:start="111:43" pos:end="111:56"><expr pos:start="111:43" pos:end="111:56"><literal type="string" pos:start="111:43" pos:end="111:56">"number1=3.14"</literal></expr></argument>, <argument pos:start="111:59" pos:end="111:63"><expr pos:start="111:59" pos:end="111:63"><name pos:start="111:59" pos:end="111:63">false</name></expr></argument>, <argument pos:start="111:66" pos:end="111:69"><expr pos:start="111:66" pos:end="111:69"><operator pos:start="111:66" pos:end="111:66">&amp;</operator><name pos:start="111:67" pos:end="111:69">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:30"><expr pos:start="113:5" pos:end="113:29"><call pos:start="113:5" pos:end="113:29"><name pos:start="113:5" pos:end="113:23">error_free_or_abort</name><argument_list pos:start="113:24" pos:end="113:29">(<argument pos:start="113:25" pos:end="113:28"><expr pos:start="113:25" pos:end="113:28"><operator pos:start="113:25" pos:end="113:25">&amp;</operator><name pos:start="113:26" pos:end="113:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:20"><expr pos:start="115:5" pos:end="115:19"><call pos:start="115:5" pos:end="115:19"><name pos:start="115:5" pos:end="115:12">g_assert</name><argument_list pos:start="115:13" pos:end="115:19">(<argument pos:start="115:14" pos:end="115:18"><expr pos:start="115:14" pos:end="115:18"><operator pos:start="115:14" pos:end="115:14">!</operator><name pos:start="115:15" pos:end="115:18">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:69"><expr pos:start="117:5" pos:end="117:68"><name pos:start="117:5" pos:end="117:8">opts</name> <operator pos:start="117:10" pos:end="117:10">=</operator> <call pos:start="117:12" pos:end="117:68"><name pos:start="117:12" pos:end="117:26">qemu_opts_parse</name><argument_list pos:start="117:27" pos:end="117:68">(<argument pos:start="117:28" pos:end="117:40"><expr pos:start="117:28" pos:end="117:40"><operator pos:start="117:28" pos:end="117:28">&amp;</operator><name pos:start="117:29" pos:end="117:40">opts_list_01</name></expr></argument>, <argument pos:start="117:43" pos:end="117:54"><expr pos:start="117:43" pos:end="117:54"><literal type="string" pos:start="117:43" pos:end="117:54">"number1=08"</literal></expr></argument>, <argument pos:start="117:57" pos:end="117:61"><expr pos:start="117:57" pos:end="117:61"><name pos:start="117:57" pos:end="117:61">false</name></expr></argument>, <argument pos:start="117:64" pos:end="117:67"><expr pos:start="117:64" pos:end="117:67"><operator pos:start="117:64" pos:end="117:64">&amp;</operator><name pos:start="117:65" pos:end="117:67">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:30"><expr pos:start="119:5" pos:end="119:29"><call pos:start="119:5" pos:end="119:29"><name pos:start="119:5" pos:end="119:23">error_free_or_abort</name><argument_list pos:start="119:24" pos:end="119:29">(<argument pos:start="119:25" pos:end="119:28"><expr pos:start="119:25" pos:end="119:28"><operator pos:start="119:25" pos:end="119:25">&amp;</operator><name pos:start="119:26" pos:end="119:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:20"><expr pos:start="121:5" pos:end="121:19"><call pos:start="121:5" pos:end="121:19"><name pos:start="121:5" pos:end="121:12">g_assert</name><argument_list pos:start="121:13" pos:end="121:19">(<argument pos:start="121:14" pos:end="121:18"><expr pos:start="121:14" pos:end="121:18"><operator pos:start="121:14" pos:end="121:14">!</operator><name pos:start="121:15" pos:end="121:18">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:69"><expr pos:start="123:5" pos:end="123:68"><name pos:start="123:5" pos:end="123:8">opts</name> <operator pos:start="123:10" pos:end="123:10">=</operator> <call pos:start="123:12" pos:end="123:68"><name pos:start="123:12" pos:end="123:26">qemu_opts_parse</name><argument_list pos:start="123:27" pos:end="123:68">(<argument pos:start="123:28" pos:end="123:40"><expr pos:start="123:28" pos:end="123:40"><operator pos:start="123:28" pos:end="123:28">&amp;</operator><name pos:start="123:29" pos:end="123:40">opts_list_01</name></expr></argument>, <argument pos:start="123:43" pos:end="123:54"><expr pos:start="123:43" pos:end="123:54"><literal type="string" pos:start="123:43" pos:end="123:54">"number1=0 "</literal></expr></argument>, <argument pos:start="123:57" pos:end="123:61"><expr pos:start="123:57" pos:end="123:61"><name pos:start="123:57" pos:end="123:61">false</name></expr></argument>, <argument pos:start="123:64" pos:end="123:67"><expr pos:start="123:64" pos:end="123:67"><operator pos:start="123:64" pos:end="123:64">&amp;</operator><name pos:start="123:65" pos:end="123:67">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:30"><expr pos:start="125:5" pos:end="125:29"><call pos:start="125:5" pos:end="125:29"><name pos:start="125:5" pos:end="125:23">error_free_or_abort</name><argument_list pos:start="125:24" pos:end="125:29">(<argument pos:start="125:25" pos:end="125:28"><expr pos:start="125:25" pos:end="125:28"><operator pos:start="125:25" pos:end="125:25">&amp;</operator><name pos:start="125:26" pos:end="125:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:20"><expr pos:start="127:5" pos:end="127:19"><call pos:start="127:5" pos:end="127:19"><name pos:start="127:5" pos:end="127:12">g_assert</name><argument_list pos:start="127:13" pos:end="127:19">(<argument pos:start="127:14" pos:end="127:18"><expr pos:start="127:14" pos:end="127:18"><operator pos:start="127:14" pos:end="127:14">!</operator><name pos:start="127:15" pos:end="127:18">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:35"><expr pos:start="131:5" pos:end="131:34"><call pos:start="131:5" pos:end="131:34"><name pos:start="131:5" pos:end="131:19">qemu_opts_reset</name><argument_list pos:start="131:20" pos:end="131:34">(<argument pos:start="131:21" pos:end="131:33"><expr pos:start="131:21" pos:end="131:33"><operator pos:start="131:21" pos:end="131:21">&amp;</operator><name pos:start="131:22" pos:end="131:33">opts_list_01</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
