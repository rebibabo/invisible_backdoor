<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23310.c" pos:tabs="8"><function pos:start="1:1" pos:end="1267:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:38">powerpc_excp</name> <parameter_list pos:start="1:40" pos:end="3:65">(<parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:48">CPUState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">env</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:54">excp_model</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:64"><decl pos:start="3:57" pos:end="3:64"><type pos:start="3:57" pos:end="3:64"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:64">excp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="1267:1">{<block_content pos:start="7:5" pos:end="1265:24">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:20">msr</name></decl>, <decl pos:start="7:23" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:23" pos:end="7:29">new_msr</name></decl>, <decl pos:start="7:32" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:32" pos:end="7:37">vector</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="12:0"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">srr0</name></decl>, <decl pos:start="9:15" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:18">srr1</name></decl>, <decl pos:start="9:21" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:25">asrr0</name></decl>, <decl pos:start="9:28" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:32">asrr1</name></decl>;</decl_stmt>

<cpp:if pos:start="11:1" pos:end="11:26">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:26"><call pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:11">defined</name><argument_list pos:start="11:12" pos:end="11:26">(<argument pos:start="11:13" pos:end="11:25"><expr pos:start="11:13" pos:end="11:25"><name pos:start="11:13" pos:end="11:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">lpes0</name></decl>, <decl pos:start="13:16" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:20">lpes1</name></decl>, <decl pos:start="13:23" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:23" pos:end="13:25">lev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:9">lpes0</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:31"><name pos:start="17:14" pos:end="17:16">env</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:21">spr</name><index pos:start="17:22" pos:end="17:31">[<expr pos:start="17:23" pos:end="17:30"><name pos:start="17:23" pos:end="17:30">SPR_LPCR</name></expr>]</index></name> <operator pos:start="17:33" pos:end="17:34">&gt;&gt;</operator> <literal type="number" pos:start="17:36" pos:end="17:36">1</literal><operator pos:start="17:37" pos:end="17:37">)</operator> <operator pos:start="17:39" pos:end="17:39">&amp;</operator> <literal type="number" pos:start="17:41" pos:end="17:41">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:9">lpes1</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:31"><name pos:start="19:14" pos:end="19:16">env</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:21">spr</name><index pos:start="19:22" pos:end="19:31">[<expr pos:start="19:23" pos:end="19:30"><name pos:start="19:23" pos:end="19:30">SPR_LPCR</name></expr>]</index></name> <operator pos:start="19:33" pos:end="19:34">&gt;&gt;</operator> <literal type="number" pos:start="19:36" pos:end="19:36">2</literal><operator pos:start="19:37" pos:end="19:37">)</operator> <operator pos:start="19:39" pos:end="19:39">&amp;</operator> <literal type="number" pos:start="19:41" pos:end="19:41">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:31">(<expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:16">loglevel</name> <operator pos:start="25:18" pos:end="25:18">&amp;</operator> <name pos:start="25:20" pos:end="25:30">CPU_LOG_INT</name></expr>)</condition> <block pos:start="25:33" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:49">

        <expr_stmt pos:start="27:9" pos:end="29:49"><expr pos:start="27:9" pos:end="29:48"><call pos:start="27:9" pos:end="29:48"><name pos:start="27:9" pos:end="27:15">fprintf</name><argument_list pos:start="27:16" pos:end="29:48">(<argument pos:start="27:17" pos:end="27:23"><expr pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:23">logfile</name></expr></argument>, <argument pos:start="27:26" pos:end="27:76"><expr pos:start="27:26" pos:end="27:76"><literal type="string" pos:start="27:26" pos:end="27:48">"Raise exception at 0x"</literal> <name pos:start="27:50" pos:end="27:54">ADDRX</name> <literal type="string" pos:start="27:56" pos:end="27:76">" =&gt; 0x%08x (%02x)\n"</literal></expr></argument>,

                <argument pos:start="29:17" pos:end="29:24"><expr pos:start="29:17" pos:end="29:24"><name pos:start="29:17" pos:end="29:24"><name pos:start="29:17" pos:end="29:19">env</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:24">nip</name></name></expr></argument>, <argument pos:start="29:27" pos:end="29:30"><expr pos:start="29:27" pos:end="29:30"><name pos:start="29:27" pos:end="29:30">excp</name></expr></argument>, <argument pos:start="29:33" pos:end="29:47"><expr pos:start="29:33" pos:end="29:47"><name pos:start="29:33" pos:end="29:47"><name pos:start="29:33" pos:end="29:35">env</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:47">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:7">msr</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <name pos:start="33:11" pos:end="33:18"><name pos:start="33:11" pos:end="33:13">env</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:18">msr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:11">new_msr</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:17">msr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:20"><expr pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:8">srr0</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <name pos:start="37:12" pos:end="37:19">SPR_SRR0</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:20"><expr pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:8">srr1</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <name pos:start="39:12" pos:end="39:19">SPR_SRR1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:15"><expr pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:9">asrr0</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <operator pos:start="41:13" pos:end="41:13">-</operator><literal type="number" pos:start="41:14" pos:end="41:14">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:15"><expr pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:9">asrr1</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <operator pos:start="43:13" pos:end="43:13">-</operator><literal type="number" pos:start="43:14" pos:end="43:14">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:39"><expr pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:7">msr</name> <operator pos:start="45:9" pos:end="45:10">&amp;=</operator> <operator pos:start="45:12" pos:end="45:12">~</operator><operator pos:start="45:13" pos:end="45:13">(</operator><operator pos:start="45:14" pos:end="45:14">(</operator><name pos:start="45:15" pos:end="45:26">target_ulong</name><operator pos:start="45:27" pos:end="45:27">)</operator><literal type="number" pos:start="45:28" pos:end="45:37">0x783F0000</literal><operator pos:start="45:38" pos:end="45:38">)</operator></expr>;</expr_stmt>

    <switch pos:start="47:5" pos:end="1141:5">switch <condition pos:start="47:12" pos:end="47:17">(<expr pos:start="47:13" pos:end="47:16"><name pos:start="47:13" pos:end="47:16">excp</name></expr>)</condition> <block pos:start="47:19" pos:end="1141:5">{<block_content pos:start="49:5" pos:end="1139:14">

    <case pos:start="49:5" pos:end="49:27">case <expr pos:start="49:10" pos:end="49:26"><name pos:start="49:10" pos:end="49:26">POWERPC_EXCP_NONE</name></expr>:</case>

        <comment type="block" pos:start="51:9" pos:end="51:33">/* Should never happen */</comment>

        <return pos:start="53:9" pos:end="53:15">return;</return>

    <case pos:start="55:5" pos:end="55:31">case <expr pos:start="55:10" pos:end="55:30"><name pos:start="55:10" pos:end="55:30">POWERPC_EXCP_CRITICAL</name></expr>:</case>    <comment type="block" pos:start="55:36" pos:end="55:79">/* Critical input                         */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:48"><expr pos:start="57:9" pos:end="57:47"><name pos:start="57:9" pos:end="57:15">new_msr</name> <operator pos:start="57:17" pos:end="57:18">&amp;=</operator> <operator pos:start="57:20" pos:end="57:20">~</operator><operator pos:start="57:21" pos:end="57:21">(</operator><operator pos:start="57:22" pos:end="57:22">(</operator><name pos:start="57:23" pos:end="57:34">target_ulong</name><operator pos:start="57:35" pos:end="57:35">)</operator><literal type="number" pos:start="57:36" pos:end="57:36">1</literal> <operator pos:start="57:38" pos:end="57:39">&lt;&lt;</operator> <name pos:start="57:41" pos:end="57:46">MSR_RI</name><operator pos:start="57:47" pos:end="57:47">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="57:50" pos:end="57:70">/* XXX: check this */</comment>

        <switch pos:start="59:9" pos:end="85:9">switch <condition pos:start="59:16" pos:end="59:27">(<expr pos:start="59:17" pos:end="59:26"><name pos:start="59:17" pos:end="59:26">excp_model</name></expr>)</condition> <block pos:start="59:29" pos:end="85:9">{<block_content pos:start="61:9" pos:end="83:30">

        <case pos:start="61:9" pos:end="61:30">case <expr pos:start="61:14" pos:end="61:29"><name pos:start="61:14" pos:end="61:29">POWERPC_EXCP_40x</name></expr>:</case>

            <expr_stmt pos:start="63:13" pos:end="63:32"><expr pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:16">srr0</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <name pos:start="63:20" pos:end="63:31">SPR_40x_SRR2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:32"><expr pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:16">srr1</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <name pos:start="65:20" pos:end="65:31">SPR_40x_SRR3</name></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        <case pos:start="69:9" pos:end="69:32">case <expr pos:start="69:14" pos:end="69:31"><name pos:start="69:14" pos:end="69:31">POWERPC_EXCP_BOOKE</name></expr>:</case>

            <expr_stmt pos:start="71:13" pos:end="71:35"><expr pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:16">srr0</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:34">SPR_BOOKE_CSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:35"><expr pos:start="73:13" pos:end="73:34"><name pos:start="73:13" pos:end="73:16">srr1</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:34">SPR_BOOKE_CSRR1</name></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:29">case <expr pos:start="77:14" pos:end="77:28"><name pos:start="77:14" pos:end="77:28">POWERPC_EXCP_G2</name></expr>:</case>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <default pos:start="81:9" pos:end="81:16">default:</default>

            <goto pos:start="83:13" pos:end="83:30">goto <name pos:start="83:18" pos:end="83:29">excp_invalid</name>;</goto>

        </block_content>}</block></switch>

        <goto pos:start="87:9" pos:end="87:24">goto <name pos:start="87:14" pos:end="87:23">store_next</name>;</goto>

    <case pos:start="89:5" pos:end="89:29">case <expr pos:start="89:10" pos:end="89:28"><name pos:start="89:10" pos:end="89:28">POWERPC_EXCP_MCHECK</name></expr>:</case>    <comment type="block" pos:start="89:34" pos:end="89:79">/* Machine check exception                  */</comment>

        <if_stmt pos:start="91:9" pos:end="117:9"><if pos:start="91:9" pos:end="117:9">if <condition pos:start="91:12" pos:end="91:24">(<expr pos:start="91:13" pos:end="91:23"><name pos:start="91:13" pos:end="91:18">msr_me</name> <operator pos:start="91:20" pos:end="91:21">==</operator> <literal type="number" pos:start="91:23" pos:end="91:23">0</literal></expr>)</condition> <block pos:start="91:26" pos:end="117:9">{<block_content pos:start="99:13" pos:end="115:59">

            <comment type="block" pos:start="93:13" pos:end="97:15">/* Machine check exception is not enabled.

             * Enter checkstop state.

             */</comment>

            <if_stmt pos:start="99:13" pos:end="111:13"><if pos:start="99:13" pos:end="105:13">if <condition pos:start="99:16" pos:end="99:30">(<expr pos:start="99:17" pos:end="99:29"><name pos:start="99:17" pos:end="99:24">loglevel</name> <operator pos:start="99:26" pos:end="99:27">!=</operator> <literal type="number" pos:start="99:29" pos:end="99:29">0</literal></expr>)</condition> <block pos:start="99:32" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:54">

                <expr_stmt pos:start="101:17" pos:end="103:54"><expr pos:start="101:17" pos:end="103:53"><call pos:start="101:17" pos:end="103:53"><name pos:start="101:17" pos:end="101:23">fprintf</name><argument_list pos:start="101:24" pos:end="103:53">(<argument pos:start="101:25" pos:end="101:31"><expr pos:start="101:25" pos:end="101:31"><name pos:start="101:25" pos:end="101:31">logfile</name></expr></argument>, <argument pos:start="101:34" pos:end="103:52"><expr pos:start="101:34" pos:end="103:52"><literal type="string" pos:start="101:34" pos:end="101:68">"Machine check while not allowed. "</literal>

                        <literal type="string" pos:start="103:25" pos:end="103:52">"Entering checkstop state\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="105:15" pos:end="111:13">else <block pos:start="105:20" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:54">

                <expr_stmt pos:start="107:17" pos:end="109:54"><expr pos:start="107:17" pos:end="109:53"><call pos:start="107:17" pos:end="109:53"><name pos:start="107:17" pos:end="107:23">fprintf</name><argument_list pos:start="107:24" pos:end="109:53">(<argument pos:start="107:25" pos:end="107:30"><expr pos:start="107:25" pos:end="107:30"><name pos:start="107:25" pos:end="107:30">stderr</name></expr></argument>, <argument pos:start="107:33" pos:end="109:52"><expr pos:start="107:33" pos:end="109:52"><literal type="string" pos:start="107:33" pos:end="107:67">"Machine check while not allowed. "</literal>

                        <literal type="string" pos:start="109:25" pos:end="109:52">"Entering checkstop state\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:28"><expr pos:start="113:13" pos:end="113:27"><name pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:15">env</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:23">halted</name></name> <operator pos:start="113:25" pos:end="113:25">=</operator> <literal type="number" pos:start="113:27" pos:end="113:27">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:59"><expr pos:start="115:13" pos:end="115:58"><name pos:start="115:13" pos:end="115:34"><name pos:start="115:13" pos:end="115:15">env</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:34">interrupt_request</name></name> <operator pos:start="115:36" pos:end="115:37">|=</operator> <name pos:start="115:39" pos:end="115:58">CPU_INTERRUPT_EXITTB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:48"><expr pos:start="119:9" pos:end="119:47"><name pos:start="119:9" pos:end="119:15">new_msr</name> <operator pos:start="119:17" pos:end="119:18">&amp;=</operator> <operator pos:start="119:20" pos:end="119:20">~</operator><operator pos:start="119:21" pos:end="119:21">(</operator><operator pos:start="119:22" pos:end="119:22">(</operator><name pos:start="119:23" pos:end="119:34">target_ulong</name><operator pos:start="119:35" pos:end="119:35">)</operator><literal type="number" pos:start="119:36" pos:end="119:36">1</literal> <operator pos:start="119:38" pos:end="119:39">&lt;&lt;</operator> <name pos:start="119:41" pos:end="119:46">MSR_RI</name><operator pos:start="119:47" pos:end="119:47">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="124:0"><expr pos:start="121:9" pos:end="121:47"><name pos:start="121:9" pos:end="121:15">new_msr</name> <operator pos:start="121:17" pos:end="121:18">&amp;=</operator> <operator pos:start="121:20" pos:end="121:20">~</operator><operator pos:start="121:21" pos:end="121:21">(</operator><operator pos:start="121:22" pos:end="121:22">(</operator><name pos:start="121:23" pos:end="121:34">target_ulong</name><operator pos:start="121:35" pos:end="121:35">)</operator><literal type="number" pos:start="121:36" pos:end="121:36">1</literal> <operator pos:start="121:38" pos:end="121:39">&lt;&lt;</operator> <name pos:start="121:41" pos:end="121:46">MSR_ME</name><operator pos:start="121:47" pos:end="121:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="123:1" pos:end="123:26">#<cpp:directive pos:start="123:2" pos:end="123:3">if</cpp:directive> <expr pos:start="123:5" pos:end="123:26"><call pos:start="123:5" pos:end="123:26"><name pos:start="123:5" pos:end="123:11">defined</name><argument_list pos:start="123:12" pos:end="123:26">(<argument pos:start="123:13" pos:end="123:25"><expr pos:start="123:13" pos:end="123:25"><name pos:start="123:13" pos:end="123:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="125:9" pos:end="128:0"><expr pos:start="125:9" pos:end="125:44"><name pos:start="125:9" pos:end="125:15">new_msr</name> <operator pos:start="125:17" pos:end="125:18">|=</operator> <operator pos:start="125:20" pos:end="125:20">(</operator><name pos:start="125:21" pos:end="125:32">target_ulong</name><operator pos:start="125:33" pos:end="125:33">)</operator><literal type="number" pos:start="125:34" pos:end="125:34">1</literal> <operator pos:start="125:36" pos:end="125:37">&lt;&lt;</operator> <name pos:start="125:39" pos:end="125:44">MSR_HV</name></expr>;</expr_stmt>

<cpp:endif pos:start="127:1" pos:end="127:6">#<cpp:directive pos:start="127:2" pos:end="127:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="129:9" pos:end="129:67">/* XXX: should also have something loaded in DAR / DSISR */</comment>

        <switch pos:start="131:9" pos:end="157:9">switch <condition pos:start="131:16" pos:end="131:27">(<expr pos:start="131:17" pos:end="131:26"><name pos:start="131:17" pos:end="131:26">excp_model</name></expr>)</condition> <block pos:start="131:29" pos:end="157:9">{<block_content pos:start="133:9" pos:end="155:18">

        <case pos:start="133:9" pos:end="133:30">case <expr pos:start="133:14" pos:end="133:29"><name pos:start="133:14" pos:end="133:29">POWERPC_EXCP_40x</name></expr>:</case>

            <expr_stmt pos:start="135:13" pos:end="135:32"><expr pos:start="135:13" pos:end="135:31"><name pos:start="135:13" pos:end="135:16">srr0</name> <operator pos:start="135:18" pos:end="135:18">=</operator> <name pos:start="135:20" pos:end="135:31">SPR_40x_SRR2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:32"><expr pos:start="137:13" pos:end="137:31"><name pos:start="137:13" pos:end="137:16">srr1</name> <operator pos:start="137:18" pos:end="137:18">=</operator> <name pos:start="137:20" pos:end="137:31">SPR_40x_SRR3</name></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:32">case <expr pos:start="141:14" pos:end="141:31"><name pos:start="141:14" pos:end="141:31">POWERPC_EXCP_BOOKE</name></expr>:</case>

            <expr_stmt pos:start="143:13" pos:end="143:36"><expr pos:start="143:13" pos:end="143:35"><name pos:start="143:13" pos:end="143:16">srr0</name> <operator pos:start="143:18" pos:end="143:18">=</operator> <name pos:start="143:20" pos:end="143:35">SPR_BOOKE_MCSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:36"><expr pos:start="145:13" pos:end="145:35"><name pos:start="145:13" pos:end="145:16">srr1</name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:35">SPR_BOOKE_MCSRR1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:36"><expr pos:start="147:13" pos:end="147:35"><name pos:start="147:13" pos:end="147:17">asrr0</name> <operator pos:start="147:19" pos:end="147:19">=</operator> <name pos:start="147:21" pos:end="147:35">SPR_BOOKE_CSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:36"><expr pos:start="149:13" pos:end="149:35"><name pos:start="149:13" pos:end="149:17">asrr1</name> <operator pos:start="149:19" pos:end="149:19">=</operator> <name pos:start="149:21" pos:end="149:35">SPR_BOOKE_CSRR1</name></expr>;</expr_stmt>

            <break pos:start="151:13" pos:end="151:18">break;</break>

        <default pos:start="153:9" pos:end="153:16">default:</default>

            <break pos:start="155:13" pos:end="155:18">break;</break>

        </block_content>}</block></switch>

        <goto pos:start="159:9" pos:end="159:24">goto <name pos:start="159:14" pos:end="159:23">store_next</name>;</goto>

    <case pos:start="161:5" pos:end="164:0">case <expr pos:start="161:10" pos:end="161:25"><name pos:start="161:10" pos:end="161:25">POWERPC_EXCP_DSI</name></expr>:</case>       <comment type="block" pos:start="161:34" pos:end="161:79">/* Data storage exception                   */</comment>

<cpp:if pos:start="163:1" pos:end="163:30">#<cpp:directive pos:start="163:2" pos:end="163:3">if</cpp:directive> <expr pos:start="163:5" pos:end="163:30"><call pos:start="163:5" pos:end="163:30"><name pos:start="163:5" pos:end="163:11">defined</name> <argument_list pos:start="163:13" pos:end="163:30">(<argument pos:start="163:14" pos:end="163:29"><expr pos:start="163:14" pos:end="163:29"><name pos:start="163:14" pos:end="163:29">DEBUG_EXCEPTIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="165:9" pos:end="174:0"><if pos:start="165:9" pos:end="174:0">if <condition pos:start="165:12" pos:end="165:26">(<expr pos:start="165:13" pos:end="165:25"><name pos:start="165:13" pos:end="165:20">loglevel</name> <operator pos:start="165:22" pos:end="165:23">!=</operator> <literal type="number" pos:start="165:25" pos:end="165:25">0</literal></expr>)</condition> <block pos:start="165:28" pos:end="174:0">{<block_content pos:start="167:13" pos:end="169:66">

            <expr_stmt pos:start="167:13" pos:end="169:66"><expr pos:start="167:13" pos:end="169:65"><call pos:start="167:13" pos:end="169:65"><name pos:start="167:13" pos:end="167:19">fprintf</name><argument_list pos:start="167:20" pos:end="169:65">(<argument pos:start="167:21" pos:end="167:27"><expr pos:start="167:21" pos:end="167:27"><name pos:start="167:21" pos:end="167:27">logfile</name></expr></argument>, <argument pos:start="167:30" pos:end="169:24"><expr pos:start="167:30" pos:end="169:24"><literal type="string" pos:start="167:30" pos:end="167:54">"DSI exception: DSISR=0x"</literal> <name pos:start="167:56" pos:end="167:60">ADDRX</name><literal type="string" pos:start="167:61" pos:end="167:69">" DAR=0x"</literal> <name pos:start="167:71" pos:end="167:75">ADDRX</name>

                    <literal type="string" pos:start="169:21" pos:end="169:24">"\n"</literal></expr></argument>, <argument pos:start="169:27" pos:end="169:45"><expr pos:start="169:27" pos:end="169:45"><name pos:start="169:27" pos:end="169:45"><name pos:start="169:27" pos:end="169:29">env</name><operator pos:start="169:30" pos:end="169:31">-&gt;</operator><name pos:start="169:32" pos:end="169:34">spr</name><index pos:start="169:35" pos:end="169:45">[<expr pos:start="169:36" pos:end="169:44"><name pos:start="169:36" pos:end="169:44">SPR_DSISR</name></expr>]</index></name></expr></argument>, <argument pos:start="169:48" pos:end="169:64"><expr pos:start="169:48" pos:end="169:64"><name pos:start="169:48" pos:end="169:64"><name pos:start="169:48" pos:end="169:50">env</name><operator pos:start="169:51" pos:end="169:52">-&gt;</operator><name pos:start="169:53" pos:end="169:55">spr</name><index pos:start="169:56" pos:end="169:64">[<expr pos:start="169:57" pos:end="169:63"><name pos:start="169:57" pos:end="169:63">SPR_DAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="173:1" pos:end="173:6">#<cpp:directive pos:start="173:2" pos:end="173:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="175:9" pos:end="178:0"><expr pos:start="175:9" pos:end="175:47"><name pos:start="175:9" pos:end="175:15">new_msr</name> <operator pos:start="175:17" pos:end="175:18">&amp;=</operator> <operator pos:start="175:20" pos:end="175:20">~</operator><operator pos:start="175:21" pos:end="175:21">(</operator><operator pos:start="175:22" pos:end="175:22">(</operator><name pos:start="175:23" pos:end="175:34">target_ulong</name><operator pos:start="175:35" pos:end="175:35">)</operator><literal type="number" pos:start="175:36" pos:end="175:36">1</literal> <operator pos:start="175:38" pos:end="175:39">&lt;&lt;</operator> <name pos:start="175:41" pos:end="175:46">MSR_RI</name><operator pos:start="175:47" pos:end="175:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="177:1" pos:end="177:26">#<cpp:directive pos:start="177:2" pos:end="177:3">if</cpp:directive> <expr pos:start="177:5" pos:end="177:26"><call pos:start="177:5" pos:end="177:26"><name pos:start="177:5" pos:end="177:11">defined</name><argument_list pos:start="177:12" pos:end="177:26">(<argument pos:start="177:13" pos:end="177:25"><expr pos:start="177:13" pos:end="177:25"><name pos:start="177:13" pos:end="177:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="179:9" pos:end="184:0"><if pos:start="179:9" pos:end="184:0">if <condition pos:start="179:12" pos:end="179:23">(<expr pos:start="179:13" pos:end="179:22"><name pos:start="179:13" pos:end="179:17">lpes1</name> <operator pos:start="179:19" pos:end="179:20">==</operator> <literal type="number" pos:start="179:22" pos:end="179:22">0</literal></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="184:0"><block_content pos:start="181:13" pos:end="184:0">

            <expr_stmt pos:start="181:13" pos:end="184:0"><expr pos:start="181:13" pos:end="181:48"><name pos:start="181:13" pos:end="181:19">new_msr</name> <operator pos:start="181:21" pos:end="181:22">|=</operator> <operator pos:start="181:24" pos:end="181:24">(</operator><name pos:start="181:25" pos:end="181:36">target_ulong</name><operator pos:start="181:37" pos:end="181:37">)</operator><literal type="number" pos:start="181:38" pos:end="181:38">1</literal> <operator pos:start="181:40" pos:end="181:41">&lt;&lt;</operator> <name pos:start="181:43" pos:end="181:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="183:1" pos:end="183:6">#<cpp:directive pos:start="183:2" pos:end="183:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="185:9" pos:end="185:24">goto <name pos:start="185:14" pos:end="185:23">store_next</name>;</goto>

    <case pos:start="187:5" pos:end="190:0">case <expr pos:start="187:10" pos:end="187:25"><name pos:start="187:10" pos:end="187:25">POWERPC_EXCP_ISI</name></expr>:</case>       <comment type="block" pos:start="187:34" pos:end="187:79">/* Instruction storage exception            */</comment>

<cpp:if pos:start="189:1" pos:end="189:30">#<cpp:directive pos:start="189:2" pos:end="189:3">if</cpp:directive> <expr pos:start="189:5" pos:end="189:30"><call pos:start="189:5" pos:end="189:30"><name pos:start="189:5" pos:end="189:11">defined</name> <argument_list pos:start="189:13" pos:end="189:30">(<argument pos:start="189:14" pos:end="189:29"><expr pos:start="189:14" pos:end="189:29"><name pos:start="189:14" pos:end="189:29">DEBUG_EXCEPTIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="191:9" pos:end="200:0"><if pos:start="191:9" pos:end="200:0">if <condition pos:start="191:12" pos:end="191:26">(<expr pos:start="191:13" pos:end="191:25"><name pos:start="191:13" pos:end="191:20">loglevel</name> <operator pos:start="191:22" pos:end="191:23">!=</operator> <literal type="number" pos:start="191:25" pos:end="191:25">0</literal></expr>)</condition> <block pos:start="191:28" pos:end="200:0">{<block_content pos:start="193:13" pos:end="195:41">

            <expr_stmt pos:start="193:13" pos:end="195:41"><expr pos:start="193:13" pos:end="195:40"><call pos:start="193:13" pos:end="195:40"><name pos:start="193:13" pos:end="193:19">fprintf</name><argument_list pos:start="193:20" pos:end="195:40">(<argument pos:start="193:21" pos:end="193:27"><expr pos:start="193:21" pos:end="193:27"><name pos:start="193:21" pos:end="193:27">logfile</name></expr></argument>, <argument pos:start="193:30" pos:end="195:24"><expr pos:start="193:30" pos:end="195:24"><literal type="string" pos:start="193:30" pos:end="193:52">"ISI exception: msr=0x"</literal> <name pos:start="193:54" pos:end="193:58">ADDRX</name> <literal type="string" pos:start="193:60" pos:end="193:69">", nip=0x"</literal> <name pos:start="193:71" pos:end="193:75">ADDRX</name>

                    <literal type="string" pos:start="195:21" pos:end="195:24">"\n"</literal></expr></argument>, <argument pos:start="195:27" pos:end="195:29"><expr pos:start="195:27" pos:end="195:29"><name pos:start="195:27" pos:end="195:29">msr</name></expr></argument>, <argument pos:start="195:32" pos:end="195:39"><expr pos:start="195:32" pos:end="195:39"><name pos:start="195:32" pos:end="195:39"><name pos:start="195:32" pos:end="195:34">env</name><operator pos:start="195:35" pos:end="195:36">-&gt;</operator><name pos:start="195:37" pos:end="195:39">nip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="199:1" pos:end="199:6">#<cpp:directive pos:start="199:2" pos:end="199:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="201:9" pos:end="204:0"><expr pos:start="201:9" pos:end="201:47"><name pos:start="201:9" pos:end="201:15">new_msr</name> <operator pos:start="201:17" pos:end="201:18">&amp;=</operator> <operator pos:start="201:20" pos:end="201:20">~</operator><operator pos:start="201:21" pos:end="201:21">(</operator><operator pos:start="201:22" pos:end="201:22">(</operator><name pos:start="201:23" pos:end="201:34">target_ulong</name><operator pos:start="201:35" pos:end="201:35">)</operator><literal type="number" pos:start="201:36" pos:end="201:36">1</literal> <operator pos:start="201:38" pos:end="201:39">&lt;&lt;</operator> <name pos:start="201:41" pos:end="201:46">MSR_RI</name><operator pos:start="201:47" pos:end="201:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="203:1" pos:end="203:26">#<cpp:directive pos:start="203:2" pos:end="203:3">if</cpp:directive> <expr pos:start="203:5" pos:end="203:26"><call pos:start="203:5" pos:end="203:26"><name pos:start="203:5" pos:end="203:11">defined</name><argument_list pos:start="203:12" pos:end="203:26">(<argument pos:start="203:13" pos:end="203:25"><expr pos:start="203:13" pos:end="203:25"><name pos:start="203:13" pos:end="203:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="205:9" pos:end="210:0"><if pos:start="205:9" pos:end="210:0">if <condition pos:start="205:12" pos:end="205:23">(<expr pos:start="205:13" pos:end="205:22"><name pos:start="205:13" pos:end="205:17">lpes1</name> <operator pos:start="205:19" pos:end="205:20">==</operator> <literal type="number" pos:start="205:22" pos:end="205:22">0</literal></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="210:0"><block_content pos:start="207:13" pos:end="210:0">

            <expr_stmt pos:start="207:13" pos:end="210:0"><expr pos:start="207:13" pos:end="207:48"><name pos:start="207:13" pos:end="207:19">new_msr</name> <operator pos:start="207:21" pos:end="207:22">|=</operator> <operator pos:start="207:24" pos:end="207:24">(</operator><name pos:start="207:25" pos:end="207:36">target_ulong</name><operator pos:start="207:37" pos:end="207:37">)</operator><literal type="number" pos:start="207:38" pos:end="207:38">1</literal> <operator pos:start="207:40" pos:end="207:41">&lt;&lt;</operator> <name pos:start="207:43" pos:end="207:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="209:1" pos:end="209:6">#<cpp:directive pos:start="209:2" pos:end="209:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="211:9" pos:end="211:31"><expr pos:start="211:9" pos:end="211:30"><name pos:start="211:9" pos:end="211:11">msr</name> <operator pos:start="211:13" pos:end="211:14">|=</operator> <name pos:start="211:16" pos:end="211:30"><name pos:start="211:16" pos:end="211:18">env</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:30">error_code</name></name></expr>;</expr_stmt>

        <goto pos:start="213:9" pos:end="213:24">goto <name pos:start="213:14" pos:end="213:23">store_next</name>;</goto>

    <case pos:start="215:5" pos:end="215:31">case <expr pos:start="215:10" pos:end="215:30"><name pos:start="215:10" pos:end="215:30">POWERPC_EXCP_EXTERNAL</name></expr>:</case>  <comment type="block" pos:start="215:34" pos:end="215:79">/* External input                           */</comment>

        <expr_stmt pos:start="217:9" pos:end="220:0"><expr pos:start="217:9" pos:end="217:47"><name pos:start="217:9" pos:end="217:15">new_msr</name> <operator pos:start="217:17" pos:end="217:18">&amp;=</operator> <operator pos:start="217:20" pos:end="217:20">~</operator><operator pos:start="217:21" pos:end="217:21">(</operator><operator pos:start="217:22" pos:end="217:22">(</operator><name pos:start="217:23" pos:end="217:34">target_ulong</name><operator pos:start="217:35" pos:end="217:35">)</operator><literal type="number" pos:start="217:36" pos:end="217:36">1</literal> <operator pos:start="217:38" pos:end="217:39">&lt;&lt;</operator> <name pos:start="217:41" pos:end="217:46">MSR_RI</name><operator pos:start="217:47" pos:end="217:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="219:1" pos:end="219:26">#<cpp:directive pos:start="219:2" pos:end="219:3">if</cpp:directive> <expr pos:start="219:5" pos:end="219:26"><call pos:start="219:5" pos:end="219:26"><name pos:start="219:5" pos:end="219:11">defined</name><argument_list pos:start="219:12" pos:end="219:26">(<argument pos:start="219:13" pos:end="219:25"><expr pos:start="219:13" pos:end="219:25"><name pos:start="219:13" pos:end="219:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="221:9" pos:end="226:0"><if pos:start="221:9" pos:end="226:0">if <condition pos:start="221:12" pos:end="221:23">(<expr pos:start="221:13" pos:end="221:22"><name pos:start="221:13" pos:end="221:17">lpes0</name> <operator pos:start="221:19" pos:end="221:20">==</operator> <literal type="number" pos:start="221:22" pos:end="221:22">1</literal></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="226:0"><block_content pos:start="223:13" pos:end="226:0">

            <expr_stmt pos:start="223:13" pos:end="226:0"><expr pos:start="223:13" pos:end="223:48"><name pos:start="223:13" pos:end="223:19">new_msr</name> <operator pos:start="223:21" pos:end="223:22">|=</operator> <operator pos:start="223:24" pos:end="223:24">(</operator><name pos:start="223:25" pos:end="223:36">target_ulong</name><operator pos:start="223:37" pos:end="223:37">)</operator><literal type="number" pos:start="223:38" pos:end="223:38">1</literal> <operator pos:start="223:40" pos:end="223:41">&lt;&lt;</operator> <name pos:start="223:43" pos:end="223:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="225:1" pos:end="225:6">#<cpp:directive pos:start="225:2" pos:end="225:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="227:9" pos:end="227:24">goto <name pos:start="227:14" pos:end="227:23">store_next</name>;</goto>

    <case pos:start="229:5" pos:end="229:28">case <expr pos:start="229:10" pos:end="229:27"><name pos:start="229:10" pos:end="229:27">POWERPC_EXCP_ALIGN</name></expr>:</case>     <comment type="block" pos:start="229:34" pos:end="229:79">/* Alignment exception                      */</comment>

        <expr_stmt pos:start="231:9" pos:end="234:0"><expr pos:start="231:9" pos:end="231:47"><name pos:start="231:9" pos:end="231:15">new_msr</name> <operator pos:start="231:17" pos:end="231:18">&amp;=</operator> <operator pos:start="231:20" pos:end="231:20">~</operator><operator pos:start="231:21" pos:end="231:21">(</operator><operator pos:start="231:22" pos:end="231:22">(</operator><name pos:start="231:23" pos:end="231:34">target_ulong</name><operator pos:start="231:35" pos:end="231:35">)</operator><literal type="number" pos:start="231:36" pos:end="231:36">1</literal> <operator pos:start="231:38" pos:end="231:39">&lt;&lt;</operator> <name pos:start="231:41" pos:end="231:46">MSR_RI</name><operator pos:start="231:47" pos:end="231:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="233:1" pos:end="233:26">#<cpp:directive pos:start="233:2" pos:end="233:3">if</cpp:directive> <expr pos:start="233:5" pos:end="233:26"><call pos:start="233:5" pos:end="233:26"><name pos:start="233:5" pos:end="233:11">defined</name><argument_list pos:start="233:12" pos:end="233:26">(<argument pos:start="233:13" pos:end="233:25"><expr pos:start="233:13" pos:end="233:25"><name pos:start="233:13" pos:end="233:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="235:9" pos:end="240:0"><if pos:start="235:9" pos:end="240:0">if <condition pos:start="235:12" pos:end="235:23">(<expr pos:start="235:13" pos:end="235:22"><name pos:start="235:13" pos:end="235:17">lpes1</name> <operator pos:start="235:19" pos:end="235:20">==</operator> <literal type="number" pos:start="235:22" pos:end="235:22">0</literal></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="240:0"><block_content pos:start="237:13" pos:end="240:0">

            <expr_stmt pos:start="237:13" pos:end="240:0"><expr pos:start="237:13" pos:end="237:48"><name pos:start="237:13" pos:end="237:19">new_msr</name> <operator pos:start="237:21" pos:end="237:22">|=</operator> <operator pos:start="237:24" pos:end="237:24">(</operator><name pos:start="237:25" pos:end="237:36">target_ulong</name><operator pos:start="237:37" pos:end="237:37">)</operator><literal type="number" pos:start="237:38" pos:end="237:38">1</literal> <operator pos:start="237:40" pos:end="237:41">&lt;&lt;</operator> <name pos:start="237:43" pos:end="237:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="239:1" pos:end="239:6">#<cpp:directive pos:start="239:2" pos:end="239:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="241:9" pos:end="241:32">/* XXX: this is false */</comment>

        <comment type="block" pos:start="243:9" pos:end="243:51">/* Get rS/rD and rA from faulting opcode */</comment>

        <expr_stmt pos:start="245:9" pos:end="245:77"><expr pos:start="245:9" pos:end="245:76"><name pos:start="245:9" pos:end="245:27"><name pos:start="245:9" pos:end="245:11">env</name><operator pos:start="245:12" pos:end="245:13">-&gt;</operator><name pos:start="245:14" pos:end="245:16">spr</name><index pos:start="245:17" pos:end="245:27">[<expr pos:start="245:18" pos:end="245:26"><name pos:start="245:18" pos:end="245:26">SPR_DSISR</name></expr>]</index></name> <operator pos:start="245:29" pos:end="245:30">|=</operator> <operator pos:start="245:32" pos:end="245:32">(</operator><call pos:start="245:33" pos:end="245:56"><name pos:start="245:33" pos:end="245:40">ldl_code</name><argument_list pos:start="245:41" pos:end="245:56">(<argument pos:start="245:42" pos:end="245:55"><expr pos:start="245:42" pos:end="245:55"><operator pos:start="245:42" pos:end="245:42">(</operator><name pos:start="245:43" pos:end="245:50"><name pos:start="245:43" pos:end="245:45">env</name><operator pos:start="245:46" pos:end="245:47">-&gt;</operator><name pos:start="245:48" pos:end="245:50">nip</name></name> <operator pos:start="245:52" pos:end="245:52">-</operator> <literal type="number" pos:start="245:54" pos:end="245:54">4</literal><operator pos:start="245:55" pos:end="245:55">)</operator></expr></argument>)</argument_list></call> <operator pos:start="245:58" pos:end="245:58">&amp;</operator> <literal type="number" pos:start="245:60" pos:end="245:69">0x03FF0000</literal><operator pos:start="245:70" pos:end="245:70">)</operator> <operator pos:start="245:72" pos:end="245:73">&gt;&gt;</operator> <literal type="number" pos:start="245:75" pos:end="245:76">16</literal></expr>;</expr_stmt>

        <goto pos:start="247:9" pos:end="247:27">goto <name pos:start="247:14" pos:end="247:26">store_current</name>;</goto>

    <case pos:start="249:5" pos:end="249:30">case <expr pos:start="249:10" pos:end="249:29"><name pos:start="249:10" pos:end="249:29">POWERPC_EXCP_PROGRAM</name></expr>:</case>   <comment type="block" pos:start="249:34" pos:end="249:79">/* Program exception                        */</comment>

        <switch pos:start="251:9" pos:end="365:9">switch <condition pos:start="251:16" pos:end="251:39">(<expr pos:start="251:17" pos:end="251:38"><name pos:start="251:17" pos:end="251:31"><name pos:start="251:17" pos:end="251:19">env</name><operator pos:start="251:20" pos:end="251:21">-&gt;</operator><name pos:start="251:22" pos:end="251:31">error_code</name></name> <operator pos:start="251:33" pos:end="251:33">&amp;</operator> <operator pos:start="251:35" pos:end="251:35">~</operator><literal type="number" pos:start="251:36" pos:end="251:38">0xF</literal></expr>)</condition> <block pos:start="251:41" pos:end="365:9">{<block_content pos:start="253:9" pos:end="363:18">

        <case pos:start="253:9" pos:end="253:29">case <expr pos:start="253:14" pos:end="253:28"><name pos:start="253:14" pos:end="253:28">POWERPC_EXCP_FP</name></expr>:</case>

            <if_stmt pos:start="255:13" pos:end="273:13"><if pos:start="255:13" pos:end="273:13">if <condition pos:start="255:16" pos:end="255:62">(<expr pos:start="255:17" pos:end="255:61"><operator pos:start="255:17" pos:end="255:17">(</operator><name pos:start="255:18" pos:end="255:24">msr_fe0</name> <operator pos:start="255:26" pos:end="255:27">==</operator> <literal type="number" pos:start="255:29" pos:end="255:29">0</literal> <operator pos:start="255:31" pos:end="255:32">&amp;&amp;</operator> <name pos:start="255:34" pos:end="255:40">msr_fe1</name> <operator pos:start="255:42" pos:end="255:43">==</operator> <literal type="number" pos:start="255:45" pos:end="255:45">0</literal><operator pos:start="255:46" pos:end="255:46">)</operator> <operator pos:start="255:48" pos:end="255:49">||</operator> <name pos:start="255:51" pos:end="255:56">msr_fp</name> <operator pos:start="255:58" pos:end="255:59">==</operator> <literal type="number" pos:start="255:61" pos:end="255:61">0</literal></expr>)</condition> <block pos:start="255:64" pos:end="273:13">{<block_content pos:start="259:17" pos:end="271:23">

<cpp:if pos:start="257:1" pos:end="257:30">#<cpp:directive pos:start="257:2" pos:end="257:3">if</cpp:directive> <expr pos:start="257:5" pos:end="257:30"><call pos:start="257:5" pos:end="257:30"><name pos:start="257:5" pos:end="257:11">defined</name> <argument_list pos:start="257:13" pos:end="257:30">(<argument pos:start="257:14" pos:end="257:29"><expr pos:start="257:14" pos:end="257:29"><name pos:start="257:14" pos:end="257:29">DEBUG_EXCEPTIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <if_stmt pos:start="259:17" pos:end="266:0"><if pos:start="259:17" pos:end="266:0">if <condition pos:start="259:20" pos:end="259:34">(<expr pos:start="259:21" pos:end="259:33"><name pos:start="259:21" pos:end="259:28">loglevel</name> <operator pos:start="259:30" pos:end="259:31">!=</operator> <literal type="number" pos:start="259:33" pos:end="259:33">0</literal></expr>)</condition> <block pos:start="259:36" pos:end="266:0">{<block_content pos:start="261:21" pos:end="261:74">

                    <expr_stmt pos:start="261:21" pos:end="261:74"><expr pos:start="261:21" pos:end="261:73"><call pos:start="261:21" pos:end="261:73"><name pos:start="261:21" pos:end="261:27">fprintf</name><argument_list pos:start="261:28" pos:end="261:73">(<argument pos:start="261:29" pos:end="261:35"><expr pos:start="261:29" pos:end="261:35"><name pos:start="261:29" pos:end="261:35">logfile</name></expr></argument>, <argument pos:start="261:38" pos:end="261:72"><expr pos:start="261:38" pos:end="261:72"><literal type="string" pos:start="261:38" pos:end="261:72">"Ignore floating point exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="265:1" pos:end="265:6">#<cpp:directive pos:start="265:2" pos:end="265:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="267:17" pos:end="267:57"><expr pos:start="267:17" pos:end="267:56"><name pos:start="267:17" pos:end="267:36"><name pos:start="267:17" pos:end="267:19">env</name><operator pos:start="267:20" pos:end="267:21">-&gt;</operator><name pos:start="267:22" pos:end="267:36">exception_index</name></name> <operator pos:start="267:38" pos:end="267:38">=</operator> <name pos:start="267:40" pos:end="267:56">POWERPC_EXCP_NONE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:36"><expr pos:start="269:17" pos:end="269:35"><name pos:start="269:17" pos:end="269:31"><name pos:start="269:17" pos:end="269:19">env</name><operator pos:start="269:20" pos:end="269:21">-&gt;</operator><name pos:start="269:22" pos:end="269:31">error_code</name></name> <operator pos:start="269:33" pos:end="269:33">=</operator> <literal type="number" pos:start="269:35" pos:end="269:35">0</literal></expr>;</expr_stmt>

                <return pos:start="271:17" pos:end="271:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="275:13" pos:end="278:0"><expr pos:start="275:13" pos:end="275:51"><name pos:start="275:13" pos:end="275:19">new_msr</name> <operator pos:start="275:21" pos:end="275:22">&amp;=</operator> <operator pos:start="275:24" pos:end="275:24">~</operator><operator pos:start="275:25" pos:end="275:25">(</operator><operator pos:start="275:26" pos:end="275:26">(</operator><name pos:start="275:27" pos:end="275:38">target_ulong</name><operator pos:start="275:39" pos:end="275:39">)</operator><literal type="number" pos:start="275:40" pos:end="275:40">1</literal> <operator pos:start="275:42" pos:end="275:43">&lt;&lt;</operator> <name pos:start="275:45" pos:end="275:50">MSR_RI</name><operator pos:start="275:51" pos:end="275:51">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="277:1" pos:end="277:26">#<cpp:directive pos:start="277:2" pos:end="277:3">if</cpp:directive> <expr pos:start="277:5" pos:end="277:26"><call pos:start="277:5" pos:end="277:26"><name pos:start="277:5" pos:end="277:11">defined</name><argument_list pos:start="277:12" pos:end="277:26">(<argument pos:start="277:13" pos:end="277:25"><expr pos:start="277:13" pos:end="277:25"><name pos:start="277:13" pos:end="277:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="279:13" pos:end="284:0"><if pos:start="279:13" pos:end="284:0">if <condition pos:start="279:16" pos:end="279:27">(<expr pos:start="279:17" pos:end="279:26"><name pos:start="279:17" pos:end="279:21">lpes1</name> <operator pos:start="279:23" pos:end="279:24">==</operator> <literal type="number" pos:start="279:26" pos:end="279:26">0</literal></expr>)</condition><block type="pseudo" pos:start="281:17" pos:end="284:0"><block_content pos:start="281:17" pos:end="284:0">

                <expr_stmt pos:start="281:17" pos:end="284:0"><expr pos:start="281:17" pos:end="281:52"><name pos:start="281:17" pos:end="281:23">new_msr</name> <operator pos:start="281:25" pos:end="281:26">|=</operator> <operator pos:start="281:28" pos:end="281:28">(</operator><name pos:start="281:29" pos:end="281:40">target_ulong</name><operator pos:start="281:41" pos:end="281:41">)</operator><literal type="number" pos:start="281:42" pos:end="281:42">1</literal> <operator pos:start="281:44" pos:end="281:45">&lt;&lt;</operator> <name pos:start="281:47" pos:end="281:52">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="283:1" pos:end="283:6">#<cpp:directive pos:start="283:2" pos:end="283:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="285:13" pos:end="285:30"><expr pos:start="285:13" pos:end="285:29"><name pos:start="285:13" pos:end="285:15">msr</name> <operator pos:start="285:17" pos:end="285:18">|=</operator> <literal type="number" pos:start="285:20" pos:end="285:29">0x00100000</literal></expr>;</expr_stmt>

            <if_stmt pos:start="287:13" pos:end="289:32"><if pos:start="287:13" pos:end="289:32">if <condition pos:start="287:16" pos:end="287:35">(<expr pos:start="287:17" pos:end="287:34"><name pos:start="287:17" pos:end="287:23">msr_fe0</name> <operator pos:start="287:25" pos:end="287:26">==</operator> <name pos:start="287:28" pos:end="287:34">msr_fe1</name></expr>)</condition><block type="pseudo" pos:start="289:17" pos:end="289:32"><block_content pos:start="289:17" pos:end="289:32">

                <goto pos:start="289:17" pos:end="289:32">goto <name pos:start="289:22" pos:end="289:31">store_next</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:30"><expr pos:start="291:13" pos:end="291:29"><name pos:start="291:13" pos:end="291:15">msr</name> <operator pos:start="291:17" pos:end="291:18">|=</operator> <literal type="number" pos:start="291:20" pos:end="291:29">0x00010000</literal></expr>;</expr_stmt>

            <break pos:start="293:13" pos:end="293:18">break;</break>

        <case pos:start="295:9" pos:end="298:0">case <expr pos:start="295:14" pos:end="295:31"><name pos:start="295:14" pos:end="295:31">POWERPC_EXCP_INVAL</name></expr>:</case>

<cpp:if pos:start="297:1" pos:end="297:30">#<cpp:directive pos:start="297:2" pos:end="297:3">if</cpp:directive> <expr pos:start="297:5" pos:end="297:30"><call pos:start="297:5" pos:end="297:30"><name pos:start="297:5" pos:end="297:11">defined</name> <argument_list pos:start="297:13" pos:end="297:30">(<argument pos:start="297:14" pos:end="297:29"><expr pos:start="297:14" pos:end="297:29"><name pos:start="297:14" pos:end="297:29">DEBUG_EXCEPTIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="299:13" pos:end="308:0"><if pos:start="299:13" pos:end="308:0">if <condition pos:start="299:16" pos:end="299:30">(<expr pos:start="299:17" pos:end="299:29"><name pos:start="299:17" pos:end="299:24">loglevel</name> <operator pos:start="299:26" pos:end="299:27">!=</operator> <literal type="number" pos:start="299:29" pos:end="299:29">0</literal></expr>)</condition> <block pos:start="299:32" pos:end="308:0">{<block_content pos:start="301:17" pos:end="303:34">

                <expr_stmt pos:start="301:17" pos:end="303:34"><expr pos:start="301:17" pos:end="303:33"><call pos:start="301:17" pos:end="303:33"><name pos:start="301:17" pos:end="301:23">fprintf</name><argument_list pos:start="301:24" pos:end="303:33">(<argument pos:start="301:25" pos:end="301:31"><expr pos:start="301:25" pos:end="301:31"><name pos:start="301:25" pos:end="301:31">logfile</name></expr></argument>, <argument pos:start="301:34" pos:end="301:71"><expr pos:start="301:34" pos:end="301:71"><literal type="string" pos:start="301:34" pos:end="301:60">"Invalid instruction at 0x"</literal> <name pos:start="301:62" pos:end="301:66">ADDRX</name> <literal type="string" pos:start="301:68" pos:end="301:71">"\n"</literal></expr></argument>,

                        <argument pos:start="303:25" pos:end="303:32"><expr pos:start="303:25" pos:end="303:32"><name pos:start="303:25" pos:end="303:32"><name pos:start="303:25" pos:end="303:27">env</name><operator pos:start="303:28" pos:end="303:29">-&gt;</operator><name pos:start="303:30" pos:end="303:32">nip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="307:1" pos:end="307:6">#<cpp:directive pos:start="307:2" pos:end="307:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="309:13" pos:end="312:0"><expr pos:start="309:13" pos:end="309:51"><name pos:start="309:13" pos:end="309:19">new_msr</name> <operator pos:start="309:21" pos:end="309:22">&amp;=</operator> <operator pos:start="309:24" pos:end="309:24">~</operator><operator pos:start="309:25" pos:end="309:25">(</operator><operator pos:start="309:26" pos:end="309:26">(</operator><name pos:start="309:27" pos:end="309:38">target_ulong</name><operator pos:start="309:39" pos:end="309:39">)</operator><literal type="number" pos:start="309:40" pos:end="309:40">1</literal> <operator pos:start="309:42" pos:end="309:43">&lt;&lt;</operator> <name pos:start="309:45" pos:end="309:50">MSR_RI</name><operator pos:start="309:51" pos:end="309:51">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="311:1" pos:end="311:26">#<cpp:directive pos:start="311:2" pos:end="311:3">if</cpp:directive> <expr pos:start="311:5" pos:end="311:26"><call pos:start="311:5" pos:end="311:26"><name pos:start="311:5" pos:end="311:11">defined</name><argument_list pos:start="311:12" pos:end="311:26">(<argument pos:start="311:13" pos:end="311:25"><expr pos:start="311:13" pos:end="311:25"><name pos:start="311:13" pos:end="311:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="313:13" pos:end="318:0"><if pos:start="313:13" pos:end="318:0">if <condition pos:start="313:16" pos:end="313:27">(<expr pos:start="313:17" pos:end="313:26"><name pos:start="313:17" pos:end="313:21">lpes1</name> <operator pos:start="313:23" pos:end="313:24">==</operator> <literal type="number" pos:start="313:26" pos:end="313:26">0</literal></expr>)</condition><block type="pseudo" pos:start="315:17" pos:end="318:0"><block_content pos:start="315:17" pos:end="318:0">

                <expr_stmt pos:start="315:17" pos:end="318:0"><expr pos:start="315:17" pos:end="315:52"><name pos:start="315:17" pos:end="315:23">new_msr</name> <operator pos:start="315:25" pos:end="315:26">|=</operator> <operator pos:start="315:28" pos:end="315:28">(</operator><name pos:start="315:29" pos:end="315:40">target_ulong</name><operator pos:start="315:41" pos:end="315:41">)</operator><literal type="number" pos:start="315:42" pos:end="315:42">1</literal> <operator pos:start="315:44" pos:end="315:45">&lt;&lt;</operator> <name pos:start="315:47" pos:end="315:52">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="317:1" pos:end="317:6">#<cpp:directive pos:start="317:2" pos:end="317:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="319:13" pos:end="319:30"><expr pos:start="319:13" pos:end="319:29"><name pos:start="319:13" pos:end="319:15">msr</name> <operator pos:start="319:17" pos:end="319:18">|=</operator> <literal type="number" pos:start="319:20" pos:end="319:29">0x00080000</literal></expr>;</expr_stmt>

            <break pos:start="321:13" pos:end="321:18">break;</break>

        <case pos:start="323:9" pos:end="323:31">case <expr pos:start="323:14" pos:end="323:30"><name pos:start="323:14" pos:end="323:30">POWERPC_EXCP_PRIV</name></expr>:</case>

            <expr_stmt pos:start="325:13" pos:end="328:0"><expr pos:start="325:13" pos:end="325:51"><name pos:start="325:13" pos:end="325:19">new_msr</name> <operator pos:start="325:21" pos:end="325:22">&amp;=</operator> <operator pos:start="325:24" pos:end="325:24">~</operator><operator pos:start="325:25" pos:end="325:25">(</operator><operator pos:start="325:26" pos:end="325:26">(</operator><name pos:start="325:27" pos:end="325:38">target_ulong</name><operator pos:start="325:39" pos:end="325:39">)</operator><literal type="number" pos:start="325:40" pos:end="325:40">1</literal> <operator pos:start="325:42" pos:end="325:43">&lt;&lt;</operator> <name pos:start="325:45" pos:end="325:50">MSR_RI</name><operator pos:start="325:51" pos:end="325:51">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="327:1" pos:end="327:26">#<cpp:directive pos:start="327:2" pos:end="327:3">if</cpp:directive> <expr pos:start="327:5" pos:end="327:26"><call pos:start="327:5" pos:end="327:26"><name pos:start="327:5" pos:end="327:11">defined</name><argument_list pos:start="327:12" pos:end="327:26">(<argument pos:start="327:13" pos:end="327:25"><expr pos:start="327:13" pos:end="327:25"><name pos:start="327:13" pos:end="327:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="329:13" pos:end="334:0"><if pos:start="329:13" pos:end="334:0">if <condition pos:start="329:16" pos:end="329:27">(<expr pos:start="329:17" pos:end="329:26"><name pos:start="329:17" pos:end="329:21">lpes1</name> <operator pos:start="329:23" pos:end="329:24">==</operator> <literal type="number" pos:start="329:26" pos:end="329:26">0</literal></expr>)</condition><block type="pseudo" pos:start="331:17" pos:end="334:0"><block_content pos:start="331:17" pos:end="334:0">

                <expr_stmt pos:start="331:17" pos:end="334:0"><expr pos:start="331:17" pos:end="331:52"><name pos:start="331:17" pos:end="331:23">new_msr</name> <operator pos:start="331:25" pos:end="331:26">|=</operator> <operator pos:start="331:28" pos:end="331:28">(</operator><name pos:start="331:29" pos:end="331:40">target_ulong</name><operator pos:start="331:41" pos:end="331:41">)</operator><literal type="number" pos:start="331:42" pos:end="331:42">1</literal> <operator pos:start="331:44" pos:end="331:45">&lt;&lt;</operator> <name pos:start="331:47" pos:end="331:52">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="333:1" pos:end="333:6">#<cpp:directive pos:start="333:2" pos:end="333:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="335:13" pos:end="335:30"><expr pos:start="335:13" pos:end="335:29"><name pos:start="335:13" pos:end="335:15">msr</name> <operator pos:start="335:17" pos:end="335:18">|=</operator> <literal type="number" pos:start="335:20" pos:end="335:29">0x00040000</literal></expr>;</expr_stmt>

            <break pos:start="337:13" pos:end="337:18">break;</break>

        <case pos:start="339:9" pos:end="339:31">case <expr pos:start="339:14" pos:end="339:30"><name pos:start="339:14" pos:end="339:30">POWERPC_EXCP_TRAP</name></expr>:</case>

            <expr_stmt pos:start="341:13" pos:end="344:0"><expr pos:start="341:13" pos:end="341:51"><name pos:start="341:13" pos:end="341:19">new_msr</name> <operator pos:start="341:21" pos:end="341:22">&amp;=</operator> <operator pos:start="341:24" pos:end="341:24">~</operator><operator pos:start="341:25" pos:end="341:25">(</operator><operator pos:start="341:26" pos:end="341:26">(</operator><name pos:start="341:27" pos:end="341:38">target_ulong</name><operator pos:start="341:39" pos:end="341:39">)</operator><literal type="number" pos:start="341:40" pos:end="341:40">1</literal> <operator pos:start="341:42" pos:end="341:43">&lt;&lt;</operator> <name pos:start="341:45" pos:end="341:50">MSR_RI</name><operator pos:start="341:51" pos:end="341:51">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="343:1" pos:end="343:26">#<cpp:directive pos:start="343:2" pos:end="343:3">if</cpp:directive> <expr pos:start="343:5" pos:end="343:26"><call pos:start="343:5" pos:end="343:26"><name pos:start="343:5" pos:end="343:11">defined</name><argument_list pos:start="343:12" pos:end="343:26">(<argument pos:start="343:13" pos:end="343:25"><expr pos:start="343:13" pos:end="343:25"><name pos:start="343:13" pos:end="343:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="345:13" pos:end="350:0"><if pos:start="345:13" pos:end="350:0">if <condition pos:start="345:16" pos:end="345:27">(<expr pos:start="345:17" pos:end="345:26"><name pos:start="345:17" pos:end="345:21">lpes1</name> <operator pos:start="345:23" pos:end="345:24">==</operator> <literal type="number" pos:start="345:26" pos:end="345:26">0</literal></expr>)</condition><block type="pseudo" pos:start="347:17" pos:end="350:0"><block_content pos:start="347:17" pos:end="350:0">

                <expr_stmt pos:start="347:17" pos:end="350:0"><expr pos:start="347:17" pos:end="347:52"><name pos:start="347:17" pos:end="347:23">new_msr</name> <operator pos:start="347:25" pos:end="347:26">|=</operator> <operator pos:start="347:28" pos:end="347:28">(</operator><name pos:start="347:29" pos:end="347:40">target_ulong</name><operator pos:start="347:41" pos:end="347:41">)</operator><literal type="number" pos:start="347:42" pos:end="347:42">1</literal> <operator pos:start="347:44" pos:end="347:45">&lt;&lt;</operator> <name pos:start="347:47" pos:end="347:52">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="349:1" pos:end="349:6">#<cpp:directive pos:start="349:2" pos:end="349:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="351:13" pos:end="351:30"><expr pos:start="351:13" pos:end="351:29"><name pos:start="351:13" pos:end="351:15">msr</name> <operator pos:start="351:17" pos:end="351:18">|=</operator> <literal type="number" pos:start="351:20" pos:end="351:29">0x00020000</literal></expr>;</expr_stmt>

            <break pos:start="353:13" pos:end="353:18">break;</break>

        <default pos:start="355:9" pos:end="355:16">default:</default>

            <comment type="block" pos:start="357:13" pos:end="357:36">/* Should never occur */</comment>

            <expr_stmt pos:start="359:13" pos:end="361:39"><expr pos:start="359:13" pos:end="361:38"><call pos:start="359:13" pos:end="361:38"><name pos:start="359:13" pos:end="359:21">cpu_abort</name><argument_list pos:start="359:22" pos:end="361:38">(<argument pos:start="359:23" pos:end="359:25"><expr pos:start="359:23" pos:end="359:25"><name pos:start="359:23" pos:end="359:25">env</name></expr></argument>, <argument pos:start="359:28" pos:end="359:69"><expr pos:start="359:28" pos:end="359:69"><literal type="string" pos:start="359:28" pos:end="359:69">"Invalid program exception %d. Aborting\n"</literal></expr></argument>,

                      <argument pos:start="361:23" pos:end="361:37"><expr pos:start="361:23" pos:end="361:37"><name pos:start="361:23" pos:end="361:37"><name pos:start="361:23" pos:end="361:25">env</name><operator pos:start="361:26" pos:end="361:27">-&gt;</operator><name pos:start="361:28" pos:end="361:37">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="363:13" pos:end="363:18">break;</break>

        </block_content>}</block></switch>

        <goto pos:start="367:9" pos:end="367:27">goto <name pos:start="367:14" pos:end="367:26">store_current</name>;</goto>

    <case pos:start="369:5" pos:end="369:26">case <expr pos:start="369:10" pos:end="369:25"><name pos:start="369:10" pos:end="369:25">POWERPC_EXCP_FPU</name></expr>:</case>       <comment type="block" pos:start="369:34" pos:end="369:79">/* Floating-point unavailable exception     */</comment>

        <expr_stmt pos:start="371:9" pos:end="374:0"><expr pos:start="371:9" pos:end="371:47"><name pos:start="371:9" pos:end="371:15">new_msr</name> <operator pos:start="371:17" pos:end="371:18">&amp;=</operator> <operator pos:start="371:20" pos:end="371:20">~</operator><operator pos:start="371:21" pos:end="371:21">(</operator><operator pos:start="371:22" pos:end="371:22">(</operator><name pos:start="371:23" pos:end="371:34">target_ulong</name><operator pos:start="371:35" pos:end="371:35">)</operator><literal type="number" pos:start="371:36" pos:end="371:36">1</literal> <operator pos:start="371:38" pos:end="371:39">&lt;&lt;</operator> <name pos:start="371:41" pos:end="371:46">MSR_RI</name><operator pos:start="371:47" pos:end="371:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="373:1" pos:end="373:26">#<cpp:directive pos:start="373:2" pos:end="373:3">if</cpp:directive> <expr pos:start="373:5" pos:end="373:26"><call pos:start="373:5" pos:end="373:26"><name pos:start="373:5" pos:end="373:11">defined</name><argument_list pos:start="373:12" pos:end="373:26">(<argument pos:start="373:13" pos:end="373:25"><expr pos:start="373:13" pos:end="373:25"><name pos:start="373:13" pos:end="373:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="375:9" pos:end="380:0"><if pos:start="375:9" pos:end="380:0">if <condition pos:start="375:12" pos:end="375:23">(<expr pos:start="375:13" pos:end="375:22"><name pos:start="375:13" pos:end="375:17">lpes1</name> <operator pos:start="375:19" pos:end="375:20">==</operator> <literal type="number" pos:start="375:22" pos:end="375:22">0</literal></expr>)</condition><block type="pseudo" pos:start="377:13" pos:end="380:0"><block_content pos:start="377:13" pos:end="380:0">

            <expr_stmt pos:start="377:13" pos:end="380:0"><expr pos:start="377:13" pos:end="377:48"><name pos:start="377:13" pos:end="377:19">new_msr</name> <operator pos:start="377:21" pos:end="377:22">|=</operator> <operator pos:start="377:24" pos:end="377:24">(</operator><name pos:start="377:25" pos:end="377:36">target_ulong</name><operator pos:start="377:37" pos:end="377:37">)</operator><literal type="number" pos:start="377:38" pos:end="377:38">1</literal> <operator pos:start="377:40" pos:end="377:41">&lt;&lt;</operator> <name pos:start="377:43" pos:end="377:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="379:1" pos:end="379:6">#<cpp:directive pos:start="379:2" pos:end="379:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="381:9" pos:end="381:27">goto <name pos:start="381:14" pos:end="381:26">store_current</name>;</goto>

    <case pos:start="383:5" pos:end="383:30">case <expr pos:start="383:10" pos:end="383:29"><name pos:start="383:10" pos:end="383:29">POWERPC_EXCP_SYSCALL</name></expr>:</case>   <comment type="block" pos:start="383:34" pos:end="383:79">/* System call exception                    */</comment>

        <comment type="block" pos:start="385:9" pos:end="387:39">/* NOTE: this is a temporary hack to support graphics OSI

           calls from the MOL driver */</comment>

        <comment type="block" pos:start="389:9" pos:end="389:32">/* XXX: To be removed */</comment>

        <if_stmt pos:start="391:9" pos:end="405:9"><if pos:start="391:9" pos:end="405:9">if <condition pos:start="391:12" pos:end="393:26">(<expr pos:start="391:13" pos:end="393:25"><name pos:start="391:13" pos:end="391:23"><name pos:start="391:13" pos:end="391:15">env</name><operator pos:start="391:16" pos:end="391:17">-&gt;</operator><name pos:start="391:18" pos:end="391:20">gpr</name><index pos:start="391:21" pos:end="391:23">[<expr pos:start="391:22" pos:end="391:22"><literal type="number" pos:start="391:22" pos:end="391:22">3</literal></expr>]</index></name> <operator pos:start="391:25" pos:end="391:26">==</operator> <literal type="number" pos:start="391:28" pos:end="391:37">0x113724fa</literal> <operator pos:start="391:39" pos:end="391:40">&amp;&amp;</operator> <name pos:start="391:42" pos:end="391:52"><name pos:start="391:42" pos:end="391:44">env</name><operator pos:start="391:45" pos:end="391:46">-&gt;</operator><name pos:start="391:47" pos:end="391:49">gpr</name><index pos:start="391:50" pos:end="391:52">[<expr pos:start="391:51" pos:end="391:51"><literal type="number" pos:start="391:51" pos:end="391:51">4</literal></expr>]</index></name> <operator pos:start="391:54" pos:end="391:55">==</operator> <literal type="number" pos:start="391:57" pos:end="391:66">0x77810f9b</literal> <operator pos:start="391:68" pos:end="391:69">&amp;&amp;</operator>

            <name pos:start="393:13" pos:end="393:25"><name pos:start="393:13" pos:end="393:15">env</name><operator pos:start="393:16" pos:end="393:17">-&gt;</operator><name pos:start="393:18" pos:end="393:25">osi_call</name></name></expr>)</condition> <block pos:start="393:28" pos:end="405:9">{<block_content pos:start="395:13" pos:end="403:13">

            <if_stmt pos:start="395:13" pos:end="403:13"><if pos:start="395:13" pos:end="403:13">if <condition pos:start="395:16" pos:end="395:40">(<expr pos:start="395:17" pos:end="395:39"><call pos:start="395:17" pos:end="395:34"><name pos:start="395:17" pos:end="395:29"><name pos:start="395:17" pos:end="395:19">env</name><operator pos:start="395:20" pos:end="395:21">-&gt;</operator><name pos:start="395:22" pos:end="395:29">osi_call</name></name><argument_list pos:start="395:30" pos:end="395:34">(<argument pos:start="395:31" pos:end="395:33"><expr pos:start="395:31" pos:end="395:33"><name pos:start="395:31" pos:end="395:33">env</name></expr></argument>)</argument_list></call> <operator pos:start="395:36" pos:end="395:37">!=</operator> <literal type="number" pos:start="395:39" pos:end="395:39">0</literal></expr>)</condition> <block pos:start="395:42" pos:end="403:13">{<block_content pos:start="397:17" pos:end="401:23">

                <expr_stmt pos:start="397:17" pos:end="397:57"><expr pos:start="397:17" pos:end="397:56"><name pos:start="397:17" pos:end="397:36"><name pos:start="397:17" pos:end="397:19">env</name><operator pos:start="397:20" pos:end="397:21">-&gt;</operator><name pos:start="397:22" pos:end="397:36">exception_index</name></name> <operator pos:start="397:38" pos:end="397:38">=</operator> <name pos:start="397:40" pos:end="397:56">POWERPC_EXCP_NONE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="399:17" pos:end="399:36"><expr pos:start="399:17" pos:end="399:35"><name pos:start="399:17" pos:end="399:31"><name pos:start="399:17" pos:end="399:19">env</name><operator pos:start="399:20" pos:end="399:21">-&gt;</operator><name pos:start="399:22" pos:end="399:31">error_code</name></name> <operator pos:start="399:33" pos:end="399:33">=</operator> <literal type="number" pos:start="399:35" pos:end="399:35">0</literal></expr>;</expr_stmt>

                <return pos:start="401:17" pos:end="401:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="407:9" pos:end="411:9"><if pos:start="407:9" pos:end="411:9">if <condition pos:start="407:12" pos:end="407:35">(<expr pos:start="407:13" pos:end="407:34"><name pos:start="407:13" pos:end="407:20">loglevel</name> <operator pos:start="407:22" pos:end="407:22">&amp;</operator> <name pos:start="407:24" pos:end="407:34">CPU_LOG_INT</name></expr>)</condition> <block pos:start="407:37" pos:end="411:9">{<block_content pos:start="409:13" pos:end="409:30">

            <expr_stmt pos:start="409:13" pos:end="409:30"><expr pos:start="409:13" pos:end="409:29"><call pos:start="409:13" pos:end="409:29"><name pos:start="409:13" pos:end="409:24">dump_syscall</name><argument_list pos:start="409:25" pos:end="409:29">(<argument pos:start="409:26" pos:end="409:28"><expr pos:start="409:26" pos:end="409:28"><name pos:start="409:26" pos:end="409:28">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="413:9" pos:end="416:0"><expr pos:start="413:9" pos:end="413:47"><name pos:start="413:9" pos:end="413:15">new_msr</name> <operator pos:start="413:17" pos:end="413:18">&amp;=</operator> <operator pos:start="413:20" pos:end="413:20">~</operator><operator pos:start="413:21" pos:end="413:21">(</operator><operator pos:start="413:22" pos:end="413:22">(</operator><name pos:start="413:23" pos:end="413:34">target_ulong</name><operator pos:start="413:35" pos:end="413:35">)</operator><literal type="number" pos:start="413:36" pos:end="413:36">1</literal> <operator pos:start="413:38" pos:end="413:39">&lt;&lt;</operator> <name pos:start="413:41" pos:end="413:46">MSR_RI</name><operator pos:start="413:47" pos:end="413:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="415:1" pos:end="415:26">#<cpp:directive pos:start="415:2" pos:end="415:3">if</cpp:directive> <expr pos:start="415:5" pos:end="415:26"><call pos:start="415:5" pos:end="415:26"><name pos:start="415:5" pos:end="415:11">defined</name><argument_list pos:start="415:12" pos:end="415:26">(<argument pos:start="415:13" pos:end="415:25"><expr pos:start="415:13" pos:end="415:25"><name pos:start="415:13" pos:end="415:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="417:9" pos:end="417:30"><expr pos:start="417:9" pos:end="417:29"><name pos:start="417:9" pos:end="417:11">lev</name> <operator pos:start="417:13" pos:end="417:13">=</operator> <name pos:start="417:15" pos:end="417:29"><name pos:start="417:15" pos:end="417:17">env</name><operator pos:start="417:18" pos:end="417:19">-&gt;</operator><name pos:start="417:20" pos:end="417:29">error_code</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="419:9" pos:end="424:0"><if pos:start="419:9" pos:end="424:0">if <condition pos:start="419:12" pos:end="419:51">(<expr pos:start="419:13" pos:end="419:50"><name pos:start="419:13" pos:end="419:15">lev</name> <operator pos:start="419:17" pos:end="419:18">==</operator> <literal type="number" pos:start="419:20" pos:end="419:20">1</literal> <operator pos:start="419:22" pos:end="419:23">||</operator> <operator pos:start="419:25" pos:end="419:25">(</operator><name pos:start="419:26" pos:end="419:30">lpes0</name> <operator pos:start="419:32" pos:end="419:33">==</operator> <literal type="number" pos:start="419:35" pos:end="419:35">0</literal> <operator pos:start="419:37" pos:end="419:38">&amp;&amp;</operator> <name pos:start="419:40" pos:end="419:44">lpes1</name> <operator pos:start="419:46" pos:end="419:47">==</operator> <literal type="number" pos:start="419:49" pos:end="419:49">0</literal><operator pos:start="419:50" pos:end="419:50">)</operator></expr>)</condition><block type="pseudo" pos:start="421:13" pos:end="424:0"><block_content pos:start="421:13" pos:end="424:0">

            <expr_stmt pos:start="421:13" pos:end="424:0"><expr pos:start="421:13" pos:end="421:48"><name pos:start="421:13" pos:end="421:19">new_msr</name> <operator pos:start="421:21" pos:end="421:22">|=</operator> <operator pos:start="421:24" pos:end="421:24">(</operator><name pos:start="421:25" pos:end="421:36">target_ulong</name><operator pos:start="421:37" pos:end="421:37">)</operator><literal type="number" pos:start="421:38" pos:end="421:38">1</literal> <operator pos:start="421:40" pos:end="421:41">&lt;&lt;</operator> <name pos:start="421:43" pos:end="421:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="423:1" pos:end="423:6">#<cpp:directive pos:start="423:2" pos:end="423:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="425:9" pos:end="425:24">goto <name pos:start="425:14" pos:end="425:23">store_next</name>;</goto>

    <case pos:start="427:5" pos:end="427:26">case <expr pos:start="427:10" pos:end="427:25"><name pos:start="427:10" pos:end="427:25">POWERPC_EXCP_APU</name></expr>:</case>       <comment type="block" pos:start="427:34" pos:end="427:79">/* Auxiliary processor unavailable          */</comment>

        <expr_stmt pos:start="429:9" pos:end="429:48"><expr pos:start="429:9" pos:end="429:47"><name pos:start="429:9" pos:end="429:15">new_msr</name> <operator pos:start="429:17" pos:end="429:18">&amp;=</operator> <operator pos:start="429:20" pos:end="429:20">~</operator><operator pos:start="429:21" pos:end="429:21">(</operator><operator pos:start="429:22" pos:end="429:22">(</operator><name pos:start="429:23" pos:end="429:34">target_ulong</name><operator pos:start="429:35" pos:end="429:35">)</operator><literal type="number" pos:start="429:36" pos:end="429:36">1</literal> <operator pos:start="429:38" pos:end="429:39">&lt;&lt;</operator> <name pos:start="429:41" pos:end="429:46">MSR_RI</name><operator pos:start="429:47" pos:end="429:47">)</operator></expr>;</expr_stmt>

        <goto pos:start="431:9" pos:end="431:27">goto <name pos:start="431:14" pos:end="431:26">store_current</name>;</goto>

    <case pos:start="433:5" pos:end="433:27">case <expr pos:start="433:10" pos:end="433:26"><name pos:start="433:10" pos:end="433:26">POWERPC_EXCP_DECR</name></expr>:</case>      <comment type="block" pos:start="433:34" pos:end="433:79">/* Decrementer exception                    */</comment>

        <expr_stmt pos:start="435:9" pos:end="438:0"><expr pos:start="435:9" pos:end="435:47"><name pos:start="435:9" pos:end="435:15">new_msr</name> <operator pos:start="435:17" pos:end="435:18">&amp;=</operator> <operator pos:start="435:20" pos:end="435:20">~</operator><operator pos:start="435:21" pos:end="435:21">(</operator><operator pos:start="435:22" pos:end="435:22">(</operator><name pos:start="435:23" pos:end="435:34">target_ulong</name><operator pos:start="435:35" pos:end="435:35">)</operator><literal type="number" pos:start="435:36" pos:end="435:36">1</literal> <operator pos:start="435:38" pos:end="435:39">&lt;&lt;</operator> <name pos:start="435:41" pos:end="435:46">MSR_RI</name><operator pos:start="435:47" pos:end="435:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="437:1" pos:end="437:26">#<cpp:directive pos:start="437:2" pos:end="437:3">if</cpp:directive> <expr pos:start="437:5" pos:end="437:26"><call pos:start="437:5" pos:end="437:26"><name pos:start="437:5" pos:end="437:11">defined</name><argument_list pos:start="437:12" pos:end="437:26">(<argument pos:start="437:13" pos:end="437:25"><expr pos:start="437:13" pos:end="437:25"><name pos:start="437:13" pos:end="437:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="439:9" pos:end="444:0"><if pos:start="439:9" pos:end="444:0">if <condition pos:start="439:12" pos:end="439:23">(<expr pos:start="439:13" pos:end="439:22"><name pos:start="439:13" pos:end="439:17">lpes1</name> <operator pos:start="439:19" pos:end="439:20">==</operator> <literal type="number" pos:start="439:22" pos:end="439:22">0</literal></expr>)</condition><block type="pseudo" pos:start="441:13" pos:end="444:0"><block_content pos:start="441:13" pos:end="444:0">

            <expr_stmt pos:start="441:13" pos:end="444:0"><expr pos:start="441:13" pos:end="441:48"><name pos:start="441:13" pos:end="441:19">new_msr</name> <operator pos:start="441:21" pos:end="441:22">|=</operator> <operator pos:start="441:24" pos:end="441:24">(</operator><name pos:start="441:25" pos:end="441:36">target_ulong</name><operator pos:start="441:37" pos:end="441:37">)</operator><literal type="number" pos:start="441:38" pos:end="441:38">1</literal> <operator pos:start="441:40" pos:end="441:41">&lt;&lt;</operator> <name pos:start="441:43" pos:end="441:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="443:1" pos:end="443:6">#<cpp:directive pos:start="443:2" pos:end="443:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="445:9" pos:end="445:24">goto <name pos:start="445:14" pos:end="445:23">store_next</name>;</goto>

    <case pos:start="447:5" pos:end="452:0">case <expr pos:start="447:10" pos:end="447:25"><name pos:start="447:10" pos:end="447:25">POWERPC_EXCP_FIT</name></expr>:</case>       <comment type="block" pos:start="447:34" pos:end="447:79">/* Fixed-interval timer interrupt           */</comment>

        <comment type="block" pos:start="449:9" pos:end="449:24">/* FIT on 4xx */</comment>

<cpp:if pos:start="451:1" pos:end="451:30">#<cpp:directive pos:start="451:2" pos:end="451:3">if</cpp:directive> <expr pos:start="451:5" pos:end="451:30"><call pos:start="451:5" pos:end="451:30"><name pos:start="451:5" pos:end="451:11">defined</name> <argument_list pos:start="451:13" pos:end="451:30">(<argument pos:start="451:14" pos:end="451:29"><expr pos:start="451:14" pos:end="451:29"><name pos:start="451:14" pos:end="451:29">DEBUG_EXCEPTIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="453:9" pos:end="458:0"><if pos:start="453:9" pos:end="458:0">if <condition pos:start="453:12" pos:end="453:26">(<expr pos:start="453:13" pos:end="453:25"><name pos:start="453:13" pos:end="453:20">loglevel</name> <operator pos:start="453:22" pos:end="453:23">!=</operator> <literal type="number" pos:start="453:25" pos:end="453:25">0</literal></expr>)</condition><block type="pseudo" pos:start="455:13" pos:end="458:0"><block_content pos:start="455:13" pos:end="458:0">

            <expr_stmt pos:start="455:13" pos:end="458:0"><expr pos:start="455:13" pos:end="455:47"><call pos:start="455:13" pos:end="455:47"><name pos:start="455:13" pos:end="455:19">fprintf</name><argument_list pos:start="455:20" pos:end="455:47">(<argument pos:start="455:21" pos:end="455:27"><expr pos:start="455:21" pos:end="455:27"><name pos:start="455:21" pos:end="455:27">logfile</name></expr></argument>, <argument pos:start="455:30" pos:end="455:46"><expr pos:start="455:30" pos:end="455:46"><literal type="string" pos:start="455:30" pos:end="455:46">"FIT exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="457:1" pos:end="457:6">#<cpp:directive pos:start="457:2" pos:end="457:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="459:9" pos:end="459:48"><expr pos:start="459:9" pos:end="459:47"><name pos:start="459:9" pos:end="459:15">new_msr</name> <operator pos:start="459:17" pos:end="459:18">&amp;=</operator> <operator pos:start="459:20" pos:end="459:20">~</operator><operator pos:start="459:21" pos:end="459:21">(</operator><operator pos:start="459:22" pos:end="459:22">(</operator><name pos:start="459:23" pos:end="459:34">target_ulong</name><operator pos:start="459:35" pos:end="459:35">)</operator><literal type="number" pos:start="459:36" pos:end="459:36">1</literal> <operator pos:start="459:38" pos:end="459:39">&lt;&lt;</operator> <name pos:start="459:41" pos:end="459:46">MSR_RI</name><operator pos:start="459:47" pos:end="459:47">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="459:50" pos:end="459:70">/* XXX: check this */</comment>

        <goto pos:start="461:9" pos:end="461:24">goto <name pos:start="461:14" pos:end="461:23">store_next</name>;</goto>

    <case pos:start="463:5" pos:end="466:0">case <expr pos:start="463:10" pos:end="463:25"><name pos:start="463:10" pos:end="463:25">POWERPC_EXCP_WDT</name></expr>:</case>       <comment type="block" pos:start="463:34" pos:end="463:79">/* Watchdog timer interrupt                 */</comment>

<cpp:if pos:start="465:1" pos:end="465:30">#<cpp:directive pos:start="465:2" pos:end="465:3">if</cpp:directive> <expr pos:start="465:5" pos:end="465:30"><call pos:start="465:5" pos:end="465:30"><name pos:start="465:5" pos:end="465:11">defined</name> <argument_list pos:start="465:13" pos:end="465:30">(<argument pos:start="465:14" pos:end="465:29"><expr pos:start="465:14" pos:end="465:29"><name pos:start="465:14" pos:end="465:29">DEBUG_EXCEPTIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="467:9" pos:end="472:0"><if pos:start="467:9" pos:end="472:0">if <condition pos:start="467:12" pos:end="467:26">(<expr pos:start="467:13" pos:end="467:25"><name pos:start="467:13" pos:end="467:20">loglevel</name> <operator pos:start="467:22" pos:end="467:23">!=</operator> <literal type="number" pos:start="467:25" pos:end="467:25">0</literal></expr>)</condition><block type="pseudo" pos:start="469:13" pos:end="472:0"><block_content pos:start="469:13" pos:end="472:0">

            <expr_stmt pos:start="469:13" pos:end="472:0"><expr pos:start="469:13" pos:end="469:47"><call pos:start="469:13" pos:end="469:47"><name pos:start="469:13" pos:end="469:19">fprintf</name><argument_list pos:start="469:20" pos:end="469:47">(<argument pos:start="469:21" pos:end="469:27"><expr pos:start="469:21" pos:end="469:27"><name pos:start="469:21" pos:end="469:27">logfile</name></expr></argument>, <argument pos:start="469:30" pos:end="469:46"><expr pos:start="469:30" pos:end="469:46"><literal type="string" pos:start="469:30" pos:end="469:46">"WDT exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="471:1" pos:end="471:6">#<cpp:directive pos:start="471:2" pos:end="471:6">endif</cpp:directive></cpp:endif>

        <switch pos:start="473:9" pos:end="487:9">switch <condition pos:start="473:16" pos:end="473:27">(<expr pos:start="473:17" pos:end="473:26"><name pos:start="473:17" pos:end="473:26">excp_model</name></expr>)</condition> <block pos:start="473:29" pos:end="487:9">{<block_content pos:start="475:9" pos:end="485:18">

        <case pos:start="475:9" pos:end="475:32">case <expr pos:start="475:14" pos:end="475:31"><name pos:start="475:14" pos:end="475:31">POWERPC_EXCP_BOOKE</name></expr>:</case>

            <expr_stmt pos:start="477:13" pos:end="477:35"><expr pos:start="477:13" pos:end="477:34"><name pos:start="477:13" pos:end="477:16">srr0</name> <operator pos:start="477:18" pos:end="477:18">=</operator> <name pos:start="477:20" pos:end="477:34">SPR_BOOKE_CSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="479:13" pos:end="479:35"><expr pos:start="479:13" pos:end="479:34"><name pos:start="479:13" pos:end="479:16">srr1</name> <operator pos:start="479:18" pos:end="479:18">=</operator> <name pos:start="479:20" pos:end="479:34">SPR_BOOKE_CSRR1</name></expr>;</expr_stmt>

            <break pos:start="481:13" pos:end="481:18">break;</break>

        <default pos:start="483:9" pos:end="483:16">default:</default>

            <break pos:start="485:13" pos:end="485:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="489:9" pos:end="489:48"><expr pos:start="489:9" pos:end="489:47"><name pos:start="489:9" pos:end="489:15">new_msr</name> <operator pos:start="489:17" pos:end="489:18">&amp;=</operator> <operator pos:start="489:20" pos:end="489:20">~</operator><operator pos:start="489:21" pos:end="489:21">(</operator><operator pos:start="489:22" pos:end="489:22">(</operator><name pos:start="489:23" pos:end="489:34">target_ulong</name><operator pos:start="489:35" pos:end="489:35">)</operator><literal type="number" pos:start="489:36" pos:end="489:36">1</literal> <operator pos:start="489:38" pos:end="489:39">&lt;&lt;</operator> <name pos:start="489:41" pos:end="489:46">MSR_RI</name><operator pos:start="489:47" pos:end="489:47">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="489:50" pos:end="489:70">/* XXX: check this */</comment>

        <goto pos:start="491:9" pos:end="491:24">goto <name pos:start="491:14" pos:end="491:23">store_next</name>;</goto>

    <case pos:start="493:5" pos:end="493:27">case <expr pos:start="493:10" pos:end="493:26"><name pos:start="493:10" pos:end="493:26">POWERPC_EXCP_DTLB</name></expr>:</case>      <comment type="block" pos:start="493:34" pos:end="493:79">/* Data TLB error                           */</comment>

        <expr_stmt pos:start="495:9" pos:end="495:48"><expr pos:start="495:9" pos:end="495:47"><name pos:start="495:9" pos:end="495:15">new_msr</name> <operator pos:start="495:17" pos:end="495:18">&amp;=</operator> <operator pos:start="495:20" pos:end="495:20">~</operator><operator pos:start="495:21" pos:end="495:21">(</operator><operator pos:start="495:22" pos:end="495:22">(</operator><name pos:start="495:23" pos:end="495:34">target_ulong</name><operator pos:start="495:35" pos:end="495:35">)</operator><literal type="number" pos:start="495:36" pos:end="495:36">1</literal> <operator pos:start="495:38" pos:end="495:39">&lt;&lt;</operator> <name pos:start="495:41" pos:end="495:46">MSR_RI</name><operator pos:start="495:47" pos:end="495:47">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="495:50" pos:end="495:70">/* XXX: check this */</comment>

        <goto pos:start="497:9" pos:end="497:24">goto <name pos:start="497:14" pos:end="497:23">store_next</name>;</goto>

    <case pos:start="499:5" pos:end="499:27">case <expr pos:start="499:10" pos:end="499:26"><name pos:start="499:10" pos:end="499:26">POWERPC_EXCP_ITLB</name></expr>:</case>      <comment type="block" pos:start="499:34" pos:end="499:79">/* Instruction TLB error                    */</comment>

        <expr_stmt pos:start="501:9" pos:end="501:48"><expr pos:start="501:9" pos:end="501:47"><name pos:start="501:9" pos:end="501:15">new_msr</name> <operator pos:start="501:17" pos:end="501:18">&amp;=</operator> <operator pos:start="501:20" pos:end="501:20">~</operator><operator pos:start="501:21" pos:end="501:21">(</operator><operator pos:start="501:22" pos:end="501:22">(</operator><name pos:start="501:23" pos:end="501:34">target_ulong</name><operator pos:start="501:35" pos:end="501:35">)</operator><literal type="number" pos:start="501:36" pos:end="501:36">1</literal> <operator pos:start="501:38" pos:end="501:39">&lt;&lt;</operator> <name pos:start="501:41" pos:end="501:46">MSR_RI</name><operator pos:start="501:47" pos:end="501:47">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="501:50" pos:end="501:70">/* XXX: check this */</comment>

        <goto pos:start="503:9" pos:end="503:24">goto <name pos:start="503:14" pos:end="503:23">store_next</name>;</goto>

    <case pos:start="505:5" pos:end="505:28">case <expr pos:start="505:10" pos:end="505:27"><name pos:start="505:10" pos:end="505:27">POWERPC_EXCP_DEBUG</name></expr>:</case>     <comment type="block" pos:start="505:34" pos:end="505:79">/* Debug interrupt                          */</comment>

        <switch pos:start="507:9" pos:end="525:9">switch <condition pos:start="507:16" pos:end="507:27">(<expr pos:start="507:17" pos:end="507:26"><name pos:start="507:17" pos:end="507:26">excp_model</name></expr>)</condition> <block pos:start="507:29" pos:end="525:9">{<block_content pos:start="509:9" pos:end="523:18">

        <case pos:start="509:9" pos:end="509:32">case <expr pos:start="509:14" pos:end="509:31"><name pos:start="509:14" pos:end="509:31">POWERPC_EXCP_BOOKE</name></expr>:</case>

            <expr_stmt pos:start="511:13" pos:end="511:35"><expr pos:start="511:13" pos:end="511:34"><name pos:start="511:13" pos:end="511:16">srr0</name> <operator pos:start="511:18" pos:end="511:18">=</operator> <name pos:start="511:20" pos:end="511:34">SPR_BOOKE_DSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="513:13" pos:end="513:35"><expr pos:start="513:13" pos:end="513:34"><name pos:start="513:13" pos:end="513:16">srr1</name> <operator pos:start="513:18" pos:end="513:18">=</operator> <name pos:start="513:20" pos:end="513:34">SPR_BOOKE_DSRR1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="515:13" pos:end="515:36"><expr pos:start="515:13" pos:end="515:35"><name pos:start="515:13" pos:end="515:17">asrr0</name> <operator pos:start="515:19" pos:end="515:19">=</operator> <name pos:start="515:21" pos:end="515:35">SPR_BOOKE_CSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="517:13" pos:end="517:36"><expr pos:start="517:13" pos:end="517:35"><name pos:start="517:13" pos:end="517:17">asrr1</name> <operator pos:start="517:19" pos:end="517:19">=</operator> <name pos:start="517:21" pos:end="517:35">SPR_BOOKE_CSRR1</name></expr>;</expr_stmt>

            <break pos:start="519:13" pos:end="519:18">break;</break>

        <default pos:start="521:9" pos:end="521:16">default:</default>

            <break pos:start="523:13" pos:end="523:18">break;</break>

        </block_content>}</block></switch>

        <comment type="block" pos:start="527:9" pos:end="527:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="529:9" pos:end="529:69"><expr pos:start="529:9" pos:end="529:68"><call pos:start="529:9" pos:end="529:68"><name pos:start="529:9" pos:end="529:17">cpu_abort</name><argument_list pos:start="529:18" pos:end="529:68">(<argument pos:start="529:19" pos:end="529:21"><expr pos:start="529:19" pos:end="529:21"><name pos:start="529:19" pos:end="529:21">env</name></expr></argument>, <argument pos:start="529:24" pos:end="529:67"><expr pos:start="529:24" pos:end="529:67"><literal type="string" pos:start="529:24" pos:end="529:67">"Debug exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="531:9" pos:end="534:0">goto <name pos:start="531:14" pos:end="531:23">store_next</name>;</goto>

<cpp:if pos:start="533:1" pos:end="533:26">#<cpp:directive pos:start="533:2" pos:end="533:3">if</cpp:directive> <expr pos:start="533:5" pos:end="533:26"><call pos:start="533:5" pos:end="533:26"><name pos:start="533:5" pos:end="533:11">defined</name><argument_list pos:start="533:12" pos:end="533:26">(<argument pos:start="533:13" pos:end="533:25"><expr pos:start="533:13" pos:end="533:25"><name pos:start="533:13" pos:end="533:25">TARGET_PPCEMB</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="535:5" pos:end="535:27">case <expr pos:start="535:10" pos:end="535:26"><name pos:start="535:10" pos:end="535:26">POWERPC_EXCP_SPEU</name></expr>:</case>      <comment type="block" pos:start="535:34" pos:end="535:79">/* SPE/embedded floating-point unavailable  */</comment>

        <expr_stmt pos:start="537:9" pos:end="537:48"><expr pos:start="537:9" pos:end="537:47"><name pos:start="537:9" pos:end="537:15">new_msr</name> <operator pos:start="537:17" pos:end="537:18">&amp;=</operator> <operator pos:start="537:20" pos:end="537:20">~</operator><operator pos:start="537:21" pos:end="537:21">(</operator><operator pos:start="537:22" pos:end="537:22">(</operator><name pos:start="537:23" pos:end="537:34">target_ulong</name><operator pos:start="537:35" pos:end="537:35">)</operator><literal type="number" pos:start="537:36" pos:end="537:36">1</literal> <operator pos:start="537:38" pos:end="537:39">&lt;&lt;</operator> <name pos:start="537:41" pos:end="537:46">MSR_RI</name><operator pos:start="537:47" pos:end="537:47">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="537:50" pos:end="537:70">/* XXX: check this */</comment>

        <goto pos:start="539:9" pos:end="539:27">goto <name pos:start="539:14" pos:end="539:26">store_current</name>;</goto>

    <case pos:start="541:5" pos:end="541:28">case <expr pos:start="541:10" pos:end="541:27"><name pos:start="541:10" pos:end="541:27">POWERPC_EXCP_EFPDI</name></expr>:</case>     <comment type="block" pos:start="541:34" pos:end="541:79">/* Embedded floating-point data interrupt   */</comment>

        <comment type="block" pos:start="543:9" pos:end="543:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="545:9" pos:end="547:48"><expr pos:start="545:9" pos:end="547:47"><call pos:start="545:9" pos:end="547:47"><name pos:start="545:9" pos:end="545:17">cpu_abort</name><argument_list pos:start="545:18" pos:end="547:47">(<argument pos:start="545:19" pos:end="545:21"><expr pos:start="545:19" pos:end="545:21"><name pos:start="545:19" pos:end="545:21">env</name></expr></argument>, <argument pos:start="545:24" pos:end="547:46"><expr pos:start="545:24" pos:end="547:46"><literal type="string" pos:start="545:24" pos:end="545:64">"Embedded floating point data exception "</literal>

                  <literal type="string" pos:start="547:19" pos:end="547:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="549:9" pos:end="549:24">goto <name pos:start="549:14" pos:end="549:23">store_next</name>;</goto>

    <case pos:start="551:5" pos:end="551:28">case <expr pos:start="551:10" pos:end="551:27"><name pos:start="551:10" pos:end="551:27">POWERPC_EXCP_EFPRI</name></expr>:</case>     <comment type="block" pos:start="551:34" pos:end="551:79">/* Embedded floating-point round interrupt  */</comment>

        <comment type="block" pos:start="553:9" pos:end="553:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="555:9" pos:end="557:48"><expr pos:start="555:9" pos:end="557:47"><call pos:start="555:9" pos:end="557:47"><name pos:start="555:9" pos:end="555:17">cpu_abort</name><argument_list pos:start="555:18" pos:end="557:47">(<argument pos:start="555:19" pos:end="555:21"><expr pos:start="555:19" pos:end="555:21"><name pos:start="555:19" pos:end="555:21">env</name></expr></argument>, <argument pos:start="555:24" pos:end="557:46"><expr pos:start="555:24" pos:end="557:46"><literal type="string" pos:start="555:24" pos:end="555:65">"Embedded floating point round exception "</literal>

                  <literal type="string" pos:start="557:19" pos:end="557:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="559:9" pos:end="559:24">goto <name pos:start="559:14" pos:end="559:23">store_next</name>;</goto>

    <case pos:start="561:5" pos:end="561:29">case <expr pos:start="561:10" pos:end="561:28"><name pos:start="561:10" pos:end="561:28">POWERPC_EXCP_EPERFM</name></expr>:</case>    <comment type="block" pos:start="561:34" pos:end="561:79">/* Embedded performance monitor interrupt   */</comment>

        <expr_stmt pos:start="563:9" pos:end="563:48"><expr pos:start="563:9" pos:end="563:47"><name pos:start="563:9" pos:end="563:15">new_msr</name> <operator pos:start="563:17" pos:end="563:18">&amp;=</operator> <operator pos:start="563:20" pos:end="563:20">~</operator><operator pos:start="563:21" pos:end="563:21">(</operator><operator pos:start="563:22" pos:end="563:22">(</operator><name pos:start="563:23" pos:end="563:34">target_ulong</name><operator pos:start="563:35" pos:end="563:35">)</operator><literal type="number" pos:start="563:36" pos:end="563:36">1</literal> <operator pos:start="563:38" pos:end="563:39">&lt;&lt;</operator> <name pos:start="563:41" pos:end="563:46">MSR_RI</name><operator pos:start="563:47" pos:end="563:47">)</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="565:9" pos:end="565:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="567:9" pos:end="569:78"><expr pos:start="567:9" pos:end="569:77"><call pos:start="567:9" pos:end="569:77"><name pos:start="567:9" pos:end="567:17">cpu_abort</name><argument_list pos:start="567:18" pos:end="569:77">(<argument pos:start="567:19" pos:end="567:21"><expr pos:start="567:19" pos:end="567:21"><name pos:start="567:19" pos:end="567:21">env</name></expr></argument>,

                  <argument pos:start="569:19" pos:end="569:76"><expr pos:start="569:19" pos:end="569:76"><literal type="string" pos:start="569:19" pos:end="569:76">"Performance counter exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="571:9" pos:end="571:24">goto <name pos:start="571:14" pos:end="571:23">store_next</name>;</goto>

    <case pos:start="573:5" pos:end="573:28">case <expr pos:start="573:10" pos:end="573:27"><name pos:start="573:10" pos:end="573:27">POWERPC_EXCP_DOORI</name></expr>:</case>     <comment type="block" pos:start="573:34" pos:end="573:79">/* Embedded doorbell interrupt              */</comment>

        <comment type="block" pos:start="575:9" pos:end="575:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="577:9" pos:end="579:76"><expr pos:start="577:9" pos:end="579:75"><call pos:start="577:9" pos:end="579:75"><name pos:start="577:9" pos:end="577:17">cpu_abort</name><argument_list pos:start="577:18" pos:end="579:75">(<argument pos:start="577:19" pos:end="577:21"><expr pos:start="577:19" pos:end="577:21"><name pos:start="577:19" pos:end="577:21">env</name></expr></argument>,

                  <argument pos:start="579:19" pos:end="579:74"><expr pos:start="579:19" pos:end="579:74"><literal type="string" pos:start="579:19" pos:end="579:74">"Embedded doorbell interrupt is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="581:9" pos:end="581:24">goto <name pos:start="581:14" pos:end="581:23">store_next</name>;</goto>

    <case pos:start="583:5" pos:end="583:29">case <expr pos:start="583:10" pos:end="583:28"><name pos:start="583:10" pos:end="583:28">POWERPC_EXCP_DOORCI</name></expr>:</case>    <comment type="block" pos:start="583:34" pos:end="583:79">/* Embedded doorbell critical interrupt     */</comment>

        <switch pos:start="585:9" pos:end="599:9">switch <condition pos:start="585:16" pos:end="585:27">(<expr pos:start="585:17" pos:end="585:26"><name pos:start="585:17" pos:end="585:26">excp_model</name></expr>)</condition> <block pos:start="585:29" pos:end="599:9">{<block_content pos:start="587:9" pos:end="597:18">

        <case pos:start="587:9" pos:end="587:32">case <expr pos:start="587:14" pos:end="587:31"><name pos:start="587:14" pos:end="587:31">POWERPC_EXCP_BOOKE</name></expr>:</case>

            <expr_stmt pos:start="589:13" pos:end="589:35"><expr pos:start="589:13" pos:end="589:34"><name pos:start="589:13" pos:end="589:16">srr0</name> <operator pos:start="589:18" pos:end="589:18">=</operator> <name pos:start="589:20" pos:end="589:34">SPR_BOOKE_CSRR0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="591:13" pos:end="591:35"><expr pos:start="591:13" pos:end="591:34"><name pos:start="591:13" pos:end="591:16">srr1</name> <operator pos:start="591:18" pos:end="591:18">=</operator> <name pos:start="591:20" pos:end="591:34">SPR_BOOKE_CSRR1</name></expr>;</expr_stmt>

            <break pos:start="593:13" pos:end="593:18">break;</break>

        <default pos:start="595:9" pos:end="595:16">default:</default>

            <break pos:start="597:13" pos:end="597:18">break;</break>

        </block_content>}</block></switch>

        <comment type="block" pos:start="601:9" pos:end="601:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="603:9" pos:end="605:48"><expr pos:start="603:9" pos:end="605:47"><call pos:start="603:9" pos:end="605:47"><name pos:start="603:9" pos:end="603:17">cpu_abort</name><argument_list pos:start="603:18" pos:end="605:47">(<argument pos:start="603:19" pos:end="603:21"><expr pos:start="603:19" pos:end="603:21"><name pos:start="603:19" pos:end="603:21">env</name></expr></argument>, <argument pos:start="603:24" pos:end="605:46"><expr pos:start="603:24" pos:end="605:46"><literal type="string" pos:start="603:24" pos:end="603:62">"Embedded doorbell critical interrupt "</literal>

                  <literal type="string" pos:start="605:19" pos:end="605:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="607:9" pos:end="610:0">goto <name pos:start="607:14" pos:end="607:23">store_next</name>;</goto>

<cpp:endif pos:start="609:1" pos:end="609:6">#<cpp:directive pos:start="609:2" pos:end="609:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="609:8" pos:end="609:35">/* defined(TARGET_PPCEMB) */</comment>

    <case pos:start="611:5" pos:end="611:28">case <expr pos:start="611:10" pos:end="611:27"><name pos:start="611:10" pos:end="611:27">POWERPC_EXCP_RESET</name></expr>:</case>     <comment type="block" pos:start="611:34" pos:end="611:79">/* System reset exception                   */</comment>

        <expr_stmt pos:start="613:9" pos:end="616:0"><expr pos:start="613:9" pos:end="613:47"><name pos:start="613:9" pos:end="613:15">new_msr</name> <operator pos:start="613:17" pos:end="613:18">&amp;=</operator> <operator pos:start="613:20" pos:end="613:20">~</operator><operator pos:start="613:21" pos:end="613:21">(</operator><operator pos:start="613:22" pos:end="613:22">(</operator><name pos:start="613:23" pos:end="613:34">target_ulong</name><operator pos:start="613:35" pos:end="613:35">)</operator><literal type="number" pos:start="613:36" pos:end="613:36">1</literal> <operator pos:start="613:38" pos:end="613:39">&lt;&lt;</operator> <name pos:start="613:41" pos:end="613:46">MSR_RI</name><operator pos:start="613:47" pos:end="613:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="615:1" pos:end="615:26">#<cpp:directive pos:start="615:2" pos:end="615:3">if</cpp:directive> <expr pos:start="615:5" pos:end="615:26"><call pos:start="615:5" pos:end="615:26"><name pos:start="615:5" pos:end="615:11">defined</name><argument_list pos:start="615:12" pos:end="615:26">(<argument pos:start="615:13" pos:end="615:25"><expr pos:start="615:13" pos:end="615:25"><name pos:start="615:13" pos:end="615:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="617:9" pos:end="620:0"><expr pos:start="617:9" pos:end="617:44"><name pos:start="617:9" pos:end="617:15">new_msr</name> <operator pos:start="617:17" pos:end="617:18">|=</operator> <operator pos:start="617:20" pos:end="617:20">(</operator><name pos:start="617:21" pos:end="617:32">target_ulong</name><operator pos:start="617:33" pos:end="617:33">)</operator><literal type="number" pos:start="617:34" pos:end="617:34">1</literal> <operator pos:start="617:36" pos:end="617:37">&lt;&lt;</operator> <name pos:start="617:39" pos:end="617:44">MSR_HV</name></expr>;</expr_stmt>

<cpp:endif pos:start="619:1" pos:end="619:6">#<cpp:directive pos:start="619:2" pos:end="619:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="621:9" pos:end="624:0">goto <name pos:start="621:14" pos:end="621:23">store_next</name>;</goto>

<cpp:if pos:start="623:1" pos:end="623:25">#<cpp:directive pos:start="623:2" pos:end="623:3">if</cpp:directive> <expr pos:start="623:5" pos:end="623:25"><call pos:start="623:5" pos:end="623:25"><name pos:start="623:5" pos:end="623:11">defined</name><argument_list pos:start="623:12" pos:end="623:25">(<argument pos:start="623:13" pos:end="623:24"><expr pos:start="623:13" pos:end="623:24"><name pos:start="623:13" pos:end="623:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="625:5" pos:end="625:27">case <expr pos:start="625:10" pos:end="625:26"><name pos:start="625:10" pos:end="625:26">POWERPC_EXCP_DSEG</name></expr>:</case>      <comment type="block" pos:start="625:34" pos:end="625:79">/* Data segment exception                   */</comment>

        <expr_stmt pos:start="627:9" pos:end="630:0"><expr pos:start="627:9" pos:end="627:47"><name pos:start="627:9" pos:end="627:15">new_msr</name> <operator pos:start="627:17" pos:end="627:18">&amp;=</operator> <operator pos:start="627:20" pos:end="627:20">~</operator><operator pos:start="627:21" pos:end="627:21">(</operator><operator pos:start="627:22" pos:end="627:22">(</operator><name pos:start="627:23" pos:end="627:34">target_ulong</name><operator pos:start="627:35" pos:end="627:35">)</operator><literal type="number" pos:start="627:36" pos:end="627:36">1</literal> <operator pos:start="627:38" pos:end="627:39">&lt;&lt;</operator> <name pos:start="627:41" pos:end="627:46">MSR_RI</name><operator pos:start="627:47" pos:end="627:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="629:1" pos:end="629:26">#<cpp:directive pos:start="629:2" pos:end="629:3">if</cpp:directive> <expr pos:start="629:5" pos:end="629:26"><call pos:start="629:5" pos:end="629:26"><name pos:start="629:5" pos:end="629:11">defined</name><argument_list pos:start="629:12" pos:end="629:26">(<argument pos:start="629:13" pos:end="629:25"><expr pos:start="629:13" pos:end="629:25"><name pos:start="629:13" pos:end="629:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="631:9" pos:end="636:0"><if pos:start="631:9" pos:end="636:0">if <condition pos:start="631:12" pos:end="631:23">(<expr pos:start="631:13" pos:end="631:22"><name pos:start="631:13" pos:end="631:17">lpes1</name> <operator pos:start="631:19" pos:end="631:20">==</operator> <literal type="number" pos:start="631:22" pos:end="631:22">0</literal></expr>)</condition><block type="pseudo" pos:start="633:13" pos:end="636:0"><block_content pos:start="633:13" pos:end="636:0">

            <expr_stmt pos:start="633:13" pos:end="636:0"><expr pos:start="633:13" pos:end="633:48"><name pos:start="633:13" pos:end="633:19">new_msr</name> <operator pos:start="633:21" pos:end="633:22">|=</operator> <operator pos:start="633:24" pos:end="633:24">(</operator><name pos:start="633:25" pos:end="633:36">target_ulong</name><operator pos:start="633:37" pos:end="633:37">)</operator><literal type="number" pos:start="633:38" pos:end="633:38">1</literal> <operator pos:start="633:40" pos:end="633:41">&lt;&lt;</operator> <name pos:start="633:43" pos:end="633:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="635:1" pos:end="635:6">#<cpp:directive pos:start="635:2" pos:end="635:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="637:9" pos:end="637:24">goto <name pos:start="637:14" pos:end="637:23">store_next</name>;</goto>

    <case pos:start="639:5" pos:end="639:27">case <expr pos:start="639:10" pos:end="639:26"><name pos:start="639:10" pos:end="639:26">POWERPC_EXCP_ISEG</name></expr>:</case>      <comment type="block" pos:start="639:34" pos:end="639:79">/* Instruction segment exception            */</comment>

        <expr_stmt pos:start="641:9" pos:end="644:0"><expr pos:start="641:9" pos:end="641:47"><name pos:start="641:9" pos:end="641:15">new_msr</name> <operator pos:start="641:17" pos:end="641:18">&amp;=</operator> <operator pos:start="641:20" pos:end="641:20">~</operator><operator pos:start="641:21" pos:end="641:21">(</operator><operator pos:start="641:22" pos:end="641:22">(</operator><name pos:start="641:23" pos:end="641:34">target_ulong</name><operator pos:start="641:35" pos:end="641:35">)</operator><literal type="number" pos:start="641:36" pos:end="641:36">1</literal> <operator pos:start="641:38" pos:end="641:39">&lt;&lt;</operator> <name pos:start="641:41" pos:end="641:46">MSR_RI</name><operator pos:start="641:47" pos:end="641:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="643:1" pos:end="643:26">#<cpp:directive pos:start="643:2" pos:end="643:3">if</cpp:directive> <expr pos:start="643:5" pos:end="643:26"><call pos:start="643:5" pos:end="643:26"><name pos:start="643:5" pos:end="643:11">defined</name><argument_list pos:start="643:12" pos:end="643:26">(<argument pos:start="643:13" pos:end="643:25"><expr pos:start="643:13" pos:end="643:25"><name pos:start="643:13" pos:end="643:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="645:9" pos:end="650:0"><if pos:start="645:9" pos:end="650:0">if <condition pos:start="645:12" pos:end="645:23">(<expr pos:start="645:13" pos:end="645:22"><name pos:start="645:13" pos:end="645:17">lpes1</name> <operator pos:start="645:19" pos:end="645:20">==</operator> <literal type="number" pos:start="645:22" pos:end="645:22">0</literal></expr>)</condition><block type="pseudo" pos:start="647:13" pos:end="650:0"><block_content pos:start="647:13" pos:end="650:0">

            <expr_stmt pos:start="647:13" pos:end="650:0"><expr pos:start="647:13" pos:end="647:48"><name pos:start="647:13" pos:end="647:19">new_msr</name> <operator pos:start="647:21" pos:end="647:22">|=</operator> <operator pos:start="647:24" pos:end="647:24">(</operator><name pos:start="647:25" pos:end="647:36">target_ulong</name><operator pos:start="647:37" pos:end="647:37">)</operator><literal type="number" pos:start="647:38" pos:end="647:38">1</literal> <operator pos:start="647:40" pos:end="647:41">&lt;&lt;</operator> <name pos:start="647:43" pos:end="647:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="649:1" pos:end="649:6">#<cpp:directive pos:start="649:2" pos:end="649:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="651:9" pos:end="656:0">goto <name pos:start="651:14" pos:end="651:23">store_next</name>;</goto>

<cpp:endif pos:start="653:1" pos:end="653:6">#<cpp:directive pos:start="653:2" pos:end="653:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="653:8" pos:end="653:34">/* defined(TARGET_PPC64) */</comment>

<cpp:if pos:start="655:1" pos:end="655:26">#<cpp:directive pos:start="655:2" pos:end="655:3">if</cpp:directive> <expr pos:start="655:5" pos:end="655:26"><call pos:start="655:5" pos:end="655:26"><name pos:start="655:5" pos:end="655:11">defined</name><argument_list pos:start="655:12" pos:end="655:26">(<argument pos:start="655:13" pos:end="655:25"><expr pos:start="655:13" pos:end="655:25"><name pos:start="655:13" pos:end="655:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="657:5" pos:end="657:28">case <expr pos:start="657:10" pos:end="657:27"><name pos:start="657:10" pos:end="657:27">POWERPC_EXCP_HDECR</name></expr>:</case>     <comment type="block" pos:start="657:34" pos:end="657:79">/* Hypervisor decrementer exception         */</comment>

        <expr_stmt pos:start="659:9" pos:end="659:25"><expr pos:start="659:9" pos:end="659:24"><name pos:start="659:9" pos:end="659:12">srr0</name> <operator pos:start="659:14" pos:end="659:14">=</operator> <name pos:start="659:16" pos:end="659:24">SPR_HSRR0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="661:9" pos:end="661:25"><expr pos:start="661:9" pos:end="661:24"><name pos:start="661:9" pos:end="661:12">srr1</name> <operator pos:start="661:14" pos:end="661:14">=</operator> <name pos:start="661:16" pos:end="661:24">SPR_HSRR1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="663:9" pos:end="663:45"><expr pos:start="663:9" pos:end="663:44"><name pos:start="663:9" pos:end="663:15">new_msr</name> <operator pos:start="663:17" pos:end="663:18">|=</operator> <operator pos:start="663:20" pos:end="663:20">(</operator><name pos:start="663:21" pos:end="663:32">target_ulong</name><operator pos:start="663:33" pos:end="663:33">)</operator><literal type="number" pos:start="663:34" pos:end="663:34">1</literal> <operator pos:start="663:36" pos:end="663:37">&lt;&lt;</operator> <name pos:start="663:39" pos:end="663:44">MSR_HV</name></expr>;</expr_stmt>

        <goto pos:start="665:9" pos:end="668:0">goto <name pos:start="665:14" pos:end="665:23">store_next</name>;</goto>

<cpp:endif pos:start="667:1" pos:end="667:6">#<cpp:directive pos:start="667:2" pos:end="667:6">endif</cpp:directive></cpp:endif>

    <case pos:start="669:5" pos:end="669:28">case <expr pos:start="669:10" pos:end="669:27"><name pos:start="669:10" pos:end="669:27">POWERPC_EXCP_TRACE</name></expr>:</case>     <comment type="block" pos:start="669:34" pos:end="669:79">/* Trace exception                          */</comment>

        <expr_stmt pos:start="671:9" pos:end="674:0"><expr pos:start="671:9" pos:end="671:47"><name pos:start="671:9" pos:end="671:15">new_msr</name> <operator pos:start="671:17" pos:end="671:18">&amp;=</operator> <operator pos:start="671:20" pos:end="671:20">~</operator><operator pos:start="671:21" pos:end="671:21">(</operator><operator pos:start="671:22" pos:end="671:22">(</operator><name pos:start="671:23" pos:end="671:34">target_ulong</name><operator pos:start="671:35" pos:end="671:35">)</operator><literal type="number" pos:start="671:36" pos:end="671:36">1</literal> <operator pos:start="671:38" pos:end="671:39">&lt;&lt;</operator> <name pos:start="671:41" pos:end="671:46">MSR_RI</name><operator pos:start="671:47" pos:end="671:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="673:1" pos:end="673:26">#<cpp:directive pos:start="673:2" pos:end="673:3">if</cpp:directive> <expr pos:start="673:5" pos:end="673:26"><call pos:start="673:5" pos:end="673:26"><name pos:start="673:5" pos:end="673:11">defined</name><argument_list pos:start="673:12" pos:end="673:26">(<argument pos:start="673:13" pos:end="673:25"><expr pos:start="673:13" pos:end="673:25"><name pos:start="673:13" pos:end="673:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="675:9" pos:end="680:0"><if pos:start="675:9" pos:end="680:0">if <condition pos:start="675:12" pos:end="675:23">(<expr pos:start="675:13" pos:end="675:22"><name pos:start="675:13" pos:end="675:17">lpes1</name> <operator pos:start="675:19" pos:end="675:20">==</operator> <literal type="number" pos:start="675:22" pos:end="675:22">0</literal></expr>)</condition><block type="pseudo" pos:start="677:13" pos:end="680:0"><block_content pos:start="677:13" pos:end="680:0">

            <expr_stmt pos:start="677:13" pos:end="680:0"><expr pos:start="677:13" pos:end="677:48"><name pos:start="677:13" pos:end="677:19">new_msr</name> <operator pos:start="677:21" pos:end="677:22">|=</operator> <operator pos:start="677:24" pos:end="677:24">(</operator><name pos:start="677:25" pos:end="677:36">target_ulong</name><operator pos:start="677:37" pos:end="677:37">)</operator><literal type="number" pos:start="677:38" pos:end="677:38">1</literal> <operator pos:start="677:40" pos:end="677:41">&lt;&lt;</operator> <name pos:start="677:43" pos:end="677:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="679:1" pos:end="679:6">#<cpp:directive pos:start="679:2" pos:end="679:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="681:9" pos:end="684:0">goto <name pos:start="681:14" pos:end="681:23">store_next</name>;</goto>

<cpp:if pos:start="683:1" pos:end="683:26">#<cpp:directive pos:start="683:2" pos:end="683:3">if</cpp:directive> <expr pos:start="683:5" pos:end="683:26"><call pos:start="683:5" pos:end="683:26"><name pos:start="683:5" pos:end="683:11">defined</name><argument_list pos:start="683:12" pos:end="683:26">(<argument pos:start="683:13" pos:end="683:25"><expr pos:start="683:13" pos:end="683:25"><name pos:start="683:13" pos:end="683:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="685:5" pos:end="685:27">case <expr pos:start="685:10" pos:end="685:26"><name pos:start="685:10" pos:end="685:26">POWERPC_EXCP_HDSI</name></expr>:</case>      <comment type="block" pos:start="685:34" pos:end="685:79">/* Hypervisor data storage exception        */</comment>

        <expr_stmt pos:start="687:9" pos:end="687:25"><expr pos:start="687:9" pos:end="687:24"><name pos:start="687:9" pos:end="687:12">srr0</name> <operator pos:start="687:14" pos:end="687:14">=</operator> <name pos:start="687:16" pos:end="687:24">SPR_HSRR0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="689:9" pos:end="689:25"><expr pos:start="689:9" pos:end="689:24"><name pos:start="689:9" pos:end="689:12">srr1</name> <operator pos:start="689:14" pos:end="689:14">=</operator> <name pos:start="689:16" pos:end="689:24">SPR_HSRR1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="691:9" pos:end="691:45"><expr pos:start="691:9" pos:end="691:44"><name pos:start="691:9" pos:end="691:15">new_msr</name> <operator pos:start="691:17" pos:end="691:18">|=</operator> <operator pos:start="691:20" pos:end="691:20">(</operator><name pos:start="691:21" pos:end="691:32">target_ulong</name><operator pos:start="691:33" pos:end="691:33">)</operator><literal type="number" pos:start="691:34" pos:end="691:34">1</literal> <operator pos:start="691:36" pos:end="691:37">&lt;&lt;</operator> <name pos:start="691:39" pos:end="691:44">MSR_HV</name></expr>;</expr_stmt>

        <goto pos:start="693:9" pos:end="693:24">goto <name pos:start="693:14" pos:end="693:23">store_next</name>;</goto>

    <case pos:start="695:5" pos:end="695:27">case <expr pos:start="695:10" pos:end="695:26"><name pos:start="695:10" pos:end="695:26">POWERPC_EXCP_HISI</name></expr>:</case>      <comment type="block" pos:start="695:34" pos:end="695:79">/* Hypervisor instruction storage exception */</comment>

        <expr_stmt pos:start="697:9" pos:end="697:25"><expr pos:start="697:9" pos:end="697:24"><name pos:start="697:9" pos:end="697:12">srr0</name> <operator pos:start="697:14" pos:end="697:14">=</operator> <name pos:start="697:16" pos:end="697:24">SPR_HSRR0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="699:9" pos:end="699:25"><expr pos:start="699:9" pos:end="699:24"><name pos:start="699:9" pos:end="699:12">srr1</name> <operator pos:start="699:14" pos:end="699:14">=</operator> <name pos:start="699:16" pos:end="699:24">SPR_HSRR1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="701:9" pos:end="701:45"><expr pos:start="701:9" pos:end="701:44"><name pos:start="701:9" pos:end="701:15">new_msr</name> <operator pos:start="701:17" pos:end="701:18">|=</operator> <operator pos:start="701:20" pos:end="701:20">(</operator><name pos:start="701:21" pos:end="701:32">target_ulong</name><operator pos:start="701:33" pos:end="701:33">)</operator><literal type="number" pos:start="701:34" pos:end="701:34">1</literal> <operator pos:start="701:36" pos:end="701:37">&lt;&lt;</operator> <name pos:start="701:39" pos:end="701:44">MSR_HV</name></expr>;</expr_stmt>

        <goto pos:start="703:9" pos:end="703:24">goto <name pos:start="703:14" pos:end="703:23">store_next</name>;</goto>

    <case pos:start="705:5" pos:end="705:28">case <expr pos:start="705:10" pos:end="705:27"><name pos:start="705:10" pos:end="705:27">POWERPC_EXCP_HDSEG</name></expr>:</case>     <comment type="block" pos:start="705:34" pos:end="705:79">/* Hypervisor data segment exception        */</comment>

        <expr_stmt pos:start="707:9" pos:end="707:25"><expr pos:start="707:9" pos:end="707:24"><name pos:start="707:9" pos:end="707:12">srr0</name> <operator pos:start="707:14" pos:end="707:14">=</operator> <name pos:start="707:16" pos:end="707:24">SPR_HSRR0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="709:9" pos:end="709:25"><expr pos:start="709:9" pos:end="709:24"><name pos:start="709:9" pos:end="709:12">srr1</name> <operator pos:start="709:14" pos:end="709:14">=</operator> <name pos:start="709:16" pos:end="709:24">SPR_HSRR1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="711:9" pos:end="711:45"><expr pos:start="711:9" pos:end="711:44"><name pos:start="711:9" pos:end="711:15">new_msr</name> <operator pos:start="711:17" pos:end="711:18">|=</operator> <operator pos:start="711:20" pos:end="711:20">(</operator><name pos:start="711:21" pos:end="711:32">target_ulong</name><operator pos:start="711:33" pos:end="711:33">)</operator><literal type="number" pos:start="711:34" pos:end="711:34">1</literal> <operator pos:start="711:36" pos:end="711:37">&lt;&lt;</operator> <name pos:start="711:39" pos:end="711:44">MSR_HV</name></expr>;</expr_stmt>

        <goto pos:start="713:9" pos:end="713:24">goto <name pos:start="713:14" pos:end="713:23">store_next</name>;</goto>

    <case pos:start="715:5" pos:end="715:28">case <expr pos:start="715:10" pos:end="715:27"><name pos:start="715:10" pos:end="715:27">POWERPC_EXCP_HISEG</name></expr>:</case>     <comment type="block" pos:start="715:34" pos:end="715:79">/* Hypervisor instruction segment exception */</comment>

        <expr_stmt pos:start="717:9" pos:end="717:25"><expr pos:start="717:9" pos:end="717:24"><name pos:start="717:9" pos:end="717:12">srr0</name> <operator pos:start="717:14" pos:end="717:14">=</operator> <name pos:start="717:16" pos:end="717:24">SPR_HSRR0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="719:9" pos:end="719:25"><expr pos:start="719:9" pos:end="719:24"><name pos:start="719:9" pos:end="719:12">srr1</name> <operator pos:start="719:14" pos:end="719:14">=</operator> <name pos:start="719:16" pos:end="719:24">SPR_HSRR1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="721:9" pos:end="721:45"><expr pos:start="721:9" pos:end="721:44"><name pos:start="721:9" pos:end="721:15">new_msr</name> <operator pos:start="721:17" pos:end="721:18">|=</operator> <operator pos:start="721:20" pos:end="721:20">(</operator><name pos:start="721:21" pos:end="721:32">target_ulong</name><operator pos:start="721:33" pos:end="721:33">)</operator><literal type="number" pos:start="721:34" pos:end="721:34">1</literal> <operator pos:start="721:36" pos:end="721:37">&lt;&lt;</operator> <name pos:start="721:39" pos:end="721:44">MSR_HV</name></expr>;</expr_stmt>

        <goto pos:start="723:9" pos:end="726:0">goto <name pos:start="723:14" pos:end="723:23">store_next</name>;</goto>

<cpp:endif pos:start="725:1" pos:end="725:6">#<cpp:directive pos:start="725:2" pos:end="725:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="725:8" pos:end="725:35">/* defined(TARGET_PPC64H) */</comment>

    <case pos:start="727:5" pos:end="727:26">case <expr pos:start="727:10" pos:end="727:25"><name pos:start="727:10" pos:end="727:25">POWERPC_EXCP_VPU</name></expr>:</case>       <comment type="block" pos:start="727:34" pos:end="727:79">/* Vector unavailable exception             */</comment>

        <expr_stmt pos:start="729:9" pos:end="732:0"><expr pos:start="729:9" pos:end="729:47"><name pos:start="729:9" pos:end="729:15">new_msr</name> <operator pos:start="729:17" pos:end="729:18">&amp;=</operator> <operator pos:start="729:20" pos:end="729:20">~</operator><operator pos:start="729:21" pos:end="729:21">(</operator><operator pos:start="729:22" pos:end="729:22">(</operator><name pos:start="729:23" pos:end="729:34">target_ulong</name><operator pos:start="729:35" pos:end="729:35">)</operator><literal type="number" pos:start="729:36" pos:end="729:36">1</literal> <operator pos:start="729:38" pos:end="729:39">&lt;&lt;</operator> <name pos:start="729:41" pos:end="729:46">MSR_RI</name><operator pos:start="729:47" pos:end="729:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="731:1" pos:end="731:26">#<cpp:directive pos:start="731:2" pos:end="731:3">if</cpp:directive> <expr pos:start="731:5" pos:end="731:26"><call pos:start="731:5" pos:end="731:26"><name pos:start="731:5" pos:end="731:11">defined</name><argument_list pos:start="731:12" pos:end="731:26">(<argument pos:start="731:13" pos:end="731:25"><expr pos:start="731:13" pos:end="731:25"><name pos:start="731:13" pos:end="731:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="733:9" pos:end="738:0"><if pos:start="733:9" pos:end="738:0">if <condition pos:start="733:12" pos:end="733:23">(<expr pos:start="733:13" pos:end="733:22"><name pos:start="733:13" pos:end="733:17">lpes1</name> <operator pos:start="733:19" pos:end="733:20">==</operator> <literal type="number" pos:start="733:22" pos:end="733:22">0</literal></expr>)</condition><block type="pseudo" pos:start="735:13" pos:end="738:0"><block_content pos:start="735:13" pos:end="738:0">

            <expr_stmt pos:start="735:13" pos:end="738:0"><expr pos:start="735:13" pos:end="735:48"><name pos:start="735:13" pos:end="735:19">new_msr</name> <operator pos:start="735:21" pos:end="735:22">|=</operator> <operator pos:start="735:24" pos:end="735:24">(</operator><name pos:start="735:25" pos:end="735:36">target_ulong</name><operator pos:start="735:37" pos:end="735:37">)</operator><literal type="number" pos:start="735:38" pos:end="735:38">1</literal> <operator pos:start="735:40" pos:end="735:41">&lt;&lt;</operator> <name pos:start="735:43" pos:end="735:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="737:1" pos:end="737:6">#<cpp:directive pos:start="737:2" pos:end="737:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="739:9" pos:end="739:27">goto <name pos:start="739:14" pos:end="739:26">store_current</name>;</goto>

    <case pos:start="741:5" pos:end="744:0">case <expr pos:start="741:10" pos:end="741:25"><name pos:start="741:10" pos:end="741:25">POWERPC_EXCP_PIT</name></expr>:</case>       <comment type="block" pos:start="741:34" pos:end="741:79">/* Programmable interval timer interrupt    */</comment>

<cpp:if pos:start="743:1" pos:end="743:30">#<cpp:directive pos:start="743:2" pos:end="743:3">if</cpp:directive> <expr pos:start="743:5" pos:end="743:30"><call pos:start="743:5" pos:end="743:30"><name pos:start="743:5" pos:end="743:11">defined</name> <argument_list pos:start="743:13" pos:end="743:30">(<argument pos:start="743:14" pos:end="743:29"><expr pos:start="743:14" pos:end="743:29"><name pos:start="743:14" pos:end="743:29">DEBUG_EXCEPTIONS</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="745:9" pos:end="750:0"><if pos:start="745:9" pos:end="750:0">if <condition pos:start="745:12" pos:end="745:26">(<expr pos:start="745:13" pos:end="745:25"><name pos:start="745:13" pos:end="745:20">loglevel</name> <operator pos:start="745:22" pos:end="745:23">!=</operator> <literal type="number" pos:start="745:25" pos:end="745:25">0</literal></expr>)</condition><block type="pseudo" pos:start="747:13" pos:end="750:0"><block_content pos:start="747:13" pos:end="750:0">

            <expr_stmt pos:start="747:13" pos:end="750:0"><expr pos:start="747:13" pos:end="747:47"><call pos:start="747:13" pos:end="747:47"><name pos:start="747:13" pos:end="747:19">fprintf</name><argument_list pos:start="747:20" pos:end="747:47">(<argument pos:start="747:21" pos:end="747:27"><expr pos:start="747:21" pos:end="747:27"><name pos:start="747:21" pos:end="747:27">logfile</name></expr></argument>, <argument pos:start="747:30" pos:end="747:46"><expr pos:start="747:30" pos:end="747:46"><literal type="string" pos:start="747:30" pos:end="747:46">"PIT exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="749:1" pos:end="749:6">#<cpp:directive pos:start="749:2" pos:end="749:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="751:9" pos:end="751:48"><expr pos:start="751:9" pos:end="751:47"><name pos:start="751:9" pos:end="751:15">new_msr</name> <operator pos:start="751:17" pos:end="751:18">&amp;=</operator> <operator pos:start="751:20" pos:end="751:20">~</operator><operator pos:start="751:21" pos:end="751:21">(</operator><operator pos:start="751:22" pos:end="751:22">(</operator><name pos:start="751:23" pos:end="751:34">target_ulong</name><operator pos:start="751:35" pos:end="751:35">)</operator><literal type="number" pos:start="751:36" pos:end="751:36">1</literal> <operator pos:start="751:38" pos:end="751:39">&lt;&lt;</operator> <name pos:start="751:41" pos:end="751:46">MSR_RI</name><operator pos:start="751:47" pos:end="751:47">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="751:50" pos:end="751:70">/* XXX: check this */</comment>

        <goto pos:start="753:9" pos:end="753:24">goto <name pos:start="753:14" pos:end="753:23">store_next</name>;</goto>

    <case pos:start="755:5" pos:end="755:25">case <expr pos:start="755:10" pos:end="755:24"><name pos:start="755:10" pos:end="755:24">POWERPC_EXCP_IO</name></expr>:</case>        <comment type="block" pos:start="755:34" pos:end="755:79">/* IO error exception                       */</comment>

        <comment type="block" pos:start="757:9" pos:end="757:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="759:9" pos:end="759:76"><expr pos:start="759:9" pos:end="759:75"><call pos:start="759:9" pos:end="759:75"><name pos:start="759:9" pos:end="759:17">cpu_abort</name><argument_list pos:start="759:18" pos:end="759:75">(<argument pos:start="759:19" pos:end="759:21"><expr pos:start="759:19" pos:end="759:21"><name pos:start="759:19" pos:end="759:21">env</name></expr></argument>, <argument pos:start="759:24" pos:end="759:74"><expr pos:start="759:24" pos:end="759:74"><literal type="string" pos:start="759:24" pos:end="759:74">"601 IO error exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="761:9" pos:end="761:24">goto <name pos:start="761:14" pos:end="761:23">store_next</name>;</goto>

    <case pos:start="763:5" pos:end="763:27">case <expr pos:start="763:10" pos:end="763:26"><name pos:start="763:10" pos:end="763:26">POWERPC_EXCP_RUNM</name></expr>:</case>      <comment type="block" pos:start="763:34" pos:end="763:79">/* Run mode exception                       */</comment>

        <comment type="block" pos:start="765:9" pos:end="765:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="767:9" pos:end="767:76"><expr pos:start="767:9" pos:end="767:75"><call pos:start="767:9" pos:end="767:75"><name pos:start="767:9" pos:end="767:17">cpu_abort</name><argument_list pos:start="767:18" pos:end="767:75">(<argument pos:start="767:19" pos:end="767:21"><expr pos:start="767:19" pos:end="767:21"><name pos:start="767:19" pos:end="767:21">env</name></expr></argument>, <argument pos:start="767:24" pos:end="767:74"><expr pos:start="767:24" pos:end="767:74"><literal type="string" pos:start="767:24" pos:end="767:74">"601 run mode exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="769:9" pos:end="769:24">goto <name pos:start="769:14" pos:end="769:23">store_next</name>;</goto>

    <case pos:start="771:5" pos:end="771:27">case <expr pos:start="771:10" pos:end="771:26"><name pos:start="771:10" pos:end="771:26">POWERPC_EXCP_EMUL</name></expr>:</case>      <comment type="block" pos:start="771:34" pos:end="771:79">/* Emulation trap exception                 */</comment>

        <comment type="block" pos:start="773:9" pos:end="773:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="775:9" pos:end="777:48"><expr pos:start="775:9" pos:end="777:47"><call pos:start="775:9" pos:end="777:47"><name pos:start="775:9" pos:end="775:17">cpu_abort</name><argument_list pos:start="775:18" pos:end="777:47">(<argument pos:start="775:19" pos:end="775:21"><expr pos:start="775:19" pos:end="775:21"><name pos:start="775:19" pos:end="775:21">env</name></expr></argument>, <argument pos:start="775:24" pos:end="777:46"><expr pos:start="775:24" pos:end="777:46"><literal type="string" pos:start="775:24" pos:end="775:54">"602 emulation trap exception "</literal>

                  <literal type="string" pos:start="777:19" pos:end="777:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="779:9" pos:end="779:24">goto <name pos:start="779:14" pos:end="779:23">store_next</name>;</goto>

    <case pos:start="781:5" pos:end="781:28">case <expr pos:start="781:10" pos:end="781:27"><name pos:start="781:10" pos:end="781:27">POWERPC_EXCP_IFTLB</name></expr>:</case>     <comment type="block" pos:start="781:34" pos:end="781:79">/* Instruction fetch TLB error              */</comment>

        <expr_stmt pos:start="783:9" pos:end="786:0"><expr pos:start="783:9" pos:end="783:47"><name pos:start="783:9" pos:end="783:15">new_msr</name> <operator pos:start="783:17" pos:end="783:18">&amp;=</operator> <operator pos:start="783:20" pos:end="783:20">~</operator><operator pos:start="783:21" pos:end="783:21">(</operator><operator pos:start="783:22" pos:end="783:22">(</operator><name pos:start="783:23" pos:end="783:34">target_ulong</name><operator pos:start="783:35" pos:end="783:35">)</operator><literal type="number" pos:start="783:36" pos:end="783:36">1</literal> <operator pos:start="783:38" pos:end="783:39">&lt;&lt;</operator> <name pos:start="783:41" pos:end="783:46">MSR_RI</name><operator pos:start="783:47" pos:end="783:47">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="783:50" pos:end="783:70">/* XXX: check this */</comment>

<cpp:if pos:start="785:1" pos:end="785:26">#<cpp:directive pos:start="785:2" pos:end="785:3">if</cpp:directive> <expr pos:start="785:5" pos:end="785:26"><call pos:start="785:5" pos:end="785:26"><name pos:start="785:5" pos:end="785:11">defined</name><argument_list pos:start="785:12" pos:end="785:26">(<argument pos:start="785:13" pos:end="785:25"><expr pos:start="785:13" pos:end="785:25"><name pos:start="785:13" pos:end="785:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if> <comment type="block" pos:start="785:28" pos:end="785:48">/* XXX: check this */</comment>

        <if_stmt pos:start="787:9" pos:end="792:0"><if pos:start="787:9" pos:end="792:0">if <condition pos:start="787:12" pos:end="787:23">(<expr pos:start="787:13" pos:end="787:22"><name pos:start="787:13" pos:end="787:17">lpes1</name> <operator pos:start="787:19" pos:end="787:20">==</operator> <literal type="number" pos:start="787:22" pos:end="787:22">0</literal></expr>)</condition><block type="pseudo" pos:start="789:13" pos:end="792:0"><block_content pos:start="789:13" pos:end="792:0">

            <expr_stmt pos:start="789:13" pos:end="792:0"><expr pos:start="789:13" pos:end="789:48"><name pos:start="789:13" pos:end="789:19">new_msr</name> <operator pos:start="789:21" pos:end="789:22">|=</operator> <operator pos:start="789:24" pos:end="789:24">(</operator><name pos:start="789:25" pos:end="789:36">target_ulong</name><operator pos:start="789:37" pos:end="789:37">)</operator><literal type="number" pos:start="789:38" pos:end="789:38">1</literal> <operator pos:start="789:40" pos:end="789:41">&lt;&lt;</operator> <name pos:start="789:43" pos:end="789:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="791:1" pos:end="791:6">#<cpp:directive pos:start="791:2" pos:end="791:6">endif</cpp:directive></cpp:endif>

        <switch pos:start="793:9" pos:end="819:9">switch <condition pos:start="793:16" pos:end="793:27">(<expr pos:start="793:17" pos:end="793:26"><name pos:start="793:17" pos:end="793:26">excp_model</name></expr>)</condition> <block pos:start="793:29" pos:end="819:9">{<block_content pos:start="795:9" pos:end="817:18">

        <case pos:start="795:9" pos:end="795:30">case <expr pos:start="795:14" pos:end="795:29"><name pos:start="795:14" pos:end="795:29">POWERPC_EXCP_602</name></expr>:</case>

        <case pos:start="797:9" pos:end="797:30">case <expr pos:start="797:14" pos:end="797:29"><name pos:start="797:14" pos:end="797:29">POWERPC_EXCP_603</name></expr>:</case>

        <case pos:start="799:9" pos:end="799:31">case <expr pos:start="799:14" pos:end="799:30"><name pos:start="799:14" pos:end="799:30">POWERPC_EXCP_603E</name></expr>:</case>

        <case pos:start="801:9" pos:end="801:29">case <expr pos:start="801:14" pos:end="801:28"><name pos:start="801:14" pos:end="801:28">POWERPC_EXCP_G2</name></expr>:</case>

            <goto pos:start="803:13" pos:end="803:31">goto <name pos:start="803:18" pos:end="803:30">tlb_miss_tgpr</name>;</goto>

        <case pos:start="805:9" pos:end="805:30">case <expr pos:start="805:14" pos:end="805:29"><name pos:start="805:14" pos:end="805:29">POWERPC_EXCP_7x5</name></expr>:</case>

            <goto pos:start="807:13" pos:end="807:26">goto <name pos:start="807:18" pos:end="807:25">tlb_miss</name>;</goto>

        <case pos:start="809:9" pos:end="809:31">case <expr pos:start="809:14" pos:end="809:30"><name pos:start="809:14" pos:end="809:30">POWERPC_EXCP_74xx</name></expr>:</case>

            <goto pos:start="811:13" pos:end="811:31">goto <name pos:start="811:18" pos:end="811:30">tlb_miss_74xx</name>;</goto>

        <default pos:start="813:9" pos:end="813:16">default:</default>

            <expr_stmt pos:start="815:13" pos:end="815:71"><expr pos:start="815:13" pos:end="815:70"><call pos:start="815:13" pos:end="815:70"><name pos:start="815:13" pos:end="815:21">cpu_abort</name><argument_list pos:start="815:22" pos:end="815:70">(<argument pos:start="815:23" pos:end="815:25"><expr pos:start="815:23" pos:end="815:25"><name pos:start="815:23" pos:end="815:25">env</name></expr></argument>, <argument pos:start="815:28" pos:end="815:69"><expr pos:start="815:28" pos:end="815:69"><literal type="string" pos:start="815:28" pos:end="815:69">"Invalid instruction TLB miss exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="817:13" pos:end="817:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="821:9" pos:end="821:14">break;</break>

    <case pos:start="823:5" pos:end="823:28">case <expr pos:start="823:10" pos:end="823:27"><name pos:start="823:10" pos:end="823:27">POWERPC_EXCP_DLTLB</name></expr>:</case>     <comment type="block" pos:start="823:34" pos:end="823:79">/* Data load TLB miss                       */</comment>

        <expr_stmt pos:start="825:9" pos:end="828:0"><expr pos:start="825:9" pos:end="825:47"><name pos:start="825:9" pos:end="825:15">new_msr</name> <operator pos:start="825:17" pos:end="825:18">&amp;=</operator> <operator pos:start="825:20" pos:end="825:20">~</operator><operator pos:start="825:21" pos:end="825:21">(</operator><operator pos:start="825:22" pos:end="825:22">(</operator><name pos:start="825:23" pos:end="825:34">target_ulong</name><operator pos:start="825:35" pos:end="825:35">)</operator><literal type="number" pos:start="825:36" pos:end="825:36">1</literal> <operator pos:start="825:38" pos:end="825:39">&lt;&lt;</operator> <name pos:start="825:41" pos:end="825:46">MSR_RI</name><operator pos:start="825:47" pos:end="825:47">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="825:50" pos:end="825:70">/* XXX: check this */</comment>

<cpp:if pos:start="827:1" pos:end="827:26">#<cpp:directive pos:start="827:2" pos:end="827:3">if</cpp:directive> <expr pos:start="827:5" pos:end="827:26"><call pos:start="827:5" pos:end="827:26"><name pos:start="827:5" pos:end="827:11">defined</name><argument_list pos:start="827:12" pos:end="827:26">(<argument pos:start="827:13" pos:end="827:25"><expr pos:start="827:13" pos:end="827:25"><name pos:start="827:13" pos:end="827:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if> <comment type="block" pos:start="827:28" pos:end="827:48">/* XXX: check this */</comment>

        <if_stmt pos:start="829:9" pos:end="834:0"><if pos:start="829:9" pos:end="834:0">if <condition pos:start="829:12" pos:end="829:23">(<expr pos:start="829:13" pos:end="829:22"><name pos:start="829:13" pos:end="829:17">lpes1</name> <operator pos:start="829:19" pos:end="829:20">==</operator> <literal type="number" pos:start="829:22" pos:end="829:22">0</literal></expr>)</condition><block type="pseudo" pos:start="831:13" pos:end="834:0"><block_content pos:start="831:13" pos:end="834:0">

            <expr_stmt pos:start="831:13" pos:end="834:0"><expr pos:start="831:13" pos:end="831:48"><name pos:start="831:13" pos:end="831:19">new_msr</name> <operator pos:start="831:21" pos:end="831:22">|=</operator> <operator pos:start="831:24" pos:end="831:24">(</operator><name pos:start="831:25" pos:end="831:36">target_ulong</name><operator pos:start="831:37" pos:end="831:37">)</operator><literal type="number" pos:start="831:38" pos:end="831:38">1</literal> <operator pos:start="831:40" pos:end="831:41">&lt;&lt;</operator> <name pos:start="831:43" pos:end="831:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="833:1" pos:end="833:6">#<cpp:directive pos:start="833:2" pos:end="833:6">endif</cpp:directive></cpp:endif>

        <switch pos:start="835:9" pos:end="861:9">switch <condition pos:start="835:16" pos:end="835:27">(<expr pos:start="835:17" pos:end="835:26"><name pos:start="835:17" pos:end="835:26">excp_model</name></expr>)</condition> <block pos:start="835:29" pos:end="861:9">{<block_content pos:start="837:9" pos:end="859:18">

        <case pos:start="837:9" pos:end="837:30">case <expr pos:start="837:14" pos:end="837:29"><name pos:start="837:14" pos:end="837:29">POWERPC_EXCP_602</name></expr>:</case>

        <case pos:start="839:9" pos:end="839:30">case <expr pos:start="839:14" pos:end="839:29"><name pos:start="839:14" pos:end="839:29">POWERPC_EXCP_603</name></expr>:</case>

        <case pos:start="841:9" pos:end="841:31">case <expr pos:start="841:14" pos:end="841:30"><name pos:start="841:14" pos:end="841:30">POWERPC_EXCP_603E</name></expr>:</case>

        <case pos:start="843:9" pos:end="843:29">case <expr pos:start="843:14" pos:end="843:28"><name pos:start="843:14" pos:end="843:28">POWERPC_EXCP_G2</name></expr>:</case>

            <goto pos:start="845:13" pos:end="845:31">goto <name pos:start="845:18" pos:end="845:30">tlb_miss_tgpr</name>;</goto>

        <case pos:start="847:9" pos:end="847:30">case <expr pos:start="847:14" pos:end="847:29"><name pos:start="847:14" pos:end="847:29">POWERPC_EXCP_7x5</name></expr>:</case>

            <goto pos:start="849:13" pos:end="849:26">goto <name pos:start="849:18" pos:end="849:25">tlb_miss</name>;</goto>

        <case pos:start="851:9" pos:end="851:31">case <expr pos:start="851:14" pos:end="851:30"><name pos:start="851:14" pos:end="851:30">POWERPC_EXCP_74xx</name></expr>:</case>

            <goto pos:start="853:13" pos:end="853:31">goto <name pos:start="853:18" pos:end="853:30">tlb_miss_74xx</name>;</goto>

        <default pos:start="855:9" pos:end="855:16">default:</default>

            <expr_stmt pos:start="857:13" pos:end="857:69"><expr pos:start="857:13" pos:end="857:68"><call pos:start="857:13" pos:end="857:68"><name pos:start="857:13" pos:end="857:21">cpu_abort</name><argument_list pos:start="857:22" pos:end="857:68">(<argument pos:start="857:23" pos:end="857:25"><expr pos:start="857:23" pos:end="857:25"><name pos:start="857:23" pos:end="857:25">env</name></expr></argument>, <argument pos:start="857:28" pos:end="857:67"><expr pos:start="857:28" pos:end="857:67"><literal type="string" pos:start="857:28" pos:end="857:67">"Invalid data load TLB miss exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="859:13" pos:end="859:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="863:9" pos:end="863:14">break;</break>

    <case pos:start="865:5" pos:end="865:28">case <expr pos:start="865:10" pos:end="865:27"><name pos:start="865:10" pos:end="865:27">POWERPC_EXCP_DSTLB</name></expr>:</case>     <comment type="block" pos:start="865:34" pos:end="865:79">/* Data store TLB miss                      */</comment>

        <expr_stmt pos:start="867:9" pos:end="870:0"><expr pos:start="867:9" pos:end="867:47"><name pos:start="867:9" pos:end="867:15">new_msr</name> <operator pos:start="867:17" pos:end="867:18">&amp;=</operator> <operator pos:start="867:20" pos:end="867:20">~</operator><operator pos:start="867:21" pos:end="867:21">(</operator><operator pos:start="867:22" pos:end="867:22">(</operator><name pos:start="867:23" pos:end="867:34">target_ulong</name><operator pos:start="867:35" pos:end="867:35">)</operator><literal type="number" pos:start="867:36" pos:end="867:36">1</literal> <operator pos:start="867:38" pos:end="867:39">&lt;&lt;</operator> <name pos:start="867:41" pos:end="867:46">MSR_RI</name><operator pos:start="867:47" pos:end="867:47">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="867:50" pos:end="867:70">/* XXX: check this */</comment>

<cpp:if pos:start="869:1" pos:end="869:26">#<cpp:directive pos:start="869:2" pos:end="869:3">if</cpp:directive> <expr pos:start="869:5" pos:end="869:26"><call pos:start="869:5" pos:end="869:26"><name pos:start="869:5" pos:end="869:11">defined</name><argument_list pos:start="869:12" pos:end="869:26">(<argument pos:start="869:13" pos:end="869:25"><expr pos:start="869:13" pos:end="869:25"><name pos:start="869:13" pos:end="869:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if> <comment type="block" pos:start="869:28" pos:end="869:48">/* XXX: check this */</comment>

        <if_stmt pos:start="871:9" pos:end="876:0"><if pos:start="871:9" pos:end="876:0">if <condition pos:start="871:12" pos:end="871:23">(<expr pos:start="871:13" pos:end="871:22"><name pos:start="871:13" pos:end="871:17">lpes1</name> <operator pos:start="871:19" pos:end="871:20">==</operator> <literal type="number" pos:start="871:22" pos:end="871:22">0</literal></expr>)</condition><block type="pseudo" pos:start="873:13" pos:end="876:0"><block_content pos:start="873:13" pos:end="876:0">

            <expr_stmt pos:start="873:13" pos:end="876:0"><expr pos:start="873:13" pos:end="873:48"><name pos:start="873:13" pos:end="873:19">new_msr</name> <operator pos:start="873:21" pos:end="873:22">|=</operator> <operator pos:start="873:24" pos:end="873:24">(</operator><name pos:start="873:25" pos:end="873:36">target_ulong</name><operator pos:start="873:37" pos:end="873:37">)</operator><literal type="number" pos:start="873:38" pos:end="873:38">1</literal> <operator pos:start="873:40" pos:end="873:41">&lt;&lt;</operator> <name pos:start="873:43" pos:end="873:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="875:1" pos:end="875:6">#<cpp:directive pos:start="875:2" pos:end="875:6">endif</cpp:directive></cpp:endif>

        <switch pos:start="877:9" pos:end="1029:9">switch <condition pos:start="877:16" pos:end="877:27">(<expr pos:start="877:17" pos:end="877:26"><name pos:start="877:17" pos:end="877:26">excp_model</name></expr>)</condition> <block pos:start="877:29" pos:end="1029:9">{<block_content pos:start="879:9" pos:end="1027:18">

        <case pos:start="879:9" pos:end="879:30">case <expr pos:start="879:14" pos:end="879:29"><name pos:start="879:14" pos:end="879:29">POWERPC_EXCP_602</name></expr>:</case>

        <case pos:start="881:9" pos:end="881:30">case <expr pos:start="881:14" pos:end="881:29"><name pos:start="881:14" pos:end="881:29">POWERPC_EXCP_603</name></expr>:</case>

        <case pos:start="883:9" pos:end="883:31">case <expr pos:start="883:14" pos:end="883:30"><name pos:start="883:14" pos:end="883:30">POWERPC_EXCP_603E</name></expr>:</case>

        <case pos:start="885:9" pos:end="885:29">case <expr pos:start="885:14" pos:end="885:28"><name pos:start="885:14" pos:end="885:28">POWERPC_EXCP_G2</name></expr>:</case>

        <label pos:start="887:9" pos:end="887:22"><name pos:start="887:9" pos:end="887:21">tlb_miss_tgpr</name>:</label>

            <comment type="block" pos:start="889:13" pos:end="889:58">/* Swap temporary saved registers with GPRs */</comment>

            <if_stmt pos:start="891:13" pos:end="897:13"><if pos:start="891:13" pos:end="897:13">if <condition pos:start="891:16" pos:end="891:59">(<expr pos:start="891:17" pos:end="891:58"><operator pos:start="891:17" pos:end="891:17">!</operator><operator pos:start="891:18" pos:end="891:18">(</operator><name pos:start="891:19" pos:end="891:25">new_msr</name> <operator pos:start="891:27" pos:end="891:27">&amp;</operator> <operator pos:start="891:29" pos:end="891:29">(</operator><operator pos:start="891:30" pos:end="891:30">(</operator><name pos:start="891:31" pos:end="891:42">target_ulong</name><operator pos:start="891:43" pos:end="891:43">)</operator><literal type="number" pos:start="891:44" pos:end="891:44">1</literal> <operator pos:start="891:46" pos:end="891:47">&lt;&lt;</operator> <name pos:start="891:49" pos:end="891:56">MSR_TGPR</name><operator pos:start="891:57" pos:end="891:57">)</operator><operator pos:start="891:58" pos:end="891:58">)</operator></expr>)</condition> <block pos:start="891:61" pos:end="897:13">{<block_content pos:start="893:17" pos:end="895:40">

                <expr_stmt pos:start="893:17" pos:end="893:55"><expr pos:start="893:17" pos:end="893:54"><name pos:start="893:17" pos:end="893:23">new_msr</name> <operator pos:start="893:25" pos:end="893:26">|=</operator> <operator pos:start="893:28" pos:end="893:28">(</operator><name pos:start="893:29" pos:end="893:40">target_ulong</name><operator pos:start="893:41" pos:end="893:41">)</operator><literal type="number" pos:start="893:42" pos:end="893:42">1</literal> <operator pos:start="893:44" pos:end="893:45">&lt;&lt;</operator> <name pos:start="893:47" pos:end="893:54">MSR_TGPR</name></expr>;</expr_stmt>

                <expr_stmt pos:start="895:17" pos:end="895:40"><expr pos:start="895:17" pos:end="895:39"><call pos:start="895:17" pos:end="895:39"><name pos:start="895:17" pos:end="895:34">hreg_swap_gpr_tgpr</name><argument_list pos:start="895:35" pos:end="895:39">(<argument pos:start="895:36" pos:end="895:38"><expr pos:start="895:36" pos:end="895:38"><name pos:start="895:36" pos:end="895:38">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="899:13" pos:end="899:26">goto <name pos:start="899:18" pos:end="899:25">tlb_miss</name>;</goto>

        <case pos:start="901:9" pos:end="901:30">case <expr pos:start="901:14" pos:end="901:29"><name pos:start="901:14" pos:end="901:29">POWERPC_EXCP_7x5</name></expr>:</case>

        <label pos:start="903:9" pos:end="906:0"><name pos:start="903:9" pos:end="903:16">tlb_miss</name>:</label>

<cpp:if pos:start="905:1" pos:end="905:32">#<cpp:directive pos:start="905:2" pos:end="905:3">if</cpp:directive> <expr pos:start="905:5" pos:end="905:32"><call pos:start="905:5" pos:end="905:32"><name pos:start="905:5" pos:end="905:11">defined</name> <argument_list pos:start="905:13" pos:end="905:32">(<argument pos:start="905:14" pos:end="905:31"><expr pos:start="905:14" pos:end="905:31"><name pos:start="905:14" pos:end="905:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="907:13" pos:end="956:0"><if pos:start="907:13" pos:end="956:0">if <condition pos:start="907:16" pos:end="907:30">(<expr pos:start="907:17" pos:end="907:29"><name pos:start="907:17" pos:end="907:24">loglevel</name> <operator pos:start="907:26" pos:end="907:27">!=</operator> <literal type="number" pos:start="907:29" pos:end="907:29">0</literal></expr>)</condition> <block pos:start="907:32" pos:end="956:0">{<block_content pos:start="909:17" pos:end="951:41">

                <decl_stmt pos:start="909:17" pos:end="909:40"><decl pos:start="909:17" pos:end="909:39"><type pos:start="909:17" pos:end="909:37"><specifier pos:start="909:17" pos:end="909:21">const</specifier> <name pos:start="909:23" pos:end="909:30">unsigned</name> <name pos:start="909:32" pos:end="909:35">char</name> <modifier pos:start="909:37" pos:end="909:37">*</modifier></type><name pos:start="909:38" pos:end="909:39">es</name></decl>;</decl_stmt>

                <decl_stmt pos:start="911:17" pos:end="911:41"><decl pos:start="911:17" pos:end="911:34"><type pos:start="911:17" pos:end="911:30"><name pos:start="911:17" pos:end="911:28">target_ulong</name> <modifier pos:start="911:30" pos:end="911:30">*</modifier></type><name pos:start="911:31" pos:end="911:34">miss</name></decl>, <decl pos:start="911:37" pos:end="911:40"><type ref="prev" pos:start="911:17" pos:end="911:30"><modifier pos:start="911:37" pos:end="911:37">*</modifier></type><name pos:start="911:38" pos:end="911:40">cmp</name></decl>;</decl_stmt>

                <decl_stmt pos:start="913:17" pos:end="913:23"><decl pos:start="913:17" pos:end="913:22"><type pos:start="913:17" pos:end="913:19"><name pos:start="913:17" pos:end="913:19">int</name></type> <name pos:start="913:21" pos:end="913:22">en</name></decl>;</decl_stmt>

                <if_stmt pos:start="915:17" pos:end="941:17"><if pos:start="915:17" pos:end="925:17">if <condition pos:start="915:20" pos:end="915:47">(<expr pos:start="915:21" pos:end="915:46"><name pos:start="915:21" pos:end="915:24">excp</name> <operator pos:start="915:26" pos:end="915:27">==</operator> <name pos:start="915:29" pos:end="915:46">POWERPC_EXCP_IFTLB</name></expr>)</condition> <block pos:start="915:49" pos:end="925:17">{<block_content pos:start="917:21" pos:end="923:46">

                    <expr_stmt pos:start="917:21" pos:end="917:29"><expr pos:start="917:21" pos:end="917:28"><name pos:start="917:21" pos:end="917:22">es</name> <operator pos:start="917:24" pos:end="917:24">=</operator> <literal type="string" pos:start="917:26" pos:end="917:28">"I"</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="919:21" pos:end="919:29"><expr pos:start="919:21" pos:end="919:28"><name pos:start="919:21" pos:end="919:22">en</name> <operator pos:start="919:24" pos:end="919:24">=</operator> <literal type="char" pos:start="919:26" pos:end="919:28">'I'</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="921:21" pos:end="921:48"><expr pos:start="921:21" pos:end="921:47"><name pos:start="921:21" pos:end="921:24">miss</name> <operator pos:start="921:26" pos:end="921:26">=</operator> <operator pos:start="921:28" pos:end="921:28">&amp;</operator><name pos:start="921:29" pos:end="921:47"><name pos:start="921:29" pos:end="921:31">env</name><operator pos:start="921:32" pos:end="921:33">-&gt;</operator><name pos:start="921:34" pos:end="921:36">spr</name><index pos:start="921:37" pos:end="921:47">[<expr pos:start="921:38" pos:end="921:46"><name pos:start="921:38" pos:end="921:46">SPR_IMISS</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="923:21" pos:end="923:46"><expr pos:start="923:21" pos:end="923:45"><name pos:start="923:21" pos:end="923:23">cmp</name> <operator pos:start="923:25" pos:end="923:25">=</operator> <operator pos:start="923:27" pos:end="923:27">&amp;</operator><name pos:start="923:28" pos:end="923:45"><name pos:start="923:28" pos:end="923:30">env</name><operator pos:start="923:31" pos:end="923:32">-&gt;</operator><name pos:start="923:33" pos:end="923:35">spr</name><index pos:start="923:36" pos:end="923:45">[<expr pos:start="923:37" pos:end="923:44"><name pos:start="923:37" pos:end="923:44">SPR_ICMP</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="925:19" pos:end="941:17">else <block pos:start="925:24" pos:end="941:17">{<block_content pos:start="927:21" pos:end="939:46">

                    <if_stmt pos:start="927:21" pos:end="933:34"><if pos:start="927:21" pos:end="929:34">if <condition pos:start="927:24" pos:end="927:51">(<expr pos:start="927:25" pos:end="927:50"><name pos:start="927:25" pos:end="927:28">excp</name> <operator pos:start="927:30" pos:end="927:31">==</operator> <name pos:start="927:33" pos:end="927:50">POWERPC_EXCP_DLTLB</name></expr>)</condition><block type="pseudo" pos:start="929:25" pos:end="929:34"><block_content pos:start="929:25" pos:end="929:34">

                        <expr_stmt pos:start="929:25" pos:end="929:34"><expr pos:start="929:25" pos:end="929:33"><name pos:start="929:25" pos:end="929:26">es</name> <operator pos:start="929:28" pos:end="929:28">=</operator> <literal type="string" pos:start="929:30" pos:end="929:33">"DL"</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="931:21" pos:end="933:34">else<block type="pseudo" pos:start="933:25" pos:end="933:34"><block_content pos:start="933:25" pos:end="933:34">

                        <expr_stmt pos:start="933:25" pos:end="933:34"><expr pos:start="933:25" pos:end="933:33"><name pos:start="933:25" pos:end="933:26">es</name> <operator pos:start="933:28" pos:end="933:28">=</operator> <literal type="string" pos:start="933:30" pos:end="933:33">"DS"</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="935:21" pos:end="935:29"><expr pos:start="935:21" pos:end="935:28"><name pos:start="935:21" pos:end="935:22">en</name> <operator pos:start="935:24" pos:end="935:24">=</operator> <literal type="char" pos:start="935:26" pos:end="935:28">'D'</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="937:21" pos:end="937:48"><expr pos:start="937:21" pos:end="937:47"><name pos:start="937:21" pos:end="937:24">miss</name> <operator pos:start="937:26" pos:end="937:26">=</operator> <operator pos:start="937:28" pos:end="937:28">&amp;</operator><name pos:start="937:29" pos:end="937:47"><name pos:start="937:29" pos:end="937:31">env</name><operator pos:start="937:32" pos:end="937:33">-&gt;</operator><name pos:start="937:34" pos:end="937:36">spr</name><index pos:start="937:37" pos:end="937:47">[<expr pos:start="937:38" pos:end="937:46"><name pos:start="937:38" pos:end="937:46">SPR_DMISS</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="939:21" pos:end="939:46"><expr pos:start="939:21" pos:end="939:45"><name pos:start="939:21" pos:end="939:23">cmp</name> <operator pos:start="939:25" pos:end="939:25">=</operator> <operator pos:start="939:27" pos:end="939:27">&amp;</operator><name pos:start="939:28" pos:end="939:45"><name pos:start="939:28" pos:end="939:30">env</name><operator pos:start="939:31" pos:end="939:32">-&gt;</operator><name pos:start="939:33" pos:end="939:35">spr</name><index pos:start="939:36" pos:end="939:45">[<expr pos:start="939:37" pos:end="939:44"><name pos:start="939:37" pos:end="939:44">SPR_DCMP</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="943:17" pos:end="951:41"><expr pos:start="943:17" pos:end="951:40"><call pos:start="943:17" pos:end="951:40"><name pos:start="943:17" pos:end="943:23">fprintf</name><argument_list pos:start="943:24" pos:end="951:40">(<argument pos:start="943:25" pos:end="943:31"><expr pos:start="943:25" pos:end="943:31"><name pos:start="943:25" pos:end="943:31">logfile</name></expr></argument>, <argument pos:start="943:34" pos:end="945:59"><expr pos:start="943:34" pos:end="945:59"><literal type="string" pos:start="943:34" pos:end="943:55">"6xx %sTLB miss: %cM "</literal> <name pos:start="943:57" pos:end="943:61">ADDRX</name> <literal type="string" pos:start="943:63" pos:end="943:69">" %cC "</literal> <name pos:start="943:71" pos:end="943:75">ADDRX</name>

                        <literal type="string" pos:start="945:25" pos:end="945:30">" H1 "</literal> <name pos:start="945:32" pos:end="945:36">ADDRX</name> <literal type="string" pos:start="945:38" pos:end="945:43">" H2 "</literal> <name pos:start="945:45" pos:end="945:49">ADDRX</name> <literal type="string" pos:start="945:51" pos:end="945:59">" %08x\n"</literal></expr></argument>,

                        <argument pos:start="947:25" pos:end="947:26"><expr pos:start="947:25" pos:end="947:26"><name pos:start="947:25" pos:end="947:26">es</name></expr></argument>, <argument pos:start="947:29" pos:end="947:30"><expr pos:start="947:29" pos:end="947:30"><name pos:start="947:29" pos:end="947:30">en</name></expr></argument>, <argument pos:start="947:33" pos:end="947:37"><expr pos:start="947:33" pos:end="947:37"><operator pos:start="947:33" pos:end="947:33">*</operator><name pos:start="947:34" pos:end="947:37">miss</name></expr></argument>, <argument pos:start="947:40" pos:end="947:41"><expr pos:start="947:40" pos:end="947:41"><name pos:start="947:40" pos:end="947:41">en</name></expr></argument>, <argument pos:start="947:44" pos:end="947:47"><expr pos:start="947:44" pos:end="947:47"><operator pos:start="947:44" pos:end="947:44">*</operator><name pos:start="947:45" pos:end="947:47">cmp</name></expr></argument>,

                        <argument pos:start="949:25" pos:end="949:43"><expr pos:start="949:25" pos:end="949:43"><name pos:start="949:25" pos:end="949:43"><name pos:start="949:25" pos:end="949:27">env</name><operator pos:start="949:28" pos:end="949:29">-&gt;</operator><name pos:start="949:30" pos:end="949:32">spr</name><index pos:start="949:33" pos:end="949:43">[<expr pos:start="949:34" pos:end="949:42"><name pos:start="949:34" pos:end="949:42">SPR_HASH1</name></expr>]</index></name></expr></argument>, <argument pos:start="949:46" pos:end="949:64"><expr pos:start="949:46" pos:end="949:64"><name pos:start="949:46" pos:end="949:64"><name pos:start="949:46" pos:end="949:48">env</name><operator pos:start="949:49" pos:end="949:50">-&gt;</operator><name pos:start="949:51" pos:end="949:53">spr</name><index pos:start="949:54" pos:end="949:64">[<expr pos:start="949:55" pos:end="949:63"><name pos:start="949:55" pos:end="949:63">SPR_HASH2</name></expr>]</index></name></expr></argument>,

                        <argument pos:start="951:25" pos:end="951:39"><expr pos:start="951:25" pos:end="951:39"><name pos:start="951:25" pos:end="951:39"><name pos:start="951:25" pos:end="951:27">env</name><operator pos:start="951:28" pos:end="951:29">-&gt;</operator><name pos:start="951:30" pos:end="951:39">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="955:1" pos:end="955:6">#<cpp:directive pos:start="955:2" pos:end="955:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="957:13" pos:end="957:37"><expr pos:start="957:13" pos:end="957:36"><name pos:start="957:13" pos:end="957:15">msr</name> <operator pos:start="957:17" pos:end="957:18">|=</operator> <name pos:start="957:20" pos:end="957:30"><name pos:start="957:20" pos:end="957:22">env</name><operator pos:start="957:23" pos:end="957:24">-&gt;</operator><name pos:start="957:25" pos:end="957:27">crf</name><index pos:start="957:28" pos:end="957:30">[<expr pos:start="957:29" pos:end="957:29"><literal type="number" pos:start="957:29" pos:end="957:29">0</literal></expr>]</index></name> <operator pos:start="957:32" pos:end="957:33">&lt;&lt;</operator> <literal type="number" pos:start="957:35" pos:end="957:36">28</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="959:13" pos:end="959:35"><expr pos:start="959:13" pos:end="959:34"><name pos:start="959:13" pos:end="959:15">msr</name> <operator pos:start="959:17" pos:end="959:18">|=</operator> <name pos:start="959:20" pos:end="959:34"><name pos:start="959:20" pos:end="959:22">env</name><operator pos:start="959:23" pos:end="959:24">-&gt;</operator><name pos:start="959:25" pos:end="959:34">error_code</name></name></expr>;</expr_stmt> <comment type="block" pos:start="959:37" pos:end="959:60">/* key, D/I, S/L bits */</comment>

            <comment type="block" pos:start="961:13" pos:end="961:47">/* Set way using a LRU mechanism */</comment>

            <expr_stmt pos:start="963:13" pos:end="963:68"><expr pos:start="963:13" pos:end="963:67"><name pos:start="963:13" pos:end="963:15">msr</name> <operator pos:start="963:17" pos:end="963:18">|=</operator> <operator pos:start="963:20" pos:end="963:20">(</operator><operator pos:start="963:21" pos:end="963:21">(</operator><name pos:start="963:22" pos:end="963:34"><name pos:start="963:22" pos:end="963:24">env</name><operator pos:start="963:25" pos:end="963:26">-&gt;</operator><name pos:start="963:27" pos:end="963:34">last_way</name></name> <operator pos:start="963:36" pos:end="963:36">+</operator> <literal type="number" pos:start="963:38" pos:end="963:38">1</literal><operator pos:start="963:39" pos:end="963:39">)</operator> <operator pos:start="963:41" pos:end="963:41">&amp;</operator> <operator pos:start="963:43" pos:end="963:43">(</operator><name pos:start="963:44" pos:end="963:55"><name pos:start="963:44" pos:end="963:46">env</name><operator pos:start="963:47" pos:end="963:48">-&gt;</operator><name pos:start="963:49" pos:end="963:55">nb_ways</name></name> <operator pos:start="963:57" pos:end="963:57">-</operator> <literal type="number" pos:start="963:59" pos:end="963:59">1</literal><operator pos:start="963:60" pos:end="963:60">)</operator><operator pos:start="963:61" pos:end="963:61">)</operator> <operator pos:start="963:63" pos:end="963:64">&lt;&lt;</operator> <literal type="number" pos:start="963:66" pos:end="963:67">17</literal></expr>;</expr_stmt>

            <break pos:start="965:13" pos:end="965:18">break;</break>

        <case pos:start="967:9" pos:end="967:31">case <expr pos:start="967:14" pos:end="967:30"><name pos:start="967:14" pos:end="967:30">POWERPC_EXCP_74xx</name></expr>:</case>

        <label pos:start="969:9" pos:end="972:0"><name pos:start="969:9" pos:end="969:21">tlb_miss_74xx</name>:</label>

<cpp:if pos:start="971:1" pos:end="971:32">#<cpp:directive pos:start="971:2" pos:end="971:3">if</cpp:directive> <expr pos:start="971:5" pos:end="971:32"><call pos:start="971:5" pos:end="971:32"><name pos:start="971:5" pos:end="971:11">defined</name> <argument_list pos:start="971:13" pos:end="971:32">(<argument pos:start="971:14" pos:end="971:31"><expr pos:start="971:14" pos:end="971:31"><name pos:start="971:14" pos:end="971:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="973:13" pos:end="1018:0"><if pos:start="973:13" pos:end="1018:0">if <condition pos:start="973:16" pos:end="973:30">(<expr pos:start="973:17" pos:end="973:29"><name pos:start="973:17" pos:end="973:24">loglevel</name> <operator pos:start="973:26" pos:end="973:27">!=</operator> <literal type="number" pos:start="973:29" pos:end="973:29">0</literal></expr>)</condition> <block pos:start="973:32" pos:end="1018:0">{<block_content pos:start="975:17" pos:end="1013:66">

                <decl_stmt pos:start="975:17" pos:end="975:40"><decl pos:start="975:17" pos:end="975:39"><type pos:start="975:17" pos:end="975:37"><specifier pos:start="975:17" pos:end="975:21">const</specifier> <name pos:start="975:23" pos:end="975:30">unsigned</name> <name pos:start="975:32" pos:end="975:35">char</name> <modifier pos:start="975:37" pos:end="975:37">*</modifier></type><name pos:start="975:38" pos:end="975:39">es</name></decl>;</decl_stmt>

                <decl_stmt pos:start="977:17" pos:end="977:41"><decl pos:start="977:17" pos:end="977:34"><type pos:start="977:17" pos:end="977:30"><name pos:start="977:17" pos:end="977:28">target_ulong</name> <modifier pos:start="977:30" pos:end="977:30">*</modifier></type><name pos:start="977:31" pos:end="977:34">miss</name></decl>, <decl pos:start="977:37" pos:end="977:40"><type ref="prev" pos:start="977:17" pos:end="977:30"><modifier pos:start="977:37" pos:end="977:37">*</modifier></type><name pos:start="977:38" pos:end="977:40">cmp</name></decl>;</decl_stmt>

                <decl_stmt pos:start="979:17" pos:end="979:23"><decl pos:start="979:17" pos:end="979:22"><type pos:start="979:17" pos:end="979:19"><name pos:start="979:17" pos:end="979:19">int</name></type> <name pos:start="979:21" pos:end="979:22">en</name></decl>;</decl_stmt>

                <if_stmt pos:start="981:17" pos:end="1007:17"><if pos:start="981:17" pos:end="991:17">if <condition pos:start="981:20" pos:end="981:47">(<expr pos:start="981:21" pos:end="981:46"><name pos:start="981:21" pos:end="981:24">excp</name> <operator pos:start="981:26" pos:end="981:27">==</operator> <name pos:start="981:29" pos:end="981:46">POWERPC_EXCP_IFTLB</name></expr>)</condition> <block pos:start="981:49" pos:end="991:17">{<block_content pos:start="983:21" pos:end="989:47">

                    <expr_stmt pos:start="983:21" pos:end="983:29"><expr pos:start="983:21" pos:end="983:28"><name pos:start="983:21" pos:end="983:22">es</name> <operator pos:start="983:24" pos:end="983:24">=</operator> <literal type="string" pos:start="983:26" pos:end="983:28">"I"</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="985:21" pos:end="985:29"><expr pos:start="985:21" pos:end="985:28"><name pos:start="985:21" pos:end="985:22">en</name> <operator pos:start="985:24" pos:end="985:24">=</operator> <literal type="char" pos:start="985:26" pos:end="985:28">'I'</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="987:21" pos:end="987:50"><expr pos:start="987:21" pos:end="987:49"><name pos:start="987:21" pos:end="987:24">miss</name> <operator pos:start="987:26" pos:end="987:26">=</operator> <operator pos:start="987:28" pos:end="987:28">&amp;</operator><name pos:start="987:29" pos:end="987:49"><name pos:start="987:29" pos:end="987:31">env</name><operator pos:start="987:32" pos:end="987:33">-&gt;</operator><name pos:start="987:34" pos:end="987:36">spr</name><index pos:start="987:37" pos:end="987:49">[<expr pos:start="987:38" pos:end="987:48"><name pos:start="987:38" pos:end="987:48">SPR_TLBMISS</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="989:21" pos:end="989:47"><expr pos:start="989:21" pos:end="989:46"><name pos:start="989:21" pos:end="989:23">cmp</name> <operator pos:start="989:25" pos:end="989:25">=</operator> <operator pos:start="989:27" pos:end="989:27">&amp;</operator><name pos:start="989:28" pos:end="989:46"><name pos:start="989:28" pos:end="989:30">env</name><operator pos:start="989:31" pos:end="989:32">-&gt;</operator><name pos:start="989:33" pos:end="989:35">spr</name><index pos:start="989:36" pos:end="989:46">[<expr pos:start="989:37" pos:end="989:45"><name pos:start="989:37" pos:end="989:45">SPR_PTEHI</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="991:19" pos:end="1007:17">else <block pos:start="991:24" pos:end="1007:17">{<block_content pos:start="993:21" pos:end="1005:47">

                    <if_stmt pos:start="993:21" pos:end="999:34"><if pos:start="993:21" pos:end="995:34">if <condition pos:start="993:24" pos:end="993:51">(<expr pos:start="993:25" pos:end="993:50"><name pos:start="993:25" pos:end="993:28">excp</name> <operator pos:start="993:30" pos:end="993:31">==</operator> <name pos:start="993:33" pos:end="993:50">POWERPC_EXCP_DLTLB</name></expr>)</condition><block type="pseudo" pos:start="995:25" pos:end="995:34"><block_content pos:start="995:25" pos:end="995:34">

                        <expr_stmt pos:start="995:25" pos:end="995:34"><expr pos:start="995:25" pos:end="995:33"><name pos:start="995:25" pos:end="995:26">es</name> <operator pos:start="995:28" pos:end="995:28">=</operator> <literal type="string" pos:start="995:30" pos:end="995:33">"DL"</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="997:21" pos:end="999:34">else<block type="pseudo" pos:start="999:25" pos:end="999:34"><block_content pos:start="999:25" pos:end="999:34">

                        <expr_stmt pos:start="999:25" pos:end="999:34"><expr pos:start="999:25" pos:end="999:33"><name pos:start="999:25" pos:end="999:26">es</name> <operator pos:start="999:28" pos:end="999:28">=</operator> <literal type="string" pos:start="999:30" pos:end="999:33">"DS"</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="1001:21" pos:end="1001:29"><expr pos:start="1001:21" pos:end="1001:28"><name pos:start="1001:21" pos:end="1001:22">en</name> <operator pos:start="1001:24" pos:end="1001:24">=</operator> <literal type="char" pos:start="1001:26" pos:end="1001:28">'D'</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1003:21" pos:end="1003:50"><expr pos:start="1003:21" pos:end="1003:49"><name pos:start="1003:21" pos:end="1003:24">miss</name> <operator pos:start="1003:26" pos:end="1003:26">=</operator> <operator pos:start="1003:28" pos:end="1003:28">&amp;</operator><name pos:start="1003:29" pos:end="1003:49"><name pos:start="1003:29" pos:end="1003:31">env</name><operator pos:start="1003:32" pos:end="1003:33">-&gt;</operator><name pos:start="1003:34" pos:end="1003:36">spr</name><index pos:start="1003:37" pos:end="1003:49">[<expr pos:start="1003:38" pos:end="1003:48"><name pos:start="1003:38" pos:end="1003:48">SPR_TLBMISS</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="1005:21" pos:end="1005:47"><expr pos:start="1005:21" pos:end="1005:46"><name pos:start="1005:21" pos:end="1005:23">cmp</name> <operator pos:start="1005:25" pos:end="1005:25">=</operator> <operator pos:start="1005:27" pos:end="1005:27">&amp;</operator><name pos:start="1005:28" pos:end="1005:46"><name pos:start="1005:28" pos:end="1005:30">env</name><operator pos:start="1005:31" pos:end="1005:32">-&gt;</operator><name pos:start="1005:33" pos:end="1005:35">spr</name><index pos:start="1005:36" pos:end="1005:46">[<expr pos:start="1005:37" pos:end="1005:45"><name pos:start="1005:37" pos:end="1005:45">SPR_PTEHI</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="1009:17" pos:end="1013:66"><expr pos:start="1009:17" pos:end="1013:65"><call pos:start="1009:17" pos:end="1013:65"><name pos:start="1009:17" pos:end="1009:23">fprintf</name><argument_list pos:start="1009:24" pos:end="1013:65">(<argument pos:start="1009:25" pos:end="1009:31"><expr pos:start="1009:25" pos:end="1009:31"><name pos:start="1009:25" pos:end="1009:31">logfile</name></expr></argument>, <argument pos:start="1009:34" pos:end="1011:33"><expr pos:start="1009:34" pos:end="1011:33"><literal type="string" pos:start="1009:34" pos:end="1009:56">"74xx %sTLB miss: %cM "</literal> <name pos:start="1009:58" pos:end="1009:62">ADDRX</name> <literal type="string" pos:start="1009:64" pos:end="1009:70">" %cC "</literal> <name pos:start="1009:72" pos:end="1009:76">ADDRX</name>

                        <literal type="string" pos:start="1011:25" pos:end="1011:33">" %08x\n"</literal></expr></argument>,

                        <argument pos:start="1013:25" pos:end="1013:26"><expr pos:start="1013:25" pos:end="1013:26"><name pos:start="1013:25" pos:end="1013:26">es</name></expr></argument>, <argument pos:start="1013:29" pos:end="1013:30"><expr pos:start="1013:29" pos:end="1013:30"><name pos:start="1013:29" pos:end="1013:30">en</name></expr></argument>, <argument pos:start="1013:33" pos:end="1013:37"><expr pos:start="1013:33" pos:end="1013:37"><operator pos:start="1013:33" pos:end="1013:33">*</operator><name pos:start="1013:34" pos:end="1013:37">miss</name></expr></argument>, <argument pos:start="1013:40" pos:end="1013:41"><expr pos:start="1013:40" pos:end="1013:41"><name pos:start="1013:40" pos:end="1013:41">en</name></expr></argument>, <argument pos:start="1013:44" pos:end="1013:47"><expr pos:start="1013:44" pos:end="1013:47"><operator pos:start="1013:44" pos:end="1013:44">*</operator><name pos:start="1013:45" pos:end="1013:47">cmp</name></expr></argument>, <argument pos:start="1013:50" pos:end="1013:64"><expr pos:start="1013:50" pos:end="1013:64"><name pos:start="1013:50" pos:end="1013:64"><name pos:start="1013:50" pos:end="1013:52">env</name><operator pos:start="1013:53" pos:end="1013:54">-&gt;</operator><name pos:start="1013:55" pos:end="1013:64">error_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="1017:1" pos:end="1017:6">#<cpp:directive pos:start="1017:2" pos:end="1017:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="1019:13" pos:end="1019:35"><expr pos:start="1019:13" pos:end="1019:34"><name pos:start="1019:13" pos:end="1019:15">msr</name> <operator pos:start="1019:17" pos:end="1019:18">|=</operator> <name pos:start="1019:20" pos:end="1019:34"><name pos:start="1019:20" pos:end="1019:22">env</name><operator pos:start="1019:23" pos:end="1019:24">-&gt;</operator><name pos:start="1019:25" pos:end="1019:34">error_code</name></name></expr>;</expr_stmt> <comment type="block" pos:start="1019:37" pos:end="1019:49">/* key bit */</comment>

            <break pos:start="1021:13" pos:end="1021:18">break;</break>

        <default pos:start="1023:9" pos:end="1023:16">default:</default>

            <expr_stmt pos:start="1025:13" pos:end="1025:70"><expr pos:start="1025:13" pos:end="1025:69"><call pos:start="1025:13" pos:end="1025:69"><name pos:start="1025:13" pos:end="1025:21">cpu_abort</name><argument_list pos:start="1025:22" pos:end="1025:69">(<argument pos:start="1025:23" pos:end="1025:25"><expr pos:start="1025:23" pos:end="1025:25"><name pos:start="1025:23" pos:end="1025:25">env</name></expr></argument>, <argument pos:start="1025:28" pos:end="1025:68"><expr pos:start="1025:28" pos:end="1025:68"><literal type="string" pos:start="1025:28" pos:end="1025:68">"Invalid data store TLB miss exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1027:13" pos:end="1027:18">break;</break>

        </block_content>}</block></switch>

        <goto pos:start="1031:9" pos:end="1031:24">goto <name pos:start="1031:14" pos:end="1031:23">store_next</name>;</goto>

    <case pos:start="1033:5" pos:end="1033:26">case <expr pos:start="1033:10" pos:end="1033:25"><name pos:start="1033:10" pos:end="1033:25">POWERPC_EXCP_FPA</name></expr>:</case>       <comment type="block" pos:start="1033:34" pos:end="1033:79">/* Floating-point assist exception          */</comment>

        <comment type="block" pos:start="1035:9" pos:end="1035:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1037:9" pos:end="1039:48"><expr pos:start="1037:9" pos:end="1039:47"><call pos:start="1037:9" pos:end="1039:47"><name pos:start="1037:9" pos:end="1037:17">cpu_abort</name><argument_list pos:start="1037:18" pos:end="1039:47">(<argument pos:start="1037:19" pos:end="1037:21"><expr pos:start="1037:19" pos:end="1037:21"><name pos:start="1037:19" pos:end="1037:21">env</name></expr></argument>, <argument pos:start="1037:24" pos:end="1039:46"><expr pos:start="1037:24" pos:end="1039:46"><literal type="string" pos:start="1037:24" pos:end="1037:57">"Floating point assist exception "</literal>

                  <literal type="string" pos:start="1039:19" pos:end="1039:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1041:9" pos:end="1041:24">goto <name pos:start="1041:14" pos:end="1041:23">store_next</name>;</goto>

    <case pos:start="1043:5" pos:end="1043:27">case <expr pos:start="1043:10" pos:end="1043:26"><name pos:start="1043:10" pos:end="1043:26">POWERPC_EXCP_IABR</name></expr>:</case>      <comment type="block" pos:start="1043:34" pos:end="1043:79">/* Instruction address breakpoint           */</comment>

        <comment type="block" pos:start="1045:9" pos:end="1045:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1047:9" pos:end="1047:68"><expr pos:start="1047:9" pos:end="1047:67"><call pos:start="1047:9" pos:end="1047:67"><name pos:start="1047:9" pos:end="1047:17">cpu_abort</name><argument_list pos:start="1047:18" pos:end="1047:67">(<argument pos:start="1047:19" pos:end="1047:21"><expr pos:start="1047:19" pos:end="1047:21"><name pos:start="1047:19" pos:end="1047:21">env</name></expr></argument>, <argument pos:start="1047:24" pos:end="1047:66"><expr pos:start="1047:24" pos:end="1047:66"><literal type="string" pos:start="1047:24" pos:end="1047:66">"IABR exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1049:9" pos:end="1049:24">goto <name pos:start="1049:14" pos:end="1049:23">store_next</name>;</goto>

    <case pos:start="1051:5" pos:end="1051:26">case <expr pos:start="1051:10" pos:end="1051:25"><name pos:start="1051:10" pos:end="1051:25">POWERPC_EXCP_SMI</name></expr>:</case>       <comment type="block" pos:start="1051:34" pos:end="1051:79">/* System management interrupt              */</comment>

        <comment type="block" pos:start="1053:9" pos:end="1053:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1055:9" pos:end="1055:67"><expr pos:start="1055:9" pos:end="1055:66"><call pos:start="1055:9" pos:end="1055:66"><name pos:start="1055:9" pos:end="1055:17">cpu_abort</name><argument_list pos:start="1055:18" pos:end="1055:66">(<argument pos:start="1055:19" pos:end="1055:21"><expr pos:start="1055:19" pos:end="1055:21"><name pos:start="1055:19" pos:end="1055:21">env</name></expr></argument>, <argument pos:start="1055:24" pos:end="1055:65"><expr pos:start="1055:24" pos:end="1055:65"><literal type="string" pos:start="1055:24" pos:end="1055:65">"SMI exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1057:9" pos:end="1057:24">goto <name pos:start="1057:14" pos:end="1057:23">store_next</name>;</goto>

    <case pos:start="1059:5" pos:end="1059:28">case <expr pos:start="1059:10" pos:end="1059:27"><name pos:start="1059:10" pos:end="1059:27">POWERPC_EXCP_THERM</name></expr>:</case>     <comment type="block" pos:start="1059:34" pos:end="1059:79">/* Thermal interrupt                        */</comment>

        <comment type="block" pos:start="1061:9" pos:end="1061:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1063:9" pos:end="1065:48"><expr pos:start="1063:9" pos:end="1065:47"><call pos:start="1063:9" pos:end="1065:47"><name pos:start="1063:9" pos:end="1063:17">cpu_abort</name><argument_list pos:start="1063:18" pos:end="1065:47">(<argument pos:start="1063:19" pos:end="1063:21"><expr pos:start="1063:19" pos:end="1063:21"><name pos:start="1063:19" pos:end="1063:21">env</name></expr></argument>, <argument pos:start="1063:24" pos:end="1065:46"><expr pos:start="1063:24" pos:end="1065:46"><literal type="string" pos:start="1063:24" pos:end="1063:54">"Thermal management exception "</literal>

                  <literal type="string" pos:start="1065:19" pos:end="1065:46">"is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1067:9" pos:end="1067:24">goto <name pos:start="1067:14" pos:end="1067:23">store_next</name>;</goto>

    <case pos:start="1069:5" pos:end="1069:28">case <expr pos:start="1069:10" pos:end="1069:27"><name pos:start="1069:10" pos:end="1069:27">POWERPC_EXCP_PERFM</name></expr>:</case>     <comment type="block" pos:start="1069:34" pos:end="1069:79">/* Embedded performance monitor interrupt   */</comment>

        <expr_stmt pos:start="1071:9" pos:end="1074:0"><expr pos:start="1071:9" pos:end="1071:47"><name pos:start="1071:9" pos:end="1071:15">new_msr</name> <operator pos:start="1071:17" pos:end="1071:18">&amp;=</operator> <operator pos:start="1071:20" pos:end="1071:20">~</operator><operator pos:start="1071:21" pos:end="1071:21">(</operator><operator pos:start="1071:22" pos:end="1071:22">(</operator><name pos:start="1071:23" pos:end="1071:34">target_ulong</name><operator pos:start="1071:35" pos:end="1071:35">)</operator><literal type="number" pos:start="1071:36" pos:end="1071:36">1</literal> <operator pos:start="1071:38" pos:end="1071:39">&lt;&lt;</operator> <name pos:start="1071:41" pos:end="1071:46">MSR_RI</name><operator pos:start="1071:47" pos:end="1071:47">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="1073:1" pos:end="1073:26">#<cpp:directive pos:start="1073:2" pos:end="1073:3">if</cpp:directive> <expr pos:start="1073:5" pos:end="1073:26"><call pos:start="1073:5" pos:end="1073:26"><name pos:start="1073:5" pos:end="1073:11">defined</name><argument_list pos:start="1073:12" pos:end="1073:26">(<argument pos:start="1073:13" pos:end="1073:25"><expr pos:start="1073:13" pos:end="1073:25"><name pos:start="1073:13" pos:end="1073:25">TARGET_PPC64H</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="1075:9" pos:end="1080:0"><if pos:start="1075:9" pos:end="1080:0">if <condition pos:start="1075:12" pos:end="1075:23">(<expr pos:start="1075:13" pos:end="1075:22"><name pos:start="1075:13" pos:end="1075:17">lpes1</name> <operator pos:start="1075:19" pos:end="1075:20">==</operator> <literal type="number" pos:start="1075:22" pos:end="1075:22">0</literal></expr>)</condition><block type="pseudo" pos:start="1077:13" pos:end="1080:0"><block_content pos:start="1077:13" pos:end="1080:0">

            <expr_stmt pos:start="1077:13" pos:end="1080:0"><expr pos:start="1077:13" pos:end="1077:48"><name pos:start="1077:13" pos:end="1077:19">new_msr</name> <operator pos:start="1077:21" pos:end="1077:22">|=</operator> <operator pos:start="1077:24" pos:end="1077:24">(</operator><name pos:start="1077:25" pos:end="1077:36">target_ulong</name><operator pos:start="1077:37" pos:end="1077:37">)</operator><literal type="number" pos:start="1077:38" pos:end="1077:38">1</literal> <operator pos:start="1077:40" pos:end="1077:41">&lt;&lt;</operator> <name pos:start="1077:43" pos:end="1077:48">MSR_HV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="1079:1" pos:end="1079:6">#<cpp:directive pos:start="1079:2" pos:end="1079:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="1081:9" pos:end="1081:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1083:9" pos:end="1085:78"><expr pos:start="1083:9" pos:end="1085:77"><call pos:start="1083:9" pos:end="1085:77"><name pos:start="1083:9" pos:end="1083:17">cpu_abort</name><argument_list pos:start="1083:18" pos:end="1085:77">(<argument pos:start="1083:19" pos:end="1083:21"><expr pos:start="1083:19" pos:end="1083:21"><name pos:start="1083:19" pos:end="1083:21">env</name></expr></argument>,

                  <argument pos:start="1085:19" pos:end="1085:76"><expr pos:start="1085:19" pos:end="1085:76"><literal type="string" pos:start="1085:19" pos:end="1085:76">"Performance counter exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1087:9" pos:end="1087:24">goto <name pos:start="1087:14" pos:end="1087:23">store_next</name>;</goto>

    <case pos:start="1089:5" pos:end="1089:27">case <expr pos:start="1089:10" pos:end="1089:26"><name pos:start="1089:10" pos:end="1089:26">POWERPC_EXCP_VPUA</name></expr>:</case>      <comment type="block" pos:start="1089:34" pos:end="1089:79">/* Vector assist exception                  */</comment>

        <comment type="block" pos:start="1091:9" pos:end="1091:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1093:9" pos:end="1093:74"><expr pos:start="1093:9" pos:end="1093:73"><call pos:start="1093:9" pos:end="1093:73"><name pos:start="1093:9" pos:end="1093:17">cpu_abort</name><argument_list pos:start="1093:18" pos:end="1093:73">(<argument pos:start="1093:19" pos:end="1093:21"><expr pos:start="1093:19" pos:end="1093:21"><name pos:start="1093:19" pos:end="1093:21">env</name></expr></argument>, <argument pos:start="1093:24" pos:end="1093:72"><expr pos:start="1093:24" pos:end="1093:72"><literal type="string" pos:start="1093:24" pos:end="1093:72">"VPU assist exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1095:9" pos:end="1095:24">goto <name pos:start="1095:14" pos:end="1095:23">store_next</name>;</goto>

    <case pos:start="1097:5" pos:end="1097:28">case <expr pos:start="1097:10" pos:end="1097:27"><name pos:start="1097:10" pos:end="1097:27">POWERPC_EXCP_SOFTP</name></expr>:</case>     <comment type="block" pos:start="1097:34" pos:end="1097:79">/* Soft patch exception                     */</comment>

        <comment type="block" pos:start="1099:9" pos:end="1099:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1101:9" pos:end="1103:73"><expr pos:start="1101:9" pos:end="1103:72"><call pos:start="1101:9" pos:end="1103:72"><name pos:start="1101:9" pos:end="1101:17">cpu_abort</name><argument_list pos:start="1101:18" pos:end="1103:72">(<argument pos:start="1101:19" pos:end="1101:21"><expr pos:start="1101:19" pos:end="1101:21"><name pos:start="1101:19" pos:end="1101:21">env</name></expr></argument>,

                  <argument pos:start="1103:19" pos:end="1103:71"><expr pos:start="1103:19" pos:end="1103:71"><literal type="string" pos:start="1103:19" pos:end="1103:71">"970 soft-patch exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1105:9" pos:end="1105:24">goto <name pos:start="1105:14" pos:end="1105:23">store_next</name>;</goto>

    <case pos:start="1107:5" pos:end="1107:28">case <expr pos:start="1107:10" pos:end="1107:27"><name pos:start="1107:10" pos:end="1107:27">POWERPC_EXCP_MAINT</name></expr>:</case>     <comment type="block" pos:start="1107:34" pos:end="1107:79">/* Maintenance exception                    */</comment>

        <comment type="block" pos:start="1109:9" pos:end="1109:23">/* XXX: TODO */</comment>

        <expr_stmt pos:start="1111:9" pos:end="1113:74"><expr pos:start="1111:9" pos:end="1113:73"><call pos:start="1111:9" pos:end="1113:73"><name pos:start="1111:9" pos:end="1111:17">cpu_abort</name><argument_list pos:start="1111:18" pos:end="1113:73">(<argument pos:start="1111:19" pos:end="1111:21"><expr pos:start="1111:19" pos:end="1111:21"><name pos:start="1111:19" pos:end="1111:21">env</name></expr></argument>,

                  <argument pos:start="1113:19" pos:end="1113:72"><expr pos:start="1113:19" pos:end="1113:72"><literal type="string" pos:start="1113:19" pos:end="1113:72">"970 maintenance exception is not implemented yet !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="1115:9" pos:end="1115:24">goto <name pos:start="1115:14" pos:end="1115:23">store_next</name>;</goto>

    <default pos:start="1117:5" pos:end="1117:12">default:</default>

    <label pos:start="1119:5" pos:end="1119:17"><name pos:start="1119:5" pos:end="1119:16">excp_invalid</name>:</label>

        <expr_stmt pos:start="1121:9" pos:end="1121:73"><expr pos:start="1121:9" pos:end="1121:72"><call pos:start="1121:9" pos:end="1121:72"><name pos:start="1121:9" pos:end="1121:17">cpu_abort</name><argument_list pos:start="1121:18" pos:end="1121:72">(<argument pos:start="1121:19" pos:end="1121:21"><expr pos:start="1121:19" pos:end="1121:21"><name pos:start="1121:19" pos:end="1121:21">env</name></expr></argument>, <argument pos:start="1121:24" pos:end="1121:65"><expr pos:start="1121:24" pos:end="1121:65"><literal type="string" pos:start="1121:24" pos:end="1121:65">"Invalid PowerPC exception %d. Aborting\n"</literal></expr></argument>, <argument pos:start="1121:68" pos:end="1121:71"><expr pos:start="1121:68" pos:end="1121:71"><name pos:start="1121:68" pos:end="1121:71">excp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1123:9" pos:end="1123:14">break;</break>

    <label pos:start="1125:5" pos:end="1125:18"><name pos:start="1125:5" pos:end="1125:17">store_current</name>:</label>

        <comment type="block" pos:start="1127:9" pos:end="1127:47">/* save current instruction location */</comment>

        <expr_stmt pos:start="1129:9" pos:end="1129:38"><expr pos:start="1129:9" pos:end="1129:37"><name pos:start="1129:9" pos:end="1129:22"><name pos:start="1129:9" pos:end="1129:11">env</name><operator pos:start="1129:12" pos:end="1129:13">-&gt;</operator><name pos:start="1129:14" pos:end="1129:16">spr</name><index pos:start="1129:17" pos:end="1129:22">[<expr pos:start="1129:18" pos:end="1129:21"><name pos:start="1129:18" pos:end="1129:21">srr0</name></expr>]</index></name> <operator pos:start="1129:24" pos:end="1129:24">=</operator> <name pos:start="1129:26" pos:end="1129:33"><name pos:start="1129:26" pos:end="1129:28">env</name><operator pos:start="1129:29" pos:end="1129:30">-&gt;</operator><name pos:start="1129:31" pos:end="1129:33">nip</name></name> <operator pos:start="1129:35" pos:end="1129:35">-</operator> <literal type="number" pos:start="1129:37" pos:end="1129:37">4</literal></expr>;</expr_stmt>

        <break pos:start="1131:9" pos:end="1131:14">break;</break>

    <label pos:start="1133:5" pos:end="1133:15"><name pos:start="1133:5" pos:end="1133:14">store_next</name>:</label>

        <comment type="block" pos:start="1135:9" pos:end="1135:44">/* save next instruction location */</comment>

        <expr_stmt pos:start="1137:9" pos:end="1137:34"><expr pos:start="1137:9" pos:end="1137:33"><name pos:start="1137:9" pos:end="1137:22"><name pos:start="1137:9" pos:end="1137:11">env</name><operator pos:start="1137:12" pos:end="1137:13">-&gt;</operator><name pos:start="1137:14" pos:end="1137:16">spr</name><index pos:start="1137:17" pos:end="1137:22">[<expr pos:start="1137:18" pos:end="1137:21"><name pos:start="1137:18" pos:end="1137:21">srr0</name></expr>]</index></name> <operator pos:start="1137:24" pos:end="1137:24">=</operator> <name pos:start="1137:26" pos:end="1137:33"><name pos:start="1137:26" pos:end="1137:28">env</name><operator pos:start="1137:29" pos:end="1137:30">-&gt;</operator><name pos:start="1137:31" pos:end="1137:33">nip</name></name></expr>;</expr_stmt>

        <break pos:start="1139:9" pos:end="1139:14">break;</break>

    </block_content>}</block></switch>

    <comment type="block" pos:start="1143:5" pos:end="1143:18">/* Save MSR */</comment>

    <expr_stmt pos:start="1145:5" pos:end="1145:25"><expr pos:start="1145:5" pos:end="1145:24"><name pos:start="1145:5" pos:end="1145:18"><name pos:start="1145:5" pos:end="1145:7">env</name><operator pos:start="1145:8" pos:end="1145:9">-&gt;</operator><name pos:start="1145:10" pos:end="1145:12">spr</name><index pos:start="1145:13" pos:end="1145:18">[<expr pos:start="1145:14" pos:end="1145:17"><name pos:start="1145:14" pos:end="1145:17">srr1</name></expr>]</index></name> <operator pos:start="1145:20" pos:end="1145:20">=</operator> <name pos:start="1145:22" pos:end="1145:24">msr</name></expr>;</expr_stmt>

    <comment type="block" pos:start="1147:5" pos:end="1147:75">/* If any alternate SRR register are defined, duplicate saved values */</comment>

    <if_stmt pos:start="1149:5" pos:end="1151:41"><if pos:start="1149:5" pos:end="1151:41">if <condition pos:start="1149:8" pos:end="1149:20">(<expr pos:start="1149:9" pos:end="1149:19"><name pos:start="1149:9" pos:end="1149:13">asrr0</name> <operator pos:start="1149:15" pos:end="1149:16">!=</operator> <operator pos:start="1149:18" pos:end="1149:18">-</operator><literal type="number" pos:start="1149:19" pos:end="1149:19">1</literal></expr>)</condition><block type="pseudo" pos:start="1151:9" pos:end="1151:41"><block_content pos:start="1151:9" pos:end="1151:41">

        <expr_stmt pos:start="1151:9" pos:end="1151:41"><expr pos:start="1151:9" pos:end="1151:40"><name pos:start="1151:9" pos:end="1151:23"><name pos:start="1151:9" pos:end="1151:11">env</name><operator pos:start="1151:12" pos:end="1151:13">-&gt;</operator><name pos:start="1151:14" pos:end="1151:16">spr</name><index pos:start="1151:17" pos:end="1151:23">[<expr pos:start="1151:18" pos:end="1151:22"><name pos:start="1151:18" pos:end="1151:22">asrr0</name></expr>]</index></name> <operator pos:start="1151:25" pos:end="1151:25">=</operator> <name pos:start="1151:27" pos:end="1151:40"><name pos:start="1151:27" pos:end="1151:29">env</name><operator pos:start="1151:30" pos:end="1151:31">-&gt;</operator><name pos:start="1151:32" pos:end="1151:34">spr</name><index pos:start="1151:35" pos:end="1151:40">[<expr pos:start="1151:36" pos:end="1151:39"><name pos:start="1151:36" pos:end="1151:39">srr0</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1153:5" pos:end="1155:41"><if pos:start="1153:5" pos:end="1155:41">if <condition pos:start="1153:8" pos:end="1153:20">(<expr pos:start="1153:9" pos:end="1153:19"><name pos:start="1153:9" pos:end="1153:13">asrr1</name> <operator pos:start="1153:15" pos:end="1153:16">!=</operator> <operator pos:start="1153:18" pos:end="1153:18">-</operator><literal type="number" pos:start="1153:19" pos:end="1153:19">1</literal></expr>)</condition><block type="pseudo" pos:start="1155:9" pos:end="1155:41"><block_content pos:start="1155:9" pos:end="1155:41">

        <expr_stmt pos:start="1155:9" pos:end="1155:41"><expr pos:start="1155:9" pos:end="1155:40"><name pos:start="1155:9" pos:end="1155:23"><name pos:start="1155:9" pos:end="1155:11">env</name><operator pos:start="1155:12" pos:end="1155:13">-&gt;</operator><name pos:start="1155:14" pos:end="1155:16">spr</name><index pos:start="1155:17" pos:end="1155:23">[<expr pos:start="1155:18" pos:end="1155:22"><name pos:start="1155:18" pos:end="1155:22">asrr1</name></expr>]</index></name> <operator pos:start="1155:25" pos:end="1155:25">=</operator> <name pos:start="1155:27" pos:end="1155:40"><name pos:start="1155:27" pos:end="1155:29">env</name><operator pos:start="1155:30" pos:end="1155:31">-&gt;</operator><name pos:start="1155:32" pos:end="1155:34">spr</name><index pos:start="1155:35" pos:end="1155:40">[<expr pos:start="1155:36" pos:end="1155:39"><name pos:start="1155:36" pos:end="1155:39">srr1</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="1157:5" pos:end="1157:56">/* If we disactivated any translation, flush TLBs */</comment>

    <if_stmt pos:start="1159:5" pos:end="1161:26"><if pos:start="1159:5" pos:end="1161:26">if <condition pos:start="1159:8" pos:end="1159:50">(<expr pos:start="1159:9" pos:end="1159:49"><name pos:start="1159:9" pos:end="1159:15">new_msr</name> <operator pos:start="1159:17" pos:end="1159:17">&amp;</operator> <operator pos:start="1159:19" pos:end="1159:19">(</operator><operator pos:start="1159:20" pos:end="1159:20">(</operator><literal type="number" pos:start="1159:21" pos:end="1159:21">1</literal> <operator pos:start="1159:23" pos:end="1159:24">&lt;&lt;</operator> <name pos:start="1159:26" pos:end="1159:31">MSR_IR</name><operator pos:start="1159:32" pos:end="1159:32">)</operator> <operator pos:start="1159:34" pos:end="1159:34">|</operator> <operator pos:start="1159:36" pos:end="1159:36">(</operator><literal type="number" pos:start="1159:37" pos:end="1159:37">1</literal> <operator pos:start="1159:39" pos:end="1159:40">&lt;&lt;</operator> <name pos:start="1159:42" pos:end="1159:47">MSR_DR</name><operator pos:start="1159:48" pos:end="1159:48">)</operator><operator pos:start="1159:49" pos:end="1159:49">)</operator></expr>)</condition><block type="pseudo" pos:start="1161:9" pos:end="1161:26"><block_content pos:start="1161:9" pos:end="1161:26">

        <expr_stmt pos:start="1161:9" pos:end="1161:26"><expr pos:start="1161:9" pos:end="1161:25"><call pos:start="1161:9" pos:end="1161:25"><name pos:start="1161:9" pos:end="1161:17">tlb_flush</name><argument_list pos:start="1161:18" pos:end="1161:25">(<argument pos:start="1161:19" pos:end="1161:21"><expr pos:start="1161:19" pos:end="1161:21"><name pos:start="1161:19" pos:end="1161:21">env</name></expr></argument>, <argument pos:start="1161:24" pos:end="1161:24"><expr pos:start="1161:24" pos:end="1161:24"><literal type="number" pos:start="1161:24" pos:end="1161:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="1163:5" pos:end="1163:38">/* reload MSR with correct bits */</comment>

    <expr_stmt pos:start="1165:5" pos:end="1165:44"><expr pos:start="1165:5" pos:end="1165:43"><name pos:start="1165:5" pos:end="1165:11">new_msr</name> <operator pos:start="1165:13" pos:end="1165:14">&amp;=</operator> <operator pos:start="1165:16" pos:end="1165:16">~</operator><operator pos:start="1165:17" pos:end="1165:17">(</operator><operator pos:start="1165:18" pos:end="1165:18">(</operator><name pos:start="1165:19" pos:end="1165:30">target_ulong</name><operator pos:start="1165:31" pos:end="1165:31">)</operator><literal type="number" pos:start="1165:32" pos:end="1165:32">1</literal> <operator pos:start="1165:34" pos:end="1165:35">&lt;&lt;</operator> <name pos:start="1165:37" pos:end="1165:42">MSR_EE</name><operator pos:start="1165:43" pos:end="1165:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="1167:5" pos:end="1167:44"><expr pos:start="1167:5" pos:end="1167:43"><name pos:start="1167:5" pos:end="1167:11">new_msr</name> <operator pos:start="1167:13" pos:end="1167:14">&amp;=</operator> <operator pos:start="1167:16" pos:end="1167:16">~</operator><operator pos:start="1167:17" pos:end="1167:17">(</operator><operator pos:start="1167:18" pos:end="1167:18">(</operator><name pos:start="1167:19" pos:end="1167:30">target_ulong</name><operator pos:start="1167:31" pos:end="1167:31">)</operator><literal type="number" pos:start="1167:32" pos:end="1167:32">1</literal> <operator pos:start="1167:34" pos:end="1167:35">&lt;&lt;</operator> <name pos:start="1167:37" pos:end="1167:42">MSR_PR</name><operator pos:start="1167:43" pos:end="1167:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="1169:5" pos:end="1169:44"><expr pos:start="1169:5" pos:end="1169:43"><name pos:start="1169:5" pos:end="1169:11">new_msr</name> <operator pos:start="1169:13" pos:end="1169:14">&amp;=</operator> <operator pos:start="1169:16" pos:end="1169:16">~</operator><operator pos:start="1169:17" pos:end="1169:17">(</operator><operator pos:start="1169:18" pos:end="1169:18">(</operator><name pos:start="1169:19" pos:end="1169:30">target_ulong</name><operator pos:start="1169:31" pos:end="1169:31">)</operator><literal type="number" pos:start="1169:32" pos:end="1169:32">1</literal> <operator pos:start="1169:34" pos:end="1169:35">&lt;&lt;</operator> <name pos:start="1169:37" pos:end="1169:42">MSR_FP</name><operator pos:start="1169:43" pos:end="1169:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="1171:5" pos:end="1171:45"><expr pos:start="1171:5" pos:end="1171:44"><name pos:start="1171:5" pos:end="1171:11">new_msr</name> <operator pos:start="1171:13" pos:end="1171:14">&amp;=</operator> <operator pos:start="1171:16" pos:end="1171:16">~</operator><operator pos:start="1171:17" pos:end="1171:17">(</operator><operator pos:start="1171:18" pos:end="1171:18">(</operator><name pos:start="1171:19" pos:end="1171:30">target_ulong</name><operator pos:start="1171:31" pos:end="1171:31">)</operator><literal type="number" pos:start="1171:32" pos:end="1171:32">1</literal> <operator pos:start="1171:34" pos:end="1171:35">&lt;&lt;</operator> <name pos:start="1171:37" pos:end="1171:43">MSR_FE0</name><operator pos:start="1171:44" pos:end="1171:44">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="1173:5" pos:end="1173:44"><expr pos:start="1173:5" pos:end="1173:43"><name pos:start="1173:5" pos:end="1173:11">new_msr</name> <operator pos:start="1173:13" pos:end="1173:14">&amp;=</operator> <operator pos:start="1173:16" pos:end="1173:16">~</operator><operator pos:start="1173:17" pos:end="1173:17">(</operator><operator pos:start="1173:18" pos:end="1173:18">(</operator><name pos:start="1173:19" pos:end="1173:30">target_ulong</name><operator pos:start="1173:31" pos:end="1173:31">)</operator><literal type="number" pos:start="1173:32" pos:end="1173:32">1</literal> <operator pos:start="1173:34" pos:end="1173:35">&lt;&lt;</operator> <name pos:start="1173:37" pos:end="1173:42">MSR_SE</name><operator pos:start="1173:43" pos:end="1173:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="1175:5" pos:end="1175:44"><expr pos:start="1175:5" pos:end="1175:43"><name pos:start="1175:5" pos:end="1175:11">new_msr</name> <operator pos:start="1175:13" pos:end="1175:14">&amp;=</operator> <operator pos:start="1175:16" pos:end="1175:16">~</operator><operator pos:start="1175:17" pos:end="1175:17">(</operator><operator pos:start="1175:18" pos:end="1175:18">(</operator><name pos:start="1175:19" pos:end="1175:30">target_ulong</name><operator pos:start="1175:31" pos:end="1175:31">)</operator><literal type="number" pos:start="1175:32" pos:end="1175:32">1</literal> <operator pos:start="1175:34" pos:end="1175:35">&lt;&lt;</operator> <name pos:start="1175:37" pos:end="1175:42">MSR_BE</name><operator pos:start="1175:43" pos:end="1175:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="1177:5" pos:end="1177:45"><expr pos:start="1177:5" pos:end="1177:44"><name pos:start="1177:5" pos:end="1177:11">new_msr</name> <operator pos:start="1177:13" pos:end="1177:14">&amp;=</operator> <operator pos:start="1177:16" pos:end="1177:16">~</operator><operator pos:start="1177:17" pos:end="1177:17">(</operator><operator pos:start="1177:18" pos:end="1177:18">(</operator><name pos:start="1177:19" pos:end="1177:30">target_ulong</name><operator pos:start="1177:31" pos:end="1177:31">)</operator><literal type="number" pos:start="1177:32" pos:end="1177:32">1</literal> <operator pos:start="1177:34" pos:end="1177:35">&lt;&lt;</operator> <name pos:start="1177:37" pos:end="1177:43">MSR_FE1</name><operator pos:start="1177:44" pos:end="1177:44">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="1179:5" pos:end="1179:44"><expr pos:start="1179:5" pos:end="1179:43"><name pos:start="1179:5" pos:end="1179:11">new_msr</name> <operator pos:start="1179:13" pos:end="1179:14">&amp;=</operator> <operator pos:start="1179:16" pos:end="1179:16">~</operator><operator pos:start="1179:17" pos:end="1179:17">(</operator><operator pos:start="1179:18" pos:end="1179:18">(</operator><name pos:start="1179:19" pos:end="1179:30">target_ulong</name><operator pos:start="1179:31" pos:end="1179:31">)</operator><literal type="number" pos:start="1179:32" pos:end="1179:32">1</literal> <operator pos:start="1179:34" pos:end="1179:35">&lt;&lt;</operator> <name pos:start="1179:37" pos:end="1179:42">MSR_IR</name><operator pos:start="1179:43" pos:end="1179:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="1181:5" pos:end="1188:0"><expr pos:start="1181:5" pos:end="1181:43"><name pos:start="1181:5" pos:end="1181:11">new_msr</name> <operator pos:start="1181:13" pos:end="1181:14">&amp;=</operator> <operator pos:start="1181:16" pos:end="1181:16">~</operator><operator pos:start="1181:17" pos:end="1181:17">(</operator><operator pos:start="1181:18" pos:end="1181:18">(</operator><name pos:start="1181:19" pos:end="1181:30">target_ulong</name><operator pos:start="1181:31" pos:end="1181:31">)</operator><literal type="number" pos:start="1181:32" pos:end="1181:32">1</literal> <operator pos:start="1181:34" pos:end="1181:35">&lt;&lt;</operator> <name pos:start="1181:37" pos:end="1181:42">MSR_DR</name><operator pos:start="1181:43" pos:end="1181:43">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="1183:1" pos:end="1183:5">#<cpp:directive pos:start="1183:2" pos:end="1183:3">if</cpp:directive> <expr pos:start="1183:5" pos:end="1183:5"><literal type="number" pos:start="1183:5" pos:end="1183:5">0</literal></expr></cpp:if> <comment type="block" pos:start="1183:7" pos:end="1183:40">/* Fix this: not on all targets */</comment>

    new_msr &amp;= ~((target_ulong)1 &lt;&lt; MSR_PMM);

<cpp:endif pos:start="1187:1" pos:end="1187:6">#<cpp:directive pos:start="1187:2" pos:end="1187:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="1189:5" pos:end="1189:44"><expr pos:start="1189:5" pos:end="1189:43"><name pos:start="1189:5" pos:end="1189:11">new_msr</name> <operator pos:start="1189:13" pos:end="1189:14">&amp;=</operator> <operator pos:start="1189:16" pos:end="1189:16">~</operator><operator pos:start="1189:17" pos:end="1189:17">(</operator><operator pos:start="1189:18" pos:end="1189:18">(</operator><name pos:start="1189:19" pos:end="1189:30">target_ulong</name><operator pos:start="1189:31" pos:end="1189:31">)</operator><literal type="number" pos:start="1189:32" pos:end="1189:32">1</literal> <operator pos:start="1189:34" pos:end="1189:35">&lt;&lt;</operator> <name pos:start="1189:37" pos:end="1189:42">MSR_LE</name><operator pos:start="1189:43" pos:end="1189:43">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="1191:5" pos:end="1197:48"><if pos:start="1191:5" pos:end="1193:45">if <condition pos:start="1191:8" pos:end="1191:16">(<expr pos:start="1191:9" pos:end="1191:15"><name pos:start="1191:9" pos:end="1191:15">msr_ile</name></expr>)</condition><block type="pseudo" pos:start="1193:9" pos:end="1193:45"><block_content pos:start="1193:9" pos:end="1193:45">

        <expr_stmt pos:start="1193:9" pos:end="1193:45"><expr pos:start="1193:9" pos:end="1193:44"><name pos:start="1193:9" pos:end="1193:15">new_msr</name> <operator pos:start="1193:17" pos:end="1193:18">|=</operator> <operator pos:start="1193:20" pos:end="1193:20">(</operator><name pos:start="1193:21" pos:end="1193:32">target_ulong</name><operator pos:start="1193:33" pos:end="1193:33">)</operator><literal type="number" pos:start="1193:34" pos:end="1193:34">1</literal> <operator pos:start="1193:36" pos:end="1193:37">&lt;&lt;</operator> <name pos:start="1193:39" pos:end="1193:44">MSR_LE</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="1195:5" pos:end="1197:48">else<block type="pseudo" pos:start="1197:9" pos:end="1197:48"><block_content pos:start="1197:9" pos:end="1197:48">

        <expr_stmt pos:start="1197:9" pos:end="1197:48"><expr pos:start="1197:9" pos:end="1197:47"><name pos:start="1197:9" pos:end="1197:15">new_msr</name> <operator pos:start="1197:17" pos:end="1197:18">&amp;=</operator> <operator pos:start="1197:20" pos:end="1197:20">~</operator><operator pos:start="1197:21" pos:end="1197:21">(</operator><operator pos:start="1197:22" pos:end="1197:22">(</operator><name pos:start="1197:23" pos:end="1197:34">target_ulong</name><operator pos:start="1197:35" pos:end="1197:35">)</operator><literal type="number" pos:start="1197:36" pos:end="1197:36">1</literal> <operator pos:start="1197:38" pos:end="1197:39">&lt;&lt;</operator> <name pos:start="1197:41" pos:end="1197:46">MSR_LE</name><operator pos:start="1197:47" pos:end="1197:47">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <comment type="block" pos:start="1199:5" pos:end="1199:25">/* Jump to handler */</comment>

    <expr_stmt pos:start="1201:5" pos:end="1201:37"><expr pos:start="1201:5" pos:end="1201:36"><name pos:start="1201:5" pos:end="1201:10">vector</name> <operator pos:start="1201:12" pos:end="1201:12">=</operator> <name pos:start="1201:14" pos:end="1201:36"><name pos:start="1201:14" pos:end="1201:16">env</name><operator pos:start="1201:17" pos:end="1201:18">-&gt;</operator><name pos:start="1201:19" pos:end="1201:30">excp_vectors</name><index pos:start="1201:31" pos:end="1201:36">[<expr pos:start="1201:32" pos:end="1201:35"><name pos:start="1201:32" pos:end="1201:35">excp</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="1203:5" pos:end="1209:5"><if pos:start="1203:5" pos:end="1209:5">if <condition pos:start="1203:8" pos:end="1203:35">(<expr pos:start="1203:9" pos:end="1203:34"><name pos:start="1203:9" pos:end="1203:14">vector</name> <operator pos:start="1203:16" pos:end="1203:17">==</operator> <operator pos:start="1203:19" pos:end="1203:19">(</operator><name pos:start="1203:20" pos:end="1203:31">target_ulong</name><operator pos:start="1203:32" pos:end="1203:32">)</operator><operator pos:start="1203:33" pos:end="1203:33">-</operator><literal type="number" pos:start="1203:34" pos:end="1203:34">1</literal></expr>)</condition> <block pos:start="1203:37" pos:end="1209:5">{<block_content pos:start="1205:9" pos:end="1207:24">

        <expr_stmt pos:start="1205:9" pos:end="1207:24"><expr pos:start="1205:9" pos:end="1207:23"><call pos:start="1205:9" pos:end="1207:23"><name pos:start="1205:9" pos:end="1205:17">cpu_abort</name><argument_list pos:start="1205:18" pos:end="1207:23">(<argument pos:start="1205:19" pos:end="1205:21"><expr pos:start="1205:19" pos:end="1205:21"><name pos:start="1205:19" pos:end="1205:21">env</name></expr></argument>, <argument pos:start="1205:24" pos:end="1205:72"><expr pos:start="1205:24" pos:end="1205:72"><literal type="string" pos:start="1205:24" pos:end="1205:72">"Raised an exception without defined vector %d\n"</literal></expr></argument>,

                  <argument pos:start="1207:19" pos:end="1207:22"><expr pos:start="1207:19" pos:end="1207:22"><name pos:start="1207:19" pos:end="1207:22">excp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1211:5" pos:end="1214:0"><expr pos:start="1211:5" pos:end="1211:30"><name pos:start="1211:5" pos:end="1211:10">vector</name> <operator pos:start="1211:12" pos:end="1211:13">|=</operator> <name pos:start="1211:15" pos:end="1211:30"><name pos:start="1211:15" pos:end="1211:17">env</name><operator pos:start="1211:18" pos:end="1211:19">-&gt;</operator><name pos:start="1211:20" pos:end="1211:30">excp_prefix</name></name></expr>;</expr_stmt>

<cpp:if pos:start="1213:1" pos:end="1213:25">#<cpp:directive pos:start="1213:2" pos:end="1213:3">if</cpp:directive> <expr pos:start="1213:5" pos:end="1213:25"><call pos:start="1213:5" pos:end="1213:25"><name pos:start="1213:5" pos:end="1213:11">defined</name><argument_list pos:start="1213:12" pos:end="1213:25">(<argument pos:start="1213:13" pos:end="1213:24"><expr pos:start="1213:13" pos:end="1213:24"><name pos:start="1213:13" pos:end="1213:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="1215:5" pos:end="1246:0"><if pos:start="1215:5" pos:end="1229:5">if <condition pos:start="1215:8" pos:end="1215:41">(<expr pos:start="1215:9" pos:end="1215:40"><name pos:start="1215:9" pos:end="1215:18">excp_model</name> <operator pos:start="1215:20" pos:end="1215:21">==</operator> <name pos:start="1215:23" pos:end="1215:40">POWERPC_EXCP_BOOKE</name></expr>)</condition> <block pos:start="1215:43" pos:end="1229:5">{<block_content pos:start="1217:9" pos:end="1227:9">

        <if_stmt pos:start="1217:9" pos:end="1227:9"><if pos:start="1217:9" pos:end="1223:9">if <condition pos:start="1217:12" pos:end="1217:21">(<expr pos:start="1217:13" pos:end="1217:20"><operator pos:start="1217:13" pos:end="1217:13">!</operator><name pos:start="1217:14" pos:end="1217:20">msr_icm</name></expr>)</condition> <block pos:start="1217:23" pos:end="1223:9">{<block_content pos:start="1219:13" pos:end="1221:38">

            <expr_stmt pos:start="1219:13" pos:end="1219:52"><expr pos:start="1219:13" pos:end="1219:51"><name pos:start="1219:13" pos:end="1219:19">new_msr</name> <operator pos:start="1219:21" pos:end="1219:22">&amp;=</operator> <operator pos:start="1219:24" pos:end="1219:24">~</operator><operator pos:start="1219:25" pos:end="1219:25">(</operator><operator pos:start="1219:26" pos:end="1219:26">(</operator><name pos:start="1219:27" pos:end="1219:38">target_ulong</name><operator pos:start="1219:39" pos:end="1219:39">)</operator><literal type="number" pos:start="1219:40" pos:end="1219:40">1</literal> <operator pos:start="1219:42" pos:end="1219:43">&lt;&lt;</operator> <name pos:start="1219:45" pos:end="1219:50">MSR_CM</name><operator pos:start="1219:51" pos:end="1219:51">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1221:13" pos:end="1221:38"><expr pos:start="1221:13" pos:end="1221:37"><name pos:start="1221:13" pos:end="1221:18">vector</name> <operator pos:start="1221:20" pos:end="1221:20">=</operator> <operator pos:start="1221:22" pos:end="1221:22">(</operator><name pos:start="1221:23" pos:end="1221:30">uint32_t</name><operator pos:start="1221:31" pos:end="1221:31">)</operator><name pos:start="1221:32" pos:end="1221:37">vector</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1223:11" pos:end="1227:9">else <block pos:start="1223:16" pos:end="1227:9">{<block_content pos:start="1225:13" pos:end="1225:49">

            <expr_stmt pos:start="1225:13" pos:end="1225:49"><expr pos:start="1225:13" pos:end="1225:48"><name pos:start="1225:13" pos:end="1225:19">new_msr</name> <operator pos:start="1225:21" pos:end="1225:22">|=</operator> <operator pos:start="1225:24" pos:end="1225:24">(</operator><name pos:start="1225:25" pos:end="1225:36">target_ulong</name><operator pos:start="1225:37" pos:end="1225:37">)</operator><literal type="number" pos:start="1225:38" pos:end="1225:38">1</literal> <operator pos:start="1225:40" pos:end="1225:41">&lt;&lt;</operator> <name pos:start="1225:43" pos:end="1225:48">MSR_CM</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="1229:7" pos:end="1246:0">else <block pos:start="1229:12" pos:end="1246:0">{<block_content pos:start="1231:9" pos:end="1241:9">

        <if_stmt pos:start="1231:9" pos:end="1241:9"><if pos:start="1231:9" pos:end="1237:9">if <condition pos:start="1231:12" pos:end="1231:21">(<expr pos:start="1231:13" pos:end="1231:20"><operator pos:start="1231:13" pos:end="1231:13">!</operator><name pos:start="1231:14" pos:end="1231:20">msr_isf</name></expr>)</condition> <block pos:start="1231:23" pos:end="1237:9">{<block_content pos:start="1233:13" pos:end="1235:38">

            <expr_stmt pos:start="1233:13" pos:end="1233:52"><expr pos:start="1233:13" pos:end="1233:51"><name pos:start="1233:13" pos:end="1233:19">new_msr</name> <operator pos:start="1233:21" pos:end="1233:22">&amp;=</operator> <operator pos:start="1233:24" pos:end="1233:24">~</operator><operator pos:start="1233:25" pos:end="1233:25">(</operator><operator pos:start="1233:26" pos:end="1233:26">(</operator><name pos:start="1233:27" pos:end="1233:38">target_ulong</name><operator pos:start="1233:39" pos:end="1233:39">)</operator><literal type="number" pos:start="1233:40" pos:end="1233:40">1</literal> <operator pos:start="1233:42" pos:end="1233:43">&lt;&lt;</operator> <name pos:start="1233:45" pos:end="1233:50">MSR_SF</name><operator pos:start="1233:51" pos:end="1233:51">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1235:13" pos:end="1235:38"><expr pos:start="1235:13" pos:end="1235:37"><name pos:start="1235:13" pos:end="1235:18">vector</name> <operator pos:start="1235:20" pos:end="1235:20">=</operator> <operator pos:start="1235:22" pos:end="1235:22">(</operator><name pos:start="1235:23" pos:end="1235:30">uint32_t</name><operator pos:start="1235:31" pos:end="1235:31">)</operator><name pos:start="1235:32" pos:end="1235:37">vector</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1237:11" pos:end="1241:9">else <block pos:start="1237:16" pos:end="1241:9">{<block_content pos:start="1239:13" pos:end="1239:49">

            <expr_stmt pos:start="1239:13" pos:end="1239:49"><expr pos:start="1239:13" pos:end="1239:48"><name pos:start="1239:13" pos:end="1239:19">new_msr</name> <operator pos:start="1239:21" pos:end="1239:22">|=</operator> <operator pos:start="1239:24" pos:end="1239:24">(</operator><name pos:start="1239:25" pos:end="1239:36">target_ulong</name><operator pos:start="1239:37" pos:end="1239:37">)</operator><literal type="number" pos:start="1239:38" pos:end="1239:38">1</literal> <operator pos:start="1239:40" pos:end="1239:41">&lt;&lt;</operator> <name pos:start="1239:43" pos:end="1239:48">MSR_SF</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="1245:1" pos:end="1245:6">#<cpp:directive pos:start="1245:2" pos:end="1245:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="1247:5" pos:end="1251:7">/* XXX: we don't use hreg_store_msr here as already have treated

     *      any special case that could occur. Just store MSR and update hflags

     */</comment>

    <expr_stmt pos:start="1253:5" pos:end="1253:23"><expr pos:start="1253:5" pos:end="1253:22"><name pos:start="1253:5" pos:end="1253:12"><name pos:start="1253:5" pos:end="1253:7">env</name><operator pos:start="1253:8" pos:end="1253:9">-&gt;</operator><name pos:start="1253:10" pos:end="1253:12">msr</name></name> <operator pos:start="1253:14" pos:end="1253:14">=</operator> <name pos:start="1253:16" pos:end="1253:22">new_msr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1255:5" pos:end="1255:34"><expr pos:start="1255:5" pos:end="1255:33"><name pos:start="1255:5" pos:end="1255:20"><name pos:start="1255:5" pos:end="1255:7">env</name><operator pos:start="1255:8" pos:end="1255:9">-&gt;</operator><name pos:start="1255:10" pos:end="1255:20">hflags_nmsr</name></name> <operator pos:start="1255:22" pos:end="1255:22">=</operator> <literal type="number" pos:start="1255:24" pos:end="1255:33">0x00000000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1257:5" pos:end="1257:29"><expr pos:start="1257:5" pos:end="1257:28"><call pos:start="1257:5" pos:end="1257:28"><name pos:start="1257:5" pos:end="1257:23">hreg_compute_hflags</name><argument_list pos:start="1257:24" pos:end="1257:28">(<argument pos:start="1257:25" pos:end="1257:27"><expr pos:start="1257:25" pos:end="1257:27"><name pos:start="1257:25" pos:end="1257:27">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1259:5" pos:end="1259:22"><expr pos:start="1259:5" pos:end="1259:21"><name pos:start="1259:5" pos:end="1259:12"><name pos:start="1259:5" pos:end="1259:7">env</name><operator pos:start="1259:8" pos:end="1259:9">-&gt;</operator><name pos:start="1259:10" pos:end="1259:12">nip</name></name> <operator pos:start="1259:14" pos:end="1259:14">=</operator> <name pos:start="1259:16" pos:end="1259:21">vector</name></expr>;</expr_stmt>

    <comment type="block" pos:start="1261:5" pos:end="1261:31">/* Reset exception state */</comment>

    <expr_stmt pos:start="1263:5" pos:end="1263:45"><expr pos:start="1263:5" pos:end="1263:44"><name pos:start="1263:5" pos:end="1263:24"><name pos:start="1263:5" pos:end="1263:7">env</name><operator pos:start="1263:8" pos:end="1263:9">-&gt;</operator><name pos:start="1263:10" pos:end="1263:24">exception_index</name></name> <operator pos:start="1263:26" pos:end="1263:26">=</operator> <name pos:start="1263:28" pos:end="1263:44">POWERPC_EXCP_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1265:5" pos:end="1265:24"><expr pos:start="1265:5" pos:end="1265:23"><name pos:start="1265:5" pos:end="1265:19"><name pos:start="1265:5" pos:end="1265:7">env</name><operator pos:start="1265:8" pos:end="1265:9">-&gt;</operator><name pos:start="1265:10" pos:end="1265:19">error_code</name></name> <operator pos:start="1265:21" pos:end="1265:21">=</operator> <literal type="number" pos:start="1265:23" pos:end="1265:23">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
