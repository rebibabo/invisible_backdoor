<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25405.c" pos:tabs="8"><function pos:start="1:1" pos:end="345:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">raw_decode</name><parameter_list pos:start="1:22" pos:end="3:38">(<parameter pos:start="1:23" pos:end="1:43"><decl pos:start="1:23" pos:end="1:43"><type pos:start="1:23" pos:end="1:43"><name pos:start="1:23" pos:end="1:36">AVCodecContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">avctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:49">void</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">data</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:60">int</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:71">got_frame</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:37"><decl pos:start="3:23" pos:end="3:37"><type pos:start="3:23" pos:end="3:37"><name pos:start="3:23" pos:end="3:30">AVPacket</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:37">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="345:1">{<block_content pos:start="7:5" pos:end="343:20">

    <decl_stmt pos:start="7:5" pos:end="7:73"><decl pos:start="7:5" pos:end="7:72"><type pos:start="7:5" pos:end="7:30"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:28">AVPixFmtDescriptor</name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:34">desc</name> <init pos:start="7:36" pos:end="7:72">= <expr pos:start="7:38" pos:end="7:72"><call pos:start="7:38" pos:end="7:72"><name pos:start="7:38" pos:end="7:56">av_pix_fmt_desc_get</name><argument_list pos:start="7:57" pos:end="7:72">(<argument pos:start="7:58" pos:end="7:71"><expr pos:start="7:58" pos:end="7:71"><name pos:start="7:58" pos:end="7:71"><name pos:start="7:58" pos:end="7:62">avctx</name><operator pos:start="7:63" pos:end="7:64">-&gt;</operator><name pos:start="7:65" pos:end="7:71">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">RawVideoContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:28">context</name>       <init pos:start="9:36" pos:end="9:53">= <expr pos:start="9:38" pos:end="9:53"><name pos:start="9:38" pos:end="9:53"><name pos:start="9:38" pos:end="9:42">avctx</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:53">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">buf</name>             <init pos:start="11:36" pos:end="11:48">= <expr pos:start="11:38" pos:end="11:48"><name pos:start="11:38" pos:end="11:48"><name pos:start="11:38" pos:end="11:42">avpkt</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:48">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:48"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">buf_size</name>                   <init pos:start="13:36" pos:end="13:48">= <expr pos:start="13:38" pos:end="13:48"><name pos:start="13:38" pos:end="13:48"><name pos:start="13:38" pos:end="13:42">avpkt</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:48">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:22">linesize_align</name>             <init pos:start="15:36" pos:end="15:38">= <expr pos:start="15:38" pos:end="15:38"><literal type="number" pos:start="15:38" pos:end="15:38">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">res</name></decl>, <decl pos:start="17:14" pos:end="17:16"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:14" pos:end="17:16">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:92"><decl pos:start="19:5" pos:end="19:91"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">need_copy</name>                  <init pos:start="19:36" pos:end="19:91">= <expr pos:start="19:38" pos:end="19:91"><operator pos:start="19:38" pos:end="19:38">!</operator><name pos:start="19:39" pos:end="19:48"><name pos:start="19:39" pos:end="19:43">avpkt</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:48">buf</name></name> <operator pos:start="19:50" pos:end="19:51">||</operator> <name pos:start="19:53" pos:end="19:71"><name pos:start="19:53" pos:end="19:59">context</name><operator pos:start="19:60" pos:end="19:61">-&gt;</operator><name pos:start="19:62" pos:end="19:71">is_2_4_bpp</name></name> <operator pos:start="19:73" pos:end="19:74">||</operator> <name pos:start="19:76" pos:end="19:91"><name pos:start="19:76" pos:end="19:82">context</name><operator pos:start="19:83" pos:end="19:84">-&gt;</operator><name pos:start="19:85" pos:end="19:91">is_yuv2</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:11">AVFrame</name>   <modifier pos:start="23:15" pos:end="23:15">*</modifier></type><name pos:start="23:16" pos:end="23:20">frame</name>   <init pos:start="23:24" pos:end="23:29">= <expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:30"><decl pos:start="25:5" pos:end="25:29"><type pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:13">AVPicture</name> <modifier pos:start="25:15" pos:end="25:15">*</modifier></type><name pos:start="25:16" pos:end="25:22">picture</name> <init pos:start="25:24" pos:end="25:29">= <expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:48"><expr pos:start="29:5" pos:end="29:47"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:9">frame</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:20">pict_type</name></name>        <operator pos:start="29:29" pos:end="29:29">=</operator> <name pos:start="29:31" pos:end="29:47">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:9">frame</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:20">key_frame</name></name>        <operator pos:start="31:29" pos:end="31:29">=</operator> <literal type="number" pos:start="31:31" pos:end="31:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:54"><expr pos:start="33:5" pos:end="33:53"><name pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:9">frame</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:27">reordered_opaque</name></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <name pos:start="33:31" pos:end="33:53"><name pos:start="33:31" pos:end="33:35">avctx</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:53">reordered_opaque</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:46"><expr pos:start="35:5" pos:end="35:45"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:9">frame</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:18">pkt_pts</name></name>          <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:45"><name pos:start="35:31" pos:end="35:35">avctx</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:40">pkt</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:45">pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:54"><expr pos:start="37:5" pos:end="37:53"><call pos:start="37:5" pos:end="37:53"><name pos:start="37:5" pos:end="37:24">av_frame_set_pkt_pos</name>     <argument_list pos:start="37:30" pos:end="37:53">(<argument pos:start="37:31" pos:end="37:35"><expr pos:start="37:31" pos:end="37:35"><name pos:start="37:31" pos:end="37:35">frame</name></expr></argument>, <argument pos:start="37:38" pos:end="37:52"><expr pos:start="37:38" pos:end="37:52"><name pos:start="37:38" pos:end="37:52"><name pos:start="37:38" pos:end="37:42">avctx</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:47">pkt</name><operator pos:start="37:48" pos:end="37:49">-&gt;</operator><name pos:start="37:50" pos:end="37:52">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:59"><expr pos:start="39:5" pos:end="39:58"><call pos:start="39:5" pos:end="39:58"><name pos:start="39:5" pos:end="39:29">av_frame_set_pkt_duration</name><argument_list pos:start="39:30" pos:end="39:58">(<argument pos:start="39:31" pos:end="39:35"><expr pos:start="39:31" pos:end="39:35"><name pos:start="39:31" pos:end="39:35">frame</name></expr></argument>, <argument pos:start="39:38" pos:end="39:57"><expr pos:start="39:38" pos:end="39:57"><name pos:start="39:38" pos:end="39:57"><name pos:start="39:38" pos:end="39:42">avctx</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:47">pkt</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:57">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:26">(<expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:15">context</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:20">tff</name></name> <operator pos:start="43:22" pos:end="43:23">&gt;=</operator> <literal type="number" pos:start="43:25" pos:end="43:25">0</literal></expr>)</condition> <block pos:start="43:28" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:47">

        <expr_stmt pos:start="45:9" pos:end="45:36"><expr pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:31"><name pos:start="45:9" pos:end="45:13">frame</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:31">interlaced_frame</name></name> <operator pos:start="45:33" pos:end="45:33">=</operator> <literal type="number" pos:start="45:35" pos:end="45:35">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:47"><expr pos:start="47:9" pos:end="47:46"><name pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:13">frame</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:30">top_field_first</name></name>  <operator pos:start="47:33" pos:end="47:33">=</operator> <name pos:start="47:35" pos:end="47:46"><name pos:start="47:35" pos:end="47:41">context</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:46">tff</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="55:19"><if pos:start="53:5" pos:end="55:19">if <condition pos:start="53:8" pos:end="53:79">(<expr pos:start="53:9" pos:end="53:78"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:12">res</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="53:73"><name pos:start="53:16" pos:end="53:34">av_image_check_size</name><argument_list pos:start="53:35" pos:end="53:73">(<argument pos:start="53:36" pos:end="53:47"><expr pos:start="53:36" pos:end="53:47"><name pos:start="53:36" pos:end="53:47"><name pos:start="53:36" pos:end="53:40">avctx</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:47">width</name></name></expr></argument>, <argument pos:start="53:50" pos:end="53:62"><expr pos:start="53:50" pos:end="53:62"><name pos:start="53:50" pos:end="53:62"><name pos:start="53:50" pos:end="53:54">avctx</name><operator pos:start="53:55" pos:end="53:56">-&gt;</operator><name pos:start="53:57" pos:end="53:62">height</name></name></expr></argument>, <argument pos:start="53:65" pos:end="53:65"><expr pos:start="53:65" pos:end="53:65"><literal type="number" pos:start="53:65" pos:end="53:65">0</literal></expr></argument>, <argument pos:start="53:68" pos:end="53:72"><expr pos:start="53:68" pos:end="53:72"><name pos:start="53:68" pos:end="53:72">avctx</name></expr></argument>)</argument_list></call><operator pos:start="53:74" pos:end="53:74">)</operator> <operator pos:start="53:76" pos:end="53:76">&lt;</operator> <literal type="number" pos:start="53:78" pos:end="53:78">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:19"><block_content pos:start="55:9" pos:end="55:19">

        <return pos:start="55:9" pos:end="55:19">return <expr pos:start="55:16" pos:end="55:18"><name pos:start="55:16" pos:end="55:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="65:50"><if pos:start="59:5" pos:end="61:61">if <condition pos:start="59:8" pos:end="59:18">(<expr pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:17">need_copy</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:61"><block_content pos:start="61:9" pos:end="61:61">

        <expr_stmt pos:start="61:9" pos:end="61:61"><expr pos:start="61:9" pos:end="61:60"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:13">frame</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:18">buf</name><index pos:start="61:19" pos:end="61:21">[<expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>]</index></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="61:60"><name pos:start="61:25" pos:end="61:39">av_buffer_alloc</name><argument_list pos:start="61:40" pos:end="61:60">(<argument pos:start="61:41" pos:end="61:59"><expr pos:start="61:41" pos:end="61:59"><name pos:start="61:41" pos:end="61:59"><name pos:start="61:41" pos:end="61:47">context</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:59">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="63:5" pos:end="65:50">else<block type="pseudo" pos:start="65:9" pos:end="65:50"><block_content pos:start="65:9" pos:end="65:50">

        <expr_stmt pos:start="65:9" pos:end="65:50"><expr pos:start="65:9" pos:end="65:49"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:13">frame</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:18">buf</name><index pos:start="65:19" pos:end="65:21">[<expr pos:start="65:20" pos:end="65:20"><literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr>]</index></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <call pos:start="65:25" pos:end="65:49"><name pos:start="65:25" pos:end="65:37">av_buffer_ref</name><argument_list pos:start="65:38" pos:end="65:49">(<argument pos:start="65:39" pos:end="65:48"><expr pos:start="65:39" pos:end="65:48"><name pos:start="65:39" pos:end="65:48"><name pos:start="65:39" pos:end="65:43">avpkt</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:48">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="67:5" pos:end="69:31"><if pos:start="67:5" pos:end="69:31">if <condition pos:start="67:8" pos:end="67:23">(<expr pos:start="67:9" pos:end="67:22"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:22"><name pos:start="67:10" pos:end="67:14">frame</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:19">buf</name><index pos:start="67:20" pos:end="67:22">[<expr pos:start="67:21" pos:end="67:21"><literal type="number" pos:start="67:21" pos:end="67:21">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:31"><block_content pos:start="69:9" pos:end="69:31">

        <return pos:start="69:9" pos:end="69:31">return <expr pos:start="69:16" pos:end="69:30"><call pos:start="69:16" pos:end="69:30"><name pos:start="69:16" pos:end="69:22">AVERROR</name><argument_list pos:start="69:23" pos:end="69:30">(<argument pos:start="69:24" pos:end="69:29"><expr pos:start="69:24" pos:end="69:29"><name pos:start="69:24" pos:end="69:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="73:5" pos:end="73:61">//2bpp and 4bpp raw in avi and mov (yes this is ugly ...)</comment>

    <if_stmt pos:start="75:5" pos:end="123:5"><if pos:start="75:5" pos:end="117:5">if <condition pos:start="75:8" pos:end="75:28">(<expr pos:start="75:9" pos:end="75:27"><name pos:start="75:9" pos:end="75:27"><name pos:start="75:9" pos:end="75:15">context</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:27">is_2_4_bpp</name></name></expr>)</condition> <block pos:start="75:30" pos:end="117:5">{<block_content pos:start="77:9" pos:end="115:18">

        <decl_stmt pos:start="77:9" pos:end="77:14"><decl pos:start="77:9" pos:end="77:13"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:43"><decl pos:start="79:9" pos:end="79:42"><type pos:start="79:9" pos:end="79:17"><name pos:start="79:9" pos:end="79:15">uint8_t</name> <modifier pos:start="79:17" pos:end="79:17">*</modifier></type><name pos:start="79:18" pos:end="79:20">dst</name> <init pos:start="79:22" pos:end="79:42">= <expr pos:start="79:24" pos:end="79:42"><name pos:start="79:24" pos:end="79:36"><name pos:start="79:24" pos:end="79:28">frame</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:33">buf</name><index pos:start="79:34" pos:end="79:36">[<expr pos:start="79:35" pos:end="79:35"><literal type="number" pos:start="79:35" pos:end="79:35">0</literal></expr>]</index></name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:42">data</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:56"><expr pos:start="81:9" pos:end="81:55"><name pos:start="81:9" pos:end="81:16">buf_size</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <name pos:start="81:20" pos:end="81:38"><name pos:start="81:20" pos:end="81:26">context</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:38">frame_size</name></name> <operator pos:start="81:40" pos:end="81:40">-</operator> <name pos:start="81:42" pos:end="81:55">AVPALETTE_SIZE</name></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="113:9"><if pos:start="83:9" pos:end="95:9">if <condition pos:start="83:12" pos:end="83:46">(<expr pos:start="83:13" pos:end="83:45"><name pos:start="83:13" pos:end="83:40"><name pos:start="83:13" pos:end="83:17">avctx</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:40">bits_per_coded_sample</name></name> <operator pos:start="83:42" pos:end="83:43">==</operator> <literal type="number" pos:start="83:45" pos:end="83:45">4</literal></expr>)</condition> <block pos:start="83:48" pos:end="95:9">{<block_content pos:start="85:13" pos:end="93:31">

            <for pos:start="85:13" pos:end="91:13">for <control pos:start="85:17" pos:end="85:67">(<init pos:start="85:18" pos:end="85:23"><expr pos:start="85:18" pos:end="85:22"><name pos:start="85:18" pos:end="85:18">i</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <literal type="number" pos:start="85:22" pos:end="85:22">0</literal></expr>;</init> <condition pos:start="85:25" pos:end="85:62"><expr pos:start="85:25" pos:end="85:61"><literal type="number" pos:start="85:25" pos:end="85:25">2</literal> <operator pos:start="85:27" pos:end="85:27">*</operator> <name pos:start="85:29" pos:end="85:29">i</name> <operator pos:start="85:31" pos:end="85:31">+</operator> <literal type="number" pos:start="85:33" pos:end="85:33">1</literal> <operator pos:start="85:35" pos:end="85:35">&lt;</operator> <name pos:start="85:37" pos:end="85:44">buf_size</name> <operator pos:start="85:46" pos:end="85:47">&amp;&amp;</operator> <name pos:start="85:49" pos:end="85:49">i</name><operator pos:start="85:50" pos:end="85:50">&lt;</operator><name pos:start="85:51" pos:end="85:61"><name pos:start="85:51" pos:end="85:55">avpkt</name><operator pos:start="85:56" pos:end="85:57">-&gt;</operator><name pos:start="85:58" pos:end="85:61">size</name></name></expr>;</condition> <incr pos:start="85:64" pos:end="85:66"><expr pos:start="85:64" pos:end="85:66"><name pos:start="85:64" pos:end="85:64">i</name><operator pos:start="85:65" pos:end="85:66">++</operator></expr></incr>)</control> <block pos:start="85:69" pos:end="91:13">{<block_content pos:start="87:17" pos:end="89:45">

                <expr_stmt pos:start="87:17" pos:end="87:45"><expr pos:start="87:17" pos:end="87:44"><name pos:start="87:17" pos:end="87:30"><name pos:start="87:17" pos:end="87:19">dst</name><index pos:start="87:20" pos:end="87:30">[<expr pos:start="87:21" pos:end="87:29"><literal type="number" pos:start="87:21" pos:end="87:21">2</literal> <operator pos:start="87:23" pos:end="87:23">*</operator> <name pos:start="87:25" pos:end="87:25">i</name> <operator pos:start="87:27" pos:end="87:27">+</operator> <literal type="number" pos:start="87:29" pos:end="87:29">0</literal></expr>]</index></name> <operator pos:start="87:32" pos:end="87:32">=</operator> <name pos:start="87:34" pos:end="87:39"><name pos:start="87:34" pos:end="87:36">buf</name><index pos:start="87:37" pos:end="87:39">[<expr pos:start="87:38" pos:end="87:38"><name pos:start="87:38" pos:end="87:38">i</name></expr>]</index></name> <operator pos:start="87:41" pos:end="87:42">&gt;&gt;</operator> <literal type="number" pos:start="87:44" pos:end="87:44">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:45"><expr pos:start="89:17" pos:end="89:44"><name pos:start="89:17" pos:end="89:30"><name pos:start="89:17" pos:end="89:19">dst</name><index pos:start="89:20" pos:end="89:30">[<expr pos:start="89:21" pos:end="89:29"><literal type="number" pos:start="89:21" pos:end="89:21">2</literal> <operator pos:start="89:23" pos:end="89:23">*</operator> <name pos:start="89:25" pos:end="89:25">i</name> <operator pos:start="89:27" pos:end="89:27">+</operator> <literal type="number" pos:start="89:29" pos:end="89:29">1</literal></expr>]</index></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:39"><name pos:start="89:34" pos:end="89:36">buf</name><index pos:start="89:37" pos:end="89:39">[<expr pos:start="89:38" pos:end="89:38"><name pos:start="89:38" pos:end="89:38">i</name></expr>]</index></name> <operator pos:start="89:41" pos:end="89:41">&amp;</operator> <literal type="number" pos:start="89:43" pos:end="89:44">15</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="93:13" pos:end="93:31"><expr pos:start="93:13" pos:end="93:30"><name pos:start="93:13" pos:end="93:26">linesize_align</name> <operator pos:start="93:28" pos:end="93:28">=</operator> <literal type="number" pos:start="93:30" pos:end="93:30">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="113:9">else <block pos:start="95:16" pos:end="113:9">{<block_content pos:start="97:13" pos:end="111:32">

            <expr_stmt pos:start="97:13" pos:end="97:58"><expr pos:start="97:13" pos:end="97:57"><call pos:start="97:13" pos:end="97:57"><name pos:start="97:13" pos:end="97:22">av_assert0</name><argument_list pos:start="97:23" pos:end="97:57">(<argument pos:start="97:24" pos:end="97:56"><expr pos:start="97:24" pos:end="97:56"><name pos:start="97:24" pos:end="97:51"><name pos:start="97:24" pos:end="97:28">avctx</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:51">bits_per_coded_sample</name></name> <operator pos:start="97:53" pos:end="97:54">==</operator> <literal type="number" pos:start="97:56" pos:end="97:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="99:13" pos:end="109:13">for <control pos:start="99:17" pos:end="99:67">(<init pos:start="99:18" pos:end="99:23"><expr pos:start="99:18" pos:end="99:22"><name pos:start="99:18" pos:end="99:18">i</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</init> <condition pos:start="99:25" pos:end="99:62"><expr pos:start="99:25" pos:end="99:61"><literal type="number" pos:start="99:25" pos:end="99:25">4</literal> <operator pos:start="99:27" pos:end="99:27">*</operator> <name pos:start="99:29" pos:end="99:29">i</name> <operator pos:start="99:31" pos:end="99:31">+</operator> <literal type="number" pos:start="99:33" pos:end="99:33">3</literal> <operator pos:start="99:35" pos:end="99:35">&lt;</operator> <name pos:start="99:37" pos:end="99:44">buf_size</name> <operator pos:start="99:46" pos:end="99:47">&amp;&amp;</operator> <name pos:start="99:49" pos:end="99:49">i</name><operator pos:start="99:50" pos:end="99:50">&lt;</operator><name pos:start="99:51" pos:end="99:61"><name pos:start="99:51" pos:end="99:55">avpkt</name><operator pos:start="99:56" pos:end="99:57">-&gt;</operator><name pos:start="99:58" pos:end="99:61">size</name></name></expr>;</condition> <incr pos:start="99:64" pos:end="99:66"><expr pos:start="99:64" pos:end="99:66"><name pos:start="99:64" pos:end="99:64">i</name><operator pos:start="99:65" pos:end="99:66">++</operator></expr></incr>)</control> <block pos:start="99:69" pos:end="109:13">{<block_content pos:start="101:17" pos:end="107:49">

                <expr_stmt pos:start="101:17" pos:end="101:45"><expr pos:start="101:17" pos:end="101:44"><name pos:start="101:17" pos:end="101:30"><name pos:start="101:17" pos:end="101:19">dst</name><index pos:start="101:20" pos:end="101:30">[<expr pos:start="101:21" pos:end="101:29"><literal type="number" pos:start="101:21" pos:end="101:21">4</literal> <operator pos:start="101:23" pos:end="101:23">*</operator> <name pos:start="101:25" pos:end="101:25">i</name> <operator pos:start="101:27" pos:end="101:27">+</operator> <literal type="number" pos:start="101:29" pos:end="101:29">0</literal></expr>]</index></name> <operator pos:start="101:32" pos:end="101:32">=</operator> <name pos:start="101:34" pos:end="101:39"><name pos:start="101:34" pos:end="101:36">buf</name><index pos:start="101:37" pos:end="101:39">[<expr pos:start="101:38" pos:end="101:38"><name pos:start="101:38" pos:end="101:38">i</name></expr>]</index></name> <operator pos:start="101:41" pos:end="101:42">&gt;&gt;</operator> <literal type="number" pos:start="101:44" pos:end="101:44">6</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:49"><expr pos:start="103:17" pos:end="103:48"><name pos:start="103:17" pos:end="103:30"><name pos:start="103:17" pos:end="103:19">dst</name><index pos:start="103:20" pos:end="103:30">[<expr pos:start="103:21" pos:end="103:29"><literal type="number" pos:start="103:21" pos:end="103:21">4</literal> <operator pos:start="103:23" pos:end="103:23">*</operator> <name pos:start="103:25" pos:end="103:25">i</name> <operator pos:start="103:27" pos:end="103:27">+</operator> <literal type="number" pos:start="103:29" pos:end="103:29">1</literal></expr>]</index></name> <operator pos:start="103:32" pos:end="103:32">=</operator> <name pos:start="103:34" pos:end="103:39"><name pos:start="103:34" pos:end="103:36">buf</name><index pos:start="103:37" pos:end="103:39">[<expr pos:start="103:38" pos:end="103:38"><name pos:start="103:38" pos:end="103:38">i</name></expr>]</index></name> <operator pos:start="103:41" pos:end="103:42">&gt;&gt;</operator> <literal type="number" pos:start="103:44" pos:end="103:44">4</literal> <operator pos:start="103:46" pos:end="103:46">&amp;</operator> <literal type="number" pos:start="103:48" pos:end="103:48">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:49"><expr pos:start="105:17" pos:end="105:48"><name pos:start="105:17" pos:end="105:30"><name pos:start="105:17" pos:end="105:19">dst</name><index pos:start="105:20" pos:end="105:30">[<expr pos:start="105:21" pos:end="105:29"><literal type="number" pos:start="105:21" pos:end="105:21">4</literal> <operator pos:start="105:23" pos:end="105:23">*</operator> <name pos:start="105:25" pos:end="105:25">i</name> <operator pos:start="105:27" pos:end="105:27">+</operator> <literal type="number" pos:start="105:29" pos:end="105:29">2</literal></expr>]</index></name> <operator pos:start="105:32" pos:end="105:32">=</operator> <name pos:start="105:34" pos:end="105:39"><name pos:start="105:34" pos:end="105:36">buf</name><index pos:start="105:37" pos:end="105:39">[<expr pos:start="105:38" pos:end="105:38"><name pos:start="105:38" pos:end="105:38">i</name></expr>]</index></name> <operator pos:start="105:41" pos:end="105:42">&gt;&gt;</operator> <literal type="number" pos:start="105:44" pos:end="105:44">2</literal> <operator pos:start="105:46" pos:end="105:46">&amp;</operator> <literal type="number" pos:start="105:48" pos:end="105:48">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:49"><expr pos:start="107:17" pos:end="107:48"><name pos:start="107:17" pos:end="107:30"><name pos:start="107:17" pos:end="107:19">dst</name><index pos:start="107:20" pos:end="107:30">[<expr pos:start="107:21" pos:end="107:29"><literal type="number" pos:start="107:21" pos:end="107:21">4</literal> <operator pos:start="107:23" pos:end="107:23">*</operator> <name pos:start="107:25" pos:end="107:25">i</name> <operator pos:start="107:27" pos:end="107:27">+</operator> <literal type="number" pos:start="107:29" pos:end="107:29">3</literal></expr>]</index></name> <operator pos:start="107:32" pos:end="107:32">=</operator> <name pos:start="107:34" pos:end="107:39"><name pos:start="107:34" pos:end="107:36">buf</name><index pos:start="107:37" pos:end="107:39">[<expr pos:start="107:38" pos:end="107:38"><name pos:start="107:38" pos:end="107:38">i</name></expr>]</index></name>      <operator pos:start="107:46" pos:end="107:46">&amp;</operator> <literal type="number" pos:start="107:48" pos:end="107:48">3</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="111:13" pos:end="111:32"><expr pos:start="111:13" pos:end="111:31"><name pos:start="111:13" pos:end="111:26">linesize_align</name> <operator pos:start="111:28" pos:end="111:28">=</operator> <literal type="number" pos:start="111:30" pos:end="111:31">16</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:18"><expr pos:start="115:9" pos:end="115:17"><name pos:start="115:9" pos:end="115:11">buf</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <name pos:start="115:15" pos:end="115:17">dst</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="117:7" pos:end="123:5">else if <condition pos:start="117:15" pos:end="117:25">(<expr pos:start="117:16" pos:end="117:24"><name pos:start="117:16" pos:end="117:24">need_copy</name></expr>)</condition> <block pos:start="117:27" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:34">

        <expr_stmt pos:start="119:9" pos:end="119:79"><expr pos:start="119:9" pos:end="119:78"><call pos:start="119:9" pos:end="119:78"><name pos:start="119:9" pos:end="119:14">memcpy</name><argument_list pos:start="119:15" pos:end="119:78">(<argument pos:start="119:16" pos:end="119:34"><expr pos:start="119:16" pos:end="119:34"><name pos:start="119:16" pos:end="119:28"><name pos:start="119:16" pos:end="119:20">frame</name><operator pos:start="119:21" pos:end="119:22">-&gt;</operator><name pos:start="119:23" pos:end="119:25">buf</name><index pos:start="119:26" pos:end="119:28">[<expr pos:start="119:27" pos:end="119:27"><literal type="number" pos:start="119:27" pos:end="119:27">0</literal></expr>]</index></name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:34">data</name></expr></argument>, <argument pos:start="119:37" pos:end="119:39"><expr pos:start="119:37" pos:end="119:39"><name pos:start="119:37" pos:end="119:39">buf</name></expr></argument>, <argument pos:start="119:42" pos:end="119:77"><expr pos:start="119:42" pos:end="119:77"><call pos:start="119:42" pos:end="119:77"><name pos:start="119:42" pos:end="119:46">FFMIN</name><argument_list pos:start="119:47" pos:end="119:77">(<argument pos:start="119:48" pos:end="119:55"><expr pos:start="119:48" pos:end="119:55"><name pos:start="119:48" pos:end="119:55">buf_size</name></expr></argument>, <argument pos:start="119:58" pos:end="119:76"><expr pos:start="119:58" pos:end="119:76"><name pos:start="119:58" pos:end="119:76"><name pos:start="119:58" pos:end="119:64">context</name><operator pos:start="119:65" pos:end="119:66">-&gt;</operator><name pos:start="119:67" pos:end="119:76">frame_size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:34"><expr pos:start="121:9" pos:end="121:33"><name pos:start="121:9" pos:end="121:11">buf</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <name pos:start="121:15" pos:end="121:27"><name pos:start="121:15" pos:end="121:19">frame</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:24">buf</name><index pos:start="121:25" pos:end="121:27">[<expr pos:start="121:26" pos:end="121:26"><literal type="number" pos:start="121:26" pos:end="121:26">0</literal></expr>]</index></name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:33">data</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="127:5" pos:end="131:46"><if pos:start="127:5" pos:end="131:46">if <condition pos:start="127:8" pos:end="129:54">(<expr pos:start="127:9" pos:end="129:53"><name pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:13">avctx</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:24">codec_tag</name></name> <operator pos:start="127:26" pos:end="127:27">==</operator> <call pos:start="127:29" pos:end="127:53"><name pos:start="127:29" pos:end="127:33">MKTAG</name><argument_list pos:start="127:34" pos:end="127:53">(<argument pos:start="127:35" pos:end="127:37"><expr pos:start="127:35" pos:end="127:37"><literal type="char" pos:start="127:35" pos:end="127:37">'A'</literal></expr></argument>, <argument pos:start="127:40" pos:end="127:42"><expr pos:start="127:40" pos:end="127:42"><literal type="char" pos:start="127:40" pos:end="127:42">'V'</literal></expr></argument>, <argument pos:start="127:45" pos:end="127:47"><expr pos:start="127:45" pos:end="127:47"><literal type="char" pos:start="127:45" pos:end="127:47">'1'</literal></expr></argument>, <argument pos:start="127:50" pos:end="127:52"><expr pos:start="127:50" pos:end="127:52"><literal type="char" pos:start="127:50" pos:end="127:52">'x'</literal></expr></argument>)</argument_list></call> <operator pos:start="127:55" pos:end="127:56">||</operator>

        <name pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:13">avctx</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:24">codec_tag</name></name> <operator pos:start="129:26" pos:end="129:27">==</operator> <call pos:start="129:29" pos:end="129:53"><name pos:start="129:29" pos:end="129:33">MKTAG</name><argument_list pos:start="129:34" pos:end="129:53">(<argument pos:start="129:35" pos:end="129:37"><expr pos:start="129:35" pos:end="129:37"><literal type="char" pos:start="129:35" pos:end="129:37">'A'</literal></expr></argument>, <argument pos:start="129:40" pos:end="129:42"><expr pos:start="129:40" pos:end="129:42"><literal type="char" pos:start="129:40" pos:end="129:42">'V'</literal></expr></argument>, <argument pos:start="129:45" pos:end="129:47"><expr pos:start="129:45" pos:end="129:47"><literal type="char" pos:start="129:45" pos:end="129:47">'u'</literal></expr></argument>, <argument pos:start="129:50" pos:end="129:52"><expr pos:start="129:50" pos:end="129:52"><literal type="char" pos:start="129:50" pos:end="129:52">'p'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:46"><block_content pos:start="131:9" pos:end="131:46">

        <expr_stmt pos:start="131:9" pos:end="131:46"><expr pos:start="131:9" pos:end="131:45"><name pos:start="131:9" pos:end="131:11">buf</name> <operator pos:start="131:13" pos:end="131:14">+=</operator> <name pos:start="131:16" pos:end="131:23">buf_size</name> <operator pos:start="131:25" pos:end="131:25">-</operator> <name pos:start="131:27" pos:end="131:45"><name pos:start="131:27" pos:end="131:33">context</name><operator pos:start="131:34" pos:end="131:35">-&gt;</operator><name pos:start="131:36" pos:end="131:45">frame_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:87"><expr pos:start="135:5" pos:end="135:86"><name pos:start="135:5" pos:end="135:7">len</name> <operator pos:start="135:9" pos:end="135:9">=</operator> <name pos:start="135:11" pos:end="135:29"><name pos:start="135:11" pos:end="135:17">context</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:29">frame_size</name></name> <operator pos:start="135:31" pos:end="135:31">-</operator> <operator pos:start="135:33" pos:end="135:33">(</operator><ternary pos:start="135:34" pos:end="135:85"><condition pos:start="135:34" pos:end="135:66"><expr pos:start="135:34" pos:end="135:64"><name pos:start="135:34" pos:end="135:47"><name pos:start="135:34" pos:end="135:38">avctx</name><operator pos:start="135:39" pos:end="135:40">-&gt;</operator><name pos:start="135:41" pos:end="135:47">pix_fmt</name></name><operator pos:start="135:48" pos:end="135:49">==</operator><name pos:start="135:50" pos:end="135:64">AV_PIX_FMT_PAL8</name></expr> ?</condition><then pos:start="135:68" pos:end="135:81"> <expr pos:start="135:68" pos:end="135:81"><name pos:start="135:68" pos:end="135:81">AVPALETTE_SIZE</name></expr> </then><else pos:start="135:83" pos:end="135:85">: <expr pos:start="135:85" pos:end="135:85"><literal type="number" pos:start="135:85" pos:end="135:85">0</literal></expr></else></ternary><operator pos:start="135:86" pos:end="135:86">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="145:5"><if pos:start="137:5" pos:end="145:5">if <condition pos:start="137:8" pos:end="137:23">(<expr pos:start="137:9" pos:end="137:22"><name pos:start="137:9" pos:end="137:16">buf_size</name> <operator pos:start="137:18" pos:end="137:18">&lt;</operator> <name pos:start="137:20" pos:end="137:22">len</name></expr>)</condition> <block pos:start="137:25" pos:end="145:5">{<block_content pos:start="139:9" pos:end="143:31">

        <expr_stmt pos:start="139:9" pos:end="139:117"><expr pos:start="139:9" pos:end="139:116"><call pos:start="139:9" pos:end="139:116"><name pos:start="139:9" pos:end="139:14">av_log</name><argument_list pos:start="139:15" pos:end="139:116">(<argument pos:start="139:16" pos:end="139:20"><expr pos:start="139:16" pos:end="139:20"><name pos:start="139:16" pos:end="139:20">avctx</name></expr></argument>, <argument pos:start="139:23" pos:end="139:34"><expr pos:start="139:23" pos:end="139:34"><name pos:start="139:23" pos:end="139:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:37" pos:end="139:100"><expr pos:start="139:37" pos:end="139:100"><literal type="string" pos:start="139:37" pos:end="139:100">"Invalid buffer size, packet size %d &lt; expected frame_size %d\n"</literal></expr></argument>, <argument pos:start="139:103" pos:end="139:110"><expr pos:start="139:103" pos:end="139:110"><name pos:start="139:103" pos:end="139:110">buf_size</name></expr></argument>, <argument pos:start="139:113" pos:end="139:115"><expr pos:start="139:113" pos:end="139:115"><name pos:start="139:113" pos:end="139:115">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:40"><expr pos:start="141:9" pos:end="141:39"><call pos:start="141:9" pos:end="141:39"><name pos:start="141:9" pos:end="141:23">av_buffer_unref</name><argument_list pos:start="141:24" pos:end="141:39">(<argument pos:start="141:25" pos:end="141:38"><expr pos:start="141:25" pos:end="141:38"><operator pos:start="141:25" pos:end="141:25">&amp;</operator><name pos:start="141:26" pos:end="141:38"><name pos:start="141:26" pos:end="141:30">frame</name><operator pos:start="141:31" pos:end="141:32">-&gt;</operator><name pos:start="141:33" pos:end="141:35">buf</name><index pos:start="141:36" pos:end="141:38">[<expr pos:start="141:37" pos:end="141:37"><literal type="number" pos:start="141:37" pos:end="141:37">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="143:9" pos:end="143:31">return <expr pos:start="143:16" pos:end="143:30"><call pos:start="143:16" pos:end="143:30"><name pos:start="143:16" pos:end="143:22">AVERROR</name><argument_list pos:start="143:23" pos:end="143:30">(<argument pos:start="143:24" pos:end="143:29"><expr pos:start="143:24" pos:end="143:29"><name pos:start="143:24" pos:end="143:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="149:5" pos:end="157:5"><if pos:start="149:5" pos:end="157:5">if <condition pos:start="149:8" pos:end="151:64">(<expr pos:start="149:9" pos:end="151:63"><operator pos:start="149:9" pos:end="149:9">(</operator><name pos:start="149:10" pos:end="149:12">res</name> <operator pos:start="149:14" pos:end="149:14">=</operator> <call pos:start="149:16" pos:end="151:58"><name pos:start="149:16" pos:end="149:29">avpicture_fill</name><argument_list pos:start="149:30" pos:end="151:58">(<argument pos:start="149:31" pos:end="149:37"><expr pos:start="149:31" pos:end="149:37"><name pos:start="149:31" pos:end="149:37">picture</name></expr></argument>, <argument pos:start="149:40" pos:end="149:42"><expr pos:start="149:40" pos:end="149:42"><name pos:start="149:40" pos:end="149:42">buf</name></expr></argument>, <argument pos:start="149:45" pos:end="149:58"><expr pos:start="149:45" pos:end="149:58"><name pos:start="149:45" pos:end="149:58"><name pos:start="149:45" pos:end="149:49">avctx</name><operator pos:start="149:50" pos:end="149:51">-&gt;</operator><name pos:start="149:52" pos:end="149:58">pix_fmt</name></name></expr></argument>,

                              <argument pos:start="151:31" pos:end="151:42"><expr pos:start="151:31" pos:end="151:42"><name pos:start="151:31" pos:end="151:42"><name pos:start="151:31" pos:end="151:35">avctx</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:42">width</name></name></expr></argument>, <argument pos:start="151:45" pos:end="151:57"><expr pos:start="151:45" pos:end="151:57"><name pos:start="151:45" pos:end="151:57"><name pos:start="151:45" pos:end="151:49">avctx</name><operator pos:start="151:50" pos:end="151:51">-&gt;</operator><name pos:start="151:52" pos:end="151:57">height</name></name></expr></argument>)</argument_list></call><operator pos:start="151:59" pos:end="151:59">)</operator> <operator pos:start="151:61" pos:end="151:61">&lt;</operator> <literal type="number" pos:start="151:63" pos:end="151:63">0</literal></expr>)</condition> <block pos:start="151:66" pos:end="157:5">{<block_content pos:start="153:9" pos:end="155:19">

        <expr_stmt pos:start="153:9" pos:end="153:40"><expr pos:start="153:9" pos:end="153:39"><call pos:start="153:9" pos:end="153:39"><name pos:start="153:9" pos:end="153:23">av_buffer_unref</name><argument_list pos:start="153:24" pos:end="153:39">(<argument pos:start="153:25" pos:end="153:38"><expr pos:start="153:25" pos:end="153:38"><operator pos:start="153:25" pos:end="153:25">&amp;</operator><name pos:start="153:26" pos:end="153:38"><name pos:start="153:26" pos:end="153:30">frame</name><operator pos:start="153:31" pos:end="153:32">-&gt;</operator><name pos:start="153:33" pos:end="153:35">buf</name><index pos:start="153:36" pos:end="153:38">[<expr pos:start="153:37" pos:end="153:37"><literal type="number" pos:start="153:37" pos:end="153:37">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="155:9" pos:end="155:19">return <expr pos:start="155:16" pos:end="155:18"><name pos:start="155:16" pos:end="155:18">res</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="161:5" pos:end="189:5"><if pos:start="161:5" pos:end="189:5">if <condition pos:start="161:8" pos:end="161:42">(<expr pos:start="161:9" pos:end="161:41"><name pos:start="161:9" pos:end="161:22"><name pos:start="161:9" pos:end="161:13">avctx</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:22">pix_fmt</name></name> <operator pos:start="161:24" pos:end="161:25">==</operator> <name pos:start="161:27" pos:end="161:41">AV_PIX_FMT_PAL8</name></expr>)</condition> <block pos:start="161:44" pos:end="189:5">{<block_content pos:start="163:9" pos:end="187:9">

        <decl_stmt pos:start="163:9" pos:end="165:59"><decl pos:start="163:9" pos:end="165:58"><type pos:start="163:9" pos:end="163:23"><specifier pos:start="163:9" pos:end="163:13">const</specifier> <name pos:start="163:15" pos:end="163:21">uint8_t</name> <modifier pos:start="163:23" pos:end="163:23">*</modifier></type><name pos:start="163:24" pos:end="163:26">pal</name> <init pos:start="163:28" pos:end="165:58">= <expr pos:start="163:30" pos:end="165:58"><call pos:start="163:30" pos:end="165:58"><name pos:start="163:30" pos:end="163:52">av_packet_get_side_data</name><argument_list pos:start="163:53" pos:end="165:58">(<argument pos:start="163:54" pos:end="163:58"><expr pos:start="163:54" pos:end="163:58"><name pos:start="163:54" pos:end="163:58">avpkt</name></expr></argument>, <argument pos:start="163:61" pos:end="163:79"><expr pos:start="163:61" pos:end="163:79"><name pos:start="163:61" pos:end="163:79">AV_PKT_DATA_PALETTE</name></expr></argument>,

                                                     <argument pos:start="165:54" pos:end="165:57"><expr pos:start="165:54" pos:end="165:57"><name pos:start="165:54" pos:end="165:57">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="169:9" pos:end="187:9"><if pos:start="169:9" pos:end="187:9">if <condition pos:start="169:12" pos:end="169:16">(<expr pos:start="169:13" pos:end="169:15"><name pos:start="169:13" pos:end="169:15">pal</name></expr>)</condition> <block pos:start="169:18" pos:end="187:9">{<block_content pos:start="171:13" pos:end="185:43">

            <expr_stmt pos:start="171:13" pos:end="171:47"><expr pos:start="171:13" pos:end="171:46"><call pos:start="171:13" pos:end="171:46"><name pos:start="171:13" pos:end="171:27">av_buffer_unref</name><argument_list pos:start="171:28" pos:end="171:46">(<argument pos:start="171:29" pos:end="171:45"><expr pos:start="171:29" pos:end="171:45"><operator pos:start="171:29" pos:end="171:29">&amp;</operator><name pos:start="171:30" pos:end="171:45"><name pos:start="171:30" pos:end="171:36">context</name><operator pos:start="171:37" pos:end="171:38">-&gt;</operator><name pos:start="171:39" pos:end="171:45">palette</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:63"><expr pos:start="173:13" pos:end="173:62"><name pos:start="173:13" pos:end="173:28"><name pos:start="173:13" pos:end="173:19">context</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:28">palette</name></name> <operator pos:start="173:30" pos:end="173:30">=</operator> <call pos:start="173:32" pos:end="173:62"><name pos:start="173:32" pos:end="173:46">av_buffer_alloc</name><argument_list pos:start="173:47" pos:end="173:62">(<argument pos:start="173:48" pos:end="173:61"><expr pos:start="173:48" pos:end="173:61"><name pos:start="173:48" pos:end="173:61">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="175:13" pos:end="181:13"><if pos:start="175:13" pos:end="181:13">if <condition pos:start="175:16" pos:end="175:34">(<expr pos:start="175:17" pos:end="175:33"><operator pos:start="175:17" pos:end="175:17">!</operator><name pos:start="175:18" pos:end="175:33"><name pos:start="175:18" pos:end="175:24">context</name><operator pos:start="175:25" pos:end="175:26">-&gt;</operator><name pos:start="175:27" pos:end="175:33">palette</name></name></expr>)</condition> <block pos:start="175:36" pos:end="181:13">{<block_content pos:start="177:17" pos:end="179:39">

                <expr_stmt pos:start="177:17" pos:end="177:48"><expr pos:start="177:17" pos:end="177:47"><call pos:start="177:17" pos:end="177:47"><name pos:start="177:17" pos:end="177:31">av_buffer_unref</name><argument_list pos:start="177:32" pos:end="177:47">(<argument pos:start="177:33" pos:end="177:46"><expr pos:start="177:33" pos:end="177:46"><operator pos:start="177:33" pos:end="177:33">&amp;</operator><name pos:start="177:34" pos:end="177:46"><name pos:start="177:34" pos:end="177:38">frame</name><operator pos:start="177:39" pos:end="177:40">-&gt;</operator><name pos:start="177:41" pos:end="177:43">buf</name><index pos:start="177:44" pos:end="177:46">[<expr pos:start="177:45" pos:end="177:45"><literal type="number" pos:start="177:45" pos:end="177:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="179:17" pos:end="179:39">return <expr pos:start="179:24" pos:end="179:38"><call pos:start="179:24" pos:end="179:38"><name pos:start="179:24" pos:end="179:30">AVERROR</name><argument_list pos:start="179:31" pos:end="179:38">(<argument pos:start="179:32" pos:end="179:37"><expr pos:start="179:32" pos:end="179:37"><name pos:start="179:32" pos:end="179:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:64"><expr pos:start="183:13" pos:end="183:63"><call pos:start="183:13" pos:end="183:63"><name pos:start="183:13" pos:end="183:18">memcpy</name><argument_list pos:start="183:19" pos:end="183:63">(<argument pos:start="183:20" pos:end="183:41"><expr pos:start="183:20" pos:end="183:41"><name pos:start="183:20" pos:end="183:41"><name pos:start="183:20" pos:end="183:26">context</name><operator pos:start="183:27" pos:end="183:28">-&gt;</operator><name pos:start="183:29" pos:end="183:35">palette</name><operator pos:start="183:36" pos:end="183:37">-&gt;</operator><name pos:start="183:38" pos:end="183:41">data</name></name></expr></argument>, <argument pos:start="183:44" pos:end="183:46"><expr pos:start="183:44" pos:end="183:46"><name pos:start="183:44" pos:end="183:46">pal</name></expr></argument>, <argument pos:start="183:49" pos:end="183:62"><expr pos:start="183:49" pos:end="183:62"><name pos:start="183:49" pos:end="183:62">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:43"><expr pos:start="185:13" pos:end="185:42"><name pos:start="185:13" pos:end="185:38"><name pos:start="185:13" pos:end="185:17">frame</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:38">palette_has_changed</name></name> <operator pos:start="185:40" pos:end="185:40">=</operator> <literal type="number" pos:start="185:42" pos:end="185:42">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="193:5" pos:end="209:73"><if pos:start="193:5" pos:end="209:73">if <condition pos:start="193:8" pos:end="207:80">(<expr pos:start="193:9" pos:end="207:79"><operator pos:start="193:9" pos:end="193:9">(</operator><name pos:start="193:10" pos:end="193:23"><name pos:start="193:10" pos:end="193:14">avctx</name><operator pos:start="193:15" pos:end="193:16">-&gt;</operator><name pos:start="193:17" pos:end="193:23">pix_fmt</name></name><operator pos:start="193:24" pos:end="193:25">==</operator><name pos:start="193:26" pos:end="193:41">AV_PIX_FMT_BGR24</name>    <operator pos:start="193:46" pos:end="193:47">||</operator>

        <name pos:start="195:9" pos:end="195:22"><name pos:start="195:9" pos:end="195:13">avctx</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:22">pix_fmt</name></name><operator pos:start="195:23" pos:end="195:24">==</operator><name pos:start="195:25" pos:end="195:40">AV_PIX_FMT_GRAY8</name>    <operator pos:start="195:45" pos:end="195:46">||</operator>

        <name pos:start="197:9" pos:end="197:22"><name pos:start="197:9" pos:end="197:13">avctx</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:22">pix_fmt</name></name><operator pos:start="197:23" pos:end="197:24">==</operator><name pos:start="197:25" pos:end="197:43">AV_PIX_FMT_RGB555LE</name> <operator pos:start="197:45" pos:end="197:46">||</operator>

        <name pos:start="199:9" pos:end="199:22"><name pos:start="199:9" pos:end="199:13">avctx</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:22">pix_fmt</name></name><operator pos:start="199:23" pos:end="199:24">==</operator><name pos:start="199:25" pos:end="199:43">AV_PIX_FMT_RGB555BE</name> <operator pos:start="199:45" pos:end="199:46">||</operator>

        <name pos:start="201:9" pos:end="201:22"><name pos:start="201:9" pos:end="201:13">avctx</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:22">pix_fmt</name></name><operator pos:start="201:23" pos:end="201:24">==</operator><name pos:start="201:25" pos:end="201:43">AV_PIX_FMT_RGB565LE</name> <operator pos:start="201:45" pos:end="201:46">||</operator>

        <name pos:start="203:9" pos:end="203:22"><name pos:start="203:9" pos:end="203:13">avctx</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:22">pix_fmt</name></name><operator pos:start="203:23" pos:end="203:24">==</operator><name pos:start="203:25" pos:end="203:44">AV_PIX_FMT_MONOWHITE</name> <operator pos:start="203:46" pos:end="203:47">||</operator>

        <name pos:start="205:9" pos:end="205:22"><name pos:start="205:9" pos:end="205:13">avctx</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:22">pix_fmt</name></name><operator pos:start="205:23" pos:end="205:24">==</operator><name pos:start="205:25" pos:end="205:39">AV_PIX_FMT_PAL8</name><operator pos:start="205:40" pos:end="205:40">)</operator> <operator pos:start="205:42" pos:end="205:43">&amp;&amp;</operator>

        <call pos:start="207:9" pos:end="207:51"><name pos:start="207:9" pos:end="207:15">FFALIGN</name><argument_list pos:start="207:16" pos:end="207:51">(<argument pos:start="207:17" pos:end="207:34"><expr pos:start="207:17" pos:end="207:34"><name pos:start="207:17" pos:end="207:34"><name pos:start="207:17" pos:end="207:21">frame</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:31">linesize</name><index pos:start="207:32" pos:end="207:34">[<expr pos:start="207:33" pos:end="207:33"><literal type="number" pos:start="207:33" pos:end="207:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="207:37" pos:end="207:50"><expr pos:start="207:37" pos:end="207:50"><name pos:start="207:37" pos:end="207:50">linesize_align</name></expr></argument>)</argument_list></call> <operator pos:start="207:53" pos:end="207:53">*</operator> <name pos:start="207:55" pos:end="207:67"><name pos:start="207:55" pos:end="207:59">avctx</name><operator pos:start="207:60" pos:end="207:61">-&gt;</operator><name pos:start="207:62" pos:end="207:67">height</name></name> <operator pos:start="207:69" pos:end="207:70">&lt;=</operator> <name pos:start="207:72" pos:end="207:79">buf_size</name></expr>)</condition><block type="pseudo" pos:start="209:9" pos:end="209:73"><block_content pos:start="209:9" pos:end="209:73">

        <expr_stmt pos:start="209:9" pos:end="209:73"><expr pos:start="209:9" pos:end="209:72"><name pos:start="209:9" pos:end="209:26"><name pos:start="209:9" pos:end="209:13">frame</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:23">linesize</name><index pos:start="209:24" pos:end="209:26">[<expr pos:start="209:25" pos:end="209:25"><literal type="number" pos:start="209:25" pos:end="209:25">0</literal></expr>]</index></name> <operator pos:start="209:28" pos:end="209:28">=</operator> <call pos:start="209:30" pos:end="209:72"><name pos:start="209:30" pos:end="209:36">FFALIGN</name><argument_list pos:start="209:37" pos:end="209:72">(<argument pos:start="209:38" pos:end="209:55"><expr pos:start="209:38" pos:end="209:55"><name pos:start="209:38" pos:end="209:55"><name pos:start="209:38" pos:end="209:42">frame</name><operator pos:start="209:43" pos:end="209:44">-&gt;</operator><name pos:start="209:45" pos:end="209:52">linesize</name><index pos:start="209:53" pos:end="209:55">[<expr pos:start="209:54" pos:end="209:54"><literal type="number" pos:start="209:54" pos:end="209:54">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="209:58" pos:end="209:71"><expr pos:start="209:58" pos:end="209:71"><name pos:start="209:58" pos:end="209:71">linesize_align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="213:5" pos:end="227:5"><if pos:start="213:5" pos:end="227:5">if <condition pos:start="213:8" pos:end="217:92">(<expr pos:start="213:9" pos:end="217:91"><name pos:start="213:9" pos:end="213:22"><name pos:start="213:9" pos:end="213:13">avctx</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:22">pix_fmt</name></name> <operator pos:start="213:24" pos:end="213:25">==</operator> <name pos:start="213:27" pos:end="213:41">AV_PIX_FMT_NV12</name> <operator pos:start="213:43" pos:end="213:44">&amp;&amp;</operator> <name pos:start="213:46" pos:end="213:61"><name pos:start="213:46" pos:end="213:50">avctx</name><operator pos:start="213:51" pos:end="213:52">-&gt;</operator><name pos:start="213:53" pos:end="213:61">codec_tag</name></name> <operator pos:start="213:63" pos:end="213:64">==</operator> <call pos:start="213:66" pos:end="213:90"><name pos:start="213:66" pos:end="213:70">MKTAG</name><argument_list pos:start="213:71" pos:end="213:90">(<argument pos:start="213:72" pos:end="213:74"><expr pos:start="213:72" pos:end="213:74"><literal type="char" pos:start="213:72" pos:end="213:74">'N'</literal></expr></argument>, <argument pos:start="213:77" pos:end="213:79"><expr pos:start="213:77" pos:end="213:79"><literal type="char" pos:start="213:77" pos:end="213:79">'V'</literal></expr></argument>, <argument pos:start="213:82" pos:end="213:84"><expr pos:start="213:82" pos:end="213:84"><literal type="char" pos:start="213:82" pos:end="213:84">'1'</literal></expr></argument>, <argument pos:start="213:87" pos:end="213:89"><expr pos:start="213:87" pos:end="213:89"><literal type="char" pos:start="213:87" pos:end="213:89">'2'</literal></expr></argument>)</argument_list></call> <operator pos:start="213:92" pos:end="213:93">&amp;&amp;</operator>

        <call pos:start="215:9" pos:end="215:51"><name pos:start="215:9" pos:end="215:15">FFALIGN</name><argument_list pos:start="215:16" pos:end="215:51">(<argument pos:start="215:17" pos:end="215:34"><expr pos:start="215:17" pos:end="215:34"><name pos:start="215:17" pos:end="215:34"><name pos:start="215:17" pos:end="215:21">frame</name><operator pos:start="215:22" pos:end="215:23">-&gt;</operator><name pos:start="215:24" pos:end="215:31">linesize</name><index pos:start="215:32" pos:end="215:34">[<expr pos:start="215:33" pos:end="215:33"><literal type="number" pos:start="215:33" pos:end="215:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:37" pos:end="215:50"><expr pos:start="215:37" pos:end="215:50"><name pos:start="215:37" pos:end="215:50">linesize_align</name></expr></argument>)</argument_list></call> <operator pos:start="215:53" pos:end="215:53">*</operator> <name pos:start="215:55" pos:end="215:67"><name pos:start="215:55" pos:end="215:59">avctx</name><operator pos:start="215:60" pos:end="215:61">-&gt;</operator><name pos:start="215:62" pos:end="215:67">height</name></name> <operator pos:start="215:69" pos:end="215:69">+</operator>

        <call pos:start="217:9" pos:end="217:51"><name pos:start="217:9" pos:end="217:15">FFALIGN</name><argument_list pos:start="217:16" pos:end="217:51">(<argument pos:start="217:17" pos:end="217:34"><expr pos:start="217:17" pos:end="217:34"><name pos:start="217:17" pos:end="217:34"><name pos:start="217:17" pos:end="217:21">frame</name><operator pos:start="217:22" pos:end="217:23">-&gt;</operator><name pos:start="217:24" pos:end="217:31">linesize</name><index pos:start="217:32" pos:end="217:34">[<expr pos:start="217:33" pos:end="217:33"><literal type="number" pos:start="217:33" pos:end="217:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="217:37" pos:end="217:50"><expr pos:start="217:37" pos:end="217:50"><name pos:start="217:37" pos:end="217:50">linesize_align</name></expr></argument>)</argument_list></call> <operator pos:start="217:53" pos:end="217:53">*</operator> <operator pos:start="217:55" pos:end="217:55">(</operator><operator pos:start="217:56" pos:end="217:56">(</operator><name pos:start="217:57" pos:end="217:69"><name pos:start="217:57" pos:end="217:61">avctx</name><operator pos:start="217:62" pos:end="217:63">-&gt;</operator><name pos:start="217:64" pos:end="217:69">height</name></name> <operator pos:start="217:71" pos:end="217:71">+</operator> <literal type="number" pos:start="217:73" pos:end="217:73">1</literal><operator pos:start="217:74" pos:end="217:74">)</operator> <operator pos:start="217:76" pos:end="217:76">/</operator> <literal type="number" pos:start="217:78" pos:end="217:78">2</literal><operator pos:start="217:79" pos:end="217:79">)</operator> <operator pos:start="217:81" pos:end="217:82">&lt;=</operator> <name pos:start="217:84" pos:end="217:91">buf_size</name></expr>)</condition> <block pos:start="217:94" pos:end="227:5">{<block_content pos:start="219:9" pos:end="225:73">

        <decl_stmt pos:start="219:9" pos:end="219:62"><decl pos:start="219:9" pos:end="219:61"><type pos:start="219:9" pos:end="219:11"><name pos:start="219:9" pos:end="219:11">int</name></type> <name pos:start="219:13" pos:end="219:15">la0</name> <init pos:start="219:17" pos:end="219:61">= <expr pos:start="219:19" pos:end="219:61"><call pos:start="219:19" pos:end="219:61"><name pos:start="219:19" pos:end="219:25">FFALIGN</name><argument_list pos:start="219:26" pos:end="219:61">(<argument pos:start="219:27" pos:end="219:44"><expr pos:start="219:27" pos:end="219:44"><name pos:start="219:27" pos:end="219:44"><name pos:start="219:27" pos:end="219:31">frame</name><operator pos:start="219:32" pos:end="219:33">-&gt;</operator><name pos:start="219:34" pos:end="219:41">linesize</name><index pos:start="219:42" pos:end="219:44">[<expr pos:start="219:43" pos:end="219:43"><literal type="number" pos:start="219:43" pos:end="219:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="219:47" pos:end="219:60"><expr pos:start="219:47" pos:end="219:60"><name pos:start="219:47" pos:end="219:60">linesize_align</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:69"><expr pos:start="221:9" pos:end="221:68"><name pos:start="221:9" pos:end="221:22"><name pos:start="221:9" pos:end="221:13">frame</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:19">data</name><index pos:start="221:20" pos:end="221:22">[<expr pos:start="221:21" pos:end="221:21"><literal type="number" pos:start="221:21" pos:end="221:21">1</literal></expr>]</index></name> <operator pos:start="221:24" pos:end="221:25">+=</operator> <operator pos:start="221:27" pos:end="221:27">(</operator><name pos:start="221:28" pos:end="221:30">la0</name> <operator pos:start="221:32" pos:end="221:32">-</operator> <name pos:start="221:34" pos:end="221:51"><name pos:start="221:34" pos:end="221:38">frame</name><operator pos:start="221:39" pos:end="221:40">-&gt;</operator><name pos:start="221:41" pos:end="221:48">linesize</name><index pos:start="221:49" pos:end="221:51">[<expr pos:start="221:50" pos:end="221:50"><literal type="number" pos:start="221:50" pos:end="221:50">0</literal></expr>]</index></name><operator pos:start="221:52" pos:end="221:52">)</operator> <operator pos:start="221:54" pos:end="221:54">*</operator> <name pos:start="221:56" pos:end="221:68"><name pos:start="221:56" pos:end="221:60">avctx</name><operator pos:start="221:61" pos:end="221:62">-&gt;</operator><name pos:start="221:63" pos:end="221:68">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:33"><expr pos:start="223:9" pos:end="223:32"><name pos:start="223:9" pos:end="223:26"><name pos:start="223:9" pos:end="223:13">frame</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:23">linesize</name><index pos:start="223:24" pos:end="223:26">[<expr pos:start="223:25" pos:end="223:25"><literal type="number" pos:start="223:25" pos:end="223:25">0</literal></expr>]</index></name> <operator pos:start="223:28" pos:end="223:28">=</operator> <name pos:start="223:30" pos:end="223:32">la0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:73"><expr pos:start="225:9" pos:end="225:72"><name pos:start="225:9" pos:end="225:26"><name pos:start="225:9" pos:end="225:13">frame</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:23">linesize</name><index pos:start="225:24" pos:end="225:26">[<expr pos:start="225:25" pos:end="225:25"><literal type="number" pos:start="225:25" pos:end="225:25">1</literal></expr>]</index></name> <operator pos:start="225:28" pos:end="225:28">=</operator> <call pos:start="225:30" pos:end="225:72"><name pos:start="225:30" pos:end="225:36">FFALIGN</name><argument_list pos:start="225:37" pos:end="225:72">(<argument pos:start="225:38" pos:end="225:55"><expr pos:start="225:38" pos:end="225:55"><name pos:start="225:38" pos:end="225:55"><name pos:start="225:38" pos:end="225:42">frame</name><operator pos:start="225:43" pos:end="225:44">-&gt;</operator><name pos:start="225:45" pos:end="225:52">linesize</name><index pos:start="225:53" pos:end="225:55">[<expr pos:start="225:54" pos:end="225:54"><literal type="number" pos:start="225:54" pos:end="225:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="225:58" pos:end="225:71"><expr pos:start="225:58" pos:end="225:71"><name pos:start="225:58" pos:end="225:71">linesize_align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="231:5" pos:end="247:5"><if pos:start="231:5" pos:end="247:5">if <condition pos:start="231:8" pos:end="233:50">(<expr pos:start="231:9" pos:end="233:49"><operator pos:start="231:9" pos:end="231:9">(</operator><name pos:start="231:10" pos:end="231:23"><name pos:start="231:10" pos:end="231:14">avctx</name><operator pos:start="231:15" pos:end="231:16">-&gt;</operator><name pos:start="231:17" pos:end="231:23">pix_fmt</name></name> <operator pos:start="231:25" pos:end="231:26">==</operator> <name pos:start="231:28" pos:end="231:42">AV_PIX_FMT_PAL8</name> <operator pos:start="231:44" pos:end="231:45">&amp;&amp;</operator> <name pos:start="231:47" pos:end="231:54">buf_size</name> <operator pos:start="231:56" pos:end="231:56">&lt;</operator> <name pos:start="231:58" pos:end="231:76"><name pos:start="231:58" pos:end="231:64">context</name><operator pos:start="231:65" pos:end="231:66">-&gt;</operator><name pos:start="231:67" pos:end="231:76">frame_size</name></name><operator pos:start="231:77" pos:end="231:77">)</operator> <operator pos:start="231:79" pos:end="231:80">||</operator>

        <operator pos:start="233:9" pos:end="233:9">(</operator><name pos:start="233:10" pos:end="233:20"><name pos:start="233:10" pos:end="233:13">desc</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:20">flags</name></name> <operator pos:start="233:22" pos:end="233:22">&amp;</operator> <name pos:start="233:24" pos:end="233:48">AV_PIX_FMT_FLAG_PSEUDOPAL</name><operator pos:start="233:49" pos:end="233:49">)</operator></expr>)</condition> <block pos:start="233:52" pos:end="247:5">{<block_content pos:start="235:9" pos:end="245:45">

        <expr_stmt pos:start="235:9" pos:end="235:57"><expr pos:start="235:9" pos:end="235:56"><name pos:start="235:9" pos:end="235:21"><name pos:start="235:9" pos:end="235:13">frame</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:18">buf</name><index pos:start="235:19" pos:end="235:21">[<expr pos:start="235:20" pos:end="235:20"><literal type="number" pos:start="235:20" pos:end="235:20">1</literal></expr>]</index></name>  <operator pos:start="235:24" pos:end="235:24">=</operator> <call pos:start="235:26" pos:end="235:56"><name pos:start="235:26" pos:end="235:38">av_buffer_ref</name><argument_list pos:start="235:39" pos:end="235:56">(<argument pos:start="235:40" pos:end="235:55"><expr pos:start="235:40" pos:end="235:55"><name pos:start="235:40" pos:end="235:55"><name pos:start="235:40" pos:end="235:46">context</name><operator pos:start="235:47" pos:end="235:48">-&gt;</operator><name pos:start="235:49" pos:end="235:55">palette</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="237:9" pos:end="243:9"><if pos:start="237:9" pos:end="243:9">if <condition pos:start="237:12" pos:end="237:27">(<expr pos:start="237:13" pos:end="237:26"><operator pos:start="237:13" pos:end="237:13">!</operator><name pos:start="237:14" pos:end="237:26"><name pos:start="237:14" pos:end="237:18">frame</name><operator pos:start="237:19" pos:end="237:20">-&gt;</operator><name pos:start="237:21" pos:end="237:23">buf</name><index pos:start="237:24" pos:end="237:26">[<expr pos:start="237:25" pos:end="237:25"><literal type="number" pos:start="237:25" pos:end="237:25">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="237:29" pos:end="243:9">{<block_content pos:start="239:13" pos:end="241:35">

            <expr_stmt pos:start="239:13" pos:end="239:44"><expr pos:start="239:13" pos:end="239:43"><call pos:start="239:13" pos:end="239:43"><name pos:start="239:13" pos:end="239:27">av_buffer_unref</name><argument_list pos:start="239:28" pos:end="239:43">(<argument pos:start="239:29" pos:end="239:42"><expr pos:start="239:29" pos:end="239:42"><operator pos:start="239:29" pos:end="239:29">&amp;</operator><name pos:start="239:30" pos:end="239:42"><name pos:start="239:30" pos:end="239:34">frame</name><operator pos:start="239:35" pos:end="239:36">-&gt;</operator><name pos:start="239:37" pos:end="239:39">buf</name><index pos:start="239:40" pos:end="239:42">[<expr pos:start="239:41" pos:end="239:41"><literal type="number" pos:start="239:41" pos:end="239:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="241:13" pos:end="241:35">return <expr pos:start="241:20" pos:end="241:34"><call pos:start="241:20" pos:end="241:34"><name pos:start="241:20" pos:end="241:26">AVERROR</name><argument_list pos:start="241:27" pos:end="241:34">(<argument pos:start="241:28" pos:end="241:33"><expr pos:start="241:28" pos:end="241:33"><name pos:start="241:28" pos:end="241:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:45"><expr pos:start="245:9" pos:end="245:44"><name pos:start="245:9" pos:end="245:22"><name pos:start="245:9" pos:end="245:13">frame</name><operator pos:start="245:14" pos:end="245:15">-&gt;</operator><name pos:start="245:16" pos:end="245:19">data</name><index pos:start="245:20" pos:end="245:22">[<expr pos:start="245:21" pos:end="245:21"><literal type="number" pos:start="245:21" pos:end="245:21">1</literal></expr>]</index></name> <operator pos:start="245:24" pos:end="245:24">=</operator> <name pos:start="245:26" pos:end="245:38"><name pos:start="245:26" pos:end="245:30">frame</name><operator pos:start="245:31" pos:end="245:32">-&gt;</operator><name pos:start="245:33" pos:end="245:35">buf</name><index pos:start="245:36" pos:end="245:38">[<expr pos:start="245:37" pos:end="245:37"><literal type="number" pos:start="245:37" pos:end="245:37">1</literal></expr>]</index></name><operator pos:start="245:39" pos:end="245:40">-&gt;</operator><name pos:start="245:41" pos:end="245:44">data</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="251:5" pos:end="255:59"><if pos:start="251:5" pos:end="255:59">if <condition pos:start="251:8" pos:end="253:68">(<expr pos:start="251:9" pos:end="253:67"><name pos:start="251:9" pos:end="251:22"><name pos:start="251:9" pos:end="251:13">avctx</name><operator pos:start="251:14" pos:end="251:15">-&gt;</operator><name pos:start="251:16" pos:end="251:22">pix_fmt</name></name> <operator pos:start="251:24" pos:end="251:25">==</operator> <name pos:start="251:27" pos:end="251:42">AV_PIX_FMT_BGR24</name> <operator pos:start="251:44" pos:end="251:45">&amp;&amp;</operator>

        <operator pos:start="253:9" pos:end="253:9">(</operator><operator pos:start="253:10" pos:end="253:10">(</operator><name pos:start="253:11" pos:end="253:28"><name pos:start="253:11" pos:end="253:15">frame</name><operator pos:start="253:16" pos:end="253:17">-&gt;</operator><name pos:start="253:18" pos:end="253:25">linesize</name><index pos:start="253:26" pos:end="253:28">[<expr pos:start="253:27" pos:end="253:27"><literal type="number" pos:start="253:27" pos:end="253:27">0</literal></expr>]</index></name> <operator pos:start="253:30" pos:end="253:30">+</operator> <literal type="number" pos:start="253:32" pos:end="253:32">3</literal><operator pos:start="253:33" pos:end="253:33">)</operator> <operator pos:start="253:35" pos:end="253:35">&amp;</operator> <operator pos:start="253:37" pos:end="253:37">~</operator><literal type="number" pos:start="253:38" pos:end="253:38">3</literal><operator pos:start="253:39" pos:end="253:39">)</operator> <operator pos:start="253:41" pos:end="253:41">*</operator> <name pos:start="253:43" pos:end="253:55"><name pos:start="253:43" pos:end="253:47">avctx</name><operator pos:start="253:48" pos:end="253:49">-&gt;</operator><name pos:start="253:50" pos:end="253:55">height</name></name> <operator pos:start="253:57" pos:end="253:58">&lt;=</operator> <name pos:start="253:60" pos:end="253:67">buf_size</name></expr>)</condition><block type="pseudo" pos:start="255:9" pos:end="255:59"><block_content pos:start="255:9" pos:end="255:59">

        <expr_stmt pos:start="255:9" pos:end="255:59"><expr pos:start="255:9" pos:end="255:58"><name pos:start="255:9" pos:end="255:26"><name pos:start="255:9" pos:end="255:13">frame</name><operator pos:start="255:14" pos:end="255:15">-&gt;</operator><name pos:start="255:16" pos:end="255:23">linesize</name><index pos:start="255:24" pos:end="255:26">[<expr pos:start="255:25" pos:end="255:25"><literal type="number" pos:start="255:25" pos:end="255:25">0</literal></expr>]</index></name> <operator pos:start="255:28" pos:end="255:28">=</operator> <operator pos:start="255:30" pos:end="255:30">(</operator><name pos:start="255:31" pos:end="255:48"><name pos:start="255:31" pos:end="255:35">frame</name><operator pos:start="255:36" pos:end="255:37">-&gt;</operator><name pos:start="255:38" pos:end="255:45">linesize</name><index pos:start="255:46" pos:end="255:48">[<expr pos:start="255:47" pos:end="255:47"><literal type="number" pos:start="255:47" pos:end="255:47">0</literal></expr>]</index></name> <operator pos:start="255:50" pos:end="255:50">+</operator> <literal type="number" pos:start="255:52" pos:end="255:52">3</literal><operator pos:start="255:53" pos:end="255:53">)</operator> <operator pos:start="255:55" pos:end="255:55">&amp;</operator> <operator pos:start="255:57" pos:end="255:57">~</operator><literal type="number" pos:start="255:58" pos:end="255:58">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="259:5" pos:end="261:29"><if pos:start="259:5" pos:end="261:29">if <condition pos:start="259:8" pos:end="259:22">(<expr pos:start="259:9" pos:end="259:21"><name pos:start="259:9" pos:end="259:21"><name pos:start="259:9" pos:end="259:15">context</name><operator pos:start="259:16" pos:end="259:17">-&gt;</operator><name pos:start="259:18" pos:end="259:21">flip</name></name></expr>)</condition><block type="pseudo" pos:start="261:9" pos:end="261:29"><block_content pos:start="261:9" pos:end="261:29">

        <expr_stmt pos:start="261:9" pos:end="261:29"><expr pos:start="261:9" pos:end="261:28"><call pos:start="261:9" pos:end="261:28"><name pos:start="261:9" pos:end="261:12">flip</name><argument_list pos:start="261:13" pos:end="261:28">(<argument pos:start="261:14" pos:end="261:18"><expr pos:start="261:14" pos:end="261:18"><name pos:start="261:14" pos:end="261:18">avctx</name></expr></argument>, <argument pos:start="261:21" pos:end="261:27"><expr pos:start="261:21" pos:end="261:27"><name pos:start="261:21" pos:end="261:27">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="265:5" pos:end="273:62"><if pos:start="265:5" pos:end="273:62">if <condition pos:start="265:8" pos:end="271:54">(<expr pos:start="265:9" pos:end="271:53"><name pos:start="265:9" pos:end="265:24"><name pos:start="265:9" pos:end="265:13">avctx</name><operator pos:start="265:14" pos:end="265:15">-&gt;</operator><name pos:start="265:16" pos:end="265:24">codec_tag</name></name> <operator pos:start="265:26" pos:end="265:27">==</operator> <call pos:start="265:29" pos:end="265:53"><name pos:start="265:29" pos:end="265:33">MKTAG</name><argument_list pos:start="265:34" pos:end="265:53">(<argument pos:start="265:35" pos:end="265:37"><expr pos:start="265:35" pos:end="265:37"><literal type="char" pos:start="265:35" pos:end="265:37">'Y'</literal></expr></argument>, <argument pos:start="265:40" pos:end="265:42"><expr pos:start="265:40" pos:end="265:42"><literal type="char" pos:start="265:40" pos:end="265:42">'V'</literal></expr></argument>, <argument pos:start="265:45" pos:end="265:47"><expr pos:start="265:45" pos:end="265:47"><literal type="char" pos:start="265:45" pos:end="265:47">'1'</literal></expr></argument>, <argument pos:start="265:50" pos:end="265:52"><expr pos:start="265:50" pos:end="265:52"><literal type="char" pos:start="265:50" pos:end="265:52">'2'</literal></expr></argument>)</argument_list></call> <operator pos:start="265:55" pos:end="265:56">||</operator>

        <name pos:start="267:9" pos:end="267:24"><name pos:start="267:9" pos:end="267:13">avctx</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:24">codec_tag</name></name> <operator pos:start="267:26" pos:end="267:27">==</operator> <call pos:start="267:29" pos:end="267:53"><name pos:start="267:29" pos:end="267:33">MKTAG</name><argument_list pos:start="267:34" pos:end="267:53">(<argument pos:start="267:35" pos:end="267:37"><expr pos:start="267:35" pos:end="267:37"><literal type="char" pos:start="267:35" pos:end="267:37">'Y'</literal></expr></argument>, <argument pos:start="267:40" pos:end="267:42"><expr pos:start="267:40" pos:end="267:42"><literal type="char" pos:start="267:40" pos:end="267:42">'V'</literal></expr></argument>, <argument pos:start="267:45" pos:end="267:47"><expr pos:start="267:45" pos:end="267:47"><literal type="char" pos:start="267:45" pos:end="267:47">'1'</literal></expr></argument>, <argument pos:start="267:50" pos:end="267:52"><expr pos:start="267:50" pos:end="267:52"><literal type="char" pos:start="267:50" pos:end="267:52">'6'</literal></expr></argument>)</argument_list></call> <operator pos:start="267:55" pos:end="267:56">||</operator>

        <name pos:start="269:9" pos:end="269:24"><name pos:start="269:9" pos:end="269:13">avctx</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:24">codec_tag</name></name> <operator pos:start="269:26" pos:end="269:27">==</operator> <call pos:start="269:29" pos:end="269:53"><name pos:start="269:29" pos:end="269:33">MKTAG</name><argument_list pos:start="269:34" pos:end="269:53">(<argument pos:start="269:35" pos:end="269:37"><expr pos:start="269:35" pos:end="269:37"><literal type="char" pos:start="269:35" pos:end="269:37">'Y'</literal></expr></argument>, <argument pos:start="269:40" pos:end="269:42"><expr pos:start="269:40" pos:end="269:42"><literal type="char" pos:start="269:40" pos:end="269:42">'V'</literal></expr></argument>, <argument pos:start="269:45" pos:end="269:47"><expr pos:start="269:45" pos:end="269:47"><literal type="char" pos:start="269:45" pos:end="269:47">'2'</literal></expr></argument>, <argument pos:start="269:50" pos:end="269:52"><expr pos:start="269:50" pos:end="269:52"><literal type="char" pos:start="269:50" pos:end="269:52">'4'</literal></expr></argument>)</argument_list></call> <operator pos:start="269:55" pos:end="269:56">||</operator>

        <name pos:start="271:9" pos:end="271:24"><name pos:start="271:9" pos:end="271:13">avctx</name><operator pos:start="271:14" pos:end="271:15">-&gt;</operator><name pos:start="271:16" pos:end="271:24">codec_tag</name></name> <operator pos:start="271:26" pos:end="271:27">==</operator> <call pos:start="271:29" pos:end="271:53"><name pos:start="271:29" pos:end="271:33">MKTAG</name><argument_list pos:start="271:34" pos:end="271:53">(<argument pos:start="271:35" pos:end="271:37"><expr pos:start="271:35" pos:end="271:37"><literal type="char" pos:start="271:35" pos:end="271:37">'Y'</literal></expr></argument>, <argument pos:start="271:40" pos:end="271:42"><expr pos:start="271:40" pos:end="271:42"><literal type="char" pos:start="271:40" pos:end="271:42">'V'</literal></expr></argument>, <argument pos:start="271:45" pos:end="271:47"><expr pos:start="271:45" pos:end="271:47"><literal type="char" pos:start="271:45" pos:end="271:47">'U'</literal></expr></argument>, <argument pos:start="271:50" pos:end="271:52"><expr pos:start="271:50" pos:end="271:52"><literal type="char" pos:start="271:50" pos:end="271:52">'9'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="273:9" pos:end="273:62"><block_content pos:start="273:9" pos:end="273:62">

        <expr_stmt pos:start="273:9" pos:end="273:62"><expr pos:start="273:9" pos:end="273:61"><call pos:start="273:9" pos:end="273:61"><name pos:start="273:9" pos:end="273:14">FFSWAP</name><argument_list pos:start="273:15" pos:end="273:61">(<argument pos:start="273:16" pos:end="273:24"><expr pos:start="273:16" pos:end="273:24"><name pos:start="273:16" pos:end="273:22">uint8_t</name> <operator pos:start="273:24" pos:end="273:24">*</operator></expr></argument>, <argument pos:start="273:27" pos:end="273:42"><expr pos:start="273:27" pos:end="273:42"><name pos:start="273:27" pos:end="273:42"><name pos:start="273:27" pos:end="273:33">picture</name><operator pos:start="273:34" pos:end="273:35">-&gt;</operator><name pos:start="273:36" pos:end="273:39">data</name><index pos:start="273:40" pos:end="273:42">[<expr pos:start="273:41" pos:end="273:41"><literal type="number" pos:start="273:41" pos:end="273:41">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="273:45" pos:end="273:60"><expr pos:start="273:45" pos:end="273:60"><name pos:start="273:45" pos:end="273:60"><name pos:start="273:45" pos:end="273:51">picture</name><operator pos:start="273:52" pos:end="273:53">-&gt;</operator><name pos:start="273:54" pos:end="273:57">data</name><index pos:start="273:58" pos:end="273:60">[<expr pos:start="273:59" pos:end="273:59"><literal type="number" pos:start="273:59" pos:end="273:59">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="277:5" pos:end="283:5"><if pos:start="277:5" pos:end="283:5">if <condition pos:start="277:8" pos:end="277:100">(<expr pos:start="277:9" pos:end="277:99"><name pos:start="277:9" pos:end="277:24"><name pos:start="277:9" pos:end="277:13">avctx</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:24">codec_tag</name></name> <operator pos:start="277:26" pos:end="277:27">==</operator> <call pos:start="277:29" pos:end="277:43"><name pos:start="277:29" pos:end="277:35">AV_RL32</name><argument_list pos:start="277:36" pos:end="277:43">(<argument pos:start="277:37" pos:end="277:42"><expr pos:start="277:37" pos:end="277:42"><literal type="string" pos:start="277:37" pos:end="277:42">"I420"</literal></expr></argument>)</argument_list></call> <operator pos:start="277:45" pos:end="277:46">&amp;&amp;</operator> <operator pos:start="277:48" pos:end="277:48">(</operator><name pos:start="277:49" pos:end="277:60"><name pos:start="277:49" pos:end="277:53">avctx</name><operator pos:start="277:54" pos:end="277:55">-&gt;</operator><name pos:start="277:56" pos:end="277:60">width</name></name><operator pos:start="277:61" pos:end="277:61">+</operator><literal type="number" pos:start="277:62" pos:end="277:62">1</literal><operator pos:start="277:63" pos:end="277:63">)</operator><operator pos:start="277:64" pos:end="277:64">*</operator><operator pos:start="277:65" pos:end="277:65">(</operator><name pos:start="277:66" pos:end="277:78"><name pos:start="277:66" pos:end="277:70">avctx</name><operator pos:start="277:71" pos:end="277:72">-&gt;</operator><name pos:start="277:73" pos:end="277:78">height</name></name><operator pos:start="277:79" pos:end="277:79">+</operator><literal type="number" pos:start="277:80" pos:end="277:80">1</literal><operator pos:start="277:81" pos:end="277:81">)</operator> <operator pos:start="277:83" pos:end="277:83">*</operator> <literal type="number" pos:start="277:85" pos:end="277:85">3</literal><operator pos:start="277:86" pos:end="277:86">/</operator><literal type="number" pos:start="277:87" pos:end="277:87">2</literal> <operator pos:start="277:89" pos:end="277:90">==</operator> <name pos:start="277:92" pos:end="277:99">buf_size</name></expr>)</condition> <block pos:start="277:102" pos:end="283:5">{<block_content pos:start="279:9" pos:end="281:115">

        <expr_stmt pos:start="279:9" pos:end="279:110"><expr pos:start="279:9" pos:end="279:109"><name pos:start="279:9" pos:end="279:24"><name pos:start="279:9" pos:end="279:15">picture</name><operator pos:start="279:16" pos:end="279:17">-&gt;</operator><name pos:start="279:18" pos:end="279:21">data</name><index pos:start="279:22" pos:end="279:24">[<expr pos:start="279:23" pos:end="279:23"><literal type="number" pos:start="279:23" pos:end="279:23">1</literal></expr>]</index></name> <operator pos:start="279:26" pos:end="279:26">=</operator> <name pos:start="279:28" pos:end="279:43"><name pos:start="279:28" pos:end="279:34">picture</name><operator pos:start="279:35" pos:end="279:36">-&gt;</operator><name pos:start="279:37" pos:end="279:40">data</name><index pos:start="279:41" pos:end="279:43">[<expr pos:start="279:42" pos:end="279:42"><literal type="number" pos:start="279:42" pos:end="279:42">1</literal></expr>]</index></name> <operator pos:start="279:45" pos:end="279:45">+</operator>  <operator pos:start="279:48" pos:end="279:48">(</operator><name pos:start="279:49" pos:end="279:60"><name pos:start="279:49" pos:end="279:53">avctx</name><operator pos:start="279:54" pos:end="279:55">-&gt;</operator><name pos:start="279:56" pos:end="279:60">width</name></name><operator pos:start="279:61" pos:end="279:61">+</operator><literal type="number" pos:start="279:62" pos:end="279:62">1</literal><operator pos:start="279:63" pos:end="279:63">)</operator><operator pos:start="279:64" pos:end="279:64">*</operator><operator pos:start="279:65" pos:end="279:65">(</operator><name pos:start="279:66" pos:end="279:78"><name pos:start="279:66" pos:end="279:70">avctx</name><operator pos:start="279:71" pos:end="279:72">-&gt;</operator><name pos:start="279:73" pos:end="279:78">height</name></name><operator pos:start="279:79" pos:end="279:79">+</operator><literal type="number" pos:start="279:80" pos:end="279:80">1</literal><operator pos:start="279:81" pos:end="279:81">)</operator> <operator pos:start="279:83" pos:end="279:83">-</operator><name pos:start="279:84" pos:end="279:95"><name pos:start="279:84" pos:end="279:88">avctx</name><operator pos:start="279:89" pos:end="279:90">-&gt;</operator><name pos:start="279:91" pos:end="279:95">width</name></name><operator pos:start="279:96" pos:end="279:96">*</operator><name pos:start="279:97" pos:end="279:109"><name pos:start="279:97" pos:end="279:101">avctx</name><operator pos:start="279:102" pos:end="279:103">-&gt;</operator><name pos:start="279:104" pos:end="279:109">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:115"><expr pos:start="281:9" pos:end="281:114"><name pos:start="281:9" pos:end="281:24"><name pos:start="281:9" pos:end="281:15">picture</name><operator pos:start="281:16" pos:end="281:17">-&gt;</operator><name pos:start="281:18" pos:end="281:21">data</name><index pos:start="281:22" pos:end="281:24">[<expr pos:start="281:23" pos:end="281:23"><literal type="number" pos:start="281:23" pos:end="281:23">2</literal></expr>]</index></name> <operator pos:start="281:26" pos:end="281:26">=</operator> <name pos:start="281:28" pos:end="281:43"><name pos:start="281:28" pos:end="281:34">picture</name><operator pos:start="281:35" pos:end="281:36">-&gt;</operator><name pos:start="281:37" pos:end="281:40">data</name><index pos:start="281:41" pos:end="281:43">[<expr pos:start="281:42" pos:end="281:42"><literal type="number" pos:start="281:42" pos:end="281:42">2</literal></expr>]</index></name> <operator pos:start="281:45" pos:end="281:45">+</operator> <operator pos:start="281:47" pos:end="281:47">(</operator><operator pos:start="281:48" pos:end="281:48">(</operator><name pos:start="281:49" pos:end="281:60"><name pos:start="281:49" pos:end="281:53">avctx</name><operator pos:start="281:54" pos:end="281:55">-&gt;</operator><name pos:start="281:56" pos:end="281:60">width</name></name><operator pos:start="281:61" pos:end="281:61">+</operator><literal type="number" pos:start="281:62" pos:end="281:62">1</literal><operator pos:start="281:63" pos:end="281:63">)</operator><operator pos:start="281:64" pos:end="281:64">*</operator><operator pos:start="281:65" pos:end="281:65">(</operator><name pos:start="281:66" pos:end="281:78"><name pos:start="281:66" pos:end="281:70">avctx</name><operator pos:start="281:71" pos:end="281:72">-&gt;</operator><name pos:start="281:73" pos:end="281:78">height</name></name><operator pos:start="281:79" pos:end="281:79">+</operator><literal type="number" pos:start="281:80" pos:end="281:80">1</literal><operator pos:start="281:81" pos:end="281:81">)</operator> <operator pos:start="281:83" pos:end="281:83">-</operator><name pos:start="281:84" pos:end="281:95"><name pos:start="281:84" pos:end="281:88">avctx</name><operator pos:start="281:89" pos:end="281:90">-&gt;</operator><name pos:start="281:91" pos:end="281:95">width</name></name><operator pos:start="281:96" pos:end="281:96">*</operator><name pos:start="281:97" pos:end="281:109"><name pos:start="281:97" pos:end="281:101">avctx</name><operator pos:start="281:102" pos:end="281:103">-&gt;</operator><name pos:start="281:104" pos:end="281:109">height</name></name><operator pos:start="281:110" pos:end="281:110">)</operator><operator pos:start="281:111" pos:end="281:111">*</operator><literal type="number" pos:start="281:112" pos:end="281:112">5</literal><operator pos:start="281:113" pos:end="281:113">/</operator><literal type="number" pos:start="281:114" pos:end="281:114">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="287:5" pos:end="305:5"><if pos:start="287:5" pos:end="305:5">if <condition pos:start="287:8" pos:end="289:47">(<expr pos:start="287:9" pos:end="289:46"><name pos:start="287:9" pos:end="287:24"><name pos:start="287:9" pos:end="287:13">avctx</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:24">codec_tag</name></name> <operator pos:start="287:26" pos:end="287:27">==</operator> <call pos:start="287:29" pos:end="287:43"><name pos:start="287:29" pos:end="287:35">AV_RL32</name><argument_list pos:start="287:36" pos:end="287:43">(<argument pos:start="287:37" pos:end="287:42"><expr pos:start="287:37" pos:end="287:42"><literal type="string" pos:start="287:37" pos:end="287:42">"yuv2"</literal></expr></argument>)</argument_list></call> <operator pos:start="287:45" pos:end="287:46">&amp;&amp;</operator>

        <name pos:start="289:9" pos:end="289:22"><name pos:start="289:9" pos:end="289:13">avctx</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:22">pix_fmt</name></name>   <operator pos:start="289:26" pos:end="289:27">==</operator> <name pos:start="289:29" pos:end="289:46">AV_PIX_FMT_YUYV422</name></expr>)</condition> <block pos:start="289:49" pos:end="305:5">{<block_content pos:start="291:9" pos:end="303:9">

        <decl_stmt pos:start="291:9" pos:end="291:17"><decl pos:start="291:9" pos:end="291:13"><type pos:start="291:9" pos:end="291:11"><name pos:start="291:9" pos:end="291:11">int</name></type> <name pos:start="291:13" pos:end="291:13">x</name></decl>, <decl pos:start="291:16" pos:end="291:16"><type ref="prev" pos:start="291:9" pos:end="291:11"/><name pos:start="291:16" pos:end="291:16">y</name></decl>;</decl_stmt>

        <decl_stmt pos:start="293:9" pos:end="293:41"><decl pos:start="293:9" pos:end="293:40"><type pos:start="293:9" pos:end="293:17"><name pos:start="293:9" pos:end="293:15">uint8_t</name> <modifier pos:start="293:17" pos:end="293:17">*</modifier></type><name pos:start="293:18" pos:end="293:21">line</name> <init pos:start="293:23" pos:end="293:40">= <expr pos:start="293:25" pos:end="293:40"><name pos:start="293:25" pos:end="293:40"><name pos:start="293:25" pos:end="293:31">picture</name><operator pos:start="293:32" pos:end="293:33">-&gt;</operator><name pos:start="293:34" pos:end="293:37">data</name><index pos:start="293:38" pos:end="293:40">[<expr pos:start="293:39" pos:end="293:39"><literal type="number" pos:start="293:39" pos:end="293:39">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="295:9" pos:end="303:9">for <control pos:start="295:13" pos:end="295:43">(<init pos:start="295:14" pos:end="295:19"><expr pos:start="295:14" pos:end="295:18"><name pos:start="295:14" pos:end="295:14">y</name> <operator pos:start="295:16" pos:end="295:16">=</operator> <literal type="number" pos:start="295:18" pos:end="295:18">0</literal></expr>;</init> <condition pos:start="295:21" pos:end="295:38"><expr pos:start="295:21" pos:end="295:37"><name pos:start="295:21" pos:end="295:21">y</name> <operator pos:start="295:23" pos:end="295:23">&lt;</operator> <name pos:start="295:25" pos:end="295:37"><name pos:start="295:25" pos:end="295:29">avctx</name><operator pos:start="295:30" pos:end="295:31">-&gt;</operator><name pos:start="295:32" pos:end="295:37">height</name></name></expr>;</condition> <incr pos:start="295:40" pos:end="295:42"><expr pos:start="295:40" pos:end="295:42"><name pos:start="295:40" pos:end="295:40">y</name><operator pos:start="295:41" pos:end="295:42">++</operator></expr></incr>)</control> <block pos:start="295:45" pos:end="303:9">{<block_content pos:start="297:13" pos:end="301:41">

            <for pos:start="297:13" pos:end="299:40">for <control pos:start="297:17" pos:end="297:46">(<init pos:start="297:18" pos:end="297:23"><expr pos:start="297:18" pos:end="297:22"><name pos:start="297:18" pos:end="297:18">x</name> <operator pos:start="297:20" pos:end="297:20">=</operator> <literal type="number" pos:start="297:22" pos:end="297:22">0</literal></expr>;</init> <condition pos:start="297:25" pos:end="297:41"><expr pos:start="297:25" pos:end="297:40"><name pos:start="297:25" pos:end="297:25">x</name> <operator pos:start="297:27" pos:end="297:27">&lt;</operator> <name pos:start="297:29" pos:end="297:40"><name pos:start="297:29" pos:end="297:33">avctx</name><operator pos:start="297:34" pos:end="297:35">-&gt;</operator><name pos:start="297:36" pos:end="297:40">width</name></name></expr>;</condition> <incr pos:start="297:43" pos:end="297:45"><expr pos:start="297:43" pos:end="297:45"><name pos:start="297:43" pos:end="297:43">x</name><operator pos:start="297:44" pos:end="297:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="299:17" pos:end="299:40"><block_content pos:start="299:17" pos:end="299:40">

                <expr_stmt pos:start="299:17" pos:end="299:40"><expr pos:start="299:17" pos:end="299:39"><name pos:start="299:17" pos:end="299:31"><name pos:start="299:17" pos:end="299:20">line</name><index pos:start="299:21" pos:end="299:31">[<expr pos:start="299:22" pos:end="299:30"><literal type="number" pos:start="299:22" pos:end="299:22">2</literal> <operator pos:start="299:24" pos:end="299:24">*</operator> <name pos:start="299:26" pos:end="299:26">x</name> <operator pos:start="299:28" pos:end="299:28">+</operator> <literal type="number" pos:start="299:30" pos:end="299:30">1</literal></expr>]</index></name> <operator pos:start="299:33" pos:end="299:34">^=</operator> <literal type="number" pos:start="299:36" pos:end="299:39">0x80</literal></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="301:13" pos:end="301:41"><expr pos:start="301:13" pos:end="301:40"><name pos:start="301:13" pos:end="301:16">line</name> <operator pos:start="301:18" pos:end="301:19">+=</operator> <name pos:start="301:21" pos:end="301:40"><name pos:start="301:21" pos:end="301:27">picture</name><operator pos:start="301:28" pos:end="301:29">-&gt;</operator><name pos:start="301:30" pos:end="301:37">linesize</name><index pos:start="301:38" pos:end="301:40">[<expr pos:start="301:39" pos:end="301:39"><literal type="number" pos:start="301:39" pos:end="301:39">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="307:5" pos:end="325:5"><if pos:start="307:5" pos:end="325:5">if <condition pos:start="307:8" pos:end="309:47">(<expr pos:start="307:9" pos:end="309:46"><name pos:start="307:9" pos:end="307:24"><name pos:start="307:9" pos:end="307:13">avctx</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:24">codec_tag</name></name> <operator pos:start="307:26" pos:end="307:27">==</operator> <call pos:start="307:29" pos:end="307:43"><name pos:start="307:29" pos:end="307:35">AV_RL32</name><argument_list pos:start="307:36" pos:end="307:43">(<argument pos:start="307:37" pos:end="307:42"><expr pos:start="307:37" pos:end="307:42"><literal type="string" pos:start="307:37" pos:end="307:42">"YVYU"</literal></expr></argument>)</argument_list></call> <operator pos:start="307:45" pos:end="307:46">&amp;&amp;</operator>

        <name pos:start="309:9" pos:end="309:22"><name pos:start="309:9" pos:end="309:13">avctx</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:22">pix_fmt</name></name>   <operator pos:start="309:26" pos:end="309:27">==</operator> <name pos:start="309:29" pos:end="309:46">AV_PIX_FMT_YUYV422</name></expr>)</condition> <block pos:start="309:49" pos:end="325:5">{<block_content pos:start="311:9" pos:end="323:9">

        <decl_stmt pos:start="311:9" pos:end="311:17"><decl pos:start="311:9" pos:end="311:13"><type pos:start="311:9" pos:end="311:11"><name pos:start="311:9" pos:end="311:11">int</name></type> <name pos:start="311:13" pos:end="311:13">x</name></decl>, <decl pos:start="311:16" pos:end="311:16"><type ref="prev" pos:start="311:9" pos:end="311:11"/><name pos:start="311:16" pos:end="311:16">y</name></decl>;</decl_stmt>

        <decl_stmt pos:start="313:9" pos:end="313:41"><decl pos:start="313:9" pos:end="313:40"><type pos:start="313:9" pos:end="313:17"><name pos:start="313:9" pos:end="313:15">uint8_t</name> <modifier pos:start="313:17" pos:end="313:17">*</modifier></type><name pos:start="313:18" pos:end="313:21">line</name> <init pos:start="313:23" pos:end="313:40">= <expr pos:start="313:25" pos:end="313:40"><name pos:start="313:25" pos:end="313:40"><name pos:start="313:25" pos:end="313:31">picture</name><operator pos:start="313:32" pos:end="313:33">-&gt;</operator><name pos:start="313:34" pos:end="313:37">data</name><index pos:start="313:38" pos:end="313:40">[<expr pos:start="313:39" pos:end="313:39"><literal type="number" pos:start="313:39" pos:end="313:39">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="315:9" pos:end="323:9">for<control pos:start="315:12" pos:end="315:42">(<init pos:start="315:13" pos:end="315:18"><expr pos:start="315:13" pos:end="315:17"><name pos:start="315:13" pos:end="315:13">y</name> <operator pos:start="315:15" pos:end="315:15">=</operator> <literal type="number" pos:start="315:17" pos:end="315:17">0</literal></expr>;</init> <condition pos:start="315:20" pos:end="315:37"><expr pos:start="315:20" pos:end="315:36"><name pos:start="315:20" pos:end="315:20">y</name> <operator pos:start="315:22" pos:end="315:22">&lt;</operator> <name pos:start="315:24" pos:end="315:36"><name pos:start="315:24" pos:end="315:28">avctx</name><operator pos:start="315:29" pos:end="315:30">-&gt;</operator><name pos:start="315:31" pos:end="315:36">height</name></name></expr>;</condition> <incr pos:start="315:39" pos:end="315:41"><expr pos:start="315:39" pos:end="315:41"><name pos:start="315:39" pos:end="315:39">y</name><operator pos:start="315:40" pos:end="315:41">++</operator></expr></incr>)</control> <block pos:start="315:44" pos:end="323:9">{<block_content pos:start="317:13" pos:end="321:41">

            <for pos:start="317:13" pos:end="319:62">for<control pos:start="317:16" pos:end="317:52">(<init pos:start="317:17" pos:end="317:22"><expr pos:start="317:17" pos:end="317:21"><name pos:start="317:17" pos:end="317:17">x</name> <operator pos:start="317:19" pos:end="317:19">=</operator> <literal type="number" pos:start="317:21" pos:end="317:21">0</literal></expr>;</init> <condition pos:start="317:24" pos:end="317:44"><expr pos:start="317:24" pos:end="317:43"><name pos:start="317:24" pos:end="317:24">x</name> <operator pos:start="317:26" pos:end="317:26">&lt;</operator> <name pos:start="317:28" pos:end="317:39"><name pos:start="317:28" pos:end="317:32">avctx</name><operator pos:start="317:33" pos:end="317:34">-&gt;</operator><name pos:start="317:35" pos:end="317:39">width</name></name> <operator pos:start="317:41" pos:end="317:41">-</operator> <literal type="number" pos:start="317:43" pos:end="317:43">1</literal></expr>;</condition> <incr pos:start="317:46" pos:end="317:51"><expr pos:start="317:46" pos:end="317:51"><name pos:start="317:46" pos:end="317:46">x</name> <operator pos:start="317:48" pos:end="317:49">+=</operator> <literal type="number" pos:start="317:51" pos:end="317:51">2</literal></expr></incr>)</control><block type="pseudo" pos:start="319:17" pos:end="319:62"><block_content pos:start="319:17" pos:end="319:62">

                <expr_stmt pos:start="319:17" pos:end="319:62"><expr pos:start="319:17" pos:end="319:61"><call pos:start="319:17" pos:end="319:61"><name pos:start="319:17" pos:end="319:22">FFSWAP</name><argument_list pos:start="319:23" pos:end="319:61">(<argument pos:start="319:24" pos:end="319:30"><expr pos:start="319:24" pos:end="319:30"><name pos:start="319:24" pos:end="319:30">uint8_t</name></expr></argument>, <argument pos:start="319:33" pos:end="319:45"><expr pos:start="319:33" pos:end="319:45"><name pos:start="319:33" pos:end="319:45"><name pos:start="319:33" pos:end="319:36">line</name><index pos:start="319:37" pos:end="319:45">[<expr pos:start="319:38" pos:end="319:44"><literal type="number" pos:start="319:38" pos:end="319:38">2</literal><operator pos:start="319:39" pos:end="319:39">*</operator><name pos:start="319:40" pos:end="319:40">x</name> <operator pos:start="319:42" pos:end="319:42">+</operator> <literal type="number" pos:start="319:44" pos:end="319:44">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="319:48" pos:end="319:60"><expr pos:start="319:48" pos:end="319:60"><name pos:start="319:48" pos:end="319:60"><name pos:start="319:48" pos:end="319:51">line</name><index pos:start="319:52" pos:end="319:60">[<expr pos:start="319:53" pos:end="319:59"><literal type="number" pos:start="319:53" pos:end="319:53">2</literal><operator pos:start="319:54" pos:end="319:54">*</operator><name pos:start="319:55" pos:end="319:55">x</name> <operator pos:start="319:57" pos:end="319:57">+</operator> <literal type="number" pos:start="319:59" pos:end="319:59">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="321:13" pos:end="321:41"><expr pos:start="321:13" pos:end="321:40"><name pos:start="321:13" pos:end="321:16">line</name> <operator pos:start="321:18" pos:end="321:19">+=</operator> <name pos:start="321:21" pos:end="321:40"><name pos:start="321:21" pos:end="321:27">picture</name><operator pos:start="321:28" pos:end="321:29">-&gt;</operator><name pos:start="321:30" pos:end="321:37">linesize</name><index pos:start="321:38" pos:end="321:40">[<expr pos:start="321:39" pos:end="321:39"><literal type="number" pos:start="321:39" pos:end="321:39">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="329:5" pos:end="337:5"><if pos:start="329:5" pos:end="337:5">if <condition pos:start="329:8" pos:end="329:50">(<expr pos:start="329:9" pos:end="329:49"><name pos:start="329:9" pos:end="329:26"><name pos:start="329:9" pos:end="329:13">avctx</name><operator pos:start="329:14" pos:end="329:15">-&gt;</operator><name pos:start="329:16" pos:end="329:26">field_order</name></name> <operator pos:start="329:28" pos:end="329:28">&gt;</operator> <name pos:start="329:30" pos:end="329:49">AV_FIELD_PROGRESSIVE</name></expr>)</condition> <block pos:start="329:52" pos:end="337:5">{<block_content pos:start="331:9" pos:end="335:39"> <comment type="block" pos:start="329:54" pos:end="329:107">/* we have interlaced material flagged in container */</comment>

        <expr_stmt pos:start="331:9" pos:end="331:36"><expr pos:start="331:9" pos:end="331:35"><name pos:start="331:9" pos:end="331:31"><name pos:start="331:9" pos:end="331:13">frame</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:31">interlaced_frame</name></name> <operator pos:start="331:33" pos:end="331:33">=</operator> <literal type="number" pos:start="331:35" pos:end="331:35">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="333:9" pos:end="335:39"><if pos:start="333:9" pos:end="335:39">if <condition pos:start="333:12" pos:end="333:83">(<expr pos:start="333:13" pos:end="333:82"><name pos:start="333:13" pos:end="333:30"><name pos:start="333:13" pos:end="333:17">avctx</name><operator pos:start="333:18" pos:end="333:19">-&gt;</operator><name pos:start="333:20" pos:end="333:30">field_order</name></name> <operator pos:start="333:32" pos:end="333:33">==</operator> <name pos:start="333:35" pos:end="333:45">AV_FIELD_TT</name> <operator pos:start="333:47" pos:end="333:48">||</operator> <name pos:start="333:50" pos:end="333:67"><name pos:start="333:50" pos:end="333:54">avctx</name><operator pos:start="333:55" pos:end="333:56">-&gt;</operator><name pos:start="333:57" pos:end="333:67">field_order</name></name> <operator pos:start="333:69" pos:end="333:70">==</operator> <name pos:start="333:72" pos:end="333:82">AV_FIELD_TB</name></expr>)</condition><block type="pseudo" pos:start="335:13" pos:end="335:39"><block_content pos:start="335:13" pos:end="335:39">

            <expr_stmt pos:start="335:13" pos:end="335:39"><expr pos:start="335:13" pos:end="335:38"><name pos:start="335:13" pos:end="335:34"><name pos:start="335:13" pos:end="335:17">frame</name><operator pos:start="335:18" pos:end="335:19">-&gt;</operator><name pos:start="335:20" pos:end="335:34">top_field_first</name></name> <operator pos:start="335:36" pos:end="335:36">=</operator> <literal type="number" pos:start="335:38" pos:end="335:38">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="341:5" pos:end="341:19"><expr pos:start="341:5" pos:end="341:18"><operator pos:start="341:5" pos:end="341:5">*</operator><name pos:start="341:6" pos:end="341:14">got_frame</name> <operator pos:start="341:16" pos:end="341:16">=</operator> <literal type="number" pos:start="341:18" pos:end="341:18">1</literal></expr>;</expr_stmt>

    <return pos:start="343:5" pos:end="343:20">return <expr pos:start="343:12" pos:end="343:19"><name pos:start="343:12" pos:end="343:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
