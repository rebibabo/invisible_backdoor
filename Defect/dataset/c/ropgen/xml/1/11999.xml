<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11999.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">qcow_write</name><parameter_list pos:start="1:22" pos:end="3:56">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:38">BlockDriverState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">bs</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><name pos:start="1:45" pos:end="1:51">int64_t</name></type> <name pos:start="1:53" pos:end="1:62">sector_num</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:39"><decl pos:start="3:22" pos:end="3:39"><type pos:start="3:22" pos:end="3:39"><specifier pos:start="3:22" pos:end="3:26">const</specifier> <name pos:start="3:28" pos:end="3:34">uint8_t</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">buf</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:55">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:29">index_in_cluster</name></decl>, <decl pos:start="9:32" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:32">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:27">cluster_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">n_end</name></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="65:5">while <condition pos:start="17:11" pos:end="17:26">(<expr pos:start="17:12" pos:end="17:25"><name pos:start="17:12" pos:end="17:21">nb_sectors</name> <operator pos:start="17:23" pos:end="17:23">&gt;</operator> <literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr>)</condition> <block pos:start="17:28" pos:end="65:5">{<block_content pos:start="19:9" pos:end="63:23">

        <expr_stmt pos:start="19:9" pos:end="19:65"><expr pos:start="19:9" pos:end="19:64"><name pos:start="19:9" pos:end="19:24">index_in_cluster</name> <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:37">sector_num</name> <operator pos:start="19:39" pos:end="19:39">&amp;</operator> <operator pos:start="19:41" pos:end="19:41">(</operator><name pos:start="19:42" pos:end="19:59"><name pos:start="19:42" pos:end="19:42">s</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:59">cluster_sectors</name></name> <operator pos:start="19:61" pos:end="19:61">-</operator> <literal type="number" pos:start="19:63" pos:end="19:63">1</literal><operator pos:start="19:64" pos:end="19:64">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:46"><expr pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:13">n_end</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:32">index_in_cluster</name> <operator pos:start="21:34" pos:end="21:34">+</operator> <name pos:start="21:36" pos:end="21:45">nb_sectors</name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:65"><if pos:start="23:9" pos:end="27:65">if <condition pos:start="23:12" pos:end="25:65">(<expr pos:start="23:13" pos:end="25:64"><name pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:27">crypt_method</name></name> <operator pos:start="23:29" pos:end="23:30">&amp;&amp;</operator>

            <name pos:start="25:13" pos:end="25:17">n_end</name> <operator pos:start="25:19" pos:end="25:19">&gt;</operator> <name pos:start="25:21" pos:end="25:43">QCOW_MAX_CRYPT_CLUSTERS</name> <operator pos:start="25:45" pos:end="25:45">*</operator> <name pos:start="25:47" pos:end="25:64"><name pos:start="25:47" pos:end="25:47">s</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:64">cluster_sectors</name></name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:65"><block_content pos:start="27:13" pos:end="27:65">

            <expr_stmt pos:start="27:13" pos:end="27:65"><expr pos:start="27:13" pos:end="27:64"><name pos:start="27:13" pos:end="27:17">n_end</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:43">QCOW_MAX_CRYPT_CLUSTERS</name> <operator pos:start="27:45" pos:end="27:45">*</operator> <name pos:start="27:47" pos:end="27:64"><name pos:start="27:47" pos:end="27:47">s</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:64">cluster_sectors</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="33:57"><expr pos:start="29:9" pos:end="33:56"><name pos:start="29:9" pos:end="29:22">cluster_offset</name> <operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="33:56"><name pos:start="29:26" pos:end="29:45">alloc_cluster_offset</name><argument_list pos:start="29:46" pos:end="33:56">(<argument pos:start="29:47" pos:end="29:48"><expr pos:start="29:47" pos:end="29:48"><name pos:start="29:47" pos:end="29:48">bs</name></expr></argument>, <argument pos:start="29:51" pos:end="29:65"><expr pos:start="29:51" pos:end="29:65"><name pos:start="29:51" pos:end="29:60">sector_num</name> <operator pos:start="29:62" pos:end="29:63">&lt;&lt;</operator> <literal type="number" pos:start="29:65" pos:end="29:65">9</literal></expr></argument>,

                                              <argument pos:start="31:47" pos:end="31:62"><expr pos:start="31:47" pos:end="31:62"><name pos:start="31:47" pos:end="31:62">index_in_cluster</name></expr></argument>,

                                              <argument pos:start="33:47" pos:end="33:51"><expr pos:start="33:47" pos:end="33:51"><name pos:start="33:47" pos:end="33:51">n_end</name></expr></argument>, <argument pos:start="33:54" pos:end="33:55"><expr pos:start="33:54" pos:end="33:55"><operator pos:start="33:54" pos:end="33:54">&amp;</operator><name pos:start="33:55" pos:end="33:55">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:22"><if pos:start="35:9" pos:end="37:22">if <condition pos:start="35:12" pos:end="35:28">(<expr pos:start="35:13" pos:end="35:27"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:27">cluster_offset</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:22"><block_content pos:start="37:13" pos:end="37:22">

            <return pos:start="37:13" pos:end="37:22">return <expr pos:start="37:20" pos:end="37:21"><operator pos:start="37:20" pos:end="37:20">-</operator><literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="53:9"><if pos:start="39:9" pos:end="49:9">if <condition pos:start="39:12" pos:end="39:28">(<expr pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:27">crypt_method</name></name></expr>)</condition> <block pos:start="39:30" pos:end="49:9">{<block_content pos:start="41:13" pos:end="47:56">

            <expr_stmt pos:start="41:13" pos:end="43:49"><expr pos:start="41:13" pos:end="43:48"><call pos:start="41:13" pos:end="43:48"><name pos:start="41:13" pos:end="41:27">encrypt_sectors</name><argument_list pos:start="41:28" pos:end="43:48">(<argument pos:start="41:29" pos:end="41:29"><expr pos:start="41:29" pos:end="41:29"><name pos:start="41:29" pos:end="41:29">s</name></expr></argument>, <argument pos:start="41:32" pos:end="41:41"><expr pos:start="41:32" pos:end="41:41"><name pos:start="41:32" pos:end="41:41">sector_num</name></expr></argument>, <argument pos:start="41:44" pos:end="41:58"><expr pos:start="41:44" pos:end="41:58"><name pos:start="41:44" pos:end="41:58"><name pos:start="41:44" pos:end="41:44">s</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:58">cluster_data</name></name></expr></argument>, <argument pos:start="41:61" pos:end="41:63"><expr pos:start="41:61" pos:end="41:63"><name pos:start="41:61" pos:end="41:63">buf</name></expr></argument>, <argument pos:start="41:66" pos:end="41:66"><expr pos:start="41:66" pos:end="41:66"><name pos:start="41:66" pos:end="41:66">n</name></expr></argument>, <argument pos:start="41:69" pos:end="41:69"><expr pos:start="41:69" pos:end="41:69"><literal type="number" pos:start="41:69" pos:end="41:69">1</literal></expr></argument>,

                            <argument pos:start="43:29" pos:end="43:47"><expr pos:start="43:29" pos:end="43:47"><operator pos:start="43:29" pos:end="43:29">&amp;</operator><name pos:start="43:30" pos:end="43:47"><name pos:start="43:30" pos:end="43:30">s</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:47">aes_encrypt_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="47:56"><expr pos:start="45:13" pos:end="47:55"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="47:55"><name pos:start="45:19" pos:end="45:29">bdrv_pwrite</name><argument_list pos:start="45:30" pos:end="47:55">(<argument pos:start="45:31" pos:end="45:35"><expr pos:start="45:31" pos:end="45:35"><name pos:start="45:31" pos:end="45:35"><name pos:start="45:31" pos:end="45:31">s</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:35">hd</name></name></expr></argument>, <argument pos:start="45:38" pos:end="45:76"><expr pos:start="45:38" pos:end="45:76"><name pos:start="45:38" pos:end="45:51">cluster_offset</name> <operator pos:start="45:53" pos:end="45:53">+</operator> <name pos:start="45:55" pos:end="45:70">index_in_cluster</name> <operator pos:start="45:72" pos:end="45:72">*</operator> <literal type="number" pos:start="45:74" pos:end="45:76">512</literal></expr></argument>,

                              <argument pos:start="47:31" pos:end="47:45"><expr pos:start="47:31" pos:end="47:45"><name pos:start="47:31" pos:end="47:45"><name pos:start="47:31" pos:end="47:31">s</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:45">cluster_data</name></name></expr></argument>, <argument pos:start="47:48" pos:end="47:54"><expr pos:start="47:48" pos:end="47:54"><name pos:start="47:48" pos:end="47:48">n</name> <operator pos:start="47:50" pos:end="47:50">*</operator> <literal type="number" pos:start="47:52" pos:end="47:54">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="53:9">else <block pos:start="49:16" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:92">

            <expr_stmt pos:start="51:13" pos:end="51:92"><expr pos:start="51:13" pos:end="51:91"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="51:91"><name pos:start="51:19" pos:end="51:29">bdrv_pwrite</name><argument_list pos:start="51:30" pos:end="51:91">(<argument pos:start="51:31" pos:end="51:35"><expr pos:start="51:31" pos:end="51:35"><name pos:start="51:31" pos:end="51:35"><name pos:start="51:31" pos:end="51:31">s</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:35">hd</name></name></expr></argument>, <argument pos:start="51:38" pos:end="51:76"><expr pos:start="51:38" pos:end="51:76"><name pos:start="51:38" pos:end="51:51">cluster_offset</name> <operator pos:start="51:53" pos:end="51:53">+</operator> <name pos:start="51:55" pos:end="51:70">index_in_cluster</name> <operator pos:start="51:72" pos:end="51:72">*</operator> <literal type="number" pos:start="51:74" pos:end="51:76">512</literal></expr></argument>, <argument pos:start="51:79" pos:end="51:81"><expr pos:start="51:79" pos:end="51:81"><name pos:start="51:79" pos:end="51:81">buf</name></expr></argument>, <argument pos:start="51:84" pos:end="51:90"><expr pos:start="51:84" pos:end="51:90"><name pos:start="51:84" pos:end="51:84">n</name> <operator pos:start="51:86" pos:end="51:86">*</operator> <literal type="number" pos:start="51:88" pos:end="51:90">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="55:9" pos:end="57:22"><if pos:start="55:9" pos:end="57:22">if <condition pos:start="55:12" pos:end="55:27">(<expr pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:18">!=</operator> <name pos:start="55:20" pos:end="55:20">n</name> <operator pos:start="55:22" pos:end="55:22">*</operator> <literal type="number" pos:start="55:24" pos:end="55:26">512</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:22"><block_content pos:start="57:13" pos:end="57:22">

            <return pos:start="57:13" pos:end="57:22">return <expr pos:start="57:20" pos:end="57:21"><operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:24"><expr pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:18">nb_sectors</name> <operator pos:start="59:20" pos:end="59:21">-=</operator> <name pos:start="59:23" pos:end="59:23">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:24"><expr pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:18">sector_num</name> <operator pos:start="61:20" pos:end="61:21">+=</operator> <name pos:start="61:23" pos:end="61:23">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:23"><expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:11">buf</name> <operator pos:start="63:13" pos:end="63:14">+=</operator> <name pos:start="63:16" pos:end="63:16">n</name> <operator pos:start="63:18" pos:end="63:18">*</operator> <literal type="number" pos:start="63:20" pos:end="63:22">512</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="67:5" pos:end="67:33"><expr pos:start="67:5" pos:end="67:32"><name pos:start="67:5" pos:end="67:27"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:27">cluster_cache_offset</name></name> <operator pos:start="67:29" pos:end="67:29">=</operator> <operator pos:start="67:31" pos:end="67:31">-</operator><literal type="number" pos:start="67:32" pos:end="67:32">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="67:35" pos:end="67:64">/* disable compressed cache */</comment>

    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
