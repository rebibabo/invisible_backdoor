<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/922.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">cin_decode_rle</name><parameter_list pos:start="1:27" pos:end="1:100">(<parameter pos:start="1:28" pos:end="1:51"><decl pos:start="1:28" pos:end="1:51"><type pos:start="1:28" pos:end="1:51"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:41">unsigned</name> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">src</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:65">src_size</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:85"><decl pos:start="1:68" pos:end="1:85"><type pos:start="1:68" pos:end="1:85"><name pos:start="1:68" pos:end="1:75">unsigned</name> <name pos:start="1:77" pos:end="1:80">char</name> <modifier pos:start="1:82" pos:end="1:82">*</modifier></type><name pos:start="1:83" pos:end="1:85">dst</name></decl></parameter>, <parameter pos:start="1:88" pos:end="1:99"><decl pos:start="1:88" pos:end="1:99"><type pos:start="1:88" pos:end="1:99"><name pos:start="1:88" pos:end="1:90">int</name></type> <name pos:start="1:92" pos:end="1:99">dst_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name></decl>, <decl pos:start="5:14" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:17">code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:26">dst_end</name> <init pos:start="7:28" pos:end="7:43">= <expr pos:start="7:30" pos:end="7:43"><name pos:start="7:30" pos:end="7:32">dst</name> <operator pos:start="7:34" pos:end="7:34">+</operator> <name pos:start="7:36" pos:end="7:43">dst_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:25"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:18">unsigned</name> <name pos:start="9:20" pos:end="9:23">char</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:32">src_end</name> <init pos:start="9:34" pos:end="9:49">= <expr pos:start="9:36" pos:end="9:49"><name pos:start="9:36" pos:end="9:38">src</name> <operator pos:start="9:40" pos:end="9:40">+</operator> <name pos:start="9:42" pos:end="9:49">src_size</name></expr></init></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="35:5">while <condition pos:start="13:11" pos:end="13:42">(<expr pos:start="13:12" pos:end="13:41"><name pos:start="13:12" pos:end="13:14">src</name> <operator pos:start="13:16" pos:end="13:16">&lt;</operator> <name pos:start="13:18" pos:end="13:24">src_end</name> <operator pos:start="13:26" pos:end="13:27">&amp;&amp;</operator> <name pos:start="13:29" pos:end="13:31">dst</name> <operator pos:start="13:33" pos:end="13:33">&lt;</operator> <name pos:start="13:35" pos:end="13:41">dst_end</name></expr>)</condition> <block pos:start="13:44" pos:end="35:5">{<block_content pos:start="15:9" pos:end="33:19">

        <expr_stmt pos:start="15:9" pos:end="15:22"><expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:12">code</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <operator pos:start="15:16" pos:end="15:16">*</operator><name pos:start="15:17" pos:end="15:19">src</name><operator pos:start="15:20" pos:end="15:21">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="31:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:24">(<expr pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:16">code</name> <operator pos:start="17:18" pos:end="17:18">&amp;</operator> <literal type="number" pos:start="17:20" pos:end="17:23">0x80</literal></expr>)</condition> <block pos:start="17:26" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:59">

            <expr_stmt pos:start="19:13" pos:end="19:30"><expr pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:15">len</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:22">code</name> <operator pos:start="19:24" pos:end="19:24">-</operator> <literal type="number" pos:start="19:26" pos:end="19:29">0x7F</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:59"><expr pos:start="21:13" pos:end="21:58"><call pos:start="21:13" pos:end="21:58"><name pos:start="21:13" pos:end="21:18">memset</name><argument_list pos:start="21:19" pos:end="21:58">(<argument pos:start="21:20" pos:end="21:22"><expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">dst</name></expr></argument>, <argument pos:start="21:25" pos:end="21:30"><expr pos:start="21:25" pos:end="21:30"><operator pos:start="21:25" pos:end="21:25">*</operator><name pos:start="21:26" pos:end="21:28">src</name><operator pos:start="21:29" pos:end="21:30">++</operator></expr></argument>, <argument pos:start="21:33" pos:end="21:57"><expr pos:start="21:33" pos:end="21:57"><call pos:start="21:33" pos:end="21:57"><name pos:start="21:33" pos:end="21:37">FFMIN</name><argument_list pos:start="21:38" pos:end="21:57">(<argument pos:start="21:39" pos:end="21:41"><expr pos:start="21:39" pos:end="21:41"><name pos:start="21:39" pos:end="21:41">len</name></expr></argument>, <argument pos:start="21:44" pos:end="21:56"><expr pos:start="21:44" pos:end="21:56"><name pos:start="21:44" pos:end="21:50">dst_end</name> <operator pos:start="21:52" pos:end="21:52">-</operator> <name pos:start="21:54" pos:end="21:56">dst</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="23:11" pos:end="31:9">else <block pos:start="23:16" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:23">

            <expr_stmt pos:start="25:13" pos:end="25:27"><expr pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:15">len</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:22">code</name> <operator pos:start="25:24" pos:end="25:24">+</operator> <literal type="number" pos:start="25:26" pos:end="25:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:56"><expr pos:start="27:13" pos:end="27:55"><call pos:start="27:13" pos:end="27:55"><name pos:start="27:13" pos:end="27:18">memcpy</name><argument_list pos:start="27:19" pos:end="27:55">(<argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">dst</name></expr></argument>, <argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">src</name></expr></argument>, <argument pos:start="27:30" pos:end="27:54"><expr pos:start="27:30" pos:end="27:54"><call pos:start="27:30" pos:end="27:54"><name pos:start="27:30" pos:end="27:34">FFMIN</name><argument_list pos:start="27:35" pos:end="27:54">(<argument pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:38">len</name></expr></argument>, <argument pos:start="27:41" pos:end="27:53"><expr pos:start="27:41" pos:end="27:53"><name pos:start="27:41" pos:end="27:47">dst_end</name> <operator pos:start="27:49" pos:end="27:49">-</operator> <name pos:start="27:51" pos:end="27:53">dst</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:23"><expr pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:15">src</name> <operator pos:start="29:17" pos:end="29:18">+=</operator> <name pos:start="29:20" pos:end="29:22">len</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:19"><expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:11">dst</name> <operator pos:start="33:13" pos:end="33:14">+=</operator> <name pos:start="33:16" pos:end="33:18">len</name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
