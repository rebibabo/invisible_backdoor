<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5184.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">mpegts_probe</name><parameter_list pos:start="1:24" pos:end="1:39">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:35">AVProbeData</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:35">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:18">size</name> <init pos:start="5:20" pos:end="5:32">= <expr pos:start="5:22" pos:end="5:32"><name pos:start="5:22" pos:end="5:32"><name pos:start="5:22" pos:end="5:22">p</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:32">buf_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">score</name></decl>, <decl pos:start="7:16" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:24">fec_score</name></decl>, <decl pos:start="7:27" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:36">dvhs_score</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="12:0"><decl pos:start="9:5" pos:end="9:47"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">check_count</name> <init pos:start="9:21" pos:end="9:47">= <expr pos:start="9:23" pos:end="9:47"><name pos:start="9:23" pos:end="9:26">size</name> <operator pos:start="9:28" pos:end="9:28">/</operator> <name pos:start="9:30" pos:end="9:47">TS_FEC_PACKET_SIZE</name></expr></init></decl>;</decl_stmt>

<cpp:define pos:start="11:1" pos:end="11:22">#<cpp:directive pos:start="11:2" pos:end="11:7">define</cpp:directive> <cpp:macro pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:19">CHECK_COUNT</name></cpp:macro> <cpp:value pos:start="11:21" pos:end="11:22">10</cpp:value></cpp:define>



    <if_stmt pos:start="15:5" pos:end="17:35"><if pos:start="15:5" pos:end="17:35">if <condition pos:start="15:8" pos:end="15:34">(<expr pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:19">check_count</name> <operator pos:start="15:21" pos:end="15:21">&lt;</operator> <name pos:start="15:23" pos:end="15:33">CHECK_COUNT</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:35"><block_content pos:start="17:9" pos:end="17:35">

        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="23:70"><expr pos:start="21:5" pos:end="23:69"><name pos:start="21:5" pos:end="21:9">score</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="23:41"><name pos:start="21:13" pos:end="21:19">analyze</name><argument_list pos:start="21:20" pos:end="23:41">(<argument pos:start="21:21" pos:end="21:26"><expr pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:21">p</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:26">buf</name></name></expr></argument>, <argument pos:start="21:29" pos:end="21:56"><expr pos:start="21:29" pos:end="21:56"><name pos:start="21:29" pos:end="21:42">TS_PACKET_SIZE</name> <operator pos:start="21:44" pos:end="21:44">*</operator> <name pos:start="21:46" pos:end="21:56">check_count</name></expr></argument>,

                    <argument pos:start="23:21" pos:end="23:34"><expr pos:start="23:21" pos:end="23:34"><name pos:start="23:21" pos:end="23:34">TS_PACKET_SIZE</name></expr></argument>, <argument pos:start="23:37" pos:end="23:40"><expr pos:start="23:37" pos:end="23:40"><name pos:start="23:37" pos:end="23:40">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="23:43" pos:end="23:43">*</operator> <name pos:start="23:45" pos:end="23:55">CHECK_COUNT</name> <operator pos:start="23:57" pos:end="23:57">/</operator> <name pos:start="23:59" pos:end="23:69">check_count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:80"><expr pos:start="25:5" pos:end="27:79"><name pos:start="25:5" pos:end="25:14">dvhs_score</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="27:51"><name pos:start="25:18" pos:end="25:24">analyze</name><argument_list pos:start="25:25" pos:end="27:51">(<argument pos:start="25:26" pos:end="25:31"><expr pos:start="25:26" pos:end="25:31"><name pos:start="25:26" pos:end="25:31"><name pos:start="25:26" pos:end="25:26">p</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:31">buf</name></name></expr></argument>, <argument pos:start="25:34" pos:end="25:66"><expr pos:start="25:34" pos:end="25:66"><name pos:start="25:34" pos:end="25:52">TS_DVHS_PACKET_SIZE</name> <operator pos:start="25:54" pos:end="25:54">*</operator> <name pos:start="25:56" pos:end="25:66">check_count</name></expr></argument>,

                         <argument pos:start="27:26" pos:end="27:44"><expr pos:start="27:26" pos:end="27:44"><name pos:start="27:26" pos:end="27:44">TS_DVHS_PACKET_SIZE</name></expr></argument>, <argument pos:start="27:47" pos:end="27:50"><expr pos:start="27:47" pos:end="27:50"><name pos:start="27:47" pos:end="27:50">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="27:53" pos:end="27:53">*</operator> <name pos:start="27:55" pos:end="27:65">CHECK_COUNT</name> <operator pos:start="27:67" pos:end="27:67">/</operator> <name pos:start="27:69" pos:end="27:79">check_count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:78"><expr pos:start="29:5" pos:end="31:77"><name pos:start="29:5" pos:end="29:13">fec_score</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="31:49"><name pos:start="29:17" pos:end="29:23">analyze</name><argument_list pos:start="29:24" pos:end="31:49">(<argument pos:start="29:25" pos:end="29:30"><expr pos:start="29:25" pos:end="29:30"><name pos:start="29:25" pos:end="29:30"><name pos:start="29:25" pos:end="29:25">p</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:30">buf</name></name></expr></argument>, <argument pos:start="29:33" pos:end="29:64"><expr pos:start="29:33" pos:end="29:64"><name pos:start="29:33" pos:end="29:50">TS_FEC_PACKET_SIZE</name> <operator pos:start="29:52" pos:end="29:52">*</operator> <name pos:start="29:54" pos:end="29:64">check_count</name></expr></argument>,

                        <argument pos:start="31:25" pos:end="31:42"><expr pos:start="31:25" pos:end="31:42"><name pos:start="31:25" pos:end="31:42">TS_FEC_PACKET_SIZE</name></expr></argument>, <argument pos:start="31:45" pos:end="31:48"><expr pos:start="31:45" pos:end="31:48"><name pos:start="31:45" pos:end="31:48">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="31:51" pos:end="31:51">*</operator> <name pos:start="31:53" pos:end="31:63">CHECK_COUNT</name> <operator pos:start="31:65" pos:end="31:65">/</operator> <name pos:start="31:67" pos:end="31:77">check_count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:42"><expr pos:start="33:5" pos:end="35:41"><call pos:start="33:5" pos:end="35:41"><name pos:start="33:5" pos:end="33:11">av_dlog</name><argument_list pos:start="33:12" pos:end="35:41">(<argument pos:start="33:13" pos:end="33:16"><expr pos:start="33:13" pos:end="33:16"><name pos:start="33:13" pos:end="33:16">NULL</name></expr></argument>, <argument pos:start="33:19" pos:end="33:63"><expr pos:start="33:19" pos:end="33:63"><literal type="string" pos:start="33:19" pos:end="33:63">"score: %d, dvhs_score: %d, fec_score: %d \n"</literal></expr></argument>,

            <argument pos:start="35:13" pos:end="35:17"><expr pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:17">score</name></expr></argument>, <argument pos:start="35:20" pos:end="35:29"><expr pos:start="35:20" pos:end="35:29"><name pos:start="35:20" pos:end="35:29">dvhs_score</name></expr></argument>, <argument pos:start="35:32" pos:end="35:40"><expr pos:start="35:32" pos:end="35:40"><name pos:start="35:32" pos:end="35:40">fec_score</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="41:50">/* we need a clear definition for the returned score otherwise

     * things will become messy sooner or later */</comment>

    <if_stmt pos:start="43:5" pos:end="57:35"><if pos:start="43:5" pos:end="45:55">if <condition pos:start="43:8" pos:end="43:61">(<expr pos:start="43:9" pos:end="43:60"><name pos:start="43:9" pos:end="43:13">score</name> <operator pos:start="43:15" pos:end="43:15">&gt;</operator> <name pos:start="43:17" pos:end="43:25">fec_score</name> <operator pos:start="43:27" pos:end="43:28">&amp;&amp;</operator> <name pos:start="43:30" pos:end="43:34">score</name> <operator pos:start="43:36" pos:end="43:36">&gt;</operator> <name pos:start="43:38" pos:end="43:47">dvhs_score</name> <operator pos:start="43:49" pos:end="43:50">&amp;&amp;</operator> <name pos:start="43:52" pos:end="43:56">score</name> <operator pos:start="43:58" pos:end="43:58">&gt;</operator> <literal type="number" pos:start="43:60" pos:end="43:60">6</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:55"><block_content pos:start="45:9" pos:end="45:55">

        <return pos:start="45:9" pos:end="45:55">return <expr pos:start="45:16" pos:end="45:54"><name pos:start="45:16" pos:end="45:32">AVPROBE_SCORE_MAX</name> <operator pos:start="45:34" pos:end="45:34">+</operator> <name pos:start="45:36" pos:end="45:40">score</name> <operator pos:start="45:42" pos:end="45:42">-</operator> <name pos:start="45:44" pos:end="45:54">CHECK_COUNT</name></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="47:5" pos:end="49:60">else if <condition pos:start="47:13" pos:end="47:76">(<expr pos:start="47:14" pos:end="47:75"><name pos:start="47:14" pos:end="47:23">dvhs_score</name> <operator pos:start="47:25" pos:end="47:25">&gt;</operator> <name pos:start="47:27" pos:end="47:31">score</name> <operator pos:start="47:33" pos:end="47:34">&amp;&amp;</operator> <name pos:start="47:36" pos:end="47:45">dvhs_score</name> <operator pos:start="47:47" pos:end="47:47">&gt;</operator> <name pos:start="47:49" pos:end="47:57">fec_score</name> <operator pos:start="47:59" pos:end="47:60">&amp;&amp;</operator> <name pos:start="47:62" pos:end="47:71">dvhs_score</name> <operator pos:start="47:73" pos:end="47:73">&gt;</operator> <literal type="number" pos:start="47:75" pos:end="47:75">6</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:60"><block_content pos:start="49:9" pos:end="49:60">

        <return pos:start="49:9" pos:end="49:60">return <expr pos:start="49:16" pos:end="49:59"><name pos:start="49:16" pos:end="49:32">AVPROBE_SCORE_MAX</name> <operator pos:start="49:34" pos:end="49:34">+</operator> <name pos:start="49:36" pos:end="49:45">dvhs_score</name> <operator pos:start="49:47" pos:end="49:47">-</operator> <name pos:start="49:49" pos:end="49:59">CHECK_COUNT</name></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="51:5" pos:end="53:59">else if <condition pos:start="51:13" pos:end="51:27">(<expr pos:start="51:14" pos:end="51:26"><name pos:start="51:14" pos:end="51:22">fec_score</name> <operator pos:start="51:24" pos:end="51:24">&gt;</operator> <literal type="number" pos:start="51:26" pos:end="51:26">6</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:59"><block_content pos:start="53:9" pos:end="53:59">

        <return pos:start="53:9" pos:end="53:59">return <expr pos:start="53:16" pos:end="53:58"><name pos:start="53:16" pos:end="53:32">AVPROBE_SCORE_MAX</name> <operator pos:start="53:34" pos:end="53:34">+</operator> <name pos:start="53:36" pos:end="53:44">fec_score</name> <operator pos:start="53:46" pos:end="53:46">-</operator> <name pos:start="53:48" pos:end="53:58">CHECK_COUNT</name></expr>;</return></block_content></block></if>

    <else pos:start="55:5" pos:end="57:35">else<block type="pseudo" pos:start="57:9" pos:end="57:35"><block_content pos:start="57:9" pos:end="57:35">

        <return pos:start="57:9" pos:end="57:35">return <expr pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
