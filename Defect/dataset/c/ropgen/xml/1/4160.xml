<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4160.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">decode_ext_header</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">Wmv2Context</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">w</name></decl></parameter>)</parameter_list><block pos:start="1:45" pos:end="61:1">{<block_content pos:start="3:5" pos:end="59:13">

    <decl_stmt pos:start="3:5" pos:end="3:36"><decl pos:start="3:5" pos:end="3:35"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name><init pos:start="3:29" pos:end="3:35">= <expr pos:start="3:31" pos:end="3:35"><operator pos:start="3:31" pos:end="3:31">&amp;</operator><name pos:start="3:32" pos:end="3:35"><name pos:start="3:32" pos:end="3:32">w</name><operator pos:start="3:33" pos:end="3:34">-&gt;</operator><name pos:start="3:35" pos:end="3:35">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">GetBitContext</name></type> <name pos:start="5:19" pos:end="5:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">fps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">code</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="13:45"><if pos:start="13:5" pos:end="13:45">if<condition pos:start="13:7" pos:end="13:34">(<expr pos:start="13:8" pos:end="13:33"><name pos:start="13:8" pos:end="13:31"><name pos:start="13:8" pos:end="13:8">s</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:15">avctx</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:31">extradata_size</name></name><operator pos:start="13:32" pos:end="13:32">&lt;</operator><literal type="number" pos:start="13:33" pos:end="13:33">4</literal></expr>)</condition><block type="pseudo" pos:start="13:36" pos:end="13:45"><block_content pos:start="13:36" pos:end="13:45"> <return pos:start="13:36" pos:end="13:45">return <expr pos:start="13:43" pos:end="13:44"><operator pos:start="13:43" pos:end="13:43">-</operator><literal type="number" pos:start="13:44" pos:end="13:44">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:72"><expr pos:start="17:5" pos:end="17:71"><call pos:start="17:5" pos:end="17:71"><name pos:start="17:5" pos:end="17:17">init_get_bits</name><argument_list pos:start="17:18" pos:end="17:71">(<argument pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><operator pos:start="17:19" pos:end="17:19">&amp;</operator><name pos:start="17:20" pos:end="17:21">gb</name></expr></argument>, <argument pos:start="17:24" pos:end="17:42"><expr pos:start="17:24" pos:end="17:42"><name pos:start="17:24" pos:end="17:42"><name pos:start="17:24" pos:end="17:24">s</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:31">avctx</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:42">extradata</name></name></expr></argument>, <argument pos:start="17:45" pos:end="17:70"><expr pos:start="17:45" pos:end="17:70"><name pos:start="17:45" pos:end="17:68"><name pos:start="17:45" pos:end="17:45">s</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:52">avctx</name><operator pos:start="17:53" pos:end="17:54">-&gt;</operator><name pos:start="17:55" pos:end="17:68">extradata_size</name></name><operator pos:start="17:69" pos:end="17:69">*</operator><literal type="number" pos:start="17:70" pos:end="17:70">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:7">fps</name>                <operator pos:start="21:24" pos:end="21:24">=</operator> <call pos:start="21:26" pos:end="21:41"><name pos:start="21:26" pos:end="21:33">get_bits</name><argument_list pos:start="21:34" pos:end="21:41">(<argument pos:start="21:35" pos:end="21:37"><expr pos:start="21:35" pos:end="21:37"><operator pos:start="21:35" pos:end="21:35">&amp;</operator><name pos:start="21:36" pos:end="21:37">gb</name></expr></argument>, <argument pos:start="21:40" pos:end="21:40"><expr pos:start="21:40" pos:end="21:40"><literal type="number" pos:start="21:40" pos:end="21:40">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:15">bit_rate</name></name>        <operator pos:start="23:24" pos:end="23:24">=</operator> <call pos:start="23:26" pos:end="23:42"><name pos:start="23:26" pos:end="23:33">get_bits</name><argument_list pos:start="23:34" pos:end="23:42">(<argument pos:start="23:35" pos:end="23:37"><expr pos:start="23:35" pos:end="23:37"><operator pos:start="23:35" pos:end="23:35">&amp;</operator><name pos:start="23:36" pos:end="23:37">gb</name></expr></argument>, <argument pos:start="23:40" pos:end="23:41"><expr pos:start="23:40" pos:end="23:41"><literal type="number" pos:start="23:40" pos:end="23:41">11</literal></expr></argument>)</argument_list></call><operator pos:start="23:43" pos:end="23:43">*</operator><literal type="number" pos:start="23:44" pos:end="23:47">1024</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:5">w</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:16">mspel_bit</name></name>       <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:39"><name pos:start="25:26" pos:end="25:34">get_bits1</name><argument_list pos:start="25:35" pos:end="25:39">(<argument pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><operator pos:start="25:36" pos:end="25:36">&amp;</operator><name pos:start="25:37" pos:end="25:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:18">loop_filter</name></name>     <operator pos:start="27:24" pos:end="27:24">=</operator> <call pos:start="27:26" pos:end="27:39"><name pos:start="27:26" pos:end="27:34">get_bits1</name><argument_list pos:start="27:35" pos:end="27:39">(<argument pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><operator pos:start="27:36" pos:end="27:36">&amp;</operator><name pos:start="27:37" pos:end="27:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">w</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">abt_flag</name></name>        <operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="29:39"><name pos:start="29:26" pos:end="29:34">get_bits1</name><argument_list pos:start="29:35" pos:end="29:39">(<argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><operator pos:start="29:36" pos:end="29:36">&amp;</operator><name pos:start="29:37" pos:end="29:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:5">w</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:17">j_type_bit</name></name>      <operator pos:start="31:24" pos:end="31:24">=</operator> <call pos:start="31:26" pos:end="31:39"><name pos:start="31:26" pos:end="31:34">get_bits1</name><argument_list pos:start="31:35" pos:end="31:39">(<argument pos:start="31:36" pos:end="31:38"><expr pos:start="31:36" pos:end="31:38"><operator pos:start="31:36" pos:end="31:36">&amp;</operator><name pos:start="31:37" pos:end="31:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:40"><expr pos:start="33:5" pos:end="33:39"><name pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:5">w</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:23">top_left_mv_flag</name></name><operator pos:start="33:24" pos:end="33:24">=</operator> <call pos:start="33:26" pos:end="33:39"><name pos:start="33:26" pos:end="33:34">get_bits1</name><argument_list pos:start="33:35" pos:end="33:39">(<argument pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><operator pos:start="33:36" pos:end="33:36">&amp;</operator><name pos:start="33:37" pos:end="33:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:5">w</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:20">per_mb_rl_bit</name></name>   <operator pos:start="35:24" pos:end="35:24">=</operator> <call pos:start="35:26" pos:end="35:39"><name pos:start="35:26" pos:end="35:34">get_bits1</name><argument_list pos:start="35:35" pos:end="35:39">(<argument pos:start="35:36" pos:end="35:38"><expr pos:start="35:36" pos:end="35:38"><operator pos:start="35:36" pos:end="35:36">&amp;</operator><name pos:start="35:37" pos:end="35:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:42"><expr pos:start="37:5" pos:end="37:41"><name pos:start="37:5" pos:end="37:8">code</name>               <operator pos:start="37:24" pos:end="37:24">=</operator> <call pos:start="37:26" pos:end="37:41"><name pos:start="37:26" pos:end="37:33">get_bits</name><argument_list pos:start="37:34" pos:end="37:41">(<argument pos:start="37:35" pos:end="37:37"><expr pos:start="37:35" pos:end="37:37"><operator pos:start="37:35" pos:end="37:35">&amp;</operator><name pos:start="37:36" pos:end="37:37">gb</name></expr></argument>, <argument pos:start="37:40" pos:end="37:40"><expr pos:start="37:40" pos:end="37:40"><literal type="number" pos:start="37:40" pos:end="37:40">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="41:26"><if pos:start="41:5" pos:end="41:26">if<condition pos:start="41:7" pos:end="41:15">(<expr pos:start="41:8" pos:end="41:14"><name pos:start="41:8" pos:end="41:11">code</name><operator pos:start="41:12" pos:end="41:13">==</operator><literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:26"><block_content pos:start="41:17" pos:end="41:26"> <return pos:start="41:17" pos:end="41:26">return <expr pos:start="41:24" pos:end="41:25"><operator pos:start="41:24" pos:end="41:24">-</operator><literal type="number" pos:start="41:25" pos:end="41:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:42"><expr pos:start="45:5" pos:end="45:41"><name pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:19">slice_height</name></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <name pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:23">s</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:34">mb_height</name></name> <operator pos:start="45:36" pos:end="45:36">/</operator> <name pos:start="45:38" pos:end="45:41">code</name></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if<condition pos:start="49:7" pos:end="49:42">(<expr pos:start="49:8" pos:end="49:41"><name pos:start="49:8" pos:end="49:22"><name pos:start="49:8" pos:end="49:8">s</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:15">avctx</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:22">debug</name></name><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:41">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="49:43" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:14">

        <expr_stmt pos:start="51:9" pos:end="55:14"><expr pos:start="51:9" pos:end="55:13"><call pos:start="51:9" pos:end="55:13"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="55:13">(<argument pos:start="51:16" pos:end="51:23"><expr pos:start="51:16" pos:end="51:23"><name pos:start="51:16" pos:end="51:23"><name pos:start="51:16" pos:end="51:16">s</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:23">avctx</name></name></expr></argument>, <argument pos:start="51:26" pos:end="51:37"><expr pos:start="51:26" pos:end="51:37"><name pos:start="51:26" pos:end="51:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="51:40" pos:end="51:158"><expr pos:start="51:40" pos:end="51:158"><literal type="string" pos:start="51:40" pos:end="51:158">"fps:%d, br:%d, qpbit:%d, abt_flag:%d, j_type_bit:%d, tl_mv_flag:%d, mbrl_bit:%d, code:%d, loop_filter:%d, slices:%d\n"</literal></expr></argument>,

        <argument pos:start="53:9" pos:end="53:11"><expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">fps</name></expr></argument>, <argument pos:start="53:14" pos:end="53:24"><expr pos:start="53:14" pos:end="53:24"><name pos:start="53:14" pos:end="53:24"><name pos:start="53:14" pos:end="53:14">s</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:24">bit_rate</name></name></expr></argument>, <argument pos:start="53:27" pos:end="53:38"><expr pos:start="53:27" pos:end="53:38"><name pos:start="53:27" pos:end="53:38"><name pos:start="53:27" pos:end="53:27">w</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:38">mspel_bit</name></name></expr></argument>, <argument pos:start="53:41" pos:end="53:51"><expr pos:start="53:41" pos:end="53:51"><name pos:start="53:41" pos:end="53:51"><name pos:start="53:41" pos:end="53:41">w</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:51">abt_flag</name></name></expr></argument>, <argument pos:start="53:54" pos:end="53:66"><expr pos:start="53:54" pos:end="53:66"><name pos:start="53:54" pos:end="53:66"><name pos:start="53:54" pos:end="53:54">w</name><operator pos:start="53:55" pos:end="53:56">-&gt;</operator><name pos:start="53:57" pos:end="53:66">j_type_bit</name></name></expr></argument>, <argument pos:start="53:69" pos:end="53:87"><expr pos:start="53:69" pos:end="53:87"><name pos:start="53:69" pos:end="53:87"><name pos:start="53:69" pos:end="53:69">w</name><operator pos:start="53:70" pos:end="53:71">-&gt;</operator><name pos:start="53:72" pos:end="53:87">top_left_mv_flag</name></name></expr></argument>, <argument pos:start="53:90" pos:end="53:105"><expr pos:start="53:90" pos:end="53:105"><name pos:start="53:90" pos:end="53:105"><name pos:start="53:90" pos:end="53:90">w</name><operator pos:start="53:91" pos:end="53:92">-&gt;</operator><name pos:start="53:93" pos:end="53:105">per_mb_rl_bit</name></name></expr></argument>, <argument pos:start="53:108" pos:end="53:111"><expr pos:start="53:108" pos:end="53:111"><name pos:start="53:108" pos:end="53:111">code</name></expr></argument>, <argument pos:start="53:114" pos:end="53:127"><expr pos:start="53:114" pos:end="53:127"><name pos:start="53:114" pos:end="53:127"><name pos:start="53:114" pos:end="53:114">s</name><operator pos:start="53:115" pos:end="53:116">-&gt;</operator><name pos:start="53:117" pos:end="53:127">loop_filter</name></name></expr></argument>,

        <argument pos:start="55:9" pos:end="55:12"><expr pos:start="55:9" pos:end="55:12"><name pos:start="55:9" pos:end="55:12">code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
