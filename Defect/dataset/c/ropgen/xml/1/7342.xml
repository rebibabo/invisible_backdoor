<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7342.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">h261_decode_mb</name><parameter_list pos:start="1:26" pos:end="3:47">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:37">H261Context</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">h</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:46"><decl pos:start="3:27" pos:end="3:46"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:33">DCTELEM</name></type> <name pos:start="3:35" pos:end="3:46"><name pos:start="3:35" pos:end="3:39">block</name><index pos:start="3:40" pos:end="3:42">[<expr pos:start="3:41" pos:end="3:41"><literal type="number" pos:start="3:41" pos:end="3:41">6</literal></expr>]</index><index pos:start="3:43" pos:end="3:46">[<expr pos:start="3:44" pos:end="3:45"><literal type="number" pos:start="3:44" pos:end="3:45">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="223:1">{<block_content pos:start="7:5" pos:end="221:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier> <specifier pos:start="7:22" pos:end="7:26">const</specifier></type> <name pos:start="7:28" pos:end="7:28">s</name> <init pos:start="7:30" pos:end="7:36">= <expr pos:start="7:32" pos:end="7:36"><operator pos:start="7:32" pos:end="7:32">&amp;</operator><name pos:start="7:33" pos:end="7:36"><name pos:start="7:33" pos:end="7:33">h</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">cbp</name></decl>, <decl pos:start="9:17" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:18">xy</name></decl>, <decl pos:start="9:21" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:29">old_mtype</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:13"><expr pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:7">cbp</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <literal type="number" pos:start="13:11" pos:end="13:12">63</literal></expr>;</expr_stmt>

    <comment type="line" pos:start="15:5" pos:end="15:15">// Read mba</comment>

    <do pos:start="17:5" pos:end="23:40">do<block pos:start="17:7" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:83">

        <expr_stmt pos:start="19:9" pos:end="19:83"><expr pos:start="19:9" pos:end="19:82"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:9">h</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:19">mba_diff</name></name> <operator pos:start="19:21" pos:end="19:21">=</operator> <call pos:start="19:23" pos:end="19:80"><name pos:start="19:23" pos:end="19:30">get_vlc2</name><argument_list pos:start="19:31" pos:end="19:80">(<argument pos:start="19:32" pos:end="19:37"><expr pos:start="19:32" pos:end="19:37"><operator pos:start="19:32" pos:end="19:32">&amp;</operator><name pos:start="19:33" pos:end="19:37"><name pos:start="19:33" pos:end="19:33">s</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:37">gb</name></name></expr></argument>, <argument pos:start="19:40" pos:end="19:57"><expr pos:start="19:40" pos:end="19:57"><name pos:start="19:40" pos:end="19:57"><name pos:start="19:40" pos:end="19:51">h261_mba_vlc</name><operator pos:start="19:52" pos:end="19:52">.</operator><name pos:start="19:53" pos:end="19:57">table</name></name></expr></argument>, <argument pos:start="19:60" pos:end="19:76"><expr pos:start="19:60" pos:end="19:76"><name pos:start="19:60" pos:end="19:76">H261_MBA_VLC_BITS</name></expr></argument>, <argument pos:start="19:79" pos:end="19:79"><expr pos:start="19:79" pos:end="19:79"><literal type="number" pos:start="19:79" pos:end="19:79">2</literal></expr></argument>)</argument_list></call><operator pos:start="19:81" pos:end="19:81">+</operator><literal type="number" pos:start="19:82" pos:end="19:82">1</literal></expr>;</expr_stmt>

    </block_content>}</block>

    while<condition pos:start="23:10" pos:end="23:39">( <expr pos:start="23:12" pos:end="23:37"><name pos:start="23:12" pos:end="23:22"><name pos:start="23:12" pos:end="23:12">h</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:22">mba_diff</name></name> <operator pos:start="23:24" pos:end="23:25">==</operator> <name pos:start="23:27" pos:end="23:33">MAX_MBA</name> <operator pos:start="23:35" pos:end="23:35">+</operator> <literal type="number" pos:start="23:37" pos:end="23:37">1</literal></expr> )</condition>;</do> <comment type="line" pos:start="23:42" pos:end="23:52">// stuffing</comment>



    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if <condition pos:start="27:8" pos:end="27:26">( <expr pos:start="27:10" pos:end="27:24"><name pos:start="27:10" pos:end="27:20"><name pos:start="27:10" pos:end="27:10">h</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:20">mba_diff</name></name> <operator pos:start="27:22" pos:end="27:22">&lt;</operator> <literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr> )</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:34"><expr pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:5">h</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:18">current_mba</name></name> <operator pos:start="33:20" pos:end="33:21">+=</operator> <name pos:start="33:23" pos:end="33:33"><name pos:start="33:23" pos:end="33:23">h</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:33">mba_diff</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:35">( <expr pos:start="37:10" pos:end="37:33"><name pos:start="37:10" pos:end="37:23"><name pos:start="37:10" pos:end="37:10">h</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:23">current_mba</name></name> <operator pos:start="37:25" pos:end="37:25">&gt;</operator> <name pos:start="37:27" pos:end="37:33">MAX_MBA</name></expr> )</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    

    <expr_stmt pos:start="43:5" pos:end="43:70"><expr pos:start="43:5" pos:end="43:69"><name pos:start="43:5" pos:end="43:11"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:11">mb_x</name></name><operator pos:start="43:12" pos:end="43:12">=</operator> <operator pos:start="43:14" pos:end="43:14">(</operator><operator pos:start="43:15" pos:end="43:15">(</operator><name pos:start="43:16" pos:end="43:28"><name pos:start="43:16" pos:end="43:16">h</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:28">gob_number</name></name><operator pos:start="43:29" pos:end="43:29">-</operator><literal type="number" pos:start="43:30" pos:end="43:30">1</literal><operator pos:start="43:31" pos:end="43:31">)</operator> <operator pos:start="43:33" pos:end="43:33">%</operator> <literal type="number" pos:start="43:35" pos:end="43:35">2</literal><operator pos:start="43:36" pos:end="43:36">)</operator> <operator pos:start="43:38" pos:end="43:38">*</operator> <literal type="number" pos:start="43:40" pos:end="43:43">11</literal> <operator pos:start="43:43" pos:end="43:43">+</operator> <operator pos:start="43:45" pos:end="43:45">(</operator><operator pos:start="43:46" pos:end="43:46">(</operator><name pos:start="43:47" pos:end="43:60"><name pos:start="43:47" pos:end="43:47">h</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:60">current_mba</name></name><operator pos:start="43:61" pos:end="43:61">-</operator><literal type="number" pos:start="43:62" pos:end="43:62">1</literal><operator pos:start="43:63" pos:end="43:63">)</operator> <operator pos:start="43:65" pos:end="43:65">%</operator> <literal type="number" pos:start="43:67" pos:end="43:68">11</literal><operator pos:start="43:69" pos:end="43:69">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:69"><expr pos:start="45:5" pos:end="45:68"><name pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:11">mb_y</name></name><operator pos:start="45:12" pos:end="45:12">=</operator> <operator pos:start="45:14" pos:end="45:14">(</operator><operator pos:start="45:15" pos:end="45:15">(</operator><name pos:start="45:16" pos:end="45:28"><name pos:start="45:16" pos:end="45:16">h</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:28">gob_number</name></name><operator pos:start="45:29" pos:end="45:29">-</operator><literal type="number" pos:start="45:30" pos:end="45:30">1</literal><operator pos:start="45:31" pos:end="45:31">)</operator> <operator pos:start="45:33" pos:end="45:33">/</operator> <literal type="number" pos:start="45:35" pos:end="45:35">2</literal><operator pos:start="45:36" pos:end="45:36">)</operator> <operator pos:start="45:38" pos:end="45:38">*</operator> <literal type="number" pos:start="45:40" pos:end="45:42">3</literal> <operator pos:start="45:42" pos:end="45:42">+</operator> <operator pos:start="45:44" pos:end="45:44">(</operator><operator pos:start="45:45" pos:end="45:45">(</operator><name pos:start="45:46" pos:end="45:59"><name pos:start="45:46" pos:end="45:46">h</name><operator pos:start="45:47" pos:end="45:48">-&gt;</operator><name pos:start="45:49" pos:end="45:59">current_mba</name></name><operator pos:start="45:60" pos:end="45:60">-</operator><literal type="number" pos:start="45:61" pos:end="45:61">1</literal><operator pos:start="45:62" pos:end="45:62">)</operator> <operator pos:start="45:64" pos:end="45:64">/</operator> <literal type="number" pos:start="45:66" pos:end="45:67">11</literal><operator pos:start="45:68" pos:end="45:68">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:42"><expr pos:start="49:5" pos:end="49:41"><name pos:start="49:5" pos:end="49:6">xy</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <name pos:start="49:10" pos:end="49:16"><name pos:start="49:10" pos:end="49:10">s</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:16">mb_x</name></name> <operator pos:start="49:18" pos:end="49:18">+</operator> <name pos:start="49:20" pos:end="49:26"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:26">mb_y</name></name> <operator pos:start="49:28" pos:end="49:28">*</operator> <name pos:start="49:30" pos:end="49:41"><name pos:start="49:30" pos:end="49:30">s</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:41">mb_stride</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:27"><expr pos:start="53:5" pos:end="53:26"><call pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:23">ff_init_block_index</name><argument_list pos:start="53:24" pos:end="53:26">(<argument pos:start="53:25" pos:end="53:25"><expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:29"><expr pos:start="55:5" pos:end="55:28"><call pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:25">ff_update_block_index</name><argument_list pos:start="55:26" pos:end="55:28">(<argument pos:start="55:27" pos:end="55:27"><expr pos:start="55:27" pos:end="55:27"><name pos:start="55:27" pos:end="55:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:37"><expr pos:start="57:5" pos:end="57:36"><call pos:start="57:5" pos:end="57:36"><name pos:start="57:5" pos:end="57:23"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:10">dsp</name><operator pos:start="57:11" pos:end="57:11">.</operator><name pos:start="57:12" pos:end="57:23">clear_blocks</name></name><argument_list pos:start="57:24" pos:end="57:36">(<argument pos:start="57:25" pos:end="57:35"><expr pos:start="57:25" pos:end="57:35"><name pos:start="57:25" pos:end="57:35"><name pos:start="57:25" pos:end="57:25">s</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:32">block</name><index pos:start="57:33" pos:end="57:35">[<expr pos:start="57:34" pos:end="57:34"><literal type="number" pos:start="57:34" pos:end="57:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="61:5" pos:end="61:17">// Read mtype</comment>

    <expr_stmt pos:start="63:5" pos:end="63:25"><expr pos:start="63:5" pos:end="63:24"><name pos:start="63:5" pos:end="63:13">old_mtype</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:24"><name pos:start="63:17" pos:end="63:17">h</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:24">mtype</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:78"><expr pos:start="65:5" pos:end="65:77"><name pos:start="65:5" pos:end="65:12"><name pos:start="65:5" pos:end="65:5">h</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:12">mtype</name></name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:77"><name pos:start="65:16" pos:end="65:23">get_vlc2</name><argument_list pos:start="65:24" pos:end="65:77">(<argument pos:start="65:25" pos:end="65:30"><expr pos:start="65:25" pos:end="65:30"><operator pos:start="65:25" pos:end="65:25">&amp;</operator><name pos:start="65:26" pos:end="65:30"><name pos:start="65:26" pos:end="65:26">s</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:30">gb</name></name></expr></argument>, <argument pos:start="65:33" pos:end="65:52"><expr pos:start="65:33" pos:end="65:52"><name pos:start="65:33" pos:end="65:52"><name pos:start="65:33" pos:end="65:46">h261_mtype_vlc</name><operator pos:start="65:47" pos:end="65:47">.</operator><name pos:start="65:48" pos:end="65:52">table</name></name></expr></argument>, <argument pos:start="65:55" pos:end="65:73"><expr pos:start="65:55" pos:end="65:73"><name pos:start="65:55" pos:end="65:73">H261_MTYPE_VLC_BITS</name></expr></argument>, <argument pos:start="65:76" pos:end="65:76"><expr pos:start="65:76" pos:end="65:76"><literal type="number" pos:start="65:76" pos:end="65:76">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:40"><expr pos:start="67:5" pos:end="67:39"><name pos:start="67:5" pos:end="67:12"><name pos:start="67:5" pos:end="67:5">h</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:12">mtype</name></name> <operator pos:start="67:14" pos:end="67:14">=</operator> <name pos:start="67:16" pos:end="67:39"><name pos:start="67:16" pos:end="67:29">h261_mtype_map</name><index pos:start="67:30" pos:end="67:39">[<expr pos:start="67:31" pos:end="67:38"><name pos:start="67:31" pos:end="67:38"><name pos:start="67:31" pos:end="67:31">h</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:38">mtype</name></name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="73:27"><if pos:start="71:5" pos:end="73:27">if <condition pos:start="71:8" pos:end="71:26">(<expr pos:start="71:9" pos:end="71:25"><call pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:14">IS_FIL</name> <argument_list pos:start="71:16" pos:end="71:25">(<argument pos:start="71:17" pos:end="71:24"><expr pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:17">h</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:24">mtype</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:27"><block_content pos:start="73:9" pos:end="73:27">

        <expr_stmt pos:start="73:9" pos:end="73:27"><expr pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:9">h</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:22">loop_filter</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <literal type="number" pos:start="73:26" pos:end="73:26">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="77:5" pos:end="77:18">// Read mquant</comment>

    <if_stmt pos:start="79:5" pos:end="83:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:32">( <expr pos:start="79:10" pos:end="79:30"><call pos:start="79:10" pos:end="79:30"><name pos:start="79:10" pos:end="79:17">IS_QUANT</name> <argument_list pos:start="79:19" pos:end="79:30">( <argument pos:start="79:21" pos:end="79:28"><expr pos:start="79:21" pos:end="79:28"><name pos:start="79:21" pos:end="79:28"><name pos:start="79:21" pos:end="79:21">h</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:28">mtype</name></name></expr></argument> )</argument_list></call></expr> )</condition><block pos:start="79:33" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:46">

        <expr_stmt pos:start="81:9" pos:end="81:46"><expr pos:start="81:9" pos:end="81:45"><call pos:start="81:9" pos:end="81:45"><name pos:start="81:9" pos:end="81:21">ff_set_qscale</name><argument_list pos:start="81:22" pos:end="81:45">(<argument pos:start="81:23" pos:end="81:23"><expr pos:start="81:23" pos:end="81:23"><name pos:start="81:23" pos:end="81:23">s</name></expr></argument>, <argument pos:start="81:26" pos:end="81:44"><expr pos:start="81:26" pos:end="81:44"><call pos:start="81:26" pos:end="81:44"><name pos:start="81:26" pos:end="81:33">get_bits</name><argument_list pos:start="81:34" pos:end="81:44">(<argument pos:start="81:35" pos:end="81:40"><expr pos:start="81:35" pos:end="81:40"><operator pos:start="81:35" pos:end="81:35">&amp;</operator><name pos:start="81:36" pos:end="81:40"><name pos:start="81:36" pos:end="81:36">s</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:40">gb</name></name></expr></argument>, <argument pos:start="81:43" pos:end="81:43"><expr pos:start="81:43" pos:end="81:43"><literal type="number" pos:start="81:43" pos:end="81:43">5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:40"><expr pos:start="87:5" pos:end="87:39"><name pos:start="87:5" pos:end="87:15"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:15">mb_intra</name></name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:39"><name pos:start="87:19" pos:end="87:29">IS_INTRA4x4</name><argument_list pos:start="87:30" pos:end="87:39">(<argument pos:start="87:31" pos:end="87:38"><expr pos:start="87:31" pos:end="87:38"><name pos:start="87:31" pos:end="87:38"><name pos:start="87:31" pos:end="87:31">h</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:38">mtype</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="91:5" pos:end="91:14">// Read mv</comment>

    <if_stmt pos:start="93:5" pos:end="125:5"><if pos:start="93:5" pos:end="125:5">if <condition pos:start="93:8" pos:end="93:32">( <expr pos:start="93:10" pos:end="93:30"><call pos:start="93:10" pos:end="93:30"><name pos:start="93:10" pos:end="93:17">IS_16X16</name> <argument_list pos:start="93:19" pos:end="93:30">( <argument pos:start="93:21" pos:end="93:28"><expr pos:start="93:21" pos:end="93:28"><name pos:start="93:21" pos:end="93:28"><name pos:start="93:21" pos:end="93:21">h</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:28">mtype</name></name></expr></argument> )</argument_list></call></expr> )</condition><block pos:start="93:33" pos:end="125:5">{<block_content pos:start="107:9" pos:end="123:70">

        <comment type="line" pos:start="95:9" pos:end="95:127">// Motion vector data is included for all MC macroblocks. MVD is obtained from the macroblock vector by subtracting the</comment>

        <comment type="line" pos:start="97:9" pos:end="97:133">// vector of the preceding macroblock. For this calculation the vector of the preceding macroblock is regarded as zero in the</comment>

        <comment type="line" pos:start="99:9" pos:end="99:38">// following three situations:</comment>

        <comment type="line" pos:start="101:9" pos:end="101:58">// 1) evaluating MVD for macroblocks 1, 12 and 23;</comment>

        <comment type="line" pos:start="103:9" pos:end="103:95">// 2) evaluating MVD for macroblocks in which MBA does not represent a difference of 1;</comment>

        <comment type="line" pos:start="105:9" pos:end="105:58">// 3) MTYPE of the previous macroblock was not MC.</comment>

        <if_stmt pos:start="107:9" pos:end="117:9"><if pos:start="107:9" pos:end="117:9">if <condition pos:start="107:12" pos:end="109:64">( <expr pos:start="107:14" pos:end="109:63"><operator pos:start="107:14" pos:end="107:14">(</operator> <name pos:start="107:16" pos:end="107:29"><name pos:start="107:16" pos:end="107:16">h</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:29">current_mba</name></name> <operator pos:start="107:31" pos:end="107:32">==</operator> <literal type="number" pos:start="107:34" pos:end="107:34">1</literal> <operator pos:start="107:36" pos:end="107:36">)</operator> <operator pos:start="107:38" pos:end="107:39">||</operator> <operator pos:start="107:41" pos:end="107:41">(</operator> <name pos:start="107:43" pos:end="107:56"><name pos:start="107:43" pos:end="107:43">h</name><operator pos:start="107:44" pos:end="107:45">-&gt;</operator><name pos:start="107:46" pos:end="107:56">current_mba</name></name> <operator pos:start="107:58" pos:end="107:59">==</operator> <literal type="number" pos:start="107:61" pos:end="107:62">12</literal> <operator pos:start="107:64" pos:end="107:64">)</operator> <operator pos:start="107:66" pos:end="107:67">||</operator> <operator pos:start="107:69" pos:end="107:69">(</operator> <name pos:start="107:71" pos:end="107:84"><name pos:start="107:71" pos:end="107:71">h</name><operator pos:start="107:72" pos:end="107:73">-&gt;</operator><name pos:start="107:74" pos:end="107:84">current_mba</name></name> <operator pos:start="107:86" pos:end="107:87">==</operator> <literal type="number" pos:start="107:89" pos:end="107:90">23</literal> <operator pos:start="107:92" pos:end="107:92">)</operator> <operator pos:start="107:94" pos:end="107:95">||</operator>

             <operator pos:start="109:14" pos:end="109:14">(</operator> <name pos:start="109:16" pos:end="109:26"><name pos:start="109:16" pos:end="109:16">h</name><operator pos:start="109:17" pos:end="109:18">-&gt;</operator><name pos:start="109:19" pos:end="109:26">mba_diff</name></name> <operator pos:start="109:28" pos:end="109:29">!=</operator> <literal type="number" pos:start="109:31" pos:end="109:31">1</literal><operator pos:start="109:32" pos:end="109:32">)</operator> <operator pos:start="109:34" pos:end="109:35">||</operator> <operator pos:start="109:37" pos:end="109:37">(</operator> <operator pos:start="109:39" pos:end="109:39">!</operator><call pos:start="109:40" pos:end="109:61"><name pos:start="109:40" pos:end="109:47">IS_16X16</name> <argument_list pos:start="109:49" pos:end="109:61">( <argument pos:start="109:51" pos:end="109:59"><expr pos:start="109:51" pos:end="109:59"><name pos:start="109:51" pos:end="109:59">old_mtype</name></expr></argument> )</argument_list></call> <operator pos:start="109:63" pos:end="109:63">)</operator></expr>)</condition>

        <block pos:start="111:9" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:32">

            <expr_stmt pos:start="113:13" pos:end="113:32"><expr pos:start="113:13" pos:end="113:31"><name pos:start="113:13" pos:end="113:27"><name pos:start="113:13" pos:end="113:13">h</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:27">current_mv_x</name></name> <operator pos:start="113:29" pos:end="113:29">=</operator> <literal type="number" pos:start="113:31" pos:end="113:31">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:32"><expr pos:start="115:13" pos:end="115:31"><name pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:13">h</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:27">current_mv_y</name></name> <operator pos:start="115:29" pos:end="115:29">=</operator> <literal type="number" pos:start="115:31" pos:end="115:31">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:70"><expr pos:start="121:9" pos:end="121:69"><name pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:9">h</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:23">current_mv_x</name></name><operator pos:start="121:24" pos:end="121:24">=</operator> <call pos:start="121:26" pos:end="121:69"><name pos:start="121:26" pos:end="121:44">decode_mv_component</name><argument_list pos:start="121:45" pos:end="121:69">(<argument pos:start="121:46" pos:end="121:51"><expr pos:start="121:46" pos:end="121:51"><operator pos:start="121:46" pos:end="121:46">&amp;</operator><name pos:start="121:47" pos:end="121:51"><name pos:start="121:47" pos:end="121:47">s</name><operator pos:start="121:48" pos:end="121:49">-&gt;</operator><name pos:start="121:50" pos:end="121:51">gb</name></name></expr></argument>, <argument pos:start="121:54" pos:end="121:68"><expr pos:start="121:54" pos:end="121:68"><name pos:start="121:54" pos:end="121:68"><name pos:start="121:54" pos:end="121:54">h</name><operator pos:start="121:55" pos:end="121:56">-&gt;</operator><name pos:start="121:57" pos:end="121:68">current_mv_x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:70"><expr pos:start="123:9" pos:end="123:69"><name pos:start="123:9" pos:end="123:23"><name pos:start="123:9" pos:end="123:9">h</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:23">current_mv_y</name></name><operator pos:start="123:24" pos:end="123:24">=</operator> <call pos:start="123:26" pos:end="123:69"><name pos:start="123:26" pos:end="123:44">decode_mv_component</name><argument_list pos:start="123:45" pos:end="123:69">(<argument pos:start="123:46" pos:end="123:51"><expr pos:start="123:46" pos:end="123:51"><operator pos:start="123:46" pos:end="123:46">&amp;</operator><name pos:start="123:47" pos:end="123:51"><name pos:start="123:47" pos:end="123:47">s</name><operator pos:start="123:48" pos:end="123:49">-&gt;</operator><name pos:start="123:50" pos:end="123:51">gb</name></name></expr></argument>, <argument pos:start="123:54" pos:end="123:68"><expr pos:start="123:54" pos:end="123:68"><name pos:start="123:54" pos:end="123:68"><name pos:start="123:54" pos:end="123:54">h</name><operator pos:start="123:55" pos:end="123:56">-&gt;</operator><name pos:start="123:57" pos:end="123:68">current_mv_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="129:5" pos:end="129:15">// Read cbp</comment>

    <if_stmt pos:start="131:5" pos:end="135:5"><if pos:start="131:5" pos:end="135:5">if <condition pos:start="131:8" pos:end="131:30">( <expr pos:start="131:10" pos:end="131:28"><call pos:start="131:10" pos:end="131:28"><name pos:start="131:10" pos:end="131:16">HAS_CBP</name><argument_list pos:start="131:17" pos:end="131:28">( <argument pos:start="131:19" pos:end="131:26"><expr pos:start="131:19" pos:end="131:26"><name pos:start="131:19" pos:end="131:26"><name pos:start="131:19" pos:end="131:19">h</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:26">mtype</name></name></expr></argument> )</argument_list></call></expr> )</condition><block pos:start="131:31" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:77">

        <expr_stmt pos:start="133:9" pos:end="133:77"><expr pos:start="133:9" pos:end="133:76"><name pos:start="133:9" pos:end="133:11">cbp</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <call pos:start="133:15" pos:end="133:72"><name pos:start="133:15" pos:end="133:22">get_vlc2</name><argument_list pos:start="133:23" pos:end="133:72">(<argument pos:start="133:24" pos:end="133:29"><expr pos:start="133:24" pos:end="133:29"><operator pos:start="133:24" pos:end="133:24">&amp;</operator><name pos:start="133:25" pos:end="133:29"><name pos:start="133:25" pos:end="133:25">s</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:29">gb</name></name></expr></argument>, <argument pos:start="133:32" pos:end="133:49"><expr pos:start="133:32" pos:end="133:49"><name pos:start="133:32" pos:end="133:49"><name pos:start="133:32" pos:end="133:43">h261_cbp_vlc</name><operator pos:start="133:44" pos:end="133:44">.</operator><name pos:start="133:45" pos:end="133:49">table</name></name></expr></argument>, <argument pos:start="133:52" pos:end="133:68"><expr pos:start="133:52" pos:end="133:68"><name pos:start="133:52" pos:end="133:68">H261_CBP_VLC_BITS</name></expr></argument>, <argument pos:start="133:71" pos:end="133:71"><expr pos:start="133:71" pos:end="133:71"><literal type="number" pos:start="133:71" pos:end="133:71">2</literal></expr></argument>)</argument_list></call> <operator pos:start="133:74" pos:end="133:74">+</operator> <literal type="number" pos:start="133:76" pos:end="133:76">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if<condition pos:start="139:7" pos:end="139:19">(<expr pos:start="139:8" pos:end="139:18"><name pos:start="139:8" pos:end="139:18"><name pos:start="139:8" pos:end="139:8">s</name><operator pos:start="139:9" pos:end="139:10">-&gt;</operator><name pos:start="139:11" pos:end="139:18">mb_intra</name></name></expr>)</condition><block pos:start="139:20" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:19">

        <expr_stmt pos:start="141:9" pos:end="141:54"><expr pos:start="141:9" pos:end="141:53"><name pos:start="141:9" pos:end="141:38"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:26">current_picture</name><operator pos:start="141:27" pos:end="141:27">.</operator><name pos:start="141:28" pos:end="141:34">mb_type</name><index pos:start="141:35" pos:end="141:38">[<expr pos:start="141:36" pos:end="141:37"><name pos:start="141:36" pos:end="141:37">xy</name></expr>]</index></name><operator pos:start="141:39" pos:end="141:39">=</operator> <name pos:start="141:41" pos:end="141:53">MB_TYPE_INTRA</name></expr>;</expr_stmt>

        <goto pos:start="143:9" pos:end="143:19">goto <name pos:start="143:14" pos:end="143:18">intra</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="149:5" pos:end="149:24">//set motion vectors</comment>

    <expr_stmt pos:start="151:5" pos:end="151:31"><expr pos:start="151:5" pos:end="151:30"><name pos:start="151:5" pos:end="151:13"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:13">mv_dir</name></name> <operator pos:start="151:15" pos:end="151:15">=</operator> <name pos:start="151:17" pos:end="151:30">MV_DIR_FORWARD</name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:31"><expr pos:start="153:5" pos:end="153:30"><name pos:start="153:5" pos:end="153:14"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:14">mv_type</name></name> <operator pos:start="153:16" pos:end="153:16">=</operator> <name pos:start="153:18" pos:end="153:30">MV_TYPE_16X16</name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:63"><expr pos:start="155:5" pos:end="155:62"><name pos:start="155:5" pos:end="155:34"><name pos:start="155:5" pos:end="155:5">s</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:22">current_picture</name><operator pos:start="155:23" pos:end="155:23">.</operator><name pos:start="155:24" pos:end="155:30">mb_type</name><index pos:start="155:31" pos:end="155:34">[<expr pos:start="155:32" pos:end="155:33"><name pos:start="155:32" pos:end="155:33">xy</name></expr>]</index></name><operator pos:start="155:35" pos:end="155:35">=</operator> <name pos:start="155:37" pos:end="155:49">MB_TYPE_16x16</name> <operator pos:start="155:51" pos:end="155:51">|</operator> <name pos:start="155:53" pos:end="155:62">MB_TYPE_L0</name></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="171:5"><if pos:start="157:5" pos:end="163:5">if<condition pos:start="157:7" pos:end="157:29">(<expr pos:start="157:8" pos:end="157:28"><call pos:start="157:8" pos:end="157:28"><name pos:start="157:8" pos:end="157:15">IS_16X16</name> <argument_list pos:start="157:17" pos:end="157:28">( <argument pos:start="157:19" pos:end="157:26"><expr pos:start="157:19" pos:end="157:26"><name pos:start="157:19" pos:end="157:26"><name pos:start="157:19" pos:end="157:19">h</name><operator pos:start="157:20" pos:end="157:21">-&gt;</operator><name pos:start="157:22" pos:end="157:26">mtype</name></name></expr></argument> )</argument_list></call></expr>)</condition><block pos:start="157:30" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:45">

        <expr_stmt pos:start="159:9" pos:end="159:45"><expr pos:start="159:9" pos:end="159:44"><name pos:start="159:9" pos:end="159:22"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:13">mv</name><index pos:start="159:14" pos:end="159:16">[<expr pos:start="159:15" pos:end="159:15"><literal type="number" pos:start="159:15" pos:end="159:15">0</literal></expr>]</index><index pos:start="159:17" pos:end="159:19">[<expr pos:start="159:18" pos:end="159:18"><literal type="number" pos:start="159:18" pos:end="159:18">0</literal></expr>]</index><index pos:start="159:20" pos:end="159:22">[<expr pos:start="159:21" pos:end="159:21"><literal type="number" pos:start="159:21" pos:end="159:21">0</literal></expr>]</index></name> <operator pos:start="159:24" pos:end="159:24">=</operator> <name pos:start="159:26" pos:end="159:40"><name pos:start="159:26" pos:end="159:26">h</name><operator pos:start="159:27" pos:end="159:28">-&gt;</operator><name pos:start="159:29" pos:end="159:40">current_mv_x</name></name> <operator pos:start="159:42" pos:end="159:42">*</operator> <literal type="number" pos:start="159:44" pos:end="159:44">2</literal></expr>;</expr_stmt><comment type="line" pos:start="159:46" pos:end="159:87">//gets divided by 2 in motion compensation</comment>

        <expr_stmt pos:start="161:9" pos:end="161:45"><expr pos:start="161:9" pos:end="161:44"><name pos:start="161:9" pos:end="161:22"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:13">mv</name><index pos:start="161:14" pos:end="161:16">[<expr pos:start="161:15" pos:end="161:15"><literal type="number" pos:start="161:15" pos:end="161:15">0</literal></expr>]</index><index pos:start="161:17" pos:end="161:19">[<expr pos:start="161:18" pos:end="161:18"><literal type="number" pos:start="161:18" pos:end="161:18">0</literal></expr>]</index><index pos:start="161:20" pos:end="161:22">[<expr pos:start="161:21" pos:end="161:21"><literal type="number" pos:start="161:21" pos:end="161:21">1</literal></expr>]</index></name> <operator pos:start="161:24" pos:end="161:24">=</operator> <name pos:start="161:26" pos:end="161:40"><name pos:start="161:26" pos:end="161:26">h</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:40">current_mv_y</name></name> <operator pos:start="161:42" pos:end="161:42">*</operator> <literal type="number" pos:start="161:44" pos:end="161:44">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="165:5" pos:end="171:5">else<block pos:start="165:9" pos:end="171:5">{<block_content pos:start="167:9" pos:end="169:45">

        <expr_stmt pos:start="167:9" pos:end="167:45"><expr pos:start="167:9" pos:end="167:44"><name pos:start="167:9" pos:end="167:23"><name pos:start="167:9" pos:end="167:9">h</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:23">current_mv_x</name></name> <operator pos:start="167:25" pos:end="167:25">=</operator> <name pos:start="167:27" pos:end="167:40"><name pos:start="167:27" pos:end="167:27">s</name><operator pos:start="167:28" pos:end="167:29">-&gt;</operator><name pos:start="167:30" pos:end="167:31">mv</name><index pos:start="167:32" pos:end="167:34">[<expr pos:start="167:33" pos:end="167:33"><literal type="number" pos:start="167:33" pos:end="167:33">0</literal></expr>]</index><index pos:start="167:35" pos:end="167:37">[<expr pos:start="167:36" pos:end="167:36"><literal type="number" pos:start="167:36" pos:end="167:36">0</literal></expr>]</index><index pos:start="167:38" pos:end="167:40">[<expr pos:start="167:39" pos:end="167:39"><literal type="number" pos:start="167:39" pos:end="167:39">0</literal></expr>]</index></name> <operator pos:start="167:42" pos:end="167:42">=</operator> <literal type="number" pos:start="167:44" pos:end="167:44">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:45"><expr pos:start="169:9" pos:end="169:44"><name pos:start="169:9" pos:end="169:23"><name pos:start="169:9" pos:end="169:9">h</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:23">current_mv_x</name></name> <operator pos:start="169:25" pos:end="169:25">=</operator> <name pos:start="169:27" pos:end="169:40"><name pos:start="169:27" pos:end="169:27">s</name><operator pos:start="169:28" pos:end="169:29">-&gt;</operator><name pos:start="169:30" pos:end="169:31">mv</name><index pos:start="169:32" pos:end="169:34">[<expr pos:start="169:33" pos:end="169:33"><literal type="number" pos:start="169:33" pos:end="169:33">0</literal></expr>]</index><index pos:start="169:35" pos:end="169:37">[<expr pos:start="169:36" pos:end="169:36"><literal type="number" pos:start="169:36" pos:end="169:36">0</literal></expr>]</index><index pos:start="169:38" pos:end="169:40">[<expr pos:start="169:39" pos:end="169:39"><literal type="number" pos:start="169:39" pos:end="169:39">1</literal></expr>]</index></name> <operator pos:start="169:42" pos:end="169:42">=</operator> <literal type="number" pos:start="169:44" pos:end="169:44">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="175:1" pos:end="175:6"><name pos:start="175:1" pos:end="175:5">intra</name>:</label>

    <comment type="block" pos:start="177:5" pos:end="177:27">/* decode each block */</comment>

    <if_stmt pos:start="179:5" pos:end="193:5"><if pos:start="179:5" pos:end="193:5">if<condition pos:start="179:7" pos:end="179:40">(<expr pos:start="179:8" pos:end="179:39"><name pos:start="179:8" pos:end="179:18"><name pos:start="179:8" pos:end="179:8">s</name><operator pos:start="179:9" pos:end="179:10">-&gt;</operator><name pos:start="179:11" pos:end="179:18">mb_intra</name></name> <operator pos:start="179:20" pos:end="179:21">||</operator> <call pos:start="179:23" pos:end="179:39"><name pos:start="179:23" pos:end="179:29">HAS_CBP</name><argument_list pos:start="179:30" pos:end="179:39">(<argument pos:start="179:31" pos:end="179:38"><expr pos:start="179:31" pos:end="179:38"><name pos:start="179:31" pos:end="179:38"><name pos:start="179:31" pos:end="179:31">h</name><operator pos:start="179:32" pos:end="179:33">-&gt;</operator><name pos:start="179:34" pos:end="179:38">mtype</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="179:41" pos:end="193:5">{<block_content pos:start="181:9" pos:end="191:9">

        <for pos:start="181:9" pos:end="191:9">for <control pos:start="181:13" pos:end="181:31">(<init pos:start="181:14" pos:end="181:19"><expr pos:start="181:14" pos:end="181:18"><name pos:start="181:14" pos:end="181:14">i</name> <operator pos:start="181:16" pos:end="181:16">=</operator> <literal type="number" pos:start="181:18" pos:end="181:18">0</literal></expr>;</init> <condition pos:start="181:21" pos:end="181:26"><expr pos:start="181:21" pos:end="181:25"><name pos:start="181:21" pos:end="181:21">i</name> <operator pos:start="181:23" pos:end="181:23">&lt;</operator> <literal type="number" pos:start="181:25" pos:end="181:25">6</literal></expr>;</condition> <incr pos:start="181:28" pos:end="181:30"><expr pos:start="181:28" pos:end="181:30"><name pos:start="181:28" pos:end="181:28">i</name><operator pos:start="181:29" pos:end="181:30">++</operator></expr></incr>)</control> <block pos:start="181:33" pos:end="191:9">{<block_content pos:start="183:13" pos:end="189:21">

            <if_stmt pos:start="183:13" pos:end="187:13"><if pos:start="183:13" pos:end="187:13">if <condition pos:start="183:16" pos:end="183:62">(<expr pos:start="183:17" pos:end="183:61"><call pos:start="183:17" pos:end="183:57"><name pos:start="183:17" pos:end="183:33">h261_decode_block</name><argument_list pos:start="183:34" pos:end="183:57">(<argument pos:start="183:35" pos:end="183:35"><expr pos:start="183:35" pos:end="183:35"><name pos:start="183:35" pos:end="183:35">h</name></expr></argument>, <argument pos:start="183:38" pos:end="183:45"><expr pos:start="183:38" pos:end="183:45"><name pos:start="183:38" pos:end="183:45"><name pos:start="183:38" pos:end="183:42">block</name><index pos:start="183:43" pos:end="183:45">[<expr pos:start="183:44" pos:end="183:44"><name pos:start="183:44" pos:end="183:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="183:48" pos:end="183:48"><expr pos:start="183:48" pos:end="183:48"><name pos:start="183:48" pos:end="183:48">i</name></expr></argument>, <argument pos:start="183:51" pos:end="183:56"><expr pos:start="183:51" pos:end="183:56"><name pos:start="183:51" pos:end="183:53">cbp</name><operator pos:start="183:54" pos:end="183:54">&amp;</operator><literal type="number" pos:start="183:55" pos:end="183:56">32</literal></expr></argument>)</argument_list></call> <operator pos:start="183:59" pos:end="183:59">&lt;</operator> <literal type="number" pos:start="183:61" pos:end="183:61">0</literal></expr>)</condition><block pos:start="183:63" pos:end="187:13">{<block_content pos:start="185:17" pos:end="185:26">

                <return pos:start="185:17" pos:end="185:26">return <expr pos:start="185:24" pos:end="185:25"><operator pos:start="185:24" pos:end="185:24">-</operator><literal type="number" pos:start="185:25" pos:end="185:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:21"><expr pos:start="189:13" pos:end="189:20"><name pos:start="189:13" pos:end="189:15">cbp</name><operator pos:start="189:16" pos:end="189:17">+=</operator><name pos:start="189:18" pos:end="189:20">cbp</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="197:5" pos:end="197:35">/* per-MB end of slice check */</comment>

    <block pos:start="199:5" pos:end="219:5">{<block_content pos:start="201:9" pos:end="217:9">

        <decl_stmt pos:start="201:9" pos:end="201:37"><decl pos:start="201:9" pos:end="201:36"><type pos:start="201:9" pos:end="201:11"><name pos:start="201:9" pos:end="201:11">int</name></type> <name pos:start="201:13" pos:end="201:13">v</name><init pos:start="201:14" pos:end="201:36">= <expr pos:start="201:16" pos:end="201:36"><call pos:start="201:16" pos:end="201:36"><name pos:start="201:16" pos:end="201:24">show_bits</name><argument_list pos:start="201:25" pos:end="201:36">(<argument pos:start="201:26" pos:end="201:31"><expr pos:start="201:26" pos:end="201:31"><operator pos:start="201:26" pos:end="201:26">&amp;</operator><name pos:start="201:27" pos:end="201:31"><name pos:start="201:27" pos:end="201:27">s</name><operator pos:start="201:28" pos:end="201:29">-&gt;</operator><name pos:start="201:30" pos:end="201:31">gb</name></name></expr></argument>, <argument pos:start="201:34" pos:end="201:35"><expr pos:start="201:34" pos:end="201:35"><literal type="number" pos:start="201:34" pos:end="201:35">15</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="205:9" pos:end="209:9"><if pos:start="205:9" pos:end="209:9">if<condition pos:start="205:11" pos:end="205:60">(<expr pos:start="205:12" pos:end="205:59"><call pos:start="205:12" pos:end="205:33"><name pos:start="205:12" pos:end="205:25">get_bits_count</name><argument_list pos:start="205:26" pos:end="205:33">(<argument pos:start="205:27" pos:end="205:32"><expr pos:start="205:27" pos:end="205:32"><operator pos:start="205:27" pos:end="205:27">&amp;</operator><name pos:start="205:28" pos:end="205:32"><name pos:start="205:28" pos:end="205:28">s</name><operator pos:start="205:29" pos:end="205:30">-&gt;</operator><name pos:start="205:31" pos:end="205:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="205:35" pos:end="205:35">+</operator> <literal type="number" pos:start="205:37" pos:end="205:38">15</literal> <operator pos:start="205:40" pos:end="205:40">&gt;</operator> <name pos:start="205:42" pos:end="205:59"><name pos:start="205:42" pos:end="205:42">s</name><operator pos:start="205:43" pos:end="205:44">-&gt;</operator><name pos:start="205:45" pos:end="205:46">gb</name><operator pos:start="205:47" pos:end="205:47">.</operator><name pos:start="205:48" pos:end="205:59">size_in_bits</name></name></expr>)</condition><block pos:start="205:61" pos:end="209:9">{<block_content pos:start="207:13" pos:end="207:66">

            <expr_stmt pos:start="207:13" pos:end="207:66"><expr pos:start="207:13" pos:end="207:65"><name pos:start="207:13" pos:end="207:13">v</name><operator pos:start="207:14" pos:end="207:16">&gt;&gt;=</operator> <call pos:start="207:18" pos:end="207:39"><name pos:start="207:18" pos:end="207:31">get_bits_count</name><argument_list pos:start="207:32" pos:end="207:39">(<argument pos:start="207:33" pos:end="207:38"><expr pos:start="207:33" pos:end="207:38"><operator pos:start="207:33" pos:end="207:33">&amp;</operator><name pos:start="207:34" pos:end="207:38"><name pos:start="207:34" pos:end="207:34">s</name><operator pos:start="207:35" pos:end="207:36">-&gt;</operator><name pos:start="207:37" pos:end="207:38">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="207:41" pos:end="207:41">+</operator> <literal type="number" pos:start="207:43" pos:end="207:46">15</literal> <operator pos:start="207:46" pos:end="207:46">-</operator> <name pos:start="207:48" pos:end="207:65"><name pos:start="207:48" pos:end="207:48">s</name><operator pos:start="207:49" pos:end="207:50">-&gt;</operator><name pos:start="207:51" pos:end="207:52">gb</name><operator pos:start="207:53" pos:end="207:53">.</operator><name pos:start="207:54" pos:end="207:65">size_in_bits</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="213:9" pos:end="217:9"><if pos:start="213:9" pos:end="217:9">if<condition pos:start="213:11" pos:end="213:16">(<expr pos:start="213:12" pos:end="213:15"><name pos:start="213:12" pos:end="213:12">v</name><operator pos:start="213:13" pos:end="213:14">==</operator><literal type="number" pos:start="213:15" pos:end="213:15">0</literal></expr>)</condition><block pos:start="213:17" pos:end="217:9">{<block_content pos:start="215:13" pos:end="215:29">

            <return pos:start="215:13" pos:end="215:29">return <expr pos:start="215:20" pos:end="215:28"><name pos:start="215:20" pos:end="215:28">SLICE_END</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <return pos:start="221:5" pos:end="221:20">return <expr pos:start="221:12" pos:end="221:19"><name pos:start="221:12" pos:end="221:19">SLICE_OK</name></expr>;</return>

</block_content>}</block></function>
</unit>
