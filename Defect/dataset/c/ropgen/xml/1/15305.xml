<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15305.c" pos:tabs="8"><function pos:start="1:1" pos:end="405:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:20">swr_init</name><parameter_list pos:start="1:21" pos:end="1:42">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:27">struct</name> <name pos:start="1:29" pos:end="1:38">SwrContext</name></name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list><block pos:start="1:43" pos:end="405:1">{<block_content pos:start="3:5" pos:end="403:13">

    <decl_stmt pos:start="3:5" pos:end="3:12"><decl pos:start="3:5" pos:end="3:11"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:17"><name pos:start="5:10" pos:end="5:11">l1</name><index pos:start="5:12" pos:end="5:17">[<expr pos:start="5:13" pos:end="5:16"><literal type="number" pos:start="5:13" pos:end="5:16">1024</literal></expr>]</index></name></decl>, <decl pos:start="5:20" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:8"/><name pos:start="5:20" pos:end="5:27"><name pos:start="5:20" pos:end="5:21">l2</name><index pos:start="5:22" pos:end="5:27">[<expr pos:start="5:23" pos:end="5:26"><literal type="number" pos:start="5:23" pos:end="5:26">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:21"><expr pos:start="9:5" pos:end="9:20"><call pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:17">clear_context</name><argument_list pos:start="9:18" pos:end="9:20">(<argument pos:start="9:19" pos:end="9:19"><expr pos:start="9:19" pos:end="9:19"><name pos:start="9:19" pos:end="9:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if<condition pos:start="13:7" pos:end="13:45">(<expr pos:start="13:8" pos:end="13:44"><name pos:start="13:8" pos:end="13:24"><name pos:start="13:8" pos:end="13:8">s</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator> <name pos:start="13:12" pos:end="13:24">in_sample_fmt</name></name> <operator pos:start="13:26" pos:end="13:27">&gt;=</operator> <name pos:start="13:29" pos:end="13:44">AV_SAMPLE_FMT_NB</name></expr>)</condition><block pos:start="13:46" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:31">

        <expr_stmt pos:start="15:9" pos:end="15:99"><expr pos:start="15:9" pos:end="15:98"><call pos:start="15:9" pos:end="15:98"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:98">(<argument pos:start="15:16" pos:end="15:16"><expr pos:start="15:16" pos:end="15:16"><name pos:start="15:16" pos:end="15:16">s</name></expr></argument>, <argument pos:start="15:19" pos:end="15:30"><expr pos:start="15:19" pos:end="15:30"><name pos:start="15:19" pos:end="15:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:33" pos:end="15:79"><expr pos:start="15:33" pos:end="15:79"><literal type="string" pos:start="15:33" pos:end="15:79">"Requested input sample format %d is invalid\n"</literal></expr></argument>, <argument pos:start="15:82" pos:end="15:97"><expr pos:start="15:82" pos:end="15:97"><name pos:start="15:82" pos:end="15:97"><name pos:start="15:82" pos:end="15:82">s</name><operator pos:start="15:83" pos:end="15:84">-&gt;</operator><name pos:start="15:85" pos:end="15:97">in_sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if<condition pos:start="21:7" pos:end="21:45">(<expr pos:start="21:8" pos:end="21:44"><name pos:start="21:8" pos:end="21:24"><name pos:start="21:8" pos:end="21:8">s</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:24">out_sample_fmt</name></name> <operator pos:start="21:26" pos:end="21:27">&gt;=</operator> <name pos:start="21:29" pos:end="21:44">AV_SAMPLE_FMT_NB</name></expr>)</condition><block pos:start="21:46" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:31">

        <expr_stmt pos:start="23:9" pos:end="23:101"><expr pos:start="23:9" pos:end="23:100"><call pos:start="23:9" pos:end="23:100"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:100">(<argument pos:start="23:16" pos:end="23:16"><expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">s</name></expr></argument>, <argument pos:start="23:19" pos:end="23:30"><expr pos:start="23:19" pos:end="23:30"><name pos:start="23:19" pos:end="23:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:33" pos:end="23:80"><expr pos:start="23:33" pos:end="23:80"><literal type="string" pos:start="23:33" pos:end="23:80">"Requested output sample format %d is invalid\n"</literal></expr></argument>, <argument pos:start="23:83" pos:end="23:99"><expr pos:start="23:83" pos:end="23:99"><name pos:start="23:83" pos:end="23:99"><name pos:start="23:83" pos:end="23:83">s</name><operator pos:start="23:84" pos:end="23:85">-&gt;</operator><name pos:start="23:86" pos:end="23:99">out_sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:45"><expr pos:start="31:5" pos:end="31:44"><name pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:10">out</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:19">ch_count</name></name>  <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:44"><name pos:start="31:24" pos:end="31:24">s</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator> <name pos:start="31:28" pos:end="31:44">user_out_ch_count</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator> <name pos:start="33:9" pos:end="33:10">in</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:19">ch_count</name></name>  <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:44"><name pos:start="33:24" pos:end="33:24">s</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator>  <name pos:start="33:29" pos:end="33:44">user_in_ch_count</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:45"><expr pos:start="35:5" pos:end="35:44"><name pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:20">used_ch_count</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:44"><name pos:start="35:24" pos:end="35:24">s</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:44">user_used_ch_count</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator> <name pos:start="39:9" pos:end="39:20">in_ch_layout</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:44"><name pos:start="39:24" pos:end="39:24">s</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator> <name pos:start="39:28" pos:end="39:44">user_in_ch_layout</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:45"><expr pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:20">out_ch_layout</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:44"><name pos:start="41:24" pos:end="41:24">s</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:44">user_out_ch_layout</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if<condition pos:start="45:7" pos:end="45:72">(<expr pos:start="45:8" pos:end="45:71"><call pos:start="45:8" pos:end="45:58"><name pos:start="45:8" pos:end="45:40">av_get_channel_layout_nb_channels</name><argument_list pos:start="45:41" pos:end="45:58">(<argument pos:start="45:42" pos:end="45:57"><expr pos:start="45:42" pos:end="45:57"><name pos:start="45:42" pos:end="45:57"><name pos:start="45:42" pos:end="45:42">s</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator> <name pos:start="45:46" pos:end="45:57">in_ch_layout</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:60" pos:end="45:60">&gt;</operator> <name pos:start="45:62" pos:end="45:71">SWR_CH_MAX</name></expr>)</condition> <block pos:start="45:74" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:28">

        <expr_stmt pos:start="47:9" pos:end="47:117"><expr pos:start="47:9" pos:end="47:116"><call pos:start="47:9" pos:end="47:116"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:116">(<argument pos:start="47:16" pos:end="47:16"><expr pos:start="47:16" pos:end="47:16"><name pos:start="47:16" pos:end="47:16">s</name></expr></argument>, <argument pos:start="47:19" pos:end="47:32"><expr pos:start="47:19" pos:end="47:32"><name pos:start="47:19" pos:end="47:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="47:35" pos:end="47:97"><expr pos:start="47:35" pos:end="47:97"><literal type="string" pos:start="47:35" pos:end="47:60">"Input channel layout 0x%"</literal><name pos:start="47:61" pos:end="47:66">PRIx64</name><literal type="string" pos:start="47:67" pos:end="47:97">" is invalid or unsupported.\n"</literal></expr></argument>, <argument pos:start="47:100" pos:end="47:115"><expr pos:start="47:100" pos:end="47:115"><name pos:start="47:100" pos:end="47:115"><name pos:start="47:100" pos:end="47:100">s</name><operator pos:start="47:101" pos:end="47:102">-&gt;</operator> <name pos:start="47:104" pos:end="47:115">in_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:28"><expr pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:23">in_ch_layout</name></name> <operator pos:start="49:25" pos:end="49:25">=</operator> <literal type="number" pos:start="49:27" pos:end="49:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if<condition pos:start="55:7" pos:end="55:72">(<expr pos:start="55:8" pos:end="55:71"><call pos:start="55:8" pos:end="55:58"><name pos:start="55:8" pos:end="55:40">av_get_channel_layout_nb_channels</name><argument_list pos:start="55:41" pos:end="55:58">(<argument pos:start="55:42" pos:end="55:57"><expr pos:start="55:42" pos:end="55:57"><name pos:start="55:42" pos:end="55:57"><name pos:start="55:42" pos:end="55:42">s</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:57">out_ch_layout</name></name></expr></argument>)</argument_list></call> <operator pos:start="55:60" pos:end="55:60">&gt;</operator> <name pos:start="55:62" pos:end="55:71">SWR_CH_MAX</name></expr>)</condition> <block pos:start="55:74" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:29">

        <expr_stmt pos:start="57:9" pos:end="57:118"><expr pos:start="57:9" pos:end="57:117"><call pos:start="57:9" pos:end="57:117"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="57:117">(<argument pos:start="57:16" pos:end="57:16"><expr pos:start="57:16" pos:end="57:16"><name pos:start="57:16" pos:end="57:16">s</name></expr></argument>, <argument pos:start="57:19" pos:end="57:32"><expr pos:start="57:19" pos:end="57:32"><name pos:start="57:19" pos:end="57:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="57:35" pos:end="57:98"><expr pos:start="57:35" pos:end="57:98"><literal type="string" pos:start="57:35" pos:end="57:61">"Output channel layout 0x%"</literal><name pos:start="57:62" pos:end="57:67">PRIx64</name><literal type="string" pos:start="57:68" pos:end="57:98">" is invalid or unsupported.\n"</literal></expr></argument>, <argument pos:start="57:101" pos:end="57:116"><expr pos:start="57:101" pos:end="57:116"><name pos:start="57:101" pos:end="57:116"><name pos:start="57:101" pos:end="57:101">s</name><operator pos:start="57:102" pos:end="57:103">-&gt;</operator><name pos:start="57:104" pos:end="57:116">out_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:24">out_ch_layout</name></name> <operator pos:start="59:26" pos:end="59:26">=</operator> <literal type="number" pos:start="59:28" pos:end="59:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="65:5" pos:end="81:5">switch<condition pos:start="65:11" pos:end="65:21">(<expr pos:start="65:12" pos:end="65:20"><name pos:start="65:12" pos:end="65:20"><name pos:start="65:12" pos:end="65:12">s</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:20">engine</name></name></expr>)</condition><block pos:start="65:22" pos:end="81:5">{<block_content pos:start="69:9" pos:end="79:35">

<cpp:if pos:start="67:1" pos:end="67:18">#<cpp:directive pos:start="67:2" pos:end="67:3">if</cpp:directive> <expr pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:18">CONFIG_LIBSOXR</name></expr></cpp:if>

        <case pos:start="69:9" pos:end="69:29">case <expr pos:start="69:14" pos:end="69:28"><name pos:start="69:14" pos:end="69:28">SWR_ENGINE_SOXR</name></expr>:</case> <expr_stmt pos:start="69:31" pos:end="69:66"><expr pos:start="69:31" pos:end="69:65"><name pos:start="69:31" pos:end="69:42"><name pos:start="69:31" pos:end="69:31">s</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:42">resampler</name></name> <operator pos:start="69:44" pos:end="69:44">=</operator> <operator pos:start="69:46" pos:end="69:46">&amp;</operator><name pos:start="69:47" pos:end="69:65">swri_soxr_resampler</name></expr>;</expr_stmt> <break pos:start="69:68" pos:end="72:0">break;</break>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

        <case pos:start="73:9" pos:end="73:29">case <expr pos:start="73:14" pos:end="73:27"><name pos:start="73:14" pos:end="73:27">SWR_ENGINE_SWR</name></expr> :</case> <expr_stmt pos:start="73:31" pos:end="73:61"><expr pos:start="73:31" pos:end="73:60"><name pos:start="73:31" pos:end="73:42"><name pos:start="73:31" pos:end="73:31">s</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:42">resampler</name></name> <operator pos:start="73:44" pos:end="73:44">=</operator> <operator pos:start="73:46" pos:end="73:46">&amp;</operator><name pos:start="73:47" pos:end="73:60">swri_resampler</name></expr>;</expr_stmt> <break pos:start="73:63" pos:end="73:68">break;</break>

        <default pos:start="75:9" pos:end="75:16">default:</default>

            <expr_stmt pos:start="77:13" pos:end="77:84"><expr pos:start="77:13" pos:end="77:83"><call pos:start="77:13" pos:end="77:83"><name pos:start="77:13" pos:end="77:18">av_log</name><argument_list pos:start="77:19" pos:end="77:83">(<argument pos:start="77:20" pos:end="77:20"><expr pos:start="77:20" pos:end="77:20"><name pos:start="77:20" pos:end="77:20">s</name></expr></argument>, <argument pos:start="77:23" pos:end="77:34"><expr pos:start="77:23" pos:end="77:34"><name pos:start="77:23" pos:end="77:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:37" pos:end="77:82"><expr pos:start="77:37" pos:end="77:82"><literal type="string" pos:start="77:37" pos:end="77:82">"Requested resampling engine is unavailable\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:35">return <expr pos:start="79:20" pos:end="79:34"><call pos:start="79:20" pos:end="79:34"><name pos:start="79:20" pos:end="79:26">AVERROR</name><argument_list pos:start="79:27" pos:end="79:34">(<argument pos:start="79:28" pos:end="79:33"><expr pos:start="79:28" pos:end="79:33"><name pos:start="79:28" pos:end="79:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="85:5" pos:end="87:41"><if pos:start="85:5" pos:end="87:41">if<condition pos:start="85:7" pos:end="85:25">(<expr pos:start="85:8" pos:end="85:24"><operator pos:start="85:8" pos:end="85:8">!</operator><name pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:24">used_ch_count</name></name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:41"><block_content pos:start="87:9" pos:end="87:41">

        <expr_stmt pos:start="87:9" pos:end="87:41"><expr pos:start="87:9" pos:end="87:40"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:24">used_ch_count</name></name><operator pos:start="87:25" pos:end="87:25">=</operator> <name pos:start="87:27" pos:end="87:40"><name pos:start="87:27" pos:end="87:27">s</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:31">in</name><operator pos:start="87:32" pos:end="87:32">.</operator><name pos:start="87:33" pos:end="87:40">ch_count</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if<condition pos:start="91:7" pos:end="91:119">(<expr pos:start="91:8" pos:end="91:118"><name pos:start="91:8" pos:end="91:23"><name pos:start="91:8" pos:end="91:8">s</name><operator pos:start="91:9" pos:end="91:10">-&gt;</operator><name pos:start="91:11" pos:end="91:23">used_ch_count</name></name> <operator pos:start="91:25" pos:end="91:26">&amp;&amp;</operator> <name pos:start="91:28" pos:end="91:43"><name pos:start="91:28" pos:end="91:28">s</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator> <name pos:start="91:32" pos:end="91:43">in_ch_layout</name></name> <operator pos:start="91:45" pos:end="91:46">&amp;&amp;</operator> <name pos:start="91:48" pos:end="91:63"><name pos:start="91:48" pos:end="91:48">s</name><operator pos:start="91:49" pos:end="91:50">-&gt;</operator><name pos:start="91:51" pos:end="91:63">used_ch_count</name></name> <operator pos:start="91:65" pos:end="91:66">!=</operator> <call pos:start="91:68" pos:end="91:118"><name pos:start="91:68" pos:end="91:100">av_get_channel_layout_nb_channels</name><argument_list pos:start="91:101" pos:end="91:118">(<argument pos:start="91:102" pos:end="91:117"><expr pos:start="91:102" pos:end="91:117"><name pos:start="91:102" pos:end="91:117"><name pos:start="91:102" pos:end="91:102">s</name><operator pos:start="91:103" pos:end="91:104">-&gt;</operator> <name pos:start="91:106" pos:end="91:117">in_ch_layout</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="91:120" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:28">

        <expr_stmt pos:start="93:9" pos:end="93:145"><expr pos:start="93:9" pos:end="93:144"><call pos:start="93:9" pos:end="93:144"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:144">(<argument pos:start="93:16" pos:end="93:16"><expr pos:start="93:16" pos:end="93:16"><name pos:start="93:16" pos:end="93:16">s</name></expr></argument>, <argument pos:start="93:19" pos:end="93:32"><expr pos:start="93:19" pos:end="93:32"><name pos:start="93:19" pos:end="93:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="93:35" pos:end="93:143"><expr pos:start="93:35" pos:end="93:143"><literal type="string" pos:start="93:35" pos:end="93:143">"Input channel layout has a different number of channels than the number of used channels, ignoring layout\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:28"><expr pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator> <name pos:start="95:13" pos:end="95:24">in_ch_layout</name></name><operator pos:start="95:25" pos:end="95:25">=</operator> <literal type="number" pos:start="95:27" pos:end="95:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="103:74"><if pos:start="101:5" pos:end="103:74">if<condition pos:start="101:7" pos:end="101:25">(<expr pos:start="101:8" pos:end="101:24"><operator pos:start="101:8" pos:end="101:8">!</operator><name pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator> <name pos:start="101:13" pos:end="101:24">in_ch_layout</name></name></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:74"><block_content pos:start="103:9" pos:end="103:74">

        <expr_stmt pos:start="103:9" pos:end="103:74"><expr pos:start="103:9" pos:end="103:73"><name pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator> <name pos:start="103:13" pos:end="103:24">in_ch_layout</name></name><operator pos:start="103:25" pos:end="103:25">=</operator> <call pos:start="103:27" pos:end="103:73"><name pos:start="103:27" pos:end="103:55">av_get_default_channel_layout</name><argument_list pos:start="103:56" pos:end="103:73">(<argument pos:start="103:57" pos:end="103:72"><expr pos:start="103:57" pos:end="103:72"><name pos:start="103:57" pos:end="103:72"><name pos:start="103:57" pos:end="103:57">s</name><operator pos:start="103:58" pos:end="103:59">-&gt;</operator><name pos:start="103:60" pos:end="103:72">used_ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="105:5" pos:end="107:73"><if pos:start="105:5" pos:end="107:73">if<condition pos:start="105:7" pos:end="105:25">(<expr pos:start="105:8" pos:end="105:24"><operator pos:start="105:8" pos:end="105:8">!</operator><name pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:24">out_ch_layout</name></name></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:73"><block_content pos:start="107:9" pos:end="107:73">

        <expr_stmt pos:start="107:9" pos:end="107:73"><expr pos:start="107:9" pos:end="107:72"><name pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:24">out_ch_layout</name></name><operator pos:start="107:25" pos:end="107:25">=</operator> <call pos:start="107:27" pos:end="107:72"><name pos:start="107:27" pos:end="107:55">av_get_default_channel_layout</name><argument_list pos:start="107:56" pos:end="107:72">(<argument pos:start="107:57" pos:end="107:71"><expr pos:start="107:57" pos:end="107:71"><name pos:start="107:57" pos:end="107:71"><name pos:start="107:57" pos:end="107:57">s</name><operator pos:start="107:58" pos:end="107:59">-&gt;</operator><name pos:start="107:60" pos:end="107:62">out</name><operator pos:start="107:63" pos:end="107:63">.</operator><name pos:start="107:64" pos:end="107:71">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="113:36"><expr pos:start="111:5" pos:end="113:35"><name pos:start="111:5" pos:end="111:15"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:15">rematrix</name></name><operator pos:start="111:16" pos:end="111:16">=</operator> <name pos:start="111:18" pos:end="111:33"><name pos:start="111:18" pos:end="111:18">s</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:33">out_ch_layout</name></name>  <operator pos:start="111:36" pos:end="111:37">!=</operator><name pos:start="111:38" pos:end="111:52"><name pos:start="111:38" pos:end="111:38">s</name><operator pos:start="111:39" pos:end="111:40">-&gt;</operator><name pos:start="111:41" pos:end="111:52">in_ch_layout</name></name> <operator pos:start="111:54" pos:end="111:55">||</operator> <name pos:start="111:57" pos:end="111:74"><name pos:start="111:57" pos:end="111:57">s</name><operator pos:start="111:58" pos:end="111:59">-&gt;</operator><name pos:start="111:60" pos:end="111:74">rematrix_volume</name></name><operator pos:start="111:75" pos:end="111:76">!=</operator><literal type="number" pos:start="111:77" pos:end="111:79">1.0</literal> <operator pos:start="111:81" pos:end="111:82">||</operator>

                 <name pos:start="113:18" pos:end="113:35"><name pos:start="113:18" pos:end="113:18">s</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:35">rematrix_custom</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="117:5" pos:end="145:5"><if pos:start="117:5" pos:end="145:5">if<condition pos:start="117:7" pos:end="117:47">(<expr pos:start="117:8" pos:end="117:46"><name pos:start="117:8" pos:end="117:24"><name pos:start="117:8" pos:end="117:8">s</name><operator pos:start="117:9" pos:end="117:10">-&gt;</operator><name pos:start="117:11" pos:end="117:24">int_sample_fmt</name></name> <operator pos:start="117:26" pos:end="117:27">==</operator> <name pos:start="117:29" pos:end="117:46">AV_SAMPLE_FMT_NONE</name></expr>)</condition><block pos:start="117:48" pos:end="145:5">{<block_content pos:start="119:9" pos:end="143:9">

        <if_stmt pos:start="119:9" pos:end="143:9"><if pos:start="119:9" pos:end="123:9">if<condition pos:start="119:11" pos:end="119:76">(<expr pos:start="119:12" pos:end="119:75"><call pos:start="119:12" pos:end="119:53"><name pos:start="119:12" pos:end="119:35">av_get_planar_sample_fmt</name><argument_list pos:start="119:36" pos:end="119:53">(<argument pos:start="119:37" pos:end="119:52"><expr pos:start="119:37" pos:end="119:52"><name pos:start="119:37" pos:end="119:52"><name pos:start="119:37" pos:end="119:37">s</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:52">in_sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="119:55" pos:end="119:56">&lt;=</operator> <name pos:start="119:58" pos:end="119:75">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block pos:start="119:77" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:50">

            <expr_stmt pos:start="121:13" pos:end="121:50"><expr pos:start="121:13" pos:end="121:49"><name pos:start="121:13" pos:end="121:29"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:29">int_sample_fmt</name></name><operator pos:start="121:30" pos:end="121:30">=</operator> <name pos:start="121:32" pos:end="121:49">AV_SAMPLE_FMT_S16P</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="123:10" pos:end="133:9">else if<condition pos:start="123:17" pos:end="129:49">(   <expr pos:start="123:21" pos:end="129:48"><call pos:start="123:21" pos:end="123:63"><name pos:start="123:21" pos:end="123:44">av_get_planar_sample_fmt</name><argument_list pos:start="123:45" pos:end="123:63">(<argument pos:start="123:46" pos:end="123:62"><expr pos:start="123:46" pos:end="123:62"><name pos:start="123:46" pos:end="123:62"><name pos:start="123:46" pos:end="123:46">s</name><operator pos:start="123:47" pos:end="123:48">-&gt;</operator> <name pos:start="123:50" pos:end="123:62">in_sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="123:65" pos:end="123:66">==</operator> <name pos:start="123:68" pos:end="123:85">AV_SAMPLE_FMT_S32P</name>

                 <operator pos:start="125:18" pos:end="125:19">&amp;&amp;</operator> <call pos:start="125:21" pos:end="125:63"><name pos:start="125:21" pos:end="125:44">av_get_planar_sample_fmt</name><argument_list pos:start="125:45" pos:end="125:63">(<argument pos:start="125:46" pos:end="125:62"><expr pos:start="125:46" pos:end="125:62"><name pos:start="125:46" pos:end="125:62"><name pos:start="125:46" pos:end="125:46">s</name><operator pos:start="125:47" pos:end="125:48">-&gt;</operator><name pos:start="125:49" pos:end="125:62">out_sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="125:65" pos:end="125:66">==</operator> <name pos:start="125:68" pos:end="125:85">AV_SAMPLE_FMT_S32P</name>

                 <operator pos:start="127:18" pos:end="127:19">&amp;&amp;</operator> <operator pos:start="127:21" pos:end="127:21">!</operator><name pos:start="127:22" pos:end="127:32"><name pos:start="127:22" pos:end="127:22">s</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:32">rematrix</name></name>

                 <operator pos:start="129:18" pos:end="129:19">&amp;&amp;</operator> <name pos:start="129:21" pos:end="129:29"><name pos:start="129:21" pos:end="129:21">s</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:29">engine</name></name> <operator pos:start="129:31" pos:end="129:32">!=</operator> <name pos:start="129:34" pos:end="129:48">SWR_ENGINE_SOXR</name></expr>)</condition><block pos:start="129:50" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:50">

            <expr_stmt pos:start="131:13" pos:end="131:50"><expr pos:start="131:13" pos:end="131:49"><name pos:start="131:13" pos:end="131:29"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:29">int_sample_fmt</name></name><operator pos:start="131:30" pos:end="131:30">=</operator> <name pos:start="131:32" pos:end="131:49">AV_SAMPLE_FMT_S32P</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="133:10" pos:end="137:9">else if<condition pos:start="133:17" pos:end="133:82">(<expr pos:start="133:18" pos:end="133:81"><call pos:start="133:18" pos:end="133:59"><name pos:start="133:18" pos:end="133:41">av_get_planar_sample_fmt</name><argument_list pos:start="133:42" pos:end="133:59">(<argument pos:start="133:43" pos:end="133:58"><expr pos:start="133:43" pos:end="133:58"><name pos:start="133:43" pos:end="133:58"><name pos:start="133:43" pos:end="133:43">s</name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:58">in_sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="133:61" pos:end="133:62">&lt;=</operator> <name pos:start="133:64" pos:end="133:81">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block pos:start="133:83" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:50">

            <expr_stmt pos:start="135:13" pos:end="135:50"><expr pos:start="135:13" pos:end="135:49"><name pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:13">s</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:29">int_sample_fmt</name></name><operator pos:start="135:30" pos:end="135:30">=</operator> <name pos:start="135:32" pos:end="135:49">AV_SAMPLE_FMT_FLTP</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="137:10" pos:end="143:9">else<block pos:start="137:14" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:50">

            <expr_stmt pos:start="139:13" pos:end="139:69"><expr pos:start="139:13" pos:end="139:68"><call pos:start="139:13" pos:end="139:68"><name pos:start="139:13" pos:end="139:18">av_log</name><argument_list pos:start="139:19" pos:end="139:68">(<argument pos:start="139:20" pos:end="139:20"><expr pos:start="139:20" pos:end="139:20"><name pos:start="139:20" pos:end="139:20">s</name></expr></argument>, <argument pos:start="139:23" pos:end="139:34"><expr pos:start="139:23" pos:end="139:34"><name pos:start="139:23" pos:end="139:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="139:37" pos:end="139:67"><expr pos:start="139:37" pos:end="139:67"><literal type="string" pos:start="139:37" pos:end="139:67">"Using double precision mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:50"><expr pos:start="141:13" pos:end="141:49"><name pos:start="141:13" pos:end="141:29"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:29">int_sample_fmt</name></name><operator pos:start="141:30" pos:end="141:30">=</operator> <name pos:start="141:32" pos:end="141:49">AV_SAMPLE_FMT_DBLP</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="149:5" pos:end="161:5"><if pos:start="149:5" pos:end="161:5">if<condition pos:start="149:7" pos:end="155:50">(   <expr pos:start="149:11" pos:end="155:49"><name pos:start="149:11" pos:end="149:27"><name pos:start="149:11" pos:end="149:11">s</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:27">int_sample_fmt</name></name> <operator pos:start="149:29" pos:end="149:30">!=</operator> <name pos:start="149:32" pos:end="149:49">AV_SAMPLE_FMT_S16P</name>

        <operator pos:start="151:9" pos:end="151:10">&amp;&amp;</operator><name pos:start="151:11" pos:end="151:27"><name pos:start="151:11" pos:end="151:11">s</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:27">int_sample_fmt</name></name> <operator pos:start="151:29" pos:end="151:30">!=</operator> <name pos:start="151:32" pos:end="151:49">AV_SAMPLE_FMT_S32P</name>

        <operator pos:start="153:9" pos:end="153:10">&amp;&amp;</operator><name pos:start="153:11" pos:end="153:27"><name pos:start="153:11" pos:end="153:11">s</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:27">int_sample_fmt</name></name> <operator pos:start="153:29" pos:end="153:30">!=</operator> <name pos:start="153:32" pos:end="153:49">AV_SAMPLE_FMT_FLTP</name>

        <operator pos:start="155:9" pos:end="155:10">&amp;&amp;</operator><name pos:start="155:11" pos:end="155:27"><name pos:start="155:11" pos:end="155:11">s</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:27">int_sample_fmt</name></name> <operator pos:start="155:29" pos:end="155:30">!=</operator> <name pos:start="155:32" pos:end="155:49">AV_SAMPLE_FMT_DBLP</name></expr>)</condition><block pos:start="155:51" pos:end="161:5">{<block_content pos:start="157:9" pos:end="159:31">

        <expr_stmt pos:start="157:9" pos:end="157:165"><expr pos:start="157:9" pos:end="157:164"><call pos:start="157:9" pos:end="157:164"><name pos:start="157:9" pos:end="157:14">av_log</name><argument_list pos:start="157:15" pos:end="157:164">(<argument pos:start="157:16" pos:end="157:16"><expr pos:start="157:16" pos:end="157:16"><name pos:start="157:16" pos:end="157:16">s</name></expr></argument>, <argument pos:start="157:19" pos:end="157:30"><expr pos:start="157:19" pos:end="157:30"><name pos:start="157:19" pos:end="157:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:33" pos:end="157:120"><expr pos:start="157:33" pos:end="157:120"><literal type="string" pos:start="157:33" pos:end="157:120">"Requested sample format %s is not supported internally, S16/S32/FLT/DBL is supported\n"</literal></expr></argument>, <argument pos:start="157:123" pos:end="157:163"><expr pos:start="157:123" pos:end="157:163"><call pos:start="157:123" pos:end="157:163"><name pos:start="157:123" pos:end="157:144">av_get_sample_fmt_name</name><argument_list pos:start="157:145" pos:end="157:163">(<argument pos:start="157:146" pos:end="157:162"><expr pos:start="157:146" pos:end="157:162"><name pos:start="157:146" pos:end="157:162"><name pos:start="157:146" pos:end="157:146">s</name><operator pos:start="157:147" pos:end="157:148">-&gt;</operator><name pos:start="157:149" pos:end="157:162">int_sample_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="159:9" pos:end="159:31">return <expr pos:start="159:16" pos:end="159:30"><call pos:start="159:16" pos:end="159:30"><name pos:start="159:16" pos:end="159:22">AVERROR</name><argument_list pos:start="159:23" pos:end="159:30">(<argument pos:start="159:24" pos:end="159:29"><expr pos:start="159:24" pos:end="159:29"><name pos:start="159:24" pos:end="159:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:50"><expr pos:start="165:5" pos:end="165:49"><call pos:start="165:5" pos:end="165:49"><name pos:start="165:5" pos:end="165:21">set_audiodata_fmt</name><argument_list pos:start="165:22" pos:end="165:49">(<argument pos:start="165:23" pos:end="165:29"><expr pos:start="165:23" pos:end="165:29"><operator pos:start="165:23" pos:end="165:23">&amp;</operator><name pos:start="165:24" pos:end="165:29"><name pos:start="165:24" pos:end="165:24">s</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator> <name pos:start="165:28" pos:end="165:29">in</name></name></expr></argument>, <argument pos:start="165:32" pos:end="165:48"><expr pos:start="165:32" pos:end="165:48"><name pos:start="165:32" pos:end="165:48"><name pos:start="165:32" pos:end="165:32">s</name><operator pos:start="165:33" pos:end="165:34">-&gt;</operator> <name pos:start="165:36" pos:end="165:48">in_sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:50"><expr pos:start="167:5" pos:end="167:49"><call pos:start="167:5" pos:end="167:49"><name pos:start="167:5" pos:end="167:21">set_audiodata_fmt</name><argument_list pos:start="167:22" pos:end="167:49">(<argument pos:start="167:23" pos:end="167:29"><expr pos:start="167:23" pos:end="167:29"><operator pos:start="167:23" pos:end="167:23">&amp;</operator><name pos:start="167:24" pos:end="167:29"><name pos:start="167:24" pos:end="167:24">s</name><operator pos:start="167:25" pos:end="167:26">-&gt;</operator><name pos:start="167:27" pos:end="167:29">out</name></name></expr></argument>, <argument pos:start="167:32" pos:end="167:48"><expr pos:start="167:32" pos:end="167:48"><name pos:start="167:32" pos:end="167:48"><name pos:start="167:32" pos:end="167:32">s</name><operator pos:start="167:33" pos:end="167:34">-&gt;</operator><name pos:start="167:35" pos:end="167:48">out_sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="171:5" pos:end="183:37"><if pos:start="171:5" pos:end="181:5">if <condition pos:start="171:8" pos:end="171:49">(<expr pos:start="171:9" pos:end="171:48"><name pos:start="171:9" pos:end="171:30"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:30">firstpts_in_samples</name></name> <operator pos:start="171:32" pos:end="171:33">!=</operator> <name pos:start="171:35" pos:end="171:48">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="171:51" pos:end="181:5">{<block_content pos:start="173:9" pos:end="179:66">

        <if_stmt pos:start="173:9" pos:end="175:25"><if pos:start="173:9" pos:end="175:25">if <condition pos:start="173:12" pos:end="173:58">(<expr pos:start="173:13" pos:end="173:57"><operator pos:start="173:13" pos:end="173:13">!</operator><name pos:start="173:14" pos:end="173:21"><name pos:start="173:14" pos:end="173:14">s</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:21">async</name></name> <operator pos:start="173:23" pos:end="173:24">&amp;&amp;</operator> <name pos:start="173:26" pos:end="173:44"><name pos:start="173:26" pos:end="173:26">s</name><operator pos:start="173:27" pos:end="173:28">-&gt;</operator><name pos:start="173:29" pos:end="173:44">min_compensation</name></name> <operator pos:start="173:46" pos:end="173:47">&gt;=</operator> <name pos:start="173:49" pos:end="173:55">FLT_MAX</name><operator pos:start="173:56" pos:end="173:56">/</operator><literal type="number" pos:start="173:57" pos:end="173:57">2</literal></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:25"><block_content pos:start="175:13" pos:end="175:25">

            <expr_stmt pos:start="175:13" pos:end="175:25"><expr pos:start="175:13" pos:end="175:24"><name pos:start="175:13" pos:end="175:20"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:20">async</name></name> <operator pos:start="175:22" pos:end="175:22">=</operator> <literal type="number" pos:start="175:24" pos:end="175:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="177:9" pos:end="179:66"><expr pos:start="177:9" pos:end="179:65"><name pos:start="177:9" pos:end="177:19"><name pos:start="177:9" pos:end="177:9">s</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:19">firstpts</name></name> <operator pos:start="177:21" pos:end="177:21">=</operator>

        <name pos:start="179:9" pos:end="179:17"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:17">outpts</name></name>   <operator pos:start="179:21" pos:end="179:21">=</operator> <name pos:start="179:23" pos:end="179:44"><name pos:start="179:23" pos:end="179:23">s</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:44">firstpts_in_samples</name></name> <operator pos:start="179:46" pos:end="179:46">*</operator> <name pos:start="179:48" pos:end="179:65"><name pos:start="179:48" pos:end="179:48">s</name><operator pos:start="179:49" pos:end="179:50">-&gt;</operator><name pos:start="179:51" pos:end="179:65">out_sample_rate</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="181:7" pos:end="183:37">else<block type="pseudo" pos:start="183:9" pos:end="183:37"><block_content pos:start="183:9" pos:end="183:37">

        <expr_stmt pos:start="183:9" pos:end="183:37"><expr pos:start="183:9" pos:end="183:36"><name pos:start="183:9" pos:end="183:19"><name pos:start="183:9" pos:end="183:9">s</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:19">firstpts</name></name> <operator pos:start="183:21" pos:end="183:21">=</operator> <name pos:start="183:23" pos:end="183:36">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="187:5" pos:end="199:5"><if pos:start="187:5" pos:end="199:5">if <condition pos:start="187:8" pos:end="187:17">(<expr pos:start="187:9" pos:end="187:16"><name pos:start="187:9" pos:end="187:16"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:16">async</name></name></expr>)</condition> <block pos:start="187:19" pos:end="199:5">{<block_content pos:start="189:9" pos:end="197:9">

        <if_stmt pos:start="189:9" pos:end="191:40"><if pos:start="189:9" pos:end="191:40">if <condition pos:start="189:12" pos:end="189:45">(<expr pos:start="189:13" pos:end="189:44"><name pos:start="189:13" pos:end="189:31"><name pos:start="189:13" pos:end="189:13">s</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:31">min_compensation</name></name> <operator pos:start="189:33" pos:end="189:34">&gt;=</operator> <name pos:start="189:36" pos:end="189:42">FLT_MAX</name><operator pos:start="189:43" pos:end="189:43">/</operator><literal type="number" pos:start="189:44" pos:end="189:44">2</literal></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:40"><block_content pos:start="191:13" pos:end="191:40">

            <expr_stmt pos:start="191:13" pos:end="191:40"><expr pos:start="191:13" pos:end="191:39"><name pos:start="191:13" pos:end="191:31"><name pos:start="191:13" pos:end="191:13">s</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:31">min_compensation</name></name> <operator pos:start="191:33" pos:end="191:33">=</operator> <literal type="number" pos:start="191:35" pos:end="191:39">0.001</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="193:9" pos:end="197:9"><if pos:start="193:9" pos:end="197:9">if <condition pos:start="193:12" pos:end="193:30">(<expr pos:start="193:13" pos:end="193:29"><name pos:start="193:13" pos:end="193:20"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:20">async</name></name> <operator pos:start="193:22" pos:end="193:22">&gt;</operator> <literal type="number" pos:start="193:24" pos:end="193:29">1.0001</literal></expr>)</condition> <block pos:start="193:32" pos:end="197:9">{<block_content pos:start="195:13" pos:end="195:77">

            <expr_stmt pos:start="195:13" pos:end="195:77"><expr pos:start="195:13" pos:end="195:76"><name pos:start="195:13" pos:end="195:36"><name pos:start="195:13" pos:end="195:13">s</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:36">max_soft_compensation</name></name> <operator pos:start="195:38" pos:end="195:38">=</operator> <name pos:start="195:40" pos:end="195:47"><name pos:start="195:40" pos:end="195:40">s</name><operator pos:start="195:41" pos:end="195:42">-&gt;</operator><name pos:start="195:43" pos:end="195:47">async</name></name> <operator pos:start="195:49" pos:end="195:49">/</operator> <operator pos:start="195:51" pos:end="195:51">(</operator><name pos:start="195:52" pos:end="195:57">double</name><operator pos:start="195:58" pos:end="195:58">)</operator> <name pos:start="195:60" pos:end="195:76"><name pos:start="195:60" pos:end="195:60">s</name><operator pos:start="195:61" pos:end="195:62">-&gt;</operator><name pos:start="195:63" pos:end="195:76">in_sample_rate</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="203:5" pos:end="217:41"><if pos:start="203:5" pos:end="215:5">if <condition pos:start="203:8" pos:end="203:80">(<expr pos:start="203:9" pos:end="203:79"><name pos:start="203:9" pos:end="203:26"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:26">out_sample_rate</name></name><operator pos:start="203:27" pos:end="203:28">!=</operator><name pos:start="203:29" pos:end="203:45"><name pos:start="203:29" pos:end="203:29">s</name><operator pos:start="203:30" pos:end="203:31">-&gt;</operator><name pos:start="203:32" pos:end="203:45">in_sample_rate</name></name> <operator pos:start="203:47" pos:end="203:48">||</operator> <operator pos:start="203:50" pos:end="203:50">(</operator><name pos:start="203:51" pos:end="203:58"><name pos:start="203:51" pos:end="203:51">s</name><operator pos:start="203:52" pos:end="203:53">-&gt;</operator><name pos:start="203:54" pos:end="203:58">flags</name></name> <operator pos:start="203:60" pos:end="203:60">&amp;</operator> <name pos:start="203:62" pos:end="203:78">SWR_FLAG_RESAMPLE</name><operator pos:start="203:79" pos:end="203:79">)</operator></expr>)</condition><block pos:start="203:81" pos:end="215:5">{<block_content pos:start="205:9" pos:end="213:9">

        <expr_stmt pos:start="205:9" pos:end="205:229"><expr pos:start="205:9" pos:end="205:228"><name pos:start="205:9" pos:end="205:19"><name pos:start="205:9" pos:end="205:9">s</name><operator pos:start="205:10" pos:end="205:11">-&gt;</operator><name pos:start="205:12" pos:end="205:19">resample</name></name> <operator pos:start="205:21" pos:end="205:21">=</operator> <call pos:start="205:23" pos:end="205:228"><name pos:start="205:23" pos:end="205:40"><name pos:start="205:23" pos:end="205:23">s</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:34">resampler</name><operator pos:start="205:35" pos:end="205:36">-&gt;</operator><name pos:start="205:37" pos:end="205:40">init</name></name><argument_list pos:start="205:41" pos:end="205:228">(<argument pos:start="205:42" pos:end="205:52"><expr pos:start="205:42" pos:end="205:52"><name pos:start="205:42" pos:end="205:52"><name pos:start="205:42" pos:end="205:42">s</name><operator pos:start="205:43" pos:end="205:44">-&gt;</operator><name pos:start="205:45" pos:end="205:52">resample</name></name></expr></argument>, <argument pos:start="205:55" pos:end="205:72"><expr pos:start="205:55" pos:end="205:72"><name pos:start="205:55" pos:end="205:72"><name pos:start="205:55" pos:end="205:55">s</name><operator pos:start="205:56" pos:end="205:57">-&gt;</operator><name pos:start="205:58" pos:end="205:72">out_sample_rate</name></name></expr></argument>, <argument pos:start="205:75" pos:end="205:91"><expr pos:start="205:75" pos:end="205:91"><name pos:start="205:75" pos:end="205:91"><name pos:start="205:75" pos:end="205:75">s</name><operator pos:start="205:76" pos:end="205:77">-&gt;</operator><name pos:start="205:78" pos:end="205:91">in_sample_rate</name></name></expr></argument>, <argument pos:start="205:94" pos:end="205:107"><expr pos:start="205:94" pos:end="205:107"><name pos:start="205:94" pos:end="205:107"><name pos:start="205:94" pos:end="205:94">s</name><operator pos:start="205:95" pos:end="205:96">-&gt;</operator><name pos:start="205:97" pos:end="205:107">filter_size</name></name></expr></argument>, <argument pos:start="205:110" pos:end="205:123"><expr pos:start="205:110" pos:end="205:123"><name pos:start="205:110" pos:end="205:123"><name pos:start="205:110" pos:end="205:110">s</name><operator pos:start="205:111" pos:end="205:112">-&gt;</operator><name pos:start="205:113" pos:end="205:123">phase_shift</name></name></expr></argument>, <argument pos:start="205:126" pos:end="205:141"><expr pos:start="205:126" pos:end="205:141"><name pos:start="205:126" pos:end="205:141"><name pos:start="205:126" pos:end="205:126">s</name><operator pos:start="205:127" pos:end="205:128">-&gt;</operator><name pos:start="205:129" pos:end="205:141">linear_interp</name></name></expr></argument>, <argument pos:start="205:144" pos:end="205:152"><expr pos:start="205:144" pos:end="205:152"><name pos:start="205:144" pos:end="205:152"><name pos:start="205:144" pos:end="205:144">s</name><operator pos:start="205:145" pos:end="205:146">-&gt;</operator><name pos:start="205:147" pos:end="205:152">cutoff</name></name></expr></argument>, <argument pos:start="205:155" pos:end="205:171"><expr pos:start="205:155" pos:end="205:171"><name pos:start="205:155" pos:end="205:171"><name pos:start="205:155" pos:end="205:155">s</name><operator pos:start="205:156" pos:end="205:157">-&gt;</operator><name pos:start="205:158" pos:end="205:171">int_sample_fmt</name></name></expr></argument>, <argument pos:start="205:174" pos:end="205:187"><expr pos:start="205:174" pos:end="205:187"><name pos:start="205:174" pos:end="205:187"><name pos:start="205:174" pos:end="205:174">s</name><operator pos:start="205:175" pos:end="205:176">-&gt;</operator><name pos:start="205:177" pos:end="205:187">filter_type</name></name></expr></argument>, <argument pos:start="205:190" pos:end="205:203"><expr pos:start="205:190" pos:end="205:203"><name pos:start="205:190" pos:end="205:203"><name pos:start="205:190" pos:end="205:190">s</name><operator pos:start="205:191" pos:end="205:192">-&gt;</operator><name pos:start="205:193" pos:end="205:203">kaiser_beta</name></name></expr></argument>, <argument pos:start="205:206" pos:end="205:217"><expr pos:start="205:206" pos:end="205:217"><name pos:start="205:206" pos:end="205:217"><name pos:start="205:206" pos:end="205:206">s</name><operator pos:start="205:207" pos:end="205:208">-&gt;</operator><name pos:start="205:209" pos:end="205:217">precision</name></name></expr></argument>, <argument pos:start="205:220" pos:end="205:227"><expr pos:start="205:220" pos:end="205:227"><name pos:start="205:220" pos:end="205:227"><name pos:start="205:220" pos:end="205:220">s</name><operator pos:start="205:221" pos:end="205:222">-&gt;</operator><name pos:start="205:223" pos:end="205:227">cheby</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="207:9" pos:end="213:9"><if pos:start="207:9" pos:end="213:9">if <condition pos:start="207:12" pos:end="207:25">(<expr pos:start="207:13" pos:end="207:24"><operator pos:start="207:13" pos:end="207:13">!</operator><name pos:start="207:14" pos:end="207:24"><name pos:start="207:14" pos:end="207:14">s</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:24">resample</name></name></expr>)</condition> <block pos:start="207:27" pos:end="213:9">{<block_content pos:start="209:13" pos:end="211:35">

            <expr_stmt pos:start="209:13" pos:end="209:72"><expr pos:start="209:13" pos:end="209:71"><call pos:start="209:13" pos:end="209:71"><name pos:start="209:13" pos:end="209:18">av_log</name><argument_list pos:start="209:19" pos:end="209:71">(<argument pos:start="209:20" pos:end="209:20"><expr pos:start="209:20" pos:end="209:20"><name pos:start="209:20" pos:end="209:20">s</name></expr></argument>, <argument pos:start="209:23" pos:end="209:34"><expr pos:start="209:23" pos:end="209:34"><name pos:start="209:23" pos:end="209:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:37" pos:end="209:70"><expr pos:start="209:37" pos:end="209:70"><literal type="string" pos:start="209:37" pos:end="209:70">"Failed to initilaize resampler\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="211:13" pos:end="211:35">return <expr pos:start="211:20" pos:end="211:34"><call pos:start="211:20" pos:end="211:34"><name pos:start="211:20" pos:end="211:26">AVERROR</name><argument_list pos:start="211:27" pos:end="211:34">(<argument pos:start="211:28" pos:end="211:33"><expr pos:start="211:28" pos:end="211:33"><name pos:start="211:28" pos:end="211:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="215:6" pos:end="217:41">else<block type="pseudo" pos:start="217:9" pos:end="217:41"><block_content pos:start="217:9" pos:end="217:41">

        <expr_stmt pos:start="217:9" pos:end="217:41"><expr pos:start="217:9" pos:end="217:40"><call pos:start="217:9" pos:end="217:40"><name pos:start="217:9" pos:end="217:26"><name pos:start="217:9" pos:end="217:9">s</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:20">resampler</name><operator pos:start="217:21" pos:end="217:22">-&gt;</operator><name pos:start="217:23" pos:end="217:26">free</name></name><argument_list pos:start="217:27" pos:end="217:40">(<argument pos:start="217:28" pos:end="217:39"><expr pos:start="217:28" pos:end="217:39"><operator pos:start="217:28" pos:end="217:28">&amp;</operator><name pos:start="217:29" pos:end="217:39"><name pos:start="217:29" pos:end="217:29">s</name><operator pos:start="217:30" pos:end="217:31">-&gt;</operator><name pos:start="217:32" pos:end="217:39">resample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="219:5" pos:end="238:0"><if pos:start="219:5" pos:end="238:0">if<condition pos:start="219:7" pos:end="227:23">(    <expr pos:start="219:12" pos:end="227:22"><name pos:start="219:12" pos:end="219:28"><name pos:start="219:12" pos:end="219:12">s</name><operator pos:start="219:13" pos:end="219:14">-&gt;</operator><name pos:start="219:15" pos:end="219:28">int_sample_fmt</name></name> <operator pos:start="219:30" pos:end="219:31">!=</operator> <name pos:start="219:33" pos:end="219:50">AV_SAMPLE_FMT_S16P</name>

        <operator pos:start="221:9" pos:end="221:10">&amp;&amp;</operator> <name pos:start="221:12" pos:end="221:28"><name pos:start="221:12" pos:end="221:12">s</name><operator pos:start="221:13" pos:end="221:14">-&gt;</operator><name pos:start="221:15" pos:end="221:28">int_sample_fmt</name></name> <operator pos:start="221:30" pos:end="221:31">!=</operator> <name pos:start="221:33" pos:end="221:50">AV_SAMPLE_FMT_S32P</name>

        <operator pos:start="223:9" pos:end="223:10">&amp;&amp;</operator> <name pos:start="223:12" pos:end="223:28"><name pos:start="223:12" pos:end="223:12">s</name><operator pos:start="223:13" pos:end="223:14">-&gt;</operator><name pos:start="223:15" pos:end="223:28">int_sample_fmt</name></name> <operator pos:start="223:30" pos:end="223:31">!=</operator> <name pos:start="223:33" pos:end="223:50">AV_SAMPLE_FMT_FLTP</name>

        <operator pos:start="225:9" pos:end="225:10">&amp;&amp;</operator> <name pos:start="225:12" pos:end="225:28"><name pos:start="225:12" pos:end="225:12">s</name><operator pos:start="225:13" pos:end="225:14">-&gt;</operator><name pos:start="225:15" pos:end="225:28">int_sample_fmt</name></name> <operator pos:start="225:30" pos:end="225:31">!=</operator> <name pos:start="225:33" pos:end="225:50">AV_SAMPLE_FMT_DBLP</name>

        <operator pos:start="227:9" pos:end="227:10">&amp;&amp;</operator> <name pos:start="227:12" pos:end="227:22"><name pos:start="227:12" pos:end="227:12">s</name><operator pos:start="227:13" pos:end="227:14">-&gt;</operator><name pos:start="227:15" pos:end="227:22">resample</name></name></expr>)</condition><block pos:start="227:24" pos:end="238:0">{<block_content pos:start="229:9" pos:end="231:18">

        <expr_stmt pos:start="229:9" pos:end="229:93"><expr pos:start="229:9" pos:end="229:92"><call pos:start="229:9" pos:end="229:92"><name pos:start="229:9" pos:end="229:14">av_log</name><argument_list pos:start="229:15" pos:end="229:92">(<argument pos:start="229:16" pos:end="229:16"><expr pos:start="229:16" pos:end="229:16"><name pos:start="229:16" pos:end="229:16">s</name></expr></argument>, <argument pos:start="229:19" pos:end="229:30"><expr pos:start="229:19" pos:end="229:30"><name pos:start="229:19" pos:end="229:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="229:33" pos:end="229:91"><expr pos:start="229:33" pos:end="229:91"><literal type="string" pos:start="229:33" pos:end="229:91">"Resampling only supported with internal s16/s32/flt/dbl\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="231:9" pos:end="231:18">return <expr pos:start="231:16" pos:end="231:17"><operator pos:start="231:16" pos:end="231:16">-</operator><literal type="number" pos:start="231:17" pos:end="231:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



<cpp:define pos:start="237:1" pos:end="237:13">#<cpp:directive pos:start="237:2" pos:end="237:7">define</cpp:directive> <cpp:macro pos:start="237:9" pos:end="237:11"><name pos:start="237:9" pos:end="237:11">RSC</name></cpp:macro> <cpp:value pos:start="237:13" pos:end="237:13">1</cpp:value></cpp:define> <comment type="line" pos:start="237:15" pos:end="237:30">//FIXME finetune</comment>

    <if_stmt pos:start="239:5" pos:end="241:77"><if pos:start="239:5" pos:end="241:77">if<condition pos:start="239:7" pos:end="239:24">(<expr pos:start="239:8" pos:end="239:23"><operator pos:start="239:8" pos:end="239:8">!</operator><name pos:start="239:9" pos:end="239:23"><name pos:start="239:9" pos:end="239:9">s</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator> <name pos:start="239:13" pos:end="239:14">in</name><operator pos:start="239:15" pos:end="239:15">.</operator><name pos:start="239:16" pos:end="239:23">ch_count</name></name></expr>)</condition><block type="pseudo" pos:start="241:9" pos:end="241:77"><block_content pos:start="241:9" pos:end="241:77">

        <expr_stmt pos:start="241:9" pos:end="241:77"><expr pos:start="241:9" pos:end="241:76"><name pos:start="241:9" pos:end="241:23"><name pos:start="241:9" pos:end="241:9">s</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator> <name pos:start="241:13" pos:end="241:14">in</name><operator pos:start="241:15" pos:end="241:15">.</operator><name pos:start="241:16" pos:end="241:23">ch_count</name></name><operator pos:start="241:24" pos:end="241:24">=</operator> <call pos:start="241:26" pos:end="241:76"><name pos:start="241:26" pos:end="241:58">av_get_channel_layout_nb_channels</name><argument_list pos:start="241:59" pos:end="241:76">(<argument pos:start="241:60" pos:end="241:75"><expr pos:start="241:60" pos:end="241:75"><name pos:start="241:60" pos:end="241:75"><name pos:start="241:60" pos:end="241:60">s</name><operator pos:start="241:61" pos:end="241:62">-&gt;</operator> <name pos:start="241:64" pos:end="241:75">in_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="243:5" pos:end="245:41"><if pos:start="243:5" pos:end="245:41">if<condition pos:start="243:7" pos:end="243:25">(<expr pos:start="243:8" pos:end="243:24"><operator pos:start="243:8" pos:end="243:8">!</operator><name pos:start="243:9" pos:end="243:24"><name pos:start="243:9" pos:end="243:9">s</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:24">used_ch_count</name></name></expr>)</condition><block type="pseudo" pos:start="245:9" pos:end="245:41"><block_content pos:start="245:9" pos:end="245:41">

        <expr_stmt pos:start="245:9" pos:end="245:41"><expr pos:start="245:9" pos:end="245:40"><name pos:start="245:9" pos:end="245:24"><name pos:start="245:9" pos:end="245:9">s</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:24">used_ch_count</name></name><operator pos:start="245:25" pos:end="245:25">=</operator> <name pos:start="245:27" pos:end="245:40"><name pos:start="245:27" pos:end="245:27">s</name><operator pos:start="245:28" pos:end="245:29">-&gt;</operator><name pos:start="245:30" pos:end="245:31">in</name><operator pos:start="245:32" pos:end="245:32">.</operator><name pos:start="245:33" pos:end="245:40">ch_count</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="247:5" pos:end="249:77"><if pos:start="247:5" pos:end="249:77">if<condition pos:start="247:7" pos:end="247:24">(<expr pos:start="247:8" pos:end="247:23"><operator pos:start="247:8" pos:end="247:8">!</operator><name pos:start="247:9" pos:end="247:23"><name pos:start="247:9" pos:end="247:9">s</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:14">out</name><operator pos:start="247:15" pos:end="247:15">.</operator><name pos:start="247:16" pos:end="247:23">ch_count</name></name></expr>)</condition><block type="pseudo" pos:start="249:9" pos:end="249:77"><block_content pos:start="249:9" pos:end="249:77">

        <expr_stmt pos:start="249:9" pos:end="249:77"><expr pos:start="249:9" pos:end="249:76"><name pos:start="249:9" pos:end="249:23"><name pos:start="249:9" pos:end="249:9">s</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:14">out</name><operator pos:start="249:15" pos:end="249:15">.</operator><name pos:start="249:16" pos:end="249:23">ch_count</name></name><operator pos:start="249:24" pos:end="249:24">=</operator> <call pos:start="249:26" pos:end="249:76"><name pos:start="249:26" pos:end="249:58">av_get_channel_layout_nb_channels</name><argument_list pos:start="249:59" pos:end="249:76">(<argument pos:start="249:60" pos:end="249:75"><expr pos:start="249:60" pos:end="249:75"><name pos:start="249:60" pos:end="249:75"><name pos:start="249:60" pos:end="249:60">s</name><operator pos:start="249:61" pos:end="249:62">-&gt;</operator><name pos:start="249:63" pos:end="249:75">out_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="253:5" pos:end="261:5"><if pos:start="253:5" pos:end="261:5">if<condition pos:start="253:7" pos:end="253:24">(<expr pos:start="253:8" pos:end="253:23"><operator pos:start="253:8" pos:end="253:8">!</operator><name pos:start="253:9" pos:end="253:23"><name pos:start="253:9" pos:end="253:9">s</name><operator pos:start="253:10" pos:end="253:11">-&gt;</operator> <name pos:start="253:13" pos:end="253:14">in</name><operator pos:start="253:15" pos:end="253:15">.</operator><name pos:start="253:16" pos:end="253:23">ch_count</name></name></expr>)</condition><block pos:start="253:25" pos:end="261:5">{<block_content pos:start="255:9" pos:end="259:18">

        <expr_stmt pos:start="255:9" pos:end="255:37"><expr pos:start="255:9" pos:end="255:36"><call pos:start="255:9" pos:end="255:36"><name pos:start="255:9" pos:end="255:18">av_assert0</name><argument_list pos:start="255:19" pos:end="255:36">(<argument pos:start="255:20" pos:end="255:35"><expr pos:start="255:20" pos:end="255:35"><operator pos:start="255:20" pos:end="255:20">!</operator><name pos:start="255:21" pos:end="255:35"><name pos:start="255:21" pos:end="255:21">s</name><operator pos:start="255:22" pos:end="255:23">-&gt;</operator><name pos:start="255:24" pos:end="255:35">in_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:78"><expr pos:start="257:9" pos:end="257:77"><call pos:start="257:9" pos:end="257:77"><name pos:start="257:9" pos:end="257:14">av_log</name><argument_list pos:start="257:15" pos:end="257:77">(<argument pos:start="257:16" pos:end="257:16"><expr pos:start="257:16" pos:end="257:16"><name pos:start="257:16" pos:end="257:16">s</name></expr></argument>, <argument pos:start="257:19" pos:end="257:30"><expr pos:start="257:19" pos:end="257:30"><name pos:start="257:19" pos:end="257:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="257:33" pos:end="257:76"><expr pos:start="257:33" pos:end="257:76"><literal type="string" pos:start="257:33" pos:end="257:76">"Input channel count and layout are unset\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="259:9" pos:end="259:18">return <expr pos:start="259:16" pos:end="259:17"><operator pos:start="259:16" pos:end="259:16">-</operator><literal type="number" pos:start="259:17" pos:end="259:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="265:5" pos:end="265:84"><expr pos:start="265:5" pos:end="265:83"><call pos:start="265:5" pos:end="265:83"><name pos:start="265:5" pos:end="265:32">av_get_channel_layout_string</name><argument_list pos:start="265:33" pos:end="265:83">(<argument pos:start="265:34" pos:end="265:35"><expr pos:start="265:34" pos:end="265:35"><name pos:start="265:34" pos:end="265:35">l1</name></expr></argument>, <argument pos:start="265:38" pos:end="265:47"><expr pos:start="265:38" pos:end="265:47"><sizeof pos:start="265:38" pos:end="265:47">sizeof<argument_list pos:start="265:44" pos:end="265:47">(<argument pos:start="265:45" pos:end="265:46"><expr pos:start="265:45" pos:end="265:46"><name pos:start="265:45" pos:end="265:46">l1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="265:50" pos:end="265:64"><expr pos:start="265:50" pos:end="265:64"><name pos:start="265:50" pos:end="265:64"><name pos:start="265:50" pos:end="265:50">s</name><operator pos:start="265:51" pos:end="265:52">-&gt;</operator> <name pos:start="265:54" pos:end="265:55">in</name><operator pos:start="265:56" pos:end="265:56">.</operator><name pos:start="265:57" pos:end="265:64">ch_count</name></name></expr></argument>, <argument pos:start="265:67" pos:end="265:82"><expr pos:start="265:67" pos:end="265:82"><name pos:start="265:67" pos:end="265:82"><name pos:start="265:67" pos:end="265:67">s</name><operator pos:start="265:68" pos:end="265:69">-&gt;</operator> <name pos:start="265:71" pos:end="265:82">in_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:84"><expr pos:start="267:5" pos:end="267:83"><call pos:start="267:5" pos:end="267:83"><name pos:start="267:5" pos:end="267:32">av_get_channel_layout_string</name><argument_list pos:start="267:33" pos:end="267:83">(<argument pos:start="267:34" pos:end="267:35"><expr pos:start="267:34" pos:end="267:35"><name pos:start="267:34" pos:end="267:35">l2</name></expr></argument>, <argument pos:start="267:38" pos:end="267:47"><expr pos:start="267:38" pos:end="267:47"><sizeof pos:start="267:38" pos:end="267:47">sizeof<argument_list pos:start="267:44" pos:end="267:47">(<argument pos:start="267:45" pos:end="267:46"><expr pos:start="267:45" pos:end="267:46"><name pos:start="267:45" pos:end="267:46">l2</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="267:50" pos:end="267:64"><expr pos:start="267:50" pos:end="267:64"><name pos:start="267:50" pos:end="267:64"><name pos:start="267:50" pos:end="267:50">s</name><operator pos:start="267:51" pos:end="267:52">-&gt;</operator><name pos:start="267:53" pos:end="267:55">out</name><operator pos:start="267:56" pos:end="267:56">.</operator><name pos:start="267:57" pos:end="267:64">ch_count</name></name></expr></argument>, <argument pos:start="267:67" pos:end="267:82"><expr pos:start="267:67" pos:end="267:82"><name pos:start="267:67" pos:end="267:82"><name pos:start="267:67" pos:end="267:67">s</name><operator pos:start="267:68" pos:end="267:69">-&gt;</operator><name pos:start="267:70" pos:end="267:82">out_ch_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="269:5" pos:end="275:5"><if pos:start="269:5" pos:end="275:5">if <condition pos:start="269:8" pos:end="269:99">(<expr pos:start="269:9" pos:end="269:98"><name pos:start="269:9" pos:end="269:24"><name pos:start="269:9" pos:end="269:9">s</name><operator pos:start="269:10" pos:end="269:11">-&gt;</operator><name pos:start="269:12" pos:end="269:24">out_ch_layout</name></name> <operator pos:start="269:26" pos:end="269:27">&amp;&amp;</operator> <name pos:start="269:29" pos:end="269:43"><name pos:start="269:29" pos:end="269:29">s</name><operator pos:start="269:30" pos:end="269:31">-&gt;</operator><name pos:start="269:32" pos:end="269:34">out</name><operator pos:start="269:35" pos:end="269:35">.</operator><name pos:start="269:36" pos:end="269:43">ch_count</name></name> <operator pos:start="269:45" pos:end="269:46">!=</operator> <call pos:start="269:48" pos:end="269:98"><name pos:start="269:48" pos:end="269:80">av_get_channel_layout_nb_channels</name><argument_list pos:start="269:81" pos:end="269:98">(<argument pos:start="269:82" pos:end="269:97"><expr pos:start="269:82" pos:end="269:97"><name pos:start="269:82" pos:end="269:97"><name pos:start="269:82" pos:end="269:82">s</name><operator pos:start="269:83" pos:end="269:84">-&gt;</operator><name pos:start="269:85" pos:end="269:97">out_ch_layout</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="269:101" pos:end="275:5">{<block_content pos:start="271:9" pos:end="273:31">

        <expr_stmt pos:start="271:9" pos:end="271:121"><expr pos:start="271:9" pos:end="271:120"><call pos:start="271:9" pos:end="271:120"><name pos:start="271:9" pos:end="271:14">av_log</name><argument_list pos:start="271:15" pos:end="271:120">(<argument pos:start="271:16" pos:end="271:16"><expr pos:start="271:16" pos:end="271:16"><name pos:start="271:16" pos:end="271:16">s</name></expr></argument>, <argument pos:start="271:19" pos:end="271:30"><expr pos:start="271:19" pos:end="271:30"><name pos:start="271:19" pos:end="271:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="271:33" pos:end="271:98"><expr pos:start="271:33" pos:end="271:98"><literal type="string" pos:start="271:33" pos:end="271:98">"Output channel layout %s mismatches specified channel count %d\n"</literal></expr></argument>, <argument pos:start="271:101" pos:end="271:102"><expr pos:start="271:101" pos:end="271:102"><name pos:start="271:101" pos:end="271:102">l2</name></expr></argument>, <argument pos:start="271:105" pos:end="271:119"><expr pos:start="271:105" pos:end="271:119"><name pos:start="271:105" pos:end="271:119"><name pos:start="271:105" pos:end="271:105">s</name><operator pos:start="271:106" pos:end="271:107">-&gt;</operator><name pos:start="271:108" pos:end="271:110">out</name><operator pos:start="271:111" pos:end="271:111">.</operator><name pos:start="271:112" pos:end="271:119">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="273:9" pos:end="273:31">return <expr pos:start="273:16" pos:end="273:30"><call pos:start="273:16" pos:end="273:30"><name pos:start="273:16" pos:end="273:22">AVERROR</name><argument_list pos:start="273:23" pos:end="273:30">(<argument pos:start="273:24" pos:end="273:29"><expr pos:start="273:24" pos:end="273:29"><name pos:start="273:24" pos:end="273:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="277:5" pos:end="283:5"><if pos:start="277:5" pos:end="283:5">if <condition pos:start="277:8" pos:end="277:98">(<expr pos:start="277:9" pos:end="277:97"><name pos:start="277:9" pos:end="277:23"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:23">in_ch_layout</name></name> <operator pos:start="277:25" pos:end="277:26">&amp;&amp;</operator> <name pos:start="277:28" pos:end="277:43"><name pos:start="277:28" pos:end="277:28">s</name><operator pos:start="277:29" pos:end="277:30">-&gt;</operator><name pos:start="277:31" pos:end="277:43">used_ch_count</name></name> <operator pos:start="277:45" pos:end="277:46">!=</operator> <call pos:start="277:48" pos:end="277:97"><name pos:start="277:48" pos:end="277:80">av_get_channel_layout_nb_channels</name><argument_list pos:start="277:81" pos:end="277:97">(<argument pos:start="277:82" pos:end="277:96"><expr pos:start="277:82" pos:end="277:96"><name pos:start="277:82" pos:end="277:96"><name pos:start="277:82" pos:end="277:82">s</name><operator pos:start="277:83" pos:end="277:84">-&gt;</operator><name pos:start="277:85" pos:end="277:96">in_ch_layout</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="277:100" pos:end="283:5">{<block_content pos:start="279:9" pos:end="281:31">

        <expr_stmt pos:start="279:9" pos:end="279:121"><expr pos:start="279:9" pos:end="279:120"><call pos:start="279:9" pos:end="279:120"><name pos:start="279:9" pos:end="279:14">av_log</name><argument_list pos:start="279:15" pos:end="279:120">(<argument pos:start="279:16" pos:end="279:16"><expr pos:start="279:16" pos:end="279:16"><name pos:start="279:16" pos:end="279:16">s</name></expr></argument>, <argument pos:start="279:19" pos:end="279:30"><expr pos:start="279:19" pos:end="279:30"><name pos:start="279:19" pos:end="279:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="279:33" pos:end="279:97"><expr pos:start="279:33" pos:end="279:97"><literal type="string" pos:start="279:33" pos:end="279:97">"Input channel layout %s mismatches specified channel count %d\n"</literal></expr></argument>, <argument pos:start="279:100" pos:end="279:101"><expr pos:start="279:100" pos:end="279:101"><name pos:start="279:100" pos:end="279:101">l1</name></expr></argument>, <argument pos:start="279:104" pos:end="279:119"><expr pos:start="279:104" pos:end="279:119"><name pos:start="279:104" pos:end="279:119"><name pos:start="279:104" pos:end="279:104">s</name><operator pos:start="279:105" pos:end="279:106">-&gt;</operator><name pos:start="279:107" pos:end="279:119">used_ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="281:9" pos:end="281:31">return <expr pos:start="281:16" pos:end="281:30"><call pos:start="281:16" pos:end="281:30"><name pos:start="281:16" pos:end="281:22">AVERROR</name><argument_list pos:start="281:23" pos:end="281:30">(<argument pos:start="281:24" pos:end="281:29"><expr pos:start="281:24" pos:end="281:29"><name pos:start="281:24" pos:end="281:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="287:5" pos:end="295:5"><if pos:start="287:5" pos:end="295:5">if <condition pos:start="287:8" pos:end="287:110">(<expr pos:start="287:9" pos:end="287:109"><operator pos:start="287:9" pos:end="287:9">(</operator><operator pos:start="287:10" pos:end="287:10">!</operator><name pos:start="287:11" pos:end="287:26"><name pos:start="287:11" pos:end="287:11">s</name><operator pos:start="287:12" pos:end="287:13">-&gt;</operator><name pos:start="287:14" pos:end="287:26">out_ch_layout</name></name> <operator pos:start="287:28" pos:end="287:29">||</operator> <operator pos:start="287:31" pos:end="287:31">!</operator><name pos:start="287:32" pos:end="287:46"><name pos:start="287:32" pos:end="287:32">s</name><operator pos:start="287:33" pos:end="287:34">-&gt;</operator><name pos:start="287:35" pos:end="287:46">in_ch_layout</name></name><operator pos:start="287:47" pos:end="287:47">)</operator> <operator pos:start="287:49" pos:end="287:50">&amp;&amp;</operator> <name pos:start="287:52" pos:end="287:67"><name pos:start="287:52" pos:end="287:52">s</name><operator pos:start="287:53" pos:end="287:54">-&gt;</operator><name pos:start="287:55" pos:end="287:67">used_ch_count</name></name> <operator pos:start="287:69" pos:end="287:70">!=</operator> <name pos:start="287:72" pos:end="287:86"><name pos:start="287:72" pos:end="287:72">s</name><operator pos:start="287:73" pos:end="287:74">-&gt;</operator><name pos:start="287:75" pos:end="287:77">out</name><operator pos:start="287:78" pos:end="287:78">.</operator><name pos:start="287:79" pos:end="287:86">ch_count</name></name> <operator pos:start="287:88" pos:end="287:89">&amp;&amp;</operator> <operator pos:start="287:91" pos:end="287:91">!</operator><name pos:start="287:92" pos:end="287:109"><name pos:start="287:92" pos:end="287:92">s</name><operator pos:start="287:93" pos:end="287:94">-&gt;</operator><name pos:start="287:95" pos:end="287:109">rematrix_custom</name></name></expr>)</condition> <block pos:start="287:112" pos:end="295:5">{<block_content pos:start="289:9" pos:end="293:18">

        <expr_stmt pos:start="289:9" pos:end="291:73"><expr pos:start="289:9" pos:end="291:72"><call pos:start="289:9" pos:end="291:72"><name pos:start="289:9" pos:end="289:14">av_log</name><argument_list pos:start="289:15" pos:end="291:72">(<argument pos:start="289:16" pos:end="289:16"><expr pos:start="289:16" pos:end="289:16"><name pos:start="289:16" pos:end="289:16">s</name></expr></argument>, <argument pos:start="289:19" pos:end="289:30"><expr pos:start="289:19" pos:end="289:30"><name pos:start="289:19" pos:end="289:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="289:33" pos:end="291:63"><expr pos:start="289:33" pos:end="291:63"><literal type="string" pos:start="289:33" pos:end="289:71">"Rematrix is needed between %s and %s "</literal>

               <literal type="string" pos:start="291:16" pos:end="291:63">"but there is not enough information to do it\n"</literal></expr></argument>, <argument pos:start="291:66" pos:end="291:67"><expr pos:start="291:66" pos:end="291:67"><name pos:start="291:66" pos:end="291:67">l1</name></expr></argument>, <argument pos:start="291:70" pos:end="291:71"><expr pos:start="291:70" pos:end="291:71"><name pos:start="291:70" pos:end="291:71">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="293:9" pos:end="293:18">return <expr pos:start="293:16" pos:end="293:17"><operator pos:start="293:16" pos:end="293:16">-</operator><literal type="number" pos:start="293:17" pos:end="293:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



<expr_stmt pos:start="299:1" pos:end="299:29"><expr pos:start="299:1" pos:end="299:28"><call pos:start="299:1" pos:end="299:28"><name pos:start="299:1" pos:end="299:10">av_assert0</name><argument_list pos:start="299:11" pos:end="299:28">(<argument pos:start="299:12" pos:end="299:27"><expr pos:start="299:12" pos:end="299:27"><name pos:start="299:12" pos:end="299:27"><name pos:start="299:12" pos:end="299:12">s</name><operator pos:start="299:13" pos:end="299:14">-&gt;</operator><name pos:start="299:15" pos:end="299:27">used_ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt pos:start="301:1" pos:end="301:28"><expr pos:start="301:1" pos:end="301:27"><call pos:start="301:1" pos:end="301:27"><name pos:start="301:1" pos:end="301:10">av_assert0</name><argument_list pos:start="301:11" pos:end="301:27">(<argument pos:start="301:12" pos:end="301:26"><expr pos:start="301:12" pos:end="301:26"><name pos:start="301:12" pos:end="301:26"><name pos:start="301:12" pos:end="301:12">s</name><operator pos:start="301:13" pos:end="301:14">-&gt;</operator><name pos:start="301:15" pos:end="301:17">out</name><operator pos:start="301:18" pos:end="301:18">.</operator><name pos:start="301:19" pos:end="301:26">ch_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:117"><expr pos:start="303:5" pos:end="303:116"><name pos:start="303:5" pos:end="303:21"><name pos:start="303:5" pos:end="303:5">s</name><operator pos:start="303:6" pos:end="303:7">-&gt;</operator><name pos:start="303:8" pos:end="303:21">resample_first</name></name><operator pos:start="303:22" pos:end="303:22">=</operator> <name pos:start="303:24" pos:end="303:26">RSC</name><operator pos:start="303:27" pos:end="303:27">*</operator><name pos:start="303:28" pos:end="303:42"><name pos:start="303:28" pos:end="303:28">s</name><operator pos:start="303:29" pos:end="303:30">-&gt;</operator><name pos:start="303:31" pos:end="303:33">out</name><operator pos:start="303:34" pos:end="303:34">.</operator><name pos:start="303:35" pos:end="303:42">ch_count</name></name><operator pos:start="303:43" pos:end="303:43">/</operator><name pos:start="303:44" pos:end="303:57"><name pos:start="303:44" pos:end="303:44">s</name><operator pos:start="303:45" pos:end="303:46">-&gt;</operator><name pos:start="303:47" pos:end="303:48">in</name><operator pos:start="303:49" pos:end="303:49">.</operator><name pos:start="303:50" pos:end="303:57">ch_count</name></name> <operator pos:start="303:59" pos:end="303:59">-</operator> <name pos:start="303:61" pos:end="303:63">RSC</name> <operator pos:start="303:65" pos:end="303:65">&lt;</operator> <name pos:start="303:67" pos:end="303:84"><name pos:start="303:67" pos:end="303:67">s</name><operator pos:start="303:68" pos:end="303:69">-&gt;</operator><name pos:start="303:70" pos:end="303:84">out_sample_rate</name></name><operator pos:start="303:85" pos:end="303:85">/</operator><operator pos:start="303:86" pos:end="303:86">(</operator><name pos:start="303:87" pos:end="303:91">float</name><operator pos:start="303:92" pos:end="303:92">)</operator><name pos:start="303:93" pos:end="303:110"><name pos:start="303:93" pos:end="303:93">s</name><operator pos:start="303:94" pos:end="303:95">-&gt;</operator> <name pos:start="303:97" pos:end="303:110">in_sample_rate</name></name> <operator pos:start="303:112" pos:end="303:112">-</operator> <literal type="number" pos:start="303:114" pos:end="303:116">1.0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="307:5" pos:end="307:24"><expr pos:start="307:5" pos:end="307:23"><name pos:start="307:5" pos:end="307:16"><name pos:start="307:5" pos:end="307:5">s</name><operator pos:start="307:6" pos:end="307:7">-&gt;</operator><name pos:start="307:8" pos:end="307:16">in_buffer</name></name><operator pos:start="307:17" pos:end="307:17">=</operator> <name pos:start="307:19" pos:end="307:23"><name pos:start="307:19" pos:end="307:19">s</name><operator pos:start="307:20" pos:end="307:21">-&gt;</operator><name pos:start="307:22" pos:end="307:23">in</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:24"><expr pos:start="309:5" pos:end="309:23"><name pos:start="309:5" pos:end="309:14"><name pos:start="309:5" pos:end="309:5">s</name><operator pos:start="309:6" pos:end="309:7">-&gt;</operator><name pos:start="309:8" pos:end="309:14">silence</name></name>  <operator pos:start="309:17" pos:end="309:17">=</operator> <name pos:start="309:19" pos:end="309:23"><name pos:start="309:19" pos:end="309:19">s</name><operator pos:start="309:20" pos:end="309:21">-&gt;</operator><name pos:start="309:22" pos:end="309:23">in</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="311:5" pos:end="311:25"><expr pos:start="311:5" pos:end="311:24"><name pos:start="311:5" pos:end="311:16"><name pos:start="311:5" pos:end="311:5">s</name><operator pos:start="311:6" pos:end="311:7">-&gt;</operator><name pos:start="311:8" pos:end="311:16">drop_temp</name></name><operator pos:start="311:17" pos:end="311:17">=</operator> <name pos:start="311:19" pos:end="311:24"><name pos:start="311:19" pos:end="311:19">s</name><operator pos:start="311:20" pos:end="311:21">-&gt;</operator><name pos:start="311:22" pos:end="311:24">out</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="315:5" pos:end="323:5"><if pos:start="315:5" pos:end="323:5">if<condition pos:start="315:7" pos:end="315:76">(<expr pos:start="315:8" pos:end="315:75"><operator pos:start="315:8" pos:end="315:8">!</operator><name pos:start="315:9" pos:end="315:19"><name pos:start="315:9" pos:end="315:9">s</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:19">resample</name></name> <operator pos:start="315:21" pos:end="315:22">&amp;&amp;</operator> <operator pos:start="315:24" pos:end="315:24">!</operator><name pos:start="315:25" pos:end="315:35"><name pos:start="315:25" pos:end="315:25">s</name><operator pos:start="315:26" pos:end="315:27">-&gt;</operator><name pos:start="315:28" pos:end="315:35">rematrix</name></name> <operator pos:start="315:37" pos:end="315:38">&amp;&amp;</operator> <operator pos:start="315:40" pos:end="315:40">!</operator><name pos:start="315:41" pos:end="315:54"><name pos:start="315:41" pos:end="315:41">s</name><operator pos:start="315:42" pos:end="315:43">-&gt;</operator><name pos:start="315:44" pos:end="315:54">channel_map</name></name> <operator pos:start="315:56" pos:end="315:57">&amp;&amp;</operator> <operator pos:start="315:59" pos:end="315:59">!</operator><name pos:start="315:60" pos:end="315:75"><name pos:start="315:60" pos:end="315:60">s</name><operator pos:start="315:61" pos:end="315:62">-&gt;</operator><name pos:start="315:63" pos:end="315:68">dither</name><operator pos:start="315:69" pos:end="315:69">.</operator><name pos:start="315:70" pos:end="315:75">method</name></name></expr>)</condition><block pos:start="315:77" pos:end="323:5">{<block_content pos:start="317:9" pos:end="321:17">

        <expr_stmt pos:start="317:9" pos:end="319:96"><expr pos:start="317:9" pos:end="319:95"><name pos:start="317:9" pos:end="317:23"><name pos:start="317:9" pos:end="317:9">s</name><operator pos:start="317:10" pos:end="317:11">-&gt;</operator><name pos:start="317:12" pos:end="317:23">full_convert</name></name> <operator pos:start="317:25" pos:end="317:25">=</operator> <call pos:start="317:27" pos:end="319:95"><name pos:start="317:27" pos:end="317:50">swri_audio_convert_alloc</name><argument_list pos:start="317:51" pos:end="319:95">(<argument pos:start="317:52" pos:end="317:68"><expr pos:start="317:52" pos:end="317:68"><name pos:start="317:52" pos:end="317:68"><name pos:start="317:52" pos:end="317:52">s</name><operator pos:start="317:53" pos:end="317:54">-&gt;</operator><name pos:start="317:55" pos:end="317:68">out_sample_fmt</name></name></expr></argument>,

                                                   <argument pos:start="319:52" pos:end="319:68"><expr pos:start="319:52" pos:end="319:68"><name pos:start="319:52" pos:end="319:68"><name pos:start="319:52" pos:end="319:52">s</name><operator pos:start="319:53" pos:end="319:54">-&gt;</operator> <name pos:start="319:56" pos:end="319:68">in_sample_fmt</name></name></expr></argument>, <argument pos:start="319:71" pos:end="319:85"><expr pos:start="319:71" pos:end="319:85"><name pos:start="319:71" pos:end="319:85"><name pos:start="319:71" pos:end="319:71">s</name><operator pos:start="319:72" pos:end="319:73">-&gt;</operator> <name pos:start="319:75" pos:end="319:76">in</name><operator pos:start="319:77" pos:end="319:77">.</operator><name pos:start="319:78" pos:end="319:85">ch_count</name></name></expr></argument>, <argument pos:start="319:88" pos:end="319:91"><expr pos:start="319:88" pos:end="319:91"><name pos:start="319:88" pos:end="319:91">NULL</name></expr></argument>, <argument pos:start="319:94" pos:end="319:94"><expr pos:start="319:94" pos:end="319:94"><literal type="number" pos:start="319:94" pos:end="319:94">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="321:9" pos:end="321:17">return <expr pos:start="321:16" pos:end="321:16"><literal type="number" pos:start="321:16" pos:end="321:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="327:5" pos:end="329:101"><expr pos:start="327:5" pos:end="329:100"><name pos:start="327:5" pos:end="327:17"><name pos:start="327:5" pos:end="327:5">s</name><operator pos:start="327:6" pos:end="327:7">-&gt;</operator><name pos:start="327:8" pos:end="327:17">in_convert</name></name> <operator pos:start="327:19" pos:end="327:19">=</operator> <call pos:start="327:21" pos:end="329:100"><name pos:start="327:21" pos:end="327:44">swri_audio_convert_alloc</name><argument_list pos:start="327:45" pos:end="329:100">(<argument pos:start="327:46" pos:end="327:62"><expr pos:start="327:46" pos:end="327:62"><name pos:start="327:46" pos:end="327:62"><name pos:start="327:46" pos:end="327:46">s</name><operator pos:start="327:47" pos:end="327:48">-&gt;</operator><name pos:start="327:49" pos:end="327:62">int_sample_fmt</name></name></expr></argument>,

                                             <argument pos:start="329:46" pos:end="329:62"><expr pos:start="329:46" pos:end="329:62"><name pos:start="329:46" pos:end="329:62"><name pos:start="329:46" pos:end="329:46">s</name><operator pos:start="329:47" pos:end="329:48">-&gt;</operator> <name pos:start="329:50" pos:end="329:62">in_sample_fmt</name></name></expr></argument>, <argument pos:start="329:65" pos:end="329:80"><expr pos:start="329:65" pos:end="329:80"><name pos:start="329:65" pos:end="329:80"><name pos:start="329:65" pos:end="329:65">s</name><operator pos:start="329:66" pos:end="329:67">-&gt;</operator><name pos:start="329:68" pos:end="329:80">used_ch_count</name></name></expr></argument>, <argument pos:start="329:83" pos:end="329:96"><expr pos:start="329:83" pos:end="329:96"><name pos:start="329:83" pos:end="329:96"><name pos:start="329:83" pos:end="329:83">s</name><operator pos:start="329:84" pos:end="329:85">-&gt;</operator><name pos:start="329:86" pos:end="329:96">channel_map</name></name></expr></argument>, <argument pos:start="329:99" pos:end="329:99"><expr pos:start="329:99" pos:end="329:99"><literal type="number" pos:start="329:99" pos:end="329:99">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="333:90"><expr pos:start="331:5" pos:end="333:89"><name pos:start="331:5" pos:end="331:18"><name pos:start="331:5" pos:end="331:5">s</name><operator pos:start="331:6" pos:end="331:7">-&gt;</operator><name pos:start="331:8" pos:end="331:18">out_convert</name></name><operator pos:start="331:19" pos:end="331:19">=</operator> <call pos:start="331:21" pos:end="333:89"><name pos:start="331:21" pos:end="331:44">swri_audio_convert_alloc</name><argument_list pos:start="331:45" pos:end="333:89">(<argument pos:start="331:46" pos:end="331:62"><expr pos:start="331:46" pos:end="331:62"><name pos:start="331:46" pos:end="331:62"><name pos:start="331:46" pos:end="331:46">s</name><operator pos:start="331:47" pos:end="331:48">-&gt;</operator><name pos:start="331:49" pos:end="331:62">out_sample_fmt</name></name></expr></argument>,

                                             <argument pos:start="333:46" pos:end="333:62"><expr pos:start="333:46" pos:end="333:62"><name pos:start="333:46" pos:end="333:62"><name pos:start="333:46" pos:end="333:46">s</name><operator pos:start="333:47" pos:end="333:48">-&gt;</operator><name pos:start="333:49" pos:end="333:62">int_sample_fmt</name></name></expr></argument>, <argument pos:start="333:65" pos:end="333:79"><expr pos:start="333:65" pos:end="333:79"><name pos:start="333:65" pos:end="333:79"><name pos:start="333:65" pos:end="333:65">s</name><operator pos:start="333:66" pos:end="333:67">-&gt;</operator><name pos:start="333:68" pos:end="333:70">out</name><operator pos:start="333:71" pos:end="333:71">.</operator><name pos:start="333:72" pos:end="333:79">ch_count</name></name></expr></argument>, <argument pos:start="333:82" pos:end="333:85"><expr pos:start="333:82" pos:end="333:85"><name pos:start="333:82" pos:end="333:85">NULL</name></expr></argument>, <argument pos:start="333:88" pos:end="333:88"><expr pos:start="333:88" pos:end="333:88"><literal type="number" pos:start="333:88" pos:end="333:88">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="337:5" pos:end="339:31"><if pos:start="337:5" pos:end="339:31">if <condition pos:start="337:8" pos:end="337:42">(<expr pos:start="337:9" pos:end="337:41"><operator pos:start="337:9" pos:end="337:9">!</operator><name pos:start="337:10" pos:end="337:22"><name pos:start="337:10" pos:end="337:10">s</name><operator pos:start="337:11" pos:end="337:12">-&gt;</operator><name pos:start="337:13" pos:end="337:22">in_convert</name></name> <operator pos:start="337:24" pos:end="337:25">||</operator> <operator pos:start="337:27" pos:end="337:27">!</operator><name pos:start="337:28" pos:end="337:41"><name pos:start="337:28" pos:end="337:28">s</name><operator pos:start="337:29" pos:end="337:30">-&gt;</operator><name pos:start="337:31" pos:end="337:41">out_convert</name></name></expr>)</condition><block type="pseudo" pos:start="339:9" pos:end="339:31"><block_content pos:start="339:9" pos:end="339:31">

        <return pos:start="339:9" pos:end="339:31">return <expr pos:start="339:16" pos:end="339:30"><call pos:start="339:16" pos:end="339:30"><name pos:start="339:16" pos:end="339:22">AVERROR</name><argument_list pos:start="339:23" pos:end="339:30">(<argument pos:start="339:24" pos:end="339:29"><expr pos:start="339:24" pos:end="339:29"><name pos:start="339:24" pos:end="339:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="343:5" pos:end="343:21"><expr pos:start="343:5" pos:end="343:20"><name pos:start="343:5" pos:end="343:13"><name pos:start="343:5" pos:end="343:5">s</name><operator pos:start="343:6" pos:end="343:7">-&gt;</operator><name pos:start="343:8" pos:end="343:13">postin</name></name><operator pos:start="343:14" pos:end="343:14">=</operator> <name pos:start="343:16" pos:end="343:20"><name pos:start="343:16" pos:end="343:16">s</name><operator pos:start="343:17" pos:end="343:18">-&gt;</operator><name pos:start="343:19" pos:end="343:20">in</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:22"><expr pos:start="345:5" pos:end="345:21"><name pos:start="345:5" pos:end="345:13"><name pos:start="345:5" pos:end="345:5">s</name><operator pos:start="345:6" pos:end="345:7">-&gt;</operator><name pos:start="345:8" pos:end="345:13">preout</name></name><operator pos:start="345:14" pos:end="345:14">=</operator> <name pos:start="345:16" pos:end="345:21"><name pos:start="345:16" pos:end="345:16">s</name><operator pos:start="345:17" pos:end="345:18">-&gt;</operator><name pos:start="345:19" pos:end="345:21">out</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="347:5" pos:end="347:21"><expr pos:start="347:5" pos:end="347:20"><name pos:start="347:5" pos:end="347:13"><name pos:start="347:5" pos:end="347:5">s</name><operator pos:start="347:6" pos:end="347:7">-&gt;</operator><name pos:start="347:8" pos:end="347:13">midbuf</name></name><operator pos:start="347:14" pos:end="347:14">=</operator> <name pos:start="347:16" pos:end="347:20"><name pos:start="347:16" pos:end="347:16">s</name><operator pos:start="347:17" pos:end="347:18">-&gt;</operator><name pos:start="347:19" pos:end="347:20">in</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="351:5" pos:end="361:5"><if pos:start="351:5" pos:end="361:5">if<condition pos:start="351:7" pos:end="351:22">(<expr pos:start="351:8" pos:end="351:21"><name pos:start="351:8" pos:end="351:21"><name pos:start="351:8" pos:end="351:8">s</name><operator pos:start="351:9" pos:end="351:10">-&gt;</operator><name pos:start="351:11" pos:end="351:21">channel_map</name></name></expr>)</condition><block pos:start="351:23" pos:end="361:5">{<block_content pos:start="353:9" pos:end="359:52">

        <expr_stmt pos:start="353:9" pos:end="355:45"><expr pos:start="353:9" pos:end="355:44"><name pos:start="353:9" pos:end="353:26"><name pos:start="353:9" pos:end="353:9">s</name><operator pos:start="353:10" pos:end="353:11">-&gt;</operator><name pos:start="353:12" pos:end="353:17">postin</name><operator pos:start="353:18" pos:end="353:18">.</operator><name pos:start="353:19" pos:end="353:26">ch_count</name></name><operator pos:start="353:27" pos:end="353:27">=</operator>

        <name pos:start="355:9" pos:end="355:26"><name pos:start="355:9" pos:end="355:9">s</name><operator pos:start="355:10" pos:end="355:11">-&gt;</operator><name pos:start="355:12" pos:end="355:17">midbuf</name><operator pos:start="355:18" pos:end="355:18">.</operator><name pos:start="355:19" pos:end="355:26">ch_count</name></name><operator pos:start="355:27" pos:end="355:27">=</operator> <name pos:start="355:29" pos:end="355:44"><name pos:start="355:29" pos:end="355:29">s</name><operator pos:start="355:30" pos:end="355:31">-&gt;</operator><name pos:start="355:32" pos:end="355:44">used_ch_count</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="357:9" pos:end="359:52"><if pos:start="357:9" pos:end="359:52">if<condition pos:start="357:11" pos:end="357:23">(<expr pos:start="357:12" pos:end="357:22"><name pos:start="357:12" pos:end="357:22"><name pos:start="357:12" pos:end="357:12">s</name><operator pos:start="357:13" pos:end="357:14">-&gt;</operator><name pos:start="357:15" pos:end="357:22">resample</name></name></expr>)</condition><block type="pseudo" pos:start="359:13" pos:end="359:52"><block_content pos:start="359:13" pos:end="359:52">

            <expr_stmt pos:start="359:13" pos:end="359:52"><expr pos:start="359:13" pos:end="359:51"><name pos:start="359:13" pos:end="359:33"><name pos:start="359:13" pos:end="359:13">s</name><operator pos:start="359:14" pos:end="359:15">-&gt;</operator><name pos:start="359:16" pos:end="359:24">in_buffer</name><operator pos:start="359:25" pos:end="359:25">.</operator><name pos:start="359:26" pos:end="359:33">ch_count</name></name><operator pos:start="359:34" pos:end="359:34">=</operator> <name pos:start="359:36" pos:end="359:51"><name pos:start="359:36" pos:end="359:36">s</name><operator pos:start="359:37" pos:end="359:38">-&gt;</operator><name pos:start="359:39" pos:end="359:51">used_ch_count</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="363:5" pos:end="371:5"><if pos:start="363:5" pos:end="371:5">if<condition pos:start="363:7" pos:end="363:26">(<expr pos:start="363:8" pos:end="363:25"><operator pos:start="363:8" pos:end="363:8">!</operator><name pos:start="363:9" pos:end="363:25"><name pos:start="363:9" pos:end="363:9">s</name><operator pos:start="363:10" pos:end="363:11">-&gt;</operator><name pos:start="363:12" pos:end="363:25">resample_first</name></name></expr>)</condition><block pos:start="363:27" pos:end="371:5">{<block_content pos:start="365:9" pos:end="369:52">

        <expr_stmt pos:start="365:9" pos:end="365:44"><expr pos:start="365:9" pos:end="365:43"><name pos:start="365:9" pos:end="365:26"><name pos:start="365:9" pos:end="365:9">s</name><operator pos:start="365:10" pos:end="365:11">-&gt;</operator><name pos:start="365:12" pos:end="365:17">midbuf</name><operator pos:start="365:18" pos:end="365:18">.</operator><name pos:start="365:19" pos:end="365:26">ch_count</name></name><operator pos:start="365:27" pos:end="365:27">=</operator> <name pos:start="365:29" pos:end="365:43"><name pos:start="365:29" pos:end="365:29">s</name><operator pos:start="365:30" pos:end="365:31">-&gt;</operator><name pos:start="365:32" pos:end="365:34">out</name><operator pos:start="365:35" pos:end="365:35">.</operator><name pos:start="365:36" pos:end="365:43">ch_count</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="367:9" pos:end="369:52"><if pos:start="367:9" pos:end="369:52">if<condition pos:start="367:11" pos:end="367:23">(<expr pos:start="367:12" pos:end="367:22"><name pos:start="367:12" pos:end="367:22"><name pos:start="367:12" pos:end="367:12">s</name><operator pos:start="367:13" pos:end="367:14">-&gt;</operator><name pos:start="367:15" pos:end="367:22">resample</name></name></expr>)</condition><block type="pseudo" pos:start="369:13" pos:end="369:52"><block_content pos:start="369:13" pos:end="369:52">

            <expr_stmt pos:start="369:13" pos:end="369:52"><expr pos:start="369:13" pos:end="369:51"><name pos:start="369:13" pos:end="369:33"><name pos:start="369:13" pos:end="369:13">s</name><operator pos:start="369:14" pos:end="369:15">-&gt;</operator><name pos:start="369:16" pos:end="369:24">in_buffer</name><operator pos:start="369:25" pos:end="369:25">.</operator><name pos:start="369:26" pos:end="369:33">ch_count</name></name> <operator pos:start="369:35" pos:end="369:35">=</operator> <name pos:start="369:37" pos:end="369:51"><name pos:start="369:37" pos:end="369:37">s</name><operator pos:start="369:38" pos:end="369:39">-&gt;</operator><name pos:start="369:40" pos:end="369:42">out</name><operator pos:start="369:43" pos:end="369:43">.</operator><name pos:start="369:44" pos:end="369:51">ch_count</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="375:5" pos:end="375:53"><expr pos:start="375:5" pos:end="375:52"><call pos:start="375:5" pos:end="375:52"><name pos:start="375:5" pos:end="375:21">set_audiodata_fmt</name><argument_list pos:start="375:22" pos:end="375:52">(<argument pos:start="375:23" pos:end="375:32"><expr pos:start="375:23" pos:end="375:32"><operator pos:start="375:23" pos:end="375:23">&amp;</operator><name pos:start="375:24" pos:end="375:32"><name pos:start="375:24" pos:end="375:24">s</name><operator pos:start="375:25" pos:end="375:26">-&gt;</operator><name pos:start="375:27" pos:end="375:32">postin</name></name></expr></argument>, <argument pos:start="375:35" pos:end="375:51"><expr pos:start="375:35" pos:end="375:51"><name pos:start="375:35" pos:end="375:51"><name pos:start="375:35" pos:end="375:35">s</name><operator pos:start="375:36" pos:end="375:37">-&gt;</operator><name pos:start="375:38" pos:end="375:51">int_sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="377:5" pos:end="377:53"><expr pos:start="377:5" pos:end="377:52"><call pos:start="377:5" pos:end="377:52"><name pos:start="377:5" pos:end="377:21">set_audiodata_fmt</name><argument_list pos:start="377:22" pos:end="377:52">(<argument pos:start="377:23" pos:end="377:32"><expr pos:start="377:23" pos:end="377:32"><operator pos:start="377:23" pos:end="377:23">&amp;</operator><name pos:start="377:24" pos:end="377:32"><name pos:start="377:24" pos:end="377:24">s</name><operator pos:start="377:25" pos:end="377:26">-&gt;</operator><name pos:start="377:27" pos:end="377:32">midbuf</name></name></expr></argument>, <argument pos:start="377:35" pos:end="377:51"><expr pos:start="377:35" pos:end="377:51"><name pos:start="377:35" pos:end="377:51"><name pos:start="377:35" pos:end="377:35">s</name><operator pos:start="377:36" pos:end="377:37">-&gt;</operator><name pos:start="377:38" pos:end="377:51">int_sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="379:5" pos:end="379:53"><expr pos:start="379:5" pos:end="379:52"><call pos:start="379:5" pos:end="379:52"><name pos:start="379:5" pos:end="379:21">set_audiodata_fmt</name><argument_list pos:start="379:22" pos:end="379:52">(<argument pos:start="379:23" pos:end="379:32"><expr pos:start="379:23" pos:end="379:32"><operator pos:start="379:23" pos:end="379:23">&amp;</operator><name pos:start="379:24" pos:end="379:32"><name pos:start="379:24" pos:end="379:24">s</name><operator pos:start="379:25" pos:end="379:26">-&gt;</operator><name pos:start="379:27" pos:end="379:32">preout</name></name></expr></argument>, <argument pos:start="379:35" pos:end="379:51"><expr pos:start="379:35" pos:end="379:51"><name pos:start="379:35" pos:end="379:51"><name pos:start="379:35" pos:end="379:35">s</name><operator pos:start="379:36" pos:end="379:37">-&gt;</operator><name pos:start="379:38" pos:end="379:51">int_sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="383:5" pos:end="387:5"><if pos:start="383:5" pos:end="387:5">if<condition pos:start="383:7" pos:end="383:19">(<expr pos:start="383:8" pos:end="383:18"><name pos:start="383:8" pos:end="383:18"><name pos:start="383:8" pos:end="383:8">s</name><operator pos:start="383:9" pos:end="383:10">-&gt;</operator><name pos:start="383:11" pos:end="383:18">resample</name></name></expr>)</condition><block pos:start="383:20" pos:end="387:5">{<block_content pos:start="385:9" pos:end="385:60">

        <expr_stmt pos:start="385:9" pos:end="385:60"><expr pos:start="385:9" pos:end="385:59"><call pos:start="385:9" pos:end="385:59"><name pos:start="385:9" pos:end="385:25">set_audiodata_fmt</name><argument_list pos:start="385:26" pos:end="385:59">(<argument pos:start="385:27" pos:end="385:39"><expr pos:start="385:27" pos:end="385:39"><operator pos:start="385:27" pos:end="385:27">&amp;</operator><name pos:start="385:28" pos:end="385:39"><name pos:start="385:28" pos:end="385:28">s</name><operator pos:start="385:29" pos:end="385:30">-&gt;</operator><name pos:start="385:31" pos:end="385:39">in_buffer</name></name></expr></argument>, <argument pos:start="385:42" pos:end="385:58"><expr pos:start="385:42" pos:end="385:58"><name pos:start="385:42" pos:end="385:58"><name pos:start="385:42" pos:end="385:42">s</name><operator pos:start="385:43" pos:end="385:44">-&gt;</operator><name pos:start="385:45" pos:end="385:58">int_sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="391:5" pos:end="393:19"><if pos:start="391:5" pos:end="393:19">if <condition pos:start="391:8" pos:end="391:78">(<expr pos:start="391:9" pos:end="391:77"><operator pos:start="391:9" pos:end="391:9">(</operator><name pos:start="391:10" pos:end="391:12">ret</name> <operator pos:start="391:14" pos:end="391:14">=</operator> <call pos:start="391:16" pos:end="391:72"><name pos:start="391:16" pos:end="391:31">swri_dither_init</name><argument_list pos:start="391:32" pos:end="391:72">(<argument pos:start="391:33" pos:end="391:33"><expr pos:start="391:33" pos:end="391:33"><name pos:start="391:33" pos:end="391:33">s</name></expr></argument>, <argument pos:start="391:36" pos:end="391:52"><expr pos:start="391:36" pos:end="391:52"><name pos:start="391:36" pos:end="391:52"><name pos:start="391:36" pos:end="391:36">s</name><operator pos:start="391:37" pos:end="391:38">-&gt;</operator><name pos:start="391:39" pos:end="391:52">out_sample_fmt</name></name></expr></argument>, <argument pos:start="391:55" pos:end="391:71"><expr pos:start="391:55" pos:end="391:71"><name pos:start="391:55" pos:end="391:71"><name pos:start="391:55" pos:end="391:55">s</name><operator pos:start="391:56" pos:end="391:57">-&gt;</operator><name pos:start="391:58" pos:end="391:71">int_sample_fmt</name></name></expr></argument>)</argument_list></call><operator pos:start="391:73" pos:end="391:73">)</operator> <operator pos:start="391:75" pos:end="391:75">&lt;</operator> <literal type="number" pos:start="391:77" pos:end="391:77">0</literal></expr>)</condition><block type="pseudo" pos:start="393:9" pos:end="393:19"><block_content pos:start="393:9" pos:end="393:19">

        <return pos:start="393:9" pos:end="393:19">return <expr pos:start="393:16" pos:end="393:18"><name pos:start="393:16" pos:end="393:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="397:5" pos:end="399:37"><if pos:start="397:5" pos:end="399:37">if<condition pos:start="397:7" pos:end="397:39">(<expr pos:start="397:8" pos:end="397:38"><name pos:start="397:8" pos:end="397:18"><name pos:start="397:8" pos:end="397:8">s</name><operator pos:start="397:9" pos:end="397:10">-&gt;</operator><name pos:start="397:11" pos:end="397:18">rematrix</name></name> <operator pos:start="397:20" pos:end="397:21">||</operator> <name pos:start="397:23" pos:end="397:38"><name pos:start="397:23" pos:end="397:23">s</name><operator pos:start="397:24" pos:end="397:25">-&gt;</operator><name pos:start="397:26" pos:end="397:31">dither</name><operator pos:start="397:32" pos:end="397:32">.</operator><name pos:start="397:33" pos:end="397:38">method</name></name></expr>)</condition><block type="pseudo" pos:start="399:9" pos:end="399:37"><block_content pos:start="399:9" pos:end="399:37">

        <return pos:start="399:9" pos:end="399:37">return <expr pos:start="399:16" pos:end="399:36"><call pos:start="399:16" pos:end="399:36"><name pos:start="399:16" pos:end="399:33">swri_rematrix_init</name><argument_list pos:start="399:34" pos:end="399:36">(<argument pos:start="399:35" pos:end="399:35"><expr pos:start="399:35" pos:end="399:35"><name pos:start="399:35" pos:end="399:35">s</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="403:5" pos:end="403:13">return <expr pos:start="403:12" pos:end="403:12"><literal type="number" pos:start="403:12" pos:end="403:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
