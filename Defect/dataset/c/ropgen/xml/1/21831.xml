<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21831.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">fdctrl_write_data</name><parameter_list pos:start="1:30" pos:end="1:61">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:36">FDCtrl</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">fdctrl</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:60"><decl pos:start="1:47" pos:end="1:60"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:54">uint32_t</name></type> <name pos:start="1:56" pos:end="1:60">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">FDrive</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:19">cur_drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">pos</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:20">/* Reset mode */</comment>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:39">(<expr pos:start="13:9" pos:end="13:38"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:21"><name pos:start="13:11" pos:end="13:16">fdctrl</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:21">dor</name></name> <operator pos:start="13:23" pos:end="13:23">&amp;</operator> <name pos:start="13:25" pos:end="13:37">FD_DOR_nRESET</name><operator pos:start="13:38" pos:end="13:38">)</operator></expr>)</condition> <block pos:start="13:41" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:63"><expr pos:start="15:9" pos:end="15:62"><call pos:start="15:9" pos:end="15:62"><name pos:start="15:9" pos:end="15:22">FLOPPY_DPRINTF</name><argument_list pos:start="15:23" pos:end="15:62">(<argument pos:start="15:24" pos:end="15:61"><expr pos:start="15:24" pos:end="15:61"><literal type="string" pos:start="15:24" pos:end="15:61">"Floppy controller in RESET state !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:66">(<expr pos:start="21:9" pos:end="21:65"><operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:21"><name pos:start="21:11" pos:end="21:16">fdctrl</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:21">msr</name></name> <operator pos:start="21:23" pos:end="21:23">&amp;</operator> <name pos:start="21:25" pos:end="21:34">FD_MSR_RQM</name><operator pos:start="21:35" pos:end="21:35">)</operator> <operator pos:start="21:37" pos:end="21:38">||</operator> <operator pos:start="21:40" pos:end="21:40">(</operator><name pos:start="21:41" pos:end="21:51"><name pos:start="21:41" pos:end="21:46">fdctrl</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:51">msr</name></name> <operator pos:start="21:53" pos:end="21:53">&amp;</operator> <name pos:start="21:55" pos:end="21:64">FD_MSR_DIO</name><operator pos:start="21:65" pos:end="21:65">)</operator></expr>)</condition> <block pos:start="21:68" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:68"><expr pos:start="23:9" pos:end="23:67"><call pos:start="23:9" pos:end="23:67"><name pos:start="23:9" pos:end="23:22">FLOPPY_DPRINTF</name><argument_list pos:start="23:23" pos:end="23:67">(<argument pos:start="23:24" pos:end="23:66"><expr pos:start="23:24" pos:end="23:66"><literal type="string" pos:start="23:24" pos:end="23:66">"error: controller not ready for writing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:10">fdctrl</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:15">dsr</name></name> <operator pos:start="29:17" pos:end="29:18">&amp;=</operator> <operator pos:start="29:20" pos:end="29:20">~</operator><name pos:start="29:21" pos:end="29:34">FD_DSR_PWRDOWN</name></expr>;</expr_stmt>

    <comment type="block" pos:start="31:5" pos:end="31:36">/* Is it write command time ? */</comment>

    <if_stmt pos:start="33:5" pos:end="85:5"><if pos:start="33:5" pos:end="85:5">if <condition pos:start="33:8" pos:end="33:36">(<expr pos:start="33:9" pos:end="33:35"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:14">fdctrl</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:19">msr</name></name> <operator pos:start="33:21" pos:end="33:21">&amp;</operator> <name pos:start="33:23" pos:end="33:35">FD_MSR_NONDMA</name></expr>)</condition> <block pos:start="33:38" pos:end="85:5">{<block_content pos:start="37:9" pos:end="83:15">

        <comment type="block" pos:start="35:9" pos:end="35:29">/* FIFO data write */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:11">pos</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:30"><name pos:start="37:15" pos:end="37:20">fdctrl</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:30">data_pos</name></name><operator pos:start="37:31" pos:end="37:32">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:29"><expr pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:11">pos</name> <operator pos:start="39:13" pos:end="39:14">%=</operator> <name pos:start="39:16" pos:end="39:28">FD_SECTOR_LEN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:14">fdctrl</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:20">fifo</name><index pos:start="41:21" pos:end="41:25">[<expr pos:start="41:22" pos:end="41:24"><name pos:start="41:22" pos:end="41:24">pos</name></expr>]</index></name> <operator pos:start="41:27" pos:end="41:27">=</operator> <name pos:start="41:29" pos:end="41:33">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="71:9"><if pos:start="43:9" pos:end="71:9">if <condition pos:start="43:12" pos:end="45:49">(<expr pos:start="43:13" pos:end="45:48"><name pos:start="43:13" pos:end="43:15">pos</name> <operator pos:start="43:17" pos:end="43:18">==</operator> <name pos:start="43:20" pos:end="43:32">FD_SECTOR_LEN</name> <operator pos:start="43:34" pos:end="43:34">-</operator> <literal type="number" pos:start="43:36" pos:end="43:36">1</literal> <operator pos:start="43:38" pos:end="43:39">||</operator>

            <name pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:18">fdctrl</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:28">data_pos</name></name> <operator pos:start="45:30" pos:end="45:31">==</operator> <name pos:start="45:33" pos:end="45:48"><name pos:start="45:33" pos:end="45:38">fdctrl</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:48">data_len</name></name></expr>)</condition> <block pos:start="45:51" pos:end="71:9">{<block_content pos:start="47:13" pos:end="69:13">

            <expr_stmt pos:start="47:13" pos:end="47:42"><expr pos:start="47:13" pos:end="47:41"><name pos:start="47:13" pos:end="47:19">cur_drv</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <call pos:start="47:23" pos:end="47:41"><name pos:start="47:23" pos:end="47:33">get_cur_drv</name><argument_list pos:start="47:34" pos:end="47:41">(<argument pos:start="47:35" pos:end="47:40"><expr pos:start="47:35" pos:end="47:40"><name pos:start="47:35" pos:end="47:40">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="59:13"><if pos:start="49:13" pos:end="59:13">if <condition pos:start="49:16" pos:end="51:20">(<expr pos:start="49:17" pos:end="51:19"><call pos:start="49:17" pos:end="49:76"><name pos:start="49:17" pos:end="49:25">blk_write</name><argument_list pos:start="49:26" pos:end="49:76">(<argument pos:start="49:27" pos:end="49:38"><expr pos:start="49:27" pos:end="49:38"><name pos:start="49:27" pos:end="49:38"><name pos:start="49:27" pos:end="49:33">cur_drv</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:38">blk</name></name></expr></argument>, <argument pos:start="49:41" pos:end="49:58"><expr pos:start="49:41" pos:end="49:58"><call pos:start="49:41" pos:end="49:58"><name pos:start="49:41" pos:end="49:49">fd_sector</name><argument_list pos:start="49:50" pos:end="49:58">(<argument pos:start="49:51" pos:end="49:57"><expr pos:start="49:51" pos:end="49:57"><name pos:start="49:51" pos:end="49:57">cur_drv</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:61" pos:end="49:72"><expr pos:start="49:61" pos:end="49:72"><name pos:start="49:61" pos:end="49:72"><name pos:start="49:61" pos:end="49:66">fdctrl</name><operator pos:start="49:67" pos:end="49:68">-&gt;</operator><name pos:start="49:69" pos:end="49:72">fifo</name></name></expr></argument>, <argument pos:start="49:75" pos:end="49:75"><expr pos:start="49:75" pos:end="49:75"><literal type="number" pos:start="49:75" pos:end="49:75">1</literal></expr></argument>)</argument_list></call>

                <operator pos:start="51:17" pos:end="51:17">&lt;</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>)</condition> <block pos:start="51:22" pos:end="59:13">{<block_content pos:start="53:17" pos:end="57:23">

                <expr_stmt pos:start="53:17" pos:end="55:51"><expr pos:start="53:17" pos:end="55:50"><call pos:start="53:17" pos:end="55:50"><name pos:start="53:17" pos:end="53:30">FLOPPY_DPRINTF</name><argument_list pos:start="53:31" pos:end="55:50">(<argument pos:start="53:32" pos:end="53:58"><expr pos:start="53:32" pos:end="53:58"><literal type="string" pos:start="53:32" pos:end="53:58">"error writing sector %d\n"</literal></expr></argument>,

                               <argument pos:start="55:32" pos:end="55:49"><expr pos:start="55:32" pos:end="55:49"><call pos:start="55:32" pos:end="55:49"><name pos:start="55:32" pos:end="55:40">fd_sector</name><argument_list pos:start="55:41" pos:end="55:49">(<argument pos:start="55:42" pos:end="55:48"><expr pos:start="55:42" pos:end="55:48"><name pos:start="55:42" pos:end="55:48">cur_drv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="57:17" pos:end="57:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="61:13" pos:end="69:13"><if pos:start="61:13" pos:end="69:13">if <condition pos:start="61:16" pos:end="61:59">(<expr pos:start="61:17" pos:end="61:58"><operator pos:start="61:17" pos:end="61:17">!</operator><call pos:start="61:18" pos:end="61:58"><name pos:start="61:18" pos:end="61:41">fdctrl_seek_to_next_sect</name><argument_list pos:start="61:42" pos:end="61:58">(<argument pos:start="61:43" pos:end="61:48"><expr pos:start="61:43" pos:end="61:48"><name pos:start="61:43" pos:end="61:48">fdctrl</name></expr></argument>, <argument pos:start="61:51" pos:end="61:57"><expr pos:start="61:51" pos:end="61:57"><name pos:start="61:51" pos:end="61:57">cur_drv</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:61" pos:end="69:13">{<block_content pos:start="63:17" pos:end="67:23">

                <expr_stmt pos:start="63:17" pos:end="65:51"><expr pos:start="63:17" pos:end="65:50"><call pos:start="63:17" pos:end="65:50"><name pos:start="63:17" pos:end="63:30">FLOPPY_DPRINTF</name><argument_list pos:start="63:31" pos:end="65:50">(<argument pos:start="63:32" pos:end="63:66"><expr pos:start="63:32" pos:end="63:66"><literal type="string" pos:start="63:32" pos:end="63:66">"error seeking to next sector %d\n"</literal></expr></argument>,

                               <argument pos:start="65:32" pos:end="65:49"><expr pos:start="65:32" pos:end="65:49"><call pos:start="65:32" pos:end="65:49"><name pos:start="65:32" pos:end="65:40">fd_sector</name><argument_list pos:start="65:41" pos:end="65:49">(<argument pos:start="65:42" pos:end="65:48"><expr pos:start="65:42" pos:end="65:48"><name pos:start="65:42" pos:end="65:48">cur_drv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="67:17" pos:end="67:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="73:9" pos:end="77:11">/* Switch from transfer mode to status mode

         * then from status mode to command mode

         */</comment>

        <if_stmt pos:start="79:9" pos:end="81:59"><if pos:start="79:9" pos:end="81:59">if <condition pos:start="79:12" pos:end="79:49">(<expr pos:start="79:13" pos:end="79:48"><name pos:start="79:13" pos:end="79:28"><name pos:start="79:13" pos:end="79:18">fdctrl</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:28">data_pos</name></name> <operator pos:start="79:30" pos:end="79:31">==</operator> <name pos:start="79:33" pos:end="79:48"><name pos:start="79:33" pos:end="79:38">fdctrl</name><operator pos:start="79:39" pos:end="79:40">-&gt;</operator><name pos:start="79:41" pos:end="79:48">data_len</name></name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:59"><block_content pos:start="81:13" pos:end="81:59">

            <expr_stmt pos:start="81:13" pos:end="81:59"><expr pos:start="81:13" pos:end="81:58"><call pos:start="81:13" pos:end="81:58"><name pos:start="81:13" pos:end="81:32">fdctrl_stop_transfer</name><argument_list pos:start="81:33" pos:end="81:58">(<argument pos:start="81:34" pos:end="81:39"><expr pos:start="81:34" pos:end="81:39"><name pos:start="81:34" pos:end="81:39">fdctrl</name></expr></argument>, <argument pos:start="81:42" pos:end="81:45"><expr pos:start="81:42" pos:end="81:45"><literal type="number" pos:start="81:42" pos:end="81:45">0x00</literal></expr></argument>, <argument pos:start="81:48" pos:end="81:51"><expr pos:start="81:48" pos:end="81:51"><literal type="number" pos:start="81:48" pos:end="81:51">0x00</literal></expr></argument>, <argument pos:start="81:54" pos:end="81:57"><expr pos:start="81:54" pos:end="81:57"><literal type="number" pos:start="81:54" pos:end="81:57">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="83:9" pos:end="83:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="99:5"><if pos:start="87:5" pos:end="99:5">if <condition pos:start="87:8" pos:end="87:30">(<expr pos:start="87:9" pos:end="87:29"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:14">fdctrl</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:24">data_pos</name></name> <operator pos:start="87:26" pos:end="87:27">==</operator> <literal type="number" pos:start="87:29" pos:end="87:29">0</literal></expr>)</condition> <block pos:start="87:32" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:38">

        <comment type="block" pos:start="89:9" pos:end="89:21">/* Command */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:47"><expr pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:11">pos</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <name pos:start="91:15" pos:end="91:46"><name pos:start="91:15" pos:end="91:32">command_to_handler</name><index pos:start="91:33" pos:end="91:46">[<expr pos:start="91:34" pos:end="91:45"><name pos:start="91:34" pos:end="91:38">value</name> <operator pos:start="91:40" pos:end="91:40">&amp;</operator> <literal type="number" pos:start="91:42" pos:end="91:45">0xff</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:59"><expr pos:start="93:9" pos:end="93:58"><call pos:start="93:9" pos:end="93:58"><name pos:start="93:9" pos:end="93:22">FLOPPY_DPRINTF</name><argument_list pos:start="93:23" pos:end="93:58">(<argument pos:start="93:24" pos:end="93:37"><expr pos:start="93:24" pos:end="93:37"><literal type="string" pos:start="93:24" pos:end="93:37">"%s command\n"</literal></expr></argument>, <argument pos:start="93:40" pos:end="93:57"><expr pos:start="93:40" pos:end="93:57"><name pos:start="93:40" pos:end="93:52"><name pos:start="93:40" pos:end="93:47">handlers</name><index pos:start="93:48" pos:end="93:52">[<expr pos:start="93:49" pos:end="93:51"><name pos:start="93:49" pos:end="93:51">pos</name></expr>]</index></name><operator pos:start="93:53" pos:end="93:53">.</operator><name pos:start="93:54" pos:end="93:57">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:56"><expr pos:start="95:9" pos:end="95:55"><name pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:14">fdctrl</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:24">data_len</name></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:40"><name pos:start="95:28" pos:end="95:35">handlers</name><index pos:start="95:36" pos:end="95:40">[<expr pos:start="95:37" pos:end="95:39"><name pos:start="95:37" pos:end="95:39">pos</name></expr>]</index></name><operator pos:start="95:41" pos:end="95:41">.</operator><name pos:start="95:42" pos:end="95:51">parameters</name> <operator pos:start="95:53" pos:end="95:53">+</operator> <literal type="number" pos:start="95:55" pos:end="95:55">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:38"><expr pos:start="97:9" pos:end="97:37"><name pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:14">fdctrl</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:19">msr</name></name> <operator pos:start="97:21" pos:end="97:22">|=</operator> <name pos:start="97:24" pos:end="97:37">FD_MSR_CMDBUSY</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:50"><expr pos:start="103:5" pos:end="103:49"><call pos:start="103:5" pos:end="103:49"><name pos:start="103:5" pos:end="103:18">FLOPPY_DPRINTF</name><argument_list pos:start="103:19" pos:end="103:49">(<argument pos:start="103:20" pos:end="103:31"><expr pos:start="103:20" pos:end="103:31"><literal type="string" pos:start="103:20" pos:end="103:31">"%s: %02x\n"</literal></expr></argument>, <argument pos:start="103:34" pos:end="103:41"><expr pos:start="103:34" pos:end="103:41"><name pos:start="103:34" pos:end="103:41">__func__</name></expr></argument>, <argument pos:start="103:44" pos:end="103:48"><expr pos:start="103:44" pos:end="103:48"><name pos:start="103:44" pos:end="103:48">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:45"><expr pos:start="105:5" pos:end="105:44"><name pos:start="105:5" pos:end="105:36"><name pos:start="105:5" pos:end="105:10">fdctrl</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:16">fifo</name><index pos:start="105:17" pos:end="105:36">[<expr pos:start="105:18" pos:end="105:35"><name pos:start="105:18" pos:end="105:33"><name pos:start="105:18" pos:end="105:23">fdctrl</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:33">data_pos</name></name><operator pos:start="105:34" pos:end="105:35">++</operator></expr>]</index></name> <operator pos:start="105:38" pos:end="105:38">=</operator> <name pos:start="105:40" pos:end="105:44">value</name></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="131:5"><if pos:start="107:5" pos:end="131:5">if <condition pos:start="107:8" pos:end="107:45">(<expr pos:start="107:9" pos:end="107:44"><name pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:14">fdctrl</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:24">data_pos</name></name> <operator pos:start="107:26" pos:end="107:27">==</operator> <name pos:start="107:29" pos:end="107:44"><name pos:start="107:29" pos:end="107:34">fdctrl</name><operator pos:start="107:35" pos:end="107:36">-&gt;</operator><name pos:start="107:37" pos:end="107:44">data_len</name></name></expr>)</condition> <block pos:start="107:47" pos:end="131:5">{<block_content pos:start="115:9" pos:end="129:66">

        <comment type="block" pos:start="109:9" pos:end="113:11">/* We now have all parameters

         * and will be able to treat the command

         */</comment>

        <if_stmt pos:start="115:9" pos:end="121:9"><if pos:start="115:9" pos:end="121:9">if <condition pos:start="115:12" pos:end="115:49">(<expr pos:start="115:13" pos:end="115:48"><name pos:start="115:13" pos:end="115:30"><name pos:start="115:13" pos:end="115:18">fdctrl</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:30">data_state</name></name> <operator pos:start="115:32" pos:end="115:32">&amp;</operator> <name pos:start="115:34" pos:end="115:48">FD_STATE_FORMAT</name></expr>)</condition> <block pos:start="115:51" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:19">

            <expr_stmt pos:start="117:13" pos:end="117:41"><expr pos:start="117:13" pos:end="117:40"><call pos:start="117:13" pos:end="117:40"><name pos:start="117:13" pos:end="117:32">fdctrl_format_sector</name><argument_list pos:start="117:33" pos:end="117:40">(<argument pos:start="117:34" pos:end="117:39"><expr pos:start="117:34" pos:end="117:39"><name pos:start="117:34" pos:end="117:39">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="119:13" pos:end="119:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:57"><expr pos:start="125:9" pos:end="125:56"><name pos:start="125:9" pos:end="125:11">pos</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <name pos:start="125:15" pos:end="125:56"><name pos:start="125:15" pos:end="125:32">command_to_handler</name><index pos:start="125:33" pos:end="125:56">[<expr pos:start="125:34" pos:end="125:55"><name pos:start="125:34" pos:end="125:48"><name pos:start="125:34" pos:end="125:39">fdctrl</name><operator pos:start="125:40" pos:end="125:41">-&gt;</operator><name pos:start="125:42" pos:end="125:45">fifo</name><index pos:start="125:46" pos:end="125:48">[<expr pos:start="125:47" pos:end="125:47"><literal type="number" pos:start="125:47" pos:end="125:47">0</literal></expr>]</index></name> <operator pos:start="125:50" pos:end="125:50">&amp;</operator> <literal type="number" pos:start="125:52" pos:end="125:55">0xff</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:65"><expr pos:start="127:9" pos:end="127:64"><call pos:start="127:9" pos:end="127:64"><name pos:start="127:9" pos:end="127:22">FLOPPY_DPRINTF</name><argument_list pos:start="127:23" pos:end="127:64">(<argument pos:start="127:24" pos:end="127:43"><expr pos:start="127:24" pos:end="127:43"><literal type="string" pos:start="127:24" pos:end="127:43">"treat %s command\n"</literal></expr></argument>, <argument pos:start="127:46" pos:end="127:63"><expr pos:start="127:46" pos:end="127:63"><name pos:start="127:46" pos:end="127:58"><name pos:start="127:46" pos:end="127:53">handlers</name><index pos:start="127:54" pos:end="127:58">[<expr pos:start="127:55" pos:end="127:57"><name pos:start="127:55" pos:end="127:57">pos</name></expr>]</index></name><operator pos:start="127:59" pos:end="127:59">.</operator><name pos:start="127:60" pos:end="127:63">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:66"><expr pos:start="129:9" pos:end="129:65"><operator pos:start="129:9" pos:end="129:9">(</operator><operator pos:start="129:10" pos:end="129:10">*</operator><name pos:start="129:11" pos:end="129:23"><name pos:start="129:11" pos:end="129:18">handlers</name><index pos:start="129:19" pos:end="129:23">[<expr pos:start="129:20" pos:end="129:22"><name pos:start="129:20" pos:end="129:22">pos</name></expr>]</index></name><operator pos:start="129:24" pos:end="129:24">.</operator><name pos:start="129:25" pos:end="129:31">handler</name><operator pos:start="129:32" pos:end="129:32">)</operator><operator pos:start="129:33" pos:end="129:33">(</operator><name pos:start="129:34" pos:end="129:39">fdctrl</name><operator pos:start="129:40" pos:end="129:40">,</operator> <name pos:start="129:42" pos:end="129:54"><name pos:start="129:42" pos:end="129:49">handlers</name><index pos:start="129:50" pos:end="129:54">[<expr pos:start="129:51" pos:end="129:53"><name pos:start="129:51" pos:end="129:53">pos</name></expr>]</index></name><operator pos:start="129:55" pos:end="129:55">.</operator><name pos:start="129:56" pos:end="129:64">direction</name><operator pos:start="129:65" pos:end="129:65">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
