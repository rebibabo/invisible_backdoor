<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4097.c" pos:tabs="8"><function pos:start="1:1" pos:end="559:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">dca_subframe_header</name><parameter_list pos:start="1:31" pos:end="1:80">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:41">DCAContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:62">base_channel</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:79"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:79">block_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="559:1">{<block_content pos:start="7:5" pos:end="557:13">

    <comment type="block" pos:start="5:5" pos:end="5:47">/* Primary audio coding side information */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">j</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">k</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:35"><if pos:start="11:5" pos:end="13:35">if <condition pos:start="11:8" pos:end="11:34">(<expr pos:start="11:9" pos:end="11:33"><call pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:21">get_bits_left</name><argument_list pos:start="11:22" pos:end="11:29">(<argument pos:start="11:23" pos:end="11:28"><expr pos:start="11:23" pos:end="11:28"><operator pos:start="11:23" pos:end="11:23">&amp;</operator><name pos:start="11:24" pos:end="11:28"><name pos:start="11:24" pos:end="11:24">s</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="11:31" pos:end="11:31">&lt;</operator> <literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:35"><block_content pos:start="13:9" pos:end="13:35">

        <return pos:start="13:9" pos:end="13:35">return <expr pos:start="13:16" pos:end="13:34"><name pos:start="13:16" pos:end="13:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:22">(<expr pos:start="17:9" pos:end="17:21"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:21">base_channel</name></expr>)</condition> <block pos:start="17:24" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:70">

        <expr_stmt pos:start="19:9" pos:end="19:74"><expr pos:start="19:9" pos:end="19:73"><name pos:start="19:9" pos:end="19:44"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:23">subsubframes</name><index pos:start="19:24" pos:end="19:44">[<expr pos:start="19:25" pos:end="19:43"><name pos:start="19:25" pos:end="19:43"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:43">current_subframe</name></name></expr>]</index></name>    <operator pos:start="19:49" pos:end="19:49">=</operator> <call pos:start="19:51" pos:end="19:69"><name pos:start="19:51" pos:end="19:58">get_bits</name><argument_list pos:start="19:59" pos:end="19:69">(<argument pos:start="19:60" pos:end="19:65"><expr pos:start="19:60" pos:end="19:65"><operator pos:start="19:60" pos:end="19:60">&amp;</operator><name pos:start="19:61" pos:end="19:65"><name pos:start="19:61" pos:end="19:61">s</name><operator pos:start="19:62" pos:end="19:63">-&gt;</operator><name pos:start="19:64" pos:end="19:65">gb</name></name></expr></argument>, <argument pos:start="19:68" pos:end="19:68"><expr pos:start="19:68" pos:end="19:68"><literal type="number" pos:start="19:68" pos:end="19:68">2</literal></expr></argument>)</argument_list></call> <operator pos:start="19:71" pos:end="19:71">+</operator> <literal type="number" pos:start="19:73" pos:end="19:73">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:70"><expr pos:start="21:9" pos:end="21:69"><name pos:start="21:9" pos:end="21:47"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:26">partial_samples</name><index pos:start="21:27" pos:end="21:47">[<expr pos:start="21:28" pos:end="21:46"><name pos:start="21:28" pos:end="21:46"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:46">current_subframe</name></name></expr>]</index></name> <operator pos:start="21:49" pos:end="21:49">=</operator> <call pos:start="21:51" pos:end="21:69"><name pos:start="21:51" pos:end="21:58">get_bits</name><argument_list pos:start="21:59" pos:end="21:69">(<argument pos:start="21:60" pos:end="21:65"><expr pos:start="21:60" pos:end="21:65"><operator pos:start="21:60" pos:end="21:60">&amp;</operator><name pos:start="21:61" pos:end="21:65"><name pos:start="21:61" pos:end="21:61">s</name><operator pos:start="21:62" pos:end="21:63">-&gt;</operator><name pos:start="21:64" pos:end="21:65">gb</name></name></expr></argument>, <argument pos:start="21:68" pos:end="21:68"><expr pos:start="21:68" pos:end="21:68"><literal type="number" pos:start="21:68" pos:end="21:68">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="27:5" pos:end="33:5">for <control pos:start="27:9" pos:end="27:53">(<init pos:start="27:10" pos:end="27:26"><expr pos:start="27:10" pos:end="27:25"><name pos:start="27:10" pos:end="27:10">j</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:25">base_channel</name></expr>;</init> <condition pos:start="27:28" pos:end="27:48"><expr pos:start="27:28" pos:end="27:47"><name pos:start="27:28" pos:end="27:28">j</name> <operator pos:start="27:30" pos:end="27:30">&lt;</operator> <name pos:start="27:32" pos:end="27:47"><name pos:start="27:32" pos:end="27:32">s</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:47">prim_channels</name></name></expr>;</condition> <incr pos:start="27:50" pos:end="27:52"><expr pos:start="27:50" pos:end="27:52"><name pos:start="27:50" pos:end="27:50">j</name><operator pos:start="27:51" pos:end="27:52">++</operator></expr></incr>)</control> <block pos:start="27:55" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:59">

        <for pos:start="29:9" pos:end="31:59">for <control pos:start="29:13" pos:end="29:52">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">k</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:47"><expr pos:start="29:21" pos:end="29:46"><name pos:start="29:21" pos:end="29:21">k</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:46"><name pos:start="29:25" pos:end="29:25">s</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:43">subband_activity</name><index pos:start="29:44" pos:end="29:46">[<expr pos:start="29:45" pos:end="29:45"><name pos:start="29:45" pos:end="29:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="29:49" pos:end="29:51"><expr pos:start="29:49" pos:end="29:51"><name pos:start="29:49" pos:end="29:49">k</name><operator pos:start="29:50" pos:end="29:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:13" pos:end="31:59"><block_content pos:start="31:13" pos:end="31:59">

            <expr_stmt pos:start="31:13" pos:end="31:59"><expr pos:start="31:13" pos:end="31:58"><name pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:30">prediction_mode</name><index pos:start="31:31" pos:end="31:33">[<expr pos:start="31:32" pos:end="31:32"><name pos:start="31:32" pos:end="31:32">j</name></expr>]</index><index pos:start="31:34" pos:end="31:36">[<expr pos:start="31:35" pos:end="31:35"><name pos:start="31:35" pos:end="31:35">k</name></expr>]</index></name> <operator pos:start="31:38" pos:end="31:38">=</operator> <call pos:start="31:40" pos:end="31:58"><name pos:start="31:40" pos:end="31:47">get_bits</name><argument_list pos:start="31:48" pos:end="31:58">(<argument pos:start="31:49" pos:end="31:54"><expr pos:start="31:49" pos:end="31:54"><operator pos:start="31:49" pos:end="31:49">&amp;</operator><name pos:start="31:50" pos:end="31:54"><name pos:start="31:50" pos:end="31:50">s</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:54">gb</name></name></expr></argument>, <argument pos:start="31:57" pos:end="31:57"><expr pos:start="31:57" pos:end="31:57"><literal type="number" pos:start="31:57" pos:end="31:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="37:5" pos:end="37:33">/* Get prediction codebook */</comment>

    <for pos:start="39:5" pos:end="53:5">for <control pos:start="39:9" pos:end="39:53">(<init pos:start="39:10" pos:end="39:26"><expr pos:start="39:10" pos:end="39:25"><name pos:start="39:10" pos:end="39:10">j</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:25">base_channel</name></expr>;</init> <condition pos:start="39:28" pos:end="39:48"><expr pos:start="39:28" pos:end="39:47"><name pos:start="39:28" pos:end="39:28">j</name> <operator pos:start="39:30" pos:end="39:30">&lt;</operator> <name pos:start="39:32" pos:end="39:47"><name pos:start="39:32" pos:end="39:32">s</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:47">prim_channels</name></name></expr>;</condition> <incr pos:start="39:50" pos:end="39:52"><expr pos:start="39:50" pos:end="39:52"><name pos:start="39:50" pos:end="39:50">j</name><operator pos:start="39:51" pos:end="39:52">++</operator></expr></incr>)</control> <block pos:start="39:55" pos:end="53:5">{<block_content pos:start="41:9" pos:end="51:9">

        <for pos:start="41:9" pos:end="51:9">for <control pos:start="41:13" pos:end="41:52">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">k</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:47"><expr pos:start="41:21" pos:end="41:46"><name pos:start="41:21" pos:end="41:21">k</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <name pos:start="41:25" pos:end="41:46"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:43">subband_activity</name><index pos:start="41:44" pos:end="41:46">[<expr pos:start="41:45" pos:end="41:45"><name pos:start="41:45" pos:end="41:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="41:49" pos:end="41:51"><expr pos:start="41:49" pos:end="41:51"><name pos:start="41:49" pos:end="41:49">k</name><operator pos:start="41:50" pos:end="41:51">++</operator></expr></incr>)</control> <block pos:start="41:54" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:13">

            <if_stmt pos:start="43:13" pos:end="49:13"><if pos:start="43:13" pos:end="49:13">if <condition pos:start="43:16" pos:end="43:45">(<expr pos:start="43:17" pos:end="43:44"><name pos:start="43:17" pos:end="43:40"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:34">prediction_mode</name><index pos:start="43:35" pos:end="43:37">[<expr pos:start="43:36" pos:end="43:36"><name pos:start="43:36" pos:end="43:36">j</name></expr>]</index><index pos:start="43:38" pos:end="43:40">[<expr pos:start="43:39" pos:end="43:39"><name pos:start="43:39" pos:end="43:39">k</name></expr>]</index></name> <operator pos:start="43:42" pos:end="43:42">&gt;</operator> <literal type="number" pos:start="43:44" pos:end="43:44">0</literal></expr>)</condition> <block pos:start="43:47" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:62">

                <comment type="block" pos:start="45:17" pos:end="45:57">/* (Prediction coefficient VQ address) */</comment>

                <expr_stmt pos:start="47:17" pos:end="47:62"><expr pos:start="47:17" pos:end="47:61"><name pos:start="47:17" pos:end="47:38"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:32">prediction_vq</name><index pos:start="47:33" pos:end="47:35">[<expr pos:start="47:34" pos:end="47:34"><name pos:start="47:34" pos:end="47:34">j</name></expr>]</index><index pos:start="47:36" pos:end="47:38">[<expr pos:start="47:37" pos:end="47:37"><name pos:start="47:37" pos:end="47:37">k</name></expr>]</index></name> <operator pos:start="47:40" pos:end="47:40">=</operator> <call pos:start="47:42" pos:end="47:61"><name pos:start="47:42" pos:end="47:49">get_bits</name><argument_list pos:start="47:50" pos:end="47:61">(<argument pos:start="47:51" pos:end="47:56"><expr pos:start="47:51" pos:end="47:56"><operator pos:start="47:51" pos:end="47:51">&amp;</operator><name pos:start="47:52" pos:end="47:56"><name pos:start="47:52" pos:end="47:52">s</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:56">gb</name></name></expr></argument>, <argument pos:start="47:59" pos:end="47:60"><expr pos:start="47:59" pos:end="47:60"><literal type="number" pos:start="47:59" pos:end="47:60">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="57:5" pos:end="57:30">/* Bit allocation index */</comment>

    <for pos:start="59:5" pos:end="101:5">for <control pos:start="59:9" pos:end="59:53">(<init pos:start="59:10" pos:end="59:26"><expr pos:start="59:10" pos:end="59:25"><name pos:start="59:10" pos:end="59:10">j</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <name pos:start="59:14" pos:end="59:25">base_channel</name></expr>;</init> <condition pos:start="59:28" pos:end="59:48"><expr pos:start="59:28" pos:end="59:47"><name pos:start="59:28" pos:end="59:28">j</name> <operator pos:start="59:30" pos:end="59:30">&lt;</operator> <name pos:start="59:32" pos:end="59:47"><name pos:start="59:32" pos:end="59:32">s</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:47">prim_channels</name></name></expr>;</condition> <incr pos:start="59:50" pos:end="59:52"><expr pos:start="59:50" pos:end="59:52"><name pos:start="59:50" pos:end="59:50">j</name><operator pos:start="59:51" pos:end="59:52">++</operator></expr></incr>)</control> <block pos:start="59:55" pos:end="101:5">{<block_content pos:start="61:9" pos:end="99:9">

        <for pos:start="61:9" pos:end="99:9">for <control pos:start="61:13" pos:end="61:52">(<init pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:18"><name pos:start="61:14" pos:end="61:14">k</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</init> <condition pos:start="61:21" pos:end="61:47"><expr pos:start="61:21" pos:end="61:46"><name pos:start="61:21" pos:end="61:21">k</name> <operator pos:start="61:23" pos:end="61:23">&lt;</operator> <name pos:start="61:25" pos:end="61:46"><name pos:start="61:25" pos:end="61:25">s</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:43">vq_start_subband</name><index pos:start="61:44" pos:end="61:46">[<expr pos:start="61:45" pos:end="61:45"><name pos:start="61:45" pos:end="61:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="61:49" pos:end="61:51"><expr pos:start="61:49" pos:end="61:51"><name pos:start="61:49" pos:end="61:49">k</name><operator pos:start="61:50" pos:end="61:51">++</operator></expr></incr>)</control> <block pos:start="61:54" pos:end="99:9">{<block_content pos:start="63:13" pos:end="97:13">

            <if_stmt pos:start="63:13" pos:end="85:13"><if pos:start="63:13" pos:end="65:56">if <condition pos:start="63:16" pos:end="63:44">(<expr pos:start="63:17" pos:end="63:43"><name pos:start="63:17" pos:end="63:38"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:35">bitalloc_huffman</name><index pos:start="63:36" pos:end="63:38">[<expr pos:start="63:37" pos:end="63:37"><name pos:start="63:37" pos:end="63:37">j</name></expr>]</index></name> <operator pos:start="63:40" pos:end="63:41">==</operator> <literal type="number" pos:start="63:43" pos:end="63:43">6</literal></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:56"><block_content pos:start="65:17" pos:end="65:56">

                <expr_stmt pos:start="65:17" pos:end="65:56"><expr pos:start="65:17" pos:end="65:55"><name pos:start="65:17" pos:end="65:33"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:27">bitalloc</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">j</name></expr>]</index><index pos:start="65:31" pos:end="65:33">[<expr pos:start="65:32" pos:end="65:32"><name pos:start="65:32" pos:end="65:32">k</name></expr>]</index></name> <operator pos:start="65:35" pos:end="65:35">=</operator> <call pos:start="65:37" pos:end="65:55"><name pos:start="65:37" pos:end="65:44">get_bits</name><argument_list pos:start="65:45" pos:end="65:55">(<argument pos:start="65:46" pos:end="65:51"><expr pos:start="65:46" pos:end="65:51"><operator pos:start="65:46" pos:end="65:46">&amp;</operator><name pos:start="65:47" pos:end="65:51"><name pos:start="65:47" pos:end="65:47">s</name><operator pos:start="65:48" pos:end="65:49">-&gt;</operator><name pos:start="65:50" pos:end="65:51">gb</name></name></expr></argument>, <argument pos:start="65:54" pos:end="65:54"><expr pos:start="65:54" pos:end="65:54"><literal type="number" pos:start="65:54" pos:end="65:54">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="67:13" pos:end="69:56">else if <condition pos:start="67:21" pos:end="67:49">(<expr pos:start="67:22" pos:end="67:48"><name pos:start="67:22" pos:end="67:43"><name pos:start="67:22" pos:end="67:22">s</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:40">bitalloc_huffman</name><index pos:start="67:41" pos:end="67:43">[<expr pos:start="67:42" pos:end="67:42"><name pos:start="67:42" pos:end="67:42">j</name></expr>]</index></name> <operator pos:start="67:45" pos:end="67:46">==</operator> <literal type="number" pos:start="67:48" pos:end="67:48">5</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:56"><block_content pos:start="69:17" pos:end="69:56">

                <expr_stmt pos:start="69:17" pos:end="69:56"><expr pos:start="69:17" pos:end="69:55"><name pos:start="69:17" pos:end="69:33"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:27">bitalloc</name><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><name pos:start="69:29" pos:end="69:29">j</name></expr>]</index><index pos:start="69:31" pos:end="69:33">[<expr pos:start="69:32" pos:end="69:32"><name pos:start="69:32" pos:end="69:32">k</name></expr>]</index></name> <operator pos:start="69:35" pos:end="69:35">=</operator> <call pos:start="69:37" pos:end="69:55"><name pos:start="69:37" pos:end="69:44">get_bits</name><argument_list pos:start="69:45" pos:end="69:55">(<argument pos:start="69:46" pos:end="69:51"><expr pos:start="69:46" pos:end="69:51"><operator pos:start="69:46" pos:end="69:46">&amp;</operator><name pos:start="69:47" pos:end="69:51"><name pos:start="69:47" pos:end="69:47">s</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:51">gb</name></name></expr></argument>, <argument pos:start="69:54" pos:end="69:54"><expr pos:start="69:54" pos:end="69:54"><literal type="number" pos:start="69:54" pos:end="69:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="71:13" pos:end="79:13">else if <condition pos:start="71:21" pos:end="71:49">(<expr pos:start="71:22" pos:end="71:48"><name pos:start="71:22" pos:end="71:43"><name pos:start="71:22" pos:end="71:22">s</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:40">bitalloc_huffman</name><index pos:start="71:41" pos:end="71:43">[<expr pos:start="71:42" pos:end="71:42"><name pos:start="71:42" pos:end="71:42">j</name></expr>]</index></name> <operator pos:start="71:45" pos:end="71:46">==</operator> <literal type="number" pos:start="71:48" pos:end="71:48">7</literal></expr>)</condition> <block pos:start="71:51" pos:end="79:13">{<block_content pos:start="73:17" pos:end="77:43">

                <expr_stmt pos:start="73:17" pos:end="75:57"><expr pos:start="73:17" pos:end="75:56"><call pos:start="73:17" pos:end="75:56"><name pos:start="73:17" pos:end="73:22">av_log</name><argument_list pos:start="73:23" pos:end="75:56">(<argument pos:start="73:24" pos:end="73:31"><expr pos:start="73:24" pos:end="73:31"><name pos:start="73:24" pos:end="73:31"><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:31">avctx</name></name></expr></argument>, <argument pos:start="73:34" pos:end="73:45"><expr pos:start="73:34" pos:end="73:45"><name pos:start="73:34" pos:end="73:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="75:24" pos:end="75:55"><expr pos:start="75:24" pos:end="75:55"><literal type="string" pos:start="75:24" pos:end="75:55">"Invalid bit allocation index\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="77:17" pos:end="77:43">return <expr pos:start="77:24" pos:end="77:42"><name pos:start="77:24" pos:end="77:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if> <else pos:start="79:15" pos:end="85:13">else <block pos:start="79:20" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:86">

                <expr_stmt pos:start="81:17" pos:end="83:86"><expr pos:start="81:17" pos:end="83:85"><name pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:27">bitalloc</name><index pos:start="81:28" pos:end="81:30">[<expr pos:start="81:29" pos:end="81:29"><name pos:start="81:29" pos:end="81:29">j</name></expr>]</index><index pos:start="81:31" pos:end="81:33">[<expr pos:start="81:32" pos:end="81:32"><name pos:start="81:32" pos:end="81:32">k</name></expr>]</index></name> <operator pos:start="81:35" pos:end="81:35">=</operator>

                    <call pos:start="83:21" pos:end="83:85"><name pos:start="83:21" pos:end="83:32">get_bitalloc</name><argument_list pos:start="83:33" pos:end="83:85">(<argument pos:start="83:34" pos:end="83:39"><expr pos:start="83:34" pos:end="83:39"><operator pos:start="83:34" pos:end="83:34">&amp;</operator><name pos:start="83:35" pos:end="83:39"><name pos:start="83:35" pos:end="83:35">s</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:39">gb</name></name></expr></argument>, <argument pos:start="83:42" pos:end="83:60"><expr pos:start="83:42" pos:end="83:60"><operator pos:start="83:42" pos:end="83:42">&amp;</operator><name pos:start="83:43" pos:end="83:60">dca_bitalloc_index</name></expr></argument>, <argument pos:start="83:63" pos:end="83:84"><expr pos:start="83:63" pos:end="83:84"><name pos:start="83:63" pos:end="83:84"><name pos:start="83:63" pos:end="83:63">s</name><operator pos:start="83:64" pos:end="83:65">-&gt;</operator><name pos:start="83:66" pos:end="83:81">bitalloc_huffman</name><index pos:start="83:82" pos:end="83:84">[<expr pos:start="83:83" pos:end="83:83"><name pos:start="83:83" pos:end="83:83">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="89:13" pos:end="97:13"><if pos:start="89:13" pos:end="97:13">if <condition pos:start="89:16" pos:end="89:39">(<expr pos:start="89:17" pos:end="89:38"><name pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:27">bitalloc</name><index pos:start="89:28" pos:end="89:30">[<expr pos:start="89:29" pos:end="89:29"><name pos:start="89:29" pos:end="89:29">j</name></expr>]</index><index pos:start="89:31" pos:end="89:33">[<expr pos:start="89:32" pos:end="89:32"><name pos:start="89:32" pos:end="89:32">k</name></expr>]</index></name> <operator pos:start="89:35" pos:end="89:35">&gt;</operator> <literal type="number" pos:start="89:37" pos:end="89:38">26</literal></expr>)</condition> <block pos:start="89:41" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:43">

                <comment type="line" pos:start="91:17" pos:end="91:91">// av_log(s-&gt;avctx, AV_LOG_DEBUG, "bitalloc index [%i][%i] too big (%i)\n",</comment>

                <comment type="line" pos:start="93:17" pos:end="93:51">//        j, k, s-&gt;bitalloc[j][k]);</comment>

                <return pos:start="95:17" pos:end="95:43">return <expr pos:start="95:24" pos:end="95:42"><name pos:start="95:24" pos:end="95:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="105:5" pos:end="105:25">/* Transition mode */</comment>

    <for pos:start="107:5" pos:end="125:5">for <control pos:start="107:9" pos:end="107:53">(<init pos:start="107:10" pos:end="107:26"><expr pos:start="107:10" pos:end="107:25"><name pos:start="107:10" pos:end="107:10">j</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <name pos:start="107:14" pos:end="107:25">base_channel</name></expr>;</init> <condition pos:start="107:28" pos:end="107:48"><expr pos:start="107:28" pos:end="107:47"><name pos:start="107:28" pos:end="107:28">j</name> <operator pos:start="107:30" pos:end="107:30">&lt;</operator> <name pos:start="107:32" pos:end="107:47"><name pos:start="107:32" pos:end="107:32">s</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:47">prim_channels</name></name></expr>;</condition> <incr pos:start="107:50" pos:end="107:52"><expr pos:start="107:50" pos:end="107:52"><name pos:start="107:50" pos:end="107:50">j</name><operator pos:start="107:51" pos:end="107:52">++</operator></expr></incr>)</control> <block pos:start="107:55" pos:end="125:5">{<block_content pos:start="109:9" pos:end="123:9">

        <for pos:start="109:9" pos:end="123:9">for <control pos:start="109:13" pos:end="109:52">(<init pos:start="109:14" pos:end="109:19"><expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:14">k</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">0</literal></expr>;</init> <condition pos:start="109:21" pos:end="109:47"><expr pos:start="109:21" pos:end="109:46"><name pos:start="109:21" pos:end="109:21">k</name> <operator pos:start="109:23" pos:end="109:23">&lt;</operator> <name pos:start="109:25" pos:end="109:46"><name pos:start="109:25" pos:end="109:25">s</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:43">subband_activity</name><index pos:start="109:44" pos:end="109:46">[<expr pos:start="109:45" pos:end="109:45"><name pos:start="109:45" pos:end="109:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="109:49" pos:end="109:51"><expr pos:start="109:49" pos:end="109:51"><name pos:start="109:49" pos:end="109:49">k</name><operator pos:start="109:50" pos:end="109:51">++</operator></expr></incr>)</control> <block pos:start="109:54" pos:end="123:9">{<block_content pos:start="111:13" pos:end="121:13">

            <expr_stmt pos:start="111:13" pos:end="111:41"><expr pos:start="111:13" pos:end="111:40"><name pos:start="111:13" pos:end="111:36"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:30">transition_mode</name><index pos:start="111:31" pos:end="111:33">[<expr pos:start="111:32" pos:end="111:32"><name pos:start="111:32" pos:end="111:32">j</name></expr>]</index><index pos:start="111:34" pos:end="111:36">[<expr pos:start="111:35" pos:end="111:35"><name pos:start="111:35" pos:end="111:35">k</name></expr>]</index></name> <operator pos:start="111:38" pos:end="111:38">=</operator> <literal type="number" pos:start="111:40" pos:end="111:40">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="113:13" pos:end="121:13"><if pos:start="113:13" pos:end="121:13">if <condition pos:start="113:16" pos:end="115:68">(<expr pos:start="113:17" pos:end="115:67"><name pos:start="113:17" pos:end="113:52"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:31">subsubframes</name><index pos:start="113:32" pos:end="113:52">[<expr pos:start="113:33" pos:end="113:51"><name pos:start="113:33" pos:end="113:51"><name pos:start="113:33" pos:end="113:33">s</name><operator pos:start="113:34" pos:end="113:35">-&gt;</operator><name pos:start="113:36" pos:end="113:51">current_subframe</name></name></expr>]</index></name> <operator pos:start="113:54" pos:end="113:54">&gt;</operator> <literal type="number" pos:start="113:56" pos:end="113:56">1</literal> <operator pos:start="113:58" pos:end="113:59">&amp;&amp;</operator>

                <name pos:start="115:17" pos:end="115:65"><name pos:start="115:17" pos:end="115:17">k</name> <argument_list type="generic" pos:start="115:19" pos:end="115:65">&lt; <argument pos:start="115:21" pos:end="115:63"><expr pos:start="115:21" pos:end="115:63"><name pos:start="115:21" pos:end="115:42"><name pos:start="115:21" pos:end="115:21">s</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:39">vq_start_subband</name><index pos:start="115:40" pos:end="115:42">[<expr pos:start="115:41" pos:end="115:41"><name pos:start="115:41" pos:end="115:41">j</name></expr>]</index></name> <operator pos:start="115:44" pos:end="115:45">&amp;&amp;</operator> <name pos:start="115:47" pos:end="115:63"><name pos:start="115:47" pos:end="115:47">s</name><operator pos:start="115:48" pos:end="115:49">-&gt;</operator><name pos:start="115:50" pos:end="115:57">bitalloc</name><index pos:start="115:58" pos:end="115:60">[<expr pos:start="115:59" pos:end="115:59"><name pos:start="115:59" pos:end="115:59">j</name></expr>]</index><index pos:start="115:61" pos:end="115:63">[<expr pos:start="115:62" pos:end="115:62"><name pos:start="115:62" pos:end="115:62">k</name></expr>]</index></name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="115:67" pos:end="115:67">0</literal></expr>)</condition> <block pos:start="115:70" pos:end="121:13">{<block_content pos:start="117:17" pos:end="119:78">

                <expr_stmt pos:start="117:17" pos:end="119:78"><expr pos:start="117:17" pos:end="119:77"><name pos:start="117:17" pos:end="117:40"><name pos:start="117:17" pos:end="117:17">s</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:34">transition_mode</name><index pos:start="117:35" pos:end="117:37">[<expr pos:start="117:36" pos:end="117:36"><name pos:start="117:36" pos:end="117:36">j</name></expr>]</index><index pos:start="117:38" pos:end="117:40">[<expr pos:start="117:39" pos:end="117:39"><name pos:start="117:39" pos:end="117:39">k</name></expr>]</index></name> <operator pos:start="117:42" pos:end="117:42">=</operator>

                    <call pos:start="119:21" pos:end="119:77"><name pos:start="119:21" pos:end="119:32">get_bitalloc</name><argument_list pos:start="119:33" pos:end="119:77">(<argument pos:start="119:34" pos:end="119:39"><expr pos:start="119:34" pos:end="119:39"><operator pos:start="119:34" pos:end="119:34">&amp;</operator><name pos:start="119:35" pos:end="119:39"><name pos:start="119:35" pos:end="119:35">s</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:39">gb</name></name></expr></argument>, <argument pos:start="119:42" pos:end="119:51"><expr pos:start="119:42" pos:end="119:51"><operator pos:start="119:42" pos:end="119:42">&amp;</operator><name pos:start="119:43" pos:end="119:51">dca_tmode</name></expr></argument>, <argument pos:start="119:54" pos:end="119:76"><expr pos:start="119:54" pos:end="119:76"><name pos:start="119:54" pos:end="119:76"><name pos:start="119:54" pos:end="119:54">s</name><operator pos:start="119:55" pos:end="119:56">-&gt;</operator><name pos:start="119:57" pos:end="119:73">transient_huffman</name><index pos:start="119:74" pos:end="119:76">[<expr pos:start="119:75" pos:end="119:75"><name pos:start="119:75" pos:end="119:75">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="129:5" pos:end="131:35"><if pos:start="129:5" pos:end="131:35">if <condition pos:start="129:8" pos:end="129:34">(<expr pos:start="129:9" pos:end="129:33"><call pos:start="129:9" pos:end="129:29"><name pos:start="129:9" pos:end="129:21">get_bits_left</name><argument_list pos:start="129:22" pos:end="129:29">(<argument pos:start="129:23" pos:end="129:28"><expr pos:start="129:23" pos:end="129:28"><operator pos:start="129:23" pos:end="129:23">&amp;</operator><name pos:start="129:24" pos:end="129:28"><name pos:start="129:24" pos:end="129:24">s</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="129:31" pos:end="129:31">&lt;</operator> <literal type="number" pos:start="129:33" pos:end="129:33">0</literal></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:35"><block_content pos:start="131:9" pos:end="131:35">

        <return pos:start="131:9" pos:end="131:35">return <expr pos:start="131:16" pos:end="131:34"><name pos:start="131:16" pos:end="131:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="135:5" pos:end="195:5">for <control pos:start="135:9" pos:end="135:53">(<init pos:start="135:10" pos:end="135:26"><expr pos:start="135:10" pos:end="135:25"><name pos:start="135:10" pos:end="135:10">j</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <name pos:start="135:14" pos:end="135:25">base_channel</name></expr>;</init> <condition pos:start="135:28" pos:end="135:48"><expr pos:start="135:28" pos:end="135:47"><name pos:start="135:28" pos:end="135:28">j</name> <operator pos:start="135:30" pos:end="135:30">&lt;</operator> <name pos:start="135:32" pos:end="135:47"><name pos:start="135:32" pos:end="135:32">s</name><operator pos:start="135:33" pos:end="135:34">-&gt;</operator><name pos:start="135:35" pos:end="135:47">prim_channels</name></name></expr>;</condition> <incr pos:start="135:50" pos:end="135:52"><expr pos:start="135:50" pos:end="135:52"><name pos:start="135:50" pos:end="135:50">j</name><operator pos:start="135:51" pos:end="135:52">++</operator></expr></incr>)</control> <block pos:start="135:55" pos:end="195:5">{<block_content pos:start="137:9" pos:end="193:9">

        <decl_stmt pos:start="137:9" pos:end="137:36"><decl pos:start="137:9" pos:end="137:35"><type pos:start="137:9" pos:end="137:24"><specifier pos:start="137:9" pos:end="137:13">const</specifier> <name pos:start="137:15" pos:end="137:22">uint32_t</name> <modifier pos:start="137:24" pos:end="137:24">*</modifier></type><name pos:start="137:25" pos:end="137:35">scale_table</name></decl>;</decl_stmt>

        <decl_stmt pos:start="139:9" pos:end="139:32"><decl pos:start="139:9" pos:end="139:21"><type pos:start="139:9" pos:end="139:11"><name pos:start="139:9" pos:end="139:11">int</name></type> <name pos:start="139:13" pos:end="139:21">scale_sum</name></decl>, <decl pos:start="139:24" pos:end="139:31"><type ref="prev" pos:start="139:9" pos:end="139:11"/><name pos:start="139:24" pos:end="139:31">log_size</name></decl>;</decl_stmt>



        <expr_stmt pos:start="143:9" pos:end="145:78"><expr pos:start="143:9" pos:end="145:77"><call pos:start="143:9" pos:end="145:77"><name pos:start="143:9" pos:end="143:14">memset</name><argument_list pos:start="143:15" pos:end="145:77">(<argument pos:start="143:16" pos:end="143:33"><expr pos:start="143:16" pos:end="143:33"><name pos:start="143:16" pos:end="143:33"><name pos:start="143:16" pos:end="143:16">s</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:30">scale_factor</name><index pos:start="143:31" pos:end="143:33">[<expr pos:start="143:32" pos:end="143:32"><name pos:start="143:32" pos:end="143:32">j</name></expr>]</index></name></expr></argument>, <argument pos:start="143:36" pos:end="143:36"><expr pos:start="143:36" pos:end="143:36"><literal type="number" pos:start="143:36" pos:end="143:36">0</literal></expr></argument>,

               <argument pos:start="145:16" pos:end="145:76"><expr pos:start="145:16" pos:end="145:76"><name pos:start="145:16" pos:end="145:37"><name pos:start="145:16" pos:end="145:16">s</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:34">subband_activity</name><index pos:start="145:35" pos:end="145:37">[<expr pos:start="145:36" pos:end="145:36"><name pos:start="145:36" pos:end="145:36">j</name></expr>]</index></name> <operator pos:start="145:39" pos:end="145:39">*</operator> <sizeof pos:start="145:41" pos:end="145:72">sizeof<argument_list pos:start="145:47" pos:end="145:72">(<argument pos:start="145:48" pos:end="145:71"><expr pos:start="145:48" pos:end="145:71"><name pos:start="145:48" pos:end="145:71"><name pos:start="145:48" pos:end="145:48">s</name><operator pos:start="145:49" pos:end="145:50">-&gt;</operator><name pos:start="145:51" pos:end="145:62">scale_factor</name><index pos:start="145:63" pos:end="145:65">[<expr pos:start="145:64" pos:end="145:64"><literal type="number" pos:start="145:64" pos:end="145:64">0</literal></expr>]</index><index pos:start="145:66" pos:end="145:68">[<expr pos:start="145:67" pos:end="145:67"><literal type="number" pos:start="145:67" pos:end="145:67">0</literal></expr>]</index><index pos:start="145:69" pos:end="145:71">[<expr pos:start="145:70" pos:end="145:70"><literal type="number" pos:start="145:70" pos:end="145:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="145:74" pos:end="145:74">*</operator> <literal type="number" pos:start="145:76" pos:end="145:76">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="149:9" pos:end="161:9"><if pos:start="149:9" pos:end="155:9">if <condition pos:start="149:12" pos:end="149:43">(<expr pos:start="149:13" pos:end="149:42"><name pos:start="149:13" pos:end="149:37"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:34">scalefactor_huffman</name><index pos:start="149:35" pos:end="149:37">[<expr pos:start="149:36" pos:end="149:36"><name pos:start="149:36" pos:end="149:36">j</name></expr>]</index></name> <operator pos:start="149:39" pos:end="149:40">==</operator> <literal type="number" pos:start="149:42" pos:end="149:42">6</literal></expr>)</condition> <block pos:start="149:45" pos:end="155:9">{<block_content pos:start="151:13" pos:end="153:25">

            <expr_stmt pos:start="151:13" pos:end="151:46"><expr pos:start="151:13" pos:end="151:45"><name pos:start="151:13" pos:end="151:23">scale_table</name> <operator pos:start="151:25" pos:end="151:25">=</operator> <name pos:start="151:27" pos:end="151:45">scale_factor_quant7</name></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:25"><expr pos:start="153:13" pos:end="153:24"><name pos:start="153:13" pos:end="153:20">log_size</name> <operator pos:start="153:22" pos:end="153:22">=</operator> <literal type="number" pos:start="153:24" pos:end="153:24">7</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="155:11" pos:end="161:9">else <block pos:start="155:16" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:25">

            <expr_stmt pos:start="157:13" pos:end="157:46"><expr pos:start="157:13" pos:end="157:45"><name pos:start="157:13" pos:end="157:23">scale_table</name> <operator pos:start="157:25" pos:end="157:25">=</operator> <name pos:start="157:27" pos:end="157:45">scale_factor_quant6</name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:25"><expr pos:start="159:13" pos:end="159:24"><name pos:start="159:13" pos:end="159:20">log_size</name> <operator pos:start="159:22" pos:end="159:22">=</operator> <literal type="number" pos:start="159:24" pos:end="159:24">6</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="165:9" pos:end="165:64">/* When huffman coded, only the difference is encoded */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:22"><expr pos:start="167:9" pos:end="167:21"><name pos:start="167:9" pos:end="167:17">scale_sum</name> <operator pos:start="167:19" pos:end="167:19">=</operator> <literal type="number" pos:start="167:21" pos:end="167:21">0</literal></expr>;</expr_stmt>



        <for pos:start="171:9" pos:end="193:9">for <control pos:start="171:13" pos:end="171:52">(<init pos:start="171:14" pos:end="171:19"><expr pos:start="171:14" pos:end="171:18"><name pos:start="171:14" pos:end="171:14">k</name> <operator pos:start="171:16" pos:end="171:16">=</operator> <literal type="number" pos:start="171:18" pos:end="171:18">0</literal></expr>;</init> <condition pos:start="171:21" pos:end="171:47"><expr pos:start="171:21" pos:end="171:46"><name pos:start="171:21" pos:end="171:21">k</name> <operator pos:start="171:23" pos:end="171:23">&lt;</operator> <name pos:start="171:25" pos:end="171:46"><name pos:start="171:25" pos:end="171:25">s</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:43">subband_activity</name><index pos:start="171:44" pos:end="171:46">[<expr pos:start="171:45" pos:end="171:45"><name pos:start="171:45" pos:end="171:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="171:49" pos:end="171:51"><expr pos:start="171:49" pos:end="171:51"><name pos:start="171:49" pos:end="171:49">k</name><operator pos:start="171:50" pos:end="171:51">++</operator></expr></incr>)</control> <block pos:start="171:54" pos:end="193:9">{<block_content pos:start="173:13" pos:end="191:13">

            <if_stmt pos:start="173:13" pos:end="179:13"><if pos:start="173:13" pos:end="179:13">if <condition pos:start="173:16" pos:end="173:69">(<expr pos:start="173:17" pos:end="173:68"><name pos:start="173:17" pos:end="173:17">k</name> <operator pos:start="173:19" pos:end="173:20">&gt;=</operator> <name pos:start="173:22" pos:end="173:43"><name pos:start="173:22" pos:end="173:22">s</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:40">vq_start_subband</name><index pos:start="173:41" pos:end="173:43">[<expr pos:start="173:42" pos:end="173:42"><name pos:start="173:42" pos:end="173:42">j</name></expr>]</index></name> <operator pos:start="173:45" pos:end="173:46">||</operator> <name pos:start="173:48" pos:end="173:64"><name pos:start="173:48" pos:end="173:48">s</name><operator pos:start="173:49" pos:end="173:50">-&gt;</operator><name pos:start="173:51" pos:end="173:58">bitalloc</name><index pos:start="173:59" pos:end="173:61">[<expr pos:start="173:60" pos:end="173:60"><name pos:start="173:60" pos:end="173:60">j</name></expr>]</index><index pos:start="173:62" pos:end="173:64">[<expr pos:start="173:63" pos:end="173:63"><name pos:start="173:63" pos:end="173:63">k</name></expr>]</index></name> <operator pos:start="173:66" pos:end="173:66">&gt;</operator> <literal type="number" pos:start="173:68" pos:end="173:68">0</literal></expr>)</condition> <block pos:start="173:71" pos:end="179:13">{<block_content pos:start="175:17" pos:end="177:66">

                <expr_stmt pos:start="175:17" pos:end="175:94"><expr pos:start="175:17" pos:end="175:93"><name pos:start="175:17" pos:end="175:25">scale_sum</name> <operator pos:start="175:27" pos:end="175:27">=</operator> <call pos:start="175:29" pos:end="175:93"><name pos:start="175:29" pos:end="175:37">get_scale</name><argument_list pos:start="175:38" pos:end="175:93">(<argument pos:start="175:39" pos:end="175:44"><expr pos:start="175:39" pos:end="175:44"><operator pos:start="175:39" pos:end="175:39">&amp;</operator><name pos:start="175:40" pos:end="175:44"><name pos:start="175:40" pos:end="175:40">s</name><operator pos:start="175:41" pos:end="175:42">-&gt;</operator><name pos:start="175:43" pos:end="175:44">gb</name></name></expr></argument>, <argument pos:start="175:47" pos:end="175:71"><expr pos:start="175:47" pos:end="175:71"><name pos:start="175:47" pos:end="175:71"><name pos:start="175:47" pos:end="175:47">s</name><operator pos:start="175:48" pos:end="175:49">-&gt;</operator><name pos:start="175:50" pos:end="175:68">scalefactor_huffman</name><index pos:start="175:69" pos:end="175:71">[<expr pos:start="175:70" pos:end="175:70"><name pos:start="175:70" pos:end="175:70">j</name></expr>]</index></name></expr></argument>, <argument pos:start="175:74" pos:end="175:82"><expr pos:start="175:74" pos:end="175:82"><name pos:start="175:74" pos:end="175:82">scale_sum</name></expr></argument>, <argument pos:start="175:85" pos:end="175:92"><expr pos:start="175:85" pos:end="175:92"><name pos:start="175:85" pos:end="175:92">log_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:66"><expr pos:start="177:17" pos:end="177:65"><name pos:start="177:17" pos:end="177:40"><name pos:start="177:17" pos:end="177:17">s</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:31">scale_factor</name><index pos:start="177:32" pos:end="177:34">[<expr pos:start="177:33" pos:end="177:33"><name pos:start="177:33" pos:end="177:33">j</name></expr>]</index><index pos:start="177:35" pos:end="177:37">[<expr pos:start="177:36" pos:end="177:36"><name pos:start="177:36" pos:end="177:36">k</name></expr>]</index><index pos:start="177:38" pos:end="177:40">[<expr pos:start="177:39" pos:end="177:39"><literal type="number" pos:start="177:39" pos:end="177:39">0</literal></expr>]</index></name> <operator pos:start="177:42" pos:end="177:42">=</operator> <name pos:start="177:44" pos:end="177:65"><name pos:start="177:44" pos:end="177:54">scale_table</name><index pos:start="177:55" pos:end="177:65">[<expr pos:start="177:56" pos:end="177:64"><name pos:start="177:56" pos:end="177:64">scale_sum</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="183:13" pos:end="191:13"><if pos:start="183:13" pos:end="191:13">if <condition pos:start="183:16" pos:end="183:71">(<expr pos:start="183:17" pos:end="183:70"><name pos:start="183:17" pos:end="183:17">k</name> <operator pos:start="183:19" pos:end="183:19">&lt;</operator> <name pos:start="183:21" pos:end="183:42"><name pos:start="183:21" pos:end="183:21">s</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:39">vq_start_subband</name><index pos:start="183:40" pos:end="183:42">[<expr pos:start="183:41" pos:end="183:41"><name pos:start="183:41" pos:end="183:41">j</name></expr>]</index></name> <operator pos:start="183:44" pos:end="183:45">&amp;&amp;</operator> <name pos:start="183:47" pos:end="183:70"><name pos:start="183:47" pos:end="183:47">s</name><operator pos:start="183:48" pos:end="183:49">-&gt;</operator><name pos:start="183:50" pos:end="183:64">transition_mode</name><index pos:start="183:65" pos:end="183:67">[<expr pos:start="183:66" pos:end="183:66"><name pos:start="183:66" pos:end="183:66">j</name></expr>]</index><index pos:start="183:68" pos:end="183:70">[<expr pos:start="183:69" pos:end="183:69"><name pos:start="183:69" pos:end="183:69">k</name></expr>]</index></name></expr>)</condition> <block pos:start="183:73" pos:end="191:13">{<block_content pos:start="187:17" pos:end="189:66">

                <comment type="block" pos:start="185:17" pos:end="185:45">/* Get second scale factor */</comment>

                <expr_stmt pos:start="187:17" pos:end="187:94"><expr pos:start="187:17" pos:end="187:93"><name pos:start="187:17" pos:end="187:25">scale_sum</name> <operator pos:start="187:27" pos:end="187:27">=</operator> <call pos:start="187:29" pos:end="187:93"><name pos:start="187:29" pos:end="187:37">get_scale</name><argument_list pos:start="187:38" pos:end="187:93">(<argument pos:start="187:39" pos:end="187:44"><expr pos:start="187:39" pos:end="187:44"><operator pos:start="187:39" pos:end="187:39">&amp;</operator><name pos:start="187:40" pos:end="187:44"><name pos:start="187:40" pos:end="187:40">s</name><operator pos:start="187:41" pos:end="187:42">-&gt;</operator><name pos:start="187:43" pos:end="187:44">gb</name></name></expr></argument>, <argument pos:start="187:47" pos:end="187:71"><expr pos:start="187:47" pos:end="187:71"><name pos:start="187:47" pos:end="187:71"><name pos:start="187:47" pos:end="187:47">s</name><operator pos:start="187:48" pos:end="187:49">-&gt;</operator><name pos:start="187:50" pos:end="187:68">scalefactor_huffman</name><index pos:start="187:69" pos:end="187:71">[<expr pos:start="187:70" pos:end="187:70"><name pos:start="187:70" pos:end="187:70">j</name></expr>]</index></name></expr></argument>, <argument pos:start="187:74" pos:end="187:82"><expr pos:start="187:74" pos:end="187:82"><name pos:start="187:74" pos:end="187:82">scale_sum</name></expr></argument>, <argument pos:start="187:85" pos:end="187:92"><expr pos:start="187:85" pos:end="187:92"><name pos:start="187:85" pos:end="187:92">log_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:66"><expr pos:start="189:17" pos:end="189:65"><name pos:start="189:17" pos:end="189:40"><name pos:start="189:17" pos:end="189:17">s</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:31">scale_factor</name><index pos:start="189:32" pos:end="189:34">[<expr pos:start="189:33" pos:end="189:33"><name pos:start="189:33" pos:end="189:33">j</name></expr>]</index><index pos:start="189:35" pos:end="189:37">[<expr pos:start="189:36" pos:end="189:36"><name pos:start="189:36" pos:end="189:36">k</name></expr>]</index><index pos:start="189:38" pos:end="189:40">[<expr pos:start="189:39" pos:end="189:39"><literal type="number" pos:start="189:39" pos:end="189:39">1</literal></expr>]</index></name> <operator pos:start="189:42" pos:end="189:42">=</operator> <name pos:start="189:44" pos:end="189:65"><name pos:start="189:44" pos:end="189:54">scale_table</name><index pos:start="189:55" pos:end="189:65">[<expr pos:start="189:56" pos:end="189:64"><name pos:start="189:56" pos:end="189:64">scale_sum</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="199:5" pos:end="199:52">/* Joint subband scale factor codebook select */</comment>

    <for pos:start="201:5" pos:end="209:5">for <control pos:start="201:9" pos:end="201:53">(<init pos:start="201:10" pos:end="201:26"><expr pos:start="201:10" pos:end="201:25"><name pos:start="201:10" pos:end="201:10">j</name> <operator pos:start="201:12" pos:end="201:12">=</operator> <name pos:start="201:14" pos:end="201:25">base_channel</name></expr>;</init> <condition pos:start="201:28" pos:end="201:48"><expr pos:start="201:28" pos:end="201:47"><name pos:start="201:28" pos:end="201:28">j</name> <operator pos:start="201:30" pos:end="201:30">&lt;</operator> <name pos:start="201:32" pos:end="201:47"><name pos:start="201:32" pos:end="201:32">s</name><operator pos:start="201:33" pos:end="201:34">-&gt;</operator><name pos:start="201:35" pos:end="201:47">prim_channels</name></name></expr>;</condition> <incr pos:start="201:50" pos:end="201:52"><expr pos:start="201:50" pos:end="201:52"><name pos:start="201:50" pos:end="201:50">j</name><operator pos:start="201:51" pos:end="201:52">++</operator></expr></incr>)</control> <block pos:start="201:55" pos:end="209:5">{<block_content pos:start="205:9" pos:end="207:51">

        <comment type="block" pos:start="203:9" pos:end="203:62">/* Transmitted only if joint subband coding enabled */</comment>

        <if_stmt pos:start="205:9" pos:end="207:51"><if pos:start="205:9" pos:end="207:51">if <condition pos:start="205:12" pos:end="205:38">(<expr pos:start="205:13" pos:end="205:37"><name pos:start="205:13" pos:end="205:33"><name pos:start="205:13" pos:end="205:13">s</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:30">joint_intensity</name><index pos:start="205:31" pos:end="205:33">[<expr pos:start="205:32" pos:end="205:32"><name pos:start="205:32" pos:end="205:32">j</name></expr>]</index></name> <operator pos:start="205:35" pos:end="205:35">&gt;</operator> <literal type="number" pos:start="205:37" pos:end="205:37">0</literal></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="207:51"><block_content pos:start="207:13" pos:end="207:51">

            <expr_stmt pos:start="207:13" pos:end="207:51"><expr pos:start="207:13" pos:end="207:50"><name pos:start="207:13" pos:end="207:28"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:25">joint_huff</name><index pos:start="207:26" pos:end="207:28">[<expr pos:start="207:27" pos:end="207:27"><name pos:start="207:27" pos:end="207:27">j</name></expr>]</index></name> <operator pos:start="207:30" pos:end="207:30">=</operator> <call pos:start="207:32" pos:end="207:50"><name pos:start="207:32" pos:end="207:39">get_bits</name><argument_list pos:start="207:40" pos:end="207:50">(<argument pos:start="207:41" pos:end="207:46"><expr pos:start="207:41" pos:end="207:46"><operator pos:start="207:41" pos:end="207:41">&amp;</operator><name pos:start="207:42" pos:end="207:46"><name pos:start="207:42" pos:end="207:42">s</name><operator pos:start="207:43" pos:end="207:44">-&gt;</operator><name pos:start="207:45" pos:end="207:46">gb</name></name></expr></argument>, <argument pos:start="207:49" pos:end="207:49"><expr pos:start="207:49" pos:end="207:49"><literal type="number" pos:start="207:49" pos:end="207:49">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="213:5" pos:end="215:35"><if pos:start="213:5" pos:end="215:35">if <condition pos:start="213:8" pos:end="213:34">(<expr pos:start="213:9" pos:end="213:33"><call pos:start="213:9" pos:end="213:29"><name pos:start="213:9" pos:end="213:21">get_bits_left</name><argument_list pos:start="213:22" pos:end="213:29">(<argument pos:start="213:23" pos:end="213:28"><expr pos:start="213:23" pos:end="213:28"><operator pos:start="213:23" pos:end="213:23">&amp;</operator><name pos:start="213:24" pos:end="213:28"><name pos:start="213:24" pos:end="213:24">s</name><operator pos:start="213:25" pos:end="213:26">-&gt;</operator><name pos:start="213:27" pos:end="213:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="213:31" pos:end="213:31">&lt;</operator> <literal type="number" pos:start="213:33" pos:end="213:33">0</literal></expr>)</condition><block type="pseudo" pos:start="215:9" pos:end="215:35"><block_content pos:start="215:9" pos:end="215:35">

        <return pos:start="215:9" pos:end="215:35">return <expr pos:start="215:16" pos:end="215:34"><name pos:start="215:16" pos:end="215:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="219:5" pos:end="219:48">/* Scale factors for joint subband coding */</comment>

    <for pos:start="221:5" pos:end="265:5">for <control pos:start="221:9" pos:end="221:53">(<init pos:start="221:10" pos:end="221:26"><expr pos:start="221:10" pos:end="221:25"><name pos:start="221:10" pos:end="221:10">j</name> <operator pos:start="221:12" pos:end="221:12">=</operator> <name pos:start="221:14" pos:end="221:25">base_channel</name></expr>;</init> <condition pos:start="221:28" pos:end="221:48"><expr pos:start="221:28" pos:end="221:47"><name pos:start="221:28" pos:end="221:28">j</name> <operator pos:start="221:30" pos:end="221:30">&lt;</operator> <name pos:start="221:32" pos:end="221:47"><name pos:start="221:32" pos:end="221:32">s</name><operator pos:start="221:33" pos:end="221:34">-&gt;</operator><name pos:start="221:35" pos:end="221:47">prim_channels</name></name></expr>;</condition> <incr pos:start="221:50" pos:end="221:52"><expr pos:start="221:50" pos:end="221:52"><name pos:start="221:50" pos:end="221:50">j</name><operator pos:start="221:51" pos:end="221:52">++</operator></expr></incr>)</control> <block pos:start="221:55" pos:end="265:5">{<block_content pos:start="223:9" pos:end="263:9">

        <decl_stmt pos:start="223:9" pos:end="223:27"><decl pos:start="223:9" pos:end="223:26"><type pos:start="223:9" pos:end="223:11"><name pos:start="223:9" pos:end="223:11">int</name></type> <name pos:start="223:13" pos:end="223:26">source_channel</name></decl>;</decl_stmt>



        <comment type="block" pos:start="227:9" pos:end="227:62">/* Transmitted only if joint subband coding enabled */</comment>

        <if_stmt pos:start="229:9" pos:end="263:9"><if pos:start="229:9" pos:end="263:9">if <condition pos:start="229:12" pos:end="229:38">(<expr pos:start="229:13" pos:end="229:37"><name pos:start="229:13" pos:end="229:33"><name pos:start="229:13" pos:end="229:13">s</name><operator pos:start="229:14" pos:end="229:15">-&gt;</operator><name pos:start="229:16" pos:end="229:30">joint_intensity</name><index pos:start="229:31" pos:end="229:33">[<expr pos:start="229:32" pos:end="229:32"><name pos:start="229:32" pos:end="229:32">j</name></expr>]</index></name> <operator pos:start="229:35" pos:end="229:35">&gt;</operator> <literal type="number" pos:start="229:37" pos:end="229:37">0</literal></expr>)</condition> <block pos:start="229:40" pos:end="263:9">{<block_content pos:start="231:13" pos:end="261:13">

            <decl_stmt pos:start="231:13" pos:end="231:26"><decl pos:start="231:13" pos:end="231:25"><type pos:start="231:13" pos:end="231:15"><name pos:start="231:13" pos:end="231:15">int</name></type> <name pos:start="231:17" pos:end="231:21">scale</name> <init pos:start="231:23" pos:end="231:25">= <expr pos:start="231:25" pos:end="231:25"><literal type="number" pos:start="231:25" pos:end="231:25">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:55"><expr pos:start="233:13" pos:end="233:54"><name pos:start="233:13" pos:end="233:26">source_channel</name> <operator pos:start="233:28" pos:end="233:28">=</operator> <name pos:start="233:30" pos:end="233:50"><name pos:start="233:30" pos:end="233:30">s</name><operator pos:start="233:31" pos:end="233:32">-&gt;</operator><name pos:start="233:33" pos:end="233:47">joint_intensity</name><index pos:start="233:48" pos:end="233:50">[<expr pos:start="233:49" pos:end="233:49"><name pos:start="233:49" pos:end="233:49">j</name></expr>]</index></name> <operator pos:start="233:52" pos:end="233:52">-</operator> <literal type="number" pos:start="233:54" pos:end="233:54">1</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="237:13" pos:end="239:62">/* When huffman coded, only the difference is encoded

             * (is this valid as well for joint scales ???) */</comment>



            <for pos:start="243:13" pos:end="249:13">for <control pos:start="243:17" pos:end="243:90">(<init pos:start="243:18" pos:end="243:44"><expr pos:start="243:18" pos:end="243:43"><name pos:start="243:18" pos:end="243:18">k</name> <operator pos:start="243:20" pos:end="243:20">=</operator> <name pos:start="243:22" pos:end="243:43"><name pos:start="243:22" pos:end="243:22">s</name><operator pos:start="243:23" pos:end="243:24">-&gt;</operator><name pos:start="243:25" pos:end="243:40">subband_activity</name><index pos:start="243:41" pos:end="243:43">[<expr pos:start="243:42" pos:end="243:42"><name pos:start="243:42" pos:end="243:42">j</name></expr>]</index></name></expr>;</init> <condition pos:start="243:46" pos:end="243:85"><expr pos:start="243:46" pos:end="243:84"><name pos:start="243:46" pos:end="243:46">k</name> <operator pos:start="243:48" pos:end="243:48">&lt;</operator> <name pos:start="243:50" pos:end="243:84"><name pos:start="243:50" pos:end="243:50">s</name><operator pos:start="243:51" pos:end="243:52">-&gt;</operator><name pos:start="243:53" pos:end="243:68">subband_activity</name><index pos:start="243:69" pos:end="243:84">[<expr pos:start="243:70" pos:end="243:83"><name pos:start="243:70" pos:end="243:83">source_channel</name></expr>]</index></name></expr>;</condition> <incr pos:start="243:87" pos:end="243:89"><expr pos:start="243:87" pos:end="243:89"><name pos:start="243:87" pos:end="243:87">k</name><operator pos:start="243:88" pos:end="243:89">++</operator></expr></incr>)</control> <block pos:start="243:92" pos:end="249:13">{<block_content pos:start="245:17" pos:end="247:52">

                <expr_stmt pos:start="245:17" pos:end="245:78"><expr pos:start="245:17" pos:end="245:77"><name pos:start="245:17" pos:end="245:21">scale</name> <operator pos:start="245:23" pos:end="245:23">=</operator> <call pos:start="245:25" pos:end="245:77"><name pos:start="245:25" pos:end="245:33">get_scale</name><argument_list pos:start="245:34" pos:end="245:77">(<argument pos:start="245:35" pos:end="245:40"><expr pos:start="245:35" pos:end="245:40"><operator pos:start="245:35" pos:end="245:35">&amp;</operator><name pos:start="245:36" pos:end="245:40"><name pos:start="245:36" pos:end="245:36">s</name><operator pos:start="245:37" pos:end="245:38">-&gt;</operator><name pos:start="245:39" pos:end="245:40">gb</name></name></expr></argument>, <argument pos:start="245:43" pos:end="245:58"><expr pos:start="245:43" pos:end="245:58"><name pos:start="245:43" pos:end="245:58"><name pos:start="245:43" pos:end="245:43">s</name><operator pos:start="245:44" pos:end="245:45">-&gt;</operator><name pos:start="245:46" pos:end="245:55">joint_huff</name><index pos:start="245:56" pos:end="245:58">[<expr pos:start="245:57" pos:end="245:57"><name pos:start="245:57" pos:end="245:57">j</name></expr>]</index></name></expr></argument>, <argument pos:start="245:61" pos:end="245:62"><expr pos:start="245:61" pos:end="245:62"><literal type="number" pos:start="245:61" pos:end="245:62">64</literal></expr></argument> <comment type="block" pos:start="245:64" pos:end="245:73">/* bias */</comment>, <argument pos:start="245:76" pos:end="245:76"><expr pos:start="245:76" pos:end="245:76"><literal type="number" pos:start="245:76" pos:end="245:76">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="247:17" pos:end="247:52"><expr pos:start="247:17" pos:end="247:51"><name pos:start="247:17" pos:end="247:43"><name pos:start="247:17" pos:end="247:17">s</name><operator pos:start="247:18" pos:end="247:19">-&gt;</operator><name pos:start="247:20" pos:end="247:37">joint_scale_factor</name><index pos:start="247:38" pos:end="247:40">[<expr pos:start="247:39" pos:end="247:39"><name pos:start="247:39" pos:end="247:39">j</name></expr>]</index><index pos:start="247:41" pos:end="247:43">[<expr pos:start="247:42" pos:end="247:42"><name pos:start="247:42" pos:end="247:42">k</name></expr>]</index></name> <operator pos:start="247:45" pos:end="247:45">=</operator> <name pos:start="247:47" pos:end="247:51">scale</name></expr>;</expr_stmt>    <comment type="block" pos:start="247:57" pos:end="247:86">/*joint_scale_table[scale]; */</comment>

            </block_content>}</block></for>



            <if_stmt pos:start="253:13" pos:end="261:13"><if pos:start="253:13" pos:end="261:13">if <condition pos:start="253:16" pos:end="253:40">(<expr pos:start="253:17" pos:end="253:39"><operator pos:start="253:17" pos:end="253:17">!</operator><operator pos:start="253:18" pos:end="253:18">(</operator><name pos:start="253:19" pos:end="253:31"><name pos:start="253:19" pos:end="253:19">s</name><operator pos:start="253:20" pos:end="253:21">-&gt;</operator><name pos:start="253:22" pos:end="253:31">debug_flag</name></name> <operator pos:start="253:33" pos:end="253:33">&amp;</operator> <literal type="number" pos:start="253:35" pos:end="253:38">0x02</literal><operator pos:start="253:39" pos:end="253:39">)</operator></expr>)</condition> <block pos:start="253:42" pos:end="261:13">{<block_content pos:start="255:17" pos:end="259:38">

                <expr_stmt pos:start="255:17" pos:end="257:62"><expr pos:start="255:17" pos:end="257:61"><call pos:start="255:17" pos:end="257:61"><name pos:start="255:17" pos:end="255:22">av_log</name><argument_list pos:start="255:23" pos:end="257:61">(<argument pos:start="255:24" pos:end="255:31"><expr pos:start="255:24" pos:end="255:31"><name pos:start="255:24" pos:end="255:31"><name pos:start="255:24" pos:end="255:24">s</name><operator pos:start="255:25" pos:end="255:26">-&gt;</operator><name pos:start="255:27" pos:end="255:31">avctx</name></name></expr></argument>, <argument pos:start="255:34" pos:end="255:45"><expr pos:start="255:34" pos:end="255:45"><name pos:start="255:34" pos:end="255:45">AV_LOG_DEBUG</name></expr></argument>,

                       <argument pos:start="257:24" pos:end="257:60"><expr pos:start="257:24" pos:end="257:60"><literal type="string" pos:start="257:24" pos:end="257:60">"Joint stereo coding not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="259:17" pos:end="259:38"><expr pos:start="259:17" pos:end="259:37"><name pos:start="259:17" pos:end="259:29"><name pos:start="259:17" pos:end="259:17">s</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:29">debug_flag</name></name> <operator pos:start="259:31" pos:end="259:32">|=</operator> <literal type="number" pos:start="259:34" pos:end="259:37">0x02</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="269:5" pos:end="269:37">/* Stereo downmix coefficients */</comment>

    <if_stmt pos:start="271:5" pos:end="307:5"><if pos:start="271:5" pos:end="307:5">if <condition pos:start="271:8" pos:end="271:46">(<expr pos:start="271:9" pos:end="271:45"><operator pos:start="271:9" pos:end="271:9">!</operator><name pos:start="271:10" pos:end="271:21">base_channel</name> <operator pos:start="271:23" pos:end="271:24">&amp;&amp;</operator> <name pos:start="271:26" pos:end="271:41"><name pos:start="271:26" pos:end="271:26">s</name><operator pos:start="271:27" pos:end="271:28">-&gt;</operator><name pos:start="271:29" pos:end="271:41">prim_channels</name></name> <operator pos:start="271:43" pos:end="271:43">&gt;</operator> <literal type="number" pos:start="271:45" pos:end="271:45">2</literal></expr>)</condition> <block pos:start="271:48" pos:end="307:5">{<block_content pos:start="273:9" pos:end="305:9">

        <if_stmt pos:start="273:9" pos:end="305:9"><if pos:start="273:9" pos:end="283:9">if <condition pos:start="273:12" pos:end="273:23">(<expr pos:start="273:13" pos:end="273:22"><name pos:start="273:13" pos:end="273:22"><name pos:start="273:13" pos:end="273:13">s</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:22">downmix</name></name></expr>)</condition> <block pos:start="273:25" pos:end="283:9">{<block_content pos:start="275:13" pos:end="281:13">

            <for pos:start="275:13" pos:end="281:13">for <control pos:start="275:17" pos:end="275:61">(<init pos:start="275:18" pos:end="275:34"><expr pos:start="275:18" pos:end="275:33"><name pos:start="275:18" pos:end="275:18">j</name> <operator pos:start="275:20" pos:end="275:20">=</operator> <name pos:start="275:22" pos:end="275:33">base_channel</name></expr>;</init> <condition pos:start="275:36" pos:end="275:56"><expr pos:start="275:36" pos:end="275:55"><name pos:start="275:36" pos:end="275:36">j</name> <operator pos:start="275:38" pos:end="275:38">&lt;</operator> <name pos:start="275:40" pos:end="275:55"><name pos:start="275:40" pos:end="275:40">s</name><operator pos:start="275:41" pos:end="275:42">-&gt;</operator><name pos:start="275:43" pos:end="275:55">prim_channels</name></name></expr>;</condition> <incr pos:start="275:58" pos:end="275:60"><expr pos:start="275:58" pos:end="275:60"><name pos:start="275:58" pos:end="275:58">j</name><operator pos:start="275:59" pos:end="275:60">++</operator></expr></incr>)</control> <block pos:start="275:63" pos:end="281:13">{<block_content pos:start="277:17" pos:end="279:60">

                <expr_stmt pos:start="277:17" pos:end="277:60"><expr pos:start="277:17" pos:end="277:59"><name pos:start="277:17" pos:end="277:37"><name pos:start="277:17" pos:end="277:17">s</name><operator pos:start="277:18" pos:end="277:19">-&gt;</operator><name pos:start="277:20" pos:end="277:31">downmix_coef</name><index pos:start="277:32" pos:end="277:34">[<expr pos:start="277:33" pos:end="277:33"><name pos:start="277:33" pos:end="277:33">j</name></expr>]</index><index pos:start="277:35" pos:end="277:37">[<expr pos:start="277:36" pos:end="277:36"><literal type="number" pos:start="277:36" pos:end="277:36">0</literal></expr>]</index></name> <operator pos:start="277:39" pos:end="277:39">=</operator> <call pos:start="277:41" pos:end="277:59"><name pos:start="277:41" pos:end="277:48">get_bits</name><argument_list pos:start="277:49" pos:end="277:59">(<argument pos:start="277:50" pos:end="277:55"><expr pos:start="277:50" pos:end="277:55"><operator pos:start="277:50" pos:end="277:50">&amp;</operator><name pos:start="277:51" pos:end="277:55"><name pos:start="277:51" pos:end="277:51">s</name><operator pos:start="277:52" pos:end="277:53">-&gt;</operator><name pos:start="277:54" pos:end="277:55">gb</name></name></expr></argument>, <argument pos:start="277:58" pos:end="277:58"><expr pos:start="277:58" pos:end="277:58"><literal type="number" pos:start="277:58" pos:end="277:58">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:60"><expr pos:start="279:17" pos:end="279:59"><name pos:start="279:17" pos:end="279:37"><name pos:start="279:17" pos:end="279:17">s</name><operator pos:start="279:18" pos:end="279:19">-&gt;</operator><name pos:start="279:20" pos:end="279:31">downmix_coef</name><index pos:start="279:32" pos:end="279:34">[<expr pos:start="279:33" pos:end="279:33"><name pos:start="279:33" pos:end="279:33">j</name></expr>]</index><index pos:start="279:35" pos:end="279:37">[<expr pos:start="279:36" pos:end="279:36"><literal type="number" pos:start="279:36" pos:end="279:36">1</literal></expr>]</index></name> <operator pos:start="279:39" pos:end="279:39">=</operator> <call pos:start="279:41" pos:end="279:59"><name pos:start="279:41" pos:end="279:48">get_bits</name><argument_list pos:start="279:49" pos:end="279:59">(<argument pos:start="279:50" pos:end="279:55"><expr pos:start="279:50" pos:end="279:55"><operator pos:start="279:50" pos:end="279:50">&amp;</operator><name pos:start="279:51" pos:end="279:55"><name pos:start="279:51" pos:end="279:51">s</name><operator pos:start="279:52" pos:end="279:53">-&gt;</operator><name pos:start="279:54" pos:end="279:55">gb</name></name></expr></argument>, <argument pos:start="279:58" pos:end="279:58"><expr pos:start="279:58" pos:end="279:58"><literal type="number" pos:start="279:58" pos:end="279:58">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="283:11" pos:end="305:9">else <block pos:start="283:16" pos:end="305:9">{<block_content pos:start="285:13" pos:end="303:13">

            <decl_stmt pos:start="285:13" pos:end="285:49"><decl pos:start="285:13" pos:end="285:48"><type pos:start="285:13" pos:end="285:15"><name pos:start="285:13" pos:end="285:15">int</name></type> <name pos:start="285:17" pos:end="285:18">am</name> <init pos:start="285:20" pos:end="285:48">= <expr pos:start="285:22" pos:end="285:48"><name pos:start="285:22" pos:end="285:29"><name pos:start="285:22" pos:end="285:22">s</name><operator pos:start="285:23" pos:end="285:24">-&gt;</operator><name pos:start="285:25" pos:end="285:29">amode</name></name> <operator pos:start="285:31" pos:end="285:31">&amp;</operator> <name pos:start="285:33" pos:end="285:48">DCA_CHANNEL_MASK</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="287:13" pos:end="295:13"><if pos:start="287:13" pos:end="295:13">if <condition pos:start="287:16" pos:end="287:57">(<expr pos:start="287:17" pos:end="287:56"><name pos:start="287:17" pos:end="287:18">am</name> <operator pos:start="287:20" pos:end="287:21">&gt;=</operator> <call pos:start="287:23" pos:end="287:56"><name pos:start="287:23" pos:end="287:36">FF_ARRAY_ELEMS</name><argument_list pos:start="287:37" pos:end="287:56">(<argument pos:start="287:38" pos:end="287:55"><expr pos:start="287:38" pos:end="287:55"><name pos:start="287:38" pos:end="287:55">dca_default_coeffs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="287:59" pos:end="295:13">{<block_content pos:start="289:17" pos:end="293:43">

                <expr_stmt pos:start="289:17" pos:end="291:56"><expr pos:start="289:17" pos:end="291:55"><call pos:start="289:17" pos:end="291:55"><name pos:start="289:17" pos:end="289:22">av_log</name><argument_list pos:start="289:23" pos:end="291:55">(<argument pos:start="289:24" pos:end="289:31"><expr pos:start="289:24" pos:end="289:31"><name pos:start="289:24" pos:end="289:31"><name pos:start="289:24" pos:end="289:24">s</name><operator pos:start="289:25" pos:end="289:26">-&gt;</operator><name pos:start="289:27" pos:end="289:31">avctx</name></name></expr></argument>, <argument pos:start="289:34" pos:end="289:45"><expr pos:start="289:34" pos:end="289:45"><name pos:start="289:34" pos:end="289:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="291:24" pos:end="291:50"><expr pos:start="291:24" pos:end="291:50"><literal type="string" pos:start="291:24" pos:end="291:50">"Invalid channel mode %d\n"</literal></expr></argument>, <argument pos:start="291:53" pos:end="291:54"><expr pos:start="291:53" pos:end="291:54"><name pos:start="291:53" pos:end="291:54">am</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="293:17" pos:end="293:43">return <expr pos:start="293:24" pos:end="293:42"><name pos:start="293:24" pos:end="293:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <for pos:start="297:13" pos:end="303:13">for <control pos:start="297:17" pos:end="297:61">(<init pos:start="297:18" pos:end="297:34"><expr pos:start="297:18" pos:end="297:33"><name pos:start="297:18" pos:end="297:18">j</name> <operator pos:start="297:20" pos:end="297:20">=</operator> <name pos:start="297:22" pos:end="297:33">base_channel</name></expr>;</init> <condition pos:start="297:36" pos:end="297:56"><expr pos:start="297:36" pos:end="297:55"><name pos:start="297:36" pos:end="297:36">j</name> <operator pos:start="297:38" pos:end="297:38">&lt;</operator> <name pos:start="297:40" pos:end="297:55"><name pos:start="297:40" pos:end="297:40">s</name><operator pos:start="297:41" pos:end="297:42">-&gt;</operator><name pos:start="297:43" pos:end="297:55">prim_channels</name></name></expr>;</condition> <incr pos:start="297:58" pos:end="297:60"><expr pos:start="297:58" pos:end="297:60"><name pos:start="297:58" pos:end="297:58">j</name><operator pos:start="297:59" pos:end="297:60">++</operator></expr></incr>)</control> <block pos:start="297:63" pos:end="303:13">{<block_content pos:start="299:17" pos:end="301:69">

                <expr_stmt pos:start="299:17" pos:end="299:69"><expr pos:start="299:17" pos:end="299:68"><name pos:start="299:17" pos:end="299:37"><name pos:start="299:17" pos:end="299:17">s</name><operator pos:start="299:18" pos:end="299:19">-&gt;</operator><name pos:start="299:20" pos:end="299:31">downmix_coef</name><index pos:start="299:32" pos:end="299:34">[<expr pos:start="299:33" pos:end="299:33"><name pos:start="299:33" pos:end="299:33">j</name></expr>]</index><index pos:start="299:35" pos:end="299:37">[<expr pos:start="299:36" pos:end="299:36"><literal type="number" pos:start="299:36" pos:end="299:36">0</literal></expr>]</index></name> <operator pos:start="299:39" pos:end="299:39">=</operator> <name pos:start="299:41" pos:end="299:68"><name pos:start="299:41" pos:end="299:58">dca_default_coeffs</name><index pos:start="299:59" pos:end="299:62">[<expr pos:start="299:60" pos:end="299:61"><name pos:start="299:60" pos:end="299:61">am</name></expr>]</index><index pos:start="299:63" pos:end="299:65">[<expr pos:start="299:64" pos:end="299:64"><name pos:start="299:64" pos:end="299:64">j</name></expr>]</index><index pos:start="299:66" pos:end="299:68">[<expr pos:start="299:67" pos:end="299:67"><literal type="number" pos:start="299:67" pos:end="299:67">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="301:17" pos:end="301:69"><expr pos:start="301:17" pos:end="301:68"><name pos:start="301:17" pos:end="301:37"><name pos:start="301:17" pos:end="301:17">s</name><operator pos:start="301:18" pos:end="301:19">-&gt;</operator><name pos:start="301:20" pos:end="301:31">downmix_coef</name><index pos:start="301:32" pos:end="301:34">[<expr pos:start="301:33" pos:end="301:33"><name pos:start="301:33" pos:end="301:33">j</name></expr>]</index><index pos:start="301:35" pos:end="301:37">[<expr pos:start="301:36" pos:end="301:36"><literal type="number" pos:start="301:36" pos:end="301:36">1</literal></expr>]</index></name> <operator pos:start="301:39" pos:end="301:39">=</operator> <name pos:start="301:41" pos:end="301:68"><name pos:start="301:41" pos:end="301:58">dca_default_coeffs</name><index pos:start="301:59" pos:end="301:62">[<expr pos:start="301:60" pos:end="301:61"><name pos:start="301:60" pos:end="301:61">am</name></expr>]</index><index pos:start="301:63" pos:end="301:65">[<expr pos:start="301:64" pos:end="301:64"><name pos:start="301:64" pos:end="301:64">j</name></expr>]</index><index pos:start="301:66" pos:end="301:68">[<expr pos:start="301:67" pos:end="301:67"><literal type="number" pos:start="301:67" pos:end="301:67">1</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="311:5" pos:end="311:35">/* Dynamic range coefficient */</comment>

    <if_stmt pos:start="313:5" pos:end="315:47"><if pos:start="313:5" pos:end="315:47">if <condition pos:start="313:8" pos:end="313:37">(<expr pos:start="313:9" pos:end="313:36"><operator pos:start="313:9" pos:end="313:9">!</operator><name pos:start="313:10" pos:end="313:21">base_channel</name> <operator pos:start="313:23" pos:end="313:24">&amp;&amp;</operator> <name pos:start="313:26" pos:end="313:36"><name pos:start="313:26" pos:end="313:26">s</name><operator pos:start="313:27" pos:end="313:28">-&gt;</operator><name pos:start="313:29" pos:end="313:36">dynrange</name></name></expr>)</condition><block type="pseudo" pos:start="315:9" pos:end="315:47"><block_content pos:start="315:9" pos:end="315:47">

        <expr_stmt pos:start="315:9" pos:end="315:47"><expr pos:start="315:9" pos:end="315:46"><name pos:start="315:9" pos:end="315:24"><name pos:start="315:9" pos:end="315:9">s</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:24">dynrange_coef</name></name> <operator pos:start="315:26" pos:end="315:26">=</operator> <call pos:start="315:28" pos:end="315:46"><name pos:start="315:28" pos:end="315:35">get_bits</name><argument_list pos:start="315:36" pos:end="315:46">(<argument pos:start="315:37" pos:end="315:42"><expr pos:start="315:37" pos:end="315:42"><operator pos:start="315:37" pos:end="315:37">&amp;</operator><name pos:start="315:38" pos:end="315:42"><name pos:start="315:38" pos:end="315:38">s</name><operator pos:start="315:39" pos:end="315:40">-&gt;</operator><name pos:start="315:41" pos:end="315:42">gb</name></name></expr></argument>, <argument pos:start="315:45" pos:end="315:45"><expr pos:start="315:45" pos:end="315:45"><literal type="number" pos:start="315:45" pos:end="315:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="319:5" pos:end="319:41">/* Side information CRC check word */</comment>

    <if_stmt pos:start="321:5" pos:end="325:5"><if pos:start="321:5" pos:end="325:5">if <condition pos:start="321:8" pos:end="321:23">(<expr pos:start="321:9" pos:end="321:22"><name pos:start="321:9" pos:end="321:22"><name pos:start="321:9" pos:end="321:9">s</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:22">crc_present</name></name></expr>)</condition> <block pos:start="321:25" pos:end="325:5">{<block_content pos:start="323:9" pos:end="323:29">

        <expr_stmt pos:start="323:9" pos:end="323:29"><expr pos:start="323:9" pos:end="323:28"><call pos:start="323:9" pos:end="323:28"><name pos:start="323:9" pos:end="323:16">get_bits</name><argument_list pos:start="323:17" pos:end="323:28">(<argument pos:start="323:18" pos:end="323:23"><expr pos:start="323:18" pos:end="323:23"><operator pos:start="323:18" pos:end="323:18">&amp;</operator><name pos:start="323:19" pos:end="323:23"><name pos:start="323:19" pos:end="323:19">s</name><operator pos:start="323:20" pos:end="323:21">-&gt;</operator><name pos:start="323:22" pos:end="323:23">gb</name></name></expr></argument>, <argument pos:start="323:26" pos:end="323:27"><expr pos:start="323:26" pos:end="323:27"><literal type="number" pos:start="323:26" pos:end="323:27">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="329:5" pos:end="333:7">/*

     * Primary audio data arrays

     */</comment>



    <comment type="block" pos:start="337:5" pos:end="337:44">/* VQ encoded high frequency subbands */</comment>

    <for pos:start="339:5" pos:end="345:57">for <control pos:start="339:9" pos:end="339:53">(<init pos:start="339:10" pos:end="339:26"><expr pos:start="339:10" pos:end="339:25"><name pos:start="339:10" pos:end="339:10">j</name> <operator pos:start="339:12" pos:end="339:12">=</operator> <name pos:start="339:14" pos:end="339:25">base_channel</name></expr>;</init> <condition pos:start="339:28" pos:end="339:48"><expr pos:start="339:28" pos:end="339:47"><name pos:start="339:28" pos:end="339:28">j</name> <operator pos:start="339:30" pos:end="339:30">&lt;</operator> <name pos:start="339:32" pos:end="339:47"><name pos:start="339:32" pos:end="339:32">s</name><operator pos:start="339:33" pos:end="339:34">-&gt;</operator><name pos:start="339:35" pos:end="339:47">prim_channels</name></name></expr>;</condition> <incr pos:start="339:50" pos:end="339:52"><expr pos:start="339:50" pos:end="339:52"><name pos:start="339:50" pos:end="339:50">j</name><operator pos:start="339:51" pos:end="339:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="341:9" pos:end="345:57"><block_content pos:start="341:9" pos:end="345:57">

        <for pos:start="341:9" pos:end="345:57">for <control pos:start="341:13" pos:end="341:73">(<init pos:start="341:14" pos:end="341:40"><expr pos:start="341:14" pos:end="341:39"><name pos:start="341:14" pos:end="341:14">k</name> <operator pos:start="341:16" pos:end="341:16">=</operator> <name pos:start="341:18" pos:end="341:39"><name pos:start="341:18" pos:end="341:18">s</name><operator pos:start="341:19" pos:end="341:20">-&gt;</operator><name pos:start="341:21" pos:end="341:36">vq_start_subband</name><index pos:start="341:37" pos:end="341:39">[<expr pos:start="341:38" pos:end="341:38"><name pos:start="341:38" pos:end="341:38">j</name></expr>]</index></name></expr>;</init> <condition pos:start="341:42" pos:end="341:68"><expr pos:start="341:42" pos:end="341:67"><name pos:start="341:42" pos:end="341:42">k</name> <operator pos:start="341:44" pos:end="341:44">&lt;</operator> <name pos:start="341:46" pos:end="341:67"><name pos:start="341:46" pos:end="341:46">s</name><operator pos:start="341:47" pos:end="341:48">-&gt;</operator><name pos:start="341:49" pos:end="341:64">subband_activity</name><index pos:start="341:65" pos:end="341:67">[<expr pos:start="341:66" pos:end="341:66"><name pos:start="341:66" pos:end="341:66">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="341:70" pos:end="341:72"><expr pos:start="341:70" pos:end="341:72"><name pos:start="341:70" pos:end="341:70">k</name><operator pos:start="341:71" pos:end="341:72">++</operator></expr></incr>)</control><block type="pseudo" pos:start="345:13" pos:end="345:57"><block_content pos:start="345:13" pos:end="345:57">

            <comment type="block" pos:start="343:13" pos:end="343:40">/* 1 vector -&gt; 32 samples */</comment>

            <expr_stmt pos:start="345:13" pos:end="345:57"><expr pos:start="345:13" pos:end="345:56"><name pos:start="345:13" pos:end="345:33"><name pos:start="345:13" pos:end="345:13">s</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:27">high_freq_vq</name><index pos:start="345:28" pos:end="345:30">[<expr pos:start="345:29" pos:end="345:29"><name pos:start="345:29" pos:end="345:29">j</name></expr>]</index><index pos:start="345:31" pos:end="345:33">[<expr pos:start="345:32" pos:end="345:32"><name pos:start="345:32" pos:end="345:32">k</name></expr>]</index></name> <operator pos:start="345:35" pos:end="345:35">=</operator> <call pos:start="345:37" pos:end="345:56"><name pos:start="345:37" pos:end="345:44">get_bits</name><argument_list pos:start="345:45" pos:end="345:56">(<argument pos:start="345:46" pos:end="345:51"><expr pos:start="345:46" pos:end="345:51"><operator pos:start="345:46" pos:end="345:46">&amp;</operator><name pos:start="345:47" pos:end="345:51"><name pos:start="345:47" pos:end="345:47">s</name><operator pos:start="345:48" pos:end="345:49">-&gt;</operator><name pos:start="345:50" pos:end="345:51">gb</name></name></expr></argument>, <argument pos:start="345:54" pos:end="345:55"><expr pos:start="345:54" pos:end="345:55"><literal type="number" pos:start="345:54" pos:end="345:55">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



    <comment type="block" pos:start="349:5" pos:end="349:35">/* Low frequency effect data */</comment>

    <if_stmt pos:start="351:5" pos:end="406:0"><if pos:start="351:5" pos:end="406:0">if <condition pos:start="351:8" pos:end="351:32">(<expr pos:start="351:9" pos:end="351:31"><operator pos:start="351:9" pos:end="351:9">!</operator><name pos:start="351:10" pos:end="351:21">base_channel</name> <operator pos:start="351:23" pos:end="351:24">&amp;&amp;</operator> <name pos:start="351:26" pos:end="351:31"><name pos:start="351:26" pos:end="351:26">s</name><operator pos:start="351:27" pos:end="351:28">-&gt;</operator><name pos:start="351:29" pos:end="351:31">lfe</name></name></expr>)</condition> <block pos:start="351:34" pos:end="406:0">{<block_content pos:start="353:9" pos:end="399:40">

        <decl_stmt pos:start="353:9" pos:end="353:19"><decl pos:start="353:9" pos:end="353:18"><type pos:start="353:9" pos:end="353:11"><name pos:start="353:9" pos:end="353:11">int</name></type> <name pos:start="353:13" pos:end="353:18">quant7</name></decl>;</decl_stmt>

        <comment type="block" pos:start="355:9" pos:end="355:25">/* LFE samples */</comment>

        <decl_stmt pos:start="357:9" pos:end="357:57"><decl pos:start="357:9" pos:end="357:56"><type pos:start="357:9" pos:end="357:11"><name pos:start="357:9" pos:end="357:11">int</name></type> <name pos:start="357:13" pos:end="357:23">lfe_samples</name> <init pos:start="357:25" pos:end="357:56">= <expr pos:start="357:27" pos:end="357:56"><literal type="number" pos:start="357:27" pos:end="357:27">2</literal> <operator pos:start="357:29" pos:end="357:29">*</operator> <name pos:start="357:31" pos:end="357:36"><name pos:start="357:31" pos:end="357:31">s</name><operator pos:start="357:32" pos:end="357:33">-&gt;</operator><name pos:start="357:34" pos:end="357:36">lfe</name></name> <operator pos:start="357:38" pos:end="357:38">*</operator> <operator pos:start="357:40" pos:end="357:40">(</operator><literal type="number" pos:start="357:41" pos:end="357:43">4</literal> <operator pos:start="357:43" pos:end="357:43">+</operator> <name pos:start="357:45" pos:end="357:55">block_index</name><operator pos:start="357:56" pos:end="357:56">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="359:9" pos:end="359:99"><decl pos:start="359:9" pos:end="359:98"><type pos:start="359:9" pos:end="359:11"><name pos:start="359:9" pos:end="359:11">int</name></type> <name pos:start="359:13" pos:end="359:26">lfe_end_sample</name> <init pos:start="359:28" pos:end="359:98">= <expr pos:start="359:30" pos:end="359:98"><literal type="number" pos:start="359:30" pos:end="359:30">2</literal> <operator pos:start="359:32" pos:end="359:32">*</operator> <name pos:start="359:34" pos:end="359:39"><name pos:start="359:34" pos:end="359:34">s</name><operator pos:start="359:35" pos:end="359:36">-&gt;</operator><name pos:start="359:37" pos:end="359:39">lfe</name></name> <operator pos:start="359:41" pos:end="359:41">*</operator> <operator pos:start="359:43" pos:end="359:43">(</operator><literal type="number" pos:start="359:44" pos:end="359:46">4</literal> <operator pos:start="359:46" pos:end="359:46">+</operator> <name pos:start="359:48" pos:end="359:58">block_index</name> <operator pos:start="359:60" pos:end="359:60">+</operator> <name pos:start="359:62" pos:end="359:97"><name pos:start="359:62" pos:end="359:62">s</name><operator pos:start="359:63" pos:end="359:64">-&gt;</operator><name pos:start="359:65" pos:end="359:76">subsubframes</name><index pos:start="359:77" pos:end="359:97">[<expr pos:start="359:78" pos:end="359:96"><name pos:start="359:78" pos:end="359:96"><name pos:start="359:78" pos:end="359:78">s</name><operator pos:start="359:79" pos:end="359:80">-&gt;</operator><name pos:start="359:81" pos:end="359:96">current_subframe</name></name></expr>]</index></name><operator pos:start="359:98" pos:end="359:98">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="361:9" pos:end="361:24"><decl pos:start="361:9" pos:end="361:23"><type pos:start="361:9" pos:end="361:13"><name pos:start="361:9" pos:end="361:13">float</name></type> <name pos:start="361:15" pos:end="361:23">lfe_scale</name></decl>;</decl_stmt>



        <for pos:start="365:9" pos:end="371:9">for <control pos:start="365:13" pos:end="365:54">(<init pos:start="365:14" pos:end="365:29"><expr pos:start="365:14" pos:end="365:28"><name pos:start="365:14" pos:end="365:14">j</name> <operator pos:start="365:16" pos:end="365:16">=</operator> <name pos:start="365:18" pos:end="365:28">lfe_samples</name></expr>;</init> <condition pos:start="365:31" pos:end="365:49"><expr pos:start="365:31" pos:end="365:48"><name pos:start="365:31" pos:end="365:31">j</name> <operator pos:start="365:33" pos:end="365:33">&lt;</operator> <name pos:start="365:35" pos:end="365:48">lfe_end_sample</name></expr>;</condition> <incr pos:start="365:51" pos:end="365:53"><expr pos:start="365:51" pos:end="365:53"><name pos:start="365:51" pos:end="365:51">j</name><operator pos:start="365:52" pos:end="365:53">++</operator></expr></incr>)</control> <block pos:start="365:56" pos:end="371:9">{<block_content pos:start="369:13" pos:end="369:50">

            <comment type="block" pos:start="367:13" pos:end="367:35">/* Signed 8 bits int */</comment>

            <expr_stmt pos:start="369:13" pos:end="369:50"><expr pos:start="369:13" pos:end="369:49"><name pos:start="369:13" pos:end="369:26"><name pos:start="369:13" pos:end="369:13">s</name><operator pos:start="369:14" pos:end="369:15">-&gt;</operator><name pos:start="369:16" pos:end="369:23">lfe_data</name><index pos:start="369:24" pos:end="369:26">[<expr pos:start="369:25" pos:end="369:25"><name pos:start="369:25" pos:end="369:25">j</name></expr>]</index></name> <operator pos:start="369:28" pos:end="369:28">=</operator> <call pos:start="369:30" pos:end="369:49"><name pos:start="369:30" pos:end="369:38">get_sbits</name><argument_list pos:start="369:39" pos:end="369:49">(<argument pos:start="369:40" pos:end="369:45"><expr pos:start="369:40" pos:end="369:45"><operator pos:start="369:40" pos:end="369:40">&amp;</operator><name pos:start="369:41" pos:end="369:45"><name pos:start="369:41" pos:end="369:41">s</name><operator pos:start="369:42" pos:end="369:43">-&gt;</operator><name pos:start="369:44" pos:end="369:45">gb</name></name></expr></argument>, <argument pos:start="369:48" pos:end="369:48"><expr pos:start="369:48" pos:end="369:48"><literal type="number" pos:start="369:48" pos:end="369:48">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="375:9" pos:end="375:32">/* Scale factor index */</comment>

        <expr_stmt pos:start="377:9" pos:end="377:37"><expr pos:start="377:9" pos:end="377:36"><name pos:start="377:9" pos:end="377:14">quant7</name> <operator pos:start="377:16" pos:end="377:16">=</operator> <call pos:start="377:18" pos:end="377:36"><name pos:start="377:18" pos:end="377:25">get_bits</name><argument_list pos:start="377:26" pos:end="377:36">(<argument pos:start="377:27" pos:end="377:32"><expr pos:start="377:27" pos:end="377:32"><operator pos:start="377:27" pos:end="377:27">&amp;</operator><name pos:start="377:28" pos:end="377:32"><name pos:start="377:28" pos:end="377:28">s</name><operator pos:start="377:29" pos:end="377:30">-&gt;</operator><name pos:start="377:31" pos:end="377:32">gb</name></name></expr></argument>, <argument pos:start="377:35" pos:end="377:35"><expr pos:start="377:35" pos:end="377:35"><literal type="number" pos:start="377:35" pos:end="377:35">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="379:9" pos:end="385:9"><if pos:start="379:9" pos:end="385:9">if <condition pos:start="379:12" pos:end="379:25">(<expr pos:start="379:13" pos:end="379:24"><name pos:start="379:13" pos:end="379:18">quant7</name> <operator pos:start="379:20" pos:end="379:20">&gt;</operator> <literal type="number" pos:start="379:22" pos:end="379:24">127</literal></expr>)</condition> <block pos:start="379:27" pos:end="385:9">{<block_content pos:start="381:13" pos:end="383:39">

            <expr_stmt pos:start="381:13" pos:end="381:79"><expr pos:start="381:13" pos:end="381:78"><call pos:start="381:13" pos:end="381:78"><name pos:start="381:13" pos:end="381:33">av_log_ask_for_sample</name><argument_list pos:start="381:34" pos:end="381:78">(<argument pos:start="381:35" pos:end="381:42"><expr pos:start="381:35" pos:end="381:42"><name pos:start="381:35" pos:end="381:42"><name pos:start="381:35" pos:end="381:35">s</name><operator pos:start="381:36" pos:end="381:37">-&gt;</operator><name pos:start="381:38" pos:end="381:42">avctx</name></name></expr></argument>, <argument pos:start="381:45" pos:end="381:77"><expr pos:start="381:45" pos:end="381:77"><literal type="string" pos:start="381:45" pos:end="381:77">"LFEScaleIndex larger than 127\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="383:13" pos:end="383:39">return <expr pos:start="383:20" pos:end="383:38"><name pos:start="383:20" pos:end="383:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="387:9" pos:end="387:58"><expr pos:start="387:9" pos:end="387:57"><name pos:start="387:9" pos:end="387:27"><name pos:start="387:9" pos:end="387:9">s</name><operator pos:start="387:10" pos:end="387:11">-&gt;</operator><name pos:start="387:12" pos:end="387:27">lfe_scale_factor</name></name> <operator pos:start="387:29" pos:end="387:29">=</operator> <name pos:start="387:31" pos:end="387:57"><name pos:start="387:31" pos:end="387:49">scale_factor_quant7</name><index pos:start="387:50" pos:end="387:57">[<expr pos:start="387:51" pos:end="387:56"><name pos:start="387:51" pos:end="387:56">quant7</name></expr>]</index></name></expr>;</expr_stmt>



        <comment type="block" pos:start="391:9" pos:end="391:51">/* Quantization step size * scale factor */</comment>

        <expr_stmt pos:start="393:9" pos:end="393:48"><expr pos:start="393:9" pos:end="393:47"><name pos:start="393:9" pos:end="393:17">lfe_scale</name> <operator pos:start="393:19" pos:end="393:19">=</operator> <literal type="number" pos:start="393:21" pos:end="393:25">0.035</literal> <operator pos:start="393:27" pos:end="393:27">*</operator> <name pos:start="393:29" pos:end="393:47"><name pos:start="393:29" pos:end="393:29">s</name><operator pos:start="393:30" pos:end="393:31">-&gt;</operator><name pos:start="393:32" pos:end="393:47">lfe_scale_factor</name></name></expr>;</expr_stmt>



        <for pos:start="397:9" pos:end="399:40">for <control pos:start="397:13" pos:end="397:54">(<init pos:start="397:14" pos:end="397:29"><expr pos:start="397:14" pos:end="397:28"><name pos:start="397:14" pos:end="397:14">j</name> <operator pos:start="397:16" pos:end="397:16">=</operator> <name pos:start="397:18" pos:end="397:28">lfe_samples</name></expr>;</init> <condition pos:start="397:31" pos:end="397:49"><expr pos:start="397:31" pos:end="397:48"><name pos:start="397:31" pos:end="397:31">j</name> <operator pos:start="397:33" pos:end="397:33">&lt;</operator> <name pos:start="397:35" pos:end="397:48">lfe_end_sample</name></expr>;</condition> <incr pos:start="397:51" pos:end="397:53"><expr pos:start="397:51" pos:end="397:53"><name pos:start="397:51" pos:end="397:51">j</name><operator pos:start="397:52" pos:end="397:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="399:13" pos:end="399:40"><block_content pos:start="399:13" pos:end="399:40">

            <expr_stmt pos:start="399:13" pos:end="399:40"><expr pos:start="399:13" pos:end="399:39"><name pos:start="399:13" pos:end="399:26"><name pos:start="399:13" pos:end="399:13">s</name><operator pos:start="399:14" pos:end="399:15">-&gt;</operator><name pos:start="399:16" pos:end="399:23">lfe_data</name><index pos:start="399:24" pos:end="399:26">[<expr pos:start="399:25" pos:end="399:25"><name pos:start="399:25" pos:end="399:25">j</name></expr>]</index></name> <operator pos:start="399:28" pos:end="399:29">*=</operator> <name pos:start="399:31" pos:end="399:39">lfe_scale</name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="405:1" pos:end="405:12">#<cpp:directive pos:start="405:2" pos:end="405:6">ifdef</cpp:directive> <name pos:start="405:8" pos:end="405:12">TRACE</name></cpp:ifdef>

    <expr_stmt pos:start="407:5" pos:end="409:49"><expr pos:start="407:5" pos:end="409:48"><call pos:start="407:5" pos:end="409:48"><name pos:start="407:5" pos:end="407:10">av_log</name><argument_list pos:start="407:11" pos:end="409:48">(<argument pos:start="407:12" pos:end="407:19"><expr pos:start="407:12" pos:end="407:19"><name pos:start="407:12" pos:end="407:19"><name pos:start="407:12" pos:end="407:12">s</name><operator pos:start="407:13" pos:end="407:14">-&gt;</operator><name pos:start="407:15" pos:end="407:19">avctx</name></name></expr></argument>, <argument pos:start="407:22" pos:end="407:33"><expr pos:start="407:22" pos:end="407:33"><name pos:start="407:22" pos:end="407:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="407:36" pos:end="407:55"><expr pos:start="407:36" pos:end="407:55"><literal type="string" pos:start="407:36" pos:end="407:55">"subsubframes: %i\n"</literal></expr></argument>,

           <argument pos:start="409:12" pos:end="409:47"><expr pos:start="409:12" pos:end="409:47"><name pos:start="409:12" pos:end="409:47"><name pos:start="409:12" pos:end="409:12">s</name><operator pos:start="409:13" pos:end="409:14">-&gt;</operator><name pos:start="409:15" pos:end="409:26">subsubframes</name><index pos:start="409:27" pos:end="409:47">[<expr pos:start="409:28" pos:end="409:46"><name pos:start="409:28" pos:end="409:46"><name pos:start="409:28" pos:end="409:28">s</name><operator pos:start="409:29" pos:end="409:30">-&gt;</operator><name pos:start="409:31" pos:end="409:46">current_subframe</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="411:5" pos:end="413:52"><expr pos:start="411:5" pos:end="413:51"><call pos:start="411:5" pos:end="413:51"><name pos:start="411:5" pos:end="411:10">av_log</name><argument_list pos:start="411:11" pos:end="413:51">(<argument pos:start="411:12" pos:end="411:19"><expr pos:start="411:12" pos:end="411:19"><name pos:start="411:12" pos:end="411:19"><name pos:start="411:12" pos:end="411:12">s</name><operator pos:start="411:13" pos:end="411:14">-&gt;</operator><name pos:start="411:15" pos:end="411:19">avctx</name></name></expr></argument>, <argument pos:start="411:22" pos:end="411:33"><expr pos:start="411:22" pos:end="411:33"><name pos:start="411:22" pos:end="411:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="411:36" pos:end="411:58"><expr pos:start="411:36" pos:end="411:58"><literal type="string" pos:start="411:36" pos:end="411:58">"partial samples: %i\n"</literal></expr></argument>,

           <argument pos:start="413:12" pos:end="413:50"><expr pos:start="413:12" pos:end="413:50"><name pos:start="413:12" pos:end="413:50"><name pos:start="413:12" pos:end="413:12">s</name><operator pos:start="413:13" pos:end="413:14">-&gt;</operator><name pos:start="413:15" pos:end="413:29">partial_samples</name><index pos:start="413:30" pos:end="413:50">[<expr pos:start="413:31" pos:end="413:49"><name pos:start="413:31" pos:end="413:49"><name pos:start="413:31" pos:end="413:31">s</name><operator pos:start="413:32" pos:end="413:33">-&gt;</operator><name pos:start="413:34" pos:end="413:49">current_subframe</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="417:5" pos:end="427:5">for <control pos:start="417:9" pos:end="417:53">(<init pos:start="417:10" pos:end="417:26"><expr pos:start="417:10" pos:end="417:25"><name pos:start="417:10" pos:end="417:10">j</name> <operator pos:start="417:12" pos:end="417:12">=</operator> <name pos:start="417:14" pos:end="417:25">base_channel</name></expr>;</init> <condition pos:start="417:28" pos:end="417:48"><expr pos:start="417:28" pos:end="417:47"><name pos:start="417:28" pos:end="417:28">j</name> <operator pos:start="417:30" pos:end="417:30">&lt;</operator> <name pos:start="417:32" pos:end="417:47"><name pos:start="417:32" pos:end="417:32">s</name><operator pos:start="417:33" pos:end="417:34">-&gt;</operator><name pos:start="417:35" pos:end="417:47">prim_channels</name></name></expr>;</condition> <incr pos:start="417:50" pos:end="417:52"><expr pos:start="417:50" pos:end="417:52"><name pos:start="417:50" pos:end="417:50">j</name><operator pos:start="417:51" pos:end="417:52">++</operator></expr></incr>)</control> <block pos:start="417:55" pos:end="427:5">{<block_content pos:start="419:9" pos:end="425:45">

        <expr_stmt pos:start="419:9" pos:end="419:59"><expr pos:start="419:9" pos:end="419:58"><call pos:start="419:9" pos:end="419:58"><name pos:start="419:9" pos:end="419:14">av_log</name><argument_list pos:start="419:15" pos:end="419:58">(<argument pos:start="419:16" pos:end="419:23"><expr pos:start="419:16" pos:end="419:23"><name pos:start="419:16" pos:end="419:23"><name pos:start="419:16" pos:end="419:16">s</name><operator pos:start="419:17" pos:end="419:18">-&gt;</operator><name pos:start="419:19" pos:end="419:23">avctx</name></name></expr></argument>, <argument pos:start="419:26" pos:end="419:37"><expr pos:start="419:26" pos:end="419:37"><name pos:start="419:26" pos:end="419:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="419:40" pos:end="419:57"><expr pos:start="419:40" pos:end="419:57"><literal type="string" pos:start="419:40" pos:end="419:57">"prediction mode:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="421:9" pos:end="423:76">for <control pos:start="421:13" pos:end="421:52">(<init pos:start="421:14" pos:end="421:19"><expr pos:start="421:14" pos:end="421:18"><name pos:start="421:14" pos:end="421:14">k</name> <operator pos:start="421:16" pos:end="421:16">=</operator> <literal type="number" pos:start="421:18" pos:end="421:18">0</literal></expr>;</init> <condition pos:start="421:21" pos:end="421:47"><expr pos:start="421:21" pos:end="421:46"><name pos:start="421:21" pos:end="421:21">k</name> <operator pos:start="421:23" pos:end="421:23">&lt;</operator> <name pos:start="421:25" pos:end="421:46"><name pos:start="421:25" pos:end="421:25">s</name><operator pos:start="421:26" pos:end="421:27">-&gt;</operator><name pos:start="421:28" pos:end="421:43">subband_activity</name><index pos:start="421:44" pos:end="421:46">[<expr pos:start="421:45" pos:end="421:45"><name pos:start="421:45" pos:end="421:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="421:49" pos:end="421:51"><expr pos:start="421:49" pos:end="421:51"><name pos:start="421:49" pos:end="421:49">k</name><operator pos:start="421:50" pos:end="421:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="423:13" pos:end="423:76"><block_content pos:start="423:13" pos:end="423:76">

            <expr_stmt pos:start="423:13" pos:end="423:76"><expr pos:start="423:13" pos:end="423:75"><call pos:start="423:13" pos:end="423:75"><name pos:start="423:13" pos:end="423:18">av_log</name><argument_list pos:start="423:19" pos:end="423:75">(<argument pos:start="423:20" pos:end="423:27"><expr pos:start="423:20" pos:end="423:27"><name pos:start="423:20" pos:end="423:27"><name pos:start="423:20" pos:end="423:20">s</name><operator pos:start="423:21" pos:end="423:22">-&gt;</operator><name pos:start="423:23" pos:end="423:27">avctx</name></name></expr></argument>, <argument pos:start="423:30" pos:end="423:41"><expr pos:start="423:30" pos:end="423:41"><name pos:start="423:30" pos:end="423:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="423:44" pos:end="423:48"><expr pos:start="423:44" pos:end="423:48"><literal type="string" pos:start="423:44" pos:end="423:48">" %i"</literal></expr></argument>, <argument pos:start="423:51" pos:end="423:74"><expr pos:start="423:51" pos:end="423:74"><name pos:start="423:51" pos:end="423:74"><name pos:start="423:51" pos:end="423:51">s</name><operator pos:start="423:52" pos:end="423:53">-&gt;</operator><name pos:start="423:54" pos:end="423:68">prediction_mode</name><index pos:start="423:69" pos:end="423:71">[<expr pos:start="423:70" pos:end="423:70"><name pos:start="423:70" pos:end="423:70">j</name></expr>]</index><index pos:start="423:72" pos:end="423:74">[<expr pos:start="423:73" pos:end="423:73"><name pos:start="423:73" pos:end="423:73">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="425:9" pos:end="425:45"><expr pos:start="425:9" pos:end="425:44"><call pos:start="425:9" pos:end="425:44"><name pos:start="425:9" pos:end="425:14">av_log</name><argument_list pos:start="425:15" pos:end="425:44">(<argument pos:start="425:16" pos:end="425:23"><expr pos:start="425:16" pos:end="425:23"><name pos:start="425:16" pos:end="425:23"><name pos:start="425:16" pos:end="425:16">s</name><operator pos:start="425:17" pos:end="425:18">-&gt;</operator><name pos:start="425:19" pos:end="425:23">avctx</name></name></expr></argument>, <argument pos:start="425:26" pos:end="425:37"><expr pos:start="425:26" pos:end="425:37"><name pos:start="425:26" pos:end="425:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="425:40" pos:end="425:43"><expr pos:start="425:40" pos:end="425:43"><literal type="string" pos:start="425:40" pos:end="425:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="429:5" pos:end="445:5">for <control pos:start="429:9" pos:end="429:53">(<init pos:start="429:10" pos:end="429:26"><expr pos:start="429:10" pos:end="429:25"><name pos:start="429:10" pos:end="429:10">j</name> <operator pos:start="429:12" pos:end="429:12">=</operator> <name pos:start="429:14" pos:end="429:25">base_channel</name></expr>;</init> <condition pos:start="429:28" pos:end="429:48"><expr pos:start="429:28" pos:end="429:47"><name pos:start="429:28" pos:end="429:28">j</name> <operator pos:start="429:30" pos:end="429:30">&lt;</operator> <name pos:start="429:32" pos:end="429:47"><name pos:start="429:32" pos:end="429:32">s</name><operator pos:start="429:33" pos:end="429:34">-&gt;</operator><name pos:start="429:35" pos:end="429:47">prim_channels</name></name></expr>;</condition> <incr pos:start="429:50" pos:end="429:52"><expr pos:start="429:50" pos:end="429:52"><name pos:start="429:50" pos:end="429:50">j</name><operator pos:start="429:51" pos:end="429:52">++</operator></expr></incr>)</control> <block pos:start="429:55" pos:end="445:5">{<block_content pos:start="431:9" pos:end="443:71">

        <for pos:start="431:9" pos:end="443:71">for <control pos:start="431:13" pos:end="431:52">(<init pos:start="431:14" pos:end="431:19"><expr pos:start="431:14" pos:end="431:18"><name pos:start="431:14" pos:end="431:14">k</name> <operator pos:start="431:16" pos:end="431:16">=</operator> <literal type="number" pos:start="431:18" pos:end="431:18">0</literal></expr>;</init> <condition pos:start="431:21" pos:end="431:47"><expr pos:start="431:21" pos:end="431:46"><name pos:start="431:21" pos:end="431:21">k</name> <operator pos:start="431:23" pos:end="431:23">&lt;</operator> <name pos:start="431:25" pos:end="431:46"><name pos:start="431:25" pos:end="431:25">s</name><operator pos:start="431:26" pos:end="431:27">-&gt;</operator><name pos:start="431:28" pos:end="431:43">subband_activity</name><index pos:start="431:44" pos:end="431:46">[<expr pos:start="431:45" pos:end="431:45"><name pos:start="431:45" pos:end="431:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="431:49" pos:end="431:51"><expr pos:start="431:49" pos:end="431:51"><name pos:start="431:49" pos:end="431:49">k</name><operator pos:start="431:50" pos:end="431:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="433:13" pos:end="443:71"><block_content pos:start="433:13" pos:end="443:71">

            <expr_stmt pos:start="433:13" pos:end="443:71"><expr pos:start="433:13" pos:end="443:70"><call pos:start="433:13" pos:end="443:70"><name pos:start="433:13" pos:end="433:18">av_log</name><argument_list pos:start="433:19" pos:end="443:70">(<argument pos:start="433:20" pos:end="433:27"><expr pos:start="433:20" pos:end="433:27"><name pos:start="433:20" pos:end="433:27"><name pos:start="433:20" pos:end="433:20">s</name><operator pos:start="433:21" pos:end="433:22">-&gt;</operator><name pos:start="433:23" pos:end="433:27">avctx</name></name></expr></argument>, <argument pos:start="433:30" pos:end="433:41"><expr pos:start="433:30" pos:end="433:41"><name pos:start="433:30" pos:end="433:41">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="435:20" pos:end="435:55"><expr pos:start="435:20" pos:end="435:55"><literal type="string" pos:start="435:20" pos:end="435:55">"prediction coefs: %f, %f, %f, %f\n"</literal></expr></argument>,

                   <argument pos:start="437:20" pos:end="437:69"><expr pos:start="437:20" pos:end="437:69"><operator pos:start="437:20" pos:end="437:20">(</operator><name pos:start="437:21" pos:end="437:25">float</name><operator pos:start="437:26" pos:end="437:26">)</operator> <name pos:start="437:28" pos:end="437:62"><name pos:start="437:28" pos:end="437:35">adpcm_vb</name><index pos:start="437:36" pos:end="437:59">[<expr pos:start="437:37" pos:end="437:58"><name pos:start="437:37" pos:end="437:58"><name pos:start="437:37" pos:end="437:37">s</name><operator pos:start="437:38" pos:end="437:39">-&gt;</operator><name pos:start="437:40" pos:end="437:52">prediction_vq</name><index pos:start="437:53" pos:end="437:55">[<expr pos:start="437:54" pos:end="437:54"><name pos:start="437:54" pos:end="437:54">j</name></expr>]</index><index pos:start="437:56" pos:end="437:58">[<expr pos:start="437:57" pos:end="437:57"><name pos:start="437:57" pos:end="437:57">k</name></expr>]</index></name></expr>]</index><index pos:start="437:60" pos:end="437:62">[<expr pos:start="437:61" pos:end="437:61"><literal type="number" pos:start="437:61" pos:end="437:61">0</literal></expr>]</index></name> <operator pos:start="437:64" pos:end="437:64">/</operator> <literal type="number" pos:start="437:66" pos:end="437:69">8192</literal></expr></argument>,

                   <argument pos:start="439:20" pos:end="439:69"><expr pos:start="439:20" pos:end="439:69"><operator pos:start="439:20" pos:end="439:20">(</operator><name pos:start="439:21" pos:end="439:25">float</name><operator pos:start="439:26" pos:end="439:26">)</operator> <name pos:start="439:28" pos:end="439:62"><name pos:start="439:28" pos:end="439:35">adpcm_vb</name><index pos:start="439:36" pos:end="439:59">[<expr pos:start="439:37" pos:end="439:58"><name pos:start="439:37" pos:end="439:58"><name pos:start="439:37" pos:end="439:37">s</name><operator pos:start="439:38" pos:end="439:39">-&gt;</operator><name pos:start="439:40" pos:end="439:52">prediction_vq</name><index pos:start="439:53" pos:end="439:55">[<expr pos:start="439:54" pos:end="439:54"><name pos:start="439:54" pos:end="439:54">j</name></expr>]</index><index pos:start="439:56" pos:end="439:58">[<expr pos:start="439:57" pos:end="439:57"><name pos:start="439:57" pos:end="439:57">k</name></expr>]</index></name></expr>]</index><index pos:start="439:60" pos:end="439:62">[<expr pos:start="439:61" pos:end="439:61"><literal type="number" pos:start="439:61" pos:end="439:61">1</literal></expr>]</index></name> <operator pos:start="439:64" pos:end="439:64">/</operator> <literal type="number" pos:start="439:66" pos:end="439:69">8192</literal></expr></argument>,

                   <argument pos:start="441:20" pos:end="441:69"><expr pos:start="441:20" pos:end="441:69"><operator pos:start="441:20" pos:end="441:20">(</operator><name pos:start="441:21" pos:end="441:25">float</name><operator pos:start="441:26" pos:end="441:26">)</operator> <name pos:start="441:28" pos:end="441:62"><name pos:start="441:28" pos:end="441:35">adpcm_vb</name><index pos:start="441:36" pos:end="441:59">[<expr pos:start="441:37" pos:end="441:58"><name pos:start="441:37" pos:end="441:58"><name pos:start="441:37" pos:end="441:37">s</name><operator pos:start="441:38" pos:end="441:39">-&gt;</operator><name pos:start="441:40" pos:end="441:52">prediction_vq</name><index pos:start="441:53" pos:end="441:55">[<expr pos:start="441:54" pos:end="441:54"><name pos:start="441:54" pos:end="441:54">j</name></expr>]</index><index pos:start="441:56" pos:end="441:58">[<expr pos:start="441:57" pos:end="441:57"><name pos:start="441:57" pos:end="441:57">k</name></expr>]</index></name></expr>]</index><index pos:start="441:60" pos:end="441:62">[<expr pos:start="441:61" pos:end="441:61"><literal type="number" pos:start="441:61" pos:end="441:61">2</literal></expr>]</index></name> <operator pos:start="441:64" pos:end="441:64">/</operator> <literal type="number" pos:start="441:66" pos:end="441:69">8192</literal></expr></argument>,

                   <argument pos:start="443:20" pos:end="443:69"><expr pos:start="443:20" pos:end="443:69"><operator pos:start="443:20" pos:end="443:20">(</operator><name pos:start="443:21" pos:end="443:25">float</name><operator pos:start="443:26" pos:end="443:26">)</operator> <name pos:start="443:28" pos:end="443:62"><name pos:start="443:28" pos:end="443:35">adpcm_vb</name><index pos:start="443:36" pos:end="443:59">[<expr pos:start="443:37" pos:end="443:58"><name pos:start="443:37" pos:end="443:58"><name pos:start="443:37" pos:end="443:37">s</name><operator pos:start="443:38" pos:end="443:39">-&gt;</operator><name pos:start="443:40" pos:end="443:52">prediction_vq</name><index pos:start="443:53" pos:end="443:55">[<expr pos:start="443:54" pos:end="443:54"><name pos:start="443:54" pos:end="443:54">j</name></expr>]</index><index pos:start="443:56" pos:end="443:58">[<expr pos:start="443:57" pos:end="443:57"><name pos:start="443:57" pos:end="443:57">k</name></expr>]</index></name></expr>]</index><index pos:start="443:60" pos:end="443:62">[<expr pos:start="443:61" pos:end="443:61"><literal type="number" pos:start="443:61" pos:end="443:61">3</literal></expr>]</index></name> <operator pos:start="443:64" pos:end="443:64">/</operator> <literal type="number" pos:start="443:66" pos:end="443:69">8192</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>

    <for pos:start="447:5" pos:end="457:5">for <control pos:start="447:9" pos:end="447:53">(<init pos:start="447:10" pos:end="447:26"><expr pos:start="447:10" pos:end="447:25"><name pos:start="447:10" pos:end="447:10">j</name> <operator pos:start="447:12" pos:end="447:12">=</operator> <name pos:start="447:14" pos:end="447:25">base_channel</name></expr>;</init> <condition pos:start="447:28" pos:end="447:48"><expr pos:start="447:28" pos:end="447:47"><name pos:start="447:28" pos:end="447:28">j</name> <operator pos:start="447:30" pos:end="447:30">&lt;</operator> <name pos:start="447:32" pos:end="447:47"><name pos:start="447:32" pos:end="447:32">s</name><operator pos:start="447:33" pos:end="447:34">-&gt;</operator><name pos:start="447:35" pos:end="447:47">prim_channels</name></name></expr>;</condition> <incr pos:start="447:50" pos:end="447:52"><expr pos:start="447:50" pos:end="447:52"><name pos:start="447:50" pos:end="447:50">j</name><operator pos:start="447:51" pos:end="447:52">++</operator></expr></incr>)</control> <block pos:start="447:55" pos:end="457:5">{<block_content pos:start="449:9" pos:end="455:45">

        <expr_stmt pos:start="449:9" pos:end="449:59"><expr pos:start="449:9" pos:end="449:58"><call pos:start="449:9" pos:end="449:58"><name pos:start="449:9" pos:end="449:14">av_log</name><argument_list pos:start="449:15" pos:end="449:58">(<argument pos:start="449:16" pos:end="449:23"><expr pos:start="449:16" pos:end="449:23"><name pos:start="449:16" pos:end="449:23"><name pos:start="449:16" pos:end="449:16">s</name><operator pos:start="449:17" pos:end="449:18">-&gt;</operator><name pos:start="449:19" pos:end="449:23">avctx</name></name></expr></argument>, <argument pos:start="449:26" pos:end="449:37"><expr pos:start="449:26" pos:end="449:37"><name pos:start="449:26" pos:end="449:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="449:40" pos:end="449:57"><expr pos:start="449:40" pos:end="449:57"><literal type="string" pos:start="449:40" pos:end="449:57">"bitalloc index: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="451:9" pos:end="453:72">for <control pos:start="451:13" pos:end="451:52">(<init pos:start="451:14" pos:end="451:19"><expr pos:start="451:14" pos:end="451:18"><name pos:start="451:14" pos:end="451:14">k</name> <operator pos:start="451:16" pos:end="451:16">=</operator> <literal type="number" pos:start="451:18" pos:end="451:18">0</literal></expr>;</init> <condition pos:start="451:21" pos:end="451:47"><expr pos:start="451:21" pos:end="451:46"><name pos:start="451:21" pos:end="451:21">k</name> <operator pos:start="451:23" pos:end="451:23">&lt;</operator> <name pos:start="451:25" pos:end="451:46"><name pos:start="451:25" pos:end="451:25">s</name><operator pos:start="451:26" pos:end="451:27">-&gt;</operator><name pos:start="451:28" pos:end="451:43">vq_start_subband</name><index pos:start="451:44" pos:end="451:46">[<expr pos:start="451:45" pos:end="451:45"><name pos:start="451:45" pos:end="451:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="451:49" pos:end="451:51"><expr pos:start="451:49" pos:end="451:51"><name pos:start="451:49" pos:end="451:49">k</name><operator pos:start="451:50" pos:end="451:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="453:13" pos:end="453:72"><block_content pos:start="453:13" pos:end="453:72">

            <expr_stmt pos:start="453:13" pos:end="453:72"><expr pos:start="453:13" pos:end="453:71"><call pos:start="453:13" pos:end="453:71"><name pos:start="453:13" pos:end="453:18">av_log</name><argument_list pos:start="453:19" pos:end="453:71">(<argument pos:start="453:20" pos:end="453:27"><expr pos:start="453:20" pos:end="453:27"><name pos:start="453:20" pos:end="453:27"><name pos:start="453:20" pos:end="453:20">s</name><operator pos:start="453:21" pos:end="453:22">-&gt;</operator><name pos:start="453:23" pos:end="453:27">avctx</name></name></expr></argument>, <argument pos:start="453:30" pos:end="453:41"><expr pos:start="453:30" pos:end="453:41"><name pos:start="453:30" pos:end="453:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="453:44" pos:end="453:51"><expr pos:start="453:44" pos:end="453:51"><literal type="string" pos:start="453:44" pos:end="453:51">"%2.2i "</literal></expr></argument>, <argument pos:start="453:54" pos:end="453:70"><expr pos:start="453:54" pos:end="453:70"><name pos:start="453:54" pos:end="453:70"><name pos:start="453:54" pos:end="453:54">s</name><operator pos:start="453:55" pos:end="453:56">-&gt;</operator><name pos:start="453:57" pos:end="453:64">bitalloc</name><index pos:start="453:65" pos:end="453:67">[<expr pos:start="453:66" pos:end="453:66"><name pos:start="453:66" pos:end="453:66">j</name></expr>]</index><index pos:start="453:68" pos:end="453:70">[<expr pos:start="453:69" pos:end="453:69"><name pos:start="453:69" pos:end="453:69">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="455:9" pos:end="455:45"><expr pos:start="455:9" pos:end="455:44"><call pos:start="455:9" pos:end="455:44"><name pos:start="455:9" pos:end="455:14">av_log</name><argument_list pos:start="455:15" pos:end="455:44">(<argument pos:start="455:16" pos:end="455:23"><expr pos:start="455:16" pos:end="455:23"><name pos:start="455:16" pos:end="455:23"><name pos:start="455:16" pos:end="455:16">s</name><operator pos:start="455:17" pos:end="455:18">-&gt;</operator><name pos:start="455:19" pos:end="455:23">avctx</name></name></expr></argument>, <argument pos:start="455:26" pos:end="455:37"><expr pos:start="455:26" pos:end="455:37"><name pos:start="455:26" pos:end="455:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="455:40" pos:end="455:43"><expr pos:start="455:40" pos:end="455:43"><literal type="string" pos:start="455:40" pos:end="455:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="459:5" pos:end="469:5">for <control pos:start="459:9" pos:end="459:53">(<init pos:start="459:10" pos:end="459:26"><expr pos:start="459:10" pos:end="459:25"><name pos:start="459:10" pos:end="459:10">j</name> <operator pos:start="459:12" pos:end="459:12">=</operator> <name pos:start="459:14" pos:end="459:25">base_channel</name></expr>;</init> <condition pos:start="459:28" pos:end="459:48"><expr pos:start="459:28" pos:end="459:47"><name pos:start="459:28" pos:end="459:28">j</name> <operator pos:start="459:30" pos:end="459:30">&lt;</operator> <name pos:start="459:32" pos:end="459:47"><name pos:start="459:32" pos:end="459:32">s</name><operator pos:start="459:33" pos:end="459:34">-&gt;</operator><name pos:start="459:35" pos:end="459:47">prim_channels</name></name></expr>;</condition> <incr pos:start="459:50" pos:end="459:52"><expr pos:start="459:50" pos:end="459:52"><name pos:start="459:50" pos:end="459:50">j</name><operator pos:start="459:51" pos:end="459:52">++</operator></expr></incr>)</control> <block pos:start="459:55" pos:end="469:5">{<block_content pos:start="461:9" pos:end="467:45">

        <expr_stmt pos:start="461:9" pos:end="461:59"><expr pos:start="461:9" pos:end="461:58"><call pos:start="461:9" pos:end="461:58"><name pos:start="461:9" pos:end="461:14">av_log</name><argument_list pos:start="461:15" pos:end="461:58">(<argument pos:start="461:16" pos:end="461:23"><expr pos:start="461:16" pos:end="461:23"><name pos:start="461:16" pos:end="461:23"><name pos:start="461:16" pos:end="461:16">s</name><operator pos:start="461:17" pos:end="461:18">-&gt;</operator><name pos:start="461:19" pos:end="461:23">avctx</name></name></expr></argument>, <argument pos:start="461:26" pos:end="461:37"><expr pos:start="461:26" pos:end="461:37"><name pos:start="461:26" pos:end="461:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="461:40" pos:end="461:57"><expr pos:start="461:40" pos:end="461:57"><literal type="string" pos:start="461:40" pos:end="461:57">"Transition mode:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="463:9" pos:end="465:76">for <control pos:start="463:13" pos:end="463:52">(<init pos:start="463:14" pos:end="463:19"><expr pos:start="463:14" pos:end="463:18"><name pos:start="463:14" pos:end="463:14">k</name> <operator pos:start="463:16" pos:end="463:16">=</operator> <literal type="number" pos:start="463:18" pos:end="463:18">0</literal></expr>;</init> <condition pos:start="463:21" pos:end="463:47"><expr pos:start="463:21" pos:end="463:46"><name pos:start="463:21" pos:end="463:21">k</name> <operator pos:start="463:23" pos:end="463:23">&lt;</operator> <name pos:start="463:25" pos:end="463:46"><name pos:start="463:25" pos:end="463:25">s</name><operator pos:start="463:26" pos:end="463:27">-&gt;</operator><name pos:start="463:28" pos:end="463:43">subband_activity</name><index pos:start="463:44" pos:end="463:46">[<expr pos:start="463:45" pos:end="463:45"><name pos:start="463:45" pos:end="463:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="463:49" pos:end="463:51"><expr pos:start="463:49" pos:end="463:51"><name pos:start="463:49" pos:end="463:49">k</name><operator pos:start="463:50" pos:end="463:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="465:13" pos:end="465:76"><block_content pos:start="465:13" pos:end="465:76">

            <expr_stmt pos:start="465:13" pos:end="465:76"><expr pos:start="465:13" pos:end="465:75"><call pos:start="465:13" pos:end="465:75"><name pos:start="465:13" pos:end="465:18">av_log</name><argument_list pos:start="465:19" pos:end="465:75">(<argument pos:start="465:20" pos:end="465:27"><expr pos:start="465:20" pos:end="465:27"><name pos:start="465:20" pos:end="465:27"><name pos:start="465:20" pos:end="465:20">s</name><operator pos:start="465:21" pos:end="465:22">-&gt;</operator><name pos:start="465:23" pos:end="465:27">avctx</name></name></expr></argument>, <argument pos:start="465:30" pos:end="465:41"><expr pos:start="465:30" pos:end="465:41"><name pos:start="465:30" pos:end="465:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="465:44" pos:end="465:48"><expr pos:start="465:44" pos:end="465:48"><literal type="string" pos:start="465:44" pos:end="465:48">" %i"</literal></expr></argument>, <argument pos:start="465:51" pos:end="465:74"><expr pos:start="465:51" pos:end="465:74"><name pos:start="465:51" pos:end="465:74"><name pos:start="465:51" pos:end="465:51">s</name><operator pos:start="465:52" pos:end="465:53">-&gt;</operator><name pos:start="465:54" pos:end="465:68">transition_mode</name><index pos:start="465:69" pos:end="465:71">[<expr pos:start="465:70" pos:end="465:70"><name pos:start="465:70" pos:end="465:70">j</name></expr>]</index><index pos:start="465:72" pos:end="465:74">[<expr pos:start="465:73" pos:end="465:73"><name pos:start="465:73" pos:end="465:73">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="467:9" pos:end="467:45"><expr pos:start="467:9" pos:end="467:44"><call pos:start="467:9" pos:end="467:44"><name pos:start="467:9" pos:end="467:14">av_log</name><argument_list pos:start="467:15" pos:end="467:44">(<argument pos:start="467:16" pos:end="467:23"><expr pos:start="467:16" pos:end="467:23"><name pos:start="467:16" pos:end="467:23"><name pos:start="467:16" pos:end="467:16">s</name><operator pos:start="467:17" pos:end="467:18">-&gt;</operator><name pos:start="467:19" pos:end="467:23">avctx</name></name></expr></argument>, <argument pos:start="467:26" pos:end="467:37"><expr pos:start="467:26" pos:end="467:37"><name pos:start="467:26" pos:end="467:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="467:40" pos:end="467:43"><expr pos:start="467:40" pos:end="467:43"><literal type="string" pos:start="467:40" pos:end="467:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="471:5" pos:end="489:5">for <control pos:start="471:9" pos:end="471:53">(<init pos:start="471:10" pos:end="471:26"><expr pos:start="471:10" pos:end="471:25"><name pos:start="471:10" pos:end="471:10">j</name> <operator pos:start="471:12" pos:end="471:12">=</operator> <name pos:start="471:14" pos:end="471:25">base_channel</name></expr>;</init> <condition pos:start="471:28" pos:end="471:48"><expr pos:start="471:28" pos:end="471:47"><name pos:start="471:28" pos:end="471:28">j</name> <operator pos:start="471:30" pos:end="471:30">&lt;</operator> <name pos:start="471:32" pos:end="471:47"><name pos:start="471:32" pos:end="471:32">s</name><operator pos:start="471:33" pos:end="471:34">-&gt;</operator><name pos:start="471:35" pos:end="471:47">prim_channels</name></name></expr>;</condition> <incr pos:start="471:50" pos:end="471:52"><expr pos:start="471:50" pos:end="471:52"><name pos:start="471:50" pos:end="471:50">j</name><operator pos:start="471:51" pos:end="471:52">++</operator></expr></incr>)</control> <block pos:start="471:55" pos:end="489:5">{<block_content pos:start="473:9" pos:end="487:45">

        <expr_stmt pos:start="473:9" pos:end="473:56"><expr pos:start="473:9" pos:end="473:55"><call pos:start="473:9" pos:end="473:55"><name pos:start="473:9" pos:end="473:14">av_log</name><argument_list pos:start="473:15" pos:end="473:55">(<argument pos:start="473:16" pos:end="473:23"><expr pos:start="473:16" pos:end="473:23"><name pos:start="473:16" pos:end="473:23"><name pos:start="473:16" pos:end="473:16">s</name><operator pos:start="473:17" pos:end="473:18">-&gt;</operator><name pos:start="473:19" pos:end="473:23">avctx</name></name></expr></argument>, <argument pos:start="473:26" pos:end="473:37"><expr pos:start="473:26" pos:end="473:37"><name pos:start="473:26" pos:end="473:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="473:40" pos:end="473:54"><expr pos:start="473:40" pos:end="473:54"><literal type="string" pos:start="473:40" pos:end="473:54">"Scale factor:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="475:9" pos:end="485:9">for <control pos:start="475:13" pos:end="475:52">(<init pos:start="475:14" pos:end="475:19"><expr pos:start="475:14" pos:end="475:18"><name pos:start="475:14" pos:end="475:14">k</name> <operator pos:start="475:16" pos:end="475:16">=</operator> <literal type="number" pos:start="475:18" pos:end="475:18">0</literal></expr>;</init> <condition pos:start="475:21" pos:end="475:47"><expr pos:start="475:21" pos:end="475:46"><name pos:start="475:21" pos:end="475:21">k</name> <operator pos:start="475:23" pos:end="475:23">&lt;</operator> <name pos:start="475:25" pos:end="475:46"><name pos:start="475:25" pos:end="475:25">s</name><operator pos:start="475:26" pos:end="475:27">-&gt;</operator><name pos:start="475:28" pos:end="475:43">subband_activity</name><index pos:start="475:44" pos:end="475:46">[<expr pos:start="475:45" pos:end="475:45"><name pos:start="475:45" pos:end="475:45">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="475:49" pos:end="475:51"><expr pos:start="475:49" pos:end="475:51"><name pos:start="475:49" pos:end="475:49">k</name><operator pos:start="475:50" pos:end="475:51">++</operator></expr></incr>)</control> <block pos:start="475:54" pos:end="485:9">{<block_content pos:start="477:13" pos:end="483:83">

            <if_stmt pos:start="477:13" pos:end="479:80"><if pos:start="477:13" pos:end="479:80">if <condition pos:start="477:16" pos:end="477:69">(<expr pos:start="477:17" pos:end="477:68"><name pos:start="477:17" pos:end="477:17">k</name> <operator pos:start="477:19" pos:end="477:20">&gt;=</operator> <name pos:start="477:22" pos:end="477:43"><name pos:start="477:22" pos:end="477:22">s</name><operator pos:start="477:23" pos:end="477:24">-&gt;</operator><name pos:start="477:25" pos:end="477:40">vq_start_subband</name><index pos:start="477:41" pos:end="477:43">[<expr pos:start="477:42" pos:end="477:42"><name pos:start="477:42" pos:end="477:42">j</name></expr>]</index></name> <operator pos:start="477:45" pos:end="477:46">||</operator> <name pos:start="477:48" pos:end="477:64"><name pos:start="477:48" pos:end="477:48">s</name><operator pos:start="477:49" pos:end="477:50">-&gt;</operator><name pos:start="477:51" pos:end="477:58">bitalloc</name><index pos:start="477:59" pos:end="477:61">[<expr pos:start="477:60" pos:end="477:60"><name pos:start="477:60" pos:end="477:60">j</name></expr>]</index><index pos:start="477:62" pos:end="477:64">[<expr pos:start="477:63" pos:end="477:63"><name pos:start="477:63" pos:end="477:63">k</name></expr>]</index></name> <operator pos:start="477:66" pos:end="477:66">&gt;</operator> <literal type="number" pos:start="477:68" pos:end="477:68">0</literal></expr>)</condition><block type="pseudo" pos:start="479:17" pos:end="479:80"><block_content pos:start="479:17" pos:end="479:80">

                <expr_stmt pos:start="479:17" pos:end="479:80"><expr pos:start="479:17" pos:end="479:79"><call pos:start="479:17" pos:end="479:79"><name pos:start="479:17" pos:end="479:22">av_log</name><argument_list pos:start="479:23" pos:end="479:79">(<argument pos:start="479:24" pos:end="479:31"><expr pos:start="479:24" pos:end="479:31"><name pos:start="479:24" pos:end="479:31"><name pos:start="479:24" pos:end="479:24">s</name><operator pos:start="479:25" pos:end="479:26">-&gt;</operator><name pos:start="479:27" pos:end="479:31">avctx</name></name></expr></argument>, <argument pos:start="479:34" pos:end="479:45"><expr pos:start="479:34" pos:end="479:45"><name pos:start="479:34" pos:end="479:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="479:48" pos:end="479:52"><expr pos:start="479:48" pos:end="479:52"><literal type="string" pos:start="479:48" pos:end="479:52">" %i"</literal></expr></argument>, <argument pos:start="479:55" pos:end="479:78"><expr pos:start="479:55" pos:end="479:78"><name pos:start="479:55" pos:end="479:78"><name pos:start="479:55" pos:end="479:55">s</name><operator pos:start="479:56" pos:end="479:57">-&gt;</operator><name pos:start="479:58" pos:end="479:69">scale_factor</name><index pos:start="479:70" pos:end="479:72">[<expr pos:start="479:71" pos:end="479:71"><name pos:start="479:71" pos:end="479:71">j</name></expr>]</index><index pos:start="479:73" pos:end="479:75">[<expr pos:start="479:74" pos:end="479:74"><name pos:start="479:74" pos:end="479:74">k</name></expr>]</index><index pos:start="479:76" pos:end="479:78">[<expr pos:start="479:77" pos:end="479:77"><literal type="number" pos:start="479:77" pos:end="479:77">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="481:13" pos:end="483:83"><if pos:start="481:13" pos:end="483:83">if <condition pos:start="481:16" pos:end="481:71">(<expr pos:start="481:17" pos:end="481:70"><name pos:start="481:17" pos:end="481:17">k</name> <operator pos:start="481:19" pos:end="481:19">&lt;</operator> <name pos:start="481:21" pos:end="481:42"><name pos:start="481:21" pos:end="481:21">s</name><operator pos:start="481:22" pos:end="481:23">-&gt;</operator><name pos:start="481:24" pos:end="481:39">vq_start_subband</name><index pos:start="481:40" pos:end="481:42">[<expr pos:start="481:41" pos:end="481:41"><name pos:start="481:41" pos:end="481:41">j</name></expr>]</index></name> <operator pos:start="481:44" pos:end="481:45">&amp;&amp;</operator> <name pos:start="481:47" pos:end="481:70"><name pos:start="481:47" pos:end="481:47">s</name><operator pos:start="481:48" pos:end="481:49">-&gt;</operator><name pos:start="481:50" pos:end="481:64">transition_mode</name><index pos:start="481:65" pos:end="481:67">[<expr pos:start="481:66" pos:end="481:66"><name pos:start="481:66" pos:end="481:66">j</name></expr>]</index><index pos:start="481:68" pos:end="481:70">[<expr pos:start="481:69" pos:end="481:69"><name pos:start="481:69" pos:end="481:69">k</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="483:17" pos:end="483:83"><block_content pos:start="483:17" pos:end="483:83">

                <expr_stmt pos:start="483:17" pos:end="483:83"><expr pos:start="483:17" pos:end="483:82"><call pos:start="483:17" pos:end="483:82"><name pos:start="483:17" pos:end="483:22">av_log</name><argument_list pos:start="483:23" pos:end="483:82">(<argument pos:start="483:24" pos:end="483:31"><expr pos:start="483:24" pos:end="483:31"><name pos:start="483:24" pos:end="483:31"><name pos:start="483:24" pos:end="483:24">s</name><operator pos:start="483:25" pos:end="483:26">-&gt;</operator><name pos:start="483:27" pos:end="483:31">avctx</name></name></expr></argument>, <argument pos:start="483:34" pos:end="483:45"><expr pos:start="483:34" pos:end="483:45"><name pos:start="483:34" pos:end="483:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="483:48" pos:end="483:55"><expr pos:start="483:48" pos:end="483:55"><literal type="string" pos:start="483:48" pos:end="483:55">" %i(t)"</literal></expr></argument>, <argument pos:start="483:58" pos:end="483:81"><expr pos:start="483:58" pos:end="483:81"><name pos:start="483:58" pos:end="483:81"><name pos:start="483:58" pos:end="483:58">s</name><operator pos:start="483:59" pos:end="483:60">-&gt;</operator><name pos:start="483:61" pos:end="483:72">scale_factor</name><index pos:start="483:73" pos:end="483:75">[<expr pos:start="483:74" pos:end="483:74"><name pos:start="483:74" pos:end="483:74">j</name></expr>]</index><index pos:start="483:76" pos:end="483:78">[<expr pos:start="483:77" pos:end="483:77"><name pos:start="483:77" pos:end="483:77">k</name></expr>]</index><index pos:start="483:79" pos:end="483:81">[<expr pos:start="483:80" pos:end="483:80"><literal type="number" pos:start="483:80" pos:end="483:80">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="487:9" pos:end="487:45"><expr pos:start="487:9" pos:end="487:44"><call pos:start="487:9" pos:end="487:44"><name pos:start="487:9" pos:end="487:14">av_log</name><argument_list pos:start="487:15" pos:end="487:44">(<argument pos:start="487:16" pos:end="487:23"><expr pos:start="487:16" pos:end="487:23"><name pos:start="487:16" pos:end="487:23"><name pos:start="487:16" pos:end="487:16">s</name><operator pos:start="487:17" pos:end="487:18">-&gt;</operator><name pos:start="487:19" pos:end="487:23">avctx</name></name></expr></argument>, <argument pos:start="487:26" pos:end="487:37"><expr pos:start="487:26" pos:end="487:37"><name pos:start="487:26" pos:end="487:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="487:40" pos:end="487:43"><expr pos:start="487:40" pos:end="487:43"><literal type="string" pos:start="487:40" pos:end="487:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="491:5" pos:end="507:5">for <control pos:start="491:9" pos:end="491:53">(<init pos:start="491:10" pos:end="491:26"><expr pos:start="491:10" pos:end="491:25"><name pos:start="491:10" pos:end="491:10">j</name> <operator pos:start="491:12" pos:end="491:12">=</operator> <name pos:start="491:14" pos:end="491:25">base_channel</name></expr>;</init> <condition pos:start="491:28" pos:end="491:48"><expr pos:start="491:28" pos:end="491:47"><name pos:start="491:28" pos:end="491:28">j</name> <operator pos:start="491:30" pos:end="491:30">&lt;</operator> <name pos:start="491:32" pos:end="491:47"><name pos:start="491:32" pos:end="491:32">s</name><operator pos:start="491:33" pos:end="491:34">-&gt;</operator><name pos:start="491:35" pos:end="491:47">prim_channels</name></name></expr>;</condition> <incr pos:start="491:50" pos:end="491:52"><expr pos:start="491:50" pos:end="491:52"><name pos:start="491:50" pos:end="491:50">j</name><operator pos:start="491:51" pos:end="491:52">++</operator></expr></incr>)</control> <block pos:start="491:55" pos:end="507:5">{<block_content pos:start="493:9" pos:end="505:9">

        <if_stmt pos:start="493:9" pos:end="505:9"><if pos:start="493:9" pos:end="505:9">if <condition pos:start="493:12" pos:end="493:38">(<expr pos:start="493:13" pos:end="493:37"><name pos:start="493:13" pos:end="493:33"><name pos:start="493:13" pos:end="493:13">s</name><operator pos:start="493:14" pos:end="493:15">-&gt;</operator><name pos:start="493:16" pos:end="493:30">joint_intensity</name><index pos:start="493:31" pos:end="493:33">[<expr pos:start="493:32" pos:end="493:32"><name pos:start="493:32" pos:end="493:32">j</name></expr>]</index></name> <operator pos:start="493:35" pos:end="493:35">&gt;</operator> <literal type="number" pos:start="493:37" pos:end="493:37">0</literal></expr>)</condition> <block pos:start="493:40" pos:end="505:9">{<block_content pos:start="495:13" pos:end="503:49">

            <decl_stmt pos:start="495:13" pos:end="495:59"><decl pos:start="495:13" pos:end="495:58"><type pos:start="495:13" pos:end="495:15"><name pos:start="495:13" pos:end="495:15">int</name></type> <name pos:start="495:17" pos:end="495:30">source_channel</name> <init pos:start="495:32" pos:end="495:58">= <expr pos:start="495:34" pos:end="495:58"><name pos:start="495:34" pos:end="495:54"><name pos:start="495:34" pos:end="495:34">s</name><operator pos:start="495:35" pos:end="495:36">-&gt;</operator><name pos:start="495:37" pos:end="495:51">joint_intensity</name><index pos:start="495:52" pos:end="495:54">[<expr pos:start="495:53" pos:end="495:53"><name pos:start="495:53" pos:end="495:53">j</name></expr>]</index></name> <operator pos:start="495:56" pos:end="495:56">-</operator> <literal type="number" pos:start="495:58" pos:end="495:58">1</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="497:13" pos:end="497:74"><expr pos:start="497:13" pos:end="497:73"><call pos:start="497:13" pos:end="497:73"><name pos:start="497:13" pos:end="497:18">av_log</name><argument_list pos:start="497:19" pos:end="497:73">(<argument pos:start="497:20" pos:end="497:27"><expr pos:start="497:20" pos:end="497:27"><name pos:start="497:20" pos:end="497:27"><name pos:start="497:20" pos:end="497:20">s</name><operator pos:start="497:21" pos:end="497:22">-&gt;</operator><name pos:start="497:23" pos:end="497:27">avctx</name></name></expr></argument>, <argument pos:start="497:30" pos:end="497:41"><expr pos:start="497:30" pos:end="497:41"><name pos:start="497:30" pos:end="497:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="497:44" pos:end="497:72"><expr pos:start="497:44" pos:end="497:72"><literal type="string" pos:start="497:44" pos:end="497:72">"Joint scale factor index:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="499:13" pos:end="501:83">for <control pos:start="499:17" pos:end="499:90">(<init pos:start="499:18" pos:end="499:44"><expr pos:start="499:18" pos:end="499:43"><name pos:start="499:18" pos:end="499:18">k</name> <operator pos:start="499:20" pos:end="499:20">=</operator> <name pos:start="499:22" pos:end="499:43"><name pos:start="499:22" pos:end="499:22">s</name><operator pos:start="499:23" pos:end="499:24">-&gt;</operator><name pos:start="499:25" pos:end="499:40">subband_activity</name><index pos:start="499:41" pos:end="499:43">[<expr pos:start="499:42" pos:end="499:42"><name pos:start="499:42" pos:end="499:42">j</name></expr>]</index></name></expr>;</init> <condition pos:start="499:46" pos:end="499:85"><expr pos:start="499:46" pos:end="499:84"><name pos:start="499:46" pos:end="499:46">k</name> <operator pos:start="499:48" pos:end="499:48">&lt;</operator> <name pos:start="499:50" pos:end="499:84"><name pos:start="499:50" pos:end="499:50">s</name><operator pos:start="499:51" pos:end="499:52">-&gt;</operator><name pos:start="499:53" pos:end="499:68">subband_activity</name><index pos:start="499:69" pos:end="499:84">[<expr pos:start="499:70" pos:end="499:83"><name pos:start="499:70" pos:end="499:83">source_channel</name></expr>]</index></name></expr>;</condition> <incr pos:start="499:87" pos:end="499:89"><expr pos:start="499:87" pos:end="499:89"><name pos:start="499:87" pos:end="499:87">k</name><operator pos:start="499:88" pos:end="499:89">++</operator></expr></incr>)</control><block type="pseudo" pos:start="501:17" pos:end="501:83"><block_content pos:start="501:17" pos:end="501:83">

                <expr_stmt pos:start="501:17" pos:end="501:83"><expr pos:start="501:17" pos:end="501:82"><call pos:start="501:17" pos:end="501:82"><name pos:start="501:17" pos:end="501:22">av_log</name><argument_list pos:start="501:23" pos:end="501:82">(<argument pos:start="501:24" pos:end="501:31"><expr pos:start="501:24" pos:end="501:31"><name pos:start="501:24" pos:end="501:31"><name pos:start="501:24" pos:end="501:24">s</name><operator pos:start="501:25" pos:end="501:26">-&gt;</operator><name pos:start="501:27" pos:end="501:31">avctx</name></name></expr></argument>, <argument pos:start="501:34" pos:end="501:45"><expr pos:start="501:34" pos:end="501:45"><name pos:start="501:34" pos:end="501:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="501:48" pos:end="501:52"><expr pos:start="501:48" pos:end="501:52"><literal type="string" pos:start="501:48" pos:end="501:52">" %i"</literal></expr></argument>, <argument pos:start="501:55" pos:end="501:81"><expr pos:start="501:55" pos:end="501:81"><name pos:start="501:55" pos:end="501:81"><name pos:start="501:55" pos:end="501:55">s</name><operator pos:start="501:56" pos:end="501:57">-&gt;</operator><name pos:start="501:58" pos:end="501:75">joint_scale_factor</name><index pos:start="501:76" pos:end="501:78">[<expr pos:start="501:77" pos:end="501:77"><name pos:start="501:77" pos:end="501:77">j</name></expr>]</index><index pos:start="501:79" pos:end="501:81">[<expr pos:start="501:80" pos:end="501:80"><name pos:start="501:80" pos:end="501:80">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="503:13" pos:end="503:49"><expr pos:start="503:13" pos:end="503:48"><call pos:start="503:13" pos:end="503:48"><name pos:start="503:13" pos:end="503:18">av_log</name><argument_list pos:start="503:19" pos:end="503:48">(<argument pos:start="503:20" pos:end="503:27"><expr pos:start="503:20" pos:end="503:27"><name pos:start="503:20" pos:end="503:27"><name pos:start="503:20" pos:end="503:20">s</name><operator pos:start="503:21" pos:end="503:22">-&gt;</operator><name pos:start="503:23" pos:end="503:27">avctx</name></name></expr></argument>, <argument pos:start="503:30" pos:end="503:41"><expr pos:start="503:30" pos:end="503:41"><name pos:start="503:30" pos:end="503:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="503:44" pos:end="503:47"><expr pos:start="503:44" pos:end="503:47"><literal type="string" pos:start="503:44" pos:end="503:47">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="509:5" pos:end="527:5"><if pos:start="509:5" pos:end="527:5">if <condition pos:start="509:8" pos:end="509:60">(<expr pos:start="509:9" pos:end="509:59"><operator pos:start="509:9" pos:end="509:9">!</operator><name pos:start="509:10" pos:end="509:21">base_channel</name> <operator pos:start="509:23" pos:end="509:24">&amp;&amp;</operator> <name pos:start="509:26" pos:end="509:41"><name pos:start="509:26" pos:end="509:26">s</name><operator pos:start="509:27" pos:end="509:28">-&gt;</operator><name pos:start="509:29" pos:end="509:41">prim_channels</name></name> <operator pos:start="509:43" pos:end="509:43">&gt;</operator> <literal type="number" pos:start="509:45" pos:end="509:45">2</literal> <operator pos:start="509:47" pos:end="509:48">&amp;&amp;</operator> <name pos:start="509:50" pos:end="509:59"><name pos:start="509:50" pos:end="509:50">s</name><operator pos:start="509:51" pos:end="509:52">-&gt;</operator><name pos:start="509:53" pos:end="509:59">downmix</name></name></expr>)</condition> <block pos:start="509:62" pos:end="527:5">{<block_content pos:start="511:9" pos:end="525:45">

        <expr_stmt pos:start="511:9" pos:end="511:60"><expr pos:start="511:9" pos:end="511:59"><call pos:start="511:9" pos:end="511:59"><name pos:start="511:9" pos:end="511:14">av_log</name><argument_list pos:start="511:15" pos:end="511:59">(<argument pos:start="511:16" pos:end="511:23"><expr pos:start="511:16" pos:end="511:23"><name pos:start="511:16" pos:end="511:23"><name pos:start="511:16" pos:end="511:16">s</name><operator pos:start="511:17" pos:end="511:18">-&gt;</operator><name pos:start="511:19" pos:end="511:23">avctx</name></name></expr></argument>, <argument pos:start="511:26" pos:end="511:37"><expr pos:start="511:26" pos:end="511:37"><name pos:start="511:26" pos:end="511:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="511:40" pos:end="511:58"><expr pos:start="511:40" pos:end="511:58"><literal type="string" pos:start="511:40" pos:end="511:58">"Downmix coeffs:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="513:9" pos:end="523:9">for <control pos:start="513:13" pos:end="513:46">(<init pos:start="513:14" pos:end="513:19"><expr pos:start="513:14" pos:end="513:18"><name pos:start="513:14" pos:end="513:14">j</name> <operator pos:start="513:16" pos:end="513:16">=</operator> <literal type="number" pos:start="513:18" pos:end="513:18">0</literal></expr>;</init> <condition pos:start="513:21" pos:end="513:41"><expr pos:start="513:21" pos:end="513:40"><name pos:start="513:21" pos:end="513:21">j</name> <operator pos:start="513:23" pos:end="513:23">&lt;</operator> <name pos:start="513:25" pos:end="513:40"><name pos:start="513:25" pos:end="513:25">s</name><operator pos:start="513:26" pos:end="513:27">-&gt;</operator><name pos:start="513:28" pos:end="513:40">prim_channels</name></name></expr>;</condition> <incr pos:start="513:43" pos:end="513:45"><expr pos:start="513:43" pos:end="513:45"><name pos:start="513:43" pos:end="513:43">j</name><operator pos:start="513:44" pos:end="513:45">++</operator></expr></incr>)</control> <block pos:start="513:48" pos:end="523:9">{<block_content pos:start="515:13" pos:end="521:62">

            <expr_stmt pos:start="515:13" pos:end="517:62"><expr pos:start="515:13" pos:end="517:61"><call pos:start="515:13" pos:end="517:61"><name pos:start="515:13" pos:end="515:18">av_log</name><argument_list pos:start="515:19" pos:end="517:61">(<argument pos:start="515:20" pos:end="515:27"><expr pos:start="515:20" pos:end="515:27"><name pos:start="515:20" pos:end="515:27"><name pos:start="515:20" pos:end="515:20">s</name><operator pos:start="515:21" pos:end="515:22">-&gt;</operator><name pos:start="515:23" pos:end="515:27">avctx</name></name></expr></argument>, <argument pos:start="515:30" pos:end="515:41"><expr pos:start="515:30" pos:end="515:41"><name pos:start="515:30" pos:end="515:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="515:44" pos:end="515:65"><expr pos:start="515:44" pos:end="515:65"><literal type="string" pos:start="515:44" pos:end="515:65">"Channel 0, %d = %f\n"</literal></expr></argument>, <argument pos:start="515:68" pos:end="515:68"><expr pos:start="515:68" pos:end="515:68"><name pos:start="515:68" pos:end="515:68">j</name></expr></argument>,

                   <argument pos:start="517:20" pos:end="517:60"><expr pos:start="517:20" pos:end="517:60"><name pos:start="517:20" pos:end="517:60"><name pos:start="517:20" pos:end="517:37">dca_downmix_coeffs</name><index pos:start="517:38" pos:end="517:60">[<expr pos:start="517:39" pos:end="517:59"><name pos:start="517:39" pos:end="517:59"><name pos:start="517:39" pos:end="517:39">s</name><operator pos:start="517:40" pos:end="517:41">-&gt;</operator><name pos:start="517:42" pos:end="517:53">downmix_coef</name><index pos:start="517:54" pos:end="517:56">[<expr pos:start="517:55" pos:end="517:55"><name pos:start="517:55" pos:end="517:55">j</name></expr>]</index><index pos:start="517:57" pos:end="517:59">[<expr pos:start="517:58" pos:end="517:58"><literal type="number" pos:start="517:58" pos:end="517:58">0</literal></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="519:13" pos:end="521:62"><expr pos:start="519:13" pos:end="521:61"><call pos:start="519:13" pos:end="521:61"><name pos:start="519:13" pos:end="519:18">av_log</name><argument_list pos:start="519:19" pos:end="521:61">(<argument pos:start="519:20" pos:end="519:27"><expr pos:start="519:20" pos:end="519:27"><name pos:start="519:20" pos:end="519:27"><name pos:start="519:20" pos:end="519:20">s</name><operator pos:start="519:21" pos:end="519:22">-&gt;</operator><name pos:start="519:23" pos:end="519:27">avctx</name></name></expr></argument>, <argument pos:start="519:30" pos:end="519:41"><expr pos:start="519:30" pos:end="519:41"><name pos:start="519:30" pos:end="519:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="519:44" pos:end="519:65"><expr pos:start="519:44" pos:end="519:65"><literal type="string" pos:start="519:44" pos:end="519:65">"Channel 1, %d = %f\n"</literal></expr></argument>, <argument pos:start="519:68" pos:end="519:68"><expr pos:start="519:68" pos:end="519:68"><name pos:start="519:68" pos:end="519:68">j</name></expr></argument>,

                   <argument pos:start="521:20" pos:end="521:60"><expr pos:start="521:20" pos:end="521:60"><name pos:start="521:20" pos:end="521:60"><name pos:start="521:20" pos:end="521:37">dca_downmix_coeffs</name><index pos:start="521:38" pos:end="521:60">[<expr pos:start="521:39" pos:end="521:59"><name pos:start="521:39" pos:end="521:59"><name pos:start="521:39" pos:end="521:39">s</name><operator pos:start="521:40" pos:end="521:41">-&gt;</operator><name pos:start="521:42" pos:end="521:53">downmix_coef</name><index pos:start="521:54" pos:end="521:56">[<expr pos:start="521:55" pos:end="521:55"><name pos:start="521:55" pos:end="521:55">j</name></expr>]</index><index pos:start="521:57" pos:end="521:59">[<expr pos:start="521:58" pos:end="521:58"><literal type="number" pos:start="521:58" pos:end="521:58">1</literal></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="525:9" pos:end="525:45"><expr pos:start="525:9" pos:end="525:44"><call pos:start="525:9" pos:end="525:44"><name pos:start="525:9" pos:end="525:14">av_log</name><argument_list pos:start="525:15" pos:end="525:44">(<argument pos:start="525:16" pos:end="525:23"><expr pos:start="525:16" pos:end="525:23"><name pos:start="525:16" pos:end="525:23"><name pos:start="525:16" pos:end="525:16">s</name><operator pos:start="525:17" pos:end="525:18">-&gt;</operator><name pos:start="525:19" pos:end="525:23">avctx</name></name></expr></argument>, <argument pos:start="525:26" pos:end="525:37"><expr pos:start="525:26" pos:end="525:37"><name pos:start="525:26" pos:end="525:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="525:40" pos:end="525:43"><expr pos:start="525:40" pos:end="525:43"><literal type="string" pos:start="525:40" pos:end="525:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="529:5" pos:end="533:84">for <control pos:start="529:9" pos:end="529:53">(<init pos:start="529:10" pos:end="529:26"><expr pos:start="529:10" pos:end="529:25"><name pos:start="529:10" pos:end="529:10">j</name> <operator pos:start="529:12" pos:end="529:12">=</operator> <name pos:start="529:14" pos:end="529:25">base_channel</name></expr>;</init> <condition pos:start="529:28" pos:end="529:48"><expr pos:start="529:28" pos:end="529:47"><name pos:start="529:28" pos:end="529:28">j</name> <operator pos:start="529:30" pos:end="529:30">&lt;</operator> <name pos:start="529:32" pos:end="529:47"><name pos:start="529:32" pos:end="529:32">s</name><operator pos:start="529:33" pos:end="529:34">-&gt;</operator><name pos:start="529:35" pos:end="529:47">prim_channels</name></name></expr>;</condition> <incr pos:start="529:50" pos:end="529:52"><expr pos:start="529:50" pos:end="529:52"><name pos:start="529:50" pos:end="529:50">j</name><operator pos:start="529:51" pos:end="529:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="531:9" pos:end="533:84"><block_content pos:start="531:9" pos:end="533:84">

        <for pos:start="531:9" pos:end="533:84">for <control pos:start="531:13" pos:end="531:73">(<init pos:start="531:14" pos:end="531:40"><expr pos:start="531:14" pos:end="531:39"><name pos:start="531:14" pos:end="531:14">k</name> <operator pos:start="531:16" pos:end="531:16">=</operator> <name pos:start="531:18" pos:end="531:39"><name pos:start="531:18" pos:end="531:18">s</name><operator pos:start="531:19" pos:end="531:20">-&gt;</operator><name pos:start="531:21" pos:end="531:36">vq_start_subband</name><index pos:start="531:37" pos:end="531:39">[<expr pos:start="531:38" pos:end="531:38"><name pos:start="531:38" pos:end="531:38">j</name></expr>]</index></name></expr>;</init> <condition pos:start="531:42" pos:end="531:68"><expr pos:start="531:42" pos:end="531:67"><name pos:start="531:42" pos:end="531:42">k</name> <operator pos:start="531:44" pos:end="531:44">&lt;</operator> <name pos:start="531:46" pos:end="531:67"><name pos:start="531:46" pos:end="531:46">s</name><operator pos:start="531:47" pos:end="531:48">-&gt;</operator><name pos:start="531:49" pos:end="531:64">subband_activity</name><index pos:start="531:65" pos:end="531:67">[<expr pos:start="531:66" pos:end="531:66"><name pos:start="531:66" pos:end="531:66">j</name></expr>]</index></name></expr>;</condition> <incr pos:start="531:70" pos:end="531:72"><expr pos:start="531:70" pos:end="531:72"><name pos:start="531:70" pos:end="531:70">k</name><operator pos:start="531:71" pos:end="531:72">++</operator></expr></incr>)</control><block type="pseudo" pos:start="533:13" pos:end="533:84"><block_content pos:start="533:13" pos:end="533:84">

            <expr_stmt pos:start="533:13" pos:end="533:84"><expr pos:start="533:13" pos:end="533:83"><call pos:start="533:13" pos:end="533:83"><name pos:start="533:13" pos:end="533:18">av_log</name><argument_list pos:start="533:19" pos:end="533:83">(<argument pos:start="533:20" pos:end="533:27"><expr pos:start="533:20" pos:end="533:27"><name pos:start="533:20" pos:end="533:27"><name pos:start="533:20" pos:end="533:20">s</name><operator pos:start="533:21" pos:end="533:22">-&gt;</operator><name pos:start="533:23" pos:end="533:27">avctx</name></name></expr></argument>, <argument pos:start="533:30" pos:end="533:41"><expr pos:start="533:30" pos:end="533:41"><name pos:start="533:30" pos:end="533:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="533:44" pos:end="533:59"><expr pos:start="533:44" pos:end="533:59"><literal type="string" pos:start="533:44" pos:end="533:59">"VQ index: %i\n"</literal></expr></argument>, <argument pos:start="533:62" pos:end="533:82"><expr pos:start="533:62" pos:end="533:82"><name pos:start="533:62" pos:end="533:82"><name pos:start="533:62" pos:end="533:62">s</name><operator pos:start="533:63" pos:end="533:64">-&gt;</operator><name pos:start="533:65" pos:end="533:76">high_freq_vq</name><index pos:start="533:77" pos:end="533:79">[<expr pos:start="533:78" pos:end="533:78"><name pos:start="533:78" pos:end="533:78">j</name></expr>]</index><index pos:start="533:80" pos:end="533:82">[<expr pos:start="533:81" pos:end="533:81"><name pos:start="533:81" pos:end="533:81">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

    <if_stmt pos:start="535:5" pos:end="554:0"><if pos:start="535:5" pos:end="554:0">if <condition pos:start="535:8" pos:end="535:32">(<expr pos:start="535:9" pos:end="535:31"><operator pos:start="535:9" pos:end="535:9">!</operator><name pos:start="535:10" pos:end="535:21">base_channel</name> <operator pos:start="535:23" pos:end="535:24">&amp;&amp;</operator> <name pos:start="535:26" pos:end="535:31"><name pos:start="535:26" pos:end="535:26">s</name><operator pos:start="535:27" pos:end="535:28">-&gt;</operator><name pos:start="535:29" pos:end="535:31">lfe</name></name></expr>)</condition> <block pos:start="535:34" pos:end="554:0">{<block_content pos:start="537:9" pos:end="549:45">

        <decl_stmt pos:start="537:9" pos:end="537:57"><decl pos:start="537:9" pos:end="537:56"><type pos:start="537:9" pos:end="537:11"><name pos:start="537:9" pos:end="537:11">int</name></type> <name pos:start="537:13" pos:end="537:23">lfe_samples</name> <init pos:start="537:25" pos:end="537:56">= <expr pos:start="537:27" pos:end="537:56"><literal type="number" pos:start="537:27" pos:end="537:27">2</literal> <operator pos:start="537:29" pos:end="537:29">*</operator> <name pos:start="537:31" pos:end="537:36"><name pos:start="537:31" pos:end="537:31">s</name><operator pos:start="537:32" pos:end="537:33">-&gt;</operator><name pos:start="537:34" pos:end="537:36">lfe</name></name> <operator pos:start="537:38" pos:end="537:38">*</operator> <operator pos:start="537:40" pos:end="537:40">(</operator><literal type="number" pos:start="537:41" pos:end="537:43">4</literal> <operator pos:start="537:43" pos:end="537:43">+</operator> <name pos:start="537:45" pos:end="537:55">block_index</name><operator pos:start="537:56" pos:end="537:56">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="539:9" pos:end="539:99"><decl pos:start="539:9" pos:end="539:98"><type pos:start="539:9" pos:end="539:11"><name pos:start="539:9" pos:end="539:11">int</name></type> <name pos:start="539:13" pos:end="539:26">lfe_end_sample</name> <init pos:start="539:28" pos:end="539:98">= <expr pos:start="539:30" pos:end="539:98"><literal type="number" pos:start="539:30" pos:end="539:30">2</literal> <operator pos:start="539:32" pos:end="539:32">*</operator> <name pos:start="539:34" pos:end="539:39"><name pos:start="539:34" pos:end="539:34">s</name><operator pos:start="539:35" pos:end="539:36">-&gt;</operator><name pos:start="539:37" pos:end="539:39">lfe</name></name> <operator pos:start="539:41" pos:end="539:41">*</operator> <operator pos:start="539:43" pos:end="539:43">(</operator><literal type="number" pos:start="539:44" pos:end="539:46">4</literal> <operator pos:start="539:46" pos:end="539:46">+</operator> <name pos:start="539:48" pos:end="539:58">block_index</name> <operator pos:start="539:60" pos:end="539:60">+</operator> <name pos:start="539:62" pos:end="539:97"><name pos:start="539:62" pos:end="539:62">s</name><operator pos:start="539:63" pos:end="539:64">-&gt;</operator><name pos:start="539:65" pos:end="539:76">subsubframes</name><index pos:start="539:77" pos:end="539:97">[<expr pos:start="539:78" pos:end="539:96"><name pos:start="539:78" pos:end="539:96"><name pos:start="539:78" pos:end="539:78">s</name><operator pos:start="539:79" pos:end="539:80">-&gt;</operator><name pos:start="539:81" pos:end="539:96">current_subframe</name></name></expr>]</index></name><operator pos:start="539:98" pos:end="539:98">)</operator></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="543:9" pos:end="543:57"><expr pos:start="543:9" pos:end="543:56"><call pos:start="543:9" pos:end="543:56"><name pos:start="543:9" pos:end="543:14">av_log</name><argument_list pos:start="543:15" pos:end="543:56">(<argument pos:start="543:16" pos:end="543:23"><expr pos:start="543:16" pos:end="543:23"><name pos:start="543:16" pos:end="543:23"><name pos:start="543:16" pos:end="543:16">s</name><operator pos:start="543:17" pos:end="543:18">-&gt;</operator><name pos:start="543:19" pos:end="543:23">avctx</name></name></expr></argument>, <argument pos:start="543:26" pos:end="543:37"><expr pos:start="543:26" pos:end="543:37"><name pos:start="543:26" pos:end="543:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="543:40" pos:end="543:55"><expr pos:start="543:40" pos:end="543:55"><literal type="string" pos:start="543:40" pos:end="543:55">"LFE samples:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="545:9" pos:end="547:66">for <control pos:start="545:13" pos:end="545:54">(<init pos:start="545:14" pos:end="545:29"><expr pos:start="545:14" pos:end="545:28"><name pos:start="545:14" pos:end="545:14">j</name> <operator pos:start="545:16" pos:end="545:16">=</operator> <name pos:start="545:18" pos:end="545:28">lfe_samples</name></expr>;</init> <condition pos:start="545:31" pos:end="545:49"><expr pos:start="545:31" pos:end="545:48"><name pos:start="545:31" pos:end="545:31">j</name> <operator pos:start="545:33" pos:end="545:33">&lt;</operator> <name pos:start="545:35" pos:end="545:48">lfe_end_sample</name></expr>;</condition> <incr pos:start="545:51" pos:end="545:53"><expr pos:start="545:51" pos:end="545:53"><name pos:start="545:51" pos:end="545:51">j</name><operator pos:start="545:52" pos:end="545:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="547:13" pos:end="547:66"><block_content pos:start="547:13" pos:end="547:66">

            <expr_stmt pos:start="547:13" pos:end="547:66"><expr pos:start="547:13" pos:end="547:65"><call pos:start="547:13" pos:end="547:65"><name pos:start="547:13" pos:end="547:18">av_log</name><argument_list pos:start="547:19" pos:end="547:65">(<argument pos:start="547:20" pos:end="547:27"><expr pos:start="547:20" pos:end="547:27"><name pos:start="547:20" pos:end="547:27"><name pos:start="547:20" pos:end="547:20">s</name><operator pos:start="547:21" pos:end="547:22">-&gt;</operator><name pos:start="547:23" pos:end="547:27">avctx</name></name></expr></argument>, <argument pos:start="547:30" pos:end="547:41"><expr pos:start="547:30" pos:end="547:41"><name pos:start="547:30" pos:end="547:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="547:44" pos:end="547:48"><expr pos:start="547:44" pos:end="547:48"><literal type="string" pos:start="547:44" pos:end="547:48">" %f"</literal></expr></argument>, <argument pos:start="547:51" pos:end="547:64"><expr pos:start="547:51" pos:end="547:64"><name pos:start="547:51" pos:end="547:64"><name pos:start="547:51" pos:end="547:51">s</name><operator pos:start="547:52" pos:end="547:53">-&gt;</operator><name pos:start="547:54" pos:end="547:61">lfe_data</name><index pos:start="547:62" pos:end="547:64">[<expr pos:start="547:63" pos:end="547:63"><name pos:start="547:63" pos:end="547:63">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="549:9" pos:end="549:45"><expr pos:start="549:9" pos:end="549:44"><call pos:start="549:9" pos:end="549:44"><name pos:start="549:9" pos:end="549:14">av_log</name><argument_list pos:start="549:15" pos:end="549:44">(<argument pos:start="549:16" pos:end="549:23"><expr pos:start="549:16" pos:end="549:23"><name pos:start="549:16" pos:end="549:23"><name pos:start="549:16" pos:end="549:16">s</name><operator pos:start="549:17" pos:end="549:18">-&gt;</operator><name pos:start="549:19" pos:end="549:23">avctx</name></name></expr></argument>, <argument pos:start="549:26" pos:end="549:37"><expr pos:start="549:26" pos:end="549:37"><name pos:start="549:26" pos:end="549:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="549:40" pos:end="549:43"><expr pos:start="549:40" pos:end="549:43"><literal type="string" pos:start="549:40" pos:end="549:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="553:1" pos:end="553:6">#<cpp:directive pos:start="553:2" pos:end="553:6">endif</cpp:directive></cpp:endif>



    <return pos:start="557:5" pos:end="557:13">return <expr pos:start="557:12" pos:end="557:12"><literal type="number" pos:start="557:12" pos:end="557:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
