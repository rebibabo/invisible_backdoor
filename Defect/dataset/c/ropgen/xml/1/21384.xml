<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21384.c" pos:tabs="8"><function pos:start="1:1" pos:end="160:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">virtio_serial_load</name><parameter_list pos:start="1:30" pos:end="1:72">(<parameter pos:start="1:31" pos:end="1:41"><decl pos:start="1:31" pos:end="1:41"><type pos:start="1:31" pos:end="1:41"><name pos:start="1:31" pos:end="1:38">QEMUFile</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">f</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:47">void</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:55">opaque</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:71">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="160:13">{<block_content pos:start="5:5" pos:end="160:13">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VirtIOSerial</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">VirtIOSerialPort</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:26">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:25">max_nr_ports</name></decl>, <decl pos:start="9:28" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:28" pos:end="9:42">nr_active_ports</name></decl>, <decl pos:start="9:45" pos:end="9:53"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:45" pos:end="9:53">ports_map</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="160:13"><if pos:start="15:5" pos:end="160:13">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:18">version_id</name> <operator pos:start="15:20" pos:end="15:20">&gt;</operator> <literal type="number" pos:start="15:22" pos:end="15:22">3</literal></expr>)</condition> <block pos:start="15:25" pos:end="160:13">{<block_content pos:start="23:5" pos:end="160:13">





    <comment type="block" pos:start="21:5" pos:end="21:27">/* The virtio device */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><call pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:15">virtio_load</name><argument_list pos:start="23:16" pos:end="23:28">(<argument pos:start="23:17" pos:end="23:24"><expr pos:start="23:17" pos:end="23:24"><operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:24"><name pos:start="23:18" pos:end="23:18">s</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:24">vdev</name></name></expr></argument>, <argument pos:start="23:27" pos:end="23:27"><expr pos:start="23:27" pos:end="23:27"><name pos:start="23:27" pos:end="23:27">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="160:13"><if pos:start="27:5" pos:end="160:13">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:18">version_id</name> <operator pos:start="27:20" pos:end="27:20">&lt;</operator> <literal type="number" pos:start="27:22" pos:end="27:22">2</literal></expr>)</condition> <block pos:start="27:25" pos:end="160:13">{<block_content pos:start="29:9" pos:end="160:13">

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>




    <comment type="block" pos:start="34:5" pos:end="34:26">/* The config space */</comment>

    <expr_stmt pos:start="36:5" pos:end="36:39"><expr pos:start="36:5" pos:end="36:38"><call pos:start="36:5" pos:end="36:38"><name pos:start="36:5" pos:end="36:18">qemu_get_be16s</name><argument_list pos:start="36:19" pos:end="36:38">(<argument pos:start="36:20" pos:end="36:20"><expr pos:start="36:20" pos:end="36:20"><name pos:start="36:20" pos:end="36:20">f</name></expr></argument>, <argument pos:start="36:23" pos:end="36:37"><expr pos:start="36:23" pos:end="36:37"><operator pos:start="36:23" pos:end="36:23">&amp;</operator><name pos:start="36:24" pos:end="36:37"><name pos:start="36:24" pos:end="36:24">s</name><operator pos:start="36:25" pos:end="36:26">-&gt;</operator><name pos:start="36:27" pos:end="36:32">config</name><operator pos:start="36:33" pos:end="36:33">.</operator><name pos:start="36:34" pos:end="36:37">cols</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="38:5" pos:end="38:39"><expr pos:start="38:5" pos:end="38:38"><call pos:start="38:5" pos:end="38:38"><name pos:start="38:5" pos:end="38:18">qemu_get_be16s</name><argument_list pos:start="38:19" pos:end="38:38">(<argument pos:start="38:20" pos:end="38:20"><expr pos:start="38:20" pos:end="38:20"><name pos:start="38:20" pos:end="38:20">f</name></expr></argument>, <argument pos:start="38:23" pos:end="38:37"><expr pos:start="38:23" pos:end="38:37"><operator pos:start="38:23" pos:end="38:23">&amp;</operator><name pos:start="38:24" pos:end="38:37"><name pos:start="38:24" pos:end="38:24">s</name><operator pos:start="38:25" pos:end="38:26">-&gt;</operator><name pos:start="38:27" pos:end="38:32">config</name><operator pos:start="38:33" pos:end="38:33">.</operator><name pos:start="38:34" pos:end="38:37">rows</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="42:5" pos:end="42:37"><expr pos:start="42:5" pos:end="42:36"><call pos:start="42:5" pos:end="42:36"><name pos:start="42:5" pos:end="42:18">qemu_get_be32s</name><argument_list pos:start="42:19" pos:end="42:36">(<argument pos:start="42:20" pos:end="42:20"><expr pos:start="42:20" pos:end="42:20"><name pos:start="42:20" pos:end="42:20">f</name></expr></argument>, <argument pos:start="42:23" pos:end="42:35"><expr pos:start="42:23" pos:end="42:35"><operator pos:start="42:23" pos:end="42:23">&amp;</operator><name pos:start="42:24" pos:end="42:35">max_nr_ports</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="44:5" pos:end="160:13"><if pos:start="44:5" pos:end="160:13">if <condition pos:start="44:8" pos:end="44:46">(<expr pos:start="44:9" pos:end="44:45"><name pos:start="44:9" pos:end="44:20">max_nr_ports</name> <operator pos:start="44:22" pos:end="44:22">&gt;</operator> <name pos:start="44:24" pos:end="44:45"><name pos:start="44:24" pos:end="44:24">s</name><operator pos:start="44:25" pos:end="44:26">-&gt;</operator><name pos:start="44:27" pos:end="44:32">config</name><operator pos:start="44:33" pos:end="44:33">.</operator><name pos:start="44:34" pos:end="44:45">max_nr_ports</name></name></expr>)</condition> <block pos:start="44:48" pos:end="160:13">{<block_content pos:start="52:5" pos:end="160:13">

        <comment type="block" pos:start="46:9" pos:end="46:71">/* Source could have had more ports than us. Fail migration. */</comment>





    <for pos:start="52:5" pos:end="160:13">for <control pos:start="52:9" pos:end="52:50">(<init pos:start="52:10" pos:end="52:15"><expr pos:start="52:10" pos:end="52:14"><name pos:start="52:10" pos:end="52:10">i</name> <operator pos:start="52:12" pos:end="52:12">=</operator> <literal type="number" pos:start="52:14" pos:end="52:14">0</literal></expr>;</init> <condition pos:start="52:17" pos:end="52:45"><expr pos:start="52:17" pos:end="52:44"><name pos:start="52:17" pos:end="52:17">i</name> <operator pos:start="52:19" pos:end="52:19">&lt;</operator> <operator pos:start="52:21" pos:end="52:21">(</operator><name pos:start="52:22" pos:end="52:33">max_nr_ports</name> <operator pos:start="52:35" pos:end="52:35">+</operator> <literal type="number" pos:start="52:37" pos:end="52:38">31</literal><operator pos:start="52:39" pos:end="52:39">)</operator> <operator pos:start="52:41" pos:end="52:41">/</operator> <literal type="number" pos:start="52:43" pos:end="52:44">32</literal></expr>;</condition> <incr pos:start="52:47" pos:end="52:49"><expr pos:start="52:47" pos:end="52:49"><name pos:start="52:47" pos:end="52:47">i</name><operator pos:start="52:48" pos:end="52:49">++</operator></expr></incr>)</control> <block pos:start="52:52" pos:end="160:13">{<block_content pos:start="54:9" pos:end="160:13">

        <expr_stmt pos:start="54:9" pos:end="54:38"><expr pos:start="54:9" pos:end="54:37"><call pos:start="54:9" pos:end="54:37"><name pos:start="54:9" pos:end="54:22">qemu_get_be32s</name><argument_list pos:start="54:23" pos:end="54:37">(<argument pos:start="54:24" pos:end="54:24"><expr pos:start="54:24" pos:end="54:24"><name pos:start="54:24" pos:end="54:24">f</name></expr></argument>, <argument pos:start="54:27" pos:end="54:36"><expr pos:start="54:27" pos:end="54:36"><operator pos:start="54:27" pos:end="54:27">&amp;</operator><name pos:start="54:28" pos:end="54:36">ports_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="58:9" pos:end="160:13"><if pos:start="58:9" pos:end="160:13">if <condition pos:start="58:12" pos:end="58:41">(<expr pos:start="58:13" pos:end="58:40"><name pos:start="58:13" pos:end="58:21">ports_map</name> <operator pos:start="58:23" pos:end="58:24">!=</operator> <name pos:start="58:26" pos:end="58:40"><name pos:start="58:26" pos:end="58:26">s</name><operator pos:start="58:27" pos:end="58:28">-&gt;</operator><name pos:start="58:29" pos:end="58:37">ports_map</name><index pos:start="58:38" pos:end="58:40">[<expr pos:start="58:39" pos:end="58:39"><name pos:start="58:39" pos:end="58:39">i</name></expr>]</index></name></expr>)</condition> <block pos:start="58:43" pos:end="160:13">{<block_content pos:start="73:5" pos:end="160:13">

            <comment type="block" pos:start="60:13" pos:end="66:15">/*

             * Ports active on source and destination don't

             * match. Fail migration.

             */</comment>






    <expr_stmt pos:start="73:5" pos:end="73:40"><expr pos:start="73:5" pos:end="73:39"><call pos:start="73:5" pos:end="73:39"><name pos:start="73:5" pos:end="73:18">qemu_get_be32s</name><argument_list pos:start="73:19" pos:end="73:39">(<argument pos:start="73:20" pos:end="73:20"><expr pos:start="73:20" pos:end="73:20"><name pos:start="73:20" pos:end="73:20">f</name></expr></argument>, <argument pos:start="73:23" pos:end="73:38"><expr pos:start="73:23" pos:end="73:38"><operator pos:start="73:23" pos:end="73:23">&amp;</operator><name pos:start="73:24" pos:end="73:38">nr_active_ports</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:42">/* Items in struct VirtIOSerialPort */</comment>

    <for pos:start="79:5" pos:end="160:13">for <control pos:start="79:9" pos:end="79:41">(<init pos:start="79:10" pos:end="79:15"><expr pos:start="79:10" pos:end="79:14"><name pos:start="79:10" pos:end="79:10">i</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr>;</init> <condition pos:start="79:17" pos:end="79:36"><expr pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:17">i</name> <operator pos:start="79:19" pos:end="79:19">&lt;</operator> <name pos:start="79:21" pos:end="79:35">nr_active_ports</name></expr>;</condition> <incr pos:start="79:38" pos:end="79:40"><expr pos:start="79:38" pos:end="79:40"><name pos:start="79:38" pos:end="79:38">i</name><operator pos:start="79:39" pos:end="79:40">++</operator></expr></incr>)</control> <block pos:start="79:43" pos:end="160:13">{<block_content pos:start="81:9" pos:end="160:13">

        <decl_stmt pos:start="81:9" pos:end="81:20"><decl pos:start="81:9" pos:end="81:19"><type pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:16">uint32_t</name></type> <name pos:start="81:18" pos:end="81:19">id</name></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="83:28"><decl pos:start="83:9" pos:end="83:27"><type pos:start="83:9" pos:end="83:12"><name pos:start="83:9" pos:end="83:12">bool</name></type> <name pos:start="83:14" pos:end="83:27">host_connected</name></decl>;</decl_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:30"><expr pos:start="87:9" pos:end="87:29"><name pos:start="87:9" pos:end="87:10">id</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <call pos:start="87:14" pos:end="87:29"><name pos:start="87:14" pos:end="87:26">qemu_get_be32</name><argument_list pos:start="87:27" pos:end="87:29">(<argument pos:start="87:28" pos:end="87:28"><expr pos:start="87:28" pos:end="87:28"><name pos:start="87:28" pos:end="87:28">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:38"><expr pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:12">port</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <call pos:start="89:16" pos:end="89:37"><name pos:start="89:16" pos:end="89:30">find_port_by_id</name><argument_list pos:start="89:31" pos:end="89:37">(<argument pos:start="89:32" pos:end="89:32"><expr pos:start="89:32" pos:end="89:32"><name pos:start="89:32" pos:end="89:32">s</name></expr></argument>, <argument pos:start="89:35" pos:end="89:36"><expr pos:start="89:35" pos:end="89:36"><name pos:start="89:35" pos:end="89:36">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






        <expr_stmt pos:start="96:9" pos:end="96:49"><expr pos:start="96:9" pos:end="96:48"><name pos:start="96:9" pos:end="96:29"><name pos:start="96:9" pos:end="96:12">port</name><operator pos:start="96:13" pos:end="96:14">-&gt;</operator><name pos:start="96:15" pos:end="96:29">guest_connected</name></name> <operator pos:start="96:31" pos:end="96:31">=</operator> <call pos:start="96:33" pos:end="96:48"><name pos:start="96:33" pos:end="96:45">qemu_get_byte</name><argument_list pos:start="96:46" pos:end="96:48">(<argument pos:start="96:47" pos:end="96:47"><expr pos:start="96:47" pos:end="96:47"><name pos:start="96:47" pos:end="96:47">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="98:9" pos:end="98:42"><expr pos:start="98:9" pos:end="98:41"><name pos:start="98:9" pos:end="98:22">host_connected</name> <operator pos:start="98:24" pos:end="98:24">=</operator> <call pos:start="98:26" pos:end="98:41"><name pos:start="98:26" pos:end="98:38">qemu_get_byte</name><argument_list pos:start="98:39" pos:end="98:41">(<argument pos:start="98:40" pos:end="98:40"><expr pos:start="98:40" pos:end="98:40"><name pos:start="98:40" pos:end="98:40">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="100:9" pos:end="160:13"><if pos:start="100:9" pos:end="160:13">if <condition pos:start="100:12" pos:end="100:51">(<expr pos:start="100:13" pos:end="100:50"><name pos:start="100:13" pos:end="100:26">host_connected</name> <operator pos:start="100:28" pos:end="100:29">!=</operator> <name pos:start="100:31" pos:end="100:50"><name pos:start="100:31" pos:end="100:34">port</name><operator pos:start="100:35" pos:end="100:36">-&gt;</operator><name pos:start="100:37" pos:end="100:50">host_connected</name></name></expr>)</condition> <block pos:start="100:53" pos:end="160:13">{<block_content pos:start="110:13" pos:end="160:13">

            <comment type="block" pos:start="102:13" pos:end="108:15">/*

             * We have to let the guest know of the host connection

             * status change

             */</comment>

            <expr_stmt pos:start="110:13" pos:end="112:53"><expr pos:start="110:13" pos:end="112:52"><call pos:start="110:13" pos:end="112:52"><name pos:start="110:13" pos:end="110:30">send_control_event</name><argument_list pos:start="110:31" pos:end="112:52">(<argument pos:start="110:32" pos:end="110:35"><expr pos:start="110:32" pos:end="110:35"><name pos:start="110:32" pos:end="110:35">port</name></expr></argument>, <argument pos:start="110:38" pos:end="110:61"><expr pos:start="110:38" pos:end="110:61"><name pos:start="110:38" pos:end="110:61">VIRTIO_CONSOLE_PORT_OPEN</name></expr></argument>,

                               <argument pos:start="112:32" pos:end="112:51"><expr pos:start="112:32" pos:end="112:51"><name pos:start="112:32" pos:end="112:51"><name pos:start="112:32" pos:end="112:35">port</name><operator pos:start="112:36" pos:end="112:37">-&gt;</operator><name pos:start="112:38" pos:end="112:51">host_connected</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




        <if_stmt pos:start="117:9" pos:end="160:13"><if pos:start="117:9" pos:end="160:13">if <condition pos:start="117:12" pos:end="117:27">(<expr pos:start="117:13" pos:end="117:26"><name pos:start="117:13" pos:end="117:22">version_id</name> <operator pos:start="117:24" pos:end="117:24">&gt;</operator> <literal type="number" pos:start="117:26" pos:end="117:26">2</literal></expr>)</condition> <block pos:start="117:29" pos:end="160:13">{<block_content pos:start="119:13" pos:end="160:13">

            <decl_stmt pos:start="119:13" pos:end="119:33"><decl pos:start="119:13" pos:end="119:32"><type pos:start="119:13" pos:end="119:20"><name pos:start="119:13" pos:end="119:20">uint32_t</name></type> <name pos:start="119:22" pos:end="119:32">elem_popped</name></decl>;</decl_stmt>



            <expr_stmt pos:start="123:13" pos:end="123:44"><expr pos:start="123:13" pos:end="123:43"><call pos:start="123:13" pos:end="123:43"><name pos:start="123:13" pos:end="123:26">qemu_get_be32s</name><argument_list pos:start="123:27" pos:end="123:43">(<argument pos:start="123:28" pos:end="123:28"><expr pos:start="123:28" pos:end="123:28"><name pos:start="123:28" pos:end="123:28">f</name></expr></argument>, <argument pos:start="123:31" pos:end="123:42"><expr pos:start="123:31" pos:end="123:42"><operator pos:start="123:31" pos:end="123:31">&amp;</operator><name pos:start="123:32" pos:end="123:42">elem_popped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="125:13" pos:end="160:13"><if pos:start="125:13" pos:end="160:13">if <condition pos:start="125:16" pos:end="125:28">(<expr pos:start="125:17" pos:end="125:27"><name pos:start="125:17" pos:end="125:27">elem_popped</name></expr>)</condition> <block pos:start="125:30" pos:end="160:13">{<block_content pos:start="127:17" pos:end="160:13">

                <expr_stmt pos:start="127:17" pos:end="127:50"><expr pos:start="127:17" pos:end="127:49"><call pos:start="127:17" pos:end="127:49"><name pos:start="127:17" pos:end="127:30">qemu_get_be32s</name><argument_list pos:start="127:31" pos:end="127:49">(<argument pos:start="127:32" pos:end="127:32"><expr pos:start="127:32" pos:end="127:32"><name pos:start="127:32" pos:end="127:32">f</name></expr></argument>, <argument pos:start="127:35" pos:end="127:48"><expr pos:start="127:35" pos:end="127:48"><operator pos:start="127:35" pos:end="127:35">&amp;</operator><name pos:start="127:36" pos:end="127:48"><name pos:start="127:36" pos:end="127:39">port</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:48">iov_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:53"><expr pos:start="129:17" pos:end="129:52"><call pos:start="129:17" pos:end="129:52"><name pos:start="129:17" pos:end="129:30">qemu_get_be64s</name><argument_list pos:start="129:31" pos:end="129:52">(<argument pos:start="129:32" pos:end="129:32"><expr pos:start="129:32" pos:end="129:32"><name pos:start="129:32" pos:end="129:32">f</name></expr></argument>, <argument pos:start="129:35" pos:end="129:51"><expr pos:start="129:35" pos:end="129:51"><operator pos:start="129:35" pos:end="129:35">&amp;</operator><name pos:start="129:36" pos:end="129:51"><name pos:start="129:36" pos:end="129:39">port</name><operator pos:start="129:40" pos:end="129:41">-&gt;</operator><name pos:start="129:42" pos:end="129:51">iov_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="133:17" pos:end="135:52"><expr pos:start="133:17" pos:end="135:51"><call pos:start="133:17" pos:end="135:51"><name pos:start="133:17" pos:end="133:31">qemu_get_buffer</name><argument_list pos:start="133:32" pos:end="135:51">(<argument pos:start="133:33" pos:end="133:33"><expr pos:start="133:33" pos:end="133:33"><name pos:start="133:33" pos:end="133:33">f</name></expr></argument>, <argument pos:start="133:36" pos:end="133:63"><expr pos:start="133:36" pos:end="133:63"><operator pos:start="133:36" pos:end="133:36">(</operator><name pos:start="133:37" pos:end="133:44">unsigned</name> <name pos:start="133:46" pos:end="133:49">char</name> <operator pos:start="133:51" pos:end="133:51">*</operator><operator pos:start="133:52" pos:end="133:52">)</operator><operator pos:start="133:53" pos:end="133:53">&amp;</operator><name pos:start="133:54" pos:end="133:63"><name pos:start="133:54" pos:end="133:57">port</name><operator pos:start="133:58" pos:end="133:59">-&gt;</operator><name pos:start="133:60" pos:end="133:63">elem</name></name></expr></argument>,

                                <argument pos:start="135:33" pos:end="135:50"><expr pos:start="135:33" pos:end="135:50"><sizeof pos:start="135:33" pos:end="135:50">sizeof<argument_list pos:start="135:39" pos:end="135:50">(<argument pos:start="135:40" pos:end="135:49"><expr pos:start="135:40" pos:end="135:49"><name pos:start="135:40" pos:end="135:49"><name pos:start="135:40" pos:end="135:43">port</name><operator pos:start="135:44" pos:end="135:45">-&gt;</operator><name pos:start="135:46" pos:end="135:49">elem</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="139:55"><expr pos:start="137:17" pos:end="139:54"><call pos:start="137:17" pos:end="139:54"><name pos:start="137:17" pos:end="137:32">virtqueue_map_sg</name><argument_list pos:start="137:33" pos:end="139:54">(<argument pos:start="137:34" pos:end="137:49"><expr pos:start="137:34" pos:end="137:49"><name pos:start="137:34" pos:end="137:49"><name pos:start="137:34" pos:end="137:37">port</name><operator pos:start="137:38" pos:end="137:39">-&gt;</operator><name pos:start="137:40" pos:end="137:43">elem</name><operator pos:start="137:44" pos:end="137:44">.</operator><name pos:start="137:45" pos:end="137:49">in_sg</name></name></expr></argument>, <argument pos:start="137:52" pos:end="137:69"><expr pos:start="137:52" pos:end="137:69"><name pos:start="137:52" pos:end="137:69"><name pos:start="137:52" pos:end="137:55">port</name><operator pos:start="137:56" pos:end="137:57">-&gt;</operator><name pos:start="137:58" pos:end="137:61">elem</name><operator pos:start="137:62" pos:end="137:62">.</operator><name pos:start="137:63" pos:end="137:69">in_addr</name></name></expr></argument>,

                                 <argument pos:start="139:34" pos:end="139:50"><expr pos:start="139:34" pos:end="139:50"><name pos:start="139:34" pos:end="139:50"><name pos:start="139:34" pos:end="139:37">port</name><operator pos:start="139:38" pos:end="139:39">-&gt;</operator><name pos:start="139:40" pos:end="139:43">elem</name><operator pos:start="139:44" pos:end="139:44">.</operator><name pos:start="139:45" pos:end="139:50">in_num</name></name></expr></argument>, <argument pos:start="139:53" pos:end="139:53"><expr pos:start="139:53" pos:end="139:53"><literal type="number" pos:start="139:53" pos:end="139:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="143:56"><expr pos:start="141:17" pos:end="143:55"><call pos:start="141:17" pos:end="143:55"><name pos:start="141:17" pos:end="141:32">virtqueue_map_sg</name><argument_list pos:start="141:33" pos:end="143:55">(<argument pos:start="141:34" pos:end="141:50"><expr pos:start="141:34" pos:end="141:50"><name pos:start="141:34" pos:end="141:50"><name pos:start="141:34" pos:end="141:37">port</name><operator pos:start="141:38" pos:end="141:39">-&gt;</operator><name pos:start="141:40" pos:end="141:43">elem</name><operator pos:start="141:44" pos:end="141:44">.</operator><name pos:start="141:45" pos:end="141:50">out_sg</name></name></expr></argument>, <argument pos:start="141:53" pos:end="141:71"><expr pos:start="141:53" pos:end="141:71"><name pos:start="141:53" pos:end="141:71"><name pos:start="141:53" pos:end="141:56">port</name><operator pos:start="141:57" pos:end="141:58">-&gt;</operator><name pos:start="141:59" pos:end="141:62">elem</name><operator pos:start="141:63" pos:end="141:63">.</operator><name pos:start="141:64" pos:end="141:71">out_addr</name></name></expr></argument>,

                                 <argument pos:start="143:34" pos:end="143:51"><expr pos:start="143:34" pos:end="143:51"><name pos:start="143:34" pos:end="143:51"><name pos:start="143:34" pos:end="143:37">port</name><operator pos:start="143:38" pos:end="143:39">-&gt;</operator><name pos:start="143:40" pos:end="143:43">elem</name><operator pos:start="143:44" pos:end="143:44">.</operator><name pos:start="143:45" pos:end="143:51">out_num</name></name></expr></argument>, <argument pos:start="143:54" pos:end="143:54"><expr pos:start="143:54" pos:end="143:54"><literal type="number" pos:start="143:54" pos:end="143:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="147:17" pos:end="153:19">/*

                 *  Port was throttled on source machine.  Let's

                 *  unthrottle it here so data starts flowing again.

                 */</comment>

                <expr_stmt pos:start="155:17" pos:end="155:57"><expr pos:start="155:17" pos:end="155:56"><call pos:start="155:17" pos:end="155:56"><name pos:start="155:17" pos:end="155:43">virtio_serial_throttle_port</name><argument_list pos:start="155:44" pos:end="155:56">(<argument pos:start="155:45" pos:end="155:48"><expr pos:start="155:45" pos:end="155:48"><name pos:start="155:45" pos:end="155:48">port</name></expr></argument>, <argument pos:start="155:51" pos:end="155:55"><expr pos:start="155:51" pos:end="155:55"><name pos:start="155:51" pos:end="155:55">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <return pos:start="160:5" pos:end="160:13">return <expr pos:start="160:12" pos:end="160:12"><literal type="number" pos:start="160:12" pos:end="160:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
