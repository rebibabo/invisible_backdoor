<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14186.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">scsi_qdev_init</name><parameter_list pos:start="1:26" pos:end="1:44">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:37">DeviceState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">qdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:14">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SCSIDevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">dev</name> <init pos:start="5:21" pos:end="5:39">= <expr pos:start="5:23" pos:end="5:39"><call pos:start="5:23" pos:end="5:39"><name pos:start="5:23" pos:end="5:33">SCSI_DEVICE</name><argument_list pos:start="5:34" pos:end="5:39">(<argument pos:start="5:35" pos:end="5:38"><expr pos:start="5:35" pos:end="5:38"><name pos:start="5:35" pos:end="5:38">qdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:65"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">SCSIBus</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">bus</name> <init pos:start="7:18" pos:end="7:65">= <expr pos:start="7:20" pos:end="7:65"><call pos:start="7:20" pos:end="7:65"><name pos:start="7:20" pos:end="7:28">DO_UPCAST</name><argument_list pos:start="7:29" pos:end="7:65">(<argument pos:start="7:30" pos:end="7:36"><expr pos:start="7:30" pos:end="7:36"><name pos:start="7:30" pos:end="7:36">SCSIBus</name></expr></argument>, <argument pos:start="7:39" pos:end="7:42"><expr pos:start="7:39" pos:end="7:42"><name pos:start="7:39" pos:end="7:42">qbus</name></expr></argument>, <argument pos:start="7:45" pos:end="7:64"><expr pos:start="7:45" pos:end="7:64"><name pos:start="7:45" pos:end="7:64"><name pos:start="7:45" pos:end="7:47">dev</name><operator pos:start="7:48" pos:end="7:49">-&gt;</operator><name pos:start="7:50" pos:end="7:53">qdev</name><operator pos:start="7:54" pos:end="7:54">.</operator><name pos:start="7:55" pos:end="7:64">parent_bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">SCSIDevice</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">rc</name> <init pos:start="11:12" pos:end="11:15">= <expr pos:start="11:14" pos:end="11:15"><operator pos:start="11:14" pos:end="11:14">-</operator><literal type="number" pos:start="11:15" pos:end="11:15">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:46">(<expr pos:start="15:9" pos:end="15:45"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:11">dev</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:20">channel</name></name> <operator pos:start="15:22" pos:end="15:22">&gt;</operator> <name pos:start="15:24" pos:end="15:45"><name pos:start="15:24" pos:end="15:26">bus</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:32">info</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:45">max_channel</name></name></expr>)</condition> <block pos:start="15:48" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:17">

        <expr_stmt pos:start="17:9" pos:end="17:62"><expr pos:start="17:9" pos:end="17:61"><call pos:start="17:9" pos:end="17:61"><name pos:start="17:9" pos:end="17:20">error_report</name><argument_list pos:start="17:21" pos:end="17:61">(<argument pos:start="17:22" pos:end="17:46"><expr pos:start="17:22" pos:end="17:46"><literal type="string" pos:start="17:22" pos:end="17:46">"bad scsi channel id: %d"</literal></expr></argument>, <argument pos:start="17:49" pos:end="17:60"><expr pos:start="17:49" pos:end="17:60"><name pos:start="17:49" pos:end="17:60"><name pos:start="17:49" pos:end="17:51">dev</name><operator pos:start="17:52" pos:end="17:53">-&gt;</operator><name pos:start="17:54" pos:end="17:60">channel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="19:9" pos:end="19:17">goto <name pos:start="19:14" pos:end="19:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:57">(<expr pos:start="23:9" pos:end="23:56"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">dev</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:15">id</name></name> <operator pos:start="23:17" pos:end="23:18">!=</operator> <operator pos:start="23:20" pos:end="23:20">-</operator><literal type="number" pos:start="23:21" pos:end="23:21">1</literal> <operator pos:start="23:23" pos:end="23:24">&amp;&amp;</operator> <name pos:start="23:26" pos:end="23:32"><name pos:start="23:26" pos:end="23:28">dev</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:32">id</name></name> <operator pos:start="23:34" pos:end="23:34">&gt;</operator> <name pos:start="23:36" pos:end="23:56"><name pos:start="23:36" pos:end="23:38">bus</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:44">info</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:56">max_target</name></name></expr>)</condition> <block pos:start="23:59" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:17">

        <expr_stmt pos:start="25:9" pos:end="25:56"><expr pos:start="25:9" pos:end="25:55"><call pos:start="25:9" pos:end="25:55"><name pos:start="25:9" pos:end="25:20">error_report</name><argument_list pos:start="25:21" pos:end="25:55">(<argument pos:start="25:22" pos:end="25:45"><expr pos:start="25:22" pos:end="25:45"><literal type="string" pos:start="25:22" pos:end="25:45">"bad scsi device id: %d"</literal></expr></argument>, <argument pos:start="25:48" pos:end="25:54"><expr pos:start="25:48" pos:end="25:54"><name pos:start="25:48" pos:end="25:54"><name pos:start="25:48" pos:end="25:50">dev</name><operator pos:start="25:51" pos:end="25:52">-&gt;</operator><name pos:start="25:53" pos:end="25:54">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="27:9" pos:end="27:17">goto <name pos:start="27:14" pos:end="27:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="89:5"><if pos:start="33:5" pos:end="59:5">if <condition pos:start="33:8" pos:end="33:22">(<expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">dev</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:15">id</name></name> <operator pos:start="33:17" pos:end="33:18">==</operator> <operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>)</condition> <block pos:start="33:24" pos:end="59:5">{<block_content pos:start="35:9" pos:end="57:21">

        <decl_stmt pos:start="35:9" pos:end="35:20"><decl pos:start="35:9" pos:end="35:19"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:14">id</name> <init pos:start="35:16" pos:end="35:19">= <expr pos:start="35:18" pos:end="35:19"><operator pos:start="35:18" pos:end="35:18">-</operator><literal type="number" pos:start="35:19" pos:end="35:19">1</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:27">(<expr pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:15">dev</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:20">lun</name></name> <operator pos:start="37:22" pos:end="37:23">==</operator> <operator pos:start="37:25" pos:end="37:25">-</operator><literal type="number" pos:start="37:26" pos:end="37:26">1</literal></expr>)</condition> <block pos:start="37:29" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:25">

            <expr_stmt pos:start="39:13" pos:end="39:25"><expr pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:15">dev</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:20">lun</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <literal type="number" pos:start="39:24" pos:end="39:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <do pos:start="43:9" pos:end="47:73">do <block pos:start="43:12" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:68">

            <expr_stmt pos:start="45:13" pos:end="45:68"><expr pos:start="45:13" pos:end="45:67"><name pos:start="45:13" pos:end="45:13">d</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:67"><name pos:start="45:17" pos:end="45:32">scsi_device_find</name><argument_list pos:start="45:33" pos:end="45:67">(<argument pos:start="45:34" pos:end="45:36"><expr pos:start="45:34" pos:end="45:36"><name pos:start="45:34" pos:end="45:36">bus</name></expr></argument>, <argument pos:start="45:39" pos:end="45:50"><expr pos:start="45:39" pos:end="45:50"><name pos:start="45:39" pos:end="45:50"><name pos:start="45:39" pos:end="45:41">dev</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:50">channel</name></name></expr></argument>, <argument pos:start="45:53" pos:end="45:56"><expr pos:start="45:53" pos:end="45:56"><operator pos:start="45:53" pos:end="45:54">++</operator><name pos:start="45:55" pos:end="45:56">id</name></expr></argument>, <argument pos:start="45:59" pos:end="45:66"><expr pos:start="45:59" pos:end="45:66"><name pos:start="45:59" pos:end="45:66"><name pos:start="45:59" pos:end="45:61">dev</name><operator pos:start="45:62" pos:end="45:63">-&gt;</operator><name pos:start="45:64" pos:end="45:66">lun</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="47:17" pos:end="47:72">(<expr pos:start="47:18" pos:end="47:71"><name pos:start="47:18" pos:end="47:18">d</name> <operator pos:start="47:20" pos:end="47:21">&amp;&amp;</operator> <name pos:start="47:23" pos:end="47:28"><name pos:start="47:23" pos:end="47:23">d</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:28">lun</name></name> <operator pos:start="47:30" pos:end="47:31">==</operator> <name pos:start="47:33" pos:end="47:40"><name pos:start="47:33" pos:end="47:35">dev</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:40">lun</name></name> <operator pos:start="47:42" pos:end="47:43">&amp;&amp;</operator> <name pos:start="47:45" pos:end="47:46">id</name> <operator pos:start="47:48" pos:end="47:49">&lt;=</operator> <name pos:start="47:51" pos:end="47:71"><name pos:start="47:51" pos:end="47:53">bus</name><operator pos:start="47:54" pos:end="47:55">-&gt;</operator><name pos:start="47:56" pos:end="47:59">info</name><operator pos:start="47:60" pos:end="47:61">-&gt;</operator><name pos:start="47:62" pos:end="47:71">max_target</name></name></expr>)</condition>;</do>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:39">(<expr pos:start="49:13" pos:end="49:38"><name pos:start="49:13" pos:end="49:14">id</name> <operator pos:start="49:16" pos:end="49:16">&gt;</operator> <name pos:start="49:18" pos:end="49:38"><name pos:start="49:18" pos:end="49:20">bus</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:26">info</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:38">max_target</name></name></expr>)</condition> <block pos:start="49:41" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:21">

            <expr_stmt pos:start="51:13" pos:end="51:43"><expr pos:start="51:13" pos:end="51:42"><call pos:start="51:13" pos:end="51:42"><name pos:start="51:13" pos:end="51:24">error_report</name><argument_list pos:start="51:25" pos:end="51:42">(<argument pos:start="51:26" pos:end="51:41"><expr pos:start="51:26" pos:end="51:41"><literal type="string" pos:start="51:26" pos:end="51:41">"no free target"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="53:13" pos:end="53:21">goto <name pos:start="53:18" pos:end="53:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">dev</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:15">id</name></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:20">id</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="79:5">else if <condition pos:start="59:15" pos:end="59:30">(<expr pos:start="59:16" pos:end="59:29"><name pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:18">dev</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:23">lun</name></name> <operator pos:start="59:25" pos:end="59:26">==</operator> <operator pos:start="59:28" pos:end="59:28">-</operator><literal type="number" pos:start="59:29" pos:end="59:29">1</literal></expr>)</condition> <block pos:start="59:32" pos:end="79:5">{<block_content pos:start="61:9" pos:end="77:23">

        <decl_stmt pos:start="61:9" pos:end="61:21"><decl pos:start="61:9" pos:end="61:20"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:15">lun</name> <init pos:start="61:17" pos:end="61:20">= <expr pos:start="61:19" pos:end="61:20"><operator pos:start="61:19" pos:end="61:19">-</operator><literal type="number" pos:start="61:20" pos:end="61:20">1</literal></expr></init></decl>;</decl_stmt>

        <do pos:start="63:9" pos:end="67:65">do <block pos:start="63:12" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:68">

            <expr_stmt pos:start="65:13" pos:end="65:68"><expr pos:start="65:13" pos:end="65:67"><name pos:start="65:13" pos:end="65:13">d</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <call pos:start="65:17" pos:end="65:67"><name pos:start="65:17" pos:end="65:32">scsi_device_find</name><argument_list pos:start="65:33" pos:end="65:67">(<argument pos:start="65:34" pos:end="65:36"><expr pos:start="65:34" pos:end="65:36"><name pos:start="65:34" pos:end="65:36">bus</name></expr></argument>, <argument pos:start="65:39" pos:end="65:50"><expr pos:start="65:39" pos:end="65:50"><name pos:start="65:39" pos:end="65:50"><name pos:start="65:39" pos:end="65:41">dev</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:50">channel</name></name></expr></argument>, <argument pos:start="65:53" pos:end="65:59"><expr pos:start="65:53" pos:end="65:59"><name pos:start="65:53" pos:end="65:59"><name pos:start="65:53" pos:end="65:55">dev</name><operator pos:start="65:56" pos:end="65:57">-&gt;</operator><name pos:start="65:58" pos:end="65:59">id</name></name></expr></argument>, <argument pos:start="65:62" pos:end="65:66"><expr pos:start="65:62" pos:end="65:66"><operator pos:start="65:62" pos:end="65:63">++</operator><name pos:start="65:64" pos:end="65:66">lun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="67:17" pos:end="67:64">(<expr pos:start="67:18" pos:end="67:63"><name pos:start="67:18" pos:end="67:18">d</name> <operator pos:start="67:20" pos:end="67:21">&amp;&amp;</operator> <name pos:start="67:23" pos:end="67:28"><name pos:start="67:23" pos:end="67:23">d</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:28">lun</name></name> <operator pos:start="67:30" pos:end="67:31">==</operator> <name pos:start="67:33" pos:end="67:35">lun</name> <operator pos:start="67:37" pos:end="67:38">&amp;&amp;</operator> <name pos:start="67:40" pos:end="67:42">lun</name> <operator pos:start="67:44" pos:end="67:44">&lt;</operator> <name pos:start="67:46" pos:end="67:63"><name pos:start="67:46" pos:end="67:48">bus</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:54">info</name><operator pos:start="67:55" pos:end="67:56">-&gt;</operator><name pos:start="67:57" pos:end="67:63">max_lun</name></name></expr>)</condition>;</do>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:37">(<expr pos:start="69:13" pos:end="69:36"><name pos:start="69:13" pos:end="69:15">lun</name> <operator pos:start="69:17" pos:end="69:17">&gt;</operator> <name pos:start="69:19" pos:end="69:36"><name pos:start="69:19" pos:end="69:21">bus</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:27">info</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:36">max_lun</name></name></expr>)</condition> <block pos:start="69:39" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:21">

            <expr_stmt pos:start="71:13" pos:end="71:40"><expr pos:start="71:13" pos:end="71:39"><call pos:start="71:13" pos:end="71:39"><name pos:start="71:13" pos:end="71:24">error_report</name><argument_list pos:start="71:25" pos:end="71:39">(<argument pos:start="71:26" pos:end="71:38"><expr pos:start="71:26" pos:end="71:38"><literal type="string" pos:start="71:26" pos:end="71:38">"no free lun"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="73:13" pos:end="73:21">goto <name pos:start="73:18" pos:end="73:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:23"><expr pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:11">dev</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:16">lun</name></name> <operator pos:start="77:18" pos:end="77:18">=</operator> <name pos:start="77:20" pos:end="77:22">lun</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="89:5">else <block pos:start="79:12" pos:end="89:5">{<block_content pos:start="81:9" pos:end="87:9">

        <expr_stmt pos:start="81:9" pos:end="81:67"><expr pos:start="81:9" pos:end="81:66"><name pos:start="81:9" pos:end="81:9">d</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <call pos:start="81:13" pos:end="81:66"><name pos:start="81:13" pos:end="81:28">scsi_device_find</name><argument_list pos:start="81:29" pos:end="81:66">(<argument pos:start="81:30" pos:end="81:32"><expr pos:start="81:30" pos:end="81:32"><name pos:start="81:30" pos:end="81:32">bus</name></expr></argument>, <argument pos:start="81:35" pos:end="81:46"><expr pos:start="81:35" pos:end="81:46"><name pos:start="81:35" pos:end="81:46"><name pos:start="81:35" pos:end="81:37">dev</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:46">channel</name></name></expr></argument>, <argument pos:start="81:49" pos:end="81:55"><expr pos:start="81:49" pos:end="81:55"><name pos:start="81:49" pos:end="81:55"><name pos:start="81:49" pos:end="81:51">dev</name><operator pos:start="81:52" pos:end="81:53">-&gt;</operator><name pos:start="81:54" pos:end="81:55">id</name></name></expr></argument>, <argument pos:start="81:58" pos:end="81:65"><expr pos:start="81:58" pos:end="81:65"><name pos:start="81:58" pos:end="81:65"><name pos:start="81:58" pos:end="81:60">dev</name><operator pos:start="81:61" pos:end="81:62">-&gt;</operator><name pos:start="81:63" pos:end="81:65">lun</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="87:9"><if pos:start="83:9" pos:end="87:9">if <condition pos:start="83:12" pos:end="83:43">(<expr pos:start="83:13" pos:end="83:42"><name pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:15">dev</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:20">lun</name></name> <operator pos:start="83:22" pos:end="83:23">==</operator> <name pos:start="83:25" pos:end="83:30"><name pos:start="83:25" pos:end="83:25">d</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:30">lun</name></name> <operator pos:start="83:32" pos:end="83:33">&amp;&amp;</operator> <name pos:start="83:35" pos:end="83:37">dev</name> <operator pos:start="83:39" pos:end="83:40">!=</operator> <name pos:start="83:42" pos:end="83:42">d</name></expr>)</condition> <block pos:start="83:45" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:32">

            <expr_stmt pos:start="85:13" pos:end="85:32"><expr pos:start="85:13" pos:end="85:31"><call pos:start="85:13" pos:end="85:31"><name pos:start="85:13" pos:end="85:21">qdev_free</name><argument_list pos:start="85:22" pos:end="85:31">(<argument pos:start="85:23" pos:end="85:30"><expr pos:start="85:23" pos:end="85:30"><operator pos:start="85:23" pos:end="85:23">&amp;</operator><name pos:start="85:24" pos:end="85:30"><name pos:start="85:24" pos:end="85:24">d</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:30">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:32"><expr pos:start="93:5" pos:end="93:31"><call pos:start="93:5" pos:end="93:31"><name pos:start="93:5" pos:end="93:15">QTAILQ_INIT</name><argument_list pos:start="93:16" pos:end="93:31">(<argument pos:start="93:17" pos:end="93:30"><expr pos:start="93:17" pos:end="93:30"><operator pos:start="93:17" pos:end="93:17">&amp;</operator><name pos:start="93:18" pos:end="93:30"><name pos:start="93:18" pos:end="93:20">dev</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:30">requests</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:31"><expr pos:start="95:5" pos:end="95:30"><name pos:start="95:5" pos:end="95:6">rc</name> <operator pos:start="95:8" pos:end="95:8">=</operator> <call pos:start="95:10" pos:end="95:30"><name pos:start="95:10" pos:end="95:25">scsi_device_init</name><argument_list pos:start="95:26" pos:end="95:30">(<argument pos:start="95:27" pos:end="95:29"><expr pos:start="95:27" pos:end="95:29"><name pos:start="95:27" pos:end="95:29">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="103:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:16">(<expr pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:10">rc</name> <operator pos:start="97:12" pos:end="97:13">==</operator> <literal type="number" pos:start="97:15" pos:end="97:15">0</literal></expr>)</condition> <block pos:start="97:18" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:62">

        <expr_stmt pos:start="99:9" pos:end="101:62"><expr pos:start="99:9" pos:end="101:61"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:11">dev</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:21">vmsentry</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <call pos:start="99:25" pos:end="101:61"><name pos:start="99:25" pos:end="99:56">qemu_add_vm_change_state_handler</name><argument_list pos:start="99:57" pos:end="101:61">(<argument pos:start="99:58" pos:end="99:76"><expr pos:start="99:58" pos:end="99:76"><name pos:start="99:58" pos:end="99:76">scsi_dma_restart_cb</name></expr></argument>,

                                                         <argument pos:start="101:58" pos:end="101:60"><expr pos:start="101:58" pos:end="101:60"><name pos:start="101:58" pos:end="101:60">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="107:1" pos:end="107:4"><name pos:start="107:1" pos:end="107:3">err</name>:</label>

    <return pos:start="109:5" pos:end="109:14">return <expr pos:start="109:12" pos:end="109:13"><name pos:start="109:12" pos:end="109:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
