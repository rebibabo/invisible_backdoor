<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3280.c" pos:tabs="8"><function pos:start="1:1" pos:end="74:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">spapr_cpu_core_realize</name><parameter_list pos:start="1:35" pos:end="1:66">(<parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:46">DeviceState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dev</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:58">Error</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="74:1">{<block_content pos:start="5:5" pos:end="72:37">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">sPAPRCPUCore</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">sc</name> <init pos:start="5:22" pos:end="5:50">= <expr pos:start="5:24" pos:end="5:50"><call pos:start="5:24" pos:end="5:50"><name pos:start="5:24" pos:end="5:37">SPAPR_CPU_CORE</name><argument_list pos:start="5:38" pos:end="5:50">(<argument pos:start="5:39" pos:end="5:49"><expr pos:start="5:39" pos:end="5:49"><call pos:start="5:39" pos:end="5:49"><name pos:start="5:39" pos:end="5:44">OBJECT</name><argument_list pos:start="5:45" pos:end="5:49">(<argument pos:start="5:46" pos:end="5:48"><expr pos:start="5:46" pos:end="5:48"><name pos:start="5:46" pos:end="5:48">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">CPUCore</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:15">cc</name> <init pos:start="7:17" pos:end="7:39">= <expr pos:start="7:19" pos:end="7:39"><call pos:start="7:19" pos:end="7:39"><name pos:start="7:19" pos:end="7:26">CPU_CORE</name><argument_list pos:start="7:27" pos:end="7:39">(<argument pos:start="7:28" pos:end="7:38"><expr pos:start="7:28" pos:end="7:38"><call pos:start="7:28" pos:end="7:38"><name pos:start="7:28" pos:end="7:33">OBJECT</name><argument_list pos:start="7:34" pos:end="7:38">(<argument pos:start="7:35" pos:end="7:37"><expr pos:start="7:35" pos:end="7:37"><name pos:start="7:35" pos:end="7:37">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:64"><decl pos:start="9:5" pos:end="9:63"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">typename</name> <init pos:start="9:26" pos:end="9:63">= <expr pos:start="9:28" pos:end="9:63"><call pos:start="9:28" pos:end="9:63"><name pos:start="9:28" pos:end="9:48">object_class_get_name</name><argument_list pos:start="9:49" pos:end="9:63">(<argument pos:start="9:50" pos:end="9:62"><expr pos:start="9:50" pos:end="9:62"><name pos:start="9:50" pos:end="9:62"><name pos:start="9:50" pos:end="9:51">sc</name><operator pos:start="9:52" pos:end="9:53">-&gt;</operator><name pos:start="9:54" pos:end="9:62">cpu_class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:58"><decl pos:start="11:5" pos:end="11:57"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:15">size</name> <init pos:start="11:17" pos:end="11:57">= <expr pos:start="11:19" pos:end="11:57"><call pos:start="11:19" pos:end="11:57"><name pos:start="11:19" pos:end="11:47">object_type_get_instance_size</name><argument_list pos:start="11:48" pos:end="11:57">(<argument pos:start="11:49" pos:end="11:56"><expr pos:start="11:49" pos:end="11:56"><name pos:start="11:49" pos:end="11:56">typename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:20">local_err</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:10">Object</name> <modifier pos:start="15:12" pos:end="15:12">*</modifier></type><name pos:start="15:13" pos:end="15:15">obj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:6">sc</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:15">threads</name></name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:50"><name pos:start="21:19" pos:end="21:27">g_malloc0</name><argument_list pos:start="21:28" pos:end="21:50">(<argument pos:start="21:29" pos:end="21:49"><expr pos:start="21:29" pos:end="21:49"><name pos:start="21:29" pos:end="21:32">size</name> <operator pos:start="21:34" pos:end="21:34">*</operator> <name pos:start="21:36" pos:end="21:49"><name pos:start="21:36" pos:end="21:37">cc</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:49">nr_threads</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="44:5">for <control pos:start="23:9" pos:end="23:40">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:35"><expr pos:start="23:17" pos:end="23:34"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:34"><name pos:start="23:21" pos:end="23:22">cc</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:34">nr_threads</name></name></expr>;</condition> <incr pos:start="23:37" pos:end="23:39"><expr pos:start="23:37" pos:end="23:39"><name pos:start="23:37" pos:end="23:37">i</name><operator pos:start="23:38" pos:end="23:39">++</operator></expr></incr>)</control> <block pos:start="23:42" pos:end="44:5">{<block_content pos:start="25:9" pos:end="41:9">

        <decl_stmt pos:start="25:9" pos:end="25:20"><decl pos:start="25:9" pos:end="25:19"><type pos:start="25:9" pos:end="25:12"><name pos:start="25:9" pos:end="25:12">char</name></type> <name pos:start="25:14" pos:end="25:19"><name pos:start="25:14" pos:end="25:15">id</name><index pos:start="25:16" pos:end="25:19">[<expr pos:start="25:17" pos:end="25:18"><literal type="number" pos:start="25:17" pos:end="25:18">32</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:43"><decl pos:start="27:9" pos:end="27:42"><type pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:12">void</name> <modifier pos:start="27:14" pos:end="27:14">*</modifier></type><name pos:start="27:15" pos:end="27:17">obj</name> <init pos:start="27:19" pos:end="27:42">= <expr pos:start="27:21" pos:end="27:42"><name pos:start="27:21" pos:end="27:31"><name pos:start="27:21" pos:end="27:22">sc</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:31">threads</name></name> <operator pos:start="27:33" pos:end="27:33">+</operator> <name pos:start="27:35" pos:end="27:35">i</name> <operator pos:start="27:37" pos:end="27:37">*</operator> <name pos:start="27:39" pos:end="27:42">size</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><call pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:25">object_initialize</name><argument_list pos:start="31:26" pos:end="31:46">(<argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">obj</name></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35">size</name></expr></argument>, <argument pos:start="31:38" pos:end="31:45"><expr pos:start="31:38" pos:end="31:45"><name pos:start="31:38" pos:end="31:45">typename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:50"><expr pos:start="33:9" pos:end="33:49"><call pos:start="33:9" pos:end="33:49"><name pos:start="33:9" pos:end="33:16">snprintf</name><argument_list pos:start="33:17" pos:end="33:49">(<argument pos:start="33:18" pos:end="33:19"><expr pos:start="33:18" pos:end="33:19"><name pos:start="33:18" pos:end="33:19">id</name></expr></argument>, <argument pos:start="33:22" pos:end="33:31"><expr pos:start="33:22" pos:end="33:31"><sizeof pos:start="33:22" pos:end="33:31">sizeof<argument_list pos:start="33:28" pos:end="33:31">(<argument pos:start="33:29" pos:end="33:30"><expr pos:start="33:29" pos:end="33:30"><name pos:start="33:29" pos:end="33:30">id</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:34" pos:end="33:45"><expr pos:start="33:34" pos:end="33:45"><literal type="string" pos:start="33:34" pos:end="33:45">"thread[%d]"</literal></expr></argument>, <argument pos:start="33:48" pos:end="33:48"><expr pos:start="33:48" pos:end="33:48"><name pos:start="33:48" pos:end="33:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:67"><expr pos:start="35:9" pos:end="35:66"><call pos:start="35:9" pos:end="35:66"><name pos:start="35:9" pos:end="35:33">object_property_add_child</name><argument_list pos:start="35:34" pos:end="35:66">(<argument pos:start="35:35" pos:end="35:44"><expr pos:start="35:35" pos:end="35:44"><call pos:start="35:35" pos:end="35:44"><name pos:start="35:35" pos:end="35:40">OBJECT</name><argument_list pos:start="35:41" pos:end="35:44">(<argument pos:start="35:42" pos:end="35:43"><expr pos:start="35:42" pos:end="35:43"><name pos:start="35:42" pos:end="35:43">sc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:47" pos:end="35:48"><expr pos:start="35:47" pos:end="35:48"><name pos:start="35:47" pos:end="35:48">id</name></expr></argument>, <argument pos:start="35:51" pos:end="35:53"><expr pos:start="35:51" pos:end="35:53"><name pos:start="35:51" pos:end="35:53">obj</name></expr></argument>, <argument pos:start="35:56" pos:end="35:65"><expr pos:start="35:56" pos:end="35:65"><operator pos:start="35:56" pos:end="35:56">&amp;</operator><name pos:start="35:57" pos:end="35:65">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:22">(<expr pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:21">local_err</name></expr>)</condition> <block pos:start="37:24" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:21">

            <goto pos:start="39:13" pos:end="39:21">goto <name pos:start="39:18" pos:end="39:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>


    </block_content>}</block></for>

    <expr_stmt pos:start="46:5" pos:end="46:80"><expr pos:start="46:5" pos:end="46:79"><call pos:start="46:5" pos:end="46:79"><name pos:start="46:5" pos:end="46:24">object_child_foreach</name><argument_list pos:start="46:25" pos:end="46:79">(<argument pos:start="46:26" pos:end="46:36"><expr pos:start="46:26" pos:end="46:36"><call pos:start="46:26" pos:end="46:36"><name pos:start="46:26" pos:end="46:31">OBJECT</name><argument_list pos:start="46:32" pos:end="46:36">(<argument pos:start="46:33" pos:end="46:35"><expr pos:start="46:33" pos:end="46:35"><name pos:start="46:33" pos:end="46:35">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="46:39" pos:end="46:66"><expr pos:start="46:39" pos:end="46:66"><name pos:start="46:39" pos:end="46:66">spapr_cpu_core_realize_child</name></expr></argument>, <argument pos:start="46:69" pos:end="46:78"><expr pos:start="46:69" pos:end="46:78"><operator pos:start="46:69" pos:end="46:69">&amp;</operator><name pos:start="46:70" pos:end="46:78">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="48:5" pos:end="56:5"><if pos:start="48:5" pos:end="52:5">if <condition pos:start="48:8" pos:end="48:18">(<expr pos:start="48:9" pos:end="48:17"><name pos:start="48:9" pos:end="48:17">local_err</name></expr>)</condition> <block pos:start="48:20" pos:end="52:5">{<block_content pos:start="50:9" pos:end="50:17">

        <goto pos:start="50:9" pos:end="50:17">goto <name pos:start="50:14" pos:end="50:16">err</name>;</goto>

    </block_content>}</block></if> <else pos:start="52:7" pos:end="56:5">else <block pos:start="52:12" pos:end="56:5">{<block_content pos:start="54:9" pos:end="54:15">

        <return pos:start="54:9" pos:end="54:15">return;</return>

    </block_content>}</block></else></if_stmt>



<label pos:start="60:1" pos:end="60:4"><name pos:start="60:1" pos:end="60:3">err</name>:</label>

    <while pos:start="62:5" pos:end="68:5">while <condition pos:start="62:11" pos:end="62:20">(<expr pos:start="62:12" pos:end="62:19"><operator pos:start="62:12" pos:end="62:13">--</operator><name pos:start="62:14" pos:end="62:14">i</name> <operator pos:start="62:16" pos:end="62:17">&gt;=</operator> <literal type="number" pos:start="62:19" pos:end="62:19">0</literal></expr>)</condition> <block pos:start="62:22" pos:end="68:5">{<block_content pos:start="64:9" pos:end="66:29">

        <expr_stmt pos:start="64:9" pos:end="64:37"><expr pos:start="64:9" pos:end="64:36"><name pos:start="64:9" pos:end="64:11">obj</name> <operator pos:start="64:13" pos:end="64:13">=</operator> <name pos:start="64:15" pos:end="64:25"><name pos:start="64:15" pos:end="64:16">sc</name><operator pos:start="64:17" pos:end="64:18">-&gt;</operator><name pos:start="64:19" pos:end="64:25">threads</name></name> <operator pos:start="64:27" pos:end="64:27">+</operator> <name pos:start="64:29" pos:end="64:29">i</name> <operator pos:start="64:31" pos:end="64:31">*</operator> <name pos:start="64:33" pos:end="64:36">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="66:9" pos:end="66:29"><expr pos:start="66:9" pos:end="66:28"><call pos:start="66:9" pos:end="66:28"><name pos:start="66:9" pos:end="66:23">object_unparent</name><argument_list pos:start="66:24" pos:end="66:28">(<argument pos:start="66:25" pos:end="66:27"><expr pos:start="66:25" pos:end="66:27"><name pos:start="66:25" pos:end="66:27">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="70:5" pos:end="70:24"><expr pos:start="70:5" pos:end="70:23"><call pos:start="70:5" pos:end="70:23"><name pos:start="70:5" pos:end="70:10">g_free</name><argument_list pos:start="70:11" pos:end="70:23">(<argument pos:start="70:12" pos:end="70:22"><expr pos:start="70:12" pos:end="70:22"><name pos:start="70:12" pos:end="70:22"><name pos:start="70:12" pos:end="70:13">sc</name><operator pos:start="70:14" pos:end="70:15">-&gt;</operator><name pos:start="70:16" pos:end="70:22">threads</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="72:5" pos:end="72:37"><expr pos:start="72:5" pos:end="72:36"><call pos:start="72:5" pos:end="72:36"><name pos:start="72:5" pos:end="72:19">error_propagate</name><argument_list pos:start="72:20" pos:end="72:36">(<argument pos:start="72:21" pos:end="72:24"><expr pos:start="72:21" pos:end="72:24"><name pos:start="72:21" pos:end="72:24">errp</name></expr></argument>, <argument pos:start="72:27" pos:end="72:35"><expr pos:start="72:27" pos:end="72:35"><name pos:start="72:27" pos:end="72:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
