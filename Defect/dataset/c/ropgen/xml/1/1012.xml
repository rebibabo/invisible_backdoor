<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1012.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">cache_read</name><parameter_list pos:start="1:22" pos:end="1:66">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">URLContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">h</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:45">unsigned</name> <name pos:start="1:47" pos:end="1:50">char</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">buf</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:65"><decl pos:start="1:58" pos:end="1:65"><type pos:start="1:58" pos:end="1:65"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:65">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:13">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">Context</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:14">c</name><init pos:start="5:15" pos:end="5:28">= <expr pos:start="5:17" pos:end="5:28"><name pos:start="5:17" pos:end="5:28"><name pos:start="5:17" pos:end="5:17">h</name><operator pos:start="5:18" pos:end="5:19">-&gt;</operator><name pos:start="5:20" pos:end="5:28">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">CacheEntry</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:21">entry</name></decl>, <decl pos:start="7:24" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:28">next</name><index pos:start="7:29" pos:end="7:31">[<expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">2</literal></expr>]</index></name> <init pos:start="7:33" pos:end="7:46">= <expr pos:start="7:35" pos:end="7:46"><block pos:start="7:35" pos:end="7:46">{<expr pos:start="7:36" pos:end="7:39"><name pos:start="7:36" pos:end="7:39">NULL</name></expr>, <expr pos:start="7:42" pos:end="7:45"><name pos:start="7:42" pos:end="7:45">NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:70"><expr pos:start="13:5" pos:end="13:69"><name pos:start="13:5" pos:end="13:9">entry</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:69"><name pos:start="13:13" pos:end="13:24">av_tree_find</name><argument_list pos:start="13:25" pos:end="13:69">(<argument pos:start="13:26" pos:end="13:32"><expr pos:start="13:26" pos:end="13:32"><name pos:start="13:26" pos:end="13:32"><name pos:start="13:26" pos:end="13:26">c</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:32">root</name></name></expr></argument>, <argument pos:start="13:35" pos:end="13:49"><expr pos:start="13:35" pos:end="13:49"><operator pos:start="13:35" pos:end="13:35">&amp;</operator><name pos:start="13:36" pos:end="13:49"><name pos:start="13:36" pos:end="13:36">c</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:49">logical_pos</name></name></expr></argument>, <argument pos:start="13:52" pos:end="13:54"><expr pos:start="13:52" pos:end="13:54"><name pos:start="13:52" pos:end="13:54">cmp</name></expr></argument>, <argument pos:start="13:57" pos:end="13:68"><expr pos:start="13:57" pos:end="13:68"><operator pos:start="13:57" pos:end="13:57">(</operator><name pos:start="13:58" pos:end="13:61">void</name><operator pos:start="13:62" pos:end="13:62">*</operator><operator pos:start="13:63" pos:end="13:63">*</operator><operator pos:start="13:64" pos:end="13:64">)</operator><name pos:start="13:65" pos:end="13:68">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="19:24"><if pos:start="17:5" pos:end="19:24">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:14">entry</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:24"><block_content pos:start="19:9" pos:end="19:24">

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:13">entry</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:20">next</name><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="69:5"><if pos:start="23:5" pos:end="69:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:13">entry</name></expr>)</condition> <block pos:start="23:16" pos:end="69:5">{<block_content pos:start="25:9" pos:end="67:9">

        <decl_stmt pos:start="25:9" pos:end="25:67"><decl pos:start="25:9" pos:end="25:66"><type pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:15">int64_t</name></type> <name pos:start="25:17" pos:end="25:28">in_block_pos</name> <init pos:start="25:30" pos:end="25:66">= <expr pos:start="25:32" pos:end="25:66"><name pos:start="25:32" pos:end="25:45"><name pos:start="25:32" pos:end="25:32">c</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:45">logical_pos</name></name> <operator pos:start="25:47" pos:end="25:47">-</operator> <name pos:start="25:49" pos:end="25:66"><name pos:start="25:49" pos:end="25:53">entry</name><operator pos:start="25:54" pos:end="25:55">-&gt;</operator><name pos:start="25:56" pos:end="25:66">logical_pos</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:57"><expr pos:start="27:9" pos:end="27:56"><call pos:start="27:9" pos:end="27:56"><name pos:start="27:9" pos:end="27:18">av_assert0</name><argument_list pos:start="27:19" pos:end="27:56">(<argument pos:start="27:20" pos:end="27:55"><expr pos:start="27:20" pos:end="27:55"><name pos:start="27:20" pos:end="27:37"><name pos:start="27:20" pos:end="27:24">entry</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:37">logical_pos</name></name> <operator pos:start="27:39" pos:end="27:40">&lt;=</operator> <name pos:start="27:42" pos:end="27:55"><name pos:start="27:42" pos:end="27:42">c</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:55">logical_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="67:9"><if pos:start="29:9" pos:end="67:9">if <condition pos:start="29:12" pos:end="29:39">(<expr pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:24">in_block_pos</name> <operator pos:start="29:26" pos:end="29:26">&lt;</operator> <name pos:start="29:28" pos:end="29:38"><name pos:start="29:28" pos:end="29:32">entry</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:38">size</name></name></expr>)</condition> <block pos:start="29:41" pos:end="67:9">{<block_content pos:start="31:13" pos:end="65:13">

            <decl_stmt pos:start="31:13" pos:end="31:73"><decl pos:start="31:13" pos:end="31:72"><type pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:19">int64_t</name></type> <name pos:start="31:21" pos:end="31:35">physical_target</name> <init pos:start="31:37" pos:end="31:72">= <expr pos:start="31:39" pos:end="31:72"><name pos:start="31:39" pos:end="31:57"><name pos:start="31:39" pos:end="31:43">entry</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:57">physical_pos</name></name> <operator pos:start="31:59" pos:end="31:59">+</operator> <name pos:start="31:61" pos:end="31:72">in_block_pos</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="35:13" pos:end="41:33"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:48">(<expr pos:start="35:17" pos:end="35:47"><name pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:17">c</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:28">cache_pos</name></name> <operator pos:start="35:30" pos:end="35:31">!=</operator> <name pos:start="35:33" pos:end="35:47">physical_target</name></expr>)</condition> <block pos:start="35:50" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:60">

                <expr_stmt pos:start="37:17" pos:end="37:60"><expr pos:start="37:17" pos:end="37:59"><name pos:start="37:17" pos:end="37:17">r</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:59"><name pos:start="37:21" pos:end="37:25">lseek</name><argument_list pos:start="37:26" pos:end="37:59">(<argument pos:start="37:27" pos:end="37:31"><expr pos:start="37:27" pos:end="37:31"><name pos:start="37:27" pos:end="37:31"><name pos:start="37:27" pos:end="37:27">c</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:31">fd</name></name></expr></argument>, <argument pos:start="37:34" pos:end="37:48"><expr pos:start="37:34" pos:end="37:48"><name pos:start="37:34" pos:end="37:48">physical_target</name></expr></argument>, <argument pos:start="37:51" pos:end="37:58"><expr pos:start="37:51" pos:end="37:58"><name pos:start="37:51" pos:end="37:58">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="39:15" pos:end="41:33">else<block type="pseudo" pos:start="41:17" pos:end="41:33"><block_content pos:start="41:17" pos:end="41:33">

                <expr_stmt pos:start="41:17" pos:end="41:33"><expr pos:start="41:17" pos:end="41:32"><name pos:start="41:17" pos:end="41:17">r</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:32"><name pos:start="41:21" pos:end="41:21">c</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:32">cache_pos</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="45:13" pos:end="51:13"><if pos:start="45:13" pos:end="51:13">if <condition pos:start="45:16" pos:end="45:23">(<expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:17">r</name> <operator pos:start="45:19" pos:end="45:20">&gt;=</operator> <literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>)</condition> <block pos:start="45:25" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:78">

                <expr_stmt pos:start="47:17" pos:end="47:33"><expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:17">c</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:28">cache_pos</name></name> <operator pos:start="47:30" pos:end="47:30">=</operator> <name pos:start="47:32" pos:end="47:32">r</name></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:78"><expr pos:start="49:17" pos:end="49:77"><name pos:start="49:17" pos:end="49:17">r</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="49:77"><name pos:start="49:21" pos:end="49:24">read</name><argument_list pos:start="49:25" pos:end="49:77">(<argument pos:start="49:26" pos:end="49:30"><expr pos:start="49:26" pos:end="49:30"><name pos:start="49:26" pos:end="49:30"><name pos:start="49:26" pos:end="49:26">c</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:30">fd</name></name></expr></argument>, <argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:35">buf</name></expr></argument>, <argument pos:start="49:38" pos:end="49:76"><expr pos:start="49:38" pos:end="49:76"><call pos:start="49:38" pos:end="49:76"><name pos:start="49:38" pos:end="49:42">FFMIN</name><argument_list pos:start="49:43" pos:end="49:76">(<argument pos:start="49:44" pos:end="49:47"><expr pos:start="49:44" pos:end="49:47"><name pos:start="49:44" pos:end="49:47">size</name></expr></argument>, <argument pos:start="49:50" pos:end="49:75"><expr pos:start="49:50" pos:end="49:75"><name pos:start="49:50" pos:end="49:60"><name pos:start="49:50" pos:end="49:54">entry</name><operator pos:start="49:55" pos:end="49:56">-&gt;</operator><name pos:start="49:57" pos:end="49:60">size</name></name> <operator pos:start="49:62" pos:end="49:62">-</operator> <name pos:start="49:64" pos:end="49:75">in_block_pos</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="55:13" pos:end="65:13"><if pos:start="55:13" pos:end="65:13">if <condition pos:start="55:16" pos:end="55:22">(<expr pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:17">r</name> <operator pos:start="55:19" pos:end="55:19">&gt;</operator> <literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>)</condition> <block pos:start="55:24" pos:end="65:13">{<block_content pos:start="57:17" pos:end="63:25">

                <expr_stmt pos:start="57:17" pos:end="57:34"><expr pos:start="57:17" pos:end="57:33"><name pos:start="57:17" pos:end="57:28"><name pos:start="57:17" pos:end="57:17">c</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:28">cache_pos</name></name> <operator pos:start="57:30" pos:end="57:31">+=</operator> <name pos:start="57:33" pos:end="57:33">r</name></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:36"><expr pos:start="59:17" pos:end="59:35"><name pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:17">c</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:30">logical_pos</name></name> <operator pos:start="59:32" pos:end="59:33">+=</operator> <name pos:start="59:35" pos:end="59:35">r</name></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:32"><expr pos:start="61:17" pos:end="61:31"><name pos:start="61:17" pos:end="61:28"><name pos:start="61:17" pos:end="61:17">c</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:28">cache_hit</name></name> <operator pos:start="61:30" pos:end="61:31">++</operator></expr>;</expr_stmt>

                <return pos:start="63:17" pos:end="63:25">return <expr pos:start="63:24" pos:end="63:24"><name pos:start="63:24" pos:end="63:24">r</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="73:5" pos:end="73:54">// Cache miss or some kind of fault with the cache</comment>



    <if_stmt pos:start="77:5" pos:end="91:5"><if pos:start="77:5" pos:end="91:5">if <condition pos:start="77:8" pos:end="77:39">(<expr pos:start="77:9" pos:end="77:38"><name pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:9">c</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:22">logical_pos</name></name> <operator pos:start="77:24" pos:end="77:25">!=</operator> <name pos:start="77:27" pos:end="77:38"><name pos:start="77:27" pos:end="77:27">c</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:38">inner_pos</name></name></expr>)</condition> <block pos:start="77:41" pos:end="91:5">{<block_content pos:start="79:9" pos:end="89:25">

        <expr_stmt pos:start="79:9" pos:end="79:59"><expr pos:start="79:9" pos:end="79:58"><name pos:start="79:9" pos:end="79:9">r</name> <operator pos:start="79:11" pos:end="79:11">=</operator> <call pos:start="79:13" pos:end="79:58"><name pos:start="79:13" pos:end="79:22">ffurl_seek</name><argument_list pos:start="79:23" pos:end="79:58">(<argument pos:start="79:24" pos:end="79:31"><expr pos:start="79:24" pos:end="79:31"><name pos:start="79:24" pos:end="79:31"><name pos:start="79:24" pos:end="79:24">c</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:31">inner</name></name></expr></argument>, <argument pos:start="79:34" pos:end="79:47"><expr pos:start="79:34" pos:end="79:47"><name pos:start="79:34" pos:end="79:47"><name pos:start="79:34" pos:end="79:34">c</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:47">logical_pos</name></name></expr></argument>, <argument pos:start="79:50" pos:end="79:57"><expr pos:start="79:50" pos:end="79:57"><name pos:start="79:50" pos:end="79:57">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:16">(<expr pos:start="81:13" pos:end="81:15"><name pos:start="81:13" pos:end="81:13">r</name><operator pos:start="81:14" pos:end="81:14">&lt;</operator><literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr>)</condition> <block pos:start="81:18" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:21">

            <expr_stmt pos:start="83:13" pos:end="83:73"><expr pos:start="83:13" pos:end="83:72"><call pos:start="83:13" pos:end="83:72"><name pos:start="83:13" pos:end="83:18">av_log</name><argument_list pos:start="83:19" pos:end="83:72">(<argument pos:start="83:20" pos:end="83:20"><expr pos:start="83:20" pos:end="83:20"><name pos:start="83:20" pos:end="83:20">h</name></expr></argument>, <argument pos:start="83:23" pos:end="83:34"><expr pos:start="83:23" pos:end="83:34"><name pos:start="83:23" pos:end="83:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:37" pos:end="83:71"><expr pos:start="83:37" pos:end="83:71"><literal type="string" pos:start="83:37" pos:end="83:71">"Failed to perform internal seek\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="85:13" pos:end="85:21">return <expr pos:start="85:20" pos:end="85:20"><name pos:start="85:20" pos:end="85:20">r</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:25"><expr pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:9">c</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:20">inner_pos</name></name> <operator pos:start="89:22" pos:end="89:22">=</operator> <name pos:start="89:24" pos:end="89:24">r</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:40"><expr pos:start="95:5" pos:end="95:39"><name pos:start="95:5" pos:end="95:5">r</name> <operator pos:start="95:7" pos:end="95:7">=</operator> <call pos:start="95:9" pos:end="95:39"><name pos:start="95:9" pos:end="95:18">ffurl_read</name><argument_list pos:start="95:19" pos:end="95:39">(<argument pos:start="95:20" pos:end="95:27"><expr pos:start="95:20" pos:end="95:27"><name pos:start="95:20" pos:end="95:27"><name pos:start="95:20" pos:end="95:20">c</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:27">inner</name></name></expr></argument>, <argument pos:start="95:30" pos:end="95:32"><expr pos:start="95:30" pos:end="95:32"><name pos:start="95:30" pos:end="95:32">buf</name></expr></argument>, <argument pos:start="95:35" pos:end="95:38"><expr pos:start="95:35" pos:end="95:38"><name pos:start="95:35" pos:end="95:38">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="103:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:25">(<expr pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:9">r</name> <operator pos:start="97:11" pos:end="97:12">==</operator> <literal type="number" pos:start="97:14" pos:end="97:14">0</literal> <operator pos:start="97:16" pos:end="97:17">&amp;&amp;</operator> <name pos:start="97:19" pos:end="97:22">size</name><operator pos:start="97:23" pos:end="97:23">&gt;</operator><literal type="number" pos:start="97:24" pos:end="97:24">0</literal></expr>)</condition> <block pos:start="97:27" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:45">

        <expr_stmt pos:start="99:9" pos:end="99:27"><expr pos:start="99:9" pos:end="99:26"><name pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:9">c</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:22">is_true_eof</name></name> <operator pos:start="99:24" pos:end="99:24">=</operator> <literal type="number" pos:start="99:26" pos:end="99:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:45"><expr pos:start="101:9" pos:end="101:44"><call pos:start="101:9" pos:end="101:44"><name pos:start="101:9" pos:end="101:18">av_assert0</name><argument_list pos:start="101:19" pos:end="101:44">(<argument pos:start="101:20" pos:end="101:43"><expr pos:start="101:20" pos:end="101:43"><name pos:start="101:20" pos:end="101:25"><name pos:start="101:20" pos:end="101:20">c</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:25">end</name></name> <operator pos:start="101:27" pos:end="101:28">&gt;=</operator> <name pos:start="101:30" pos:end="101:43"><name pos:start="101:30" pos:end="101:30">c</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:43">logical_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="105:5" pos:end="107:17"><if pos:start="105:5" pos:end="107:17">if <condition pos:start="105:8" pos:end="105:13">(<expr pos:start="105:9" pos:end="105:12"><name pos:start="105:9" pos:end="105:9">r</name><operator pos:start="105:10" pos:end="105:11">&lt;=</operator><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:17"><block_content pos:start="107:9" pos:end="107:17">

        <return pos:start="107:9" pos:end="107:17">return <expr pos:start="107:16" pos:end="107:16"><name pos:start="107:16" pos:end="107:16">r</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:22"><expr pos:start="109:5" pos:end="109:21"><name pos:start="109:5" pos:end="109:16"><name pos:start="109:5" pos:end="109:5">c</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:16">inner_pos</name></name> <operator pos:start="109:18" pos:end="109:19">+=</operator> <name pos:start="109:21" pos:end="109:21">r</name></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:21"><expr pos:start="113:5" pos:end="113:20"><name pos:start="113:5" pos:end="113:17"><name pos:start="113:5" pos:end="113:5">c</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:17">cache_miss</name></name> <operator pos:start="113:19" pos:end="113:20">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:25"><expr pos:start="117:5" pos:end="117:24"><call pos:start="117:5" pos:end="117:24"><name pos:start="117:5" pos:end="117:13">add_entry</name><argument_list pos:start="117:14" pos:end="117:24">(<argument pos:start="117:15" pos:end="117:15"><expr pos:start="117:15" pos:end="117:15"><name pos:start="117:15" pos:end="117:15">h</name></expr></argument>, <argument pos:start="117:18" pos:end="117:20"><expr pos:start="117:18" pos:end="117:20"><name pos:start="117:18" pos:end="117:20">buf</name></expr></argument>, <argument pos:start="117:23" pos:end="117:23"><expr pos:start="117:23" pos:end="117:23"><name pos:start="117:23" pos:end="117:23">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:24"><expr pos:start="119:5" pos:end="119:23"><name pos:start="119:5" pos:end="119:18"><name pos:start="119:5" pos:end="119:5">c</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:18">logical_pos</name></name> <operator pos:start="119:20" pos:end="119:21">+=</operator> <name pos:start="119:23" pos:end="119:23">r</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:43"><expr pos:start="121:5" pos:end="121:42"><name pos:start="121:5" pos:end="121:10"><name pos:start="121:5" pos:end="121:5">c</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:10">end</name></name> <operator pos:start="121:12" pos:end="121:12">=</operator> <call pos:start="121:14" pos:end="121:42"><name pos:start="121:14" pos:end="121:18">FFMAX</name><argument_list pos:start="121:19" pos:end="121:42">(<argument pos:start="121:20" pos:end="121:25"><expr pos:start="121:20" pos:end="121:25"><name pos:start="121:20" pos:end="121:25"><name pos:start="121:20" pos:end="121:20">c</name><operator pos:start="121:21" pos:end="121:22">-&gt;</operator><name pos:start="121:23" pos:end="121:25">end</name></name></expr></argument>, <argument pos:start="121:28" pos:end="121:41"><expr pos:start="121:28" pos:end="121:41"><name pos:start="121:28" pos:end="121:41"><name pos:start="121:28" pos:end="121:28">c</name><operator pos:start="121:29" pos:end="121:30">-&gt;</operator><name pos:start="121:31" pos:end="121:41">logical_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><name pos:start="125:12" pos:end="125:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
