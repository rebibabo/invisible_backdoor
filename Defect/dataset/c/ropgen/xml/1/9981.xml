<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9981.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="1:92">(<parameter pos:start="1:25" pos:end="1:46"><decl pos:start="1:25" pos:end="1:46"><type pos:start="1:25" pos:end="1:46"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:58"><decl pos:start="1:49" pos:end="1:58"><type pos:start="1:49" pos:end="1:58"><name pos:start="1:49" pos:end="1:52">void</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">data</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:74"><decl pos:start="1:61" pos:end="1:74"><type pos:start="1:61" pos:end="1:74"><name pos:start="1:61" pos:end="1:63">int</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:74">data_size</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:91"><decl pos:start="1:77" pos:end="1:91"><type pos:start="1:77" pos:end="1:91"><name pos:start="1:77" pos:end="1:84">AVPacket</name> <modifier pos:start="1:86" pos:end="1:86">*</modifier></type><name pos:start="1:87" pos:end="1:91">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:20">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">buf_size</name> <init pos:start="7:18" pos:end="7:30">= <expr pos:start="7:20" pos:end="7:30"><name pos:start="7:20" pos:end="7:30"><name pos:start="7:20" pos:end="7:24">avpkt</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:15">KmvcContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier><specifier pos:start="9:18" pos:end="9:22">const</specifier></type> <name pos:start="9:24" pos:end="9:26">ctx</name> <init pos:start="9:28" pos:end="9:45">= <expr pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">out</name></decl>, <decl pos:start="11:19" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">blocksize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:83"><decl pos:start="19:5" pos:end="19:82"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">uint8_t</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:22">pal</name> <init pos:start="19:24" pos:end="19:82">= <expr pos:start="19:26" pos:end="19:82"><call pos:start="19:26" pos:end="19:82"><name pos:start="19:26" pos:end="19:48">av_packet_get_side_data</name><argument_list pos:start="19:49" pos:end="19:82">(<argument pos:start="19:50" pos:end="19:54"><expr pos:start="19:50" pos:end="19:54"><name pos:start="19:50" pos:end="19:54">avpkt</name></expr></argument>, <argument pos:start="19:57" pos:end="19:75"><expr pos:start="19:57" pos:end="19:75"><name pos:start="19:57" pos:end="19:75">AV_PKT_DATA_PALETTE</name></expr></argument>, <argument pos:start="19:78" pos:end="19:81"><expr pos:start="19:78" pos:end="19:81"><name pos:start="19:78" pos:end="19:81">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:48"><if pos:start="23:5" pos:end="25:48">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:11">ctx</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:16">pic</name><operator pos:start="23:17" pos:end="23:17">.</operator><name pos:start="23:18" pos:end="23:21">data</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:48"><block_content pos:start="25:9" pos:end="25:48">

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><call pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:29">release_buffer</name></name><argument_list pos:start="25:30" pos:end="25:47">(<argument pos:start="25:31" pos:end="25:35"><expr pos:start="25:31" pos:end="25:35"><name pos:start="25:31" pos:end="25:35">avctx</name></expr></argument>, <argument pos:start="25:38" pos:end="25:46"><expr pos:start="25:38" pos:end="25:46"><operator pos:start="25:38" pos:end="25:38">&amp;</operator><name pos:start="25:39" pos:end="25:46"><name pos:start="25:39" pos:end="25:41">ctx</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:46">pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:7">ctx</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:12">pic</name><operator pos:start="29:13" pos:end="29:13">.</operator><name pos:start="29:14" pos:end="29:22">reference</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:50"><expr pos:start="31:5" pos:end="31:49"><name pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:7">ctx</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:12">pic</name><operator pos:start="31:13" pos:end="31:13">.</operator><name pos:start="31:14" pos:end="31:25">buffer_hints</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:49">FF_BUFFER_HINTS_VALID</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:48">(<expr pos:start="33:9" pos:end="33:47"><call pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:25">get_buffer</name></name><argument_list pos:start="33:26" pos:end="33:43">(<argument pos:start="33:27" pos:end="33:31"><expr pos:start="33:27" pos:end="33:31"><name pos:start="33:27" pos:end="33:31">avctx</name></expr></argument>, <argument pos:start="33:34" pos:end="33:42"><expr pos:start="33:34" pos:end="33:42"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:42"><name pos:start="33:35" pos:end="33:37">ctx</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:42">pic</name></name></expr></argument>)</argument_list></call> <operator pos:start="33:45" pos:end="33:45">&lt;</operator> <literal type="number" pos:start="33:47" pos:end="33:47">0</literal></expr>)</condition> <block pos:start="33:50" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:61"><expr pos:start="35:9" pos:end="35:60"><call pos:start="35:9" pos:end="35:60"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:60">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:37" pos:end="35:59"><expr pos:start="35:37" pos:end="35:59"><literal type="string" pos:start="35:37" pos:end="35:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:20"><expr pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:10">header</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <operator pos:start="43:14" pos:end="43:14">*</operator><name pos:start="43:15" pos:end="43:17">buf</name><operator pos:start="43:18" pos:end="43:19">++</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:54">/* blocksize 127 is really palette change event */</comment>

    <if_stmt pos:start="49:5" pos:end="63:5"><if pos:start="49:5" pos:end="63:5">if <condition pos:start="49:8" pos:end="49:22">(<expr pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:11">buf</name><index pos:start="49:12" pos:end="49:14">[<expr pos:start="49:13" pos:end="49:13"><literal type="number" pos:start="49:13" pos:end="49:13">0</literal></expr>]</index></name> <operator pos:start="49:16" pos:end="49:17">==</operator> <literal type="number" pos:start="49:19" pos:end="49:21">127</literal></expr>)</condition> <block pos:start="49:24" pos:end="63:5">{<block_content pos:start="51:9" pos:end="61:27">

        <expr_stmt pos:start="51:9" pos:end="51:17"><expr pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:11">buf</name> <operator pos:start="51:13" pos:end="51:14">+=</operator> <literal type="number" pos:start="51:16" pos:end="51:16">3</literal></expr>;</expr_stmt>

        <for pos:start="53:9" pos:end="59:9">for <control pos:start="53:13" pos:end="53:33">(<init pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:18"><name pos:start="53:14" pos:end="53:14">i</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr>;</init> <condition pos:start="53:21" pos:end="53:28"><expr pos:start="53:21" pos:end="53:27"><name pos:start="53:21" pos:end="53:21">i</name> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <literal type="number" pos:start="53:25" pos:end="53:27">127</literal></expr>;</condition> <incr pos:start="53:30" pos:end="53:32"><expr pos:start="53:30" pos:end="53:32"><name pos:start="53:30" pos:end="53:30">i</name><operator pos:start="53:31" pos:end="53:32">++</operator></expr></incr>)</control> <block pos:start="53:35" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:21">

            <expr_stmt pos:start="55:13" pos:end="55:57"><expr pos:start="55:13" pos:end="55:56"><name pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:15">ctx</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:20">pal</name><index pos:start="55:21" pos:end="55:41">[<expr pos:start="55:22" pos:end="55:40"><name pos:start="55:22" pos:end="55:22">i</name> <operator pos:start="55:24" pos:end="55:24">+</operator> <operator pos:start="55:26" pos:end="55:26">(</operator><name pos:start="55:27" pos:end="55:32">header</name> <operator pos:start="55:34" pos:end="55:34">&amp;</operator> <literal type="number" pos:start="55:36" pos:end="55:39">0x81</literal><operator pos:start="55:40" pos:end="55:40">)</operator></expr>]</index></name> <operator pos:start="55:43" pos:end="55:43">=</operator> <call pos:start="55:45" pos:end="55:56"><name pos:start="55:45" pos:end="55:51">AV_RB24</name><argument_list pos:start="55:52" pos:end="55:56">(<argument pos:start="55:53" pos:end="55:55"><expr pos:start="55:53" pos:end="55:55"><name pos:start="55:53" pos:end="55:55">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:21"><expr pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:15">buf</name> <operator pos:start="57:17" pos:end="57:18">+=</operator> <literal type="number" pos:start="57:20" pos:end="57:20">4</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="61:9" pos:end="61:27"><expr pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:11">buf</name> <operator pos:start="61:13" pos:end="61:14">-=</operator> <literal type="number" pos:start="61:16" pos:end="61:18">127</literal> <operator pos:start="61:20" pos:end="61:20">*</operator> <literal type="number" pos:start="61:22" pos:end="61:24">4</literal> <operator pos:start="61:24" pos:end="61:24">+</operator> <literal type="number" pos:start="61:26" pos:end="61:26">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="79:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:31">(<expr pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:14">header</name> <operator pos:start="67:16" pos:end="67:16">&amp;</operator> <name pos:start="67:18" pos:end="67:30">KMVC_KEYFRAME</name></expr>)</condition> <block pos:start="67:33" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:47">

        <expr_stmt pos:start="69:9" pos:end="69:31"><expr pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:26"><name pos:start="69:9" pos:end="69:11">ctx</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:16">pic</name><operator pos:start="69:17" pos:end="69:17">.</operator><name pos:start="69:18" pos:end="69:26">key_frame</name></name> <operator pos:start="69:28" pos:end="69:28">=</operator> <literal type="number" pos:start="69:30" pos:end="69:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:47"><expr pos:start="71:9" pos:end="71:46"><name pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:11">ctx</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:16">pic</name><operator pos:start="71:17" pos:end="71:17">.</operator><name pos:start="71:18" pos:end="71:26">pict_type</name></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <name pos:start="71:30" pos:end="71:46">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="73:7" pos:end="79:5">else <block pos:start="73:12" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:47">

        <expr_stmt pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:11">ctx</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:16">pic</name><operator pos:start="75:17" pos:end="75:17">.</operator><name pos:start="75:18" pos:end="75:26">key_frame</name></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <literal type="number" pos:start="75:30" pos:end="75:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:47"><expr pos:start="77:9" pos:end="77:46"><name pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:11">ctx</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:16">pic</name><operator pos:start="77:17" pos:end="77:17">.</operator><name pos:start="77:18" pos:end="77:26">pict_type</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <name pos:start="77:30" pos:end="77:46">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="83:5" pos:end="95:5"><if pos:start="83:5" pos:end="95:5">if <condition pos:start="83:8" pos:end="83:30">(<expr pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:14">header</name> <operator pos:start="83:16" pos:end="83:16">&amp;</operator> <name pos:start="83:18" pos:end="83:29">KMVC_PALETTE</name></expr>)</condition> <block pos:start="83:32" pos:end="95:5">{<block_content pos:start="85:9" pos:end="93:9">

        <expr_stmt pos:start="85:9" pos:end="85:41"><expr pos:start="85:9" pos:end="85:40"><name pos:start="85:9" pos:end="85:36"><name pos:start="85:9" pos:end="85:11">ctx</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:16">pic</name><operator pos:start="85:17" pos:end="85:17">.</operator><name pos:start="85:18" pos:end="85:36">palette_has_changed</name></name> <operator pos:start="85:38" pos:end="85:38">=</operator> <literal type="number" pos:start="85:40" pos:end="85:40">1</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="87:9" pos:end="87:58">// palette starts from index 1 and has 127 entries</comment>

        <for pos:start="89:9" pos:end="93:9">for <control pos:start="89:13" pos:end="89:43">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">i</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">1</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:38"><expr pos:start="89:21" pos:end="89:37"><name pos:start="89:21" pos:end="89:21">i</name> <operator pos:start="89:23" pos:end="89:24">&lt;=</operator> <name pos:start="89:26" pos:end="89:37"><name pos:start="89:26" pos:end="89:28">ctx</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:37">palsize</name></name></expr>;</condition> <incr pos:start="89:40" pos:end="89:42"><expr pos:start="89:40" pos:end="89:42"><name pos:start="89:40" pos:end="89:40">i</name><operator pos:start="89:41" pos:end="89:42">++</operator></expr></incr>)</control> <block pos:start="89:45" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:52">

            <expr_stmt pos:start="91:13" pos:end="91:52"><expr pos:start="91:13" pos:end="91:51"><name pos:start="91:13" pos:end="91:23"><name pos:start="91:13" pos:end="91:15">ctx</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:20">pal</name><index pos:start="91:21" pos:end="91:23">[<expr pos:start="91:22" pos:end="91:22"><name pos:start="91:22" pos:end="91:22">i</name></expr>]</index></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <call pos:start="91:27" pos:end="91:51"><name pos:start="91:27" pos:end="91:45">bytestream_get_be24</name><argument_list pos:start="91:46" pos:end="91:51">(<argument pos:start="91:47" pos:end="91:50"><expr pos:start="91:47" pos:end="91:50"><operator pos:start="91:47" pos:end="91:47">&amp;</operator><name pos:start="91:48" pos:end="91:50">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:12">(<expr pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">pal</name></expr>)</condition> <block pos:start="99:14" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:46">

        <expr_stmt pos:start="101:9" pos:end="101:41"><expr pos:start="101:9" pos:end="101:40"><name pos:start="101:9" pos:end="101:36"><name pos:start="101:9" pos:end="101:11">ctx</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:16">pic</name><operator pos:start="101:17" pos:end="101:17">.</operator><name pos:start="101:18" pos:end="101:36">palette_has_changed</name></name> <operator pos:start="101:38" pos:end="101:38">=</operator> <literal type="number" pos:start="101:40" pos:end="101:40">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:46"><expr pos:start="103:9" pos:end="103:45"><call pos:start="103:9" pos:end="103:45"><name pos:start="103:9" pos:end="103:14">memcpy</name><argument_list pos:start="103:15" pos:end="103:45">(<argument pos:start="103:16" pos:end="103:23"><expr pos:start="103:16" pos:end="103:23"><name pos:start="103:16" pos:end="103:23"><name pos:start="103:16" pos:end="103:18">ctx</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:23">pal</name></name></expr></argument>, <argument pos:start="103:26" pos:end="103:28"><expr pos:start="103:26" pos:end="103:28"><name pos:start="103:26" pos:end="103:28">pal</name></expr></argument>, <argument pos:start="103:31" pos:end="103:44"><expr pos:start="103:31" pos:end="103:44"><name pos:start="103:31" pos:end="103:44">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:20">(<expr pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:11">ctx</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:19">setpal</name></name></expr>)</condition> <block pos:start="109:22" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:41">

        <expr_stmt pos:start="111:9" pos:end="111:24"><expr pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:19"><name pos:start="111:9" pos:end="111:11">ctx</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:19">setpal</name></name> <operator pos:start="111:21" pos:end="111:21">=</operator> <literal type="number" pos:start="111:23" pos:end="111:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:41"><expr pos:start="113:9" pos:end="113:40"><name pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:11">ctx</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:16">pic</name><operator pos:start="113:17" pos:end="113:17">.</operator><name pos:start="113:18" pos:end="113:36">palette_has_changed</name></name> <operator pos:start="113:38" pos:end="113:38">=</operator> <literal type="number" pos:start="113:40" pos:end="113:40">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="119:5" pos:end="119:51">/* make the palette available on the way out */</comment>

    <expr_stmt pos:start="121:5" pos:end="121:45"><expr pos:start="121:5" pos:end="121:44"><call pos:start="121:5" pos:end="121:44"><name pos:start="121:5" pos:end="121:10">memcpy</name><argument_list pos:start="121:11" pos:end="121:44">(<argument pos:start="121:12" pos:end="121:27"><expr pos:start="121:12" pos:end="121:27"><name pos:start="121:12" pos:end="121:27"><name pos:start="121:12" pos:end="121:14">ctx</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:19">pic</name><operator pos:start="121:20" pos:end="121:20">.</operator><name pos:start="121:21" pos:end="121:24">data</name><index pos:start="121:25" pos:end="121:27">[<expr pos:start="121:26" pos:end="121:26"><literal type="number" pos:start="121:26" pos:end="121:26">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="121:30" pos:end="121:37"><expr pos:start="121:30" pos:end="121:37"><name pos:start="121:30" pos:end="121:37"><name pos:start="121:30" pos:end="121:32">ctx</name><operator pos:start="121:33" pos:end="121:34">-&gt;</operator><name pos:start="121:35" pos:end="121:37">pal</name></name></expr></argument>, <argument pos:start="121:40" pos:end="121:43"><expr pos:start="121:40" pos:end="121:43"><literal type="number" pos:start="121:40" pos:end="121:43">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:23"><expr pos:start="125:5" pos:end="125:22"><name pos:start="125:5" pos:end="125:13">blocksize</name> <operator pos:start="125:15" pos:end="125:15">=</operator> <operator pos:start="125:17" pos:end="125:17">*</operator><name pos:start="125:18" pos:end="125:20">buf</name><operator pos:start="125:21" pos:end="125:22">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="129:5" pos:end="135:5"><if pos:start="129:5" pos:end="135:5">if <condition pos:start="129:8" pos:end="129:43">(<expr pos:start="129:9" pos:end="129:42"><name pos:start="129:9" pos:end="129:17">blocksize</name> <operator pos:start="129:19" pos:end="129:20">!=</operator> <literal type="number" pos:start="129:22" pos:end="129:22">8</literal> <operator pos:start="129:24" pos:end="129:25">&amp;&amp;</operator> <name pos:start="129:27" pos:end="129:35">blocksize</name> <operator pos:start="129:37" pos:end="129:38">!=</operator> <literal type="number" pos:start="129:40" pos:end="129:42">127</literal></expr>)</condition> <block pos:start="129:45" pos:end="135:5">{<block_content pos:start="131:9" pos:end="133:18">

        <expr_stmt pos:start="131:9" pos:end="131:68"><expr pos:start="131:9" pos:end="131:67"><call pos:start="131:9" pos:end="131:67"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="131:67">(<argument pos:start="131:16" pos:end="131:20"><expr pos:start="131:16" pos:end="131:20"><name pos:start="131:16" pos:end="131:20">avctx</name></expr></argument>, <argument pos:start="131:23" pos:end="131:34"><expr pos:start="131:23" pos:end="131:34"><name pos:start="131:23" pos:end="131:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="131:37" pos:end="131:55"><expr pos:start="131:37" pos:end="131:55"><literal type="string" pos:start="131:37" pos:end="131:55">"Block size = %i\n"</literal></expr></argument>, <argument pos:start="131:58" pos:end="131:66"><expr pos:start="131:58" pos:end="131:66"><name pos:start="131:58" pos:end="131:66">blocksize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="133:9" pos:end="133:18">return <expr pos:start="133:16" pos:end="133:17"><operator pos:start="133:16" pos:end="133:16">-</operator><literal type="number" pos:start="133:17" pos:end="133:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:35"><expr pos:start="137:5" pos:end="137:34"><call pos:start="137:5" pos:end="137:34"><name pos:start="137:5" pos:end="137:10">memset</name><argument_list pos:start="137:11" pos:end="137:34">(<argument pos:start="137:12" pos:end="137:19"><expr pos:start="137:12" pos:end="137:19"><name pos:start="137:12" pos:end="137:19"><name pos:start="137:12" pos:end="137:14">ctx</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:19">cur</name></name></expr></argument>, <argument pos:start="137:22" pos:end="137:22"><expr pos:start="137:22" pos:end="137:22"><literal type="number" pos:start="137:22" pos:end="137:22">0</literal></expr></argument>, <argument pos:start="137:25" pos:end="137:33"><expr pos:start="137:25" pos:end="137:33"><literal type="number" pos:start="137:25" pos:end="137:27">320</literal> <operator pos:start="137:29" pos:end="137:29">*</operator> <literal type="number" pos:start="137:31" pos:end="137:33">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="139:5" pos:end="167:5">switch <condition pos:start="139:12" pos:end="139:33">(<expr pos:start="139:13" pos:end="139:32"><name pos:start="139:13" pos:end="139:18">header</name> <operator pos:start="139:20" pos:end="139:20">&amp;</operator> <name pos:start="139:22" pos:end="139:32">KMVC_METHOD</name></expr>)</condition> <block pos:start="139:35" pos:end="167:5">{<block_content pos:start="141:5" pos:end="165:18">

    <case pos:start="141:5" pos:end="141:11">case <expr pos:start="141:10" pos:end="141:10"><literal type="number" pos:start="141:10" pos:end="141:10">0</literal></expr>:</case>

    <case pos:start="143:5" pos:end="143:11">case <expr pos:start="143:10" pos:end="143:10"><literal type="number" pos:start="143:10" pos:end="143:10">1</literal></expr>:</case> <comment type="line" pos:start="143:13" pos:end="143:44">// used in palette changed event</comment>

        <expr_stmt pos:start="145:9" pos:end="145:47"><expr pos:start="145:9" pos:end="145:46"><call pos:start="145:9" pos:end="145:46"><name pos:start="145:9" pos:end="145:14">memcpy</name><argument_list pos:start="145:15" pos:end="145:46">(<argument pos:start="145:16" pos:end="145:23"><expr pos:start="145:16" pos:end="145:23"><name pos:start="145:16" pos:end="145:23"><name pos:start="145:16" pos:end="145:18">ctx</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:23">cur</name></name></expr></argument>, <argument pos:start="145:26" pos:end="145:34"><expr pos:start="145:26" pos:end="145:34"><name pos:start="145:26" pos:end="145:34"><name pos:start="145:26" pos:end="145:28">ctx</name><operator pos:start="145:29" pos:end="145:30">-&gt;</operator><name pos:start="145:31" pos:end="145:34">prev</name></name></expr></argument>, <argument pos:start="145:37" pos:end="145:45"><expr pos:start="145:37" pos:end="145:45"><literal type="number" pos:start="145:37" pos:end="145:39">320</literal> <operator pos:start="145:41" pos:end="145:41">*</operator> <literal type="number" pos:start="145:43" pos:end="145:45">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    <case pos:start="149:5" pos:end="149:11">case <expr pos:start="149:10" pos:end="149:10"><literal type="number" pos:start="149:10" pos:end="149:10">3</literal></expr>:</case>

        <expr_stmt pos:start="151:9" pos:end="151:79"><expr pos:start="151:9" pos:end="151:78"><call pos:start="151:9" pos:end="151:78"><name pos:start="151:9" pos:end="151:29">kmvc_decode_intra_8x8</name><argument_list pos:start="151:30" pos:end="151:78">(<argument pos:start="151:31" pos:end="151:33"><expr pos:start="151:31" pos:end="151:33"><name pos:start="151:31" pos:end="151:33">ctx</name></expr></argument>, <argument pos:start="151:36" pos:end="151:38"><expr pos:start="151:36" pos:end="151:38"><name pos:start="151:36" pos:end="151:38">buf</name></expr></argument>, <argument pos:start="151:41" pos:end="151:48"><expr pos:start="151:41" pos:end="151:48"><name pos:start="151:41" pos:end="151:48">buf_size</name></expr></argument>, <argument pos:start="151:51" pos:end="151:62"><expr pos:start="151:51" pos:end="151:62"><name pos:start="151:51" pos:end="151:62"><name pos:start="151:51" pos:end="151:55">avctx</name><operator pos:start="151:56" pos:end="151:57">-&gt;</operator><name pos:start="151:58" pos:end="151:62">width</name></name></expr></argument>, <argument pos:start="151:65" pos:end="151:77"><expr pos:start="151:65" pos:end="151:77"><name pos:start="151:65" pos:end="151:77"><name pos:start="151:65" pos:end="151:69">avctx</name><operator pos:start="151:70" pos:end="151:71">-&gt;</operator><name pos:start="151:72" pos:end="151:77">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="153:9" pos:end="153:14">break;</break>

    <case pos:start="155:5" pos:end="155:11">case <expr pos:start="155:10" pos:end="155:10"><literal type="number" pos:start="155:10" pos:end="155:10">4</literal></expr>:</case>

        <expr_stmt pos:start="157:9" pos:end="157:79"><expr pos:start="157:9" pos:end="157:78"><call pos:start="157:9" pos:end="157:78"><name pos:start="157:9" pos:end="157:29">kmvc_decode_inter_8x8</name><argument_list pos:start="157:30" pos:end="157:78">(<argument pos:start="157:31" pos:end="157:33"><expr pos:start="157:31" pos:end="157:33"><name pos:start="157:31" pos:end="157:33">ctx</name></expr></argument>, <argument pos:start="157:36" pos:end="157:38"><expr pos:start="157:36" pos:end="157:38"><name pos:start="157:36" pos:end="157:38">buf</name></expr></argument>, <argument pos:start="157:41" pos:end="157:48"><expr pos:start="157:41" pos:end="157:48"><name pos:start="157:41" pos:end="157:48">buf_size</name></expr></argument>, <argument pos:start="157:51" pos:end="157:62"><expr pos:start="157:51" pos:end="157:62"><name pos:start="157:51" pos:end="157:62"><name pos:start="157:51" pos:end="157:55">avctx</name><operator pos:start="157:56" pos:end="157:57">-&gt;</operator><name pos:start="157:58" pos:end="157:62">width</name></name></expr></argument>, <argument pos:start="157:65" pos:end="157:77"><expr pos:start="157:65" pos:end="157:77"><name pos:start="157:65" pos:end="157:77"><name pos:start="157:65" pos:end="157:69">avctx</name><operator pos:start="157:70" pos:end="157:71">-&gt;</operator><name pos:start="157:72" pos:end="157:77">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <default pos:start="161:5" pos:end="161:12">default:</default>

        <expr_stmt pos:start="163:9" pos:end="163:93"><expr pos:start="163:9" pos:end="163:92"><call pos:start="163:9" pos:end="163:92"><name pos:start="163:9" pos:end="163:14">av_log</name><argument_list pos:start="163:15" pos:end="163:92">(<argument pos:start="163:16" pos:end="163:20"><expr pos:start="163:16" pos:end="163:20"><name pos:start="163:16" pos:end="163:20">avctx</name></expr></argument>, <argument pos:start="163:23" pos:end="163:34"><expr pos:start="163:23" pos:end="163:34"><name pos:start="163:23" pos:end="163:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="163:37" pos:end="163:69"><expr pos:start="163:37" pos:end="163:69"><literal type="string" pos:start="163:37" pos:end="163:69">"Unknown compression method %i\n"</literal></expr></argument>, <argument pos:start="163:72" pos:end="163:91"><expr pos:start="163:72" pos:end="163:91"><name pos:start="163:72" pos:end="163:77">header</name> <operator pos:start="163:79" pos:end="163:79">&amp;</operator> <name pos:start="163:81" pos:end="163:91">KMVC_METHOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="165:9" pos:end="165:18">return <expr pos:start="165:16" pos:end="165:17"><operator pos:start="165:16" pos:end="165:16">-</operator><literal type="number" pos:start="165:17" pos:end="165:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="171:5" pos:end="171:27"><expr pos:start="171:5" pos:end="171:26"><name pos:start="171:5" pos:end="171:7">out</name> <operator pos:start="171:9" pos:end="171:9">=</operator> <name pos:start="171:11" pos:end="171:26"><name pos:start="171:11" pos:end="171:13">ctx</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:18">pic</name><operator pos:start="171:19" pos:end="171:19">.</operator><name pos:start="171:20" pos:end="171:23">data</name><index pos:start="171:24" pos:end="171:26">[<expr pos:start="171:25" pos:end="171:25"><literal type="number" pos:start="171:25" pos:end="171:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:19"><expr pos:start="173:5" pos:end="173:18"><name pos:start="173:5" pos:end="173:7">src</name> <operator pos:start="173:9" pos:end="173:9">=</operator> <name pos:start="173:11" pos:end="173:18"><name pos:start="173:11" pos:end="173:13">ctx</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:18">cur</name></name></expr>;</expr_stmt>

    <for pos:start="175:5" pos:end="183:5">for <control pos:start="175:9" pos:end="175:39">(<init pos:start="175:10" pos:end="175:15"><expr pos:start="175:10" pos:end="175:14"><name pos:start="175:10" pos:end="175:10">i</name> <operator pos:start="175:12" pos:end="175:12">=</operator> <literal type="number" pos:start="175:14" pos:end="175:14">0</literal></expr>;</init> <condition pos:start="175:17" pos:end="175:34"><expr pos:start="175:17" pos:end="175:33"><name pos:start="175:17" pos:end="175:17">i</name> <operator pos:start="175:19" pos:end="175:19">&lt;</operator> <name pos:start="175:21" pos:end="175:33"><name pos:start="175:21" pos:end="175:25">avctx</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:33">height</name></name></expr>;</condition> <incr pos:start="175:36" pos:end="175:38"><expr pos:start="175:36" pos:end="175:38"><name pos:start="175:36" pos:end="175:36">i</name><operator pos:start="175:37" pos:end="175:38">++</operator></expr></incr>)</control> <block pos:start="175:41" pos:end="183:5">{<block_content pos:start="177:9" pos:end="181:36">

        <expr_stmt pos:start="177:9" pos:end="177:39"><expr pos:start="177:9" pos:end="177:38"><call pos:start="177:9" pos:end="177:38"><name pos:start="177:9" pos:end="177:14">memcpy</name><argument_list pos:start="177:15" pos:end="177:38">(<argument pos:start="177:16" pos:end="177:18"><expr pos:start="177:16" pos:end="177:18"><name pos:start="177:16" pos:end="177:18">out</name></expr></argument>, <argument pos:start="177:21" pos:end="177:23"><expr pos:start="177:21" pos:end="177:23"><name pos:start="177:21" pos:end="177:23">src</name></expr></argument>, <argument pos:start="177:26" pos:end="177:37"><expr pos:start="177:26" pos:end="177:37"><name pos:start="177:26" pos:end="177:37"><name pos:start="177:26" pos:end="177:30">avctx</name><operator pos:start="177:31" pos:end="177:32">-&gt;</operator><name pos:start="177:33" pos:end="177:37">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:19"><expr pos:start="179:9" pos:end="179:18"><name pos:start="179:9" pos:end="179:11">src</name> <operator pos:start="179:13" pos:end="179:14">+=</operator> <literal type="number" pos:start="179:16" pos:end="179:18">320</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:36"><expr pos:start="181:9" pos:end="181:35"><name pos:start="181:9" pos:end="181:11">out</name> <operator pos:start="181:13" pos:end="181:14">+=</operator> <name pos:start="181:16" pos:end="181:35"><name pos:start="181:16" pos:end="181:18">ctx</name><operator pos:start="181:19" pos:end="181:20">-&gt;</operator><name pos:start="181:21" pos:end="181:23">pic</name><operator pos:start="181:24" pos:end="181:24">.</operator><name pos:start="181:25" pos:end="181:32">linesize</name><index pos:start="181:33" pos:end="181:35">[<expr pos:start="181:34" pos:end="181:34"><literal type="number" pos:start="181:34" pos:end="181:34">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="187:5" pos:end="187:22">/* flip buffers */</comment>

    <if_stmt pos:start="189:5" pos:end="201:5"><if pos:start="189:5" pos:end="195:5">if <condition pos:start="189:8" pos:end="189:30">(<expr pos:start="189:9" pos:end="189:29"><name pos:start="189:9" pos:end="189:16"><name pos:start="189:9" pos:end="189:11">ctx</name><operator pos:start="189:12" pos:end="189:13">-&gt;</operator><name pos:start="189:14" pos:end="189:16">cur</name></name> <operator pos:start="189:18" pos:end="189:19">==</operator> <name pos:start="189:21" pos:end="189:29"><name pos:start="189:21" pos:end="189:23">ctx</name><operator pos:start="189:24" pos:end="189:25">-&gt;</operator><name pos:start="189:26" pos:end="189:29">frm0</name></name></expr>)</condition> <block pos:start="189:32" pos:end="195:5">{<block_content pos:start="191:9" pos:end="193:30">

        <expr_stmt pos:start="191:9" pos:end="191:29"><expr pos:start="191:9" pos:end="191:28"><name pos:start="191:9" pos:end="191:16"><name pos:start="191:9" pos:end="191:11">ctx</name><operator pos:start="191:12" pos:end="191:13">-&gt;</operator><name pos:start="191:14" pos:end="191:16">cur</name></name> <operator pos:start="191:18" pos:end="191:18">=</operator> <name pos:start="191:20" pos:end="191:28"><name pos:start="191:20" pos:end="191:22">ctx</name><operator pos:start="191:23" pos:end="191:24">-&gt;</operator><name pos:start="191:25" pos:end="191:28">frm1</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:30"><expr pos:start="193:9" pos:end="193:29"><name pos:start="193:9" pos:end="193:17"><name pos:start="193:9" pos:end="193:11">ctx</name><operator pos:start="193:12" pos:end="193:13">-&gt;</operator><name pos:start="193:14" pos:end="193:17">prev</name></name> <operator pos:start="193:19" pos:end="193:19">=</operator> <name pos:start="193:21" pos:end="193:29"><name pos:start="193:21" pos:end="193:23">ctx</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:29">frm0</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="195:7" pos:end="201:5">else <block pos:start="195:12" pos:end="201:5">{<block_content pos:start="197:9" pos:end="199:30">

        <expr_stmt pos:start="197:9" pos:end="197:29"><expr pos:start="197:9" pos:end="197:28"><name pos:start="197:9" pos:end="197:16"><name pos:start="197:9" pos:end="197:11">ctx</name><operator pos:start="197:12" pos:end="197:13">-&gt;</operator><name pos:start="197:14" pos:end="197:16">cur</name></name> <operator pos:start="197:18" pos:end="197:18">=</operator> <name pos:start="197:20" pos:end="197:28"><name pos:start="197:20" pos:end="197:22">ctx</name><operator pos:start="197:23" pos:end="197:24">-&gt;</operator><name pos:start="197:25" pos:end="197:28">frm0</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:30"><expr pos:start="199:9" pos:end="199:29"><name pos:start="199:9" pos:end="199:17"><name pos:start="199:9" pos:end="199:11">ctx</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:17">prev</name></name> <operator pos:start="199:19" pos:end="199:19">=</operator> <name pos:start="199:21" pos:end="199:29"><name pos:start="199:21" pos:end="199:23">ctx</name><operator pos:start="199:24" pos:end="199:25">-&gt;</operator><name pos:start="199:26" pos:end="199:29">frm1</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:33"><expr pos:start="205:5" pos:end="205:32"><operator pos:start="205:5" pos:end="205:5">*</operator><name pos:start="205:6" pos:end="205:14">data_size</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <sizeof pos:start="205:18" pos:end="205:32">sizeof<argument_list pos:start="205:24" pos:end="205:32">(<argument pos:start="205:25" pos:end="205:31"><expr pos:start="205:25" pos:end="205:31"><name pos:start="205:25" pos:end="205:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:33"><expr pos:start="207:5" pos:end="207:32"><operator pos:start="207:5" pos:end="207:5">*</operator><operator pos:start="207:6" pos:end="207:6">(</operator><name pos:start="207:7" pos:end="207:13">AVFrame</name> <operator pos:start="207:15" pos:end="207:15">*</operator><operator pos:start="207:16" pos:end="207:16">)</operator> <name pos:start="207:18" pos:end="207:21">data</name> <operator pos:start="207:23" pos:end="207:23">=</operator> <name pos:start="207:25" pos:end="207:32"><name pos:start="207:25" pos:end="207:27">ctx</name><operator pos:start="207:28" pos:end="207:29">-&gt;</operator><name pos:start="207:30" pos:end="207:32">pic</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="211:5" pos:end="211:63">/* always report that the buffer was completely consumed */</comment>

    <return pos:start="213:5" pos:end="213:20">return <expr pos:start="213:12" pos:end="213:19"><name pos:start="213:12" pos:end="213:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
