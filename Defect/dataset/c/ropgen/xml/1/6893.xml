<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6893.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">gdb_register_coprocessor</name><parameter_list pos:start="1:30" pos:end="5:70">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:38">CPUState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:39">gdb_reg_cb</name></type> <name pos:start="3:41" pos:end="3:47">get_reg</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:67"><decl pos:start="3:50" pos:end="3:67"><type pos:start="3:50" pos:end="3:67"><name pos:start="3:50" pos:end="3:59">gdb_reg_cb</name></type> <name pos:start="3:61" pos:end="3:67">set_reg</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:41"><decl pos:start="5:30" pos:end="5:41"><type pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:32">int</name></type> <name pos:start="5:34" pos:end="5:41">num_regs</name></decl></parameter>, <parameter pos:start="5:44" pos:end="5:58"><decl pos:start="5:44" pos:end="5:58"><type pos:start="5:44" pos:end="5:58"><specifier pos:start="5:44" pos:end="5:48">const</specifier> <name pos:start="5:50" pos:end="5:53">char</name> <modifier pos:start="5:55" pos:end="5:55">*</modifier></type><name pos:start="5:56" pos:end="5:58">xml</name></decl></parameter>, <parameter pos:start="5:61" pos:end="5:69"><decl pos:start="5:61" pos:end="5:69"><type pos:start="5:61" pos:end="5:69"><name pos:start="5:61" pos:end="5:63">int</name></type> <name pos:start="5:65" pos:end="5:69">g_pos</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="65:1">{<block_content pos:start="9:5" pos:end="63:5">

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">GDBRegisterState</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:23">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:20">GDBRegisterState</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier><modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:24">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:39"><type pos:start="13:5" pos:end="13:14"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:14">int</name></type> <name pos:start="13:16" pos:end="13:23">last_reg</name> <init pos:start="13:25" pos:end="13:39">= <expr pos:start="13:27" pos:end="13:39"><name pos:start="13:27" pos:end="13:39">NUM_CORE_REGS</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:64"><expr pos:start="17:5" pos:end="17:63"><name pos:start="17:5" pos:end="17:5">s</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:25">GDBRegisterState</name> <operator pos:start="17:27" pos:end="17:27">*</operator><operator pos:start="17:28" pos:end="17:28">)</operator><call pos:start="17:29" pos:end="17:63"><name pos:start="17:29" pos:end="17:37">g_malloc0</name><argument_list pos:start="17:38" pos:end="17:63">(<argument pos:start="17:39" pos:end="17:62"><expr pos:start="17:39" pos:end="17:62"><sizeof pos:start="17:39" pos:end="17:62">sizeof<argument_list pos:start="17:45" pos:end="17:62">(<argument pos:start="17:46" pos:end="17:61"><expr pos:start="17:46" pos:end="17:61"><name pos:start="17:46" pos:end="17:61">GDBRegisterState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:15">base_reg</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:26">last_reg</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:15">num_regs</name></name> <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:26">num_regs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:14">get_reg</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:24">get_reg</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:14">set_reg</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:24">set_reg</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:17"><expr pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:10">xml</name></name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:16">xml</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:23"><expr pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:5">p</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <operator pos:start="29:9" pos:end="29:9">&amp;</operator><name pos:start="29:10" pos:end="29:22"><name pos:start="29:10" pos:end="29:12">env</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:22">gdb_regs</name></name></expr>;</expr_stmt>

    <while pos:start="31:5" pos:end="41:5">while <condition pos:start="31:11" pos:end="31:14">(<expr pos:start="31:12" pos:end="31:13"><operator pos:start="31:12" pos:end="31:12">*</operator><name pos:start="31:13" pos:end="31:13">p</name></expr>)</condition> <block pos:start="31:16" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:24">

        <comment type="block" pos:start="33:9" pos:end="33:36">/* Check for duplicates.  */</comment>

        <if_stmt pos:start="35:9" pos:end="37:19"><if pos:start="35:9" pos:end="37:19">if <condition pos:start="35:12" pos:end="35:40">(<expr pos:start="35:13" pos:end="35:39"><call pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:18">strcmp</name><argument_list pos:start="35:19" pos:end="35:34">(<argument pos:start="35:20" pos:end="35:28"><expr pos:start="35:20" pos:end="35:28"><name pos:start="35:20" pos:end="35:28"><operator pos:start="35:20" pos:end="35:20">(</operator><operator pos:start="35:21" pos:end="35:21">*</operator><name pos:start="35:22" pos:end="35:22">p</name><operator pos:start="35:23" pos:end="35:23">)</operator><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:28">xml</name></name></expr></argument>, <argument pos:start="35:31" pos:end="35:33"><expr pos:start="35:31" pos:end="35:33"><name pos:start="35:31" pos:end="35:33">xml</name></expr></argument>)</argument_list></call> <operator pos:start="35:36" pos:end="35:37">==</operator> <literal type="number" pos:start="35:39" pos:end="35:39">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:19"><block_content pos:start="37:13" pos:end="37:19">

            <return pos:start="37:13" pos:end="37:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:9">p</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <operator pos:start="39:13" pos:end="39:13">&amp;</operator><name pos:start="39:14" pos:end="39:23"><operator pos:start="39:14" pos:end="39:14">(</operator><operator pos:start="39:15" pos:end="39:15">*</operator><name pos:start="39:16" pos:end="39:16">p</name><operator pos:start="39:17" pos:end="39:17">)</operator><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:23">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <comment type="block" pos:start="43:5" pos:end="43:30">/* Add to end of list.  */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:25"><expr pos:start="45:5" pos:end="45:24"><name pos:start="45:5" pos:end="45:12">last_reg</name> <operator pos:start="45:14" pos:end="45:15">+=</operator> <name pos:start="45:17" pos:end="45:24">num_regs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:11"><expr pos:start="47:5" pos:end="47:10"><operator pos:start="47:5" pos:end="47:5">*</operator><name pos:start="47:6" pos:end="47:6">p</name> <operator pos:start="47:8" pos:end="47:8">=</operator> <name pos:start="47:10" pos:end="47:10">s</name></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="63:5"><if pos:start="49:5" pos:end="63:5">if <condition pos:start="49:8" pos:end="49:14">(<expr pos:start="49:9" pos:end="49:13"><name pos:start="49:9" pos:end="49:13">g_pos</name></expr>)</condition> <block pos:start="49:16" pos:end="63:5">{<block_content pos:start="51:9" pos:end="61:9">

        <if_stmt pos:start="51:9" pos:end="61:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:33">(<expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:17">g_pos</name> <operator pos:start="51:19" pos:end="51:20">!=</operator> <name pos:start="51:22" pos:end="51:32"><name pos:start="51:22" pos:end="51:22">s</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:32">base_reg</name></name></expr>)</condition> <block pos:start="51:35" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:69">

            <expr_stmt pos:start="53:13" pos:end="55:69"><expr pos:start="53:13" pos:end="55:68"><call pos:start="53:13" pos:end="55:68"><name pos:start="53:13" pos:end="53:19">fprintf</name><argument_list pos:start="53:20" pos:end="55:68">(<argument pos:start="53:21" pos:end="53:26"><expr pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:26">stderr</name></expr></argument>, <argument pos:start="53:29" pos:end="55:42"><expr pos:start="53:29" pos:end="55:42"><literal type="string" pos:start="53:29" pos:end="53:74">"Error: Bad gdb register numbering for '%s'\n"</literal>

                    <literal type="string" pos:start="55:21" pos:end="55:42">"Expected %d got %d\n"</literal></expr></argument>, <argument pos:start="55:45" pos:end="55:47"><expr pos:start="55:45" pos:end="55:47"><name pos:start="55:45" pos:end="55:47">xml</name></expr></argument>, <argument pos:start="55:50" pos:end="55:54"><expr pos:start="55:50" pos:end="55:54"><name pos:start="55:50" pos:end="55:54">g_pos</name></expr></argument>, <argument pos:start="55:57" pos:end="55:67"><expr pos:start="55:57" pos:end="55:67"><name pos:start="55:57" pos:end="55:67"><name pos:start="55:57" pos:end="55:57">s</name><operator pos:start="55:58" pos:end="55:59">-&gt;</operator><name pos:start="55:60" pos:end="55:67">base_reg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="61:9">else <block pos:start="57:16" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:34">

            <expr_stmt pos:start="59:13" pos:end="59:34"><expr pos:start="59:13" pos:end="59:33"><name pos:start="59:13" pos:end="59:22">num_g_regs</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:33">last_reg</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
