<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7901.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">qtrle_decode_8bpp</name><parameter_list pos:start="1:30" pos:end="1:96">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:42">QtrleContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:61">stream_ptr</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:74"><decl pos:start="1:64" pos:end="1:74"><type pos:start="1:64" pos:end="1:74"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:74">row_ptr</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:95"><decl pos:start="1:77" pos:end="1:95"><type pos:start="1:77" pos:end="1:95"><name pos:start="1:77" pos:end="1:79">int</name></type> <name pos:start="1:81" pos:end="1:95">lines_to_change</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">rle_code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">pixel_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">row_inc</name> <init pos:start="9:17" pos:end="9:38">= <expr pos:start="9:19" pos:end="9:38"><name pos:start="9:19" pos:end="9:38"><name pos:start="9:19" pos:end="9:19">s</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:26">frame</name><operator pos:start="9:27" pos:end="9:27">.</operator><name pos:start="9:28" pos:end="9:35">linesize</name><index pos:start="9:36" pos:end="9:38">[<expr pos:start="9:37" pos:end="9:37"><literal type="number" pos:start="9:37" pos:end="9:37">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name></type> <name pos:start="11:19" pos:end="11:21">pi1</name></decl>, <decl pos:start="11:24" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="11:24" pos:end="11:26">pi2</name></decl>, <decl pos:start="11:29" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="11:29" pos:end="11:31">pi3</name></decl>, <decl pos:start="11:34" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="11:34" pos:end="11:36">pi4</name></decl>;</decl_stmt>  <comment type="block" pos:start="11:40" pos:end="11:62">/* 4 palette indexes */</comment>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">rgb</name> <init pos:start="13:24" pos:end="13:41">= <expr pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:26">s</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:33">frame</name><operator pos:start="13:34" pos:end="13:34">.</operator><name pos:start="13:35" pos:end="13:38">data</name><index pos:start="13:39" pos:end="13:41">[<expr pos:start="13:40" pos:end="13:40"><literal type="number" pos:start="13:40" pos:end="13:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:62"><decl pos:start="15:5" pos:end="15:61"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">pixel_limit</name> <init pos:start="15:21" pos:end="15:61">= <expr pos:start="15:23" pos:end="15:61"><name pos:start="15:23" pos:end="15:42"><name pos:start="15:23" pos:end="15:23">s</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:30">frame</name><operator pos:start="15:31" pos:end="15:31">.</operator><name pos:start="15:32" pos:end="15:39">linesize</name><index pos:start="15:40" pos:end="15:42">[<expr pos:start="15:41" pos:end="15:41"><literal type="number" pos:start="15:41" pos:end="15:41">0</literal></expr>]</index></name> <operator pos:start="15:44" pos:end="15:44">*</operator> <name pos:start="15:46" pos:end="15:61"><name pos:start="15:46" pos:end="15:46">s</name><operator pos:start="15:47" pos:end="15:48">-&gt;</operator><name pos:start="15:49" pos:end="15:53">avctx</name><operator pos:start="15:54" pos:end="15:55">-&gt;</operator><name pos:start="15:56" pos:end="15:61">height</name></name></expr></init></decl>;</decl_stmt>



    <while pos:start="19:5" pos:end="101:5">while <condition pos:start="19:11" pos:end="19:29">(<expr pos:start="19:12" pos:end="19:28"><name pos:start="19:12" pos:end="19:26">lines_to_change</name><operator pos:start="19:27" pos:end="19:28">--</operator></expr>)</condition> <block pos:start="19:31" pos:end="101:5">{<block_content pos:start="21:9" pos:end="99:27">

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><call pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:24">CHECK_STREAM_PTR</name><argument_list pos:start="21:25" pos:end="21:27">(<argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:63"><expr pos:start="23:9" pos:end="23:62"><name pos:start="23:9" pos:end="23:17">pixel_ptr</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:27">row_ptr</name> <operator pos:start="23:29" pos:end="23:29">+</operator> <operator pos:start="23:31" pos:end="23:31">(</operator><literal type="number" pos:start="23:32" pos:end="23:32">4</literal> <operator pos:start="23:34" pos:end="23:34">*</operator> <operator pos:start="23:36" pos:end="23:36">(</operator><name pos:start="23:37" pos:end="23:56"><name pos:start="23:37" pos:end="23:37">s</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:42">buf</name><index pos:start="23:43" pos:end="23:56">[<expr pos:start="23:44" pos:end="23:55"><name pos:start="23:44" pos:end="23:53">stream_ptr</name><operator pos:start="23:54" pos:end="23:55">++</operator></expr>]</index></name> <operator pos:start="23:58" pos:end="23:58">-</operator> <literal type="number" pos:start="23:60" pos:end="23:60">1</literal><operator pos:start="23:61" pos:end="23:61">)</operator><operator pos:start="23:62" pos:end="23:62">)</operator></expr>;</expr_stmt>




        <while pos:start="28:9" pos:end="97:9">while <condition pos:start="28:15" pos:end="28:68">(<expr pos:start="28:16" pos:end="28:67"><operator pos:start="28:16" pos:end="28:16">(</operator><name pos:start="28:17" pos:end="28:24">rle_code</name> <operator pos:start="28:26" pos:end="28:26">=</operator> <operator pos:start="28:28" pos:end="28:28">(</operator><name pos:start="28:29" pos:end="28:34">signed</name> <name pos:start="28:36" pos:end="28:39">char</name><operator pos:start="28:40" pos:end="28:40">)</operator><name pos:start="28:41" pos:end="28:60"><name pos:start="28:41" pos:end="28:41">s</name><operator pos:start="28:42" pos:end="28:43">-&gt;</operator><name pos:start="28:44" pos:end="28:46">buf</name><index pos:start="28:47" pos:end="28:60">[<expr pos:start="28:48" pos:end="28:59"><name pos:start="28:48" pos:end="28:57">stream_ptr</name><operator pos:start="28:58" pos:end="28:59">++</operator></expr>]</index></name><operator pos:start="28:61" pos:end="28:61">)</operator> <operator pos:start="28:63" pos:end="28:64">!=</operator> <operator pos:start="28:66" pos:end="28:66">-</operator><literal type="number" pos:start="28:67" pos:end="28:67">1</literal></expr>)</condition> <block pos:start="28:70" pos:end="97:9">{<block_content pos:start="30:13" pos:end="95:13">

            <if_stmt pos:start="30:13" pos:end="95:13"><if pos:start="30:13" pos:end="39:13">if <condition pos:start="30:16" pos:end="30:30">(<expr pos:start="30:17" pos:end="30:29"><name pos:start="30:17" pos:end="30:24">rle_code</name> <operator pos:start="30:26" pos:end="30:27">==</operator> <literal type="number" pos:start="30:29" pos:end="30:29">0</literal></expr>)</condition> <block pos:start="30:32" pos:end="39:13">{<block_content pos:start="34:17" pos:end="36:62">

                <comment type="block" pos:start="32:17" pos:end="32:61">/* there's another skip code in the stream */</comment>

                <expr_stmt pos:start="34:17" pos:end="34:36"><expr pos:start="34:17" pos:end="34:35"><call pos:start="34:17" pos:end="34:35"><name pos:start="34:17" pos:end="34:32">CHECK_STREAM_PTR</name><argument_list pos:start="34:33" pos:end="34:35">(<argument pos:start="34:34" pos:end="34:34"><expr pos:start="34:34" pos:end="34:34"><literal type="number" pos:start="34:34" pos:end="34:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="36:17" pos:end="36:62"><expr pos:start="36:17" pos:end="36:61"><name pos:start="36:17" pos:end="36:25">pixel_ptr</name> <operator pos:start="36:27" pos:end="36:28">+=</operator> <operator pos:start="36:30" pos:end="36:30">(</operator><literal type="number" pos:start="36:31" pos:end="36:31">4</literal> <operator pos:start="36:33" pos:end="36:33">*</operator> <operator pos:start="36:35" pos:end="36:35">(</operator><name pos:start="36:36" pos:end="36:55"><name pos:start="36:36" pos:end="36:36">s</name><operator pos:start="36:37" pos:end="36:38">-&gt;</operator><name pos:start="36:39" pos:end="36:41">buf</name><index pos:start="36:42" pos:end="36:55">[<expr pos:start="36:43" pos:end="36:54"><name pos:start="36:43" pos:end="36:52">stream_ptr</name><operator pos:start="36:53" pos:end="36:54">++</operator></expr>]</index></name> <operator pos:start="36:57" pos:end="36:57">-</operator> <literal type="number" pos:start="36:59" pos:end="36:59">1</literal><operator pos:start="36:60" pos:end="36:60">)</operator><operator pos:start="36:61" pos:end="36:61">)</operator></expr>;</expr_stmt>


            </block_content>}</block></if> <if type="elseif" pos:start="39:15" pos:end="77:13">else if <condition pos:start="39:23" pos:end="39:36">(<expr pos:start="39:24" pos:end="39:35"><name pos:start="39:24" pos:end="39:31">rle_code</name> <operator pos:start="39:33" pos:end="39:33">&lt;</operator> <literal type="number" pos:start="39:35" pos:end="39:35">0</literal></expr>)</condition> <block pos:start="39:38" pos:end="77:13">{<block_content pos:start="43:17" pos:end="75:17">

                <comment type="block" pos:start="41:17" pos:end="41:48">/* decode the run length code */</comment>

                <expr_stmt pos:start="43:17" pos:end="43:37"><expr pos:start="43:17" pos:end="43:36"><name pos:start="43:17" pos:end="43:24">rle_code</name> <operator pos:start="43:26" pos:end="43:26">=</operator> <operator pos:start="43:28" pos:end="43:28">-</operator><name pos:start="43:29" pos:end="43:36">rle_code</name></expr>;</expr_stmt>

                <comment type="block" pos:start="45:17" pos:end="47:61">/* get the next 4 bytes from the stream, treat them as palette

                 * indexes, and output them rle_code times */</comment>

                <expr_stmt pos:start="49:17" pos:end="49:36"><expr pos:start="49:17" pos:end="49:35"><call pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:32">CHECK_STREAM_PTR</name><argument_list pos:start="49:33" pos:end="49:35">(<argument pos:start="49:34" pos:end="49:34"><expr pos:start="49:34" pos:end="49:34"><literal type="number" pos:start="49:34" pos:end="49:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:43"><expr pos:start="51:17" pos:end="51:42"><name pos:start="51:17" pos:end="51:19">pi1</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:42"><name pos:start="51:23" pos:end="51:23">s</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:28">buf</name><index pos:start="51:29" pos:end="51:42">[<expr pos:start="51:30" pos:end="51:41"><name pos:start="51:30" pos:end="51:39">stream_ptr</name><operator pos:start="51:40" pos:end="51:41">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:43"><expr pos:start="53:17" pos:end="53:42"><name pos:start="53:17" pos:end="53:19">pi2</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:42"><name pos:start="53:23" pos:end="53:23">s</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:28">buf</name><index pos:start="53:29" pos:end="53:42">[<expr pos:start="53:30" pos:end="53:41"><name pos:start="53:30" pos:end="53:39">stream_ptr</name><operator pos:start="53:40" pos:end="53:41">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:43"><expr pos:start="55:17" pos:end="55:42"><name pos:start="55:17" pos:end="55:19">pi3</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:42"><name pos:start="55:23" pos:end="55:23">s</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:28">buf</name><index pos:start="55:29" pos:end="55:42">[<expr pos:start="55:30" pos:end="55:41"><name pos:start="55:30" pos:end="55:39">stream_ptr</name><operator pos:start="55:40" pos:end="55:41">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:43"><expr pos:start="57:17" pos:end="57:42"><name pos:start="57:17" pos:end="57:19">pi4</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:42"><name pos:start="57:23" pos:end="57:23">s</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:28">buf</name><index pos:start="57:29" pos:end="57:42">[<expr pos:start="57:30" pos:end="57:41"><name pos:start="57:30" pos:end="57:39">stream_ptr</name><operator pos:start="57:40" pos:end="57:41">++</operator></expr>]</index></name></expr>;</expr_stmt>



                <expr_stmt pos:start="61:17" pos:end="61:46"><expr pos:start="61:17" pos:end="61:45"><call pos:start="61:17" pos:end="61:45"><name pos:start="61:17" pos:end="61:31">CHECK_PIXEL_PTR</name><argument_list pos:start="61:32" pos:end="61:45">(<argument pos:start="61:33" pos:end="61:44"><expr pos:start="61:33" pos:end="61:44"><name pos:start="61:33" pos:end="61:40">rle_code</name> <operator pos:start="61:42" pos:end="61:42">*</operator> <literal type="number" pos:start="61:44" pos:end="61:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <while pos:start="65:17" pos:end="75:17">while <condition pos:start="65:23" pos:end="65:34">(<expr pos:start="65:24" pos:end="65:33"><name pos:start="65:24" pos:end="65:31">rle_code</name><operator pos:start="65:32" pos:end="65:33">--</operator></expr>)</condition> <block pos:start="65:36" pos:end="75:17">{<block_content pos:start="67:21" pos:end="73:43">

                    <expr_stmt pos:start="67:21" pos:end="67:43"><expr pos:start="67:21" pos:end="67:42"><name pos:start="67:21" pos:end="67:36"><name pos:start="67:21" pos:end="67:23">rgb</name><index pos:start="67:24" pos:end="67:36">[<expr pos:start="67:25" pos:end="67:35"><name pos:start="67:25" pos:end="67:33">pixel_ptr</name><operator pos:start="67:34" pos:end="67:35">++</operator></expr>]</index></name> <operator pos:start="67:38" pos:end="67:38">=</operator> <name pos:start="67:40" pos:end="67:42">pi1</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:43"><expr pos:start="69:21" pos:end="69:42"><name pos:start="69:21" pos:end="69:36"><name pos:start="69:21" pos:end="69:23">rgb</name><index pos:start="69:24" pos:end="69:36">[<expr pos:start="69:25" pos:end="69:35"><name pos:start="69:25" pos:end="69:33">pixel_ptr</name><operator pos:start="69:34" pos:end="69:35">++</operator></expr>]</index></name> <operator pos:start="69:38" pos:end="69:38">=</operator> <name pos:start="69:40" pos:end="69:42">pi2</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:43"><expr pos:start="71:21" pos:end="71:42"><name pos:start="71:21" pos:end="71:36"><name pos:start="71:21" pos:end="71:23">rgb</name><index pos:start="71:24" pos:end="71:36">[<expr pos:start="71:25" pos:end="71:35"><name pos:start="71:25" pos:end="71:33">pixel_ptr</name><operator pos:start="71:34" pos:end="71:35">++</operator></expr>]</index></name> <operator pos:start="71:38" pos:end="71:38">=</operator> <name pos:start="71:40" pos:end="71:42">pi3</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:43"><expr pos:start="73:21" pos:end="73:42"><name pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:23">rgb</name><index pos:start="73:24" pos:end="73:36">[<expr pos:start="73:25" pos:end="73:35"><name pos:start="73:25" pos:end="73:33">pixel_ptr</name><operator pos:start="73:34" pos:end="73:35">++</operator></expr>]</index></name> <operator pos:start="73:38" pos:end="73:38">=</operator> <name pos:start="73:40" pos:end="73:42">pi4</name></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if> <else pos:start="77:15" pos:end="95:13">else <block pos:start="77:20" pos:end="95:13">{<block_content pos:start="81:17" pos:end="93:17">

                <comment type="block" pos:start="79:17" pos:end="79:68">/* copy the same pixel directly to output 4 times */</comment>

                <expr_stmt pos:start="81:17" pos:end="81:30"><expr pos:start="81:17" pos:end="81:29"><name pos:start="81:17" pos:end="81:24">rle_code</name> <operator pos:start="81:26" pos:end="81:27">*=</operator> <literal type="number" pos:start="81:29" pos:end="81:29">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:43"><expr pos:start="83:17" pos:end="83:42"><call pos:start="83:17" pos:end="83:42"><name pos:start="83:17" pos:end="83:32">CHECK_STREAM_PTR</name><argument_list pos:start="83:33" pos:end="83:42">(<argument pos:start="83:34" pos:end="83:41"><expr pos:start="83:34" pos:end="83:41"><name pos:start="83:34" pos:end="83:41">rle_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:42"><expr pos:start="85:17" pos:end="85:41"><call pos:start="85:17" pos:end="85:41"><name pos:start="85:17" pos:end="85:31">CHECK_PIXEL_PTR</name><argument_list pos:start="85:32" pos:end="85:41">(<argument pos:start="85:33" pos:end="85:40"><expr pos:start="85:33" pos:end="85:40"><name pos:start="85:33" pos:end="85:40">rle_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <while pos:start="89:17" pos:end="93:17">while <condition pos:start="89:23" pos:end="89:34">(<expr pos:start="89:24" pos:end="89:33"><name pos:start="89:24" pos:end="89:31">rle_code</name><operator pos:start="89:32" pos:end="89:33">--</operator></expr>)</condition> <block pos:start="89:36" pos:end="93:17">{<block_content pos:start="91:21" pos:end="91:60">

                    <expr_stmt pos:start="91:21" pos:end="91:60"><expr pos:start="91:21" pos:end="91:59"><name pos:start="91:21" pos:end="91:36"><name pos:start="91:21" pos:end="91:23">rgb</name><index pos:start="91:24" pos:end="91:36">[<expr pos:start="91:25" pos:end="91:35"><name pos:start="91:25" pos:end="91:33">pixel_ptr</name><operator pos:start="91:34" pos:end="91:35">++</operator></expr>]</index></name> <operator pos:start="91:38" pos:end="91:38">=</operator> <name pos:start="91:40" pos:end="91:59"><name pos:start="91:40" pos:end="91:40">s</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:45">buf</name><index pos:start="91:46" pos:end="91:59">[<expr pos:start="91:47" pos:end="91:58"><name pos:start="91:47" pos:end="91:56">stream_ptr</name><operator pos:start="91:57" pos:end="91:58">++</operator></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="99:9" pos:end="99:27"><expr pos:start="99:9" pos:end="99:26"><name pos:start="99:9" pos:end="99:15">row_ptr</name> <operator pos:start="99:17" pos:end="99:18">+=</operator> <name pos:start="99:20" pos:end="99:26">row_inc</name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function></unit>
