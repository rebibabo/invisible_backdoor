<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1029.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">net_init_socket</name><parameter_list pos:start="1:20" pos:end="1:70">(<parameter pos:start="1:21" pos:end="1:34"><decl pos:start="1:21" pos:end="1:34"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:28">QemuOpts</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:34">opts</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:52"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">name</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><name pos:start="1:55" pos:end="1:63">VLANState</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">vlan</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="195:1">{<block_content pos:start="5:5" pos:end="193:13">

    <if_stmt pos:start="5:5" pos:end="191:5"><if pos:start="5:5" pos:end="43:5">if <condition pos:start="5:8" pos:end="5:33">(<expr pos:start="5:9" pos:end="5:32"><call pos:start="5:9" pos:end="5:32"><name pos:start="5:9" pos:end="5:20">qemu_opt_get</name><argument_list pos:start="5:21" pos:end="5:32">(<argument pos:start="5:22" pos:end="5:25"><expr pos:start="5:22" pos:end="5:25"><name pos:start="5:22" pos:end="5:25">opts</name></expr></argument>, <argument pos:start="5:28" pos:end="5:31"><expr pos:start="5:28" pos:end="5:31"><literal type="string" pos:start="5:28" pos:end="5:31">"fd"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:35" pos:end="43:5">{<block_content pos:start="7:9" pos:end="41:9">

        <decl_stmt pos:start="7:9" pos:end="7:15"><decl pos:start="7:9" pos:end="7:14"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:14">fd</name></decl>;</decl_stmt>



        <if_stmt pos:start="11:9" pos:end="23:9"><if pos:start="11:9" pos:end="23:9">if <condition pos:start="11:12" pos:end="17:44">(<expr pos:start="11:13" pos:end="17:43"><call pos:start="11:13" pos:end="11:40"><name pos:start="11:13" pos:end="11:24">qemu_opt_get</name><argument_list pos:start="11:25" pos:end="11:40">(<argument pos:start="11:26" pos:end="11:29"><expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">opts</name></expr></argument>, <argument pos:start="11:32" pos:end="11:39"><expr pos:start="11:32" pos:end="11:39"><literal type="string" pos:start="11:32" pos:end="11:39">"listen"</literal></expr></argument>)</argument_list></call> <operator pos:start="11:42" pos:end="11:43">||</operator>

            <call pos:start="13:13" pos:end="13:41"><name pos:start="13:13" pos:end="13:24">qemu_opt_get</name><argument_list pos:start="13:25" pos:end="13:41">(<argument pos:start="13:26" pos:end="13:29"><expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">opts</name></expr></argument>, <argument pos:start="13:32" pos:end="13:40"><expr pos:start="13:32" pos:end="13:40"><literal type="string" pos:start="13:32" pos:end="13:40">"connect"</literal></expr></argument>)</argument_list></call> <operator pos:start="13:43" pos:end="13:44">||</operator>

            <call pos:start="15:13" pos:end="15:39"><name pos:start="15:13" pos:end="15:24">qemu_opt_get</name><argument_list pos:start="15:25" pos:end="15:39">(<argument pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">opts</name></expr></argument>, <argument pos:start="15:32" pos:end="15:38"><expr pos:start="15:32" pos:end="15:38"><literal type="string" pos:start="15:32" pos:end="15:38">"mcast"</literal></expr></argument>)</argument_list></call> <operator pos:start="15:41" pos:end="15:42">||</operator>

            <call pos:start="17:13" pos:end="17:43"><name pos:start="17:13" pos:end="17:24">qemu_opt_get</name><argument_list pos:start="17:25" pos:end="17:43">(<argument pos:start="17:26" pos:end="17:29"><expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">opts</name></expr></argument>, <argument pos:start="17:32" pos:end="17:42"><expr pos:start="17:32" pos:end="17:42"><literal type="string" pos:start="17:32" pos:end="17:42">"localaddr"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:46" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:22">

            <expr_stmt pos:start="19:13" pos:end="19:89"><expr pos:start="19:13" pos:end="19:88"><call pos:start="19:13" pos:end="19:88"><name pos:start="19:13" pos:end="19:24">error_report</name><argument_list pos:start="19:25" pos:end="19:88">(<argument pos:start="19:26" pos:end="19:87"><expr pos:start="19:26" pos:end="19:87"><literal type="string" pos:start="19:26" pos:end="19:87">"listen=, connect=, mcast= and localaddr= is invalid with fd="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:68"><expr pos:start="27:9" pos:end="27:67"><name pos:start="27:9" pos:end="27:10">fd</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:67"><name pos:start="27:14" pos:end="27:32">net_handle_fd_param</name><argument_list pos:start="27:33" pos:end="27:67">(<argument pos:start="27:34" pos:end="27:40"><expr pos:start="27:34" pos:end="27:40"><name pos:start="27:34" pos:end="27:40">cur_mon</name></expr></argument>, <argument pos:start="27:43" pos:end="27:66"><expr pos:start="27:43" pos:end="27:66"><call pos:start="27:43" pos:end="27:66"><name pos:start="27:43" pos:end="27:54">qemu_opt_get</name><argument_list pos:start="27:55" pos:end="27:66">(<argument pos:start="27:56" pos:end="27:59"><expr pos:start="27:56" pos:end="27:59"><name pos:start="27:56" pos:end="27:59">opts</name></expr></argument>, <argument pos:start="27:62" pos:end="27:65"><expr pos:start="27:62" pos:end="27:65"><literal type="string" pos:start="27:62" pos:end="27:65">"fd"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:21">(<expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:14">fd</name> <operator pos:start="29:16" pos:end="29:17">==</operator> <operator pos:start="29:19" pos:end="29:19">-</operator><literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr>)</condition> <block pos:start="29:23" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:22">

            <return pos:start="31:13" pos:end="31:22">return <expr pos:start="31:20" pos:end="31:21"><operator pos:start="31:20" pos:end="31:20">-</operator><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:61">(<expr pos:start="37:13" pos:end="37:60"><operator pos:start="37:13" pos:end="37:13">!</operator><call pos:start="37:14" pos:end="37:60"><name pos:start="37:14" pos:end="37:31">net_socket_fd_init</name><argument_list pos:start="37:32" pos:end="37:60">(<argument pos:start="37:33" pos:end="37:36"><expr pos:start="37:33" pos:end="37:36"><name pos:start="37:33" pos:end="37:36">vlan</name></expr></argument>, <argument pos:start="37:39" pos:end="37:46"><expr pos:start="37:39" pos:end="37:46"><literal type="string" pos:start="37:39" pos:end="37:46">"socket"</literal></expr></argument>, <argument pos:start="37:49" pos:end="37:52"><expr pos:start="37:49" pos:end="37:52"><name pos:start="37:49" pos:end="37:52">name</name></expr></argument>, <argument pos:start="37:55" pos:end="37:56"><expr pos:start="37:55" pos:end="37:56"><name pos:start="37:55" pos:end="37:56">fd</name></expr></argument>, <argument pos:start="37:59" pos:end="37:59"><expr pos:start="37:59" pos:end="37:59"><literal type="number" pos:start="37:59" pos:end="37:59">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:63" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:22">

            <return pos:start="39:13" pos:end="39:22">return <expr pos:start="39:20" pos:end="39:21"><operator pos:start="39:20" pos:end="39:20">-</operator><literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="75:5">else if <condition pos:start="43:15" pos:end="43:44">(<expr pos:start="43:16" pos:end="43:43"><call pos:start="43:16" pos:end="43:43"><name pos:start="43:16" pos:end="43:27">qemu_opt_get</name><argument_list pos:start="43:28" pos:end="43:43">(<argument pos:start="43:29" pos:end="43:32"><expr pos:start="43:29" pos:end="43:32"><name pos:start="43:29" pos:end="43:32">opts</name></expr></argument>, <argument pos:start="43:35" pos:end="43:42"><expr pos:start="43:35" pos:end="43:42"><literal type="string" pos:start="43:35" pos:end="43:42">"listen"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:46" pos:end="75:5">{<block_content pos:start="45:9" pos:end="73:9">

        <decl_stmt pos:start="45:9" pos:end="45:27"><decl pos:start="45:9" pos:end="45:26"><type pos:start="45:9" pos:end="45:20"><specifier pos:start="45:9" pos:end="45:13">const</specifier> <name pos:start="45:15" pos:end="45:18">char</name> <modifier pos:start="45:20" pos:end="45:20">*</modifier></type><name pos:start="45:21" pos:end="45:26">listen</name></decl>;</decl_stmt>



        <if_stmt pos:start="49:9" pos:end="61:9"><if pos:start="49:9" pos:end="61:9">if <condition pos:start="49:12" pos:end="55:44">(<expr pos:start="49:13" pos:end="55:43"><call pos:start="49:13" pos:end="49:36"><name pos:start="49:13" pos:end="49:24">qemu_opt_get</name><argument_list pos:start="49:25" pos:end="49:36">(<argument pos:start="49:26" pos:end="49:29"><expr pos:start="49:26" pos:end="49:29"><name pos:start="49:26" pos:end="49:29">opts</name></expr></argument>, <argument pos:start="49:32" pos:end="49:35"><expr pos:start="49:32" pos:end="49:35"><literal type="string" pos:start="49:32" pos:end="49:35">"fd"</literal></expr></argument>)</argument_list></call> <operator pos:start="49:38" pos:end="49:39">||</operator>

            <call pos:start="51:13" pos:end="51:41"><name pos:start="51:13" pos:end="51:24">qemu_opt_get</name><argument_list pos:start="51:25" pos:end="51:41">(<argument pos:start="51:26" pos:end="51:29"><expr pos:start="51:26" pos:end="51:29"><name pos:start="51:26" pos:end="51:29">opts</name></expr></argument>, <argument pos:start="51:32" pos:end="51:40"><expr pos:start="51:32" pos:end="51:40"><literal type="string" pos:start="51:32" pos:end="51:40">"connect"</literal></expr></argument>)</argument_list></call> <operator pos:start="51:43" pos:end="51:44">||</operator>

            <call pos:start="53:13" pos:end="53:39"><name pos:start="53:13" pos:end="53:24">qemu_opt_get</name><argument_list pos:start="53:25" pos:end="53:39">(<argument pos:start="53:26" pos:end="53:29"><expr pos:start="53:26" pos:end="53:29"><name pos:start="53:26" pos:end="53:29">opts</name></expr></argument>, <argument pos:start="53:32" pos:end="53:38"><expr pos:start="53:32" pos:end="53:38"><literal type="string" pos:start="53:32" pos:end="53:38">"mcast"</literal></expr></argument>)</argument_list></call> <operator pos:start="53:41" pos:end="53:42">||</operator>

            <call pos:start="55:13" pos:end="55:43"><name pos:start="55:13" pos:end="55:24">qemu_opt_get</name><argument_list pos:start="55:25" pos:end="55:43">(<argument pos:start="55:26" pos:end="55:29"><expr pos:start="55:26" pos:end="55:29"><name pos:start="55:26" pos:end="55:29">opts</name></expr></argument>, <argument pos:start="55:32" pos:end="55:42"><expr pos:start="55:32" pos:end="55:42"><literal type="string" pos:start="55:32" pos:end="55:42">"localaddr"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:46" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:22">

            <expr_stmt pos:start="57:13" pos:end="57:89"><expr pos:start="57:13" pos:end="57:88"><call pos:start="57:13" pos:end="57:88"><name pos:start="57:13" pos:end="57:24">error_report</name><argument_list pos:start="57:25" pos:end="57:88">(<argument pos:start="57:26" pos:end="57:87"><expr pos:start="57:26" pos:end="57:87"><literal type="string" pos:start="57:26" pos:end="57:87">"fd=, connect=, mcast= and localaddr= is invalid with listen="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:22">return <expr pos:start="59:20" pos:end="59:21"><operator pos:start="59:20" pos:end="59:20">-</operator><literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:46"><expr pos:start="65:9" pos:end="65:45"><name pos:start="65:9" pos:end="65:14">listen</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="65:45"><name pos:start="65:18" pos:end="65:29">qemu_opt_get</name><argument_list pos:start="65:30" pos:end="65:45">(<argument pos:start="65:31" pos:end="65:34"><expr pos:start="65:31" pos:end="65:34"><name pos:start="65:31" pos:end="65:34">opts</name></expr></argument>, <argument pos:start="65:37" pos:end="65:44"><expr pos:start="65:37" pos:end="65:44"><literal type="string" pos:start="65:37" pos:end="65:44">"listen"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:71">(<expr pos:start="69:13" pos:end="69:70"><call pos:start="69:13" pos:end="69:64"><name pos:start="69:13" pos:end="69:34">net_socket_listen_init</name><argument_list pos:start="69:35" pos:end="69:64">(<argument pos:start="69:36" pos:end="69:39"><expr pos:start="69:36" pos:end="69:39"><name pos:start="69:36" pos:end="69:39">vlan</name></expr></argument>, <argument pos:start="69:42" pos:end="69:49"><expr pos:start="69:42" pos:end="69:49"><literal type="string" pos:start="69:42" pos:end="69:49">"socket"</literal></expr></argument>, <argument pos:start="69:52" pos:end="69:55"><expr pos:start="69:52" pos:end="69:55"><name pos:start="69:52" pos:end="69:55">name</name></expr></argument>, <argument pos:start="69:58" pos:end="69:63"><expr pos:start="69:58" pos:end="69:63"><name pos:start="69:58" pos:end="69:63">listen</name></expr></argument>)</argument_list></call> <operator pos:start="69:66" pos:end="69:67">==</operator> <operator pos:start="69:69" pos:end="69:69">-</operator><literal type="number" pos:start="69:70" pos:end="69:70">1</literal></expr>)</condition> <block pos:start="69:73" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:22">

            <return pos:start="71:13" pos:end="71:22">return <expr pos:start="71:20" pos:end="71:21"><operator pos:start="71:20" pos:end="71:20">-</operator><literal type="number" pos:start="71:21" pos:end="71:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="75:7" pos:end="107:5">else if <condition pos:start="75:15" pos:end="75:45">(<expr pos:start="75:16" pos:end="75:44"><call pos:start="75:16" pos:end="75:44"><name pos:start="75:16" pos:end="75:27">qemu_opt_get</name><argument_list pos:start="75:28" pos:end="75:44">(<argument pos:start="75:29" pos:end="75:32"><expr pos:start="75:29" pos:end="75:32"><name pos:start="75:29" pos:end="75:32">opts</name></expr></argument>, <argument pos:start="75:35" pos:end="75:43"><expr pos:start="75:35" pos:end="75:43"><literal type="string" pos:start="75:35" pos:end="75:43">"connect"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:47" pos:end="107:5">{<block_content pos:start="77:9" pos:end="105:9">

        <decl_stmt pos:start="77:9" pos:end="77:28"><decl pos:start="77:9" pos:end="77:27"><type pos:start="77:9" pos:end="77:20"><specifier pos:start="77:9" pos:end="77:13">const</specifier> <name pos:start="77:15" pos:end="77:18">char</name> <modifier pos:start="77:20" pos:end="77:20">*</modifier></type><name pos:start="77:21" pos:end="77:27">connect</name></decl>;</decl_stmt>



        <if_stmt pos:start="81:9" pos:end="93:9"><if pos:start="81:9" pos:end="93:9">if <condition pos:start="81:12" pos:end="87:44">(<expr pos:start="81:13" pos:end="87:43"><call pos:start="81:13" pos:end="81:36"><name pos:start="81:13" pos:end="81:24">qemu_opt_get</name><argument_list pos:start="81:25" pos:end="81:36">(<argument pos:start="81:26" pos:end="81:29"><expr pos:start="81:26" pos:end="81:29"><name pos:start="81:26" pos:end="81:29">opts</name></expr></argument>, <argument pos:start="81:32" pos:end="81:35"><expr pos:start="81:32" pos:end="81:35"><literal type="string" pos:start="81:32" pos:end="81:35">"fd"</literal></expr></argument>)</argument_list></call> <operator pos:start="81:38" pos:end="81:39">||</operator>

            <call pos:start="83:13" pos:end="83:40"><name pos:start="83:13" pos:end="83:24">qemu_opt_get</name><argument_list pos:start="83:25" pos:end="83:40">(<argument pos:start="83:26" pos:end="83:29"><expr pos:start="83:26" pos:end="83:29"><name pos:start="83:26" pos:end="83:29">opts</name></expr></argument>, <argument pos:start="83:32" pos:end="83:39"><expr pos:start="83:32" pos:end="83:39"><literal type="string" pos:start="83:32" pos:end="83:39">"listen"</literal></expr></argument>)</argument_list></call> <operator pos:start="83:42" pos:end="83:43">||</operator>

            <call pos:start="85:13" pos:end="85:39"><name pos:start="85:13" pos:end="85:24">qemu_opt_get</name><argument_list pos:start="85:25" pos:end="85:39">(<argument pos:start="85:26" pos:end="85:29"><expr pos:start="85:26" pos:end="85:29"><name pos:start="85:26" pos:end="85:29">opts</name></expr></argument>, <argument pos:start="85:32" pos:end="85:38"><expr pos:start="85:32" pos:end="85:38"><literal type="string" pos:start="85:32" pos:end="85:38">"mcast"</literal></expr></argument>)</argument_list></call> <operator pos:start="85:41" pos:end="85:42">||</operator>

            <call pos:start="87:13" pos:end="87:43"><name pos:start="87:13" pos:end="87:24">qemu_opt_get</name><argument_list pos:start="87:25" pos:end="87:43">(<argument pos:start="87:26" pos:end="87:29"><expr pos:start="87:26" pos:end="87:29"><name pos:start="87:26" pos:end="87:29">opts</name></expr></argument>, <argument pos:start="87:32" pos:end="87:42"><expr pos:start="87:32" pos:end="87:42"><literal type="string" pos:start="87:32" pos:end="87:42">"localaddr"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:46" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:22">

            <expr_stmt pos:start="89:13" pos:end="89:89"><expr pos:start="89:13" pos:end="89:88"><call pos:start="89:13" pos:end="89:88"><name pos:start="89:13" pos:end="89:24">error_report</name><argument_list pos:start="89:25" pos:end="89:88">(<argument pos:start="89:26" pos:end="89:87"><expr pos:start="89:26" pos:end="89:87"><literal type="string" pos:start="89:26" pos:end="89:87">"fd=, listen=, mcast= and localaddr= is invalid with connect="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="91:13" pos:end="91:22">return <expr pos:start="91:20" pos:end="91:21"><operator pos:start="91:20" pos:end="91:20">-</operator><literal type="number" pos:start="91:21" pos:end="91:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:48"><expr pos:start="97:9" pos:end="97:47"><name pos:start="97:9" pos:end="97:15">connect</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <call pos:start="97:19" pos:end="97:47"><name pos:start="97:19" pos:end="97:30">qemu_opt_get</name><argument_list pos:start="97:31" pos:end="97:47">(<argument pos:start="97:32" pos:end="97:35"><expr pos:start="97:32" pos:end="97:35"><name pos:start="97:32" pos:end="97:35">opts</name></expr></argument>, <argument pos:start="97:38" pos:end="97:46"><expr pos:start="97:38" pos:end="97:46"><literal type="string" pos:start="97:38" pos:end="97:46">"connect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="101:9" pos:end="105:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:73">(<expr pos:start="101:13" pos:end="101:72"><call pos:start="101:13" pos:end="101:66"><name pos:start="101:13" pos:end="101:35">net_socket_connect_init</name><argument_list pos:start="101:36" pos:end="101:66">(<argument pos:start="101:37" pos:end="101:40"><expr pos:start="101:37" pos:end="101:40"><name pos:start="101:37" pos:end="101:40">vlan</name></expr></argument>, <argument pos:start="101:43" pos:end="101:50"><expr pos:start="101:43" pos:end="101:50"><literal type="string" pos:start="101:43" pos:end="101:50">"socket"</literal></expr></argument>, <argument pos:start="101:53" pos:end="101:56"><expr pos:start="101:53" pos:end="101:56"><name pos:start="101:53" pos:end="101:56">name</name></expr></argument>, <argument pos:start="101:59" pos:end="101:65"><expr pos:start="101:59" pos:end="101:65"><name pos:start="101:59" pos:end="101:65">connect</name></expr></argument>)</argument_list></call> <operator pos:start="101:68" pos:end="101:69">==</operator> <operator pos:start="101:71" pos:end="101:71">-</operator><literal type="number" pos:start="101:72" pos:end="101:72">1</literal></expr>)</condition> <block pos:start="101:75" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:22">

            <return pos:start="103:13" pos:end="103:22">return <expr pos:start="103:20" pos:end="103:21"><operator pos:start="103:20" pos:end="103:20">-</operator><literal type="number" pos:start="103:21" pos:end="103:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="107:7" pos:end="139:5">else if <condition pos:start="107:15" pos:end="107:43">(<expr pos:start="107:16" pos:end="107:42"><call pos:start="107:16" pos:end="107:42"><name pos:start="107:16" pos:end="107:27">qemu_opt_get</name><argument_list pos:start="107:28" pos:end="107:42">(<argument pos:start="107:29" pos:end="107:32"><expr pos:start="107:29" pos:end="107:32"><name pos:start="107:29" pos:end="107:32">opts</name></expr></argument>, <argument pos:start="107:35" pos:end="107:41"><expr pos:start="107:35" pos:end="107:41"><literal type="string" pos:start="107:35" pos:end="107:41">"mcast"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:45" pos:end="139:5">{<block_content pos:start="109:9" pos:end="137:9">

        <decl_stmt pos:start="109:9" pos:end="109:38"><decl pos:start="109:9" pos:end="109:25"><type pos:start="109:9" pos:end="109:20"><specifier pos:start="109:9" pos:end="109:13">const</specifier> <name pos:start="109:15" pos:end="109:18">char</name> <modifier pos:start="109:20" pos:end="109:20">*</modifier></type><name pos:start="109:21" pos:end="109:25">mcast</name></decl>, <decl pos:start="109:28" pos:end="109:37"><type ref="prev" pos:start="109:9" pos:end="109:20"><modifier pos:start="109:28" pos:end="109:28">*</modifier></type><name pos:start="109:29" pos:end="109:37">localaddr</name></decl>;</decl_stmt>



        <if_stmt pos:start="113:9" pos:end="123:9"><if pos:start="113:9" pos:end="123:9">if <condition pos:start="113:12" pos:end="117:41">(<expr pos:start="113:13" pos:end="117:40"><call pos:start="113:13" pos:end="113:36"><name pos:start="113:13" pos:end="113:24">qemu_opt_get</name><argument_list pos:start="113:25" pos:end="113:36">(<argument pos:start="113:26" pos:end="113:29"><expr pos:start="113:26" pos:end="113:29"><name pos:start="113:26" pos:end="113:29">opts</name></expr></argument>, <argument pos:start="113:32" pos:end="113:35"><expr pos:start="113:32" pos:end="113:35"><literal type="string" pos:start="113:32" pos:end="113:35">"fd"</literal></expr></argument>)</argument_list></call> <operator pos:start="113:38" pos:end="113:39">||</operator>

            <call pos:start="115:13" pos:end="115:41"><name pos:start="115:13" pos:end="115:24">qemu_opt_get</name><argument_list pos:start="115:25" pos:end="115:41">(<argument pos:start="115:26" pos:end="115:29"><expr pos:start="115:26" pos:end="115:29"><name pos:start="115:26" pos:end="115:29">opts</name></expr></argument>, <argument pos:start="115:32" pos:end="115:40"><expr pos:start="115:32" pos:end="115:40"><literal type="string" pos:start="115:32" pos:end="115:40">"connect"</literal></expr></argument>)</argument_list></call> <operator pos:start="115:43" pos:end="115:44">||</operator>

            <call pos:start="117:13" pos:end="117:40"><name pos:start="117:13" pos:end="117:24">qemu_opt_get</name><argument_list pos:start="117:25" pos:end="117:40">(<argument pos:start="117:26" pos:end="117:29"><expr pos:start="117:26" pos:end="117:29"><name pos:start="117:26" pos:end="117:29">opts</name></expr></argument>, <argument pos:start="117:32" pos:end="117:39"><expr pos:start="117:32" pos:end="117:39"><literal type="string" pos:start="117:32" pos:end="117:39">"listen"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:43" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:22">

            <expr_stmt pos:start="119:13" pos:end="119:77"><expr pos:start="119:13" pos:end="119:76"><call pos:start="119:13" pos:end="119:76"><name pos:start="119:13" pos:end="119:24">error_report</name><argument_list pos:start="119:25" pos:end="119:76">(<argument pos:start="119:26" pos:end="119:75"><expr pos:start="119:26" pos:end="119:75"><literal type="string" pos:start="119:26" pos:end="119:75">"fd=, connect= and listen= is invalid with mcast="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="121:13" pos:end="121:22">return <expr pos:start="121:20" pos:end="121:21"><operator pos:start="121:20" pos:end="121:20">-</operator><literal type="number" pos:start="121:21" pos:end="121:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:44"><expr pos:start="127:9" pos:end="127:43"><name pos:start="127:9" pos:end="127:13">mcast</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <call pos:start="127:17" pos:end="127:43"><name pos:start="127:17" pos:end="127:28">qemu_opt_get</name><argument_list pos:start="127:29" pos:end="127:43">(<argument pos:start="127:30" pos:end="127:33"><expr pos:start="127:30" pos:end="127:33"><name pos:start="127:30" pos:end="127:33">opts</name></expr></argument>, <argument pos:start="127:36" pos:end="127:42"><expr pos:start="127:36" pos:end="127:42"><literal type="string" pos:start="127:36" pos:end="127:42">"mcast"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:52"><expr pos:start="129:9" pos:end="129:51"><name pos:start="129:9" pos:end="129:17">localaddr</name> <operator pos:start="129:19" pos:end="129:19">=</operator> <call pos:start="129:21" pos:end="129:51"><name pos:start="129:21" pos:end="129:32">qemu_opt_get</name><argument_list pos:start="129:33" pos:end="129:51">(<argument pos:start="129:34" pos:end="129:37"><expr pos:start="129:34" pos:end="129:37"><name pos:start="129:34" pos:end="129:37">opts</name></expr></argument>, <argument pos:start="129:40" pos:end="129:50"><expr pos:start="129:40" pos:end="129:50"><literal type="string" pos:start="129:40" pos:end="129:50">"localaddr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="133:9" pos:end="137:9"><if pos:start="133:9" pos:end="137:9">if <condition pos:start="133:12" pos:end="133:80">(<expr pos:start="133:13" pos:end="133:79"><call pos:start="133:13" pos:end="133:73"><name pos:start="133:13" pos:end="133:33">net_socket_mcast_init</name><argument_list pos:start="133:34" pos:end="133:73">(<argument pos:start="133:35" pos:end="133:38"><expr pos:start="133:35" pos:end="133:38"><name pos:start="133:35" pos:end="133:38">vlan</name></expr></argument>, <argument pos:start="133:41" pos:end="133:48"><expr pos:start="133:41" pos:end="133:48"><literal type="string" pos:start="133:41" pos:end="133:48">"socket"</literal></expr></argument>, <argument pos:start="133:51" pos:end="133:54"><expr pos:start="133:51" pos:end="133:54"><name pos:start="133:51" pos:end="133:54">name</name></expr></argument>, <argument pos:start="133:57" pos:end="133:61"><expr pos:start="133:57" pos:end="133:61"><name pos:start="133:57" pos:end="133:61">mcast</name></expr></argument>, <argument pos:start="133:64" pos:end="133:72"><expr pos:start="133:64" pos:end="133:72"><name pos:start="133:64" pos:end="133:72">localaddr</name></expr></argument>)</argument_list></call> <operator pos:start="133:75" pos:end="133:76">==</operator> <operator pos:start="133:78" pos:end="133:78">-</operator><literal type="number" pos:start="133:79" pos:end="133:79">1</literal></expr>)</condition> <block pos:start="133:82" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:22">

            <return pos:start="135:13" pos:end="135:22">return <expr pos:start="135:20" pos:end="135:21"><operator pos:start="135:20" pos:end="135:20">-</operator><literal type="number" pos:start="135:21" pos:end="135:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="139:7" pos:end="183:5">else if <condition pos:start="139:15" pos:end="139:41">(<expr pos:start="139:16" pos:end="139:40"><call pos:start="139:16" pos:end="139:40"><name pos:start="139:16" pos:end="139:27">qemu_opt_get</name><argument_list pos:start="139:28" pos:end="139:40">(<argument pos:start="139:29" pos:end="139:32"><expr pos:start="139:29" pos:end="139:32"><name pos:start="139:29" pos:end="139:32">opts</name></expr></argument>, <argument pos:start="139:35" pos:end="139:39"><expr pos:start="139:35" pos:end="139:39"><literal type="string" pos:start="139:35" pos:end="139:39">"udp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:43" pos:end="183:5">{<block_content pos:start="141:9" pos:end="181:9">

        <decl_stmt pos:start="141:9" pos:end="141:36"><decl pos:start="141:9" pos:end="141:23"><type pos:start="141:9" pos:end="141:20"><specifier pos:start="141:9" pos:end="141:13">const</specifier> <name pos:start="141:15" pos:end="141:18">char</name> <modifier pos:start="141:20" pos:end="141:20">*</modifier></type><name pos:start="141:21" pos:end="141:23">udp</name></decl>, <decl pos:start="141:26" pos:end="141:35"><type ref="prev" pos:start="141:9" pos:end="141:20"><modifier pos:start="141:26" pos:end="141:26">*</modifier></type><name pos:start="141:27" pos:end="141:35">localaddr</name></decl>;</decl_stmt>



        <if_stmt pos:start="145:9" pos:end="159:9"><if pos:start="145:9" pos:end="159:9">if <condition pos:start="145:12" pos:end="151:40">(<expr pos:start="145:13" pos:end="151:39"><call pos:start="145:13" pos:end="145:36"><name pos:start="145:13" pos:end="145:24">qemu_opt_get</name><argument_list pos:start="145:25" pos:end="145:36">(<argument pos:start="145:26" pos:end="145:29"><expr pos:start="145:26" pos:end="145:29"><name pos:start="145:26" pos:end="145:29">opts</name></expr></argument>, <argument pos:start="145:32" pos:end="145:35"><expr pos:start="145:32" pos:end="145:35"><literal type="string" pos:start="145:32" pos:end="145:35">"fd"</literal></expr></argument>)</argument_list></call> <operator pos:start="145:38" pos:end="145:39">||</operator>

            <call pos:start="147:13" pos:end="147:41"><name pos:start="147:13" pos:end="147:24">qemu_opt_get</name><argument_list pos:start="147:25" pos:end="147:41">(<argument pos:start="147:26" pos:end="147:29"><expr pos:start="147:26" pos:end="147:29"><name pos:start="147:26" pos:end="147:29">opts</name></expr></argument>, <argument pos:start="147:32" pos:end="147:40"><expr pos:start="147:32" pos:end="147:40"><literal type="string" pos:start="147:32" pos:end="147:40">"connect"</literal></expr></argument>)</argument_list></call> <operator pos:start="147:43" pos:end="147:44">||</operator>

            <call pos:start="149:13" pos:end="149:40"><name pos:start="149:13" pos:end="149:24">qemu_opt_get</name><argument_list pos:start="149:25" pos:end="149:40">(<argument pos:start="149:26" pos:end="149:29"><expr pos:start="149:26" pos:end="149:29"><name pos:start="149:26" pos:end="149:29">opts</name></expr></argument>, <argument pos:start="149:32" pos:end="149:39"><expr pos:start="149:32" pos:end="149:39"><literal type="string" pos:start="149:32" pos:end="149:39">"listen"</literal></expr></argument>)</argument_list></call> <operator pos:start="149:42" pos:end="149:43">||</operator>

            <call pos:start="151:13" pos:end="151:39"><name pos:start="151:13" pos:end="151:24">qemu_opt_get</name><argument_list pos:start="151:25" pos:end="151:39">(<argument pos:start="151:26" pos:end="151:29"><expr pos:start="151:26" pos:end="151:29"><name pos:start="151:26" pos:end="151:29">opts</name></expr></argument>, <argument pos:start="151:32" pos:end="151:38"><expr pos:start="151:32" pos:end="151:38"><literal type="string" pos:start="151:32" pos:end="151:38">"mcast"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:42" pos:end="159:9">{<block_content pos:start="153:13" pos:end="157:22">

            <expr_stmt pos:start="153:13" pos:end="155:61"><expr pos:start="153:13" pos:end="155:60"><call pos:start="153:13" pos:end="155:60"><name pos:start="153:13" pos:end="153:24">error_report</name><argument_list pos:start="153:25" pos:end="155:60">(<argument pos:start="153:26" pos:end="155:59"><expr pos:start="153:26" pos:end="155:59"><literal type="string" pos:start="153:26" pos:end="153:49">"fd=, connect=, listen="</literal>

                         <literal type="string" pos:start="155:26" pos:end="155:59">" and mcast= is invalid with udp="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="157:13" pos:end="157:22">return <expr pos:start="157:20" pos:end="157:21"><operator pos:start="157:20" pos:end="157:20">-</operator><literal type="number" pos:start="157:21" pos:end="157:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:40"><expr pos:start="163:9" pos:end="163:39"><name pos:start="163:9" pos:end="163:11">udp</name> <operator pos:start="163:13" pos:end="163:13">=</operator> <call pos:start="163:15" pos:end="163:39"><name pos:start="163:15" pos:end="163:26">qemu_opt_get</name><argument_list pos:start="163:27" pos:end="163:39">(<argument pos:start="163:28" pos:end="163:31"><expr pos:start="163:28" pos:end="163:31"><name pos:start="163:28" pos:end="163:31">opts</name></expr></argument>, <argument pos:start="163:34" pos:end="163:38"><expr pos:start="163:34" pos:end="163:38"><literal type="string" pos:start="163:34" pos:end="163:38">"udp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:52"><expr pos:start="165:9" pos:end="165:51"><name pos:start="165:9" pos:end="165:17">localaddr</name> <operator pos:start="165:19" pos:end="165:19">=</operator> <call pos:start="165:21" pos:end="165:51"><name pos:start="165:21" pos:end="165:32">qemu_opt_get</name><argument_list pos:start="165:33" pos:end="165:51">(<argument pos:start="165:34" pos:end="165:37"><expr pos:start="165:34" pos:end="165:37"><name pos:start="165:34" pos:end="165:37">opts</name></expr></argument>, <argument pos:start="165:40" pos:end="165:50"><expr pos:start="165:40" pos:end="165:50"><literal type="string" pos:start="165:40" pos:end="165:50">"localaddr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="173:9"><if pos:start="167:9" pos:end="173:9">if <condition pos:start="167:12" pos:end="167:30">(<expr pos:start="167:13" pos:end="167:29"><name pos:start="167:13" pos:end="167:21">localaddr</name> <operator pos:start="167:23" pos:end="167:24">==</operator> <name pos:start="167:26" pos:end="167:29">NULL</name></expr>)</condition> <block pos:start="167:32" pos:end="173:9">{<block_content pos:start="169:17" pos:end="171:26">

                <expr_stmt pos:start="169:17" pos:end="169:66"><expr pos:start="169:17" pos:end="169:65"><call pos:start="169:17" pos:end="169:65"><name pos:start="169:17" pos:end="169:28">error_report</name><argument_list pos:start="169:29" pos:end="169:65">(<argument pos:start="169:30" pos:end="169:64"><expr pos:start="169:30" pos:end="169:64"><literal type="string" pos:start="169:30" pos:end="169:64">"localaddr= is mandatory with udp="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="171:17" pos:end="171:26">return <expr pos:start="171:24" pos:end="171:25"><operator pos:start="171:24" pos:end="171:24">-</operator><literal type="number" pos:start="171:25" pos:end="171:25">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="177:9" pos:end="181:9"><if pos:start="177:9" pos:end="181:9">if <condition pos:start="177:12" pos:end="177:73">(<expr pos:start="177:13" pos:end="177:72"><call pos:start="177:13" pos:end="177:66"><name pos:start="177:13" pos:end="177:31">net_socket_udp_init</name><argument_list pos:start="177:32" pos:end="177:66">(<argument pos:start="177:33" pos:end="177:36"><expr pos:start="177:33" pos:end="177:36"><name pos:start="177:33" pos:end="177:36">vlan</name></expr></argument>, <argument pos:start="177:39" pos:end="177:43"><expr pos:start="177:39" pos:end="177:43"><literal type="string" pos:start="177:39" pos:end="177:43">"udp"</literal></expr></argument>, <argument pos:start="177:46" pos:end="177:49"><expr pos:start="177:46" pos:end="177:49"><name pos:start="177:46" pos:end="177:49">name</name></expr></argument>, <argument pos:start="177:52" pos:end="177:54"><expr pos:start="177:52" pos:end="177:54"><name pos:start="177:52" pos:end="177:54">udp</name></expr></argument>, <argument pos:start="177:57" pos:end="177:65"><expr pos:start="177:57" pos:end="177:65"><name pos:start="177:57" pos:end="177:65">localaddr</name></expr></argument>)</argument_list></call> <operator pos:start="177:68" pos:end="177:69">==</operator> <operator pos:start="177:71" pos:end="177:71">-</operator><literal type="number" pos:start="177:72" pos:end="177:72">1</literal></expr>)</condition> <block pos:start="177:75" pos:end="181:9">{<block_content pos:start="179:13" pos:end="179:22">

            <return pos:start="179:13" pos:end="179:22">return <expr pos:start="179:20" pos:end="179:21"><operator pos:start="179:20" pos:end="179:20">-</operator><literal type="number" pos:start="179:21" pos:end="179:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="183:7" pos:end="191:5">else <block pos:start="183:12" pos:end="191:5">{<block_content pos:start="185:9" pos:end="189:18">

        <expr_stmt pos:start="185:9" pos:end="187:50"><expr pos:start="185:9" pos:end="187:49"><call pos:start="185:9" pos:end="187:49"><name pos:start="185:9" pos:end="185:20">error_report</name><argument_list pos:start="185:21" pos:end="187:49">(<argument pos:start="185:22" pos:end="187:48"><expr pos:start="185:22" pos:end="187:48"><literal type="string" pos:start="185:22" pos:end="185:53">"-socket requires fd=, listen=,"</literal>

                     <literal type="string" pos:start="187:22" pos:end="187:48">" connect=, mcast= or udp="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="189:9" pos:end="189:18">return <expr pos:start="189:16" pos:end="189:17"><operator pos:start="189:16" pos:end="189:16">-</operator><literal type="number" pos:start="189:17" pos:end="189:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

    <return pos:start="193:5" pos:end="193:13">return <expr pos:start="193:12" pos:end="193:12"><literal type="number" pos:start="193:12" pos:end="193:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
