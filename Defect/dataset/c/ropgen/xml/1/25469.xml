<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25469.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">slavio_timer_init_all</name><parameter_list pos:start="1:34" pos:end="3:76">(<parameter pos:start="1:35" pos:end="1:57"><decl pos:start="1:35" pos:end="1:57"><type pos:start="1:35" pos:end="1:57"><name pos:start="1:35" pos:end="1:52">target_phys_addr_t</name></type> <name pos:start="1:54" pos:end="1:57">addr</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:78"><decl pos:start="1:60" pos:end="1:78"><type pos:start="1:60" pos:end="1:78"><name pos:start="1:60" pos:end="1:67">qemu_irq</name></type> <name pos:start="1:69" pos:end="1:78">master_irq</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:52"><decl pos:start="3:35" pos:end="3:52"><type pos:start="3:35" pos:end="3:52"><name pos:start="3:35" pos:end="3:42">qemu_irq</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:52">cpu_irqs</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:75"><decl pos:start="3:55" pos:end="3:75"><type pos:start="3:55" pos:end="3:75"><name pos:start="3:55" pos:end="3:62">unsigned</name> <name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:75">num_cpus</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:5">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">SysBusDevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:44"><expr pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:7">dev</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:43"><name pos:start="15:11" pos:end="15:21">qdev_create</name><argument_list pos:start="15:22" pos:end="15:43">(<argument pos:start="15:23" pos:end="15:26"><expr pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:26">NULL</name></expr></argument>, <argument pos:start="15:29" pos:end="15:42"><expr pos:start="15:29" pos:end="15:42"><literal type="string" pos:start="15:29" pos:end="15:42">"slavio_timer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:52"><expr pos:start="17:5" pos:end="17:51"><call pos:start="17:5" pos:end="17:51"><name pos:start="17:5" pos:end="17:24">qdev_prop_set_uint32</name><argument_list pos:start="17:25" pos:end="17:51">(<argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">dev</name></expr></argument>, <argument pos:start="17:31" pos:end="17:40"><expr pos:start="17:31" pos:end="17:40"><literal type="string" pos:start="17:31" pos:end="17:40">"num_cpus"</literal></expr></argument>, <argument pos:start="17:43" pos:end="17:50"><expr pos:start="17:43" pos:end="17:50"><name pos:start="17:43" pos:end="17:50">num_cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><call pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:13">qdev_init</name><argument_list pos:start="19:14" pos:end="19:18">(<argument pos:start="19:15" pos:end="19:17"><expr pos:start="19:15" pos:end="19:17"><name pos:start="19:15" pos:end="19:17">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:5">s</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:24">sysbus_from_qdev</name><argument_list pos:start="21:25" pos:end="21:29">(<argument pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><call pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:22">sysbus_connect_irq</name><argument_list pos:start="23:23" pos:end="23:40">(<argument pos:start="23:24" pos:end="23:24"><expr pos:start="23:24" pos:end="23:24"><name pos:start="23:24" pos:end="23:24">s</name></expr></argument>, <argument pos:start="23:27" pos:end="23:27"><expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr></argument>, <argument pos:start="23:30" pos:end="23:39"><expr pos:start="23:30" pos:end="23:39"><name pos:start="23:30" pos:end="23:39">master_irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:51"><expr pos:start="25:5" pos:end="25:50"><call pos:start="25:5" pos:end="25:50"><name pos:start="25:5" pos:end="25:19">sysbus_mmio_map</name><argument_list pos:start="25:20" pos:end="25:50">(<argument pos:start="25:21" pos:end="25:21"><expr pos:start="25:21" pos:end="25:21"><name pos:start="25:21" pos:end="25:21">s</name></expr></argument>, <argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr></argument>, <argument pos:start="25:27" pos:end="25:49"><expr pos:start="25:27" pos:end="25:49"><name pos:start="25:27" pos:end="25:30">addr</name> <operator pos:start="25:32" pos:end="25:32">+</operator> <name pos:start="25:34" pos:end="25:49">SYS_TIMER_OFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="35:5">for <control pos:start="29:9" pos:end="29:34">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:29"><expr pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:28">MAX_CPUS</name></expr>;</condition> <incr pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:31">i</name><operator pos:start="29:32" pos:end="29:33">++</operator></expr></incr>)</control> <block pos:start="29:36" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:50">

        <expr_stmt pos:start="31:9" pos:end="31:82"><expr pos:start="31:9" pos:end="31:81"><call pos:start="31:9" pos:end="31:81"><name pos:start="31:9" pos:end="31:23">sysbus_mmio_map</name><argument_list pos:start="31:24" pos:end="31:81">(<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">s</name></expr></argument>, <argument pos:start="31:28" pos:end="31:32"><expr pos:start="31:28" pos:end="31:32"><name pos:start="31:28" pos:end="31:28">i</name> <operator pos:start="31:30" pos:end="31:30">+</operator> <literal type="number" pos:start="31:32" pos:end="31:32">1</literal></expr></argument>, <argument pos:start="31:35" pos:end="31:80"><expr pos:start="31:35" pos:end="31:80"><name pos:start="31:35" pos:end="31:38">addr</name> <operator pos:start="31:40" pos:end="31:40">+</operator> <operator pos:start="31:42" pos:end="31:42">(</operator><name pos:start="31:43" pos:end="31:60">target_phys_addr_t</name><operator pos:start="31:61" pos:end="31:61">)</operator><call pos:start="31:62" pos:end="31:80"><name pos:start="31:62" pos:end="31:77">CPU_TIMER_OFFSET</name><argument_list pos:start="31:78" pos:end="31:80">(<argument pos:start="31:79" pos:end="31:79"><expr pos:start="31:79" pos:end="31:79"><name pos:start="31:79" pos:end="31:79">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:50"><expr pos:start="33:9" pos:end="33:49"><call pos:start="33:9" pos:end="33:49"><name pos:start="33:9" pos:end="33:26">sysbus_connect_irq</name><argument_list pos:start="33:27" pos:end="33:49">(<argument pos:start="33:28" pos:end="33:28"><expr pos:start="33:28" pos:end="33:28"><name pos:start="33:28" pos:end="33:28">s</name></expr></argument>, <argument pos:start="33:31" pos:end="33:35"><expr pos:start="33:31" pos:end="33:35"><name pos:start="33:31" pos:end="33:31">i</name> <operator pos:start="33:33" pos:end="33:33">+</operator> <literal type="number" pos:start="33:35" pos:end="33:35">1</literal></expr></argument>, <argument pos:start="33:38" pos:end="33:48"><expr pos:start="33:38" pos:end="33:48"><name pos:start="33:38" pos:end="33:48"><name pos:start="33:38" pos:end="33:45">cpu_irqs</name><index pos:start="33:46" pos:end="33:48">[<expr pos:start="33:47" pos:end="33:47"><name pos:start="33:47" pos:end="33:47">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
