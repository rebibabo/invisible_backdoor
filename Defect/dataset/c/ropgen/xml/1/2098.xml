<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2098.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">spapr_h_cas_compose_response</name><parameter_list pos:start="1:33" pos:end="5:64">(<parameter pos:start="1:34" pos:end="1:57"><decl pos:start="1:34" pos:end="1:57"><type pos:start="1:34" pos:end="1:57"><name pos:start="1:34" pos:end="1:50">sPAPRMachineState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">spapr</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:50"><decl pos:start="3:34" pos:end="3:50"><type pos:start="3:34" pos:end="3:50"><name pos:start="3:34" pos:end="3:45">target_ulong</name></type> <name pos:start="3:47" pos:end="3:50">addr</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:69"><decl pos:start="3:53" pos:end="3:69"><type pos:start="3:53" pos:end="3:69"><name pos:start="3:53" pos:end="3:64">target_ulong</name></type> <name pos:start="3:66" pos:end="3:69">size</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:63"><decl pos:start="5:34" pos:end="5:63"><type pos:start="5:34" pos:end="5:63"><name pos:start="5:34" pos:end="5:50">sPAPROptionVector</name> <modifier pos:start="5:52" pos:end="5:52">*</modifier></type><name pos:start="5:53" pos:end="5:63">ov5_updates</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="81:1">{<block_content pos:start="9:5" pos:end="79:13">

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">fdt</name></decl>, <decl pos:start="9:16" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:10"><modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">fdt_skel</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:58"><decl pos:start="11:5" pos:end="11:57"><type pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:31">sPAPRDeviceTreeUpdateHeader</name></type> <name pos:start="11:33" pos:end="11:35">hdr</name> <init pos:start="11:37" pos:end="11:57">= <expr pos:start="11:39" pos:end="11:57"><block pos:start="11:39" pos:end="11:57">{ <expr pos:start="11:41" pos:end="11:55"><operator pos:start="11:41" pos:end="11:41">.</operator><name pos:start="11:42" pos:end="11:51">version_id</name> <operator pos:start="11:53" pos:end="11:53">=</operator> <literal type="number" pos:start="11:55" pos:end="11:55">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:8">size</name> <operator pos:start="15:10" pos:end="15:11">-=</operator> <sizeof pos:start="15:13" pos:end="15:23">sizeof<argument_list pos:start="15:19" pos:end="15:23">(<argument pos:start="15:20" pos:end="15:22"><expr pos:start="15:20" pos:end="15:22"><name pos:start="15:20" pos:end="15:22">hdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:25">/* Create sceleton */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:12">fdt_skel</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:24">g_malloc0</name><argument_list pos:start="21:25" pos:end="21:30">(<argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:39"><expr pos:start="23:5" pos:end="23:38"><call pos:start="23:5" pos:end="23:38"><name pos:start="23:5" pos:end="23:8">_FDT</name><argument_list pos:start="23:9" pos:end="23:38">(<argument pos:start="23:10" pos:end="23:37"><expr pos:start="23:10" pos:end="23:37"><operator pos:start="23:10" pos:end="23:10">(</operator><call pos:start="23:11" pos:end="23:36"><name pos:start="23:11" pos:end="23:20">fdt_create</name><argument_list pos:start="23:21" pos:end="23:36">(<argument pos:start="23:22" pos:end="23:29"><expr pos:start="23:22" pos:end="23:29"><name pos:start="23:22" pos:end="23:29">fdt_skel</name></expr></argument>, <argument pos:start="23:32" pos:end="23:35"><expr pos:start="23:32" pos:end="23:35"><name pos:start="23:32" pos:end="23:35">size</name></expr></argument>)</argument_list></call><operator pos:start="23:37" pos:end="23:37">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><call pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:8">_FDT</name><argument_list pos:start="25:9" pos:end="25:40">(<argument pos:start="25:10" pos:end="25:39"><expr pos:start="25:10" pos:end="25:39"><operator pos:start="25:10" pos:end="25:10">(</operator><call pos:start="25:11" pos:end="25:38"><name pos:start="25:11" pos:end="25:24">fdt_begin_node</name><argument_list pos:start="25:25" pos:end="25:38">(<argument pos:start="25:26" pos:end="25:33"><expr pos:start="25:26" pos:end="25:33"><name pos:start="25:26" pos:end="25:33">fdt_skel</name></expr></argument>, <argument pos:start="25:36" pos:end="25:37"><expr pos:start="25:36" pos:end="25:37"><literal type="string" pos:start="25:36" pos:end="25:37">""</literal></expr></argument>)</argument_list></call><operator pos:start="25:39" pos:end="25:39">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><call pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:8">_FDT</name><argument_list pos:start="27:9" pos:end="27:34">(<argument pos:start="27:10" pos:end="27:33"><expr pos:start="27:10" pos:end="27:33"><operator pos:start="27:10" pos:end="27:10">(</operator><call pos:start="27:11" pos:end="27:32"><name pos:start="27:11" pos:end="27:22">fdt_end_node</name><argument_list pos:start="27:23" pos:end="27:32">(<argument pos:start="27:24" pos:end="27:31"><expr pos:start="27:24" pos:end="27:31"><name pos:start="27:24" pos:end="27:31">fdt_skel</name></expr></argument>)</argument_list></call><operator pos:start="27:33" pos:end="27:33">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><call pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:8">_FDT</name><argument_list pos:start="29:9" pos:end="29:32">(<argument pos:start="29:10" pos:end="29:31"><expr pos:start="29:10" pos:end="29:31"><operator pos:start="29:10" pos:end="29:10">(</operator><call pos:start="29:11" pos:end="29:30"><name pos:start="29:11" pos:end="29:20">fdt_finish</name><argument_list pos:start="29:21" pos:end="29:30">(<argument pos:start="29:22" pos:end="29:29"><expr pos:start="29:22" pos:end="29:29"><name pos:start="29:22" pos:end="29:29">fdt_skel</name></expr></argument>)</argument_list></call><operator pos:start="29:31" pos:end="29:31">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:7">fdt</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:25"><name pos:start="31:11" pos:end="31:19">g_malloc0</name><argument_list pos:start="31:20" pos:end="31:25">(<argument pos:start="31:21" pos:end="31:24"><expr pos:start="31:21" pos:end="31:24"><name pos:start="31:21" pos:end="31:24">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:47"><expr pos:start="33:5" pos:end="33:46"><call pos:start="33:5" pos:end="33:46"><name pos:start="33:5" pos:end="33:8">_FDT</name><argument_list pos:start="33:9" pos:end="33:46">(<argument pos:start="33:10" pos:end="33:45"><expr pos:start="33:10" pos:end="33:45"><operator pos:start="33:10" pos:end="33:10">(</operator><call pos:start="33:11" pos:end="33:44"><name pos:start="33:11" pos:end="33:23">fdt_open_into</name><argument_list pos:start="33:24" pos:end="33:44">(<argument pos:start="33:25" pos:end="33:32"><expr pos:start="33:25" pos:end="33:32"><name pos:start="33:25" pos:end="33:32">fdt_skel</name></expr></argument>, <argument pos:start="33:35" pos:end="33:37"><expr pos:start="33:35" pos:end="33:37"><name pos:start="33:35" pos:end="33:37">fdt</name></expr></argument>, <argument pos:start="33:40" pos:end="33:43"><expr pos:start="33:40" pos:end="33:43"><name pos:start="33:40" pos:end="33:43">size</name></expr></argument>)</argument_list></call><operator pos:start="33:45" pos:end="33:45">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><call pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:10">g_free</name><argument_list pos:start="35:11" pos:end="35:20">(<argument pos:start="35:12" pos:end="35:19"><expr pos:start="35:12" pos:end="35:19"><name pos:start="35:12" pos:end="35:19">fdt_skel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:25">/* Fixup cpu nodes */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:43"><expr pos:start="41:5" pos:end="41:42"><call pos:start="41:5" pos:end="41:42"><name pos:start="41:5" pos:end="41:8">_FDT</name><argument_list pos:start="41:9" pos:end="41:42">(<argument pos:start="41:10" pos:end="41:41"><expr pos:start="41:10" pos:end="41:41"><operator pos:start="41:10" pos:end="41:10">(</operator><call pos:start="41:11" pos:end="41:40"><name pos:start="41:11" pos:end="41:28">spapr_fixup_cpu_dt</name><argument_list pos:start="41:29" pos:end="41:40">(<argument pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:32">fdt</name></expr></argument>, <argument pos:start="41:35" pos:end="41:39"><expr pos:start="41:35" pos:end="41:39"><name pos:start="41:35" pos:end="41:39">spapr</name></expr></argument>)</argument_list></call><operator pos:start="41:41" pos:end="41:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:54">(<expr pos:start="45:9" pos:end="45:53"><call pos:start="45:9" pos:end="45:53"><name pos:start="45:9" pos:end="45:28">spapr_dt_cas_updates</name><argument_list pos:start="45:29" pos:end="45:53">(<argument pos:start="45:30" pos:end="45:34"><expr pos:start="45:30" pos:end="45:34"><name pos:start="45:30" pos:end="45:34">spapr</name></expr></argument>, <argument pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><name pos:start="45:37" pos:end="45:39">fdt</name></expr></argument>, <argument pos:start="45:42" pos:end="45:52"><expr pos:start="45:42" pos:end="45:52"><name pos:start="45:42" pos:end="45:52">ov5_updates</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:56" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:18">

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:29">/* Pack resulting tree */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:26"><expr pos:start="55:5" pos:end="55:25"><call pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:8">_FDT</name><argument_list pos:start="55:9" pos:end="55:25">(<argument pos:start="55:10" pos:end="55:24"><expr pos:start="55:10" pos:end="55:24"><operator pos:start="55:10" pos:end="55:10">(</operator><call pos:start="55:11" pos:end="55:23"><name pos:start="55:11" pos:end="55:18">fdt_pack</name><argument_list pos:start="55:19" pos:end="55:23">(<argument pos:start="55:20" pos:end="55:22"><expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">fdt</name></expr></argument>)</argument_list></call><operator pos:start="55:24" pos:end="55:24">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:48">(<expr pos:start="59:9" pos:end="59:47"><call pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:21">fdt_totalsize</name><argument_list pos:start="59:22" pos:end="59:26">(<argument pos:start="59:23" pos:end="59:25"><expr pos:start="59:23" pos:end="59:25"><name pos:start="59:23" pos:end="59:25">fdt</name></expr></argument>)</argument_list></call> <operator pos:start="59:28" pos:end="59:28">+</operator> <sizeof pos:start="59:30" pos:end="59:40">sizeof<argument_list pos:start="59:36" pos:end="59:40">(<argument pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><name pos:start="59:37" pos:end="59:39">hdr</name></expr></argument>)</argument_list></sizeof> <operator pos:start="59:42" pos:end="59:42">&gt;</operator> <name pos:start="59:44" pos:end="59:47">size</name></expr>)</condition> <block pos:start="59:50" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:18">

        <expr_stmt pos:start="61:9" pos:end="61:37"><expr pos:start="61:9" pos:end="61:36"><call pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:30">trace_spapr_cas_failed</name><argument_list pos:start="61:31" pos:end="61:36">(<argument pos:start="61:32" pos:end="61:35"><expr pos:start="61:32" pos:end="61:35"><name pos:start="61:32" pos:end="61:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:55"><expr pos:start="69:5" pos:end="69:54"><call pos:start="69:5" pos:end="69:54"><name pos:start="69:5" pos:end="69:29">cpu_physical_memory_write</name><argument_list pos:start="69:30" pos:end="69:54">(<argument pos:start="69:31" pos:end="69:34"><expr pos:start="69:31" pos:end="69:34"><name pos:start="69:31" pos:end="69:34">addr</name></expr></argument>, <argument pos:start="69:37" pos:end="69:40"><expr pos:start="69:37" pos:end="69:40"><operator pos:start="69:37" pos:end="69:37">&amp;</operator><name pos:start="69:38" pos:end="69:40">hdr</name></expr></argument>, <argument pos:start="69:43" pos:end="69:53"><expr pos:start="69:43" pos:end="69:53"><sizeof pos:start="69:43" pos:end="69:53">sizeof<argument_list pos:start="69:49" pos:end="69:53">(<argument pos:start="69:50" pos:end="69:52"><expr pos:start="69:50" pos:end="69:52"><name pos:start="69:50" pos:end="69:52">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:75"><expr pos:start="71:5" pos:end="71:74"><call pos:start="71:5" pos:end="71:74"><name pos:start="71:5" pos:end="71:29">cpu_physical_memory_write</name><argument_list pos:start="71:30" pos:end="71:74">(<argument pos:start="71:31" pos:end="71:48"><expr pos:start="71:31" pos:end="71:48"><name pos:start="71:31" pos:end="71:34">addr</name> <operator pos:start="71:36" pos:end="71:36">+</operator> <sizeof pos:start="71:38" pos:end="71:48">sizeof<argument_list pos:start="71:44" pos:end="71:48">(<argument pos:start="71:45" pos:end="71:47"><expr pos:start="71:45" pos:end="71:47"><name pos:start="71:45" pos:end="71:47">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="71:51" pos:end="71:53"><expr pos:start="71:51" pos:end="71:53"><name pos:start="71:51" pos:end="71:53">fdt</name></expr></argument>, <argument pos:start="71:56" pos:end="71:73"><expr pos:start="71:56" pos:end="71:73"><call pos:start="71:56" pos:end="71:73"><name pos:start="71:56" pos:end="71:68">fdt_totalsize</name><argument_list pos:start="71:69" pos:end="71:73">(<argument pos:start="71:70" pos:end="71:72"><expr pos:start="71:70" pos:end="71:72"><name pos:start="71:70" pos:end="71:72">fdt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:63"><expr pos:start="73:5" pos:end="73:62"><call pos:start="73:5" pos:end="73:62"><name pos:start="73:5" pos:end="73:28">trace_spapr_cas_continue</name><argument_list pos:start="73:29" pos:end="73:62">(<argument pos:start="73:30" pos:end="73:61"><expr pos:start="73:30" pos:end="73:61"><call pos:start="73:30" pos:end="73:47"><name pos:start="73:30" pos:end="73:42">fdt_totalsize</name><argument_list pos:start="73:43" pos:end="73:47">(<argument pos:start="73:44" pos:end="73:46"><expr pos:start="73:44" pos:end="73:46"><name pos:start="73:44" pos:end="73:46">fdt</name></expr></argument>)</argument_list></call> <operator pos:start="73:49" pos:end="73:49">+</operator> <sizeof pos:start="73:51" pos:end="73:61">sizeof<argument_list pos:start="73:57" pos:end="73:61">(<argument pos:start="73:58" pos:end="73:60"><expr pos:start="73:58" pos:end="73:60"><name pos:start="73:58" pos:end="73:60">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:16"><expr pos:start="75:5" pos:end="75:15"><call pos:start="75:5" pos:end="75:15"><name pos:start="75:5" pos:end="75:10">g_free</name><argument_list pos:start="75:11" pos:end="75:15">(<argument pos:start="75:12" pos:end="75:14"><expr pos:start="75:12" pos:end="75:14"><name pos:start="75:12" pos:end="75:14">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
