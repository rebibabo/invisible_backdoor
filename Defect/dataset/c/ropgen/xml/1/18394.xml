<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18394.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mov_write_hdlr_tag</name><parameter_list pos:start="1:30" pos:end="1:63">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:41">AVIOContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">pb</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><name pos:start="1:48" pos:end="1:55">MOVTrack</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:62">track</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:32">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">hdlr</name></decl>, <decl pos:start="5:23" pos:end="5:35"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:28">descr</name> <init pos:start="5:30" pos:end="5:35">= <expr pos:start="5:32" pos:end="5:35"><name pos:start="5:32" pos:end="5:35">NULL</name></expr></init></decl>, <decl pos:start="5:38" pos:end="5:54"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:47">hdlr_type</name> <init pos:start="5:49" pos:end="5:54">= <expr pos:start="5:51" pos:end="5:54"><name pos:start="5:51" pos:end="5:54">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">pos</name> <init pos:start="7:17" pos:end="7:31">= <expr pos:start="7:19" pos:end="7:31"><call pos:start="7:19" pos:end="7:31"><name pos:start="7:19" pos:end="7:27">avio_tell</name><argument_list pos:start="7:28" pos:end="7:31">(<argument pos:start="7:29" pos:end="7:30"><expr pos:start="7:29" pos:end="7:30"><name pos:start="7:29" pos:end="7:30">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="51:5"><if pos:start="11:5" pos:end="51:5">if <condition pos:start="11:8" pos:end="11:15">(<expr pos:start="11:9" pos:end="11:14"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:14">track</name></expr>)</condition> <block pos:start="11:17" pos:end="51:5">{<block_content pos:start="17:9" pos:end="49:9"> <comment type="block" pos:start="11:19" pos:end="11:49">/* no media --&gt; data handler */</comment>





        <expr_stmt pos:start="17:9" pos:end="17:63"><expr pos:start="17:9" pos:end="17:62"><name pos:start="17:9" pos:end="17:12">hdlr</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <ternary pos:start="17:16" pos:end="17:62"><condition pos:start="17:16" pos:end="17:42"><expr pos:start="17:16" pos:end="17:40"><operator pos:start="17:16" pos:end="17:16">(</operator><name pos:start="17:17" pos:end="17:27"><name pos:start="17:17" pos:end="17:21">track</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:27">mode</name></name> <operator pos:start="17:29" pos:end="17:30">==</operator> <name pos:start="17:32" pos:end="17:39">MODE_MOV</name><operator pos:start="17:40" pos:end="17:40">)</operator></expr> ?</condition><then pos:start="17:44" pos:end="17:49"> <expr pos:start="17:44" pos:end="17:49"><literal type="string" pos:start="17:44" pos:end="17:49">"mhlr"</literal></expr> </then><else pos:start="17:51" pos:end="17:62">: <expr pos:start="17:53" pos:end="17:62"><literal type="string" pos:start="17:53" pos:end="17:62">"\0\0\0\0"</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="49:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:57">(<expr pos:start="19:13" pos:end="19:56"><name pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:17">track</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:22">enc</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:34">codec_type</name></name> <operator pos:start="19:36" pos:end="19:37">==</operator> <name pos:start="19:39" pos:end="19:56">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="19:59" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:35">

            <expr_stmt pos:start="21:13" pos:end="21:31"><expr pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:21">hdlr_type</name> <operator pos:start="21:23" pos:end="21:23">=</operator> <literal type="string" pos:start="21:25" pos:end="21:30">"vide"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:35"><expr pos:start="23:13" pos:end="23:34"><name pos:start="23:13" pos:end="23:17">descr</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="string" pos:start="23:21" pos:end="23:34">"VideoHandler"</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="25:11" pos:end="31:9">else if <condition pos:start="25:19" pos:end="25:64">(<expr pos:start="25:20" pos:end="25:63"><name pos:start="25:20" pos:end="25:41"><name pos:start="25:20" pos:end="25:24">track</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:29">enc</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:41">codec_type</name></name> <operator pos:start="25:43" pos:end="25:44">==</operator> <name pos:start="25:46" pos:end="25:63">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="25:66" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:35">

            <expr_stmt pos:start="27:13" pos:end="27:31"><expr pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:21">hdlr_type</name> <operator pos:start="27:23" pos:end="27:23">=</operator> <literal type="string" pos:start="27:25" pos:end="27:30">"soun"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:35"><expr pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:17">descr</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <literal type="string" pos:start="29:21" pos:end="29:34">"SoundHandler"</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="31:11" pos:end="39:9">else if <condition pos:start="31:19" pos:end="31:67">(<expr pos:start="31:20" pos:end="31:66"><name pos:start="31:20" pos:end="31:41"><name pos:start="31:20" pos:end="31:24">track</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:29">enc</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:41">codec_type</name></name> <operator pos:start="31:43" pos:end="31:44">==</operator> <name pos:start="31:46" pos:end="31:66">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="31:69" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:38">

            <if_stmt pos:start="33:13" pos:end="35:73"><if pos:start="33:13" pos:end="33:73">if <condition pos:start="33:16" pos:end="33:53">(<expr pos:start="33:17" pos:end="33:52"><name pos:start="33:17" pos:end="33:26"><name pos:start="33:17" pos:end="33:21">track</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:26">tag</name></name> <operator pos:start="33:28" pos:end="33:29">==</operator> <call pos:start="33:31" pos:end="33:52"><name pos:start="33:31" pos:end="33:35">MKTAG</name><argument_list pos:start="33:36" pos:end="33:52">(<argument pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><literal type="char" pos:start="33:37" pos:end="33:39">'t'</literal></expr></argument>,<argument pos:start="33:41" pos:end="33:43"><expr pos:start="33:41" pos:end="33:43"><literal type="char" pos:start="33:41" pos:end="33:43">'x'</literal></expr></argument>,<argument pos:start="33:45" pos:end="33:47"><expr pos:start="33:45" pos:end="33:47"><literal type="char" pos:start="33:45" pos:end="33:47">'3'</literal></expr></argument>,<argument pos:start="33:49" pos:end="33:51"><expr pos:start="33:49" pos:end="33:51"><literal type="char" pos:start="33:49" pos:end="33:51">'g'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:55" pos:end="33:73"><block_content pos:start="33:55" pos:end="33:73"> <expr_stmt pos:start="33:55" pos:end="33:73"><expr pos:start="33:55" pos:end="33:72"><name pos:start="33:55" pos:end="33:63">hdlr_type</name> <operator pos:start="33:65" pos:end="33:65">=</operator> <literal type="string" pos:start="33:67" pos:end="33:72">"sbtl"</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="35:13" pos:end="35:73">else<block type="pseudo" pos:start="35:55" pos:end="35:73"><block_content pos:start="35:55" pos:end="35:73">                                      <expr_stmt pos:start="35:55" pos:end="35:73"><expr pos:start="35:55" pos:end="35:72"><name pos:start="35:55" pos:end="35:63">hdlr_type</name> <operator pos:start="35:65" pos:end="35:65">=</operator> <literal type="string" pos:start="35:67" pos:end="35:72">"text"</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:38"><expr pos:start="37:13" pos:end="37:37"><name pos:start="37:13" pos:end="37:17">descr</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="string" pos:start="37:21" pos:end="37:37">"SubtitleHandler"</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="49:9">else if <condition pos:start="39:19" pos:end="39:67">(<expr pos:start="39:20" pos:end="39:66"><name pos:start="39:20" pos:end="39:40"><name pos:start="39:20" pos:end="39:24">track</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:29">enc</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:40">codec_tag</name></name> <operator pos:start="39:42" pos:end="39:43">==</operator> <call pos:start="39:45" pos:end="39:66"><name pos:start="39:45" pos:end="39:49">MKTAG</name><argument_list pos:start="39:50" pos:end="39:66">(<argument pos:start="39:51" pos:end="39:53"><expr pos:start="39:51" pos:end="39:53"><literal type="char" pos:start="39:51" pos:end="39:53">'r'</literal></expr></argument>,<argument pos:start="39:55" pos:end="39:57"><expr pos:start="39:55" pos:end="39:57"><literal type="char" pos:start="39:55" pos:end="39:57">'t'</literal></expr></argument>,<argument pos:start="39:59" pos:end="39:61"><expr pos:start="39:59" pos:end="39:61"><literal type="char" pos:start="39:59" pos:end="39:61">'p'</literal></expr></argument>,<argument pos:start="39:63" pos:end="39:65"><expr pos:start="39:63" pos:end="39:65"><literal type="char" pos:start="39:63" pos:end="39:65">' '</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:69" pos:end="49:9">{<block_content pos:start="41:13" pos:end="43:34">

            <expr_stmt pos:start="41:13" pos:end="41:31"><expr pos:start="41:13" pos:end="41:30"><name pos:start="41:13" pos:end="41:21">hdlr_type</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <literal type="string" pos:start="41:25" pos:end="41:30">"hint"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:34"><expr pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:17">descr</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="string" pos:start="43:21" pos:end="43:33">"HintHandler"</literal></expr>;</expr_stmt>





        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:21"><expr pos:start="55:5" pos:end="55:20"><call pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:13">avio_wb32</name><argument_list pos:start="55:14" pos:end="55:20">(<argument pos:start="55:15" pos:end="55:16"><expr pos:start="55:15" pos:end="55:16"><name pos:start="55:15" pos:end="55:16">pb</name></expr></argument>, <argument pos:start="55:19" pos:end="55:19"><expr pos:start="55:19" pos:end="55:19"><literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="55:23" pos:end="55:32">/* size */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:29"><expr pos:start="57:5" pos:end="57:28"><call pos:start="57:5" pos:end="57:28"><name pos:start="57:5" pos:end="57:16">ffio_wfourcc</name><argument_list pos:start="57:17" pos:end="57:28">(<argument pos:start="57:18" pos:end="57:19"><expr pos:start="57:18" pos:end="57:19"><name pos:start="57:18" pos:end="57:19">pb</name></expr></argument>, <argument pos:start="57:22" pos:end="57:27"><expr pos:start="57:22" pos:end="57:27"><literal type="string" pos:start="57:22" pos:end="57:27">"hdlr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:21"><expr pos:start="59:5" pos:end="59:20"><call pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:13">avio_wb32</name><argument_list pos:start="59:14" pos:end="59:20">(<argument pos:start="59:15" pos:end="59:16"><expr pos:start="59:15" pos:end="59:16"><name pos:start="59:15" pos:end="59:16">pb</name></expr></argument>, <argument pos:start="59:19" pos:end="59:19"><expr pos:start="59:19" pos:end="59:19"><literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:23" pos:end="59:43">/* Version &amp; flags */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:28"><expr pos:start="61:5" pos:end="61:27"><call pos:start="61:5" pos:end="61:27"><name pos:start="61:5" pos:end="61:14">avio_write</name><argument_list pos:start="61:15" pos:end="61:27">(<argument pos:start="61:16" pos:end="61:17"><expr pos:start="61:16" pos:end="61:17"><name pos:start="61:16" pos:end="61:17">pb</name></expr></argument>, <argument pos:start="61:20" pos:end="61:23"><expr pos:start="61:20" pos:end="61:23"><name pos:start="61:20" pos:end="61:23">hdlr</name></expr></argument>, <argument pos:start="61:26" pos:end="61:26"><expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:30" pos:end="61:42">/* handler */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><call pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:16">ffio_wfourcc</name><argument_list pos:start="63:17" pos:end="63:31">(<argument pos:start="63:18" pos:end="63:19"><expr pos:start="63:18" pos:end="63:19"><name pos:start="63:18" pos:end="63:19">pb</name></expr></argument>, <argument pos:start="63:22" pos:end="63:30"><expr pos:start="63:22" pos:end="63:30"><name pos:start="63:22" pos:end="63:30">hdlr_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="63:34" pos:end="63:51">/* handler type */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:21"><expr pos:start="65:5" pos:end="65:20"><call pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:13">avio_wb32</name><argument_list pos:start="65:14" pos:end="65:20">(<argument pos:start="65:15" pos:end="65:16"><expr pos:start="65:15" pos:end="65:16"><name pos:start="65:15" pos:end="65:16">pb</name></expr></argument> ,<argument pos:start="65:19" pos:end="65:19"><expr pos:start="65:19" pos:end="65:19"><literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:23" pos:end="65:36">/* reserved */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:21"><expr pos:start="67:5" pos:end="67:20"><call pos:start="67:5" pos:end="67:20"><name pos:start="67:5" pos:end="67:13">avio_wb32</name><argument_list pos:start="67:14" pos:end="67:20">(<argument pos:start="67:15" pos:end="67:16"><expr pos:start="67:15" pos:end="67:16"><name pos:start="67:15" pos:end="67:16">pb</name></expr></argument> ,<argument pos:start="67:19" pos:end="67:19"><expr pos:start="67:19" pos:end="67:19"><literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:23" pos:end="67:36">/* reserved */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:21"><expr pos:start="69:5" pos:end="69:20"><call pos:start="69:5" pos:end="69:20"><name pos:start="69:5" pos:end="69:13">avio_wb32</name><argument_list pos:start="69:14" pos:end="69:20">(<argument pos:start="69:15" pos:end="69:16"><expr pos:start="69:15" pos:end="69:16"><name pos:start="69:15" pos:end="69:16">pb</name></expr></argument> ,<argument pos:start="69:19" pos:end="69:19"><expr pos:start="69:19" pos:end="69:19"><literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="69:23" pos:end="69:36">/* reserved */</comment>

    <if_stmt pos:start="71:5" pos:end="73:35"><if pos:start="71:5" pos:end="73:35">if <condition pos:start="71:8" pos:end="71:42">(<expr pos:start="71:9" pos:end="71:41"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:14">track</name> <operator pos:start="71:16" pos:end="71:17">||</operator> <name pos:start="71:19" pos:end="71:29"><name pos:start="71:19" pos:end="71:23">track</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:29">mode</name></name> <operator pos:start="71:31" pos:end="71:32">==</operator> <name pos:start="71:34" pos:end="71:41">MODE_MOV</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:35"><block_content pos:start="73:9" pos:end="73:35">

        <expr_stmt pos:start="73:9" pos:end="73:35"><expr pos:start="73:9" pos:end="73:34"><call pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:15">avio_w8</name><argument_list pos:start="73:16" pos:end="73:34">(<argument pos:start="73:17" pos:end="73:18"><expr pos:start="73:17" pos:end="73:18"><name pos:start="73:17" pos:end="73:18">pb</name></expr></argument>, <argument pos:start="73:21" pos:end="73:33"><expr pos:start="73:21" pos:end="73:33"><call pos:start="73:21" pos:end="73:33"><name pos:start="73:21" pos:end="73:26">strlen</name><argument_list pos:start="73:27" pos:end="73:33">(<argument pos:start="73:28" pos:end="73:32"><expr pos:start="73:28" pos:end="73:32"><name pos:start="73:28" pos:end="73:32">descr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="73:37" pos:end="73:55">/* pascal string */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:41"><expr pos:start="75:5" pos:end="75:40"><call pos:start="75:5" pos:end="75:40"><name pos:start="75:5" pos:end="75:14">avio_write</name><argument_list pos:start="75:15" pos:end="75:40">(<argument pos:start="75:16" pos:end="75:17"><expr pos:start="75:16" pos:end="75:17"><name pos:start="75:16" pos:end="75:17">pb</name></expr></argument>, <argument pos:start="75:20" pos:end="75:24"><expr pos:start="75:20" pos:end="75:24"><name pos:start="75:20" pos:end="75:24">descr</name></expr></argument>, <argument pos:start="75:27" pos:end="75:39"><expr pos:start="75:27" pos:end="75:39"><call pos:start="75:27" pos:end="75:39"><name pos:start="75:27" pos:end="75:32">strlen</name><argument_list pos:start="75:33" pos:end="75:39">(<argument pos:start="75:34" pos:end="75:38"><expr pos:start="75:34" pos:end="75:38"><name pos:start="75:34" pos:end="75:38">descr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="75:43" pos:end="75:67">/* handler description */</comment>

    <if_stmt pos:start="77:5" pos:end="79:23"><if pos:start="77:5" pos:end="79:23">if <condition pos:start="77:8" pos:end="77:41">(<expr pos:start="77:9" pos:end="77:40"><name pos:start="77:9" pos:end="77:13">track</name> <operator pos:start="77:15" pos:end="77:16">&amp;&amp;</operator> <name pos:start="77:18" pos:end="77:28"><name pos:start="77:18" pos:end="77:22">track</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:28">mode</name></name> <operator pos:start="77:30" pos:end="77:31">!=</operator> <name pos:start="77:33" pos:end="77:40">MODE_MOV</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:23"><block_content pos:start="79:9" pos:end="79:23">

        <expr_stmt pos:start="79:9" pos:end="79:23"><expr pos:start="79:9" pos:end="79:22"><call pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:15">avio_w8</name><argument_list pos:start="79:16" pos:end="79:22">(<argument pos:start="79:17" pos:end="79:18"><expr pos:start="79:17" pos:end="79:18"><name pos:start="79:17" pos:end="79:18">pb</name></expr></argument>, <argument pos:start="79:21" pos:end="79:21"><expr pos:start="79:21" pos:end="79:21"><literal type="number" pos:start="79:21" pos:end="79:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="79:25" pos:end="79:38">/* c string */</comment>

    <return pos:start="81:5" pos:end="81:32">return <expr pos:start="81:12" pos:end="81:31"><call pos:start="81:12" pos:end="81:31"><name pos:start="81:12" pos:end="81:22">update_size</name><argument_list pos:start="81:23" pos:end="81:31">(<argument pos:start="81:24" pos:end="81:25"><expr pos:start="81:24" pos:end="81:25"><name pos:start="81:24" pos:end="81:25">pb</name></expr></argument>, <argument pos:start="81:28" pos:end="81:30"><expr pos:start="81:28" pos:end="81:30"><name pos:start="81:28" pos:end="81:30">pos</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function></unit>
