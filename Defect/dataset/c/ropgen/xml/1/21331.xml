<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21331.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_bdlt</name><parameter_list pos:start="1:23" pos:end="3:66">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:30">uint8_t</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:37">frame</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:48"><decl pos:start="1:40" pos:end="1:48"><type pos:start="1:40" pos:end="1:48"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:48">width</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:60">height</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:41"><decl pos:start="3:24" pos:end="3:41"><type pos:start="3:24" pos:end="3:41"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:36">uint8_t</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">src</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:65"><decl pos:start="3:44" pos:end="3:65"><type pos:start="3:44" pos:end="3:65"><specifier pos:start="3:44" pos:end="3:48">const</specifier> <name pos:start="3:50" pos:end="3:56">uint8_t</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:65">src_end</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:13">

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:53"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:28">frame_end</name> <init pos:start="7:30" pos:end="7:53">= <expr pos:start="7:32" pos:end="7:53"><name pos:start="7:32" pos:end="7:36">frame</name> <operator pos:start="7:38" pos:end="7:38">+</operator> <name pos:start="7:40" pos:end="7:44">width</name> <operator pos:start="7:46" pos:end="7:46">*</operator> <name pos:start="7:48" pos:end="7:53">height</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:21">line_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">count</name></decl>, <decl pos:start="11:16" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:20">lines</name></decl>, <decl pos:start="11:23" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:30">segments</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:9">count</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:37"><name pos:start="15:13" pos:end="15:31">bytestream_get_le16</name><argument_list pos:start="15:32" pos:end="15:37">(<argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><operator pos:start="15:33" pos:end="15:33">&amp;</operator><name pos:start="15:34" pos:end="15:36">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:45">(<expr pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:13">count</name> <operator pos:start="17:15" pos:end="17:16">&gt;=</operator> <name pos:start="17:18" pos:end="17:23">height</name> <operator pos:start="17:25" pos:end="17:26">||</operator> <name pos:start="17:28" pos:end="17:32">width</name> <operator pos:start="17:34" pos:end="17:34">*</operator> <name pos:start="17:36" pos:end="17:40">count</name> <operator pos:start="17:42" pos:end="17:42">&lt;</operator> <literal type="number" pos:start="17:44" pos:end="17:44">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:9">frame</name> <operator pos:start="21:11" pos:end="21:12">+=</operator> <name pos:start="21:14" pos:end="21:18">width</name> <operator pos:start="21:20" pos:end="21:20">*</operator> <name pos:start="21:22" pos:end="21:26">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:9">lines</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:31">bytestream_get_le16</name><argument_list pos:start="23:32" pos:end="23:37">(<argument pos:start="23:33" pos:end="23:36"><expr pos:start="23:33" pos:end="23:36"><operator pos:start="23:33" pos:end="23:33">&amp;</operator><name pos:start="23:34" pos:end="23:36">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:60">(<expr pos:start="25:9" pos:end="25:59"><name pos:start="25:9" pos:end="25:13">frame</name> <operator pos:start="25:15" pos:end="25:15">+</operator> <name pos:start="25:17" pos:end="25:21">lines</name> <operator pos:start="25:23" pos:end="25:23">*</operator> <name pos:start="25:25" pos:end="25:29">width</name> <operator pos:start="25:31" pos:end="25:31">&gt;</operator> <name pos:start="25:33" pos:end="25:41">frame_end</name> <operator pos:start="25:43" pos:end="25:44">||</operator> <name pos:start="25:46" pos:end="25:48">src</name> <operator pos:start="25:50" pos:end="25:51">&gt;=</operator> <name pos:start="25:53" pos:end="25:59">src_end</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="31:5" pos:end="77:5">while <condition pos:start="31:11" pos:end="31:19">(<expr pos:start="31:12" pos:end="31:18"><name pos:start="31:12" pos:end="31:16">lines</name><operator pos:start="31:17" pos:end="31:18">--</operator></expr>)</condition> <block pos:start="31:21" pos:end="77:5">{<block_content pos:start="33:9" pos:end="75:9">

        <expr_stmt pos:start="33:9" pos:end="33:25"><expr pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:16">line_ptr</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:24">frame</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:13">frame</name> <operator pos:start="35:15" pos:end="35:16">+=</operator> <name pos:start="35:18" pos:end="35:22">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:16">segments</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <operator pos:start="37:20" pos:end="37:20">*</operator><name pos:start="37:21" pos:end="37:23">src</name><operator pos:start="37:24" pos:end="37:25">++</operator></expr>;</expr_stmt>

        <while pos:start="39:9" pos:end="75:9">while <condition pos:start="39:15" pos:end="39:26">(<expr pos:start="39:16" pos:end="39:25"><name pos:start="39:16" pos:end="39:23">segments</name><operator pos:start="39:24" pos:end="39:25">--</operator></expr>)</condition> <block pos:start="39:28" pos:end="75:9">{<block_content pos:start="41:13" pos:end="73:30">

            <if_stmt pos:start="41:13" pos:end="43:26"><if pos:start="41:13" pos:end="43:26">if <condition pos:start="41:16" pos:end="41:34">(<expr pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:23">src_end</name> <operator pos:start="41:25" pos:end="41:25">-</operator> <name pos:start="41:27" pos:end="41:29">src</name> <operator pos:start="41:31" pos:end="41:31">&lt;</operator> <literal type="number" pos:start="41:33" pos:end="41:33">3</literal></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:26"><block_content pos:start="43:17" pos:end="43:26">

                <return pos:start="43:17" pos:end="43:26">return <expr pos:start="43:24" pos:end="43:25"><operator pos:start="43:24" pos:end="43:24">-</operator><literal type="number" pos:start="43:25" pos:end="43:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:31"><expr pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:20">line_ptr</name> <operator pos:start="45:22" pos:end="45:23">+=</operator> <operator pos:start="45:25" pos:end="45:25">*</operator><name pos:start="45:26" pos:end="45:28">src</name><operator pos:start="45:29" pos:end="45:30">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="49:26"><if pos:start="47:13" pos:end="49:26">if <condition pos:start="47:16" pos:end="47:34">(<expr pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:24">line_ptr</name> <operator pos:start="47:26" pos:end="47:27">&gt;=</operator> <name pos:start="47:29" pos:end="47:33">frame</name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:26"><block_content pos:start="49:17" pos:end="49:26">

                <return pos:start="49:17" pos:end="49:26">return <expr pos:start="49:24" pos:end="49:25"><operator pos:start="49:24" pos:end="49:24">-</operator><literal type="number" pos:start="49:25" pos:end="49:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:35"><expr pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:17">count</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <operator pos:start="51:21" pos:end="51:21">(</operator><name pos:start="51:22" pos:end="51:27">int8_t</name><operator pos:start="51:28" pos:end="51:28">)</operator><operator pos:start="51:29" pos:end="51:29">*</operator><name pos:start="51:30" pos:end="51:32">src</name><operator pos:start="51:33" pos:end="51:34">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="71:13"><if pos:start="53:13" pos:end="61:13">if <condition pos:start="53:16" pos:end="53:27">(<expr pos:start="53:17" pos:end="53:26"><name pos:start="53:17" pos:end="53:21">count</name> <operator pos:start="53:23" pos:end="53:24">&gt;=</operator> <literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr>)</condition> <block pos:start="53:29" pos:end="61:13">{<block_content pos:start="55:17" pos:end="59:61">

                <if_stmt pos:start="55:17" pos:end="57:30"><if pos:start="55:17" pos:end="57:30">if <condition pos:start="55:20" pos:end="55:70">(<expr pos:start="55:21" pos:end="55:69"><name pos:start="55:21" pos:end="55:28">line_ptr</name> <operator pos:start="55:30" pos:end="55:30">+</operator> <name pos:start="55:32" pos:end="55:36">count</name> <operator pos:start="55:38" pos:end="55:38">&gt;</operator> <name pos:start="55:40" pos:end="55:44">frame</name> <operator pos:start="55:46" pos:end="55:47">||</operator> <name pos:start="55:49" pos:end="55:55">src_end</name> <operator pos:start="55:57" pos:end="55:57">-</operator> <name pos:start="55:59" pos:end="55:61">src</name> <operator pos:start="55:63" pos:end="55:63">&lt;</operator> <name pos:start="55:65" pos:end="55:69">count</name></expr>)</condition><block type="pseudo" pos:start="57:21" pos:end="57:30"><block_content pos:start="57:21" pos:end="57:30">

                    <return pos:start="57:21" pos:end="57:30">return <expr pos:start="57:28" pos:end="57:29"><operator pos:start="57:28" pos:end="57:28">-</operator><literal type="number" pos:start="57:29" pos:end="57:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:61"><expr pos:start="59:17" pos:end="59:60"><call pos:start="59:17" pos:end="59:60"><name pos:start="59:17" pos:end="59:37">bytestream_get_buffer</name><argument_list pos:start="59:38" pos:end="59:60">(<argument pos:start="59:39" pos:end="59:42"><expr pos:start="59:39" pos:end="59:42"><operator pos:start="59:39" pos:end="59:39">&amp;</operator><name pos:start="59:40" pos:end="59:42">src</name></expr></argument>, <argument pos:start="59:45" pos:end="59:52"><expr pos:start="59:45" pos:end="59:52"><name pos:start="59:45" pos:end="59:52">line_ptr</name></expr></argument>, <argument pos:start="59:55" pos:end="59:59"><expr pos:start="59:55" pos:end="59:59"><name pos:start="59:55" pos:end="59:59">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="61:15" pos:end="71:13">else <block pos:start="61:20" pos:end="71:13">{<block_content pos:start="63:17" pos:end="69:48">

                <expr_stmt pos:start="63:17" pos:end="63:31"><expr pos:start="63:17" pos:end="63:30"><name pos:start="63:17" pos:end="63:21">count</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <operator pos:start="63:25" pos:end="63:25">-</operator><name pos:start="63:26" pos:end="63:30">count</name></expr>;</expr_stmt>

                <if_stmt pos:start="65:17" pos:end="67:30"><if pos:start="65:17" pos:end="67:30">if <condition pos:start="65:20" pos:end="65:63">(<expr pos:start="65:21" pos:end="65:62"><name pos:start="65:21" pos:end="65:28">line_ptr</name> <operator pos:start="65:30" pos:end="65:30">+</operator> <name pos:start="65:32" pos:end="65:36">count</name> <operator pos:start="65:38" pos:end="65:38">&gt;</operator> <name pos:start="65:40" pos:end="65:44">frame</name> <operator pos:start="65:46" pos:end="65:47">||</operator> <name pos:start="65:49" pos:end="65:51">src</name> <operator pos:start="65:53" pos:end="65:54">&gt;=</operator> <name pos:start="65:56" pos:end="65:62">src_end</name></expr>)</condition><block type="pseudo" pos:start="67:21" pos:end="67:30"><block_content pos:start="67:21" pos:end="67:30">

                    <return pos:start="67:21" pos:end="67:30">return <expr pos:start="67:28" pos:end="67:29"><operator pos:start="67:28" pos:end="67:28">-</operator><literal type="number" pos:start="67:29" pos:end="67:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:48"><expr pos:start="69:17" pos:end="69:47"><call pos:start="69:17" pos:end="69:47"><name pos:start="69:17" pos:end="69:22">memset</name><argument_list pos:start="69:23" pos:end="69:47">(<argument pos:start="69:24" pos:end="69:31"><expr pos:start="69:24" pos:end="69:31"><name pos:start="69:24" pos:end="69:31">line_ptr</name></expr></argument>, <argument pos:start="69:34" pos:end="69:39"><expr pos:start="69:34" pos:end="69:39"><operator pos:start="69:34" pos:end="69:34">*</operator><name pos:start="69:35" pos:end="69:37">src</name><operator pos:start="69:38" pos:end="69:39">++</operator></expr></argument>, <argument pos:start="69:42" pos:end="69:46"><expr pos:start="69:42" pos:end="69:46"><name pos:start="69:42" pos:end="69:46">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:30"><expr pos:start="73:13" pos:end="73:29"><name pos:start="73:13" pos:end="73:20">line_ptr</name> <operator pos:start="73:22" pos:end="73:23">+=</operator> <name pos:start="73:25" pos:end="73:29">count</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></while>



    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
