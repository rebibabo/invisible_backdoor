<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7920.c" pos:tabs="8"><function pos:start="1:1" pos:end="233:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">bitplane_decoding</name><parameter_list pos:start="1:29" pos:end="1:57">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:37">BitPlane</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bp</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:53">VC9Context</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="233:1">{<block_content pos:start="5:5" pos:end="231:31">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:32">= <expr pos:start="5:25" pos:end="5:32"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:32"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:30">.</operator><name pos:start="5:31" pos:end="5:32">gb</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="9:5" pos:end="9:61"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">imode</name></decl>, <decl pos:start="9:16" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:16">x</name></decl>, <decl pos:start="9:19" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:19">y</name></decl>, <decl pos:start="9:22" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:25">code</name></decl>, <decl pos:start="9:28" pos:end="9:44"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:44">use_vertical_tile</name></decl>, <decl pos:start="9:47" pos:end="9:52"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:47" pos:end="9:52">tile_w</name></decl>, <decl pos:start="9:55" pos:end="9:60"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:55" pos:end="9:60">tile_h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:18">invert</name></decl>, <decl pos:start="11:21" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:27">planep</name> <init pos:start="11:29" pos:end="11:38">= <expr pos:start="11:31" pos:end="11:38"><name pos:start="11:31" pos:end="11:38"><name pos:start="11:31" pos:end="11:32">bp</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:38">data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:10">invert</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:28"><name pos:start="15:14" pos:end="15:21">get_bits</name><argument_list pos:start="15:22" pos:end="15:28">(<argument pos:start="15:23" pos:end="15:24"><expr pos:start="15:23" pos:end="15:24"><name pos:start="15:23" pos:end="15:24">gb</name></expr></argument>, <argument pos:start="15:27" pos:end="15:27"><expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:69"><expr pos:start="17:5" pos:end="17:68"><name pos:start="17:5" pos:end="17:9">imode</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:68"><name pos:start="17:13" pos:end="17:20">get_vlc2</name><argument_list pos:start="17:21" pos:end="17:68">(<argument pos:start="17:22" pos:end="17:23"><expr pos:start="17:22" pos:end="17:23"><name pos:start="17:22" pos:end="17:23">gb</name></expr></argument>, <argument pos:start="17:26" pos:end="17:44"><expr pos:start="17:26" pos:end="17:44"><name pos:start="17:26" pos:end="17:44"><name pos:start="17:26" pos:end="17:38">vc9_imode_vlc</name><operator pos:start="17:39" pos:end="17:39">.</operator><name pos:start="17:40" pos:end="17:44">table</name></name></expr></argument>, <argument pos:start="17:47" pos:end="17:64"><expr pos:start="17:47" pos:end="17:64"><name pos:start="17:47" pos:end="17:64">VC9_IMODE_VLC_BITS</name></expr></argument>, <argument pos:start="17:67" pos:end="17:67"><expr pos:start="17:67" pos:end="17:67"><literal type="number" pos:start="17:67" pos:end="17:67">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:6">bp</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:14">is_raw</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</expr_stmt>

    <switch pos:start="23:5" pos:end="181:5">switch <condition pos:start="23:12" pos:end="23:18">(<expr pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:17">imode</name></expr>)</condition>

    <block pos:start="25:5" pos:end="181:5">{<block_content pos:start="27:5" pos:end="179:19">

    <case pos:start="27:5" pos:end="27:19">case <expr pos:start="27:10" pos:end="27:18"><name pos:start="27:10" pos:end="27:18">IMODE_RAW</name></expr>:</case>

        <comment type="line" pos:start="29:9" pos:end="29:77">//Data is actually read in the MB layer (same for all tests == "raw")</comment>

        <expr_stmt pos:start="31:9" pos:end="31:23"><expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:10">bp</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:18">is_raw</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:22">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="31:25" pos:end="31:40">//invert ignored</comment>

        <return pos:start="33:9" pos:end="33:22">return <expr pos:start="33:16" pos:end="33:21"><name pos:start="33:16" pos:end="33:21">invert</name></expr>;</return>

    <case pos:start="35:5" pos:end="35:21">case <expr pos:start="35:10" pos:end="35:20"><name pos:start="35:10" pos:end="35:20">IMODE_DIFF2</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:21">case <expr pos:start="37:10" pos:end="37:20"><name pos:start="37:10" pos:end="37:20">IMODE_NORM2</name></expr>:</case>

        <if_stmt pos:start="39:9" pos:end="39:70"><if pos:start="39:9" pos:end="39:70">if <condition pos:start="39:12" pos:end="39:39">(<expr pos:start="39:13" pos:end="39:38"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:23"><name pos:start="39:14" pos:end="39:15">bp</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:23">height</name></name><operator pos:start="39:24" pos:end="39:24">*</operator><name pos:start="39:25" pos:end="39:33"><name pos:start="39:25" pos:end="39:26">bp</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:33">width</name></name><operator pos:start="39:34" pos:end="39:34">)</operator> <operator pos:start="39:36" pos:end="39:36">&amp;</operator> <literal type="number" pos:start="39:38" pos:end="39:38">1</literal></expr>)</condition><block type="pseudo" pos:start="39:41" pos:end="39:70"><block_content pos:start="39:41" pos:end="39:70"> <expr_stmt pos:start="39:41" pos:end="39:70"><expr pos:start="39:41" pos:end="39:69"><operator pos:start="39:41" pos:end="39:41">*</operator><operator pos:start="39:42" pos:end="39:42">(</operator><operator pos:start="39:43" pos:end="39:44">++</operator><name pos:start="39:45" pos:end="39:50">planep</name><operator pos:start="39:51" pos:end="39:51">)</operator> <operator pos:start="39:53" pos:end="39:53">=</operator> <call pos:start="39:55" pos:end="39:69"><name pos:start="39:55" pos:end="39:62">get_bits</name><argument_list pos:start="39:63" pos:end="39:69">(<argument pos:start="39:64" pos:end="39:65"><expr pos:start="39:64" pos:end="39:65"><name pos:start="39:64" pos:end="39:65">gb</name></expr></argument>, <argument pos:start="39:68" pos:end="39:68"><expr pos:start="39:68" pos:end="39:68"><literal type="number" pos:start="39:68" pos:end="39:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <for pos:start="41:9" pos:end="51:9">for<control pos:start="41:12" pos:end="41:50">(<init pos:start="41:13" pos:end="41:16"><expr pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:13">x</name><operator pos:start="41:14" pos:end="41:14">=</operator><literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>;</init> <condition pos:start="41:18" pos:end="41:45"><expr pos:start="41:18" pos:end="41:44"><name pos:start="41:18" pos:end="41:42"><name pos:start="41:18" pos:end="41:18">x</name><argument_list type="generic" pos:start="41:19" pos:end="41:42">&lt;<argument pos:start="41:20" pos:end="41:41"><expr pos:start="41:20" pos:end="41:41"><operator pos:start="41:20" pos:end="41:20">(</operator><name pos:start="41:21" pos:end="41:30"><name pos:start="41:21" pos:end="41:22">bp</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:30">height</name></name><operator pos:start="41:31" pos:end="41:31">*</operator><name pos:start="41:32" pos:end="41:40"><name pos:start="41:32" pos:end="41:33">bp</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:40">width</name></name><operator pos:start="41:41" pos:end="41:41">)</operator></expr></argument>&gt;</argument_list></name><operator pos:start="41:43" pos:end="41:43">&gt;</operator><literal type="number" pos:start="41:44" pos:end="41:44">1</literal></expr>;</condition> <incr pos:start="41:47" pos:end="41:49"><expr pos:start="41:47" pos:end="41:49"><name pos:start="41:47" pos:end="41:47">x</name><operator pos:start="41:48" pos:end="41:49">++</operator></expr></incr>)</control><block pos:start="41:51" pos:end="51:9">{<block_content pos:start="43:13" pos:end="47:38">

            <expr_stmt pos:start="43:13" pos:end="43:76"><expr pos:start="43:13" pos:end="43:75"><name pos:start="43:13" pos:end="43:16">code</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:75"><name pos:start="43:20" pos:end="43:27">get_vlc2</name><argument_list pos:start="43:28" pos:end="43:75">(<argument pos:start="43:29" pos:end="43:30"><expr pos:start="43:29" pos:end="43:30"><name pos:start="43:29" pos:end="43:30">gb</name></expr></argument>, <argument pos:start="43:33" pos:end="43:51"><expr pos:start="43:33" pos:end="43:51"><name pos:start="43:33" pos:end="43:51"><name pos:start="43:33" pos:end="43:45">vc9_norm2_vlc</name><operator pos:start="43:46" pos:end="43:46">.</operator><name pos:start="43:47" pos:end="43:51">table</name></name></expr></argument>, <argument pos:start="43:54" pos:end="43:71"><expr pos:start="43:54" pos:end="43:71"><name pos:start="43:54" pos:end="43:71">VC9_NORM2_VLC_BITS</name></expr></argument>, <argument pos:start="43:74" pos:end="43:74"><expr pos:start="43:74" pos:end="43:74"><literal type="number" pos:start="43:74" pos:end="43:74">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:33"><expr pos:start="45:13" pos:end="45:32"><operator pos:start="45:13" pos:end="45:13">*</operator><operator pos:start="45:14" pos:end="45:14">(</operator><operator pos:start="45:15" pos:end="45:16">++</operator><name pos:start="45:17" pos:end="45:22">planep</name><operator pos:start="45:23" pos:end="45:23">)</operator> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:30">code</name><operator pos:start="45:31" pos:end="45:31">&amp;</operator><literal type="number" pos:start="45:32" pos:end="45:32">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="45:35" pos:end="45:47">//lsb =&gt; left</comment>

            <expr_stmt pos:start="47:13" pos:end="47:38"><expr pos:start="47:13" pos:end="47:37"><operator pos:start="47:13" pos:end="47:13">*</operator><operator pos:start="47:14" pos:end="47:14">(</operator><operator pos:start="47:15" pos:end="47:16">++</operator><name pos:start="47:17" pos:end="47:22">planep</name><operator pos:start="47:23" pos:end="47:23">)</operator> <operator pos:start="47:25" pos:end="47:25">=</operator> <operator pos:start="47:27" pos:end="47:27">(</operator><name pos:start="47:28" pos:end="47:31">code</name><operator pos:start="47:32" pos:end="47:33">&gt;&gt;</operator><literal type="number" pos:start="47:34" pos:end="47:34">1</literal><operator pos:start="47:35" pos:end="47:35">)</operator><operator pos:start="47:36" pos:end="47:36">&amp;</operator><literal type="number" pos:start="47:37" pos:end="47:37">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="47:40" pos:end="47:53">//msb =&gt; right</comment>

            <comment type="line" pos:start="49:13" pos:end="49:33">//FIXME width-&gt;stride</comment>

        </block_content>}</block></for>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:21">case <expr pos:start="55:10" pos:end="55:20"><name pos:start="55:10" pos:end="55:20">IMODE_DIFF6</name></expr>:</case>

    <case pos:start="57:5" pos:end="57:21">case <expr pos:start="57:10" pos:end="57:20"><name pos:start="57:10" pos:end="57:20">IMODE_NORM6</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:63"><expr pos:start="59:9" pos:end="59:62"><name pos:start="59:9" pos:end="59:25">use_vertical_tile</name><operator pos:start="59:26" pos:end="59:26">=</operator>  <name pos:start="59:29" pos:end="59:38"><name pos:start="59:29" pos:end="59:30">bp</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:38">height</name></name><operator pos:start="59:39" pos:end="59:39">%</operator><literal type="number" pos:start="59:40" pos:end="59:40">3</literal><operator pos:start="59:41" pos:end="59:42">==</operator><literal type="number" pos:start="59:43" pos:end="59:43">0</literal> <operator pos:start="59:45" pos:end="59:46">&amp;&amp;</operator>  <name pos:start="59:49" pos:end="59:57"><name pos:start="59:49" pos:end="59:50">bp</name><operator pos:start="59:51" pos:end="59:52">-&gt;</operator><name pos:start="59:53" pos:end="59:57">width</name></name><operator pos:start="59:58" pos:end="59:58">%</operator><literal type="number" pos:start="59:59" pos:end="59:59">3</literal><operator pos:start="59:60" pos:end="59:61">!=</operator><literal type="number" pos:start="59:62" pos:end="59:62">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:42"><expr pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:14">tile_w</name><operator pos:start="61:15" pos:end="61:15">=</operator> <ternary pos:start="61:17" pos:end="61:41"><condition pos:start="61:17" pos:end="61:35"><expr pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:33">use_vertical_tile</name></expr> ?</condition><then pos:start="61:37" pos:end="61:37"> <expr pos:start="61:37" pos:end="61:37"><literal type="number" pos:start="61:37" pos:end="61:37">2</literal></expr> </then><else pos:start="61:39" pos:end="61:41">: <expr pos:start="61:41" pos:end="61:41"><literal type="number" pos:start="61:41" pos:end="61:41">3</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:42"><expr pos:start="63:9" pos:end="63:41"><name pos:start="63:9" pos:end="63:14">tile_h</name><operator pos:start="63:15" pos:end="63:15">=</operator> <ternary pos:start="63:17" pos:end="63:41"><condition pos:start="63:17" pos:end="63:35"><expr pos:start="63:17" pos:end="63:33"><name pos:start="63:17" pos:end="63:33">use_vertical_tile</name></expr> ?</condition><then pos:start="63:37" pos:end="63:37"> <expr pos:start="63:37" pos:end="63:37"><literal type="number" pos:start="63:37" pos:end="63:37">3</literal></expr> </then><else pos:start="63:39" pos:end="63:41">: <expr pos:start="63:41" pos:end="63:41"><literal type="number" pos:start="63:41" pos:end="63:41">2</literal></expr></else></ternary></expr>;</expr_stmt>



        <for pos:start="67:9" pos:end="153:9">for<control pos:start="67:12" pos:end="67:60">(<init pos:start="67:13" pos:end="67:34"><expr pos:start="67:13" pos:end="67:33"><name pos:start="67:13" pos:end="67:13">y</name><operator pos:start="67:14" pos:end="67:14">=</operator>  <name pos:start="67:17" pos:end="67:26"><name pos:start="67:17" pos:end="67:18">bp</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:26">height</name></name><operator pos:start="67:27" pos:end="67:27">%</operator><name pos:start="67:28" pos:end="67:33">tile_h</name></expr>;</init> <condition pos:start="67:36" pos:end="67:49"><expr pos:start="67:36" pos:end="67:48"><name pos:start="67:36" pos:end="67:36">y</name><operator pos:start="67:37" pos:end="67:37">&lt;</operator> <name pos:start="67:39" pos:end="67:48"><name pos:start="67:39" pos:end="67:40">bp</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:48">height</name></name></expr>;</condition> <incr pos:start="67:51" pos:end="67:59"><expr pos:start="67:51" pos:end="67:59"><name pos:start="67:51" pos:end="67:51">y</name><operator pos:start="67:52" pos:end="67:53">+=</operator><name pos:start="67:54" pos:end="67:59">tile_h</name></expr></incr>)</control><block pos:start="67:61" pos:end="153:9">{<block_content pos:start="69:13" pos:end="151:13">

            <for pos:start="69:13" pos:end="151:13">for<control pos:start="69:16" pos:end="69:62">(<init pos:start="69:17" pos:end="69:37"><expr pos:start="69:17" pos:end="69:36"><name pos:start="69:17" pos:end="69:17">x</name><operator pos:start="69:18" pos:end="69:18">=</operator>  <name pos:start="69:21" pos:end="69:29"><name pos:start="69:21" pos:end="69:22">bp</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:29">width</name></name><operator pos:start="69:30" pos:end="69:30">%</operator><name pos:start="69:31" pos:end="69:36">tile_w</name></expr>;</init> <condition pos:start="69:39" pos:end="69:51"><expr pos:start="69:39" pos:end="69:50"><name pos:start="69:39" pos:end="69:39">x</name><operator pos:start="69:40" pos:end="69:40">&lt;</operator> <name pos:start="69:42" pos:end="69:50"><name pos:start="69:42" pos:end="69:43">bp</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:50">width</name></name></expr>;</condition> <incr pos:start="69:53" pos:end="69:61"><expr pos:start="69:53" pos:end="69:61"><name pos:start="69:53" pos:end="69:53">x</name><operator pos:start="69:54" pos:end="69:55">+=</operator><name pos:start="69:56" pos:end="69:61">tile_w</name></expr></incr>)</control><block pos:start="69:63" pos:end="151:13">{<block_content pos:start="73:17" pos:end="149:17">

<cpp:if pos:start="71:1" pos:end="71:25">#<cpp:directive pos:start="71:2" pos:end="71:3">if</cpp:directive> <expr pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:20">VLC_NORM6_METH0D</name> <operator pos:start="71:22" pos:end="71:23">==</operator> <literal type="number" pos:start="71:25" pos:end="71:25">1</literal></expr></cpp:if>

                <expr_stmt pos:start="73:17" pos:end="73:80"><expr pos:start="73:17" pos:end="73:79"><name pos:start="73:17" pos:end="73:20">code</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <call pos:start="73:24" pos:end="73:79"><name pos:start="73:24" pos:end="73:31">get_vlc2</name><argument_list pos:start="73:32" pos:end="73:79">(<argument pos:start="73:33" pos:end="73:34"><expr pos:start="73:33" pos:end="73:34"><name pos:start="73:33" pos:end="73:34">gb</name></expr></argument>, <argument pos:start="73:37" pos:end="73:55"><expr pos:start="73:37" pos:end="73:55"><name pos:start="73:37" pos:end="73:55"><name pos:start="73:37" pos:end="73:49">vc9_norm6_vlc</name><operator pos:start="73:50" pos:end="73:50">.</operator><name pos:start="73:51" pos:end="73:55">table</name></name></expr></argument>, <argument pos:start="73:58" pos:end="73:75"><expr pos:start="73:58" pos:end="73:75"><name pos:start="73:58" pos:end="73:75">VC9_NORM6_VLC_BITS</name></expr></argument>, <argument pos:start="73:78" pos:end="73:78"><expr pos:start="73:78" pos:end="73:78"><literal type="number" pos:start="73:78" pos:end="73:78">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="75:17" pos:end="86:0"><if pos:start="75:17" pos:end="86:0">if<condition pos:start="75:19" pos:end="75:26">(<expr pos:start="75:20" pos:end="75:25"><name pos:start="75:20" pos:end="75:23">code</name><operator pos:start="75:24" pos:end="75:24">&lt;</operator><literal type="number" pos:start="75:25" pos:end="75:25">0</literal></expr>)</condition><block pos:start="75:27" pos:end="86:0">{<block_content pos:start="77:21" pos:end="79:30">

                    <expr_stmt pos:start="77:21" pos:end="77:77"><expr pos:start="77:21" pos:end="77:76"><call pos:start="77:21" pos:end="77:76"><name pos:start="77:21" pos:end="77:26">av_log</name><argument_list pos:start="77:27" pos:end="77:76">(<argument pos:start="77:28" pos:end="77:37"><expr pos:start="77:28" pos:end="77:37"><name pos:start="77:28" pos:end="77:37"><name pos:start="77:28" pos:end="77:28">v</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:31">s</name><operator pos:start="77:32" pos:end="77:32">.</operator><name pos:start="77:33" pos:end="77:37">avctx</name></name></expr></argument>, <argument pos:start="77:40" pos:end="77:51"><expr pos:start="77:40" pos:end="77:51"><name pos:start="77:40" pos:end="77:51">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="77:54" pos:end="77:75"><expr pos:start="77:54" pos:end="77:75"><literal type="string" pos:start="77:54" pos:end="77:75">"invalid NORM-6 VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="79:21" pos:end="79:30">return <expr pos:start="79:28" pos:end="79:29"><operator pos:start="79:28" pos:end="79:28">-</operator><literal type="number" pos:start="79:29" pos:end="79:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="85:1" pos:end="85:25">#<cpp:directive pos:start="85:2" pos:end="85:3">if</cpp:directive> <expr pos:start="85:5" pos:end="85:25"><name pos:start="85:5" pos:end="85:20">VLC_NORM6_METH0D</name> <operator pos:start="85:22" pos:end="85:23">==</operator> <literal type="number" pos:start="85:25" pos:end="85:25">2</literal></expr></cpp:if> <comment type="line" pos:start="85:27" pos:end="85:35">//Failure</comment>

                <expr_stmt pos:start="87:17" pos:end="87:88"><expr pos:start="87:17" pos:end="87:87"><name pos:start="87:17" pos:end="87:20">code</name> <operator pos:start="87:22" pos:end="87:22">=</operator> <call pos:start="87:24" pos:end="87:87"><name pos:start="87:24" pos:end="87:31">get_vlc2</name><argument_list pos:start="87:32" pos:end="87:87">(<argument pos:start="87:33" pos:end="87:34"><expr pos:start="87:33" pos:end="87:34"><name pos:start="87:33" pos:end="87:34">gb</name></expr></argument>, <argument pos:start="87:37" pos:end="87:61"><expr pos:start="87:37" pos:end="87:61"><name pos:start="87:37" pos:end="87:61"><name pos:start="87:37" pos:end="87:55">vc9_norm6_first_vlc</name><operator pos:start="87:56" pos:end="87:56">.</operator><name pos:start="87:57" pos:end="87:61">table</name></name></expr></argument>, <argument pos:start="87:64" pos:end="87:83"><expr pos:start="87:64" pos:end="87:83"><name pos:start="87:64" pos:end="87:83">VC9_NORM6_FIRST_BITS</name></expr></argument>, <argument pos:start="87:86" pos:end="87:86"><expr pos:start="87:86" pos:end="87:86"><literal type="number" pos:start="87:86" pos:end="87:86">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="89:17" pos:end="118:0"><if pos:start="89:17" pos:end="95:17">if <condition pos:start="89:20" pos:end="89:31">(<expr pos:start="89:21" pos:end="89:30"><name pos:start="89:21" pos:end="89:24">code</name> <operator pos:start="89:26" pos:end="89:27">==</operator> <literal type="number" pos:start="89:29" pos:end="89:30">22</literal></expr>)</condition>

                <block pos:start="91:17" pos:end="95:17">{<block_content pos:start="93:21" pos:end="93:62">

                    <expr_stmt pos:start="93:21" pos:end="93:62"><expr pos:start="93:21" pos:end="93:61"><name pos:start="93:21" pos:end="93:24">code</name> <operator pos:start="93:26" pos:end="93:26">=</operator> <name pos:start="93:28" pos:end="93:61"><name pos:start="93:28" pos:end="93:44">vc9_norm6_flc_val</name><index pos:start="93:45" pos:end="93:61">[<expr pos:start="93:46" pos:end="93:60"><call pos:start="93:46" pos:end="93:60"><name pos:start="93:46" pos:end="93:53">get_bits</name><argument_list pos:start="93:54" pos:end="93:60">(<argument pos:start="93:55" pos:end="93:56"><expr pos:start="93:55" pos:end="93:56"><name pos:start="93:55" pos:end="93:56">gb</name></expr></argument>, <argument pos:start="93:59" pos:end="93:59"><expr pos:start="93:59" pos:end="93:59"><literal type="number" pos:start="93:59" pos:end="93:59">5</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if>

                <if type="elseif" pos:start="97:17" pos:end="118:0">else if <condition pos:start="97:25" pos:end="97:36">(<expr pos:start="97:26" pos:end="97:35"><name pos:start="97:26" pos:end="97:29">code</name> <operator pos:start="97:31" pos:end="97:32">==</operator> <literal type="number" pos:start="97:34" pos:end="97:35">23</literal></expr>)</condition>

                <block pos:start="99:17" pos:end="118:0">{<block_content pos:start="103:21" pos:end="114:0">

<cpp:if pos:start="101:1" pos:end="101:11">#  <cpp:directive pos:start="101:4" pos:end="101:5">if</cpp:directive> <expr pos:start="101:7" pos:end="101:11"><name pos:start="101:7" pos:end="101:11">TRACE</name></expr></cpp:if>

                    <expr_stmt pos:start="103:21" pos:end="103:94"><expr pos:start="103:21" pos:end="103:93"><name pos:start="103:21" pos:end="103:24">code</name> <operator pos:start="103:26" pos:end="103:26">=</operator> <call pos:start="103:28" pos:end="103:93"><name pos:start="103:28" pos:end="103:35">get_vlc2</name><argument_list pos:start="103:36" pos:end="103:93">(<argument pos:start="103:37" pos:end="103:38"><expr pos:start="103:37" pos:end="103:38"><name pos:start="103:37" pos:end="103:38">gb</name></expr></argument>, <argument pos:start="103:41" pos:end="103:66"><expr pos:start="103:41" pos:end="103:66"><name pos:start="103:41" pos:end="103:66"><name pos:start="103:41" pos:end="103:60">vc9_norm6_second_vlc</name><operator pos:start="103:61" pos:end="103:61">.</operator><name pos:start="103:62" pos:end="103:66">table</name></name></expr></argument>, <argument pos:start="103:69" pos:end="103:89"><expr pos:start="103:69" pos:end="103:89"><name pos:start="103:69" pos:end="103:89">VC9_NORM6_SECOND_BITS</name></expr></argument>, <argument pos:start="103:92" pos:end="103:92"><expr pos:start="103:92" pos:end="103:92"><literal type="number" pos:start="103:92" pos:end="103:92">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="105:21" pos:end="105:47"><expr pos:start="105:21" pos:end="105:46"><call pos:start="105:21" pos:end="105:46"><name pos:start="105:21" pos:end="105:26">assert</name><argument_list pos:start="105:27" pos:end="105:46">(<argument pos:start="105:28" pos:end="105:45"><expr pos:start="105:28" pos:end="105:45"><name pos:start="105:28" pos:end="105:31">code</name><operator pos:start="105:32" pos:end="105:32">&gt;</operator><operator pos:start="105:33" pos:end="105:33">-</operator><literal type="number" pos:start="105:34" pos:end="105:34">1</literal> <operator pos:start="105:36" pos:end="105:37">&amp;&amp;</operator> <name pos:start="105:39" pos:end="105:42">code</name><operator pos:start="105:43" pos:end="105:43">&lt;</operator><literal type="number" pos:start="105:44" pos:end="105:45">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="107:21" pos:end="110:0"><expr pos:start="107:21" pos:end="107:53"><name pos:start="107:21" pos:end="107:24">code</name> <operator pos:start="107:26" pos:end="107:26">=</operator> <name pos:start="107:28" pos:end="107:53"><name pos:start="107:28" pos:end="107:47">vc9_norm6_second_val</name><index pos:start="107:48" pos:end="107:53">[<expr pos:start="107:49" pos:end="107:52"><name pos:start="107:49" pos:end="107:52">code</name></expr>]</index></name></expr>;</expr_stmt>

<cpp:else pos:start="109:1" pos:end="109:7">#  <cpp:directive pos:start="109:4" pos:end="109:7">else</cpp:directive></cpp:else>

                    <expr_stmt pos:start="111:21" pos:end="114:0"><expr pos:start="111:21" pos:end="111:115"><name pos:start="111:21" pos:end="111:24">code</name> <operator pos:start="111:26" pos:end="111:26">=</operator> <name pos:start="111:28" pos:end="111:115"><name pos:start="111:28" pos:end="111:47">vc9_norm6_second_val</name><index pos:start="111:48" pos:end="111:115">[<expr pos:start="111:49" pos:end="111:114"><call pos:start="111:49" pos:end="111:114"><name pos:start="111:49" pos:end="111:56">get_vlc2</name><argument_list pos:start="111:57" pos:end="111:114">(<argument pos:start="111:58" pos:end="111:59"><expr pos:start="111:58" pos:end="111:59"><name pos:start="111:58" pos:end="111:59">gb</name></expr></argument>, <argument pos:start="111:62" pos:end="111:87"><expr pos:start="111:62" pos:end="111:87"><name pos:start="111:62" pos:end="111:87"><name pos:start="111:62" pos:end="111:81">vc9_norm6_second_vlc</name><operator pos:start="111:82" pos:end="111:82">.</operator><name pos:start="111:83" pos:end="111:87">table</name></name></expr></argument>, <argument pos:start="111:90" pos:end="111:110"><expr pos:start="111:90" pos:end="111:110"><name pos:start="111:90" pos:end="111:110">VC9_NORM6_SECOND_BITS</name></expr></argument>, <argument pos:start="111:113" pos:end="111:113"><expr pos:start="111:113" pos:end="111:113"><literal type="number" pos:start="111:113" pos:end="111:113">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

<cpp:endif pos:start="113:1" pos:end="113:8">#  <cpp:directive pos:start="113:4" pos:end="113:8">endif</cpp:directive></cpp:endif>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="117:1" pos:end="117:6">#<cpp:directive pos:start="117:2" pos:end="117:6">endif</cpp:directive></cpp:endif> <comment type="line" pos:start="117:8" pos:end="117:30">//VLC_NORM6_METH0D == 2</comment>

                <comment type="line" pos:start="119:17" pos:end="119:68">//FIXME following is a pure guess and probably wrong</comment>

                <comment type="line" pos:start="121:17" pos:end="121:77">//FIXME A bitplane (0 | !0), so could the shifts be avoided ?</comment>

                <expr_stmt pos:start="123:17" pos:end="123:58"><expr pos:start="123:17" pos:end="123:57"><name pos:start="123:17" pos:end="123:44"><name pos:start="123:17" pos:end="123:22">planep</name><index pos:start="123:23" pos:end="123:44">[<expr pos:start="123:24" pos:end="123:43"><name pos:start="123:24" pos:end="123:24">x</name>     <operator pos:start="123:30" pos:end="123:30">+</operator> <literal type="number" pos:start="123:32" pos:end="123:32">0</literal><operator pos:start="123:33" pos:end="123:33">*</operator><name pos:start="123:34" pos:end="123:43"><name pos:start="123:34" pos:end="123:35">bp</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:43">stride</name></name></expr>]</index></name><operator pos:start="123:45" pos:end="123:45">=</operator> <operator pos:start="123:47" pos:end="123:47">(</operator><name pos:start="123:48" pos:end="123:51">code</name><operator pos:start="123:52" pos:end="123:53">&gt;&gt;</operator><literal type="number" pos:start="123:54" pos:end="123:54">0</literal><operator pos:start="123:55" pos:end="123:55">)</operator><operator pos:start="123:56" pos:end="123:56">&amp;</operator><literal type="number" pos:start="123:57" pos:end="123:57">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:58"><expr pos:start="125:17" pos:end="125:57"><name pos:start="125:17" pos:end="125:44"><name pos:start="125:17" pos:end="125:22">planep</name><index pos:start="125:23" pos:end="125:44">[<expr pos:start="125:24" pos:end="125:43"><name pos:start="125:24" pos:end="125:24">x</name> <operator pos:start="125:26" pos:end="125:26">+</operator> <literal type="number" pos:start="125:28" pos:end="125:28">1</literal> <operator pos:start="125:30" pos:end="125:30">+</operator> <literal type="number" pos:start="125:32" pos:end="125:32">0</literal><operator pos:start="125:33" pos:end="125:33">*</operator><name pos:start="125:34" pos:end="125:43"><name pos:start="125:34" pos:end="125:35">bp</name><operator pos:start="125:36" pos:end="125:37">-&gt;</operator><name pos:start="125:38" pos:end="125:43">stride</name></name></expr>]</index></name><operator pos:start="125:45" pos:end="125:45">=</operator> <operator pos:start="125:47" pos:end="125:47">(</operator><name pos:start="125:48" pos:end="125:51">code</name><operator pos:start="125:52" pos:end="125:53">&gt;&gt;</operator><literal type="number" pos:start="125:54" pos:end="125:54">1</literal><operator pos:start="125:55" pos:end="125:55">)</operator><operator pos:start="125:56" pos:end="125:56">&amp;</operator><literal type="number" pos:start="125:57" pos:end="125:57">1</literal></expr>;</expr_stmt>

                <comment type="line" pos:start="127:17" pos:end="127:57">//FIXME Does branch prediction help here?</comment>

                <if_stmt pos:start="129:17" pos:end="149:17"><if pos:start="129:17" pos:end="139:17">if<condition pos:start="129:19" pos:end="129:37">(<expr pos:start="129:20" pos:end="129:36"><name pos:start="129:20" pos:end="129:36">use_vertical_tile</name></expr>)</condition><block pos:start="129:38" pos:end="139:17">{<block_content pos:start="131:21" pos:end="137:62">

                    <expr_stmt pos:start="131:21" pos:end="131:62"><expr pos:start="131:21" pos:end="131:61"><name pos:start="131:21" pos:end="131:48"><name pos:start="131:21" pos:end="131:26">planep</name><index pos:start="131:27" pos:end="131:48">[<expr pos:start="131:28" pos:end="131:47"><name pos:start="131:28" pos:end="131:28">x</name> <operator pos:start="131:30" pos:end="131:30">+</operator> <literal type="number" pos:start="131:32" pos:end="131:32">0</literal> <operator pos:start="131:34" pos:end="131:34">+</operator> <literal type="number" pos:start="131:36" pos:end="131:36">1</literal><operator pos:start="131:37" pos:end="131:37">*</operator><name pos:start="131:38" pos:end="131:47"><name pos:start="131:38" pos:end="131:39">bp</name><operator pos:start="131:40" pos:end="131:41">-&gt;</operator><name pos:start="131:42" pos:end="131:47">stride</name></name></expr>]</index></name><operator pos:start="131:49" pos:end="131:49">=</operator> <operator pos:start="131:51" pos:end="131:51">(</operator><name pos:start="131:52" pos:end="131:55">code</name><operator pos:start="131:56" pos:end="131:57">&gt;&gt;</operator><literal type="number" pos:start="131:58" pos:end="131:58">2</literal><operator pos:start="131:59" pos:end="131:59">)</operator><operator pos:start="131:60" pos:end="131:60">&amp;</operator><literal type="number" pos:start="131:61" pos:end="131:61">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:62"><expr pos:start="133:21" pos:end="133:61"><name pos:start="133:21" pos:end="133:48"><name pos:start="133:21" pos:end="133:26">planep</name><index pos:start="133:27" pos:end="133:48">[<expr pos:start="133:28" pos:end="133:47"><name pos:start="133:28" pos:end="133:28">x</name> <operator pos:start="133:30" pos:end="133:30">+</operator> <literal type="number" pos:start="133:32" pos:end="133:32">1</literal> <operator pos:start="133:34" pos:end="133:34">+</operator> <literal type="number" pos:start="133:36" pos:end="133:36">1</literal><operator pos:start="133:37" pos:end="133:37">*</operator><name pos:start="133:38" pos:end="133:47"><name pos:start="133:38" pos:end="133:39">bp</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:47">stride</name></name></expr>]</index></name><operator pos:start="133:49" pos:end="133:49">=</operator> <operator pos:start="133:51" pos:end="133:51">(</operator><name pos:start="133:52" pos:end="133:55">code</name><operator pos:start="133:56" pos:end="133:57">&gt;&gt;</operator><literal type="number" pos:start="133:58" pos:end="133:58">3</literal><operator pos:start="133:59" pos:end="133:59">)</operator><operator pos:start="133:60" pos:end="133:60">&amp;</operator><literal type="number" pos:start="133:61" pos:end="133:61">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="135:21" pos:end="135:62"><expr pos:start="135:21" pos:end="135:61"><name pos:start="135:21" pos:end="135:48"><name pos:start="135:21" pos:end="135:26">planep</name><index pos:start="135:27" pos:end="135:48">[<expr pos:start="135:28" pos:end="135:47"><name pos:start="135:28" pos:end="135:28">x</name> <operator pos:start="135:30" pos:end="135:30">+</operator> <literal type="number" pos:start="135:32" pos:end="135:32">0</literal> <operator pos:start="135:34" pos:end="135:34">+</operator> <literal type="number" pos:start="135:36" pos:end="135:36">2</literal><operator pos:start="135:37" pos:end="135:37">*</operator><name pos:start="135:38" pos:end="135:47"><name pos:start="135:38" pos:end="135:39">bp</name><operator pos:start="135:40" pos:end="135:41">-&gt;</operator><name pos:start="135:42" pos:end="135:47">stride</name></name></expr>]</index></name><operator pos:start="135:49" pos:end="135:49">=</operator> <operator pos:start="135:51" pos:end="135:51">(</operator><name pos:start="135:52" pos:end="135:55">code</name><operator pos:start="135:56" pos:end="135:57">&gt;&gt;</operator><literal type="number" pos:start="135:58" pos:end="135:58">4</literal><operator pos:start="135:59" pos:end="135:59">)</operator><operator pos:start="135:60" pos:end="135:60">&amp;</operator><literal type="number" pos:start="135:61" pos:end="135:61">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="137:21" pos:end="137:62"><expr pos:start="137:21" pos:end="137:61"><name pos:start="137:21" pos:end="137:48"><name pos:start="137:21" pos:end="137:26">planep</name><index pos:start="137:27" pos:end="137:48">[<expr pos:start="137:28" pos:end="137:47"><name pos:start="137:28" pos:end="137:28">x</name> <operator pos:start="137:30" pos:end="137:30">+</operator> <literal type="number" pos:start="137:32" pos:end="137:32">1</literal> <operator pos:start="137:34" pos:end="137:34">+</operator> <literal type="number" pos:start="137:36" pos:end="137:36">2</literal><operator pos:start="137:37" pos:end="137:37">*</operator><name pos:start="137:38" pos:end="137:47"><name pos:start="137:38" pos:end="137:39">bp</name><operator pos:start="137:40" pos:end="137:41">-&gt;</operator><name pos:start="137:42" pos:end="137:47">stride</name></name></expr>]</index></name><operator pos:start="137:49" pos:end="137:49">=</operator> <operator pos:start="137:51" pos:end="137:51">(</operator><name pos:start="137:52" pos:end="137:55">code</name><operator pos:start="137:56" pos:end="137:57">&gt;&gt;</operator><literal type="number" pos:start="137:58" pos:end="137:58">5</literal><operator pos:start="137:59" pos:end="137:59">)</operator><operator pos:start="137:60" pos:end="137:60">&amp;</operator><literal type="number" pos:start="137:61" pos:end="137:61">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="139:18" pos:end="149:17">else<block pos:start="139:22" pos:end="149:17">{<block_content pos:start="141:21" pos:end="147:62">

                    <expr_stmt pos:start="141:21" pos:end="141:62"><expr pos:start="141:21" pos:end="141:61"><name pos:start="141:21" pos:end="141:48"><name pos:start="141:21" pos:end="141:26">planep</name><index pos:start="141:27" pos:end="141:48">[<expr pos:start="141:28" pos:end="141:47"><name pos:start="141:28" pos:end="141:28">x</name> <operator pos:start="141:30" pos:end="141:30">+</operator> <literal type="number" pos:start="141:32" pos:end="141:32">2</literal> <operator pos:start="141:34" pos:end="141:34">+</operator> <literal type="number" pos:start="141:36" pos:end="141:36">0</literal><operator pos:start="141:37" pos:end="141:37">*</operator><name pos:start="141:38" pos:end="141:47"><name pos:start="141:38" pos:end="141:39">bp</name><operator pos:start="141:40" pos:end="141:41">-&gt;</operator><name pos:start="141:42" pos:end="141:47">stride</name></name></expr>]</index></name><operator pos:start="141:49" pos:end="141:49">=</operator> <operator pos:start="141:51" pos:end="141:51">(</operator><name pos:start="141:52" pos:end="141:55">code</name><operator pos:start="141:56" pos:end="141:57">&gt;&gt;</operator><literal type="number" pos:start="141:58" pos:end="141:58">2</literal><operator pos:start="141:59" pos:end="141:59">)</operator><operator pos:start="141:60" pos:end="141:60">&amp;</operator><literal type="number" pos:start="141:61" pos:end="141:61">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:62"><expr pos:start="143:21" pos:end="143:61"><name pos:start="143:21" pos:end="143:48"><name pos:start="143:21" pos:end="143:26">planep</name><index pos:start="143:27" pos:end="143:48">[<expr pos:start="143:28" pos:end="143:47"><name pos:start="143:28" pos:end="143:28">x</name> <operator pos:start="143:30" pos:end="143:30">+</operator> <literal type="number" pos:start="143:32" pos:end="143:32">0</literal> <operator pos:start="143:34" pos:end="143:34">+</operator> <literal type="number" pos:start="143:36" pos:end="143:36">1</literal><operator pos:start="143:37" pos:end="143:37">*</operator><name pos:start="143:38" pos:end="143:47"><name pos:start="143:38" pos:end="143:39">bp</name><operator pos:start="143:40" pos:end="143:41">-&gt;</operator><name pos:start="143:42" pos:end="143:47">stride</name></name></expr>]</index></name><operator pos:start="143:49" pos:end="143:49">=</operator> <operator pos:start="143:51" pos:end="143:51">(</operator><name pos:start="143:52" pos:end="143:55">code</name><operator pos:start="143:56" pos:end="143:57">&gt;&gt;</operator><literal type="number" pos:start="143:58" pos:end="143:58">3</literal><operator pos:start="143:59" pos:end="143:59">)</operator><operator pos:start="143:60" pos:end="143:60">&amp;</operator><literal type="number" pos:start="143:61" pos:end="143:61">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:62"><expr pos:start="145:21" pos:end="145:61"><name pos:start="145:21" pos:end="145:48"><name pos:start="145:21" pos:end="145:26">planep</name><index pos:start="145:27" pos:end="145:48">[<expr pos:start="145:28" pos:end="145:47"><name pos:start="145:28" pos:end="145:28">x</name> <operator pos:start="145:30" pos:end="145:30">+</operator> <literal type="number" pos:start="145:32" pos:end="145:32">1</literal> <operator pos:start="145:34" pos:end="145:34">+</operator> <literal type="number" pos:start="145:36" pos:end="145:36">1</literal><operator pos:start="145:37" pos:end="145:37">*</operator><name pos:start="145:38" pos:end="145:47"><name pos:start="145:38" pos:end="145:39">bp</name><operator pos:start="145:40" pos:end="145:41">-&gt;</operator><name pos:start="145:42" pos:end="145:47">stride</name></name></expr>]</index></name><operator pos:start="145:49" pos:end="145:49">=</operator> <operator pos:start="145:51" pos:end="145:51">(</operator><name pos:start="145:52" pos:end="145:55">code</name><operator pos:start="145:56" pos:end="145:57">&gt;&gt;</operator><literal type="number" pos:start="145:58" pos:end="145:58">4</literal><operator pos:start="145:59" pos:end="145:59">)</operator><operator pos:start="145:60" pos:end="145:60">&amp;</operator><literal type="number" pos:start="145:61" pos:end="145:61">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:62"><expr pos:start="147:21" pos:end="147:61"><name pos:start="147:21" pos:end="147:48"><name pos:start="147:21" pos:end="147:26">planep</name><index pos:start="147:27" pos:end="147:48">[<expr pos:start="147:28" pos:end="147:47"><name pos:start="147:28" pos:end="147:28">x</name> <operator pos:start="147:30" pos:end="147:30">+</operator> <literal type="number" pos:start="147:32" pos:end="147:32">2</literal> <operator pos:start="147:34" pos:end="147:34">+</operator> <literal type="number" pos:start="147:36" pos:end="147:36">1</literal><operator pos:start="147:37" pos:end="147:37">*</operator><name pos:start="147:38" pos:end="147:47"><name pos:start="147:38" pos:end="147:39">bp</name><operator pos:start="147:40" pos:end="147:41">-&gt;</operator><name pos:start="147:42" pos:end="147:47">stride</name></name></expr>]</index></name><operator pos:start="147:49" pos:end="147:49">=</operator> <operator pos:start="147:51" pos:end="147:51">(</operator><name pos:start="147:52" pos:end="147:55">code</name><operator pos:start="147:56" pos:end="147:57">&gt;&gt;</operator><literal type="number" pos:start="147:58" pos:end="147:58">5</literal><operator pos:start="147:59" pos:end="147:59">)</operator><operator pos:start="147:60" pos:end="147:60">&amp;</operator><literal type="number" pos:start="147:61" pos:end="147:61">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <expr_stmt pos:start="157:9" pos:end="157:31"><expr pos:start="157:9" pos:end="157:30"><name pos:start="157:9" pos:end="157:9">x</name><operator pos:start="157:10" pos:end="157:10">=</operator>  <name pos:start="157:13" pos:end="157:21"><name pos:start="157:13" pos:end="157:14">bp</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:21">width</name></name> <operator pos:start="157:23" pos:end="157:23">%</operator> <name pos:start="157:25" pos:end="157:30">tile_w</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:86"><expr pos:start="159:9" pos:end="159:85"><call pos:start="159:9" pos:end="159:85"><name pos:start="159:9" pos:end="159:22">decode_colskip</name><argument_list pos:start="159:23" pos:end="159:85">(<argument pos:start="159:24" pos:end="159:31"><expr pos:start="159:24" pos:end="159:31"><name pos:start="159:24" pos:end="159:31"><name pos:start="159:24" pos:end="159:25">bp</name><operator pos:start="159:26" pos:end="159:27">-&gt;</operator><name pos:start="159:28" pos:end="159:31">data</name></name></expr></argument>  ,             <argument pos:start="159:48" pos:end="159:48"><expr pos:start="159:48" pos:end="159:48"><name pos:start="159:48" pos:end="159:48">x</name></expr></argument>, <argument pos:start="159:51" pos:end="159:60"><expr pos:start="159:51" pos:end="159:60"><name pos:start="159:51" pos:end="159:60"><name pos:start="159:51" pos:end="159:52">bp</name><operator pos:start="159:53" pos:end="159:54">-&gt;</operator><name pos:start="159:55" pos:end="159:60">height</name></name></expr></argument>         , <argument pos:start="159:72" pos:end="159:81"><expr pos:start="159:72" pos:end="159:81"><name pos:start="159:72" pos:end="159:81"><name pos:start="159:72" pos:end="159:73">bp</name><operator pos:start="159:74" pos:end="159:75">-&gt;</operator><name pos:start="159:76" pos:end="159:81">stride</name></name></expr></argument>, <argument pos:start="159:84" pos:end="159:84"><expr pos:start="159:84" pos:end="159:84"><name pos:start="159:84" pos:end="159:84">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:86"><expr pos:start="161:9" pos:end="161:85"><call pos:start="161:9" pos:end="161:85"><name pos:start="161:9" pos:end="161:22">decode_rowskip</name><argument_list pos:start="161:23" pos:end="161:85">(<argument pos:start="161:24" pos:end="161:33"><expr pos:start="161:24" pos:end="161:33"><name pos:start="161:24" pos:end="161:31"><name pos:start="161:24" pos:end="161:25">bp</name><operator pos:start="161:26" pos:end="161:27">-&gt;</operator><name pos:start="161:28" pos:end="161:31">data</name></name><operator pos:start="161:32" pos:end="161:32">+</operator><name pos:start="161:33" pos:end="161:33">x</name></expr></argument>, <argument pos:start="161:36" pos:end="161:48"><expr pos:start="161:36" pos:end="161:48"><name pos:start="161:36" pos:end="161:44"><name pos:start="161:36" pos:end="161:37">bp</name><operator pos:start="161:38" pos:end="161:39">-&gt;</operator><name pos:start="161:40" pos:end="161:44">width</name></name> <operator pos:start="161:46" pos:end="161:46">-</operator> <name pos:start="161:48" pos:end="161:48">x</name></expr></argument>, <argument pos:start="161:51" pos:end="161:69"><expr pos:start="161:51" pos:end="161:69"><name pos:start="161:51" pos:end="161:60"><name pos:start="161:51" pos:end="161:52">bp</name><operator pos:start="161:53" pos:end="161:54">-&gt;</operator><name pos:start="161:55" pos:end="161:60">height</name></name> <operator pos:start="161:62" pos:end="161:62">%</operator> <name pos:start="161:64" pos:end="161:69">tile_h</name></expr></argument>, <argument pos:start="161:72" pos:end="161:81"><expr pos:start="161:72" pos:end="161:81"><name pos:start="161:72" pos:end="161:81"><name pos:start="161:72" pos:end="161:73">bp</name><operator pos:start="161:74" pos:end="161:75">-&gt;</operator><name pos:start="161:76" pos:end="161:81">stride</name></name></expr></argument>, <argument pos:start="161:84" pos:end="161:84"><expr pos:start="161:84" pos:end="161:84"><name pos:start="161:84" pos:end="161:84">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:23">case <expr pos:start="167:10" pos:end="167:22"><name pos:start="167:10" pos:end="167:22">IMODE_ROWSKIP</name></expr>:</case>

        <expr_stmt pos:start="169:9" pos:end="169:71"><expr pos:start="169:9" pos:end="169:70"><call pos:start="169:9" pos:end="169:70"><name pos:start="169:9" pos:end="169:22">decode_rowskip</name><argument_list pos:start="169:23" pos:end="169:70">(<argument pos:start="169:24" pos:end="169:31"><expr pos:start="169:24" pos:end="169:31"><name pos:start="169:24" pos:end="169:31"><name pos:start="169:24" pos:end="169:25">bp</name><operator pos:start="169:26" pos:end="169:27">-&gt;</operator><name pos:start="169:28" pos:end="169:31">data</name></name></expr></argument>, <argument pos:start="169:34" pos:end="169:42"><expr pos:start="169:34" pos:end="169:42"><name pos:start="169:34" pos:end="169:42"><name pos:start="169:34" pos:end="169:35">bp</name><operator pos:start="169:36" pos:end="169:37">-&gt;</operator><name pos:start="169:38" pos:end="169:42">width</name></name></expr></argument>, <argument pos:start="169:45" pos:end="169:54"><expr pos:start="169:45" pos:end="169:54"><name pos:start="169:45" pos:end="169:54"><name pos:start="169:45" pos:end="169:46">bp</name><operator pos:start="169:47" pos:end="169:48">-&gt;</operator><name pos:start="169:49" pos:end="169:54">height</name></name></expr></argument>, <argument pos:start="169:57" pos:end="169:66"><expr pos:start="169:57" pos:end="169:66"><name pos:start="169:57" pos:end="169:66"><name pos:start="169:57" pos:end="169:58">bp</name><operator pos:start="169:59" pos:end="169:60">-&gt;</operator><name pos:start="169:61" pos:end="169:66">stride</name></name></expr></argument>, <argument pos:start="169:69" pos:end="169:69"><expr pos:start="169:69" pos:end="169:69"><name pos:start="169:69" pos:end="169:69">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="171:9" pos:end="171:14">break;</break>

    <case pos:start="173:5" pos:end="173:23">case <expr pos:start="173:10" pos:end="173:22"><name pos:start="173:10" pos:end="173:22">IMODE_COLSKIP</name></expr>:</case> <comment type="line" pos:start="173:25" pos:end="173:34">//Teh ugly</comment>

        <expr_stmt pos:start="175:9" pos:end="175:71"><expr pos:start="175:9" pos:end="175:70"><call pos:start="175:9" pos:end="175:70"><name pos:start="175:9" pos:end="175:22">decode_colskip</name><argument_list pos:start="175:23" pos:end="175:70">(<argument pos:start="175:24" pos:end="175:31"><expr pos:start="175:24" pos:end="175:31"><name pos:start="175:24" pos:end="175:31"><name pos:start="175:24" pos:end="175:25">bp</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:31">data</name></name></expr></argument>, <argument pos:start="175:34" pos:end="175:42"><expr pos:start="175:34" pos:end="175:42"><name pos:start="175:34" pos:end="175:42"><name pos:start="175:34" pos:end="175:35">bp</name><operator pos:start="175:36" pos:end="175:37">-&gt;</operator><name pos:start="175:38" pos:end="175:42">width</name></name></expr></argument>, <argument pos:start="175:45" pos:end="175:54"><expr pos:start="175:45" pos:end="175:54"><name pos:start="175:45" pos:end="175:54"><name pos:start="175:45" pos:end="175:46">bp</name><operator pos:start="175:47" pos:end="175:48">-&gt;</operator><name pos:start="175:49" pos:end="175:54">height</name></name></expr></argument>, <argument pos:start="175:57" pos:end="175:66"><expr pos:start="175:57" pos:end="175:66"><name pos:start="175:57" pos:end="175:66"><name pos:start="175:57" pos:end="175:58">bp</name><operator pos:start="175:59" pos:end="175:60">-&gt;</operator><name pos:start="175:61" pos:end="175:66">stride</name></name></expr></argument>, <argument pos:start="175:69" pos:end="175:69"><expr pos:start="175:69" pos:end="175:69"><name pos:start="175:69" pos:end="175:69">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    <default pos:start="179:5" pos:end="179:12">default:</default> <break pos:start="179:14" pos:end="179:19">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="185:5" pos:end="185:32">/* Applying diff operator */</comment>

    <if_stmt pos:start="187:5" pos:end="229:5"><if pos:start="187:5" pos:end="219:5">if <condition pos:start="187:8" pos:end="187:53">(<expr pos:start="187:9" pos:end="187:52"><name pos:start="187:9" pos:end="187:13">imode</name> <operator pos:start="187:15" pos:end="187:16">==</operator> <name pos:start="187:18" pos:end="187:28">IMODE_DIFF2</name> <operator pos:start="187:30" pos:end="187:31">||</operator> <name pos:start="187:33" pos:end="187:37">imode</name> <operator pos:start="187:39" pos:end="187:40">==</operator> <name pos:start="187:42" pos:end="187:52">IMODE_DIFF6</name></expr>)</condition>

    <block pos:start="189:5" pos:end="219:5">{<block_content pos:start="191:9" pos:end="217:9">

        <expr_stmt pos:start="191:9" pos:end="191:26"><expr pos:start="191:9" pos:end="191:25"><name pos:start="191:9" pos:end="191:14">planep</name> <operator pos:start="191:16" pos:end="191:16">=</operator> <name pos:start="191:18" pos:end="191:25"><name pos:start="191:18" pos:end="191:19">bp</name><operator pos:start="191:20" pos:end="191:21">-&gt;</operator><name pos:start="191:22" pos:end="191:25">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:28"><expr pos:start="193:9" pos:end="193:27"><name pos:start="193:9" pos:end="193:17"><name pos:start="193:9" pos:end="193:14">planep</name><index pos:start="193:15" pos:end="193:17">[<expr pos:start="193:16" pos:end="193:16"><literal type="number" pos:start="193:16" pos:end="193:16">0</literal></expr>]</index></name> <operator pos:start="193:19" pos:end="193:20">^=</operator> <name pos:start="193:22" pos:end="193:27">invert</name></expr>;</expr_stmt>

        <for pos:start="195:9" pos:end="197:37">for <control pos:start="195:13" pos:end="195:35">(<init pos:start="195:14" pos:end="195:17"><expr pos:start="195:14" pos:end="195:16"><name pos:start="195:14" pos:end="195:14">x</name><operator pos:start="195:15" pos:end="195:15">=</operator><literal type="number" pos:start="195:16" pos:end="195:16">1</literal></expr>;</init> <condition pos:start="195:19" pos:end="195:30"><expr pos:start="195:19" pos:end="195:29"><name pos:start="195:19" pos:end="195:19">x</name><operator pos:start="195:20" pos:end="195:20">&lt;</operator><name pos:start="195:21" pos:end="195:29"><name pos:start="195:21" pos:end="195:22">bp</name><operator pos:start="195:23" pos:end="195:24">-&gt;</operator><name pos:start="195:25" pos:end="195:29">width</name></name></expr>;</condition> <incr pos:start="195:32" pos:end="195:34"><expr pos:start="195:32" pos:end="195:34"><name pos:start="195:32" pos:end="195:32">x</name><operator pos:start="195:33" pos:end="195:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="197:13" pos:end="197:37"><block_content pos:start="197:13" pos:end="197:37">

            <expr_stmt pos:start="197:13" pos:end="197:37"><expr pos:start="197:13" pos:end="197:36"><name pos:start="197:13" pos:end="197:21"><name pos:start="197:13" pos:end="197:18">planep</name><index pos:start="197:19" pos:end="197:21">[<expr pos:start="197:20" pos:end="197:20"><name pos:start="197:20" pos:end="197:20">x</name></expr>]</index></name> <operator pos:start="197:23" pos:end="197:24">^=</operator> <name pos:start="197:26" pos:end="197:36"><name pos:start="197:26" pos:end="197:31">planep</name><index pos:start="197:32" pos:end="197:36">[<expr pos:start="197:33" pos:end="197:35"><name pos:start="197:33" pos:end="197:33">x</name><operator pos:start="197:34" pos:end="197:34">-</operator><literal type="number" pos:start="197:35" pos:end="197:35">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="199:9" pos:end="217:9">for <control pos:start="199:13" pos:end="199:36">(<init pos:start="199:14" pos:end="199:17"><expr pos:start="199:14" pos:end="199:16"><name pos:start="199:14" pos:end="199:14">y</name><operator pos:start="199:15" pos:end="199:15">=</operator><literal type="number" pos:start="199:16" pos:end="199:16">1</literal></expr>;</init> <condition pos:start="199:19" pos:end="199:31"><expr pos:start="199:19" pos:end="199:30"><name pos:start="199:19" pos:end="199:19">y</name><operator pos:start="199:20" pos:end="199:20">&lt;</operator><name pos:start="199:21" pos:end="199:30"><name pos:start="199:21" pos:end="199:22">bp</name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:30">height</name></name></expr>;</condition> <incr pos:start="199:33" pos:end="199:35"><expr pos:start="199:33" pos:end="199:35"><name pos:start="199:33" pos:end="199:33">y</name><operator pos:start="199:34" pos:end="199:35">++</operator></expr></incr>)</control>

        <block pos:start="201:9" pos:end="217:9">{<block_content pos:start="203:13" pos:end="215:13">

            <expr_stmt pos:start="203:13" pos:end="203:33"><expr pos:start="203:13" pos:end="203:32"><name pos:start="203:13" pos:end="203:18">planep</name> <operator pos:start="203:20" pos:end="203:21">+=</operator> <name pos:start="203:23" pos:end="203:32"><name pos:start="203:23" pos:end="203:24">bp</name><operator pos:start="203:25" pos:end="203:26">-&gt;</operator><name pos:start="203:27" pos:end="203:32">stride</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:45"><expr pos:start="205:13" pos:end="205:44"><name pos:start="205:13" pos:end="205:21"><name pos:start="205:13" pos:end="205:18">planep</name><index pos:start="205:19" pos:end="205:21">[<expr pos:start="205:20" pos:end="205:20"><literal type="number" pos:start="205:20" pos:end="205:20">0</literal></expr>]</index></name> <operator pos:start="205:23" pos:end="205:24">^=</operator> <name pos:start="205:26" pos:end="205:44"><name pos:start="205:26" pos:end="205:31">planep</name><index pos:start="205:32" pos:end="205:44">[<expr pos:start="205:33" pos:end="205:43"><operator pos:start="205:33" pos:end="205:33">-</operator><name pos:start="205:34" pos:end="205:43"><name pos:start="205:34" pos:end="205:35">bp</name><operator pos:start="205:36" pos:end="205:37">-&gt;</operator><name pos:start="205:38" pos:end="205:43">stride</name></name></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="207:13" pos:end="215:13">for <control pos:start="207:17" pos:end="207:39">(<init pos:start="207:18" pos:end="207:21"><expr pos:start="207:18" pos:end="207:20"><name pos:start="207:18" pos:end="207:18">x</name><operator pos:start="207:19" pos:end="207:19">=</operator><literal type="number" pos:start="207:20" pos:end="207:20">1</literal></expr>;</init> <condition pos:start="207:23" pos:end="207:34"><expr pos:start="207:23" pos:end="207:33"><name pos:start="207:23" pos:end="207:23">x</name><operator pos:start="207:24" pos:end="207:24">&lt;</operator><name pos:start="207:25" pos:end="207:33"><name pos:start="207:25" pos:end="207:26">bp</name><operator pos:start="207:27" pos:end="207:28">-&gt;</operator><name pos:start="207:29" pos:end="207:33">width</name></name></expr>;</condition> <incr pos:start="207:36" pos:end="207:38"><expr pos:start="207:36" pos:end="207:38"><name pos:start="207:36" pos:end="207:36">x</name><operator pos:start="207:37" pos:end="207:38">++</operator></expr></incr>)</control>

            <block pos:start="209:13" pos:end="215:13">{<block_content pos:start="211:17" pos:end="213:82">

                <if_stmt pos:start="211:17" pos:end="213:82"><if pos:start="211:17" pos:end="211:77">if <condition pos:start="211:20" pos:end="211:56">(<expr pos:start="211:21" pos:end="211:55"><name pos:start="211:21" pos:end="211:31"><name pos:start="211:21" pos:end="211:26">planep</name><index pos:start="211:27" pos:end="211:31">[<expr pos:start="211:28" pos:end="211:30"><name pos:start="211:28" pos:end="211:28">x</name><operator pos:start="211:29" pos:end="211:29">-</operator><literal type="number" pos:start="211:30" pos:end="211:30">1</literal></expr>]</index></name> <operator pos:start="211:33" pos:end="211:34">!=</operator> <name pos:start="211:36" pos:end="211:55"><name pos:start="211:36" pos:end="211:41">planep</name><index pos:start="211:42" pos:end="211:55">[<expr pos:start="211:43" pos:end="211:54"><name pos:start="211:43" pos:end="211:43">x</name><operator pos:start="211:44" pos:end="211:44">-</operator><name pos:start="211:45" pos:end="211:54"><name pos:start="211:45" pos:end="211:46">bp</name><operator pos:start="211:47" pos:end="211:48">-&gt;</operator><name pos:start="211:49" pos:end="211:54">stride</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="211:58" pos:end="211:77"><block_content pos:start="211:58" pos:end="211:77"> <expr_stmt pos:start="211:58" pos:end="211:77"><expr pos:start="211:58" pos:end="211:76"><name pos:start="211:58" pos:end="211:66"><name pos:start="211:58" pos:end="211:63">planep</name><index pos:start="211:64" pos:end="211:66">[<expr pos:start="211:65" pos:end="211:65"><name pos:start="211:65" pos:end="211:65">x</name></expr>]</index></name> <operator pos:start="211:68" pos:end="211:69">^=</operator> <name pos:start="211:71" pos:end="211:76">invert</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="213:17" pos:end="213:82">else<block type="pseudo" pos:start="213:58" pos:end="213:82"><block_content pos:start="213:58" pos:end="213:82">                                     <expr_stmt pos:start="213:58" pos:end="213:82"><expr pos:start="213:58" pos:end="213:81"><name pos:start="213:58" pos:end="213:66"><name pos:start="213:58" pos:end="213:63">planep</name><index pos:start="213:64" pos:end="213:66">[<expr pos:start="213:65" pos:end="213:65"><name pos:start="213:65" pos:end="213:65">x</name></expr>]</index></name> <operator pos:start="213:68" pos:end="213:69">^=</operator> <name pos:start="213:71" pos:end="213:81"><name pos:start="213:71" pos:end="213:76">planep</name><index pos:start="213:77" pos:end="213:81">[<expr pos:start="213:78" pos:end="213:80"><name pos:start="213:78" pos:end="213:78">x</name><operator pos:start="213:79" pos:end="213:79">-</operator><literal type="number" pos:start="213:80" pos:end="213:80">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if>

    <if type="elseif" pos:start="221:5" pos:end="229:5">else if <condition pos:start="221:13" pos:end="221:20">(<expr pos:start="221:14" pos:end="221:19"><name pos:start="221:14" pos:end="221:19">invert</name></expr>)</condition>

    <block pos:start="223:5" pos:end="229:5">{<block_content pos:start="225:9" pos:end="227:70">

        <expr_stmt pos:start="225:9" pos:end="225:26"><expr pos:start="225:9" pos:end="225:25"><name pos:start="225:9" pos:end="225:14">planep</name> <operator pos:start="225:16" pos:end="225:16">=</operator> <name pos:start="225:18" pos:end="225:25"><name pos:start="225:18" pos:end="225:19">bp</name><operator pos:start="225:20" pos:end="225:21">-&gt;</operator><name pos:start="225:22" pos:end="225:25">data</name></name></expr>;</expr_stmt>

        <for pos:start="227:9" pos:end="227:70">for <control pos:start="227:13" pos:end="227:46">(<init pos:start="227:14" pos:end="227:17"><expr pos:start="227:14" pos:end="227:16"><name pos:start="227:14" pos:end="227:14">x</name><operator pos:start="227:15" pos:end="227:15">=</operator><literal type="number" pos:start="227:16" pos:end="227:16">0</literal></expr>;</init> <condition pos:start="227:19" pos:end="227:41"><expr pos:start="227:19" pos:end="227:40"><name pos:start="227:19" pos:end="227:19">x</name><operator pos:start="227:20" pos:end="227:20">&lt;</operator><name pos:start="227:21" pos:end="227:29"><name pos:start="227:21" pos:end="227:22">bp</name><operator pos:start="227:23" pos:end="227:24">-&gt;</operator><name pos:start="227:25" pos:end="227:29">width</name></name><operator pos:start="227:30" pos:end="227:30">*</operator><name pos:start="227:31" pos:end="227:40"><name pos:start="227:31" pos:end="227:32">bp</name><operator pos:start="227:33" pos:end="227:34">-&gt;</operator><name pos:start="227:35" pos:end="227:40">height</name></name></expr>;</condition> <incr pos:start="227:43" pos:end="227:45"><expr pos:start="227:43" pos:end="227:45"><name pos:start="227:43" pos:end="227:43">x</name><operator pos:start="227:44" pos:end="227:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="227:48" pos:end="227:70"><block_content pos:start="227:48" pos:end="227:70"> <expr_stmt pos:start="227:48" pos:end="227:70"><expr pos:start="227:48" pos:end="227:69"><name pos:start="227:48" pos:end="227:56"><name pos:start="227:48" pos:end="227:53">planep</name><index pos:start="227:54" pos:end="227:56">[<expr pos:start="227:55" pos:end="227:55"><name pos:start="227:55" pos:end="227:55">x</name></expr>]</index></name> <operator pos:start="227:58" pos:end="227:58">=</operator> <operator pos:start="227:60" pos:end="227:60">!</operator><name pos:start="227:61" pos:end="227:69"><name pos:start="227:61" pos:end="227:66">planep</name><index pos:start="227:67" pos:end="227:69">[<expr pos:start="227:68" pos:end="227:68"><name pos:start="227:68" pos:end="227:68">x</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for> <comment type="line" pos:start="227:72" pos:end="227:85">//FIXME stride</comment>

    </block_content>}</block></if></if_stmt>

    <return pos:start="231:5" pos:end="231:31">return <expr pos:start="231:12" pos:end="231:30"><operator pos:start="231:12" pos:end="231:12">(</operator><name pos:start="231:13" pos:end="231:17">imode</name><operator pos:start="231:18" pos:end="231:19">&lt;&lt;</operator><literal type="number" pos:start="231:20" pos:end="231:20">1</literal><operator pos:start="231:21" pos:end="231:21">)</operator> <operator pos:start="231:23" pos:end="231:23">+</operator> <name pos:start="231:25" pos:end="231:30">invert</name></expr>;</return>

</block_content>}</block></function>
</unit>
