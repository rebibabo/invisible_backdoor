<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14296.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:15"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:9">USBDevice</name> <modifier pos:start="1:11" pos:end="1:11">*</modifier></type><name pos:start="1:12" pos:end="1:27">usbdevice_create</name><parameter_list pos:start="1:28" pos:end="1:48">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:40"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:47">cmdline</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="49:15">{<block_content pos:start="3:5" pos:end="49:15">
    <decl_stmt pos:start="3:5" pos:end="3:45"><decl pos:start="3:5" pos:end="3:44"><type pos:start="3:5" pos:end="3:12"><name pos:start="3:5" pos:end="3:10">USBBus</name> <modifier pos:start="3:12" pos:end="3:12">*</modifier></type><name pos:start="3:13" pos:end="3:15">bus</name> <init pos:start="3:17" pos:end="3:44">= <expr pos:start="3:19" pos:end="3:44"><call pos:start="3:19" pos:end="3:44"><name pos:start="3:19" pos:end="3:30">usb_bus_find</name><argument_list pos:start="3:31" pos:end="3:44">(<argument pos:start="3:32" pos:end="3:33"><expr pos:start="3:32" pos:end="3:33"><operator pos:start="3:32" pos:end="3:32">-</operator><literal type="number" pos:start="3:33" pos:end="3:33">1</literal></expr></argument> <comment type="block" pos:start="3:35" pos:end="3:43">/* any */</comment>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:31"><decl pos:start="4:5" pos:end="4:30"><type pos:start="4:5" pos:end="4:22"><name pos:start="4:5" pos:end="4:20">LegacyUSBFactory</name> <modifier pos:start="4:22" pos:end="4:22">*</modifier></type><name pos:start="4:23" pos:end="4:23">f</name> <init pos:start="4:25" pos:end="4:30">= <expr pos:start="4:27" pos:end="4:30"><name pos:start="4:27" pos:end="4:30">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">err</name> <init pos:start="5:16" pos:end="5:21">= <expr pos:start="5:18" pos:end="5:21"><name pos:start="5:18" pos:end="5:21">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:14"><decl pos:start="6:5" pos:end="6:13"><type pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:10">GSList</name> <modifier pos:start="6:12" pos:end="6:12">*</modifier></type><name pos:start="6:13" pos:end="6:13">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:19"><name pos:start="7:10" pos:end="7:15">driver</name><index pos:start="7:16" pos:end="7:19">[<expr pos:start="7:17" pos:end="7:18"><literal type="number" pos:start="7:17" pos:end="7:18">32</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:23"><decl pos:start="8:5" pos:end="8:22"><type pos:start="8:5" pos:end="8:16"><specifier pos:start="8:5" pos:end="8:9">const</specifier> <name pos:start="8:11" pos:end="8:14">char</name> <modifier pos:start="8:16" pos:end="8:16">*</modifier></type><name pos:start="8:17" pos:end="8:22">params</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:19"><decl pos:start="10:5" pos:end="10:18"><type pos:start="10:5" pos:end="10:15"><name pos:start="10:5" pos:end="10:13">USBDevice</name> <modifier pos:start="10:15" pos:end="10:15">*</modifier></type><name pos:start="10:16" pos:end="10:18">dev</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">ObjectClass</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:22">klass</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:20"><decl pos:start="12:5" pos:end="12:19"><type pos:start="12:5" pos:end="12:17"><name pos:start="12:5" pos:end="12:15">DeviceClass</name> <modifier pos:start="12:17" pos:end="12:17">*</modifier></type><name pos:start="12:18" pos:end="12:19">dc</name></decl>;</decl_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:10">params</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:32"><name pos:start="13:14" pos:end="13:19">strchr</name><argument_list pos:start="13:20" pos:end="13:32">(<argument pos:start="13:21" pos:end="13:27"><expr pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:27">cmdline</name></expr></argument>,<argument pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><literal type="char" pos:start="13:29" pos:end="13:31">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="14:5" pos:end="49:15"><if pos:start="14:5" pos:end="20:5">if <condition pos:start="14:8" pos:end="14:15">(<expr pos:start="14:9" pos:end="14:14"><name pos:start="14:9" pos:end="14:14">params</name></expr>)</condition> <block pos:start="14:17" pos:end="20:5">{<block_content pos:start="15:9" pos:end="19:38">
        <expr_stmt pos:start="15:9" pos:end="15:17"><expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:14">params</name><operator pos:start="15:15" pos:end="15:16">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:31"><expr pos:start="16:9" pos:end="16:30"><name pos:start="16:9" pos:end="16:11">len</name> <operator pos:start="16:13" pos:end="16:13">=</operator> <name pos:start="16:15" pos:end="16:20">params</name> <operator pos:start="16:22" pos:end="16:22">-</operator> <name pos:start="16:24" pos:end="16:30">cmdline</name></expr>;</expr_stmt>
        <if_stmt pos:start="17:9" pos:end="18:33"><if pos:start="17:9" pos:end="18:33">if <condition pos:start="17:12" pos:end="17:33">(<expr pos:start="17:13" pos:end="17:32"><name pos:start="17:13" pos:end="17:15">len</name> <operator pos:start="17:17" pos:end="17:17">&gt;</operator> <sizeof pos:start="17:19" pos:end="17:32">sizeof<argument_list pos:start="17:25" pos:end="17:32">(<argument pos:start="17:26" pos:end="17:31"><expr pos:start="17:26" pos:end="17:31"><name pos:start="17:26" pos:end="17:31">driver</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="18:13" pos:end="18:33"><block_content pos:start="18:13" pos:end="18:33">
            <expr_stmt pos:start="18:13" pos:end="18:33"><expr pos:start="18:13" pos:end="18:32"><name pos:start="18:13" pos:end="18:15">len</name> <operator pos:start="18:17" pos:end="18:17">=</operator> <sizeof pos:start="18:19" pos:end="18:32">sizeof<argument_list pos:start="18:25" pos:end="18:32">(<argument pos:start="18:26" pos:end="18:31"><expr pos:start="18:26" pos:end="18:31"><name pos:start="18:26" pos:end="18:31">driver</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:38"><expr pos:start="19:9" pos:end="19:37"><call pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:15">pstrcpy</name><argument_list pos:start="19:16" pos:end="19:37">(<argument pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:22">driver</name></expr></argument>, <argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:27">len</name></expr></argument>, <argument pos:start="19:30" pos:end="19:36"><expr pos:start="19:30" pos:end="19:36"><name pos:start="19:30" pos:end="19:36">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="20:7" pos:end="49:15">else <block pos:start="20:12" pos:end="49:15">{<block_content pos:start="21:9" pos:end="49:15">
        <expr_stmt pos:start="21:9" pos:end="21:20"><expr pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:14">params</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="string" pos:start="21:18" pos:end="21:19">""</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="22:49"><expr pos:start="22:9" pos:end="22:48"><call pos:start="22:9" pos:end="22:48"><name pos:start="22:9" pos:end="22:15">pstrcpy</name><argument_list pos:start="22:16" pos:end="22:48">(<argument pos:start="22:17" pos:end="22:22"><expr pos:start="22:17" pos:end="22:22"><name pos:start="22:17" pos:end="22:22">driver</name></expr></argument>, <argument pos:start="22:25" pos:end="22:38"><expr pos:start="22:25" pos:end="22:38"><sizeof pos:start="22:25" pos:end="22:38">sizeof<argument_list pos:start="22:31" pos:end="22:38">(<argument pos:start="22:32" pos:end="22:37"><expr pos:start="22:32" pos:end="22:37"><name pos:start="22:32" pos:end="22:37">driver</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="22:41" pos:end="22:47"><expr pos:start="22:41" pos:end="22:47"><name pos:start="22:41" pos:end="22:47">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="23:5" pos:end="49:15">for <control pos:start="23:9" pos:end="23:48">(<init pos:start="23:10" pos:end="23:32"><expr pos:start="23:10" pos:end="23:31"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:31">legacy_usb_factory</name></expr>;</init> <condition pos:start="23:34" pos:end="23:35"><expr pos:start="23:34" pos:end="23:34"><name pos:start="23:34" pos:end="23:34">i</name></expr>;</condition> <incr pos:start="23:37" pos:end="23:47"><expr pos:start="23:37" pos:end="23:47"><name pos:start="23:37" pos:end="23:37">i</name> <operator pos:start="23:39" pos:end="23:39">=</operator> <name pos:start="23:41" pos:end="23:47"><name pos:start="23:41" pos:end="23:41">i</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:47">next</name></name></expr></incr>)</control> <block pos:start="23:50" pos:end="49:15">{<block_content pos:start="24:9" pos:end="49:15">
        <expr_stmt pos:start="24:9" pos:end="24:20"><expr pos:start="24:9" pos:end="24:19"><name pos:start="24:9" pos:end="24:9">f</name> <operator pos:start="24:11" pos:end="24:11">=</operator> <name pos:start="24:13" pos:end="24:19"><name pos:start="24:13" pos:end="24:13">i</name><operator pos:start="24:14" pos:end="24:15">-&gt;</operator><name pos:start="24:16" pos:end="24:19">data</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="25:9" pos:end="49:15"><if pos:start="25:9" pos:end="49:15">if <condition pos:start="25:12" pos:end="25:51">(<expr pos:start="25:13" pos:end="25:50"><call pos:start="25:13" pos:end="25:45"><name pos:start="25:13" pos:end="25:18">strcmp</name><argument_list pos:start="25:19" pos:end="25:45">(<argument pos:start="25:20" pos:end="25:36"><expr pos:start="25:20" pos:end="25:36"><name pos:start="25:20" pos:end="25:36"><name pos:start="25:20" pos:end="25:20">f</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:36">usbdevice_name</name></name></expr></argument>, <argument pos:start="25:39" pos:end="25:44"><expr pos:start="25:39" pos:end="25:44"><name pos:start="25:39" pos:end="25:44">driver</name></expr></argument>)</argument_list></call> <operator pos:start="25:47" pos:end="25:48">==</operator> <literal type="number" pos:start="25:50" pos:end="25:50">0</literal></expr>)</condition> <block pos:start="25:53" pos:end="49:15">{<block_content pos:start="26:13" pos:end="49:15">
            <break pos:start="26:13" pos:end="26:18">break;</break>
    <if_stmt pos:start="27:5" pos:end="49:15"><if pos:start="27:5" pos:end="49:15">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:9">i</name> <operator pos:start="27:11" pos:end="27:12">==</operator> <name pos:start="27:14" pos:end="27:17">NULL</name></expr>)</condition> <block pos:start="27:20" pos:end="49:15">{<block_content pos:start="32:5" pos:end="49:15">
<cpp:if pos:start="28:1" pos:end="28:5">#<cpp:directive pos:start="28:2" pos:end="28:3">if</cpp:directive> <expr pos:start="28:5" pos:end="28:5"><literal type="number" pos:start="28:5" pos:end="28:5">0</literal></expr></cpp:if>
        <comment type="block" pos:start="29:9" pos:end="29:67">/* no error because some drivers are not converted (yet) */</comment>
        error_report("usbdevice %s not found", driver);
<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>
    <if_stmt pos:start="32:5" pos:end="49:15"><if pos:start="32:5" pos:end="49:15">if <condition pos:start="32:8" pos:end="32:13">(<expr pos:start="32:9" pos:end="32:12"><operator pos:start="32:9" pos:end="32:9">!</operator><name pos:start="32:10" pos:end="32:12">bus</name></expr>)</condition> <block pos:start="32:15" pos:end="49:15">{<block_content pos:start="33:9" pos:end="49:15">
        <expr_stmt pos:start="33:9" pos:end="35:63"><expr pos:start="33:9" pos:end="35:62"><call pos:start="33:9" pos:end="35:62"><name pos:start="33:9" pos:end="33:20">error_report</name><argument_list pos:start="33:21" pos:end="35:62">(<argument pos:start="33:22" pos:end="35:53"><expr pos:start="33:22" pos:end="35:53"><literal type="string" pos:start="33:22" pos:end="33:65">"Error: no usb bus to attach usbdevice %s, "</literal>
                     <literal type="string" pos:start="34:22" pos:end="34:65">"please try -machine usb=on and check that "</literal>
                     <literal type="string" pos:start="35:22" pos:end="35:53">"the machine model supports USB"</literal></expr></argument>, <argument pos:start="35:56" pos:end="35:61"><expr pos:start="35:56" pos:end="35:61"><name pos:start="35:56" pos:end="35:61">driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="36:5" pos:end="49:15"><if pos:start="36:5" pos:end="38:5">if <condition pos:start="36:8" pos:end="36:26">(<expr pos:start="36:9" pos:end="36:25"><name pos:start="36:9" pos:end="36:25"><name pos:start="36:9" pos:end="36:9">f</name><operator pos:start="36:10" pos:end="36:11">-&gt;</operator><name pos:start="36:12" pos:end="36:25">usbdevice_init</name></name></expr>)</condition> <block pos:start="36:28" pos:end="38:5">{<block_content pos:start="37:9" pos:end="37:45">
        <expr_stmt pos:start="37:9" pos:end="37:45"><expr pos:start="37:9" pos:end="37:44"><name pos:start="37:9" pos:end="37:11">dev</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:44"><name pos:start="37:15" pos:end="37:31"><name pos:start="37:15" pos:end="37:15">f</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:31">usbdevice_init</name></name><argument_list pos:start="37:32" pos:end="37:44">(<argument pos:start="37:33" pos:end="37:35"><expr pos:start="37:33" pos:end="37:35"><name pos:start="37:33" pos:end="37:35">bus</name></expr></argument>, <argument pos:start="37:38" pos:end="37:43"><expr pos:start="37:38" pos:end="37:43"><name pos:start="37:38" pos:end="37:43">params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="38:7" pos:end="49:15">else <block pos:start="38:12" pos:end="49:15">{<block_content pos:start="39:9" pos:end="49:15">
        <if_stmt pos:start="39:9" pos:end="49:15"><if pos:start="39:9" pos:end="49:15">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:19">params</name></expr>)</condition> <block pos:start="39:22" pos:end="49:15">{<block_content pos:start="40:13" pos:end="49:15">
            <expr_stmt pos:start="40:13" pos:end="40:67"><expr pos:start="40:13" pos:end="40:66"><call pos:start="40:13" pos:end="40:66"><name pos:start="40:13" pos:end="40:24">error_report</name><argument_list pos:start="40:25" pos:end="40:66">(<argument pos:start="40:26" pos:end="40:57"><expr pos:start="40:26" pos:end="40:57"><literal type="string" pos:start="40:26" pos:end="40:57">"usbdevice %s accepts no params"</literal></expr></argument>, <argument pos:start="40:60" pos:end="40:65"><expr pos:start="40:60" pos:end="40:65"><name pos:start="40:60" pos:end="40:65">driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:39"><expr pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:11">dev</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:38"><name pos:start="41:15" pos:end="41:24">usb_create</name><argument_list pos:start="41:25" pos:end="41:38">(<argument pos:start="41:26" pos:end="41:28"><expr pos:start="41:26" pos:end="41:28"><name pos:start="41:26" pos:end="41:28">bus</name></expr></argument>, <argument pos:start="41:31" pos:end="41:37"><expr pos:start="41:31" pos:end="41:37"><name pos:start="41:31" pos:end="41:37"><name pos:start="41:31" pos:end="41:31">f</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:37">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="42:5" pos:end="49:15"><if pos:start="42:5" pos:end="49:15">if <condition pos:start="42:8" pos:end="42:13">(<expr pos:start="42:9" pos:end="42:12"><operator pos:start="42:9" pos:end="42:9">!</operator><name pos:start="42:10" pos:end="42:12">dev</name></expr>)</condition> <block pos:start="42:15" pos:end="49:15">{<block_content pos:start="43:9" pos:end="49:15">
        <expr_stmt pos:start="43:9" pos:end="43:66"><expr pos:start="43:9" pos:end="43:65"><call pos:start="43:9" pos:end="43:65"><name pos:start="43:9" pos:end="43:20">error_report</name><argument_list pos:start="43:21" pos:end="43:65">(<argument pos:start="43:22" pos:end="43:55"><expr pos:start="43:22" pos:end="43:55"><literal type="string" pos:start="43:22" pos:end="43:55">"Failed to create USB device '%s'"</literal></expr></argument>, <argument pos:start="43:58" pos:end="43:64"><expr pos:start="43:58" pos:end="43:64"><name pos:start="43:58" pos:end="43:64"><name pos:start="43:58" pos:end="43:58">f</name><operator pos:start="43:59" pos:end="43:60">-&gt;</operator><name pos:start="43:61" pos:end="43:64">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:66"><expr pos:start="44:5" pos:end="44:65"><call pos:start="44:5" pos:end="44:65"><name pos:start="44:5" pos:end="44:28">object_property_set_bool</name><argument_list pos:start="44:29" pos:end="44:65">(<argument pos:start="44:30" pos:end="44:40"><expr pos:start="44:30" pos:end="44:40"><call pos:start="44:30" pos:end="44:40"><name pos:start="44:30" pos:end="44:35">OBJECT</name><argument_list pos:start="44:36" pos:end="44:40">(<argument pos:start="44:37" pos:end="44:39"><expr pos:start="44:37" pos:end="44:39"><name pos:start="44:37" pos:end="44:39">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="44:43" pos:end="44:46"><expr pos:start="44:43" pos:end="44:46"><name pos:start="44:43" pos:end="44:46">true</name></expr></argument>, <argument pos:start="44:49" pos:end="44:58"><expr pos:start="44:49" pos:end="44:58"><literal type="string" pos:start="44:49" pos:end="44:58">"realized"</literal></expr></argument>, <argument pos:start="44:61" pos:end="44:64"><expr pos:start="44:61" pos:end="44:64"><operator pos:start="44:61" pos:end="44:61">&amp;</operator><name pos:start="44:62" pos:end="44:64">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="45:5" pos:end="49:15"><if pos:start="45:5" pos:end="49:15">if <condition pos:start="45:8" pos:end="45:12">(<expr pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">err</name></expr>)</condition> <block pos:start="45:14" pos:end="49:15">{<block_content pos:start="46:9" pos:end="49:15">
        <expr_stmt pos:start="46:9" pos:end="47:35"><expr pos:start="46:9" pos:end="47:34"><call pos:start="46:9" pos:end="47:34"><name pos:start="46:9" pos:end="46:25">error_reportf_err</name><argument_list pos:start="46:26" pos:end="47:34">(<argument pos:start="46:27" pos:end="46:29"><expr pos:start="46:27" pos:end="46:29"><name pos:start="46:27" pos:end="46:29">err</name></expr></argument>, <argument pos:start="46:32" pos:end="46:71"><expr pos:start="46:32" pos:end="46:71"><literal type="string" pos:start="46:32" pos:end="46:71">"Failed to initialize USB device '%s': "</literal></expr></argument>,
                          <argument pos:start="47:27" pos:end="47:33"><expr pos:start="47:27" pos:end="47:33"><name pos:start="47:27" pos:end="47:33"><name pos:start="47:27" pos:end="47:27">f</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:33">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="48:9" pos:end="48:37"><expr pos:start="48:9" pos:end="48:36"><call pos:start="48:9" pos:end="48:36"><name pos:start="48:9" pos:end="48:23">object_unparent</name><argument_list pos:start="48:24" pos:end="48:36">(<argument pos:start="48:25" pos:end="48:35"><expr pos:start="48:25" pos:end="48:35"><call pos:start="48:25" pos:end="48:35"><name pos:start="48:25" pos:end="48:30">OBJECT</name><argument_list pos:start="48:31" pos:end="48:35">(<argument pos:start="48:32" pos:end="48:34"><expr pos:start="48:32" pos:end="48:34"><name pos:start="48:32" pos:end="48:34">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">dev</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></function></unit>
