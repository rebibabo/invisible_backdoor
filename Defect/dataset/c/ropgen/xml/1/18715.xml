<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18715.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">aio_set_event_notifier</name><parameter_list pos:start="1:28" pos:end="7:60">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:38">AioContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:44"><decl pos:start="3:29" pos:end="3:44"><type pos:start="3:29" pos:end="3:44"><name pos:start="3:29" pos:end="3:41">EventNotifier</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:44">e</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:44"><decl pos:start="5:29" pos:end="5:44"><type pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:32">bool</name></type> <name pos:start="5:34" pos:end="5:44">is_external</name></decl></parameter>,

                            <parameter pos:start="7:29" pos:end="7:59"><decl pos:start="7:29" pos:end="7:59"><type pos:start="7:29" pos:end="7:59"><name pos:start="7:29" pos:end="7:48">EventNotifierHandler</name> <modifier pos:start="7:50" pos:end="7:50">*</modifier></type><name pos:start="7:51" pos:end="7:59">io_notify</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="97:1">{<block_content pos:start="11:5" pos:end="95:20">

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">AioHandler</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">node</name></decl>;</decl_stmt>



    <macro pos:start="15:5" pos:end="15:49"><name pos:start="15:5" pos:end="15:17">QLIST_FOREACH</name><argument_list pos:start="15:18" pos:end="15:49">(<argument pos:start="15:19" pos:end="15:22">node</argument>, <argument pos:start="15:25" pos:end="15:42">&amp;ctx-&gt;aio_handlers</argument>, <argument pos:start="15:45" pos:end="15:48">node</argument>)</argument_list></macro> <block pos:start="15:51" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:9">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:43">(<expr pos:start="17:13" pos:end="17:42"><name pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:16">node</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:19">e</name></name> <operator pos:start="17:21" pos:end="17:22">==</operator> <name pos:start="17:24" pos:end="17:24">e</name> <operator pos:start="17:26" pos:end="17:27">&amp;&amp;</operator> <operator pos:start="17:29" pos:end="17:29">!</operator><name pos:start="17:30" pos:end="17:42"><name pos:start="17:30" pos:end="17:33">node</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:42">deleted</name></name></expr>)</condition> <block pos:start="17:45" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:18">

            <break pos:start="19:13" pos:end="19:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <comment type="block" pos:start="27:5" pos:end="27:41">/* Are we deleting the fd handler? */</comment>

    <if_stmt pos:start="29:5" pos:end="91:5"><if pos:start="29:5" pos:end="63:5">if <condition pos:start="29:8" pos:end="29:19">(<expr pos:start="29:9" pos:end="29:18"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:18">io_notify</name></expr>)</condition> <block pos:start="29:21" pos:end="63:5">{<block_content pos:start="31:9" pos:end="61:9">

        <if_stmt pos:start="31:9" pos:end="61:9"><if pos:start="31:9" pos:end="61:9">if <condition pos:start="31:12" pos:end="31:17">(<expr pos:start="31:13" pos:end="31:16"><name pos:start="31:13" pos:end="31:16">node</name></expr>)</condition> <block pos:start="31:19" pos:end="61:9">{<block_content pos:start="33:13" pos:end="59:13">

            <expr_stmt pos:start="33:13" pos:end="33:59"><expr pos:start="33:13" pos:end="33:58"><call pos:start="33:13" pos:end="33:58"><name pos:start="33:13" pos:end="33:32">g_source_remove_poll</name><argument_list pos:start="33:33" pos:end="33:58">(<argument pos:start="33:34" pos:end="33:45"><expr pos:start="33:34" pos:end="33:45"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:45"><name pos:start="33:35" pos:end="33:37">ctx</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:45">source</name></name></expr></argument>, <argument pos:start="33:48" pos:end="33:57"><expr pos:start="33:48" pos:end="33:57"><operator pos:start="33:48" pos:end="33:48">&amp;</operator><name pos:start="33:49" pos:end="33:57"><name pos:start="33:49" pos:end="33:52">node</name><operator pos:start="33:53" pos:end="33:54">-&gt;</operator><name pos:start="33:55" pos:end="33:57">pfd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="37:13" pos:end="37:68">/* If the lock is held, just mark the node as deleted */</comment>

            <if_stmt pos:start="39:13" pos:end="59:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:38">(<expr pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:19">ctx</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:37">walking_handlers</name></name></expr>)</condition> <block pos:start="39:40" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:38">

                <expr_stmt pos:start="41:17" pos:end="41:34"><expr pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:29"><name pos:start="41:17" pos:end="41:20">node</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:29">deleted</name></name> <operator pos:start="41:31" pos:end="41:31">=</operator> <literal type="number" pos:start="41:33" pos:end="41:33">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:38"><expr pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:20">node</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:25">pfd</name><operator pos:start="43:26" pos:end="43:26">.</operator><name pos:start="43:27" pos:end="43:33">revents</name></name> <operator pos:start="43:35" pos:end="43:35">=</operator> <literal type="number" pos:start="43:37" pos:end="43:37">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="45:15" pos:end="59:13">else <block pos:start="45:20" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:29">

                <comment type="block" pos:start="47:17" pos:end="53:19">/* Otherwise, delete it for real.  We can't just mark it as

                 * deleted because deleted nodes are only cleaned up after

                 * releasing the walking_handlers lock.

                 */</comment>

                <expr_stmt pos:start="55:17" pos:end="55:41"><expr pos:start="55:17" pos:end="55:40"><call pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:28">QLIST_REMOVE</name><argument_list pos:start="55:29" pos:end="55:40">(<argument pos:start="55:30" pos:end="55:33"><expr pos:start="55:30" pos:end="55:33"><name pos:start="55:30" pos:end="55:33">node</name></expr></argument>, <argument pos:start="55:36" pos:end="55:39"><expr pos:start="55:36" pos:end="55:39"><name pos:start="55:36" pos:end="55:39">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:29"><expr pos:start="57:17" pos:end="57:28"><call pos:start="57:17" pos:end="57:28"><name pos:start="57:17" pos:end="57:22">g_free</name><argument_list pos:start="57:23" pos:end="57:28">(<argument pos:start="57:24" pos:end="57:27"><expr pos:start="57:24" pos:end="57:27"><name pos:start="57:24" pos:end="57:27">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="91:5">else <block pos:start="63:12" pos:end="91:5">{<block_content pos:start="65:9" pos:end="89:36">

        <if_stmt pos:start="65:9" pos:end="85:9"><if pos:start="65:9" pos:end="85:9">if <condition pos:start="65:12" pos:end="65:25">(<expr pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:16">node</name> <operator pos:start="65:18" pos:end="65:19">==</operator> <name pos:start="65:21" pos:end="65:24">NULL</name></expr>)</condition> <block pos:start="65:27" pos:end="85:9">{<block_content pos:start="69:13" pos:end="83:56">

            <comment type="block" pos:start="67:13" pos:end="67:60">/* Alloc and insert if it's not already there */</comment>

            <expr_stmt pos:start="69:13" pos:end="69:41"><expr pos:start="69:13" pos:end="69:40"><name pos:start="69:13" pos:end="69:16">node</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <call pos:start="69:20" pos:end="69:40"><name pos:start="69:20" pos:end="69:25">g_new0</name><argument_list pos:start="69:26" pos:end="69:40">(<argument pos:start="69:27" pos:end="69:36"><expr pos:start="69:27" pos:end="69:36"><name pos:start="69:27" pos:end="69:36">AioHandler</name></expr></argument>, <argument pos:start="69:39" pos:end="69:39"><expr pos:start="69:39" pos:end="69:39"><literal type="number" pos:start="69:39" pos:end="69:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:24"><expr pos:start="71:13" pos:end="71:23"><name pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:16">node</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:19">e</name></name> <operator pos:start="71:21" pos:end="71:21">=</operator> <name pos:start="71:23" pos:end="71:23">e</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:67"><expr pos:start="73:13" pos:end="73:66"><name pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:16">node</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:21">pfd</name><operator pos:start="73:22" pos:end="73:22">.</operator><name pos:start="73:23" pos:end="73:24">fd</name></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <operator pos:start="73:28" pos:end="73:28">(</operator><name pos:start="73:29" pos:end="73:37">uintptr_t</name><operator pos:start="73:38" pos:end="73:38">)</operator><call pos:start="73:39" pos:end="73:66"><name pos:start="73:39" pos:end="73:63">event_notifier_get_handle</name><argument_list pos:start="73:64" pos:end="73:66">(<argument pos:start="73:65" pos:end="73:65"><expr pos:start="73:65" pos:end="73:65"><name pos:start="73:65" pos:end="73:65">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:39"><expr pos:start="75:13" pos:end="75:38"><name pos:start="75:13" pos:end="75:28"><name pos:start="75:13" pos:end="75:16">node</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:21">pfd</name><operator pos:start="75:22" pos:end="75:22">.</operator><name pos:start="75:23" pos:end="75:28">events</name></name> <operator pos:start="75:30" pos:end="75:30">=</operator> <name pos:start="75:32" pos:end="75:38">G_IO_IN</name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:44"><expr pos:start="77:13" pos:end="77:43"><name pos:start="77:13" pos:end="77:29"><name pos:start="77:13" pos:end="77:16">node</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:29">is_external</name></name> <operator pos:start="77:31" pos:end="77:31">=</operator> <name pos:start="77:33" pos:end="77:43">is_external</name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:62"><expr pos:start="79:13" pos:end="79:61"><call pos:start="79:13" pos:end="79:61"><name pos:start="79:13" pos:end="79:29">QLIST_INSERT_HEAD</name><argument_list pos:start="79:30" pos:end="79:61">(<argument pos:start="79:31" pos:end="79:48"><expr pos:start="79:31" pos:end="79:48"><operator pos:start="79:31" pos:end="79:31">&amp;</operator><name pos:start="79:32" pos:end="79:48"><name pos:start="79:32" pos:end="79:34">ctx</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:48">aio_handlers</name></name></expr></argument>, <argument pos:start="79:51" pos:end="79:54"><expr pos:start="79:51" pos:end="79:54"><name pos:start="79:51" pos:end="79:54">node</name></expr></argument>, <argument pos:start="79:57" pos:end="79:60"><expr pos:start="79:57" pos:end="79:60"><name pos:start="79:57" pos:end="79:60">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="83:13" pos:end="83:56"><expr pos:start="83:13" pos:end="83:55"><call pos:start="83:13" pos:end="83:55"><name pos:start="83:13" pos:end="83:29">g_source_add_poll</name><argument_list pos:start="83:30" pos:end="83:55">(<argument pos:start="83:31" pos:end="83:42"><expr pos:start="83:31" pos:end="83:42"><operator pos:start="83:31" pos:end="83:31">&amp;</operator><name pos:start="83:32" pos:end="83:42"><name pos:start="83:32" pos:end="83:34">ctx</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:42">source</name></name></expr></argument>, <argument pos:start="83:45" pos:end="83:54"><expr pos:start="83:45" pos:end="83:54"><operator pos:start="83:45" pos:end="83:45">&amp;</operator><name pos:start="83:46" pos:end="83:54"><name pos:start="83:46" pos:end="83:49">node</name><operator pos:start="83:50" pos:end="83:51">-&gt;</operator><name pos:start="83:52" pos:end="83:54">pfd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="87:9" pos:end="87:52">/* Update handler with latest information */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:36"><expr pos:start="89:9" pos:end="89:35"><name pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:12">node</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:23">io_notify</name></name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:35">io_notify</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:20"><expr pos:start="95:5" pos:end="95:19"><call pos:start="95:5" pos:end="95:19"><name pos:start="95:5" pos:end="95:14">aio_notify</name><argument_list pos:start="95:15" pos:end="95:19">(<argument pos:start="95:16" pos:end="95:18"><expr pos:start="95:16" pos:end="95:18"><name pos:start="95:16" pos:end="95:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
