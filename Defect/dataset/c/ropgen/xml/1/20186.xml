<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20186.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">net_init_vhost_user</name><parameter_list pos:start="1:24" pos:end="3:59">(<parameter pos:start="1:25" pos:end="1:52"><decl pos:start="1:25" pos:end="1:52"><type pos:start="1:25" pos:end="1:52"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:46">NetClientOptions</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">opts</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:70"><decl pos:start="1:55" pos:end="1:70"><type pos:start="1:55" pos:end="1:70"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">name</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:44"><decl pos:start="3:25" pos:end="3:44"><type pos:start="3:25" pos:end="3:44"><name pos:start="3:25" pos:end="3:38">NetClientState</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:44">peer</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:58"><decl pos:start="3:47" pos:end="3:58"><type pos:start="3:47" pos:end="3:58"><name pos:start="3:47" pos:end="3:51">Error</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier><modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:70">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">queues</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:34"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:32">NetdevVhostUserOptions</name> <modifier pos:start="9:34" pos:end="9:34">*</modifier></type><name pos:start="9:35" pos:end="9:49">vhost_user_opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">CharDriverState</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:24">chr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:61"><expr pos:start="15:5" pos:end="15:60"><call pos:start="15:5" pos:end="15:60"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:60">(<argument pos:start="15:12" pos:end="15:59"><expr pos:start="15:12" pos:end="15:59"><name pos:start="15:12" pos:end="15:21"><name pos:start="15:12" pos:end="15:15">opts</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:21">type</name></name> <operator pos:start="15:23" pos:end="15:24">==</operator> <name pos:start="15:26" pos:end="15:59">NET_CLIENT_OPTIONS_KIND_VHOST_USER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:19">vhost_user_opts</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:40"><name pos:start="17:23" pos:end="17:26">opts</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:29">u</name><operator pos:start="17:30" pos:end="17:30">.</operator><name pos:start="17:31" pos:end="17:40">vhost_user</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:57"><expr pos:start="21:5" pos:end="21:56"><name pos:start="21:5" pos:end="21:7">chr</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:56"><name pos:start="21:11" pos:end="21:33">net_vhost_parse_chardev</name><argument_list pos:start="21:34" pos:end="21:56">(<argument pos:start="21:35" pos:end="21:49"><expr pos:start="21:35" pos:end="21:49"><name pos:start="21:35" pos:end="21:49">vhost_user_opts</name></expr></argument>, <argument pos:start="21:52" pos:end="21:55"><expr pos:start="21:52" pos:end="21:55"><name pos:start="21:52" pos:end="21:55">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">chr</name></expr>)</condition> <block pos:start="23:15" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:18">

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:29">/* verify net frontend */</comment>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="35:46">(<expr pos:start="33:9" pos:end="35:45"><call pos:start="33:9" pos:end="35:45"><name pos:start="33:9" pos:end="33:25">qemu_opts_foreach</name><argument_list pos:start="33:26" pos:end="35:45">(<argument pos:start="33:27" pos:end="33:50"><expr pos:start="33:27" pos:end="33:50"><call pos:start="33:27" pos:end="33:50"><name pos:start="33:27" pos:end="33:40">qemu_find_opts</name><argument_list pos:start="33:41" pos:end="33:50">(<argument pos:start="33:42" pos:end="33:49"><expr pos:start="33:42" pos:end="33:49"><literal type="string" pos:start="33:42" pos:end="33:49">"device"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:53" pos:end="33:71"><expr pos:start="33:53" pos:end="33:71"><name pos:start="33:53" pos:end="33:71">net_vhost_check_net</name></expr></argument>,

                          <argument pos:start="35:27" pos:end="35:38"><expr pos:start="35:27" pos:end="35:38"><operator pos:start="35:27" pos:end="35:27">(</operator><name pos:start="35:28" pos:end="35:31">char</name> <operator pos:start="35:33" pos:end="35:33">*</operator><operator pos:start="35:34" pos:end="35:34">)</operator><name pos:start="35:35" pos:end="35:38">name</name></expr></argument>, <argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><name pos:start="35:41" pos:end="35:44">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:48" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:18">

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:71"><expr pos:start="43:5" pos:end="43:70"><name pos:start="43:5" pos:end="43:10">queues</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <ternary pos:start="43:14" pos:end="43:70"><condition pos:start="43:14" pos:end="43:42"><expr pos:start="43:14" pos:end="43:40"><name pos:start="43:14" pos:end="43:40"><name pos:start="43:14" pos:end="43:28">vhost_user_opts</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:40">has_queues</name></name></expr> ?</condition><then pos:start="43:44" pos:end="43:66"> <expr pos:start="43:44" pos:end="43:66"><name pos:start="43:44" pos:end="43:66"><name pos:start="43:44" pos:end="43:58">vhost_user_opts</name><operator pos:start="43:59" pos:end="43:60">-&gt;</operator><name pos:start="43:61" pos:end="43:66">queues</name></name></expr> </then><else pos:start="43:68" pos:end="43:70">: <expr pos:start="43:70" pos:end="43:70"><literal type="number" pos:start="43:70" pos:end="43:70">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:19">(<expr pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:14">queues</name> <operator pos:start="45:16" pos:end="45:16">&lt;</operator> <literal type="number" pos:start="45:18" pos:end="45:18">1</literal></expr>)</condition> <block pos:start="45:21" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:18">

        <expr_stmt pos:start="47:9" pos:end="49:75"><expr pos:start="47:9" pos:end="49:74"><call pos:start="47:9" pos:end="49:74"><name pos:start="47:9" pos:end="47:18">error_setg</name><argument_list pos:start="47:19" pos:end="49:74">(<argument pos:start="47:20" pos:end="47:23"><expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">errp</name></expr></argument>,

                   <argument pos:start="49:20" pos:end="49:73"><expr pos:start="49:20" pos:end="49:73"><literal type="string" pos:start="49:20" pos:end="49:73">"vhost-user number of queues must be bigger than zero"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="57:5" pos:end="57:70">return <expr pos:start="57:12" pos:end="57:69"><call pos:start="57:12" pos:end="57:69"><name pos:start="57:12" pos:end="57:30">net_vhost_user_init</name><argument_list pos:start="57:31" pos:end="57:69">(<argument pos:start="57:32" pos:end="57:35"><expr pos:start="57:32" pos:end="57:35"><name pos:start="57:32" pos:end="57:35">peer</name></expr></argument>, <argument pos:start="57:38" pos:end="57:49"><expr pos:start="57:38" pos:end="57:49"><literal type="string" pos:start="57:38" pos:end="57:49">"vhost_user"</literal></expr></argument>, <argument pos:start="57:52" pos:end="57:55"><expr pos:start="57:52" pos:end="57:55"><name pos:start="57:52" pos:end="57:55">name</name></expr></argument>, <argument pos:start="57:58" pos:end="57:60"><expr pos:start="57:58" pos:end="57:60"><name pos:start="57:58" pos:end="57:60">chr</name></expr></argument>, <argument pos:start="57:63" pos:end="57:68"><expr pos:start="57:63" pos:end="57:68"><name pos:start="57:63" pos:end="57:68">queues</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
