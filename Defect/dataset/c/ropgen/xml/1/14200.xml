<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14200.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">vpc_read</name><parameter_list pos:start="1:20" pos:end="3:49">(<parameter pos:start="1:21" pos:end="1:40"><decl pos:start="1:21" pos:end="1:40"><type pos:start="1:21" pos:end="1:40"><name pos:start="1:21" pos:end="1:36">BlockDriverState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">bs</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><name pos:start="1:43" pos:end="1:49">int64_t</name></type> <name pos:start="1:51" pos:end="1:60">sector_num</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:32"><decl pos:start="3:21" pos:end="3:32"><type pos:start="3:21" pos:end="3:32"><name pos:start="3:21" pos:end="3:27">uint8_t</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:32">buf</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:48">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BDRVVPCState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:24">bs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:18">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:19">sectors</name></decl>, <decl pos:start="13:22" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:22" pos:end="13:38">sectors_per_block</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:52"><decl pos:start="15:5" pos:end="15:51"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">VHDFooter</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:21">footer</name> <init pos:start="15:23" pos:end="15:51">= <expr pos:start="15:25" pos:end="15:51"><operator pos:start="15:25" pos:end="15:25">(</operator><name pos:start="15:26" pos:end="15:34">VHDFooter</name> <operator pos:start="15:36" pos:end="15:36">*</operator><operator pos:start="15:37" pos:end="15:37">)</operator> <name pos:start="15:39" pos:end="15:51"><name pos:start="15:39" pos:end="15:39">s</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:51">footer_buf</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:47">(<expr pos:start="19:9" pos:end="19:46"><call pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:19">cpu_to_be32</name><argument_list pos:start="19:20" pos:end="19:33">(<argument pos:start="19:21" pos:end="19:32"><expr pos:start="19:21" pos:end="19:32"><name pos:start="19:21" pos:end="19:32"><name pos:start="19:21" pos:end="19:26">footer</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:32">type</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:35" pos:end="19:36">==</operator> <name pos:start="19:38" pos:end="19:46">VHD_FIXED</name></expr>)</condition> <block pos:start="19:49" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:64">

        <return pos:start="21:9" pos:end="21:64">return <expr pos:start="21:16" pos:end="21:63"><call pos:start="21:16" pos:end="21:63"><name pos:start="21:16" pos:end="21:24">bdrv_read</name><argument_list pos:start="21:25" pos:end="21:63">(<argument pos:start="21:26" pos:end="21:33"><expr pos:start="21:26" pos:end="21:33"><name pos:start="21:26" pos:end="21:33"><name pos:start="21:26" pos:end="21:27">bs</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:33">file</name></name></expr></argument>, <argument pos:start="21:36" pos:end="21:45"><expr pos:start="21:36" pos:end="21:45"><name pos:start="21:36" pos:end="21:45">sector_num</name></expr></argument>, <argument pos:start="21:48" pos:end="21:50"><expr pos:start="21:48" pos:end="21:50"><name pos:start="21:48" pos:end="21:50">buf</name></expr></argument>, <argument pos:start="21:53" pos:end="21:62"><expr pos:start="21:53" pos:end="21:62"><name pos:start="21:53" pos:end="21:62">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <while pos:start="25:5" pos:end="69:5">while <condition pos:start="25:11" pos:end="25:26">(<expr pos:start="25:12" pos:end="25:25"><name pos:start="25:12" pos:end="25:21">nb_sectors</name> <operator pos:start="25:23" pos:end="25:23">&gt;</operator> <literal type="number" pos:start="25:25" pos:end="25:25">0</literal></expr>)</condition> <block pos:start="25:28" pos:end="69:5">{<block_content pos:start="27:9" pos:end="67:42">

        <expr_stmt pos:start="27:9" pos:end="27:54"><expr pos:start="27:9" pos:end="27:53"><name pos:start="27:9" pos:end="27:14">offset</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:53"><name pos:start="27:18" pos:end="27:34">get_sector_offset</name><argument_list pos:start="27:35" pos:end="27:53">(<argument pos:start="27:36" pos:end="27:37"><expr pos:start="27:36" pos:end="27:37"><name pos:start="27:36" pos:end="27:37">bs</name></expr></argument>, <argument pos:start="27:40" pos:end="27:49"><expr pos:start="27:40" pos:end="27:49"><name pos:start="27:40" pos:end="27:49">sector_num</name></expr></argument>, <argument pos:start="27:52" pos:end="27:52"><expr pos:start="27:52" pos:end="27:52"><literal type="number" pos:start="27:52" pos:end="27:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:62"><expr pos:start="31:9" pos:end="31:61"><name pos:start="31:9" pos:end="31:25">sectors_per_block</name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:41"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:41">block_size</name></name> <operator pos:start="31:43" pos:end="31:44">&gt;&gt;</operator> <name pos:start="31:46" pos:end="31:61">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:71"><expr pos:start="33:9" pos:end="33:70"><name pos:start="33:9" pos:end="33:15">sectors</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:35">sectors_per_block</name> <operator pos:start="33:37" pos:end="33:37">-</operator> <operator pos:start="33:39" pos:end="33:39">(</operator><name pos:start="33:40" pos:end="33:49">sector_num</name> <operator pos:start="33:51" pos:end="33:51">%</operator> <name pos:start="33:53" pos:end="33:69">sectors_per_block</name><operator pos:start="33:70" pos:end="33:70">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:33">(<expr pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:19">sectors</name> <operator pos:start="35:21" pos:end="35:21">&gt;</operator> <name pos:start="35:23" pos:end="35:32">nb_sectors</name></expr>)</condition> <block pos:start="35:35" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:33">

            <expr_stmt pos:start="37:13" pos:end="37:33"><expr pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:19">sectors</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:32">nb_sectors</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="43:9" pos:end="59:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:25">(<expr pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:18">offset</name> <operator pos:start="43:20" pos:end="43:21">==</operator> <operator pos:start="43:23" pos:end="43:23">-</operator><literal type="number" pos:start="43:24" pos:end="43:24">1</literal></expr>)</condition> <block pos:start="43:27" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:55">

            <expr_stmt pos:start="45:13" pos:end="45:55"><expr pos:start="45:13" pos:end="45:54"><call pos:start="45:13" pos:end="45:54"><name pos:start="45:13" pos:end="45:18">memset</name><argument_list pos:start="45:19" pos:end="45:54">(<argument pos:start="45:20" pos:end="45:22"><expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">buf</name></expr></argument>, <argument pos:start="45:25" pos:end="45:25"><expr pos:start="45:25" pos:end="45:25"><literal type="number" pos:start="45:25" pos:end="45:25">0</literal></expr></argument>, <argument pos:start="45:28" pos:end="45:53"><expr pos:start="45:28" pos:end="45:53"><name pos:start="45:28" pos:end="45:34">sectors</name> <operator pos:start="45:36" pos:end="45:36">*</operator> <name pos:start="45:38" pos:end="45:53">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="59:9">else <block pos:start="47:16" pos:end="59:9">{<block_content pos:start="49:13" pos:end="57:13">

            <expr_stmt pos:start="49:13" pos:end="51:44"><expr pos:start="49:13" pos:end="51:43"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="51:43"><name pos:start="49:19" pos:end="49:28">bdrv_pread</name><argument_list pos:start="49:29" pos:end="51:43">(<argument pos:start="49:30" pos:end="49:37"><expr pos:start="49:30" pos:end="49:37"><name pos:start="49:30" pos:end="49:37"><name pos:start="49:30" pos:end="49:31">bs</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:37">file</name></name></expr></argument>, <argument pos:start="49:40" pos:end="49:45"><expr pos:start="49:40" pos:end="49:45"><name pos:start="49:40" pos:end="49:45">offset</name></expr></argument>, <argument pos:start="49:48" pos:end="49:50"><expr pos:start="49:48" pos:end="49:50"><name pos:start="49:48" pos:end="49:50">buf</name></expr></argument>,

                <argument pos:start="51:17" pos:end="51:42"><expr pos:start="51:17" pos:end="51:42"><name pos:start="51:17" pos:end="51:23">sectors</name> <operator pos:start="51:25" pos:end="51:25">*</operator> <name pos:start="51:27" pos:end="51:42">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="57:13"><if pos:start="53:13" pos:end="57:13">if <condition pos:start="53:16" pos:end="53:50">(<expr pos:start="53:17" pos:end="53:49"><name pos:start="53:17" pos:end="53:19">ret</name> <operator pos:start="53:21" pos:end="53:22">!=</operator> <name pos:start="53:24" pos:end="53:30">sectors</name> <operator pos:start="53:32" pos:end="53:32">*</operator> <name pos:start="53:34" pos:end="53:49">BDRV_SECTOR_SIZE</name></expr>)</condition> <block pos:start="53:52" pos:end="57:13">{<block_content pos:start="55:17" pos:end="55:26">

                <return pos:start="55:17" pos:end="55:26">return <expr pos:start="55:24" pos:end="55:25"><operator pos:start="55:24" pos:end="55:24">-</operator><literal type="number" pos:start="55:25" pos:end="55:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:18">nb_sectors</name> <operator pos:start="63:20" pos:end="63:21">-=</operator> <name pos:start="63:23" pos:end="63:29">sectors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:18">sector_num</name> <operator pos:start="65:20" pos:end="65:21">+=</operator> <name pos:start="65:23" pos:end="65:29">sectors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:42"><expr pos:start="67:9" pos:end="67:41"><name pos:start="67:9" pos:end="67:11">buf</name> <operator pos:start="67:13" pos:end="67:14">+=</operator> <name pos:start="67:16" pos:end="67:22">sectors</name> <operator pos:start="67:24" pos:end="67:24">*</operator> <name pos:start="67:26" pos:end="67:41">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
