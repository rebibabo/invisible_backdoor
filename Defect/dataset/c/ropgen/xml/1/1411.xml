<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1411.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:24">coroutine_fn</name></type> <name pos:start="1:26" pos:end="1:39">v9fs_xattrwalk</name><parameter_list pos:start="1:40" pos:end="1:53">(<parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:46"><name pos:start="1:41" pos:end="1:44">void</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:52">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="209:1">{<block_content pos:start="5:5" pos:end="207:28">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:16">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">V9fsString</name></type> <name pos:start="7:16" pos:end="7:19">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">ssize_t</name></type> <name pos:start="9:13" pos:end="9:15">err</name> <init pos:start="9:17" pos:end="9:19">= <expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:17">offset</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int32_t</name></type> <name pos:start="13:13" pos:end="13:15">fid</name></decl>, <decl pos:start="13:18" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:18" pos:end="13:23">newfid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">V9fsFidState</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:27">file_fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">V9fsFidState</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:28">xattr_fidp</name> <init pos:start="17:30" pos:end="17:35">= <expr pos:start="17:32" pos:end="17:35"><name pos:start="17:32" pos:end="17:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">V9fsPDU</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:16">pdu</name> <init pos:start="19:18" pos:end="19:25">= <expr pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:13">V9fsState</name> <modifier pos:start="21:15" pos:end="21:15">*</modifier></type><name pos:start="21:16" pos:end="21:16">s</name> <init pos:start="21:18" pos:end="21:25">= <expr pos:start="21:20" pos:end="21:25"><name pos:start="21:20" pos:end="21:25"><name pos:start="21:20" pos:end="21:22">pdu</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:25">s</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><call pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:20">v9fs_string_init</name><argument_list pos:start="25:21" pos:end="25:27">(<argument pos:start="25:22" pos:end="25:26"><expr pos:start="25:22" pos:end="25:26"><operator pos:start="25:22" pos:end="25:22">&amp;</operator><name pos:start="25:23" pos:end="25:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:66"><expr pos:start="27:5" pos:end="27:65"><name pos:start="27:5" pos:end="27:7">err</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:65"><name pos:start="27:11" pos:end="27:23">pdu_unmarshal</name><argument_list pos:start="27:24" pos:end="27:65">(<argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">pdu</name></expr></argument>, <argument pos:start="27:30" pos:end="27:35"><expr pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:35">offset</name></expr></argument>, <argument pos:start="27:38" pos:end="27:42"><expr pos:start="27:38" pos:end="27:42"><literal type="string" pos:start="27:38" pos:end="27:42">"dds"</literal></expr></argument>, <argument pos:start="27:45" pos:end="27:48"><expr pos:start="27:45" pos:end="27:48"><operator pos:start="27:45" pos:end="27:45">&amp;</operator><name pos:start="27:46" pos:end="27:48">fid</name></expr></argument>, <argument pos:start="27:51" pos:end="27:57"><expr pos:start="27:51" pos:end="27:57"><operator pos:start="27:51" pos:end="27:51">&amp;</operator><name pos:start="27:52" pos:end="27:57">newfid</name></expr></argument>, <argument pos:start="27:60" pos:end="27:64"><expr pos:start="27:60" pos:end="27:64"><operator pos:start="27:60" pos:end="27:60">&amp;</operator><name pos:start="27:61" pos:end="27:64">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:16">(<expr pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:11">err</name> <operator pos:start="29:13" pos:end="29:13">&lt;</operator> <literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr>)</condition> <block pos:start="29:18" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:23">

        <goto pos:start="31:9" pos:end="31:23">goto <name pos:start="31:14" pos:end="31:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:68"><expr pos:start="35:5" pos:end="35:67"><call pos:start="35:5" pos:end="35:67"><name pos:start="35:5" pos:end="35:24">trace_v9fs_xattrwalk</name><argument_list pos:start="35:25" pos:end="35:67">(<argument pos:start="35:26" pos:end="35:33"><expr pos:start="35:26" pos:end="35:33"><name pos:start="35:26" pos:end="35:33"><name pos:start="35:26" pos:end="35:28">pdu</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:33">tag</name></name></expr></argument>, <argument pos:start="35:36" pos:end="35:42"><expr pos:start="35:36" pos:end="35:42"><name pos:start="35:36" pos:end="35:42"><name pos:start="35:36" pos:end="35:38">pdu</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:42">id</name></name></expr></argument>, <argument pos:start="35:45" pos:end="35:47"><expr pos:start="35:45" pos:end="35:47"><name pos:start="35:45" pos:end="35:47">fid</name></expr></argument>, <argument pos:start="35:50" pos:end="35:55"><expr pos:start="35:50" pos:end="35:55"><name pos:start="35:50" pos:end="35:55">newfid</name></expr></argument>, <argument pos:start="35:58" pos:end="35:66"><expr pos:start="35:58" pos:end="35:66"><name pos:start="35:58" pos:end="35:66"><name pos:start="35:58" pos:end="35:61">name</name><operator pos:start="35:62" pos:end="35:62">.</operator><name pos:start="35:63" pos:end="35:66">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:34"><expr pos:start="39:5" pos:end="39:33"><name pos:start="39:5" pos:end="39:13">file_fidp</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:23">get_fid</name><argument_list pos:start="39:24" pos:end="39:33">(<argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">pdu</name></expr></argument>, <argument pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:32">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:26">(<expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:17">file_fidp</name> <operator pos:start="41:19" pos:end="41:20">==</operator> <name pos:start="41:22" pos:end="41:25">NULL</name></expr>)</condition> <block pos:start="41:28" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:23">

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:11">err</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <operator pos:start="43:15" pos:end="43:15">-</operator><name pos:start="43:16" pos:end="43:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:23">goto <name pos:start="45:14" pos:end="45:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:14">xattr_fidp</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="49:37"><name pos:start="49:18" pos:end="49:26">alloc_fid</name><argument_list pos:start="49:27" pos:end="49:37">(<argument pos:start="49:28" pos:end="49:28"><expr pos:start="49:28" pos:end="49:28"><name pos:start="49:28" pos:end="49:28">s</name></expr></argument>, <argument pos:start="49:31" pos:end="49:36"><expr pos:start="49:31" pos:end="49:36"><name pos:start="49:31" pos:end="49:36">newfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:27">(<expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:18">xattr_fidp</name> <operator pos:start="51:20" pos:end="51:21">==</operator> <name pos:start="51:23" pos:end="51:26">NULL</name></expr>)</condition> <block pos:start="51:29" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:17">

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:11">err</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <operator pos:start="53:15" pos:end="53:15">-</operator><name pos:start="53:16" pos:end="53:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="55:9" pos:end="55:17">goto <name pos:start="55:14" pos:end="55:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:56"><expr pos:start="59:5" pos:end="59:55"><call pos:start="59:5" pos:end="59:55"><name pos:start="59:5" pos:end="59:18">v9fs_path_copy</name><argument_list pos:start="59:19" pos:end="59:55">(<argument pos:start="59:20" pos:end="59:36"><expr pos:start="59:20" pos:end="59:36"><operator pos:start="59:20" pos:end="59:20">&amp;</operator><name pos:start="59:21" pos:end="59:36"><name pos:start="59:21" pos:end="59:30">xattr_fidp</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:36">path</name></name></expr></argument>, <argument pos:start="59:39" pos:end="59:54"><expr pos:start="59:39" pos:end="59:54"><operator pos:start="59:39" pos:end="59:39">&amp;</operator><name pos:start="59:40" pos:end="59:54"><name pos:start="59:40" pos:end="59:48">file_fidp</name><operator pos:start="59:49" pos:end="59:50">-&gt;</operator><name pos:start="59:51" pos:end="59:54">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="189:5"><if pos:start="61:5" pos:end="123:5">if <condition pos:start="61:8" pos:end="61:33">(<expr pos:start="61:9" pos:end="61:32"><operator pos:start="61:9" pos:end="61:9">!</operator><call pos:start="61:10" pos:end="61:32"><name pos:start="61:10" pos:end="61:25">v9fs_string_size</name><argument_list pos:start="61:26" pos:end="61:32">(<argument pos:start="61:27" pos:end="61:31"><expr pos:start="61:27" pos:end="61:31"><operator pos:start="61:27" pos:end="61:27">&amp;</operator><name pos:start="61:28" pos:end="61:31">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:35" pos:end="123:5">{<block_content pos:start="69:9" pos:end="121:22">

        <comment type="block" pos:start="63:9" pos:end="67:11">/*

         * listxattr request. Get the size first

         */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:67"><expr pos:start="69:9" pos:end="69:66"><name pos:start="69:9" pos:end="69:12">size</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <call pos:start="69:16" pos:end="69:66"><name pos:start="69:16" pos:end="69:33">v9fs_co_llistxattr</name><argument_list pos:start="69:34" pos:end="69:66">(<argument pos:start="69:35" pos:end="69:37"><expr pos:start="69:35" pos:end="69:37"><name pos:start="69:35" pos:end="69:37">pdu</name></expr></argument>, <argument pos:start="69:40" pos:end="69:56"><expr pos:start="69:40" pos:end="69:56"><operator pos:start="69:40" pos:end="69:40">&amp;</operator><name pos:start="69:41" pos:end="69:56"><name pos:start="69:41" pos:end="69:50">xattr_fidp</name><operator pos:start="69:51" pos:end="69:52">-&gt;</operator><name pos:start="69:53" pos:end="69:56">path</name></name></expr></argument>, <argument pos:start="69:59" pos:end="69:62"><expr pos:start="69:59" pos:end="69:62"><name pos:start="69:59" pos:end="69:62">NULL</name></expr></argument>, <argument pos:start="69:65" pos:end="69:65"><expr pos:start="69:65" pos:end="69:65"><literal type="number" pos:start="69:65" pos:end="69:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="79:9"><if pos:start="71:9" pos:end="79:9">if <condition pos:start="71:12" pos:end="71:21">(<expr pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:16">size</name> <operator pos:start="71:18" pos:end="71:18">&lt;</operator> <literal type="number" pos:start="71:20" pos:end="71:20">0</literal></expr>)</condition> <block pos:start="71:23" pos:end="79:9">{<block_content pos:start="73:13" pos:end="77:21">

            <expr_stmt pos:start="73:13" pos:end="73:23"><expr pos:start="73:13" pos:end="73:22"><name pos:start="73:13" pos:end="73:15">err</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:22">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:42"><expr pos:start="75:13" pos:end="75:41"><call pos:start="75:13" pos:end="75:41"><name pos:start="75:13" pos:end="75:21">clunk_fid</name><argument_list pos:start="75:22" pos:end="75:41">(<argument pos:start="75:23" pos:end="75:23"><expr pos:start="75:23" pos:end="75:23"><name pos:start="75:23" pos:end="75:23">s</name></expr></argument>, <argument pos:start="75:26" pos:end="75:40"><expr pos:start="75:26" pos:end="75:40"><name pos:start="75:26" pos:end="75:40"><name pos:start="75:26" pos:end="75:35">xattr_fidp</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:40">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="77:13" pos:end="77:21">goto <name pos:start="77:18" pos:end="77:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="81:9" pos:end="85:11">/*

         * Read the xattr value

         */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:40"><expr pos:start="87:9" pos:end="87:39"><name pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:18">xattr_fidp</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:22">fs</name><operator pos:start="87:23" pos:end="87:23">.</operator><name pos:start="87:24" pos:end="87:28">xattr</name><operator pos:start="87:29" pos:end="87:29">.</operator><name pos:start="87:30" pos:end="87:32">len</name></name> <operator pos:start="87:34" pos:end="87:34">=</operator> <name pos:start="87:36" pos:end="87:39">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:44"><expr pos:start="89:9" pos:end="89:43"><name pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:18">xattr_fidp</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:28">fid_type</name></name> <operator pos:start="89:30" pos:end="89:30">=</operator> <name pos:start="89:32" pos:end="89:43">P9_FID_XATTR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:50"><expr pos:start="91:9" pos:end="91:49"><name pos:start="91:9" pos:end="91:42"><name pos:start="91:9" pos:end="91:18">xattr_fidp</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:22">fs</name><operator pos:start="91:23" pos:end="91:23">.</operator><name pos:start="91:24" pos:end="91:28">xattr</name><operator pos:start="91:29" pos:end="91:29">.</operator><name pos:start="91:30" pos:end="91:42">xattrwalk_fid</name></name> <operator pos:start="91:44" pos:end="91:44">=</operator> <name pos:start="91:46" pos:end="91:49">true</name></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="111:9"><if pos:start="93:9" pos:end="111:9">if <condition pos:start="93:12" pos:end="93:17">(<expr pos:start="93:13" pos:end="93:16"><name pos:start="93:13" pos:end="93:16">size</name></expr>)</condition> <block pos:start="93:19" pos:end="111:9">{<block_content pos:start="95:13" pos:end="109:13">

            <expr_stmt pos:start="95:13" pos:end="95:56"><expr pos:start="95:13" pos:end="95:55"><name pos:start="95:13" pos:end="95:38"><name pos:start="95:13" pos:end="95:22">xattr_fidp</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:26">fs</name><operator pos:start="95:27" pos:end="95:27">.</operator><name pos:start="95:28" pos:end="95:32">xattr</name><operator pos:start="95:33" pos:end="95:33">.</operator><name pos:start="95:34" pos:end="95:38">value</name></name> <operator pos:start="95:40" pos:end="95:40">=</operator> <call pos:start="95:42" pos:end="95:55"><name pos:start="95:42" pos:end="95:49">g_malloc</name><argument_list pos:start="95:50" pos:end="95:55">(<argument pos:start="95:51" pos:end="95:54"><expr pos:start="95:51" pos:end="95:54"><name pos:start="95:51" pos:end="95:54">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="101:63"><expr pos:start="97:13" pos:end="101:62"><name pos:start="97:13" pos:end="97:15">err</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <call pos:start="97:19" pos:end="101:62"><name pos:start="97:19" pos:end="97:36">v9fs_co_llistxattr</name><argument_list pos:start="97:37" pos:end="101:62">(<argument pos:start="97:38" pos:end="97:40"><expr pos:start="97:38" pos:end="97:40"><name pos:start="97:38" pos:end="97:40">pdu</name></expr></argument>, <argument pos:start="97:43" pos:end="97:59"><expr pos:start="97:43" pos:end="97:59"><operator pos:start="97:43" pos:end="97:43">&amp;</operator><name pos:start="97:44" pos:end="97:59"><name pos:start="97:44" pos:end="97:53">xattr_fidp</name><operator pos:start="97:54" pos:end="97:55">-&gt;</operator><name pos:start="97:56" pos:end="97:59">path</name></name></expr></argument>,

                                     <argument pos:start="99:38" pos:end="99:63"><expr pos:start="99:38" pos:end="99:63"><name pos:start="99:38" pos:end="99:63"><name pos:start="99:38" pos:end="99:47">xattr_fidp</name><operator pos:start="99:48" pos:end="99:49">-&gt;</operator><name pos:start="99:50" pos:end="99:51">fs</name><operator pos:start="99:52" pos:end="99:52">.</operator><name pos:start="99:53" pos:end="99:57">xattr</name><operator pos:start="99:58" pos:end="99:58">.</operator><name pos:start="99:59" pos:end="99:63">value</name></name></expr></argument>,

                                     <argument pos:start="101:38" pos:end="101:61"><expr pos:start="101:38" pos:end="101:61"><name pos:start="101:38" pos:end="101:61"><name pos:start="101:38" pos:end="101:47">xattr_fidp</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:51">fs</name><operator pos:start="101:52" pos:end="101:52">.</operator><name pos:start="101:53" pos:end="101:57">xattr</name><operator pos:start="101:58" pos:end="101:58">.</operator><name pos:start="101:59" pos:end="101:61">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="109:13"><if pos:start="103:13" pos:end="109:13">if <condition pos:start="103:16" pos:end="103:24">(<expr pos:start="103:17" pos:end="103:23"><name pos:start="103:17" pos:end="103:19">err</name> <operator pos:start="103:21" pos:end="103:21">&lt;</operator> <literal type="number" pos:start="103:23" pos:end="103:23">0</literal></expr>)</condition> <block pos:start="103:26" pos:end="109:13">{<block_content pos:start="105:17" pos:end="107:25">

                <expr_stmt pos:start="105:17" pos:end="105:46"><expr pos:start="105:17" pos:end="105:45"><call pos:start="105:17" pos:end="105:45"><name pos:start="105:17" pos:end="105:25">clunk_fid</name><argument_list pos:start="105:26" pos:end="105:45">(<argument pos:start="105:27" pos:end="105:27"><expr pos:start="105:27" pos:end="105:27"><name pos:start="105:27" pos:end="105:27">s</name></expr></argument>, <argument pos:start="105:30" pos:end="105:44"><expr pos:start="105:30" pos:end="105:44"><name pos:start="105:30" pos:end="105:44"><name pos:start="105:30" pos:end="105:39">xattr_fidp</name><operator pos:start="105:40" pos:end="105:41">-&gt;</operator><name pos:start="105:42" pos:end="105:44">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="107:17" pos:end="107:25">goto <name pos:start="107:22" pos:end="107:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:50"><expr pos:start="113:9" pos:end="113:49"><name pos:start="113:9" pos:end="113:11">err</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="113:49"><name pos:start="113:15" pos:end="113:25">pdu_marshal</name><argument_list pos:start="113:26" pos:end="113:49">(<argument pos:start="113:27" pos:end="113:29"><expr pos:start="113:27" pos:end="113:29"><name pos:start="113:27" pos:end="113:29">pdu</name></expr></argument>, <argument pos:start="113:32" pos:end="113:37"><expr pos:start="113:32" pos:end="113:37"><name pos:start="113:32" pos:end="113:37">offset</name></expr></argument>, <argument pos:start="113:40" pos:end="113:42"><expr pos:start="113:40" pos:end="113:42"><literal type="string" pos:start="113:40" pos:end="113:42">"q"</literal></expr></argument>, <argument pos:start="113:45" pos:end="113:48"><expr pos:start="113:45" pos:end="113:48"><name pos:start="113:45" pos:end="113:48">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="119:9"><if pos:start="115:9" pos:end="119:9">if <condition pos:start="115:12" pos:end="115:20">(<expr pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:15">err</name> <operator pos:start="115:17" pos:end="115:17">&lt;</operator> <literal type="number" pos:start="115:19" pos:end="115:19">0</literal></expr>)</condition> <block pos:start="115:22" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:21">

            <goto pos:start="117:13" pos:end="117:21">goto <name pos:start="117:18" pos:end="117:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:22"><expr pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:11">err</name> <operator pos:start="121:13" pos:end="121:14">+=</operator> <name pos:start="121:16" pos:end="121:21">offset</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="123:7" pos:end="189:5">else <block pos:start="123:12" pos:end="189:5">{<block_content pos:start="133:9" pos:end="187:22">

        <comment type="block" pos:start="125:9" pos:end="131:11">/*

         * specific xattr fid. We check for xattr

         * presence also collect the xattr size

         */</comment>

        <expr_stmt pos:start="133:9" pos:end="135:49"><expr pos:start="133:9" pos:end="135:48"><name pos:start="133:9" pos:end="133:12">size</name> <operator pos:start="133:14" pos:end="133:14">=</operator> <call pos:start="133:16" pos:end="135:48"><name pos:start="133:16" pos:end="133:32">v9fs_co_lgetxattr</name><argument_list pos:start="133:33" pos:end="135:48">(<argument pos:start="133:34" pos:end="133:36"><expr pos:start="133:34" pos:end="133:36"><name pos:start="133:34" pos:end="133:36">pdu</name></expr></argument>, <argument pos:start="133:39" pos:end="133:55"><expr pos:start="133:39" pos:end="133:55"><operator pos:start="133:39" pos:end="133:39">&amp;</operator><name pos:start="133:40" pos:end="133:55"><name pos:start="133:40" pos:end="133:49">xattr_fidp</name><operator pos:start="133:50" pos:end="133:51">-&gt;</operator><name pos:start="133:52" pos:end="133:55">path</name></name></expr></argument>,

                                 <argument pos:start="135:34" pos:end="135:38"><expr pos:start="135:34" pos:end="135:38"><operator pos:start="135:34" pos:end="135:34">&amp;</operator><name pos:start="135:35" pos:end="135:38">name</name></expr></argument>, <argument pos:start="135:41" pos:end="135:44"><expr pos:start="135:41" pos:end="135:44"><name pos:start="135:41" pos:end="135:44">NULL</name></expr></argument>, <argument pos:start="135:47" pos:end="135:47"><expr pos:start="135:47" pos:end="135:47"><literal type="number" pos:start="135:47" pos:end="135:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="145:9"><if pos:start="137:9" pos:end="145:9">if <condition pos:start="137:12" pos:end="137:21">(<expr pos:start="137:13" pos:end="137:20"><name pos:start="137:13" pos:end="137:16">size</name> <operator pos:start="137:18" pos:end="137:18">&lt;</operator> <literal type="number" pos:start="137:20" pos:end="137:20">0</literal></expr>)</condition> <block pos:start="137:23" pos:end="145:9">{<block_content pos:start="139:13" pos:end="143:21">

            <expr_stmt pos:start="139:13" pos:end="139:23"><expr pos:start="139:13" pos:end="139:22"><name pos:start="139:13" pos:end="139:15">err</name> <operator pos:start="139:17" pos:end="139:17">=</operator> <name pos:start="139:19" pos:end="139:22">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:42"><expr pos:start="141:13" pos:end="141:41"><call pos:start="141:13" pos:end="141:41"><name pos:start="141:13" pos:end="141:21">clunk_fid</name><argument_list pos:start="141:22" pos:end="141:41">(<argument pos:start="141:23" pos:end="141:23"><expr pos:start="141:23" pos:end="141:23"><name pos:start="141:23" pos:end="141:23">s</name></expr></argument>, <argument pos:start="141:26" pos:end="141:40"><expr pos:start="141:26" pos:end="141:40"><name pos:start="141:26" pos:end="141:40"><name pos:start="141:26" pos:end="141:35">xattr_fidp</name><operator pos:start="141:36" pos:end="141:37">-&gt;</operator><name pos:start="141:38" pos:end="141:40">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="143:13" pos:end="143:21">goto <name pos:start="143:18" pos:end="143:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="147:9" pos:end="151:11">/*

         * Read the xattr value

         */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:40"><expr pos:start="153:9" pos:end="153:39"><name pos:start="153:9" pos:end="153:32"><name pos:start="153:9" pos:end="153:18">xattr_fidp</name><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:22">fs</name><operator pos:start="153:23" pos:end="153:23">.</operator><name pos:start="153:24" pos:end="153:28">xattr</name><operator pos:start="153:29" pos:end="153:29">.</operator><name pos:start="153:30" pos:end="153:32">len</name></name> <operator pos:start="153:34" pos:end="153:34">=</operator> <name pos:start="153:36" pos:end="153:39">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:44"><expr pos:start="155:9" pos:end="155:43"><name pos:start="155:9" pos:end="155:28"><name pos:start="155:9" pos:end="155:18">xattr_fidp</name><operator pos:start="155:19" pos:end="155:20">-&gt;</operator><name pos:start="155:21" pos:end="155:28">fid_type</name></name> <operator pos:start="155:30" pos:end="155:30">=</operator> <name pos:start="155:32" pos:end="155:43">P9_FID_XATTR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:50"><expr pos:start="157:9" pos:end="157:49"><name pos:start="157:9" pos:end="157:42"><name pos:start="157:9" pos:end="157:18">xattr_fidp</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:22">fs</name><operator pos:start="157:23" pos:end="157:23">.</operator><name pos:start="157:24" pos:end="157:28">xattr</name><operator pos:start="157:29" pos:end="157:29">.</operator><name pos:start="157:30" pos:end="157:42">xattrwalk_fid</name></name> <operator pos:start="157:44" pos:end="157:44">=</operator> <name pos:start="157:46" pos:end="157:49">true</name></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="177:9"><if pos:start="159:9" pos:end="177:9">if <condition pos:start="159:12" pos:end="159:17">(<expr pos:start="159:13" pos:end="159:16"><name pos:start="159:13" pos:end="159:16">size</name></expr>)</condition> <block pos:start="159:19" pos:end="177:9">{<block_content pos:start="161:13" pos:end="175:13">

            <expr_stmt pos:start="161:13" pos:end="161:56"><expr pos:start="161:13" pos:end="161:55"><name pos:start="161:13" pos:end="161:38"><name pos:start="161:13" pos:end="161:22">xattr_fidp</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:26">fs</name><operator pos:start="161:27" pos:end="161:27">.</operator><name pos:start="161:28" pos:end="161:32">xattr</name><operator pos:start="161:33" pos:end="161:33">.</operator><name pos:start="161:34" pos:end="161:38">value</name></name> <operator pos:start="161:40" pos:end="161:40">=</operator> <call pos:start="161:42" pos:end="161:55"><name pos:start="161:42" pos:end="161:49">g_malloc</name><argument_list pos:start="161:50" pos:end="161:55">(<argument pos:start="161:51" pos:end="161:54"><expr pos:start="161:51" pos:end="161:54"><name pos:start="161:51" pos:end="161:54">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="167:62"><expr pos:start="163:13" pos:end="167:61"><name pos:start="163:13" pos:end="163:15">err</name> <operator pos:start="163:17" pos:end="163:17">=</operator> <call pos:start="163:19" pos:end="167:61"><name pos:start="163:19" pos:end="163:35">v9fs_co_lgetxattr</name><argument_list pos:start="163:36" pos:end="167:61">(<argument pos:start="163:37" pos:end="163:39"><expr pos:start="163:37" pos:end="163:39"><name pos:start="163:37" pos:end="163:39">pdu</name></expr></argument>, <argument pos:start="163:42" pos:end="163:58"><expr pos:start="163:42" pos:end="163:58"><operator pos:start="163:42" pos:end="163:42">&amp;</operator><name pos:start="163:43" pos:end="163:58"><name pos:start="163:43" pos:end="163:52">xattr_fidp</name><operator pos:start="163:53" pos:end="163:54">-&gt;</operator><name pos:start="163:55" pos:end="163:58">path</name></name></expr></argument>,

                                    <argument pos:start="165:37" pos:end="165:41"><expr pos:start="165:37" pos:end="165:41"><operator pos:start="165:37" pos:end="165:37">&amp;</operator><name pos:start="165:38" pos:end="165:41">name</name></expr></argument>, <argument pos:start="165:44" pos:end="165:69"><expr pos:start="165:44" pos:end="165:69"><name pos:start="165:44" pos:end="165:69"><name pos:start="165:44" pos:end="165:53">xattr_fidp</name><operator pos:start="165:54" pos:end="165:55">-&gt;</operator><name pos:start="165:56" pos:end="165:57">fs</name><operator pos:start="165:58" pos:end="165:58">.</operator><name pos:start="165:59" pos:end="165:63">xattr</name><operator pos:start="165:64" pos:end="165:64">.</operator><name pos:start="165:65" pos:end="165:69">value</name></name></expr></argument>,

                                    <argument pos:start="167:37" pos:end="167:60"><expr pos:start="167:37" pos:end="167:60"><name pos:start="167:37" pos:end="167:60"><name pos:start="167:37" pos:end="167:46">xattr_fidp</name><operator pos:start="167:47" pos:end="167:48">-&gt;</operator><name pos:start="167:49" pos:end="167:50">fs</name><operator pos:start="167:51" pos:end="167:51">.</operator><name pos:start="167:52" pos:end="167:56">xattr</name><operator pos:start="167:57" pos:end="167:57">.</operator><name pos:start="167:58" pos:end="167:60">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="169:13" pos:end="175:13"><if pos:start="169:13" pos:end="175:13">if <condition pos:start="169:16" pos:end="169:24">(<expr pos:start="169:17" pos:end="169:23"><name pos:start="169:17" pos:end="169:19">err</name> <operator pos:start="169:21" pos:end="169:21">&lt;</operator> <literal type="number" pos:start="169:23" pos:end="169:23">0</literal></expr>)</condition> <block pos:start="169:26" pos:end="175:13">{<block_content pos:start="171:17" pos:end="173:25">

                <expr_stmt pos:start="171:17" pos:end="171:46"><expr pos:start="171:17" pos:end="171:45"><call pos:start="171:17" pos:end="171:45"><name pos:start="171:17" pos:end="171:25">clunk_fid</name><argument_list pos:start="171:26" pos:end="171:45">(<argument pos:start="171:27" pos:end="171:27"><expr pos:start="171:27" pos:end="171:27"><name pos:start="171:27" pos:end="171:27">s</name></expr></argument>, <argument pos:start="171:30" pos:end="171:44"><expr pos:start="171:30" pos:end="171:44"><name pos:start="171:30" pos:end="171:44"><name pos:start="171:30" pos:end="171:39">xattr_fidp</name><operator pos:start="171:40" pos:end="171:41">-&gt;</operator><name pos:start="171:42" pos:end="171:44">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="173:17" pos:end="173:25">goto <name pos:start="173:22" pos:end="173:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:50"><expr pos:start="179:9" pos:end="179:49"><name pos:start="179:9" pos:end="179:11">err</name> <operator pos:start="179:13" pos:end="179:13">=</operator> <call pos:start="179:15" pos:end="179:49"><name pos:start="179:15" pos:end="179:25">pdu_marshal</name><argument_list pos:start="179:26" pos:end="179:49">(<argument pos:start="179:27" pos:end="179:29"><expr pos:start="179:27" pos:end="179:29"><name pos:start="179:27" pos:end="179:29">pdu</name></expr></argument>, <argument pos:start="179:32" pos:end="179:37"><expr pos:start="179:32" pos:end="179:37"><name pos:start="179:32" pos:end="179:37">offset</name></expr></argument>, <argument pos:start="179:40" pos:end="179:42"><expr pos:start="179:40" pos:end="179:42"><literal type="string" pos:start="179:40" pos:end="179:42">"q"</literal></expr></argument>, <argument pos:start="179:45" pos:end="179:48"><expr pos:start="179:45" pos:end="179:48"><name pos:start="179:45" pos:end="179:48">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="181:9" pos:end="185:9"><if pos:start="181:9" pos:end="185:9">if <condition pos:start="181:12" pos:end="181:20">(<expr pos:start="181:13" pos:end="181:19"><name pos:start="181:13" pos:end="181:15">err</name> <operator pos:start="181:17" pos:end="181:17">&lt;</operator> <literal type="number" pos:start="181:19" pos:end="181:19">0</literal></expr>)</condition> <block pos:start="181:22" pos:end="185:9">{<block_content pos:start="183:13" pos:end="183:21">

            <goto pos:start="183:13" pos:end="183:21">goto <name pos:start="183:18" pos:end="183:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:22"><expr pos:start="187:9" pos:end="187:21"><name pos:start="187:9" pos:end="187:11">err</name> <operator pos:start="187:13" pos:end="187:14">+=</operator> <name pos:start="187:16" pos:end="187:21">offset</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:57"><expr pos:start="191:5" pos:end="191:56"><call pos:start="191:5" pos:end="191:56"><name pos:start="191:5" pos:end="191:31">trace_v9fs_xattrwalk_return</name><argument_list pos:start="191:32" pos:end="191:56">(<argument pos:start="191:33" pos:end="191:40"><expr pos:start="191:33" pos:end="191:40"><name pos:start="191:33" pos:end="191:40"><name pos:start="191:33" pos:end="191:35">pdu</name><operator pos:start="191:36" pos:end="191:37">-&gt;</operator><name pos:start="191:38" pos:end="191:40">tag</name></name></expr></argument>, <argument pos:start="191:43" pos:end="191:49"><expr pos:start="191:43" pos:end="191:49"><name pos:start="191:43" pos:end="191:49"><name pos:start="191:43" pos:end="191:45">pdu</name><operator pos:start="191:46" pos:end="191:47">-&gt;</operator><name pos:start="191:48" pos:end="191:49">id</name></name></expr></argument>, <argument pos:start="191:52" pos:end="191:55"><expr pos:start="191:52" pos:end="191:55"><name pos:start="191:52" pos:end="191:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="193:1" pos:end="193:4"><name pos:start="193:1" pos:end="193:3">out</name>:</label>

    <expr_stmt pos:start="195:5" pos:end="195:28"><expr pos:start="195:5" pos:end="195:27"><call pos:start="195:5" pos:end="195:27"><name pos:start="195:5" pos:end="195:11">put_fid</name><argument_list pos:start="195:12" pos:end="195:27">(<argument pos:start="195:13" pos:end="195:15"><expr pos:start="195:13" pos:end="195:15"><name pos:start="195:13" pos:end="195:15">pdu</name></expr></argument>, <argument pos:start="195:18" pos:end="195:26"><expr pos:start="195:18" pos:end="195:26"><name pos:start="195:18" pos:end="195:26">file_fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="197:5" pos:end="201:5"><if pos:start="197:5" pos:end="201:5">if <condition pos:start="197:8" pos:end="197:19">(<expr pos:start="197:9" pos:end="197:18"><name pos:start="197:9" pos:end="197:18">xattr_fidp</name></expr>)</condition> <block pos:start="197:21" pos:end="201:5">{<block_content pos:start="199:9" pos:end="199:33">

        <expr_stmt pos:start="199:9" pos:end="199:33"><expr pos:start="199:9" pos:end="199:32"><call pos:start="199:9" pos:end="199:32"><name pos:start="199:9" pos:end="199:15">put_fid</name><argument_list pos:start="199:16" pos:end="199:32">(<argument pos:start="199:17" pos:end="199:19"><expr pos:start="199:17" pos:end="199:19"><name pos:start="199:17" pos:end="199:19">pdu</name></expr></argument>, <argument pos:start="199:22" pos:end="199:31"><expr pos:start="199:22" pos:end="199:31"><name pos:start="199:22" pos:end="199:31">xattr_fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="203:1" pos:end="203:10"><name pos:start="203:1" pos:end="203:9">out_nofid</name>:</label>

    <expr_stmt pos:start="205:5" pos:end="205:27"><expr pos:start="205:5" pos:end="205:26"><call pos:start="205:5" pos:end="205:26"><name pos:start="205:5" pos:end="205:16">pdu_complete</name><argument_list pos:start="205:17" pos:end="205:26">(<argument pos:start="205:18" pos:end="205:20"><expr pos:start="205:18" pos:end="205:20"><name pos:start="205:18" pos:end="205:20">pdu</name></expr></argument>, <argument pos:start="205:23" pos:end="205:25"><expr pos:start="205:23" pos:end="205:25"><name pos:start="205:23" pos:end="205:25">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:28"><expr pos:start="207:5" pos:end="207:27"><call pos:start="207:5" pos:end="207:27"><name pos:start="207:5" pos:end="207:20">v9fs_string_free</name><argument_list pos:start="207:21" pos:end="207:27">(<argument pos:start="207:22" pos:end="207:26"><expr pos:start="207:22" pos:end="207:26"><operator pos:start="207:22" pos:end="207:22">&amp;</operator><name pos:start="207:23" pos:end="207:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
