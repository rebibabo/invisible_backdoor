<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17216.c" pos:tabs="8"><function pos:start="1:1" pos:end="259:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">ogg_read_page</name><parameter_list pos:start="1:25" pos:end="1:54">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:53"><decl pos:start="1:46" pos:end="1:53"><type pos:start="1:46" pos:end="1:53"><name pos:start="1:46" pos:end="1:48">int</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">sid</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="259:1">{<block_content pos:start="5:5" pos:end="257:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">bc</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:14">ogg</name></name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">ogg</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:21">ogg_stream</name></name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:25">os</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:14">i</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">flags</name></decl>, <decl pos:start="13:16" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:20">nsegs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:15">gp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:19">serial</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:12"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">size</name></decl>, <decl pos:start="19:15" pos:end="19:17"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:17">idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">uint8_t</name></type> <name pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:16">sync</name><index pos:start="21:17" pos:end="21:19">[<expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:15"><decl pos:start="23:5" pos:end="23:14"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:10">sp</name> <init pos:start="23:12" pos:end="23:14">= <expr pos:start="23:14" pos:end="23:14"><literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:32"><name pos:start="27:11" pos:end="27:19">avio_read</name><argument_list pos:start="27:20" pos:end="27:32">(<argument pos:start="27:21" pos:end="27:22"><expr pos:start="27:21" pos:end="27:22"><name pos:start="27:21" pos:end="27:22">bc</name></expr></argument>, <argument pos:start="27:25" pos:end="27:28"><expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">sync</name></expr></argument>, <argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:43"><if pos:start="29:5" pos:end="31:43">if <condition pos:start="29:8" pos:end="29:16">(<expr pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">&lt;</operator> <literal type="number" pos:start="29:15" pos:end="29:15">4</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:43"><block_content pos:start="31:9" pos:end="31:43">

        <return pos:start="31:9" pos:end="31:43">return <expr pos:start="31:16" pos:end="31:42"><ternary pos:start="31:16" pos:end="31:42"><condition pos:start="31:16" pos:end="31:24"><expr pos:start="31:16" pos:end="31:22"><name pos:start="31:16" pos:end="31:18">ret</name> <operator pos:start="31:20" pos:end="31:20">&lt;</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr> ?</condition><then pos:start="31:26" pos:end="31:28"> <expr pos:start="31:26" pos:end="31:28"><name pos:start="31:26" pos:end="31:28">ret</name></expr> </then><else pos:start="31:30" pos:end="31:42">: <expr pos:start="31:32" pos:end="31:42"><name pos:start="31:32" pos:end="31:42">AVERROR_EOF</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>



    <do pos:start="35:5" pos:end="75:34">do <block pos:start="35:8" pos:end="75:5">{<block_content pos:start="37:9" pos:end="73:27">

        <decl_stmt pos:start="37:9" pos:end="37:14"><decl pos:start="37:9" pos:end="37:13"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:13">c</name></decl>;</decl_stmt>



        <if_stmt pos:start="41:9" pos:end="47:18"><if pos:start="41:9" pos:end="47:18">if <condition pos:start="41:12" pos:end="45:67">(<expr pos:start="41:13" pos:end="45:66"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:16">sync</name><index pos:start="41:17" pos:end="41:24">[<expr pos:start="41:18" pos:end="41:23"><name pos:start="41:18" pos:end="41:19">sp</name> <operator pos:start="41:21" pos:end="41:21">&amp;</operator> <literal type="number" pos:start="41:23" pos:end="41:23">3</literal></expr>]</index></name> <operator pos:start="41:26" pos:end="41:27">==</operator> <literal type="char" pos:start="41:29" pos:end="41:31">'O'</literal> <operator pos:start="41:33" pos:end="41:34">&amp;&amp;</operator>

            <name pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:16">sync</name><index pos:start="43:17" pos:end="43:30">[<expr pos:start="43:18" pos:end="43:29"><operator pos:start="43:18" pos:end="43:18">(</operator><name pos:start="43:19" pos:end="43:20">sp</name> <operator pos:start="43:22" pos:end="43:22">+</operator> <literal type="number" pos:start="43:24" pos:end="43:24">1</literal><operator pos:start="43:25" pos:end="43:25">)</operator> <operator pos:start="43:27" pos:end="43:27">&amp;</operator> <literal type="number" pos:start="43:29" pos:end="43:29">3</literal></expr>]</index></name> <operator pos:start="43:32" pos:end="43:33">==</operator> <literal type="char" pos:start="43:35" pos:end="43:37">'g'</literal> <operator pos:start="43:39" pos:end="43:40">&amp;&amp;</operator>

            <name pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:16">sync</name><index pos:start="45:17" pos:end="45:30">[<expr pos:start="45:18" pos:end="45:29"><operator pos:start="45:18" pos:end="45:18">(</operator><name pos:start="45:19" pos:end="45:20">sp</name> <operator pos:start="45:22" pos:end="45:22">+</operator> <literal type="number" pos:start="45:24" pos:end="45:24">2</literal><operator pos:start="45:25" pos:end="45:25">)</operator> <operator pos:start="45:27" pos:end="45:27">&amp;</operator> <literal type="number" pos:start="45:29" pos:end="45:29">3</literal></expr>]</index></name> <operator pos:start="45:32" pos:end="45:33">==</operator> <literal type="char" pos:start="45:35" pos:end="45:37">'g'</literal> <operator pos:start="45:39" pos:end="45:40">&amp;&amp;</operator> <name pos:start="45:42" pos:end="45:59"><name pos:start="45:42" pos:end="45:45">sync</name><index pos:start="45:46" pos:end="45:59">[<expr pos:start="45:47" pos:end="45:58"><operator pos:start="45:47" pos:end="45:47">(</operator><name pos:start="45:48" pos:end="45:49">sp</name> <operator pos:start="45:51" pos:end="45:51">+</operator> <literal type="number" pos:start="45:53" pos:end="45:53">3</literal><operator pos:start="45:54" pos:end="45:54">)</operator> <operator pos:start="45:56" pos:end="45:56">&amp;</operator> <literal type="number" pos:start="45:58" pos:end="45:58">3</literal></expr>]</index></name> <operator pos:start="45:61" pos:end="45:62">==</operator> <literal type="char" pos:start="45:64" pos:end="45:66">'S'</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:18"><block_content pos:start="47:13" pos:end="47:18">

            <break pos:start="47:13" pos:end="47:18">break;</break></block_content></block></if></if_stmt>



        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="59:9">if<condition pos:start="51:11" pos:end="51:51">(<expr pos:start="51:12" pos:end="51:50"><operator pos:start="51:12" pos:end="51:12">!</operator><name pos:start="51:13" pos:end="51:13">i</name> <operator pos:start="51:15" pos:end="51:16">&amp;&amp;</operator> <name pos:start="51:18" pos:end="51:29"><name pos:start="51:18" pos:end="51:19">bc</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:29">seekable</name></name> <operator pos:start="51:31" pos:end="51:32">&amp;&amp;</operator> <name pos:start="51:34" pos:end="51:46"><name pos:start="51:34" pos:end="51:36">ogg</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:46">page_pos</name></name> <operator pos:start="51:48" pos:end="51:48">&gt;</operator> <literal type="number" pos:start="51:50" pos:end="51:50">0</literal></expr>)</condition> <block pos:start="51:53" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:31">

            <expr_stmt pos:start="53:13" pos:end="53:31"><expr pos:start="53:13" pos:end="53:30"><call pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:18">memset</name><argument_list pos:start="53:19" pos:end="53:30">(<argument pos:start="53:20" pos:end="53:23"><expr pos:start="53:20" pos:end="53:23"><name pos:start="53:20" pos:end="53:23">sync</name></expr></argument>, <argument pos:start="53:26" pos:end="53:26"><expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr></argument>, <argument pos:start="53:29" pos:end="53:29"><expr pos:start="53:29" pos:end="53:29"><literal type="number" pos:start="53:29" pos:end="53:29">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:53"><expr pos:start="55:13" pos:end="55:52"><call pos:start="55:13" pos:end="55:52"><name pos:start="55:13" pos:end="55:21">avio_seek</name><argument_list pos:start="55:22" pos:end="55:52">(<argument pos:start="55:23" pos:end="55:24"><expr pos:start="55:23" pos:end="55:24"><name pos:start="55:23" pos:end="55:24">bc</name></expr></argument>, <argument pos:start="55:27" pos:end="55:41"><expr pos:start="55:27" pos:end="55:41"><name pos:start="55:27" pos:end="55:39"><name pos:start="55:27" pos:end="55:29">ogg</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:39">page_pos</name></name><operator pos:start="55:40" pos:end="55:40">+</operator><literal type="number" pos:start="55:41" pos:end="55:41">4</literal></expr></argument>, <argument pos:start="55:44" pos:end="55:51"><expr pos:start="55:44" pos:end="55:51"><name pos:start="55:44" pos:end="55:51">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:31"><expr pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:15">ogg</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:25">page_pos</name></name> <operator pos:start="57:27" pos:end="57:27">=</operator> <operator pos:start="57:29" pos:end="57:29">-</operator><literal type="number" pos:start="57:30" pos:end="57:30">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:24"><expr pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:9">c</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <call pos:start="63:13" pos:end="63:23"><name pos:start="63:13" pos:end="63:19">avio_r8</name><argument_list pos:start="63:20" pos:end="63:23">(<argument pos:start="63:21" pos:end="63:22"><expr pos:start="63:21" pos:end="63:22"><name pos:start="63:21" pos:end="63:22">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="67:9" pos:end="69:31"><if pos:start="67:9" pos:end="69:31">if <condition pos:start="67:12" pos:end="67:26">(<expr pos:start="67:13" pos:end="67:25"><call pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:21">avio_feof</name><argument_list pos:start="67:22" pos:end="67:25">(<argument pos:start="67:23" pos:end="67:24"><expr pos:start="67:23" pos:end="67:24"><name pos:start="67:23" pos:end="67:24">bc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:31"><block_content pos:start="69:13" pos:end="69:31">

            <return pos:start="69:13" pos:end="69:31">return <expr pos:start="69:20" pos:end="69:30"><name pos:start="69:20" pos:end="69:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:27"><expr pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:12">sync</name><index pos:start="73:13" pos:end="73:22">[<expr pos:start="73:14" pos:end="73:21"><name pos:start="73:14" pos:end="73:15">sp</name><operator pos:start="73:16" pos:end="73:17">++</operator> <operator pos:start="73:19" pos:end="73:19">&amp;</operator> <literal type="number" pos:start="73:21" pos:end="73:21">3</literal></expr>]</index></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:26">c</name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="75:13" pos:end="75:33">(<expr pos:start="75:14" pos:end="75:32"><name pos:start="75:14" pos:end="75:14">i</name><operator pos:start="75:15" pos:end="75:16">++</operator> <operator pos:start="75:18" pos:end="75:18">&lt;</operator> <name pos:start="75:20" pos:end="75:32">MAX_PAGE_SIZE</name></expr>)</condition>;</do>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:27">(<expr pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:9">i</name> <operator pos:start="79:11" pos:end="79:12">&gt;=</operator> <name pos:start="79:14" pos:end="79:26">MAX_PAGE_SIZE</name></expr>)</condition> <block pos:start="79:29" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:35">

        <expr_stmt pos:start="81:9" pos:end="81:58"><expr pos:start="81:9" pos:end="81:57"><call pos:start="81:9" pos:end="81:57"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:57">(<argument pos:start="81:16" pos:end="81:16"><expr pos:start="81:16" pos:end="81:16"><name pos:start="81:16" pos:end="81:16">s</name></expr></argument>, <argument pos:start="81:19" pos:end="81:29"><expr pos:start="81:19" pos:end="81:29"><name pos:start="81:19" pos:end="81:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="81:32" pos:end="81:56"><expr pos:start="81:32" pos:end="81:56"><literal type="string" pos:start="81:32" pos:end="81:56">"cannot find sync word\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:35">return <expr pos:start="83:16" pos:end="83:34"><name pos:start="83:16" pos:end="83:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:25">(<expr pos:start="89:9" pos:end="89:24"><call pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:15">avio_r8</name><argument_list pos:start="89:16" pos:end="89:19">(<argument pos:start="89:17" pos:end="89:18"><expr pos:start="89:17" pos:end="89:18"><name pos:start="89:17" pos:end="89:18">bc</name></expr></argument>)</argument_list></call> <operator pos:start="89:21" pos:end="89:22">!=</operator> <literal type="number" pos:start="89:24" pos:end="89:24">0</literal></expr>)</condition> <block pos:start="89:27" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:35">      <comment type="block" pos:start="89:34" pos:end="89:46">/* version */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:68"><expr pos:start="91:9" pos:end="91:67"><call pos:start="91:9" pos:end="91:67"><name pos:start="91:9" pos:end="91:14">av_log</name> <argument_list pos:start="91:16" pos:end="91:67">(<argument pos:start="91:17" pos:end="91:17"><expr pos:start="91:17" pos:end="91:17"><name pos:start="91:17" pos:end="91:17">s</name></expr></argument>, <argument pos:start="91:20" pos:end="91:31"><expr pos:start="91:20" pos:end="91:31"><name pos:start="91:20" pos:end="91:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:34" pos:end="91:66"><expr pos:start="91:34" pos:end="91:66"><literal type="string" pos:start="91:34" pos:end="91:66">"ogg page, unsupported version\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:35">return <expr pos:start="93:16" pos:end="93:34"><name pos:start="93:16" pos:end="93:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:25"><expr pos:start="99:5" pos:end="99:24"><name pos:start="99:5" pos:end="99:9">flags</name>  <operator pos:start="99:12" pos:end="99:12">=</operator> <call pos:start="99:14" pos:end="99:24"><name pos:start="99:14" pos:end="99:20">avio_r8</name><argument_list pos:start="99:21" pos:end="99:24">(<argument pos:start="99:22" pos:end="99:23"><expr pos:start="99:22" pos:end="99:23"><name pos:start="99:22" pos:end="99:23">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:6">gp</name>     <operator pos:start="101:12" pos:end="101:12">=</operator> <call pos:start="101:14" pos:end="101:26"><name pos:start="101:14" pos:end="101:22">avio_rl64</name><argument_list pos:start="101:23" pos:end="101:26">(<argument pos:start="101:24" pos:end="101:25"><expr pos:start="101:24" pos:end="101:25"><name pos:start="101:24" pos:end="101:25">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:27"><expr pos:start="103:5" pos:end="103:26"><name pos:start="103:5" pos:end="103:10">serial</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <call pos:start="103:14" pos:end="103:26"><name pos:start="103:14" pos:end="103:22">avio_rl32</name><argument_list pos:start="103:23" pos:end="103:26">(<argument pos:start="103:24" pos:end="103:25"><expr pos:start="103:24" pos:end="103:25"><name pos:start="103:24" pos:end="103:25">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:21"><expr pos:start="105:5" pos:end="105:20"><call pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:13">avio_skip</name><argument_list pos:start="105:14" pos:end="105:20">(<argument pos:start="105:15" pos:end="105:16"><expr pos:start="105:15" pos:end="105:16"><name pos:start="105:15" pos:end="105:16">bc</name></expr></argument>, <argument pos:start="105:19" pos:end="105:19"><expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="105:23" pos:end="105:36">/* seq, crc */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:25"><expr pos:start="107:5" pos:end="107:24"><name pos:start="107:5" pos:end="107:9">nsegs</name>  <operator pos:start="107:12" pos:end="107:12">=</operator> <call pos:start="107:14" pos:end="107:24"><name pos:start="107:14" pos:end="107:20">avio_r8</name><argument_list pos:start="107:21" pos:end="107:24">(<argument pos:start="107:22" pos:end="107:23"><expr pos:start="107:22" pos:end="107:23"><name pos:start="107:22" pos:end="107:23">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:39"><expr pos:start="111:5" pos:end="111:38"><name pos:start="111:5" pos:end="111:7">idx</name> <operator pos:start="111:9" pos:end="111:9">=</operator> <call pos:start="111:11" pos:end="111:38"><name pos:start="111:11" pos:end="111:25">ogg_find_stream</name><argument_list pos:start="111:26" pos:end="111:38">(<argument pos:start="111:27" pos:end="111:29"><expr pos:start="111:27" pos:end="111:29"><name pos:start="111:27" pos:end="111:29">ogg</name></expr></argument>, <argument pos:start="111:32" pos:end="111:37"><expr pos:start="111:32" pos:end="111:37"><name pos:start="111:32" pos:end="111:37">serial</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="133:5"><if pos:start="113:5" pos:end="133:5">if <condition pos:start="113:8" pos:end="113:16">(<expr pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:11">idx</name> <operator pos:start="113:13" pos:end="113:13">&lt;</operator> <literal type="number" pos:start="113:15" pos:end="113:15">0</literal></expr>)</condition> <block pos:start="113:18" pos:end="133:5">{<block_content pos:start="115:9" pos:end="131:9">

        <if_stmt pos:start="115:9" pos:end="121:44"><if pos:start="115:9" pos:end="117:55">if <condition pos:start="115:12" pos:end="115:35">(<expr pos:start="115:13" pos:end="115:34"><call pos:start="115:13" pos:end="115:34"><name pos:start="115:13" pos:end="115:29">data_packets_seen</name><argument_list pos:start="115:30" pos:end="115:34">(<argument pos:start="115:31" pos:end="115:33"><expr pos:start="115:31" pos:end="115:33"><name pos:start="115:31" pos:end="115:33">ogg</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:55"><block_content pos:start="117:13" pos:end="117:55">

            <expr_stmt pos:start="117:13" pos:end="117:55"><expr pos:start="117:13" pos:end="117:54"><name pos:start="117:13" pos:end="117:15">idx</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="117:54"><name pos:start="117:19" pos:end="117:36">ogg_replace_stream</name><argument_list pos:start="117:37" pos:end="117:54">(<argument pos:start="117:38" pos:end="117:38"><expr pos:start="117:38" pos:end="117:38"><name pos:start="117:38" pos:end="117:38">s</name></expr></argument>, <argument pos:start="117:41" pos:end="117:46"><expr pos:start="117:41" pos:end="117:46"><name pos:start="117:41" pos:end="117:46">serial</name></expr></argument>, <argument pos:start="117:49" pos:end="117:53"><expr pos:start="117:49" pos:end="117:53"><name pos:start="117:49" pos:end="117:53">nsegs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="119:9" pos:end="121:44">else<block type="pseudo" pos:start="121:13" pos:end="121:44"><block_content pos:start="121:13" pos:end="121:44">

            <expr_stmt pos:start="121:13" pos:end="121:44"><expr pos:start="121:13" pos:end="121:43"><name pos:start="121:13" pos:end="121:15">idx</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <call pos:start="121:19" pos:end="121:43"><name pos:start="121:19" pos:end="121:32">ogg_new_stream</name><argument_list pos:start="121:33" pos:end="121:43">(<argument pos:start="121:34" pos:end="121:34"><expr pos:start="121:34" pos:end="121:34"><name pos:start="121:34" pos:end="121:34">s</name></expr></argument>, <argument pos:start="121:37" pos:end="121:42"><expr pos:start="121:37" pos:end="121:42"><name pos:start="121:37" pos:end="121:42">serial</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="125:9" pos:end="131:9"><if pos:start="125:9" pos:end="131:9">if <condition pos:start="125:12" pos:end="125:20">(<expr pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:15">idx</name> <operator pos:start="125:17" pos:end="125:17">&lt;</operator> <literal type="number" pos:start="125:19" pos:end="125:19">0</literal></expr>)</condition> <block pos:start="125:22" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:23">

            <expr_stmt pos:start="127:13" pos:end="127:76"><expr pos:start="127:13" pos:end="127:75"><call pos:start="127:13" pos:end="127:75"><name pos:start="127:13" pos:end="127:18">av_log</name><argument_list pos:start="127:19" pos:end="127:75">(<argument pos:start="127:20" pos:end="127:20"><expr pos:start="127:20" pos:end="127:20"><name pos:start="127:20" pos:end="127:20">s</name></expr></argument>, <argument pos:start="127:23" pos:end="127:34"><expr pos:start="127:23" pos:end="127:34"><name pos:start="127:23" pos:end="127:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:37" pos:end="127:74"><expr pos:start="127:37" pos:end="127:74"><literal type="string" pos:start="127:37" pos:end="127:74">"failed to create or replace stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="129:13" pos:end="129:23">return <expr pos:start="129:20" pos:end="129:22"><name pos:start="129:20" pos:end="129:22">idx</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:28"><expr pos:start="137:5" pos:end="137:27"><name pos:start="137:5" pos:end="137:6">os</name> <operator pos:start="137:8" pos:end="137:8">=</operator> <name pos:start="137:10" pos:end="137:21"><name pos:start="137:10" pos:end="137:12">ogg</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:21">streams</name></name> <operator pos:start="137:23" pos:end="137:23">+</operator> <name pos:start="137:25" pos:end="137:27">idx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="141:38"><expr pos:start="139:5" pos:end="141:37"><name pos:start="139:5" pos:end="139:17"><name pos:start="139:5" pos:end="139:7">ogg</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:17">page_pos</name></name> <operator pos:start="139:19" pos:end="139:19">=</operator>

    <name pos:start="141:5" pos:end="141:16"><name pos:start="141:5" pos:end="141:6">os</name><operator pos:start="141:7" pos:end="141:8">-&gt;</operator><name pos:start="141:9" pos:end="141:16">page_pos</name></name> <operator pos:start="141:18" pos:end="141:18">=</operator> <call pos:start="141:20" pos:end="141:32"><name pos:start="141:20" pos:end="141:28">avio_tell</name><argument_list pos:start="141:29" pos:end="141:32">(<argument pos:start="141:30" pos:end="141:31"><expr pos:start="141:30" pos:end="141:31"><name pos:start="141:30" pos:end="141:31">bc</name></expr></argument>)</argument_list></call> <operator pos:start="141:34" pos:end="141:34">-</operator> <literal type="number" pos:start="141:36" pos:end="141:37">27</literal></expr>;</expr_stmt>



    <if_stmt pos:start="145:5" pos:end="147:30"><if pos:start="145:5" pos:end="147:30">if <condition pos:start="145:8" pos:end="145:22">(<expr pos:start="145:9" pos:end="145:21"><name pos:start="145:9" pos:end="145:17"><name pos:start="145:9" pos:end="145:10">os</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:17">psize</name></name> <operator pos:start="145:19" pos:end="145:19">&gt;</operator> <literal type="number" pos:start="145:21" pos:end="145:21">0</literal></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:30"><block_content pos:start="147:9" pos:end="147:30">

        <expr_stmt pos:start="147:9" pos:end="147:30"><expr pos:start="147:9" pos:end="147:29"><call pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:19">ogg_new_buf</name><argument_list pos:start="147:20" pos:end="147:29">(<argument pos:start="147:21" pos:end="147:23"><expr pos:start="147:21" pos:end="147:23"><name pos:start="147:21" pos:end="147:23">ogg</name></expr></argument>, <argument pos:start="147:26" pos:end="147:28"><expr pos:start="147:26" pos:end="147:28"><name pos:start="147:26" pos:end="147:28">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:45"><expr pos:start="151:5" pos:end="151:44"><name pos:start="151:5" pos:end="151:7">ret</name> <operator pos:start="151:9" pos:end="151:9">=</operator> <call pos:start="151:11" pos:end="151:44"><name pos:start="151:11" pos:end="151:19">avio_read</name><argument_list pos:start="151:20" pos:end="151:44">(<argument pos:start="151:21" pos:end="151:22"><expr pos:start="151:21" pos:end="151:22"><name pos:start="151:21" pos:end="151:22">bc</name></expr></argument>, <argument pos:start="151:25" pos:end="151:36"><expr pos:start="151:25" pos:end="151:36"><name pos:start="151:25" pos:end="151:36"><name pos:start="151:25" pos:end="151:26">os</name><operator pos:start="151:27" pos:end="151:28">-&gt;</operator><name pos:start="151:29" pos:end="151:36">segments</name></name></expr></argument>, <argument pos:start="151:39" pos:end="151:43"><expr pos:start="151:39" pos:end="151:43"><name pos:start="151:39" pos:end="151:43">nsegs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="155:43"><if pos:start="153:5" pos:end="155:43">if <condition pos:start="153:8" pos:end="153:20">(<expr pos:start="153:9" pos:end="153:19"><name pos:start="153:9" pos:end="153:11">ret</name> <operator pos:start="153:13" pos:end="153:13">&lt;</operator> <name pos:start="153:15" pos:end="153:19">nsegs</name></expr>)</condition><block type="pseudo" pos:start="155:9" pos:end="155:43"><block_content pos:start="155:9" pos:end="155:43">

        <return pos:start="155:9" pos:end="155:43">return <expr pos:start="155:16" pos:end="155:42"><ternary pos:start="155:16" pos:end="155:42"><condition pos:start="155:16" pos:end="155:24"><expr pos:start="155:16" pos:end="155:22"><name pos:start="155:16" pos:end="155:18">ret</name> <operator pos:start="155:20" pos:end="155:20">&lt;</operator> <literal type="number" pos:start="155:22" pos:end="155:22">0</literal></expr> ?</condition><then pos:start="155:26" pos:end="155:28"> <expr pos:start="155:26" pos:end="155:28"><name pos:start="155:26" pos:end="155:28">ret</name></expr> </then><else pos:start="155:30" pos:end="155:42">: <expr pos:start="155:32" pos:end="155:42"><name pos:start="155:32" pos:end="155:42">AVERROR_EOF</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:22"><expr pos:start="159:5" pos:end="159:21"><name pos:start="159:5" pos:end="159:13"><name pos:start="159:5" pos:end="159:6">os</name><operator pos:start="159:7" pos:end="159:8">-&gt;</operator><name pos:start="159:9" pos:end="159:13">nsegs</name></name> <operator pos:start="159:15" pos:end="159:15">=</operator> <name pos:start="159:17" pos:end="159:21">nsegs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:18"><expr pos:start="161:5" pos:end="161:17"><name pos:start="161:5" pos:end="161:12"><name pos:start="161:5" pos:end="161:6">os</name><operator pos:start="161:7" pos:end="161:8">-&gt;</operator><name pos:start="161:9" pos:end="161:12">segp</name></name>  <operator pos:start="161:15" pos:end="161:15">=</operator> <literal type="number" pos:start="161:17" pos:end="161:17">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:13"><expr pos:start="165:5" pos:end="165:12"><name pos:start="165:5" pos:end="165:8">size</name> <operator pos:start="165:10" pos:end="165:10">=</operator> <literal type="number" pos:start="165:12" pos:end="165:12">0</literal></expr>;</expr_stmt>

    <for pos:start="167:5" pos:end="169:32">for <control pos:start="167:9" pos:end="167:31">(<init pos:start="167:10" pos:end="167:15"><expr pos:start="167:10" pos:end="167:14"><name pos:start="167:10" pos:end="167:10">i</name> <operator pos:start="167:12" pos:end="167:12">=</operator> <literal type="number" pos:start="167:14" pos:end="167:14">0</literal></expr>;</init> <condition pos:start="167:17" pos:end="167:26"><expr pos:start="167:17" pos:end="167:25"><name pos:start="167:17" pos:end="167:17">i</name> <operator pos:start="167:19" pos:end="167:19">&lt;</operator> <name pos:start="167:21" pos:end="167:25">nsegs</name></expr>;</condition> <incr pos:start="167:28" pos:end="167:30"><expr pos:start="167:28" pos:end="167:30"><name pos:start="167:28" pos:end="167:28">i</name><operator pos:start="167:29" pos:end="167:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="169:9" pos:end="169:32"><block_content pos:start="169:9" pos:end="169:32">

        <expr_stmt pos:start="169:9" pos:end="169:32"><expr pos:start="169:9" pos:end="169:31"><name pos:start="169:9" pos:end="169:12">size</name> <operator pos:start="169:14" pos:end="169:15">+=</operator> <name pos:start="169:17" pos:end="169:31"><name pos:start="169:17" pos:end="169:18">os</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:28">segments</name><index pos:start="169:29" pos:end="169:31">[<expr pos:start="169:30" pos:end="169:30"><name pos:start="169:30" pos:end="169:30">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="173:5" pos:end="175:25"><if pos:start="173:5" pos:end="175:25">if <condition pos:start="173:8" pos:end="173:32">(<expr pos:start="173:9" pos:end="173:31"><operator pos:start="173:9" pos:end="173:9">!</operator><operator pos:start="173:10" pos:end="173:10">(</operator><name pos:start="173:11" pos:end="173:15">flags</name> <operator pos:start="173:17" pos:end="173:17">&amp;</operator> <name pos:start="173:19" pos:end="173:30">OGG_FLAG_BOS</name><operator pos:start="173:31" pos:end="173:31">)</operator></expr>)</condition><block type="pseudo" pos:start="175:9" pos:end="175:25"><block_content pos:start="175:9" pos:end="175:25">

        <expr_stmt pos:start="175:9" pos:end="175:25"><expr pos:start="175:9" pos:end="175:24"><name pos:start="175:9" pos:end="175:20"><name pos:start="175:9" pos:end="175:10">os</name><operator pos:start="175:11" pos:end="175:12">-&gt;</operator><name pos:start="175:13" pos:end="175:20">got_data</name></name> <operator pos:start="175:22" pos:end="175:22">=</operator> <literal type="number" pos:start="175:24" pos:end="175:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="179:5" pos:end="211:5"><if pos:start="179:5" pos:end="205:5">if <condition pos:start="179:8" pos:end="179:48">(<expr pos:start="179:9" pos:end="179:47"><name pos:start="179:9" pos:end="179:13">flags</name> <operator pos:start="179:15" pos:end="179:15">&amp;</operator> <name pos:start="179:17" pos:end="179:29">OGG_FLAG_CONT</name> <operator pos:start="179:31" pos:end="179:32">||</operator> <name pos:start="179:34" pos:end="179:47"><name pos:start="179:34" pos:end="179:35">os</name><operator pos:start="179:36" pos:end="179:37">-&gt;</operator><name pos:start="179:38" pos:end="179:47">incomplete</name></name></expr>)</condition> <block pos:start="179:50" pos:end="205:5">{<block_content pos:start="181:9" pos:end="203:9">

        <if_stmt pos:start="181:9" pos:end="203:9"><if pos:start="181:9" pos:end="203:9">if <condition pos:start="181:12" pos:end="181:23">(<expr pos:start="181:13" pos:end="181:22"><operator pos:start="181:13" pos:end="181:13">!</operator><name pos:start="181:14" pos:end="181:22"><name pos:start="181:14" pos:end="181:15">os</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:22">psize</name></name></expr>)</condition> <block pos:start="181:25" pos:end="203:9">{<block_content pos:start="189:13" pos:end="201:40">

            <comment type="line" pos:start="183:13" pos:end="183:59">// If this is the very first segment we started</comment>

            <comment type="line" pos:start="185:13" pos:end="185:63">// playback in the middle of a continuation packet.</comment>

            <comment type="line" pos:start="187:13" pos:end="187:58">// Discard it since we missed the start of it.</comment>

            <while pos:start="189:13" pos:end="199:13">while <condition pos:start="189:19" pos:end="189:40">(<expr pos:start="189:20" pos:end="189:39"><name pos:start="189:20" pos:end="189:27"><name pos:start="189:20" pos:end="189:21">os</name><operator pos:start="189:22" pos:end="189:23">-&gt;</operator><name pos:start="189:24" pos:end="189:27">segp</name></name> <operator pos:start="189:29" pos:end="189:29">&lt;</operator> <name pos:start="189:31" pos:end="189:39"><name pos:start="189:31" pos:end="189:32">os</name><operator pos:start="189:33" pos:end="189:34">-&gt;</operator><name pos:start="189:35" pos:end="189:39">nsegs</name></name></expr>)</condition> <block pos:start="189:42" pos:end="199:13">{<block_content pos:start="191:17" pos:end="197:26">

                <decl_stmt pos:start="191:17" pos:end="191:51"><decl pos:start="191:17" pos:end="191:50"><type pos:start="191:17" pos:end="191:19"><name pos:start="191:17" pos:end="191:19">int</name></type> <name pos:start="191:21" pos:end="191:23">seg</name> <init pos:start="191:25" pos:end="191:50">= <expr pos:start="191:27" pos:end="191:50"><name pos:start="191:27" pos:end="191:50"><name pos:start="191:27" pos:end="191:28">os</name><operator pos:start="191:29" pos:end="191:30">-&gt;</operator><name pos:start="191:31" pos:end="191:38">segments</name><index pos:start="191:39" pos:end="191:50">[<expr pos:start="191:40" pos:end="191:49"><name pos:start="191:40" pos:end="191:47"><name pos:start="191:40" pos:end="191:41">os</name><operator pos:start="191:42" pos:end="191:43">-&gt;</operator><name pos:start="191:44" pos:end="191:47">segp</name></name><operator pos:start="191:48" pos:end="191:49">++</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:34"><expr pos:start="193:17" pos:end="193:33"><name pos:start="193:17" pos:end="193:26"><name pos:start="193:17" pos:end="193:18">os</name><operator pos:start="193:19" pos:end="193:20">-&gt;</operator><name pos:start="193:21" pos:end="193:26">pstart</name></name> <operator pos:start="193:28" pos:end="193:29">+=</operator> <name pos:start="193:31" pos:end="193:33">seg</name></expr>;</expr_stmt>

                <if_stmt pos:start="195:17" pos:end="197:26"><if pos:start="195:17" pos:end="197:26">if <condition pos:start="195:20" pos:end="195:30">(<expr pos:start="195:21" pos:end="195:29"><name pos:start="195:21" pos:end="195:23">seg</name> <operator pos:start="195:25" pos:end="195:25">&lt;</operator> <literal type="number" pos:start="195:27" pos:end="195:29">255</literal></expr>)</condition><block type="pseudo" pos:start="197:21" pos:end="197:26"><block_content pos:start="197:21" pos:end="197:26">

                    <break pos:start="197:21" pos:end="197:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="201:13" pos:end="201:40"><expr pos:start="201:13" pos:end="201:39"><name pos:start="201:13" pos:end="201:24"><name pos:start="201:13" pos:end="201:14">os</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:24">sync_pos</name></name> <operator pos:start="201:26" pos:end="201:26">=</operator> <name pos:start="201:28" pos:end="201:39"><name pos:start="201:28" pos:end="201:29">os</name><operator pos:start="201:30" pos:end="201:31">-&gt;</operator><name pos:start="201:32" pos:end="201:39">page_pos</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="205:7" pos:end="211:5">else <block pos:start="205:12" pos:end="211:5">{<block_content pos:start="207:9" pos:end="209:36">

        <expr_stmt pos:start="207:9" pos:end="207:25"><expr pos:start="207:9" pos:end="207:24"><name pos:start="207:9" pos:end="207:17"><name pos:start="207:9" pos:end="207:10">os</name><operator pos:start="207:11" pos:end="207:12">-&gt;</operator><name pos:start="207:13" pos:end="207:17">psize</name></name>    <operator pos:start="207:22" pos:end="207:22">=</operator> <literal type="number" pos:start="207:24" pos:end="207:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:36"><expr pos:start="209:9" pos:end="209:35"><name pos:start="209:9" pos:end="209:20"><name pos:start="209:9" pos:end="209:10">os</name><operator pos:start="209:11" pos:end="209:12">-&gt;</operator><name pos:start="209:13" pos:end="209:20">sync_pos</name></name> <operator pos:start="209:22" pos:end="209:22">=</operator> <name pos:start="209:24" pos:end="209:35"><name pos:start="209:24" pos:end="209:25">os</name><operator pos:start="209:26" pos:end="209:27">-&gt;</operator><name pos:start="209:28" pos:end="209:35">page_pos</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="215:5" pos:end="229:5"><if pos:start="215:5" pos:end="229:5">if <condition pos:start="215:8" pos:end="215:40">(<expr pos:start="215:9" pos:end="215:39"><name pos:start="215:9" pos:end="215:19"><name pos:start="215:9" pos:end="215:10">os</name><operator pos:start="215:11" pos:end="215:12">-&gt;</operator><name pos:start="215:13" pos:end="215:19">bufsize</name></name> <operator pos:start="215:21" pos:end="215:21">-</operator> <name pos:start="215:23" pos:end="215:32"><name pos:start="215:23" pos:end="215:24">os</name><operator pos:start="215:25" pos:end="215:26">-&gt;</operator><name pos:start="215:27" pos:end="215:32">bufpos</name></name> <operator pos:start="215:34" pos:end="215:34">&lt;</operator> <name pos:start="215:36" pos:end="215:39">size</name></expr>)</condition> <block pos:start="215:42" pos:end="229:5">{<block_content pos:start="217:9" pos:end="227:21">

        <decl_stmt pos:start="217:9" pos:end="217:83"><decl pos:start="217:9" pos:end="217:82"><type pos:start="217:9" pos:end="217:17"><name pos:start="217:9" pos:end="217:15">uint8_t</name> <modifier pos:start="217:17" pos:end="217:17">*</modifier></type><name pos:start="217:18" pos:end="217:19">nb</name> <init pos:start="217:21" pos:end="217:82">= <expr pos:start="217:23" pos:end="217:82"><call pos:start="217:23" pos:end="217:82"><name pos:start="217:23" pos:end="217:31">av_malloc</name><argument_list pos:start="217:32" pos:end="217:82">(<argument pos:start="217:33" pos:end="217:81"><expr pos:start="217:33" pos:end="217:81"><operator pos:start="217:33" pos:end="217:33">(</operator><name pos:start="217:34" pos:end="217:44"><name pos:start="217:34" pos:end="217:35">os</name><operator pos:start="217:36" pos:end="217:37">-&gt;</operator><name pos:start="217:38" pos:end="217:44">bufsize</name></name> <operator pos:start="217:46" pos:end="217:47">*=</operator> <literal type="number" pos:start="217:49" pos:end="217:49">2</literal><operator pos:start="217:50" pos:end="217:50">)</operator> <operator pos:start="217:52" pos:end="217:52">+</operator> <name pos:start="217:54" pos:end="217:81">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="219:9" pos:end="221:35"><if pos:start="219:9" pos:end="221:35">if <condition pos:start="219:12" pos:end="219:16">(<expr pos:start="219:13" pos:end="219:15"><operator pos:start="219:13" pos:end="219:13">!</operator><name pos:start="219:14" pos:end="219:15">nb</name></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="221:35"><block_content pos:start="221:13" pos:end="221:35">

            <return pos:start="221:13" pos:end="221:35">return <expr pos:start="221:20" pos:end="221:34"><call pos:start="221:20" pos:end="221:34"><name pos:start="221:20" pos:end="221:26">AVERROR</name><argument_list pos:start="221:27" pos:end="221:34">(<argument pos:start="221:28" pos:end="221:33"><expr pos:start="221:28" pos:end="221:33"><name pos:start="221:28" pos:end="221:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:40"><expr pos:start="223:9" pos:end="223:39"><call pos:start="223:9" pos:end="223:39"><name pos:start="223:9" pos:end="223:14">memcpy</name><argument_list pos:start="223:15" pos:end="223:39">(<argument pos:start="223:16" pos:end="223:17"><expr pos:start="223:16" pos:end="223:17"><name pos:start="223:16" pos:end="223:17">nb</name></expr></argument>, <argument pos:start="223:20" pos:end="223:26"><expr pos:start="223:20" pos:end="223:26"><name pos:start="223:20" pos:end="223:26"><name pos:start="223:20" pos:end="223:21">os</name><operator pos:start="223:22" pos:end="223:23">-&gt;</operator><name pos:start="223:24" pos:end="223:26">buf</name></name></expr></argument>, <argument pos:start="223:29" pos:end="223:38"><expr pos:start="223:29" pos:end="223:38"><name pos:start="223:29" pos:end="223:38"><name pos:start="223:29" pos:end="223:30">os</name><operator pos:start="223:31" pos:end="223:32">-&gt;</operator><name pos:start="223:33" pos:end="223:38">bufpos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:25"><expr pos:start="225:9" pos:end="225:24"><call pos:start="225:9" pos:end="225:24"><name pos:start="225:9" pos:end="225:15">av_free</name><argument_list pos:start="225:16" pos:end="225:24">(<argument pos:start="225:17" pos:end="225:23"><expr pos:start="225:17" pos:end="225:23"><name pos:start="225:17" pos:end="225:23"><name pos:start="225:17" pos:end="225:18">os</name><operator pos:start="225:19" pos:end="225:20">-&gt;</operator><name pos:start="225:21" pos:end="225:23">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:21"><expr pos:start="227:9" pos:end="227:20"><name pos:start="227:9" pos:end="227:15"><name pos:start="227:9" pos:end="227:10">os</name><operator pos:start="227:11" pos:end="227:12">-&gt;</operator><name pos:start="227:13" pos:end="227:15">buf</name></name> <operator pos:start="227:17" pos:end="227:17">=</operator> <name pos:start="227:19" pos:end="227:20">nb</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="233:5" pos:end="233:52"><expr pos:start="233:5" pos:end="233:51"><name pos:start="233:5" pos:end="233:7">ret</name> <operator pos:start="233:9" pos:end="233:9">=</operator> <call pos:start="233:11" pos:end="233:51"><name pos:start="233:11" pos:end="233:19">avio_read</name><argument_list pos:start="233:20" pos:end="233:51">(<argument pos:start="233:21" pos:end="233:22"><expr pos:start="233:21" pos:end="233:22"><name pos:start="233:21" pos:end="233:22">bc</name></expr></argument>, <argument pos:start="233:25" pos:end="233:44"><expr pos:start="233:25" pos:end="233:44"><name pos:start="233:25" pos:end="233:31"><name pos:start="233:25" pos:end="233:26">os</name><operator pos:start="233:27" pos:end="233:28">-&gt;</operator><name pos:start="233:29" pos:end="233:31">buf</name></name> <operator pos:start="233:33" pos:end="233:33">+</operator> <name pos:start="233:35" pos:end="233:44"><name pos:start="233:35" pos:end="233:36">os</name><operator pos:start="233:37" pos:end="233:38">-&gt;</operator><name pos:start="233:39" pos:end="233:44">bufpos</name></name></expr></argument>, <argument pos:start="233:47" pos:end="233:50"><expr pos:start="233:47" pos:end="233:50"><name pos:start="233:47" pos:end="233:50">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="235:5" pos:end="237:43"><if pos:start="235:5" pos:end="237:43">if <condition pos:start="235:8" pos:end="235:19">(<expr pos:start="235:9" pos:end="235:18"><name pos:start="235:9" pos:end="235:11">ret</name> <operator pos:start="235:13" pos:end="235:13">&lt;</operator> <name pos:start="235:15" pos:end="235:18">size</name></expr>)</condition><block type="pseudo" pos:start="237:9" pos:end="237:43"><block_content pos:start="237:9" pos:end="237:43">

        <return pos:start="237:9" pos:end="237:43">return <expr pos:start="237:16" pos:end="237:42"><ternary pos:start="237:16" pos:end="237:42"><condition pos:start="237:16" pos:end="237:24"><expr pos:start="237:16" pos:end="237:22"><name pos:start="237:16" pos:end="237:18">ret</name> <operator pos:start="237:20" pos:end="237:20">&lt;</operator> <literal type="number" pos:start="237:22" pos:end="237:22">0</literal></expr> ?</condition><then pos:start="237:26" pos:end="237:28"> <expr pos:start="237:26" pos:end="237:28"><name pos:start="237:26" pos:end="237:28">ret</name></expr> </then><else pos:start="237:30" pos:end="237:42">: <expr pos:start="237:32" pos:end="237:42"><name pos:start="237:32" pos:end="237:42">AVERROR_EOF</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="241:5" pos:end="241:23"><expr pos:start="241:5" pos:end="241:22"><name pos:start="241:5" pos:end="241:14"><name pos:start="241:5" pos:end="241:6">os</name><operator pos:start="241:7" pos:end="241:8">-&gt;</operator><name pos:start="241:9" pos:end="241:14">bufpos</name></name> <operator pos:start="241:16" pos:end="241:17">+=</operator> <name pos:start="241:19" pos:end="241:22">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:21"><expr pos:start="243:5" pos:end="243:20"><name pos:start="243:5" pos:end="243:15"><name pos:start="243:5" pos:end="243:6">os</name><operator pos:start="243:7" pos:end="243:8">-&gt;</operator><name pos:start="243:9" pos:end="243:15">granule</name></name> <operator pos:start="243:17" pos:end="243:17">=</operator> <name pos:start="243:19" pos:end="243:20">gp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:24"><expr pos:start="245:5" pos:end="245:23"><name pos:start="245:5" pos:end="245:13"><name pos:start="245:5" pos:end="245:6">os</name><operator pos:start="245:7" pos:end="245:8">-&gt;</operator><name pos:start="245:9" pos:end="245:13">flags</name></name>   <operator pos:start="245:17" pos:end="245:17">=</operator> <name pos:start="245:19" pos:end="245:23">flags</name></expr>;</expr_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:66"><expr pos:start="249:5" pos:end="249:65"><call pos:start="249:5" pos:end="249:65"><name pos:start="249:5" pos:end="249:10">memset</name><argument_list pos:start="249:11" pos:end="249:65">(<argument pos:start="249:12" pos:end="249:31"><expr pos:start="249:12" pos:end="249:31"><name pos:start="249:12" pos:end="249:18"><name pos:start="249:12" pos:end="249:13">os</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:18">buf</name></name> <operator pos:start="249:20" pos:end="249:20">+</operator> <name pos:start="249:22" pos:end="249:31"><name pos:start="249:22" pos:end="249:23">os</name><operator pos:start="249:24" pos:end="249:25">-&gt;</operator><name pos:start="249:26" pos:end="249:31">bufpos</name></name></expr></argument>, <argument pos:start="249:34" pos:end="249:34"><expr pos:start="249:34" pos:end="249:34"><literal type="number" pos:start="249:34" pos:end="249:34">0</literal></expr></argument>, <argument pos:start="249:37" pos:end="249:64"><expr pos:start="249:37" pos:end="249:64"><name pos:start="249:37" pos:end="249:64">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="251:5" pos:end="253:19"><if pos:start="251:5" pos:end="253:19">if <condition pos:start="251:8" pos:end="251:12">(<expr pos:start="251:9" pos:end="251:11"><name pos:start="251:9" pos:end="251:11">sid</name></expr>)</condition><block type="pseudo" pos:start="253:9" pos:end="253:19"><block_content pos:start="253:9" pos:end="253:19">

        <expr_stmt pos:start="253:9" pos:end="253:19"><expr pos:start="253:9" pos:end="253:18"><operator pos:start="253:9" pos:end="253:9">*</operator><name pos:start="253:10" pos:end="253:12">sid</name> <operator pos:start="253:14" pos:end="253:14">=</operator> <name pos:start="253:16" pos:end="253:18">idx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="257:5" pos:end="257:13">return <expr pos:start="257:12" pos:end="257:12"><literal type="number" pos:start="257:12" pos:end="257:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
