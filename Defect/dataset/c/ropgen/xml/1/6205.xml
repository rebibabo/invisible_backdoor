<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6205.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mpjpeg_read_probe</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">AVProbeData</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:15">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:18"><name pos:start="7:10" pos:end="7:13">line</name><index pos:start="7:14" pos:end="7:18">[<expr pos:start="7:15" pos:end="7:17"><literal type="number" pos:start="7:15" pos:end="7:17">128</literal></expr>]</index></name> <init pos:start="7:20" pos:end="7:26">= <expr pos:start="7:22" pos:end="7:26"><block pos:start="7:22" pos:end="7:26">{ <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:76"><expr pos:start="13:5" pos:end="13:75"><name pos:start="13:5" pos:end="13:6">pb</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:75"><name pos:start="13:10" pos:end="13:27">avio_alloc_context</name><argument_list pos:start="13:28" pos:end="13:75">(<argument pos:start="13:29" pos:end="13:34"><expr pos:start="13:29" pos:end="13:34"><name pos:start="13:29" pos:end="13:34"><name pos:start="13:29" pos:end="13:29">p</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:34">buf</name></name></expr></argument>, <argument pos:start="13:37" pos:end="13:47"><expr pos:start="13:37" pos:end="13:47"><name pos:start="13:37" pos:end="13:47"><name pos:start="13:37" pos:end="13:37">p</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:47">buf_size</name></name></expr></argument>, <argument pos:start="13:50" pos:end="13:50"><expr pos:start="13:50" pos:end="13:50"><literal type="number" pos:start="13:50" pos:end="13:50">0</literal></expr></argument>, <argument pos:start="13:53" pos:end="13:56"><expr pos:start="13:53" pos:end="13:56"><name pos:start="13:53" pos:end="13:56">NULL</name></expr></argument>, <argument pos:start="13:59" pos:end="13:62"><expr pos:start="13:59" pos:end="13:62"><name pos:start="13:59" pos:end="13:62">NULL</name></expr></argument>, <argument pos:start="13:65" pos:end="13:68"><expr pos:start="13:65" pos:end="13:68"><name pos:start="13:65" pos:end="13:68">NULL</name></expr></argument>, <argument pos:start="13:71" pos:end="13:74"><expr pos:start="13:71" pos:end="13:74"><name pos:start="13:71" pos:end="13:74">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:11">pb</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:64">(<expr pos:start="21:9" pos:end="21:63"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:9">p</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:19">buf_size</name></name> <operator pos:start="21:21" pos:end="21:21">&lt;</operator> <literal type="number" pos:start="21:23" pos:end="21:23">2</literal> <operator pos:start="21:25" pos:end="21:26">||</operator> <name pos:start="21:28" pos:end="21:36"><name pos:start="21:28" pos:end="21:28">p</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:33">buf</name><index pos:start="21:34" pos:end="21:36">[<expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">0</literal></expr>]</index></name> <operator pos:start="21:38" pos:end="21:39">!=</operator> <literal type="char" pos:start="21:41" pos:end="21:43">'-'</literal> <operator pos:start="21:45" pos:end="21:46">||</operator> <name pos:start="21:48" pos:end="21:56"><name pos:start="21:48" pos:end="21:48">p</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:53">buf</name><index pos:start="21:54" pos:end="21:56">[<expr pos:start="21:55" pos:end="21:55"><literal type="number" pos:start="21:55" pos:end="21:55">1</literal></expr>]</index></name> <operator pos:start="21:58" pos:end="21:59">!=</operator> <literal type="char" pos:start="21:61" pos:end="21:63">'-'</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="27:5" pos:end="47:5">while <condition pos:start="27:11" pos:end="27:28">(<expr pos:start="27:12" pos:end="27:27"><operator pos:start="27:12" pos:end="27:12">!</operator><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:14">pb</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:27">eof_reached</name></name></expr>)</condition> <block pos:start="27:30" pos:end="47:5">{<block_content pos:start="29:9" pos:end="45:9">

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:46"><name pos:start="29:15" pos:end="29:22">get_line</name><argument_list pos:start="29:23" pos:end="29:46">(<argument pos:start="29:24" pos:end="29:25"><expr pos:start="29:24" pos:end="29:25"><name pos:start="29:24" pos:end="29:25">pb</name></expr></argument>, <argument pos:start="29:28" pos:end="29:31"><expr pos:start="29:28" pos:end="29:31"><name pos:start="29:28" pos:end="29:31">line</name></expr></argument>, <argument pos:start="29:34" pos:end="29:45"><expr pos:start="29:34" pos:end="29:45"><sizeof pos:start="29:34" pos:end="29:45">sizeof<argument_list pos:start="29:40" pos:end="29:45">(<argument pos:start="29:41" pos:end="29:44"><expr pos:start="29:41" pos:end="29:44"><name pos:start="29:41" pos:end="29:44">line</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:18"><if pos:start="31:9" pos:end="33:18">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:18"><block_content pos:start="33:13" pos:end="33:18">

            <break pos:start="33:13" pos:end="33:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:39"><expr pos:start="37:9" pos:end="37:38"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:38"><name pos:start="37:15" pos:end="37:32">check_content_type</name><argument_list pos:start="37:33" pos:end="37:38">(<argument pos:start="37:34" pos:end="37:37"><expr pos:start="37:34" pos:end="37:37"><name pos:start="37:34" pos:end="37:37">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:17">(<expr pos:start="39:13" pos:end="39:16"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:16">ret</name></expr>)</condition> <block pos:start="39:19" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:18">

            <expr_stmt pos:start="41:13" pos:end="41:36"><expr pos:start="41:13" pos:end="41:35"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:35">AVPROBE_SCORE_MAX</name></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="51:5" pos:end="51:16"><expr pos:start="51:5" pos:end="51:15"><call pos:start="51:5" pos:end="51:15"><name pos:start="51:5" pos:end="51:11">av_free</name><argument_list pos:start="51:12" pos:end="51:15">(<argument pos:start="51:13" pos:end="51:14"><expr pos:start="51:13" pos:end="51:14"><name pos:start="51:13" pos:end="51:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="55:5" pos:end="55:15">return <expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
