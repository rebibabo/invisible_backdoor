<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22057.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">encode_apng</name><parameter_list pos:start="1:23" pos:end="3:60">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:44"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:44">avctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:54">AVPacket</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">pkt</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:42"><decl pos:start="3:24" pos:end="3:42"><type pos:start="3:24" pos:end="3:42"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:36">AVFrame</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:42">pict</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:59"><decl pos:start="3:45" pos:end="3:59"><type pos:start="3:45" pos:end="3:59"><name pos:start="3:45" pos:end="3:47">int</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:59">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="275:1">{<block_content pos:start="7:5" pos:end="273:13">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">PNGEncContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:39">= <expr pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:39"><name pos:start="7:24" pos:end="7:28">avctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">enc_row_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:26">max_packet_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:17">APNGFctlChunk</name></type> <name pos:start="15:19" pos:end="15:28">fctl_chunk</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="39:5"><if pos:start="19:5" pos:end="39:5">if <condition pos:start="19:8" pos:end="19:95">(<expr pos:start="19:9" pos:end="19:94"><name pos:start="19:9" pos:end="19:12">pict</name> <operator pos:start="19:14" pos:end="19:15">&amp;&amp;</operator> <name pos:start="19:17" pos:end="19:31"><name pos:start="19:17" pos:end="19:21">avctx</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:31">codec_id</name></name> <operator pos:start="19:33" pos:end="19:34">==</operator> <name pos:start="19:36" pos:end="19:51">AV_CODEC_ID_APNG</name> <operator pos:start="19:53" pos:end="19:54">&amp;&amp;</operator> <name pos:start="19:56" pos:end="19:68"><name pos:start="19:56" pos:end="19:56">s</name><operator pos:start="19:57" pos:end="19:58">-&gt;</operator><name pos:start="19:59" pos:end="19:68">color_type</name></name> <operator pos:start="19:70" pos:end="19:71">==</operator> <name pos:start="19:73" pos:end="19:94">PNG_COLOR_TYPE_PALETTE</name></expr>)</condition> <block pos:start="19:97" pos:end="39:5">{<block_content pos:start="21:9" pos:end="37:9">

        <decl_stmt pos:start="21:9" pos:end="21:117"><decl pos:start="21:9" pos:end="21:116"><type pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:16">uint32_t</name></type> <name pos:start="21:18" pos:end="21:25">checksum</name> <init pos:start="21:27" pos:end="21:116">= <expr pos:start="21:29" pos:end="21:116"><operator pos:start="21:29" pos:end="21:29">~</operator><call pos:start="21:30" pos:end="21:116"><name pos:start="21:30" pos:end="21:35">av_crc</name><argument_list pos:start="21:36" pos:end="21:116">(<argument pos:start="21:37" pos:end="21:71"><expr pos:start="21:37" pos:end="21:71"><call pos:start="21:37" pos:end="21:71"><name pos:start="21:37" pos:end="21:52">av_crc_get_table</name><argument_list pos:start="21:53" pos:end="21:71">(<argument pos:start="21:54" pos:end="21:70"><expr pos:start="21:54" pos:end="21:70"><name pos:start="21:54" pos:end="21:70">AV_CRC_32_IEEE_LE</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:74" pos:end="21:76"><expr pos:start="21:74" pos:end="21:76"><operator pos:start="21:74" pos:end="21:74">~</operator><literal type="number" pos:start="21:75" pos:end="21:76">0U</literal></expr></argument>, <argument pos:start="21:79" pos:end="21:91"><expr pos:start="21:79" pos:end="21:91"><name pos:start="21:79" pos:end="21:91"><name pos:start="21:79" pos:end="21:82">pict</name><operator pos:start="21:83" pos:end="21:84">-&gt;</operator><name pos:start="21:85" pos:end="21:88">data</name><index pos:start="21:89" pos:end="21:91">[<expr pos:start="21:90" pos:end="21:90"><literal type="number" pos:start="21:90" pos:end="21:90">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="21:94" pos:end="21:115"><expr pos:start="21:94" pos:end="21:115"><literal type="number" pos:start="21:94" pos:end="21:96">256</literal> <operator pos:start="21:98" pos:end="21:98">*</operator> <sizeof pos:start="21:100" pos:end="21:115">sizeof<argument_list pos:start="21:106" pos:end="21:115">(<argument pos:start="21:107" pos:end="21:114"><expr pos:start="21:107" pos:end="21:114"><name pos:start="21:107" pos:end="21:114">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="25:9" pos:end="37:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:37">(<expr pos:start="25:13" pos:end="25:36"><name pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:17">avctx</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:31">frame_number</name></name> <operator pos:start="25:33" pos:end="25:34">==</operator> <literal type="number" pos:start="25:36" pos:end="25:36">0</literal></expr>)</condition> <block pos:start="25:39" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:43">

            <expr_stmt pos:start="27:13" pos:end="27:43"><expr pos:start="27:13" pos:end="27:42"><name pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:31">palette_checksum</name></name> <operator pos:start="27:33" pos:end="27:33">=</operator> <name pos:start="27:35" pos:end="27:42">checksum</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="37:9">else if <condition pos:start="29:19" pos:end="29:51">(<expr pos:start="29:20" pos:end="29:50"><name pos:start="29:20" pos:end="29:27">checksum</name> <operator pos:start="29:29" pos:end="29:30">!=</operator> <name pos:start="29:32" pos:end="29:50"><name pos:start="29:32" pos:end="29:32">s</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:50">palette_checksum</name></name></expr>)</condition> <block pos:start="29:53" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:22">

            <expr_stmt pos:start="31:13" pos:end="33:110"><expr pos:start="31:13" pos:end="33:109"><call pos:start="31:13" pos:end="33:109"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="33:109">(<argument pos:start="31:20" pos:end="31:24"><expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:24">avctx</name></expr></argument>, <argument pos:start="31:27" pos:end="31:38"><expr pos:start="31:27" pos:end="31:38"><name pos:start="31:27" pos:end="31:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="33:20" pos:end="33:108"><expr pos:start="33:20" pos:end="33:108"><literal type="string" pos:start="33:20" pos:end="33:108">"Input contains more than one unique palette. APNG does not support multiple palettes.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:22">return <expr pos:start="35:20" pos:end="35:21"><operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:93"><expr pos:start="43:5" pos:end="43:92"><name pos:start="43:5" pos:end="43:16">enc_row_size</name>    <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="43:92"><name pos:start="43:23" pos:end="43:34">deflateBound</name><argument_list pos:start="43:35" pos:end="43:92">(<argument pos:start="43:36" pos:end="43:46"><expr pos:start="43:36" pos:end="43:46"><operator pos:start="43:36" pos:end="43:36">&amp;</operator><name pos:start="43:37" pos:end="43:46"><name pos:start="43:37" pos:end="43:37">s</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:46">zstream</name></name></expr></argument>, <argument pos:start="43:49" pos:end="43:91"><expr pos:start="43:49" pos:end="43:91"><operator pos:start="43:49" pos:end="43:49">(</operator><name pos:start="43:50" pos:end="43:61"><name pos:start="43:50" pos:end="43:54">avctx</name><operator pos:start="43:55" pos:end="43:56">-&gt;</operator><name pos:start="43:57" pos:end="43:61">width</name></name> <operator pos:start="43:63" pos:end="43:63">*</operator> <name pos:start="43:65" pos:end="43:81"><name pos:start="43:65" pos:end="43:65">s</name><operator pos:start="43:66" pos:end="43:67">-&gt;</operator><name pos:start="43:68" pos:end="43:81">bits_per_pixel</name></name> <operator pos:start="43:83" pos:end="43:83">+</operator> <literal type="number" pos:start="43:85" pos:end="43:85">7</literal><operator pos:start="43:86" pos:end="43:86">)</operator> <operator pos:start="43:88" pos:end="43:89">&gt;&gt;</operator> <literal type="number" pos:start="43:91" pos:end="43:91">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="55:10"><expr pos:start="45:5" pos:end="55:9"><name pos:start="45:5" pos:end="45:19">max_packet_size</name> <operator pos:start="45:21" pos:end="45:21">=</operator>

        <name pos:start="47:9" pos:end="47:32">AV_INPUT_BUFFER_MIN_SIZE</name> <operator pos:start="47:34" pos:end="47:34">+</operator> <comment type="line" pos:start="47:36" pos:end="47:45">// headers</comment>

        <name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:13">avctx</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:21">height</name></name> <operator pos:start="49:23" pos:end="49:23">*</operator> <operator pos:start="49:25" pos:end="49:25">(</operator>

            <name pos:start="51:13" pos:end="51:24">enc_row_size</name> <operator pos:start="51:26" pos:end="51:26">+</operator>

            <operator pos:start="53:13" pos:end="53:13">(</operator><literal type="number" pos:start="53:14" pos:end="53:16">4</literal> <operator pos:start="53:16" pos:end="53:16">+</operator> <literal type="number" pos:start="53:18" pos:end="53:19">12</literal><operator pos:start="53:20" pos:end="53:20">)</operator> <operator pos:start="53:22" pos:end="53:22">*</operator> <operator pos:start="53:24" pos:end="53:24">(</operator><operator pos:start="53:25" pos:end="53:25">(</operator><operator pos:start="53:26" pos:end="53:26">(</operator><name pos:start="53:27" pos:end="53:33">int64_t</name><operator pos:start="53:34" pos:end="53:34">)</operator><name pos:start="53:35" pos:end="53:46">enc_row_size</name> <operator pos:start="53:48" pos:end="53:48">+</operator> <name pos:start="53:50" pos:end="53:59">IOBUF_SIZE</name> <operator pos:start="53:61" pos:end="53:61">-</operator> <literal type="number" pos:start="53:63" pos:end="53:63">1</literal><operator pos:start="53:64" pos:end="53:64">)</operator> <operator pos:start="53:66" pos:end="53:66">/</operator> <name pos:start="53:68" pos:end="53:77">IOBUF_SIZE</name><operator pos:start="53:78" pos:end="53:78">)</operator> <comment type="line" pos:start="53:80" pos:end="53:120">// fdAT * ceil(enc_row_size / IOBUF_SIZE)</comment>

        <operator pos:start="55:9" pos:end="55:9">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="59:31"><if pos:start="57:5" pos:end="59:31">if <condition pos:start="57:8" pos:end="57:34">(<expr pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:23">max_packet_size</name> <operator pos:start="57:25" pos:end="57:25">&gt;</operator> <name pos:start="57:27" pos:end="57:33">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:31"><block_content pos:start="59:9" pos:end="59:31">

        <return pos:start="59:9" pos:end="59:31">return <expr pos:start="59:16" pos:end="59:30"><call pos:start="59:16" pos:end="59:30"><name pos:start="59:16" pos:end="59:22">AVERROR</name><argument_list pos:start="59:23" pos:end="59:30">(<argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="107:5"><if pos:start="63:5" pos:end="91:5">if <condition pos:start="63:8" pos:end="63:33">(<expr pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:13">avctx</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:27">frame_number</name></name> <operator pos:start="63:29" pos:end="63:30">==</operator> <literal type="number" pos:start="63:32" pos:end="63:32">0</literal></expr>)</condition> <block pos:start="63:35" pos:end="91:5">{<block_content pos:start="65:9" pos:end="89:35">

        <expr_stmt pos:start="65:9" pos:end="65:73"><expr pos:start="65:9" pos:end="65:72"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:21">bytestream</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:40"><name pos:start="65:25" pos:end="65:29">avctx</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:40">extradata</name></name> <operator pos:start="65:42" pos:end="65:42">=</operator> <call pos:start="65:44" pos:end="65:72"><name pos:start="65:44" pos:end="65:52">av_malloc</name><argument_list pos:start="65:53" pos:end="65:72">(<argument pos:start="65:54" pos:end="65:71"><expr pos:start="65:54" pos:end="65:71"><name pos:start="65:54" pos:end="65:71">FF_MIN_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:35"><if pos:start="67:9" pos:end="69:35">if <condition pos:start="67:12" pos:end="67:30">(<expr pos:start="67:13" pos:end="67:29"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:29"><name pos:start="67:14" pos:end="67:18">avctx</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:29">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:35"><block_content pos:start="69:13" pos:end="69:35">

            <return pos:start="69:13" pos:end="69:35">return <expr pos:start="69:20" pos:end="69:34"><call pos:start="69:20" pos:end="69:34"><name pos:start="69:20" pos:end="69:26">AVERROR</name><argument_list pos:start="69:27" pos:end="69:34">(<argument pos:start="69:28" pos:end="69:33"><expr pos:start="69:28" pos:end="69:33"><name pos:start="69:28" pos:end="69:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:42"><expr pos:start="73:9" pos:end="73:41"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:41"><name pos:start="73:15" pos:end="73:28">encode_headers</name><argument_list pos:start="73:29" pos:end="73:41">(<argument pos:start="73:30" pos:end="73:34"><expr pos:start="73:30" pos:end="73:34"><name pos:start="73:30" pos:end="73:34">avctx</name></expr></argument>, <argument pos:start="73:37" pos:end="73:40"><expr pos:start="73:37" pos:end="73:40"><name pos:start="73:37" pos:end="73:40">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="77:23"><if pos:start="75:9" pos:end="77:23">if <condition pos:start="75:12" pos:end="75:20">(<expr pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">&lt;</operator> <literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:23"><block_content pos:start="77:13" pos:end="77:23">

            <return pos:start="77:13" pos:end="77:23">return <expr pos:start="77:20" pos:end="77:22"><name pos:start="77:20" pos:end="77:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:65"><expr pos:start="81:9" pos:end="81:64"><name pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:13">avctx</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:29">extradata_size</name></name> <operator pos:start="81:31" pos:end="81:31">=</operator> <name pos:start="81:33" pos:end="81:45"><name pos:start="81:33" pos:end="81:33">s</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:45">bytestream</name></name> <operator pos:start="81:47" pos:end="81:47">-</operator> <name pos:start="81:49" pos:end="81:64"><name pos:start="81:49" pos:end="81:53">avctx</name><operator pos:start="81:54" pos:end="81:55">-&gt;</operator><name pos:start="81:56" pos:end="81:64">extradata</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:58"><expr pos:start="85:9" pos:end="85:57"><name pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:28">last_frame_packet</name></name> <operator pos:start="85:30" pos:end="85:30">=</operator> <call pos:start="85:32" pos:end="85:57"><name pos:start="85:32" pos:end="85:40">av_malloc</name><argument_list pos:start="85:41" pos:end="85:57">(<argument pos:start="85:42" pos:end="85:56"><expr pos:start="85:42" pos:end="85:56"><name pos:start="85:42" pos:end="85:56">max_packet_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="89:35"><if pos:start="87:9" pos:end="89:35">if <condition pos:start="87:12" pos:end="87:34">(<expr pos:start="87:13" pos:end="87:33"><operator pos:start="87:13" pos:end="87:13">!</operator><name pos:start="87:14" pos:end="87:33"><name pos:start="87:14" pos:end="87:14">s</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:33">last_frame_packet</name></name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:35"><block_content pos:start="89:13" pos:end="89:35">

            <return pos:start="89:13" pos:end="89:35">return <expr pos:start="89:20" pos:end="89:34"><call pos:start="89:20" pos:end="89:34"><name pos:start="89:20" pos:end="89:26">AVERROR</name><argument_list pos:start="89:27" pos:end="89:34">(<argument pos:start="89:28" pos:end="89:33"><expr pos:start="89:28" pos:end="89:33"><name pos:start="89:28" pos:end="89:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="91:7" pos:end="107:5">else if <condition pos:start="91:15" pos:end="91:29">(<expr pos:start="91:16" pos:end="91:28"><name pos:start="91:16" pos:end="91:28"><name pos:start="91:16" pos:end="91:16">s</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:28">last_frame</name></name></expr>)</condition> <block pos:start="91:31" pos:end="107:5">{<block_content pos:start="93:9" pos:end="105:49">

        <expr_stmt pos:start="93:9" pos:end="93:63"><expr pos:start="93:9" pos:end="93:62"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:62"><name pos:start="93:15" pos:end="93:30">ff_alloc_packet2</name><argument_list pos:start="93:31" pos:end="93:62">(<argument pos:start="93:32" pos:end="93:36"><expr pos:start="93:32" pos:end="93:36"><name pos:start="93:32" pos:end="93:36">avctx</name></expr></argument>, <argument pos:start="93:39" pos:end="93:41"><expr pos:start="93:39" pos:end="93:41"><name pos:start="93:39" pos:end="93:41">pkt</name></expr></argument>, <argument pos:start="93:44" pos:end="93:58"><expr pos:start="93:44" pos:end="93:58"><name pos:start="93:44" pos:end="93:58">max_packet_size</name></expr></argument>, <argument pos:start="93:61" pos:end="93:61"><expr pos:start="93:61" pos:end="93:61"><literal type="number" pos:start="93:61" pos:end="93:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="97:23"><if pos:start="95:9" pos:end="97:23">if <condition pos:start="95:12" pos:end="95:20">(<expr pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">&lt;</operator> <literal type="number" pos:start="95:19" pos:end="95:19">0</literal></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:23"><block_content pos:start="97:13" pos:end="97:23">

            <return pos:start="97:13" pos:end="97:23">return <expr pos:start="97:20" pos:end="97:22"><name pos:start="97:20" pos:end="97:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:75"><expr pos:start="101:9" pos:end="101:74"><call pos:start="101:9" pos:end="101:74"><name pos:start="101:9" pos:end="101:14">memcpy</name><argument_list pos:start="101:15" pos:end="101:74">(<argument pos:start="101:16" pos:end="101:24"><expr pos:start="101:16" pos:end="101:24"><name pos:start="101:16" pos:end="101:24"><name pos:start="101:16" pos:end="101:18">pkt</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:24">data</name></name></expr></argument>, <argument pos:start="101:27" pos:end="101:46"><expr pos:start="101:27" pos:end="101:46"><name pos:start="101:27" pos:end="101:46"><name pos:start="101:27" pos:end="101:27">s</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:46">last_frame_packet</name></name></expr></argument>, <argument pos:start="101:49" pos:end="101:73"><expr pos:start="101:49" pos:end="101:73"><name pos:start="101:49" pos:end="101:73"><name pos:start="101:49" pos:end="101:49">s</name><operator pos:start="101:50" pos:end="101:51">-&gt;</operator><name pos:start="101:52" pos:end="101:73">last_frame_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:46"><expr pos:start="103:9" pos:end="103:45"><name pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:11">pkt</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:17">size</name></name> <operator pos:start="103:19" pos:end="103:19">=</operator> <name pos:start="103:21" pos:end="103:45"><name pos:start="103:21" pos:end="103:21">s</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:45">last_frame_packet_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:49"><expr pos:start="105:9" pos:end="105:48"><name pos:start="105:9" pos:end="105:16"><name pos:start="105:9" pos:end="105:11">pkt</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:16">pts</name></name> <operator pos:start="105:18" pos:end="105:18">=</operator> <name pos:start="105:20" pos:end="105:27"><name pos:start="105:20" pos:end="105:22">pkt</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:27">dts</name></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <name pos:start="105:31" pos:end="105:48"><name pos:start="105:31" pos:end="105:31">s</name><operator pos:start="105:32" pos:end="105:33">-&gt;</operator><name pos:start="105:34" pos:end="105:43">last_frame</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:48">pts</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="149:5"><if pos:start="111:5" pos:end="145:5">if <condition pos:start="111:8" pos:end="111:13">(<expr pos:start="111:9" pos:end="111:12"><name pos:start="111:9" pos:end="111:12">pict</name></expr>)</condition> <block pos:start="111:15" pos:end="145:5">{<block_content pos:start="113:9" pos:end="143:33">

        <expr_stmt pos:start="113:9" pos:end="115:51"><expr pos:start="113:9" pos:end="115:50"><name pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:27">bytestream_start</name></name> <operator pos:start="113:29" pos:end="113:29">=</operator>

        <name pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:21">bytestream</name></name>       <operator pos:start="115:29" pos:end="115:29">=</operator> <name pos:start="115:31" pos:end="115:50"><name pos:start="115:31" pos:end="115:31">s</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:50">last_frame_packet</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:62"><expr pos:start="117:9" pos:end="117:61"><name pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:25">bytestream_end</name></name>   <operator pos:start="117:29" pos:end="117:29">=</operator> <name pos:start="117:31" pos:end="117:43"><name pos:start="117:31" pos:end="117:31">s</name><operator pos:start="117:32" pos:end="117:33">-&gt;</operator><name pos:start="117:34" pos:end="117:43">bytestream</name></name> <operator pos:start="117:45" pos:end="117:45">+</operator> <name pos:start="117:47" pos:end="117:61">max_packet_size</name></expr>;</expr_stmt>



        <comment type="line" pos:start="121:9" pos:end="121:85">// We're encoding the frame first, so we have to do a bit of shuffling around</comment>

        <comment type="line" pos:start="123:9" pos:end="123:74">// to have the image data write to the correct place in the buffer</comment>

        <expr_stmt pos:start="125:9" pos:end="125:56"><expr pos:start="125:9" pos:end="125:55"><name pos:start="125:9" pos:end="125:34"><name pos:start="125:9" pos:end="125:18">fctl_chunk</name><operator pos:start="125:19" pos:end="125:19">.</operator><name pos:start="125:20" pos:end="125:34">sequence_number</name></name> <operator pos:start="125:36" pos:end="125:36">=</operator> <name pos:start="125:38" pos:end="125:55"><name pos:start="125:38" pos:end="125:38">s</name><operator pos:start="125:39" pos:end="125:40">-&gt;</operator><name pos:start="125:41" pos:end="125:55">sequence_number</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:29"><expr pos:start="127:9" pos:end="127:28"><operator pos:start="127:9" pos:end="127:10">++</operator><name pos:start="127:11" pos:end="127:28"><name pos:start="127:11" pos:end="127:11">s</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:28">sequence_number</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:33"><expr pos:start="129:9" pos:end="129:32"><name pos:start="129:9" pos:end="129:21"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:21">bytestream</name></name> <operator pos:start="129:23" pos:end="129:24">+=</operator> <literal type="number" pos:start="129:26" pos:end="129:29">26</literal> <operator pos:start="129:29" pos:end="129:29">+</operator> <literal type="number" pos:start="129:31" pos:end="129:32">12</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:79"><expr pos:start="133:9" pos:end="133:78"><name pos:start="133:9" pos:end="133:11">ret</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <call pos:start="133:15" pos:end="133:78"><name pos:start="133:15" pos:end="133:31">apng_encode_frame</name><argument_list pos:start="133:32" pos:end="133:78">(<argument pos:start="133:33" pos:end="133:37"><expr pos:start="133:33" pos:end="133:37"><name pos:start="133:33" pos:end="133:37">avctx</name></expr></argument>, <argument pos:start="133:40" pos:end="133:43"><expr pos:start="133:40" pos:end="133:43"><name pos:start="133:40" pos:end="133:43">pict</name></expr></argument>, <argument pos:start="133:46" pos:end="133:56"><expr pos:start="133:46" pos:end="133:56"><operator pos:start="133:46" pos:end="133:46">&amp;</operator><name pos:start="133:47" pos:end="133:56">fctl_chunk</name></expr></argument>, <argument pos:start="133:59" pos:end="133:77"><expr pos:start="133:59" pos:end="133:77"><operator pos:start="133:59" pos:end="133:59">&amp;</operator><name pos:start="133:60" pos:end="133:77"><name pos:start="133:60" pos:end="133:60">s</name><operator pos:start="133:61" pos:end="133:62">-&gt;</operator><name pos:start="133:63" pos:end="133:77">last_frame_fctl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="137:23"><if pos:start="135:9" pos:end="137:23">if <condition pos:start="135:12" pos:end="135:20">(<expr pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:15">ret</name> <operator pos:start="135:17" pos:end="135:17">&lt;</operator> <literal type="number" pos:start="135:19" pos:end="135:19">0</literal></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:23"><block_content pos:start="137:13" pos:end="137:23">

            <return pos:start="137:13" pos:end="137:23">return <expr pos:start="137:20" pos:end="137:22"><name pos:start="137:20" pos:end="137:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="141:9" pos:end="141:33"><expr pos:start="141:9" pos:end="141:32"><name pos:start="141:9" pos:end="141:28"><name pos:start="141:9" pos:end="141:18">fctl_chunk</name><operator pos:start="141:19" pos:end="141:19">.</operator><name pos:start="141:20" pos:end="141:28">delay_num</name></name> <operator pos:start="141:30" pos:end="141:30">=</operator> <literal type="number" pos:start="141:32" pos:end="141:32">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="141:35" pos:end="141:66">// delay filled in during muxing</comment>

        <expr_stmt pos:start="143:9" pos:end="143:33"><expr pos:start="143:9" pos:end="143:32"><name pos:start="143:9" pos:end="143:28"><name pos:start="143:9" pos:end="143:18">fctl_chunk</name><operator pos:start="143:19" pos:end="143:19">.</operator><name pos:start="143:20" pos:end="143:28">delay_den</name></name> <operator pos:start="143:30" pos:end="143:30">=</operator> <literal type="number" pos:start="143:32" pos:end="143:32">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="145:7" pos:end="149:5">else <block pos:start="145:12" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:61">

        <expr_stmt pos:start="147:9" pos:end="147:61"><expr pos:start="147:9" pos:end="147:60"><name pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:26">last_frame_fctl</name><operator pos:start="147:27" pos:end="147:27">.</operator><name pos:start="147:28" pos:end="147:37">dispose_op</name></name> <operator pos:start="147:39" pos:end="147:39">=</operator> <name pos:start="147:41" pos:end="147:60">APNG_DISPOSE_OP_NONE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="153:5" pos:end="185:5"><if pos:start="153:5" pos:end="185:5">if <condition pos:start="153:8" pos:end="153:22">(<expr pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:21">last_frame</name></name></expr>)</condition> <block pos:start="153:24" pos:end="185:5">{<block_content pos:start="155:9" pos:end="183:24">

        <decl_stmt pos:start="155:9" pos:end="155:51"><decl pos:start="155:9" pos:end="155:50"><type pos:start="155:9" pos:end="155:16"><name pos:start="155:9" pos:end="155:15">uint8_t</name><modifier pos:start="155:16" pos:end="155:16">*</modifier></type> <name pos:start="155:18" pos:end="155:38">last_fctl_chunk_start</name> <init pos:start="155:40" pos:end="155:50">= <expr pos:start="155:42" pos:end="155:50"><name pos:start="155:42" pos:end="155:50"><name pos:start="155:42" pos:end="155:44">pkt</name><operator pos:start="155:45" pos:end="155:46">-&gt;</operator><name pos:start="155:47" pos:end="155:50">data</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="157:9" pos:end="157:24"><decl pos:start="157:9" pos:end="157:23"><type pos:start="157:9" pos:end="157:15"><name pos:start="157:9" pos:end="157:15">uint8_t</name></type> <name pos:start="157:17" pos:end="157:23"><name pos:start="157:17" pos:end="157:19">buf</name><index pos:start="157:20" pos:end="157:23">[<expr pos:start="157:21" pos:end="157:22"><literal type="number" pos:start="157:21" pos:end="157:22">26</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:61"><expr pos:start="161:9" pos:end="161:60"><call pos:start="161:9" pos:end="161:60"><name pos:start="161:9" pos:end="161:15">AV_WB32</name><argument_list pos:start="161:16" pos:end="161:60">(<argument pos:start="161:17" pos:end="161:23"><expr pos:start="161:17" pos:end="161:23"><name pos:start="161:17" pos:end="161:19">buf</name> <operator pos:start="161:21" pos:end="161:21">+</operator> <literal type="number" pos:start="161:23" pos:end="161:23">0</literal></expr></argument>, <argument pos:start="161:26" pos:end="161:59"><expr pos:start="161:26" pos:end="161:59"><name pos:start="161:26" pos:end="161:59"><name pos:start="161:26" pos:end="161:26">s</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:43">last_frame_fctl</name><operator pos:start="161:44" pos:end="161:44">.</operator><name pos:start="161:45" pos:end="161:59">sequence_number</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:51"><expr pos:start="163:9" pos:end="163:50"><call pos:start="163:9" pos:end="163:50"><name pos:start="163:9" pos:end="163:15">AV_WB32</name><argument_list pos:start="163:16" pos:end="163:50">(<argument pos:start="163:17" pos:end="163:23"><expr pos:start="163:17" pos:end="163:23"><name pos:start="163:17" pos:end="163:19">buf</name> <operator pos:start="163:21" pos:end="163:21">+</operator> <literal type="number" pos:start="163:23" pos:end="163:23">4</literal></expr></argument>, <argument pos:start="163:26" pos:end="163:49"><expr pos:start="163:26" pos:end="163:49"><name pos:start="163:26" pos:end="163:49"><name pos:start="163:26" pos:end="163:26">s</name><operator pos:start="163:27" pos:end="163:28">-&gt;</operator><name pos:start="163:29" pos:end="163:43">last_frame_fctl</name><operator pos:start="163:44" pos:end="163:44">.</operator><name pos:start="163:45" pos:end="163:49">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:52"><expr pos:start="165:9" pos:end="165:51"><call pos:start="165:9" pos:end="165:51"><name pos:start="165:9" pos:end="165:15">AV_WB32</name><argument_list pos:start="165:16" pos:end="165:51">(<argument pos:start="165:17" pos:end="165:23"><expr pos:start="165:17" pos:end="165:23"><name pos:start="165:17" pos:end="165:19">buf</name> <operator pos:start="165:21" pos:end="165:21">+</operator> <literal type="number" pos:start="165:23" pos:end="165:23">8</literal></expr></argument>, <argument pos:start="165:26" pos:end="165:50"><expr pos:start="165:26" pos:end="165:50"><name pos:start="165:26" pos:end="165:50"><name pos:start="165:26" pos:end="165:26">s</name><operator pos:start="165:27" pos:end="165:28">-&gt;</operator><name pos:start="165:29" pos:end="165:43">last_frame_fctl</name><operator pos:start="165:44" pos:end="165:44">.</operator><name pos:start="165:45" pos:end="165:50">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:55"><expr pos:start="167:9" pos:end="167:54"><call pos:start="167:9" pos:end="167:54"><name pos:start="167:9" pos:end="167:15">AV_WB32</name><argument_list pos:start="167:16" pos:end="167:54">(<argument pos:start="167:17" pos:end="167:24"><expr pos:start="167:17" pos:end="167:24"><name pos:start="167:17" pos:end="167:19">buf</name> <operator pos:start="167:21" pos:end="167:21">+</operator> <literal type="number" pos:start="167:23" pos:end="167:24">12</literal></expr></argument>, <argument pos:start="167:27" pos:end="167:53"><expr pos:start="167:27" pos:end="167:53"><name pos:start="167:27" pos:end="167:53"><name pos:start="167:27" pos:end="167:27">s</name><operator pos:start="167:28" pos:end="167:29">-&gt;</operator><name pos:start="167:30" pos:end="167:44">last_frame_fctl</name><operator pos:start="167:45" pos:end="167:45">.</operator><name pos:start="167:46" pos:end="167:53">x_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:55"><expr pos:start="169:9" pos:end="169:54"><call pos:start="169:9" pos:end="169:54"><name pos:start="169:9" pos:end="169:15">AV_WB32</name><argument_list pos:start="169:16" pos:end="169:54">(<argument pos:start="169:17" pos:end="169:24"><expr pos:start="169:17" pos:end="169:24"><name pos:start="169:17" pos:end="169:19">buf</name> <operator pos:start="169:21" pos:end="169:21">+</operator> <literal type="number" pos:start="169:23" pos:end="169:24">16</literal></expr></argument>, <argument pos:start="169:27" pos:end="169:53"><expr pos:start="169:27" pos:end="169:53"><name pos:start="169:27" pos:end="169:53"><name pos:start="169:27" pos:end="169:27">s</name><operator pos:start="169:28" pos:end="169:29">-&gt;</operator><name pos:start="169:30" pos:end="169:44">last_frame_fctl</name><operator pos:start="169:45" pos:end="169:45">.</operator><name pos:start="169:46" pos:end="169:53">y_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:56"><expr pos:start="171:9" pos:end="171:55"><call pos:start="171:9" pos:end="171:55"><name pos:start="171:9" pos:end="171:15">AV_WB16</name><argument_list pos:start="171:16" pos:end="171:55">(<argument pos:start="171:17" pos:end="171:24"><expr pos:start="171:17" pos:end="171:24"><name pos:start="171:17" pos:end="171:19">buf</name> <operator pos:start="171:21" pos:end="171:21">+</operator> <literal type="number" pos:start="171:23" pos:end="171:24">20</literal></expr></argument>, <argument pos:start="171:27" pos:end="171:54"><expr pos:start="171:27" pos:end="171:54"><name pos:start="171:27" pos:end="171:54"><name pos:start="171:27" pos:end="171:27">s</name><operator pos:start="171:28" pos:end="171:29">-&gt;</operator><name pos:start="171:30" pos:end="171:44">last_frame_fctl</name><operator pos:start="171:45" pos:end="171:45">.</operator><name pos:start="171:46" pos:end="171:54">delay_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:56"><expr pos:start="173:9" pos:end="173:55"><call pos:start="173:9" pos:end="173:55"><name pos:start="173:9" pos:end="173:15">AV_WB16</name><argument_list pos:start="173:16" pos:end="173:55">(<argument pos:start="173:17" pos:end="173:24"><expr pos:start="173:17" pos:end="173:24"><name pos:start="173:17" pos:end="173:19">buf</name> <operator pos:start="173:21" pos:end="173:21">+</operator> <literal type="number" pos:start="173:23" pos:end="173:24">22</literal></expr></argument>, <argument pos:start="173:27" pos:end="173:54"><expr pos:start="173:27" pos:end="173:54"><name pos:start="173:27" pos:end="173:54"><name pos:start="173:27" pos:end="173:27">s</name><operator pos:start="173:28" pos:end="173:29">-&gt;</operator><name pos:start="173:30" pos:end="173:44">last_frame_fctl</name><operator pos:start="173:45" pos:end="173:45">.</operator><name pos:start="173:46" pos:end="173:54">delay_den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:48"><expr pos:start="175:9" pos:end="175:47"><name pos:start="175:9" pos:end="175:15"><name pos:start="175:9" pos:end="175:11">buf</name><index pos:start="175:12" pos:end="175:15">[<expr pos:start="175:13" pos:end="175:14"><literal type="number" pos:start="175:13" pos:end="175:14">24</literal></expr>]</index></name> <operator pos:start="175:17" pos:end="175:17">=</operator> <name pos:start="175:19" pos:end="175:47"><name pos:start="175:19" pos:end="175:19">s</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:36">last_frame_fctl</name><operator pos:start="175:37" pos:end="175:37">.</operator><name pos:start="175:38" pos:end="175:47">dispose_op</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:46"><expr pos:start="177:9" pos:end="177:45"><name pos:start="177:9" pos:end="177:15"><name pos:start="177:9" pos:end="177:11">buf</name><index pos:start="177:12" pos:end="177:15">[<expr pos:start="177:13" pos:end="177:14"><literal type="number" pos:start="177:13" pos:end="177:14">25</literal></expr>]</index></name> <operator pos:start="177:17" pos:end="177:17">=</operator> <name pos:start="177:19" pos:end="177:45"><name pos:start="177:19" pos:end="177:19">s</name><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:36">last_frame_fctl</name><operator pos:start="177:37" pos:end="177:37">.</operator><name pos:start="177:38" pos:end="177:45">blend_op</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:84"><expr pos:start="179:9" pos:end="179:83"><call pos:start="179:9" pos:end="179:83"><name pos:start="179:9" pos:end="179:23">png_write_chunk</name><argument_list pos:start="179:24" pos:end="179:83">(<argument pos:start="179:25" pos:end="179:46"><expr pos:start="179:25" pos:end="179:46"><operator pos:start="179:25" pos:end="179:25">&amp;</operator><name pos:start="179:26" pos:end="179:46">last_fctl_chunk_start</name></expr></argument>, <argument pos:start="179:49" pos:end="179:73"><expr pos:start="179:49" pos:end="179:73"><call pos:start="179:49" pos:end="179:73"><name pos:start="179:49" pos:end="179:53">MKTAG</name><argument_list pos:start="179:54" pos:end="179:73">(<argument pos:start="179:55" pos:end="179:57"><expr pos:start="179:55" pos:end="179:57"><literal type="char" pos:start="179:55" pos:end="179:57">'f'</literal></expr></argument>, <argument pos:start="179:60" pos:end="179:62"><expr pos:start="179:60" pos:end="179:62"><literal type="char" pos:start="179:60" pos:end="179:62">'c'</literal></expr></argument>, <argument pos:start="179:65" pos:end="179:67"><expr pos:start="179:65" pos:end="179:67"><literal type="char" pos:start="179:65" pos:end="179:67">'T'</literal></expr></argument>, <argument pos:start="179:70" pos:end="179:72"><expr pos:start="179:70" pos:end="179:72"><literal type="char" pos:start="179:70" pos:end="179:72">'L'</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="179:76" pos:end="179:78"><expr pos:start="179:76" pos:end="179:78"><name pos:start="179:76" pos:end="179:78">buf</name></expr></argument>, <argument pos:start="179:81" pos:end="179:82"><expr pos:start="179:81" pos:end="179:82"><literal type="number" pos:start="179:81" pos:end="179:82">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="183:9" pos:end="183:24"><expr pos:start="183:9" pos:end="183:23"><operator pos:start="183:9" pos:end="183:9">*</operator><name pos:start="183:10" pos:end="183:19">got_packet</name> <operator pos:start="183:21" pos:end="183:21">=</operator> <literal type="number" pos:start="183:23" pos:end="183:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="189:5" pos:end="269:5"><if pos:start="189:5" pos:end="265:5">if <condition pos:start="189:8" pos:end="189:13">(<expr pos:start="189:9" pos:end="189:12"><name pos:start="189:9" pos:end="189:12">pict</name></expr>)</condition> <block pos:start="189:15" pos:end="265:5">{<block_content pos:start="191:9" pos:end="263:72">

        <if_stmt pos:start="191:9" pos:end="247:9"><if pos:start="191:9" pos:end="199:9">if <condition pos:start="191:12" pos:end="191:27">(<expr pos:start="191:13" pos:end="191:26"><operator pos:start="191:13" pos:end="191:13">!</operator><name pos:start="191:14" pos:end="191:26"><name pos:start="191:14" pos:end="191:14">s</name><operator pos:start="191:15" pos:end="191:16">-&gt;</operator><name pos:start="191:17" pos:end="191:26">last_frame</name></name></expr>)</condition> <block pos:start="191:29" pos:end="199:9">{<block_content pos:start="193:13" pos:end="197:39">

            <expr_stmt pos:start="193:13" pos:end="193:45"><expr pos:start="193:13" pos:end="193:44"><name pos:start="193:13" pos:end="193:25"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:25">last_frame</name></name> <operator pos:start="193:27" pos:end="193:27">=</operator> <call pos:start="193:29" pos:end="193:44"><name pos:start="193:29" pos:end="193:42">av_frame_alloc</name><argument_list pos:start="193:43" pos:end="193:44">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="197:39"><if pos:start="195:13" pos:end="197:39">if <condition pos:start="195:16" pos:end="195:31">(<expr pos:start="195:17" pos:end="195:30"><operator pos:start="195:17" pos:end="195:17">!</operator><name pos:start="195:18" pos:end="195:30"><name pos:start="195:18" pos:end="195:18">s</name><operator pos:start="195:19" pos:end="195:20">-&gt;</operator><name pos:start="195:21" pos:end="195:30">last_frame</name></name></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:39"><block_content pos:start="197:17" pos:end="197:39">

                <return pos:start="197:17" pos:end="197:39">return <expr pos:start="197:24" pos:end="197:38"><call pos:start="197:24" pos:end="197:38"><name pos:start="197:24" pos:end="197:30">AVERROR</name><argument_list pos:start="197:31" pos:end="197:38">(<argument pos:start="197:32" pos:end="197:37"><expr pos:start="197:32" pos:end="197:37"><name pos:start="197:32" pos:end="197:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="199:11" pos:end="247:9">else if <condition pos:start="199:19" pos:end="199:77">(<expr pos:start="199:20" pos:end="199:76"><name pos:start="199:20" pos:end="199:48"><name pos:start="199:20" pos:end="199:20">s</name><operator pos:start="199:21" pos:end="199:22">-&gt;</operator><name pos:start="199:23" pos:end="199:37">last_frame_fctl</name><operator pos:start="199:38" pos:end="199:38">.</operator><name pos:start="199:39" pos:end="199:48">dispose_op</name></name> <operator pos:start="199:50" pos:end="199:51">!=</operator> <name pos:start="199:53" pos:end="199:76">APNG_DISPOSE_OP_PREVIOUS</name></expr>)</condition> <block pos:start="199:79" pos:end="247:9">{<block_content pos:start="201:13" pos:end="245:13">

            <if_stmt pos:start="201:13" pos:end="221:13"><if pos:start="201:13" pos:end="221:13">if <condition pos:start="201:16" pos:end="201:31">(<expr pos:start="201:17" pos:end="201:30"><operator pos:start="201:17" pos:end="201:17">!</operator><name pos:start="201:18" pos:end="201:30"><name pos:start="201:18" pos:end="201:18">s</name><operator pos:start="201:19" pos:end="201:20">-&gt;</operator><name pos:start="201:21" pos:end="201:30">prev_frame</name></name></expr>)</condition> <block pos:start="201:33" pos:end="221:13">{<block_content pos:start="203:17" pos:end="219:31">

                <expr_stmt pos:start="203:17" pos:end="203:49"><expr pos:start="203:17" pos:end="203:48"><name pos:start="203:17" pos:end="203:29"><name pos:start="203:17" pos:end="203:17">s</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:29">prev_frame</name></name> <operator pos:start="203:31" pos:end="203:31">=</operator> <call pos:start="203:33" pos:end="203:48"><name pos:start="203:33" pos:end="203:46">av_frame_alloc</name><argument_list pos:start="203:47" pos:end="203:48">()</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="205:17" pos:end="207:43"><if pos:start="205:17" pos:end="207:43">if <condition pos:start="205:20" pos:end="205:35">(<expr pos:start="205:21" pos:end="205:34"><operator pos:start="205:21" pos:end="205:21">!</operator><name pos:start="205:22" pos:end="205:34"><name pos:start="205:22" pos:end="205:22">s</name><operator pos:start="205:23" pos:end="205:24">-&gt;</operator><name pos:start="205:25" pos:end="205:34">prev_frame</name></name></expr>)</condition><block type="pseudo" pos:start="207:21" pos:end="207:43"><block_content pos:start="207:21" pos:end="207:43">

                    <return pos:start="207:21" pos:end="207:43">return <expr pos:start="207:28" pos:end="207:42"><call pos:start="207:28" pos:end="207:42"><name pos:start="207:28" pos:end="207:34">AVERROR</name><argument_list pos:start="207:35" pos:end="207:42">(<argument pos:start="207:36" pos:end="207:41"><expr pos:start="207:36" pos:end="207:41"><name pos:start="207:36" pos:end="207:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="211:17" pos:end="211:53"><expr pos:start="211:17" pos:end="211:52"><name pos:start="211:17" pos:end="211:37"><name pos:start="211:17" pos:end="211:17">s</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:29">prev_frame</name><operator pos:start="211:30" pos:end="211:31">-&gt;</operator><name pos:start="211:32" pos:end="211:37">format</name></name> <operator pos:start="211:39" pos:end="211:39">=</operator> <name pos:start="211:41" pos:end="211:52"><name pos:start="211:41" pos:end="211:44">pict</name><operator pos:start="211:45" pos:end="211:46">-&gt;</operator><name pos:start="211:47" pos:end="211:52">format</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:51"><expr pos:start="213:17" pos:end="213:50"><name pos:start="213:17" pos:end="213:36"><name pos:start="213:17" pos:end="213:17">s</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:29">prev_frame</name><operator pos:start="213:30" pos:end="213:31">-&gt;</operator><name pos:start="213:32" pos:end="213:36">width</name></name> <operator pos:start="213:38" pos:end="213:38">=</operator> <name pos:start="213:40" pos:end="213:50"><name pos:start="213:40" pos:end="213:43">pict</name><operator pos:start="213:44" pos:end="213:45">-&gt;</operator><name pos:start="213:46" pos:end="213:50">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:53"><expr pos:start="215:17" pos:end="215:52"><name pos:start="215:17" pos:end="215:37"><name pos:start="215:17" pos:end="215:17">s</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:29">prev_frame</name><operator pos:start="215:30" pos:end="215:31">-&gt;</operator><name pos:start="215:32" pos:end="215:37">height</name></name> <operator pos:start="215:39" pos:end="215:39">=</operator> <name pos:start="215:41" pos:end="215:52"><name pos:start="215:41" pos:end="215:44">pict</name><operator pos:start="215:45" pos:end="215:46">-&gt;</operator><name pos:start="215:47" pos:end="215:52">height</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="217:17" pos:end="219:31"><if pos:start="217:17" pos:end="219:31">if <condition pos:start="217:20" pos:end="217:71">(<expr pos:start="217:21" pos:end="217:70"><operator pos:start="217:21" pos:end="217:21">(</operator><name pos:start="217:22" pos:end="217:24">ret</name> <operator pos:start="217:26" pos:end="217:26">=</operator> <call pos:start="217:28" pos:end="217:65"><name pos:start="217:28" pos:end="217:46">av_frame_get_buffer</name><argument_list pos:start="217:47" pos:end="217:65">(<argument pos:start="217:48" pos:end="217:60"><expr pos:start="217:48" pos:end="217:60"><name pos:start="217:48" pos:end="217:60"><name pos:start="217:48" pos:end="217:48">s</name><operator pos:start="217:49" pos:end="217:50">-&gt;</operator><name pos:start="217:51" pos:end="217:60">prev_frame</name></name></expr></argument>, <argument pos:start="217:63" pos:end="217:64"><expr pos:start="217:63" pos:end="217:64"><literal type="number" pos:start="217:63" pos:end="217:64">32</literal></expr></argument>)</argument_list></call><operator pos:start="217:66" pos:end="217:66">)</operator> <operator pos:start="217:68" pos:end="217:68">&lt;</operator> <literal type="number" pos:start="217:70" pos:end="217:70">0</literal></expr>)</condition><block type="pseudo" pos:start="219:21" pos:end="219:31"><block_content pos:start="219:21" pos:end="219:31">

                    <return pos:start="219:21" pos:end="219:31">return <expr pos:start="219:28" pos:end="219:30"><name pos:start="219:28" pos:end="219:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="line" pos:start="225:13" pos:end="225:44">// Do disposal, but not blending</comment>

            <expr_stmt pos:start="227:13" pos:end="229:71"><expr pos:start="227:13" pos:end="229:70"><call pos:start="227:13" pos:end="229:70"><name pos:start="227:13" pos:end="227:18">memcpy</name><argument_list pos:start="227:19" pos:end="229:70">(<argument pos:start="227:20" pos:end="227:41"><expr pos:start="227:20" pos:end="227:41"><name pos:start="227:20" pos:end="227:41"><name pos:start="227:20" pos:end="227:20">s</name><operator pos:start="227:21" pos:end="227:22">-&gt;</operator><name pos:start="227:23" pos:end="227:32">prev_frame</name><operator pos:start="227:33" pos:end="227:34">-&gt;</operator><name pos:start="227:35" pos:end="227:38">data</name><index pos:start="227:39" pos:end="227:41">[<expr pos:start="227:40" pos:end="227:40"><literal type="number" pos:start="227:40" pos:end="227:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="227:44" pos:end="227:65"><expr pos:start="227:44" pos:end="227:65"><name pos:start="227:44" pos:end="227:65"><name pos:start="227:44" pos:end="227:44">s</name><operator pos:start="227:45" pos:end="227:46">-&gt;</operator><name pos:start="227:47" pos:end="227:56">last_frame</name><operator pos:start="227:57" pos:end="227:58">-&gt;</operator><name pos:start="227:59" pos:end="227:62">data</name><index pos:start="227:63" pos:end="227:65">[<expr pos:start="227:64" pos:end="227:64"><literal type="number" pos:start="227:64" pos:end="227:64">0</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="229:20" pos:end="229:69"><expr pos:start="229:20" pos:end="229:69"><name pos:start="229:20" pos:end="229:45"><name pos:start="229:20" pos:end="229:20">s</name><operator pos:start="229:21" pos:end="229:22">-&gt;</operator><name pos:start="229:23" pos:end="229:32">last_frame</name><operator pos:start="229:33" pos:end="229:34">-&gt;</operator><name pos:start="229:35" pos:end="229:42">linesize</name><index pos:start="229:43" pos:end="229:45">[<expr pos:start="229:44" pos:end="229:44"><literal type="number" pos:start="229:44" pos:end="229:44">0</literal></expr>]</index></name> <operator pos:start="229:47" pos:end="229:47">*</operator> <name pos:start="229:49" pos:end="229:69"><name pos:start="229:49" pos:end="229:49">s</name><operator pos:start="229:50" pos:end="229:51">-&gt;</operator><name pos:start="229:52" pos:end="229:61">last_frame</name><operator pos:start="229:62" pos:end="229:63">-&gt;</operator><name pos:start="229:64" pos:end="229:69">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="231:13" pos:end="245:13"><if pos:start="231:13" pos:end="245:13">if <condition pos:start="231:16" pos:end="231:76">(<expr pos:start="231:17" pos:end="231:75"><name pos:start="231:17" pos:end="231:45"><name pos:start="231:17" pos:end="231:17">s</name><operator pos:start="231:18" pos:end="231:19">-&gt;</operator><name pos:start="231:20" pos:end="231:34">last_frame_fctl</name><operator pos:start="231:35" pos:end="231:35">.</operator><name pos:start="231:36" pos:end="231:45">dispose_op</name></name> <operator pos:start="231:47" pos:end="231:48">==</operator> <name pos:start="231:50" pos:end="231:75">APNG_DISPOSE_OP_BACKGROUND</name></expr>)</condition> <block pos:start="231:78" pos:end="245:13">{<block_content pos:start="233:17" pos:end="243:17">

                <decl_stmt pos:start="233:17" pos:end="233:27"><decl pos:start="233:17" pos:end="233:26"><type pos:start="233:17" pos:end="233:24"><name pos:start="233:17" pos:end="233:24">uint32_t</name></type> <name pos:start="233:26" pos:end="233:26">y</name></decl>;</decl_stmt>

                <decl_stmt pos:start="235:17" pos:end="235:59"><decl pos:start="235:17" pos:end="235:58"><type pos:start="235:17" pos:end="235:23"><name pos:start="235:17" pos:end="235:23">uint8_t</name></type> <name pos:start="235:25" pos:end="235:27">bpp</name> <init pos:start="235:29" pos:end="235:58">= <expr pos:start="235:31" pos:end="235:58"><operator pos:start="235:31" pos:end="235:31">(</operator><name pos:start="235:32" pos:end="235:48"><name pos:start="235:32" pos:end="235:32">s</name><operator pos:start="235:33" pos:end="235:34">-&gt;</operator><name pos:start="235:35" pos:end="235:48">bits_per_pixel</name></name> <operator pos:start="235:50" pos:end="235:50">+</operator> <literal type="number" pos:start="235:52" pos:end="235:52">7</literal><operator pos:start="235:53" pos:end="235:53">)</operator> <operator pos:start="235:55" pos:end="235:56">&gt;&gt;</operator> <literal type="number" pos:start="235:58" pos:end="235:58">3</literal></expr></init></decl>;</decl_stmt>

                <for pos:start="237:17" pos:end="243:17">for <control pos:start="237:21" pos:end="237:119">(<init pos:start="237:22" pos:end="237:53"><expr pos:start="237:22" pos:end="237:52"><name pos:start="237:22" pos:end="237:22">y</name> <operator pos:start="237:24" pos:end="237:24">=</operator> <name pos:start="237:26" pos:end="237:52"><name pos:start="237:26" pos:end="237:26">s</name><operator pos:start="237:27" pos:end="237:28">-&gt;</operator><name pos:start="237:29" pos:end="237:43">last_frame_fctl</name><operator pos:start="237:44" pos:end="237:44">.</operator><name pos:start="237:45" pos:end="237:52">y_offset</name></name></expr>;</init> <condition pos:start="237:55" pos:end="237:114"><expr pos:start="237:55" pos:end="237:113"><name pos:start="237:55" pos:end="237:55">y</name> <operator pos:start="237:57" pos:end="237:57">&lt;</operator> <name pos:start="237:59" pos:end="237:85"><name pos:start="237:59" pos:end="237:59">s</name><operator pos:start="237:60" pos:end="237:61">-&gt;</operator><name pos:start="237:62" pos:end="237:76">last_frame_fctl</name><operator pos:start="237:77" pos:end="237:77">.</operator><name pos:start="237:78" pos:end="237:85">y_offset</name></name> <operator pos:start="237:87" pos:end="237:87">+</operator> <name pos:start="237:89" pos:end="237:113"><name pos:start="237:89" pos:end="237:89">s</name><operator pos:start="237:90" pos:end="237:91">-&gt;</operator><name pos:start="237:92" pos:end="237:106">last_frame_fctl</name><operator pos:start="237:107" pos:end="237:107">.</operator><name pos:start="237:108" pos:end="237:113">height</name></name></expr>;</condition> <incr pos:start="237:116" pos:end="237:118"><expr pos:start="237:116" pos:end="237:118"><operator pos:start="237:116" pos:end="237:117">++</operator><name pos:start="237:118" pos:end="237:118">y</name></expr></incr>)</control> <block pos:start="237:121" pos:end="243:17">{<block_content pos:start="239:21" pos:end="241:98">

                    <decl_stmt pos:start="239:21" pos:end="239:106"><decl pos:start="239:21" pos:end="239:105"><type pos:start="239:21" pos:end="239:26"><name pos:start="239:21" pos:end="239:26">size_t</name></type> <name pos:start="239:28" pos:end="239:36">row_start</name> <init pos:start="239:38" pos:end="239:105">= <expr pos:start="239:40" pos:end="239:105"><name pos:start="239:40" pos:end="239:65"><name pos:start="239:40" pos:end="239:40">s</name><operator pos:start="239:41" pos:end="239:42">-&gt;</operator><name pos:start="239:43" pos:end="239:52">last_frame</name><operator pos:start="239:53" pos:end="239:54">-&gt;</operator><name pos:start="239:55" pos:end="239:62">linesize</name><index pos:start="239:63" pos:end="239:65">[<expr pos:start="239:64" pos:end="239:64"><literal type="number" pos:start="239:64" pos:end="239:64">0</literal></expr>]</index></name> <operator pos:start="239:67" pos:end="239:67">*</operator> <name pos:start="239:69" pos:end="239:69">y</name> <operator pos:start="239:71" pos:end="239:71">+</operator> <name pos:start="239:73" pos:end="239:75">bpp</name> <operator pos:start="239:77" pos:end="239:77">*</operator> <name pos:start="239:79" pos:end="239:105"><name pos:start="239:79" pos:end="239:79">s</name><operator pos:start="239:80" pos:end="239:81">-&gt;</operator><name pos:start="239:82" pos:end="239:96">last_frame_fctl</name><operator pos:start="239:97" pos:end="239:97">.</operator><name pos:start="239:98" pos:end="239:105">x_offset</name></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="241:21" pos:end="241:98"><expr pos:start="241:21" pos:end="241:97"><call pos:start="241:21" pos:end="241:97"><name pos:start="241:21" pos:end="241:26">memset</name><argument_list pos:start="241:27" pos:end="241:97">(<argument pos:start="241:28" pos:end="241:61"><expr pos:start="241:28" pos:end="241:61"><name pos:start="241:28" pos:end="241:49"><name pos:start="241:28" pos:end="241:28">s</name><operator pos:start="241:29" pos:end="241:30">-&gt;</operator><name pos:start="241:31" pos:end="241:40">prev_frame</name><operator pos:start="241:41" pos:end="241:42">-&gt;</operator><name pos:start="241:43" pos:end="241:46">data</name><index pos:start="241:47" pos:end="241:49">[<expr pos:start="241:48" pos:end="241:48"><literal type="number" pos:start="241:48" pos:end="241:48">0</literal></expr>]</index></name> <operator pos:start="241:51" pos:end="241:51">+</operator> <name pos:start="241:53" pos:end="241:61">row_start</name></expr></argument>, <argument pos:start="241:64" pos:end="241:64"><expr pos:start="241:64" pos:end="241:64"><literal type="number" pos:start="241:64" pos:end="241:64">0</literal></expr></argument>, <argument pos:start="241:67" pos:end="241:96"><expr pos:start="241:67" pos:end="241:96"><name pos:start="241:67" pos:end="241:69">bpp</name> <operator pos:start="241:71" pos:end="241:71">*</operator> <name pos:start="241:73" pos:end="241:96"><name pos:start="241:73" pos:end="241:73">s</name><operator pos:start="241:74" pos:end="241:75">-&gt;</operator><name pos:start="241:76" pos:end="241:90">last_frame_fctl</name><operator pos:start="241:91" pos:end="241:91">.</operator><name pos:start="241:92" pos:end="241:96">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="251:9" pos:end="251:38"><expr pos:start="251:9" pos:end="251:37"><call pos:start="251:9" pos:end="251:37"><name pos:start="251:9" pos:end="251:22">av_frame_unref</name><argument_list pos:start="251:23" pos:end="251:37">(<argument pos:start="251:24" pos:end="251:36"><expr pos:start="251:24" pos:end="251:36"><name pos:start="251:24" pos:end="251:36"><name pos:start="251:24" pos:end="251:24">s</name><operator pos:start="251:25" pos:end="251:26">-&gt;</operator><name pos:start="251:27" pos:end="251:36">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:58"><expr pos:start="253:9" pos:end="253:57"><name pos:start="253:9" pos:end="253:11">ret</name> <operator pos:start="253:13" pos:end="253:13">=</operator> <call pos:start="253:15" pos:end="253:57"><name pos:start="253:15" pos:end="253:26">av_frame_ref</name><argument_list pos:start="253:27" pos:end="253:57">(<argument pos:start="253:28" pos:end="253:40"><expr pos:start="253:28" pos:end="253:40"><name pos:start="253:28" pos:end="253:40"><name pos:start="253:28" pos:end="253:28">s</name><operator pos:start="253:29" pos:end="253:30">-&gt;</operator><name pos:start="253:31" pos:end="253:40">last_frame</name></name></expr></argument>, <argument pos:start="253:43" pos:end="253:56"><expr pos:start="253:43" pos:end="253:56"><operator pos:start="253:43" pos:end="253:43">(</operator><name pos:start="253:44" pos:end="253:50">AVFrame</name><operator pos:start="253:51" pos:end="253:51">*</operator><operator pos:start="253:52" pos:end="253:52">)</operator><name pos:start="253:53" pos:end="253:56">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="255:9" pos:end="257:23"><if pos:start="255:9" pos:end="257:23">if <condition pos:start="255:12" pos:end="255:20">(<expr pos:start="255:13" pos:end="255:19"><name pos:start="255:13" pos:end="255:15">ret</name> <operator pos:start="255:17" pos:end="255:17">&lt;</operator> <literal type="number" pos:start="255:19" pos:end="255:19">0</literal></expr>)</condition><block type="pseudo" pos:start="257:13" pos:end="257:23"><block_content pos:start="257:13" pos:end="257:23">

            <return pos:start="257:13" pos:end="257:23">return <expr pos:start="257:20" pos:end="257:22"><name pos:start="257:20" pos:end="257:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="261:9" pos:end="261:40"><expr pos:start="261:9" pos:end="261:39"><name pos:start="261:9" pos:end="261:26"><name pos:start="261:9" pos:end="261:9">s</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:26">last_frame_fctl</name></name> <operator pos:start="261:28" pos:end="261:28">=</operator> <name pos:start="261:30" pos:end="261:39">fctl_chunk</name></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:72"><expr pos:start="263:9" pos:end="263:71"><name pos:start="263:9" pos:end="263:33"><name pos:start="263:9" pos:end="263:9">s</name><operator pos:start="263:10" pos:end="263:11">-&gt;</operator><name pos:start="263:12" pos:end="263:33">last_frame_packet_size</name></name> <operator pos:start="263:35" pos:end="263:35">=</operator> <name pos:start="263:37" pos:end="263:49"><name pos:start="263:37" pos:end="263:37">s</name><operator pos:start="263:38" pos:end="263:39">-&gt;</operator><name pos:start="263:40" pos:end="263:49">bytestream</name></name> <operator pos:start="263:51" pos:end="263:51">-</operator> <name pos:start="263:53" pos:end="263:71"><name pos:start="263:53" pos:end="263:53">s</name><operator pos:start="263:54" pos:end="263:55">-&gt;</operator><name pos:start="263:56" pos:end="263:71">bytestream_start</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="265:7" pos:end="269:5">else <block pos:start="265:12" pos:end="269:5">{<block_content pos:start="267:9" pos:end="267:38">

        <expr_stmt pos:start="267:9" pos:end="267:38"><expr pos:start="267:9" pos:end="267:37"><call pos:start="267:9" pos:end="267:37"><name pos:start="267:9" pos:end="267:21">av_frame_free</name><argument_list pos:start="267:22" pos:end="267:37">(<argument pos:start="267:23" pos:end="267:36"><expr pos:start="267:23" pos:end="267:36"><operator pos:start="267:23" pos:end="267:23">&amp;</operator><name pos:start="267:24" pos:end="267:36"><name pos:start="267:24" pos:end="267:24">s</name><operator pos:start="267:25" pos:end="267:26">-&gt;</operator><name pos:start="267:27" pos:end="267:36">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="273:5" pos:end="273:13">return <expr pos:start="273:12" pos:end="273:12"><literal type="number" pos:start="273:12" pos:end="273:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
