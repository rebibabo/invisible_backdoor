<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23125.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">apic_init_common</name><parameter_list pos:start="1:28" pos:end="1:46">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:40">SysBusDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">APICCommonState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><call pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:36">APIC_COMMON</name><argument_list pos:start="5:37" pos:end="5:41">(<argument pos:start="5:38" pos:end="5:40"><expr pos:start="5:38" pos:end="5:40"><name pos:start="5:38" pos:end="5:40">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">APICCommonClass</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:24"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <name pos:start="9:12" pos:end="9:22">DeviceState</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:29">vapic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:14"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:14">int</name></type> <name pos:start="11:16" pos:end="11:22">apic_no</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:15">apic_no</name> <operator pos:start="15:17" pos:end="15:18">&gt;=</operator> <name pos:start="15:20" pos:end="15:28">MAX_APICS</name></expr>)</condition> <block pos:start="15:31" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:10">idx</name></name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:20">apic_no</name><operator pos:start="21:21" pos:end="21:22">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:36"><expr pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:8">info</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:35"><name pos:start="25:12" pos:end="25:32">APIC_COMMON_GET_CLASS</name><argument_list pos:start="25:33" pos:end="25:35">(<argument pos:start="25:34" pos:end="25:34"><expr pos:start="25:34" pos:end="25:34"><name pos:start="25:34" pos:end="25:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:18"><expr pos:start="27:5" pos:end="27:17"><call pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:8">info</name><operator pos:start="27:9" pos:end="27:10">-&gt;</operator><name pos:start="27:11" pos:end="27:14">init</name></name><argument_list pos:start="27:15" pos:end="27:17">(<argument pos:start="27:16" pos:end="27:16"><expr pos:start="27:16" pos:end="27:16"><name pos:start="27:16" pos:end="27:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><call pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:20">sysbus_init_mmio</name><argument_list pos:start="31:21" pos:end="31:40">(<argument pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:24">dev</name></expr></argument>, <argument pos:start="31:27" pos:end="31:39"><expr pos:start="31:27" pos:end="31:39"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:39"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:39">io_memory</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:55">(<expr pos:start="35:9" pos:end="35:54"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:14">vapic</name> <operator pos:start="35:16" pos:end="35:17">&amp;&amp;</operator> <name pos:start="35:19" pos:end="35:34"><name pos:start="35:19" pos:end="35:19">s</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:34">vapic_control</name></name> <operator pos:start="35:36" pos:end="35:36">&amp;</operator> <name pos:start="35:38" pos:end="35:54">VAPIC_ENABLE_MASK</name></expr>)</condition> <block pos:start="35:57" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:59">

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:13">vapic</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:58"><name pos:start="37:17" pos:end="37:36">sysbus_create_simple</name><argument_list pos:start="37:37" pos:end="37:58">(<argument pos:start="37:38" pos:end="37:47"><expr pos:start="37:38" pos:end="37:47"><literal type="string" pos:start="37:38" pos:end="37:47">"kvmvapic"</literal></expr></argument>, <argument pos:start="37:50" pos:end="37:51"><expr pos:start="37:50" pos:end="37:51"><operator pos:start="37:50" pos:end="37:50">-</operator><literal type="number" pos:start="37:51" pos:end="37:51">1</literal></expr></argument>, <argument pos:start="37:54" pos:end="37:57"><expr pos:start="37:54" pos:end="37:57"><name pos:start="37:54" pos:end="37:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:21"><expr pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:12">vapic</name></name> <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:20">vapic</name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:61">(<expr pos:start="43:9" pos:end="43:60"><name pos:start="43:9" pos:end="43:30">apic_report_tpr_access</name> <operator pos:start="43:32" pos:end="43:33">&amp;&amp;</operator> <name pos:start="43:35" pos:end="43:60"><name pos:start="43:35" pos:end="43:38">info</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:60">enable_tpr_reporting</name></name></expr>)</condition> <block pos:start="43:63" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:44">

        <expr_stmt pos:start="45:9" pos:end="45:44"><expr pos:start="45:9" pos:end="45:43"><call pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:12">info</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:34">enable_tpr_reporting</name></name><argument_list pos:start="45:35" pos:end="45:43">(<argument pos:start="45:36" pos:end="45:36"><expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">s</name></expr></argument>, <argument pos:start="45:39" pos:end="45:42"><expr pos:start="45:39" pos:end="45:42"><name pos:start="45:39" pos:end="45:42">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
