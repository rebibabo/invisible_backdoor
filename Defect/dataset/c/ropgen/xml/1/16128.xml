<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16128.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">asf_read_marker</name><parameter_list pos:start="1:27" pos:end="1:60">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:54">int64_t</name></type> <name pos:start="1:56" pos:end="1:59">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">ASFContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">asf</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:16">count</name></decl>, <decl pos:start="9:19" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:26">name_len</name></decl>, <decl pos:start="9:29" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:31">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:19"><name pos:start="11:10" pos:end="11:13">name</name><index pos:start="11:14" pos:end="11:19">[<expr pos:start="11:15" pos:end="11:18"><literal type="number" pos:start="11:15" pos:end="11:18">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:18"><expr pos:start="15:5" pos:end="15:17"><call pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:13">avio_rl64</name><argument_list pos:start="15:14" pos:end="15:17">(<argument pos:start="15:15" pos:end="15:16"><expr pos:start="15:15" pos:end="15:16"><name pos:start="15:15" pos:end="15:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>            <comment type="line" pos:start="15:31" pos:end="15:50">// reserved 16 bytes</comment>

    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><call pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:13">avio_rl64</name><argument_list pos:start="17:14" pos:end="17:17">(<argument pos:start="17:15" pos:end="17:16"><expr pos:start="17:15" pos:end="17:16"><name pos:start="17:15" pos:end="17:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>            <comment type="line" pos:start="17:31" pos:end="17:36">// ...</comment>

    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:9">count</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:21">avio_rl32</name><argument_list pos:start="19:22" pos:end="19:25">(<argument pos:start="19:23" pos:end="19:24"><expr pos:start="19:23" pos:end="19:24"><name pos:start="19:23" pos:end="19:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" pos:start="19:31" pos:end="19:46">// markers count</comment>

    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><call pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:13">avio_rl16</name><argument_list pos:start="21:14" pos:end="21:17">(<argument pos:start="21:15" pos:end="21:16"><expr pos:start="21:15" pos:end="21:16"><name pos:start="21:15" pos:end="21:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>            <comment type="line" pos:start="21:31" pos:end="21:49">// reserved 2 bytes</comment>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:12">name_len</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:28"><name pos:start="23:16" pos:end="23:24">avio_rl16</name><argument_list pos:start="23:25" pos:end="23:28">(<argument pos:start="23:26" pos:end="23:27"><expr pos:start="23:26" pos:end="23:27"><name pos:start="23:26" pos:end="23:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="23:31" pos:end="23:44">// name length</comment>

    <for pos:start="25:5" pos:end="27:20">for <control pos:start="25:9" pos:end="25:34">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:29"><expr pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:28">name_len</name></expr>;</condition> <incr pos:start="25:31" pos:end="25:33"><expr pos:start="25:31" pos:end="25:33"><name pos:start="25:31" pos:end="25:31">i</name><operator pos:start="25:32" pos:end="25:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:9" pos:end="27:20"><block_content pos:start="27:9" pos:end="27:20">

        <expr_stmt pos:start="27:9" pos:end="27:20"><expr pos:start="27:9" pos:end="27:19"><call pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:15">avio_r8</name><argument_list pos:start="27:16" pos:end="27:19">(<argument pos:start="27:17" pos:end="27:18"><expr pos:start="27:17" pos:end="27:18"><name pos:start="27:17" pos:end="27:18">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for> <comment type="line" pos:start="27:22" pos:end="27:37">// skip the name</comment>



    <for pos:start="31:5" pos:end="63:5">for <control pos:start="31:9" pos:end="31:31">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:26"><expr pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:25">count</name></expr>;</condition> <incr pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:28">i</name><operator pos:start="31:29" pos:end="31:30">++</operator></expr></incr>)</control> <block pos:start="31:33" pos:end="63:5">{<block_content pos:start="33:9" pos:end="61:49">

        <decl_stmt pos:start="33:9" pos:end="33:26"><decl pos:start="33:9" pos:end="33:25"><type pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:15">int64_t</name></type> <name pos:start="33:17" pos:end="33:25">pres_time</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:21"><decl pos:start="35:9" pos:end="35:20"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:20">name_len</name></decl>;</decl_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:22"><expr pos:start="39:9" pos:end="39:21"><call pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:17">avio_rl64</name><argument_list pos:start="39:18" pos:end="39:21">(<argument pos:start="39:19" pos:end="39:20"><expr pos:start="39:19" pos:end="39:20"><name pos:start="39:19" pos:end="39:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line" pos:start="39:36" pos:end="39:53">// offset, 8 bytes</comment>

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:17">pres_time</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="41:33"><name pos:start="41:21" pos:end="41:29">avio_rl64</name><argument_list pos:start="41:30" pos:end="41:33">(<argument pos:start="41:31" pos:end="41:32"><expr pos:start="41:31" pos:end="41:32"><name pos:start="41:31" pos:end="41:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="41:36" pos:end="41:55">// presentation time</comment>

        <expr_stmt pos:start="43:9" pos:end="43:46"><expr pos:start="43:9" pos:end="43:45"><name pos:start="43:9" pos:end="43:17">pres_time</name> <operator pos:start="43:19" pos:end="43:20">-=</operator> <name pos:start="43:22" pos:end="43:37"><name pos:start="43:22" pos:end="43:24">asf</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:29">hdr</name><operator pos:start="43:30" pos:end="43:30">.</operator><name pos:start="43:31" pos:end="43:37">preroll</name></name> <operator pos:start="43:39" pos:end="43:39">*</operator> <literal type="number" pos:start="43:41" pos:end="43:45">10000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><call pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:17">avio_rl16</name><argument_list pos:start="45:18" pos:end="45:21">(<argument pos:start="45:19" pos:end="45:20"><expr pos:start="45:19" pos:end="45:20"><name pos:start="45:19" pos:end="45:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line" pos:start="45:36" pos:end="45:50">// entry length</comment>

        <expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><call pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:17">avio_rl32</name><argument_list pos:start="47:18" pos:end="47:21">(<argument pos:start="47:19" pos:end="47:20"><expr pos:start="47:19" pos:end="47:20"><name pos:start="47:19" pos:end="47:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line" pos:start="47:36" pos:end="47:47">// send time</comment>

        <expr_stmt pos:start="49:9" pos:end="49:22"><expr pos:start="49:9" pos:end="49:21"><call pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:17">avio_rl32</name><argument_list pos:start="49:18" pos:end="49:21">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line" pos:start="49:36" pos:end="49:43">// flags</comment>

        <expr_stmt pos:start="51:9" pos:end="51:33"><expr pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:16">name_len</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <call pos:start="51:20" pos:end="51:32"><name pos:start="51:20" pos:end="51:28">avio_rl32</name><argument_list pos:start="51:29" pos:end="51:32">(<argument pos:start="51:30" pos:end="51:31"><expr pos:start="51:30" pos:end="51:31"><name pos:start="51:30" pos:end="51:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="51:36" pos:end="51:49">// name length</comment>

        <if_stmt pos:start="53:9" pos:end="57:42"><if pos:start="53:9" pos:end="57:42">if <condition pos:start="53:12" pos:end="55:62">(<expr pos:start="53:13" pos:end="55:61"><operator pos:start="53:13" pos:end="53:13">(</operator><name pos:start="53:14" pos:end="53:16">ret</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="55:49"><name pos:start="53:20" pos:end="53:35">avio_get_str16le</name><argument_list pos:start="53:36" pos:end="55:49">(<argument pos:start="53:37" pos:end="53:38"><expr pos:start="53:37" pos:end="53:38"><name pos:start="53:37" pos:end="53:38">pb</name></expr></argument>, <argument pos:start="53:41" pos:end="53:52"><expr pos:start="53:41" pos:end="53:52"><name pos:start="53:41" pos:end="53:48">name_len</name> <operator pos:start="53:50" pos:end="53:50">*</operator> <literal type="number" pos:start="53:52" pos:end="53:52">2</literal></expr></argument>, <argument pos:start="53:55" pos:end="53:58"><expr pos:start="53:55" pos:end="53:58"><name pos:start="53:55" pos:end="53:58">name</name></expr></argument>,

                                    <argument pos:start="55:37" pos:end="55:48"><expr pos:start="55:37" pos:end="55:48"><sizeof pos:start="55:37" pos:end="55:48">sizeof<argument_list pos:start="55:43" pos:end="55:48">(<argument pos:start="55:44" pos:end="55:47"><expr pos:start="55:44" pos:end="55:47"><name pos:start="55:44" pos:end="55:47">name</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="55:50" pos:end="55:50">)</operator> <operator pos:start="55:52" pos:end="55:52">&lt;</operator> <name pos:start="55:54" pos:end="55:61">name_len</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:42"><block_content pos:start="57:13" pos:end="57:42">

            <expr_stmt pos:start="57:13" pos:end="57:42"><expr pos:start="57:13" pos:end="57:41"><call pos:start="57:13" pos:end="57:41"><name pos:start="57:13" pos:end="57:21">avio_skip</name><argument_list pos:start="57:22" pos:end="57:41">(<argument pos:start="57:23" pos:end="57:24"><expr pos:start="57:23" pos:end="57:24"><name pos:start="57:23" pos:end="57:24">pb</name></expr></argument>, <argument pos:start="57:27" pos:end="57:40"><expr pos:start="57:27" pos:end="57:40"><name pos:start="57:27" pos:end="57:34">name_len</name> <operator pos:start="57:36" pos:end="57:36">-</operator> <name pos:start="57:38" pos:end="57:40">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <macro pos:start="59:9" pos:end="61:48"><name pos:start="59:9" pos:end="59:26">avpriv_new_chapter</name><argument_list pos:start="59:27" pos:end="61:48">(<argument pos:start="59:28" pos:end="59:28">s</argument>, <argument pos:start="59:31" pos:end="59:31">i</argument>, <argument pos:start="59:34" pos:end="59:49">(AVRational) { <literal type="number" pos:start="59:49" pos:end="59:49">1</literal></argument>, <argument pos:start="59:52" pos:end="59:61"><literal type="number" pos:start="59:52" pos:end="59:59">10000000</literal> }</argument>, <argument pos:start="59:64" pos:end="59:72">pres_time</argument>,

                           <argument pos:start="61:28" pos:end="61:41">AV_NOPTS_VALUE</argument>, <argument pos:start="61:44" pos:end="61:47">name</argument>)</argument_list></macro><empty_stmt pos:start="61:49" pos:end="61:49">;</empty_stmt>

    </block_content>}</block></for>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
