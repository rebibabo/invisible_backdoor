<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26358.c" pos:tabs="8"><function pos:start="1:1" pos:end="206:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">ff_fft_init</name><parameter_list pos:start="1:16" pos:end="1:54">(<parameter pos:start="1:17" pos:end="1:29"><decl pos:start="1:17" pos:end="1:29"><type pos:start="1:17" pos:end="1:29"><name pos:start="1:17" pos:end="1:26">FFTContext</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:29">s</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:40"><decl pos:start="1:32" pos:end="1:40"><type pos:start="1:32" pos:end="1:40"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:40">nbits</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:53">inverse</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="206:1">{<block_content pos:start="5:5" pos:end="204:14">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">m</name></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">float</name></type> <name pos:start="7:11" pos:end="7:15">alpha</name></decl>, <decl pos:start="7:18" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:18" pos:end="7:19">c1</name></decl>, <decl pos:start="7:22" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:22" pos:end="7:23">s1</name></decl>, <decl pos:start="7:26" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:26" pos:end="7:27">s2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">shuffle</name> <init pos:start="9:17" pos:end="9:19">= <expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:7">int</name> <name pos:start="11:9" pos:end="11:17">av_unused</name></type> <name pos:start="11:19" pos:end="11:29">has_vectors</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:12">nbits</name></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:20">nbits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:5">n</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <literal type="number" pos:start="17:9" pos:end="17:9">1</literal> <operator pos:start="17:11" pos:end="17:12">&lt;&lt;</operator> <name pos:start="17:14" pos:end="17:18">nbits</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:56"><expr pos:start="21:5" pos:end="21:55"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:13">exptab</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="21:55"><name pos:start="21:17" pos:end="21:25">av_malloc</name><argument_list pos:start="21:26" pos:end="21:55">(<argument pos:start="21:27" pos:end="21:54"><expr pos:start="21:27" pos:end="21:54"><operator pos:start="21:27" pos:end="21:27">(</operator><name pos:start="21:28" pos:end="21:28">n</name> <operator pos:start="21:30" pos:end="21:30">/</operator> <literal type="number" pos:start="21:32" pos:end="21:32">2</literal><operator pos:start="21:33" pos:end="21:33">)</operator> <operator pos:start="21:35" pos:end="21:35">*</operator> <sizeof pos:start="21:37" pos:end="21:54">sizeof<argument_list pos:start="21:43" pos:end="21:54">(<argument pos:start="21:44" pos:end="21:53"><expr pos:start="21:44" pos:end="21:53"><name pos:start="21:44" pos:end="21:53">FFTComplex</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:18"><name pos:start="23:10" pos:end="23:10">s</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:18">exptab</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <goto pos:start="25:9" pos:end="25:18">goto <name pos:start="25:14" pos:end="25:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:48"><expr pos:start="27:5" pos:end="27:47"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:13">revtab</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:47"><name pos:start="27:17" pos:end="27:25">av_malloc</name><argument_list pos:start="27:26" pos:end="27:47">(<argument pos:start="27:27" pos:end="27:46"><expr pos:start="27:27" pos:end="27:46"><name pos:start="27:27" pos:end="27:27">n</name> <operator pos:start="27:29" pos:end="27:29">*</operator> <sizeof pos:start="27:31" pos:end="27:46">sizeof<argument_list pos:start="27:37" pos:end="27:46">(<argument pos:start="27:38" pos:end="27:45"><expr pos:start="27:38" pos:end="27:45"><name pos:start="27:38" pos:end="27:45">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if <condition pos:start="29:8" pos:end="29:19">(<expr pos:start="29:9" pos:end="29:18"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:18"><name pos:start="29:10" pos:end="29:10">s</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:18">revtab</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:14">inverse</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:24">inverse</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:6">s2</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <ternary pos:start="37:10" pos:end="37:29"><condition pos:start="37:10" pos:end="37:18"><expr pos:start="37:10" pos:end="37:16"><name pos:start="37:10" pos:end="37:16">inverse</name></expr> ?</condition><then pos:start="37:20" pos:end="37:22"> <expr pos:start="37:20" pos:end="37:22"><literal type="number" pos:start="37:20" pos:end="37:22">1.0</literal></expr> </then><else pos:start="37:24" pos:end="37:29">: <expr pos:start="37:26" pos:end="37:29"><operator pos:start="37:26" pos:end="37:26">-</operator><literal type="number" pos:start="37:27" pos:end="37:29">1.0</literal></expr></else></ternary></expr>;</expr_stmt>



    <for pos:start="41:5" pos:end="53:5">for<control pos:start="41:8" pos:end="41:24">(<init pos:start="41:9" pos:end="41:12"><expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:9">i</name><operator pos:start="41:10" pos:end="41:10">=</operator><literal type="number" pos:start="41:11" pos:end="41:11">0</literal></expr>;</init><condition pos:start="41:13" pos:end="41:20"><expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:13">i</name><operator pos:start="41:14" pos:end="41:14">&lt;</operator><operator pos:start="41:15" pos:end="41:15">(</operator><name pos:start="41:16" pos:end="41:16">n</name><operator pos:start="41:17" pos:end="41:17">/</operator><literal type="number" pos:start="41:18" pos:end="41:18">2</literal><operator pos:start="41:19" pos:end="41:19">)</operator></expr>;</condition><incr pos:start="41:21" pos:end="41:23"><expr pos:start="41:21" pos:end="41:23"><name pos:start="41:21" pos:end="41:21">i</name><operator pos:start="41:22" pos:end="41:23">++</operator></expr></incr>)</control> <block pos:start="41:26" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:29">

        <expr_stmt pos:start="43:9" pos:end="43:47"><expr pos:start="43:9" pos:end="43:46"><name pos:start="43:9" pos:end="43:13">alpha</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <literal type="number" pos:start="43:17" pos:end="43:17">2</literal> <operator pos:start="43:19" pos:end="43:19">*</operator> <name pos:start="43:21" pos:end="43:24">M_PI</name> <operator pos:start="43:26" pos:end="43:26">*</operator> <operator pos:start="43:28" pos:end="43:28">(</operator><name pos:start="43:29" pos:end="43:33">float</name><operator pos:start="43:34" pos:end="43:34">)</operator><name pos:start="43:35" pos:end="43:35">i</name> <operator pos:start="43:37" pos:end="43:37">/</operator> <operator pos:start="43:39" pos:end="43:39">(</operator><name pos:start="43:40" pos:end="43:44">float</name><operator pos:start="43:45" pos:end="43:45">)</operator><name pos:start="43:46" pos:end="43:46">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:24"><expr pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:10">c1</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:23"><name pos:start="45:14" pos:end="45:16">cos</name><argument_list pos:start="45:17" pos:end="45:23">(<argument pos:start="45:18" pos:end="45:22"><expr pos:start="45:18" pos:end="45:22"><name pos:start="45:18" pos:end="45:22">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:29"><expr pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:10">s1</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:23"><name pos:start="47:14" pos:end="47:16">sin</name><argument_list pos:start="47:17" pos:end="47:23">(<argument pos:start="47:18" pos:end="47:22"><expr pos:start="47:18" pos:end="47:22"><name pos:start="47:18" pos:end="47:22">alpha</name></expr></argument>)</argument_list></call> <operator pos:start="47:25" pos:end="47:25">*</operator> <name pos:start="47:27" pos:end="47:28">s2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:17">exptab</name><index pos:start="49:18" pos:end="49:20">[<expr pos:start="49:19" pos:end="49:19"><name pos:start="49:19" pos:end="49:19">i</name></expr>]</index></name><operator pos:start="49:21" pos:end="49:21">.</operator><name pos:start="49:22" pos:end="49:23">re</name> <operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:28">c1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">exptab</name><index pos:start="51:18" pos:end="51:20">[<expr pos:start="51:19" pos:end="51:19"><name pos:start="51:19" pos:end="51:19">i</name></expr>]</index></name><operator pos:start="51:21" pos:end="51:21">.</operator><name pos:start="51:22" pos:end="51:23">im</name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:28">s1</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="55:5" pos:end="55:32"><expr pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:15">fft_calc</name></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:31">ff_fft_calc_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:17">imdct_calc</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:33">ff_imdct_calc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:34"><expr pos:start="59:5" pos:end="59:33"><name pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:17">imdct_half</name></name> <operator pos:start="59:19" pos:end="59:19">=</operator> <name pos:start="59:21" pos:end="59:33">ff_imdct_half</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="66:0"><expr pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:14"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:14">exptab1</name></name> <operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:21">NULL</name></expr>;</expr_stmt>



<cpp:ifdef pos:start="65:1" pos:end="65:15">#<cpp:directive pos:start="65:2" pos:end="65:6">ifdef</cpp:directive> <name pos:start="65:8" pos:end="65:15">HAVE_MMX</name></cpp:ifdef>

    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:15">has_vectors</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="67:30"><name pos:start="67:19" pos:end="67:28">mm_support</name><argument_list pos:start="67:29" pos:end="67:30">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:16"><expr pos:start="69:5" pos:end="69:15"><name pos:start="69:5" pos:end="69:11">shuffle</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <literal type="number" pos:start="69:15" pos:end="69:15">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="103:0"><if pos:start="71:5" pos:end="80:5">if <condition pos:start="71:8" pos:end="71:34">(<expr pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:19">has_vectors</name> <operator pos:start="71:21" pos:end="71:21">&amp;</operator> <name pos:start="71:23" pos:end="71:33">MM_3DNOWEXT</name></expr>)</condition> <block pos:start="71:36" pos:end="80:5">{<block_content pos:start="75:9" pos:end="78:39">

        <comment type="block" pos:start="73:9" pos:end="73:31">/* 3DNowEx for K7/K8 */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:43"><expr pos:start="75:9" pos:end="75:42"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:21">imdct_calc</name></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:42">ff_imdct_calc_3dn2</name></expr>;</expr_stmt>


        <expr_stmt pos:start="78:9" pos:end="78:39"><expr pos:start="78:9" pos:end="78:38"><name pos:start="78:9" pos:end="78:19"><name pos:start="78:9" pos:end="78:9">s</name><operator pos:start="78:10" pos:end="78:11">-&gt;</operator><name pos:start="78:12" pos:end="78:19">fft_calc</name></name> <operator pos:start="78:21" pos:end="78:21">=</operator> <name pos:start="78:23" pos:end="78:38">ff_fft_calc_3dn2</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="80:7" pos:end="86:5">else if <condition pos:start="80:15" pos:end="80:38">(<expr pos:start="80:16" pos:end="80:37"><name pos:start="80:16" pos:end="80:26">has_vectors</name> <operator pos:start="80:28" pos:end="80:28">&amp;</operator> <name pos:start="80:30" pos:end="80:37">MM_3DNOW</name></expr>)</condition> <block pos:start="80:40" pos:end="86:5">{<block_content pos:start="84:9" pos:end="84:38">

        <comment type="block" pos:start="82:9" pos:end="82:31">/* 3DNow! for K6-2/3 */</comment>

        <expr_stmt pos:start="84:9" pos:end="84:38"><expr pos:start="84:9" pos:end="84:37"><name pos:start="84:9" pos:end="84:19"><name pos:start="84:9" pos:end="84:9">s</name><operator pos:start="84:10" pos:end="84:11">-&gt;</operator><name pos:start="84:12" pos:end="84:19">fft_calc</name></name> <operator pos:start="84:21" pos:end="84:21">=</operator> <name pos:start="84:23" pos:end="84:37">ff_fft_calc_3dn</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="86:7" pos:end="96:5">else if <condition pos:start="86:15" pos:end="86:36">(<expr pos:start="86:16" pos:end="86:35"><name pos:start="86:16" pos:end="86:26">has_vectors</name> <operator pos:start="86:28" pos:end="86:28">&amp;</operator> <name pos:start="86:30" pos:end="86:35">MM_SSE</name></expr>)</condition> <block pos:start="86:38" pos:end="96:5">{<block_content pos:start="90:9" pos:end="94:38">

        <comment type="block" pos:start="88:9" pos:end="88:27">/* SSE for P3/P4 */</comment>

        <expr_stmt pos:start="90:9" pos:end="90:42"><expr pos:start="90:9" pos:end="90:41"><name pos:start="90:9" pos:end="90:21"><name pos:start="90:9" pos:end="90:9">s</name><operator pos:start="90:10" pos:end="90:11">-&gt;</operator><name pos:start="90:12" pos:end="90:21">imdct_calc</name></name> <operator pos:start="90:23" pos:end="90:23">=</operator> <name pos:start="90:25" pos:end="90:41">ff_imdct_calc_sse</name></expr>;</expr_stmt>

        <expr_stmt pos:start="92:9" pos:end="92:42"><expr pos:start="92:9" pos:end="92:41"><name pos:start="92:9" pos:end="92:21"><name pos:start="92:9" pos:end="92:9">s</name><operator pos:start="92:10" pos:end="92:11">-&gt;</operator><name pos:start="92:12" pos:end="92:21">imdct_half</name></name> <operator pos:start="92:23" pos:end="92:23">=</operator> <name pos:start="92:25" pos:end="92:41">ff_imdct_half_sse</name></expr>;</expr_stmt>

        <expr_stmt pos:start="94:9" pos:end="94:38"><expr pos:start="94:9" pos:end="94:37"><name pos:start="94:9" pos:end="94:19"><name pos:start="94:9" pos:end="94:9">s</name><operator pos:start="94:10" pos:end="94:11">-&gt;</operator><name pos:start="94:12" pos:end="94:19">fft_calc</name></name> <operator pos:start="94:21" pos:end="94:21">=</operator> <name pos:start="94:23" pos:end="94:37">ff_fft_calc_sse</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="96:7" pos:end="103:0">else <block pos:start="96:12" pos:end="103:0">{<block_content pos:start="98:9" pos:end="98:20">

        <expr_stmt pos:start="98:9" pos:end="98:20"><expr pos:start="98:9" pos:end="98:19"><name pos:start="98:9" pos:end="98:15">shuffle</name> <operator pos:start="98:17" pos:end="98:17">=</operator> <literal type="number" pos:start="98:19" pos:end="98:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:elif pos:start="102:1" pos:end="102:67">#<cpp:directive pos:start="102:2" pos:end="102:5">elif</cpp:directive> <expr pos:start="102:7" pos:end="102:67"><name pos:start="102:7" pos:end="102:13">defined</name> <name pos:start="102:15" pos:end="102:26">HAVE_ALTIVEC</name> <operator pos:start="102:28" pos:end="102:29">&amp;&amp;</operator> <operator pos:start="102:31" pos:end="102:31">!</operator><name pos:start="102:32" pos:end="102:38">defined</name> <name pos:start="102:40" pos:end="102:67">ALTIVEC_USE_REFERENCE_C_CODE</name></expr></cpp:elif>

    <expr_stmt pos:start="104:5" pos:end="104:31"><expr pos:start="104:5" pos:end="104:30"><name pos:start="104:5" pos:end="104:15">has_vectors</name> <operator pos:start="104:17" pos:end="104:17">=</operator> <call pos:start="104:19" pos:end="104:30"><name pos:start="104:19" pos:end="104:28">mm_support</name><argument_list pos:start="104:29" pos:end="104:30">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="106:5" pos:end="115:0"><if pos:start="106:5" pos:end="115:0">if <condition pos:start="106:8" pos:end="106:33">(<expr pos:start="106:9" pos:end="106:32"><name pos:start="106:9" pos:end="106:19">has_vectors</name> <operator pos:start="106:21" pos:end="106:21">&amp;</operator> <name pos:start="106:23" pos:end="106:32">MM_ALTIVEC</name></expr>)</condition> <block pos:start="106:35" pos:end="115:0">{<block_content pos:start="108:9" pos:end="110:20">

        <expr_stmt pos:start="108:9" pos:end="108:42"><expr pos:start="108:9" pos:end="108:41"><name pos:start="108:9" pos:end="108:19"><name pos:start="108:9" pos:end="108:9">s</name><operator pos:start="108:10" pos:end="108:11">-&gt;</operator><name pos:start="108:12" pos:end="108:19">fft_calc</name></name> <operator pos:start="108:21" pos:end="108:21">=</operator> <name pos:start="108:23" pos:end="108:41">ff_fft_calc_altivec</name></expr>;</expr_stmt>

        <expr_stmt pos:start="110:9" pos:end="110:20"><expr pos:start="110:9" pos:end="110:19"><name pos:start="110:9" pos:end="110:15">shuffle</name> <operator pos:start="110:17" pos:end="110:17">=</operator> <literal type="number" pos:start="110:19" pos:end="110:19">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="114:1" pos:end="114:6">#<cpp:directive pos:start="114:2" pos:end="114:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="118:5" pos:end="118:53">/* compute constant table for HAVE_SSE version */</comment>

    <if_stmt pos:start="120:5" pos:end="172:5"><if pos:start="120:5" pos:end="172:5">if <condition pos:start="120:8" pos:end="120:16">(<expr pos:start="120:9" pos:end="120:15"><name pos:start="120:9" pos:end="120:15">shuffle</name></expr>)</condition> <block pos:start="120:18" pos:end="172:5">{<block_content pos:start="122:9" pos:end="170:29">

        <decl_stmt pos:start="122:9" pos:end="122:32"><decl pos:start="122:9" pos:end="122:14"><type pos:start="122:9" pos:end="122:11"><name pos:start="122:9" pos:end="122:11">int</name></type> <name pos:start="122:13" pos:end="122:14">np</name></decl>, <decl pos:start="122:17" pos:end="122:23"><type ref="prev" pos:start="122:9" pos:end="122:11"/><name pos:start="122:17" pos:end="122:23">nblocks</name></decl>, <decl pos:start="122:26" pos:end="122:28"><type ref="prev" pos:start="122:9" pos:end="122:11"/><name pos:start="122:26" pos:end="122:28">np2</name></decl>, <decl pos:start="122:31" pos:end="122:31"><type ref="prev" pos:start="122:9" pos:end="122:11"/><name pos:start="122:31" pos:end="122:31">l</name></decl>;</decl_stmt>

        <decl_stmt pos:start="124:9" pos:end="124:22"><decl pos:start="124:9" pos:end="124:21"><type pos:start="124:9" pos:end="124:20"><name pos:start="124:9" pos:end="124:18">FFTComplex</name> <modifier pos:start="124:20" pos:end="124:20">*</modifier></type><name pos:start="124:21" pos:end="124:21">q</name></decl>;</decl_stmt>



        <expr_stmt pos:start="128:9" pos:end="128:24"><expr pos:start="128:9" pos:end="128:23"><name pos:start="128:9" pos:end="128:10">np</name> <operator pos:start="128:12" pos:end="128:12">=</operator> <literal type="number" pos:start="128:14" pos:end="128:14">1</literal> <operator pos:start="128:16" pos:end="128:17">&lt;&lt;</operator> <name pos:start="128:19" pos:end="128:23">nbits</name></expr>;</expr_stmt>

        <expr_stmt pos:start="130:9" pos:end="130:26"><expr pos:start="130:9" pos:end="130:25"><name pos:start="130:9" pos:end="130:15">nblocks</name> <operator pos:start="130:17" pos:end="130:17">=</operator> <name pos:start="130:19" pos:end="130:20">np</name> <operator pos:start="130:22" pos:end="130:23">&gt;&gt;</operator> <literal type="number" pos:start="130:25" pos:end="130:25">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="132:9" pos:end="132:22"><expr pos:start="132:9" pos:end="132:21"><name pos:start="132:9" pos:end="132:11">np2</name> <operator pos:start="132:13" pos:end="132:13">=</operator> <name pos:start="132:15" pos:end="132:16">np</name> <operator pos:start="132:18" pos:end="132:19">&gt;&gt;</operator> <literal type="number" pos:start="132:21" pos:end="132:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="134:9" pos:end="134:60"><expr pos:start="134:9" pos:end="134:59"><name pos:start="134:9" pos:end="134:18"><name pos:start="134:9" pos:end="134:9">s</name><operator pos:start="134:10" pos:end="134:11">-&gt;</operator><name pos:start="134:12" pos:end="134:18">exptab1</name></name> <operator pos:start="134:20" pos:end="134:20">=</operator> <call pos:start="134:22" pos:end="134:59"><name pos:start="134:22" pos:end="134:30">av_malloc</name><argument_list pos:start="134:31" pos:end="134:59">(<argument pos:start="134:32" pos:end="134:58"><expr pos:start="134:32" pos:end="134:58"><name pos:start="134:32" pos:end="134:33">np</name> <operator pos:start="134:35" pos:end="134:35">*</operator> <literal type="number" pos:start="134:37" pos:end="134:37">2</literal> <operator pos:start="134:39" pos:end="134:39">*</operator> <sizeof pos:start="134:41" pos:end="134:58">sizeof<argument_list pos:start="134:47" pos:end="134:58">(<argument pos:start="134:48" pos:end="134:57"><expr pos:start="134:48" pos:end="134:57"><name pos:start="134:48" pos:end="134:57">FFTComplex</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="136:9" pos:end="138:22"><if pos:start="136:9" pos:end="138:22">if <condition pos:start="136:12" pos:end="136:24">(<expr pos:start="136:13" pos:end="136:23"><operator pos:start="136:13" pos:end="136:13">!</operator><name pos:start="136:14" pos:end="136:23"><name pos:start="136:14" pos:end="136:14">s</name><operator pos:start="136:15" pos:end="136:16">-&gt;</operator><name pos:start="136:17" pos:end="136:23">exptab1</name></name></expr>)</condition><block type="pseudo" pos:start="138:13" pos:end="138:22"><block_content pos:start="138:13" pos:end="138:22">

            <goto pos:start="138:13" pos:end="138:22">goto <name pos:start="138:18" pos:end="138:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="140:9" pos:end="140:23"><expr pos:start="140:9" pos:end="140:22"><name pos:start="140:9" pos:end="140:9">q</name> <operator pos:start="140:11" pos:end="140:11">=</operator> <name pos:start="140:13" pos:end="140:22"><name pos:start="140:13" pos:end="140:13">s</name><operator pos:start="140:14" pos:end="140:15">-&gt;</operator><name pos:start="140:16" pos:end="140:22">exptab1</name></name></expr>;</expr_stmt>

        <do pos:start="142:9" pos:end="168:31">do <block pos:start="142:12" pos:end="168:9">{<block_content pos:start="144:13" pos:end="166:35">

            <for pos:start="144:13" pos:end="164:13">for<control pos:start="144:16" pos:end="144:49">(<init pos:start="144:17" pos:end="144:22"><expr pos:start="144:17" pos:end="144:21"><name pos:start="144:17" pos:end="144:17">l</name> <operator pos:start="144:19" pos:end="144:19">=</operator> <literal type="number" pos:start="144:21" pos:end="144:21">0</literal></expr>;</init> <condition pos:start="144:24" pos:end="144:31"><expr pos:start="144:24" pos:end="144:30"><name pos:start="144:24" pos:end="144:24">l</name> <operator pos:start="144:26" pos:end="144:26">&lt;</operator> <name pos:start="144:28" pos:end="144:30">np2</name></expr>;</condition> <incr pos:start="144:33" pos:end="144:48"><expr pos:start="144:33" pos:end="144:48"><name pos:start="144:33" pos:end="144:33">l</name> <operator pos:start="144:35" pos:end="144:36">+=</operator> <literal type="number" pos:start="144:38" pos:end="144:38">2</literal> <operator pos:start="144:40" pos:end="144:40">*</operator> <name pos:start="144:42" pos:end="144:48">nblocks</name></expr></incr>)</control> <block pos:start="144:51" pos:end="164:13">{<block_content pos:start="146:17" pos:end="162:20">

                <expr_stmt pos:start="146:17" pos:end="146:36"><expr pos:start="146:17" pos:end="146:35"><operator pos:start="146:17" pos:end="146:17">*</operator><name pos:start="146:18" pos:end="146:18">q</name><operator pos:start="146:19" pos:end="146:20">++</operator> <operator pos:start="146:22" pos:end="146:22">=</operator> <name pos:start="146:24" pos:end="146:35"><name pos:start="146:24" pos:end="146:24">s</name><operator pos:start="146:25" pos:end="146:26">-&gt;</operator><name pos:start="146:27" pos:end="146:32">exptab</name><index pos:start="146:33" pos:end="146:35">[<expr pos:start="146:34" pos:end="146:34"><name pos:start="146:34" pos:end="146:34">l</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="148:17" pos:end="148:46"><expr pos:start="148:17" pos:end="148:45"><operator pos:start="148:17" pos:end="148:17">*</operator><name pos:start="148:18" pos:end="148:18">q</name><operator pos:start="148:19" pos:end="148:20">++</operator> <operator pos:start="148:22" pos:end="148:22">=</operator> <name pos:start="148:24" pos:end="148:45"><name pos:start="148:24" pos:end="148:24">s</name><operator pos:start="148:25" pos:end="148:26">-&gt;</operator><name pos:start="148:27" pos:end="148:32">exptab</name><index pos:start="148:33" pos:end="148:45">[<expr pos:start="148:34" pos:end="148:44"><name pos:start="148:34" pos:end="148:34">l</name> <operator pos:start="148:36" pos:end="148:36">+</operator> <name pos:start="148:38" pos:end="148:44">nblocks</name></expr>]</index></name></expr>;</expr_stmt>



                <expr_stmt pos:start="152:17" pos:end="152:41"><expr pos:start="152:17" pos:end="152:40"><name pos:start="152:17" pos:end="152:21"><name pos:start="152:17" pos:end="152:17">q</name><operator pos:start="152:18" pos:end="152:19">-&gt;</operator><name pos:start="152:20" pos:end="152:21">re</name></name> <operator pos:start="152:23" pos:end="152:23">=</operator> <operator pos:start="152:25" pos:end="152:25">-</operator><name pos:start="152:26" pos:end="152:37"><name pos:start="152:26" pos:end="152:26">s</name><operator pos:start="152:27" pos:end="152:28">-&gt;</operator><name pos:start="152:29" pos:end="152:34">exptab</name><index pos:start="152:35" pos:end="152:37">[<expr pos:start="152:36" pos:end="152:36"><name pos:start="152:36" pos:end="152:36">l</name></expr>]</index></name><operator pos:start="152:38" pos:end="152:38">.</operator><name pos:start="152:39" pos:end="152:40">im</name></expr>;</expr_stmt>

                <expr_stmt pos:start="154:17" pos:end="154:40"><expr pos:start="154:17" pos:end="154:39"><name pos:start="154:17" pos:end="154:21"><name pos:start="154:17" pos:end="154:17">q</name><operator pos:start="154:18" pos:end="154:19">-&gt;</operator><name pos:start="154:20" pos:end="154:21">im</name></name> <operator pos:start="154:23" pos:end="154:23">=</operator> <name pos:start="154:25" pos:end="154:36"><name pos:start="154:25" pos:end="154:25">s</name><operator pos:start="154:26" pos:end="154:27">-&gt;</operator><name pos:start="154:28" pos:end="154:33">exptab</name><index pos:start="154:34" pos:end="154:36">[<expr pos:start="154:35" pos:end="154:35"><name pos:start="154:35" pos:end="154:35">l</name></expr>]</index></name><operator pos:start="154:37" pos:end="154:37">.</operator><name pos:start="154:38" pos:end="154:39">re</name></expr>;</expr_stmt>

                <expr_stmt pos:start="156:17" pos:end="156:20"><expr pos:start="156:17" pos:end="156:19"><name pos:start="156:17" pos:end="156:17">q</name><operator pos:start="156:18" pos:end="156:19">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="158:17" pos:end="158:51"><expr pos:start="158:17" pos:end="158:50"><name pos:start="158:17" pos:end="158:21"><name pos:start="158:17" pos:end="158:17">q</name><operator pos:start="158:18" pos:end="158:19">-&gt;</operator><name pos:start="158:20" pos:end="158:21">re</name></name> <operator pos:start="158:23" pos:end="158:23">=</operator> <operator pos:start="158:25" pos:end="158:25">-</operator><name pos:start="158:26" pos:end="158:47"><name pos:start="158:26" pos:end="158:26">s</name><operator pos:start="158:27" pos:end="158:28">-&gt;</operator><name pos:start="158:29" pos:end="158:34">exptab</name><index pos:start="158:35" pos:end="158:47">[<expr pos:start="158:36" pos:end="158:46"><name pos:start="158:36" pos:end="158:36">l</name> <operator pos:start="158:38" pos:end="158:38">+</operator> <name pos:start="158:40" pos:end="158:46">nblocks</name></expr>]</index></name><operator pos:start="158:48" pos:end="158:48">.</operator><name pos:start="158:49" pos:end="158:50">im</name></expr>;</expr_stmt>

                <expr_stmt pos:start="160:17" pos:end="160:50"><expr pos:start="160:17" pos:end="160:49"><name pos:start="160:17" pos:end="160:21"><name pos:start="160:17" pos:end="160:17">q</name><operator pos:start="160:18" pos:end="160:19">-&gt;</operator><name pos:start="160:20" pos:end="160:21">im</name></name> <operator pos:start="160:23" pos:end="160:23">=</operator> <name pos:start="160:25" pos:end="160:46"><name pos:start="160:25" pos:end="160:25">s</name><operator pos:start="160:26" pos:end="160:27">-&gt;</operator><name pos:start="160:28" pos:end="160:33">exptab</name><index pos:start="160:34" pos:end="160:46">[<expr pos:start="160:35" pos:end="160:45"><name pos:start="160:35" pos:end="160:35">l</name> <operator pos:start="160:37" pos:end="160:37">+</operator> <name pos:start="160:39" pos:end="160:45">nblocks</name></expr>]</index></name><operator pos:start="160:47" pos:end="160:47">.</operator><name pos:start="160:48" pos:end="160:49">re</name></expr>;</expr_stmt>

                <expr_stmt pos:start="162:17" pos:end="162:20"><expr pos:start="162:17" pos:end="162:19"><name pos:start="162:17" pos:end="162:17">q</name><operator pos:start="162:18" pos:end="162:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="166:13" pos:end="166:35"><expr pos:start="166:13" pos:end="166:34"><name pos:start="166:13" pos:end="166:19">nblocks</name> <operator pos:start="166:21" pos:end="166:21">=</operator> <name pos:start="166:23" pos:end="166:29">nblocks</name> <operator pos:start="166:31" pos:end="166:32">&gt;&gt;</operator> <literal type="number" pos:start="166:34" pos:end="166:34">1</literal></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="168:17" pos:end="168:30">(<expr pos:start="168:18" pos:end="168:29"><name pos:start="168:18" pos:end="168:24">nblocks</name> <operator pos:start="168:26" pos:end="168:27">!=</operator> <literal type="number" pos:start="168:29" pos:end="168:29">0</literal></expr>)</condition>;</do>

        <expr_stmt pos:start="170:9" pos:end="170:29"><expr pos:start="170:9" pos:end="170:28"><call pos:start="170:9" pos:end="170:28"><name pos:start="170:9" pos:end="170:16">av_freep</name><argument_list pos:start="170:17" pos:end="170:28">(<argument pos:start="170:18" pos:end="170:27"><expr pos:start="170:18" pos:end="170:27"><operator pos:start="170:18" pos:end="170:18">&amp;</operator><name pos:start="170:19" pos:end="170:27"><name pos:start="170:19" pos:end="170:19">s</name><operator pos:start="170:20" pos:end="170:21">-&gt;</operator><name pos:start="170:22" pos:end="170:27">exptab</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="176:5" pos:end="176:35">/* compute bit reverse table */</comment>



    <for pos:start="180:5" pos:end="192:5">for<control pos:start="180:8" pos:end="180:20">(<init pos:start="180:9" pos:end="180:12"><expr pos:start="180:9" pos:end="180:11"><name pos:start="180:9" pos:end="180:9">i</name><operator pos:start="180:10" pos:end="180:10">=</operator><literal type="number" pos:start="180:11" pos:end="180:11">0</literal></expr>;</init><condition pos:start="180:13" pos:end="180:16"><expr pos:start="180:13" pos:end="180:15"><name pos:start="180:13" pos:end="180:13">i</name><operator pos:start="180:14" pos:end="180:14">&lt;</operator><name pos:start="180:15" pos:end="180:15">n</name></expr>;</condition><incr pos:start="180:17" pos:end="180:19"><expr pos:start="180:17" pos:end="180:19"><name pos:start="180:17" pos:end="180:17">i</name><operator pos:start="180:18" pos:end="180:19">++</operator></expr></incr>)</control> <block pos:start="180:22" pos:end="192:5">{<block_content pos:start="182:9" pos:end="190:23">

        <expr_stmt pos:start="182:9" pos:end="182:12"><expr pos:start="182:9" pos:end="182:11"><name pos:start="182:9" pos:end="182:9">m</name><operator pos:start="182:10" pos:end="182:10">=</operator><literal type="number" pos:start="182:11" pos:end="182:11">0</literal></expr>;</expr_stmt>

        <for pos:start="184:9" pos:end="188:9">for<control pos:start="184:12" pos:end="184:28">(<init pos:start="184:13" pos:end="184:16"><expr pos:start="184:13" pos:end="184:15"><name pos:start="184:13" pos:end="184:13">j</name><operator pos:start="184:14" pos:end="184:14">=</operator><literal type="number" pos:start="184:15" pos:end="184:15">0</literal></expr>;</init><condition pos:start="184:17" pos:end="184:24"><expr pos:start="184:17" pos:end="184:23"><name pos:start="184:17" pos:end="184:17">j</name><operator pos:start="184:18" pos:end="184:18">&lt;</operator><name pos:start="184:19" pos:end="184:23">nbits</name></expr>;</condition><incr pos:start="184:25" pos:end="184:27"><expr pos:start="184:25" pos:end="184:27"><name pos:start="184:25" pos:end="184:25">j</name><operator pos:start="184:26" pos:end="184:27">++</operator></expr></incr>)</control> <block pos:start="184:30" pos:end="188:9">{<block_content pos:start="186:13" pos:end="186:47">

            <expr_stmt pos:start="186:13" pos:end="186:47"><expr pos:start="186:13" pos:end="186:46"><name pos:start="186:13" pos:end="186:13">m</name> <operator pos:start="186:15" pos:end="186:16">|=</operator> <operator pos:start="186:18" pos:end="186:18">(</operator><operator pos:start="186:19" pos:end="186:19">(</operator><name pos:start="186:20" pos:end="186:20">i</name> <operator pos:start="186:22" pos:end="186:23">&gt;&gt;</operator> <name pos:start="186:25" pos:end="186:25">j</name><operator pos:start="186:26" pos:end="186:26">)</operator> <operator pos:start="186:28" pos:end="186:28">&amp;</operator> <literal type="number" pos:start="186:30" pos:end="186:30">1</literal><operator pos:start="186:31" pos:end="186:31">)</operator> <operator pos:start="186:33" pos:end="186:34">&lt;&lt;</operator> <operator pos:start="186:36" pos:end="186:36">(</operator><name pos:start="186:37" pos:end="186:41">nbits</name><operator pos:start="186:42" pos:end="186:42">-</operator><name pos:start="186:43" pos:end="186:43">j</name><operator pos:start="186:44" pos:end="186:44">-</operator><literal type="number" pos:start="186:45" pos:end="186:45">1</literal><operator pos:start="186:46" pos:end="186:46">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="190:9" pos:end="190:23"><expr pos:start="190:9" pos:end="190:22"><name pos:start="190:9" pos:end="190:20"><name pos:start="190:9" pos:end="190:9">s</name><operator pos:start="190:10" pos:end="190:11">-&gt;</operator><name pos:start="190:12" pos:end="190:17">revtab</name><index pos:start="190:18" pos:end="190:20">[<expr pos:start="190:19" pos:end="190:19"><name pos:start="190:19" pos:end="190:19">i</name></expr>]</index></name><operator pos:start="190:21" pos:end="190:21">=</operator><name pos:start="190:22" pos:end="190:22">m</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="194:5" pos:end="194:13">return <expr pos:start="194:12" pos:end="194:12"><literal type="number" pos:start="194:12" pos:end="194:12">0</literal></expr>;</return>

 <label pos:start="196:2" pos:end="196:6"><name pos:start="196:2" pos:end="196:5">fail</name>:</label>

    <expr_stmt pos:start="198:5" pos:end="198:25"><expr pos:start="198:5" pos:end="198:24"><call pos:start="198:5" pos:end="198:24"><name pos:start="198:5" pos:end="198:12">av_freep</name><argument_list pos:start="198:13" pos:end="198:24">(<argument pos:start="198:14" pos:end="198:23"><expr pos:start="198:14" pos:end="198:23"><operator pos:start="198:14" pos:end="198:14">&amp;</operator><name pos:start="198:15" pos:end="198:23"><name pos:start="198:15" pos:end="198:15">s</name><operator pos:start="198:16" pos:end="198:17">-&gt;</operator><name pos:start="198:18" pos:end="198:23">revtab</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="200:5" pos:end="200:25"><expr pos:start="200:5" pos:end="200:24"><call pos:start="200:5" pos:end="200:24"><name pos:start="200:5" pos:end="200:12">av_freep</name><argument_list pos:start="200:13" pos:end="200:24">(<argument pos:start="200:14" pos:end="200:23"><expr pos:start="200:14" pos:end="200:23"><operator pos:start="200:14" pos:end="200:14">&amp;</operator><name pos:start="200:15" pos:end="200:23"><name pos:start="200:15" pos:end="200:15">s</name><operator pos:start="200:16" pos:end="200:17">-&gt;</operator><name pos:start="200:18" pos:end="200:23">exptab</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="202:5" pos:end="202:26"><expr pos:start="202:5" pos:end="202:25"><call pos:start="202:5" pos:end="202:25"><name pos:start="202:5" pos:end="202:12">av_freep</name><argument_list pos:start="202:13" pos:end="202:25">(<argument pos:start="202:14" pos:end="202:24"><expr pos:start="202:14" pos:end="202:24"><operator pos:start="202:14" pos:end="202:14">&amp;</operator><name pos:start="202:15" pos:end="202:24"><name pos:start="202:15" pos:end="202:15">s</name><operator pos:start="202:16" pos:end="202:17">-&gt;</operator><name pos:start="202:18" pos:end="202:24">exptab1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="204:5" pos:end="204:14">return <expr pos:start="204:12" pos:end="204:13"><operator pos:start="204:12" pos:end="204:12">-</operator><literal type="number" pos:start="204:13" pos:end="204:13">1</literal></expr>;</return>

</block_content>}</block></function></unit>
