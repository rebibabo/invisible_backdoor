<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15742.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:64"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">raw_refresh_limits</name><parameter_list pos:start="1:31" pos:end="1:66">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:58">Error</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:64">{<block_content pos:start="5:5" pos:end="35:64">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVRawState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:15">stat</name></name></type> <name pos:start="7:17" pos:end="7:18">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="35:64"><if pos:start="11:5" pos:end="35:64">if <condition pos:start="11:8" pos:end="11:27">(<expr pos:start="11:9" pos:end="11:26"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:26"><name pos:start="11:10" pos:end="11:14">fstat</name><argument_list pos:start="11:15" pos:end="11:26">(<argument pos:start="11:16" pos:end="11:20"><expr pos:start="11:16" pos:end="11:20"><name pos:start="11:16" pos:end="11:20"><name pos:start="11:16" pos:end="11:16">s</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:20">fd</name></name></expr></argument>, <argument pos:start="11:23" pos:end="11:25"><expr pos:start="11:23" pos:end="11:25"><operator pos:start="11:23" pos:end="11:23">&amp;</operator><name pos:start="11:24" pos:end="11:25">st</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:29" pos:end="35:64">{<block_content pos:start="13:9" pos:end="35:64">

        <if_stmt pos:start="13:9" pos:end="35:64"><if pos:start="13:9" pos:end="35:64">if <condition pos:start="13:12" pos:end="13:55">(<expr pos:start="13:13" pos:end="13:54"><call pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:19">S_ISBLK</name><argument_list pos:start="13:20" pos:end="13:31">(<argument pos:start="13:21" pos:end="13:30"><expr pos:start="13:21" pos:end="13:30"><name pos:start="13:21" pos:end="13:30"><name pos:start="13:21" pos:end="13:22">st</name><operator pos:start="13:23" pos:end="13:23">.</operator><name pos:start="13:24" pos:end="13:30">st_mode</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:33" pos:end="13:34">||</operator> <call pos:start="13:36" pos:end="13:54"><name pos:start="13:36" pos:end="13:42">S_ISCHR</name><argument_list pos:start="13:43" pos:end="13:54">(<argument pos:start="13:44" pos:end="13:53"><expr pos:start="13:44" pos:end="13:53"><name pos:start="13:44" pos:end="13:53"><name pos:start="13:44" pos:end="13:45">st</name><operator pos:start="13:46" pos:end="13:46">.</operator><name pos:start="13:47" pos:end="13:53">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:57" pos:end="35:64">{<block_content pos:start="15:13" pos:end="35:64">

            <decl_stmt pos:start="15:13" pos:end="15:62"><decl pos:start="15:13" pos:end="15:61"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:19">ret</name> <init pos:start="15:21" pos:end="15:61">= <expr pos:start="15:23" pos:end="15:61"><call pos:start="15:23" pos:end="15:61"><name pos:start="15:23" pos:end="15:50">hdev_get_max_transfer_length</name><argument_list pos:start="15:51" pos:end="15:61">(<argument pos:start="15:52" pos:end="15:53"><expr pos:start="15:52" pos:end="15:53"><name pos:start="15:52" pos:end="15:53">bs</name></expr></argument>, <argument pos:start="15:56" pos:end="15:60"><expr pos:start="15:56" pos:end="15:60"><name pos:start="15:56" pos:end="15:60"><name pos:start="15:56" pos:end="15:56">s</name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:60">fd</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="17:13" pos:end="35:64"><if pos:start="17:13" pos:end="35:64">if <condition pos:start="17:16" pos:end="17:57">(<expr pos:start="17:17" pos:end="17:56"><name pos:start="17:17" pos:end="17:19">ret</name> <operator pos:start="17:21" pos:end="17:21">&gt;</operator> <literal type="number" pos:start="17:23" pos:end="17:23">0</literal> <operator pos:start="17:25" pos:end="17:26">&amp;&amp;</operator> <name pos:start="17:28" pos:end="17:30">ret</name> <operator pos:start="17:32" pos:end="17:33">&lt;=</operator> <name pos:start="17:35" pos:end="17:56">BDRV_REQUEST_MAX_BYTES</name></expr>)</condition> <block pos:start="17:59" pos:end="35:64">{<block_content pos:start="19:17" pos:end="35:64">

                <expr_stmt pos:start="19:17" pos:end="19:53"><expr pos:start="19:17" pos:end="19:52"><name pos:start="19:17" pos:end="19:35"><name pos:start="19:17" pos:end="19:18">bs</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:22">bl</name><operator pos:start="19:23" pos:end="19:23">.</operator><name pos:start="19:24" pos:end="19:35">max_transfer</name></name> <operator pos:start="19:37" pos:end="19:37">=</operator> <call pos:start="19:39" pos:end="19:52"><name pos:start="19:39" pos:end="19:47">pow2floor</name><argument_list pos:start="19:48" pos:end="19:52">(<argument pos:start="19:49" pos:end="19:51"><expr pos:start="19:49" pos:end="19:51"><name pos:start="19:49" pos:end="19:51">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>











    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><call pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:23">raw_probe_alignment</name><argument_list pos:start="31:24" pos:end="31:40">(<argument pos:start="31:25" pos:end="31:26"><expr pos:start="31:25" pos:end="31:26"><name pos:start="31:25" pos:end="31:26">bs</name></expr></argument>, <argument pos:start="31:29" pos:end="31:33"><expr pos:start="31:29" pos:end="31:33"><name pos:start="31:29" pos:end="31:33"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:33">fd</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:39"><expr pos:start="31:36" pos:end="31:39"><name pos:start="31:36" pos:end="31:39">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:44"><expr pos:start="33:5" pos:end="33:43"><name pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:6">bs</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:10">bl</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:28">min_mem_alignment</name></name> <operator pos:start="33:30" pos:end="33:30">=</operator> <name pos:start="33:32" pos:end="33:43"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:43">buf_align</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:64"><expr pos:start="35:5" pos:end="35:63"><name pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:6">bs</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:10">bl</name><operator pos:start="35:11" pos:end="35:11">.</operator><name pos:start="35:12" pos:end="35:28">opt_mem_alignment</name></name> <operator pos:start="35:30" pos:end="35:30">=</operator> <call pos:start="35:32" pos:end="35:63"><name pos:start="35:32" pos:end="35:34">MAX</name><argument_list pos:start="35:35" pos:end="35:63">(<argument pos:start="35:36" pos:end="35:47"><expr pos:start="35:36" pos:end="35:47"><name pos:start="35:36" pos:end="35:47"><name pos:start="35:36" pos:end="35:36">s</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:47">buf_align</name></name></expr></argument>, <argument pos:start="35:50" pos:end="35:62"><expr pos:start="35:50" pos:end="35:62"><call pos:start="35:50" pos:end="35:62"><name pos:start="35:50" pos:end="35:60">getpagesize</name><argument_list pos:start="35:61" pos:end="35:62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
