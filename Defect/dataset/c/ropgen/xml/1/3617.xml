<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3617.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">select_reference_stream</name><parameter_list pos:start="1:35" pos:end="1:54">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SegmentContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">seg</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:7">seg</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:31">reference_stream_index</name></name> <operator pos:start="11:33" pos:end="11:33">=</operator> <operator pos:start="11:35" pos:end="11:35">-</operator><literal type="number" pos:start="11:36" pos:end="11:36">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="93:5"><if pos:start="13:5" pos:end="71:5">if <condition pos:start="13:8" pos:end="13:57">(<expr pos:start="13:9" pos:end="13:56"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:56"><name pos:start="13:10" pos:end="13:15">strcmp</name><argument_list pos:start="13:16" pos:end="13:56">(<argument pos:start="13:17" pos:end="13:47"><expr pos:start="13:17" pos:end="13:47"><name pos:start="13:17" pos:end="13:47"><name pos:start="13:17" pos:end="13:19">seg</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:47">reference_stream_specifier</name></name></expr></argument>, <argument pos:start="13:50" pos:end="13:55"><expr pos:start="13:50" pos:end="13:55"><literal type="string" pos:start="13:50" pos:end="13:55">"auto"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:59" pos:end="71:5">{<block_content pos:start="17:9" pos:end="69:9">

        <comment type="block" pos:start="15:9" pos:end="15:62">/* select first index of type with highest priority */</comment>

        <decl_stmt pos:start="17:9" pos:end="17:44"><decl pos:start="17:9" pos:end="17:43"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:43"><name pos:start="17:13" pos:end="17:26">type_index_map</name><index pos:start="17:27" pos:end="17:43">[<expr pos:start="17:28" pos:end="17:42"><name pos:start="17:28" pos:end="17:42">AVMEDIA_TYPE_NB</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="31:10"><decl pos:start="19:9" pos:end="31:9"><type pos:start="19:9" pos:end="19:37"><specifier pos:start="19:9" pos:end="19:14">static</specifier> <specifier pos:start="19:16" pos:end="19:20">const</specifier> <name pos:start="19:22" pos:end="19:37"><name pos:start="19:22" pos:end="19:25">enum</name> <name pos:start="19:27" pos:end="19:37">AVMediaType</name></name></type> <name pos:start="19:39" pos:end="19:58"><name pos:start="19:39" pos:end="19:56">type_priority_list</name><index pos:start="19:57" pos:end="19:58">[]</index></name> <init pos:start="19:60" pos:end="31:9">= <expr pos:start="19:62" pos:end="31:9"><block pos:start="19:62" pos:end="31:9">{

            <expr pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:30">AVMEDIA_TYPE_VIDEO</name></expr>,

            <expr pos:start="23:13" pos:end="23:30"><name pos:start="23:13" pos:end="23:30">AVMEDIA_TYPE_AUDIO</name></expr>,

            <expr pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:33">AVMEDIA_TYPE_SUBTITLE</name></expr>,

            <expr pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:29">AVMEDIA_TYPE_DATA</name></expr>,

            <expr pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:35">AVMEDIA_TYPE_ATTACHMENT</name></expr>

        }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:30"><decl pos:start="33:9" pos:end="33:29"><type pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:12">enum</name> <name pos:start="33:14" pos:end="33:24">AVMediaType</name></name></type> <name pos:start="33:26" pos:end="33:29">type</name></decl>;</decl_stmt>



        <for pos:start="37:9" pos:end="39:35">for <control pos:start="37:13" pos:end="37:45">(<init pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">i</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</init> <condition pos:start="37:21" pos:end="37:40"><expr pos:start="37:21" pos:end="37:39"><name pos:start="37:21" pos:end="37:21">i</name> <operator pos:start="37:23" pos:end="37:23">&lt;</operator> <name pos:start="37:25" pos:end="37:39">AVMEDIA_TYPE_NB</name></expr>;</condition> <incr pos:start="37:42" pos:end="37:44"><expr pos:start="37:42" pos:end="37:44"><name pos:start="37:42" pos:end="37:42">i</name><operator pos:start="37:43" pos:end="37:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:13" pos:end="39:35"><block_content pos:start="39:13" pos:end="39:35">

            <expr_stmt pos:start="39:13" pos:end="39:35"><expr pos:start="39:13" pos:end="39:34"><name pos:start="39:13" pos:end="39:29"><name pos:start="39:13" pos:end="39:26">type_index_map</name><index pos:start="39:27" pos:end="39:29">[<expr pos:start="39:28" pos:end="39:28"><name pos:start="39:28" pos:end="39:28">i</name></expr>]</index></name> <operator pos:start="39:31" pos:end="39:31">=</operator> <operator pos:start="39:33" pos:end="39:33">-</operator><literal type="number" pos:start="39:34" pos:end="39:34">1</literal></expr>;</expr_stmt></block_content></block></for>



        <comment type="block" pos:start="43:9" pos:end="43:46">/* select first index for each type */</comment>

        <for pos:start="45:9" pos:end="57:9">for <control pos:start="45:13" pos:end="45:43">(<init pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:18"><name pos:start="45:14" pos:end="45:14">i</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</init> <condition pos:start="45:21" pos:end="45:38"><expr pos:start="45:21" pos:end="45:37"><name pos:start="45:21" pos:end="45:21">i</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <name pos:start="45:25" pos:end="45:37"><name pos:start="45:25" pos:end="45:25">s</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:37">nb_streams</name></name></expr>;</condition> <incr pos:start="45:40" pos:end="45:42"><expr pos:start="45:40" pos:end="45:42"><name pos:start="45:40" pos:end="45:40">i</name><operator pos:start="45:41" pos:end="45:42">++</operator></expr></incr>)</control> <block pos:start="45:45" pos:end="57:9">{<block_content pos:start="47:13" pos:end="55:41">

            <expr_stmt pos:start="47:13" pos:end="47:52"><expr pos:start="47:13" pos:end="47:51"><name pos:start="47:13" pos:end="47:16">type</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:32"><name pos:start="47:20" pos:end="47:20">s</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:29">streams</name><index pos:start="47:30" pos:end="47:32">[<expr pos:start="47:31" pos:end="47:31"><name pos:start="47:31" pos:end="47:31">i</name></expr>]</index></name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:51"><name pos:start="47:35" pos:end="47:39">codec</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:51">codec_type</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="55:41"><if pos:start="49:13" pos:end="55:41">if <condition pos:start="49:16" pos:end="53:79">(<expr pos:start="49:17" pos:end="53:78"><operator pos:start="49:17" pos:end="49:17">(</operator><name pos:start="49:18" pos:end="49:25">unsigned</name><operator pos:start="49:26" pos:end="49:26">)</operator><name pos:start="49:27" pos:end="49:30">type</name> <operator pos:start="49:32" pos:end="49:32">&lt;</operator> <name pos:start="49:34" pos:end="49:48">AVMEDIA_TYPE_NB</name> <operator pos:start="49:50" pos:end="49:51">&amp;&amp;</operator> <name pos:start="49:53" pos:end="49:72"><name pos:start="49:53" pos:end="49:66">type_index_map</name><index pos:start="49:67" pos:end="49:72">[<expr pos:start="49:68" pos:end="49:71"><name pos:start="49:68" pos:end="49:71">type</name></expr>]</index></name> <operator pos:start="49:74" pos:end="49:75">==</operator> <operator pos:start="49:77" pos:end="49:77">-</operator><literal type="number" pos:start="49:78" pos:end="49:78">1</literal>

                <comment type="block" pos:start="51:17" pos:end="51:64">/* ignore attached pictures/cover art streams */</comment>

                <operator pos:start="53:17" pos:end="53:18">&amp;&amp;</operator> <operator pos:start="53:20" pos:end="53:20">!</operator><operator pos:start="53:21" pos:end="53:21">(</operator><name pos:start="53:22" pos:end="53:34"><name pos:start="53:22" pos:end="53:22">s</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:31">streams</name><index pos:start="53:32" pos:end="53:34">[<expr pos:start="53:33" pos:end="53:33"><name pos:start="53:33" pos:end="53:33">i</name></expr>]</index></name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:47">disposition</name> <operator pos:start="53:49" pos:end="53:49">&amp;</operator> <name pos:start="53:51" pos:end="53:77">AV_DISPOSITION_ATTACHED_PIC</name><operator pos:start="53:78" pos:end="53:78">)</operator></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:41"><block_content pos:start="55:17" pos:end="55:41">

                <expr_stmt pos:start="55:17" pos:end="55:41"><expr pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:36"><name pos:start="55:17" pos:end="55:30">type_index_map</name><index pos:start="55:31" pos:end="55:36">[<expr pos:start="55:32" pos:end="55:35"><name pos:start="55:32" pos:end="55:35">type</name></expr>]</index></name> <operator pos:start="55:38" pos:end="55:38">=</operator> <name pos:start="55:40" pos:end="55:40">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <for pos:start="61:9" pos:end="69:9">for <control pos:start="61:13" pos:end="61:64">(<init pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:18"><name pos:start="61:14" pos:end="61:14">i</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</init> <condition pos:start="61:21" pos:end="61:59"><expr pos:start="61:21" pos:end="61:58"><name pos:start="61:21" pos:end="61:21">i</name> <operator pos:start="61:23" pos:end="61:23">&lt;</operator> <call pos:start="61:25" pos:end="61:58"><name pos:start="61:25" pos:end="61:38">FF_ARRAY_ELEMS</name><argument_list pos:start="61:39" pos:end="61:58">(<argument pos:start="61:40" pos:end="61:57"><expr pos:start="61:40" pos:end="61:57"><name pos:start="61:40" pos:end="61:57">type_priority_list</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="61:61" pos:end="61:63"><expr pos:start="61:61" pos:end="61:63"><name pos:start="61:61" pos:end="61:61">i</name><operator pos:start="61:62" pos:end="61:63">++</operator></expr></incr>)</control> <block pos:start="61:66" pos:end="69:9">{<block_content pos:start="63:13" pos:end="67:22">

            <expr_stmt pos:start="63:13" pos:end="63:41"><expr pos:start="63:13" pos:end="63:40"><name pos:start="63:13" pos:end="63:16">type</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <name pos:start="63:20" pos:end="63:40"><name pos:start="63:20" pos:end="63:37">type_priority_list</name><index pos:start="63:38" pos:end="63:40">[<expr pos:start="63:39" pos:end="63:39"><name pos:start="63:39" pos:end="63:39">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="67:22"><if pos:start="65:13" pos:end="67:22">if <condition pos:start="65:16" pos:end="65:74">(<expr pos:start="65:17" pos:end="65:73"><operator pos:start="65:17" pos:end="65:17">(</operator><name pos:start="65:18" pos:end="65:44"><name pos:start="65:18" pos:end="65:20">seg</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:44">reference_stream_index</name></name> <operator pos:start="65:46" pos:end="65:46">=</operator> <name pos:start="65:48" pos:end="65:67"><name pos:start="65:48" pos:end="65:61">type_index_map</name><index pos:start="65:62" pos:end="65:67">[<expr pos:start="65:63" pos:end="65:66"><name pos:start="65:63" pos:end="65:66">type</name></expr>]</index></name><operator pos:start="65:68" pos:end="65:68">)</operator> <operator pos:start="65:70" pos:end="65:71">&gt;=</operator> <literal type="number" pos:start="65:73" pos:end="65:73">0</literal></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:22"><block_content pos:start="67:17" pos:end="67:22">

                <break pos:start="67:17" pos:end="67:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="93:5">else <block pos:start="71:12" pos:end="93:5">{<block_content pos:start="73:9" pos:end="91:9">

        <for pos:start="73:9" pos:end="91:9">for <control pos:start="73:13" pos:end="73:43">(<init pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:18"><name pos:start="73:14" pos:end="73:14">i</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>;</init> <condition pos:start="73:21" pos:end="73:38"><expr pos:start="73:21" pos:end="73:37"><name pos:start="73:21" pos:end="73:21">i</name> <operator pos:start="73:23" pos:end="73:23">&lt;</operator> <name pos:start="73:25" pos:end="73:37"><name pos:start="73:25" pos:end="73:25">s</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:37">nb_streams</name></name></expr>;</condition> <incr pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><name pos:start="73:40" pos:end="73:40">i</name><operator pos:start="73:41" pos:end="73:42">++</operator></expr></incr>)</control> <block pos:start="73:45" pos:end="91:9">{<block_content pos:start="75:13" pos:end="89:13">

            <expr_stmt pos:start="75:13" pos:end="77:83"><expr pos:start="75:13" pos:end="77:82"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <call pos:start="75:19" pos:end="77:82"><name pos:start="75:19" pos:end="75:49">avformat_match_stream_specifier</name><argument_list pos:start="75:50" pos:end="77:82">(<argument pos:start="75:51" pos:end="75:51"><expr pos:start="75:51" pos:end="75:51"><name pos:start="75:51" pos:end="75:51">s</name></expr></argument>, <argument pos:start="75:54" pos:end="75:66"><expr pos:start="75:54" pos:end="75:66"><name pos:start="75:54" pos:end="75:66"><name pos:start="75:54" pos:end="75:54">s</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:63">streams</name><index pos:start="75:64" pos:end="75:66">[<expr pos:start="75:65" pos:end="75:65"><name pos:start="75:65" pos:end="75:65">i</name></expr>]</index></name></expr></argument>,

                                                  <argument pos:start="77:51" pos:end="77:81"><expr pos:start="77:51" pos:end="77:81"><name pos:start="77:51" pos:end="77:81"><name pos:start="77:51" pos:end="77:53">seg</name><operator pos:start="77:54" pos:end="77:55">-&gt;</operator><name pos:start="77:56" pos:end="77:81">reference_stream_specifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="81:22"><if pos:start="79:13" pos:end="81:22">if <condition pos:start="79:16" pos:end="79:24">(<expr pos:start="79:17" pos:end="79:23"><name pos:start="79:17" pos:end="79:19">ret</name> <operator pos:start="79:21" pos:end="79:21">&lt;</operator> <literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:22"><block_content pos:start="81:17" pos:end="81:22">

                <break pos:start="81:17" pos:end="81:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="83:24">(<expr pos:start="83:17" pos:end="83:23"><name pos:start="83:17" pos:end="83:19">ret</name> <operator pos:start="83:21" pos:end="83:21">&gt;</operator> <literal type="number" pos:start="83:23" pos:end="83:23">0</literal></expr>)</condition> <block pos:start="83:26" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:22">

                <expr_stmt pos:start="85:17" pos:end="85:48"><expr pos:start="85:17" pos:end="85:47"><name pos:start="85:17" pos:end="85:43"><name pos:start="85:17" pos:end="85:19">seg</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:43">reference_stream_index</name></name> <operator pos:start="85:45" pos:end="85:45">=</operator> <name pos:start="85:47" pos:end="85:47">i</name></expr>;</expr_stmt>

                <break pos:start="87:17" pos:end="87:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="97:5" pos:end="105:5"><if pos:start="97:5" pos:end="105:5">if <condition pos:start="97:8" pos:end="97:40">(<expr pos:start="97:9" pos:end="97:39"><name pos:start="97:9" pos:end="97:35"><name pos:start="97:9" pos:end="97:11">seg</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:35">reference_stream_index</name></name> <operator pos:start="97:37" pos:end="97:37">&lt;</operator> <literal type="number" pos:start="97:39" pos:end="97:39">0</literal></expr>)</condition> <block pos:start="97:42" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:31">

        <expr_stmt pos:start="99:9" pos:end="101:48"><expr pos:start="99:9" pos:end="101:47"><call pos:start="99:9" pos:end="101:47"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="101:47">(<argument pos:start="99:16" pos:end="99:16"><expr pos:start="99:16" pos:end="99:16"><name pos:start="99:16" pos:end="99:16">s</name></expr></argument>, <argument pos:start="99:19" pos:end="99:30"><expr pos:start="99:19" pos:end="99:30"><name pos:start="99:19" pos:end="99:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:33" pos:end="99:84"><expr pos:start="99:33" pos:end="99:84"><literal type="string" pos:start="99:33" pos:end="99:84">"Could not select stream matching identifier '%s'\n"</literal></expr></argument>,

               <argument pos:start="101:16" pos:end="101:46"><expr pos:start="101:16" pos:end="101:46"><name pos:start="101:16" pos:end="101:46"><name pos:start="101:16" pos:end="101:18">seg</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:46">reference_stream_specifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:31">return <expr pos:start="103:16" pos:end="103:30"><call pos:start="103:16" pos:end="103:30"><name pos:start="103:16" pos:end="103:22">AVERROR</name><argument_list pos:start="103:23" pos:end="103:30">(<argument pos:start="103:24" pos:end="103:29"><expr pos:start="103:24" pos:end="103:29"><name pos:start="103:24" pos:end="103:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
