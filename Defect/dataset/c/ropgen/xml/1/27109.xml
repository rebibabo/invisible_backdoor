<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27109.c" pos:tabs="8"><function pos:start="1:1" pos:end="120:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">kvm_arm_gicv3_realize</name><parameter_list pos:start="1:34" pos:end="1:65">(<parameter pos:start="1:35" pos:end="1:50"><decl pos:start="1:35" pos:end="1:50"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:45">DeviceState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">dev</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:57">Error</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="120:1">{<block_content pos:start="5:5" pos:end="118:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">GICv3State</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><call pos:start="5:21" pos:end="5:38"><name pos:start="5:21" pos:end="5:33">KVM_ARM_GICV3</name><argument_list pos:start="5:34" pos:end="5:38">(<argument pos:start="5:35" pos:end="5:37"><expr pos:start="5:35" pos:end="5:37"><name pos:start="5:35" pos:end="5:37">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">KVMARMGICv3Class</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">kgc</name> <init pos:start="7:27" pos:end="7:54">= <expr pos:start="7:29" pos:end="7:54"><call pos:start="7:29" pos:end="7:54"><name pos:start="7:29" pos:end="7:51">KVM_ARM_GICV3_GET_CLASS</name><argument_list pos:start="7:52" pos:end="7:54">(<argument pos:start="7:53" pos:end="7:53"><expr pos:start="7:53" pos:end="7:53"><name pos:start="7:53" pos:end="7:53">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>




    <expr_stmt pos:start="14:5" pos:end="14:39"><expr pos:start="14:5" pos:end="14:38"><call pos:start="14:5" pos:end="14:38"><name pos:start="14:5" pos:end="14:11">DPRINTF</name><argument_list pos:start="14:12" pos:end="14:38">(<argument pos:start="14:13" pos:end="14:37"><expr pos:start="14:13" pos:end="14:37"><literal type="string" pos:start="14:13" pos:end="14:37">"kvm_arm_gicv3_realize\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="18:5" pos:end="18:41"><expr pos:start="18:5" pos:end="18:40"><call pos:start="18:5" pos:end="18:40"><name pos:start="18:5" pos:end="18:23"><name pos:start="18:5" pos:end="18:7">kgc</name><operator pos:start="18:8" pos:end="18:9">-&gt;</operator><name pos:start="18:10" pos:end="18:23">parent_realize</name></name><argument_list pos:start="18:24" pos:end="18:40">(<argument pos:start="18:25" pos:end="18:27"><expr pos:start="18:25" pos:end="18:27"><name pos:start="18:25" pos:end="18:27">dev</name></expr></argument>, <argument pos:start="18:30" pos:end="18:39"><expr pos:start="18:30" pos:end="18:39"><operator pos:start="18:30" pos:end="18:30">&amp;</operator><name pos:start="18:31" pos:end="18:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="20:5" pos:end="26:5"><if pos:start="20:5" pos:end="26:5">if <condition pos:start="20:8" pos:end="20:18">(<expr pos:start="20:9" pos:end="20:17"><name pos:start="20:9" pos:end="20:17">local_err</name></expr>)</condition> <block pos:start="20:20" pos:end="26:5">{<block_content pos:start="22:9" pos:end="24:15">

        <expr_stmt pos:start="22:9" pos:end="22:41"><expr pos:start="22:9" pos:end="22:40"><call pos:start="22:9" pos:end="22:40"><name pos:start="22:9" pos:end="22:23">error_propagate</name><argument_list pos:start="22:24" pos:end="22:40">(<argument pos:start="22:25" pos:end="22:28"><expr pos:start="22:25" pos:end="22:28"><name pos:start="22:25" pos:end="22:28">errp</name></expr></argument>, <argument pos:start="22:31" pos:end="22:39"><expr pos:start="22:31" pos:end="22:39"><name pos:start="22:31" pos:end="22:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="24:9" pos:end="24:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="30:5" pos:end="38:5"><if pos:start="30:5" pos:end="38:5">if <condition pos:start="30:8" pos:end="30:25">(<expr pos:start="30:9" pos:end="30:24"><name pos:start="30:9" pos:end="30:24"><name pos:start="30:9" pos:end="30:9">s</name><operator pos:start="30:10" pos:end="30:11">-&gt;</operator><name pos:start="30:12" pos:end="30:24">security_extn</name></name></expr>)</condition> <block pos:start="30:27" pos:end="38:5">{<block_content pos:start="32:9" pos:end="36:15">

        <expr_stmt pos:start="32:9" pos:end="34:42"><expr pos:start="32:9" pos:end="34:41"><call pos:start="32:9" pos:end="34:41"><name pos:start="32:9" pos:end="32:18">error_setg</name><argument_list pos:start="32:19" pos:end="34:41">(<argument pos:start="32:20" pos:end="32:23"><expr pos:start="32:20" pos:end="32:23"><name pos:start="32:20" pos:end="32:23">errp</name></expr></argument>, <argument pos:start="32:26" pos:end="34:40"><expr pos:start="32:26" pos:end="34:40"><literal type="string" pos:start="32:26" pos:end="32:71">"the in-kernel VGICv3 does not implement the "</literal>

                   <literal type="string" pos:start="34:20" pos:end="34:40">"security extensions"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="36:9" pos:end="36:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="42:5" pos:end="42:61"><expr pos:start="42:5" pos:end="42:60"><call pos:start="42:5" pos:end="42:60"><name pos:start="42:5" pos:end="42:28">gicv3_init_irqs_and_mmio</name><argument_list pos:start="42:29" pos:end="42:60">(<argument pos:start="42:30" pos:end="42:30"><expr pos:start="42:30" pos:end="42:30"><name pos:start="42:30" pos:end="42:30">s</name></expr></argument>, <argument pos:start="42:33" pos:end="42:53"><expr pos:start="42:33" pos:end="42:53"><name pos:start="42:33" pos:end="42:53">kvm_arm_gicv3_set_irq</name></expr></argument>, <argument pos:start="42:56" pos:end="42:59"><expr pos:start="42:56" pos:end="42:59"><name pos:start="42:56" pos:end="42:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="46:5" pos:end="46:61">/* Try to create the device via the device control API */</comment>

    <expr_stmt pos:start="48:5" pos:end="48:78"><expr pos:start="48:5" pos:end="48:77"><name pos:start="48:5" pos:end="48:13"><name pos:start="48:5" pos:end="48:5">s</name><operator pos:start="48:6" pos:end="48:7">-&gt;</operator><name pos:start="48:8" pos:end="48:13">dev_fd</name></name> <operator pos:start="48:15" pos:end="48:15">=</operator> <call pos:start="48:17" pos:end="48:77"><name pos:start="48:17" pos:end="48:33">kvm_create_device</name><argument_list pos:start="48:34" pos:end="48:77">(<argument pos:start="48:35" pos:end="48:43"><expr pos:start="48:35" pos:end="48:43"><name pos:start="48:35" pos:end="48:43">kvm_state</name></expr></argument>, <argument pos:start="48:46" pos:end="48:69"><expr pos:start="48:46" pos:end="48:69"><name pos:start="48:46" pos:end="48:69">KVM_DEV_TYPE_ARM_VGIC_V3</name></expr></argument>, <argument pos:start="48:72" pos:end="48:76"><expr pos:start="48:72" pos:end="48:76"><name pos:start="48:72" pos:end="48:76">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="50:5" pos:end="56:5"><if pos:start="50:5" pos:end="56:5">if <condition pos:start="50:8" pos:end="50:22">(<expr pos:start="50:9" pos:end="50:21"><name pos:start="50:9" pos:end="50:17"><name pos:start="50:9" pos:end="50:9">s</name><operator pos:start="50:10" pos:end="50:11">-&gt;</operator><name pos:start="50:12" pos:end="50:17">dev_fd</name></name> <operator pos:start="50:19" pos:end="50:19">&lt;</operator> <literal type="number" pos:start="50:21" pos:end="50:21">0</literal></expr>)</condition> <block pos:start="50:24" pos:end="56:5">{<block_content pos:start="52:9" pos:end="54:15">

        <expr_stmt pos:start="52:9" pos:end="52:76"><expr pos:start="52:9" pos:end="52:75"><call pos:start="52:9" pos:end="52:75"><name pos:start="52:9" pos:end="52:24">error_setg_errno</name><argument_list pos:start="52:25" pos:end="52:75">(<argument pos:start="52:26" pos:end="52:29"><expr pos:start="52:26" pos:end="52:29"><name pos:start="52:26" pos:end="52:29">errp</name></expr></argument>, <argument pos:start="52:32" pos:end="52:41"><expr pos:start="52:32" pos:end="52:41"><operator pos:start="52:32" pos:end="52:32">-</operator><name pos:start="52:33" pos:end="52:41"><name pos:start="52:33" pos:end="52:33">s</name><operator pos:start="52:34" pos:end="52:35">-&gt;</operator><name pos:start="52:36" pos:end="52:41">dev_fd</name></name></expr></argument>, <argument pos:start="52:44" pos:end="52:74"><expr pos:start="52:44" pos:end="52:74"><literal type="string" pos:start="52:44" pos:end="52:74">"error creating in-kernel VGIC"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="54:9" pos:end="54:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="60:5" pos:end="62:44"><expr pos:start="60:5" pos:end="62:43"><call pos:start="60:5" pos:end="62:43"><name pos:start="60:5" pos:end="60:21">kvm_device_access</name><argument_list pos:start="60:22" pos:end="62:43">(<argument pos:start="60:23" pos:end="60:31"><expr pos:start="60:23" pos:end="60:31"><name pos:start="60:23" pos:end="60:31"><name pos:start="60:23" pos:end="60:23">s</name><operator pos:start="60:24" pos:end="60:25">-&gt;</operator><name pos:start="60:26" pos:end="60:31">dev_fd</name></name></expr></argument>, <argument pos:start="60:34" pos:end="60:61"><expr pos:start="60:34" pos:end="60:61"><name pos:start="60:34" pos:end="60:61">KVM_DEV_ARM_VGIC_GRP_NR_IRQS</name></expr></argument>,

                      <argument pos:start="62:23" pos:end="62:23"><expr pos:start="62:23" pos:end="62:23"><literal type="number" pos:start="62:23" pos:end="62:23">0</literal></expr></argument>, <argument pos:start="62:26" pos:end="62:36"><expr pos:start="62:26" pos:end="62:36"><operator pos:start="62:26" pos:end="62:26">&amp;</operator><name pos:start="62:27" pos:end="62:36"><name pos:start="62:27" pos:end="62:27">s</name><operator pos:start="62:28" pos:end="62:29">-&gt;</operator><name pos:start="62:30" pos:end="62:36">num_irq</name></name></expr></argument>, <argument pos:start="62:39" pos:end="62:42"><expr pos:start="62:39" pos:end="62:42"><name pos:start="62:39" pos:end="62:42">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="66:5" pos:end="66:61">/* Tell the kernel to complete VGIC initialization now */</comment>

    <expr_stmt pos:start="68:5" pos:end="70:62"><expr pos:start="68:5" pos:end="70:61"><call pos:start="68:5" pos:end="70:61"><name pos:start="68:5" pos:end="68:21">kvm_device_access</name><argument_list pos:start="68:22" pos:end="70:61">(<argument pos:start="68:23" pos:end="68:31"><expr pos:start="68:23" pos:end="68:31"><name pos:start="68:23" pos:end="68:31"><name pos:start="68:23" pos:end="68:23">s</name><operator pos:start="68:24" pos:end="68:25">-&gt;</operator><name pos:start="68:26" pos:end="68:31">dev_fd</name></name></expr></argument>, <argument pos:start="68:34" pos:end="68:58"><expr pos:start="68:34" pos:end="68:58"><name pos:start="68:34" pos:end="68:58">KVM_DEV_ARM_VGIC_GRP_CTRL</name></expr></argument>,

                      <argument pos:start="70:23" pos:end="70:48"><expr pos:start="70:23" pos:end="70:48"><name pos:start="70:23" pos:end="70:48">KVM_DEV_ARM_VGIC_CTRL_INIT</name></expr></argument>, <argument pos:start="70:51" pos:end="70:54"><expr pos:start="70:51" pos:end="70:54"><name pos:start="70:51" pos:end="70:54">NULL</name></expr></argument>, <argument pos:start="70:57" pos:end="70:60"><expr pos:start="70:57" pos:end="70:60"><name pos:start="70:57" pos:end="70:60">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="74:5" pos:end="76:67"><expr pos:start="74:5" pos:end="76:66"><call pos:start="74:5" pos:end="76:66"><name pos:start="74:5" pos:end="74:27">kvm_arm_register_device</name><argument_list pos:start="74:28" pos:end="76:66">(<argument pos:start="74:29" pos:end="74:42"><expr pos:start="74:29" pos:end="74:42"><operator pos:start="74:29" pos:end="74:29">&amp;</operator><name pos:start="74:30" pos:end="74:42"><name pos:start="74:30" pos:end="74:30">s</name><operator pos:start="74:31" pos:end="74:32">-&gt;</operator><name pos:start="74:33" pos:end="74:42">iomem_dist</name></name></expr></argument>, <argument pos:start="74:45" pos:end="74:46"><expr pos:start="74:45" pos:end="74:46"><operator pos:start="74:45" pos:end="74:45">-</operator><literal type="number" pos:start="74:46" pos:end="74:46">1</literal></expr></argument>, <argument pos:start="74:49" pos:end="74:73"><expr pos:start="74:49" pos:end="74:73"><name pos:start="74:49" pos:end="74:73">KVM_DEV_ARM_VGIC_GRP_ADDR</name></expr></argument>,

                            <argument pos:start="76:29" pos:end="76:54"><expr pos:start="76:29" pos:end="76:54"><name pos:start="76:29" pos:end="76:54">KVM_VGIC_V3_ADDR_TYPE_DIST</name></expr></argument>, <argument pos:start="76:57" pos:end="76:65"><expr pos:start="76:57" pos:end="76:65"><name pos:start="76:57" pos:end="76:65"><name pos:start="76:57" pos:end="76:57">s</name><operator pos:start="76:58" pos:end="76:59">-&gt;</operator><name pos:start="76:60" pos:end="76:65">dev_fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="78:5" pos:end="80:69"><expr pos:start="78:5" pos:end="80:68"><call pos:start="78:5" pos:end="80:68"><name pos:start="78:5" pos:end="78:27">kvm_arm_register_device</name><argument_list pos:start="78:28" pos:end="80:68">(<argument pos:start="78:29" pos:end="78:44"><expr pos:start="78:29" pos:end="78:44"><operator pos:start="78:29" pos:end="78:29">&amp;</operator><name pos:start="78:30" pos:end="78:44"><name pos:start="78:30" pos:end="78:30">s</name><operator pos:start="78:31" pos:end="78:32">-&gt;</operator><name pos:start="78:33" pos:end="78:44">iomem_redist</name></name></expr></argument>, <argument pos:start="78:47" pos:end="78:48"><expr pos:start="78:47" pos:end="78:48"><operator pos:start="78:47" pos:end="78:47">-</operator><literal type="number" pos:start="78:48" pos:end="78:48">1</literal></expr></argument>, <argument pos:start="78:51" pos:end="78:75"><expr pos:start="78:51" pos:end="78:75"><name pos:start="78:51" pos:end="78:75">KVM_DEV_ARM_VGIC_GRP_ADDR</name></expr></argument>,

                            <argument pos:start="80:29" pos:end="80:56"><expr pos:start="80:29" pos:end="80:56"><name pos:start="80:29" pos:end="80:56">KVM_VGIC_V3_ADDR_TYPE_REDIST</name></expr></argument>, <argument pos:start="80:59" pos:end="80:67"><expr pos:start="80:59" pos:end="80:67"><name pos:start="80:59" pos:end="80:67"><name pos:start="80:59" pos:end="80:59">s</name><operator pos:start="80:60" pos:end="80:61">-&gt;</operator><name pos:start="80:62" pos:end="80:67">dev_fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="84:5" pos:end="90:7">/* Block migration of a KVM GICv3 device: the API for saving and restoring

     * the state in the kernel is not yet finalised in the kernel or

     * implemented in QEMU.

     */</comment>

    <expr_stmt pos:start="92:5" pos:end="92:77"><expr pos:start="92:5" pos:end="92:76"><call pos:start="92:5" pos:end="92:76"><name pos:start="92:5" pos:end="92:14">error_setg</name><argument_list pos:start="92:15" pos:end="92:76">(<argument pos:start="92:16" pos:end="92:36"><expr pos:start="92:16" pos:end="92:36"><operator pos:start="92:16" pos:end="92:16">&amp;</operator><name pos:start="92:17" pos:end="92:36"><name pos:start="92:17" pos:end="92:17">s</name><operator pos:start="92:18" pos:end="92:19">-&gt;</operator><name pos:start="92:20" pos:end="92:36">migration_blocker</name></name></expr></argument>, <argument pos:start="92:39" pos:end="92:75"><expr pos:start="92:39" pos:end="92:75"><literal type="string" pos:start="92:39" pos:end="92:75">"vGICv3 migration is not implemented"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="94:5" pos:end="94:46"><expr pos:start="94:5" pos:end="94:45"><call pos:start="94:5" pos:end="94:45"><name pos:start="94:5" pos:end="94:23">migrate_add_blocker</name><argument_list pos:start="94:24" pos:end="94:45">(<argument pos:start="94:25" pos:end="94:44"><expr pos:start="94:25" pos:end="94:44"><name pos:start="94:25" pos:end="94:44"><name pos:start="94:25" pos:end="94:25">s</name><operator pos:start="94:26" pos:end="94:27">-&gt;</operator><name pos:start="94:28" pos:end="94:44">migration_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="98:5" pos:end="118:5"><if pos:start="98:5" pos:end="118:5">if <condition pos:start="98:8" pos:end="98:30">(<expr pos:start="98:9" pos:end="98:29"><call pos:start="98:9" pos:end="98:29"><name pos:start="98:9" pos:end="98:27">kvm_has_gsi_routing</name><argument_list pos:start="98:28" pos:end="98:29">()</argument_list></call></expr>)</condition> <block pos:start="98:32" pos:end="118:5">{<block_content pos:start="102:9" pos:end="116:45">

        <comment type="block" pos:start="100:9" pos:end="100:32">/* set up irq routing */</comment>

        <expr_stmt pos:start="102:9" pos:end="102:40"><expr pos:start="102:9" pos:end="102:39"><call pos:start="102:9" pos:end="102:39"><name pos:start="102:9" pos:end="102:28">kvm_init_irq_routing</name><argument_list pos:start="102:29" pos:end="102:39">(<argument pos:start="102:30" pos:end="102:38"><expr pos:start="102:30" pos:end="102:38"><name pos:start="102:30" pos:end="102:38">kvm_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="104:9" pos:end="108:9">for <control pos:start="104:13" pos:end="104:55">(<init pos:start="104:14" pos:end="104:19"><expr pos:start="104:14" pos:end="104:18"><name pos:start="104:14" pos:end="104:14">i</name> <operator pos:start="104:16" pos:end="104:16">=</operator> <literal type="number" pos:start="104:18" pos:end="104:18">0</literal></expr>;</init> <condition pos:start="104:21" pos:end="104:50"><expr pos:start="104:21" pos:end="104:49"><name pos:start="104:21" pos:end="104:21">i</name> <operator pos:start="104:23" pos:end="104:23">&lt;</operator> <name pos:start="104:25" pos:end="104:34"><name pos:start="104:25" pos:end="104:25">s</name><operator pos:start="104:26" pos:end="104:27">-&gt;</operator><name pos:start="104:28" pos:end="104:34">num_irq</name></name> <operator pos:start="104:36" pos:end="104:36">-</operator> <name pos:start="104:38" pos:end="104:49">GIC_INTERNAL</name></expr>;</condition> <incr pos:start="104:52" pos:end="104:54"><expr pos:start="104:52" pos:end="104:54"><operator pos:start="104:52" pos:end="104:53">++</operator><name pos:start="104:54" pos:end="104:54">i</name></expr></incr>)</control> <block pos:start="104:57" pos:end="108:9">{<block_content pos:start="106:13" pos:end="106:58">

            <expr_stmt pos:start="106:13" pos:end="106:58"><expr pos:start="106:13" pos:end="106:57"><call pos:start="106:13" pos:end="106:57"><name pos:start="106:13" pos:end="106:37">kvm_irqchip_add_irq_route</name><argument_list pos:start="106:38" pos:end="106:57">(<argument pos:start="106:39" pos:end="106:47"><expr pos:start="106:39" pos:end="106:47"><name pos:start="106:39" pos:end="106:47">kvm_state</name></expr></argument>, <argument pos:start="106:50" pos:end="106:50"><expr pos:start="106:50" pos:end="106:50"><name pos:start="106:50" pos:end="106:50">i</name></expr></argument>, <argument pos:start="106:53" pos:end="106:53"><expr pos:start="106:53" pos:end="106:53"><literal type="number" pos:start="106:53" pos:end="106:53">0</literal></expr></argument>, <argument pos:start="106:56" pos:end="106:56"><expr pos:start="106:56" pos:end="106:56"><name pos:start="106:56" pos:end="106:56">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="112:9" pos:end="112:39"><expr pos:start="112:9" pos:end="112:38"><name pos:start="112:9" pos:end="112:31">kvm_gsi_routing_allowed</name> <operator pos:start="112:33" pos:end="112:33">=</operator> <name pos:start="112:35" pos:end="112:38">true</name></expr>;</expr_stmt>



        <expr_stmt pos:start="116:9" pos:end="116:45"><expr pos:start="116:9" pos:end="116:44"><call pos:start="116:9" pos:end="116:44"><name pos:start="116:9" pos:end="116:33">kvm_irqchip_commit_routes</name><argument_list pos:start="116:34" pos:end="116:44">(<argument pos:start="116:35" pos:end="116:43"><expr pos:start="116:35" pos:end="116:43"><name pos:start="116:35" pos:end="116:43">kvm_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function></unit>
