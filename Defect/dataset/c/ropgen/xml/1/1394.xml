<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1394.c" pos:tabs="8"><function pos:start="1:1" pos:end="259:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">audio_resample</name><parameter_list pos:start="1:19" pos:end="1:83">(<parameter pos:start="1:20" pos:end="1:37"><decl pos:start="1:20" pos:end="1:37"><type pos:start="1:20" pos:end="1:37"><name pos:start="1:20" pos:end="1:34">ReSampleContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:44">short</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:52">output</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:59">short</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">input</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:82"><decl pos:start="1:69" pos:end="1:82"><type pos:start="1:69" pos:end="1:82"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:82">nb_samples</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="259:1">{<block_content pos:start="5:5" pos:end="257:23">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:22">nb_samples1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">short</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:19"><name pos:start="7:12" pos:end="7:16">bufin</name><index pos:start="7:17" pos:end="7:19">[<expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">short</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20"><name pos:start="9:12" pos:end="9:17">bufout</name><index pos:start="9:18" pos:end="9:20">[<expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">short</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:21"><name pos:start="11:12" pos:end="11:18">buftmp2</name><index pos:start="11:19" pos:end="11:21">[<expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">2</literal></expr>]</index></name></decl>, <decl pos:start="11:24" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:31">buftmp3</name><index pos:start="11:32" pos:end="11:34">[<expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">short</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:21">output_bak</name> <init pos:start="13:23" pos:end="13:28">= <expr pos:start="13:25" pos:end="13:28"><name pos:start="13:25" pos:end="13:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">lenout</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:72">(<expr pos:start="19:9" pos:end="19:71"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:25">input_channels</name></name> <operator pos:start="19:27" pos:end="19:28">==</operator> <name pos:start="19:30" pos:end="19:47"><name pos:start="19:30" pos:end="19:30">s</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:47">output_channels</name></name> <operator pos:start="19:49" pos:end="19:50">&amp;&amp;</operator> <name pos:start="19:52" pos:end="19:59"><name pos:start="19:52" pos:end="19:52">s</name><operator pos:start="19:53" pos:end="19:54">-&gt;</operator><name pos:start="19:55" pos:end="19:59">ratio</name></name> <operator pos:start="19:61" pos:end="19:62">==</operator> <literal type="number" pos:start="19:64" pos:end="19:66">1.0</literal> <operator pos:start="19:68" pos:end="19:69">&amp;&amp;</operator> <literal type="number" pos:start="19:71" pos:end="19:71">0</literal></expr>)</condition> <block pos:start="19:74" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:26">

        <comment type="block" pos:start="21:9" pos:end="21:27">/* nothing to do */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:78"><expr pos:start="23:9" pos:end="23:77"><call pos:start="23:9" pos:end="23:77"><name pos:start="23:9" pos:end="23:14">memcpy</name><argument_list pos:start="23:15" pos:end="23:77">(<argument pos:start="23:16" pos:end="23:21"><expr pos:start="23:16" pos:end="23:21"><name pos:start="23:16" pos:end="23:21">output</name></expr></argument>, <argument pos:start="23:24" pos:end="23:28"><expr pos:start="23:24" pos:end="23:28"><name pos:start="23:24" pos:end="23:28">input</name></expr></argument>, <argument pos:start="23:31" pos:end="23:76"><expr pos:start="23:31" pos:end="23:76"><name pos:start="23:31" pos:end="23:40">nb_samples</name> <operator pos:start="23:42" pos:end="23:42">*</operator> <name pos:start="23:44" pos:end="23:60"><name pos:start="23:44" pos:end="23:44">s</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:60">input_channels</name></name> <operator pos:start="23:62" pos:end="23:62">*</operator> <sizeof pos:start="23:64" pos:end="23:76">sizeof<argument_list pos:start="23:70" pos:end="23:76">(<argument pos:start="23:71" pos:end="23:75"><expr pos:start="23:71" pos:end="23:75"><name pos:start="23:71" pos:end="23:75">short</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:26">return <expr pos:start="25:16" pos:end="25:25"><name pos:start="25:16" pos:end="25:25">nb_samples</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="83:5"><if pos:start="31:5" pos:end="83:5">if <condition pos:start="31:8" pos:end="31:43">(<expr pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">sample_fmt</name><index pos:start="31:22" pos:end="31:24">[<expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">0</literal></expr>]</index></name> <operator pos:start="31:26" pos:end="31:27">!=</operator> <name pos:start="31:29" pos:end="31:42">SAMPLE_FMT_S16</name></expr>)</condition> <block pos:start="31:45" pos:end="83:5">{<block_content pos:start="33:9" pos:end="81:30">

        <decl_stmt pos:start="33:9" pos:end="33:47"><decl pos:start="33:9" pos:end="33:46"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:19">istride</name><index pos:start="33:20" pos:end="33:22">[<expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>]</index></name> <init pos:start="33:24" pos:end="33:46">= <expr pos:start="33:26" pos:end="33:46"><block pos:start="33:26" pos:end="33:46">{ <expr pos:start="33:28" pos:end="33:44"><name pos:start="33:28" pos:end="33:44"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:41">sample_size</name><index pos:start="33:42" pos:end="33:44">[<expr pos:start="33:43" pos:end="33:43"><literal type="number" pos:start="33:43" pos:end="33:43">0</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:31"><decl pos:start="35:9" pos:end="35:30"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:19">ostride</name><index pos:start="35:20" pos:end="35:22">[<expr pos:start="35:21" pos:end="35:21"><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>]</index></name> <init pos:start="35:24" pos:end="35:30">= <expr pos:start="35:26" pos:end="35:30"><block pos:start="35:26" pos:end="35:30">{ <expr pos:start="35:28" pos:end="35:28"><literal type="number" pos:start="35:28" pos:end="35:28">2</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:40"><decl pos:start="37:9" pos:end="37:39"><type pos:start="37:9" pos:end="37:20"><specifier pos:start="37:9" pos:end="37:13">const</specifier> <name pos:start="37:15" pos:end="37:18">void</name> <modifier pos:start="37:20" pos:end="37:20">*</modifier></type><name pos:start="37:21" pos:end="37:27"><name pos:start="37:21" pos:end="37:24">ibuf</name><index pos:start="37:25" pos:end="37:27">[<expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">1</literal></expr>]</index></name> <init pos:start="37:29" pos:end="37:39">= <expr pos:start="37:31" pos:end="37:39"><block pos:start="37:31" pos:end="37:39">{ <expr pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:37">input</name></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:28"><decl pos:start="39:9" pos:end="39:27"><type pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:12">void</name>       <modifier pos:start="39:20" pos:end="39:20">*</modifier></type><name pos:start="39:21" pos:end="39:27"><name pos:start="39:21" pos:end="39:24">obuf</name><index pos:start="39:25" pos:end="39:27">[<expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:77"><decl pos:start="41:9" pos:end="41:76"><type pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:16">unsigned</name></type> <name pos:start="41:18" pos:end="41:27">input_size</name> <init pos:start="41:29" pos:end="41:76">= <expr pos:start="41:31" pos:end="41:76"><name pos:start="41:31" pos:end="41:40">nb_samples</name><operator pos:start="41:41" pos:end="41:41">*</operator><name pos:start="41:42" pos:end="41:58"><name pos:start="41:42" pos:end="41:42">s</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:58">input_channels</name></name><operator pos:start="41:59" pos:end="41:59">*</operator><name pos:start="41:60" pos:end="41:76"><name pos:start="41:60" pos:end="41:60">s</name><operator pos:start="41:61" pos:end="41:62">-&gt;</operator><name pos:start="41:63" pos:end="41:73">sample_size</name><index pos:start="41:74" pos:end="41:76">[<expr pos:start="41:75" pos:end="41:75"><literal type="number" pos:start="41:75" pos:end="41:75">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="45:9" pos:end="61:9"><if pos:start="45:9" pos:end="61:9">if <condition pos:start="45:12" pos:end="45:65">(<expr pos:start="45:13" pos:end="45:64"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:30"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:27">buffer_size</name><index pos:start="45:28" pos:end="45:30">[<expr pos:start="45:29" pos:end="45:29"><literal type="number" pos:start="45:29" pos:end="45:29">0</literal></expr>]</index></name> <operator pos:start="45:32" pos:end="45:33">||</operator> <name pos:start="45:35" pos:end="45:51"><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:48">buffer_size</name><index pos:start="45:49" pos:end="45:51">[<expr pos:start="45:50" pos:end="45:50"><literal type="number" pos:start="45:50" pos:end="45:50">0</literal></expr>]</index></name> <operator pos:start="45:53" pos:end="45:53">&lt;</operator> <name pos:start="45:55" pos:end="45:64">input_size</name></expr>)</condition> <block pos:start="45:67" pos:end="61:9">{<block_content pos:start="47:13" pos:end="59:13">

            <expr_stmt pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><call pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:19">av_free</name><argument_list pos:start="47:20" pos:end="47:33">(<argument pos:start="47:21" pos:end="47:32"><expr pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:21">s</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:29">buffer</name><index pos:start="47:30" pos:end="47:32">[<expr pos:start="47:31" pos:end="47:31"><literal type="number" pos:start="47:31" pos:end="47:31">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:43"><expr pos:start="49:13" pos:end="49:42"><name pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:26">buffer_size</name><index pos:start="49:27" pos:end="49:29">[<expr pos:start="49:28" pos:end="49:28"><literal type="number" pos:start="49:28" pos:end="49:28">0</literal></expr>]</index></name> <operator pos:start="49:31" pos:end="49:31">=</operator> <name pos:start="49:33" pos:end="49:42">input_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:56"><expr pos:start="51:13" pos:end="51:55"><name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:21">buffer</name><index pos:start="51:22" pos:end="51:24">[<expr pos:start="51:23" pos:end="51:23"><literal type="number" pos:start="51:23" pos:end="51:23">0</literal></expr>]</index></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <call pos:start="51:28" pos:end="51:55"><name pos:start="51:28" pos:end="51:36">av_malloc</name><argument_list pos:start="51:37" pos:end="51:55">(<argument pos:start="51:38" pos:end="51:54"><expr pos:start="51:38" pos:end="51:54"><name pos:start="51:38" pos:end="51:54"><name pos:start="51:38" pos:end="51:38">s</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:51">buffer_size</name><index pos:start="51:52" pos:end="51:54">[<expr pos:start="51:53" pos:end="51:53"><literal type="number" pos:start="51:53" pos:end="51:53">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="59:13"><if pos:start="53:13" pos:end="59:13">if <condition pos:start="53:16" pos:end="53:30">(<expr pos:start="53:17" pos:end="53:29"><operator pos:start="53:17" pos:end="53:17">!</operator><name pos:start="53:18" pos:end="53:29"><name pos:start="53:18" pos:end="53:18">s</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:26">buffer</name><index pos:start="53:27" pos:end="53:29">[<expr pos:start="53:28" pos:end="53:28"><literal type="number" pos:start="53:28" pos:end="53:28">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="53:32" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:25">

                <expr_stmt pos:start="55:17" pos:end="55:71"><expr pos:start="55:17" pos:end="55:70"><call pos:start="55:17" pos:end="55:70"><name pos:start="55:17" pos:end="55:22">av_log</name><argument_list pos:start="55:23" pos:end="55:70">(<argument pos:start="55:24" pos:end="55:24"><expr pos:start="55:24" pos:end="55:24"><name pos:start="55:24" pos:end="55:24">s</name></expr></argument>, <argument pos:start="55:27" pos:end="55:38"><expr pos:start="55:27" pos:end="55:38"><name pos:start="55:27" pos:end="55:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:41" pos:end="55:69"><expr pos:start="55:41" pos:end="55:69"><literal type="string" pos:start="55:41" pos:end="55:69">"Could not allocate buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="57:17" pos:end="57:25">return <expr pos:start="57:24" pos:end="57:24"><literal type="number" pos:start="57:24" pos:end="57:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:31"><expr pos:start="65:9" pos:end="65:30"><name pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:12">obuf</name><index pos:start="65:13" pos:end="65:15">[<expr pos:start="65:14" pos:end="65:14"><literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>]</index></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:30"><name pos:start="65:19" pos:end="65:19">s</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:27">buffer</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><literal type="number" pos:start="65:29" pos:end="65:29">0</literal></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="69:9" pos:end="77:9"><if pos:start="69:9" pos:end="77:9">if <condition pos:start="69:12" pos:end="71:78">(<expr pos:start="69:13" pos:end="71:77"><call pos:start="69:13" pos:end="71:73"><name pos:start="69:13" pos:end="69:28">av_audio_convert</name><argument_list pos:start="69:29" pos:end="71:73">(<argument pos:start="69:30" pos:end="69:46"><expr pos:start="69:30" pos:end="69:46"><name pos:start="69:30" pos:end="69:46"><name pos:start="69:30" pos:end="69:30">s</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:43">convert_ctx</name><index pos:start="69:44" pos:end="69:46">[<expr pos:start="69:45" pos:end="69:45"><literal type="number" pos:start="69:45" pos:end="69:45">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="69:49" pos:end="69:52"><expr pos:start="69:49" pos:end="69:52"><name pos:start="69:49" pos:end="69:52">obuf</name></expr></argument>, <argument pos:start="69:55" pos:end="69:61"><expr pos:start="69:55" pos:end="69:61"><name pos:start="69:55" pos:end="69:61">ostride</name></expr></argument>,

                             <argument pos:start="71:30" pos:end="71:33"><expr pos:start="71:30" pos:end="71:33"><name pos:start="71:30" pos:end="71:33">ibuf</name></expr></argument>, <argument pos:start="71:36" pos:end="71:42"><expr pos:start="71:36" pos:end="71:42"><name pos:start="71:36" pos:end="71:42">istride</name></expr></argument>, <argument pos:start="71:45" pos:end="71:72"><expr pos:start="71:45" pos:end="71:72"><name pos:start="71:45" pos:end="71:54">nb_samples</name><operator pos:start="71:55" pos:end="71:55">*</operator><name pos:start="71:56" pos:end="71:72"><name pos:start="71:56" pos:end="71:56">s</name><operator pos:start="71:57" pos:end="71:58">-&gt;</operator><name pos:start="71:59" pos:end="71:72">input_channels</name></name></expr></argument>)</argument_list></call> <operator pos:start="71:75" pos:end="71:75">&lt;</operator> <literal type="number" pos:start="71:77" pos:end="71:77">0</literal></expr>)</condition> <block pos:start="71:80" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:21">

            <expr_stmt pos:start="73:13" pos:end="73:79"><expr pos:start="73:13" pos:end="73:78"><call pos:start="73:13" pos:end="73:78"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="73:78">(<argument pos:start="73:20" pos:end="73:20"><expr pos:start="73:20" pos:end="73:20"><name pos:start="73:20" pos:end="73:20">s</name></expr></argument>, <argument pos:start="73:23" pos:end="73:34"><expr pos:start="73:23" pos:end="73:34"><name pos:start="73:23" pos:end="73:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:37" pos:end="73:77"><expr pos:start="73:37" pos:end="73:77"><literal type="string" pos:start="73:37" pos:end="73:77">"Audio sample format conversion failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="75:13" pos:end="75:21">return <expr pos:start="75:20" pos:end="75:20"><literal type="number" pos:start="75:20" pos:end="75:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:13">input</name>  <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:29"><name pos:start="81:18" pos:end="81:18">s</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:26">buffer</name><index pos:start="81:27" pos:end="81:29">[<expr pos:start="81:28" pos:end="81:28"><literal type="number" pos:start="81:28" pos:end="81:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:41"><expr pos:start="87:5" pos:end="87:40"><name pos:start="87:5" pos:end="87:10">lenout</name><operator pos:start="87:11" pos:end="87:11">=</operator> <literal type="number" pos:start="87:13" pos:end="87:13">4</literal><operator pos:start="87:14" pos:end="87:14">*</operator><name pos:start="87:15" pos:end="87:24">nb_samples</name> <operator pos:start="87:26" pos:end="87:26">*</operator> <name pos:start="87:28" pos:end="87:35"><name pos:start="87:28" pos:end="87:28">s</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:35">ratio</name></name> <operator pos:start="87:37" pos:end="87:37">+</operator> <literal type="number" pos:start="87:39" pos:end="87:40">16</literal></expr>;</expr_stmt>



    <if_stmt pos:start="91:5" pos:end="119:5"><if pos:start="91:5" pos:end="119:5">if <condition pos:start="91:8" pos:end="91:43">(<expr pos:start="91:9" pos:end="91:42"><name pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:21">sample_fmt</name><index pos:start="91:22" pos:end="91:24">[<expr pos:start="91:23" pos:end="91:23"><literal type="number" pos:start="91:23" pos:end="91:23">1</literal></expr>]</index></name> <operator pos:start="91:26" pos:end="91:27">!=</operator> <name pos:start="91:29" pos:end="91:42">SAMPLE_FMT_S16</name></expr>)</condition> <block pos:start="91:45" pos:end="119:5">{<block_content pos:start="93:9" pos:end="117:30">

        <expr_stmt pos:start="93:9" pos:end="93:28"><expr pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:18">output_bak</name> <operator pos:start="93:20" pos:end="93:20">=</operator> <name pos:start="93:22" pos:end="93:27">output</name></expr>;</expr_stmt>



        <if_stmt pos:start="97:9" pos:end="113:9"><if pos:start="97:9" pos:end="113:9">if <condition pos:start="97:12" pos:end="97:61">(<expr pos:start="97:13" pos:end="97:60"><operator pos:start="97:13" pos:end="97:13">!</operator><name pos:start="97:14" pos:end="97:30"><name pos:start="97:14" pos:end="97:14">s</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:27">buffer_size</name><index pos:start="97:28" pos:end="97:30">[<expr pos:start="97:29" pos:end="97:29"><literal type="number" pos:start="97:29" pos:end="97:29">1</literal></expr>]</index></name> <operator pos:start="97:32" pos:end="97:33">||</operator> <name pos:start="97:35" pos:end="97:51"><name pos:start="97:35" pos:end="97:35">s</name><operator pos:start="97:36" pos:end="97:37">-&gt;</operator><name pos:start="97:38" pos:end="97:48">buffer_size</name><index pos:start="97:49" pos:end="97:51">[<expr pos:start="97:50" pos:end="97:50"><literal type="number" pos:start="97:50" pos:end="97:50">1</literal></expr>]</index></name> <operator pos:start="97:53" pos:end="97:53">&lt;</operator> <name pos:start="97:55" pos:end="97:60">lenout</name></expr>)</condition> <block pos:start="97:63" pos:end="113:9">{<block_content pos:start="99:13" pos:end="111:13">

            <expr_stmt pos:start="99:13" pos:end="99:34"><expr pos:start="99:13" pos:end="99:33"><call pos:start="99:13" pos:end="99:33"><name pos:start="99:13" pos:end="99:19">av_free</name><argument_list pos:start="99:20" pos:end="99:33">(<argument pos:start="99:21" pos:end="99:32"><expr pos:start="99:21" pos:end="99:32"><name pos:start="99:21" pos:end="99:32"><name pos:start="99:21" pos:end="99:21">s</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:29">buffer</name><index pos:start="99:30" pos:end="99:32">[<expr pos:start="99:31" pos:end="99:31"><literal type="number" pos:start="99:31" pos:end="99:31">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:39"><expr pos:start="101:13" pos:end="101:38"><name pos:start="101:13" pos:end="101:29"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:26">buffer_size</name><index pos:start="101:27" pos:end="101:29">[<expr pos:start="101:28" pos:end="101:28"><literal type="number" pos:start="101:28" pos:end="101:28">1</literal></expr>]</index></name> <operator pos:start="101:31" pos:end="101:31">=</operator> <name pos:start="101:33" pos:end="101:38">lenout</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:56"><expr pos:start="103:13" pos:end="103:55"><name pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:21">buffer</name><index pos:start="103:22" pos:end="103:24">[<expr pos:start="103:23" pos:end="103:23"><literal type="number" pos:start="103:23" pos:end="103:23">1</literal></expr>]</index></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <call pos:start="103:28" pos:end="103:55"><name pos:start="103:28" pos:end="103:36">av_malloc</name><argument_list pos:start="103:37" pos:end="103:55">(<argument pos:start="103:38" pos:end="103:54"><expr pos:start="103:38" pos:end="103:54"><name pos:start="103:38" pos:end="103:54"><name pos:start="103:38" pos:end="103:38">s</name><operator pos:start="103:39" pos:end="103:40">-&gt;</operator><name pos:start="103:41" pos:end="103:51">buffer_size</name><index pos:start="103:52" pos:end="103:54">[<expr pos:start="103:53" pos:end="103:53"><literal type="number" pos:start="103:53" pos:end="103:53">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="111:13"><if pos:start="105:13" pos:end="111:13">if <condition pos:start="105:16" pos:end="105:30">(<expr pos:start="105:17" pos:end="105:29"><operator pos:start="105:17" pos:end="105:17">!</operator><name pos:start="105:18" pos:end="105:29"><name pos:start="105:18" pos:end="105:18">s</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:26">buffer</name><index pos:start="105:27" pos:end="105:29">[<expr pos:start="105:28" pos:end="105:28"><literal type="number" pos:start="105:28" pos:end="105:28">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="105:32" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:25">

                <expr_stmt pos:start="107:17" pos:end="107:71"><expr pos:start="107:17" pos:end="107:70"><call pos:start="107:17" pos:end="107:70"><name pos:start="107:17" pos:end="107:22">av_log</name><argument_list pos:start="107:23" pos:end="107:70">(<argument pos:start="107:24" pos:end="107:24"><expr pos:start="107:24" pos:end="107:24"><name pos:start="107:24" pos:end="107:24">s</name></expr></argument>, <argument pos:start="107:27" pos:end="107:38"><expr pos:start="107:27" pos:end="107:38"><name pos:start="107:27" pos:end="107:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:41" pos:end="107:69"><expr pos:start="107:41" pos:end="107:69"><literal type="string" pos:start="107:41" pos:end="107:69">"Could not allocate buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="109:17" pos:end="109:25">return <expr pos:start="109:24" pos:end="109:24"><literal type="number" pos:start="109:24" pos:end="109:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:30"><expr pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:14">output</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <name pos:start="117:18" pos:end="117:29"><name pos:start="117:18" pos:end="117:18">s</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:26">buffer</name><index pos:start="117:27" pos:end="117:29">[<expr pos:start="117:28" pos:end="117:28"><literal type="number" pos:start="117:28" pos:end="117:28">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:54">/* XXX: move those malloc to resample init code */</comment>

    <for pos:start="125:5" pos:end="133:5">for<control pos:start="125:8" pos:end="125:39">(<init pos:start="125:9" pos:end="125:12"><expr pos:start="125:9" pos:end="125:11"><name pos:start="125:9" pos:end="125:9">i</name><operator pos:start="125:10" pos:end="125:10">=</operator><literal type="number" pos:start="125:11" pos:end="125:11">0</literal></expr>;</init> <condition pos:start="125:14" pos:end="125:34"><expr pos:start="125:14" pos:end="125:33"><name pos:start="125:14" pos:end="125:14">i</name><operator pos:start="125:15" pos:end="125:15">&lt;</operator><name pos:start="125:16" pos:end="125:33"><name pos:start="125:16" pos:end="125:16">s</name><operator pos:start="125:17" pos:end="125:18">-&gt;</operator><name pos:start="125:19" pos:end="125:33">filter_channels</name></name></expr>;</condition> <incr pos:start="125:36" pos:end="125:38"><expr pos:start="125:36" pos:end="125:38"><name pos:start="125:36" pos:end="125:36">i</name><operator pos:start="125:37" pos:end="125:38">++</operator></expr></incr>)</control><block pos:start="125:40" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:44">

        <expr_stmt pos:start="127:9" pos:end="127:74"><expr pos:start="127:9" pos:end="127:73"><name pos:start="127:9" pos:end="127:16"><name pos:start="127:9" pos:end="127:13">bufin</name><index pos:start="127:14" pos:end="127:16">[<expr pos:start="127:15" pos:end="127:15"><name pos:start="127:15" pos:end="127:15">i</name></expr>]</index></name><operator pos:start="127:17" pos:end="127:17">=</operator> <call pos:start="127:19" pos:end="127:73"><name pos:start="127:19" pos:end="127:27">av_malloc</name><argument_list pos:start="127:28" pos:end="127:73">( <argument pos:start="127:30" pos:end="127:71"><expr pos:start="127:30" pos:end="127:71"><operator pos:start="127:30" pos:end="127:30">(</operator><name pos:start="127:31" pos:end="127:40">nb_samples</name> <operator pos:start="127:42" pos:end="127:42">+</operator> <name pos:start="127:44" pos:end="127:54"><name pos:start="127:44" pos:end="127:44">s</name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:54">temp_len</name></name><operator pos:start="127:55" pos:end="127:55">)</operator> <operator pos:start="127:57" pos:end="127:57">*</operator> <sizeof pos:start="127:59" pos:end="127:71">sizeof<argument_list pos:start="127:65" pos:end="127:71">(<argument pos:start="127:66" pos:end="127:70"><expr pos:start="127:66" pos:end="127:70"><name pos:start="127:66" pos:end="127:70">short</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:66"><expr pos:start="129:9" pos:end="129:65"><call pos:start="129:9" pos:end="129:65"><name pos:start="129:9" pos:end="129:14">memcpy</name><argument_list pos:start="129:15" pos:end="129:65">(<argument pos:start="129:16" pos:end="129:23"><expr pos:start="129:16" pos:end="129:23"><name pos:start="129:16" pos:end="129:23"><name pos:start="129:16" pos:end="129:20">bufin</name><index pos:start="129:21" pos:end="129:23">[<expr pos:start="129:22" pos:end="129:22"><name pos:start="129:22" pos:end="129:22">i</name></expr>]</index></name></expr></argument>, <argument pos:start="129:26" pos:end="129:35"><expr pos:start="129:26" pos:end="129:35"><name pos:start="129:26" pos:end="129:35"><name pos:start="129:26" pos:end="129:26">s</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:32">temp</name><index pos:start="129:33" pos:end="129:35">[<expr pos:start="129:34" pos:end="129:34"><name pos:start="129:34" pos:end="129:34">i</name></expr>]</index></name></expr></argument>, <argument pos:start="129:38" pos:end="129:64"><expr pos:start="129:38" pos:end="129:64"><name pos:start="129:38" pos:end="129:48"><name pos:start="129:38" pos:end="129:38">s</name><operator pos:start="129:39" pos:end="129:40">-&gt;</operator><name pos:start="129:41" pos:end="129:48">temp_len</name></name> <operator pos:start="129:50" pos:end="129:50">*</operator> <sizeof pos:start="129:52" pos:end="129:64">sizeof<argument_list pos:start="129:58" pos:end="129:64">(<argument pos:start="129:59" pos:end="129:63"><expr pos:start="129:59" pos:end="129:63"><name pos:start="129:59" pos:end="129:63">short</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:44"><expr pos:start="131:9" pos:end="131:43"><name pos:start="131:9" pos:end="131:18"><name pos:start="131:9" pos:end="131:15">buftmp2</name><index pos:start="131:16" pos:end="131:18">[<expr pos:start="131:17" pos:end="131:17"><name pos:start="131:17" pos:end="131:17">i</name></expr>]</index></name> <operator pos:start="131:20" pos:end="131:20">=</operator> <name pos:start="131:22" pos:end="131:29"><name pos:start="131:22" pos:end="131:26">bufin</name><index pos:start="131:27" pos:end="131:29">[<expr pos:start="131:28" pos:end="131:28"><name pos:start="131:28" pos:end="131:28">i</name></expr>]</index></name> <operator pos:start="131:31" pos:end="131:31">+</operator> <name pos:start="131:33" pos:end="131:43"><name pos:start="131:33" pos:end="131:33">s</name><operator pos:start="131:34" pos:end="131:35">-&gt;</operator><name pos:start="131:36" pos:end="131:43">temp_len</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="137:5" pos:end="137:42">/* make some zoom to avoid round pb */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:51"><expr pos:start="139:5" pos:end="139:50"><name pos:start="139:5" pos:end="139:13"><name pos:start="139:5" pos:end="139:10">bufout</name><index pos:start="139:11" pos:end="139:13">[<expr pos:start="139:12" pos:end="139:12"><literal type="number" pos:start="139:12" pos:end="139:12">0</literal></expr>]</index></name><operator pos:start="139:14" pos:end="139:14">=</operator> <call pos:start="139:16" pos:end="139:50"><name pos:start="139:16" pos:end="139:24">av_malloc</name><argument_list pos:start="139:25" pos:end="139:50">( <argument pos:start="139:27" pos:end="139:48"><expr pos:start="139:27" pos:end="139:48"><name pos:start="139:27" pos:end="139:32">lenout</name> <operator pos:start="139:34" pos:end="139:34">*</operator> <sizeof pos:start="139:36" pos:end="139:48">sizeof<argument_list pos:start="139:42" pos:end="139:48">(<argument pos:start="139:43" pos:end="139:47"><expr pos:start="139:43" pos:end="139:47"><name pos:start="139:43" pos:end="139:47">short</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:51"><expr pos:start="141:5" pos:end="141:50"><name pos:start="141:5" pos:end="141:13"><name pos:start="141:5" pos:end="141:10">bufout</name><index pos:start="141:11" pos:end="141:13">[<expr pos:start="141:12" pos:end="141:12"><literal type="number" pos:start="141:12" pos:end="141:12">1</literal></expr>]</index></name><operator pos:start="141:14" pos:end="141:14">=</operator> <call pos:start="141:16" pos:end="141:50"><name pos:start="141:16" pos:end="141:24">av_malloc</name><argument_list pos:start="141:25" pos:end="141:50">( <argument pos:start="141:27" pos:end="141:48"><expr pos:start="141:27" pos:end="141:48"><name pos:start="141:27" pos:end="141:32">lenout</name> <operator pos:start="141:34" pos:end="141:34">*</operator> <sizeof pos:start="141:36" pos:end="141:48">sizeof<argument_list pos:start="141:42" pos:end="141:48">(<argument pos:start="141:43" pos:end="141:47"><expr pos:start="141:43" pos:end="141:47"><name pos:start="141:43" pos:end="141:47">short</name></expr></argument>)</argument_list></sizeof></expr></argument> )</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="145:5" pos:end="173:5"><if pos:start="145:5" pos:end="153:5">if <condition pos:start="145:8" pos:end="147:32">(<expr pos:start="145:9" pos:end="147:31"><name pos:start="145:9" pos:end="145:25"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:25">input_channels</name></name> <operator pos:start="145:27" pos:end="145:28">==</operator> <literal type="number" pos:start="145:30" pos:end="145:30">2</literal> <operator pos:start="145:32" pos:end="145:33">&amp;&amp;</operator>

        <name pos:start="147:9" pos:end="147:26"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:26">output_channels</name></name> <operator pos:start="147:28" pos:end="147:29">==</operator> <literal type="number" pos:start="147:31" pos:end="147:31">1</literal></expr>)</condition> <block pos:start="147:34" pos:end="153:5">{<block_content pos:start="149:9" pos:end="151:54">

        <expr_stmt pos:start="149:9" pos:end="149:28"><expr pos:start="149:9" pos:end="149:27"><name pos:start="149:9" pos:end="149:18"><name pos:start="149:9" pos:end="149:15">buftmp3</name><index pos:start="149:16" pos:end="149:18">[<expr pos:start="149:17" pos:end="149:17"><literal type="number" pos:start="149:17" pos:end="149:17">0</literal></expr>]</index></name> <operator pos:start="149:20" pos:end="149:20">=</operator> <name pos:start="149:22" pos:end="149:27">output</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:54"><expr pos:start="151:9" pos:end="151:53"><call pos:start="151:9" pos:end="151:53"><name pos:start="151:9" pos:end="151:22">stereo_to_mono</name><argument_list pos:start="151:23" pos:end="151:53">(<argument pos:start="151:24" pos:end="151:33"><expr pos:start="151:24" pos:end="151:33"><name pos:start="151:24" pos:end="151:33"><name pos:start="151:24" pos:end="151:30">buftmp2</name><index pos:start="151:31" pos:end="151:33">[<expr pos:start="151:32" pos:end="151:32"><literal type="number" pos:start="151:32" pos:end="151:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:36" pos:end="151:40"><expr pos:start="151:36" pos:end="151:40"><name pos:start="151:36" pos:end="151:40">input</name></expr></argument>, <argument pos:start="151:43" pos:end="151:52"><expr pos:start="151:43" pos:end="151:52"><name pos:start="151:43" pos:end="151:52">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="153:7" pos:end="159:5">else if <condition pos:start="153:15" pos:end="153:65">(<expr pos:start="153:16" pos:end="153:64"><name pos:start="153:16" pos:end="153:33"><name pos:start="153:16" pos:end="153:16">s</name><operator pos:start="153:17" pos:end="153:18">-&gt;</operator><name pos:start="153:19" pos:end="153:33">output_channels</name></name> <operator pos:start="153:35" pos:end="153:36">&gt;=</operator> <literal type="number" pos:start="153:38" pos:end="153:38">2</literal> <operator pos:start="153:40" pos:end="153:41">&amp;&amp;</operator> <name pos:start="153:43" pos:end="153:59"><name pos:start="153:43" pos:end="153:43">s</name><operator pos:start="153:44" pos:end="153:45">-&gt;</operator><name pos:start="153:46" pos:end="153:59">input_channels</name></name> <operator pos:start="153:61" pos:end="153:62">==</operator> <literal type="number" pos:start="153:64" pos:end="153:64">1</literal></expr>)</condition> <block pos:start="153:67" pos:end="159:5">{<block_content pos:start="155:9" pos:end="157:60">

        <expr_stmt pos:start="155:9" pos:end="155:31"><expr pos:start="155:9" pos:end="155:30"><name pos:start="155:9" pos:end="155:18"><name pos:start="155:9" pos:end="155:15">buftmp3</name><index pos:start="155:16" pos:end="155:18">[<expr pos:start="155:17" pos:end="155:17"><literal type="number" pos:start="155:17" pos:end="155:17">0</literal></expr>]</index></name> <operator pos:start="155:20" pos:end="155:20">=</operator> <name pos:start="155:22" pos:end="155:30"><name pos:start="155:22" pos:end="155:27">bufout</name><index pos:start="155:28" pos:end="155:30">[<expr pos:start="155:29" pos:end="155:29"><literal type="number" pos:start="155:29" pos:end="155:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:60"><expr pos:start="157:9" pos:end="157:59"><call pos:start="157:9" pos:end="157:59"><name pos:start="157:9" pos:end="157:14">memcpy</name><argument_list pos:start="157:15" pos:end="157:59">(<argument pos:start="157:16" pos:end="157:25"><expr pos:start="157:16" pos:end="157:25"><name pos:start="157:16" pos:end="157:25"><name pos:start="157:16" pos:end="157:22">buftmp2</name><index pos:start="157:23" pos:end="157:25">[<expr pos:start="157:24" pos:end="157:24"><literal type="number" pos:start="157:24" pos:end="157:24">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:28" pos:end="157:32"><expr pos:start="157:28" pos:end="157:32"><name pos:start="157:28" pos:end="157:32">input</name></expr></argument>, <argument pos:start="157:35" pos:end="157:58"><expr pos:start="157:35" pos:end="157:58"><name pos:start="157:35" pos:end="157:44">nb_samples</name><operator pos:start="157:45" pos:end="157:45">*</operator><sizeof pos:start="157:46" pos:end="157:58">sizeof<argument_list pos:start="157:52" pos:end="157:58">(<argument pos:start="157:53" pos:end="157:57"><expr pos:start="157:53" pos:end="157:57"><name pos:start="157:53" pos:end="157:57">short</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="159:7" pos:end="167:5">else if <condition pos:start="159:15" pos:end="159:39">(<expr pos:start="159:16" pos:end="159:38"><name pos:start="159:16" pos:end="159:33"><name pos:start="159:16" pos:end="159:16">s</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:33">output_channels</name></name> <operator pos:start="159:35" pos:end="159:36">&gt;=</operator> <literal type="number" pos:start="159:38" pos:end="159:38">2</literal></expr>)</condition> <block pos:start="159:41" pos:end="167:5">{<block_content pos:start="161:9" pos:end="165:64">

        <expr_stmt pos:start="161:9" pos:end="161:31"><expr pos:start="161:9" pos:end="161:30"><name pos:start="161:9" pos:end="161:18"><name pos:start="161:9" pos:end="161:15">buftmp3</name><index pos:start="161:16" pos:end="161:18">[<expr pos:start="161:17" pos:end="161:17"><literal type="number" pos:start="161:17" pos:end="161:17">0</literal></expr>]</index></name> <operator pos:start="161:20" pos:end="161:20">=</operator> <name pos:start="161:22" pos:end="161:30"><name pos:start="161:22" pos:end="161:27">bufout</name><index pos:start="161:28" pos:end="161:30">[<expr pos:start="161:29" pos:end="161:29"><literal type="number" pos:start="161:29" pos:end="161:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:31"><expr pos:start="163:9" pos:end="163:30"><name pos:start="163:9" pos:end="163:18"><name pos:start="163:9" pos:end="163:15">buftmp3</name><index pos:start="163:16" pos:end="163:18">[<expr pos:start="163:17" pos:end="163:17"><literal type="number" pos:start="163:17" pos:end="163:17">1</literal></expr>]</index></name> <operator pos:start="163:20" pos:end="163:20">=</operator> <name pos:start="163:22" pos:end="163:30"><name pos:start="163:22" pos:end="163:27">bufout</name><index pos:start="163:28" pos:end="163:30">[<expr pos:start="163:29" pos:end="163:29"><literal type="number" pos:start="163:29" pos:end="163:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:64"><expr pos:start="165:9" pos:end="165:63"><call pos:start="165:9" pos:end="165:63"><name pos:start="165:9" pos:end="165:20">stereo_split</name><argument_list pos:start="165:21" pos:end="165:63">(<argument pos:start="165:22" pos:end="165:31"><expr pos:start="165:22" pos:end="165:31"><name pos:start="165:22" pos:end="165:31"><name pos:start="165:22" pos:end="165:28">buftmp2</name><index pos:start="165:29" pos:end="165:31">[<expr pos:start="165:30" pos:end="165:30"><literal type="number" pos:start="165:30" pos:end="165:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:34" pos:end="165:43"><expr pos:start="165:34" pos:end="165:43"><name pos:start="165:34" pos:end="165:43"><name pos:start="165:34" pos:end="165:40">buftmp2</name><index pos:start="165:41" pos:end="165:43">[<expr pos:start="165:42" pos:end="165:42"><literal type="number" pos:start="165:42" pos:end="165:42">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:46" pos:end="165:50"><expr pos:start="165:46" pos:end="165:50"><name pos:start="165:46" pos:end="165:50">input</name></expr></argument>, <argument pos:start="165:53" pos:end="165:62"><expr pos:start="165:53" pos:end="165:62"><name pos:start="165:53" pos:end="165:62">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="173:5">else <block pos:start="167:12" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:60">

        <expr_stmt pos:start="169:9" pos:end="169:28"><expr pos:start="169:9" pos:end="169:27"><name pos:start="169:9" pos:end="169:18"><name pos:start="169:9" pos:end="169:15">buftmp3</name><index pos:start="169:16" pos:end="169:18">[<expr pos:start="169:17" pos:end="169:17"><literal type="number" pos:start="169:17" pos:end="169:17">0</literal></expr>]</index></name> <operator pos:start="169:20" pos:end="169:20">=</operator> <name pos:start="169:22" pos:end="169:27">output</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:60"><expr pos:start="171:9" pos:end="171:59"><call pos:start="171:9" pos:end="171:59"><name pos:start="171:9" pos:end="171:14">memcpy</name><argument_list pos:start="171:15" pos:end="171:59">(<argument pos:start="171:16" pos:end="171:25"><expr pos:start="171:16" pos:end="171:25"><name pos:start="171:16" pos:end="171:25"><name pos:start="171:16" pos:end="171:22">buftmp2</name><index pos:start="171:23" pos:end="171:25">[<expr pos:start="171:24" pos:end="171:24"><literal type="number" pos:start="171:24" pos:end="171:24">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="171:28" pos:end="171:32"><expr pos:start="171:28" pos:end="171:32"><name pos:start="171:28" pos:end="171:32">input</name></expr></argument>, <argument pos:start="171:35" pos:end="171:58"><expr pos:start="171:35" pos:end="171:58"><name pos:start="171:35" pos:end="171:44">nb_samples</name><operator pos:start="171:45" pos:end="171:45">*</operator><sizeof pos:start="171:46" pos:end="171:58">sizeof<argument_list pos:start="171:52" pos:end="171:58">(<argument pos:start="171:53" pos:end="171:57"><expr pos:start="171:53" pos:end="171:57"><name pos:start="171:53" pos:end="171:57">short</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:30"><expr pos:start="177:5" pos:end="177:29"><name pos:start="177:5" pos:end="177:14">nb_samples</name> <operator pos:start="177:16" pos:end="177:17">+=</operator> <name pos:start="177:19" pos:end="177:29"><name pos:start="177:19" pos:end="177:19">s</name><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:29">temp_len</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="181:5" pos:end="181:31">/* resample each channel */</comment>

    <expr_stmt pos:start="183:5" pos:end="183:20"><expr pos:start="183:5" pos:end="183:19"><name pos:start="183:5" pos:end="183:15">nb_samples1</name> <operator pos:start="183:17" pos:end="183:17">=</operator> <literal type="number" pos:start="183:19" pos:end="183:19">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="183:22" pos:end="183:40">/* avoid warning */</comment>

    <for pos:start="185:5" pos:end="201:5">for<control pos:start="185:8" pos:end="185:37">(<init pos:start="185:9" pos:end="185:12"><expr pos:start="185:9" pos:end="185:11"><name pos:start="185:9" pos:end="185:9">i</name><operator pos:start="185:10" pos:end="185:10">=</operator><literal type="number" pos:start="185:11" pos:end="185:11">0</literal></expr>;</init><condition pos:start="185:13" pos:end="185:33"><expr pos:start="185:13" pos:end="185:32"><name pos:start="185:13" pos:end="185:13">i</name><operator pos:start="185:14" pos:end="185:14">&lt;</operator><name pos:start="185:15" pos:end="185:32"><name pos:start="185:15" pos:end="185:15">s</name><operator pos:start="185:16" pos:end="185:17">-&gt;</operator><name pos:start="185:18" pos:end="185:32">filter_channels</name></name></expr>;</condition><incr pos:start="185:34" pos:end="185:36"><expr pos:start="185:34" pos:end="185:36"><name pos:start="185:34" pos:end="185:34">i</name><operator pos:start="185:35" pos:end="185:36">++</operator></expr></incr>)</control> <block pos:start="185:39" pos:end="201:5">{<block_content pos:start="187:9" pos:end="199:75">

        <decl_stmt pos:start="187:9" pos:end="187:21"><decl pos:start="187:9" pos:end="187:20"><type pos:start="187:9" pos:end="187:11"><name pos:start="187:9" pos:end="187:11">int</name></type> <name pos:start="187:13" pos:end="187:20">consumed</name></decl>;</decl_stmt>

        <decl_stmt pos:start="189:9" pos:end="189:47"><decl pos:start="189:9" pos:end="189:46"><type pos:start="189:9" pos:end="189:11"><name pos:start="189:9" pos:end="189:11">int</name></type> <name pos:start="189:13" pos:end="189:19">is_last</name><init pos:start="189:20" pos:end="189:46">= <expr pos:start="189:22" pos:end="189:46"><name pos:start="189:22" pos:end="189:22">i</name><operator pos:start="189:23" pos:end="189:23">+</operator><literal type="number" pos:start="189:24" pos:end="189:24">1</literal> <operator pos:start="189:26" pos:end="189:27">==</operator> <name pos:start="189:29" pos:end="189:46"><name pos:start="189:29" pos:end="189:29">s</name><operator pos:start="189:30" pos:end="189:31">-&gt;</operator><name pos:start="189:32" pos:end="189:46">filter_channels</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="193:9" pos:end="193:117"><expr pos:start="193:9" pos:end="193:116"><name pos:start="193:9" pos:end="193:19">nb_samples1</name> <operator pos:start="193:21" pos:end="193:21">=</operator> <call pos:start="193:23" pos:end="193:116"><name pos:start="193:23" pos:end="193:33">av_resample</name><argument_list pos:start="193:34" pos:end="193:116">(<argument pos:start="193:35" pos:end="193:53"><expr pos:start="193:35" pos:end="193:53"><name pos:start="193:35" pos:end="193:53"><name pos:start="193:35" pos:end="193:35">s</name><operator pos:start="193:36" pos:end="193:37">-&gt;</operator><name pos:start="193:38" pos:end="193:53">resample_context</name></name></expr></argument>, <argument pos:start="193:56" pos:end="193:65"><expr pos:start="193:56" pos:end="193:65"><name pos:start="193:56" pos:end="193:65"><name pos:start="193:56" pos:end="193:62">buftmp3</name><index pos:start="193:63" pos:end="193:65">[<expr pos:start="193:64" pos:end="193:64"><name pos:start="193:64" pos:end="193:64">i</name></expr>]</index></name></expr></argument>, <argument pos:start="193:68" pos:end="193:75"><expr pos:start="193:68" pos:end="193:75"><name pos:start="193:68" pos:end="193:75"><name pos:start="193:68" pos:end="193:72">bufin</name><index pos:start="193:73" pos:end="193:75">[<expr pos:start="193:74" pos:end="193:74"><name pos:start="193:74" pos:end="193:74">i</name></expr>]</index></name></expr></argument>, <argument pos:start="193:78" pos:end="193:86"><expr pos:start="193:78" pos:end="193:86"><operator pos:start="193:78" pos:end="193:78">&amp;</operator><name pos:start="193:79" pos:end="193:86">consumed</name></expr></argument>, <argument pos:start="193:89" pos:end="193:98"><expr pos:start="193:89" pos:end="193:98"><name pos:start="193:89" pos:end="193:98">nb_samples</name></expr></argument>, <argument pos:start="193:101" pos:end="193:106"><expr pos:start="193:101" pos:end="193:106"><name pos:start="193:101" pos:end="193:106">lenout</name></expr></argument>, <argument pos:start="193:109" pos:end="193:115"><expr pos:start="193:109" pos:end="193:115"><name pos:start="193:109" pos:end="193:115">is_last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:43"><expr pos:start="195:9" pos:end="195:42"><name pos:start="195:9" pos:end="195:19"><name pos:start="195:9" pos:end="195:9">s</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:19">temp_len</name></name><operator pos:start="195:20" pos:end="195:20">=</operator> <name pos:start="195:22" pos:end="195:31">nb_samples</name> <operator pos:start="195:33" pos:end="195:33">-</operator> <name pos:start="195:35" pos:end="195:42">consumed</name></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:70"><expr pos:start="197:9" pos:end="197:69"><name pos:start="197:9" pos:end="197:18"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:15">temp</name><index pos:start="197:16" pos:end="197:18">[<expr pos:start="197:17" pos:end="197:17"><name pos:start="197:17" pos:end="197:17">i</name></expr>]</index></name><operator pos:start="197:19" pos:end="197:19">=</operator> <call pos:start="197:21" pos:end="197:69"><name pos:start="197:21" pos:end="197:30">av_realloc</name><argument_list pos:start="197:31" pos:end="197:69">(<argument pos:start="197:32" pos:end="197:41"><expr pos:start="197:32" pos:end="197:41"><name pos:start="197:32" pos:end="197:41"><name pos:start="197:32" pos:end="197:32">s</name><operator pos:start="197:33" pos:end="197:34">-&gt;</operator><name pos:start="197:35" pos:end="197:38">temp</name><index pos:start="197:39" pos:end="197:41">[<expr pos:start="197:40" pos:end="197:40"><name pos:start="197:40" pos:end="197:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="197:44" pos:end="197:68"><expr pos:start="197:44" pos:end="197:68"><name pos:start="197:44" pos:end="197:54"><name pos:start="197:44" pos:end="197:44">s</name><operator pos:start="197:45" pos:end="197:46">-&gt;</operator><name pos:start="197:47" pos:end="197:54">temp_len</name></name><operator pos:start="197:55" pos:end="197:55">*</operator><sizeof pos:start="197:56" pos:end="197:68">sizeof<argument_list pos:start="197:62" pos:end="197:68">(<argument pos:start="197:63" pos:end="197:67"><expr pos:start="197:63" pos:end="197:67"><name pos:start="197:63" pos:end="197:67">short</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:75"><expr pos:start="199:9" pos:end="199:74"><call pos:start="199:9" pos:end="199:74"><name pos:start="199:9" pos:end="199:14">memcpy</name><argument_list pos:start="199:15" pos:end="199:74">(<argument pos:start="199:16" pos:end="199:25"><expr pos:start="199:16" pos:end="199:25"><name pos:start="199:16" pos:end="199:25"><name pos:start="199:16" pos:end="199:16">s</name><operator pos:start="199:17" pos:end="199:18">-&gt;</operator><name pos:start="199:19" pos:end="199:22">temp</name><index pos:start="199:23" pos:end="199:25">[<expr pos:start="199:24" pos:end="199:24"><name pos:start="199:24" pos:end="199:24">i</name></expr>]</index></name></expr></argument>, <argument pos:start="199:28" pos:end="199:46"><expr pos:start="199:28" pos:end="199:46"><name pos:start="199:28" pos:end="199:35"><name pos:start="199:28" pos:end="199:32">bufin</name><index pos:start="199:33" pos:end="199:35">[<expr pos:start="199:34" pos:end="199:34"><name pos:start="199:34" pos:end="199:34">i</name></expr>]</index></name> <operator pos:start="199:37" pos:end="199:37">+</operator> <name pos:start="199:39" pos:end="199:46">consumed</name></expr></argument>, <argument pos:start="199:49" pos:end="199:73"><expr pos:start="199:49" pos:end="199:73"><name pos:start="199:49" pos:end="199:59"><name pos:start="199:49" pos:end="199:49">s</name><operator pos:start="199:50" pos:end="199:51">-&gt;</operator><name pos:start="199:52" pos:end="199:59">temp_len</name></name><operator pos:start="199:60" pos:end="199:60">*</operator><sizeof pos:start="199:61" pos:end="199:73">sizeof<argument_list pos:start="199:67" pos:end="199:73">(<argument pos:start="199:68" pos:end="199:72"><expr pos:start="199:68" pos:end="199:72"><name pos:start="199:68" pos:end="199:72">short</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="205:5" pos:end="217:5"><if pos:start="205:5" pos:end="209:5">if <condition pos:start="205:8" pos:end="205:58">(<expr pos:start="205:9" pos:end="205:57"><name pos:start="205:9" pos:end="205:26"><name pos:start="205:9" pos:end="205:9">s</name><operator pos:start="205:10" pos:end="205:11">-&gt;</operator><name pos:start="205:12" pos:end="205:26">output_channels</name></name> <operator pos:start="205:28" pos:end="205:29">==</operator> <literal type="number" pos:start="205:31" pos:end="205:31">2</literal> <operator pos:start="205:33" pos:end="205:34">&amp;&amp;</operator> <name pos:start="205:36" pos:end="205:52"><name pos:start="205:36" pos:end="205:36">s</name><operator pos:start="205:37" pos:end="205:38">-&gt;</operator><name pos:start="205:39" pos:end="205:52">input_channels</name></name> <operator pos:start="205:54" pos:end="205:55">==</operator> <literal type="number" pos:start="205:57" pos:end="205:57">1</literal></expr>)</condition> <block pos:start="205:60" pos:end="209:5">{<block_content pos:start="207:9" pos:end="207:56">

        <expr_stmt pos:start="207:9" pos:end="207:56"><expr pos:start="207:9" pos:end="207:55"><call pos:start="207:9" pos:end="207:55"><name pos:start="207:9" pos:end="207:22">mono_to_stereo</name><argument_list pos:start="207:23" pos:end="207:55">(<argument pos:start="207:24" pos:end="207:29"><expr pos:start="207:24" pos:end="207:29"><name pos:start="207:24" pos:end="207:29">output</name></expr></argument>, <argument pos:start="207:32" pos:end="207:41"><expr pos:start="207:32" pos:end="207:41"><name pos:start="207:32" pos:end="207:41"><name pos:start="207:32" pos:end="207:38">buftmp3</name><index pos:start="207:39" pos:end="207:41">[<expr pos:start="207:40" pos:end="207:40"><literal type="number" pos:start="207:40" pos:end="207:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="207:44" pos:end="207:54"><expr pos:start="207:44" pos:end="207:54"><name pos:start="207:44" pos:end="207:54">nb_samples1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="209:7" pos:end="213:5">else if <condition pos:start="209:15" pos:end="209:39">(<expr pos:start="209:16" pos:end="209:38"><name pos:start="209:16" pos:end="209:33"><name pos:start="209:16" pos:end="209:16">s</name><operator pos:start="209:17" pos:end="209:18">-&gt;</operator><name pos:start="209:19" pos:end="209:33">output_channels</name></name> <operator pos:start="209:35" pos:end="209:36">==</operator> <literal type="number" pos:start="209:38" pos:end="209:38">2</literal></expr>)</condition> <block pos:start="209:41" pos:end="213:5">{<block_content pos:start="211:9" pos:end="211:64">

        <expr_stmt pos:start="211:9" pos:end="211:64"><expr pos:start="211:9" pos:end="211:63"><call pos:start="211:9" pos:end="211:63"><name pos:start="211:9" pos:end="211:18">stereo_mux</name><argument_list pos:start="211:19" pos:end="211:63">(<argument pos:start="211:20" pos:end="211:25"><expr pos:start="211:20" pos:end="211:25"><name pos:start="211:20" pos:end="211:25">output</name></expr></argument>, <argument pos:start="211:28" pos:end="211:37"><expr pos:start="211:28" pos:end="211:37"><name pos:start="211:28" pos:end="211:37"><name pos:start="211:28" pos:end="211:34">buftmp3</name><index pos:start="211:35" pos:end="211:37">[<expr pos:start="211:36" pos:end="211:36"><literal type="number" pos:start="211:36" pos:end="211:36">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="211:40" pos:end="211:49"><expr pos:start="211:40" pos:end="211:49"><name pos:start="211:40" pos:end="211:49"><name pos:start="211:40" pos:end="211:46">buftmp3</name><index pos:start="211:47" pos:end="211:49">[<expr pos:start="211:48" pos:end="211:48"><literal type="number" pos:start="211:48" pos:end="211:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="211:52" pos:end="211:62"><expr pos:start="211:52" pos:end="211:62"><name pos:start="211:52" pos:end="211:62">nb_samples1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="213:7" pos:end="217:5">else if <condition pos:start="213:15" pos:end="213:39">(<expr pos:start="213:16" pos:end="213:38"><name pos:start="213:16" pos:end="213:33"><name pos:start="213:16" pos:end="213:16">s</name><operator pos:start="213:17" pos:end="213:18">-&gt;</operator><name pos:start="213:19" pos:end="213:33">output_channels</name></name> <operator pos:start="213:35" pos:end="213:36">==</operator> <literal type="number" pos:start="213:38" pos:end="213:38">6</literal></expr>)</condition> <block pos:start="213:41" pos:end="217:5">{<block_content pos:start="215:9" pos:end="215:65">

        <expr_stmt pos:start="215:9" pos:end="215:65"><expr pos:start="215:9" pos:end="215:64"><call pos:start="215:9" pos:end="215:64"><name pos:start="215:9" pos:end="215:19">ac3_5p1_mux</name><argument_list pos:start="215:20" pos:end="215:64">(<argument pos:start="215:21" pos:end="215:26"><expr pos:start="215:21" pos:end="215:26"><name pos:start="215:21" pos:end="215:26">output</name></expr></argument>, <argument pos:start="215:29" pos:end="215:38"><expr pos:start="215:29" pos:end="215:38"><name pos:start="215:29" pos:end="215:38"><name pos:start="215:29" pos:end="215:35">buftmp3</name><index pos:start="215:36" pos:end="215:38">[<expr pos:start="215:37" pos:end="215:37"><literal type="number" pos:start="215:37" pos:end="215:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:41" pos:end="215:50"><expr pos:start="215:41" pos:end="215:50"><name pos:start="215:41" pos:end="215:50"><name pos:start="215:41" pos:end="215:47">buftmp3</name><index pos:start="215:48" pos:end="215:50">[<expr pos:start="215:49" pos:end="215:49"><literal type="number" pos:start="215:49" pos:end="215:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:53" pos:end="215:63"><expr pos:start="215:53" pos:end="215:63"><name pos:start="215:53" pos:end="215:63">nb_samples1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="221:5" pos:end="243:5"><if pos:start="221:5" pos:end="243:5">if <condition pos:start="221:8" pos:end="221:43">(<expr pos:start="221:9" pos:end="221:42"><name pos:start="221:9" pos:end="221:24"><name pos:start="221:9" pos:end="221:9">s</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:21">sample_fmt</name><index pos:start="221:22" pos:end="221:24">[<expr pos:start="221:23" pos:end="221:23"><literal type="number" pos:start="221:23" pos:end="221:23">1</literal></expr>]</index></name> <operator pos:start="221:26" pos:end="221:27">!=</operator> <name pos:start="221:29" pos:end="221:42">SAMPLE_FMT_S16</name></expr>)</condition> <block pos:start="221:45" pos:end="243:5">{<block_content pos:start="223:9" pos:end="241:9">

        <decl_stmt pos:start="223:9" pos:end="223:31"><decl pos:start="223:9" pos:end="223:30"><type pos:start="223:9" pos:end="223:11"><name pos:start="223:9" pos:end="223:11">int</name></type> <name pos:start="223:13" pos:end="223:22"><name pos:start="223:13" pos:end="223:19">istride</name><index pos:start="223:20" pos:end="223:22">[<expr pos:start="223:21" pos:end="223:21"><literal type="number" pos:start="223:21" pos:end="223:21">1</literal></expr>]</index></name> <init pos:start="223:24" pos:end="223:30">= <expr pos:start="223:26" pos:end="223:30"><block pos:start="223:26" pos:end="223:30">{ <expr pos:start="223:28" pos:end="223:28"><literal type="number" pos:start="223:28" pos:end="223:28">2</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="225:9" pos:end="225:47"><decl pos:start="225:9" pos:end="225:46"><type pos:start="225:9" pos:end="225:11"><name pos:start="225:9" pos:end="225:11">int</name></type> <name pos:start="225:13" pos:end="225:22"><name pos:start="225:13" pos:end="225:19">ostride</name><index pos:start="225:20" pos:end="225:22">[<expr pos:start="225:21" pos:end="225:21"><literal type="number" pos:start="225:21" pos:end="225:21">1</literal></expr>]</index></name> <init pos:start="225:24" pos:end="225:46">= <expr pos:start="225:26" pos:end="225:46"><block pos:start="225:26" pos:end="225:46">{ <expr pos:start="225:28" pos:end="225:44"><name pos:start="225:28" pos:end="225:44"><name pos:start="225:28" pos:end="225:28">s</name><operator pos:start="225:29" pos:end="225:30">-&gt;</operator><name pos:start="225:31" pos:end="225:41">sample_size</name><index pos:start="225:42" pos:end="225:44">[<expr pos:start="225:43" pos:end="225:43"><literal type="number" pos:start="225:43" pos:end="225:43">1</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="227:9" pos:end="227:41"><decl pos:start="227:9" pos:end="227:40"><type pos:start="227:9" pos:end="227:20"><specifier pos:start="227:9" pos:end="227:13">const</specifier> <name pos:start="227:15" pos:end="227:18">void</name> <modifier pos:start="227:20" pos:end="227:20">*</modifier></type><name pos:start="227:21" pos:end="227:27"><name pos:start="227:21" pos:end="227:24">ibuf</name><index pos:start="227:25" pos:end="227:27">[<expr pos:start="227:26" pos:end="227:26"><literal type="number" pos:start="227:26" pos:end="227:26">1</literal></expr>]</index></name> <init pos:start="227:29" pos:end="227:40">= <expr pos:start="227:31" pos:end="227:40"><block pos:start="227:31" pos:end="227:40">{ <expr pos:start="227:33" pos:end="227:38"><name pos:start="227:33" pos:end="227:38">output</name></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="229:9" pos:end="229:45"><decl pos:start="229:9" pos:end="229:44"><type pos:start="229:9" pos:end="229:20"><name pos:start="229:9" pos:end="229:12">void</name>       <modifier pos:start="229:20" pos:end="229:20">*</modifier></type><name pos:start="229:21" pos:end="229:27"><name pos:start="229:21" pos:end="229:24">obuf</name><index pos:start="229:25" pos:end="229:27">[<expr pos:start="229:26" pos:end="229:26"><literal type="number" pos:start="229:26" pos:end="229:26">1</literal></expr>]</index></name> <init pos:start="229:29" pos:end="229:44">= <expr pos:start="229:31" pos:end="229:44"><block pos:start="229:31" pos:end="229:44">{ <expr pos:start="229:33" pos:end="229:42"><name pos:start="229:33" pos:end="229:42">output_bak</name></expr> }</block></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="233:9" pos:end="241:9"><if pos:start="233:9" pos:end="241:9">if <condition pos:start="233:12" pos:end="235:80">(<expr pos:start="233:13" pos:end="235:79"><call pos:start="233:13" pos:end="235:75"><name pos:start="233:13" pos:end="233:28">av_audio_convert</name><argument_list pos:start="233:29" pos:end="235:75">(<argument pos:start="233:30" pos:end="233:46"><expr pos:start="233:30" pos:end="233:46"><name pos:start="233:30" pos:end="233:46"><name pos:start="233:30" pos:end="233:30">s</name><operator pos:start="233:31" pos:end="233:32">-&gt;</operator><name pos:start="233:33" pos:end="233:43">convert_ctx</name><index pos:start="233:44" pos:end="233:46">[<expr pos:start="233:45" pos:end="233:45"><literal type="number" pos:start="233:45" pos:end="233:45">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="233:49" pos:end="233:52"><expr pos:start="233:49" pos:end="233:52"><name pos:start="233:49" pos:end="233:52">obuf</name></expr></argument>, <argument pos:start="233:55" pos:end="233:61"><expr pos:start="233:55" pos:end="233:61"><name pos:start="233:55" pos:end="233:61">ostride</name></expr></argument>,

                             <argument pos:start="235:30" pos:end="235:33"><expr pos:start="235:30" pos:end="235:33"><name pos:start="235:30" pos:end="235:33">ibuf</name></expr></argument>, <argument pos:start="235:36" pos:end="235:42"><expr pos:start="235:36" pos:end="235:42"><name pos:start="235:36" pos:end="235:42">istride</name></expr></argument>, <argument pos:start="235:45" pos:end="235:74"><expr pos:start="235:45" pos:end="235:74"><name pos:start="235:45" pos:end="235:55">nb_samples1</name><operator pos:start="235:56" pos:end="235:56">*</operator><name pos:start="235:57" pos:end="235:74"><name pos:start="235:57" pos:end="235:57">s</name><operator pos:start="235:58" pos:end="235:59">-&gt;</operator><name pos:start="235:60" pos:end="235:74">output_channels</name></name></expr></argument>)</argument_list></call> <operator pos:start="235:77" pos:end="235:77">&lt;</operator> <literal type="number" pos:start="235:79" pos:end="235:79">0</literal></expr>)</condition> <block pos:start="235:82" pos:end="241:9">{<block_content pos:start="237:13" pos:end="239:21">

            <expr_stmt pos:start="237:13" pos:end="237:79"><expr pos:start="237:13" pos:end="237:78"><call pos:start="237:13" pos:end="237:78"><name pos:start="237:13" pos:end="237:18">av_log</name><argument_list pos:start="237:19" pos:end="237:78">(<argument pos:start="237:20" pos:end="237:20"><expr pos:start="237:20" pos:end="237:20"><name pos:start="237:20" pos:end="237:20">s</name></expr></argument>, <argument pos:start="237:23" pos:end="237:34"><expr pos:start="237:23" pos:end="237:34"><name pos:start="237:23" pos:end="237:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="237:37" pos:end="237:77"><expr pos:start="237:37" pos:end="237:77"><literal type="string" pos:start="237:37" pos:end="237:77">"Audio sample format convertion failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="239:13" pos:end="239:21">return <expr pos:start="239:20" pos:end="239:20"><literal type="number" pos:start="239:20" pos:end="239:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="247:5" pos:end="249:26">for<control pos:start="247:8" pos:end="247:39">(<init pos:start="247:9" pos:end="247:12"><expr pos:start="247:9" pos:end="247:11"><name pos:start="247:9" pos:end="247:9">i</name><operator pos:start="247:10" pos:end="247:10">=</operator><literal type="number" pos:start="247:11" pos:end="247:11">0</literal></expr>;</init> <condition pos:start="247:14" pos:end="247:34"><expr pos:start="247:14" pos:end="247:33"><name pos:start="247:14" pos:end="247:14">i</name><operator pos:start="247:15" pos:end="247:15">&lt;</operator><name pos:start="247:16" pos:end="247:33"><name pos:start="247:16" pos:end="247:16">s</name><operator pos:start="247:17" pos:end="247:18">-&gt;</operator><name pos:start="247:19" pos:end="247:33">filter_channels</name></name></expr>;</condition> <incr pos:start="247:36" pos:end="247:38"><expr pos:start="247:36" pos:end="247:38"><name pos:start="247:36" pos:end="247:36">i</name><operator pos:start="247:37" pos:end="247:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="249:9" pos:end="249:26"><block_content pos:start="249:9" pos:end="249:26">

        <expr_stmt pos:start="249:9" pos:end="249:26"><expr pos:start="249:9" pos:end="249:25"><call pos:start="249:9" pos:end="249:25"><name pos:start="249:9" pos:end="249:15">av_free</name><argument_list pos:start="249:16" pos:end="249:25">(<argument pos:start="249:17" pos:end="249:24"><expr pos:start="249:17" pos:end="249:24"><name pos:start="249:17" pos:end="249:24"><name pos:start="249:17" pos:end="249:21">bufin</name><index pos:start="249:22" pos:end="249:24">[<expr pos:start="249:23" pos:end="249:23"><name pos:start="249:23" pos:end="249:23">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="253:5" pos:end="253:23"><expr pos:start="253:5" pos:end="253:22"><call pos:start="253:5" pos:end="253:22"><name pos:start="253:5" pos:end="253:11">av_free</name><argument_list pos:start="253:12" pos:end="253:22">(<argument pos:start="253:13" pos:end="253:21"><expr pos:start="253:13" pos:end="253:21"><name pos:start="253:13" pos:end="253:21"><name pos:start="253:13" pos:end="253:18">bufout</name><index pos:start="253:19" pos:end="253:21">[<expr pos:start="253:20" pos:end="253:20"><literal type="number" pos:start="253:20" pos:end="253:20">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:23"><expr pos:start="255:5" pos:end="255:22"><call pos:start="255:5" pos:end="255:22"><name pos:start="255:5" pos:end="255:11">av_free</name><argument_list pos:start="255:12" pos:end="255:22">(<argument pos:start="255:13" pos:end="255:21"><expr pos:start="255:13" pos:end="255:21"><name pos:start="255:13" pos:end="255:21"><name pos:start="255:13" pos:end="255:18">bufout</name><index pos:start="255:19" pos:end="255:21">[<expr pos:start="255:20" pos:end="255:20"><literal type="number" pos:start="255:20" pos:end="255:20">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="257:5" pos:end="257:23">return <expr pos:start="257:12" pos:end="257:22"><name pos:start="257:12" pos:end="257:22">nb_samples1</name></expr>;</return>

</block_content>}</block></function>
</unit>
