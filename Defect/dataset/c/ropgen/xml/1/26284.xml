<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26284.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">open_input_stream</name><parameter_list pos:start="1:29" pos:end="1:62">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:40">HTTPContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">c</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="5:5" pos:end="165:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:17"><name pos:start="5:10" pos:end="5:12">buf</name><index pos:start="5:13" pos:end="5:17">[<expr pos:start="5:14" pos:end="5:16"><literal type="number" pos:start="5:14" pos:end="5:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:29"><name pos:start="7:10" pos:end="7:23">input_filename</name><index pos:start="7:24" pos:end="7:29">[<expr pos:start="7:25" pos:end="7:28"><literal type="number" pos:start="7:25" pos:end="7:28">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFormatContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:22">s</name> <init pos:start="9:24" pos:end="9:29">= <expr pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name></decl>, <decl pos:start="11:19" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:19">i</name></decl>, <decl pos:start="11:22" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:24">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:22">stream_pos</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:24">/* find file name */</comment>

    <if_stmt pos:start="19:5" pos:end="69:5"><if pos:start="19:5" pos:end="47:5">if <condition pos:start="19:8" pos:end="19:24">(<expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:9">c</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">stream</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:23">feed</name></name></expr>)</condition> <block pos:start="19:26" pos:end="47:5">{<block_content pos:start="21:9" pos:end="45:77">

        <expr_stmt pos:start="21:9" pos:end="21:63"><expr pos:start="21:9" pos:end="21:62"><call pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:14">strcpy</name><argument_list pos:start="21:15" pos:end="21:62">(<argument pos:start="21:16" pos:end="21:29"><expr pos:start="21:16" pos:end="21:29"><name pos:start="21:16" pos:end="21:29">input_filename</name></expr></argument>, <argument pos:start="21:32" pos:end="21:61"><expr pos:start="21:32" pos:end="21:61"><name pos:start="21:32" pos:end="21:61"><name pos:start="21:32" pos:end="21:32">c</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:40">stream</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:46">feed</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:61">feed_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:16">buf_size</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:34">FFM_PACKET_SIZE</name></expr>;</expr_stmt>

        <comment type="block" pos:start="25:9" pos:end="25:46">/* compute position (absolute time) */</comment>

        <if_stmt pos:start="27:9" pos:end="45:77"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="27:61">(<expr pos:start="27:13" pos:end="27:60"><call pos:start="27:13" pos:end="27:60"><name pos:start="27:13" pos:end="27:28">av_find_info_tag</name><argument_list pos:start="27:29" pos:end="27:60">(<argument pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">buf</name></expr></argument>, <argument pos:start="27:35" pos:end="27:45"><expr pos:start="27:35" pos:end="27:45"><sizeof pos:start="27:35" pos:end="27:45">sizeof<argument_list pos:start="27:41" pos:end="27:45">(<argument pos:start="27:42" pos:end="27:44"><expr pos:start="27:42" pos:end="27:44"><name pos:start="27:42" pos:end="27:44">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:48" pos:end="27:53"><expr pos:start="27:48" pos:end="27:53"><literal type="string" pos:start="27:48" pos:end="27:53">"date"</literal></expr></argument>, <argument pos:start="27:56" pos:end="27:59"><expr pos:start="27:56" pos:end="27:59"><name pos:start="27:56" pos:end="27:59">info</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:63" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:13">

            <if_stmt pos:start="29:13" pos:end="35:13"><if pos:start="29:13" pos:end="35:13">if <condition pos:start="29:16" pos:end="29:63">(<expr pos:start="29:17" pos:end="29:62"><operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:20">ret</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <call pos:start="29:24" pos:end="29:57"><name pos:start="29:24" pos:end="29:36">av_parse_time</name><argument_list pos:start="29:37" pos:end="29:57">(<argument pos:start="29:38" pos:end="29:48"><expr pos:start="29:38" pos:end="29:48"><operator pos:start="29:38" pos:end="29:38">&amp;</operator><name pos:start="29:39" pos:end="29:48">stream_pos</name></expr></argument>, <argument pos:start="29:51" pos:end="29:53"><expr pos:start="29:51" pos:end="29:53"><name pos:start="29:51" pos:end="29:53">buf</name></expr></argument>, <argument pos:start="29:56" pos:end="29:56"><expr pos:start="29:56" pos:end="29:56"><literal type="number" pos:start="29:56" pos:end="29:56">0</literal></expr></argument>)</argument_list></call><operator pos:start="29:58" pos:end="29:58">)</operator> <operator pos:start="29:60" pos:end="29:60">&lt;</operator> <literal type="number" pos:start="29:62" pos:end="29:62">0</literal></expr>)</condition> <block pos:start="29:65" pos:end="35:13">{<block_content pos:start="31:17" pos:end="33:27">

                <expr_stmt pos:start="31:17" pos:end="31:78"><expr pos:start="31:17" pos:end="31:77"><call pos:start="31:17" pos:end="31:77"><name pos:start="31:17" pos:end="31:24">http_log</name><argument_list pos:start="31:25" pos:end="31:77">(<argument pos:start="31:26" pos:end="31:71"><expr pos:start="31:26" pos:end="31:71"><literal type="string" pos:start="31:26" pos:end="31:71">"Invalid date specification '%s' for stream\n"</literal></expr></argument>, <argument pos:start="31:74" pos:end="31:76"><expr pos:start="31:74" pos:end="31:76"><name pos:start="31:74" pos:end="31:76">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="33:17" pos:end="33:27">return <expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="37:11" pos:end="43:9">else if <condition pos:start="37:19" pos:end="37:70">(<expr pos:start="37:20" pos:end="37:69"><call pos:start="37:20" pos:end="37:69"><name pos:start="37:20" pos:end="37:35">av_find_info_tag</name><argument_list pos:start="37:36" pos:end="37:69">(<argument pos:start="37:37" pos:end="37:39"><expr pos:start="37:37" pos:end="37:39"><name pos:start="37:37" pos:end="37:39">buf</name></expr></argument>, <argument pos:start="37:42" pos:end="37:52"><expr pos:start="37:42" pos:end="37:52"><sizeof pos:start="37:42" pos:end="37:52">sizeof<argument_list pos:start="37:48" pos:end="37:52">(<argument pos:start="37:49" pos:end="37:51"><expr pos:start="37:49" pos:end="37:51"><name pos:start="37:49" pos:end="37:51">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="37:55" pos:end="37:62"><expr pos:start="37:55" pos:end="37:62"><literal type="string" pos:start="37:55" pos:end="37:62">"buffer"</literal></expr></argument>, <argument pos:start="37:65" pos:end="37:68"><expr pos:start="37:65" pos:end="37:68"><name pos:start="37:65" pos:end="37:68">info</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:72" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:69">

            <decl_stmt pos:start="39:13" pos:end="39:47"><decl pos:start="39:13" pos:end="39:46"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:25">prebuffer</name> <init pos:start="39:27" pos:end="39:46">= <expr pos:start="39:29" pos:end="39:46"><call pos:start="39:29" pos:end="39:46"><name pos:start="39:29" pos:end="39:34">strtol</name><argument_list pos:start="39:35" pos:end="39:46">(<argument pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:38">buf</name></expr></argument>, <argument pos:start="39:41" pos:end="39:41"><expr pos:start="39:41" pos:end="39:41"><literal type="number" pos:start="39:41" pos:end="39:41">0</literal></expr></argument>, <argument pos:start="39:44" pos:end="39:45"><expr pos:start="39:44" pos:end="39:45"><literal type="number" pos:start="39:44" pos:end="39:45">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:69"><expr pos:start="41:13" pos:end="41:68"><name pos:start="41:13" pos:end="41:22">stream_pos</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <call pos:start="41:26" pos:end="41:37"><name pos:start="41:26" pos:end="41:35">av_gettime</name><argument_list pos:start="41:36" pos:end="41:37">()</argument_list></call> <operator pos:start="41:39" pos:end="41:39">-</operator> <name pos:start="41:41" pos:end="41:49">prebuffer</name> <operator pos:start="41:51" pos:end="41:51">*</operator> <operator pos:start="41:53" pos:end="41:53">(</operator><name pos:start="41:54" pos:end="41:60">int64_t</name><operator pos:start="41:61" pos:end="41:61">)</operator><literal type="number" pos:start="41:62" pos:end="41:68">1000000</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="45:77">else<block type="pseudo" pos:start="45:13" pos:end="45:77"><block_content pos:start="45:13" pos:end="45:77">

            <expr_stmt pos:start="45:13" pos:end="45:77"><expr pos:start="45:13" pos:end="45:76"><name pos:start="45:13" pos:end="45:22">stream_pos</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:35">av_gettime</name><argument_list pos:start="45:36" pos:end="45:37">()</argument_list></call> <operator pos:start="45:39" pos:end="45:39">-</operator> <name pos:start="45:41" pos:end="45:60"><name pos:start="45:41" pos:end="45:41">c</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:49">stream</name><operator pos:start="45:50" pos:end="45:51">-&gt;</operator><name pos:start="45:52" pos:end="45:60">prebuffer</name></name> <operator pos:start="45:62" pos:end="45:62">*</operator> <operator pos:start="45:64" pos:end="45:64">(</operator><name pos:start="45:65" pos:end="45:71">int64_t</name><operator pos:start="45:72" pos:end="45:72">)</operator><literal type="number" pos:start="45:73" pos:end="45:76">1000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="69:5">else <block pos:start="47:12" pos:end="69:5">{<block_content pos:start="49:9" pos:end="67:27">

        <expr_stmt pos:start="49:9" pos:end="49:57"><expr pos:start="49:9" pos:end="49:56"><call pos:start="49:9" pos:end="49:56"><name pos:start="49:9" pos:end="49:14">strcpy</name><argument_list pos:start="49:15" pos:end="49:56">(<argument pos:start="49:16" pos:end="49:29"><expr pos:start="49:16" pos:end="49:29"><name pos:start="49:16" pos:end="49:29">input_filename</name></expr></argument>, <argument pos:start="49:32" pos:end="49:55"><expr pos:start="49:32" pos:end="49:55"><name pos:start="49:32" pos:end="49:55"><name pos:start="49:32" pos:end="49:32">c</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:40">stream</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:55">feed_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:21"><expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:16">buf_size</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="53:9" pos:end="53:46">/* compute position (relative time) */</comment>

        <if_stmt pos:start="55:9" pos:end="67:27"><if pos:start="55:9" pos:end="65:9">if <condition pos:start="55:12" pos:end="55:61">(<expr pos:start="55:13" pos:end="55:60"><call pos:start="55:13" pos:end="55:60"><name pos:start="55:13" pos:end="55:28">av_find_info_tag</name><argument_list pos:start="55:29" pos:end="55:60">(<argument pos:start="55:30" pos:end="55:32"><expr pos:start="55:30" pos:end="55:32"><name pos:start="55:30" pos:end="55:32">buf</name></expr></argument>, <argument pos:start="55:35" pos:end="55:45"><expr pos:start="55:35" pos:end="55:45"><sizeof pos:start="55:35" pos:end="55:45">sizeof<argument_list pos:start="55:41" pos:end="55:45">(<argument pos:start="55:42" pos:end="55:44"><expr pos:start="55:42" pos:end="55:44"><name pos:start="55:42" pos:end="55:44">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="55:48" pos:end="55:53"><expr pos:start="55:48" pos:end="55:53"><literal type="string" pos:start="55:48" pos:end="55:53">"date"</literal></expr></argument>, <argument pos:start="55:56" pos:end="55:59"><expr pos:start="55:56" pos:end="55:59"><name pos:start="55:56" pos:end="55:59">info</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:63" pos:end="65:9">{<block_content pos:start="57:13" pos:end="63:13">

            <if_stmt pos:start="57:13" pos:end="63:13"><if pos:start="57:13" pos:end="63:13">if <condition pos:start="57:16" pos:end="57:63">(<expr pos:start="57:17" pos:end="57:62"><operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:20">ret</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <call pos:start="57:24" pos:end="57:57"><name pos:start="57:24" pos:end="57:36">av_parse_time</name><argument_list pos:start="57:37" pos:end="57:57">(<argument pos:start="57:38" pos:end="57:48"><expr pos:start="57:38" pos:end="57:48"><operator pos:start="57:38" pos:end="57:38">&amp;</operator><name pos:start="57:39" pos:end="57:48">stream_pos</name></expr></argument>, <argument pos:start="57:51" pos:end="57:53"><expr pos:start="57:51" pos:end="57:53"><name pos:start="57:51" pos:end="57:53">buf</name></expr></argument>, <argument pos:start="57:56" pos:end="57:56"><expr pos:start="57:56" pos:end="57:56"><literal type="number" pos:start="57:56" pos:end="57:56">1</literal></expr></argument>)</argument_list></call><operator pos:start="57:58" pos:end="57:58">)</operator> <operator pos:start="57:60" pos:end="57:60">&lt;</operator> <literal type="number" pos:start="57:62" pos:end="57:62">0</literal></expr>)</condition> <block pos:start="57:65" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:27">

                <expr_stmt pos:start="59:17" pos:end="59:78"><expr pos:start="59:17" pos:end="59:77"><call pos:start="59:17" pos:end="59:77"><name pos:start="59:17" pos:end="59:24">http_log</name><argument_list pos:start="59:25" pos:end="59:77">(<argument pos:start="59:26" pos:end="59:71"><expr pos:start="59:26" pos:end="59:71"><literal type="string" pos:start="59:26" pos:end="59:71">"Invalid date specification '%s' for stream\n"</literal></expr></argument>, <argument pos:start="59:74" pos:end="59:76"><expr pos:start="59:74" pos:end="59:76"><name pos:start="59:74" pos:end="59:76">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="61:17" pos:end="61:27">return <expr pos:start="61:24" pos:end="61:26"><name pos:start="61:24" pos:end="61:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="67:27">else<block type="pseudo" pos:start="67:13" pos:end="67:27"><block_content pos:start="67:13" pos:end="67:27">

            <expr_stmt pos:start="67:13" pos:end="67:27"><expr pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:22">stream_pos</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <literal type="number" pos:start="67:26" pos:end="67:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:27">(<expr pos:start="71:9" pos:end="71:26"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:26"><name pos:start="71:10" pos:end="71:23">input_filename</name><index pos:start="71:24" pos:end="71:26">[<expr pos:start="71:25" pos:end="71:25"><literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="71:29" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:31">

        <expr_stmt pos:start="73:9" pos:end="73:59"><expr pos:start="73:9" pos:end="73:58"><call pos:start="73:9" pos:end="73:58"><name pos:start="73:9" pos:end="73:16">http_log</name><argument_list pos:start="73:17" pos:end="73:58">(<argument pos:start="73:18" pos:end="73:57"><expr pos:start="73:18" pos:end="73:57"><literal type="string" pos:start="73:18" pos:end="73:57">"No filename was specified for stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:31">return <expr pos:start="75:16" pos:end="75:30"><call pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:22">AVERROR</name><argument_list pos:start="75:23" pos:end="75:30">(<argument pos:start="75:24" pos:end="75:29"><expr pos:start="75:24" pos:end="75:29"><name pos:start="75:24" pos:end="75:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:21">/* open stream */</comment>

    <expr_stmt pos:start="83:5" pos:end="85:51"><expr pos:start="83:5" pos:end="85:50"><name pos:start="83:5" pos:end="83:7">ret</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <call pos:start="83:11" pos:end="85:50"><name pos:start="83:11" pos:end="83:29">avformat_open_input</name><argument_list pos:start="83:30" pos:end="85:50">(<argument pos:start="83:31" pos:end="83:32"><expr pos:start="83:31" pos:end="83:32"><operator pos:start="83:31" pos:end="83:31">&amp;</operator><name pos:start="83:32" pos:end="83:32">s</name></expr></argument>, <argument pos:start="83:35" pos:end="83:48"><expr pos:start="83:35" pos:end="83:48"><name pos:start="83:35" pos:end="83:48">input_filename</name></expr></argument>, <argument pos:start="83:51" pos:end="83:65"><expr pos:start="83:51" pos:end="83:65"><name pos:start="83:51" pos:end="83:65"><name pos:start="83:51" pos:end="83:51">c</name><operator pos:start="83:52" pos:end="83:53">-&gt;</operator><name pos:start="83:54" pos:end="83:59">stream</name><operator pos:start="83:60" pos:end="83:61">-&gt;</operator><name pos:start="83:62" pos:end="83:65">ifmt</name></name></expr></argument>,

                              <argument pos:start="85:31" pos:end="85:49"><expr pos:start="85:31" pos:end="85:49"><operator pos:start="85:31" pos:end="85:31">&amp;</operator><name pos:start="85:32" pos:end="85:49"><name pos:start="85:32" pos:end="85:32">c</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:40">stream</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:49">in_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:16">(<expr pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:11">ret</name> <operator pos:start="87:13" pos:end="87:13">&lt;</operator> <literal type="number" pos:start="87:15" pos:end="87:15">0</literal></expr>)</condition> <block pos:start="87:18" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:19">

        <expr_stmt pos:start="89:9" pos:end="91:50"><expr pos:start="89:9" pos:end="91:49"><call pos:start="89:9" pos:end="91:49"><name pos:start="89:9" pos:end="89:16">http_log</name><argument_list pos:start="89:17" pos:end="91:49">(<argument pos:start="89:18" pos:end="89:50"><expr pos:start="89:18" pos:end="89:50"><literal type="string" pos:start="89:18" pos:end="89:50">"Could not open input '%s': %s\n"</literal></expr></argument>,

                 <argument pos:start="91:18" pos:end="91:31"><expr pos:start="91:18" pos:end="91:31"><name pos:start="91:18" pos:end="91:31">input_filename</name></expr></argument>, <argument pos:start="91:34" pos:end="91:48"><expr pos:start="91:34" pos:end="91:48"><call pos:start="91:34" pos:end="91:48"><name pos:start="91:34" pos:end="91:43">av_err2str</name><argument_list pos:start="91:44" pos:end="91:48">(<argument pos:start="91:45" pos:end="91:47"><expr pos:start="91:45" pos:end="91:47"><name pos:start="91:45" pos:end="91:47">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:19">return <expr pos:start="93:16" pos:end="93:18"><name pos:start="93:16" pos:end="93:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:25">/* set buffer size */</comment>

    <if_stmt pos:start="101:5" pos:end="113:5"><if pos:start="101:5" pos:end="113:5">if <condition pos:start="101:8" pos:end="101:21">(<expr pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:16">buf_size</name> <operator pos:start="101:18" pos:end="101:18">&gt;</operator> <literal type="number" pos:start="101:20" pos:end="101:20">0</literal></expr>)</condition> <block pos:start="101:23" pos:end="113:5">{<block_content pos:start="103:9" pos:end="111:9">

        <expr_stmt pos:start="103:9" pos:end="103:49"><expr pos:start="103:9" pos:end="103:48"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="103:48"><name pos:start="103:15" pos:end="103:31">ffio_set_buf_size</name><argument_list pos:start="103:32" pos:end="103:48">(<argument pos:start="103:33" pos:end="103:37"><expr pos:start="103:33" pos:end="103:37"><name pos:start="103:33" pos:end="103:37"><name pos:start="103:33" pos:end="103:33">s</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:37">pb</name></name></expr></argument>, <argument pos:start="103:40" pos:end="103:47"><expr pos:start="103:40" pos:end="103:47"><name pos:start="103:40" pos:end="103:47">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:20">(<expr pos:start="105:13" pos:end="105:19"><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:17">&lt;</operator> <literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr>)</condition> <block pos:start="105:22" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:23">

            <expr_stmt pos:start="107:13" pos:end="107:52"><expr pos:start="107:13" pos:end="107:51"><call pos:start="107:13" pos:end="107:51"><name pos:start="107:13" pos:end="107:20">http_log</name><argument_list pos:start="107:21" pos:end="107:51">(<argument pos:start="107:22" pos:end="107:50"><expr pos:start="107:22" pos:end="107:50"><literal type="string" pos:start="107:22" pos:end="107:50">"Failed to set buffer size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="109:13" pos:end="109:23">return <expr pos:start="109:20" pos:end="109:22"><name pos:start="109:20" pos:end="109:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:34"><expr pos:start="117:5" pos:end="117:33"><name pos:start="117:5" pos:end="117:12"><name pos:start="117:5" pos:end="117:5">s</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:12">flags</name></name> <operator pos:start="117:14" pos:end="117:15">|=</operator> <name pos:start="117:17" pos:end="117:33">AVFMT_FLAG_GENPTS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:18"><expr pos:start="119:5" pos:end="119:17"><name pos:start="119:5" pos:end="119:13"><name pos:start="119:5" pos:end="119:5">c</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:13">fmt_in</name></name> <operator pos:start="119:15" pos:end="119:15">=</operator> <name pos:start="119:17" pos:end="119:17">s</name></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="131:5"><if pos:start="121:5" pos:end="131:5">if <condition pos:start="121:8" pos:end="123:63">(<expr pos:start="121:9" pos:end="123:62"><call pos:start="121:9" pos:end="121:39"><name pos:start="121:9" pos:end="121:14">strcmp</name><argument_list pos:start="121:15" pos:end="121:39">(<argument pos:start="121:16" pos:end="121:31"><expr pos:start="121:16" pos:end="121:31"><name pos:start="121:16" pos:end="121:31"><name pos:start="121:16" pos:end="121:16">s</name><operator pos:start="121:17" pos:end="121:18">-&gt;</operator><name pos:start="121:19" pos:end="121:25">iformat</name><operator pos:start="121:26" pos:end="121:27">-&gt;</operator><name pos:start="121:28" pos:end="121:31">name</name></name></expr></argument>, <argument pos:start="121:34" pos:end="121:38"><expr pos:start="121:34" pos:end="121:38"><literal type="string" pos:start="121:34" pos:end="121:38">"ffm"</literal></expr></argument>)</argument_list></call> <operator pos:start="121:41" pos:end="121:42">&amp;&amp;</operator>

        <operator pos:start="123:9" pos:end="123:9">(</operator><name pos:start="123:10" pos:end="123:12">ret</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <call pos:start="123:16" pos:end="123:57"><name pos:start="123:16" pos:end="123:40">avformat_find_stream_info</name><argument_list pos:start="123:41" pos:end="123:57">(<argument pos:start="123:42" pos:end="123:50"><expr pos:start="123:42" pos:end="123:50"><name pos:start="123:42" pos:end="123:50"><name pos:start="123:42" pos:end="123:42">c</name><operator pos:start="123:43" pos:end="123:44">-&gt;</operator><name pos:start="123:45" pos:end="123:50">fmt_in</name></name></expr></argument>, <argument pos:start="123:53" pos:end="123:56"><expr pos:start="123:53" pos:end="123:56"><name pos:start="123:53" pos:end="123:56">NULL</name></expr></argument>)</argument_list></call><operator pos:start="123:58" pos:end="123:58">)</operator> <operator pos:start="123:60" pos:end="123:60">&lt;</operator> <literal type="number" pos:start="123:62" pos:end="123:62">0</literal></expr>)</condition> <block pos:start="123:65" pos:end="131:5">{<block_content pos:start="125:9" pos:end="129:19">

        <expr_stmt pos:start="125:9" pos:end="125:80"><expr pos:start="125:9" pos:end="125:79"><call pos:start="125:9" pos:end="125:79"><name pos:start="125:9" pos:end="125:16">http_log</name><argument_list pos:start="125:17" pos:end="125:79">(<argument pos:start="125:18" pos:end="125:62"><expr pos:start="125:18" pos:end="125:62"><literal type="string" pos:start="125:18" pos:end="125:62">"Could not find stream info for input '%s'\n"</literal></expr></argument>, <argument pos:start="125:65" pos:end="125:78"><expr pos:start="125:65" pos:end="125:78"><name pos:start="125:65" pos:end="125:78">input_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:33"><expr pos:start="127:9" pos:end="127:32"><call pos:start="127:9" pos:end="127:32"><name pos:start="127:9" pos:end="127:28">avformat_close_input</name><argument_list pos:start="127:29" pos:end="127:32">(<argument pos:start="127:30" pos:end="127:31"><expr pos:start="127:30" pos:end="127:31"><operator pos:start="127:30" pos:end="127:30">&amp;</operator><name pos:start="127:31" pos:end="127:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="129:9" pos:end="129:19">return <expr pos:start="129:16" pos:end="129:18"><name pos:start="129:16" pos:end="129:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="135:5" pos:end="137:37">/* choose stream as clock source (we favor the video stream if

     * present) for packet sending */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:28"><expr pos:start="139:5" pos:end="139:27"><name pos:start="139:5" pos:end="139:23"><name pos:start="139:5" pos:end="139:5">c</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:23">pts_stream_index</name></name> <operator pos:start="139:25" pos:end="139:25">=</operator> <literal type="number" pos:start="139:27" pos:end="139:27">0</literal></expr>;</expr_stmt>

    <for pos:start="141:5" pos:end="151:5">for<control pos:start="141:8" pos:end="141:40">(<init pos:start="141:9" pos:end="141:12"><expr pos:start="141:9" pos:end="141:11"><name pos:start="141:9" pos:end="141:9">i</name><operator pos:start="141:10" pos:end="141:10">=</operator><literal type="number" pos:start="141:11" pos:end="141:11">0</literal></expr>;</init><condition pos:start="141:13" pos:end="141:36"><expr pos:start="141:13" pos:end="141:35"><name pos:start="141:13" pos:end="141:13">i</name><operator pos:start="141:14" pos:end="141:14">&lt;</operator><name pos:start="141:15" pos:end="141:35"><name pos:start="141:15" pos:end="141:15">c</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:23">stream</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:35">nb_streams</name></name></expr>;</condition><incr pos:start="141:37" pos:end="141:39"><expr pos:start="141:37" pos:end="141:39"><name pos:start="141:37" pos:end="141:37">i</name><operator pos:start="141:38" pos:end="141:39">++</operator></expr></incr>)</control> <block pos:start="141:42" pos:end="151:5">{<block_content pos:start="143:9" pos:end="149:9">

        <if_stmt pos:start="143:9" pos:end="149:9"><if pos:start="143:9" pos:end="149:9">if <condition pos:start="143:12" pos:end="145:78">(<expr pos:start="143:13" pos:end="145:77"><name pos:start="143:13" pos:end="143:31"><name pos:start="143:13" pos:end="143:13">c</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:31">pts_stream_index</name></name> <operator pos:start="143:33" pos:end="143:34">==</operator> <literal type="number" pos:start="143:36" pos:end="143:36">0</literal> <operator pos:start="143:38" pos:end="143:39">&amp;&amp;</operator>

            <name pos:start="145:13" pos:end="145:33"><name pos:start="145:13" pos:end="145:13">c</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:21">stream</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:30">streams</name><index pos:start="145:31" pos:end="145:33">[<expr pos:start="145:32" pos:end="145:32"><name pos:start="145:32" pos:end="145:32">i</name></expr>]</index></name><operator pos:start="145:34" pos:end="145:35">-&gt;</operator><name pos:start="145:36" pos:end="145:55"><name pos:start="145:36" pos:end="145:43">codecpar</name><operator pos:start="145:44" pos:end="145:45">-&gt;</operator><name pos:start="145:46" pos:end="145:55">codec_type</name></name> <operator pos:start="145:57" pos:end="145:58">==</operator> <name pos:start="145:60" pos:end="145:77">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="145:80" pos:end="149:9">{<block_content pos:start="147:13" pos:end="147:36">

            <expr_stmt pos:start="147:13" pos:end="147:36"><expr pos:start="147:13" pos:end="147:35"><name pos:start="147:13" pos:end="147:31"><name pos:start="147:13" pos:end="147:13">c</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:31">pts_stream_index</name></name> <operator pos:start="147:33" pos:end="147:33">=</operator> <name pos:start="147:35" pos:end="147:35">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="155:5" pos:end="157:52"><if pos:start="155:5" pos:end="157:52">if <condition pos:start="155:8" pos:end="155:38">(<expr pos:start="155:9" pos:end="155:37"><name pos:start="155:9" pos:end="155:37"><name pos:start="155:9" pos:end="155:9">c</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:17">fmt_in</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:26">iformat</name><operator pos:start="155:27" pos:end="155:28">-&gt;</operator><name pos:start="155:29" pos:end="155:37">read_seek</name></name></expr>)</condition><block type="pseudo" pos:start="157:9" pos:end="157:52"><block_content pos:start="157:9" pos:end="157:52">

        <expr_stmt pos:start="157:9" pos:end="157:52"><expr pos:start="157:9" pos:end="157:51"><call pos:start="157:9" pos:end="157:51"><name pos:start="157:9" pos:end="157:21">av_seek_frame</name><argument_list pos:start="157:22" pos:end="157:51">(<argument pos:start="157:23" pos:end="157:31"><expr pos:start="157:23" pos:end="157:31"><name pos:start="157:23" pos:end="157:31"><name pos:start="157:23" pos:end="157:23">c</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:31">fmt_in</name></name></expr></argument>, <argument pos:start="157:34" pos:end="157:35"><expr pos:start="157:34" pos:end="157:35"><operator pos:start="157:34" pos:end="157:34">-</operator><literal type="number" pos:start="157:35" pos:end="157:35">1</literal></expr></argument>, <argument pos:start="157:38" pos:end="157:47"><expr pos:start="157:38" pos:end="157:47"><name pos:start="157:38" pos:end="157:47">stream_pos</name></expr></argument>, <argument pos:start="157:50" pos:end="157:50"><expr pos:start="157:50" pos:end="157:50"><literal type="number" pos:start="157:50" pos:end="157:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="159:5" pos:end="159:71">/* set the start time (needed for maxtime and RTP packet timing) */</comment>

    <expr_stmt pos:start="161:5" pos:end="161:29"><expr pos:start="161:5" pos:end="161:28"><name pos:start="161:5" pos:end="161:17"><name pos:start="161:5" pos:end="161:5">c</name><operator pos:start="161:6" pos:end="161:7">-&gt;</operator><name pos:start="161:8" pos:end="161:17">start_time</name></name> <operator pos:start="161:19" pos:end="161:19">=</operator> <name pos:start="161:21" pos:end="161:28">cur_time</name></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:34"><expr pos:start="163:5" pos:end="163:33"><name pos:start="163:5" pos:end="163:16"><name pos:start="163:5" pos:end="163:5">c</name><operator pos:start="163:6" pos:end="163:7">-&gt;</operator><name pos:start="163:8" pos:end="163:16">first_pts</name></name> <operator pos:start="163:18" pos:end="163:18">=</operator> <name pos:start="163:20" pos:end="163:33">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <return pos:start="165:5" pos:end="165:13">return <expr pos:start="165:12" pos:end="165:12"><literal type="number" pos:start="165:12" pos:end="165:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
