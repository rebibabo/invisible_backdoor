<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23765.c" pos:tabs="8"><function pos:start="1:1" pos:end="243:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int64_t</name></type> <name pos:start="1:9" pos:end="1:21">ff_gen_search</name><parameter_list pos:start="1:22" pos:end="7:101">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:58">stream_index</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:77"><decl pos:start="1:61" pos:end="1:77"><type pos:start="1:61" pos:end="1:77"><name pos:start="1:61" pos:end="1:67">int64_t</name></type> <name pos:start="1:69" pos:end="1:77">target_ts</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:37"><decl pos:start="3:23" pos:end="3:37"><type pos:start="3:23" pos:end="3:37"><name pos:start="3:23" pos:end="3:29">int64_t</name></type> <name pos:start="3:31" pos:end="3:37">pos_min</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:54"><decl pos:start="3:40" pos:end="3:54"><type pos:start="3:40" pos:end="3:54"><name pos:start="3:40" pos:end="3:46">int64_t</name></type> <name pos:start="3:48" pos:end="3:54">pos_max</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:73"><decl pos:start="3:57" pos:end="3:73"><type pos:start="3:57" pos:end="3:73"><name pos:start="3:57" pos:end="3:63">int64_t</name></type> <name pos:start="3:65" pos:end="3:73">pos_limit</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:36"><decl pos:start="5:23" pos:end="5:36"><type pos:start="5:23" pos:end="5:36"><name pos:start="5:23" pos:end="5:29">int64_t</name></type> <name pos:start="5:31" pos:end="5:36">ts_min</name></decl></parameter>, <parameter pos:start="5:39" pos:end="5:52"><decl pos:start="5:39" pos:end="5:52"><type pos:start="5:39" pos:end="5:52"><name pos:start="5:39" pos:end="5:45">int64_t</name></type> <name pos:start="5:47" pos:end="5:52">ts_max</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:63"><decl pos:start="5:55" pos:end="5:63"><type pos:start="5:55" pos:end="5:63"><name pos:start="5:55" pos:end="5:57">int</name></type> <name pos:start="5:59" pos:end="5:63">flags</name></decl></parameter>, <parameter pos:start="5:66" pos:end="5:80"><decl pos:start="5:66" pos:end="5:80"><type pos:start="5:66" pos:end="5:80"><name pos:start="5:66" pos:end="5:72">int64_t</name> <modifier pos:start="5:74" pos:end="5:74">*</modifier></type><name pos:start="5:75" pos:end="5:80">ts_ret</name></decl></parameter>,

                      <parameter pos:start="7:23" pos:end="7:100"><function_decl pos:start="7:23" pos:end="7:100"><type pos:start="7:23" pos:end="7:29"><name pos:start="7:23" pos:end="7:29">int64_t</name></type> (<modifier pos:start="7:32" pos:end="7:32">*</modifier><name pos:start="7:33" pos:end="7:46">read_timestamp</name>)<parameter_list pos:start="7:48" pos:end="7:100">(<parameter pos:start="7:49" pos:end="7:72"><decl pos:start="7:49" pos:end="7:72"><type pos:start="7:49" pos:end="7:72"><name pos:start="7:49" pos:end="7:70"><name pos:start="7:49" pos:end="7:54">struct</name> <name pos:start="7:56" pos:end="7:70">AVFormatContext</name></name> <modifier pos:start="7:72" pos:end="7:72">*</modifier></type></decl></parameter>, <parameter pos:start="7:75" pos:end="7:77"><decl pos:start="7:75" pos:end="7:77"><type pos:start="7:75" pos:end="7:77"><name pos:start="7:75" pos:end="7:77">int</name></type></decl></parameter> , <parameter pos:start="7:81" pos:end="7:89"><decl pos:start="7:81" pos:end="7:89"><type pos:start="7:81" pos:end="7:89"><name pos:start="7:81" pos:end="7:87">int64_t</name> <modifier pos:start="7:89" pos:end="7:89">*</modifier></type></decl></parameter>, <parameter pos:start="7:92" pos:end="7:98"><decl pos:start="7:92" pos:end="7:98"><type pos:start="7:92" pos:end="7:98"><name pos:start="7:92" pos:end="7:98">int64_t</name></type></decl></parameter> )</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="243:1">{<block_content pos:start="11:5" pos:end="241:15">

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pos</name></decl>, <decl pos:start="11:18" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:18" pos:end="11:19">ts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:21">start_pos</name></decl>, <decl pos:start="13:24" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:24" pos:end="13:31">filesize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">no_change</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:72"><expr pos:start="19:5" pos:end="19:71"><call pos:start="19:5" pos:end="19:71"><name pos:start="19:5" pos:end="19:11">av_dlog</name><argument_list pos:start="19:12" pos:end="19:71">(<argument pos:start="19:13" pos:end="19:13"><expr pos:start="19:13" pos:end="19:13"><name pos:start="19:13" pos:end="19:13">s</name></expr></argument>, <argument pos:start="19:16" pos:end="19:34"><expr pos:start="19:16" pos:end="19:34"><literal type="string" pos:start="19:16" pos:end="19:34">"gen_seek: %d %s\n"</literal></expr></argument>, <argument pos:start="19:37" pos:end="19:48"><expr pos:start="19:37" pos:end="19:48"><name pos:start="19:37" pos:end="19:48">stream_index</name></expr></argument>, <argument pos:start="19:51" pos:end="19:70"><expr pos:start="19:51" pos:end="19:70"><call pos:start="19:51" pos:end="19:70"><name pos:start="19:51" pos:end="19:59">av_ts2str</name><argument_list pos:start="19:60" pos:end="19:70">(<argument pos:start="19:61" pos:end="19:69"><expr pos:start="19:61" pos:end="19:69"><name pos:start="19:61" pos:end="19:69">target_ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if<condition pos:start="23:7" pos:end="23:32">(<expr pos:start="23:8" pos:end="23:31"><name pos:start="23:8" pos:end="23:13">ts_min</name> <operator pos:start="23:15" pos:end="23:16">==</operator> <name pos:start="23:18" pos:end="23:31">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="23:33" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:22">

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:15">pos_min</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:32"><name pos:start="25:19" pos:end="25:19">s</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:32">data_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:89"><expr pos:start="27:9" pos:end="27:88"><name pos:start="27:9" pos:end="27:14">ts_min</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:88"><name pos:start="27:18" pos:end="27:34">ff_read_timestamp</name><argument_list pos:start="27:35" pos:end="27:88">(<argument pos:start="27:36" pos:end="27:36"><expr pos:start="27:36" pos:end="27:36"><name pos:start="27:36" pos:end="27:36">s</name></expr></argument>, <argument pos:start="27:39" pos:end="27:50"><expr pos:start="27:39" pos:end="27:50"><name pos:start="27:39" pos:end="27:50">stream_index</name></expr></argument>, <argument pos:start="27:53" pos:end="27:60"><expr pos:start="27:53" pos:end="27:60"><operator pos:start="27:53" pos:end="27:53">&amp;</operator><name pos:start="27:54" pos:end="27:60">pos_min</name></expr></argument>, <argument pos:start="27:63" pos:end="27:71"><expr pos:start="27:63" pos:end="27:71"><name pos:start="27:63" pos:end="27:71">INT64_MAX</name></expr></argument>, <argument pos:start="27:74" pos:end="27:87"><expr pos:start="27:74" pos:end="27:87"><name pos:start="27:74" pos:end="27:87">read_timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:22"><if pos:start="29:9" pos:end="31:22">if <condition pos:start="29:12" pos:end="29:37">(<expr pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:18">ts_min</name> <operator pos:start="29:20" pos:end="29:21">==</operator> <name pos:start="29:23" pos:end="29:36">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:22"><block_content pos:start="31:13" pos:end="31:22">

            <return pos:start="31:13" pos:end="31:22">return <expr pos:start="31:20" pos:end="31:21"><operator pos:start="31:20" pos:end="31:20">-</operator><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if<condition pos:start="37:7" pos:end="37:27">(<expr pos:start="37:8" pos:end="37:26"><name pos:start="37:8" pos:end="37:13">ts_min</name> <operator pos:start="37:15" pos:end="37:16">&gt;=</operator> <name pos:start="37:18" pos:end="37:26">target_ts</name></expr>)</condition><block pos:start="37:28" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:23">

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><operator pos:start="39:9" pos:end="39:9">*</operator><name pos:start="39:10" pos:end="39:15">ts_ret</name><operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:23">ts_min</name></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:23">return <expr pos:start="41:16" pos:end="41:22"><name pos:start="41:16" pos:end="41:22">pos_min</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="93:5"><if pos:start="47:5" pos:end="93:5">if<condition pos:start="47:7" pos:end="47:32">(<expr pos:start="47:8" pos:end="47:31"><name pos:start="47:8" pos:end="47:13">ts_max</name> <operator pos:start="47:15" pos:end="47:16">==</operator> <name pos:start="47:18" pos:end="47:31">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="47:33" pos:end="93:5">{<block_content pos:start="49:9" pos:end="91:27">

        <decl_stmt pos:start="49:9" pos:end="49:23"><decl pos:start="49:9" pos:end="49:22"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:16">step</name><init pos:start="49:17" pos:end="49:22">= <expr pos:start="49:19" pos:end="49:22"><literal type="number" pos:start="49:19" pos:end="49:22">1024</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:36"><expr pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:16">filesize</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <call pos:start="51:20" pos:end="51:35"><name pos:start="51:20" pos:end="51:28">avio_size</name><argument_list pos:start="51:29" pos:end="51:35">(<argument pos:start="51:30" pos:end="51:34"><expr pos:start="51:30" pos:end="51:34"><name pos:start="51:30" pos:end="51:34"><name pos:start="51:30" pos:end="51:30">s</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:15">pos_max</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:26">filesize</name> <operator pos:start="53:28" pos:end="53:28">-</operator> <literal type="number" pos:start="53:30" pos:end="53:30">1</literal></expr>;</expr_stmt>

        <do pos:start="55:9" pos:end="63:56">do<block pos:start="55:11" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:25">

            <expr_stmt pos:start="57:13" pos:end="57:47"><expr pos:start="57:13" pos:end="57:46"><name pos:start="57:13" pos:end="57:19">pos_max</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <call pos:start="57:23" pos:end="57:46"><name pos:start="57:23" pos:end="57:27">FFMAX</name><argument_list pos:start="57:28" pos:end="57:46">(<argument pos:start="57:29" pos:end="57:29"><expr pos:start="57:29" pos:end="57:29"><literal type="number" pos:start="57:29" pos:end="57:29">0</literal></expr></argument>, <argument pos:start="57:32" pos:end="57:45"><expr pos:start="57:32" pos:end="57:45"><name pos:start="57:32" pos:end="57:38">pos_max</name> <operator pos:start="57:40" pos:end="57:40">-</operator> <name pos:start="57:42" pos:end="57:45">step</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:98"><expr pos:start="59:13" pos:end="59:97"><name pos:start="59:13" pos:end="59:18">ts_max</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <call pos:start="59:22" pos:end="59:97"><name pos:start="59:22" pos:end="59:38">ff_read_timestamp</name><argument_list pos:start="59:39" pos:end="59:97">(<argument pos:start="59:40" pos:end="59:40"><expr pos:start="59:40" pos:end="59:40"><name pos:start="59:40" pos:end="59:40">s</name></expr></argument>, <argument pos:start="59:43" pos:end="59:54"><expr pos:start="59:43" pos:end="59:54"><name pos:start="59:43" pos:end="59:54">stream_index</name></expr></argument>, <argument pos:start="59:57" pos:end="59:64"><expr pos:start="59:57" pos:end="59:64"><operator pos:start="59:57" pos:end="59:57">&amp;</operator><name pos:start="59:58" pos:end="59:64">pos_max</name></expr></argument>, <argument pos:start="59:67" pos:end="59:80"><expr pos:start="59:67" pos:end="59:80"><name pos:start="59:67" pos:end="59:73">pos_max</name> <operator pos:start="59:75" pos:end="59:75">+</operator> <name pos:start="59:77" pos:end="59:80">step</name></expr></argument>, <argument pos:start="59:83" pos:end="59:96"><expr pos:start="59:83" pos:end="59:96"><name pos:start="59:83" pos:end="59:96">read_timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:25"><expr pos:start="61:13" pos:end="61:24"><name pos:start="61:13" pos:end="61:16">step</name> <operator pos:start="61:18" pos:end="61:19">+=</operator> <name pos:start="61:21" pos:end="61:24">step</name></expr>;</expr_stmt>

        </block_content>}</block>while<condition pos:start="63:15" pos:end="63:55">(<expr pos:start="63:16" pos:end="63:54"><name pos:start="63:16" pos:end="63:21">ts_max</name> <operator pos:start="63:23" pos:end="63:24">==</operator> <name pos:start="63:26" pos:end="63:39">AV_NOPTS_VALUE</name> <operator pos:start="63:41" pos:end="63:42">&amp;&amp;</operator> <name pos:start="63:44" pos:end="63:50">pos_max</name> <operator pos:start="63:52" pos:end="63:52">&gt;</operator> <literal type="number" pos:start="63:54" pos:end="63:54">0</literal></expr>)</condition>;</do>

        <if_stmt pos:start="65:9" pos:end="67:22"><if pos:start="65:9" pos:end="67:22">if <condition pos:start="65:12" pos:end="65:37">(<expr pos:start="65:13" pos:end="65:36"><name pos:start="65:13" pos:end="65:18">ts_max</name> <operator pos:start="65:20" pos:end="65:21">==</operator> <name pos:start="65:23" pos:end="65:36">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:22"><block_content pos:start="67:13" pos:end="67:22">

            <return pos:start="67:13" pos:end="67:22">return <expr pos:start="67:20" pos:end="67:21"><operator pos:start="67:20" pos:end="67:20">-</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="71:9" pos:end="89:9">for<control pos:start="71:12" pos:end="71:15">(<init pos:start="71:13" pos:end="71:13">;</init><condition pos:start="71:14" pos:end="71:14">;</condition><incr/>)</control><block pos:start="71:16" pos:end="89:9">{<block_content pos:start="73:13" pos:end="87:22">

            <decl_stmt pos:start="73:13" pos:end="73:41"><decl pos:start="73:13" pos:end="73:40"><type pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:19">int64_t</name></type> <name pos:start="73:21" pos:end="73:27">tmp_pos</name><init pos:start="73:28" pos:end="73:40">= <expr pos:start="73:30" pos:end="73:40"><name pos:start="73:30" pos:end="73:36">pos_max</name> <operator pos:start="73:38" pos:end="73:38">+</operator> <literal type="number" pos:start="73:40" pos:end="73:40">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="75:13" pos:end="75:100"><decl pos:start="75:13" pos:end="75:99"><type pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:19">int64_t</name></type> <name pos:start="75:21" pos:end="75:26">tmp_ts</name><init pos:start="75:27" pos:end="75:99">= <expr pos:start="75:29" pos:end="75:99"><call pos:start="75:29" pos:end="75:99"><name pos:start="75:29" pos:end="75:45">ff_read_timestamp</name><argument_list pos:start="75:46" pos:end="75:99">(<argument pos:start="75:47" pos:end="75:47"><expr pos:start="75:47" pos:end="75:47"><name pos:start="75:47" pos:end="75:47">s</name></expr></argument>, <argument pos:start="75:50" pos:end="75:61"><expr pos:start="75:50" pos:end="75:61"><name pos:start="75:50" pos:end="75:61">stream_index</name></expr></argument>, <argument pos:start="75:64" pos:end="75:71"><expr pos:start="75:64" pos:end="75:71"><operator pos:start="75:64" pos:end="75:64">&amp;</operator><name pos:start="75:65" pos:end="75:71">tmp_pos</name></expr></argument>, <argument pos:start="75:74" pos:end="75:82"><expr pos:start="75:74" pos:end="75:82"><name pos:start="75:74" pos:end="75:82">INT64_MAX</name></expr></argument>, <argument pos:start="75:85" pos:end="75:98"><expr pos:start="75:85" pos:end="75:98"><name pos:start="75:85" pos:end="75:98">read_timestamp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="77:13" pos:end="79:22"><if pos:start="77:13" pos:end="79:22">if<condition pos:start="77:15" pos:end="77:40">(<expr pos:start="77:16" pos:end="77:39"><name pos:start="77:16" pos:end="77:21">tmp_ts</name> <operator pos:start="77:23" pos:end="77:24">==</operator> <name pos:start="77:26" pos:end="77:39">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:22"><block_content pos:start="79:17" pos:end="79:22">

                <break pos:start="79:17" pos:end="79:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:27"><expr pos:start="81:13" pos:end="81:26"><name pos:start="81:13" pos:end="81:18">ts_max</name><operator pos:start="81:19" pos:end="81:19">=</operator> <name pos:start="81:21" pos:end="81:26">tmp_ts</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:29"><expr pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:19">pos_max</name><operator pos:start="83:20" pos:end="83:20">=</operator> <name pos:start="83:22" pos:end="83:28">tmp_pos</name></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="87:22"><if pos:start="85:13" pos:end="87:22">if<condition pos:start="85:15" pos:end="85:35">(<expr pos:start="85:16" pos:end="85:34"><name pos:start="85:16" pos:end="85:22">tmp_pos</name> <operator pos:start="85:24" pos:end="85:25">&gt;=</operator> <name pos:start="85:27" pos:end="85:34">filesize</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:22"><block_content pos:start="87:17" pos:end="87:22">

                <break pos:start="87:17" pos:end="87:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="91:9" pos:end="91:27"><expr pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:17">pos_limit</name><operator pos:start="91:18" pos:end="91:18">=</operator> <name pos:start="91:20" pos:end="91:26">pos_max</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="103:5"><if pos:start="97:5" pos:end="103:5">if<condition pos:start="97:7" pos:end="97:27">(<expr pos:start="97:8" pos:end="97:26"><name pos:start="97:8" pos:end="97:13">ts_max</name> <operator pos:start="97:15" pos:end="97:16">&lt;=</operator> <name pos:start="97:18" pos:end="97:26">target_ts</name></expr>)</condition><block pos:start="97:28" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:23">

        <expr_stmt pos:start="99:9" pos:end="99:24"><expr pos:start="99:9" pos:end="99:23"><operator pos:start="99:9" pos:end="99:9">*</operator><name pos:start="99:10" pos:end="99:15">ts_ret</name><operator pos:start="99:16" pos:end="99:16">=</operator> <name pos:start="99:18" pos:end="99:23">ts_max</name></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:23">return <expr pos:start="101:16" pos:end="101:22"><name pos:start="101:16" pos:end="101:22">pos_max</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="115:5"><if pos:start="107:5" pos:end="111:5">if<condition pos:start="107:7" pos:end="107:23">(<expr pos:start="107:8" pos:end="107:22"><name pos:start="107:8" pos:end="107:13">ts_min</name> <operator pos:start="107:15" pos:end="107:15">&gt;</operator> <name pos:start="107:17" pos:end="107:22">ts_max</name></expr>)</condition><block pos:start="107:24" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:18">

        <return pos:start="109:9" pos:end="109:18">return <expr pos:start="109:16" pos:end="109:17"><operator pos:start="109:16" pos:end="109:16">-</operator><literal type="number" pos:start="109:17" pos:end="109:17">1</literal></expr>;</return>

    </block_content>}</block></if><if type="elseif" pos:start="111:6" pos:end="115:5">else if<condition pos:start="111:13" pos:end="111:30">(<expr pos:start="111:14" pos:end="111:29"><name pos:start="111:14" pos:end="111:19">ts_min</name> <operator pos:start="111:21" pos:end="111:22">==</operator> <name pos:start="111:24" pos:end="111:29">ts_max</name></expr>)</condition><block pos:start="111:31" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:27">

        <expr_stmt pos:start="113:9" pos:end="113:27"><expr pos:start="113:9" pos:end="113:26"><name pos:start="113:9" pos:end="113:17">pos_limit</name><operator pos:start="113:18" pos:end="113:18">=</operator> <name pos:start="113:20" pos:end="113:26">pos_min</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:16"><expr pos:start="119:5" pos:end="119:15"><name pos:start="119:5" pos:end="119:13">no_change</name><operator pos:start="119:14" pos:end="119:14">=</operator><literal type="number" pos:start="119:15" pos:end="119:15">0</literal></expr>;</expr_stmt>

    <while pos:start="121:5" pos:end="215:5">while <condition pos:start="121:11" pos:end="121:31">(<expr pos:start="121:12" pos:end="121:30"><name pos:start="121:12" pos:end="121:18">pos_min</name> <operator pos:start="121:20" pos:end="121:20">&lt;</operator> <name pos:start="121:22" pos:end="121:30">pos_limit</name></expr>)</condition> <block pos:start="121:33" pos:end="215:5">{<block_content pos:start="123:9" pos:end="213:9">

        <expr_stmt pos:start="123:9" pos:end="125:72"><expr pos:start="123:9" pos:end="125:71"><call pos:start="123:9" pos:end="125:71"><name pos:start="123:9" pos:end="123:15">av_dlog</name><argument_list pos:start="123:16" pos:end="125:71">(<argument pos:start="123:17" pos:end="123:17"><expr pos:start="123:17" pos:end="123:17"><name pos:start="123:17" pos:end="123:17">s</name></expr></argument>, <argument pos:start="123:20" pos:end="123:84"><expr pos:start="123:20" pos:end="123:84"><literal type="string" pos:start="123:20" pos:end="123:32">"pos_min=0x%"</literal><name pos:start="123:33" pos:end="123:38">PRIx64</name><literal type="string" pos:start="123:39" pos:end="123:52">" pos_max=0x%"</literal><name pos:start="123:53" pos:end="123:58">PRIx64</name><literal type="string" pos:start="123:59" pos:end="123:84">" dts_min=%s dts_max=%s\n"</literal></expr></argument>,

                <argument pos:start="125:17" pos:end="125:23"><expr pos:start="125:17" pos:end="125:23"><name pos:start="125:17" pos:end="125:23">pos_min</name></expr></argument>, <argument pos:start="125:26" pos:end="125:32"><expr pos:start="125:26" pos:end="125:32"><name pos:start="125:26" pos:end="125:32">pos_max</name></expr></argument>, <argument pos:start="125:35" pos:end="125:51"><expr pos:start="125:35" pos:end="125:51"><call pos:start="125:35" pos:end="125:51"><name pos:start="125:35" pos:end="125:43">av_ts2str</name><argument_list pos:start="125:44" pos:end="125:51">(<argument pos:start="125:45" pos:end="125:50"><expr pos:start="125:45" pos:end="125:50"><name pos:start="125:45" pos:end="125:50">ts_min</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="125:54" pos:end="125:70"><expr pos:start="125:54" pos:end="125:70"><call pos:start="125:54" pos:end="125:70"><name pos:start="125:54" pos:end="125:62">av_ts2str</name><argument_list pos:start="125:63" pos:end="125:70">(<argument pos:start="125:64" pos:end="125:69"><expr pos:start="125:64" pos:end="125:69"><name pos:start="125:64" pos:end="125:69">ts_max</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:37"><expr pos:start="127:9" pos:end="127:36"><call pos:start="127:9" pos:end="127:36"><name pos:start="127:9" pos:end="127:14">assert</name><argument_list pos:start="127:15" pos:end="127:36">(<argument pos:start="127:16" pos:end="127:35"><expr pos:start="127:16" pos:end="127:35"><name pos:start="127:16" pos:end="127:24">pos_limit</name> <operator pos:start="127:26" pos:end="127:27">&lt;=</operator> <name pos:start="127:29" pos:end="127:35">pos_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="131:9" pos:end="155:9"><if pos:start="131:9" pos:end="141:9">if<condition pos:start="131:11" pos:end="131:24">(<expr pos:start="131:12" pos:end="131:23"><name pos:start="131:12" pos:end="131:20">no_change</name><operator pos:start="131:21" pos:end="131:22">==</operator><literal type="number" pos:start="131:23" pos:end="131:23">0</literal></expr>)</condition><block pos:start="131:25" pos:end="141:9">{<block_content pos:start="133:13" pos:end="139:58">

            <decl_stmt pos:start="133:13" pos:end="133:71"><decl pos:start="133:13" pos:end="133:70"><type pos:start="133:13" pos:end="133:19"><name pos:start="133:13" pos:end="133:19">int64_t</name></type> <name pos:start="133:21" pos:end="133:49">approximate_keyframe_distance</name><init pos:start="133:50" pos:end="133:70">= <expr pos:start="133:52" pos:end="133:70"><name pos:start="133:52" pos:end="133:58">pos_max</name> <operator pos:start="133:60" pos:end="133:60">-</operator> <name pos:start="133:62" pos:end="133:70">pos_limit</name></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:start="135:13" pos:end="135:59">// interpolate position (better than dichotomy)</comment>

            <expr_stmt pos:start="137:13" pos:end="139:58"><expr pos:start="137:13" pos:end="139:57"><name pos:start="137:13" pos:end="137:15">pos</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <call pos:start="137:19" pos:end="137:84"><name pos:start="137:19" pos:end="137:28">av_rescale</name><argument_list pos:start="137:29" pos:end="137:84">(<argument pos:start="137:30" pos:end="137:47"><expr pos:start="137:30" pos:end="137:47"><name pos:start="137:30" pos:end="137:38">target_ts</name> <operator pos:start="137:40" pos:end="137:40">-</operator> <name pos:start="137:42" pos:end="137:47">ts_min</name></expr></argument>, <argument pos:start="137:50" pos:end="137:66"><expr pos:start="137:50" pos:end="137:66"><name pos:start="137:50" pos:end="137:56">pos_max</name> <operator pos:start="137:58" pos:end="137:58">-</operator> <name pos:start="137:60" pos:end="137:66">pos_min</name></expr></argument>, <argument pos:start="137:69" pos:end="137:83"><expr pos:start="137:69" pos:end="137:83"><name pos:start="137:69" pos:end="137:74">ts_max</name> <operator pos:start="137:76" pos:end="137:76">-</operator> <name pos:start="137:78" pos:end="137:83">ts_min</name></expr></argument>)</argument_list></call>

                <operator pos:start="139:17" pos:end="139:17">+</operator> <name pos:start="139:19" pos:end="139:25">pos_min</name> <operator pos:start="139:27" pos:end="139:27">-</operator> <name pos:start="139:29" pos:end="139:57">approximate_keyframe_distance</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="141:10" pos:end="147:9">else if<condition pos:start="141:17" pos:end="141:30">(<expr pos:start="141:18" pos:end="141:29"><name pos:start="141:18" pos:end="141:26">no_change</name><operator pos:start="141:27" pos:end="141:28">==</operator><literal type="number" pos:start="141:29" pos:end="141:29">1</literal></expr>)</condition><block pos:start="141:31" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:43">

            <comment type="line" pos:start="143:13" pos:end="143:84">// bisection, if interpolation failed to change min or max pos last time</comment>

            <expr_stmt pos:start="145:13" pos:end="145:43"><expr pos:start="145:13" pos:end="145:42"><name pos:start="145:13" pos:end="145:15">pos</name> <operator pos:start="145:17" pos:end="145:17">=</operator> <operator pos:start="145:19" pos:end="145:19">(</operator><name pos:start="145:20" pos:end="145:26">pos_min</name> <operator pos:start="145:28" pos:end="145:28">+</operator> <name pos:start="145:30" pos:end="145:38">pos_limit</name><operator pos:start="145:39" pos:end="145:39">)</operator><operator pos:start="145:40" pos:end="145:41">&gt;&gt;</operator><literal type="number" pos:start="145:42" pos:end="145:42">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="147:10" pos:end="155:9">else<block pos:start="147:14" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:24">

            <comment type="block" pos:start="149:13" pos:end="151:62">/* linear search if bisection failed, can only happen if there

               are very few or no keyframes between min/max */</comment>

            <expr_stmt pos:start="153:13" pos:end="153:24"><expr pos:start="153:13" pos:end="153:23"><name pos:start="153:13" pos:end="153:15">pos</name><operator pos:start="153:16" pos:end="153:16">=</operator><name pos:start="153:17" pos:end="153:23">pos_min</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="157:9" pos:end="163:27"><if pos:start="157:9" pos:end="159:29">if<condition pos:start="157:11" pos:end="157:26">(<expr pos:start="157:12" pos:end="157:25"><name pos:start="157:12" pos:end="157:14">pos</name> <operator pos:start="157:16" pos:end="157:17">&lt;=</operator> <name pos:start="157:19" pos:end="157:25">pos_min</name></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:29"><block_content pos:start="159:13" pos:end="159:29">

            <expr_stmt pos:start="159:13" pos:end="159:29"><expr pos:start="159:13" pos:end="159:28"><name pos:start="159:13" pos:end="159:15">pos</name><operator pos:start="159:16" pos:end="159:16">=</operator> <name pos:start="159:18" pos:end="159:24">pos_min</name> <operator pos:start="159:26" pos:end="159:26">+</operator> <literal type="number" pos:start="159:28" pos:end="159:28">1</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="161:9" pos:end="163:27">else if<condition pos:start="161:16" pos:end="161:32">(<expr pos:start="161:17" pos:end="161:31"><name pos:start="161:17" pos:end="161:19">pos</name> <operator pos:start="161:21" pos:end="161:21">&gt;</operator> <name pos:start="161:23" pos:end="161:31">pos_limit</name></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:27"><block_content pos:start="163:13" pos:end="163:27">

            <expr_stmt pos:start="163:13" pos:end="163:27"><expr pos:start="163:13" pos:end="163:26"><name pos:start="163:13" pos:end="163:15">pos</name><operator pos:start="163:16" pos:end="163:16">=</operator> <name pos:start="163:18" pos:end="163:26">pos_limit</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:23"><expr pos:start="165:9" pos:end="165:22"><name pos:start="165:9" pos:end="165:17">start_pos</name><operator pos:start="165:18" pos:end="165:18">=</operator> <name pos:start="165:20" pos:end="165:22">pos</name></expr>;</expr_stmt>



        <expr_stmt pos:start="169:9" pos:end="169:81"><expr pos:start="169:9" pos:end="169:80"><name pos:start="169:9" pos:end="169:10">ts</name> <operator pos:start="169:12" pos:end="169:12">=</operator> <call pos:start="169:14" pos:end="169:80"><name pos:start="169:14" pos:end="169:30">ff_read_timestamp</name><argument_list pos:start="169:31" pos:end="169:80">(<argument pos:start="169:32" pos:end="169:32"><expr pos:start="169:32" pos:end="169:32"><name pos:start="169:32" pos:end="169:32">s</name></expr></argument>, <argument pos:start="169:35" pos:end="169:46"><expr pos:start="169:35" pos:end="169:46"><name pos:start="169:35" pos:end="169:46">stream_index</name></expr></argument>, <argument pos:start="169:49" pos:end="169:52"><expr pos:start="169:49" pos:end="169:52"><operator pos:start="169:49" pos:end="169:49">&amp;</operator><name pos:start="169:50" pos:end="169:52">pos</name></expr></argument>, <argument pos:start="169:55" pos:end="169:63"><expr pos:start="169:55" pos:end="169:63"><name pos:start="169:55" pos:end="169:63">INT64_MAX</name></expr></argument>, <argument pos:start="169:66" pos:end="169:79"><expr pos:start="169:66" pos:end="169:79"><name pos:start="169:66" pos:end="169:79">read_timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="169:83" pos:end="169:116">//may pass pos_limit instead of -1</comment>

        <if_stmt pos:start="171:9" pos:end="177:24"><if pos:start="171:9" pos:end="173:24">if<condition pos:start="171:11" pos:end="171:26">(<expr pos:start="171:12" pos:end="171:25"><name pos:start="171:12" pos:end="171:14">pos</name> <operator pos:start="171:16" pos:end="171:17">==</operator> <name pos:start="171:19" pos:end="171:25">pos_max</name></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:24"><block_content pos:start="173:13" pos:end="173:24">

            <expr_stmt pos:start="173:13" pos:end="173:24"><expr pos:start="173:13" pos:end="173:23"><name pos:start="173:13" pos:end="173:21">no_change</name><operator pos:start="173:22" pos:end="173:23">++</operator></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="175:9" pos:end="177:24">else<block type="pseudo" pos:start="177:13" pos:end="177:24"><block_content pos:start="177:13" pos:end="177:24">

            <expr_stmt pos:start="177:13" pos:end="177:24"><expr pos:start="177:13" pos:end="177:23"><name pos:start="177:13" pos:end="177:21">no_change</name><operator pos:start="177:22" pos:end="177:22">=</operator><literal type="number" pos:start="177:23" pos:end="177:23">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="179:9" pos:end="185:49"><expr pos:start="179:9" pos:end="185:48"><call pos:start="179:9" pos:end="185:48"><name pos:start="179:9" pos:end="179:15">av_dlog</name><argument_list pos:start="179:16" pos:end="185:48">(<argument pos:start="179:17" pos:end="179:17"><expr pos:start="179:17" pos:end="179:17"><name pos:start="179:17" pos:end="179:17">s</name></expr></argument>, <argument pos:start="179:20" pos:end="179:112"><expr pos:start="179:20" pos:end="179:112"><literal type="string" pos:start="179:20" pos:end="179:22">"%"</literal><name pos:start="179:23" pos:end="179:28">PRId64</name><literal type="string" pos:start="179:29" pos:end="179:32">" %"</literal><name pos:start="179:33" pos:end="179:38">PRId64</name><literal type="string" pos:start="179:39" pos:end="179:42">" %"</literal><name pos:start="179:43" pos:end="179:48">PRId64</name><literal type="string" pos:start="179:49" pos:end="179:79">" / %s %s %s target:%s limit:%"</literal><name pos:start="179:80" pos:end="179:85">PRId64</name><literal type="string" pos:start="179:86" pos:end="179:95">" start:%"</literal><name pos:start="179:96" pos:end="179:101">PRId64</name><literal type="string" pos:start="179:102" pos:end="179:112">" noc:%d\n"</literal></expr></argument>,

                <argument pos:start="181:17" pos:end="181:23"><expr pos:start="181:17" pos:end="181:23"><name pos:start="181:17" pos:end="181:23">pos_min</name></expr></argument>, <argument pos:start="181:26" pos:end="181:28"><expr pos:start="181:26" pos:end="181:28"><name pos:start="181:26" pos:end="181:28">pos</name></expr></argument>, <argument pos:start="181:31" pos:end="181:37"><expr pos:start="181:31" pos:end="181:37"><name pos:start="181:31" pos:end="181:37">pos_max</name></expr></argument>,

                <argument pos:start="183:17" pos:end="183:33"><expr pos:start="183:17" pos:end="183:33"><call pos:start="183:17" pos:end="183:33"><name pos:start="183:17" pos:end="183:25">av_ts2str</name><argument_list pos:start="183:26" pos:end="183:33">(<argument pos:start="183:27" pos:end="183:32"><expr pos:start="183:27" pos:end="183:32"><name pos:start="183:27" pos:end="183:32">ts_min</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="183:36" pos:end="183:48"><expr pos:start="183:36" pos:end="183:48"><call pos:start="183:36" pos:end="183:48"><name pos:start="183:36" pos:end="183:44">av_ts2str</name><argument_list pos:start="183:45" pos:end="183:48">(<argument pos:start="183:46" pos:end="183:47"><expr pos:start="183:46" pos:end="183:47"><name pos:start="183:46" pos:end="183:47">ts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="183:51" pos:end="183:67"><expr pos:start="183:51" pos:end="183:67"><call pos:start="183:51" pos:end="183:67"><name pos:start="183:51" pos:end="183:59">av_ts2str</name><argument_list pos:start="183:60" pos:end="183:67">(<argument pos:start="183:61" pos:end="183:66"><expr pos:start="183:61" pos:end="183:66"><name pos:start="183:61" pos:end="183:66">ts_max</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="183:70" pos:end="183:89"><expr pos:start="183:70" pos:end="183:89"><call pos:start="183:70" pos:end="183:89"><name pos:start="183:70" pos:end="183:78">av_ts2str</name><argument_list pos:start="183:79" pos:end="183:89">(<argument pos:start="183:80" pos:end="183:88"><expr pos:start="183:80" pos:end="183:88"><name pos:start="183:80" pos:end="183:88">target_ts</name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="185:17" pos:end="185:25"><expr pos:start="185:17" pos:end="185:25"><name pos:start="185:17" pos:end="185:25">pos_limit</name></expr></argument>, <argument pos:start="185:28" pos:end="185:36"><expr pos:start="185:28" pos:end="185:36"><name pos:start="185:28" pos:end="185:36">start_pos</name></expr></argument>, <argument pos:start="185:39" pos:end="185:47"><expr pos:start="185:39" pos:end="185:47"><name pos:start="185:39" pos:end="185:47">no_change</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="187:9" pos:end="193:9"><if pos:start="187:9" pos:end="193:9">if<condition pos:start="187:11" pos:end="187:32">(<expr pos:start="187:12" pos:end="187:31"><name pos:start="187:12" pos:end="187:13">ts</name> <operator pos:start="187:15" pos:end="187:16">==</operator> <name pos:start="187:18" pos:end="187:31">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="187:33" pos:end="193:9">{<block_content pos:start="189:13" pos:end="191:22">

            <expr_stmt pos:start="189:13" pos:end="189:79"><expr pos:start="189:13" pos:end="189:78"><call pos:start="189:13" pos:end="189:78"><name pos:start="189:13" pos:end="189:18">av_log</name><argument_list pos:start="189:19" pos:end="189:78">(<argument pos:start="189:20" pos:end="189:20"><expr pos:start="189:20" pos:end="189:20"><name pos:start="189:20" pos:end="189:20">s</name></expr></argument>, <argument pos:start="189:23" pos:end="189:34"><expr pos:start="189:23" pos:end="189:34"><name pos:start="189:23" pos:end="189:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:37" pos:end="189:77"><expr pos:start="189:37" pos:end="189:77"><literal type="string" pos:start="189:37" pos:end="189:77">"read_timestamp() failed in the middle\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="191:13" pos:end="191:22">return <expr pos:start="191:20" pos:end="191:21"><operator pos:start="191:20" pos:end="191:20">-</operator><literal type="number" pos:start="191:21" pos:end="191:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:37"><expr pos:start="195:9" pos:end="195:36"><call pos:start="195:9" pos:end="195:36"><name pos:start="195:9" pos:end="195:14">assert</name><argument_list pos:start="195:15" pos:end="195:36">(<argument pos:start="195:16" pos:end="195:35"><expr pos:start="195:16" pos:end="195:35"><name pos:start="195:16" pos:end="195:17">ts</name> <operator pos:start="195:19" pos:end="195:20">!=</operator> <name pos:start="195:22" pos:end="195:35">AV_NOPTS_VALUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="205:9"><if pos:start="197:9" pos:end="205:9">if <condition pos:start="197:12" pos:end="197:28">(<expr pos:start="197:13" pos:end="197:27"><name pos:start="197:13" pos:end="197:21">target_ts</name> <operator pos:start="197:23" pos:end="197:24">&lt;=</operator> <name pos:start="197:26" pos:end="197:27">ts</name></expr>)</condition> <block pos:start="197:30" pos:end="205:9">{<block_content pos:start="199:13" pos:end="203:24">

            <expr_stmt pos:start="199:13" pos:end="199:38"><expr pos:start="199:13" pos:end="199:37"><name pos:start="199:13" pos:end="199:21">pos_limit</name> <operator pos:start="199:23" pos:end="199:23">=</operator> <name pos:start="199:25" pos:end="199:33">start_pos</name> <operator pos:start="199:35" pos:end="199:35">-</operator> <literal type="number" pos:start="199:37" pos:end="199:37">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:26"><expr pos:start="201:13" pos:end="201:25"><name pos:start="201:13" pos:end="201:19">pos_max</name> <operator pos:start="201:21" pos:end="201:21">=</operator> <name pos:start="201:23" pos:end="201:25">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:24"><expr pos:start="203:13" pos:end="203:23"><name pos:start="203:13" pos:end="203:18">ts_max</name> <operator pos:start="203:20" pos:end="203:20">=</operator> <name pos:start="203:22" pos:end="203:23">ts</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="207:9" pos:end="213:9"><if pos:start="207:9" pos:end="213:9">if <condition pos:start="207:12" pos:end="207:28">(<expr pos:start="207:13" pos:end="207:27"><name pos:start="207:13" pos:end="207:21">target_ts</name> <operator pos:start="207:23" pos:end="207:24">&gt;=</operator> <name pos:start="207:26" pos:end="207:27">ts</name></expr>)</condition> <block pos:start="207:30" pos:end="213:9">{<block_content pos:start="209:13" pos:end="211:24">

            <expr_stmt pos:start="209:13" pos:end="209:26"><expr pos:start="209:13" pos:end="209:25"><name pos:start="209:13" pos:end="209:19">pos_min</name> <operator pos:start="209:21" pos:end="209:21">=</operator> <name pos:start="209:23" pos:end="209:25">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:24"><expr pos:start="211:13" pos:end="211:23"><name pos:start="211:13" pos:end="211:18">ts_min</name> <operator pos:start="211:20" pos:end="211:20">=</operator> <name pos:start="211:22" pos:end="211:23">ts</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="219:5" pos:end="219:61"><expr pos:start="219:5" pos:end="219:60"><name pos:start="219:5" pos:end="219:7">pos</name> <operator pos:start="219:9" pos:end="219:9">=</operator> <ternary pos:start="219:11" pos:end="219:60"><condition pos:start="219:11" pos:end="219:42"><expr pos:start="219:11" pos:end="219:40"><operator pos:start="219:11" pos:end="219:11">(</operator><name pos:start="219:12" pos:end="219:16">flags</name> <operator pos:start="219:18" pos:end="219:18">&amp;</operator> <name pos:start="219:20" pos:end="219:39">AVSEEK_FLAG_BACKWARD</name><operator pos:start="219:40" pos:end="219:40">)</operator></expr> ?</condition><then pos:start="219:44" pos:end="219:50"> <expr pos:start="219:44" pos:end="219:50"><name pos:start="219:44" pos:end="219:50">pos_min</name></expr> </then><else pos:start="219:52" pos:end="219:60">: <expr pos:start="219:54" pos:end="219:60"><name pos:start="219:54" pos:end="219:60">pos_max</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="238:0"><expr pos:start="221:5" pos:end="221:60"><name pos:start="221:5" pos:end="221:6">ts</name>  <operator pos:start="221:9" pos:end="221:9">=</operator> <ternary pos:start="221:11" pos:end="221:60"><condition pos:start="221:11" pos:end="221:42"><expr pos:start="221:11" pos:end="221:40"><operator pos:start="221:11" pos:end="221:11">(</operator><name pos:start="221:12" pos:end="221:16">flags</name> <operator pos:start="221:18" pos:end="221:18">&amp;</operator> <name pos:start="221:20" pos:end="221:39">AVSEEK_FLAG_BACKWARD</name><operator pos:start="221:40" pos:end="221:40">)</operator></expr> ?</condition><then pos:start="221:45" pos:end="221:50">  <expr pos:start="221:45" pos:end="221:50"><name pos:start="221:45" pos:end="221:50">ts_min</name></expr> </then><else pos:start="221:52" pos:end="221:60">:  <expr pos:start="221:55" pos:end="221:60"><name pos:start="221:55" pos:end="221:60">ts_max</name></expr></else></ternary></expr>;</expr_stmt>

<cpp:if pos:start="223:1" pos:end="223:5">#<cpp:directive pos:start="223:2" pos:end="223:3">if</cpp:directive> <expr pos:start="223:5" pos:end="223:5"><literal type="number" pos:start="223:5" pos:end="223:5">0</literal></expr></cpp:if>

    pos_min = pos;

    ts_min = ff_read_timestamp(s, stream_index, &amp;pos_min, INT64_MAX, read_timestamp);

    pos_min++;

    ts_max = ff_read_timestamp(s, stream_index, &amp;pos_min, INT64_MAX, read_timestamp);

    av_dlog(s, "pos=0x%"PRIx64" %s&lt;=%s&lt;=%s\n",

            pos, av_ts2str(ts_min), av_ts2str(target_ts), av_ts2str(ts_max));

<cpp:endif pos:start="237:1" pos:end="237:6">#<cpp:directive pos:start="237:2" pos:end="237:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="239:5" pos:end="239:16"><expr pos:start="239:5" pos:end="239:15"><operator pos:start="239:5" pos:end="239:5">*</operator><name pos:start="239:6" pos:end="239:11">ts_ret</name><operator pos:start="239:12" pos:end="239:12">=</operator> <name pos:start="239:14" pos:end="239:15">ts</name></expr>;</expr_stmt>

    <return pos:start="241:5" pos:end="241:15">return <expr pos:start="241:12" pos:end="241:14"><name pos:start="241:12" pos:end="241:14">pos</name></expr>;</return>

</block_content>}</block></function>
</unit>
