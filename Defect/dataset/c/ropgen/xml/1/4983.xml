<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4983.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_ddts</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:18"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:18">uint32_t</name></type> <name pos:start="5:20" pos:end="5:28">ddts_size</name> <init pos:start="5:30" pos:end="5:33">= <expr pos:start="5:32" pos:end="5:33"><literal type="number" pos:start="5:32" pos:end="5:33">20</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">buf</name> <init pos:start="9:18" pos:end="9:23">= <expr pos:start="9:20" pos:end="9:23"><name pos:start="9:20" pos:end="9:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:32">frame_duration_code</name> <init pos:start="11:34" pos:end="11:36">= <expr pos:start="11:36" pos:end="11:36"><literal type="number" pos:start="11:36" pos:end="11:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:32">channel_layout_code</name> <init pos:start="13:34" pos:end="13:36">= <expr pos:start="13:36" pos:end="13:36"><literal type="number" pos:start="13:36" pos:end="13:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:17">GetBitContext</name></type> <name pos:start="15:19" pos:end="15:20">gb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:62"><expr pos:start="19:5" pos:end="19:61"><name pos:start="19:5" pos:end="19:7">buf</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:61"><name pos:start="19:11" pos:end="19:19">av_malloc</name><argument_list pos:start="19:20" pos:end="19:61">(<argument pos:start="19:21" pos:end="19:60"><expr pos:start="19:21" pos:end="19:60"><name pos:start="19:21" pos:end="19:29">ddts_size</name> <operator pos:start="19:31" pos:end="19:31">+</operator> <name pos:start="19:33" pos:end="19:60">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:13">(<expr pos:start="21:9" pos:end="21:12"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:12">buf</name></expr>)</condition> <block pos:start="21:15" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="32:5"><if pos:start="27:5" pos:end="32:5">if <condition pos:start="27:8" pos:end="27:50">(<expr pos:start="27:9" pos:end="27:49"><call pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:17">avio_read</name><argument_list pos:start="27:18" pos:end="27:37">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">pb</name></expr></argument>, <argument pos:start="27:23" pos:end="27:25"><expr pos:start="27:23" pos:end="27:25"><name pos:start="27:23" pos:end="27:25">buf</name></expr></argument>, <argument pos:start="27:28" pos:end="27:36"><expr pos:start="27:28" pos:end="27:36"><name pos:start="27:28" pos:end="27:36">ddts_size</name></expr></argument>)</argument_list></call> <operator pos:start="27:39" pos:end="27:39">&lt;</operator> <name pos:start="27:41" pos:end="27:49">ddts_size</name></expr>)</condition> <block pos:start="27:52" pos:end="32:5">{<block_content pos:start="30:9" pos:end="30:35">


        <return pos:start="30:9" pos:end="30:35">return <expr pos:start="30:16" pos:end="30:34"><name pos:start="30:16" pos:end="30:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="36:5" pos:end="36:41"><expr pos:start="36:5" pos:end="36:40"><call pos:start="36:5" pos:end="36:40"><name pos:start="36:5" pos:end="36:17">init_get_bits</name><argument_list pos:start="36:18" pos:end="36:40">(<argument pos:start="36:19" pos:end="36:21"><expr pos:start="36:19" pos:end="36:21"><operator pos:start="36:19" pos:end="36:19">&amp;</operator><name pos:start="36:20" pos:end="36:21">gb</name></expr></argument>, <argument pos:start="36:24" pos:end="36:26"><expr pos:start="36:24" pos:end="36:26"><name pos:start="36:24" pos:end="36:26">buf</name></expr></argument>, <argument pos:start="36:29" pos:end="36:39"><expr pos:start="36:29" pos:end="36:39"><literal type="number" pos:start="36:29" pos:end="36:29">8</literal><operator pos:start="36:30" pos:end="36:30">*</operator><name pos:start="36:31" pos:end="36:39">ddts_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="40:5" pos:end="45:5"><if pos:start="40:5" pos:end="45:5">if <condition pos:start="40:8" pos:end="40:30">(<expr pos:start="40:9" pos:end="40:29"><name pos:start="40:9" pos:end="40:25"><name pos:start="40:9" pos:end="40:9">c</name><operator pos:start="40:10" pos:end="40:11">-&gt;</operator><name pos:start="40:12" pos:end="40:13">fc</name><operator pos:start="40:14" pos:end="40:15">-&gt;</operator><name pos:start="40:16" pos:end="40:25">nb_streams</name></name> <operator pos:start="40:27" pos:end="40:27">&lt;</operator> <literal type="number" pos:start="40:29" pos:end="40:29">1</literal></expr>)</condition> <block pos:start="40:32" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:17">


        <return pos:start="43:9" pos:end="43:17">return <expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:6">st</name> <operator pos:start="47:8" pos:end="47:8">=</operator> <name pos:start="47:10" pos:end="47:44"><name pos:start="47:10" pos:end="47:10">c</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:14">fc</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:23">streams</name><index pos:start="47:24" pos:end="47:44">[<expr pos:start="47:25" pos:end="47:43"><name pos:start="47:25" pos:end="47:41"><name pos:start="47:25" pos:end="47:25">c</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:29">fc</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:41">nb_streams</name></name><operator pos:start="47:42" pos:end="47:42">-</operator><literal type="number" pos:start="47:43" pos:end="47:43">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:55"><expr pos:start="51:5" pos:end="51:54"><name pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:6">st</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:16">codecpar</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:29">sample_rate</name></name> <operator pos:start="51:31" pos:end="51:31">=</operator> <call pos:start="51:33" pos:end="51:54"><name pos:start="51:33" pos:end="51:45">get_bits_long</name><argument_list pos:start="51:46" pos:end="51:54">(<argument pos:start="51:47" pos:end="51:49"><expr pos:start="51:47" pos:end="51:49"><operator pos:start="51:47" pos:end="51:47">&amp;</operator><name pos:start="51:48" pos:end="51:49">gb</name></expr></argument>, <argument pos:start="51:52" pos:end="51:53"><expr pos:start="51:52" pos:end="51:53"><literal type="number" pos:start="51:52" pos:end="51:53">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="60:5"><if pos:start="53:5" pos:end="60:5">if <condition pos:start="53:8" pos:end="53:39">(<expr pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:10">st</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:20">codecpar</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:33">sample_rate</name></name> <operator pos:start="53:35" pos:end="53:36">&lt;=</operator> <literal type="number" pos:start="53:38" pos:end="53:38">0</literal></expr>)</condition> <block pos:start="53:41" pos:end="60:5">{<block_content pos:start="55:9" pos:end="58:35">

        <expr_stmt pos:start="55:9" pos:end="55:91"><expr pos:start="55:9" pos:end="55:90"><call pos:start="55:9" pos:end="55:90"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:90">(<argument pos:start="55:16" pos:end="55:20"><expr pos:start="55:16" pos:end="55:20"><name pos:start="55:16" pos:end="55:20"><name pos:start="55:16" pos:end="55:16">c</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:20">fc</name></name></expr></argument>, <argument pos:start="55:23" pos:end="55:34"><expr pos:start="55:23" pos:end="55:34"><name pos:start="55:23" pos:end="55:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:37" pos:end="55:62"><expr pos:start="55:37" pos:end="55:62"><literal type="string" pos:start="55:37" pos:end="55:62">"Invalid sample rate %d\n"</literal></expr></argument>, <argument pos:start="55:65" pos:end="55:89"><expr pos:start="55:65" pos:end="55:89"><name pos:start="55:65" pos:end="55:89"><name pos:start="55:65" pos:end="55:66">st</name><operator pos:start="55:67" pos:end="55:68">-&gt;</operator><name pos:start="55:69" pos:end="55:76">codecpar</name><operator pos:start="55:77" pos:end="55:78">-&gt;</operator><name pos:start="55:79" pos:end="55:89">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <return pos:start="58:9" pos:end="58:35">return <expr pos:start="58:16" pos:end="58:34"><name pos:start="58:16" pos:end="58:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="62:5" pos:end="62:28"><expr pos:start="62:5" pos:end="62:27"><call pos:start="62:5" pos:end="62:27"><name pos:start="62:5" pos:end="62:18">skip_bits_long</name><argument_list pos:start="62:19" pos:end="62:27">(<argument pos:start="62:20" pos:end="62:22"><expr pos:start="62:20" pos:end="62:22"><operator pos:start="62:20" pos:end="62:20">&amp;</operator><name pos:start="62:21" pos:end="62:22">gb</name></expr></argument>, <argument pos:start="62:25" pos:end="62:26"><expr pos:start="62:25" pos:end="62:26"><literal type="number" pos:start="62:25" pos:end="62:26">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="62:30" pos:end="62:46">/* max bitrate */</comment>

    <expr_stmt pos:start="64:5" pos:end="64:52"><expr pos:start="64:5" pos:end="64:51"><name pos:start="64:5" pos:end="64:26"><name pos:start="64:5" pos:end="64:6">st</name><operator pos:start="64:7" pos:end="64:8">-&gt;</operator><name pos:start="64:9" pos:end="64:16">codecpar</name><operator pos:start="64:17" pos:end="64:18">-&gt;</operator><name pos:start="64:19" pos:end="64:26">bit_rate</name></name> <operator pos:start="64:28" pos:end="64:28">=</operator> <call pos:start="64:30" pos:end="64:51"><name pos:start="64:30" pos:end="64:42">get_bits_long</name><argument_list pos:start="64:43" pos:end="64:51">(<argument pos:start="64:44" pos:end="64:46"><expr pos:start="64:44" pos:end="64:46"><operator pos:start="64:44" pos:end="64:44">&amp;</operator><name pos:start="64:45" pos:end="64:46">gb</name></expr></argument>, <argument pos:start="64:49" pos:end="64:50"><expr pos:start="64:49" pos:end="64:50"><literal type="number" pos:start="64:49" pos:end="64:50">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="66:5" pos:end="66:59"><expr pos:start="66:5" pos:end="66:58"><name pos:start="66:5" pos:end="66:39"><name pos:start="66:5" pos:end="66:6">st</name><operator pos:start="66:7" pos:end="66:8">-&gt;</operator><name pos:start="66:9" pos:end="66:16">codecpar</name><operator pos:start="66:17" pos:end="66:18">-&gt;</operator><name pos:start="66:19" pos:end="66:39">bits_per_coded_sample</name></name> <operator pos:start="66:41" pos:end="66:41">=</operator> <call pos:start="66:43" pos:end="66:58"><name pos:start="66:43" pos:end="66:50">get_bits</name><argument_list pos:start="66:51" pos:end="66:58">(<argument pos:start="66:52" pos:end="66:54"><expr pos:start="66:52" pos:end="66:54"><operator pos:start="66:52" pos:end="66:52">&amp;</operator><name pos:start="66:53" pos:end="66:54">gb</name></expr></argument>, <argument pos:start="66:57" pos:end="66:57"><expr pos:start="66:57" pos:end="66:57"><literal type="number" pos:start="66:57" pos:end="66:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="68:5" pos:end="68:43"><expr pos:start="68:5" pos:end="68:42"><name pos:start="68:5" pos:end="68:23">frame_duration_code</name> <operator pos:start="68:25" pos:end="68:25">=</operator> <call pos:start="68:27" pos:end="68:42"><name pos:start="68:27" pos:end="68:34">get_bits</name><argument_list pos:start="68:35" pos:end="68:42">(<argument pos:start="68:36" pos:end="68:38"><expr pos:start="68:36" pos:end="68:38"><operator pos:start="68:36" pos:end="68:36">&amp;</operator><name pos:start="68:37" pos:end="68:38">gb</name></expr></argument>, <argument pos:start="68:41" pos:end="68:41"><expr pos:start="68:41" pos:end="68:41"><literal type="number" pos:start="68:41" pos:end="68:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="70:5" pos:end="70:23"><expr pos:start="70:5" pos:end="70:22"><call pos:start="70:5" pos:end="70:22"><name pos:start="70:5" pos:end="70:13">skip_bits</name><argument_list pos:start="70:14" pos:end="70:22">(<argument pos:start="70:15" pos:end="70:17"><expr pos:start="70:15" pos:end="70:17"><operator pos:start="70:15" pos:end="70:15">&amp;</operator><name pos:start="70:16" pos:end="70:17">gb</name></expr></argument>, <argument pos:start="70:20" pos:end="70:21"><expr pos:start="70:20" pos:end="70:21"><literal type="number" pos:start="70:20" pos:end="70:21">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="70:25" pos:end="70:44">/* various fields */</comment>

    <expr_stmt pos:start="72:5" pos:end="72:44"><expr pos:start="72:5" pos:end="72:43"><name pos:start="72:5" pos:end="72:23">channel_layout_code</name> <operator pos:start="72:25" pos:end="72:25">=</operator> <call pos:start="72:27" pos:end="72:43"><name pos:start="72:27" pos:end="72:34">get_bits</name><argument_list pos:start="72:35" pos:end="72:43">(<argument pos:start="72:36" pos:end="72:38"><expr pos:start="72:36" pos:end="72:38"><operator pos:start="72:36" pos:end="72:36">&amp;</operator><name pos:start="72:37" pos:end="72:38">gb</name></expr></argument>, <argument pos:start="72:41" pos:end="72:42"><expr pos:start="72:41" pos:end="72:42"><literal type="number" pos:start="72:41" pos:end="72:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="76:5" pos:end="84:50"><expr pos:start="76:5" pos:end="84:49"><name pos:start="76:5" pos:end="76:28"><name pos:start="76:5" pos:end="76:6">st</name><operator pos:start="76:7" pos:end="76:8">-&gt;</operator><name pos:start="76:9" pos:end="76:16">codecpar</name><operator pos:start="76:17" pos:end="76:18">-&gt;</operator><name pos:start="76:19" pos:end="76:28">frame_size</name></name> <operator pos:start="76:30" pos:end="76:30">=</operator>

            <ternary pos:start="78:13" pos:end="84:49"><condition pos:start="78:13" pos:end="78:40"><expr pos:start="78:13" pos:end="78:38"><operator pos:start="78:13" pos:end="78:13">(</operator><name pos:start="78:14" pos:end="78:32">frame_duration_code</name> <operator pos:start="78:34" pos:end="78:35">==</operator> <literal type="number" pos:start="78:37" pos:end="78:37">0</literal><operator pos:start="78:38" pos:end="78:38">)</operator></expr> ?</condition><then pos:start="78:42" pos:end="78:44"> <expr pos:start="78:42" pos:end="78:44"><literal type="number" pos:start="78:42" pos:end="78:44">512</literal></expr> </then><else pos:start="78:46" pos:end="84:49">:

            <expr pos:start="80:13" pos:end="84:49"><ternary pos:start="80:13" pos:end="84:49"><condition pos:start="80:13" pos:end="80:40"><expr pos:start="80:13" pos:end="80:38"><operator pos:start="80:13" pos:end="80:13">(</operator><name pos:start="80:14" pos:end="80:32">frame_duration_code</name> <operator pos:start="80:34" pos:end="80:35">==</operator> <literal type="number" pos:start="80:37" pos:end="80:37">1</literal><operator pos:start="80:38" pos:end="80:38">)</operator></expr> ?</condition><then pos:start="80:42" pos:end="80:45"> <expr pos:start="80:42" pos:end="80:45"><literal type="number" pos:start="80:42" pos:end="80:45">1024</literal></expr> </then><else pos:start="80:47" pos:end="84:49">:

            <expr pos:start="82:13" pos:end="84:49"><ternary pos:start="82:13" pos:end="84:49"><condition pos:start="82:13" pos:end="82:40"><expr pos:start="82:13" pos:end="82:38"><operator pos:start="82:13" pos:end="82:13">(</operator><name pos:start="82:14" pos:end="82:32">frame_duration_code</name> <operator pos:start="82:34" pos:end="82:35">==</operator> <literal type="number" pos:start="82:37" pos:end="82:37">2</literal><operator pos:start="82:38" pos:end="82:38">)</operator></expr> ?</condition><then pos:start="82:42" pos:end="82:45"> <expr pos:start="82:42" pos:end="82:45"><literal type="number" pos:start="82:42" pos:end="82:45">2048</literal></expr> </then><else pos:start="82:47" pos:end="84:49">:

            <expr pos:start="84:13" pos:end="84:49"><ternary pos:start="84:13" pos:end="84:49"><condition pos:start="84:13" pos:end="84:40"><expr pos:start="84:13" pos:end="84:38"><operator pos:start="84:13" pos:end="84:13">(</operator><name pos:start="84:14" pos:end="84:32">frame_duration_code</name> <operator pos:start="84:34" pos:end="84:35">==</operator> <literal type="number" pos:start="84:37" pos:end="84:37">3</literal><operator pos:start="84:38" pos:end="84:38">)</operator></expr> ?</condition><then pos:start="84:42" pos:end="84:45"> <expr pos:start="84:42" pos:end="84:45"><literal type="number" pos:start="84:42" pos:end="84:45">4096</literal></expr> </then><else pos:start="84:47" pos:end="84:49">: <expr pos:start="84:49" pos:end="84:49"><literal type="number" pos:start="84:49" pos:end="84:49">0</literal></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="88:5" pos:end="92:5"><if pos:start="88:5" pos:end="92:5">if <condition pos:start="88:8" pos:end="88:35">(<expr pos:start="88:9" pos:end="88:34"><name pos:start="88:9" pos:end="88:27">channel_layout_code</name> <operator pos:start="88:29" pos:end="88:29">&gt;</operator> <literal type="number" pos:start="88:31" pos:end="88:34">0xff</literal></expr>)</condition> <block pos:start="88:37" pos:end="92:5">{<block_content pos:start="90:9" pos:end="90:78">

        <expr_stmt pos:start="90:9" pos:end="90:78"><expr pos:start="90:9" pos:end="90:77"><call pos:start="90:9" pos:end="90:77"><name pos:start="90:9" pos:end="90:14">av_log</name><argument_list pos:start="90:15" pos:end="90:77">(<argument pos:start="90:16" pos:end="90:20"><expr pos:start="90:16" pos:end="90:20"><name pos:start="90:16" pos:end="90:20"><name pos:start="90:16" pos:end="90:16">c</name><operator pos:start="90:17" pos:end="90:18">-&gt;</operator><name pos:start="90:19" pos:end="90:20">fc</name></name></expr></argument>, <argument pos:start="90:23" pos:end="90:36"><expr pos:start="90:23" pos:end="90:36"><name pos:start="90:23" pos:end="90:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="90:39" pos:end="90:76"><expr pos:start="90:39" pos:end="90:76"><literal type="string" pos:start="90:39" pos:end="90:76">"Unsupported DTS audio channel layout"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="94:5" pos:end="106:68"><expr pos:start="94:5" pos:end="106:67"><name pos:start="94:5" pos:end="94:32"><name pos:start="94:5" pos:end="94:6">st</name><operator pos:start="94:7" pos:end="94:8">-&gt;</operator><name pos:start="94:9" pos:end="94:16">codecpar</name><operator pos:start="94:17" pos:end="94:18">-&gt;</operator><name pos:start="94:19" pos:end="94:32">channel_layout</name></name> <operator pos:start="94:34" pos:end="94:34">=</operator>

            <operator pos:start="96:13" pos:end="96:13">(</operator><ternary pos:start="96:14" pos:end="96:65"><condition pos:start="96:14" pos:end="96:42"><expr pos:start="96:14" pos:end="96:40"><operator pos:start="96:14" pos:end="96:14">(</operator><name pos:start="96:15" pos:end="96:33">channel_layout_code</name> <operator pos:start="96:35" pos:end="96:35">&amp;</operator> <literal type="number" pos:start="96:37" pos:end="96:39">0x1</literal><operator pos:start="96:40" pos:end="96:40">)</operator></expr> ?</condition><then pos:start="96:44" pos:end="96:61"> <expr pos:start="96:44" pos:end="96:61"><name pos:start="96:44" pos:end="96:61">AV_CH_FRONT_CENTER</name></expr> </then><else pos:start="96:63" pos:end="96:65">: <expr pos:start="96:65" pos:end="96:65"><literal type="number" pos:start="96:65" pos:end="96:65">0</literal></expr></else></ternary><operator pos:start="96:66" pos:end="96:66">)</operator> <operator pos:start="96:68" pos:end="96:68">|</operator>

            <operator pos:start="98:13" pos:end="98:13">(</operator><ternary pos:start="98:14" pos:end="98:63"><condition pos:start="98:14" pos:end="98:42"><expr pos:start="98:14" pos:end="98:40"><operator pos:start="98:14" pos:end="98:14">(</operator><name pos:start="98:15" pos:end="98:33">channel_layout_code</name> <operator pos:start="98:35" pos:end="98:35">&amp;</operator> <literal type="number" pos:start="98:37" pos:end="98:39">0x2</literal><operator pos:start="98:40" pos:end="98:40">)</operator></expr> ?</condition><then pos:start="98:44" pos:end="98:59"> <expr pos:start="98:44" pos:end="98:59"><name pos:start="98:44" pos:end="98:59">AV_CH_FRONT_LEFT</name></expr> </then><else pos:start="98:61" pos:end="98:63">: <expr pos:start="98:63" pos:end="98:63"><literal type="number" pos:start="98:63" pos:end="98:63">0</literal></expr></else></ternary><operator pos:start="98:64" pos:end="98:64">)</operator> <operator pos:start="98:66" pos:end="98:66">|</operator>

            <operator pos:start="100:13" pos:end="100:13">(</operator><ternary pos:start="100:14" pos:end="100:64"><condition pos:start="100:14" pos:end="100:42"><expr pos:start="100:14" pos:end="100:40"><operator pos:start="100:14" pos:end="100:14">(</operator><name pos:start="100:15" pos:end="100:33">channel_layout_code</name> <operator pos:start="100:35" pos:end="100:35">&amp;</operator> <literal type="number" pos:start="100:37" pos:end="100:39">0x2</literal><operator pos:start="100:40" pos:end="100:40">)</operator></expr> ?</condition><then pos:start="100:44" pos:end="100:60"> <expr pos:start="100:44" pos:end="100:60"><name pos:start="100:44" pos:end="100:60">AV_CH_FRONT_RIGHT</name></expr> </then><else pos:start="100:62" pos:end="100:64">: <expr pos:start="100:64" pos:end="100:64"><literal type="number" pos:start="100:64" pos:end="100:64">0</literal></expr></else></ternary><operator pos:start="100:65" pos:end="100:65">)</operator> <operator pos:start="100:67" pos:end="100:67">|</operator>

            <operator pos:start="102:13" pos:end="102:13">(</operator><ternary pos:start="102:14" pos:end="102:62"><condition pos:start="102:14" pos:end="102:42"><expr pos:start="102:14" pos:end="102:40"><operator pos:start="102:14" pos:end="102:14">(</operator><name pos:start="102:15" pos:end="102:33">channel_layout_code</name> <operator pos:start="102:35" pos:end="102:35">&amp;</operator> <literal type="number" pos:start="102:37" pos:end="102:39">0x4</literal><operator pos:start="102:40" pos:end="102:40">)</operator></expr> ?</condition><then pos:start="102:44" pos:end="102:58"> <expr pos:start="102:44" pos:end="102:58"><name pos:start="102:44" pos:end="102:58">AV_CH_SIDE_LEFT</name></expr> </then><else pos:start="102:60" pos:end="102:62">: <expr pos:start="102:62" pos:end="102:62"><literal type="number" pos:start="102:62" pos:end="102:62">0</literal></expr></else></ternary><operator pos:start="102:63" pos:end="102:63">)</operator> <operator pos:start="102:65" pos:end="102:65">|</operator>

            <operator pos:start="104:13" pos:end="104:13">(</operator><ternary pos:start="104:14" pos:end="104:63"><condition pos:start="104:14" pos:end="104:42"><expr pos:start="104:14" pos:end="104:40"><operator pos:start="104:14" pos:end="104:14">(</operator><name pos:start="104:15" pos:end="104:33">channel_layout_code</name> <operator pos:start="104:35" pos:end="104:35">&amp;</operator> <literal type="number" pos:start="104:37" pos:end="104:39">0x4</literal><operator pos:start="104:40" pos:end="104:40">)</operator></expr> ?</condition><then pos:start="104:44" pos:end="104:59"> <expr pos:start="104:44" pos:end="104:59"><name pos:start="104:44" pos:end="104:59">AV_CH_SIDE_RIGHT</name></expr> </then><else pos:start="104:61" pos:end="104:63">: <expr pos:start="104:63" pos:end="104:63"><literal type="number" pos:start="104:63" pos:end="104:63">0</literal></expr></else></ternary><operator pos:start="104:64" pos:end="104:64">)</operator> <operator pos:start="104:66" pos:end="104:66">|</operator>

            <operator pos:start="106:13" pos:end="106:13">(</operator><ternary pos:start="106:14" pos:end="106:66"><condition pos:start="106:14" pos:end="106:42"><expr pos:start="106:14" pos:end="106:40"><operator pos:start="106:14" pos:end="106:14">(</operator><name pos:start="106:15" pos:end="106:33">channel_layout_code</name> <operator pos:start="106:35" pos:end="106:35">&amp;</operator> <literal type="number" pos:start="106:37" pos:end="106:39">0x8</literal><operator pos:start="106:40" pos:end="106:40">)</operator></expr> ?</condition><then pos:start="106:44" pos:end="106:62"> <expr pos:start="106:44" pos:end="106:62"><name pos:start="106:44" pos:end="106:62">AV_CH_LOW_FREQUENCY</name></expr> </then><else pos:start="106:64" pos:end="106:66">: <expr pos:start="106:66" pos:end="106:66"><literal type="number" pos:start="106:66" pos:end="106:66">0</literal></expr></else></ternary><operator pos:start="106:67" pos:end="106:67">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="110:5" pos:end="110:93"><expr pos:start="110:5" pos:end="110:92"><name pos:start="110:5" pos:end="110:26"><name pos:start="110:5" pos:end="110:6">st</name><operator pos:start="110:7" pos:end="110:8">-&gt;</operator><name pos:start="110:9" pos:end="110:16">codecpar</name><operator pos:start="110:17" pos:end="110:18">-&gt;</operator><name pos:start="110:19" pos:end="110:26">channels</name></name> <operator pos:start="110:28" pos:end="110:28">=</operator> <call pos:start="110:30" pos:end="110:92"><name pos:start="110:30" pos:end="110:62">av_get_channel_layout_nb_channels</name><argument_list pos:start="110:63" pos:end="110:92">(<argument pos:start="110:64" pos:end="110:91"><expr pos:start="110:64" pos:end="110:91"><name pos:start="110:64" pos:end="110:91"><name pos:start="110:64" pos:end="110:65">st</name><operator pos:start="110:66" pos:end="110:67">-&gt;</operator><name pos:start="110:68" pos:end="110:75">codecpar</name><operator pos:start="110:76" pos:end="110:77">-&gt;</operator><name pos:start="110:78" pos:end="110:91">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <return pos:start="115:5" pos:end="115:13">return <expr pos:start="115:12" pos:end="115:12"><literal type="number" pos:start="115:12" pos:end="115:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
