<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3830.c" pos:tabs="8"><function pos:start="1:1" pos:end="297:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">process_input_packet</name><parameter_list pos:start="1:32" pos:end="1:82">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:43">InputStream</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ist</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:69"><decl pos:start="1:51" pos:end="1:69"><type pos:start="1:51" pos:end="1:69"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:64">AVPacket</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">pkt</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:81"><decl pos:start="1:72" pos:end="1:81"><type pos:start="1:72" pos:end="1:81"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:81">no_eof</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="297:1">{<block_content pos:start="5:5" pos:end="295:22">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">got_output</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">AVPacket</name></type> <name pos:start="11:14" pos:end="11:18">avpkt</name></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="29:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:26"><name pos:start="13:10" pos:end="13:12">ist</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:26">saw_first_ts</name></name></expr>)</condition> <block pos:start="13:29" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:30">

        <expr_stmt pos:start="15:9" pos:end="15:131"><expr pos:start="15:9" pos:end="15:130"><name pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">ist</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:16">dts</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <ternary pos:start="15:20" pos:end="15:130"><condition pos:start="15:20" pos:end="15:48"><expr pos:start="15:20" pos:end="15:46"><name pos:start="15:20" pos:end="15:46"><name pos:start="15:20" pos:end="15:22">ist</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:26">st</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:42">avg_frame_rate</name><operator pos:start="15:43" pos:end="15:43">.</operator><name pos:start="15:44" pos:end="15:46">num</name></name></expr> ?</condition><then pos:start="15:50" pos:end="15:126"> <expr pos:start="15:50" pos:end="15:126"><operator pos:start="15:50" pos:end="15:50">-</operator> <name pos:start="15:52" pos:end="15:77"><name pos:start="15:52" pos:end="15:54">ist</name><operator pos:start="15:55" pos:end="15:56">-&gt;</operator><name pos:start="15:57" pos:end="15:63">dec_ctx</name><operator pos:start="15:64" pos:end="15:65">-&gt;</operator><name pos:start="15:66" pos:end="15:77">has_b_frames</name></name> <operator pos:start="15:79" pos:end="15:79">*</operator> <name pos:start="15:81" pos:end="15:92">AV_TIME_BASE</name> <operator pos:start="15:94" pos:end="15:94">/</operator> <call pos:start="15:96" pos:end="15:126"><name pos:start="15:96" pos:end="15:101">av_q2d</name><argument_list pos:start="15:102" pos:end="15:126">(<argument pos:start="15:103" pos:end="15:125"><expr pos:start="15:103" pos:end="15:125"><name pos:start="15:103" pos:end="15:125"><name pos:start="15:103" pos:end="15:105">ist</name><operator pos:start="15:106" pos:end="15:107">-&gt;</operator><name pos:start="15:108" pos:end="15:109">st</name><operator pos:start="15:110" pos:end="15:111">-&gt;</operator><name pos:start="15:112" pos:end="15:125">avg_frame_rate</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="15:128" pos:end="15:130">: <expr pos:start="15:130" pos:end="15:130"><literal type="number" pos:start="15:130" pos:end="15:130">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:21"><expr pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:11">ist</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">pts</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <literal type="number" pos:start="17:20" pos:end="17:20">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:71">(<expr pos:start="19:13" pos:end="19:70"><name pos:start="19:13" pos:end="19:15">pkt</name> <operator pos:start="19:17" pos:end="19:18">&amp;&amp;</operator> <name pos:start="19:20" pos:end="19:27"><name pos:start="19:20" pos:end="19:22">pkt</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:27">pts</name></name> <operator pos:start="19:29" pos:end="19:30">!=</operator> <name pos:start="19:32" pos:end="19:45">AV_NOPTS_VALUE</name> <operator pos:start="19:47" pos:end="19:48">&amp;&amp;</operator> <operator pos:start="19:50" pos:end="19:50">!</operator><name pos:start="19:51" pos:end="19:70"><name pos:start="19:51" pos:end="19:53">ist</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:70">decoding_needed</name></name></expr>)</condition> <block pos:start="19:73" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:32">

            <expr_stmt pos:start="21:13" pos:end="21:83"><expr pos:start="21:13" pos:end="21:82"><name pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:15">ist</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:20">dts</name></name> <operator pos:start="21:22" pos:end="21:23">+=</operator> <call pos:start="21:25" pos:end="21:82"><name pos:start="21:25" pos:end="21:36">av_rescale_q</name><argument_list pos:start="21:37" pos:end="21:82">(<argument pos:start="21:38" pos:end="21:45"><expr pos:start="21:38" pos:end="21:45"><name pos:start="21:38" pos:end="21:45"><name pos:start="21:38" pos:end="21:40">pkt</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:45">pts</name></name></expr></argument>, <argument pos:start="21:48" pos:end="21:65"><expr pos:start="21:48" pos:end="21:65"><name pos:start="21:48" pos:end="21:65"><name pos:start="21:48" pos:end="21:50">ist</name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:54">st</name><operator pos:start="21:55" pos:end="21:56">-&gt;</operator><name pos:start="21:57" pos:end="21:65">time_base</name></name></expr></argument>, <argument pos:start="21:68" pos:end="21:81"><expr pos:start="21:68" pos:end="21:81"><name pos:start="21:68" pos:end="21:81">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:32"><expr pos:start="23:13" pos:end="23:31"><name pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:15">ist</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:20">pts</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:31"><name pos:start="23:24" pos:end="23:26">ist</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:31">dts</name></name></expr>;</expr_stmt> <comment type="line" pos:start="23:34" pos:end="23:97">//unused but better to set it to a value thats not totally wrong</comment>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:11">ist</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:25">saw_first_ts</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="35:33"><if pos:start="33:5" pos:end="35:33">if <condition pos:start="33:8" pos:end="33:40">(<expr pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:11">ist</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:21">next_dts</name></name> <operator pos:start="33:23" pos:end="33:24">==</operator> <name pos:start="33:26" pos:end="33:39">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:33"><block_content pos:start="35:9" pos:end="35:33">

        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:11">ist</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:21">next_dts</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <name pos:start="35:25" pos:end="35:32"><name pos:start="35:25" pos:end="35:27">ist</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:32">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:33"><if pos:start="37:5" pos:end="39:33">if <condition pos:start="37:8" pos:end="37:40">(<expr pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:11">ist</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:21">next_pts</name></name> <operator pos:start="37:23" pos:end="37:24">==</operator> <name pos:start="37:26" pos:end="37:39">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:33"><block_content pos:start="39:9" pos:end="39:33">

        <expr_stmt pos:start="39:9" pos:end="39:33"><expr pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:11">ist</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:21">next_pts</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <name pos:start="39:25" pos:end="39:32"><name pos:start="39:25" pos:end="39:27">ist</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:32">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="59:5"><if pos:start="43:5" pos:end="55:5">if <condition pos:start="43:8" pos:end="43:13">(<expr pos:start="43:9" pos:end="43:12"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:12">pkt</name></expr>)</condition> <block pos:start="43:15" pos:end="55:5">{<block_content pos:start="47:9" pos:end="53:24">

        <comment type="block" pos:start="45:9" pos:end="45:26">/* EOF handling */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><call pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:22">av_init_packet</name><argument_list pos:start="47:23" pos:end="47:30">(<argument pos:start="47:24" pos:end="47:29"><expr pos:start="47:24" pos:end="47:29"><operator pos:start="47:24" pos:end="47:24">&amp;</operator><name pos:start="47:25" pos:end="47:29">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:13">avpkt</name><operator pos:start="49:14" pos:end="49:14">.</operator><name pos:start="49:15" pos:end="49:18">data</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:25">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:23"><expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:13">avpkt</name><operator pos:start="51:14" pos:end="51:14">.</operator><name pos:start="51:15" pos:end="51:18">size</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:24">goto <name pos:start="53:14" pos:end="53:23">handle_eof</name>;</goto>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:21">

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:13">avpkt</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <operator pos:start="57:17" pos:end="57:17">*</operator><name pos:start="57:18" pos:end="57:20">pkt</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="63:35">(<expr pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:11">pkt</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:16">dts</name></name> <operator pos:start="63:18" pos:end="63:19">!=</operator> <name pos:start="63:21" pos:end="63:34">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="63:37" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:48">

        <expr_stmt pos:start="65:9" pos:end="65:94"><expr pos:start="65:9" pos:end="65:93"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:11">ist</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:21">next_dts</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:32"><name pos:start="65:25" pos:end="65:27">ist</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:32">dts</name></name> <operator pos:start="65:34" pos:end="65:34">=</operator> <call pos:start="65:36" pos:end="65:93"><name pos:start="65:36" pos:end="65:47">av_rescale_q</name><argument_list pos:start="65:48" pos:end="65:93">(<argument pos:start="65:49" pos:end="65:56"><expr pos:start="65:49" pos:end="65:56"><name pos:start="65:49" pos:end="65:56"><name pos:start="65:49" pos:end="65:51">pkt</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:56">dts</name></name></expr></argument>, <argument pos:start="65:59" pos:end="65:76"><expr pos:start="65:59" pos:end="65:76"><name pos:start="65:59" pos:end="65:76"><name pos:start="65:59" pos:end="65:61">ist</name><operator pos:start="65:62" pos:end="65:63">-&gt;</operator><name pos:start="65:64" pos:end="65:65">st</name><operator pos:start="65:66" pos:end="65:67">-&gt;</operator><name pos:start="65:68" pos:end="65:76">time_base</name></name></expr></argument>, <argument pos:start="65:79" pos:end="65:92"><expr pos:start="65:79" pos:end="65:92"><name pos:start="65:79" pos:end="65:92">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:48"><if pos:start="67:9" pos:end="69:48">if <condition pos:start="67:12" pos:end="67:84">(<expr pos:start="67:13" pos:end="67:83"><name pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:15">ist</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:24">dec_ctx</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:36">codec_type</name></name> <operator pos:start="67:38" pos:end="67:39">!=</operator> <name pos:start="67:41" pos:end="67:58">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="67:60" pos:end="67:61">||</operator> <operator pos:start="67:63" pos:end="67:63">!</operator><name pos:start="67:64" pos:end="67:83"><name pos:start="67:64" pos:end="67:66">ist</name><operator pos:start="67:67" pos:end="67:68">-&gt;</operator><name pos:start="67:69" pos:end="67:83">decoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:48"><block_content pos:start="69:13" pos:end="69:48">

            <expr_stmt pos:start="69:13" pos:end="69:48"><expr pos:start="69:13" pos:end="69:47"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:15">ist</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:25">next_pts</name></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:36"><name pos:start="69:29" pos:end="69:31">ist</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:36">pts</name></name> <operator pos:start="69:38" pos:end="69:38">=</operator> <name pos:start="69:40" pos:end="69:47"><name pos:start="69:40" pos:end="69:42">ist</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:47">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="75:5" pos:end="75:84">// while we have more to decode or while the decoder did output something on EOF</comment>

    <while pos:start="77:5" pos:end="199:5">while <condition pos:start="77:11" pos:end="77:76">(<expr pos:start="77:12" pos:end="77:75"><name pos:start="77:12" pos:end="77:31"><name pos:start="77:12" pos:end="77:14">ist</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:31">decoding_needed</name></name> <operator pos:start="77:33" pos:end="77:34">&amp;&amp;</operator> <operator pos:start="77:36" pos:end="77:36">(</operator><name pos:start="77:37" pos:end="77:46"><name pos:start="77:37" pos:end="77:41">avpkt</name><operator pos:start="77:42" pos:end="77:42">.</operator><name pos:start="77:43" pos:end="77:46">size</name></name> <operator pos:start="77:48" pos:end="77:48">&gt;</operator> <literal type="number" pos:start="77:50" pos:end="77:50">0</literal> <operator pos:start="77:52" pos:end="77:53">||</operator> <operator pos:start="77:55" pos:end="77:55">(</operator><operator pos:start="77:56" pos:end="77:56">!</operator><name pos:start="77:57" pos:end="77:59">pkt</name> <operator pos:start="77:61" pos:end="77:62">&amp;&amp;</operator> <name pos:start="77:64" pos:end="77:73">got_output</name><operator pos:start="77:74" pos:end="77:74">)</operator><operator pos:start="77:75" pos:end="77:75">)</operator></expr>)</condition> <block pos:start="77:78" pos:end="199:5">{<block_content pos:start="79:9" pos:end="197:18">

        <decl_stmt pos:start="79:9" pos:end="79:21"><decl pos:start="79:9" pos:end="79:20"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:20">duration</name></decl>;</decl_stmt>

    <label pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:14">handle_eof</name>:</label>



        <expr_stmt pos:start="85:9" pos:end="85:33"><expr pos:start="85:9" pos:end="85:32"><name pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:11">ist</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:16">pts</name></name> <operator pos:start="85:18" pos:end="85:18">=</operator> <name pos:start="85:20" pos:end="85:32"><name pos:start="85:20" pos:end="85:22">ist</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:32">next_pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:33"><expr pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:11">ist</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:16">dts</name></name> <operator pos:start="87:18" pos:end="87:18">=</operator> <name pos:start="87:20" pos:end="87:32"><name pos:start="87:20" pos:end="87:22">ist</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:32">next_dts</name></name></expr>;</expr_stmt>



        <switch pos:start="91:9" pos:end="149:9">switch <condition pos:start="91:16" pos:end="91:41">(<expr pos:start="91:17" pos:end="91:40"><name pos:start="91:17" pos:end="91:40"><name pos:start="91:17" pos:end="91:19">ist</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:28">dec_ctx</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:40">codec_type</name></name></expr>)</condition> <block pos:start="91:43" pos:end="149:9">{<block_content pos:start="93:9" pos:end="147:22">

        <case pos:start="93:9" pos:end="93:32">case <expr pos:start="93:14" pos:end="93:31"><name pos:start="93:14" pos:end="93:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:61"><expr pos:start="95:13" pos:end="95:60"><name pos:start="95:13" pos:end="95:15">ret</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:60"><name pos:start="95:19" pos:end="95:30">decode_audio</name>    <argument_list pos:start="95:35" pos:end="95:60">(<argument pos:start="95:36" pos:end="95:38"><expr pos:start="95:36" pos:end="95:38"><name pos:start="95:36" pos:end="95:38">ist</name></expr></argument>, <argument pos:start="95:41" pos:end="95:46"><expr pos:start="95:41" pos:end="95:46"><operator pos:start="95:41" pos:end="95:41">&amp;</operator><name pos:start="95:42" pos:end="95:46">avpkt</name></expr></argument>, <argument pos:start="95:49" pos:end="95:59"><expr pos:start="95:49" pos:end="95:59"><operator pos:start="95:49" pos:end="95:49">&amp;</operator><name pos:start="95:50" pos:end="95:59">got_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

        <case pos:start="99:9" pos:end="99:32">case <expr pos:start="99:14" pos:end="99:31"><name pos:start="99:14" pos:end="99:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:61"><expr pos:start="101:13" pos:end="101:60"><name pos:start="101:13" pos:end="101:15">ret</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:60"><name pos:start="101:19" pos:end="101:30">decode_video</name>    <argument_list pos:start="101:35" pos:end="101:60">(<argument pos:start="101:36" pos:end="101:38"><expr pos:start="101:36" pos:end="101:38"><name pos:start="101:36" pos:end="101:38">ist</name></expr></argument>, <argument pos:start="101:41" pos:end="101:46"><expr pos:start="101:41" pos:end="101:46"><operator pos:start="101:41" pos:end="101:41">&amp;</operator><name pos:start="101:42" pos:end="101:46">avpkt</name></expr></argument>, <argument pos:start="101:49" pos:end="101:59"><expr pos:start="101:49" pos:end="101:59"><operator pos:start="101:49" pos:end="101:49">&amp;</operator><name pos:start="101:50" pos:end="101:59">got_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="119:29"><if pos:start="103:13" pos:end="107:13">if <condition pos:start="103:16" pos:end="103:31">(<expr pos:start="103:17" pos:end="103:30"><name pos:start="103:17" pos:end="103:30"><name pos:start="103:17" pos:end="103:21">avpkt</name><operator pos:start="103:22" pos:end="103:22">.</operator><name pos:start="103:23" pos:end="103:30">duration</name></name></expr>)</condition> <block pos:start="103:33" pos:end="107:13">{<block_content pos:start="105:17" pos:end="105:92">

                <expr_stmt pos:start="105:17" pos:end="105:92"><expr pos:start="105:17" pos:end="105:91"><name pos:start="105:17" pos:end="105:24">duration</name> <operator pos:start="105:26" pos:end="105:26">=</operator> <call pos:start="105:28" pos:end="105:91"><name pos:start="105:28" pos:end="105:39">av_rescale_q</name><argument_list pos:start="105:40" pos:end="105:91">(<argument pos:start="105:41" pos:end="105:54"><expr pos:start="105:41" pos:end="105:54"><name pos:start="105:41" pos:end="105:54"><name pos:start="105:41" pos:end="105:45">avpkt</name><operator pos:start="105:46" pos:end="105:46">.</operator><name pos:start="105:47" pos:end="105:54">duration</name></name></expr></argument>, <argument pos:start="105:57" pos:end="105:74"><expr pos:start="105:57" pos:end="105:74"><name pos:start="105:57" pos:end="105:74"><name pos:start="105:57" pos:end="105:59">ist</name><operator pos:start="105:60" pos:end="105:61">-&gt;</operator><name pos:start="105:62" pos:end="105:63">st</name><operator pos:start="105:64" pos:end="105:65">-&gt;</operator><name pos:start="105:66" pos:end="105:74">time_base</name></name></expr></argument>, <argument pos:start="105:77" pos:end="105:90"><expr pos:start="105:77" pos:end="105:90"><name pos:start="105:77" pos:end="105:90">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="107:15" pos:end="117:13">else if<condition pos:start="107:22" pos:end="107:91">(<expr pos:start="107:23" pos:end="107:90"><name pos:start="107:23" pos:end="107:49"><name pos:start="107:23" pos:end="107:25">ist</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:34">dec_ctx</name><operator pos:start="107:35" pos:end="107:36">-&gt;</operator><name pos:start="107:37" pos:end="107:45">framerate</name><operator pos:start="107:46" pos:end="107:46">.</operator><name pos:start="107:47" pos:end="107:49">num</name></name> <operator pos:start="107:51" pos:end="107:52">!=</operator> <literal type="number" pos:start="107:54" pos:end="107:54">0</literal> <operator pos:start="107:56" pos:end="107:57">&amp;&amp;</operator> <name pos:start="107:59" pos:end="107:85"><name pos:start="107:59" pos:end="107:61">ist</name><operator pos:start="107:62" pos:end="107:63">-&gt;</operator><name pos:start="107:64" pos:end="107:70">dec_ctx</name><operator pos:start="107:71" pos:end="107:72">-&gt;</operator><name pos:start="107:73" pos:end="107:81">framerate</name><operator pos:start="107:82" pos:end="107:82">.</operator><name pos:start="107:83" pos:end="107:85">den</name></name> <operator pos:start="107:87" pos:end="107:88">!=</operator> <literal type="number" pos:start="107:90" pos:end="107:90">0</literal></expr>)</condition> <block pos:start="107:93" pos:end="117:13">{<block_content pos:start="109:17" pos:end="115:92">

                <decl_stmt pos:start="109:17" pos:end="109:136"><decl pos:start="109:17" pos:end="109:135"><type pos:start="109:17" pos:end="109:19"><name pos:start="109:17" pos:end="109:19">int</name></type> <name pos:start="109:21" pos:end="109:25">ticks</name><init pos:start="109:26" pos:end="109:135">= <expr pos:start="109:28" pos:end="109:135"><ternary pos:start="109:28" pos:end="109:135"><condition pos:start="109:28" pos:end="109:58"><expr pos:start="109:28" pos:end="109:56"><call pos:start="109:28" pos:end="109:56"><name pos:start="109:28" pos:end="109:47">av_stream_get_parser</name><argument_list pos:start="109:48" pos:end="109:56">(<argument pos:start="109:49" pos:end="109:55"><expr pos:start="109:49" pos:end="109:55"><name pos:start="109:49" pos:end="109:55"><name pos:start="109:49" pos:end="109:51">ist</name><operator pos:start="109:52" pos:end="109:53">-&gt;</operator><name pos:start="109:54" pos:end="109:55">st</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="109:60" pos:end="109:103"> <expr pos:start="109:60" pos:end="109:103"><call pos:start="109:60" pos:end="109:88"><name pos:start="109:60" pos:end="109:79">av_stream_get_parser</name><argument_list pos:start="109:80" pos:end="109:88">(<argument pos:start="109:81" pos:end="109:87"><expr pos:start="109:81" pos:end="109:87"><name pos:start="109:81" pos:end="109:87"><name pos:start="109:81" pos:end="109:83">ist</name><operator pos:start="109:84" pos:end="109:85">-&gt;</operator><name pos:start="109:86" pos:end="109:87">st</name></name></expr></argument>)</argument_list></call><operator pos:start="109:89" pos:end="109:90">-&gt;</operator><name pos:start="109:91" pos:end="109:101">repeat_pict</name><operator pos:start="109:102" pos:end="109:102">+</operator><literal type="number" pos:start="109:103" pos:end="109:103">1</literal></expr> </then><else pos:start="109:105" pos:end="109:135">: <expr pos:start="109:107" pos:end="109:135"><name pos:start="109:107" pos:end="109:135"><name pos:start="109:107" pos:end="109:109">ist</name><operator pos:start="109:110" pos:end="109:111">-&gt;</operator><name pos:start="109:112" pos:end="109:118">dec_ctx</name><operator pos:start="109:119" pos:end="109:120">-&gt;</operator><name pos:start="109:121" pos:end="109:135">ticks_per_frame</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="111:17" pos:end="115:92"><expr pos:start="111:17" pos:end="115:91"><name pos:start="111:17" pos:end="111:24">duration</name> <operator pos:start="111:26" pos:end="111:26">=</operator> <operator pos:start="111:28" pos:end="111:28">(</operator><operator pos:start="111:29" pos:end="111:29">(</operator><name pos:start="111:30" pos:end="111:36">int64_t</name><operator pos:start="111:37" pos:end="111:37">)</operator><name pos:start="111:38" pos:end="111:49">AV_TIME_BASE</name> <operator pos:start="111:51" pos:end="111:51">*</operator>

                                <name pos:start="113:33" pos:end="113:59"><name pos:start="113:33" pos:end="113:35">ist</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:44">dec_ctx</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:55">framerate</name><operator pos:start="113:56" pos:end="113:56">.</operator><name pos:start="113:57" pos:end="113:59">den</name></name> <operator pos:start="113:61" pos:end="113:61">*</operator> <name pos:start="113:63" pos:end="113:67">ticks</name><operator pos:start="113:68" pos:end="113:68">)</operator> <operator pos:start="113:70" pos:end="113:70">/</operator>

                                <name pos:start="115:33" pos:end="115:59"><name pos:start="115:33" pos:end="115:35">ist</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:44">dec_ctx</name><operator pos:start="115:45" pos:end="115:46">-&gt;</operator><name pos:start="115:47" pos:end="115:55">framerate</name><operator pos:start="115:56" pos:end="115:56">.</operator><name pos:start="115:57" pos:end="115:59">num</name></name> <operator pos:start="115:61" pos:end="115:61">/</operator> <name pos:start="115:63" pos:end="115:91"><name pos:start="115:63" pos:end="115:65">ist</name><operator pos:start="115:66" pos:end="115:67">-&gt;</operator><name pos:start="115:68" pos:end="115:74">dec_ctx</name><operator pos:start="115:75" pos:end="115:76">-&gt;</operator><name pos:start="115:77" pos:end="115:91">ticks_per_frame</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="117:15" pos:end="119:29">else<block type="pseudo" pos:start="119:17" pos:end="119:29"><block_content pos:start="119:17" pos:end="119:29">

                <expr_stmt pos:start="119:17" pos:end="119:29"><expr pos:start="119:17" pos:end="119:28"><name pos:start="119:17" pos:end="119:24">duration</name> <operator pos:start="119:26" pos:end="119:26">=</operator> <literal type="number" pos:start="119:28" pos:end="119:28">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="123:13" pos:end="129:47"><if pos:start="123:13" pos:end="127:13">if<condition pos:start="123:15" pos:end="123:54">(<expr pos:start="123:16" pos:end="123:53"><name pos:start="123:16" pos:end="123:23"><name pos:start="123:16" pos:end="123:18">ist</name><operator pos:start="123:19" pos:end="123:20">-&gt;</operator><name pos:start="123:21" pos:end="123:23">dts</name></name> <operator pos:start="123:25" pos:end="123:26">!=</operator> <name pos:start="123:28" pos:end="123:41">AV_NOPTS_VALUE</name> <operator pos:start="123:43" pos:end="123:44">&amp;&amp;</operator> <name pos:start="123:46" pos:end="123:53">duration</name></expr>)</condition> <block pos:start="123:56" pos:end="127:13">{<block_content pos:start="125:17" pos:end="125:42">

                <expr_stmt pos:start="125:17" pos:end="125:42"><expr pos:start="125:17" pos:end="125:41"><name pos:start="125:17" pos:end="125:29"><name pos:start="125:17" pos:end="125:19">ist</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:29">next_dts</name></name> <operator pos:start="125:31" pos:end="125:32">+=</operator> <name pos:start="125:34" pos:end="125:41">duration</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="127:14" pos:end="129:47">else<block type="pseudo" pos:start="129:17" pos:end="129:47"><block_content pos:start="129:17" pos:end="129:47">

                <expr_stmt pos:start="129:17" pos:end="129:47"><expr pos:start="129:17" pos:end="129:46"><name pos:start="129:17" pos:end="129:29"><name pos:start="129:17" pos:end="129:19">ist</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:29">next_dts</name></name> <operator pos:start="129:31" pos:end="129:31">=</operator> <name pos:start="129:33" pos:end="129:46">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="133:13" pos:end="135:42"><if pos:start="133:13" pos:end="135:42">if <condition pos:start="133:16" pos:end="133:27">(<expr pos:start="133:17" pos:end="133:26"><name pos:start="133:17" pos:end="133:26">got_output</name></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:42"><block_content pos:start="135:17" pos:end="135:42">

                <expr_stmt pos:start="135:17" pos:end="135:42"><expr pos:start="135:17" pos:end="135:41"><name pos:start="135:17" pos:end="135:29"><name pos:start="135:17" pos:end="135:19">ist</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:29">next_pts</name></name> <operator pos:start="135:31" pos:end="135:32">+=</operator> <name pos:start="135:34" pos:end="135:41">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="135:44" pos:end="135:92">//FIXME the duration is not correct in some cases</comment>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        <case pos:start="139:9" pos:end="139:35">case <expr pos:start="139:14" pos:end="139:34"><name pos:start="139:14" pos:end="139:34">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

            <expr_stmt pos:start="141:13" pos:end="141:64"><expr pos:start="141:13" pos:end="141:63"><name pos:start="141:13" pos:end="141:15">ret</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <call pos:start="141:19" pos:end="141:63"><name pos:start="141:19" pos:end="141:37">transcode_subtitles</name><argument_list pos:start="141:38" pos:end="141:63">(<argument pos:start="141:39" pos:end="141:41"><expr pos:start="141:39" pos:end="141:41"><name pos:start="141:39" pos:end="141:41">ist</name></expr></argument>, <argument pos:start="141:44" pos:end="141:49"><expr pos:start="141:44" pos:end="141:49"><operator pos:start="141:44" pos:end="141:44">&amp;</operator><name pos:start="141:45" pos:end="141:49">avpkt</name></expr></argument>, <argument pos:start="141:52" pos:end="141:62"><expr pos:start="141:52" pos:end="141:62"><operator pos:start="141:52" pos:end="141:52">&amp;</operator><name pos:start="141:53" pos:end="141:62">got_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <default pos:start="145:9" pos:end="145:16">default:</default>

            <return pos:start="147:13" pos:end="147:22">return <expr pos:start="147:20" pos:end="147:21"><operator pos:start="147:20" pos:end="147:20">-</operator><literal type="number" pos:start="147:21" pos:end="147:21">1</literal></expr>;</return>

        </block_content>}</block></switch>



        <if_stmt pos:start="153:9" pos:end="165:9"><if pos:start="153:9" pos:end="165:9">if <condition pos:start="153:12" pos:end="153:20">(<expr pos:start="153:13" pos:end="153:19"><name pos:start="153:13" pos:end="153:15">ret</name> <operator pos:start="153:17" pos:end="153:17">&lt;</operator> <literal type="number" pos:start="153:19" pos:end="153:19">0</literal></expr>)</condition> <block pos:start="153:22" pos:end="165:9">{<block_content pos:start="155:13" pos:end="163:18">

            <expr_stmt pos:start="155:13" pos:end="157:69"><expr pos:start="155:13" pos:end="157:68"><call pos:start="155:13" pos:end="157:68"><name pos:start="155:13" pos:end="155:18">av_log</name><argument_list pos:start="155:19" pos:end="157:68">(<argument pos:start="155:20" pos:end="155:23"><expr pos:start="155:20" pos:end="155:23"><name pos:start="155:20" pos:end="155:23">NULL</name></expr></argument>, <argument pos:start="155:26" pos:end="155:37"><expr pos:start="155:26" pos:end="155:37"><name pos:start="155:26" pos:end="155:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="155:40" pos:end="155:81"><expr pos:start="155:40" pos:end="155:81"><literal type="string" pos:start="155:40" pos:end="155:81">"Error while decoding stream #%d:%d: %s\n"</literal></expr></argument>,

                   <argument pos:start="157:20" pos:end="157:34"><expr pos:start="157:20" pos:end="157:34"><name pos:start="157:20" pos:end="157:34"><name pos:start="157:20" pos:end="157:22">ist</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:34">file_index</name></name></expr></argument>, <argument pos:start="157:37" pos:end="157:50"><expr pos:start="157:37" pos:end="157:50"><name pos:start="157:37" pos:end="157:50"><name pos:start="157:37" pos:end="157:39">ist</name><operator pos:start="157:40" pos:end="157:41">-&gt;</operator><name pos:start="157:42" pos:end="157:43">st</name><operator pos:start="157:44" pos:end="157:45">-&gt;</operator><name pos:start="157:46" pos:end="157:50">index</name></name></expr></argument>, <argument pos:start="157:53" pos:end="157:67"><expr pos:start="157:53" pos:end="157:67"><call pos:start="157:53" pos:end="157:67"><name pos:start="157:53" pos:end="157:62">av_err2str</name><argument_list pos:start="157:63" pos:end="157:67">(<argument pos:start="157:64" pos:end="157:66"><expr pos:start="157:64" pos:end="157:66"><name pos:start="157:64" pos:end="157:66">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="161:32"><if pos:start="159:13" pos:end="161:32">if <condition pos:start="159:16" pos:end="159:30">(<expr pos:start="159:17" pos:end="159:29"><name pos:start="159:17" pos:end="159:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:32"><block_content pos:start="161:17" pos:end="161:32">

                <expr_stmt pos:start="161:17" pos:end="161:32"><expr pos:start="161:17" pos:end="161:31"><call pos:start="161:17" pos:end="161:31"><name pos:start="161:17" pos:end="161:28">exit_program</name><argument_list pos:start="161:29" pos:end="161:31">(<argument pos:start="161:30" pos:end="161:30"><expr pos:start="161:30" pos:end="161:30"><literal type="number" pos:start="161:30" pos:end="161:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="163:13" pos:end="163:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="169:9" pos:end="171:34"><expr pos:start="169:9" pos:end="171:33"><name pos:start="169:9" pos:end="169:17"><name pos:start="169:9" pos:end="169:13">avpkt</name><operator pos:start="169:14" pos:end="169:14">.</operator><name pos:start="169:15" pos:end="169:17">dts</name></name><operator pos:start="169:18" pos:end="169:18">=</operator>

        <name pos:start="171:9" pos:end="171:17"><name pos:start="171:9" pos:end="171:13">avpkt</name><operator pos:start="171:14" pos:end="171:14">.</operator><name pos:start="171:15" pos:end="171:17">pts</name></name><operator pos:start="171:18" pos:end="171:18">=</operator> <name pos:start="171:20" pos:end="171:33">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



        <comment type="line" pos:start="175:9" pos:end="175:46">// touch data and size only if not EOF</comment>

        <if_stmt pos:start="177:9" pos:end="187:9"><if pos:start="177:9" pos:end="187:9">if <condition pos:start="177:12" pos:end="177:16">(<expr pos:start="177:13" pos:end="177:15"><name pos:start="177:13" pos:end="177:15">pkt</name></expr>)</condition> <block pos:start="177:18" pos:end="187:9">{<block_content pos:start="179:13" pos:end="185:30">

            <if_stmt pos:start="179:13" pos:end="181:33"><if pos:start="179:13" pos:end="181:33">if<condition pos:start="179:15" pos:end="179:62">(<expr pos:start="179:16" pos:end="179:61"><name pos:start="179:16" pos:end="179:39"><name pos:start="179:16" pos:end="179:18">ist</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:27">dec_ctx</name><operator pos:start="179:28" pos:end="179:29">-&gt;</operator><name pos:start="179:30" pos:end="179:39">codec_type</name></name> <operator pos:start="179:41" pos:end="179:42">!=</operator> <name pos:start="179:44" pos:end="179:61">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:33"><block_content pos:start="181:17" pos:end="181:33">

                <expr_stmt pos:start="181:17" pos:end="181:33"><expr pos:start="181:17" pos:end="181:32"><name pos:start="181:17" pos:end="181:19">ret</name> <operator pos:start="181:21" pos:end="181:21">=</operator> <name pos:start="181:23" pos:end="181:32"><name pos:start="181:23" pos:end="181:27">avpkt</name><operator pos:start="181:28" pos:end="181:28">.</operator><name pos:start="181:29" pos:end="181:32">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:30"><expr pos:start="183:13" pos:end="183:29"><name pos:start="183:13" pos:end="183:22"><name pos:start="183:13" pos:end="183:17">avpkt</name><operator pos:start="183:18" pos:end="183:18">.</operator><name pos:start="183:19" pos:end="183:22">data</name></name> <operator pos:start="183:24" pos:end="183:25">+=</operator> <name pos:start="183:27" pos:end="183:29">ret</name></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:30"><expr pos:start="185:13" pos:end="185:29"><name pos:start="185:13" pos:end="185:22"><name pos:start="185:13" pos:end="185:17">avpkt</name><operator pos:start="185:18" pos:end="185:18">.</operator><name pos:start="185:19" pos:end="185:22">size</name></name> <operator pos:start="185:24" pos:end="185:25">-=</operator> <name pos:start="185:27" pos:end="185:29">ret</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="189:9" pos:end="193:9"><if pos:start="189:9" pos:end="193:9">if <condition pos:start="189:12" pos:end="189:24">(<expr pos:start="189:13" pos:end="189:23"><operator pos:start="189:13" pos:end="189:13">!</operator><name pos:start="189:14" pos:end="189:23">got_output</name></expr>)</condition> <block pos:start="189:26" pos:end="193:9">{<block_content pos:start="191:13" pos:end="191:21">

            <continue pos:start="191:13" pos:end="191:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="195:9" pos:end="197:18"><if pos:start="195:9" pos:end="197:18">if <condition pos:start="195:12" pos:end="195:31">(<expr pos:start="195:13" pos:end="195:30"><name pos:start="195:13" pos:end="195:22">got_output</name> <operator pos:start="195:24" pos:end="195:25">&amp;&amp;</operator> <operator pos:start="195:27" pos:end="195:27">!</operator><name pos:start="195:28" pos:end="195:30">pkt</name></expr>)</condition><block type="pseudo" pos:start="197:13" pos:end="197:18"><block_content pos:start="197:13" pos:end="197:18">

            <break pos:start="197:13" pos:end="197:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="203:5" pos:end="203:85">/* after flushing, send an EOF on all the filter inputs attached to the stream */</comment>

    <comment type="block" pos:start="205:5" pos:end="205:69">/* except when looping we need to flush but not to send an EOF */</comment>

    <if_stmt pos:start="207:5" pos:end="219:5"><if pos:start="207:5" pos:end="219:5">if <condition pos:start="207:8" pos:end="207:63">(<expr pos:start="207:9" pos:end="207:62"><operator pos:start="207:9" pos:end="207:9">!</operator><name pos:start="207:10" pos:end="207:12">pkt</name> <operator pos:start="207:14" pos:end="207:15">&amp;&amp;</operator> <name pos:start="207:17" pos:end="207:36"><name pos:start="207:17" pos:end="207:19">ist</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:36">decoding_needed</name></name> <operator pos:start="207:38" pos:end="207:39">&amp;&amp;</operator> <operator pos:start="207:41" pos:end="207:41">!</operator><name pos:start="207:42" pos:end="207:51">got_output</name> <operator pos:start="207:53" pos:end="207:54">&amp;&amp;</operator> <operator pos:start="207:56" pos:end="207:56">!</operator><name pos:start="207:57" pos:end="207:62">no_eof</name></expr>)</condition> <block pos:start="207:65" pos:end="219:5">{<block_content pos:start="209:9" pos:end="217:9">

        <decl_stmt pos:start="209:9" pos:end="209:39"><decl pos:start="209:9" pos:end="209:38"><type pos:start="209:9" pos:end="209:11"><name pos:start="209:9" pos:end="209:11">int</name></type> <name pos:start="209:13" pos:end="209:15">ret</name> <init pos:start="209:17" pos:end="209:38">= <expr pos:start="209:19" pos:end="209:38"><call pos:start="209:19" pos:end="209:38"><name pos:start="209:19" pos:end="209:33">send_filter_eof</name><argument_list pos:start="209:34" pos:end="209:38">(<argument pos:start="209:35" pos:end="209:37"><expr pos:start="209:35" pos:end="209:37"><name pos:start="209:35" pos:end="209:37">ist</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="211:9" pos:end="217:9"><if pos:start="211:9" pos:end="217:9">if <condition pos:start="211:12" pos:end="211:20">(<expr pos:start="211:13" pos:end="211:19"><name pos:start="211:13" pos:end="211:15">ret</name> <operator pos:start="211:17" pos:end="211:17">&lt;</operator> <literal type="number" pos:start="211:19" pos:end="211:19">0</literal></expr>)</condition> <block pos:start="211:22" pos:end="217:9">{<block_content pos:start="213:13" pos:end="215:28">

            <expr_stmt pos:start="213:13" pos:end="213:78"><expr pos:start="213:13" pos:end="213:77"><call pos:start="213:13" pos:end="213:77"><name pos:start="213:13" pos:end="213:18">av_log</name><argument_list pos:start="213:19" pos:end="213:77">(<argument pos:start="213:20" pos:end="213:23"><expr pos:start="213:20" pos:end="213:23"><name pos:start="213:20" pos:end="213:23">NULL</name></expr></argument>, <argument pos:start="213:26" pos:end="213:37"><expr pos:start="213:26" pos:end="213:37"><name pos:start="213:26" pos:end="213:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="213:40" pos:end="213:76"><expr pos:start="213:40" pos:end="213:76"><literal type="string" pos:start="213:40" pos:end="213:76">"Error marking filters as finished\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:28"><expr pos:start="215:13" pos:end="215:27"><call pos:start="215:13" pos:end="215:27"><name pos:start="215:13" pos:end="215:24">exit_program</name><argument_list pos:start="215:25" pos:end="215:27">(<argument pos:start="215:26" pos:end="215:26"><expr pos:start="215:26" pos:end="215:26"><literal type="number" pos:start="215:26" pos:end="215:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="223:5" pos:end="223:28">/* handle stream copy */</comment>

    <if_stmt pos:start="225:5" pos:end="275:5"><if pos:start="225:5" pos:end="275:5">if <condition pos:start="225:8" pos:end="225:30">(<expr pos:start="225:9" pos:end="225:29"><operator pos:start="225:9" pos:end="225:9">!</operator><name pos:start="225:10" pos:end="225:29"><name pos:start="225:10" pos:end="225:12">ist</name><operator pos:start="225:13" pos:end="225:14">-&gt;</operator><name pos:start="225:15" pos:end="225:29">decoding_needed</name></name></expr>)</condition> <block pos:start="225:32" pos:end="275:5">{<block_content pos:start="227:9" pos:end="273:38">

        <expr_stmt pos:start="227:9" pos:end="227:33"><expr pos:start="227:9" pos:end="227:32"><name pos:start="227:9" pos:end="227:16"><name pos:start="227:9" pos:end="227:11">ist</name><operator pos:start="227:12" pos:end="227:13">-&gt;</operator><name pos:start="227:14" pos:end="227:16">dts</name></name> <operator pos:start="227:18" pos:end="227:18">=</operator> <name pos:start="227:20" pos:end="227:32"><name pos:start="227:20" pos:end="227:22">ist</name><operator pos:start="227:23" pos:end="227:24">-&gt;</operator><name pos:start="227:25" pos:end="227:32">next_dts</name></name></expr>;</expr_stmt>

        <switch pos:start="229:9" pos:end="269:9">switch <condition pos:start="229:16" pos:end="229:41">(<expr pos:start="229:17" pos:end="229:40"><name pos:start="229:17" pos:end="229:40"><name pos:start="229:17" pos:end="229:19">ist</name><operator pos:start="229:20" pos:end="229:21">-&gt;</operator><name pos:start="229:22" pos:end="229:28">dec_ctx</name><operator pos:start="229:29" pos:end="229:30">-&gt;</operator><name pos:start="229:31" pos:end="229:40">codec_type</name></name></expr>)</condition> <block pos:start="229:43" pos:end="269:9">{<block_content pos:start="231:9" pos:end="267:18">

        <case pos:start="231:9" pos:end="231:32">case <expr pos:start="231:14" pos:end="231:31"><name pos:start="231:14" pos:end="231:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="233:13" pos:end="235:55"><expr pos:start="233:13" pos:end="235:54"><name pos:start="233:13" pos:end="233:25"><name pos:start="233:13" pos:end="233:15">ist</name><operator pos:start="233:16" pos:end="233:17">-&gt;</operator><name pos:start="233:18" pos:end="233:25">next_dts</name></name> <operator pos:start="233:27" pos:end="233:28">+=</operator> <operator pos:start="233:30" pos:end="233:30">(</operator><operator pos:start="233:31" pos:end="233:31">(</operator><name pos:start="233:32" pos:end="233:38">int64_t</name><operator pos:start="233:39" pos:end="233:39">)</operator><name pos:start="233:40" pos:end="233:51">AV_TIME_BASE</name> <operator pos:start="233:53" pos:end="233:53">*</operator> <name pos:start="233:55" pos:end="233:78"><name pos:start="233:55" pos:end="233:57">ist</name><operator pos:start="233:58" pos:end="233:59">-&gt;</operator><name pos:start="233:60" pos:end="233:66">dec_ctx</name><operator pos:start="233:67" pos:end="233:68">-&gt;</operator><name pos:start="233:69" pos:end="233:78">frame_size</name></name><operator pos:start="233:79" pos:end="233:79">)</operator> <operator pos:start="233:81" pos:end="233:81">/</operator>

                             <name pos:start="235:30" pos:end="235:54"><name pos:start="235:30" pos:end="235:32">ist</name><operator pos:start="235:33" pos:end="235:34">-&gt;</operator><name pos:start="235:35" pos:end="235:41">dec_ctx</name><operator pos:start="235:42" pos:end="235:43">-&gt;</operator><name pos:start="235:44" pos:end="235:54">sample_rate</name></name></expr>;</expr_stmt>

            <break pos:start="237:13" pos:end="237:18">break;</break>

        <case pos:start="239:9" pos:end="239:32">case <expr pos:start="239:14" pos:end="239:31"><name pos:start="239:14" pos:end="239:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <if_stmt pos:start="241:13" pos:end="265:13"><if pos:start="241:13" pos:end="251:13">if <condition pos:start="241:16" pos:end="241:35">(<expr pos:start="241:17" pos:end="241:34"><name pos:start="241:17" pos:end="241:34"><name pos:start="241:17" pos:end="241:19">ist</name><operator pos:start="241:20" pos:end="241:21">-&gt;</operator><name pos:start="241:22" pos:end="241:30">framerate</name><operator pos:start="241:31" pos:end="241:31">.</operator><name pos:start="241:32" pos:end="241:34">num</name></name></expr>)</condition> <block pos:start="241:37" pos:end="251:13">{<block_content pos:start="245:17" pos:end="249:98">

                <comment type="line" pos:start="243:17" pos:end="243:66">// TODO: Remove work-around for c99-to-c89 issue 7</comment>

                <decl_stmt pos:start="245:17" pos:end="245:56"><decl pos:start="245:17" pos:end="245:55"><type pos:start="245:17" pos:end="245:26"><name pos:start="245:17" pos:end="245:26">AVRational</name></type> <name pos:start="245:28" pos:end="245:38">time_base_q</name> <init pos:start="245:40" pos:end="245:55">= <expr pos:start="245:42" pos:end="245:55"><name pos:start="245:42" pos:end="245:55">AV_TIME_BASE_Q</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="247:17" pos:end="247:102"><decl pos:start="247:17" pos:end="247:101"><type pos:start="247:17" pos:end="247:23"><name pos:start="247:17" pos:end="247:23">int64_t</name></type> <name pos:start="247:25" pos:end="247:32">next_dts</name> <init pos:start="247:34" pos:end="247:101">= <expr pos:start="247:36" pos:end="247:101"><call pos:start="247:36" pos:end="247:101"><name pos:start="247:36" pos:end="247:47">av_rescale_q</name><argument_list pos:start="247:48" pos:end="247:101">(<argument pos:start="247:49" pos:end="247:61"><expr pos:start="247:49" pos:end="247:61"><name pos:start="247:49" pos:end="247:61"><name pos:start="247:49" pos:end="247:51">ist</name><operator pos:start="247:52" pos:end="247:53">-&gt;</operator><name pos:start="247:54" pos:end="247:61">next_dts</name></name></expr></argument>, <argument pos:start="247:64" pos:end="247:74"><expr pos:start="247:64" pos:end="247:74"><name pos:start="247:64" pos:end="247:74">time_base_q</name></expr></argument>, <argument pos:start="247:77" pos:end="247:100"><expr pos:start="247:77" pos:end="247:100"><call pos:start="247:77" pos:end="247:100"><name pos:start="247:77" pos:end="247:84">av_inv_q</name><argument_list pos:start="247:85" pos:end="247:100">(<argument pos:start="247:86" pos:end="247:99"><expr pos:start="247:86" pos:end="247:99"><name pos:start="247:86" pos:end="247:99"><name pos:start="247:86" pos:end="247:88">ist</name><operator pos:start="247:89" pos:end="247:90">-&gt;</operator><name pos:start="247:91" pos:end="247:99">framerate</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:98"><expr pos:start="249:17" pos:end="249:97"><name pos:start="249:17" pos:end="249:29"><name pos:start="249:17" pos:end="249:19">ist</name><operator pos:start="249:20" pos:end="249:21">-&gt;</operator><name pos:start="249:22" pos:end="249:29">next_dts</name></name> <operator pos:start="249:31" pos:end="249:31">=</operator> <call pos:start="249:33" pos:end="249:97"><name pos:start="249:33" pos:end="249:44">av_rescale_q</name><argument_list pos:start="249:45" pos:end="249:97">(<argument pos:start="249:46" pos:end="249:57"><expr pos:start="249:46" pos:end="249:57"><name pos:start="249:46" pos:end="249:53">next_dts</name> <operator pos:start="249:55" pos:end="249:55">+</operator> <literal type="number" pos:start="249:57" pos:end="249:57">1</literal></expr></argument>, <argument pos:start="249:60" pos:end="249:83"><expr pos:start="249:60" pos:end="249:83"><call pos:start="249:60" pos:end="249:83"><name pos:start="249:60" pos:end="249:67">av_inv_q</name><argument_list pos:start="249:68" pos:end="249:83">(<argument pos:start="249:69" pos:end="249:82"><expr pos:start="249:69" pos:end="249:82"><name pos:start="249:69" pos:end="249:82"><name pos:start="249:69" pos:end="249:71">ist</name><operator pos:start="249:72" pos:end="249:73">-&gt;</operator><name pos:start="249:74" pos:end="249:82">framerate</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="249:86" pos:end="249:96"><expr pos:start="249:86" pos:end="249:96"><name pos:start="249:86" pos:end="249:96">time_base_q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="251:15" pos:end="255:13">else if <condition pos:start="251:23" pos:end="251:37">(<expr pos:start="251:24" pos:end="251:36"><name pos:start="251:24" pos:end="251:36"><name pos:start="251:24" pos:end="251:26">pkt</name><operator pos:start="251:27" pos:end="251:28">-&gt;</operator><name pos:start="251:29" pos:end="251:36">duration</name></name></expr>)</condition> <block pos:start="251:39" pos:end="255:13">{<block_content pos:start="253:17" pos:end="253:97">

                <expr_stmt pos:start="253:17" pos:end="253:97"><expr pos:start="253:17" pos:end="253:96"><name pos:start="253:17" pos:end="253:29"><name pos:start="253:17" pos:end="253:19">ist</name><operator pos:start="253:20" pos:end="253:21">-&gt;</operator><name pos:start="253:22" pos:end="253:29">next_dts</name></name> <operator pos:start="253:31" pos:end="253:32">+=</operator> <call pos:start="253:34" pos:end="253:96"><name pos:start="253:34" pos:end="253:45">av_rescale_q</name><argument_list pos:start="253:46" pos:end="253:96">(<argument pos:start="253:47" pos:end="253:59"><expr pos:start="253:47" pos:end="253:59"><name pos:start="253:47" pos:end="253:59"><name pos:start="253:47" pos:end="253:49">pkt</name><operator pos:start="253:50" pos:end="253:51">-&gt;</operator><name pos:start="253:52" pos:end="253:59">duration</name></name></expr></argument>, <argument pos:start="253:62" pos:end="253:79"><expr pos:start="253:62" pos:end="253:79"><name pos:start="253:62" pos:end="253:79"><name pos:start="253:62" pos:end="253:64">ist</name><operator pos:start="253:65" pos:end="253:66">-&gt;</operator><name pos:start="253:67" pos:end="253:68">st</name><operator pos:start="253:69" pos:end="253:70">-&gt;</operator><name pos:start="253:71" pos:end="253:79">time_base</name></name></expr></argument>, <argument pos:start="253:82" pos:end="253:95"><expr pos:start="253:82" pos:end="253:95"><name pos:start="253:82" pos:end="253:95">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="255:15" pos:end="265:13">else if<condition pos:start="255:22" pos:end="255:55">(<expr pos:start="255:23" pos:end="255:54"><name pos:start="255:23" pos:end="255:49"><name pos:start="255:23" pos:end="255:25">ist</name><operator pos:start="255:26" pos:end="255:27">-&gt;</operator><name pos:start="255:28" pos:end="255:34">dec_ctx</name><operator pos:start="255:35" pos:end="255:36">-&gt;</operator><name pos:start="255:37" pos:end="255:45">framerate</name><operator pos:start="255:46" pos:end="255:46">.</operator><name pos:start="255:47" pos:end="255:49">num</name></name> <operator pos:start="255:51" pos:end="255:52">!=</operator> <literal type="number" pos:start="255:54" pos:end="255:54">0</literal></expr>)</condition> <block pos:start="255:57" pos:end="265:13">{<block_content pos:start="257:17" pos:end="263:94">

                <decl_stmt pos:start="257:17" pos:end="257:138"><decl pos:start="257:17" pos:end="257:137"><type pos:start="257:17" pos:end="257:19"><name pos:start="257:17" pos:end="257:19">int</name></type> <name pos:start="257:21" pos:end="257:25">ticks</name><init pos:start="257:26" pos:end="257:137">= <expr pos:start="257:28" pos:end="257:137"><ternary pos:start="257:28" pos:end="257:137"><condition pos:start="257:28" pos:end="257:58"><expr pos:start="257:28" pos:end="257:56"><call pos:start="257:28" pos:end="257:56"><name pos:start="257:28" pos:end="257:47">av_stream_get_parser</name><argument_list pos:start="257:48" pos:end="257:56">(<argument pos:start="257:49" pos:end="257:55"><expr pos:start="257:49" pos:end="257:55"><name pos:start="257:49" pos:end="257:55"><name pos:start="257:49" pos:end="257:51">ist</name><operator pos:start="257:52" pos:end="257:53">-&gt;</operator><name pos:start="257:54" pos:end="257:55">st</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="257:60" pos:end="257:105"> <expr pos:start="257:60" pos:end="257:105"><call pos:start="257:60" pos:end="257:88"><name pos:start="257:60" pos:end="257:79">av_stream_get_parser</name><argument_list pos:start="257:80" pos:end="257:88">(<argument pos:start="257:81" pos:end="257:87"><expr pos:start="257:81" pos:end="257:87"><name pos:start="257:81" pos:end="257:87"><name pos:start="257:81" pos:end="257:83">ist</name><operator pos:start="257:84" pos:end="257:85">-&gt;</operator><name pos:start="257:86" pos:end="257:87">st</name></name></expr></argument>)</argument_list></call><operator pos:start="257:89" pos:end="257:90">-&gt;</operator><name pos:start="257:91" pos:end="257:101">repeat_pict</name> <operator pos:start="257:103" pos:end="257:103">+</operator> <literal type="number" pos:start="257:105" pos:end="257:105">1</literal></expr> </then><else pos:start="257:107" pos:end="257:137">: <expr pos:start="257:109" pos:end="257:137"><name pos:start="257:109" pos:end="257:137"><name pos:start="257:109" pos:end="257:111">ist</name><operator pos:start="257:112" pos:end="257:113">-&gt;</operator><name pos:start="257:114" pos:end="257:120">dec_ctx</name><operator pos:start="257:121" pos:end="257:122">-&gt;</operator><name pos:start="257:123" pos:end="257:137">ticks_per_frame</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="259:17" pos:end="263:94"><expr pos:start="259:17" pos:end="263:93"><name pos:start="259:17" pos:end="259:29"><name pos:start="259:17" pos:end="259:19">ist</name><operator pos:start="259:20" pos:end="259:21">-&gt;</operator><name pos:start="259:22" pos:end="259:29">next_dts</name></name> <operator pos:start="259:31" pos:end="259:32">+=</operator> <operator pos:start="259:34" pos:end="259:34">(</operator><operator pos:start="259:35" pos:end="259:35">(</operator><name pos:start="259:36" pos:end="259:42">int64_t</name><operator pos:start="259:43" pos:end="259:43">)</operator><name pos:start="259:44" pos:end="259:55">AV_TIME_BASE</name> <operator pos:start="259:57" pos:end="259:57">*</operator>

                                  <name pos:start="261:35" pos:end="261:61"><name pos:start="261:35" pos:end="261:37">ist</name><operator pos:start="261:38" pos:end="261:39">-&gt;</operator><name pos:start="261:40" pos:end="261:46">dec_ctx</name><operator pos:start="261:47" pos:end="261:48">-&gt;</operator><name pos:start="261:49" pos:end="261:57">framerate</name><operator pos:start="261:58" pos:end="261:58">.</operator><name pos:start="261:59" pos:end="261:61">den</name></name> <operator pos:start="261:63" pos:end="261:63">*</operator> <name pos:start="261:65" pos:end="261:69">ticks</name><operator pos:start="261:70" pos:end="261:70">)</operator> <operator pos:start="261:72" pos:end="261:72">/</operator>

                                  <name pos:start="263:35" pos:end="263:61"><name pos:start="263:35" pos:end="263:37">ist</name><operator pos:start="263:38" pos:end="263:39">-&gt;</operator><name pos:start="263:40" pos:end="263:46">dec_ctx</name><operator pos:start="263:47" pos:end="263:48">-&gt;</operator><name pos:start="263:49" pos:end="263:57">framerate</name><operator pos:start="263:58" pos:end="263:58">.</operator><name pos:start="263:59" pos:end="263:61">num</name></name> <operator pos:start="263:63" pos:end="263:63">/</operator> <name pos:start="263:65" pos:end="263:93"><name pos:start="263:65" pos:end="263:67">ist</name><operator pos:start="263:68" pos:end="263:69">-&gt;</operator><name pos:start="263:70" pos:end="263:76">dec_ctx</name><operator pos:start="263:77" pos:end="263:78">-&gt;</operator><name pos:start="263:79" pos:end="263:93">ticks_per_frame</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="267:13" pos:end="267:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="271:9" pos:end="271:28"><expr pos:start="271:9" pos:end="271:27"><name pos:start="271:9" pos:end="271:16"><name pos:start="271:9" pos:end="271:11">ist</name><operator pos:start="271:12" pos:end="271:13">-&gt;</operator><name pos:start="271:14" pos:end="271:16">pts</name></name> <operator pos:start="271:18" pos:end="271:18">=</operator> <name pos:start="271:20" pos:end="271:27"><name pos:start="271:20" pos:end="271:22">ist</name><operator pos:start="271:23" pos:end="271:24">-&gt;</operator><name pos:start="271:25" pos:end="271:27">dts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:38"><expr pos:start="273:9" pos:end="273:37"><name pos:start="273:9" pos:end="273:21"><name pos:start="273:9" pos:end="273:11">ist</name><operator pos:start="273:12" pos:end="273:13">-&gt;</operator><name pos:start="273:14" pos:end="273:21">next_pts</name></name> <operator pos:start="273:23" pos:end="273:23">=</operator> <name pos:start="273:25" pos:end="273:37"><name pos:start="273:25" pos:end="273:27">ist</name><operator pos:start="273:28" pos:end="273:29">-&gt;</operator><name pos:start="273:30" pos:end="273:37">next_dts</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="277:5" pos:end="291:5">for <control pos:start="277:9" pos:end="277:50">(<init pos:start="277:10" pos:end="277:15"><expr pos:start="277:10" pos:end="277:14"><name pos:start="277:10" pos:end="277:10">i</name> <operator pos:start="277:12" pos:end="277:12">=</operator> <literal type="number" pos:start="277:14" pos:end="277:14">0</literal></expr>;</init> <condition pos:start="277:17" pos:end="277:45"><expr pos:start="277:17" pos:end="277:44"><name pos:start="277:17" pos:end="277:19">pkt</name> <operator pos:start="277:21" pos:end="277:22">&amp;&amp;</operator> <name pos:start="277:24" pos:end="277:24">i</name> <operator pos:start="277:26" pos:end="277:26">&lt;</operator> <name pos:start="277:28" pos:end="277:44">nb_output_streams</name></expr>;</condition> <incr pos:start="277:47" pos:end="277:49"><expr pos:start="277:47" pos:end="277:49"><name pos:start="277:47" pos:end="277:47">i</name><operator pos:start="277:48" pos:end="277:49">++</operator></expr></incr>)</control> <block pos:start="277:52" pos:end="291:5">{<block_content pos:start="279:9" pos:end="289:37">

        <decl_stmt pos:start="279:9" pos:end="279:46"><decl pos:start="279:9" pos:end="279:45"><type pos:start="279:9" pos:end="279:22"><name pos:start="279:9" pos:end="279:20">OutputStream</name> <modifier pos:start="279:22" pos:end="279:22">*</modifier></type><name pos:start="279:23" pos:end="279:25">ost</name> <init pos:start="279:27" pos:end="279:45">= <expr pos:start="279:29" pos:end="279:45"><name pos:start="279:29" pos:end="279:45"><name pos:start="279:29" pos:end="279:42">output_streams</name><index pos:start="279:43" pos:end="279:45">[<expr pos:start="279:44" pos:end="279:44"><name pos:start="279:44" pos:end="279:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="283:9" pos:end="285:21"><if pos:start="283:9" pos:end="285:21">if <condition pos:start="283:12" pos:end="283:72">(<expr pos:start="283:13" pos:end="283:71"><operator pos:start="283:13" pos:end="283:13">!</operator><call pos:start="283:14" pos:end="283:47"><name pos:start="283:14" pos:end="283:37">check_output_constraints</name><argument_list pos:start="283:38" pos:end="283:47">(<argument pos:start="283:39" pos:end="283:41"><expr pos:start="283:39" pos:end="283:41"><name pos:start="283:39" pos:end="283:41">ist</name></expr></argument>, <argument pos:start="283:44" pos:end="283:46"><expr pos:start="283:44" pos:end="283:46"><name pos:start="283:44" pos:end="283:46">ost</name></expr></argument>)</argument_list></call> <operator pos:start="283:49" pos:end="283:50">||</operator> <name pos:start="283:52" pos:end="283:71"><name pos:start="283:52" pos:end="283:54">ost</name><operator pos:start="283:55" pos:end="283:56">-&gt;</operator><name pos:start="283:57" pos:end="283:71">encoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="285:13" pos:end="285:21"><block_content pos:start="285:13" pos:end="285:21">

            <continue pos:start="285:13" pos:end="285:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="289:9" pos:end="289:37"><expr pos:start="289:9" pos:end="289:36"><call pos:start="289:9" pos:end="289:36"><name pos:start="289:9" pos:end="289:21">do_streamcopy</name><argument_list pos:start="289:22" pos:end="289:36">(<argument pos:start="289:23" pos:end="289:25"><expr pos:start="289:23" pos:end="289:25"><name pos:start="289:23" pos:end="289:25">ist</name></expr></argument>, <argument pos:start="289:28" pos:end="289:30"><expr pos:start="289:28" pos:end="289:30"><name pos:start="289:28" pos:end="289:30">ost</name></expr></argument>, <argument pos:start="289:33" pos:end="289:35"><expr pos:start="289:33" pos:end="289:35"><name pos:start="289:33" pos:end="289:35">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="295:5" pos:end="295:22">return <expr pos:start="295:12" pos:end="295:21"><name pos:start="295:12" pos:end="295:21">got_output</name></expr>;</return>

</block_content>}</block></function>
</unit>
