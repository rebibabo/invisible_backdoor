<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18429.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_mfra</name><parameter_list pos:start="1:25" pos:end="1:55">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:23">stream_size</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><call pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:35">avio_size</name><argument_list pos:start="5:36" pos:end="5:38">(<argument pos:start="5:37" pos:end="5:37"><expr pos:start="5:37" pos:end="5:37"><name pos:start="5:37" pos:end="5:37">f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:24">original_pos</name> <init pos:start="7:26" pos:end="7:39">= <expr pos:start="7:28" pos:end="7:39"><call pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:36">avio_tell</name><argument_list pos:start="7:37" pos:end="7:39">(<argument pos:start="7:38" pos:end="7:38"><expr pos:start="7:38" pos:end="7:38"><name pos:start="7:38" pos:end="7:38">f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:20">seek_ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int32_t</name></type> <name pos:start="11:13" pos:end="11:21">mfra_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:16">= <expr pos:start="13:15" pos:end="13:16"><operator pos:start="13:15" pos:end="13:15">-</operator><literal type="number" pos:start="13:16" pos:end="13:16">1</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:65">(<expr pos:start="15:9" pos:end="15:64"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:17">seek_ret</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <call pos:start="15:21" pos:end="15:59"><name pos:start="15:21" pos:end="15:29">avio_seek</name><argument_list pos:start="15:30" pos:end="15:59">(<argument pos:start="15:31" pos:end="15:31"><expr pos:start="15:31" pos:end="15:31"><name pos:start="15:31" pos:end="15:31">f</name></expr></argument>, <argument pos:start="15:34" pos:end="15:48"><expr pos:start="15:34" pos:end="15:48"><name pos:start="15:34" pos:end="15:44">stream_size</name> <operator pos:start="15:46" pos:end="15:46">-</operator> <literal type="number" pos:start="15:48" pos:end="15:48">4</literal></expr></argument>, <argument pos:start="15:51" pos:end="15:58"><expr pos:start="15:51" pos:end="15:58"><name pos:start="15:51" pos:end="15:58">SEEK_SET</name></expr></argument>)</argument_list></call><operator pos:start="15:60" pos:end="15:60">)</operator> <operator pos:start="15:62" pos:end="15:62">&lt;</operator> <literal type="number" pos:start="15:64" pos:end="15:64">0</literal></expr>)</condition> <block pos:start="15:67" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:18">

        <expr_stmt pos:start="17:9" pos:end="17:23"><expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:22">seek_ret</name></expr>;</expr_stmt>

        <goto pos:start="19:9" pos:end="19:18">goto <name pos:start="19:14" pos:end="19:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:13">mfra_size</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:25">avio_rb32</name><argument_list pos:start="23:26" pos:end="23:28">(<argument pos:start="23:27" pos:end="23:27"><expr pos:start="23:27" pos:end="23:27"><name pos:start="23:27" pos:end="23:27">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:49">(<expr pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:17">mfra_size</name> <argument_list type="generic" pos:start="25:19" pos:end="25:36">&lt; <argument pos:start="25:21" pos:end="25:34"><expr pos:start="25:21" pos:end="25:34"><literal type="number" pos:start="25:21" pos:end="25:21">0</literal> <operator pos:start="25:23" pos:end="25:24">||</operator> <name pos:start="25:26" pos:end="25:34">mfra_size</name></expr></argument> &gt;</argument_list></name> <name pos:start="25:38" pos:end="25:48">stream_size</name></expr>)</condition> <block pos:start="25:51" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:84"><expr pos:start="27:9" pos:end="27:83"><call pos:start="27:9" pos:end="27:83"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:83">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:16">c</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:20">fc</name></name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="27:37" pos:end="27:82"><expr pos:start="27:37" pos:end="27:82"><literal type="string" pos:start="27:37" pos:end="27:82">"doesn't look like mfra (unreasonable size)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:18">goto <name pos:start="29:14" pos:end="29:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:60">(<expr pos:start="33:9" pos:end="33:59"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:17">seek_ret</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <call pos:start="33:21" pos:end="33:54"><name pos:start="33:21" pos:end="33:29">avio_seek</name><argument_list pos:start="33:30" pos:end="33:54">(<argument pos:start="33:31" pos:end="33:31"><expr pos:start="33:31" pos:end="33:31"><name pos:start="33:31" pos:end="33:31">f</name></expr></argument>, <argument pos:start="33:34" pos:end="33:43"><expr pos:start="33:34" pos:end="33:43"><operator pos:start="33:34" pos:end="33:34">-</operator><name pos:start="33:35" pos:end="33:43">mfra_size</name></expr></argument>, <argument pos:start="33:46" pos:end="33:53"><expr pos:start="33:46" pos:end="33:53"><name pos:start="33:46" pos:end="33:53">SEEK_CUR</name></expr></argument>)</argument_list></call><operator pos:start="33:55" pos:end="33:55">)</operator> <operator pos:start="33:57" pos:end="33:57">&lt;</operator> <literal type="number" pos:start="33:59" pos:end="33:59">0</literal></expr>)</condition> <block pos:start="33:62" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:22">seek_ret</name></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:18">goto <name pos:start="37:14" pos:end="37:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:34">(<expr pos:start="41:9" pos:end="41:33"><call pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:17">avio_rb32</name><argument_list pos:start="41:18" pos:end="41:20">(<argument pos:start="41:19" pos:end="41:19"><expr pos:start="41:19" pos:end="41:19"><name pos:start="41:19" pos:end="41:19">f</name></expr></argument>)</argument_list></call> <operator pos:start="41:22" pos:end="41:23">!=</operator> <name pos:start="41:25" pos:end="41:33">mfra_size</name></expr>)</condition> <block pos:start="41:36" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:18">

        <expr_stmt pos:start="43:9" pos:end="43:80"><expr pos:start="43:9" pos:end="43:79"><call pos:start="43:9" pos:end="43:79"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:79">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:16">c</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:20">fc</name></name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="43:37" pos:end="43:78"><expr pos:start="43:37" pos:end="43:78"><literal type="string" pos:start="43:37" pos:end="43:78">"doesn't look like mfra (size mismatch)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:18">goto <name pos:start="45:14" pos:end="45:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:52">(<expr pos:start="49:9" pos:end="49:51"><call pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:17">avio_rb32</name><argument_list pos:start="49:18" pos:end="49:20">(<argument pos:start="49:19" pos:end="49:19"><expr pos:start="49:19" pos:end="49:19"><name pos:start="49:19" pos:end="49:19">f</name></expr></argument>)</argument_list></call> <operator pos:start="49:22" pos:end="49:23">!=</operator> <call pos:start="49:25" pos:end="49:51"><name pos:start="49:25" pos:end="49:31">MKBETAG</name><argument_list pos:start="49:32" pos:end="49:51">(<argument pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><literal type="char" pos:start="49:33" pos:end="49:35">'m'</literal></expr></argument>, <argument pos:start="49:38" pos:end="49:40"><expr pos:start="49:38" pos:end="49:40"><literal type="char" pos:start="49:38" pos:end="49:40">'f'</literal></expr></argument>, <argument pos:start="49:43" pos:end="49:45"><expr pos:start="49:43" pos:end="49:45"><literal type="char" pos:start="49:43" pos:end="49:45">'r'</literal></expr></argument>, <argument pos:start="49:48" pos:end="49:50"><expr pos:start="49:48" pos:end="49:50"><literal type="char" pos:start="49:48" pos:end="49:50">'a'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:54" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:18">

        <expr_stmt pos:start="51:9" pos:end="51:79"><expr pos:start="51:9" pos:end="51:78"><call pos:start="51:9" pos:end="51:78"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:78">(<argument pos:start="51:16" pos:end="51:20"><expr pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:16">c</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:20">fc</name></name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="51:37" pos:end="51:77"><expr pos:start="51:37" pos:end="51:77"><literal type="string" pos:start="51:37" pos:end="51:77">"doesn't look like mfra (tag mismatch)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:18">goto <name pos:start="53:14" pos:end="53:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:12"><expr pos:start="57:5" pos:end="57:11"><name pos:start="57:5" pos:end="57:7">ret</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <literal type="number" pos:start="57:11" pos:end="57:11">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:55"><expr pos:start="59:5" pos:end="59:54"><call pos:start="59:5" pos:end="59:54"><name pos:start="59:5" pos:end="59:10">av_log</name><argument_list pos:start="59:11" pos:end="59:54">(<argument pos:start="59:12" pos:end="59:16"><expr pos:start="59:12" pos:end="59:16"><name pos:start="59:12" pos:end="59:16"><name pos:start="59:12" pos:end="59:12">c</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:16">fc</name></name></expr></argument>, <argument pos:start="59:19" pos:end="59:32"><expr pos:start="59:19" pos:end="59:32"><name pos:start="59:19" pos:end="59:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="59:35" pos:end="59:53"><expr pos:start="59:35" pos:end="59:53"><literal type="string" pos:start="59:35" pos:end="59:53">"stream has mfra\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="61:5" pos:end="65:5">while <condition pos:start="61:11" pos:end="61:28">(<expr pos:start="61:12" pos:end="61:27"><operator pos:start="61:12" pos:end="61:12">!</operator><call pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:21">read_tfra</name><argument_list pos:start="61:22" pos:end="61:27">(<argument pos:start="61:23" pos:end="61:23"><expr pos:start="61:23" pos:end="61:23"><name pos:start="61:23" pos:end="61:23">c</name></expr></argument>, <argument pos:start="61:26" pos:end="61:26"><expr pos:start="61:26" pos:end="61:26"><name pos:start="61:26" pos:end="61:26">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:30" pos:end="65:5">{<block_content>

        <comment type="block" pos:start="63:9" pos:end="63:19">/* Empty */</comment>

    </block_content>}</block></while>

<label pos:start="67:1" pos:end="67:5"><name pos:start="67:1" pos:end="67:4">fail</name>:</label>

    <expr_stmt pos:start="69:5" pos:end="69:52"><expr pos:start="69:5" pos:end="69:51"><name pos:start="69:5" pos:end="69:12">seek_ret</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <call pos:start="69:16" pos:end="69:51"><name pos:start="69:16" pos:end="69:24">avio_seek</name><argument_list pos:start="69:25" pos:end="69:51">(<argument pos:start="69:26" pos:end="69:26"><expr pos:start="69:26" pos:end="69:26"><name pos:start="69:26" pos:end="69:26">f</name></expr></argument>, <argument pos:start="69:29" pos:end="69:40"><expr pos:start="69:29" pos:end="69:40"><name pos:start="69:29" pos:end="69:40">original_pos</name></expr></argument>, <argument pos:start="69:43" pos:end="69:50"><expr pos:start="69:43" pos:end="69:50"><name pos:start="69:43" pos:end="69:50">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="71:21">(<expr pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:16">seek_ret</name> <operator pos:start="71:18" pos:end="71:18">&lt;</operator> <literal type="number" pos:start="71:20" pos:end="71:20">0</literal></expr>)</condition> <block pos:start="71:23" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:23">

        <expr_stmt pos:start="73:9" pos:end="75:63"><expr pos:start="73:9" pos:end="75:62"><call pos:start="73:9" pos:end="75:62"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="75:62">(<argument pos:start="73:16" pos:end="73:20"><expr pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:16">c</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:20">fc</name></name></expr></argument>, <argument pos:start="73:23" pos:end="73:34"><expr pos:start="73:23" pos:end="73:34"><name pos:start="73:23" pos:end="73:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="75:16" pos:end="75:61"><expr pos:start="75:16" pos:end="75:61"><literal type="string" pos:start="75:16" pos:end="75:61">"failed to seek back after looking for mfra\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:23"><expr pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:22">seek_ret</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="81:5" pos:end="81:15">return <expr pos:start="81:12" pos:end="81:14"><name pos:start="81:12" pos:end="81:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
