<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21963.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">usb_host_auto_check</name><parameter_list pos:start="1:32" pos:end="1:45">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:38"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">unused</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="203:1">{<block_content pos:start="5:5" pos:end="201:77">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:24">USBHostDevice</name></name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:27">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:24">USBAutoFilter</name></name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:27">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:17">libusb_device</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier><modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:24">devs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:35">libusb_device_descriptor</name></name></type> <name pos:start="11:37" pos:end="11:41">ddesc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">unconnected</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">n</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:29">(<expr pos:start="19:9" pos:end="19:28"><call pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:21">usb_host_init</name><argument_list pos:start="19:22" pos:end="19:23">()</argument_list></call> <operator pos:start="19:25" pos:end="19:26">!=</operator> <literal type="number" pos:start="19:28" pos:end="19:28">0</literal></expr>)</condition> <block pos:start="19:31" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="177:5"><if pos:start="27:5" pos:end="177:5">if <condition pos:start="27:8" pos:end="27:30">(<expr pos:start="27:9" pos:end="27:29"><call pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:27">runstate_is_running</name><argument_list pos:start="27:28" pos:end="27:29">()</argument_list></call></expr>)</condition> <block pos:start="27:32" pos:end="177:5">{<block_content pos:start="29:9" pos:end="176:0">

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:9">n</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:46"><name pos:start="29:13" pos:end="29:34">libusb_get_device_list</name><argument_list pos:start="29:35" pos:end="29:46">(<argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">ctx</name></expr></argument>, <argument pos:start="29:41" pos:end="29:45"><expr pos:start="29:41" pos:end="29:45"><operator pos:start="29:41" pos:end="29:41">&amp;</operator><name pos:start="29:42" pos:end="29:45">devs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="31:9" pos:end="125:9">for <control pos:start="31:13" pos:end="31:31">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:25">n</name></expr>;</condition> <incr pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:28">i</name><operator pos:start="31:29" pos:end="31:30">++</operator></expr></incr>)</control> <block pos:start="31:33" pos:end="125:9">{<block_content pos:start="33:13" pos:end="123:13">

            <if_stmt pos:start="33:13" pos:end="37:13"><if pos:start="33:13" pos:end="37:13">if <condition pos:start="33:16" pos:end="33:67">(<expr pos:start="33:17" pos:end="33:66"><call pos:start="33:17" pos:end="33:61"><name pos:start="33:17" pos:end="33:44">libusb_get_device_descriptor</name><argument_list pos:start="33:45" pos:end="33:61">(<argument pos:start="33:46" pos:end="33:52"><expr pos:start="33:46" pos:end="33:52"><name pos:start="33:46" pos:end="33:52"><name pos:start="33:46" pos:end="33:49">devs</name><index pos:start="33:50" pos:end="33:52">[<expr pos:start="33:51" pos:end="33:51"><name pos:start="33:51" pos:end="33:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="33:55" pos:end="33:60"><expr pos:start="33:55" pos:end="33:60"><operator pos:start="33:55" pos:end="33:55">&amp;</operator><name pos:start="33:56" pos:end="33:60">ddesc</name></expr></argument>)</argument_list></call> <operator pos:start="33:63" pos:end="33:64">!=</operator> <literal type="number" pos:start="33:66" pos:end="33:66">0</literal></expr>)</condition> <block pos:start="33:69" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:25">

                <continue pos:start="35:17" pos:end="35:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="39:13" pos:end="43:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:55">(<expr pos:start="39:17" pos:end="39:54"><name pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:21">ddesc</name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:34">bDeviceClass</name></name> <operator pos:start="39:36" pos:end="39:37">==</operator> <name pos:start="39:39" pos:end="39:54">LIBUSB_CLASS_HUB</name></expr>)</condition> <block pos:start="39:57" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:25">

                <continue pos:start="41:17" pos:end="41:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <macro pos:start="45:13" pos:end="45:46"><name pos:start="45:13" pos:end="45:26">QTAILQ_FOREACH</name><argument_list pos:start="45:27" pos:end="45:46">(<argument pos:start="45:28" pos:end="45:28">s</argument>, <argument pos:start="45:31" pos:end="45:39">&amp;hostdevs</argument>, <argument pos:start="45:42" pos:end="45:45">next</argument>)</argument_list></macro> <block pos:start="45:48" pos:end="123:13">{<block_content pos:start="47:17" pos:end="121:22">

                <expr_stmt pos:start="47:17" pos:end="47:30"><expr pos:start="47:17" pos:end="47:29"><name pos:start="47:17" pos:end="47:17">f</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <operator pos:start="47:21" pos:end="47:21">&amp;</operator><name pos:start="47:22" pos:end="47:29"><name pos:start="47:22" pos:end="47:22">s</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:29">match</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="49:17" pos:end="55:17"><if pos:start="49:17" pos:end="55:17">if <condition pos:start="49:20" pos:end="51:65">(<expr pos:start="49:21" pos:end="51:64"><name pos:start="49:21" pos:end="49:30"><name pos:start="49:21" pos:end="49:21">f</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:30">bus_num</name></name> <operator pos:start="49:32" pos:end="49:32">&gt;</operator> <literal type="number" pos:start="49:34" pos:end="49:34">0</literal> <operator pos:start="49:36" pos:end="49:37">&amp;&amp;</operator>

                    <name pos:start="51:21" pos:end="51:30"><name pos:start="51:21" pos:end="51:21">f</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:30">bus_num</name></name> <operator pos:start="51:32" pos:end="51:33">!=</operator> <call pos:start="51:35" pos:end="51:64"><name pos:start="51:35" pos:end="51:55">libusb_get_bus_number</name><argument_list pos:start="51:56" pos:end="51:64">(<argument pos:start="51:57" pos:end="51:63"><expr pos:start="51:57" pos:end="51:63"><name pos:start="51:57" pos:end="51:63"><name pos:start="51:57" pos:end="51:60">devs</name><index pos:start="51:61" pos:end="51:63">[<expr pos:start="51:62" pos:end="51:62"><name pos:start="51:62" pos:end="51:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:67" pos:end="55:17">{<block_content pos:start="53:21" pos:end="53:29">

                    <continue pos:start="53:21" pos:end="53:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="57:17" pos:end="63:17"><if pos:start="57:17" pos:end="63:17">if <condition pos:start="57:20" pos:end="59:66">(<expr pos:start="57:21" pos:end="59:65"><name pos:start="57:21" pos:end="57:27"><name pos:start="57:21" pos:end="57:21">f</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:27">addr</name></name> <operator pos:start="57:29" pos:end="57:29">&gt;</operator> <literal type="number" pos:start="57:31" pos:end="57:31">0</literal> <operator pos:start="57:33" pos:end="57:34">&amp;&amp;</operator>

                    <name pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:21">f</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:27">addr</name></name> <operator pos:start="59:29" pos:end="59:30">!=</operator> <call pos:start="59:32" pos:end="59:65"><name pos:start="59:32" pos:end="59:56">libusb_get_device_address</name><argument_list pos:start="59:57" pos:end="59:65">(<argument pos:start="59:58" pos:end="59:64"><expr pos:start="59:58" pos:end="59:64"><name pos:start="59:58" pos:end="59:64"><name pos:start="59:58" pos:end="59:61">devs</name><index pos:start="59:62" pos:end="59:64">[<expr pos:start="59:63" pos:end="59:63"><name pos:start="59:63" pos:end="59:63">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:68" pos:end="63:17">{<block_content pos:start="61:21" pos:end="61:29">

                    <continue pos:start="61:21" pos:end="61:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="65:17" pos:end="77:17"><if pos:start="65:17" pos:end="77:17">if <condition pos:start="65:20" pos:end="65:36">(<expr pos:start="65:21" pos:end="65:35"><name pos:start="65:21" pos:end="65:27"><name pos:start="65:21" pos:end="65:21">f</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:27">port</name></name> <operator pos:start="65:29" pos:end="65:30">!=</operator> <name pos:start="65:32" pos:end="65:35">NULL</name></expr>)</condition> <block pos:start="65:38" pos:end="77:17">{<block_content pos:start="67:21" pos:end="75:21">

                    <decl_stmt pos:start="67:21" pos:end="67:40"><decl pos:start="67:21" pos:end="67:39"><type pos:start="67:21" pos:end="67:24"><name pos:start="67:21" pos:end="67:24">char</name></type> <name pos:start="67:26" pos:end="67:33"><name pos:start="67:26" pos:end="67:29">port</name><index pos:start="67:30" pos:end="67:33">[<expr pos:start="67:31" pos:end="67:32"><literal type="number" pos:start="67:31" pos:end="67:32">16</literal></expr>]</index></name> <init pos:start="67:35" pos:end="67:39">= <expr pos:start="67:37" pos:end="67:39"><literal type="string" pos:start="67:37" pos:end="67:39">"-"</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:67"><expr pos:start="69:21" pos:end="69:66"><call pos:start="69:21" pos:end="69:66"><name pos:start="69:21" pos:end="69:37">usb_host_get_port</name><argument_list pos:start="69:38" pos:end="69:66">(<argument pos:start="69:39" pos:end="69:45"><expr pos:start="69:39" pos:end="69:45"><name pos:start="69:39" pos:end="69:45"><name pos:start="69:39" pos:end="69:42">devs</name><index pos:start="69:43" pos:end="69:45">[<expr pos:start="69:44" pos:end="69:44"><name pos:start="69:44" pos:end="69:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="69:48" pos:end="69:51"><expr pos:start="69:48" pos:end="69:51"><name pos:start="69:48" pos:end="69:51">port</name></expr></argument>, <argument pos:start="69:54" pos:end="69:65"><expr pos:start="69:54" pos:end="69:65"><sizeof pos:start="69:54" pos:end="69:65">sizeof<argument_list pos:start="69:60" pos:end="69:65">(<argument pos:start="69:61" pos:end="69:64"><expr pos:start="69:61" pos:end="69:64"><name pos:start="69:61" pos:end="69:64">port</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="71:21" pos:end="75:21"><if pos:start="71:21" pos:end="75:21">if <condition pos:start="71:24" pos:end="71:51">(<expr pos:start="71:25" pos:end="71:50"><call pos:start="71:25" pos:end="71:45"><name pos:start="71:25" pos:end="71:30">strcmp</name><argument_list pos:start="71:31" pos:end="71:45">(<argument pos:start="71:32" pos:end="71:38"><expr pos:start="71:32" pos:end="71:38"><name pos:start="71:32" pos:end="71:38"><name pos:start="71:32" pos:end="71:32">f</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:38">port</name></name></expr></argument>, <argument pos:start="71:41" pos:end="71:44"><expr pos:start="71:41" pos:end="71:44"><name pos:start="71:41" pos:end="71:44">port</name></expr></argument>)</argument_list></call> <operator pos:start="71:47" pos:end="71:48">!=</operator> <literal type="number" pos:start="71:50" pos:end="71:50">0</literal></expr>)</condition> <block pos:start="71:53" pos:end="75:21">{<block_content pos:start="73:25" pos:end="73:33">

                        <continue pos:start="73:25" pos:end="73:33">continue;</continue>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="79:17" pos:end="85:17"><if pos:start="79:17" pos:end="85:17">if <condition pos:start="79:20" pos:end="81:51">(<expr pos:start="79:21" pos:end="81:50"><name pos:start="79:21" pos:end="79:32"><name pos:start="79:21" pos:end="79:21">f</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:32">vendor_id</name></name> <operator pos:start="79:34" pos:end="79:34">&gt;</operator> <literal type="number" pos:start="79:36" pos:end="79:36">0</literal> <operator pos:start="79:38" pos:end="79:39">&amp;&amp;</operator>

                    <name pos:start="81:21" pos:end="81:32"><name pos:start="81:21" pos:end="81:21">f</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:32">vendor_id</name></name> <operator pos:start="81:34" pos:end="81:35">!=</operator> <name pos:start="81:37" pos:end="81:50"><name pos:start="81:37" pos:end="81:41">ddesc</name><operator pos:start="81:42" pos:end="81:42">.</operator><name pos:start="81:43" pos:end="81:50">idVendor</name></name></expr>)</condition> <block pos:start="81:53" pos:end="85:17">{<block_content pos:start="83:21" pos:end="83:29">

                    <continue pos:start="83:21" pos:end="83:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="87:17" pos:end="93:17"><if pos:start="87:17" pos:end="93:17">if <condition pos:start="87:20" pos:end="89:53">(<expr pos:start="87:21" pos:end="89:52"><name pos:start="87:21" pos:end="87:33"><name pos:start="87:21" pos:end="87:21">f</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:33">product_id</name></name> <operator pos:start="87:35" pos:end="87:35">&gt;</operator> <literal type="number" pos:start="87:37" pos:end="87:37">0</literal> <operator pos:start="87:39" pos:end="87:40">&amp;&amp;</operator>

                    <name pos:start="89:21" pos:end="89:33"><name pos:start="89:21" pos:end="89:21">f</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:33">product_id</name></name> <operator pos:start="89:35" pos:end="89:36">!=</operator> <name pos:start="89:38" pos:end="89:52"><name pos:start="89:38" pos:end="89:42">ddesc</name><operator pos:start="89:43" pos:end="89:43">.</operator><name pos:start="89:44" pos:end="89:52">idProduct</name></name></expr>)</condition> <block pos:start="89:55" pos:end="93:17">{<block_content pos:start="91:21" pos:end="91:29">

                    <continue pos:start="91:21" pos:end="91:29">continue;</continue>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="97:17" pos:end="97:36">/* We got a match */</comment>

                <expr_stmt pos:start="99:17" pos:end="99:26"><expr pos:start="99:17" pos:end="99:25"><name pos:start="99:17" pos:end="99:23"><name pos:start="99:17" pos:end="99:17">s</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:23">seen</name></name><operator pos:start="99:24" pos:end="99:25">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="101:17" pos:end="105:17"><if pos:start="101:17" pos:end="105:17">if <condition pos:start="101:20" pos:end="101:37">(<expr pos:start="101:21" pos:end="101:36"><name pos:start="101:21" pos:end="101:31"><name pos:start="101:21" pos:end="101:21">s</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:31">errcount</name></name> <operator pos:start="101:33" pos:end="101:34">&gt;=</operator> <literal type="number" pos:start="101:36" pos:end="101:36">3</literal></expr>)</condition> <block pos:start="101:39" pos:end="105:17">{<block_content pos:start="103:21" pos:end="103:29">

                    <continue pos:start="103:21" pos:end="103:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="107:17" pos:end="111:17"><if pos:start="107:17" pos:end="111:17">if <condition pos:start="107:20" pos:end="107:34">(<expr pos:start="107:21" pos:end="107:33"><name pos:start="107:21" pos:end="107:25"><name pos:start="107:21" pos:end="107:21">s</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:25">dh</name></name> <operator pos:start="107:27" pos:end="107:28">!=</operator> <name pos:start="107:30" pos:end="107:33">NULL</name></expr>)</condition> <block pos:start="107:36" pos:end="111:17">{<block_content pos:start="109:21" pos:end="109:29">

                    <continue pos:start="109:21" pos:end="109:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="113:17" pos:end="119:17"><if pos:start="113:17" pos:end="119:17">if <condition pos:start="113:20" pos:end="113:50">(<expr pos:start="113:21" pos:end="113:49"><call pos:start="113:21" pos:end="113:45"><name pos:start="113:21" pos:end="113:33">usb_host_open</name><argument_list pos:start="113:34" pos:end="113:45">(<argument pos:start="113:35" pos:end="113:35"><expr pos:start="113:35" pos:end="113:35"><name pos:start="113:35" pos:end="113:35">s</name></expr></argument>, <argument pos:start="113:38" pos:end="113:44"><expr pos:start="113:38" pos:end="113:44"><name pos:start="113:38" pos:end="113:44"><name pos:start="113:38" pos:end="113:41">devs</name><index pos:start="113:42" pos:end="113:44">[<expr pos:start="113:43" pos:end="113:43"><name pos:start="113:43" pos:end="113:43">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="113:47" pos:end="113:47">&lt;</operator> <literal type="number" pos:start="113:49" pos:end="113:49">0</literal></expr>)</condition> <block pos:start="113:52" pos:end="119:17">{<block_content pos:start="115:21" pos:end="117:29">

                    <expr_stmt pos:start="115:21" pos:end="115:34"><expr pos:start="115:21" pos:end="115:33"><name pos:start="115:21" pos:end="115:31"><name pos:start="115:21" pos:end="115:21">s</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:31">errcount</name></name><operator pos:start="115:32" pos:end="115:33">++</operator></expr>;</expr_stmt>

                    <continue pos:start="117:21" pos:end="117:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <break pos:start="121:17" pos:end="121:22">break;</break>

            </block_content>}</block>

        </block_content>}</block></for>

        <expr_stmt pos:start="127:9" pos:end="127:41"><expr pos:start="127:9" pos:end="127:40"><call pos:start="127:9" pos:end="127:40"><name pos:start="127:9" pos:end="127:31">libusb_free_device_list</name><argument_list pos:start="127:32" pos:end="127:40">(<argument pos:start="127:33" pos:end="127:36"><expr pos:start="127:33" pos:end="127:36"><name pos:start="127:33" pos:end="127:36">devs</name></expr></argument>, <argument pos:start="127:39" pos:end="127:39"><expr pos:start="127:39" pos:end="127:39"><literal type="number" pos:start="127:39" pos:end="127:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <macro pos:start="131:9" pos:end="131:42"><name pos:start="131:9" pos:end="131:22">QTAILQ_FOREACH</name><argument_list pos:start="131:23" pos:end="131:42">(<argument pos:start="131:24" pos:end="131:24">s</argument>, <argument pos:start="131:27" pos:end="131:35">&amp;hostdevs</argument>, <argument pos:start="131:38" pos:end="131:41">next</argument>)</argument_list></macro> <block pos:start="131:44" pos:end="176:0">{<block_content pos:start="133:13" pos:end="151:24">

            <if_stmt pos:start="133:13" pos:end="137:13"><if pos:start="133:13" pos:end="137:13">if <condition pos:start="133:16" pos:end="133:30">(<expr pos:start="133:17" pos:end="133:29"><name pos:start="133:17" pos:end="133:21"><name pos:start="133:17" pos:end="133:17">s</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:21">dh</name></name> <operator pos:start="133:23" pos:end="133:24">==</operator> <name pos:start="133:26" pos:end="133:29">NULL</name></expr>)</condition> <block pos:start="133:32" pos:end="137:13">{<block_content pos:start="135:17" pos:end="135:30">

                <expr_stmt pos:start="135:17" pos:end="135:30"><expr pos:start="135:17" pos:end="135:29"><name pos:start="135:17" pos:end="135:27">unconnected</name><operator pos:start="135:28" pos:end="135:29">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="139:13" pos:end="149:13"><if pos:start="139:13" pos:end="149:13">if <condition pos:start="139:16" pos:end="139:29">(<expr pos:start="139:17" pos:end="139:28"><name pos:start="139:17" pos:end="139:23"><name pos:start="139:17" pos:end="139:17">s</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:23">seen</name></name> <operator pos:start="139:25" pos:end="139:26">==</operator> <literal type="number" pos:start="139:28" pos:end="139:28">0</literal></expr>)</condition> <block pos:start="139:31" pos:end="149:13">{<block_content pos:start="141:17" pos:end="147:32">

                <if_stmt pos:start="141:17" pos:end="145:17"><if pos:start="141:17" pos:end="145:17">if <condition pos:start="141:20" pos:end="141:26">(<expr pos:start="141:21" pos:end="141:25"><name pos:start="141:21" pos:end="141:25"><name pos:start="141:21" pos:end="141:21">s</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:25">dh</name></name></expr>)</condition> <block pos:start="141:28" pos:end="145:17">{<block_content pos:start="143:21" pos:end="143:38">

                    <expr_stmt pos:start="143:21" pos:end="143:38"><expr pos:start="143:21" pos:end="143:37"><call pos:start="143:21" pos:end="143:37"><name pos:start="143:21" pos:end="143:34">usb_host_close</name><argument_list pos:start="143:35" pos:end="143:37">(<argument pos:start="143:36" pos:end="143:36"><expr pos:start="143:36" pos:end="143:36"><name pos:start="143:36" pos:end="143:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:32"><expr pos:start="147:17" pos:end="147:31"><name pos:start="147:17" pos:end="147:27"><name pos:start="147:17" pos:end="147:17">s</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:27">errcount</name></name> <operator pos:start="147:29" pos:end="147:29">=</operator> <literal type="number" pos:start="147:31" pos:end="147:31">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:24"><expr pos:start="151:13" pos:end="151:23"><name pos:start="151:13" pos:end="151:19"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:19">seen</name></name> <operator pos:start="151:21" pos:end="151:21">=</operator> <literal type="number" pos:start="151:23" pos:end="151:23">0</literal></expr>;</expr_stmt>

        </block_content>}</block>



<cpp:if pos:start="157:1" pos:end="157:5">#<cpp:directive pos:start="157:2" pos:end="157:3">if</cpp:directive> <expr pos:start="157:5" pos:end="157:5"><literal type="number" pos:start="157:5" pos:end="157:5">0</literal></expr></cpp:if>

        if (unconnected == 0) {

            <comment type="block" pos:start="161:13" pos:end="161:34">/* nothing to watch */</comment>

            if (usb_auto_timer) {

                timer_del(usb_auto_timer);

                trace_usb_host_auto_scan_disabled();

            }

            return;

        }

<cpp:endif pos:start="175:1" pos:end="175:6">#<cpp:directive pos:start="175:2" pos:end="175:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="181:5" pos:end="185:5"><if pos:start="181:5" pos:end="185:5">if <condition pos:start="181:8" pos:end="181:21">(<expr pos:start="181:9" pos:end="181:20"><operator pos:start="181:9" pos:end="181:9">!</operator><name pos:start="181:10" pos:end="181:20">usb_vmstate</name></expr>)</condition> <block pos:start="181:23" pos:end="185:5">{<block_content pos:start="183:9" pos:end="183:80">

        <expr_stmt pos:start="183:9" pos:end="183:80"><expr pos:start="183:9" pos:end="183:79"><name pos:start="183:9" pos:end="183:19">usb_vmstate</name> <operator pos:start="183:21" pos:end="183:21">=</operator> <call pos:start="183:23" pos:end="183:79"><name pos:start="183:23" pos:end="183:54">qemu_add_vm_change_state_handler</name><argument_list pos:start="183:55" pos:end="183:79">(<argument pos:start="183:56" pos:end="183:72"><expr pos:start="183:56" pos:end="183:72"><name pos:start="183:56" pos:end="183:72">usb_host_vm_state</name></expr></argument>, <argument pos:start="183:75" pos:end="183:78"><expr pos:start="183:75" pos:end="183:78"><name pos:start="183:75" pos:end="183:78">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="187:5" pos:end="199:5"><if pos:start="187:5" pos:end="199:5">if <condition pos:start="187:8" pos:end="187:24">(<expr pos:start="187:9" pos:end="187:23"><operator pos:start="187:9" pos:end="187:9">!</operator><name pos:start="187:10" pos:end="187:23">usb_auto_timer</name></expr>)</condition> <block pos:start="187:26" pos:end="199:5">{<block_content pos:start="189:9" pos:end="197:43">

        <expr_stmt pos:start="189:9" pos:end="189:86"><expr pos:start="189:9" pos:end="189:85"><name pos:start="189:9" pos:end="189:22">usb_auto_timer</name> <operator pos:start="189:24" pos:end="189:24">=</operator> <call pos:start="189:26" pos:end="189:85"><name pos:start="189:26" pos:end="189:37">timer_new_ms</name><argument_list pos:start="189:38" pos:end="189:85">(<argument pos:start="189:39" pos:end="189:57"><expr pos:start="189:39" pos:end="189:57"><name pos:start="189:39" pos:end="189:57">QEMU_CLOCK_REALTIME</name></expr></argument>, <argument pos:start="189:60" pos:end="189:78"><expr pos:start="189:60" pos:end="189:78"><name pos:start="189:60" pos:end="189:78">usb_host_auto_check</name></expr></argument>, <argument pos:start="189:81" pos:end="189:84"><expr pos:start="189:81" pos:end="189:84"><name pos:start="189:81" pos:end="189:84">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="191:9" pos:end="195:9"><if pos:start="191:9" pos:end="195:9">if <condition pos:start="191:12" pos:end="191:28">(<expr pos:start="191:13" pos:end="191:27"><operator pos:start="191:13" pos:end="191:13">!</operator><name pos:start="191:14" pos:end="191:27">usb_auto_timer</name></expr>)</condition> <block pos:start="191:30" pos:end="195:9">{<block_content pos:start="193:13" pos:end="193:19">

            <return pos:start="193:13" pos:end="193:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:43"><expr pos:start="197:9" pos:end="197:42"><call pos:start="197:9" pos:end="197:42"><name pos:start="197:9" pos:end="197:40">trace_usb_host_auto_scan_enabled</name><argument_list pos:start="197:41" pos:end="197:42">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:77"><expr pos:start="201:5" pos:end="201:76"><call pos:start="201:5" pos:end="201:76"><name pos:start="201:5" pos:end="201:13">timer_mod</name><argument_list pos:start="201:14" pos:end="201:76">(<argument pos:start="201:15" pos:end="201:28"><expr pos:start="201:15" pos:end="201:28"><name pos:start="201:15" pos:end="201:28">usb_auto_timer</name></expr></argument>, <argument pos:start="201:31" pos:end="201:75"><expr pos:start="201:31" pos:end="201:75"><call pos:start="201:31" pos:end="201:68"><name pos:start="201:31" pos:end="201:47">qemu_clock_get_ms</name><argument_list pos:start="201:48" pos:end="201:68">(<argument pos:start="201:49" pos:end="201:67"><expr pos:start="201:49" pos:end="201:67"><name pos:start="201:49" pos:end="201:67">QEMU_CLOCK_REALTIME</name></expr></argument>)</argument_list></call> <operator pos:start="201:70" pos:end="201:70">+</operator> <literal type="number" pos:start="201:72" pos:end="201:75">2000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
