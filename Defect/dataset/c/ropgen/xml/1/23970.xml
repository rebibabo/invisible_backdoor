<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23970.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">nal_send</name><parameter_list pos:start="1:21" pos:end="1:81">(<parameter pos:start="1:22" pos:end="1:40"><decl pos:start="1:22" pos:end="1:40"><type pos:start="1:22" pos:end="1:40"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">s1</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">buf</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:70"><decl pos:start="1:63" pos:end="1:70"><type pos:start="1:63" pos:end="1:70"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:70">size</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:80"><decl pos:start="1:73" pos:end="1:80"><type pos:start="1:73" pos:end="1:80"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:80">last</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:5">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">RTPMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:36">= <expr pos:start="5:24" pos:end="5:36"><name pos:start="5:24" pos:end="5:36"><name pos:start="5:24" pos:end="5:25">s1</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:91"><expr pos:start="9:5" pos:end="9:90"><call pos:start="9:5" pos:end="9:90"><name pos:start="9:5" pos:end="9:10">av_log</name><argument_list pos:start="9:11" pos:end="9:90">(<argument pos:start="9:12" pos:end="9:13"><expr pos:start="9:12" pos:end="9:13"><name pos:start="9:12" pos:end="9:13">s1</name></expr></argument>, <argument pos:start="9:16" pos:end="9:27"><expr pos:start="9:16" pos:end="9:27"><name pos:start="9:16" pos:end="9:27">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="9:30" pos:end="9:62"><expr pos:start="9:30" pos:end="9:62"><literal type="string" pos:start="9:30" pos:end="9:62">"Sending NAL %x of len %d M=%d\n"</literal></expr></argument>, <argument pos:start="9:65" pos:end="9:77"><expr pos:start="9:65" pos:end="9:77"><name pos:start="9:65" pos:end="9:70"><name pos:start="9:65" pos:end="9:67">buf</name><index pos:start="9:68" pos:end="9:70">[<expr pos:start="9:69" pos:end="9:69"><literal type="number" pos:start="9:69" pos:end="9:69">0</literal></expr>]</index></name> <operator pos:start="9:72" pos:end="9:72">&amp;</operator> <literal type="number" pos:start="9:74" pos:end="9:77">0x1F</literal></expr></argument>, <argument pos:start="9:80" pos:end="9:83"><expr pos:start="9:80" pos:end="9:83"><name pos:start="9:80" pos:end="9:83">size</name></expr></argument>, <argument pos:start="9:86" pos:end="9:89"><expr pos:start="9:86" pos:end="9:89"><name pos:start="9:86" pos:end="9:89">last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="115:5"><if pos:start="11:5" pos:end="59:5">if <condition pos:start="11:8" pos:end="11:36">(<expr pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:12">size</name> <operator pos:start="11:14" pos:end="11:15">&lt;=</operator> <name pos:start="11:17" pos:end="11:35"><name pos:start="11:17" pos:end="11:17">s</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:35">max_payload_size</name></name></expr>)</condition> <block pos:start="11:38" pos:end="59:5">{<block_content pos:start="13:9" pos:end="57:9">

        <decl_stmt pos:start="13:9" pos:end="13:48"><decl pos:start="13:9" pos:end="13:47"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:25">buffered_size</name> <init pos:start="13:27" pos:end="13:47">= <expr pos:start="13:29" pos:end="13:47"><name pos:start="13:29" pos:end="13:38"><name pos:start="13:29" pos:end="13:29">s</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:38">buf_ptr</name></name> <operator pos:start="13:40" pos:end="13:40">-</operator> <name pos:start="13:42" pos:end="13:47"><name pos:start="13:42" pos:end="13:42">s</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:47">buf</name></name></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:start="15:9" pos:end="15:67">// Flush buffered NAL units if the current unit doesn't fit</comment>

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:59">(<expr pos:start="17:13" pos:end="17:58"><name pos:start="17:13" pos:end="17:25">buffered_size</name> <operator pos:start="17:27" pos:end="17:27">+</operator> <literal type="number" pos:start="17:29" pos:end="17:31">2</literal> <operator pos:start="17:31" pos:end="17:31">+</operator> <name pos:start="17:33" pos:end="17:36">size</name> <operator pos:start="17:38" pos:end="17:38">&gt;</operator> <name pos:start="17:40" pos:end="17:58"><name pos:start="17:40" pos:end="17:40">s</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:58">max_payload_size</name></name></expr>)</condition> <block pos:start="17:61" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:30">

            <expr_stmt pos:start="19:13" pos:end="19:34"><expr pos:start="19:13" pos:end="19:33"><call pos:start="19:13" pos:end="19:33"><name pos:start="19:13" pos:end="19:26">flush_buffered</name><argument_list pos:start="19:27" pos:end="19:33">(<argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><name pos:start="19:28" pos:end="19:29">s1</name></expr></argument>, <argument pos:start="19:32" pos:end="19:32"><expr pos:start="19:32" pos:end="19:32"><literal type="number" pos:start="19:32" pos:end="19:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:30"><expr pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:25">buffered_size</name> <operator pos:start="21:27" pos:end="21:27">=</operator> <literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="line" pos:start="25:9" pos:end="25:73">// If we aren't using mode 0, and the NAL unit fits including the</comment>

        <comment type="line" pos:start="27:9" pos:end="27:71">// framing (2 bytes length, plus 1 byte for the STAP-A marker),</comment>

        <comment type="line" pos:start="29:9" pos:end="29:75">// write the unit to the buffer as a STAP-A packet, otherwise flush</comment>

        <comment type="line" pos:start="31:9" pos:end="31:34">// and send as single NAL.</comment>

        <if_stmt pos:start="33:9" pos:end="57:9"><if pos:start="33:9" pos:end="51:9">if <condition pos:start="33:12" pos:end="35:49">(<expr pos:start="33:13" pos:end="35:48"><name pos:start="33:13" pos:end="33:25">buffered_size</name> <operator pos:start="33:27" pos:end="33:27">+</operator> <literal type="number" pos:start="33:29" pos:end="33:31">3</literal> <operator pos:start="33:31" pos:end="33:31">+</operator> <name pos:start="33:33" pos:end="33:36">size</name> <operator pos:start="33:38" pos:end="33:39">&lt;=</operator> <name pos:start="33:41" pos:end="33:59"><name pos:start="33:41" pos:end="33:41">s</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:59">max_payload_size</name></name> <operator pos:start="33:61" pos:end="33:62">&amp;&amp;</operator>

            <operator pos:start="35:13" pos:end="35:13">!</operator><operator pos:start="35:14" pos:end="35:14">(</operator><name pos:start="35:15" pos:end="35:22"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:22">flags</name></name> <operator pos:start="35:24" pos:end="35:24">&amp;</operator> <name pos:start="35:26" pos:end="35:47">FF_RTP_FLAG_H264_MODE0</name><operator pos:start="35:48" pos:end="35:48">)</operator></expr>)</condition> <block pos:start="35:51" pos:end="51:9">{<block_content pos:start="37:13" pos:end="49:31">

            <if_stmt pos:start="37:13" pos:end="39:35"><if pos:start="37:13" pos:end="39:35">if <condition pos:start="37:16" pos:end="37:35">(<expr pos:start="37:17" pos:end="37:34"><name pos:start="37:17" pos:end="37:29">buffered_size</name> <operator pos:start="37:31" pos:end="37:32">==</operator> <literal type="number" pos:start="37:34" pos:end="37:34">0</literal></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:35"><block_content pos:start="39:17" pos:end="39:35">

                <expr_stmt pos:start="39:17" pos:end="39:35"><expr pos:start="39:17" pos:end="39:34"><operator pos:start="39:17" pos:end="39:17">*</operator><name pos:start="39:18" pos:end="39:27"><name pos:start="39:18" pos:end="39:18">s</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:27">buf_ptr</name></name><operator pos:start="39:28" pos:end="39:29">++</operator> <operator pos:start="39:31" pos:end="39:31">=</operator> <literal type="number" pos:start="39:33" pos:end="39:34">24</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:38"><expr pos:start="41:13" pos:end="41:37"><call pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:19">AV_WB16</name><argument_list pos:start="41:20" pos:end="41:37">(<argument pos:start="41:21" pos:end="41:30"><expr pos:start="41:21" pos:end="41:30"><name pos:start="41:21" pos:end="41:30"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:30">buf_ptr</name></name></expr></argument>, <argument pos:start="41:33" pos:end="41:36"><expr pos:start="41:33" pos:end="41:36"><name pos:start="41:33" pos:end="41:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:28"><expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">buf_ptr</name></name> <operator pos:start="43:24" pos:end="43:25">+=</operator> <literal type="number" pos:start="43:27" pos:end="43:27">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:42"><expr pos:start="45:13" pos:end="45:41"><call pos:start="45:13" pos:end="45:41"><name pos:start="45:13" pos:end="45:18">memcpy</name><argument_list pos:start="45:19" pos:end="45:41">(<argument pos:start="45:20" pos:end="45:29"><expr pos:start="45:20" pos:end="45:29"><name pos:start="45:20" pos:end="45:29"><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:29">buf_ptr</name></name></expr></argument>, <argument pos:start="45:32" pos:end="45:34"><expr pos:start="45:32" pos:end="45:34"><name pos:start="45:32" pos:end="45:34">buf</name></expr></argument>, <argument pos:start="45:37" pos:end="45:40"><expr pos:start="45:37" pos:end="45:40"><name pos:start="45:37" pos:end="45:40">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:31"><expr pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">buf_ptr</name></name> <operator pos:start="47:24" pos:end="47:25">+=</operator> <name pos:start="47:27" pos:end="47:30">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:31"><expr pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:28">buffered_nals</name></name><operator pos:start="49:29" pos:end="49:30">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="57:9">else <block pos:start="51:16" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:50">

            <expr_stmt pos:start="53:13" pos:end="53:34"><expr pos:start="53:13" pos:end="53:33"><call pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:26">flush_buffered</name><argument_list pos:start="53:27" pos:end="53:33">(<argument pos:start="53:28" pos:end="53:29"><expr pos:start="53:28" pos:end="53:29"><name pos:start="53:28" pos:end="53:29">s1</name></expr></argument>, <argument pos:start="53:32" pos:end="53:32"><expr pos:start="53:32" pos:end="53:32"><literal type="number" pos:start="53:32" pos:end="53:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:50"><expr pos:start="55:13" pos:end="55:49"><call pos:start="55:13" pos:end="55:49"><name pos:start="55:13" pos:end="55:28">ff_rtp_send_data</name><argument_list pos:start="55:29" pos:end="55:49">(<argument pos:start="55:30" pos:end="55:31"><expr pos:start="55:30" pos:end="55:31"><name pos:start="55:30" pos:end="55:31">s1</name></expr></argument>, <argument pos:start="55:34" pos:end="55:36"><expr pos:start="55:34" pos:end="55:36"><name pos:start="55:34" pos:end="55:36">buf</name></expr></argument>, <argument pos:start="55:39" pos:end="55:42"><expr pos:start="55:39" pos:end="55:42"><name pos:start="55:39" pos:end="55:42">size</name></expr></argument>, <argument pos:start="55:45" pos:end="55:48"><expr pos:start="55:45" pos:end="55:48"><name pos:start="55:45" pos:end="55:48">last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="115:5">else <block pos:start="59:12" pos:end="115:5">{<block_content pos:start="61:9" pos:end="113:53">

        <decl_stmt pos:start="61:9" pos:end="61:37"><decl pos:start="61:9" pos:end="61:36"><type pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:15">uint8_t</name></type> <name pos:start="61:17" pos:end="61:20">type</name> <init pos:start="61:22" pos:end="61:36">= <expr pos:start="61:24" pos:end="61:36"><name pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:26">buf</name><index pos:start="61:27" pos:end="61:29">[<expr pos:start="61:28" pos:end="61:28"><literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr>]</index></name> <operator pos:start="61:31" pos:end="61:31">&amp;</operator> <literal type="number" pos:start="61:33" pos:end="61:36">0x1F</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:36"><decl pos:start="63:9" pos:end="63:35"><type pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:15">uint8_t</name></type> <name pos:start="63:17" pos:end="63:19">nri</name> <init pos:start="63:21" pos:end="63:35">= <expr pos:start="63:23" pos:end="63:35"><name pos:start="63:23" pos:end="63:28"><name pos:start="63:23" pos:end="63:25">buf</name><index pos:start="63:26" pos:end="63:28">[<expr pos:start="63:27" pos:end="63:27"><literal type="number" pos:start="63:27" pos:end="63:27">0</literal></expr>]</index></name> <operator pos:start="63:30" pos:end="63:30">&amp;</operator> <literal type="number" pos:start="63:32" pos:end="63:35">0x60</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:30"><expr pos:start="67:9" pos:end="67:29"><call pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:22">flush_buffered</name><argument_list pos:start="67:23" pos:end="67:29">(<argument pos:start="67:24" pos:end="67:25"><expr pos:start="67:24" pos:end="67:25"><name pos:start="67:24" pos:end="67:25">s1</name></expr></argument>, <argument pos:start="67:28" pos:end="67:28"><expr pos:start="67:28" pos:end="67:28"><literal type="number" pos:start="67:28" pos:end="67:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="79:9"><if pos:start="69:9" pos:end="79:9">if <condition pos:start="69:12" pos:end="69:46">(<expr pos:start="69:13" pos:end="69:45"><name pos:start="69:13" pos:end="69:20"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:20">flags</name></name> <operator pos:start="69:22" pos:end="69:22">&amp;</operator> <name pos:start="69:24" pos:end="69:45">FF_RTP_FLAG_H264_MODE0</name></expr>)</condition> <block pos:start="69:48" pos:end="79:9">{<block_content pos:start="71:13" pos:end="77:19">

            <expr_stmt pos:start="71:13" pos:end="75:61"><expr pos:start="71:13" pos:end="75:60"><call pos:start="71:13" pos:end="75:60"><name pos:start="71:13" pos:end="71:18">av_log</name><argument_list pos:start="71:19" pos:end="75:60">(<argument pos:start="71:20" pos:end="71:21"><expr pos:start="71:20" pos:end="71:21"><name pos:start="71:20" pos:end="71:21">s1</name></expr></argument>, <argument pos:start="71:24" pos:end="71:35"><expr pos:start="71:24" pos:end="71:35"><name pos:start="71:24" pos:end="71:35">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="73:20" pos:end="73:63"><expr pos:start="73:20" pos:end="73:63"><literal type="string" pos:start="73:20" pos:end="73:63">"NAL size %d &gt; %d, try -slice-max-size %d\n"</literal></expr></argument>, <argument pos:start="73:66" pos:end="73:69"><expr pos:start="73:66" pos:end="73:69"><name pos:start="73:66" pos:end="73:69">size</name></expr></argument>,

                   <argument pos:start="75:20" pos:end="75:38"><expr pos:start="75:20" pos:end="75:38"><name pos:start="75:20" pos:end="75:38"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:38">max_payload_size</name></name></expr></argument>, <argument pos:start="75:41" pos:end="75:59"><expr pos:start="75:41" pos:end="75:59"><name pos:start="75:41" pos:end="75:59"><name pos:start="75:41" pos:end="75:41">s</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:59">max_payload_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="77:13" pos:end="77:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:82"><expr pos:start="81:9" pos:end="81:81"><call pos:start="81:9" pos:end="81:81"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:81">(<argument pos:start="81:16" pos:end="81:17"><expr pos:start="81:16" pos:end="81:17"><name pos:start="81:16" pos:end="81:17">s1</name></expr></argument>, <argument pos:start="81:20" pos:end="81:31"><expr pos:start="81:20" pos:end="81:31"><name pos:start="81:20" pos:end="81:31">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="81:34" pos:end="81:53"><expr pos:start="81:34" pos:end="81:53"><literal type="string" pos:start="81:34" pos:end="81:53">"NAL size %d &gt; %d\n"</literal></expr></argument>, <argument pos:start="81:56" pos:end="81:59"><expr pos:start="81:56" pos:end="81:59"><name pos:start="81:56" pos:end="81:59">size</name></expr></argument>, <argument pos:start="81:62" pos:end="81:80"><expr pos:start="81:62" pos:end="81:80"><name pos:start="81:62" pos:end="81:80"><name pos:start="81:62" pos:end="81:62">s</name><operator pos:start="81:63" pos:end="81:64">-&gt;</operator><name pos:start="81:65" pos:end="81:80">max_payload_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:23"><expr pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:14">buf</name><index pos:start="83:15" pos:end="83:17">[<expr pos:start="83:16" pos:end="83:16"><literal type="number" pos:start="83:16" pos:end="83:16">0</literal></expr>]</index></name> <operator pos:start="83:19" pos:end="83:19">=</operator> <literal type="number" pos:start="83:21" pos:end="83:22">28</literal></expr>;</expr_stmt>        <comment type="block" pos:start="83:32" pos:end="83:70">/* FU Indicator; Type = 28 ---&gt; FU-A */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:25"><expr pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:14">buf</name><index pos:start="85:15" pos:end="85:17">[<expr pos:start="85:16" pos:end="85:16"><literal type="number" pos:start="85:16" pos:end="85:16">0</literal></expr>]</index></name> <operator pos:start="85:19" pos:end="85:20">|=</operator> <name pos:start="85:22" pos:end="85:24">nri</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:25"><expr pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:17"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:14">buf</name><index pos:start="87:15" pos:end="87:17">[<expr pos:start="87:16" pos:end="87:16"><literal type="number" pos:start="87:16" pos:end="87:16">1</literal></expr>]</index></name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:24">type</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:28"><expr pos:start="89:9" pos:end="89:27"><name pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:14">buf</name><index pos:start="89:15" pos:end="89:17">[<expr pos:start="89:16" pos:end="89:16"><literal type="number" pos:start="89:16" pos:end="89:16">1</literal></expr>]</index></name> <operator pos:start="89:19" pos:end="89:20">|=</operator> <literal type="number" pos:start="89:22" pos:end="89:22">1</literal> <operator pos:start="89:24" pos:end="89:25">&lt;&lt;</operator> <literal type="number" pos:start="89:27" pos:end="89:27">7</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:17"><expr pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:11">buf</name> <operator pos:start="91:13" pos:end="91:14">+=</operator> <literal type="number" pos:start="91:16" pos:end="91:16">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:18"><expr pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:12">size</name> <operator pos:start="93:14" pos:end="93:15">-=</operator> <literal type="number" pos:start="93:17" pos:end="93:17">1</literal></expr>;</expr_stmt>

        <while pos:start="95:9" pos:end="107:9">while <condition pos:start="95:15" pos:end="95:46">(<expr pos:start="95:16" pos:end="95:45"><name pos:start="95:16" pos:end="95:19">size</name> <operator pos:start="95:21" pos:end="95:21">+</operator> <literal type="number" pos:start="95:23" pos:end="95:23">2</literal> <operator pos:start="95:25" pos:end="95:25">&gt;</operator> <name pos:start="95:27" pos:end="95:45"><name pos:start="95:27" pos:end="95:27">s</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:45">max_payload_size</name></name></expr>)</condition> <block pos:start="95:48" pos:end="107:9">{<block_content pos:start="97:13" pos:end="105:35">

            <expr_stmt pos:start="97:13" pos:end="97:61"><expr pos:start="97:13" pos:end="97:60"><call pos:start="97:13" pos:end="97:60"><name pos:start="97:13" pos:end="97:18">memcpy</name><argument_list pos:start="97:19" pos:end="97:60">(<argument pos:start="97:20" pos:end="97:29"><expr pos:start="97:20" pos:end="97:29"><operator pos:start="97:20" pos:end="97:20">&amp;</operator><name pos:start="97:21" pos:end="97:29"><name pos:start="97:21" pos:end="97:21">s</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:26">buf</name><index pos:start="97:27" pos:end="97:29">[<expr pos:start="97:28" pos:end="97:28"><literal type="number" pos:start="97:28" pos:end="97:28">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="97:32" pos:end="97:34"><expr pos:start="97:32" pos:end="97:34"><name pos:start="97:32" pos:end="97:34">buf</name></expr></argument>, <argument pos:start="97:37" pos:end="97:59"><expr pos:start="97:37" pos:end="97:59"><name pos:start="97:37" pos:end="97:55"><name pos:start="97:37" pos:end="97:37">s</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:55">max_payload_size</name></name> <operator pos:start="97:57" pos:end="97:57">-</operator> <literal type="number" pos:start="97:59" pos:end="97:59">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:65"><expr pos:start="99:13" pos:end="99:64"><call pos:start="99:13" pos:end="99:64"><name pos:start="99:13" pos:end="99:28">ff_rtp_send_data</name><argument_list pos:start="99:29" pos:end="99:64">(<argument pos:start="99:30" pos:end="99:31"><expr pos:start="99:30" pos:end="99:31"><name pos:start="99:30" pos:end="99:31">s1</name></expr></argument>, <argument pos:start="99:34" pos:end="99:39"><expr pos:start="99:34" pos:end="99:39"><name pos:start="99:34" pos:end="99:39"><name pos:start="99:34" pos:end="99:34">s</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:39">buf</name></name></expr></argument>, <argument pos:start="99:42" pos:end="99:60"><expr pos:start="99:42" pos:end="99:60"><name pos:start="99:42" pos:end="99:60"><name pos:start="99:42" pos:end="99:42">s</name><operator pos:start="99:43" pos:end="99:44">-&gt;</operator><name pos:start="99:45" pos:end="99:60">max_payload_size</name></name></expr></argument>, <argument pos:start="99:63" pos:end="99:63"><expr pos:start="99:63" pos:end="99:63"><literal type="number" pos:start="99:63" pos:end="99:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:43"><expr pos:start="101:13" pos:end="101:42"><name pos:start="101:13" pos:end="101:15">buf</name> <operator pos:start="101:17" pos:end="101:18">+=</operator> <name pos:start="101:20" pos:end="101:38"><name pos:start="101:20" pos:end="101:20">s</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:38">max_payload_size</name></name> <operator pos:start="101:40" pos:end="101:40">-</operator> <literal type="number" pos:start="101:42" pos:end="101:42">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:44"><expr pos:start="103:13" pos:end="103:43"><name pos:start="103:13" pos:end="103:16">size</name> <operator pos:start="103:18" pos:end="103:19">-=</operator> <name pos:start="103:21" pos:end="103:39"><name pos:start="103:21" pos:end="103:21">s</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:39">max_payload_size</name></name> <operator pos:start="103:41" pos:end="103:41">-</operator> <literal type="number" pos:start="103:43" pos:end="103:43">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:35"><expr pos:start="105:13" pos:end="105:34"><name pos:start="105:13" pos:end="105:21"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:18">buf</name><index pos:start="105:19" pos:end="105:21">[<expr pos:start="105:20" pos:end="105:20"><literal type="number" pos:start="105:20" pos:end="105:20">1</literal></expr>]</index></name> <operator pos:start="105:23" pos:end="105:24">&amp;=</operator> <operator pos:start="105:26" pos:end="105:26">~</operator><operator pos:start="105:27" pos:end="105:27">(</operator><literal type="number" pos:start="105:28" pos:end="105:28">1</literal> <operator pos:start="105:30" pos:end="105:31">&lt;&lt;</operator> <literal type="number" pos:start="105:33" pos:end="105:33">7</literal><operator pos:start="105:34" pos:end="105:34">)</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="109:9" pos:end="109:28"><expr pos:start="109:9" pos:end="109:27"><name pos:start="109:9" pos:end="109:17"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:14">buf</name><index pos:start="109:15" pos:end="109:17">[<expr pos:start="109:16" pos:end="109:16"><literal type="number" pos:start="109:16" pos:end="109:16">1</literal></expr>]</index></name> <operator pos:start="109:19" pos:end="109:20">|=</operator> <literal type="number" pos:start="109:22" pos:end="109:22">1</literal> <operator pos:start="109:24" pos:end="109:25">&lt;&lt;</operator> <literal type="number" pos:start="109:27" pos:end="109:27">6</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:38"><expr pos:start="111:9" pos:end="111:37"><call pos:start="111:9" pos:end="111:37"><name pos:start="111:9" pos:end="111:14">memcpy</name><argument_list pos:start="111:15" pos:end="111:37">(<argument pos:start="111:16" pos:end="111:25"><expr pos:start="111:16" pos:end="111:25"><operator pos:start="111:16" pos:end="111:16">&amp;</operator><name pos:start="111:17" pos:end="111:25"><name pos:start="111:17" pos:end="111:17">s</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:22">buf</name><index pos:start="111:23" pos:end="111:25">[<expr pos:start="111:24" pos:end="111:24"><literal type="number" pos:start="111:24" pos:end="111:24">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="111:28" pos:end="111:30"><expr pos:start="111:28" pos:end="111:30"><name pos:start="111:28" pos:end="111:30">buf</name></expr></argument>, <argument pos:start="111:33" pos:end="111:36"><expr pos:start="111:33" pos:end="111:36"><name pos:start="111:33" pos:end="111:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:53"><expr pos:start="113:9" pos:end="113:52"><call pos:start="113:9" pos:end="113:52"><name pos:start="113:9" pos:end="113:24">ff_rtp_send_data</name><argument_list pos:start="113:25" pos:end="113:52">(<argument pos:start="113:26" pos:end="113:27"><expr pos:start="113:26" pos:end="113:27"><name pos:start="113:26" pos:end="113:27">s1</name></expr></argument>, <argument pos:start="113:30" pos:end="113:35"><expr pos:start="113:30" pos:end="113:35"><name pos:start="113:30" pos:end="113:35"><name pos:start="113:30" pos:end="113:30">s</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:35">buf</name></name></expr></argument>, <argument pos:start="113:38" pos:end="113:45"><expr pos:start="113:38" pos:end="113:45"><name pos:start="113:38" pos:end="113:41">size</name> <operator pos:start="113:43" pos:end="113:43">+</operator> <literal type="number" pos:start="113:45" pos:end="113:45">2</literal></expr></argument>, <argument pos:start="113:48" pos:end="113:51"><expr pos:start="113:48" pos:end="113:51"><name pos:start="113:48" pos:end="113:51">last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
