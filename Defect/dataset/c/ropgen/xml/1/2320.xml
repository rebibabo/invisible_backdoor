<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2320.c" pos:tabs="8"><function pos:start="1:1" pos:end="161:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:27">h_enter</name><parameter_list pos:start="1:28" pos:end="3:68">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:39">CPUPPCState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:69"><decl pos:start="1:47" pos:end="1:69"><type pos:start="1:47" pos:end="1:69"><name pos:start="1:47" pos:end="1:62">sPAPREnvironment</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">spapr</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:47"><decl pos:start="3:29" pos:end="3:47"><type pos:start="3:29" pos:end="3:47"><name pos:start="3:29" pos:end="3:40">target_ulong</name></type> <name pos:start="3:42" pos:end="3:47">opcode</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:67"><decl pos:start="3:50" pos:end="3:67"><type pos:start="3:50" pos:end="3:67"><name pos:start="3:50" pos:end="3:61">target_ulong</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:67">args</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="161:1">{<block_content pos:start="7:5" pos:end="159:21">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:22">flags</name> <init pos:start="7:24" pos:end="7:32">= <expr pos:start="7:26" pos:end="7:32"><name pos:start="7:26" pos:end="7:32"><name pos:start="7:26" pos:end="7:29">args</name><index pos:start="7:30" pos:end="7:32">[<expr pos:start="7:31" pos:end="7:31"><literal type="number" pos:start="7:31" pos:end="7:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:26">pte_index</name> <init pos:start="9:28" pos:end="9:36">= <expr pos:start="9:30" pos:end="9:36"><name pos:start="9:30" pos:end="9:36"><name pos:start="9:30" pos:end="9:33">args</name><index pos:start="9:34" pos:end="9:36">[<expr pos:start="9:35" pos:end="9:35"><literal type="number" pos:start="9:35" pos:end="9:35">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:21">pteh</name> <init pos:start="11:23" pos:end="11:31">= <expr pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:28">args</name><index pos:start="11:29" pos:end="11:31">[<expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:21">ptel</name> <init pos:start="13:23" pos:end="13:31">= <expr pos:start="13:25" pos:end="13:31"><name pos:start="13:25" pos:end="13:31"><name pos:start="13:25" pos:end="13:28">args</name><index pos:start="13:29" pos:end="13:31">[<expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:27">page_shift</name> <init pos:start="15:29" pos:end="15:32">= <expr pos:start="15:31" pos:end="15:32"><literal type="number" pos:start="15:31" pos:end="15:32">12</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">target_ulong</name></type> <name pos:start="17:18" pos:end="17:22">raddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">target_ulong</name></type> <name pos:start="19:18" pos:end="19:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:17">hpte</name></decl>;</decl_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:46">/* only handle 4k and 16M pages for now */</comment>

    <if_stmt pos:start="27:5" pos:end="59:5"><if pos:start="27:5" pos:end="59:5">if <condition pos:start="27:8" pos:end="27:28">(<expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:12">pteh</name> <operator pos:start="27:14" pos:end="27:14">&amp;</operator> <name pos:start="27:16" pos:end="27:27">HPTE_V_LARGE</name></expr>)</condition> <block pos:start="27:30" pos:end="59:5">{<block_content pos:start="39:9" pos:end="57:9">

<cpp:if pos:start="29:1" pos:end="29:5">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:5"><literal type="number" pos:start="29:5" pos:end="29:5">0</literal></expr></cpp:if> <comment type="block" pos:start="29:7" pos:end="29:42">/* We don't support 64k pages yet */</comment>

        if ((ptel &amp; 0xf000) == 0x1000) {

            <comment type="block" pos:start="33:13" pos:end="33:26">/* 64k page */</comment>

        } else

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="39:9" pos:end="57:9"><if pos:start="39:9" pos:end="53:9">if <condition pos:start="39:12" pos:end="39:34">(<expr pos:start="39:13" pos:end="39:33"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:17">ptel</name> <operator pos:start="39:19" pos:end="39:19">&amp;</operator> <literal type="number" pos:start="39:21" pos:end="39:27">0xff000</literal><operator pos:start="39:28" pos:end="39:28">)</operator> <operator pos:start="39:30" pos:end="39:31">==</operator> <literal type="number" pos:start="39:33" pos:end="39:33">0</literal></expr>)</condition> <block pos:start="39:36" pos:end="53:9">{<block_content pos:start="43:13" pos:end="51:13">

            <comment type="block" pos:start="41:13" pos:end="41:26">/* 16M page */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:28"><expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:22">page_shift</name> <operator pos:start="43:24" pos:end="43:24">=</operator> <literal type="number" pos:start="43:26" pos:end="43:27">24</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="45:13" pos:end="45:56">/* lowest AVA bit must be 0 for 16M pages */</comment>

            <if_stmt pos:start="47:13" pos:end="51:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:28">(<expr pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:20">pteh</name> <operator pos:start="47:22" pos:end="47:22">&amp;</operator> <literal type="number" pos:start="47:24" pos:end="47:27">0x80</literal></expr>)</condition> <block pos:start="47:30" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:35">

                <return pos:start="49:17" pos:end="49:35">return <expr pos:start="49:24" pos:end="49:34"><name pos:start="49:24" pos:end="49:34">H_PARAMETER</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="57:9">else <block pos:start="53:16" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:31">

            <return pos:start="55:13" pos:end="55:31">return <expr pos:start="55:20" pos:end="55:30"><name pos:start="55:20" pos:end="55:30">H_PARAMETER</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:62"><expr pos:start="63:5" pos:end="63:61"><name pos:start="63:5" pos:end="63:9">raddr</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:17">ptel</name> <operator pos:start="63:19" pos:end="63:19">&amp;</operator> <name pos:start="63:21" pos:end="63:30">HPTE_R_RPN</name><operator pos:start="63:31" pos:end="63:31">)</operator> <operator pos:start="63:33" pos:end="63:33">&amp;</operator> <operator pos:start="63:35" pos:end="63:35">~</operator><operator pos:start="63:36" pos:end="63:36">(</operator><operator pos:start="63:37" pos:end="63:37">(</operator><literal type="number" pos:start="63:38" pos:end="63:41">1ULL</literal> <operator pos:start="63:43" pos:end="63:44">&lt;&lt;</operator> <name pos:start="63:46" pos:end="63:55">page_shift</name><operator pos:start="63:56" pos:end="63:56">)</operator> <operator pos:start="63:58" pos:end="63:58">-</operator> <literal type="number" pos:start="63:60" pos:end="63:60">1</literal><operator pos:start="63:61" pos:end="63:61">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="93:5"><if pos:start="67:5" pos:end="77:5">if <condition pos:start="67:8" pos:end="67:33">(<expr pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:13">raddr</name> <operator pos:start="67:15" pos:end="67:15">&lt;</operator> <name pos:start="67:17" pos:end="67:32"><name pos:start="67:17" pos:end="67:21">spapr</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:32">ram_limit</name></name></expr>)</condition> <block pos:start="67:35" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:9">

        <comment type="block" pos:start="69:9" pos:end="69:49">/* Regular RAM - should have WIMG=0010 */</comment>

        <if_stmt pos:start="71:9" pos:end="75:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:45">(<expr pos:start="71:13" pos:end="71:44"><operator pos:start="71:13" pos:end="71:13">(</operator><name pos:start="71:14" pos:end="71:17">ptel</name> <operator pos:start="71:19" pos:end="71:19">&amp;</operator> <name pos:start="71:21" pos:end="71:31">HPTE_R_WIMG</name><operator pos:start="71:32" pos:end="71:32">)</operator> <operator pos:start="71:34" pos:end="71:35">!=</operator> <name pos:start="71:37" pos:end="71:44">HPTE_R_M</name></expr>)</condition> <block pos:start="71:47" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:31">

            <return pos:start="73:13" pos:end="73:31">return <expr pos:start="73:20" pos:end="73:30"><name pos:start="73:20" pos:end="73:30">H_PARAMETER</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="93:5">else <block pos:start="77:12" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:9">

        <comment type="block" pos:start="79:9" pos:end="79:38">/* Looks like an IO address */</comment>

        <comment type="block" pos:start="81:9" pos:end="83:63">/* FIXME: What WIMG combinations could be sensible for IO?

         * For now we allow WIMG=010x, but are there others? */</comment>

        <comment type="block" pos:start="85:9" pos:end="85:69">/* FIXME: Should we check against registered IO addresses? */</comment>

        <if_stmt pos:start="87:9" pos:end="91:9"><if pos:start="87:9" pos:end="91:9">if <condition pos:start="87:12" pos:end="87:66">(<expr pos:start="87:13" pos:end="87:65"><operator pos:start="87:13" pos:end="87:13">(</operator><name pos:start="87:14" pos:end="87:17">ptel</name> <operator pos:start="87:19" pos:end="87:19">&amp;</operator> <operator pos:start="87:21" pos:end="87:21">(</operator><name pos:start="87:22" pos:end="87:29">HPTE_R_W</name> <operator pos:start="87:31" pos:end="87:31">|</operator> <name pos:start="87:33" pos:end="87:40">HPTE_R_I</name> <operator pos:start="87:42" pos:end="87:42">|</operator> <name pos:start="87:44" pos:end="87:51">HPTE_R_M</name><operator pos:start="87:52" pos:end="87:52">)</operator><operator pos:start="87:53" pos:end="87:53">)</operator> <operator pos:start="87:55" pos:end="87:56">!=</operator> <name pos:start="87:58" pos:end="87:65">HPTE_R_I</name></expr>)</condition> <block pos:start="87:68" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:31">

            <return pos:start="89:13" pos:end="89:31">return <expr pos:start="89:20" pos:end="89:30"><name pos:start="89:20" pos:end="89:30">H_PARAMETER</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:21"><expr pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:8">pteh</name> <operator pos:start="97:10" pos:end="97:11">&amp;=</operator> <operator pos:start="97:13" pos:end="97:13">~</operator><literal type="number" pos:start="97:14" pos:end="97:20">0x60ULL</literal></expr>;</expr_stmt>



    <if_stmt pos:start="101:5" pos:end="105:5"><if pos:start="101:5" pos:end="105:5">if <condition pos:start="101:8" pos:end="101:57">(<expr pos:start="101:9" pos:end="101:56"><operator pos:start="101:9" pos:end="101:9">(</operator><name pos:start="101:10" pos:end="101:18">pte_index</name> <operator pos:start="101:20" pos:end="101:20">*</operator> <name pos:start="101:22" pos:end="101:37">HASH_PTE_SIZE_64</name><operator pos:start="101:38" pos:end="101:38">)</operator> <operator pos:start="101:40" pos:end="101:40">&amp;</operator> <operator pos:start="101:42" pos:end="101:42">~</operator><name pos:start="101:43" pos:end="101:56"><name pos:start="101:43" pos:end="101:45">env</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:56">htab_mask</name></name></expr>)</condition> <block pos:start="101:59" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:27">

        <return pos:start="103:9" pos:end="103:27">return <expr pos:start="103:16" pos:end="103:26"><name pos:start="103:16" pos:end="103:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="145:5"><if pos:start="107:5" pos:end="133:5">if <condition pos:start="107:8" pos:end="107:39">(<expr pos:start="107:9" pos:end="107:38"><call pos:start="107:9" pos:end="107:38"><name pos:start="107:9" pos:end="107:14">likely</name><argument_list pos:start="107:15" pos:end="107:38">(<argument pos:start="107:16" pos:end="107:37"><expr pos:start="107:16" pos:end="107:37"><operator pos:start="107:16" pos:end="107:16">(</operator><name pos:start="107:17" pos:end="107:21">flags</name> <operator pos:start="107:23" pos:end="107:23">&amp;</operator> <name pos:start="107:25" pos:end="107:31">H_EXACT</name><operator pos:start="107:32" pos:end="107:32">)</operator> <operator pos:start="107:34" pos:end="107:35">==</operator> <literal type="number" pos:start="107:37" pos:end="107:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:41" pos:end="133:5">{<block_content pos:start="109:9" pos:end="131:9">

        <expr_stmt pos:start="109:9" pos:end="109:27"><expr pos:start="109:9" pos:end="109:26"><name pos:start="109:9" pos:end="109:17">pte_index</name> <operator pos:start="109:19" pos:end="109:20">&amp;=</operator> <operator pos:start="109:22" pos:end="109:22">~</operator><literal type="number" pos:start="109:23" pos:end="109:26">7ULL</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:67"><expr pos:start="111:9" pos:end="111:66"><name pos:start="111:9" pos:end="111:12">hpte</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <name pos:start="111:16" pos:end="111:33"><name pos:start="111:16" pos:end="111:18">env</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:33">external_htab</name></name> <operator pos:start="111:35" pos:end="111:35">+</operator> <operator pos:start="111:37" pos:end="111:37">(</operator><name pos:start="111:38" pos:end="111:46">pte_index</name> <operator pos:start="111:48" pos:end="111:48">*</operator> <name pos:start="111:50" pos:end="111:65">HASH_PTE_SIZE_64</name><operator pos:start="111:66" pos:end="111:66">)</operator></expr>;</expr_stmt>

        <for pos:start="113:9" pos:end="131:9">for <control pos:start="113:13" pos:end="113:26">(<init pos:start="113:14" pos:end="113:19"><expr pos:start="113:14" pos:end="113:18"><name pos:start="113:14" pos:end="113:14">i</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <literal type="number" pos:start="113:18" pos:end="113:18">0</literal></expr>;</init> <condition pos:start="113:21" pos:end="113:21">;</condition> <incr pos:start="113:23" pos:end="113:25"><expr pos:start="113:23" pos:end="113:25"><operator pos:start="113:23" pos:end="113:24">++</operator><name pos:start="113:25" pos:end="113:25">i</name></expr></incr>)</control> <block pos:start="113:28" pos:end="131:9">{<block_content pos:start="115:13" pos:end="129:37">

            <if_stmt pos:start="115:13" pos:end="119:13"><if pos:start="115:13" pos:end="119:13">if <condition pos:start="115:16" pos:end="115:23">(<expr pos:start="115:17" pos:end="115:22"><name pos:start="115:17" pos:end="115:17">i</name> <operator pos:start="115:19" pos:end="115:20">==</operator> <literal type="number" pos:start="115:22" pos:end="115:22">8</literal></expr>)</condition> <block pos:start="115:25" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:35">

                <return pos:start="117:17" pos:end="117:35">return <expr pos:start="117:24" pos:end="117:34"><name pos:start="117:24" pos:end="117:34">H_PTEG_FULL</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="121:13" pos:end="127:13"><if pos:start="121:13" pos:end="127:13">if <condition pos:start="121:16" pos:end="123:62">(<expr pos:start="121:17" pos:end="123:61"><operator pos:start="121:17" pos:end="121:17">(</operator><operator pos:start="121:18" pos:end="121:18">(</operator><call pos:start="121:19" pos:end="121:29"><name pos:start="121:19" pos:end="121:23">ldq_p</name><argument_list pos:start="121:24" pos:end="121:29">(<argument pos:start="121:25" pos:end="121:28"><expr pos:start="121:25" pos:end="121:28"><name pos:start="121:25" pos:end="121:28">hpte</name></expr></argument>)</argument_list></call> <operator pos:start="121:31" pos:end="121:31">&amp;</operator> <name pos:start="121:33" pos:end="121:44">HPTE_V_VALID</name><operator pos:start="121:45" pos:end="121:45">)</operator> <operator pos:start="121:47" pos:end="121:48">==</operator> <literal type="number" pos:start="121:50" pos:end="121:50">0</literal><operator pos:start="121:51" pos:end="121:51">)</operator> <operator pos:start="121:53" pos:end="121:54">&amp;&amp;</operator>

                <call pos:start="123:17" pos:end="123:61"><name pos:start="123:17" pos:end="123:25">lock_hpte</name><argument_list pos:start="123:26" pos:end="123:61">(<argument pos:start="123:27" pos:end="123:30"><expr pos:start="123:27" pos:end="123:30"><name pos:start="123:27" pos:end="123:30">hpte</name></expr></argument>, <argument pos:start="123:33" pos:end="123:60"><expr pos:start="123:33" pos:end="123:60"><name pos:start="123:33" pos:end="123:45">HPTE_V_HVLOCK</name> <operator pos:start="123:47" pos:end="123:47">|</operator> <name pos:start="123:49" pos:end="123:60">HPTE_V_VALID</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:64" pos:end="127:13">{<block_content pos:start="125:17" pos:end="125:22">

                <break pos:start="125:17" pos:end="125:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:37"><expr pos:start="129:13" pos:end="129:36"><name pos:start="129:13" pos:end="129:16">hpte</name> <operator pos:start="129:18" pos:end="129:19">+=</operator> <name pos:start="129:21" pos:end="129:36">HASH_PTE_SIZE_64</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="133:7" pos:end="145:5">else <block pos:start="133:12" pos:end="145:5">{<block_content pos:start="135:9" pos:end="143:9">

        <expr_stmt pos:start="135:9" pos:end="135:14"><expr pos:start="135:9" pos:end="135:13"><name pos:start="135:9" pos:end="135:9">i</name> <operator pos:start="135:11" pos:end="135:11">=</operator> <literal type="number" pos:start="135:13" pos:end="135:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:67"><expr pos:start="137:9" pos:end="137:66"><name pos:start="137:9" pos:end="137:12">hpte</name> <operator pos:start="137:14" pos:end="137:14">=</operator> <name pos:start="137:16" pos:end="137:33"><name pos:start="137:16" pos:end="137:18">env</name><operator pos:start="137:19" pos:end="137:20">-&gt;</operator><name pos:start="137:21" pos:end="137:33">external_htab</name></name> <operator pos:start="137:35" pos:end="137:35">+</operator> <operator pos:start="137:37" pos:end="137:37">(</operator><name pos:start="137:38" pos:end="137:46">pte_index</name> <operator pos:start="137:48" pos:end="137:48">*</operator> <name pos:start="137:50" pos:end="137:65">HASH_PTE_SIZE_64</name><operator pos:start="137:66" pos:end="137:66">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="143:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:59">(<expr pos:start="139:13" pos:end="139:58"><operator pos:start="139:13" pos:end="139:13">!</operator><call pos:start="139:14" pos:end="139:58"><name pos:start="139:14" pos:end="139:22">lock_hpte</name><argument_list pos:start="139:23" pos:end="139:58">(<argument pos:start="139:24" pos:end="139:27"><expr pos:start="139:24" pos:end="139:27"><name pos:start="139:24" pos:end="139:27">hpte</name></expr></argument>, <argument pos:start="139:30" pos:end="139:57"><expr pos:start="139:30" pos:end="139:57"><name pos:start="139:30" pos:end="139:42">HPTE_V_HVLOCK</name> <operator pos:start="139:44" pos:end="139:44">|</operator> <name pos:start="139:46" pos:end="139:57">HPTE_V_VALID</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:61" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:31">

            <return pos:start="141:13" pos:end="141:31">return <expr pos:start="141:20" pos:end="141:30"><name pos:start="141:20" pos:end="141:30">H_PTEG_FULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:45"><expr pos:start="147:5" pos:end="147:44"><call pos:start="147:5" pos:end="147:44"><name pos:start="147:5" pos:end="147:9">stq_p</name><argument_list pos:start="147:10" pos:end="147:44">(<argument pos:start="147:11" pos:end="147:37"><expr pos:start="147:11" pos:end="147:37"><name pos:start="147:11" pos:end="147:14">hpte</name> <operator pos:start="147:16" pos:end="147:16">+</operator> <operator pos:start="147:18" pos:end="147:18">(</operator><name pos:start="147:19" pos:end="147:34">HASH_PTE_SIZE_64</name><operator pos:start="147:35" pos:end="147:35">/</operator><literal type="number" pos:start="147:36" pos:end="147:36">2</literal><operator pos:start="147:37" pos:end="147:37">)</operator></expr></argument>, <argument pos:start="147:40" pos:end="147:43"><expr pos:start="147:40" pos:end="147:43"><name pos:start="147:40" pos:end="147:43">ptel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="149:5" pos:end="149:61">/* eieio();  FIXME: need some sort of barrier for smp? */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:22"><expr pos:start="151:5" pos:end="151:21"><call pos:start="151:5" pos:end="151:21"><name pos:start="151:5" pos:end="151:9">stq_p</name><argument_list pos:start="151:10" pos:end="151:21">(<argument pos:start="151:11" pos:end="151:14"><expr pos:start="151:11" pos:end="151:14"><name pos:start="151:11" pos:end="151:14">hpte</name></expr></argument>, <argument pos:start="151:17" pos:end="151:20"><expr pos:start="151:17" pos:end="151:20"><name pos:start="151:17" pos:end="151:20">pteh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="155:5" pos:end="155:43"><expr pos:start="155:5" pos:end="155:42"><call pos:start="155:5" pos:end="155:42"><name pos:start="155:5" pos:end="155:10">assert</name><argument_list pos:start="155:11" pos:end="155:42">(<argument pos:start="155:12" pos:end="155:41"><expr pos:start="155:12" pos:end="155:41"><operator pos:start="155:12" pos:end="155:12">!</operator><operator pos:start="155:13" pos:end="155:13">(</operator><call pos:start="155:14" pos:end="155:24"><name pos:start="155:14" pos:end="155:18">ldq_p</name><argument_list pos:start="155:19" pos:end="155:24">(<argument pos:start="155:20" pos:end="155:23"><expr pos:start="155:20" pos:end="155:23"><name pos:start="155:20" pos:end="155:23">hpte</name></expr></argument>)</argument_list></call> <operator pos:start="155:26" pos:end="155:26">&amp;</operator> <name pos:start="155:28" pos:end="155:40">HPTE_V_HVLOCK</name><operator pos:start="155:41" pos:end="155:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:28"><expr pos:start="157:5" pos:end="157:27"><name pos:start="157:5" pos:end="157:11"><name pos:start="157:5" pos:end="157:8">args</name><index pos:start="157:9" pos:end="157:11">[<expr pos:start="157:10" pos:end="157:10"><literal type="number" pos:start="157:10" pos:end="157:10">0</literal></expr>]</index></name> <operator pos:start="157:13" pos:end="157:13">=</operator> <name pos:start="157:15" pos:end="157:23">pte_index</name> <operator pos:start="157:25" pos:end="157:25">+</operator> <name pos:start="157:27" pos:end="157:27">i</name></expr>;</expr_stmt>

    <return pos:start="159:5" pos:end="159:21">return <expr pos:start="159:12" pos:end="159:20"><name pos:start="159:12" pos:end="159:20">H_SUCCESS</name></expr>;</return>

</block_content>}</block></function>
</unit>
