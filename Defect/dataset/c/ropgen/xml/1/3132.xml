<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3132.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">vfio_ccw_handle_request</name><parameter_list pos:start="1:35" pos:end="1:68">(<parameter pos:start="1:36" pos:end="1:43"><decl pos:start="1:36" pos:end="1:43"><type pos:start="1:36" pos:end="1:43"><name pos:start="1:36" pos:end="1:38">ORB</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">orb</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:49">SCSW</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">scsw</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:61">void</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:28">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">S390CCWDevice</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:23">cdev</name> <init pos:start="5:25" pos:end="5:30">= <expr pos:start="5:27" pos:end="5:30"><name pos:start="5:27" pos:end="5:30">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:63"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">VFIOCCWDevice</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:24">vcdev</name> <init pos:start="7:26" pos:end="7:63">= <expr pos:start="7:28" pos:end="7:63"><call pos:start="7:28" pos:end="7:63"><name pos:start="7:28" pos:end="7:36">DO_UPCAST</name><argument_list pos:start="7:37" pos:end="7:63">(<argument pos:start="7:38" pos:end="7:50"><expr pos:start="7:38" pos:end="7:50"><name pos:start="7:38" pos:end="7:50">VFIOCCWDevice</name></expr></argument>, <argument pos:start="7:53" pos:end="7:56"><expr pos:start="7:53" pos:end="7:56"><name pos:start="7:53" pos:end="7:56">cdev</name></expr></argument>, <argument pos:start="7:59" pos:end="7:62"><expr pos:start="7:59" pos:end="7:62"><name pos:start="7:59" pos:end="7:62">cdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:24">ccw_io_region</name></name> <modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:32">region</name> <init pos:start="9:34" pos:end="9:51">= <expr pos:start="9:36" pos:end="9:51"><name pos:start="9:36" pos:end="9:51"><name pos:start="9:36" pos:end="9:40">vcdev</name><operator pos:start="9:41" pos:end="9:42">-&gt;</operator><name pos:start="9:43" pos:end="9:51">io_region</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:63"><expr pos:start="15:5" pos:end="15:62"><call pos:start="15:5" pos:end="15:62"><name pos:start="15:5" pos:end="15:21">QEMU_BUILD_BUG_ON</name><argument_list pos:start="15:22" pos:end="15:62">(<argument pos:start="15:23" pos:end="15:61"><expr pos:start="15:23" pos:end="15:61"><sizeof pos:start="15:23" pos:end="15:46">sizeof<argument_list pos:start="15:29" pos:end="15:46">(<argument pos:start="15:30" pos:end="15:45"><expr pos:start="15:30" pos:end="15:45"><name pos:start="15:30" pos:end="15:45"><name pos:start="15:30" pos:end="15:35">region</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:45">orb_area</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="15:48" pos:end="15:49">!=</operator> <sizeof pos:start="15:51" pos:end="15:61">sizeof<argument_list pos:start="15:57" pos:end="15:61">(<argument pos:start="15:58" pos:end="15:60"><expr pos:start="15:58" pos:end="15:60"><name pos:start="15:58" pos:end="15:60">ORB</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:65"><expr pos:start="17:5" pos:end="17:64"><call pos:start="17:5" pos:end="17:64"><name pos:start="17:5" pos:end="17:21">QEMU_BUILD_BUG_ON</name><argument_list pos:start="17:22" pos:end="17:64">(<argument pos:start="17:23" pos:end="17:63"><expr pos:start="17:23" pos:end="17:63"><sizeof pos:start="17:23" pos:end="17:47">sizeof<argument_list pos:start="17:29" pos:end="17:47">(<argument pos:start="17:30" pos:end="17:46"><expr pos:start="17:30" pos:end="17:46"><name pos:start="17:30" pos:end="17:46"><name pos:start="17:30" pos:end="17:35">region</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:46">scsw_area</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="17:49" pos:end="17:50">!=</operator> <sizeof pos:start="17:52" pos:end="17:63">sizeof<argument_list pos:start="17:58" pos:end="17:63">(<argument pos:start="17:59" pos:end="17:62"><expr pos:start="17:59" pos:end="17:62"><name pos:start="17:59" pos:end="17:62">SCSW</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><call pos:start="19:5" pos:end="19:62"><name pos:start="19:5" pos:end="19:21">QEMU_BUILD_BUG_ON</name><argument_list pos:start="19:22" pos:end="19:62">(<argument pos:start="19:23" pos:end="19:61"><expr pos:start="19:23" pos:end="19:61"><sizeof pos:start="19:23" pos:end="19:46">sizeof<argument_list pos:start="19:29" pos:end="19:46">(<argument pos:start="19:30" pos:end="19:45"><expr pos:start="19:30" pos:end="19:45"><name pos:start="19:30" pos:end="19:45"><name pos:start="19:30" pos:end="19:35">region</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:45">irb_area</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="19:48" pos:end="19:49">!=</operator> <sizeof pos:start="19:51" pos:end="19:61">sizeof<argument_list pos:start="19:57" pos:end="19:61">(<argument pos:start="19:58" pos:end="19:60"><expr pos:start="19:58" pos:end="19:60"><name pos:start="19:58" pos:end="19:60">IRB</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:39"><expr pos:start="23:5" pos:end="23:38"><call pos:start="23:5" pos:end="23:38"><name pos:start="23:5" pos:end="23:10">memset</name><argument_list pos:start="23:11" pos:end="23:38">(<argument pos:start="23:12" pos:end="23:17"><expr pos:start="23:12" pos:end="23:17"><name pos:start="23:12" pos:end="23:17">region</name></expr></argument>, <argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr></argument>, <argument pos:start="23:23" pos:end="23:37"><expr pos:start="23:23" pos:end="23:37"><sizeof pos:start="23:23" pos:end="23:37">sizeof<argument_list pos:start="23:29" pos:end="23:37">(<argument pos:start="23:30" pos:end="23:36"><expr pos:start="23:30" pos:end="23:36"><operator pos:start="23:30" pos:end="23:30">*</operator><name pos:start="23:31" pos:end="23:36">region</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><call pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:10">memcpy</name><argument_list pos:start="27:11" pos:end="27:46">(<argument pos:start="27:12" pos:end="27:27"><expr pos:start="27:12" pos:end="27:27"><name pos:start="27:12" pos:end="27:27"><name pos:start="27:12" pos:end="27:17">region</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:27">orb_area</name></name></expr></argument>, <argument pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">orb</name></expr></argument>, <argument pos:start="27:35" pos:end="27:45"><expr pos:start="27:35" pos:end="27:45"><sizeof pos:start="27:35" pos:end="27:45">sizeof<argument_list pos:start="27:41" pos:end="27:45">(<argument pos:start="27:42" pos:end="27:44"><expr pos:start="27:42" pos:end="27:44"><name pos:start="27:42" pos:end="27:44">ORB</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:50"><expr pos:start="29:5" pos:end="29:49"><call pos:start="29:5" pos:end="29:49"><name pos:start="29:5" pos:end="29:10">memcpy</name><argument_list pos:start="29:11" pos:end="29:49">(<argument pos:start="29:12" pos:end="29:28"><expr pos:start="29:12" pos:end="29:28"><name pos:start="29:12" pos:end="29:28"><name pos:start="29:12" pos:end="29:17">region</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:28">scsw_area</name></name></expr></argument>, <argument pos:start="29:31" pos:end="29:34"><expr pos:start="29:31" pos:end="29:34"><name pos:start="29:31" pos:end="29:34">scsw</name></expr></argument>, <argument pos:start="29:37" pos:end="29:48"><expr pos:start="29:37" pos:end="29:48"><sizeof pos:start="29:37" pos:end="29:48">sizeof<argument_list pos:start="29:43" pos:end="29:48">(<argument pos:start="29:44" pos:end="29:47"><expr pos:start="29:44" pos:end="29:47"><name pos:start="29:44" pos:end="29:47">SCSW</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="33:1" pos:end="33:6"><name pos:start="33:1" pos:end="33:5">again</name>:</label>

    <expr_stmt pos:start="35:5" pos:end="37:65"><expr pos:start="35:5" pos:end="37:64"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="37:64"><name pos:start="35:11" pos:end="35:16">pwrite</name><argument_list pos:start="35:17" pos:end="37:64">(<argument pos:start="35:18" pos:end="35:31"><expr pos:start="35:18" pos:end="35:31"><name pos:start="35:18" pos:end="35:31"><name pos:start="35:18" pos:end="35:22">vcdev</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:28">vdev</name><operator pos:start="35:29" pos:end="35:29">.</operator><name pos:start="35:30" pos:end="35:31">fd</name></name></expr></argument>, <argument pos:start="35:34" pos:end="35:39"><expr pos:start="35:34" pos:end="35:39"><name pos:start="35:34" pos:end="35:39">region</name></expr></argument>,

                 <argument pos:start="37:18" pos:end="37:38"><expr pos:start="37:18" pos:end="37:38"><name pos:start="37:18" pos:end="37:38"><name pos:start="37:18" pos:end="37:22">vcdev</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:38">io_region_size</name></name></expr></argument>, <argument pos:start="37:41" pos:end="37:63"><expr pos:start="37:41" pos:end="37:63"><name pos:start="37:41" pos:end="37:63"><name pos:start="37:41" pos:end="37:45">vcdev</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:63">io_region_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="51:5"><if pos:start="39:5" pos:end="51:5">if <condition pos:start="39:8" pos:end="39:37">(<expr pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:14">!=</operator> <name pos:start="39:16" pos:end="39:36"><name pos:start="39:16" pos:end="39:20">vcdev</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:36">io_region_size</name></name></expr>)</condition> <block pos:start="39:39" pos:end="51:5">{<block_content pos:start="41:9" pos:end="49:22">

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:28">(<expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:17">errno</name> <operator pos:start="41:19" pos:end="41:20">==</operator> <name pos:start="41:22" pos:end="41:27">EAGAIN</name></expr>)</condition> <block pos:start="41:30" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:23">

            <goto pos:start="43:13" pos:end="43:23">goto <name pos:start="43:18" pos:end="43:22">again</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:79"><expr pos:start="47:9" pos:end="47:78"><call pos:start="47:9" pos:end="47:78"><name pos:start="47:9" pos:end="47:20">error_report</name><argument_list pos:start="47:21" pos:end="47:78">(<argument pos:start="47:22" pos:end="47:70"><expr pos:start="47:22" pos:end="47:70"><literal type="string" pos:start="47:22" pos:end="47:70">"vfio-ccw: wirte I/O region failed with errno=%d"</literal></expr></argument>, <argument pos:start="47:73" pos:end="47:77"><expr pos:start="47:73" pos:end="47:77"><name pos:start="47:73" pos:end="47:77">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:22">return <expr pos:start="49:16" pos:end="49:21"><operator pos:start="49:16" pos:end="49:16">-</operator><name pos:start="49:17" pos:end="49:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="55:5" pos:end="55:28">return <expr pos:start="55:12" pos:end="55:27"><name pos:start="55:12" pos:end="55:27"><name pos:start="55:12" pos:end="55:17">region</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:27">ret_code</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
