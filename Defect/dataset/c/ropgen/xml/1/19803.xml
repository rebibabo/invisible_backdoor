<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19803.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">hevc_decode_free</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:15">HEVCContext</name>       <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">HEVCLocalContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">lc</name> <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><call pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:19">pic_arrays_free</name><argument_list pos:start="13:20" pos:end="13:22">(<argument pos:start="13:21" pos:end="13:21"><expr pos:start="13:21" pos:end="13:21"><name pos:start="13:21" pos:end="13:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><call pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:12">av_freep</name><argument_list pos:start="17:13" pos:end="17:34">(<argument pos:start="17:14" pos:end="17:33"><expr pos:start="17:14" pos:end="17:33"><operator pos:start="17:14" pos:end="17:14">&amp;</operator><name pos:start="17:15" pos:end="17:33"><name pos:start="17:15" pos:end="17:16">lc</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:33">edge_emu_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><call pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:12">av_freep</name><argument_list pos:start="19:13" pos:end="19:25">(<argument pos:start="19:14" pos:end="19:24"><expr pos:start="19:14" pos:end="19:24"><operator pos:start="19:14" pos:end="19:14">&amp;</operator><name pos:start="19:15" pos:end="19:24"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:24">md5_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="23:5" pos:end="27:5">for<control pos:start="23:8" pos:end="23:40">(<init pos:start="23:9" pos:end="23:12"><expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:9">i</name><operator pos:start="23:10" pos:end="23:10">=</operator><literal type="number" pos:start="23:11" pos:end="23:11">0</literal></expr>;</init> <condition pos:start="23:14" pos:end="23:35"><expr pos:start="23:14" pos:end="23:34"><name pos:start="23:14" pos:end="23:14">i</name> <operator pos:start="23:16" pos:end="23:16">&lt;</operator> <name pos:start="23:18" pos:end="23:34"><name pos:start="23:18" pos:end="23:18">s</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:34">nals_allocated</name></name></expr>;</condition> <incr pos:start="23:37" pos:end="23:39"><expr pos:start="23:37" pos:end="23:39"><name pos:start="23:37" pos:end="23:37">i</name><operator pos:start="23:38" pos:end="23:39">++</operator></expr></incr>)</control> <block pos:start="23:42" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:47">

        <expr_stmt pos:start="25:9" pos:end="25:47"><expr pos:start="25:9" pos:end="25:46"><call pos:start="25:9" pos:end="25:46"><name pos:start="25:9" pos:end="25:16">av_freep</name><argument_list pos:start="25:17" pos:end="25:46">(<argument pos:start="25:18" pos:end="25:45"><expr pos:start="25:18" pos:end="25:45"><operator pos:start="25:18" pos:end="25:18">&amp;</operator><name pos:start="25:19" pos:end="25:45"><name pos:start="25:19" pos:end="25:19">s</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:42">skipped_bytes_pos_nal</name><index pos:start="25:43" pos:end="25:45">[<expr pos:start="25:44" pos:end="25:44"><name pos:start="25:44" pos:end="25:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:12">av_freep</name><argument_list pos:start="29:13" pos:end="29:44">(<argument pos:start="29:14" pos:end="29:43"><expr pos:start="29:14" pos:end="29:43"><operator pos:start="29:14" pos:end="29:14">&amp;</operator><name pos:start="29:15" pos:end="29:43"><name pos:start="29:15" pos:end="29:15">s</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:43">skipped_bytes_pos_size_nal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><call pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:12">av_freep</name><argument_list pos:start="31:13" pos:end="31:35">(<argument pos:start="31:14" pos:end="31:34"><expr pos:start="31:14" pos:end="31:34"><operator pos:start="31:14" pos:end="31:14">&amp;</operator><name pos:start="31:15" pos:end="31:34"><name pos:start="31:15" pos:end="31:15">s</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:34">skipped_bytes_nal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:40"><expr pos:start="33:5" pos:end="33:39"><call pos:start="33:5" pos:end="33:39"><name pos:start="33:5" pos:end="33:12">av_freep</name><argument_list pos:start="33:13" pos:end="33:39">(<argument pos:start="33:14" pos:end="33:38"><expr pos:start="33:14" pos:end="33:38"><operator pos:start="33:14" pos:end="33:14">&amp;</operator><name pos:start="33:15" pos:end="33:38"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:38">skipped_bytes_pos_nal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><call pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:12">av_freep</name><argument_list pos:start="37:13" pos:end="37:29">(<argument pos:start="37:14" pos:end="37:28"><expr pos:start="37:14" pos:end="37:28"><operator pos:start="37:14" pos:end="37:14">&amp;</operator><name pos:start="37:15" pos:end="37:28"><name pos:start="37:15" pos:end="37:15">s</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:28">cabac_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><call pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:17">av_frame_free</name><argument_list pos:start="41:18" pos:end="41:32">(<argument pos:start="41:19" pos:end="41:31"><expr pos:start="41:19" pos:end="41:31"><operator pos:start="41:19" pos:end="41:19">&amp;</operator><name pos:start="41:20" pos:end="41:31"><name pos:start="41:20" pos:end="41:20">s</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:31">tmp_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:36"><expr pos:start="43:5" pos:end="43:35"><call pos:start="43:5" pos:end="43:35"><name pos:start="43:5" pos:end="43:17">av_frame_free</name><argument_list pos:start="43:18" pos:end="43:35">(<argument pos:start="43:19" pos:end="43:34"><expr pos:start="43:19" pos:end="43:34"><operator pos:start="43:19" pos:end="43:19">&amp;</operator><name pos:start="43:20" pos:end="43:34"><name pos:start="43:20" pos:end="43:20">s</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:34">output_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="53:5">for <control pos:start="47:9" pos:end="47:48">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:43"><expr pos:start="47:17" pos:end="47:42"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <call pos:start="47:21" pos:end="47:42"><name pos:start="47:21" pos:end="47:34">FF_ARRAY_ELEMS</name><argument_list pos:start="47:35" pos:end="47:42">(<argument pos:start="47:36" pos:end="47:41"><expr pos:start="47:36" pos:end="47:41"><name pos:start="47:36" pos:end="47:41"><name pos:start="47:36" pos:end="47:36">s</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:41">DPB</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="47:45" pos:end="47:47"><expr pos:start="47:45" pos:end="47:47"><name pos:start="47:45" pos:end="47:45">i</name><operator pos:start="47:46" pos:end="47:47">++</operator></expr></incr>)</control> <block pos:start="47:50" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:40">

        <expr_stmt pos:start="49:9" pos:end="49:47"><expr pos:start="49:9" pos:end="49:46"><call pos:start="49:9" pos:end="49:46"><name pos:start="49:9" pos:end="49:27">ff_hevc_unref_frame</name><argument_list pos:start="49:28" pos:end="49:46">(<argument pos:start="49:29" pos:end="49:29"><expr pos:start="49:29" pos:end="49:29"><name pos:start="49:29" pos:end="49:29">s</name></expr></argument>, <argument pos:start="49:32" pos:end="49:41"><expr pos:start="49:32" pos:end="49:41"><operator pos:start="49:32" pos:end="49:32">&amp;</operator><name pos:start="49:33" pos:end="49:41"><name pos:start="49:33" pos:end="49:33">s</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:38">DPB</name><index pos:start="49:39" pos:end="49:41">[<expr pos:start="49:40" pos:end="49:40"><name pos:start="49:40" pos:end="49:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="49:44" pos:end="49:45"><expr pos:start="49:44" pos:end="49:45"><operator pos:start="49:44" pos:end="49:44">~</operator><literal type="number" pos:start="49:45" pos:end="49:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:40"><expr pos:start="51:9" pos:end="51:39"><call pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:21">av_frame_free</name><argument_list pos:start="51:22" pos:end="51:39">(<argument pos:start="51:23" pos:end="51:38"><expr pos:start="51:23" pos:end="51:38"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:32"><name pos:start="51:24" pos:end="51:24">s</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:29">DPB</name><index pos:start="51:30" pos:end="51:32">[<expr pos:start="51:31" pos:end="51:31"><name pos:start="51:31" pos:end="51:31">i</name></expr>]</index></name><operator pos:start="51:33" pos:end="51:33">.</operator><name pos:start="51:34" pos:end="51:38">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="57:5" pos:end="59:34">for <control pos:start="57:9" pos:end="57:53">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:48"><expr pos:start="57:17" pos:end="57:47"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <call pos:start="57:21" pos:end="57:47"><name pos:start="57:21" pos:end="57:34">FF_ARRAY_ELEMS</name><argument_list pos:start="57:35" pos:end="57:47">(<argument pos:start="57:36" pos:end="57:46"><expr pos:start="57:36" pos:end="57:46"><name pos:start="57:36" pos:end="57:46"><name pos:start="57:36" pos:end="57:36">s</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:46">vps_list</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="57:50" pos:end="57:52"><expr pos:start="57:50" pos:end="57:52"><name pos:start="57:50" pos:end="57:50">i</name><operator pos:start="57:51" pos:end="57:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:9" pos:end="59:34"><block_content pos:start="59:9" pos:end="59:34">

        <expr_stmt pos:start="59:9" pos:end="59:34"><expr pos:start="59:9" pos:end="59:33"><call pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:16">av_freep</name><argument_list pos:start="59:17" pos:end="59:33">(<argument pos:start="59:18" pos:end="59:32"><expr pos:start="59:18" pos:end="59:32"><operator pos:start="59:18" pos:end="59:18">&amp;</operator><name pos:start="59:19" pos:end="59:32"><name pos:start="59:19" pos:end="59:19">s</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:29">vps_list</name><index pos:start="59:30" pos:end="59:32">[<expr pos:start="59:31" pos:end="59:31"><name pos:start="59:31" pos:end="59:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="61:5" pos:end="63:41">for <control pos:start="61:9" pos:end="61:53">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:48"><expr pos:start="61:17" pos:end="61:47"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <call pos:start="61:21" pos:end="61:47"><name pos:start="61:21" pos:end="61:34">FF_ARRAY_ELEMS</name><argument_list pos:start="61:35" pos:end="61:47">(<argument pos:start="61:36" pos:end="61:46"><expr pos:start="61:36" pos:end="61:46"><name pos:start="61:36" pos:end="61:46"><name pos:start="61:36" pos:end="61:36">s</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:46">sps_list</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="61:50" pos:end="61:52"><expr pos:start="61:50" pos:end="61:52"><name pos:start="61:50" pos:end="61:50">i</name><operator pos:start="61:51" pos:end="61:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="63:9" pos:end="63:41"><block_content pos:start="63:9" pos:end="63:41">

        <expr_stmt pos:start="63:9" pos:end="63:41"><expr pos:start="63:9" pos:end="63:40"><call pos:start="63:9" pos:end="63:40"><name pos:start="63:9" pos:end="63:23">av_buffer_unref</name><argument_list pos:start="63:24" pos:end="63:40">(<argument pos:start="63:25" pos:end="63:39"><expr pos:start="63:25" pos:end="63:39"><operator pos:start="63:25" pos:end="63:25">&amp;</operator><name pos:start="63:26" pos:end="63:39"><name pos:start="63:26" pos:end="63:26">s</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:36">sps_list</name><index pos:start="63:37" pos:end="63:39">[<expr pos:start="63:38" pos:end="63:38"><name pos:start="63:38" pos:end="63:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="65:5" pos:end="67:41">for <control pos:start="65:9" pos:end="65:53">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">i</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:48"><expr pos:start="65:17" pos:end="65:47"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <call pos:start="65:21" pos:end="65:47"><name pos:start="65:21" pos:end="65:34">FF_ARRAY_ELEMS</name><argument_list pos:start="65:35" pos:end="65:47">(<argument pos:start="65:36" pos:end="65:46"><expr pos:start="65:36" pos:end="65:46"><name pos:start="65:36" pos:end="65:46"><name pos:start="65:36" pos:end="65:36">s</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:46">pps_list</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="65:50" pos:end="65:52"><expr pos:start="65:50" pos:end="65:52"><name pos:start="65:50" pos:end="65:50">i</name><operator pos:start="65:51" pos:end="65:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:9" pos:end="67:41"><block_content pos:start="67:9" pos:end="67:41">

        <expr_stmt pos:start="67:9" pos:end="67:41"><expr pos:start="67:9" pos:end="67:40"><call pos:start="67:9" pos:end="67:40"><name pos:start="67:9" pos:end="67:23">av_buffer_unref</name><argument_list pos:start="67:24" pos:end="67:40">(<argument pos:start="67:25" pos:end="67:39"><expr pos:start="67:25" pos:end="67:39"><operator pos:start="67:25" pos:end="67:25">&amp;</operator><name pos:start="67:26" pos:end="67:39"><name pos:start="67:26" pos:end="67:26">s</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:36">pps_list</name><index pos:start="67:37" pos:end="67:39">[<expr pos:start="67:38" pos:end="67:38"><name pos:start="67:38" pos:end="67:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="71:5" pos:end="71:40"><expr pos:start="71:5" pos:end="71:39"><call pos:start="71:5" pos:end="71:39"><name pos:start="71:5" pos:end="71:12">av_freep</name><argument_list pos:start="71:13" pos:end="71:39">(<argument pos:start="71:14" pos:end="71:38"><expr pos:start="71:14" pos:end="71:38"><operator pos:start="71:14" pos:end="71:14">&amp;</operator><name pos:start="71:15" pos:end="71:38"><name pos:start="71:15" pos:end="71:15">s</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:19">sh</name><operator pos:start="71:20" pos:end="71:20">.</operator><name pos:start="71:21" pos:end="71:38">entry_point_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:28"><expr pos:start="73:5" pos:end="73:27"><call pos:start="73:5" pos:end="73:27"><name pos:start="73:5" pos:end="73:12">av_freep</name><argument_list pos:start="73:13" pos:end="73:27">(<argument pos:start="73:14" pos:end="73:26"><expr pos:start="73:14" pos:end="73:26"><operator pos:start="73:14" pos:end="73:14">&amp;</operator><name pos:start="73:15" pos:end="73:26"><name pos:start="73:15" pos:end="73:15">s</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:19">sh</name><operator pos:start="73:20" pos:end="73:20">.</operator><name pos:start="73:21" pos:end="73:26">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:26"><expr pos:start="75:5" pos:end="75:25"><call pos:start="75:5" pos:end="75:25"><name pos:start="75:5" pos:end="75:12">av_freep</name><argument_list pos:start="75:13" pos:end="75:25">(<argument pos:start="75:14" pos:end="75:24"><expr pos:start="75:14" pos:end="75:24"><operator pos:start="75:14" pos:end="75:14">&amp;</operator><name pos:start="75:15" pos:end="75:24"><name pos:start="75:15" pos:end="75:15">s</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:19">sh</name><operator pos:start="75:20" pos:end="75:20">.</operator><name pos:start="75:21" pos:end="75:24">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="79:5" pos:end="95:5">for <control pos:start="79:9" pos:end="79:43">(<init pos:start="79:10" pos:end="79:15"><expr pos:start="79:10" pos:end="79:14"><name pos:start="79:10" pos:end="79:10">i</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">1</literal></expr>;</init> <condition pos:start="79:17" pos:end="79:38"><expr pos:start="79:17" pos:end="79:37"><name pos:start="79:17" pos:end="79:17">i</name> <operator pos:start="79:19" pos:end="79:19">&lt;</operator> <name pos:start="79:21" pos:end="79:37"><name pos:start="79:21" pos:end="79:21">s</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:37">threads_number</name></name></expr>;</condition> <incr pos:start="79:40" pos:end="79:42"><expr pos:start="79:40" pos:end="79:42"><name pos:start="79:40" pos:end="79:40">i</name><operator pos:start="79:41" pos:end="79:42">++</operator></expr></incr>)</control> <block pos:start="79:45" pos:end="95:5">{<block_content pos:start="81:9" pos:end="93:9">

        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:10">lc</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <name pos:start="81:14" pos:end="81:29"><name pos:start="81:14" pos:end="81:14">s</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:26">HEVClcList</name><index pos:start="81:27" pos:end="81:29">[<expr pos:start="81:28" pos:end="81:28"><name pos:start="81:28" pos:end="81:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="93:9"><if pos:start="83:9" pos:end="93:9">if <condition pos:start="83:12" pos:end="83:15">(<expr pos:start="83:13" pos:end="83:14"><name pos:start="83:13" pos:end="83:14">lc</name></expr>)</condition> <block pos:start="83:17" pos:end="93:9">{<block_content pos:start="85:13" pos:end="91:35">

            <expr_stmt pos:start="85:13" pos:end="85:43"><expr pos:start="85:13" pos:end="85:42"><call pos:start="85:13" pos:end="85:42"><name pos:start="85:13" pos:end="85:20">av_freep</name><argument_list pos:start="85:21" pos:end="85:42">(<argument pos:start="85:22" pos:end="85:41"><expr pos:start="85:22" pos:end="85:41"><operator pos:start="85:22" pos:end="85:22">&amp;</operator><name pos:start="85:23" pos:end="85:41"><name pos:start="85:23" pos:end="85:24">lc</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:41">edge_emu_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="89:13" pos:end="89:40"><expr pos:start="89:13" pos:end="89:39"><call pos:start="89:13" pos:end="89:39"><name pos:start="89:13" pos:end="89:20">av_freep</name><argument_list pos:start="89:21" pos:end="89:39">(<argument pos:start="89:22" pos:end="89:38"><expr pos:start="89:22" pos:end="89:38"><operator pos:start="89:22" pos:end="89:22">&amp;</operator><name pos:start="89:23" pos:end="89:38"><name pos:start="89:23" pos:end="89:23">s</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:35">HEVClcList</name><index pos:start="89:36" pos:end="89:38">[<expr pos:start="89:37" pos:end="89:37"><name pos:start="89:37" pos:end="89:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:35"><expr pos:start="91:13" pos:end="91:34"><call pos:start="91:13" pos:end="91:34"><name pos:start="91:13" pos:end="91:20">av_freep</name><argument_list pos:start="91:21" pos:end="91:34">(<argument pos:start="91:22" pos:end="91:33"><expr pos:start="91:22" pos:end="91:33"><operator pos:start="91:22" pos:end="91:22">&amp;</operator><name pos:start="91:23" pos:end="91:33"><name pos:start="91:23" pos:end="91:23">s</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:30">sList</name><index pos:start="91:31" pos:end="91:33">[<expr pos:start="91:32" pos:end="91:32"><name pos:start="91:32" pos:end="91:32">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="97:5" pos:end="97:32"><expr pos:start="97:5" pos:end="97:31"><call pos:start="97:5" pos:end="97:31"><name pos:start="97:5" pos:end="97:12">av_freep</name><argument_list pos:start="97:13" pos:end="97:31">(<argument pos:start="97:14" pos:end="97:30"><expr pos:start="97:14" pos:end="97:30"><operator pos:start="97:14" pos:end="97:14">&amp;</operator><name pos:start="97:15" pos:end="97:30"><name pos:start="97:15" pos:end="97:15">s</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:27">HEVClcList</name><index pos:start="97:28" pos:end="97:30">[<expr pos:start="97:29" pos:end="97:29"><literal type="number" pos:start="97:29" pos:end="97:29">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="101:5" pos:end="103:42">for <control pos:start="101:9" pos:end="101:43">(<init pos:start="101:10" pos:end="101:15"><expr pos:start="101:10" pos:end="101:14"><name pos:start="101:10" pos:end="101:10">i</name> <operator pos:start="101:12" pos:end="101:12">=</operator> <literal type="number" pos:start="101:14" pos:end="101:14">0</literal></expr>;</init> <condition pos:start="101:17" pos:end="101:38"><expr pos:start="101:17" pos:end="101:37"><name pos:start="101:17" pos:end="101:17">i</name> <operator pos:start="101:19" pos:end="101:19">&lt;</operator> <name pos:start="101:21" pos:end="101:37"><name pos:start="101:21" pos:end="101:21">s</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:37">nals_allocated</name></name></expr>;</condition> <incr pos:start="101:40" pos:end="101:42"><expr pos:start="101:40" pos:end="101:42"><name pos:start="101:40" pos:end="101:40">i</name><operator pos:start="101:41" pos:end="101:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="103:9" pos:end="103:42"><block_content pos:start="103:9" pos:end="103:42">

        <expr_stmt pos:start="103:9" pos:end="103:42"><expr pos:start="103:9" pos:end="103:41"><call pos:start="103:9" pos:end="103:41"><name pos:start="103:9" pos:end="103:16">av_freep</name><argument_list pos:start="103:17" pos:end="103:41">(<argument pos:start="103:18" pos:end="103:40"><expr pos:start="103:18" pos:end="103:40"><operator pos:start="103:18" pos:end="103:18">&amp;</operator><name pos:start="103:19" pos:end="103:28"><name pos:start="103:19" pos:end="103:19">s</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:25">nals</name><index pos:start="103:26" pos:end="103:28">[<expr pos:start="103:27" pos:end="103:27"><name pos:start="103:27" pos:end="103:27">i</name></expr>]</index></name><operator pos:start="103:29" pos:end="103:29">.</operator><name pos:start="103:30" pos:end="103:40">rbsp_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="105:5" pos:end="105:23"><expr pos:start="105:5" pos:end="105:22"><call pos:start="105:5" pos:end="105:22"><name pos:start="105:5" pos:end="105:12">av_freep</name><argument_list pos:start="105:13" pos:end="105:22">(<argument pos:start="105:14" pos:end="105:21"><expr pos:start="105:14" pos:end="105:21"><operator pos:start="105:14" pos:end="105:14">&amp;</operator><name pos:start="105:15" pos:end="105:21"><name pos:start="105:15" pos:end="105:15">s</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:21">nals</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:26"><expr pos:start="107:5" pos:end="107:25"><name pos:start="107:5" pos:end="107:21"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:21">nals_allocated</name></name> <operator pos:start="107:23" pos:end="107:23">=</operator> <literal type="number" pos:start="107:25" pos:end="107:25">0</literal></expr>;</expr_stmt>



    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
