<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12338.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">parse_audio</name><parameter_list pos:start="1:23" pos:end="1:69">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:33">DBEContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:47"><decl pos:start="1:39" pos:end="1:47"><type pos:start="1:39" pos:end="1:47"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:47">start</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:56"><decl pos:start="1:50" pos:end="1:56"><type pos:start="1:50" pos:end="1:56"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:56">end</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:68"><decl pos:start="1:59" pos:end="1:68"><type pos:start="1:59" pos:end="1:68"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:68">seg_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">ch</name></decl>, <decl pos:start="5:13" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:15">ret</name></decl>, <decl pos:start="5:18" pos:end="5:35"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:20">key</name> <init pos:start="5:22" pos:end="5:35">= <expr pos:start="5:24" pos:end="5:35"><call pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:32">parse_key</name><argument_list pos:start="5:33" pos:end="5:35">(<argument pos:start="5:34" pos:end="5:34"><expr pos:start="5:34" pos:end="5:34"><name pos:start="5:34" pos:end="5:34">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="35:5">for <control pos:start="9:9" pos:end="9:36">(<init pos:start="9:10" pos:end="9:20"><expr pos:start="9:10" pos:end="9:19"><name pos:start="9:10" pos:end="9:11">ch</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <name pos:start="9:15" pos:end="9:19">start</name></expr>;</init> <condition pos:start="9:22" pos:end="9:30"><expr pos:start="9:22" pos:end="9:29"><name pos:start="9:22" pos:end="9:23">ch</name> <operator pos:start="9:25" pos:end="9:25">&lt;</operator> <name pos:start="9:27" pos:end="9:29">end</name></expr>;</condition> <incr pos:start="9:32" pos:end="9:35"><expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:33">ch</name><operator pos:start="9:34" pos:end="9:35">++</operator></expr></incr>)</control> <block pos:start="9:38" pos:end="35:5">{<block_content pos:start="11:9" pos:end="33:38">

        <if_stmt pos:start="11:9" pos:end="17:9"><if pos:start="11:9" pos:end="17:9">if <condition pos:start="11:12" pos:end="11:28">(<expr pos:start="11:13" pos:end="11:27"><operator pos:start="11:13" pos:end="11:13">!</operator><name pos:start="11:14" pos:end="11:27"><name pos:start="11:14" pos:end="11:14">s</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:23">ch_size</name><index pos:start="11:24" pos:end="11:27">[<expr pos:start="11:25" pos:end="11:26"><name pos:start="11:25" pos:end="11:26">ch</name></expr>]</index></name></expr>)</condition> <block pos:start="11:30" pos:end="17:9">{<block_content pos:start="13:13" pos:end="15:21">

            <expr_stmt pos:start="13:13" pos:end="13:50"><expr pos:start="13:13" pos:end="13:49"><name pos:start="13:13" pos:end="13:35"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:23">channels</name><index pos:start="13:24" pos:end="13:31">[<expr pos:start="13:25" pos:end="13:30"><name pos:start="13:25" pos:end="13:30">seg_id</name></expr>]</index><index pos:start="13:32" pos:end="13:35">[<expr pos:start="13:33" pos:end="13:34"><name pos:start="13:33" pos:end="13:34">ch</name></expr>]</index></name><operator pos:start="13:36" pos:end="13:36">.</operator><name pos:start="13:37" pos:end="13:45">nb_groups</name> <operator pos:start="13:47" pos:end="13:47">=</operator> <literal type="number" pos:start="13:49" pos:end="13:49">0</literal></expr>;</expr_stmt>

            <continue pos:start="15:13" pos:end="15:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="21:23"><if pos:start="19:9" pos:end="21:23">if <condition pos:start="19:12" pos:end="19:62">(<expr pos:start="19:13" pos:end="19:61"><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:16">ret</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:56"><name pos:start="19:20" pos:end="19:32">convert_input</name><argument_list pos:start="19:33" pos:end="19:56">(<argument pos:start="19:34" pos:end="19:34"><expr pos:start="19:34" pos:end="19:34"><name pos:start="19:34" pos:end="19:34">s</name></expr></argument>, <argument pos:start="19:37" pos:end="19:50"><expr pos:start="19:37" pos:end="19:50"><name pos:start="19:37" pos:end="19:50"><name pos:start="19:37" pos:end="19:37">s</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:46">ch_size</name><index pos:start="19:47" pos:end="19:50">[<expr pos:start="19:48" pos:end="19:49"><name pos:start="19:48" pos:end="19:49">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="19:53" pos:end="19:55"><expr pos:start="19:53" pos:end="19:55"><name pos:start="19:53" pos:end="19:55">key</name></expr></argument>)</argument_list></call><operator pos:start="19:57" pos:end="19:57">)</operator> <operator pos:start="19:59" pos:end="19:59">&lt;</operator> <literal type="number" pos:start="19:61" pos:end="19:61">0</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:23"><block_content pos:start="21:13" pos:end="21:23">

            <return pos:start="21:13" pos:end="21:23">return <expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:53">(<expr pos:start="23:13" pos:end="23:52"><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:16">ret</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:47"><name pos:start="23:20" pos:end="23:32">parse_channel</name><argument_list pos:start="23:33" pos:end="23:47">(<argument pos:start="23:34" pos:end="23:34"><expr pos:start="23:34" pos:end="23:34"><name pos:start="23:34" pos:end="23:34">s</name></expr></argument>, <argument pos:start="23:37" pos:end="23:38"><expr pos:start="23:37" pos:end="23:38"><name pos:start="23:37" pos:end="23:38">ch</name></expr></argument>, <argument pos:start="23:41" pos:end="23:46"><expr pos:start="23:41" pos:end="23:46"><name pos:start="23:41" pos:end="23:46">seg_id</name></expr></argument>)</argument_list></call><operator pos:start="23:48" pos:end="23:48">)</operator> <operator pos:start="23:50" pos:end="23:50">&lt;</operator> <literal type="number" pos:start="23:52" pos:end="23:52">0</literal></expr>)</condition> <block pos:start="23:55" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:50">

            <if_stmt pos:start="25:13" pos:end="27:27"><if pos:start="25:13" pos:end="27:27">if <condition pos:start="25:16" pos:end="25:58">(<expr pos:start="25:17" pos:end="25:57"><name pos:start="25:17" pos:end="25:41"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:24">avctx</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:41">err_recognition</name></name> <operator pos:start="25:43" pos:end="25:43">&amp;</operator> <name pos:start="25:45" pos:end="25:57">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:27"><block_content pos:start="27:17" pos:end="27:27">

                <return pos:start="27:17" pos:end="27:27">return <expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:50"><expr pos:start="29:13" pos:end="29:49"><name pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:23">channels</name><index pos:start="29:24" pos:end="29:31">[<expr pos:start="29:25" pos:end="29:30"><name pos:start="29:25" pos:end="29:30">seg_id</name></expr>]</index><index pos:start="29:32" pos:end="29:35">[<expr pos:start="29:33" pos:end="29:34"><name pos:start="29:33" pos:end="29:34">ch</name></expr>]</index></name><operator pos:start="29:36" pos:end="29:36">.</operator><name pos:start="29:37" pos:end="29:45">nb_groups</name> <operator pos:start="29:47" pos:end="29:47">=</operator> <literal type="number" pos:start="29:49" pos:end="29:49">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:38"><expr pos:start="33:9" pos:end="33:37"><call pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:18">skip_input</name><argument_list pos:start="33:19" pos:end="33:37">(<argument pos:start="33:20" pos:end="33:20"><expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">s</name></expr></argument>, <argument pos:start="33:23" pos:end="33:36"><expr pos:start="33:23" pos:end="33:36"><name pos:start="33:23" pos:end="33:36"><name pos:start="33:23" pos:end="33:23">s</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:32">ch_size</name><index pos:start="33:33" pos:end="33:36">[<expr pos:start="33:34" pos:end="33:35"><name pos:start="33:34" pos:end="33:35">ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="39:5" pos:end="39:21"><expr pos:start="39:5" pos:end="39:20"><call pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:14">skip_input</name><argument_list pos:start="39:15" pos:end="39:20">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">s</name></expr></argument>, <argument pos:start="39:19" pos:end="39:19"><expr pos:start="39:19" pos:end="39:19"><literal type="number" pos:start="39:19" pos:end="39:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
