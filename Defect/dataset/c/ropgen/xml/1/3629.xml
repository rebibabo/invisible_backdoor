<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3629.c" pos:tabs="8"><function pos:start="1:1" pos:end="839:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">transcode_init</name><parameter_list pos:start="1:26" pos:end="1:31">(<parameter pos:start="1:27" pos:end="1:30"><decl pos:start="1:27" pos:end="1:30"><type pos:start="1:27" pos:end="1:30"><name pos:start="1:27" pos:end="1:30">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="839:1">{<block_content pos:start="5:5" pos:end="837:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">i</name></decl>, <decl pos:start="5:21" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:21">j</name></decl>, <decl pos:start="5:24" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:24">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">codec</name></decl>, <decl pos:start="9:28" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:20"><modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:34">icodec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">OutputStream</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">InputStream</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">ist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:20"><name pos:start="15:10" pos:end="15:14">error</name><index pos:start="15:15" pos:end="15:20">[<expr pos:start="15:16" pos:end="15:19"><literal type="number" pos:start="15:16" pos:end="15:19">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">want_sdp</name> <init pos:start="17:18" pos:end="17:20">= <expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">1</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:34">/* init framerate emulation */</comment>

    <for pos:start="23:5" pos:end="33:5">for <control pos:start="23:9" pos:end="23:40">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:35"><expr pos:start="23:17" pos:end="23:34"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:34">nb_input_files</name></expr>;</condition> <incr pos:start="23:37" pos:end="23:39"><expr pos:start="23:37" pos:end="23:39"><name pos:start="23:37" pos:end="23:37">i</name><operator pos:start="23:38" pos:end="23:39">++</operator></expr></incr>)</control> <block pos:start="23:42" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:74">

        <decl_stmt pos:start="25:9" pos:end="25:42"><decl pos:start="25:9" pos:end="25:41"><type pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:17">InputFile</name> <modifier pos:start="25:19" pos:end="25:19">*</modifier></type><name pos:start="25:20" pos:end="25:24">ifile</name> <init pos:start="25:26" pos:end="25:41">= <expr pos:start="25:28" pos:end="25:41"><name pos:start="25:28" pos:end="25:41"><name pos:start="25:28" pos:end="25:38">input_files</name><index pos:start="25:39" pos:end="25:41">[<expr pos:start="25:40" pos:end="25:40"><name pos:start="25:40" pos:end="25:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="27:9" pos:end="31:74"><if pos:start="27:9" pos:end="31:74">if <condition pos:start="27:12" pos:end="27:28">(<expr pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:17">ifile</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:27">rate_emu</name></name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="31:74"><block_content pos:start="29:13" pos:end="31:74">

            <for pos:start="29:13" pos:end="31:74">for <control pos:start="29:17" pos:end="29:51">(<init pos:start="29:18" pos:end="29:23"><expr pos:start="29:18" pos:end="29:22"><name pos:start="29:18" pos:end="29:18">j</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>;</init> <condition pos:start="29:25" pos:end="29:46"><expr pos:start="29:25" pos:end="29:45"><name pos:start="29:25" pos:end="29:25">j</name> <operator pos:start="29:27" pos:end="29:27">&lt;</operator> <name pos:start="29:29" pos:end="29:45"><name pos:start="29:29" pos:end="29:33">ifile</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:45">nb_streams</name></name></expr>;</condition> <incr pos:start="29:48" pos:end="29:50"><expr pos:start="29:48" pos:end="29:50"><name pos:start="29:48" pos:end="29:48">j</name><operator pos:start="29:49" pos:end="29:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:17" pos:end="31:74"><block_content pos:start="31:17" pos:end="31:74">

                <expr_stmt pos:start="31:17" pos:end="31:74"><expr pos:start="31:17" pos:end="31:73"><name pos:start="31:17" pos:end="31:51"><name pos:start="31:17" pos:end="31:29">input_streams</name><index pos:start="31:30" pos:end="31:51">[<expr pos:start="31:31" pos:end="31:50"><name pos:start="31:31" pos:end="31:31">j</name> <operator pos:start="31:33" pos:end="31:33">+</operator> <name pos:start="31:35" pos:end="31:50"><name pos:start="31:35" pos:end="31:39">ifile</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:50">ist_index</name></name></expr>]</index></name><operator pos:start="31:52" pos:end="31:53">-&gt;</operator><name pos:start="31:54" pos:end="31:58">start</name> <operator pos:start="31:60" pos:end="31:60">=</operator> <call pos:start="31:62" pos:end="31:73"><name pos:start="31:62" pos:end="31:71">av_gettime</name><argument_list pos:start="31:72" pos:end="31:73">()</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="37:5" pos:end="37:28">/* output stream init */</comment>

    <for pos:start="39:5" pos:end="53:5">for <control pos:start="39:9" pos:end="39:41">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:36"><expr pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:35">nb_output_files</name></expr>;</condition> <incr pos:start="39:38" pos:end="39:40"><expr pos:start="39:38" pos:end="39:40"><name pos:start="39:38" pos:end="39:38">i</name><operator pos:start="39:39" pos:end="39:40">++</operator></expr></incr>)</control> <block pos:start="39:43" pos:end="53:5">{<block_content pos:start="41:9" pos:end="51:9">

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:10">oc</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:28"><name pos:start="41:14" pos:end="41:25">output_files</name><index pos:start="41:26" pos:end="41:28">[<expr pos:start="41:27" pos:end="41:27"><name pos:start="41:27" pos:end="41:27">i</name></expr>]</index></name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:33">ctx</name></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:71">(<expr pos:start="43:13" pos:end="43:70"><operator pos:start="43:13" pos:end="43:13">!</operator><name pos:start="43:14" pos:end="43:27"><name pos:start="43:14" pos:end="43:15">oc</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:27">nb_streams</name></name> <operator pos:start="43:29" pos:end="43:30">&amp;&amp;</operator> <operator pos:start="43:32" pos:end="43:32">!</operator><operator pos:start="43:33" pos:end="43:33">(</operator><name pos:start="43:34" pos:end="43:51"><name pos:start="43:34" pos:end="43:35">oc</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:44">oformat</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:51">flags</name></name> <operator pos:start="43:53" pos:end="43:53">&amp;</operator> <name pos:start="43:55" pos:end="43:69">AVFMT_NOSTREAMS</name><operator pos:start="43:70" pos:end="43:70">)</operator></expr>)</condition> <block pos:start="43:73" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:35">

            <expr_stmt pos:start="45:13" pos:end="45:51"><expr pos:start="45:13" pos:end="45:50"><call pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:26">av_dump_format</name><argument_list pos:start="45:27" pos:end="45:50">(<argument pos:start="45:28" pos:end="45:29"><expr pos:start="45:28" pos:end="45:29"><name pos:start="45:28" pos:end="45:29">oc</name></expr></argument>, <argument pos:start="45:32" pos:end="45:32"><expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">i</name></expr></argument>, <argument pos:start="45:35" pos:end="45:46"><expr pos:start="45:35" pos:end="45:46"><name pos:start="45:35" pos:end="45:46"><name pos:start="45:35" pos:end="45:36">oc</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:46">filename</name></name></expr></argument>, <argument pos:start="45:49" pos:end="45:49"><expr pos:start="45:49" pos:end="45:49"><literal type="number" pos:start="45:49" pos:end="45:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:91"><expr pos:start="47:13" pos:end="47:90"><call pos:start="47:13" pos:end="47:90"><name pos:start="47:13" pos:end="47:18">av_log</name><argument_list pos:start="47:19" pos:end="47:90">(<argument pos:start="47:20" pos:end="47:23"><expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">NULL</name></expr></argument>, <argument pos:start="47:26" pos:end="47:37"><expr pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:40" pos:end="47:86"><expr pos:start="47:40" pos:end="47:86"><literal type="string" pos:start="47:40" pos:end="47:86">"Output file #%d does not contain any stream\n"</literal></expr></argument>, <argument pos:start="47:89" pos:end="47:89"><expr pos:start="47:89" pos:end="47:89"><name pos:start="47:89" pos:end="47:89">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:35">return <expr pos:start="49:20" pos:end="49:34"><call pos:start="49:20" pos:end="49:34"><name pos:start="49:20" pos:end="49:26">AVERROR</name><argument_list pos:start="49:27" pos:end="49:34">(<argument pos:start="49:28" pos:end="49:33"><expr pos:start="49:28" pos:end="49:33"><name pos:start="49:28" pos:end="49:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="57:5" pos:end="57:35">/* init complex filtergraphs */</comment>

    <for pos:start="59:5" pos:end="63:23">for <control pos:start="59:9" pos:end="59:41">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:36"><expr pos:start="59:17" pos:end="59:35"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <name pos:start="59:21" pos:end="59:35">nb_filtergraphs</name></expr>;</condition> <incr pos:start="59:38" pos:end="59:40"><expr pos:start="59:38" pos:end="59:40"><name pos:start="59:38" pos:end="59:38">i</name><operator pos:start="59:39" pos:end="59:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="61:9" pos:end="63:23"><block_content pos:start="61:9" pos:end="63:23">

        <if_stmt pos:start="61:9" pos:end="63:23"><if pos:start="61:9" pos:end="63:23">if <condition pos:start="61:12" pos:end="61:76">(<expr pos:start="61:13" pos:end="61:75"><operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:16">ret</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:70"><name pos:start="61:20" pos:end="61:40">avfilter_graph_config</name><argument_list pos:start="61:41" pos:end="61:70">(<argument pos:start="61:42" pos:end="61:63"><expr pos:start="61:42" pos:end="61:63"><name pos:start="61:42" pos:end="61:56"><name pos:start="61:42" pos:end="61:53">filtergraphs</name><index pos:start="61:54" pos:end="61:56">[<expr pos:start="61:55" pos:end="61:55"><name pos:start="61:55" pos:end="61:55">i</name></expr>]</index></name><operator pos:start="61:57" pos:end="61:58">-&gt;</operator><name pos:start="61:59" pos:end="61:63">graph</name></expr></argument>, <argument pos:start="61:66" pos:end="61:69"><expr pos:start="61:66" pos:end="61:69"><name pos:start="61:66" pos:end="61:69">NULL</name></expr></argument>)</argument_list></call><operator pos:start="61:71" pos:end="61:71">)</operator> <operator pos:start="61:73" pos:end="61:73">&lt;</operator> <literal type="number" pos:start="61:75" pos:end="61:75">0</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:23"><block_content pos:start="63:13" pos:end="63:23">

            <return pos:start="63:13" pos:end="63:23">return <expr pos:start="63:20" pos:end="63:22"><name pos:start="63:20" pos:end="63:22">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>



    <comment type="block" pos:start="67:5" pos:end="67:74">/* for each output stream, we compute the right encoding parameters */</comment>

    <for pos:start="69:5" pos:end="529:5">for <control pos:start="69:9" pos:end="69:43">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">i</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:38"><expr pos:start="69:17" pos:end="69:37"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <name pos:start="69:21" pos:end="69:37">nb_output_streams</name></expr>;</condition> <incr pos:start="69:40" pos:end="69:42"><expr pos:start="69:40" pos:end="69:42"><name pos:start="69:40" pos:end="69:40">i</name><operator pos:start="69:41" pos:end="69:42">++</operator></expr></incr>)</control> <block pos:start="69:45" pos:end="529:5">{<block_content pos:start="71:9" pos:end="527:9">

        <expr_stmt pos:start="71:9" pos:end="71:32"><expr pos:start="71:9" pos:end="71:31"><name pos:start="71:9" pos:end="71:11">ost</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <name pos:start="71:15" pos:end="71:31"><name pos:start="71:15" pos:end="71:28">output_streams</name><index pos:start="71:29" pos:end="71:31">[<expr pos:start="71:30" pos:end="71:30"><name pos:start="71:30" pos:end="71:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:49"><expr pos:start="73:9" pos:end="73:48"><name pos:start="73:9" pos:end="73:10">oc</name>  <operator pos:start="73:13" pos:end="73:13">=</operator> <name pos:start="73:15" pos:end="73:43"><name pos:start="73:15" pos:end="73:26">output_files</name><index pos:start="73:27" pos:end="73:43">[<expr pos:start="73:28" pos:end="73:42"><name pos:start="73:28" pos:end="73:42"><name pos:start="73:28" pos:end="73:30">ost</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:42">file_index</name></name></expr>]</index></name><operator pos:start="73:44" pos:end="73:45">-&gt;</operator><name pos:start="73:46" pos:end="73:48">ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:36"><expr pos:start="75:9" pos:end="75:35"><name pos:start="75:9" pos:end="75:11">ist</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:35"><name pos:start="75:15" pos:end="75:30">get_input_stream</name><argument_list pos:start="75:31" pos:end="75:35">(<argument pos:start="75:32" pos:end="75:34"><expr pos:start="75:32" pos:end="75:34"><name pos:start="75:32" pos:end="75:34">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="79:9" pos:end="81:21"><if pos:start="79:9" pos:end="81:21">if <condition pos:start="79:12" pos:end="79:37">(<expr pos:start="79:13" pos:end="79:36"><name pos:start="79:13" pos:end="79:36"><name pos:start="79:13" pos:end="79:15">ost</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:36">attachment_filename</name></name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:21"><block_content pos:start="81:13" pos:end="81:21">

            <continue pos:start="81:13" pos:end="81:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:32"><expr pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:13">codec</name>  <operator pos:start="85:16" pos:end="85:16">=</operator> <name pos:start="85:18" pos:end="85:31"><name pos:start="85:18" pos:end="85:20">ost</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:24">st</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:31">codec</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="101:9"><if pos:start="89:9" pos:end="101:9">if <condition pos:start="89:12" pos:end="89:16">(<expr pos:start="89:13" pos:end="89:15"><name pos:start="89:13" pos:end="89:15">ist</name></expr>)</condition> <block pos:start="89:18" pos:end="101:9">{<block_content pos:start="91:13" pos:end="99:75">

            <expr_stmt pos:start="91:13" pos:end="91:36"><expr pos:start="91:13" pos:end="91:35"><name pos:start="91:13" pos:end="91:18">icodec</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:35"><name pos:start="91:22" pos:end="91:24">ist</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:28">st</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:35">codec</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="95:13" pos:end="95:65"><expr pos:start="95:13" pos:end="95:64"><name pos:start="95:13" pos:end="95:32"><name pos:start="95:13" pos:end="95:15">ost</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:19">st</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:32">disposition</name></name>          <operator pos:start="95:43" pos:end="95:43">=</operator> <name pos:start="95:45" pos:end="95:64"><name pos:start="95:45" pos:end="95:47">ist</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:51">st</name><operator pos:start="95:52" pos:end="95:53">-&gt;</operator><name pos:start="95:54" pos:end="95:64">disposition</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:72"><expr pos:start="97:13" pos:end="97:71"><name pos:start="97:13" pos:end="97:38"><name pos:start="97:13" pos:end="97:17">codec</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:38">bits_per_raw_sample</name></name>    <operator pos:start="97:43" pos:end="97:43">=</operator> <name pos:start="97:45" pos:end="97:71"><name pos:start="97:45" pos:end="97:50">icodec</name><operator pos:start="97:51" pos:end="97:52">-&gt;</operator><name pos:start="97:53" pos:end="97:71">bits_per_raw_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:75"><expr pos:start="99:13" pos:end="99:74"><name pos:start="99:13" pos:end="99:41"><name pos:start="99:13" pos:end="99:17">codec</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:41">chroma_sample_location</name></name> <operator pos:start="99:43" pos:end="99:43">=</operator> <name pos:start="99:45" pos:end="99:74"><name pos:start="99:45" pos:end="99:50">icodec</name><operator pos:start="99:51" pos:end="99:52">-&gt;</operator><name pos:start="99:53" pos:end="99:74">chroma_sample_location</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="527:9"><if pos:start="105:9" pos:end="257:9">if <condition pos:start="105:12" pos:end="105:29">(<expr pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:15">ost</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:28">stream_copy</name></name></expr>)</condition> <block pos:start="105:31" pos:end="257:9">{<block_content pos:start="107:13" pos:end="255:13">

            <decl_stmt pos:start="107:13" pos:end="107:32"><decl pos:start="107:13" pos:end="107:31"><type pos:start="107:13" pos:end="107:20"><name pos:start="107:13" pos:end="107:20">uint64_t</name></type> <name pos:start="107:22" pos:end="107:31">extra_size</name></decl>;</decl_stmt>



            <expr_stmt pos:start="111:13" pos:end="111:44"><expr pos:start="111:13" pos:end="111:43"><call pos:start="111:13" pos:end="111:43"><name pos:start="111:13" pos:end="111:22">av_assert0</name><argument_list pos:start="111:23" pos:end="111:43">(<argument pos:start="111:24" pos:end="111:42"><expr pos:start="111:24" pos:end="111:42"><name pos:start="111:24" pos:end="111:26">ist</name> <operator pos:start="111:28" pos:end="111:29">&amp;&amp;</operator> <operator pos:start="111:31" pos:end="111:31">!</operator><name pos:start="111:32" pos:end="111:42"><name pos:start="111:32" pos:end="111:34">ost</name><operator pos:start="111:35" pos:end="111:36">-&gt;</operator><name pos:start="111:37" pos:end="111:42">filter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:89"><expr pos:start="115:13" pos:end="115:88"><name pos:start="115:13" pos:end="115:22">extra_size</name> <operator pos:start="115:24" pos:end="115:24">=</operator> <operator pos:start="115:26" pos:end="115:26">(</operator><name pos:start="115:27" pos:end="115:34">uint64_t</name><operator pos:start="115:35" pos:end="115:35">)</operator><name pos:start="115:36" pos:end="115:57"><name pos:start="115:36" pos:end="115:41">icodec</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:57">extradata_size</name></name> <operator pos:start="115:59" pos:end="115:59">+</operator> <name pos:start="115:61" pos:end="115:88">FF_INPUT_BUFFER_PADDING_SIZE</name></expr>;</expr_stmt>



            <if_stmt pos:start="119:13" pos:end="123:13"><if pos:start="119:13" pos:end="123:13">if <condition pos:start="119:16" pos:end="119:37">(<expr pos:start="119:17" pos:end="119:36"><name pos:start="119:17" pos:end="119:26">extra_size</name> <operator pos:start="119:28" pos:end="119:28">&gt;</operator> <name pos:start="119:30" pos:end="119:36">INT_MAX</name></expr>)</condition> <block pos:start="119:39" pos:end="123:13">{<block_content pos:start="121:17" pos:end="121:39">

                <return pos:start="121:17" pos:end="121:39">return <expr pos:start="121:24" pos:end="121:38"><call pos:start="121:24" pos:end="121:38"><name pos:start="121:24" pos:end="121:30">AVERROR</name><argument_list pos:start="121:31" pos:end="121:38">(<argument pos:start="121:32" pos:end="121:37"><expr pos:start="121:32" pos:end="121:37"><name pos:start="121:32" pos:end="121:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="127:13" pos:end="127:73">/* if stream_copy is selected, no need to decode or encode */</comment>

            <expr_stmt pos:start="129:13" pos:end="129:49"><expr pos:start="129:13" pos:end="129:48"><name pos:start="129:13" pos:end="129:27"><name pos:start="129:13" pos:end="129:17">codec</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:27">codec_id</name></name>   <operator pos:start="129:31" pos:end="129:31">=</operator> <name pos:start="129:33" pos:end="129:48"><name pos:start="129:33" pos:end="129:38">icodec</name><operator pos:start="129:39" pos:end="129:40">-&gt;</operator><name pos:start="129:41" pos:end="129:48">codec_id</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:51"><expr pos:start="131:13" pos:end="131:50"><name pos:start="131:13" pos:end="131:29"><name pos:start="131:13" pos:end="131:17">codec</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:29">codec_type</name></name> <operator pos:start="131:31" pos:end="131:31">=</operator> <name pos:start="131:33" pos:end="131:50"><name pos:start="131:33" pos:end="131:38">icodec</name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:50">codec_type</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="135:13" pos:end="145:13"><if pos:start="135:13" pos:end="145:13">if <condition pos:start="135:16" pos:end="135:34">(<expr pos:start="135:17" pos:end="135:33"><operator pos:start="135:17" pos:end="135:17">!</operator><name pos:start="135:18" pos:end="135:33"><name pos:start="135:18" pos:end="135:22">codec</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:33">codec_tag</name></name></expr>)</condition> <block pos:start="135:36" pos:end="145:13">{<block_content pos:start="137:17" pos:end="143:57">

                <if_stmt pos:start="137:17" pos:end="143:57"><if pos:start="137:17" pos:end="143:57">if <condition pos:start="137:20" pos:end="141:85">(<expr pos:start="137:21" pos:end="141:84"><operator pos:start="137:21" pos:end="137:21">!</operator><name pos:start="137:22" pos:end="137:43"><name pos:start="137:22" pos:end="137:23">oc</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:32">oformat</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:43">codec_tag</name></name> <operator pos:start="137:45" pos:end="137:46">||</operator>

                     <call pos:start="139:22" pos:end="139:80"><name pos:start="139:22" pos:end="139:36">av_codec_get_id</name> <argument_list pos:start="139:38" pos:end="139:80">(<argument pos:start="139:39" pos:end="139:60"><expr pos:start="139:39" pos:end="139:60"><name pos:start="139:39" pos:end="139:60"><name pos:start="139:39" pos:end="139:40">oc</name><operator pos:start="139:41" pos:end="139:42">-&gt;</operator><name pos:start="139:43" pos:end="139:49">oformat</name><operator pos:start="139:50" pos:end="139:51">-&gt;</operator><name pos:start="139:52" pos:end="139:60">codec_tag</name></name></expr></argument>, <argument pos:start="139:63" pos:end="139:79"><expr pos:start="139:63" pos:end="139:79"><name pos:start="139:63" pos:end="139:79"><name pos:start="139:63" pos:end="139:68">icodec</name><operator pos:start="139:69" pos:end="139:70">-&gt;</operator><name pos:start="139:71" pos:end="139:79">codec_tag</name></name></expr></argument>)</argument_list></call> <operator pos:start="139:82" pos:end="139:83">==</operator> <name pos:start="139:85" pos:end="139:99"><name pos:start="139:85" pos:end="139:89">codec</name><operator pos:start="139:90" pos:end="139:91">-&gt;</operator><name pos:start="139:92" pos:end="139:99">codec_id</name></name> <operator pos:start="139:101" pos:end="139:102">||</operator>

                     <call pos:start="141:22" pos:end="141:79"><name pos:start="141:22" pos:end="141:37">av_codec_get_tag</name><argument_list pos:start="141:38" pos:end="141:79">(<argument pos:start="141:39" pos:end="141:60"><expr pos:start="141:39" pos:end="141:60"><name pos:start="141:39" pos:end="141:60"><name pos:start="141:39" pos:end="141:40">oc</name><operator pos:start="141:41" pos:end="141:42">-&gt;</operator><name pos:start="141:43" pos:end="141:49">oformat</name><operator pos:start="141:50" pos:end="141:51">-&gt;</operator><name pos:start="141:52" pos:end="141:60">codec_tag</name></name></expr></argument>, <argument pos:start="141:63" pos:end="141:78"><expr pos:start="141:63" pos:end="141:78"><name pos:start="141:63" pos:end="141:78"><name pos:start="141:63" pos:end="141:68">icodec</name><operator pos:start="141:69" pos:end="141:70">-&gt;</operator><name pos:start="141:71" pos:end="141:78">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="141:81" pos:end="141:82">&lt;=</operator> <literal type="number" pos:start="141:84" pos:end="141:84">0</literal></expr>)</condition><block type="pseudo" pos:start="143:21" pos:end="143:57"><block_content pos:start="143:21" pos:end="143:57">

                    <expr_stmt pos:start="143:21" pos:end="143:57"><expr pos:start="143:21" pos:end="143:56"><name pos:start="143:21" pos:end="143:36"><name pos:start="143:21" pos:end="143:25">codec</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:36">codec_tag</name></name> <operator pos:start="143:38" pos:end="143:38">=</operator> <name pos:start="143:40" pos:end="143:56"><name pos:start="143:40" pos:end="143:45">icodec</name><operator pos:start="143:46" pos:end="143:47">-&gt;</operator><name pos:start="143:48" pos:end="143:56">codec_tag</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="149:13" pos:end="149:53"><expr pos:start="149:13" pos:end="149:52"><name pos:start="149:13" pos:end="149:27"><name pos:start="149:13" pos:end="149:17">codec</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:27">bit_rate</name></name>       <operator pos:start="149:35" pos:end="149:35">=</operator> <name pos:start="149:37" pos:end="149:52"><name pos:start="149:37" pos:end="149:42">icodec</name><operator pos:start="149:43" pos:end="149:44">-&gt;</operator><name pos:start="149:45" pos:end="149:52">bit_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:56"><expr pos:start="151:13" pos:end="151:55"><name pos:start="151:13" pos:end="151:30"><name pos:start="151:13" pos:end="151:17">codec</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:30">rc_max_rate</name></name>    <operator pos:start="151:35" pos:end="151:35">=</operator> <name pos:start="151:37" pos:end="151:55"><name pos:start="151:37" pos:end="151:42">icodec</name><operator pos:start="151:43" pos:end="151:44">-&gt;</operator><name pos:start="151:45" pos:end="151:55">rc_max_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:59"><expr pos:start="153:13" pos:end="153:58"><name pos:start="153:13" pos:end="153:33"><name pos:start="153:13" pos:end="153:17">codec</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:33">rc_buffer_size</name></name> <operator pos:start="153:35" pos:end="153:35">=</operator> <name pos:start="153:37" pos:end="153:58"><name pos:start="153:37" pos:end="153:42">icodec</name><operator pos:start="153:43" pos:end="153:44">-&gt;</operator><name pos:start="153:45" pos:end="153:58">rc_buffer_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:56"><expr pos:start="155:13" pos:end="155:55"><name pos:start="155:13" pos:end="155:30"><name pos:start="155:13" pos:end="155:17">codec</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:30">field_order</name></name>    <operator pos:start="155:35" pos:end="155:35">=</operator> <name pos:start="155:37" pos:end="155:55"><name pos:start="155:37" pos:end="155:42">icodec</name><operator pos:start="155:43" pos:end="155:44">-&gt;</operator><name pos:start="155:45" pos:end="155:55">field_order</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:59"><expr pos:start="157:13" pos:end="157:58"><name pos:start="157:13" pos:end="157:28"><name pos:start="157:13" pos:end="157:17">codec</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:28">extradata</name></name>      <operator pos:start="157:35" pos:end="157:35">=</operator> <call pos:start="157:37" pos:end="157:58"><name pos:start="157:37" pos:end="157:46">av_mallocz</name><argument_list pos:start="157:47" pos:end="157:58">(<argument pos:start="157:48" pos:end="157:57"><expr pos:start="157:48" pos:end="157:57"><name pos:start="157:48" pos:end="157:57">extra_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="163:13"><if pos:start="159:13" pos:end="163:13">if <condition pos:start="159:16" pos:end="159:34">(<expr pos:start="159:17" pos:end="159:33"><operator pos:start="159:17" pos:end="159:17">!</operator><name pos:start="159:18" pos:end="159:33"><name pos:start="159:18" pos:end="159:22">codec</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:33">extradata</name></name></expr>)</condition> <block pos:start="159:36" pos:end="163:13">{<block_content pos:start="161:17" pos:end="161:39">

                <return pos:start="161:17" pos:end="161:39">return <expr pos:start="161:24" pos:end="161:38"><call pos:start="161:24" pos:end="161:38"><name pos:start="161:24" pos:end="161:30">AVERROR</name><argument_list pos:start="161:31" pos:end="161:38">(<argument pos:start="161:32" pos:end="161:37"><expr pos:start="161:32" pos:end="161:37"><name pos:start="161:32" pos:end="161:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:80"><expr pos:start="165:13" pos:end="165:79"><call pos:start="165:13" pos:end="165:79"><name pos:start="165:13" pos:end="165:18">memcpy</name><argument_list pos:start="165:19" pos:end="165:79">(<argument pos:start="165:20" pos:end="165:35"><expr pos:start="165:20" pos:end="165:35"><name pos:start="165:20" pos:end="165:35"><name pos:start="165:20" pos:end="165:24">codec</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:35">extradata</name></name></expr></argument>, <argument pos:start="165:38" pos:end="165:54"><expr pos:start="165:38" pos:end="165:54"><name pos:start="165:38" pos:end="165:54"><name pos:start="165:38" pos:end="165:43">icodec</name><operator pos:start="165:44" pos:end="165:45">-&gt;</operator><name pos:start="165:46" pos:end="165:54">extradata</name></name></expr></argument>, <argument pos:start="165:57" pos:end="165:78"><expr pos:start="165:57" pos:end="165:78"><name pos:start="165:57" pos:end="165:78"><name pos:start="165:57" pos:end="165:62">icodec</name><operator pos:start="165:63" pos:end="165:64">-&gt;</operator><name pos:start="165:65" pos:end="165:78">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:59"><expr pos:start="167:13" pos:end="167:58"><name pos:start="167:13" pos:end="167:33"><name pos:start="167:13" pos:end="167:17">codec</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:33">extradata_size</name></name> <operator pos:start="167:35" pos:end="167:35">=</operator> <name pos:start="167:37" pos:end="167:58"><name pos:start="167:37" pos:end="167:42">icodec</name><operator pos:start="167:43" pos:end="167:44">-&gt;</operator><name pos:start="167:45" pos:end="167:58">extradata_size</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="169:13" pos:end="181:54"><if pos:start="169:13" pos:end="179:13">if <condition pos:start="169:16" pos:end="169:25">(<expr pos:start="169:17" pos:end="169:24"><operator pos:start="169:17" pos:end="169:17">!</operator><name pos:start="169:18" pos:end="169:24">copy_tb</name></expr>)</condition> <block pos:start="169:27" pos:end="179:13">{<block_content pos:start="171:17" pos:end="177:79">

                <expr_stmt pos:start="171:17" pos:end="171:58"><expr pos:start="171:17" pos:end="171:57"><name pos:start="171:17" pos:end="171:32"><name pos:start="171:17" pos:end="171:21">codec</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:32">time_base</name></name>      <operator pos:start="171:39" pos:end="171:39">=</operator> <name pos:start="171:41" pos:end="171:57"><name pos:start="171:41" pos:end="171:46">icodec</name><operator pos:start="171:47" pos:end="171:48">-&gt;</operator><name pos:start="171:49" pos:end="171:57">time_base</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:64"><expr pos:start="173:17" pos:end="173:63"><name pos:start="173:17" pos:end="173:36"><name pos:start="173:17" pos:end="173:21">codec</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:32">time_base</name><operator pos:start="173:33" pos:end="173:33">.</operator><name pos:start="173:34" pos:end="173:36">num</name></name> <operator pos:start="173:38" pos:end="173:39">*=</operator> <name pos:start="173:41" pos:end="173:63"><name pos:start="173:41" pos:end="173:46">icodec</name><operator pos:start="173:47" pos:end="173:48">-&gt;</operator><name pos:start="173:49" pos:end="173:63">ticks_per_frame</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="177:79"><expr pos:start="175:17" pos:end="177:78"><call pos:start="175:17" pos:end="177:78"><name pos:start="175:17" pos:end="175:25">av_reduce</name><argument_list pos:start="175:26" pos:end="177:78">(<argument pos:start="175:27" pos:end="175:47"><expr pos:start="175:27" pos:end="175:47"><operator pos:start="175:27" pos:end="175:27">&amp;</operator><name pos:start="175:28" pos:end="175:47"><name pos:start="175:28" pos:end="175:32">codec</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:43">time_base</name><operator pos:start="175:44" pos:end="175:44">.</operator><name pos:start="175:45" pos:end="175:47">num</name></name></expr></argument>, <argument pos:start="175:50" pos:end="175:70"><expr pos:start="175:50" pos:end="175:70"><operator pos:start="175:50" pos:end="175:50">&amp;</operator><name pos:start="175:51" pos:end="175:70"><name pos:start="175:51" pos:end="175:55">codec</name><operator pos:start="175:56" pos:end="175:57">-&gt;</operator><name pos:start="175:58" pos:end="175:66">time_base</name><operator pos:start="175:67" pos:end="175:67">.</operator><name pos:start="175:68" pos:end="175:70">den</name></name></expr></argument>,

                          <argument pos:start="177:27" pos:end="177:46"><expr pos:start="177:27" pos:end="177:46"><name pos:start="177:27" pos:end="177:46"><name pos:start="177:27" pos:end="177:31">codec</name><operator pos:start="177:32" pos:end="177:33">-&gt;</operator><name pos:start="177:34" pos:end="177:42">time_base</name><operator pos:start="177:43" pos:end="177:43">.</operator><name pos:start="177:44" pos:end="177:46">num</name></name></expr></argument>, <argument pos:start="177:49" pos:end="177:68"><expr pos:start="177:49" pos:end="177:68"><name pos:start="177:49" pos:end="177:68"><name pos:start="177:49" pos:end="177:53">codec</name><operator pos:start="177:54" pos:end="177:55">-&gt;</operator><name pos:start="177:56" pos:end="177:64">time_base</name><operator pos:start="177:65" pos:end="177:65">.</operator><name pos:start="177:66" pos:end="177:68">den</name></name></expr></argument>, <argument pos:start="177:71" pos:end="177:77"><expr pos:start="177:71" pos:end="177:77"><name pos:start="177:71" pos:end="177:77">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="179:15" pos:end="181:54">else<block type="pseudo" pos:start="181:17" pos:end="181:54"><block_content pos:start="181:17" pos:end="181:54">

                <expr_stmt pos:start="181:17" pos:end="181:54"><expr pos:start="181:17" pos:end="181:53"><name pos:start="181:17" pos:end="181:32"><name pos:start="181:17" pos:end="181:21">codec</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:32">time_base</name></name> <operator pos:start="181:34" pos:end="181:34">=</operator> <name pos:start="181:36" pos:end="181:53"><name pos:start="181:36" pos:end="181:38">ist</name><operator pos:start="181:39" pos:end="181:40">-&gt;</operator><name pos:start="181:41" pos:end="181:42">st</name><operator pos:start="181:43" pos:end="181:44">-&gt;</operator><name pos:start="181:45" pos:end="181:53">time_base</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <switch pos:start="185:13" pos:end="255:13">switch <condition pos:start="185:20" pos:end="185:38">(<expr pos:start="185:21" pos:end="185:37"><name pos:start="185:21" pos:end="185:37"><name pos:start="185:21" pos:end="185:25">codec</name><operator pos:start="185:26" pos:end="185:27">-&gt;</operator><name pos:start="185:28" pos:end="185:37">codec_type</name></name></expr>)</condition> <block pos:start="185:40" pos:end="255:13">{<block_content pos:start="187:13" pos:end="253:24">

            <case pos:start="187:13" pos:end="187:36">case <expr pos:start="187:18" pos:end="187:35"><name pos:start="187:18" pos:end="187:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <if_stmt pos:start="189:17" pos:end="195:17"><if pos:start="189:17" pos:end="195:17">if <condition pos:start="189:20" pos:end="189:40">(<expr pos:start="189:21" pos:end="189:39"><name pos:start="189:21" pos:end="189:32">audio_volume</name> <operator pos:start="189:34" pos:end="189:35">!=</operator> <literal type="number" pos:start="189:37" pos:end="189:39">256</literal></expr>)</condition> <block pos:start="189:42" pos:end="195:17">{<block_content pos:start="191:21" pos:end="193:36">

                    <expr_stmt pos:start="191:21" pos:end="191:116"><expr pos:start="191:21" pos:end="191:115"><call pos:start="191:21" pos:end="191:115"><name pos:start="191:21" pos:end="191:26">av_log</name><argument_list pos:start="191:27" pos:end="191:115">(<argument pos:start="191:28" pos:end="191:31"><expr pos:start="191:28" pos:end="191:31"><name pos:start="191:28" pos:end="191:31">NULL</name></expr></argument>, <argument pos:start="191:34" pos:end="191:45"><expr pos:start="191:34" pos:end="191:45"><name pos:start="191:34" pos:end="191:45">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="191:48" pos:end="191:114"><expr pos:start="191:48" pos:end="191:114"><literal type="string" pos:start="191:48" pos:end="191:114">"-acodec copy and -vol are incompatible (frames are not decoded)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:36"><expr pos:start="193:21" pos:end="193:35"><call pos:start="193:21" pos:end="193:35"><name pos:start="193:21" pos:end="193:32">exit_program</name><argument_list pos:start="193:33" pos:end="193:35">(<argument pos:start="193:34" pos:end="193:34"><expr pos:start="193:34" pos:end="193:34"><literal type="number" pos:start="193:34" pos:end="193:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:67"><expr pos:start="197:17" pos:end="197:66"><name pos:start="197:17" pos:end="197:37"><name pos:start="197:17" pos:end="197:21">codec</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:37">channel_layout</name></name>     <operator pos:start="197:43" pos:end="197:43">=</operator> <name pos:start="197:45" pos:end="197:66"><name pos:start="197:45" pos:end="197:50">icodec</name><operator pos:start="197:51" pos:end="197:52">-&gt;</operator><name pos:start="197:53" pos:end="197:66">channel_layout</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:64"><expr pos:start="199:17" pos:end="199:63"><name pos:start="199:17" pos:end="199:34"><name pos:start="199:17" pos:end="199:21">codec</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:34">sample_rate</name></name>        <operator pos:start="199:43" pos:end="199:43">=</operator> <name pos:start="199:45" pos:end="199:63"><name pos:start="199:45" pos:end="199:50">icodec</name><operator pos:start="199:51" pos:end="199:52">-&gt;</operator><name pos:start="199:53" pos:end="199:63">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:61"><expr pos:start="201:17" pos:end="201:60"><name pos:start="201:17" pos:end="201:31"><name pos:start="201:17" pos:end="201:21">codec</name><operator pos:start="201:22" pos:end="201:23">-&gt;</operator><name pos:start="201:24" pos:end="201:31">channels</name></name>           <operator pos:start="201:43" pos:end="201:43">=</operator> <name pos:start="201:45" pos:end="201:60"><name pos:start="201:45" pos:end="201:50">icodec</name><operator pos:start="201:51" pos:end="201:52">-&gt;</operator><name pos:start="201:53" pos:end="201:60">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:63"><expr pos:start="203:17" pos:end="203:62"><name pos:start="203:17" pos:end="203:33"><name pos:start="203:17" pos:end="203:21">codec</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:33">frame_size</name></name>         <operator pos:start="203:43" pos:end="203:43">=</operator> <name pos:start="203:45" pos:end="203:62"><name pos:start="203:45" pos:end="203:50">icodec</name><operator pos:start="203:51" pos:end="203:52">-&gt;</operator><name pos:start="203:53" pos:end="203:62">frame_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:71"><expr pos:start="205:17" pos:end="205:70"><name pos:start="205:17" pos:end="205:41"><name pos:start="205:17" pos:end="205:21">codec</name><operator pos:start="205:22" pos:end="205:23">-&gt;</operator><name pos:start="205:24" pos:end="205:41">audio_service_type</name></name> <operator pos:start="205:43" pos:end="205:43">=</operator> <name pos:start="205:45" pos:end="205:70"><name pos:start="205:45" pos:end="205:50">icodec</name><operator pos:start="205:51" pos:end="205:52">-&gt;</operator><name pos:start="205:53" pos:end="205:70">audio_service_type</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:64"><expr pos:start="207:17" pos:end="207:63"><name pos:start="207:17" pos:end="207:34"><name pos:start="207:17" pos:end="207:21">codec</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:34">block_align</name></name>        <operator pos:start="207:43" pos:end="207:43">=</operator> <name pos:start="207:45" pos:end="207:63"><name pos:start="207:45" pos:end="207:50">icodec</name><operator pos:start="207:51" pos:end="207:52">-&gt;</operator><name pos:start="207:53" pos:end="207:63">block_align</name></name></expr>;</expr_stmt>

                <break pos:start="209:17" pos:end="209:22">break;</break>

            <case pos:start="211:13" pos:end="211:36">case <expr pos:start="211:18" pos:end="211:35"><name pos:start="211:18" pos:end="211:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="213:17" pos:end="213:60"><expr pos:start="213:17" pos:end="213:59"><name pos:start="213:17" pos:end="213:30"><name pos:start="213:17" pos:end="213:21">codec</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:30">pix_fmt</name></name>            <operator pos:start="213:43" pos:end="213:43">=</operator> <name pos:start="213:45" pos:end="213:59"><name pos:start="213:45" pos:end="213:50">icodec</name><operator pos:start="213:51" pos:end="213:52">-&gt;</operator><name pos:start="213:53" pos:end="213:59">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:58"><expr pos:start="215:17" pos:end="215:57"><name pos:start="215:17" pos:end="215:28"><name pos:start="215:17" pos:end="215:21">codec</name><operator pos:start="215:22" pos:end="215:23">-&gt;</operator><name pos:start="215:24" pos:end="215:28">width</name></name>              <operator pos:start="215:43" pos:end="215:43">=</operator> <name pos:start="215:45" pos:end="215:57"><name pos:start="215:45" pos:end="215:50">icodec</name><operator pos:start="215:51" pos:end="215:52">-&gt;</operator><name pos:start="215:53" pos:end="215:57">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:59"><expr pos:start="217:17" pos:end="217:58"><name pos:start="217:17" pos:end="217:29"><name pos:start="217:17" pos:end="217:21">codec</name><operator pos:start="217:22" pos:end="217:23">-&gt;</operator><name pos:start="217:24" pos:end="217:29">height</name></name>             <operator pos:start="217:43" pos:end="217:43">=</operator> <name pos:start="217:45" pos:end="217:58"><name pos:start="217:45" pos:end="217:50">icodec</name><operator pos:start="217:51" pos:end="217:52">-&gt;</operator><name pos:start="217:53" pos:end="217:58">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:65"><expr pos:start="219:17" pos:end="219:64"><name pos:start="219:17" pos:end="219:35"><name pos:start="219:17" pos:end="219:21">codec</name><operator pos:start="219:22" pos:end="219:23">-&gt;</operator><name pos:start="219:24" pos:end="219:35">has_b_frames</name></name>       <operator pos:start="219:43" pos:end="219:43">=</operator> <name pos:start="219:45" pos:end="219:64"><name pos:start="219:45" pos:end="219:50">icodec</name><operator pos:start="219:51" pos:end="219:52">-&gt;</operator><name pos:start="219:53" pos:end="219:64">has_b_frames</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="221:17" pos:end="233:17"><if pos:start="221:17" pos:end="233:17">if <condition pos:start="221:20" pos:end="221:52">(<expr pos:start="221:21" pos:end="221:51"><operator pos:start="221:21" pos:end="221:21">!</operator><name pos:start="221:22" pos:end="221:51"><name pos:start="221:22" pos:end="221:26">codec</name><operator pos:start="221:27" pos:end="221:28">-&gt;</operator><name pos:start="221:29" pos:end="221:47">sample_aspect_ratio</name><operator pos:start="221:48" pos:end="221:48">.</operator><name pos:start="221:49" pos:end="221:51">num</name></name></expr>)</condition> <block pos:start="221:54" pos:end="233:17">{<block_content pos:start="223:21" pos:end="231:81">

                    <expr_stmt pos:start="223:21" pos:end="231:81"><expr pos:start="223:21" pos:end="231:80"><name pos:start="223:21" pos:end="223:46"><name pos:start="223:21" pos:end="223:25">codec</name><operator pos:start="223:26" pos:end="223:27">-&gt;</operator><name pos:start="223:28" pos:end="223:46">sample_aspect_ratio</name></name>   <operator pos:start="223:50" pos:end="223:50">=</operator>

                    <name pos:start="225:21" pos:end="225:48"><name pos:start="225:21" pos:end="225:23">ost</name><operator pos:start="225:24" pos:end="225:25">-&gt;</operator><name pos:start="225:26" pos:end="225:27">st</name><operator pos:start="225:28" pos:end="225:29">-&gt;</operator><name pos:start="225:30" pos:end="225:48">sample_aspect_ratio</name></name> <operator pos:start="225:50" pos:end="225:50">=</operator>

                        <ternary pos:start="227:25" pos:end="231:80"><condition pos:start="227:25" pos:end="227:58"><expr pos:start="227:25" pos:end="227:56"><name pos:start="227:25" pos:end="227:56"><name pos:start="227:25" pos:end="227:27">ist</name><operator pos:start="227:28" pos:end="227:29">-&gt;</operator><name pos:start="227:30" pos:end="227:31">st</name><operator pos:start="227:32" pos:end="227:33">-&gt;</operator><name pos:start="227:34" pos:end="227:52">sample_aspect_ratio</name><operator pos:start="227:53" pos:end="227:53">.</operator><name pos:start="227:54" pos:end="227:56">num</name></name></expr> ?</condition><then pos:start="227:60" pos:end="227:87"> <expr pos:start="227:60" pos:end="227:87"><name pos:start="227:60" pos:end="227:87"><name pos:start="227:60" pos:end="227:62">ist</name><operator pos:start="227:63" pos:end="227:64">-&gt;</operator><name pos:start="227:65" pos:end="227:66">st</name><operator pos:start="227:67" pos:end="227:68">-&gt;</operator><name pos:start="227:69" pos:end="227:87">sample_aspect_ratio</name></name></expr> </then><else pos:start="227:89" pos:end="231:80">:

                        <expr pos:start="229:25" pos:end="231:80"><ternary pos:start="229:25" pos:end="231:80"><condition pos:start="229:25" pos:end="229:65"><expr pos:start="229:25" pos:end="229:63"><name pos:start="229:25" pos:end="229:63"><name pos:start="229:25" pos:end="229:27">ist</name><operator pos:start="229:28" pos:end="229:29">-&gt;</operator><name pos:start="229:30" pos:end="229:31">st</name><operator pos:start="229:32" pos:end="229:33">-&gt;</operator><name pos:start="229:34" pos:end="229:38">codec</name><operator pos:start="229:39" pos:end="229:40">-&gt;</operator><name pos:start="229:41" pos:end="229:59">sample_aspect_ratio</name><operator pos:start="229:60" pos:end="229:60">.</operator><name pos:start="229:61" pos:end="229:63">num</name></name></expr> ?</condition><then pos:start="231:25" pos:end="231:59">

                        <expr pos:start="231:25" pos:end="231:59"><name pos:start="231:25" pos:end="231:59"><name pos:start="231:25" pos:end="231:27">ist</name><operator pos:start="231:28" pos:end="231:29">-&gt;</operator><name pos:start="231:30" pos:end="231:31">st</name><operator pos:start="231:32" pos:end="231:33">-&gt;</operator><name pos:start="231:34" pos:end="231:38">codec</name><operator pos:start="231:39" pos:end="231:40">-&gt;</operator><name pos:start="231:41" pos:end="231:59">sample_aspect_ratio</name></name></expr> </then><else pos:start="231:61" pos:end="231:80">: <expr pos:start="231:63" pos:end="231:80"><operator pos:start="231:63" pos:end="231:63">(</operator><name pos:start="231:64" pos:end="231:73">AVRational</name><operator pos:start="231:74" pos:end="231:74">)</operator><block pos:start="231:75" pos:end="231:80">{<expr pos:start="231:76" pos:end="231:76"><literal type="number" pos:start="231:76" pos:end="231:76">0</literal></expr>, <expr pos:start="231:79" pos:end="231:79"><literal type="number" pos:start="231:79" pos:end="231:79">1</literal></expr>}</block></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="235:17" pos:end="235:22">break;</break>

            <case pos:start="237:13" pos:end="237:39">case <expr pos:start="237:18" pos:end="237:38"><name pos:start="237:18" pos:end="237:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="239:17" pos:end="239:46"><expr pos:start="239:17" pos:end="239:45"><name pos:start="239:17" pos:end="239:28"><name pos:start="239:17" pos:end="239:21">codec</name><operator pos:start="239:22" pos:end="239:23">-&gt;</operator><name pos:start="239:24" pos:end="239:28">width</name></name>  <operator pos:start="239:31" pos:end="239:31">=</operator> <name pos:start="239:33" pos:end="239:45"><name pos:start="239:33" pos:end="239:38">icodec</name><operator pos:start="239:39" pos:end="239:40">-&gt;</operator><name pos:start="239:41" pos:end="239:45">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="241:17" pos:end="241:47"><expr pos:start="241:17" pos:end="241:46"><name pos:start="241:17" pos:end="241:29"><name pos:start="241:17" pos:end="241:21">codec</name><operator pos:start="241:22" pos:end="241:23">-&gt;</operator><name pos:start="241:24" pos:end="241:29">height</name></name> <operator pos:start="241:31" pos:end="241:31">=</operator> <name pos:start="241:33" pos:end="241:46"><name pos:start="241:33" pos:end="241:38">icodec</name><operator pos:start="241:39" pos:end="241:40">-&gt;</operator><name pos:start="241:41" pos:end="241:46">height</name></name></expr>;</expr_stmt>

                <break pos:start="243:17" pos:end="243:22">break;</break>

            <case pos:start="245:13" pos:end="245:35">case <expr pos:start="245:18" pos:end="245:34"><name pos:start="245:18" pos:end="245:34">AVMEDIA_TYPE_DATA</name></expr>:</case>

            <case pos:start="247:13" pos:end="247:41">case <expr pos:start="247:18" pos:end="247:40"><name pos:start="247:18" pos:end="247:40">AVMEDIA_TYPE_ATTACHMENT</name></expr>:</case>

                <break pos:start="249:17" pos:end="249:22">break;</break>

            <default pos:start="251:13" pos:end="251:20">default:</default>

                <expr_stmt pos:start="253:17" pos:end="253:24"><expr pos:start="253:17" pos:end="253:23"><call pos:start="253:17" pos:end="253:23"><name pos:start="253:17" pos:end="253:21">abort</name><argument_list pos:start="253:22" pos:end="253:23">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="257:11" pos:end="527:9">else <block pos:start="257:16" pos:end="527:9">{<block_content pos:start="259:13" pos:end="525:13">

            <if_stmt pos:start="259:13" pos:end="277:13"><if pos:start="259:13" pos:end="277:13">if <condition pos:start="259:16" pos:end="259:26">(<expr pos:start="259:17" pos:end="259:25"><operator pos:start="259:17" pos:end="259:17">!</operator><name pos:start="259:18" pos:end="259:25"><name pos:start="259:18" pos:end="259:20">ost</name><operator pos:start="259:21" pos:end="259:22">-&gt;</operator><name pos:start="259:23" pos:end="259:25">enc</name></name></expr>)</condition> <block pos:start="259:28" pos:end="277:13">{<block_content pos:start="263:17" pos:end="275:33">

                <comment type="block" pos:start="261:17" pos:end="261:77">/* should only happen when a default codec is not present. */</comment>

                <expr_stmt pos:start="263:17" pos:end="271:44"><expr pos:start="263:17" pos:end="271:43"><call pos:start="263:17" pos:end="271:43"><name pos:start="263:17" pos:end="263:24">snprintf</name><argument_list pos:start="263:25" pos:end="271:43">(<argument pos:start="263:26" pos:end="263:30"><expr pos:start="263:26" pos:end="263:30"><name pos:start="263:26" pos:end="263:30">error</name></expr></argument>, <argument pos:start="263:33" pos:end="263:45"><expr pos:start="263:33" pos:end="263:45"><sizeof pos:start="263:33" pos:end="263:45">sizeof<argument_list pos:start="263:39" pos:end="263:45">(<argument pos:start="263:40" pos:end="263:44"><expr pos:start="263:40" pos:end="263:44"><name pos:start="263:40" pos:end="263:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="263:48" pos:end="269:46"><expr pos:start="263:48" pos:end="269:46"><literal type="string" pos:start="263:48" pos:end="263:77">"Automatic encoder selection "</literal>

                         <literal type="string" pos:start="265:26" pos:end="265:80">"failed for output stream #%d:%d. Default encoder for "</literal>

                         <literal type="string" pos:start="267:26" pos:end="267:76">"format %s is probably disabled. Please choose an "</literal>

                         <literal type="string" pos:start="269:26" pos:end="269:46">"encoder manually.\n"</literal></expr></argument>, <argument pos:start="269:49" pos:end="269:63"><expr pos:start="269:49" pos:end="269:63"><name pos:start="269:49" pos:end="269:63"><name pos:start="269:49" pos:end="269:51">ost</name><operator pos:start="269:52" pos:end="269:53">-&gt;</operator><name pos:start="269:54" pos:end="269:63">file_index</name></name></expr></argument>, <argument pos:start="269:66" pos:end="269:75"><expr pos:start="269:66" pos:end="269:75"><name pos:start="269:66" pos:end="269:75"><name pos:start="269:66" pos:end="269:68">ost</name><operator pos:start="269:69" pos:end="269:70">-&gt;</operator><name pos:start="269:71" pos:end="269:75">index</name></name></expr></argument>,

                         <argument pos:start="271:26" pos:end="271:42"><expr pos:start="271:26" pos:end="271:42"><name pos:start="271:26" pos:end="271:42"><name pos:start="271:26" pos:end="271:27">oc</name><operator pos:start="271:28" pos:end="271:29">-&gt;</operator><name pos:start="271:30" pos:end="271:36">oformat</name><operator pos:start="271:37" pos:end="271:38">-&gt;</operator><name pos:start="271:39" pos:end="271:42">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:38"><expr pos:start="273:17" pos:end="273:37"><name pos:start="273:17" pos:end="273:19">ret</name> <operator pos:start="273:21" pos:end="273:21">=</operator> <call pos:start="273:23" pos:end="273:37"><name pos:start="273:23" pos:end="273:29">AVERROR</name><argument_list pos:start="273:30" pos:end="273:37">(<argument pos:start="273:31" pos:end="273:36"><expr pos:start="273:31" pos:end="273:36"><name pos:start="273:31" pos:end="273:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="275:17" pos:end="275:33">goto <name pos:start="275:22" pos:end="275:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="281:13" pos:end="283:41"><if pos:start="281:13" pos:end="283:41">if <condition pos:start="281:16" pos:end="281:20">(<expr pos:start="281:17" pos:end="281:19"><name pos:start="281:17" pos:end="281:19">ist</name></expr>)</condition><block type="pseudo" pos:start="283:17" pos:end="283:41"><block_content pos:start="283:17" pos:end="283:41">

                <expr_stmt pos:start="283:17" pos:end="283:41"><expr pos:start="283:17" pos:end="283:40"><name pos:start="283:17" pos:end="283:36"><name pos:start="283:17" pos:end="283:19">ist</name><operator pos:start="283:20" pos:end="283:21">-&gt;</operator><name pos:start="283:22" pos:end="283:36">decoding_needed</name></name> <operator pos:start="283:38" pos:end="283:38">=</operator> <literal type="number" pos:start="283:40" pos:end="283:40">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:37"><expr pos:start="285:13" pos:end="285:36"><name pos:start="285:13" pos:end="285:32"><name pos:start="285:13" pos:end="285:15">ost</name><operator pos:start="285:16" pos:end="285:17">-&gt;</operator><name pos:start="285:18" pos:end="285:32">encoding_needed</name></name> <operator pos:start="285:34" pos:end="285:34">=</operator> <literal type="number" pos:start="285:36" pos:end="285:36">1</literal></expr>;</expr_stmt>



            <switch pos:start="289:13" pos:end="463:13">switch <condition pos:start="289:20" pos:end="289:38">(<expr pos:start="289:21" pos:end="289:37"><name pos:start="289:21" pos:end="289:37"><name pos:start="289:21" pos:end="289:25">codec</name><operator pos:start="289:26" pos:end="289:27">-&gt;</operator><name pos:start="289:28" pos:end="289:37">codec_type</name></name></expr>)</condition> <block pos:start="289:40" pos:end="463:13">{<block_content pos:start="291:13" pos:end="461:22">

            <case pos:start="291:13" pos:end="291:36">case <expr pos:start="291:18" pos:end="291:35"><name pos:start="291:18" pos:end="291:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="293:17" pos:end="293:48"><expr pos:start="293:17" pos:end="293:47"><name pos:start="293:17" pos:end="293:25"><name pos:start="293:17" pos:end="293:19">ost</name><operator pos:start="293:20" pos:end="293:21">-&gt;</operator><name pos:start="293:22" pos:end="293:25">fifo</name></name> <operator pos:start="293:27" pos:end="293:27">=</operator> <call pos:start="293:29" pos:end="293:47"><name pos:start="293:29" pos:end="293:41">av_fifo_alloc</name><argument_list pos:start="293:42" pos:end="293:47">(<argument pos:start="293:43" pos:end="293:46"><expr pos:start="293:43" pos:end="293:46"><literal type="number" pos:start="293:43" pos:end="293:46">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="295:17" pos:end="299:17"><if pos:start="295:17" pos:end="299:17">if <condition pos:start="295:20" pos:end="295:31">(<expr pos:start="295:21" pos:end="295:30"><operator pos:start="295:21" pos:end="295:21">!</operator><name pos:start="295:22" pos:end="295:30"><name pos:start="295:22" pos:end="295:24">ost</name><operator pos:start="295:25" pos:end="295:26">-&gt;</operator><name pos:start="295:27" pos:end="295:30">fifo</name></name></expr>)</condition> <block pos:start="295:33" pos:end="299:17">{<block_content pos:start="297:21" pos:end="297:43">

                    <return pos:start="297:21" pos:end="297:43">return <expr pos:start="297:28" pos:end="297:42"><call pos:start="297:28" pos:end="297:42"><name pos:start="297:28" pos:end="297:34">AVERROR</name><argument_list pos:start="297:35" pos:end="297:42">(<argument pos:start="297:36" pos:end="297:41"><expr pos:start="297:36" pos:end="297:41"><name pos:start="297:36" pos:end="297:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="303:17" pos:end="305:61"><if pos:start="303:17" pos:end="305:61">if <condition pos:start="303:20" pos:end="303:40">(<expr pos:start="303:21" pos:end="303:39"><operator pos:start="303:21" pos:end="303:21">!</operator><name pos:start="303:22" pos:end="303:39"><name pos:start="303:22" pos:end="303:26">codec</name><operator pos:start="303:27" pos:end="303:28">-&gt;</operator><name pos:start="303:29" pos:end="303:39">sample_rate</name></name></expr>)</condition><block type="pseudo" pos:start="305:21" pos:end="305:61"><block_content pos:start="305:21" pos:end="305:61">

                    <expr_stmt pos:start="305:21" pos:end="305:61"><expr pos:start="305:21" pos:end="305:60"><name pos:start="305:21" pos:end="305:38"><name pos:start="305:21" pos:end="305:25">codec</name><operator pos:start="305:26" pos:end="305:27">-&gt;</operator><name pos:start="305:28" pos:end="305:38">sample_rate</name></name> <operator pos:start="305:40" pos:end="305:40">=</operator> <name pos:start="305:42" pos:end="305:60"><name pos:start="305:42" pos:end="305:47">icodec</name><operator pos:start="305:48" pos:end="305:49">-&gt;</operator><name pos:start="305:50" pos:end="305:60">sample_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="307:17" pos:end="307:54"><expr pos:start="307:17" pos:end="307:53"><call pos:start="307:17" pos:end="307:53"><name pos:start="307:17" pos:end="307:34">choose_sample_rate</name><argument_list pos:start="307:35" pos:end="307:53">(<argument pos:start="307:36" pos:end="307:42"><expr pos:start="307:36" pos:end="307:42"><name pos:start="307:36" pos:end="307:42"><name pos:start="307:36" pos:end="307:38">ost</name><operator pos:start="307:39" pos:end="307:40">-&gt;</operator><name pos:start="307:41" pos:end="307:42">st</name></name></expr></argument>, <argument pos:start="307:45" pos:end="307:52"><expr pos:start="307:45" pos:end="307:52"><name pos:start="307:45" pos:end="307:52"><name pos:start="307:45" pos:end="307:47">ost</name><operator pos:start="307:48" pos:end="307:49">-&gt;</operator><name pos:start="307:50" pos:end="307:52">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="309:17" pos:end="309:73"><expr pos:start="309:17" pos:end="309:72"><name pos:start="309:17" pos:end="309:32"><name pos:start="309:17" pos:end="309:21">codec</name><operator pos:start="309:22" pos:end="309:23">-&gt;</operator><name pos:start="309:24" pos:end="309:32">time_base</name></name> <operator pos:start="309:34" pos:end="309:34">=</operator> <operator pos:start="309:36" pos:end="309:36">(</operator><name pos:start="309:37" pos:end="309:46">AVRational</name><operator pos:start="309:47" pos:end="309:47">)</operator><block pos:start="309:48" pos:end="309:72">{ <expr pos:start="309:50" pos:end="309:50"><literal type="number" pos:start="309:50" pos:end="309:50">1</literal></expr>, <expr pos:start="309:53" pos:end="309:70"><name pos:start="309:53" pos:end="309:70"><name pos:start="309:53" pos:end="309:57">codec</name><operator pos:start="309:58" pos:end="309:59">-&gt;</operator><name pos:start="309:60" pos:end="309:70">sample_rate</name></name></expr> }</block></expr>;</expr_stmt>



                <if_stmt pos:start="313:17" pos:end="315:59"><if pos:start="313:17" pos:end="315:59">if <condition pos:start="313:20" pos:end="313:60">(<expr pos:start="313:21" pos:end="313:59"><name pos:start="313:21" pos:end="313:37"><name pos:start="313:21" pos:end="313:25">codec</name><operator pos:start="313:26" pos:end="313:27">-&gt;</operator><name pos:start="313:28" pos:end="313:37">sample_fmt</name></name> <operator pos:start="313:39" pos:end="313:40">==</operator> <name pos:start="313:42" pos:end="313:59">AV_SAMPLE_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="315:21" pos:end="315:59"><block_content pos:start="315:21" pos:end="315:59">

                    <expr_stmt pos:start="315:21" pos:end="315:59"><expr pos:start="315:21" pos:end="315:58"><name pos:start="315:21" pos:end="315:37"><name pos:start="315:21" pos:end="315:25">codec</name><operator pos:start="315:26" pos:end="315:27">-&gt;</operator><name pos:start="315:28" pos:end="315:37">sample_fmt</name></name> <operator pos:start="315:39" pos:end="315:39">=</operator> <name pos:start="315:41" pos:end="315:58"><name pos:start="315:41" pos:end="315:46">icodec</name><operator pos:start="315:47" pos:end="315:48">-&gt;</operator><name pos:start="315:49" pos:end="315:58">sample_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="317:17" pos:end="317:53"><expr pos:start="317:17" pos:end="317:52"><call pos:start="317:17" pos:end="317:52"><name pos:start="317:17" pos:end="317:33">choose_sample_fmt</name><argument_list pos:start="317:34" pos:end="317:52">(<argument pos:start="317:35" pos:end="317:41"><expr pos:start="317:35" pos:end="317:41"><name pos:start="317:35" pos:end="317:41"><name pos:start="317:35" pos:end="317:37">ost</name><operator pos:start="317:38" pos:end="317:39">-&gt;</operator><name pos:start="317:40" pos:end="317:41">st</name></name></expr></argument>, <argument pos:start="317:44" pos:end="317:51"><expr pos:start="317:44" pos:end="317:51"><name pos:start="317:44" pos:end="317:51"><name pos:start="317:44" pos:end="317:46">ost</name><operator pos:start="317:47" pos:end="317:48">-&gt;</operator><name pos:start="317:49" pos:end="317:51">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="321:17" pos:end="323:55"><if pos:start="321:17" pos:end="323:55">if <condition pos:start="321:20" pos:end="321:37">(<expr pos:start="321:21" pos:end="321:36"><operator pos:start="321:21" pos:end="321:21">!</operator><name pos:start="321:22" pos:end="321:36"><name pos:start="321:22" pos:end="321:26">codec</name><operator pos:start="321:27" pos:end="321:28">-&gt;</operator><name pos:start="321:29" pos:end="321:36">channels</name></name></expr>)</condition><block type="pseudo" pos:start="323:21" pos:end="323:55"><block_content pos:start="323:21" pos:end="323:55">

                    <expr_stmt pos:start="323:21" pos:end="323:55"><expr pos:start="323:21" pos:end="323:54"><name pos:start="323:21" pos:end="323:35"><name pos:start="323:21" pos:end="323:25">codec</name><operator pos:start="323:26" pos:end="323:27">-&gt;</operator><name pos:start="323:28" pos:end="323:35">channels</name></name> <operator pos:start="323:37" pos:end="323:37">=</operator> <name pos:start="323:39" pos:end="323:54"><name pos:start="323:39" pos:end="323:44">icodec</name><operator pos:start="323:45" pos:end="323:46">-&gt;</operator><name pos:start="323:47" pos:end="323:54">channels</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="325:17" pos:end="327:67"><if pos:start="325:17" pos:end="327:67">if <condition pos:start="325:20" pos:end="325:43">(<expr pos:start="325:21" pos:end="325:42"><operator pos:start="325:21" pos:end="325:21">!</operator><name pos:start="325:22" pos:end="325:42"><name pos:start="325:22" pos:end="325:26">codec</name><operator pos:start="325:27" pos:end="325:28">-&gt;</operator><name pos:start="325:29" pos:end="325:42">channel_layout</name></name></expr>)</condition><block type="pseudo" pos:start="327:21" pos:end="327:67"><block_content pos:start="327:21" pos:end="327:67">

                    <expr_stmt pos:start="327:21" pos:end="327:67"><expr pos:start="327:21" pos:end="327:66"><name pos:start="327:21" pos:end="327:41"><name pos:start="327:21" pos:end="327:25">codec</name><operator pos:start="327:26" pos:end="327:27">-&gt;</operator><name pos:start="327:28" pos:end="327:41">channel_layout</name></name> <operator pos:start="327:43" pos:end="327:43">=</operator> <name pos:start="327:45" pos:end="327:66"><name pos:start="327:45" pos:end="327:50">icodec</name><operator pos:start="327:51" pos:end="327:52">-&gt;</operator><name pos:start="327:53" pos:end="327:66">channel_layout</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="329:17" pos:end="331:46"><if pos:start="329:17" pos:end="331:46">if <condition pos:start="329:20" pos:end="329:96">(<expr pos:start="329:21" pos:end="329:95"><call pos:start="329:21" pos:end="329:76"><name pos:start="329:21" pos:end="329:53">av_get_channel_layout_nb_channels</name><argument_list pos:start="329:54" pos:end="329:76">(<argument pos:start="329:55" pos:end="329:75"><expr pos:start="329:55" pos:end="329:75"><name pos:start="329:55" pos:end="329:75"><name pos:start="329:55" pos:end="329:59">codec</name><operator pos:start="329:60" pos:end="329:61">-&gt;</operator><name pos:start="329:62" pos:end="329:75">channel_layout</name></name></expr></argument>)</argument_list></call> <operator pos:start="329:78" pos:end="329:79">!=</operator> <name pos:start="329:81" pos:end="329:95"><name pos:start="329:81" pos:end="329:85">codec</name><operator pos:start="329:86" pos:end="329:87">-&gt;</operator><name pos:start="329:88" pos:end="329:95">channels</name></name></expr>)</condition><block type="pseudo" pos:start="331:21" pos:end="331:46"><block_content pos:start="331:21" pos:end="331:46">

                    <expr_stmt pos:start="331:21" pos:end="331:46"><expr pos:start="331:21" pos:end="331:45"><name pos:start="331:21" pos:end="331:41"><name pos:start="331:21" pos:end="331:25">codec</name><operator pos:start="331:26" pos:end="331:27">-&gt;</operator><name pos:start="331:28" pos:end="331:41">channel_layout</name></name> <operator pos:start="331:43" pos:end="331:43">=</operator> <literal type="number" pos:start="331:45" pos:end="331:45">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="335:17" pos:end="335:61"><expr pos:start="335:17" pos:end="335:60"><name pos:start="335:17" pos:end="335:40"><name pos:start="335:17" pos:end="335:22">icodec</name><operator pos:start="335:23" pos:end="335:24">-&gt;</operator><name pos:start="335:25" pos:end="335:40">request_channels</name></name>  <operator pos:start="335:43" pos:end="335:43">=</operator> <name pos:start="335:45" pos:end="335:60"><name pos:start="335:45" pos:end="335:49">codec</name><operator pos:start="335:50" pos:end="335:51">-&gt;</operator> <name pos:start="335:53" pos:end="335:60">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="337:17" pos:end="337:63"><expr pos:start="337:17" pos:end="337:62"><name pos:start="337:17" pos:end="337:40"><name pos:start="337:17" pos:end="337:19">ost</name><operator pos:start="337:20" pos:end="337:21">-&gt;</operator><name pos:start="337:22" pos:end="337:40">resample_sample_fmt</name></name>  <operator pos:start="337:43" pos:end="337:43">=</operator> <name pos:start="337:45" pos:end="337:62"><name pos:start="337:45" pos:end="337:50">icodec</name><operator pos:start="337:51" pos:end="337:52">-&gt;</operator><name pos:start="337:53" pos:end="337:62">sample_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="339:17" pos:end="339:64"><expr pos:start="339:17" pos:end="339:63"><name pos:start="339:17" pos:end="339:41"><name pos:start="339:17" pos:end="339:19">ost</name><operator pos:start="339:20" pos:end="339:21">-&gt;</operator><name pos:start="339:22" pos:end="339:41">resample_sample_rate</name></name> <operator pos:start="339:43" pos:end="339:43">=</operator> <name pos:start="339:45" pos:end="339:63"><name pos:start="339:45" pos:end="339:50">icodec</name><operator pos:start="339:51" pos:end="339:52">-&gt;</operator><name pos:start="339:53" pos:end="339:63">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="341:17" pos:end="341:61"><expr pos:start="341:17" pos:end="341:60"><name pos:start="341:17" pos:end="341:38"><name pos:start="341:17" pos:end="341:19">ost</name><operator pos:start="341:20" pos:end="341:21">-&gt;</operator><name pos:start="341:22" pos:end="341:38">resample_channels</name></name>    <operator pos:start="341:43" pos:end="341:43">=</operator> <name pos:start="341:45" pos:end="341:60"><name pos:start="341:45" pos:end="341:50">icodec</name><operator pos:start="341:51" pos:end="341:52">-&gt;</operator><name pos:start="341:53" pos:end="341:60">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="343:17" pos:end="343:70"><expr pos:start="343:17" pos:end="343:69"><name pos:start="343:17" pos:end="343:44"><name pos:start="343:17" pos:end="343:19">ost</name><operator pos:start="343:20" pos:end="343:21">-&gt;</operator><name pos:start="343:22" pos:end="343:44">resample_channel_layout</name></name> <operator pos:start="343:46" pos:end="343:46">=</operator> <name pos:start="343:48" pos:end="343:69"><name pos:start="343:48" pos:end="343:53">icodec</name><operator pos:start="343:54" pos:end="343:55">-&gt;</operator><name pos:start="343:56" pos:end="343:69">channel_layout</name></name></expr>;</expr_stmt>

                <break pos:start="345:17" pos:end="345:22">break;</break>

            <case pos:start="347:13" pos:end="347:36">case <expr pos:start="347:18" pos:end="347:35"><name pos:start="347:18" pos:end="347:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <if_stmt pos:start="349:17" pos:end="363:17"><if pos:start="349:17" pos:end="363:17">if <condition pos:start="349:20" pos:end="349:33">(<expr pos:start="349:21" pos:end="349:32"><operator pos:start="349:21" pos:end="349:21">!</operator><name pos:start="349:22" pos:end="349:32"><name pos:start="349:22" pos:end="349:24">ost</name><operator pos:start="349:25" pos:end="349:26">-&gt;</operator><name pos:start="349:27" pos:end="349:32">filter</name></name></expr>)</condition> <block pos:start="349:35" pos:end="363:17">{<block_content pos:start="351:21" pos:end="361:21">

                    <decl_stmt pos:start="351:21" pos:end="351:36"><decl pos:start="351:21" pos:end="351:35"><type pos:start="351:21" pos:end="351:33"><name pos:start="351:21" pos:end="351:31">FilterGraph</name> <modifier pos:start="351:33" pos:end="351:33">*</modifier></type><name pos:start="351:34" pos:end="351:35">fg</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="353:21" pos:end="353:59"><expr pos:start="353:21" pos:end="353:58"><name pos:start="353:21" pos:end="353:22">fg</name> <operator pos:start="353:24" pos:end="353:24">=</operator> <call pos:start="353:26" pos:end="353:58"><name pos:start="353:26" pos:end="353:48">init_simple_filtergraph</name><argument_list pos:start="353:49" pos:end="353:58">(<argument pos:start="353:50" pos:end="353:52"><expr pos:start="353:50" pos:end="353:52"><name pos:start="353:50" pos:end="353:52">ist</name></expr></argument>, <argument pos:start="353:55" pos:end="353:57"><expr pos:start="353:55" pos:end="353:57"><name pos:start="353:55" pos:end="353:57">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="355:21" pos:end="361:21"><if pos:start="355:21" pos:end="361:21">if <condition pos:start="355:24" pos:end="355:52">(<expr pos:start="355:25" pos:end="355:51"><call pos:start="355:25" pos:end="355:51"><name pos:start="355:25" pos:end="355:47">configure_video_filters</name><argument_list pos:start="355:48" pos:end="355:51">(<argument pos:start="355:49" pos:end="355:50"><expr pos:start="355:49" pos:end="355:50"><name pos:start="355:49" pos:end="355:50">fg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="355:54" pos:end="361:21">{<block_content pos:start="357:25" pos:end="359:32">

                        <expr_stmt pos:start="357:25" pos:end="357:79"><expr pos:start="357:25" pos:end="357:78"><call pos:start="357:25" pos:end="357:78"><name pos:start="357:25" pos:end="357:30">av_log</name><argument_list pos:start="357:31" pos:end="357:78">(<argument pos:start="357:32" pos:end="357:35"><expr pos:start="357:32" pos:end="357:35"><name pos:start="357:32" pos:end="357:35">NULL</name></expr></argument>, <argument pos:start="357:38" pos:end="357:49"><expr pos:start="357:38" pos:end="357:49"><name pos:start="357:38" pos:end="357:49">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="357:52" pos:end="357:77"><expr pos:start="357:52" pos:end="357:77"><literal type="string" pos:start="357:52" pos:end="357:77">"Error opening filters!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="359:25" pos:end="359:32"><expr pos:start="359:25" pos:end="359:31"><call pos:start="359:25" pos:end="359:31"><name pos:start="359:25" pos:end="359:28">exit</name><argument_list pos:start="359:29" pos:end="359:31">(<argument pos:start="359:30" pos:end="359:30"><expr pos:start="359:30" pos:end="359:30"><literal type="number" pos:start="359:30" pos:end="359:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="367:17" pos:end="383:19">/*

                 * We want CFR output if and only if one of those is true:

                 * 1) user specified output framerate with -r

                 * 2) user specified -vsync cfr

                 * 3) output format is CFR and the user didn't force vsync to

                 *    something else than CFR

                 *

                 * in such a case, set ost-&gt;frame_rate

                 */</comment>

                <if_stmt pos:start="385:17" pos:end="403:17"><if pos:start="385:17" pos:end="403:17">if <condition pos:start="385:20" pos:end="391:90">(<expr pos:start="385:21" pos:end="391:89"><operator pos:start="385:21" pos:end="385:21">!</operator><name pos:start="385:22" pos:end="385:40"><name pos:start="385:22" pos:end="385:24">ost</name><operator pos:start="385:25" pos:end="385:26">-&gt;</operator><name pos:start="385:27" pos:end="385:36">frame_rate</name><operator pos:start="385:37" pos:end="385:37">.</operator><name pos:start="385:38" pos:end="385:40">num</name></name> <operator pos:start="385:42" pos:end="385:43">&amp;&amp;</operator> <name pos:start="385:45" pos:end="385:47">ist</name> <operator pos:start="385:49" pos:end="385:50">&amp;&amp;</operator>

                    <operator pos:start="387:21" pos:end="387:21">(</operator><name pos:start="387:22" pos:end="387:38">video_sync_method</name> <operator pos:start="387:40" pos:end="387:41">==</operator>  <name pos:start="387:44" pos:end="387:52">VSYNC_CFR</name> <operator pos:start="387:54" pos:end="387:55">||</operator>

                     <operator pos:start="389:22" pos:end="389:22">(</operator><name pos:start="389:23" pos:end="389:39">video_sync_method</name> <operator pos:start="389:41" pos:end="389:42">==</operator>  <name pos:start="389:45" pos:end="389:54">VSYNC_AUTO</name> <operator pos:start="389:56" pos:end="389:57">&amp;&amp;</operator>

                      <operator pos:start="391:23" pos:end="391:23">!</operator><operator pos:start="391:24" pos:end="391:24">(</operator><name pos:start="391:25" pos:end="391:42"><name pos:start="391:25" pos:end="391:26">oc</name><operator pos:start="391:27" pos:end="391:28">-&gt;</operator><name pos:start="391:29" pos:end="391:35">oformat</name><operator pos:start="391:36" pos:end="391:37">-&gt;</operator><name pos:start="391:38" pos:end="391:42">flags</name></name> <operator pos:start="391:44" pos:end="391:44">&amp;</operator> <operator pos:start="391:46" pos:end="391:46">(</operator><name pos:start="391:47" pos:end="391:64">AVFMT_NOTIMESTAMPS</name> <operator pos:start="391:66" pos:end="391:66">|</operator> <name pos:start="391:68" pos:end="391:85">AVFMT_VARIABLE_FPS</name><operator pos:start="391:86" pos:end="391:86">)</operator><operator pos:start="391:87" pos:end="391:87">)</operator><operator pos:start="391:88" pos:end="391:88">)</operator><operator pos:start="391:89" pos:end="391:89">)</operator></expr>)</condition> <block pos:start="391:92" pos:end="403:17">{<block_content pos:start="393:21" pos:end="401:21">

                    <expr_stmt pos:start="393:21" pos:end="393:110"><expr pos:start="393:21" pos:end="393:109"><name pos:start="393:21" pos:end="393:35"><name pos:start="393:21" pos:end="393:23">ost</name><operator pos:start="393:24" pos:end="393:25">-&gt;</operator><name pos:start="393:26" pos:end="393:35">frame_rate</name></name> <operator pos:start="393:37" pos:end="393:37">=</operator> <ternary pos:start="393:39" pos:end="393:109"><condition pos:start="393:39" pos:end="393:65"><expr pos:start="393:39" pos:end="393:63"><name pos:start="393:39" pos:end="393:63"><name pos:start="393:39" pos:end="393:41">ist</name><operator pos:start="393:42" pos:end="393:43">-&gt;</operator><name pos:start="393:44" pos:end="393:45">st</name><operator pos:start="393:46" pos:end="393:47">-&gt;</operator><name pos:start="393:48" pos:end="393:59">r_frame_rate</name><operator pos:start="393:60" pos:end="393:60">.</operator><name pos:start="393:61" pos:end="393:63">num</name></name></expr> ?</condition><then pos:start="393:67" pos:end="393:87"> <expr pos:start="393:67" pos:end="393:87"><name pos:start="393:67" pos:end="393:87"><name pos:start="393:67" pos:end="393:69">ist</name><operator pos:start="393:70" pos:end="393:71">-&gt;</operator><name pos:start="393:72" pos:end="393:73">st</name><operator pos:start="393:74" pos:end="393:75">-&gt;</operator><name pos:start="393:76" pos:end="393:87">r_frame_rate</name></name></expr> </then><else pos:start="393:89" pos:end="393:109">: <expr pos:start="393:91" pos:end="393:109"><operator pos:start="393:91" pos:end="393:91">(</operator><name pos:start="393:92" pos:end="393:101">AVRational</name><operator pos:start="393:102" pos:end="393:102">)</operator><block pos:start="393:103" pos:end="393:109">{<expr pos:start="393:104" pos:end="393:105"><literal type="number" pos:start="393:104" pos:end="393:105">25</literal></expr>, <expr pos:start="393:108" pos:end="393:108"><literal type="number" pos:start="393:108" pos:end="393:108">1</literal></expr>}</block></expr></else></ternary></expr>;</expr_stmt>

                    <if_stmt pos:start="395:21" pos:end="401:21"><if pos:start="395:21" pos:end="401:21">if <condition pos:start="395:24" pos:end="395:86">(<expr pos:start="395:25" pos:end="395:85"><name pos:start="395:25" pos:end="395:32"><name pos:start="395:25" pos:end="395:27">ost</name><operator pos:start="395:28" pos:end="395:29">-&gt;</operator><name pos:start="395:30" pos:end="395:32">enc</name></name> <operator pos:start="395:34" pos:end="395:35">&amp;&amp;</operator> <name pos:start="395:37" pos:end="395:66"><name pos:start="395:37" pos:end="395:39">ost</name><operator pos:start="395:40" pos:end="395:41">-&gt;</operator><name pos:start="395:42" pos:end="395:44">enc</name><operator pos:start="395:45" pos:end="395:46">-&gt;</operator><name pos:start="395:47" pos:end="395:66">supported_framerates</name></name> <operator pos:start="395:68" pos:end="395:69">&amp;&amp;</operator> <operator pos:start="395:71" pos:end="395:71">!</operator><name pos:start="395:72" pos:end="395:85"><name pos:start="395:72" pos:end="395:74">ost</name><operator pos:start="395:75" pos:end="395:76">-&gt;</operator><name pos:start="395:77" pos:end="395:85">force_fps</name></name></expr>)</condition> <block pos:start="395:88" pos:end="401:21">{<block_content pos:start="397:25" pos:end="399:78">

                        <decl_stmt pos:start="397:25" pos:end="397:105"><decl pos:start="397:25" pos:end="397:104"><type pos:start="397:25" pos:end="397:27"><name pos:start="397:25" pos:end="397:27">int</name></type> <name pos:start="397:29" pos:end="397:31">idx</name> <init pos:start="397:33" pos:end="397:104">= <expr pos:start="397:35" pos:end="397:104"><call pos:start="397:35" pos:end="397:104"><name pos:start="397:35" pos:end="397:55">av_find_nearest_q_idx</name><argument_list pos:start="397:56" pos:end="397:104">(<argument pos:start="397:57" pos:end="397:71"><expr pos:start="397:57" pos:end="397:71"><name pos:start="397:57" pos:end="397:71"><name pos:start="397:57" pos:end="397:59">ost</name><operator pos:start="397:60" pos:end="397:61">-&gt;</operator><name pos:start="397:62" pos:end="397:71">frame_rate</name></name></expr></argument>, <argument pos:start="397:74" pos:end="397:103"><expr pos:start="397:74" pos:end="397:103"><name pos:start="397:74" pos:end="397:103"><name pos:start="397:74" pos:end="397:76">ost</name><operator pos:start="397:77" pos:end="397:78">-&gt;</operator><name pos:start="397:79" pos:end="397:81">enc</name><operator pos:start="397:82" pos:end="397:83">-&gt;</operator><name pos:start="397:84" pos:end="397:103">supported_framerates</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="399:25" pos:end="399:78"><expr pos:start="399:25" pos:end="399:77"><name pos:start="399:25" pos:end="399:39"><name pos:start="399:25" pos:end="399:27">ost</name><operator pos:start="399:28" pos:end="399:29">-&gt;</operator><name pos:start="399:30" pos:end="399:39">frame_rate</name></name> <operator pos:start="399:41" pos:end="399:41">=</operator> <name pos:start="399:43" pos:end="399:77"><name pos:start="399:43" pos:end="399:45">ost</name><operator pos:start="399:46" pos:end="399:47">-&gt;</operator><name pos:start="399:48" pos:end="399:50">enc</name><operator pos:start="399:51" pos:end="399:52">-&gt;</operator><name pos:start="399:53" pos:end="399:72">supported_framerates</name><index pos:start="399:73" pos:end="399:77">[<expr pos:start="399:74" pos:end="399:76"><name pos:start="399:74" pos:end="399:76">idx</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="405:17" pos:end="417:81"><if pos:start="405:17" pos:end="411:17">if <condition pos:start="405:20" pos:end="405:40">(<expr pos:start="405:21" pos:end="405:39"><name pos:start="405:21" pos:end="405:39"><name pos:start="405:21" pos:end="405:23">ost</name><operator pos:start="405:24" pos:end="405:25">-&gt;</operator><name pos:start="405:26" pos:end="405:35">frame_rate</name><operator pos:start="405:36" pos:end="405:36">.</operator><name pos:start="405:37" pos:end="405:39">num</name></name></expr>)</condition> <block pos:start="405:42" pos:end="411:17">{<block_content pos:start="407:21" pos:end="409:50">

                    <expr_stmt pos:start="407:21" pos:end="407:94"><expr pos:start="407:21" pos:end="407:93"><name pos:start="407:21" pos:end="407:36"><name pos:start="407:21" pos:end="407:25">codec</name><operator pos:start="407:26" pos:end="407:27">-&gt;</operator><name pos:start="407:28" pos:end="407:36">time_base</name></name> <operator pos:start="407:38" pos:end="407:38">=</operator> <operator pos:start="407:40" pos:end="407:40">(</operator><name pos:start="407:41" pos:end="407:50">AVRational</name><operator pos:start="407:51" pos:end="407:51">)</operator><block pos:start="407:52" pos:end="407:93">{<expr pos:start="407:53" pos:end="407:71"><name pos:start="407:53" pos:end="407:71"><name pos:start="407:53" pos:end="407:55">ost</name><operator pos:start="407:56" pos:end="407:57">-&gt;</operator><name pos:start="407:58" pos:end="407:67">frame_rate</name><operator pos:start="407:68" pos:end="407:68">.</operator><name pos:start="407:69" pos:end="407:71">den</name></name></expr>, <expr pos:start="407:74" pos:end="407:92"><name pos:start="407:74" pos:end="407:92"><name pos:start="407:74" pos:end="407:76">ost</name><operator pos:start="407:77" pos:end="407:78">-&gt;</operator><name pos:start="407:79" pos:end="407:88">frame_rate</name><operator pos:start="407:89" pos:end="407:89">.</operator><name pos:start="407:90" pos:end="407:92">num</name></name></expr>}</block></expr>;</expr_stmt>

                    <expr_stmt pos:start="409:21" pos:end="409:50"><expr pos:start="409:21" pos:end="409:49"><name pos:start="409:21" pos:end="409:37">video_sync_method</name> <operator pos:start="409:39" pos:end="409:39">=</operator> <name pos:start="409:41" pos:end="409:49">VSYNC_CFR</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="411:19" pos:end="413:58">else if <condition pos:start="411:27" pos:end="411:31">(<expr pos:start="411:28" pos:end="411:30"><name pos:start="411:28" pos:end="411:30">ist</name></expr>)</condition><block type="pseudo" pos:start="413:21" pos:end="413:58"><block_content pos:start="413:21" pos:end="413:58">

                    <expr_stmt pos:start="413:21" pos:end="413:58"><expr pos:start="413:21" pos:end="413:57"><name pos:start="413:21" pos:end="413:36"><name pos:start="413:21" pos:end="413:25">codec</name><operator pos:start="413:26" pos:end="413:27">-&gt;</operator><name pos:start="413:28" pos:end="413:36">time_base</name></name> <operator pos:start="413:38" pos:end="413:38">=</operator> <name pos:start="413:40" pos:end="413:57"><name pos:start="413:40" pos:end="413:42">ist</name><operator pos:start="413:43" pos:end="413:44">-&gt;</operator><name pos:start="413:45" pos:end="413:46">st</name><operator pos:start="413:47" pos:end="413:48">-&gt;</operator><name pos:start="413:49" pos:end="413:57">time_base</name></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="415:17" pos:end="417:81">else<block type="pseudo" pos:start="417:21" pos:end="417:81"><block_content pos:start="417:21" pos:end="417:81">

                    <expr_stmt pos:start="417:21" pos:end="417:81"><expr pos:start="417:21" pos:end="417:80"><name pos:start="417:21" pos:end="417:36"><name pos:start="417:21" pos:end="417:25">codec</name><operator pos:start="417:26" pos:end="417:27">-&gt;</operator><name pos:start="417:28" pos:end="417:36">time_base</name></name> <operator pos:start="417:38" pos:end="417:38">=</operator> <name pos:start="417:40" pos:end="417:69"><name pos:start="417:40" pos:end="417:42">ost</name><operator pos:start="417:43" pos:end="417:44">-&gt;</operator><name pos:start="417:45" pos:end="417:50">filter</name><operator pos:start="417:51" pos:end="417:52">-&gt;</operator><name pos:start="417:53" pos:end="417:58">filter</name><operator pos:start="417:59" pos:end="417:60">-&gt;</operator><name pos:start="417:61" pos:end="417:66">inputs</name><index pos:start="417:67" pos:end="417:69">[<expr pos:start="417:68" pos:end="417:68"><literal type="number" pos:start="417:68" pos:end="417:68">0</literal></expr>]</index></name><operator pos:start="417:70" pos:end="417:71">-&gt;</operator><name pos:start="417:72" pos:end="417:80">time_base</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="421:17" pos:end="421:66"><expr pos:start="421:17" pos:end="421:65"><name pos:start="421:17" pos:end="421:28"><name pos:start="421:17" pos:end="421:21">codec</name><operator pos:start="421:22" pos:end="421:23">-&gt;</operator><name pos:start="421:24" pos:end="421:28">width</name></name>  <operator pos:start="421:31" pos:end="421:31">=</operator> <name pos:start="421:33" pos:end="421:62"><name pos:start="421:33" pos:end="421:35">ost</name><operator pos:start="421:36" pos:end="421:37">-&gt;</operator><name pos:start="421:38" pos:end="421:43">filter</name><operator pos:start="421:44" pos:end="421:45">-&gt;</operator><name pos:start="421:46" pos:end="421:51">filter</name><operator pos:start="421:52" pos:end="421:53">-&gt;</operator><name pos:start="421:54" pos:end="421:59">inputs</name><index pos:start="421:60" pos:end="421:62">[<expr pos:start="421:61" pos:end="421:61"><literal type="number" pos:start="421:61" pos:end="421:61">0</literal></expr>]</index></name><operator pos:start="421:63" pos:end="421:64">-&gt;</operator><name pos:start="421:65" pos:end="421:65">w</name></expr>;</expr_stmt>

                <expr_stmt pos:start="423:17" pos:end="423:66"><expr pos:start="423:17" pos:end="423:65"><name pos:start="423:17" pos:end="423:29"><name pos:start="423:17" pos:end="423:21">codec</name><operator pos:start="423:22" pos:end="423:23">-&gt;</operator><name pos:start="423:24" pos:end="423:29">height</name></name> <operator pos:start="423:31" pos:end="423:31">=</operator> <name pos:start="423:33" pos:end="423:62"><name pos:start="423:33" pos:end="423:35">ost</name><operator pos:start="423:36" pos:end="423:37">-&gt;</operator><name pos:start="423:38" pos:end="423:43">filter</name><operator pos:start="423:44" pos:end="423:45">-&gt;</operator><name pos:start="423:46" pos:end="423:51">filter</name><operator pos:start="423:52" pos:end="423:53">-&gt;</operator><name pos:start="423:54" pos:end="423:59">inputs</name><index pos:start="423:60" pos:end="423:62">[<expr pos:start="423:61" pos:end="423:61"><literal type="number" pos:start="423:61" pos:end="423:61">0</literal></expr>]</index></name><operator pos:start="423:63" pos:end="423:64">-&gt;</operator><name pos:start="423:65" pos:end="423:65">h</name></expr>;</expr_stmt>

                <expr_stmt pos:start="425:17" pos:end="431:72"><expr pos:start="425:17" pos:end="431:71"><name pos:start="425:17" pos:end="425:42"><name pos:start="425:17" pos:end="425:21">codec</name><operator pos:start="425:22" pos:end="425:23">-&gt;</operator><name pos:start="425:24" pos:end="425:42">sample_aspect_ratio</name></name> <operator pos:start="425:44" pos:end="425:44">=</operator> <name pos:start="425:46" pos:end="425:73"><name pos:start="425:46" pos:end="425:48">ost</name><operator pos:start="425:49" pos:end="425:50">-&gt;</operator><name pos:start="425:51" pos:end="425:52">st</name><operator pos:start="425:53" pos:end="425:54">-&gt;</operator><name pos:start="425:55" pos:end="425:73">sample_aspect_ratio</name></name> <operator pos:start="425:75" pos:end="425:75">=</operator>

                    <ternary pos:start="427:21" pos:end="431:71"><condition pos:start="427:21" pos:end="427:45"><expr pos:start="427:21" pos:end="427:43"><name pos:start="427:21" pos:end="427:43"><name pos:start="427:21" pos:end="427:23">ost</name><operator pos:start="427:24" pos:end="427:25">-&gt;</operator><name pos:start="427:26" pos:end="427:43">frame_aspect_ratio</name></name></expr> ?</condition><then pos:start="429:21" pos:end="429:85"> <comment type="line" pos:start="427:47" pos:end="427:85">// overridden by the -aspect cli option</comment>

                    <expr pos:start="429:21" pos:end="429:85"><call pos:start="429:21" pos:end="429:85"><name pos:start="429:21" pos:end="429:26">av_d2q</name><argument_list pos:start="429:27" pos:end="429:85">(<argument pos:start="429:28" pos:end="429:79"><expr pos:start="429:28" pos:end="429:79"><name pos:start="429:28" pos:end="429:50"><name pos:start="429:28" pos:end="429:30">ost</name><operator pos:start="429:31" pos:end="429:32">-&gt;</operator><name pos:start="429:33" pos:end="429:50">frame_aspect_ratio</name></name> <operator pos:start="429:52" pos:end="429:52">*</operator> <name pos:start="429:54" pos:end="429:66"><name pos:start="429:54" pos:end="429:58">codec</name><operator pos:start="429:59" pos:end="429:60">-&gt;</operator><name pos:start="429:61" pos:end="429:66">height</name></name><operator pos:start="429:67" pos:end="429:67">/</operator><name pos:start="429:68" pos:end="429:79"><name pos:start="429:68" pos:end="429:72">codec</name><operator pos:start="429:73" pos:end="429:74">-&gt;</operator><name pos:start="429:75" pos:end="429:79">width</name></name></expr></argument>, <argument pos:start="429:82" pos:end="429:84"><expr pos:start="429:82" pos:end="429:84"><literal type="number" pos:start="429:82" pos:end="429:84">255</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="429:87" pos:end="431:71">:

                    <expr pos:start="431:21" pos:end="431:71"><name pos:start="431:21" pos:end="431:50"><name pos:start="431:21" pos:end="431:23">ost</name><operator pos:start="431:24" pos:end="431:25">-&gt;</operator><name pos:start="431:26" pos:end="431:31">filter</name><operator pos:start="431:32" pos:end="431:33">-&gt;</operator><name pos:start="431:34" pos:end="431:39">filter</name><operator pos:start="431:40" pos:end="431:41">-&gt;</operator><name pos:start="431:42" pos:end="431:47">inputs</name><index pos:start="431:48" pos:end="431:50">[<expr pos:start="431:49" pos:end="431:49"><literal type="number" pos:start="431:49" pos:end="431:49">0</literal></expr>]</index></name><operator pos:start="431:51" pos:end="431:52">-&gt;</operator><name pos:start="431:53" pos:end="431:71">sample_aspect_ratio</name></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="433:17" pos:end="433:72"><expr pos:start="433:17" pos:end="433:71"><name pos:start="433:17" pos:end="433:30"><name pos:start="433:17" pos:end="433:21">codec</name><operator pos:start="433:22" pos:end="433:23">-&gt;</operator><name pos:start="433:24" pos:end="433:30">pix_fmt</name></name> <operator pos:start="433:32" pos:end="433:32">=</operator> <name pos:start="433:34" pos:end="433:63"><name pos:start="433:34" pos:end="433:36">ost</name><operator pos:start="433:37" pos:end="433:38">-&gt;</operator><name pos:start="433:39" pos:end="433:44">filter</name><operator pos:start="433:45" pos:end="433:46">-&gt;</operator><name pos:start="433:47" pos:end="433:52">filter</name><operator pos:start="433:53" pos:end="433:54">-&gt;</operator><name pos:start="433:55" pos:end="433:60">inputs</name><index pos:start="433:61" pos:end="433:63">[<expr pos:start="433:62" pos:end="433:62"><literal type="number" pos:start="433:62" pos:end="433:62">0</literal></expr>]</index></name><operator pos:start="433:64" pos:end="433:65">-&gt;</operator><name pos:start="433:66" pos:end="433:71">format</name></expr>;</expr_stmt>



                <if_stmt pos:start="437:17" pos:end="445:17"><if pos:start="437:17" pos:end="445:17">if <condition pos:start="437:20" pos:end="441:54">(<expr pos:start="437:21" pos:end="441:53"><name pos:start="437:21" pos:end="437:32"><name pos:start="437:21" pos:end="437:25">codec</name><operator pos:start="437:26" pos:end="437:27">-&gt;</operator><name pos:start="437:28" pos:end="437:32">width</name></name>   <operator pos:start="437:36" pos:end="437:37">!=</operator> <name pos:start="437:39" pos:end="437:51"><name pos:start="437:39" pos:end="437:44">icodec</name><operator pos:start="437:45" pos:end="437:46">-&gt;</operator><name pos:start="437:47" pos:end="437:51">width</name></name>  <operator pos:start="437:54" pos:end="437:55">||</operator>

                    <name pos:start="439:21" pos:end="439:33"><name pos:start="439:21" pos:end="439:25">codec</name><operator pos:start="439:26" pos:end="439:27">-&gt;</operator><name pos:start="439:28" pos:end="439:33">height</name></name>  <operator pos:start="439:36" pos:end="439:37">!=</operator> <name pos:start="439:39" pos:end="439:52"><name pos:start="439:39" pos:end="439:44">icodec</name><operator pos:start="439:45" pos:end="439:46">-&gt;</operator><name pos:start="439:47" pos:end="439:52">height</name></name> <operator pos:start="439:54" pos:end="439:55">||</operator>

                    <name pos:start="441:21" pos:end="441:34"><name pos:start="441:21" pos:end="441:25">codec</name><operator pos:start="441:26" pos:end="441:27">-&gt;</operator><name pos:start="441:28" pos:end="441:34">pix_fmt</name></name> <operator pos:start="441:36" pos:end="441:37">!=</operator> <name pos:start="441:39" pos:end="441:53"><name pos:start="441:39" pos:end="441:44">icodec</name><operator pos:start="441:45" pos:end="441:46">-&gt;</operator><name pos:start="441:47" pos:end="441:53">pix_fmt</name></name></expr>)</condition> <block pos:start="441:56" pos:end="445:17">{<block_content pos:start="443:21" pos:end="443:51">

                    <expr_stmt pos:start="443:21" pos:end="443:51"><expr pos:start="443:21" pos:end="443:50"><name pos:start="443:21" pos:end="443:46"><name pos:start="443:21" pos:end="443:25">codec</name><operator pos:start="443:26" pos:end="443:27">-&gt;</operator><name pos:start="443:28" pos:end="443:46">bits_per_raw_sample</name></name> <operator pos:start="443:48" pos:end="443:48">=</operator> <literal type="number" pos:start="443:50" pos:end="443:50">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <break pos:start="449:17" pos:end="449:22">break;</break>

            <case pos:start="451:13" pos:end="451:39">case <expr pos:start="451:18" pos:end="451:38"><name pos:start="451:18" pos:end="451:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="453:17" pos:end="453:57"><expr pos:start="453:17" pos:end="453:56"><name pos:start="453:17" pos:end="453:32"><name pos:start="453:17" pos:end="453:21">codec</name><operator pos:start="453:22" pos:end="453:23">-&gt;</operator><name pos:start="453:24" pos:end="453:32">time_base</name></name> <operator pos:start="453:34" pos:end="453:34">=</operator> <operator pos:start="453:36" pos:end="453:36">(</operator><name pos:start="453:37" pos:end="453:46">AVRational</name><operator pos:start="453:47" pos:end="453:47">)</operator><block pos:start="453:48" pos:end="453:56">{<expr pos:start="453:49" pos:end="453:49"><literal type="number" pos:start="453:49" pos:end="453:49">1</literal></expr>, <expr pos:start="453:52" pos:end="453:55"><literal type="number" pos:start="453:52" pos:end="453:55">1000</literal></expr>}</block></expr>;</expr_stmt>

                <break pos:start="455:17" pos:end="455:22">break;</break>

            <default pos:start="457:13" pos:end="457:20">default:</default>

                <expr_stmt pos:start="459:17" pos:end="459:24"><expr pos:start="459:17" pos:end="459:23"><call pos:start="459:17" pos:end="459:23"><name pos:start="459:17" pos:end="459:21">abort</name><argument_list pos:start="459:22" pos:end="459:23">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="461:17" pos:end="461:22">break;</break>

            </block_content>}</block></switch>

            <comment type="block" pos:start="465:13" pos:end="465:31">/* two pass mode */</comment>

            <if_stmt pos:start="467:13" pos:end="525:13"><if pos:start="467:13" pos:end="525:13">if <condition pos:start="467:16" pos:end="467:71">(<expr pos:start="467:17" pos:end="467:70"><operator pos:start="467:17" pos:end="467:17">(</operator><name pos:start="467:18" pos:end="467:29"><name pos:start="467:18" pos:end="467:22">codec</name><operator pos:start="467:23" pos:end="467:24">-&gt;</operator><name pos:start="467:25" pos:end="467:29">flags</name></name> <operator pos:start="467:31" pos:end="467:31">&amp;</operator> <operator pos:start="467:33" pos:end="467:33">(</operator><name pos:start="467:34" pos:end="467:49">CODEC_FLAG_PASS1</name> <operator pos:start="467:51" pos:end="467:51">|</operator> <name pos:start="467:53" pos:end="467:68">CODEC_FLAG_PASS2</name><operator pos:start="467:69" pos:end="467:69">)</operator><operator pos:start="467:70" pos:end="467:70">)</operator></expr>)</condition> <block pos:start="467:73" pos:end="525:13">{<block_content pos:start="469:17" pos:end="523:17">

                <decl_stmt pos:start="469:17" pos:end="469:39"><decl pos:start="469:17" pos:end="469:38"><type pos:start="469:17" pos:end="469:20"><name pos:start="469:17" pos:end="469:20">char</name></type> <name pos:start="469:22" pos:end="469:38"><name pos:start="469:22" pos:end="469:32">logfilename</name><index pos:start="469:33" pos:end="469:38">[<expr pos:start="469:34" pos:end="469:37"><literal type="number" pos:start="469:34" pos:end="469:37">1024</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="471:17" pos:end="471:24"><decl pos:start="471:17" pos:end="471:23"><type pos:start="471:17" pos:end="471:22"><name pos:start="471:17" pos:end="471:20">FILE</name> <modifier pos:start="471:22" pos:end="471:22">*</modifier></type><name pos:start="471:23" pos:end="471:23">f</name></decl>;</decl_stmt>



                <expr_stmt pos:start="475:17" pos:end="479:28"><expr pos:start="475:17" pos:end="479:27"><call pos:start="475:17" pos:end="479:27"><name pos:start="475:17" pos:end="475:24">snprintf</name><argument_list pos:start="475:25" pos:end="479:27">(<argument pos:start="475:26" pos:end="475:36"><expr pos:start="475:26" pos:end="475:36"><name pos:start="475:26" pos:end="475:36">logfilename</name></expr></argument>, <argument pos:start="475:39" pos:end="475:57"><expr pos:start="475:39" pos:end="475:57"><sizeof pos:start="475:39" pos:end="475:57">sizeof<argument_list pos:start="475:45" pos:end="475:57">(<argument pos:start="475:46" pos:end="475:56"><expr pos:start="475:46" pos:end="475:56"><name pos:start="475:46" pos:end="475:56">logfilename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="475:60" pos:end="475:70"><expr pos:start="475:60" pos:end="475:70"><literal type="string" pos:start="475:60" pos:end="475:70">"%s-%d.log"</literal></expr></argument>,

                         <argument pos:start="477:26" pos:end="477:108"><expr pos:start="477:26" pos:end="477:108"><ternary pos:start="477:26" pos:end="477:108"><condition pos:start="477:26" pos:end="477:50"><expr pos:start="477:26" pos:end="477:48"><name pos:start="477:26" pos:end="477:48">pass_logfilename_prefix</name></expr> ?</condition><then pos:start="477:52" pos:end="477:74"> <expr pos:start="477:52" pos:end="477:74"><name pos:start="477:52" pos:end="477:74">pass_logfilename_prefix</name></expr> </then><else pos:start="477:76" pos:end="477:108">: <expr pos:start="477:78" pos:end="477:108"><name pos:start="477:78" pos:end="477:108">DEFAULT_PASS_LOGFILENAME_PREFIX</name></expr></else></ternary></expr></argument>,

                         <argument pos:start="479:26" pos:end="479:26"><expr pos:start="479:26" pos:end="479:26"><name pos:start="479:26" pos:end="479:26">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="481:17" pos:end="523:17"><if pos:start="481:17" pos:end="485:17">if <condition pos:start="481:20" pos:end="481:55">(<expr pos:start="481:21" pos:end="481:54"><operator pos:start="481:21" pos:end="481:21">!</operator><call pos:start="481:22" pos:end="481:54"><name pos:start="481:22" pos:end="481:27">strcmp</name><argument_list pos:start="481:28" pos:end="481:54">(<argument pos:start="481:29" pos:end="481:42"><expr pos:start="481:29" pos:end="481:42"><name pos:start="481:29" pos:end="481:42"><name pos:start="481:29" pos:end="481:31">ost</name><operator pos:start="481:32" pos:end="481:33">-&gt;</operator><name pos:start="481:34" pos:end="481:36">enc</name><operator pos:start="481:37" pos:end="481:38">-&gt;</operator><name pos:start="481:39" pos:end="481:42">name</name></name></expr></argument>, <argument pos:start="481:45" pos:end="481:53"><expr pos:start="481:45" pos:end="481:53"><literal type="string" pos:start="481:45" pos:end="481:53">"libx264"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="481:57" pos:end="485:17">{<block_content pos:start="483:21" pos:end="483:90">

                    <expr_stmt pos:start="483:21" pos:end="483:90"><expr pos:start="483:21" pos:end="483:89"><call pos:start="483:21" pos:end="483:89"><name pos:start="483:21" pos:end="483:31">av_dict_set</name><argument_list pos:start="483:32" pos:end="483:89">(<argument pos:start="483:33" pos:end="483:42"><expr pos:start="483:33" pos:end="483:42"><operator pos:start="483:33" pos:end="483:33">&amp;</operator><name pos:start="483:34" pos:end="483:42"><name pos:start="483:34" pos:end="483:36">ost</name><operator pos:start="483:37" pos:end="483:38">-&gt;</operator><name pos:start="483:39" pos:end="483:42">opts</name></name></expr></argument>, <argument pos:start="483:45" pos:end="483:51"><expr pos:start="483:45" pos:end="483:51"><literal type="string" pos:start="483:45" pos:end="483:51">"stats"</literal></expr></argument>, <argument pos:start="483:54" pos:end="483:64"><expr pos:start="483:54" pos:end="483:64"><name pos:start="483:54" pos:end="483:64">logfilename</name></expr></argument>, <argument pos:start="483:67" pos:end="483:88"><expr pos:start="483:67" pos:end="483:88"><name pos:start="483:67" pos:end="483:88">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="485:19" pos:end="523:17">else <block pos:start="485:24" pos:end="523:17">{<block_content pos:start="487:21" pos:end="521:21">

                    <if_stmt pos:start="487:21" pos:end="521:21"><if pos:start="487:21" pos:end="503:21">if <condition pos:start="487:24" pos:end="487:56">(<expr pos:start="487:25" pos:end="487:55"><name pos:start="487:25" pos:end="487:36"><name pos:start="487:25" pos:end="487:29">codec</name><operator pos:start="487:30" pos:end="487:31">-&gt;</operator><name pos:start="487:32" pos:end="487:36">flags</name></name> <operator pos:start="487:38" pos:end="487:38">&amp;</operator> <name pos:start="487:40" pos:end="487:55">CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="487:58" pos:end="503:21">{<block_content pos:start="489:25" pos:end="501:41">

                        <expr_stmt pos:start="489:25" pos:end="489:53"><expr pos:start="489:25" pos:end="489:52"><name pos:start="489:25" pos:end="489:25">f</name> <operator pos:start="489:27" pos:end="489:27">=</operator> <call pos:start="489:29" pos:end="489:52"><name pos:start="489:29" pos:end="489:33">fopen</name><argument_list pos:start="489:34" pos:end="489:52">(<argument pos:start="489:35" pos:end="489:45"><expr pos:start="489:35" pos:end="489:45"><name pos:start="489:35" pos:end="489:45">logfilename</name></expr></argument>, <argument pos:start="489:48" pos:end="489:51"><expr pos:start="489:48" pos:end="489:51"><literal type="string" pos:start="489:48" pos:end="489:51">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="491:25" pos:end="499:25"><if pos:start="491:25" pos:end="499:25">if <condition pos:start="491:28" pos:end="491:31">(<expr pos:start="491:29" pos:end="491:30"><operator pos:start="491:29" pos:end="491:29">!</operator><name pos:start="491:30" pos:end="491:30">f</name></expr>)</condition> <block pos:start="491:33" pos:end="499:25">{<block_content pos:start="493:29" pos:end="497:44">

                            <expr_stmt pos:start="493:29" pos:end="495:65"><expr pos:start="493:29" pos:end="495:64"><call pos:start="493:29" pos:end="495:64"><name pos:start="493:29" pos:end="493:34">av_log</name><argument_list pos:start="493:35" pos:end="495:64">(<argument pos:start="493:36" pos:end="493:39"><expr pos:start="493:36" pos:end="493:39"><name pos:start="493:36" pos:end="493:39">NULL</name></expr></argument>, <argument pos:start="493:42" pos:end="493:53"><expr pos:start="493:42" pos:end="493:53"><name pos:start="493:42" pos:end="493:53">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="493:56" pos:end="493:109"><expr pos:start="493:56" pos:end="493:109"><literal type="string" pos:start="493:56" pos:end="493:109">"Cannot write log file '%s' for pass-1 encoding: %s\n"</literal></expr></argument>,

                                   <argument pos:start="495:36" pos:end="495:46"><expr pos:start="495:36" pos:end="495:46"><name pos:start="495:36" pos:end="495:46">logfilename</name></expr></argument>, <argument pos:start="495:49" pos:end="495:63"><expr pos:start="495:49" pos:end="495:63"><call pos:start="495:49" pos:end="495:63"><name pos:start="495:49" pos:end="495:56">strerror</name><argument_list pos:start="495:57" pos:end="495:63">(<argument pos:start="495:58" pos:end="495:62"><expr pos:start="495:58" pos:end="495:62"><name pos:start="495:58" pos:end="495:62">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="497:29" pos:end="497:44"><expr pos:start="497:29" pos:end="497:43"><call pos:start="497:29" pos:end="497:43"><name pos:start="497:29" pos:end="497:40">exit_program</name><argument_list pos:start="497:41" pos:end="497:43">(<argument pos:start="497:42" pos:end="497:42"><expr pos:start="497:42" pos:end="497:42"><literal type="number" pos:start="497:42" pos:end="497:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="501:25" pos:end="501:41"><expr pos:start="501:25" pos:end="501:40"><name pos:start="501:25" pos:end="501:36"><name pos:start="501:25" pos:end="501:27">ost</name><operator pos:start="501:28" pos:end="501:29">-&gt;</operator><name pos:start="501:30" pos:end="501:36">logfile</name></name> <operator pos:start="501:38" pos:end="501:38">=</operator> <name pos:start="501:40" pos:end="501:40">f</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="503:23" pos:end="521:21">else <block pos:start="503:28" pos:end="521:21">{<block_content pos:start="505:25" pos:end="519:52">

                        <decl_stmt pos:start="505:25" pos:end="505:41"><decl pos:start="505:25" pos:end="505:40"><type pos:start="505:25" pos:end="505:31"><name pos:start="505:25" pos:end="505:28">char</name>  <modifier pos:start="505:31" pos:end="505:31">*</modifier></type><name pos:start="505:32" pos:end="505:40">logbuffer</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="507:25" pos:end="507:46"><decl pos:start="507:25" pos:end="507:45"><type pos:start="507:25" pos:end="507:30"><name pos:start="507:25" pos:end="507:30">size_t</name></type> <name pos:start="507:32" pos:end="507:45">logbuffer_size</name></decl>;</decl_stmt>

                        <if_stmt pos:start="509:25" pos:end="517:25"><if pos:start="509:25" pos:end="517:25">if <condition pos:start="509:28" pos:end="509:93">(<expr pos:start="509:29" pos:end="509:92"><call pos:start="509:29" pos:end="509:88"><name pos:start="509:29" pos:end="509:46">cmdutils_read_file</name><argument_list pos:start="509:47" pos:end="509:88">(<argument pos:start="509:48" pos:end="509:58"><expr pos:start="509:48" pos:end="509:58"><name pos:start="509:48" pos:end="509:58">logfilename</name></expr></argument>, <argument pos:start="509:61" pos:end="509:70"><expr pos:start="509:61" pos:end="509:70"><operator pos:start="509:61" pos:end="509:61">&amp;</operator><name pos:start="509:62" pos:end="509:70">logbuffer</name></expr></argument>, <argument pos:start="509:73" pos:end="509:87"><expr pos:start="509:73" pos:end="509:87"><operator pos:start="509:73" pos:end="509:73">&amp;</operator><name pos:start="509:74" pos:end="509:87">logbuffer_size</name></expr></argument>)</argument_list></call> <operator pos:start="509:90" pos:end="509:90">&lt;</operator> <literal type="number" pos:start="509:92" pos:end="509:92">0</literal></expr>)</condition> <block pos:start="509:95" pos:end="517:25">{<block_content pos:start="511:29" pos:end="515:44">

                            <expr_stmt pos:start="511:29" pos:end="513:48"><expr pos:start="511:29" pos:end="513:47"><call pos:start="511:29" pos:end="513:47"><name pos:start="511:29" pos:end="511:34">av_log</name><argument_list pos:start="511:35" pos:end="513:47">(<argument pos:start="511:36" pos:end="511:39"><expr pos:start="511:36" pos:end="511:39"><name pos:start="511:36" pos:end="511:39">NULL</name></expr></argument>, <argument pos:start="511:42" pos:end="511:53"><expr pos:start="511:42" pos:end="511:53"><name pos:start="511:42" pos:end="511:53">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="511:56" pos:end="511:106"><expr pos:start="511:56" pos:end="511:106"><literal type="string" pos:start="511:56" pos:end="511:106">"Error reading log file '%s' for pass-2 encoding\n"</literal></expr></argument>,

                                   <argument pos:start="513:36" pos:end="513:46"><expr pos:start="513:36" pos:end="513:46"><name pos:start="513:36" pos:end="513:46">logfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="515:29" pos:end="515:44"><expr pos:start="515:29" pos:end="515:43"><call pos:start="515:29" pos:end="515:43"><name pos:start="515:29" pos:end="515:40">exit_program</name><argument_list pos:start="515:41" pos:end="515:43">(<argument pos:start="515:42" pos:end="515:42"><expr pos:start="515:42" pos:end="515:42"><literal type="number" pos:start="515:42" pos:end="515:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="519:25" pos:end="519:52"><expr pos:start="519:25" pos:end="519:51"><name pos:start="519:25" pos:end="519:39"><name pos:start="519:25" pos:end="519:29">codec</name><operator pos:start="519:30" pos:end="519:31">-&gt;</operator><name pos:start="519:32" pos:end="519:39">stats_in</name></name> <operator pos:start="519:41" pos:end="519:41">=</operator> <name pos:start="519:43" pos:end="519:51">logbuffer</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="533:5" pos:end="533:27">/* open each encoder */</comment>

    <for pos:start="535:5" pos:end="605:5">for <control pos:start="535:9" pos:end="535:43">(<init pos:start="535:10" pos:end="535:15"><expr pos:start="535:10" pos:end="535:14"><name pos:start="535:10" pos:end="535:10">i</name> <operator pos:start="535:12" pos:end="535:12">=</operator> <literal type="number" pos:start="535:14" pos:end="535:14">0</literal></expr>;</init> <condition pos:start="535:17" pos:end="535:38"><expr pos:start="535:17" pos:end="535:37"><name pos:start="535:17" pos:end="535:17">i</name> <operator pos:start="535:19" pos:end="535:19">&lt;</operator> <name pos:start="535:21" pos:end="535:37">nb_output_streams</name></expr>;</condition> <incr pos:start="535:40" pos:end="535:42"><expr pos:start="535:40" pos:end="535:42"><name pos:start="535:40" pos:end="535:40">i</name><operator pos:start="535:41" pos:end="535:42">++</operator></expr></incr>)</control> <block pos:start="535:45" pos:end="605:5">{<block_content pos:start="537:9" pos:end="603:9">

        <expr_stmt pos:start="537:9" pos:end="537:32"><expr pos:start="537:9" pos:end="537:31"><name pos:start="537:9" pos:end="537:11">ost</name> <operator pos:start="537:13" pos:end="537:13">=</operator> <name pos:start="537:15" pos:end="537:31"><name pos:start="537:15" pos:end="537:28">output_streams</name><index pos:start="537:29" pos:end="537:31">[<expr pos:start="537:30" pos:end="537:30"><name pos:start="537:30" pos:end="537:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="539:9" pos:end="603:9"><if pos:start="539:9" pos:end="603:9">if <condition pos:start="539:12" pos:end="539:33">(<expr pos:start="539:13" pos:end="539:32"><name pos:start="539:13" pos:end="539:32"><name pos:start="539:13" pos:end="539:15">ost</name><operator pos:start="539:16" pos:end="539:17">-&gt;</operator><name pos:start="539:18" pos:end="539:32">encoding_needed</name></name></expr>)</condition> <block pos:start="539:35" pos:end="603:9">{<block_content pos:start="541:13" pos:end="601:82">

            <decl_stmt pos:start="541:13" pos:end="541:43"><decl pos:start="541:13" pos:end="541:42"><type pos:start="541:13" pos:end="541:26"><name pos:start="541:13" pos:end="541:19">AVCodec</name>      <modifier pos:start="541:26" pos:end="541:26">*</modifier></type><name pos:start="541:27" pos:end="541:31">codec</name> <init pos:start="541:33" pos:end="541:42">= <expr pos:start="541:35" pos:end="541:42"><name pos:start="541:35" pos:end="541:42"><name pos:start="541:35" pos:end="541:37">ost</name><operator pos:start="541:38" pos:end="541:39">-&gt;</operator><name pos:start="541:40" pos:end="541:42">enc</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="543:13" pos:end="543:39"><decl pos:start="543:13" pos:end="543:38"><type pos:start="543:13" pos:end="543:28"><name pos:start="543:13" pos:end="543:26">AVCodecContext</name> <modifier pos:start="543:28" pos:end="543:28">*</modifier></type><name pos:start="543:29" pos:end="543:31">dec</name> <init pos:start="543:33" pos:end="543:38">= <expr pos:start="543:35" pos:end="543:38"><name pos:start="543:35" pos:end="543:38">NULL</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="547:13" pos:end="549:37"><if pos:start="547:13" pos:end="549:37">if <condition pos:start="547:16" pos:end="547:46">(<expr pos:start="547:17" pos:end="547:45"><operator pos:start="547:17" pos:end="547:17">(</operator><name pos:start="547:18" pos:end="547:20">ist</name> <operator pos:start="547:22" pos:end="547:22">=</operator> <call pos:start="547:24" pos:end="547:44"><name pos:start="547:24" pos:end="547:39">get_input_stream</name><argument_list pos:start="547:40" pos:end="547:44">(<argument pos:start="547:41" pos:end="547:43"><expr pos:start="547:41" pos:end="547:43"><name pos:start="547:41" pos:end="547:43">ost</name></expr></argument>)</argument_list></call><operator pos:start="547:45" pos:end="547:45">)</operator></expr>)</condition><block type="pseudo" pos:start="549:17" pos:end="549:37"><block_content pos:start="549:17" pos:end="549:37">

                <expr_stmt pos:start="549:17" pos:end="549:37"><expr pos:start="549:17" pos:end="549:36"><name pos:start="549:17" pos:end="549:19">dec</name> <operator pos:start="549:21" pos:end="549:21">=</operator> <name pos:start="549:23" pos:end="549:36"><name pos:start="549:23" pos:end="549:25">ist</name><operator pos:start="549:26" pos:end="549:27">-&gt;</operator><name pos:start="549:28" pos:end="549:29">st</name><operator pos:start="549:30" pos:end="549:31">-&gt;</operator><name pos:start="549:32" pos:end="549:36">codec</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="551:13" pos:end="567:13"><if pos:start="551:13" pos:end="567:13">if <condition pos:start="551:16" pos:end="551:44">(<expr pos:start="551:17" pos:end="551:43"><name pos:start="551:17" pos:end="551:19">dec</name> <operator pos:start="551:21" pos:end="551:22">&amp;&amp;</operator> <name pos:start="551:24" pos:end="551:43"><name pos:start="551:24" pos:end="551:26">dec</name><operator pos:start="551:27" pos:end="551:28">-&gt;</operator><name pos:start="551:29" pos:end="551:43">subtitle_header</name></name></expr>)</condition> <block pos:start="551:46" pos:end="567:13">{<block_content pos:start="553:17" pos:end="565:81">

                <expr_stmt pos:start="553:17" pos:end="553:87"><expr pos:start="553:17" pos:end="553:86"><name pos:start="553:17" pos:end="553:47"><name pos:start="553:17" pos:end="553:19">ost</name><operator pos:start="553:20" pos:end="553:21">-&gt;</operator><name pos:start="553:22" pos:end="553:23">st</name><operator pos:start="553:24" pos:end="553:25">-&gt;</operator><name pos:start="553:26" pos:end="553:30">codec</name><operator pos:start="553:31" pos:end="553:32">-&gt;</operator><name pos:start="553:33" pos:end="553:47">subtitle_header</name></name> <operator pos:start="553:49" pos:end="553:49">=</operator> <call pos:start="553:51" pos:end="553:86"><name pos:start="553:51" pos:end="553:59">av_malloc</name><argument_list pos:start="553:60" pos:end="553:86">(<argument pos:start="553:61" pos:end="553:85"><expr pos:start="553:61" pos:end="553:85"><name pos:start="553:61" pos:end="553:85"><name pos:start="553:61" pos:end="553:63">dec</name><operator pos:start="553:64" pos:end="553:65">-&gt;</operator><name pos:start="553:66" pos:end="553:85">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="555:17" pos:end="561:17"><if pos:start="555:17" pos:end="561:17">if <condition pos:start="555:20" pos:end="555:53">(<expr pos:start="555:21" pos:end="555:52"><operator pos:start="555:21" pos:end="555:21">!</operator><name pos:start="555:22" pos:end="555:52"><name pos:start="555:22" pos:end="555:24">ost</name><operator pos:start="555:25" pos:end="555:26">-&gt;</operator><name pos:start="555:27" pos:end="555:28">st</name><operator pos:start="555:29" pos:end="555:30">-&gt;</operator><name pos:start="555:31" pos:end="555:35">codec</name><operator pos:start="555:36" pos:end="555:37">-&gt;</operator><name pos:start="555:38" pos:end="555:52">subtitle_header</name></name></expr>)</condition> <block pos:start="555:55" pos:end="561:17">{<block_content pos:start="557:21" pos:end="559:37">

                    <expr_stmt pos:start="557:21" pos:end="557:42"><expr pos:start="557:21" pos:end="557:41"><name pos:start="557:21" pos:end="557:23">ret</name> <operator pos:start="557:25" pos:end="557:25">=</operator> <call pos:start="557:27" pos:end="557:41"><name pos:start="557:27" pos:end="557:33">AVERROR</name><argument_list pos:start="557:34" pos:end="557:41">(<argument pos:start="557:35" pos:end="557:40"><expr pos:start="557:35" pos:end="557:40"><name pos:start="557:35" pos:end="557:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="559:21" pos:end="559:37">goto <name pos:start="559:26" pos:end="559:36">dump_format</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="563:17" pos:end="563:105"><expr pos:start="563:17" pos:end="563:104"><call pos:start="563:17" pos:end="563:104"><name pos:start="563:17" pos:end="563:22">memcpy</name><argument_list pos:start="563:23" pos:end="563:104">(<argument pos:start="563:24" pos:end="563:54"><expr pos:start="563:24" pos:end="563:54"><name pos:start="563:24" pos:end="563:54"><name pos:start="563:24" pos:end="563:26">ost</name><operator pos:start="563:27" pos:end="563:28">-&gt;</operator><name pos:start="563:29" pos:end="563:30">st</name><operator pos:start="563:31" pos:end="563:32">-&gt;</operator><name pos:start="563:33" pos:end="563:37">codec</name><operator pos:start="563:38" pos:end="563:39">-&gt;</operator><name pos:start="563:40" pos:end="563:54">subtitle_header</name></name></expr></argument>, <argument pos:start="563:57" pos:end="563:76"><expr pos:start="563:57" pos:end="563:76"><name pos:start="563:57" pos:end="563:76"><name pos:start="563:57" pos:end="563:59">dec</name><operator pos:start="563:60" pos:end="563:61">-&gt;</operator><name pos:start="563:62" pos:end="563:76">subtitle_header</name></name></expr></argument>, <argument pos:start="563:79" pos:end="563:103"><expr pos:start="563:79" pos:end="563:103"><name pos:start="563:79" pos:end="563:103"><name pos:start="563:79" pos:end="563:81">dec</name><operator pos:start="563:82" pos:end="563:83">-&gt;</operator><name pos:start="563:84" pos:end="563:103">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="565:17" pos:end="565:81"><expr pos:start="565:17" pos:end="565:80"><name pos:start="565:17" pos:end="565:52"><name pos:start="565:17" pos:end="565:19">ost</name><operator pos:start="565:20" pos:end="565:21">-&gt;</operator><name pos:start="565:22" pos:end="565:23">st</name><operator pos:start="565:24" pos:end="565:25">-&gt;</operator><name pos:start="565:26" pos:end="565:30">codec</name><operator pos:start="565:31" pos:end="565:32">-&gt;</operator><name pos:start="565:33" pos:end="565:52">subtitle_header_size</name></name> <operator pos:start="565:54" pos:end="565:54">=</operator> <name pos:start="565:56" pos:end="565:80"><name pos:start="565:56" pos:end="565:58">dec</name><operator pos:start="565:59" pos:end="565:60">-&gt;</operator><name pos:start="565:61" pos:end="565:80">subtitle_header_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="569:13" pos:end="571:62"><if pos:start="569:13" pos:end="571:62">if <condition pos:start="569:16" pos:end="569:60">(<expr pos:start="569:17" pos:end="569:59"><operator pos:start="569:17" pos:end="569:17">!</operator><call pos:start="569:18" pos:end="569:59"><name pos:start="569:18" pos:end="569:28">av_dict_get</name><argument_list pos:start="569:29" pos:end="569:59">(<argument pos:start="569:30" pos:end="569:38"><expr pos:start="569:30" pos:end="569:38"><name pos:start="569:30" pos:end="569:38"><name pos:start="569:30" pos:end="569:32">ost</name><operator pos:start="569:33" pos:end="569:34">-&gt;</operator><name pos:start="569:35" pos:end="569:38">opts</name></name></expr></argument>, <argument pos:start="569:41" pos:end="569:49"><expr pos:start="569:41" pos:end="569:49"><literal type="string" pos:start="569:41" pos:end="569:49">"threads"</literal></expr></argument>, <argument pos:start="569:52" pos:end="569:55"><expr pos:start="569:52" pos:end="569:55"><name pos:start="569:52" pos:end="569:55">NULL</name></expr></argument>, <argument pos:start="569:58" pos:end="569:58"><expr pos:start="569:58" pos:end="569:58"><literal type="number" pos:start="569:58" pos:end="569:58">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="571:17" pos:end="571:62"><block_content pos:start="571:17" pos:end="571:62">

                <expr_stmt pos:start="571:17" pos:end="571:62"><expr pos:start="571:17" pos:end="571:61"><call pos:start="571:17" pos:end="571:61"><name pos:start="571:17" pos:end="571:27">av_dict_set</name><argument_list pos:start="571:28" pos:end="571:61">(<argument pos:start="571:29" pos:end="571:38"><expr pos:start="571:29" pos:end="571:38"><operator pos:start="571:29" pos:end="571:29">&amp;</operator><name pos:start="571:30" pos:end="571:38"><name pos:start="571:30" pos:end="571:32">ost</name><operator pos:start="571:33" pos:end="571:34">-&gt;</operator><name pos:start="571:35" pos:end="571:38">opts</name></name></expr></argument>, <argument pos:start="571:41" pos:end="571:49"><expr pos:start="571:41" pos:end="571:49"><literal type="string" pos:start="571:41" pos:end="571:49">"threads"</literal></expr></argument>, <argument pos:start="571:52" pos:end="571:57"><expr pos:start="571:52" pos:end="571:57"><literal type="string" pos:start="571:52" pos:end="571:57">"auto"</literal></expr></argument>, <argument pos:start="571:60" pos:end="571:60"><expr pos:start="571:60" pos:end="571:60"><literal type="number" pos:start="571:60" pos:end="571:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="573:13" pos:end="583:13"><if pos:start="573:13" pos:end="583:13">if <condition pos:start="573:16" pos:end="573:69">(<expr pos:start="573:17" pos:end="573:68"><call pos:start="573:17" pos:end="573:64"><name pos:start="573:17" pos:end="573:29">avcodec_open2</name><argument_list pos:start="573:30" pos:end="573:64">(<argument pos:start="573:31" pos:end="573:44"><expr pos:start="573:31" pos:end="573:44"><name pos:start="573:31" pos:end="573:44"><name pos:start="573:31" pos:end="573:33">ost</name><operator pos:start="573:34" pos:end="573:35">-&gt;</operator><name pos:start="573:36" pos:end="573:37">st</name><operator pos:start="573:38" pos:end="573:39">-&gt;</operator><name pos:start="573:40" pos:end="573:44">codec</name></name></expr></argument>, <argument pos:start="573:47" pos:end="573:51"><expr pos:start="573:47" pos:end="573:51"><name pos:start="573:47" pos:end="573:51">codec</name></expr></argument>, <argument pos:start="573:54" pos:end="573:63"><expr pos:start="573:54" pos:end="573:63"><operator pos:start="573:54" pos:end="573:54">&amp;</operator><name pos:start="573:55" pos:end="573:63"><name pos:start="573:55" pos:end="573:57">ost</name><operator pos:start="573:58" pos:end="573:59">-&gt;</operator><name pos:start="573:60" pos:end="573:63">opts</name></name></expr></argument>)</argument_list></call> <operator pos:start="573:66" pos:end="573:66">&lt;</operator> <literal type="number" pos:start="573:68" pos:end="573:68">0</literal></expr>)</condition> <block pos:start="573:71" pos:end="583:13">{<block_content pos:start="575:17" pos:end="581:33">

                <expr_stmt pos:start="575:17" pos:end="577:53"><expr pos:start="575:17" pos:end="577:52"><call pos:start="575:17" pos:end="577:52"><name pos:start="575:17" pos:end="575:24">snprintf</name><argument_list pos:start="575:25" pos:end="577:52">(<argument pos:start="575:26" pos:end="575:30"><expr pos:start="575:26" pos:end="575:30"><name pos:start="575:26" pos:end="575:30">error</name></expr></argument>, <argument pos:start="575:33" pos:end="575:45"><expr pos:start="575:33" pos:end="575:45"><sizeof pos:start="575:33" pos:end="575:45">sizeof<argument_list pos:start="575:39" pos:end="575:45">(<argument pos:start="575:40" pos:end="575:44"><expr pos:start="575:40" pos:end="575:44"><name pos:start="575:40" pos:end="575:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="575:48" pos:end="575:170"><expr pos:start="575:48" pos:end="575:170"><literal type="string" pos:start="575:48" pos:end="575:170">"Error while opening encoder for output stream #%d:%d - maybe incorrect parameters such as bit_rate, rate, width or height"</literal></expr></argument>,

                        <argument pos:start="577:25" pos:end="577:39"><expr pos:start="577:25" pos:end="577:39"><name pos:start="577:25" pos:end="577:39"><name pos:start="577:25" pos:end="577:27">ost</name><operator pos:start="577:28" pos:end="577:29">-&gt;</operator><name pos:start="577:30" pos:end="577:39">file_index</name></name></expr></argument>, <argument pos:start="577:42" pos:end="577:51"><expr pos:start="577:42" pos:end="577:51"><name pos:start="577:42" pos:end="577:51"><name pos:start="577:42" pos:end="577:44">ost</name><operator pos:start="577:45" pos:end="577:46">-&gt;</operator><name pos:start="577:47" pos:end="577:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="579:17" pos:end="579:38"><expr pos:start="579:17" pos:end="579:37"><name pos:start="579:17" pos:end="579:19">ret</name> <operator pos:start="579:21" pos:end="579:21">=</operator> <call pos:start="579:23" pos:end="579:37"><name pos:start="579:23" pos:end="579:29">AVERROR</name><argument_list pos:start="579:30" pos:end="579:37">(<argument pos:start="579:31" pos:end="579:36"><expr pos:start="579:31" pos:end="579:36"><name pos:start="579:31" pos:end="579:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="581:17" pos:end="581:33">goto <name pos:start="581:22" pos:end="581:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="585:13" pos:end="585:57"><expr pos:start="585:13" pos:end="585:56"><call pos:start="585:13" pos:end="585:56"><name pos:start="585:13" pos:end="585:37">assert_codec_experimental</name><argument_list pos:start="585:38" pos:end="585:56">(<argument pos:start="585:39" pos:end="585:52"><expr pos:start="585:39" pos:end="585:52"><name pos:start="585:39" pos:end="585:52"><name pos:start="585:39" pos:end="585:41">ost</name><operator pos:start="585:42" pos:end="585:43">-&gt;</operator><name pos:start="585:44" pos:end="585:45">st</name><operator pos:start="585:46" pos:end="585:47">-&gt;</operator><name pos:start="585:48" pos:end="585:52">codec</name></name></expr></argument>, <argument pos:start="585:55" pos:end="585:55"><expr pos:start="585:55" pos:end="585:55"><literal type="number" pos:start="585:55" pos:end="585:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="587:13" pos:end="587:40"><expr pos:start="587:13" pos:end="587:39"><call pos:start="587:13" pos:end="587:39"><name pos:start="587:13" pos:end="587:28">assert_avoptions</name><argument_list pos:start="587:29" pos:end="587:39">(<argument pos:start="587:30" pos:end="587:38"><expr pos:start="587:30" pos:end="587:38"><name pos:start="587:30" pos:end="587:38"><name pos:start="587:30" pos:end="587:32">ost</name><operator pos:start="587:33" pos:end="587:34">-&gt;</operator><name pos:start="587:35" pos:end="587:38">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="589:13" pos:end="593:91"><if pos:start="589:13" pos:end="593:91">if <condition pos:start="589:16" pos:end="589:76">(<expr pos:start="589:17" pos:end="589:75"><name pos:start="589:17" pos:end="589:40"><name pos:start="589:17" pos:end="589:19">ost</name><operator pos:start="589:20" pos:end="589:21">-&gt;</operator><name pos:start="589:22" pos:end="589:23">st</name><operator pos:start="589:24" pos:end="589:25">-&gt;</operator><name pos:start="589:26" pos:end="589:30">codec</name><operator pos:start="589:31" pos:end="589:32">-&gt;</operator><name pos:start="589:33" pos:end="589:40">bit_rate</name></name> <operator pos:start="589:42" pos:end="589:43">&amp;&amp;</operator> <name pos:start="589:45" pos:end="589:68"><name pos:start="589:45" pos:end="589:47">ost</name><operator pos:start="589:48" pos:end="589:49">-&gt;</operator><name pos:start="589:50" pos:end="589:51">st</name><operator pos:start="589:52" pos:end="589:53">-&gt;</operator><name pos:start="589:54" pos:end="589:58">codec</name><operator pos:start="589:59" pos:end="589:60">-&gt;</operator><name pos:start="589:61" pos:end="589:68">bit_rate</name></name> <operator pos:start="589:70" pos:end="589:70">&lt;</operator> <literal type="number" pos:start="589:72" pos:end="589:75">1000</literal></expr>)</condition><block type="pseudo" pos:start="591:17" pos:end="593:91"><block_content pos:start="591:17" pos:end="593:91">

                <expr_stmt pos:start="591:17" pos:end="593:91"><expr pos:start="591:17" pos:end="593:90"><call pos:start="591:17" pos:end="593:90"><name pos:start="591:17" pos:end="591:22">av_log</name><argument_list pos:start="591:23" pos:end="593:90">(<argument pos:start="591:24" pos:end="591:27"><expr pos:start="591:24" pos:end="591:27"><name pos:start="591:24" pos:end="591:27">NULL</name></expr></argument>, <argument pos:start="591:30" pos:end="591:43"><expr pos:start="591:30" pos:end="591:43"><name pos:start="591:30" pos:end="591:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="591:46" pos:end="593:89"><expr pos:start="591:46" pos:end="593:89"><literal type="string" pos:start="591:46" pos:end="591:84">"The bitrate parameter is set too low."</literal>

                                             <literal type="string" pos:start="593:46" pos:end="593:89">"It takes bits/s as argument, not kbits/s\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="595:13" pos:end="595:57"><expr pos:start="595:13" pos:end="595:56"><name pos:start="595:13" pos:end="595:22">extra_size</name> <operator pos:start="595:24" pos:end="595:25">+=</operator> <name pos:start="595:27" pos:end="595:56"><name pos:start="595:27" pos:end="595:29">ost</name><operator pos:start="595:30" pos:end="595:31">-&gt;</operator><name pos:start="595:32" pos:end="595:33">st</name><operator pos:start="595:34" pos:end="595:35">-&gt;</operator><name pos:start="595:36" pos:end="595:40">codec</name><operator pos:start="595:41" pos:end="595:42">-&gt;</operator><name pos:start="595:43" pos:end="595:56">extradata_size</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="599:13" pos:end="601:82"><if pos:start="599:13" pos:end="601:82">if <condition pos:start="599:16" pos:end="599:45">(<expr pos:start="599:17" pos:end="599:44"><name pos:start="599:17" pos:end="599:44"><name pos:start="599:17" pos:end="599:19">ost</name><operator pos:start="599:20" pos:end="599:21">-&gt;</operator><name pos:start="599:22" pos:end="599:23">st</name><operator pos:start="599:24" pos:end="599:25">-&gt;</operator><name pos:start="599:26" pos:end="599:30">codec</name><operator pos:start="599:31" pos:end="599:32">-&gt;</operator><name pos:start="599:33" pos:end="599:44">me_threshold</name></name></expr>)</condition><block type="pseudo" pos:start="601:17" pos:end="601:82"><block_content pos:start="601:17" pos:end="601:82">

                <expr_stmt pos:start="601:17" pos:end="601:82"><expr pos:start="601:17" pos:end="601:81"><name pos:start="601:17" pos:end="601:48"><name pos:start="601:17" pos:end="601:29">input_streams</name><index pos:start="601:30" pos:end="601:48">[<expr pos:start="601:31" pos:end="601:47"><name pos:start="601:31" pos:end="601:47"><name pos:start="601:31" pos:end="601:33">ost</name><operator pos:start="601:34" pos:end="601:35">-&gt;</operator><name pos:start="601:36" pos:end="601:47">source_index</name></name></expr>]</index></name><operator pos:start="601:49" pos:end="601:50">-&gt;</operator><name pos:start="601:51" pos:end="601:66"><name pos:start="601:51" pos:end="601:52">st</name><operator pos:start="601:53" pos:end="601:54">-&gt;</operator><name pos:start="601:55" pos:end="601:59">codec</name><operator pos:start="601:60" pos:end="601:61">-&gt;</operator><name pos:start="601:62" pos:end="601:66">debug</name></name> <operator pos:start="601:68" pos:end="601:69">|=</operator> <name pos:start="601:71" pos:end="601:81">FF_DEBUG_MV</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="609:5" pos:end="609:28">/* init input streams */</comment>

    <for pos:start="611:5" pos:end="615:29">for <control pos:start="611:9" pos:end="611:42">(<init pos:start="611:10" pos:end="611:15"><expr pos:start="611:10" pos:end="611:14"><name pos:start="611:10" pos:end="611:10">i</name> <operator pos:start="611:12" pos:end="611:12">=</operator> <literal type="number" pos:start="611:14" pos:end="611:14">0</literal></expr>;</init> <condition pos:start="611:17" pos:end="611:37"><expr pos:start="611:17" pos:end="611:36"><name pos:start="611:17" pos:end="611:17">i</name> <operator pos:start="611:19" pos:end="611:19">&lt;</operator> <name pos:start="611:21" pos:end="611:36">nb_input_streams</name></expr>;</condition> <incr pos:start="611:39" pos:end="611:41"><expr pos:start="611:39" pos:end="611:41"><name pos:start="611:39" pos:end="611:39">i</name><operator pos:start="611:40" pos:end="611:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="613:9" pos:end="615:29"><block_content pos:start="613:9" pos:end="615:29">

        <if_stmt pos:start="613:9" pos:end="615:29"><if pos:start="613:9" pos:end="615:29">if <condition pos:start="613:12" pos:end="613:67">(<expr pos:start="613:13" pos:end="613:66"><operator pos:start="613:13" pos:end="613:13">(</operator><name pos:start="613:14" pos:end="613:16">ret</name> <operator pos:start="613:18" pos:end="613:18">=</operator> <call pos:start="613:20" pos:end="613:61"><name pos:start="613:20" pos:end="613:36">init_input_stream</name><argument_list pos:start="613:37" pos:end="613:61">(<argument pos:start="613:38" pos:end="613:38"><expr pos:start="613:38" pos:end="613:38"><name pos:start="613:38" pos:end="613:38">i</name></expr></argument>, <argument pos:start="613:41" pos:end="613:45"><expr pos:start="613:41" pos:end="613:45"><name pos:start="613:41" pos:end="613:45">error</name></expr></argument>, <argument pos:start="613:48" pos:end="613:60"><expr pos:start="613:48" pos:end="613:60"><sizeof pos:start="613:48" pos:end="613:60">sizeof<argument_list pos:start="613:54" pos:end="613:60">(<argument pos:start="613:55" pos:end="613:59"><expr pos:start="613:55" pos:end="613:59"><name pos:start="613:55" pos:end="613:59">error</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="613:62" pos:end="613:62">)</operator> <operator pos:start="613:64" pos:end="613:64">&lt;</operator> <literal type="number" pos:start="613:66" pos:end="613:66">0</literal></expr>)</condition><block type="pseudo" pos:start="615:13" pos:end="615:29"><block_content pos:start="615:13" pos:end="615:29">

            <goto pos:start="615:13" pos:end="615:29">goto <name pos:start="615:18" pos:end="615:28">dump_format</name>;</goto></block_content></block></if></if_stmt></block_content></block></for>



    <comment type="block" pos:start="619:5" pos:end="619:33">/* discard unused programs */</comment>

    <for pos:start="621:5" pos:end="647:5">for <control pos:start="621:9" pos:end="621:40">(<init pos:start="621:10" pos:end="621:15"><expr pos:start="621:10" pos:end="621:14"><name pos:start="621:10" pos:end="621:10">i</name> <operator pos:start="621:12" pos:end="621:12">=</operator> <literal type="number" pos:start="621:14" pos:end="621:14">0</literal></expr>;</init> <condition pos:start="621:17" pos:end="621:35"><expr pos:start="621:17" pos:end="621:34"><name pos:start="621:17" pos:end="621:17">i</name> <operator pos:start="621:19" pos:end="621:19">&lt;</operator> <name pos:start="621:21" pos:end="621:34">nb_input_files</name></expr>;</condition> <incr pos:start="621:37" pos:end="621:39"><expr pos:start="621:37" pos:end="621:39"><name pos:start="621:37" pos:end="621:37">i</name><operator pos:start="621:38" pos:end="621:39">++</operator></expr></incr>)</control> <block pos:start="621:42" pos:end="647:5">{<block_content pos:start="623:9" pos:end="645:9">

        <decl_stmt pos:start="623:9" pos:end="623:42"><decl pos:start="623:9" pos:end="623:41"><type pos:start="623:9" pos:end="623:19"><name pos:start="623:9" pos:end="623:17">InputFile</name> <modifier pos:start="623:19" pos:end="623:19">*</modifier></type><name pos:start="623:20" pos:end="623:24">ifile</name> <init pos:start="623:26" pos:end="623:41">= <expr pos:start="623:28" pos:end="623:41"><name pos:start="623:28" pos:end="623:41"><name pos:start="623:28" pos:end="623:38">input_files</name><index pos:start="623:39" pos:end="623:41">[<expr pos:start="623:40" pos:end="623:40"><name pos:start="623:40" pos:end="623:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="625:9" pos:end="645:9">for <control pos:start="625:13" pos:end="625:53">(<init pos:start="625:14" pos:end="625:19"><expr pos:start="625:14" pos:end="625:18"><name pos:start="625:14" pos:end="625:14">j</name> <operator pos:start="625:16" pos:end="625:16">=</operator> <literal type="number" pos:start="625:18" pos:end="625:18">0</literal></expr>;</init> <condition pos:start="625:21" pos:end="625:48"><expr pos:start="625:21" pos:end="625:47"><name pos:start="625:21" pos:end="625:21">j</name> <operator pos:start="625:23" pos:end="625:23">&lt;</operator> <name pos:start="625:25" pos:end="625:47"><name pos:start="625:25" pos:end="625:29">ifile</name><operator pos:start="625:30" pos:end="625:31">-&gt;</operator><name pos:start="625:32" pos:end="625:34">ctx</name><operator pos:start="625:35" pos:end="625:36">-&gt;</operator><name pos:start="625:37" pos:end="625:47">nb_programs</name></name></expr>;</condition> <incr pos:start="625:50" pos:end="625:52"><expr pos:start="625:50" pos:end="625:52"><name pos:start="625:50" pos:end="625:50">j</name><operator pos:start="625:51" pos:end="625:52">++</operator></expr></incr>)</control> <block pos:start="625:55" pos:end="645:9">{<block_content pos:start="627:13" pos:end="643:33">

            <decl_stmt pos:start="627:13" pos:end="627:51"><decl pos:start="627:13" pos:end="627:50"><type pos:start="627:13" pos:end="627:23"><name pos:start="627:13" pos:end="627:21">AVProgram</name> <modifier pos:start="627:23" pos:end="627:23">*</modifier></type><name pos:start="627:24" pos:end="627:24">p</name> <init pos:start="627:26" pos:end="627:50">= <expr pos:start="627:28" pos:end="627:50"><name pos:start="627:28" pos:end="627:50"><name pos:start="627:28" pos:end="627:32">ifile</name><operator pos:start="627:33" pos:end="627:34">-&gt;</operator><name pos:start="627:35" pos:end="627:37">ctx</name><operator pos:start="627:38" pos:end="627:39">-&gt;</operator><name pos:start="627:40" pos:end="627:47">programs</name><index pos:start="627:48" pos:end="627:50">[<expr pos:start="627:49" pos:end="627:49"><name pos:start="627:49" pos:end="627:49">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="629:13" pos:end="629:41"><decl pos:start="629:13" pos:end="629:40"><type pos:start="629:13" pos:end="629:15"><name pos:start="629:13" pos:end="629:15">int</name></type> <name pos:start="629:17" pos:end="629:23">discard</name>  <init pos:start="629:26" pos:end="629:40">= <expr pos:start="629:28" pos:end="629:40"><name pos:start="629:28" pos:end="629:40">AVDISCARD_ALL</name></expr></init></decl>;</decl_stmt>



            <for pos:start="633:13" pos:end="641:17">for <control pos:start="633:17" pos:end="633:54">(<init pos:start="633:18" pos:end="633:23"><expr pos:start="633:18" pos:end="633:22"><name pos:start="633:18" pos:end="633:18">k</name> <operator pos:start="633:20" pos:end="633:20">=</operator> <literal type="number" pos:start="633:22" pos:end="633:22">0</literal></expr>;</init> <condition pos:start="633:25" pos:end="633:49"><expr pos:start="633:25" pos:end="633:48"><name pos:start="633:25" pos:end="633:25">k</name> <operator pos:start="633:27" pos:end="633:27">&lt;</operator> <name pos:start="633:29" pos:end="633:48"><name pos:start="633:29" pos:end="633:29">p</name><operator pos:start="633:30" pos:end="633:31">-&gt;</operator><name pos:start="633:32" pos:end="633:48">nb_stream_indexes</name></name></expr>;</condition> <incr pos:start="633:51" pos:end="633:53"><expr pos:start="633:51" pos:end="633:53"><name pos:start="633:51" pos:end="633:51">k</name><operator pos:start="633:52" pos:end="633:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="635:17" pos:end="641:17"><block_content pos:start="635:17" pos:end="641:17">

                <if_stmt pos:start="635:17" pos:end="641:17"><if pos:start="635:17" pos:end="641:17">if <condition pos:start="635:20" pos:end="635:83">(<expr pos:start="635:21" pos:end="635:82"><operator pos:start="635:21" pos:end="635:21">!</operator><name pos:start="635:22" pos:end="635:73"><name pos:start="635:22" pos:end="635:34">input_streams</name><index pos:start="635:35" pos:end="635:73">[<expr pos:start="635:36" pos:end="635:72"><name pos:start="635:36" pos:end="635:51"><name pos:start="635:36" pos:end="635:40">ifile</name><operator pos:start="635:41" pos:end="635:42">-&gt;</operator><name pos:start="635:43" pos:end="635:51">ist_index</name></name> <operator pos:start="635:53" pos:end="635:53">+</operator> <name pos:start="635:55" pos:end="635:72"><name pos:start="635:55" pos:end="635:55">p</name><operator pos:start="635:56" pos:end="635:57">-&gt;</operator><name pos:start="635:58" pos:end="635:69">stream_index</name><index pos:start="635:70" pos:end="635:72">[<expr pos:start="635:71" pos:end="635:71"><name pos:start="635:71" pos:end="635:71">k</name></expr>]</index></name></expr>]</index></name><operator pos:start="635:74" pos:end="635:75">-&gt;</operator><name pos:start="635:76" pos:end="635:82">discard</name></expr>)</condition> <block pos:start="635:85" pos:end="641:17">{<block_content pos:start="637:21" pos:end="639:26">

                    <expr_stmt pos:start="637:21" pos:end="637:48"><expr pos:start="637:21" pos:end="637:47"><name pos:start="637:21" pos:end="637:27">discard</name> <operator pos:start="637:29" pos:end="637:29">=</operator> <name pos:start="637:31" pos:end="637:47">AVDISCARD_DEFAULT</name></expr>;</expr_stmt>

                    <break pos:start="639:21" pos:end="639:26">break;</break>

                </block_content>}</block></if></if_stmt></block_content></block></for>

            <expr_stmt pos:start="643:13" pos:end="643:33"><expr pos:start="643:13" pos:end="643:32"><name pos:start="643:13" pos:end="643:22"><name pos:start="643:13" pos:end="643:13">p</name><operator pos:start="643:14" pos:end="643:15">-&gt;</operator><name pos:start="643:16" pos:end="643:22">discard</name></name> <operator pos:start="643:24" pos:end="643:24">=</operator> <name pos:start="643:26" pos:end="643:32">discard</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="651:5" pos:end="651:43">/* open files and write file headers */</comment>

    <for pos:start="653:5" pos:end="677:5">for <control pos:start="653:9" pos:end="653:41">(<init pos:start="653:10" pos:end="653:15"><expr pos:start="653:10" pos:end="653:14"><name pos:start="653:10" pos:end="653:10">i</name> <operator pos:start="653:12" pos:end="653:12">=</operator> <literal type="number" pos:start="653:14" pos:end="653:14">0</literal></expr>;</init> <condition pos:start="653:17" pos:end="653:36"><expr pos:start="653:17" pos:end="653:35"><name pos:start="653:17" pos:end="653:17">i</name> <operator pos:start="653:19" pos:end="653:19">&lt;</operator> <name pos:start="653:21" pos:end="653:35">nb_output_files</name></expr>;</condition> <incr pos:start="653:38" pos:end="653:40"><expr pos:start="653:38" pos:end="653:40"><name pos:start="653:38" pos:end="653:38">i</name><operator pos:start="653:39" pos:end="653:40">++</operator></expr></incr>)</control> <block pos:start="653:43" pos:end="677:5">{<block_content pos:start="655:9" pos:end="675:9">

        <expr_stmt pos:start="655:9" pos:end="655:34"><expr pos:start="655:9" pos:end="655:33"><name pos:start="655:9" pos:end="655:10">oc</name> <operator pos:start="655:12" pos:end="655:12">=</operator> <name pos:start="655:14" pos:end="655:28"><name pos:start="655:14" pos:end="655:25">output_files</name><index pos:start="655:26" pos:end="655:28">[<expr pos:start="655:27" pos:end="655:27"><name pos:start="655:27" pos:end="655:27">i</name></expr>]</index></name><operator pos:start="655:29" pos:end="655:30">-&gt;</operator><name pos:start="655:31" pos:end="655:33">ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="657:9" pos:end="657:40"><expr pos:start="657:9" pos:end="657:39"><name pos:start="657:9" pos:end="657:30"><name pos:start="657:9" pos:end="657:10">oc</name><operator pos:start="657:11" pos:end="657:12">-&gt;</operator><name pos:start="657:13" pos:end="657:30">interrupt_callback</name></name> <operator pos:start="657:32" pos:end="657:32">=</operator> <name pos:start="657:34" pos:end="657:39">int_cb</name></expr>;</expr_stmt>

        <if_stmt pos:start="659:9" pos:end="667:9"><if pos:start="659:9" pos:end="667:9">if <condition pos:start="659:12" pos:end="659:66">(<expr pos:start="659:13" pos:end="659:65"><call pos:start="659:13" pos:end="659:61"><name pos:start="659:13" pos:end="659:33">avformat_write_header</name><argument_list pos:start="659:34" pos:end="659:61">(<argument pos:start="659:35" pos:end="659:36"><expr pos:start="659:35" pos:end="659:36"><name pos:start="659:35" pos:end="659:36">oc</name></expr></argument>, <argument pos:start="659:39" pos:end="659:60"><expr pos:start="659:39" pos:end="659:60"><operator pos:start="659:39" pos:end="659:39">&amp;</operator><name pos:start="659:40" pos:end="659:54"><name pos:start="659:40" pos:end="659:51">output_files</name><index pos:start="659:52" pos:end="659:54">[<expr pos:start="659:53" pos:end="659:53"><name pos:start="659:53" pos:end="659:53">i</name></expr>]</index></name><operator pos:start="659:55" pos:end="659:56">-&gt;</operator><name pos:start="659:57" pos:end="659:60">opts</name></expr></argument>)</argument_list></call> <operator pos:start="659:63" pos:end="659:63">&lt;</operator> <literal type="number" pos:start="659:65" pos:end="659:65">0</literal></expr>)</condition> <block pos:start="659:68" pos:end="667:9">{<block_content pos:start="661:13" pos:end="665:29">

            <expr_stmt pos:start="661:13" pos:end="661:123"><expr pos:start="661:13" pos:end="661:122"><call pos:start="661:13" pos:end="661:122"><name pos:start="661:13" pos:end="661:20">snprintf</name><argument_list pos:start="661:21" pos:end="661:122">(<argument pos:start="661:22" pos:end="661:26"><expr pos:start="661:22" pos:end="661:26"><name pos:start="661:22" pos:end="661:26">error</name></expr></argument>, <argument pos:start="661:29" pos:end="661:41"><expr pos:start="661:29" pos:end="661:41"><sizeof pos:start="661:29" pos:end="661:41">sizeof<argument_list pos:start="661:35" pos:end="661:41">(<argument pos:start="661:36" pos:end="661:40"><expr pos:start="661:36" pos:end="661:40"><name pos:start="661:36" pos:end="661:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="661:44" pos:end="661:118"><expr pos:start="661:44" pos:end="661:118"><literal type="string" pos:start="661:44" pos:end="661:118">"Could not write header for output file #%d (incorrect codec parameters ?)"</literal></expr></argument>, <argument pos:start="661:121" pos:end="661:121"><expr pos:start="661:121" pos:end="661:121"><name pos:start="661:121" pos:end="661:121">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="663:13" pos:end="663:34"><expr pos:start="663:13" pos:end="663:33"><name pos:start="663:13" pos:end="663:15">ret</name> <operator pos:start="663:17" pos:end="663:17">=</operator> <call pos:start="663:19" pos:end="663:33"><name pos:start="663:19" pos:end="663:25">AVERROR</name><argument_list pos:start="663:26" pos:end="663:33">(<argument pos:start="663:27" pos:end="663:32"><expr pos:start="663:27" pos:end="663:32"><name pos:start="663:27" pos:end="663:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="665:13" pos:end="665:29">goto <name pos:start="665:18" pos:end="665:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="669:9" pos:end="669:48"><expr pos:start="669:9" pos:end="669:47"><call pos:start="669:9" pos:end="669:47"><name pos:start="669:9" pos:end="669:24">assert_avoptions</name><argument_list pos:start="669:25" pos:end="669:47">(<argument pos:start="669:26" pos:end="669:46"><expr pos:start="669:26" pos:end="669:46"><name pos:start="669:26" pos:end="669:40"><name pos:start="669:26" pos:end="669:37">output_files</name><index pos:start="669:38" pos:end="669:40">[<expr pos:start="669:39" pos:end="669:39"><name pos:start="669:39" pos:end="669:39">i</name></expr>]</index></name><operator pos:start="669:41" pos:end="669:42">-&gt;</operator><name pos:start="669:43" pos:end="669:46">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="671:9" pos:end="675:9"><if pos:start="671:9" pos:end="675:9">if <condition pos:start="671:12" pos:end="671:45">(<expr pos:start="671:13" pos:end="671:44"><call pos:start="671:13" pos:end="671:44"><name pos:start="671:13" pos:end="671:18">strcmp</name><argument_list pos:start="671:19" pos:end="671:44">(<argument pos:start="671:20" pos:end="671:36"><expr pos:start="671:20" pos:end="671:36"><name pos:start="671:20" pos:end="671:36"><name pos:start="671:20" pos:end="671:21">oc</name><operator pos:start="671:22" pos:end="671:23">-&gt;</operator><name pos:start="671:24" pos:end="671:30">oformat</name><operator pos:start="671:31" pos:end="671:32">-&gt;</operator><name pos:start="671:33" pos:end="671:36">name</name></name></expr></argument>, <argument pos:start="671:39" pos:end="671:43"><expr pos:start="671:39" pos:end="671:43"><literal type="string" pos:start="671:39" pos:end="671:43">"rtp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="671:47" pos:end="675:9">{<block_content pos:start="673:13" pos:end="673:25">

            <expr_stmt pos:start="673:13" pos:end="673:25"><expr pos:start="673:13" pos:end="673:24"><name pos:start="673:13" pos:end="673:20">want_sdp</name> <operator pos:start="673:22" pos:end="673:22">=</operator> <literal type="number" pos:start="673:24" pos:end="673:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



 <label pos:start="681:2" pos:end="681:13"><name pos:start="681:2" pos:end="681:12">dump_format</name>:</label>

    <comment type="block" pos:start="683:5" pos:end="685:24">/* dump the file output parameters - cannot be done before in case

       of stream copy */</comment>

    <for pos:start="687:5" pos:end="691:5">for <control pos:start="687:9" pos:end="687:41">(<init pos:start="687:10" pos:end="687:15"><expr pos:start="687:10" pos:end="687:14"><name pos:start="687:10" pos:end="687:10">i</name> <operator pos:start="687:12" pos:end="687:12">=</operator> <literal type="number" pos:start="687:14" pos:end="687:14">0</literal></expr>;</init> <condition pos:start="687:17" pos:end="687:36"><expr pos:start="687:17" pos:end="687:35"><name pos:start="687:17" pos:end="687:17">i</name> <operator pos:start="687:19" pos:end="687:19">&lt;</operator> <name pos:start="687:21" pos:end="687:35">nb_output_files</name></expr>;</condition> <incr pos:start="687:38" pos:end="687:40"><expr pos:start="687:38" pos:end="687:40"><name pos:start="687:38" pos:end="687:38">i</name><operator pos:start="687:39" pos:end="687:40">++</operator></expr></incr>)</control> <block pos:start="687:43" pos:end="691:5">{<block_content pos:start="689:9" pos:end="689:83">

        <expr_stmt pos:start="689:9" pos:end="689:83"><expr pos:start="689:9" pos:end="689:82"><call pos:start="689:9" pos:end="689:82"><name pos:start="689:9" pos:end="689:22">av_dump_format</name><argument_list pos:start="689:23" pos:end="689:82">(<argument pos:start="689:24" pos:end="689:43"><expr pos:start="689:24" pos:end="689:43"><name pos:start="689:24" pos:end="689:38"><name pos:start="689:24" pos:end="689:35">output_files</name><index pos:start="689:36" pos:end="689:38">[<expr pos:start="689:37" pos:end="689:37"><name pos:start="689:37" pos:end="689:37">i</name></expr>]</index></name><operator pos:start="689:39" pos:end="689:40">-&gt;</operator><name pos:start="689:41" pos:end="689:43">ctx</name></expr></argument>, <argument pos:start="689:46" pos:end="689:46"><expr pos:start="689:46" pos:end="689:46"><name pos:start="689:46" pos:end="689:46">i</name></expr></argument>, <argument pos:start="689:49" pos:end="689:78"><expr pos:start="689:49" pos:end="689:78"><name pos:start="689:49" pos:end="689:63"><name pos:start="689:49" pos:end="689:60">output_files</name><index pos:start="689:61" pos:end="689:63">[<expr pos:start="689:62" pos:end="689:62"><name pos:start="689:62" pos:end="689:62">i</name></expr>]</index></name><operator pos:start="689:64" pos:end="689:65">-&gt;</operator><name pos:start="689:66" pos:end="689:78"><name pos:start="689:66" pos:end="689:68">ctx</name><operator pos:start="689:69" pos:end="689:70">-&gt;</operator><name pos:start="689:71" pos:end="689:78">filename</name></name></expr></argument>, <argument pos:start="689:81" pos:end="689:81"><expr pos:start="689:81" pos:end="689:81"><literal type="number" pos:start="689:81" pos:end="689:81">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="695:5" pos:end="695:33">/* dump the stream mapping */</comment>

    <expr_stmt pos:start="697:5" pos:end="697:51"><expr pos:start="697:5" pos:end="697:50"><call pos:start="697:5" pos:end="697:50"><name pos:start="697:5" pos:end="697:10">av_log</name><argument_list pos:start="697:11" pos:end="697:50">(<argument pos:start="697:12" pos:end="697:15"><expr pos:start="697:12" pos:end="697:15"><name pos:start="697:12" pos:end="697:15">NULL</name></expr></argument>, <argument pos:start="697:18" pos:end="697:28"><expr pos:start="697:18" pos:end="697:28"><name pos:start="697:18" pos:end="697:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="697:31" pos:end="697:49"><expr pos:start="697:31" pos:end="697:49"><literal type="string" pos:start="697:31" pos:end="697:49">"Stream mapping:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="699:5" pos:end="731:5">for <control pos:start="699:9" pos:end="699:42">(<init pos:start="699:10" pos:end="699:15"><expr pos:start="699:10" pos:end="699:14"><name pos:start="699:10" pos:end="699:10">i</name> <operator pos:start="699:12" pos:end="699:12">=</operator> <literal type="number" pos:start="699:14" pos:end="699:14">0</literal></expr>;</init> <condition pos:start="699:17" pos:end="699:37"><expr pos:start="699:17" pos:end="699:36"><name pos:start="699:17" pos:end="699:17">i</name> <operator pos:start="699:19" pos:end="699:19">&lt;</operator> <name pos:start="699:21" pos:end="699:36">nb_input_streams</name></expr>;</condition> <incr pos:start="699:39" pos:end="699:41"><expr pos:start="699:39" pos:end="699:41"><name pos:start="699:39" pos:end="699:39">i</name><operator pos:start="699:40" pos:end="699:41">++</operator></expr></incr>)</control> <block pos:start="699:44" pos:end="731:5">{<block_content pos:start="701:9" pos:end="729:9">

        <expr_stmt pos:start="701:9" pos:end="701:31"><expr pos:start="701:9" pos:end="701:30"><name pos:start="701:9" pos:end="701:11">ist</name> <operator pos:start="701:13" pos:end="701:13">=</operator> <name pos:start="701:15" pos:end="701:30"><name pos:start="701:15" pos:end="701:27">input_streams</name><index pos:start="701:28" pos:end="701:30">[<expr pos:start="701:29" pos:end="701:29"><name pos:start="701:29" pos:end="701:29">i</name></expr>]</index></name></expr>;</expr_stmt>



        <for pos:start="705:9" pos:end="729:9">for <control pos:start="705:13" pos:end="705:45">(<init pos:start="705:14" pos:end="705:19"><expr pos:start="705:14" pos:end="705:18"><name pos:start="705:14" pos:end="705:14">j</name> <operator pos:start="705:16" pos:end="705:16">=</operator> <literal type="number" pos:start="705:18" pos:end="705:18">0</literal></expr>;</init> <condition pos:start="705:21" pos:end="705:40"><expr pos:start="705:21" pos:end="705:39"><name pos:start="705:21" pos:end="705:21">j</name> <operator pos:start="705:23" pos:end="705:23">&lt;</operator> <name pos:start="705:25" pos:end="705:39"><name pos:start="705:25" pos:end="705:27">ist</name><operator pos:start="705:28" pos:end="705:29">-&gt;</operator><name pos:start="705:30" pos:end="705:39">nb_filters</name></name></expr>;</condition> <incr pos:start="705:42" pos:end="705:44"><expr pos:start="705:42" pos:end="705:44"><name pos:start="705:42" pos:end="705:42">j</name><operator pos:start="705:43" pos:end="705:44">++</operator></expr></incr>)</control> <block pos:start="705:47" pos:end="729:9">{<block_content pos:start="707:13" pos:end="727:13">

            <decl_stmt pos:start="707:13" pos:end="707:69"><decl pos:start="707:13" pos:end="707:68"><type pos:start="707:13" pos:end="707:26"><name pos:start="707:13" pos:end="707:24">AVFilterLink</name> <modifier pos:start="707:26" pos:end="707:26">*</modifier></type><name pos:start="707:27" pos:end="707:30">link</name> <init pos:start="707:32" pos:end="707:68">= <expr pos:start="707:34" pos:end="707:68"><name pos:start="707:34" pos:end="707:48"><name pos:start="707:34" pos:end="707:36">ist</name><operator pos:start="707:37" pos:end="707:38">-&gt;</operator><name pos:start="707:39" pos:end="707:45">filters</name><index pos:start="707:46" pos:end="707:48">[<expr pos:start="707:47" pos:end="707:47"><name pos:start="707:47" pos:end="707:47">j</name></expr>]</index></name><operator pos:start="707:49" pos:end="707:50">-&gt;</operator><name pos:start="707:51" pos:end="707:68"><name pos:start="707:51" pos:end="707:56">filter</name><operator pos:start="707:57" pos:end="707:58">-&gt;</operator><name pos:start="707:59" pos:end="707:65">outputs</name><index pos:start="707:66" pos:end="707:68">[<expr pos:start="707:67" pos:end="707:67"><literal type="number" pos:start="707:67" pos:end="707:67">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="709:13" pos:end="727:13"><if pos:start="709:13" pos:end="727:13">if <condition pos:start="709:16" pos:end="709:51">(<expr pos:start="709:17" pos:end="709:50"><name pos:start="709:17" pos:end="709:31"><name pos:start="709:17" pos:end="709:19">ist</name><operator pos:start="709:20" pos:end="709:21">-&gt;</operator><name pos:start="709:22" pos:end="709:28">filters</name><index pos:start="709:29" pos:end="709:31">[<expr pos:start="709:30" pos:end="709:30"><name pos:start="709:30" pos:end="709:30">j</name></expr>]</index></name><operator pos:start="709:32" pos:end="709:33">-&gt;</operator><name pos:start="709:34" pos:end="709:50"><name pos:start="709:34" pos:end="709:38">graph</name><operator pos:start="709:39" pos:end="709:40">-&gt;</operator><name pos:start="709:41" pos:end="709:50">graph_desc</name></name></expr>)</condition> <block pos:start="709:53" pos:end="727:13">{<block_content pos:start="711:17" pos:end="725:48">

                <expr_stmt pos:start="711:17" pos:end="715:48"><expr pos:start="711:17" pos:end="715:47"><call pos:start="711:17" pos:end="715:47"><name pos:start="711:17" pos:end="711:22">av_log</name><argument_list pos:start="711:23" pos:end="715:47">(<argument pos:start="711:24" pos:end="711:27"><expr pos:start="711:24" pos:end="711:27"><name pos:start="711:24" pos:end="711:27">NULL</name></expr></argument>, <argument pos:start="711:30" pos:end="711:40"><expr pos:start="711:30" pos:end="711:40"><name pos:start="711:30" pos:end="711:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="711:43" pos:end="711:70"><expr pos:start="711:43" pos:end="711:70"><literal type="string" pos:start="711:43" pos:end="711:70">"  Stream #%d:%d (%s) -&gt; %s"</literal></expr></argument>,

                       <argument pos:start="713:24" pos:end="713:38"><expr pos:start="713:24" pos:end="713:38"><name pos:start="713:24" pos:end="713:38"><name pos:start="713:24" pos:end="713:26">ist</name><operator pos:start="713:27" pos:end="713:28">-&gt;</operator><name pos:start="713:29" pos:end="713:38">file_index</name></name></expr></argument>, <argument pos:start="713:41" pos:end="713:54"><expr pos:start="713:41" pos:end="713:54"><name pos:start="713:41" pos:end="713:54"><name pos:start="713:41" pos:end="713:43">ist</name><operator pos:start="713:44" pos:end="713:45">-&gt;</operator><name pos:start="713:46" pos:end="713:47">st</name><operator pos:start="713:48" pos:end="713:49">-&gt;</operator><name pos:start="713:50" pos:end="713:54">index</name></name></expr></argument>, <argument pos:start="713:57" pos:end="713:87"><expr pos:start="713:57" pos:end="713:87"><ternary pos:start="713:57" pos:end="713:87"><condition pos:start="713:57" pos:end="713:66"><expr pos:start="713:57" pos:end="713:64"><name pos:start="713:57" pos:end="713:64"><name pos:start="713:57" pos:end="713:59">ist</name><operator pos:start="713:60" pos:end="713:61">-&gt;</operator><name pos:start="713:62" pos:end="713:64">dec</name></name></expr> ?</condition><then pos:start="713:68" pos:end="713:81"> <expr pos:start="713:68" pos:end="713:81"><name pos:start="713:68" pos:end="713:81"><name pos:start="713:68" pos:end="713:70">ist</name><operator pos:start="713:71" pos:end="713:72">-&gt;</operator><name pos:start="713:73" pos:end="713:75">dec</name><operator pos:start="713:76" pos:end="713:77">-&gt;</operator><name pos:start="713:78" pos:end="713:81">name</name></name></expr> </then><else pos:start="713:83" pos:end="713:87">: <expr pos:start="713:85" pos:end="713:87"><literal type="string" pos:start="713:85" pos:end="713:87">"?"</literal></expr></else></ternary></expr></argument>,

                       <argument pos:start="715:24" pos:end="715:46"><expr pos:start="715:24" pos:end="715:46"><name pos:start="715:24" pos:end="715:46"><name pos:start="715:24" pos:end="715:27">link</name><operator pos:start="715:28" pos:end="715:29">-&gt;</operator><name pos:start="715:30" pos:end="715:32">dst</name><operator pos:start="715:33" pos:end="715:34">-&gt;</operator><name pos:start="715:35" pos:end="715:40">filter</name><operator pos:start="715:41" pos:end="715:42">-&gt;</operator><name pos:start="715:43" pos:end="715:46">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="717:17" pos:end="719:73"><if pos:start="717:17" pos:end="719:73">if <condition pos:start="717:20" pos:end="717:47">(<expr pos:start="717:21" pos:end="717:46"><name pos:start="717:21" pos:end="717:42"><name pos:start="717:21" pos:end="717:24">link</name><operator pos:start="717:25" pos:end="717:26">-&gt;</operator><name pos:start="717:27" pos:end="717:29">dst</name><operator pos:start="717:30" pos:end="717:31">-&gt;</operator><name pos:start="717:32" pos:end="717:42">input_count</name></name> <operator pos:start="717:44" pos:end="717:44">&gt;</operator> <literal type="number" pos:start="717:46" pos:end="717:46">1</literal></expr>)</condition><block type="pseudo" pos:start="719:21" pos:end="719:73"><block_content pos:start="719:21" pos:end="719:73">

                    <expr_stmt pos:start="719:21" pos:end="719:73"><expr pos:start="719:21" pos:end="719:72"><call pos:start="719:21" pos:end="719:72"><name pos:start="719:21" pos:end="719:26">av_log</name><argument_list pos:start="719:27" pos:end="719:72">(<argument pos:start="719:28" pos:end="719:31"><expr pos:start="719:28" pos:end="719:31"><name pos:start="719:28" pos:end="719:31">NULL</name></expr></argument>, <argument pos:start="719:34" pos:end="719:44"><expr pos:start="719:34" pos:end="719:44"><name pos:start="719:34" pos:end="719:44">AV_LOG_INFO</name></expr></argument>, <argument pos:start="719:47" pos:end="719:51"><expr pos:start="719:47" pos:end="719:51"><literal type="string" pos:start="719:47" pos:end="719:51">":%s"</literal></expr></argument>, <argument pos:start="719:54" pos:end="719:71"><expr pos:start="719:54" pos:end="719:71"><name pos:start="719:54" pos:end="719:71"><name pos:start="719:54" pos:end="719:57">link</name><operator pos:start="719:58" pos:end="719:59">-&gt;</operator><name pos:start="719:60" pos:end="719:65">dstpad</name><operator pos:start="719:66" pos:end="719:67">-&gt;</operator><name pos:start="719:68" pos:end="719:71">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="721:17" pos:end="723:92"><if pos:start="721:17" pos:end="723:92">if <condition pos:start="721:20" pos:end="721:40">(<expr pos:start="721:21" pos:end="721:39"><name pos:start="721:21" pos:end="721:35">nb_filtergraphs</name> <operator pos:start="721:37" pos:end="721:37">&gt;</operator> <literal type="number" pos:start="721:39" pos:end="721:39">1</literal></expr>)</condition><block type="pseudo" pos:start="723:21" pos:end="723:92"><block_content pos:start="723:21" pos:end="723:92">

                    <expr_stmt pos:start="723:21" pos:end="723:92"><expr pos:start="723:21" pos:end="723:91"><call pos:start="723:21" pos:end="723:91"><name pos:start="723:21" pos:end="723:26">av_log</name><argument_list pos:start="723:27" pos:end="723:91">(<argument pos:start="723:28" pos:end="723:31"><expr pos:start="723:28" pos:end="723:31"><name pos:start="723:28" pos:end="723:31">NULL</name></expr></argument>, <argument pos:start="723:34" pos:end="723:44"><expr pos:start="723:34" pos:end="723:44"><name pos:start="723:34" pos:end="723:44">AV_LOG_INFO</name></expr></argument>, <argument pos:start="723:47" pos:end="723:59"><expr pos:start="723:47" pos:end="723:59"><literal type="string" pos:start="723:47" pos:end="723:59">" (graph %d)"</literal></expr></argument>, <argument pos:start="723:62" pos:end="723:90"><expr pos:start="723:62" pos:end="723:90"><name pos:start="723:62" pos:end="723:76"><name pos:start="723:62" pos:end="723:64">ist</name><operator pos:start="723:65" pos:end="723:66">-&gt;</operator><name pos:start="723:67" pos:end="723:73">filters</name><index pos:start="723:74" pos:end="723:76">[<expr pos:start="723:75" pos:end="723:75"><name pos:start="723:75" pos:end="723:75">j</name></expr>]</index></name><operator pos:start="723:77" pos:end="723:78">-&gt;</operator><name pos:start="723:79" pos:end="723:90"><name pos:start="723:79" pos:end="723:83">graph</name><operator pos:start="723:84" pos:end="723:85">-&gt;</operator><name pos:start="723:86" pos:end="723:90">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="725:17" pos:end="725:48"><expr pos:start="725:17" pos:end="725:47"><call pos:start="725:17" pos:end="725:47"><name pos:start="725:17" pos:end="725:22">av_log</name><argument_list pos:start="725:23" pos:end="725:47">(<argument pos:start="725:24" pos:end="725:27"><expr pos:start="725:24" pos:end="725:27"><name pos:start="725:24" pos:end="725:27">NULL</name></expr></argument>, <argument pos:start="725:30" pos:end="725:40"><expr pos:start="725:30" pos:end="725:40"><name pos:start="725:30" pos:end="725:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="725:43" pos:end="725:46"><expr pos:start="725:43" pos:end="725:46"><literal type="string" pos:start="725:43" pos:end="725:46">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <for pos:start="735:5" pos:end="815:5">for <control pos:start="735:9" pos:end="735:43">(<init pos:start="735:10" pos:end="735:15"><expr pos:start="735:10" pos:end="735:14"><name pos:start="735:10" pos:end="735:10">i</name> <operator pos:start="735:12" pos:end="735:12">=</operator> <literal type="number" pos:start="735:14" pos:end="735:14">0</literal></expr>;</init> <condition pos:start="735:17" pos:end="735:38"><expr pos:start="735:17" pos:end="735:37"><name pos:start="735:17" pos:end="735:17">i</name> <operator pos:start="735:19" pos:end="735:19">&lt;</operator> <name pos:start="735:21" pos:end="735:37">nb_output_streams</name></expr>;</condition> <incr pos:start="735:40" pos:end="735:42"><expr pos:start="735:40" pos:end="735:42"><name pos:start="735:40" pos:end="735:40">i</name><operator pos:start="735:41" pos:end="735:42">++</operator></expr></incr>)</control> <block pos:start="735:45" pos:end="815:5">{<block_content pos:start="737:9" pos:end="813:40">

        <expr_stmt pos:start="737:9" pos:end="737:32"><expr pos:start="737:9" pos:end="737:31"><name pos:start="737:9" pos:end="737:11">ost</name> <operator pos:start="737:13" pos:end="737:13">=</operator> <name pos:start="737:15" pos:end="737:31"><name pos:start="737:15" pos:end="737:28">output_streams</name><index pos:start="737:29" pos:end="737:31">[<expr pos:start="737:30" pos:end="737:30"><name pos:start="737:30" pos:end="737:30">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="741:9" pos:end="751:9"><if pos:start="741:9" pos:end="751:9">if <condition pos:start="741:12" pos:end="741:37">(<expr pos:start="741:13" pos:end="741:36"><name pos:start="741:13" pos:end="741:36"><name pos:start="741:13" pos:end="741:15">ost</name><operator pos:start="741:16" pos:end="741:17">-&gt;</operator><name pos:start="741:18" pos:end="741:36">attachment_filename</name></name></expr>)</condition> <block pos:start="741:39" pos:end="751:9">{<block_content pos:start="745:13" pos:end="749:21">

            <comment type="block" pos:start="743:13" pos:end="743:34">/* an attached file */</comment>

            <expr_stmt pos:start="745:13" pos:end="747:74"><expr pos:start="745:13" pos:end="747:73"><call pos:start="745:13" pos:end="747:73"><name pos:start="745:13" pos:end="745:18">av_log</name><argument_list pos:start="745:19" pos:end="747:73">(<argument pos:start="745:20" pos:end="745:23"><expr pos:start="745:20" pos:end="745:23"><name pos:start="745:20" pos:end="745:23">NULL</name></expr></argument>, <argument pos:start="745:26" pos:end="745:36"><expr pos:start="745:26" pos:end="745:36"><name pos:start="745:26" pos:end="745:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="745:39" pos:end="745:68"><expr pos:start="745:39" pos:end="745:68"><literal type="string" pos:start="745:39" pos:end="745:68">"  File %s -&gt; Stream #%d:%d\n"</literal></expr></argument>,

                   <argument pos:start="747:20" pos:end="747:43"><expr pos:start="747:20" pos:end="747:43"><name pos:start="747:20" pos:end="747:43"><name pos:start="747:20" pos:end="747:22">ost</name><operator pos:start="747:23" pos:end="747:24">-&gt;</operator><name pos:start="747:25" pos:end="747:43">attachment_filename</name></name></expr></argument>, <argument pos:start="747:46" pos:end="747:60"><expr pos:start="747:46" pos:end="747:60"><name pos:start="747:46" pos:end="747:60"><name pos:start="747:46" pos:end="747:48">ost</name><operator pos:start="747:49" pos:end="747:50">-&gt;</operator><name pos:start="747:51" pos:end="747:60">file_index</name></name></expr></argument>, <argument pos:start="747:63" pos:end="747:72"><expr pos:start="747:63" pos:end="747:72"><name pos:start="747:63" pos:end="747:72"><name pos:start="747:63" pos:end="747:65">ost</name><operator pos:start="747:66" pos:end="747:67">-&gt;</operator><name pos:start="747:68" pos:end="747:72">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="749:13" pos:end="749:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="755:9" pos:end="779:9"><if pos:start="755:9" pos:end="779:9">if <condition pos:start="755:12" pos:end="755:58">(<expr pos:start="755:13" pos:end="755:57"><name pos:start="755:13" pos:end="755:23"><name pos:start="755:13" pos:end="755:15">ost</name><operator pos:start="755:16" pos:end="755:17">-&gt;</operator><name pos:start="755:18" pos:end="755:23">filter</name></name> <operator pos:start="755:25" pos:end="755:26">&amp;&amp;</operator> <name pos:start="755:28" pos:end="755:57"><name pos:start="755:28" pos:end="755:30">ost</name><operator pos:start="755:31" pos:end="755:32">-&gt;</operator><name pos:start="755:33" pos:end="755:38">filter</name><operator pos:start="755:39" pos:end="755:40">-&gt;</operator><name pos:start="755:41" pos:end="755:45">graph</name><operator pos:start="755:46" pos:end="755:47">-&gt;</operator><name pos:start="755:48" pos:end="755:57">graph_desc</name></name></expr>)</condition> <block pos:start="755:60" pos:end="779:9">{<block_content pos:start="759:13" pos:end="777:21">

            <comment type="block" pos:start="757:13" pos:end="757:45">/* output from a complex graph */</comment>

            <decl_stmt pos:start="759:13" pos:end="759:64"><decl pos:start="759:13" pos:end="759:63"><type pos:start="759:13" pos:end="759:26"><name pos:start="759:13" pos:end="759:24">AVFilterLink</name> <modifier pos:start="759:26" pos:end="759:26">*</modifier></type><name pos:start="759:27" pos:end="759:30">link</name> <init pos:start="759:32" pos:end="759:63">= <expr pos:start="759:34" pos:end="759:63"><name pos:start="759:34" pos:end="759:63"><name pos:start="759:34" pos:end="759:36">ost</name><operator pos:start="759:37" pos:end="759:38">-&gt;</operator><name pos:start="759:39" pos:end="759:44">filter</name><operator pos:start="759:45" pos:end="759:46">-&gt;</operator><name pos:start="759:47" pos:end="759:52">filter</name><operator pos:start="759:53" pos:end="759:54">-&gt;</operator><name pos:start="759:55" pos:end="759:60">inputs</name><index pos:start="759:61" pos:end="759:63">[<expr pos:start="759:62" pos:end="759:62"><literal type="number" pos:start="759:62" pos:end="759:62">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="761:13" pos:end="761:71"><expr pos:start="761:13" pos:end="761:70"><call pos:start="761:13" pos:end="761:70"><name pos:start="761:13" pos:end="761:18">av_log</name><argument_list pos:start="761:19" pos:end="761:70">(<argument pos:start="761:20" pos:end="761:23"><expr pos:start="761:20" pos:end="761:23"><name pos:start="761:20" pos:end="761:23">NULL</name></expr></argument>, <argument pos:start="761:26" pos:end="761:36"><expr pos:start="761:26" pos:end="761:36"><name pos:start="761:26" pos:end="761:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="761:39" pos:end="761:44"><expr pos:start="761:39" pos:end="761:44"><literal type="string" pos:start="761:39" pos:end="761:44">"  %s"</literal></expr></argument>, <argument pos:start="761:47" pos:end="761:69"><expr pos:start="761:47" pos:end="761:69"><name pos:start="761:47" pos:end="761:69"><name pos:start="761:47" pos:end="761:50">link</name><operator pos:start="761:51" pos:end="761:52">-&gt;</operator><name pos:start="761:53" pos:end="761:55">src</name><operator pos:start="761:56" pos:end="761:57">-&gt;</operator><name pos:start="761:58" pos:end="761:63">filter</name><operator pos:start="761:64" pos:end="761:65">-&gt;</operator><name pos:start="761:66" pos:end="761:69">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="763:13" pos:end="765:69"><if pos:start="763:13" pos:end="765:69">if <condition pos:start="763:16" pos:end="763:44">(<expr pos:start="763:17" pos:end="763:43"><name pos:start="763:17" pos:end="763:39"><name pos:start="763:17" pos:end="763:20">link</name><operator pos:start="763:21" pos:end="763:22">-&gt;</operator><name pos:start="763:23" pos:end="763:25">src</name><operator pos:start="763:26" pos:end="763:27">-&gt;</operator><name pos:start="763:28" pos:end="763:39">output_count</name></name> <operator pos:start="763:41" pos:end="763:41">&gt;</operator> <literal type="number" pos:start="763:43" pos:end="763:43">1</literal></expr>)</condition><block type="pseudo" pos:start="765:17" pos:end="765:69"><block_content pos:start="765:17" pos:end="765:69">

                <expr_stmt pos:start="765:17" pos:end="765:69"><expr pos:start="765:17" pos:end="765:68"><call pos:start="765:17" pos:end="765:68"><name pos:start="765:17" pos:end="765:22">av_log</name><argument_list pos:start="765:23" pos:end="765:68">(<argument pos:start="765:24" pos:end="765:27"><expr pos:start="765:24" pos:end="765:27"><name pos:start="765:24" pos:end="765:27">NULL</name></expr></argument>, <argument pos:start="765:30" pos:end="765:40"><expr pos:start="765:30" pos:end="765:40"><name pos:start="765:30" pos:end="765:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="765:43" pos:end="765:47"><expr pos:start="765:43" pos:end="765:47"><literal type="string" pos:start="765:43" pos:end="765:47">":%s"</literal></expr></argument>, <argument pos:start="765:50" pos:end="765:67"><expr pos:start="765:50" pos:end="765:67"><name pos:start="765:50" pos:end="765:67"><name pos:start="765:50" pos:end="765:53">link</name><operator pos:start="765:54" pos:end="765:55">-&gt;</operator><name pos:start="765:56" pos:end="765:61">srcpad</name><operator pos:start="765:62" pos:end="765:63">-&gt;</operator><name pos:start="765:64" pos:end="765:67">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="767:13" pos:end="769:84"><if pos:start="767:13" pos:end="769:84">if <condition pos:start="767:16" pos:end="767:36">(<expr pos:start="767:17" pos:end="767:35"><name pos:start="767:17" pos:end="767:31">nb_filtergraphs</name> <operator pos:start="767:33" pos:end="767:33">&gt;</operator> <literal type="number" pos:start="767:35" pos:end="767:35">1</literal></expr>)</condition><block type="pseudo" pos:start="769:17" pos:end="769:84"><block_content pos:start="769:17" pos:end="769:84">

                <expr_stmt pos:start="769:17" pos:end="769:84"><expr pos:start="769:17" pos:end="769:83"><call pos:start="769:17" pos:end="769:83"><name pos:start="769:17" pos:end="769:22">av_log</name><argument_list pos:start="769:23" pos:end="769:83">(<argument pos:start="769:24" pos:end="769:27"><expr pos:start="769:24" pos:end="769:27"><name pos:start="769:24" pos:end="769:27">NULL</name></expr></argument>, <argument pos:start="769:30" pos:end="769:40"><expr pos:start="769:30" pos:end="769:40"><name pos:start="769:30" pos:end="769:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="769:43" pos:end="769:55"><expr pos:start="769:43" pos:end="769:55"><literal type="string" pos:start="769:43" pos:end="769:55">" (graph %d)"</literal></expr></argument>, <argument pos:start="769:58" pos:end="769:82"><expr pos:start="769:58" pos:end="769:82"><name pos:start="769:58" pos:end="769:82"><name pos:start="769:58" pos:end="769:60">ost</name><operator pos:start="769:61" pos:end="769:62">-&gt;</operator><name pos:start="769:63" pos:end="769:68">filter</name><operator pos:start="769:69" pos:end="769:70">-&gt;</operator><name pos:start="769:71" pos:end="769:75">graph</name><operator pos:start="769:76" pos:end="769:77">-&gt;</operator><name pos:start="769:78" pos:end="769:82">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="773:13" pos:end="775:64"><expr pos:start="773:13" pos:end="775:63"><call pos:start="773:13" pos:end="775:63"><name pos:start="773:13" pos:end="773:18">av_log</name><argument_list pos:start="773:19" pos:end="775:63">(<argument pos:start="773:20" pos:end="773:23"><expr pos:start="773:20" pos:end="773:23"><name pos:start="773:20" pos:end="773:23">NULL</name></expr></argument>, <argument pos:start="773:26" pos:end="773:36"><expr pos:start="773:26" pos:end="773:36"><name pos:start="773:26" pos:end="773:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="773:39" pos:end="773:64"><expr pos:start="773:39" pos:end="773:64"><literal type="string" pos:start="773:39" pos:end="773:64">" -&gt; Stream #%d:%d (%s)\n"</literal></expr></argument>, <argument pos:start="773:67" pos:end="773:81"><expr pos:start="773:67" pos:end="773:81"><name pos:start="773:67" pos:end="773:81"><name pos:start="773:67" pos:end="773:69">ost</name><operator pos:start="773:70" pos:end="773:71">-&gt;</operator><name pos:start="773:72" pos:end="773:81">file_index</name></name></expr></argument>,

                   <argument pos:start="775:20" pos:end="775:29"><expr pos:start="775:20" pos:end="775:29"><name pos:start="775:20" pos:end="775:29"><name pos:start="775:20" pos:end="775:22">ost</name><operator pos:start="775:23" pos:end="775:24">-&gt;</operator><name pos:start="775:25" pos:end="775:29">index</name></name></expr></argument>, <argument pos:start="775:32" pos:end="775:62"><expr pos:start="775:32" pos:end="775:62"><ternary pos:start="775:32" pos:end="775:62"><condition pos:start="775:32" pos:end="775:41"><expr pos:start="775:32" pos:end="775:39"><name pos:start="775:32" pos:end="775:39"><name pos:start="775:32" pos:end="775:34">ost</name><operator pos:start="775:35" pos:end="775:36">-&gt;</operator><name pos:start="775:37" pos:end="775:39">enc</name></name></expr> ?</condition><then pos:start="775:43" pos:end="775:56"> <expr pos:start="775:43" pos:end="775:56"><name pos:start="775:43" pos:end="775:56"><name pos:start="775:43" pos:end="775:45">ost</name><operator pos:start="775:46" pos:end="775:47">-&gt;</operator><name pos:start="775:48" pos:end="775:50">enc</name><operator pos:start="775:51" pos:end="775:52">-&gt;</operator><name pos:start="775:53" pos:end="775:56">name</name></name></expr> </then><else pos:start="775:58" pos:end="775:62">: <expr pos:start="775:60" pos:end="775:62"><literal type="string" pos:start="775:60" pos:end="775:62">"?"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="777:13" pos:end="777:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="783:9" pos:end="791:27"><expr pos:start="783:9" pos:end="791:26"><call pos:start="783:9" pos:end="791:26"><name pos:start="783:9" pos:end="783:14">av_log</name><argument_list pos:start="783:15" pos:end="791:26">(<argument pos:start="783:16" pos:end="783:19"><expr pos:start="783:16" pos:end="783:19"><name pos:start="783:16" pos:end="783:19">NULL</name></expr></argument>, <argument pos:start="783:22" pos:end="783:32"><expr pos:start="783:22" pos:end="783:32"><name pos:start="783:22" pos:end="783:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="783:35" pos:end="783:61"><expr pos:start="783:35" pos:end="783:61"><literal type="string" pos:start="783:35" pos:end="783:61">"  Stream #%d:%d -&gt; #%d:%d"</literal></expr></argument>,

               <argument pos:start="785:16" pos:end="785:59"><expr pos:start="785:16" pos:end="785:59"><name pos:start="785:16" pos:end="785:47"><name pos:start="785:16" pos:end="785:28">input_streams</name><index pos:start="785:29" pos:end="785:47">[<expr pos:start="785:30" pos:end="785:46"><name pos:start="785:30" pos:end="785:46"><name pos:start="785:30" pos:end="785:32">ost</name><operator pos:start="785:33" pos:end="785:34">-&gt;</operator><name pos:start="785:35" pos:end="785:46">source_index</name></name></expr>]</index></name><operator pos:start="785:48" pos:end="785:49">-&gt;</operator><name pos:start="785:50" pos:end="785:59">file_index</name></expr></argument>,

               <argument pos:start="787:16" pos:end="787:58"><expr pos:start="787:16" pos:end="787:58"><name pos:start="787:16" pos:end="787:47"><name pos:start="787:16" pos:end="787:28">input_streams</name><index pos:start="787:29" pos:end="787:47">[<expr pos:start="787:30" pos:end="787:46"><name pos:start="787:30" pos:end="787:46"><name pos:start="787:30" pos:end="787:32">ost</name><operator pos:start="787:33" pos:end="787:34">-&gt;</operator><name pos:start="787:35" pos:end="787:46">source_index</name></name></expr>]</index></name><operator pos:start="787:48" pos:end="787:49">-&gt;</operator><name pos:start="787:50" pos:end="787:58"><name pos:start="787:50" pos:end="787:51">st</name><operator pos:start="787:52" pos:end="787:53">-&gt;</operator><name pos:start="787:54" pos:end="787:58">index</name></name></expr></argument>,

               <argument pos:start="789:16" pos:end="789:30"><expr pos:start="789:16" pos:end="789:30"><name pos:start="789:16" pos:end="789:30"><name pos:start="789:16" pos:end="789:18">ost</name><operator pos:start="789:19" pos:end="789:20">-&gt;</operator><name pos:start="789:21" pos:end="789:30">file_index</name></name></expr></argument>,

               <argument pos:start="791:16" pos:end="791:25"><expr pos:start="791:16" pos:end="791:25"><name pos:start="791:16" pos:end="791:25"><name pos:start="791:16" pos:end="791:18">ost</name><operator pos:start="791:19" pos:end="791:20">-&gt;</operator><name pos:start="791:21" pos:end="791:25">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="793:9" pos:end="799:45"><if pos:start="793:9" pos:end="799:45">if <condition pos:start="793:12" pos:end="793:62">(<expr pos:start="793:13" pos:end="793:61"><name pos:start="793:13" pos:end="793:25"><name pos:start="793:13" pos:end="793:15">ost</name><operator pos:start="793:16" pos:end="793:17">-&gt;</operator><name pos:start="793:18" pos:end="793:25">sync_ist</name></name> <operator pos:start="793:27" pos:end="793:28">!=</operator> <name pos:start="793:30" pos:end="793:61"><name pos:start="793:30" pos:end="793:42">input_streams</name><index pos:start="793:43" pos:end="793:61">[<expr pos:start="793:44" pos:end="793:60"><name pos:start="793:44" pos:end="793:60"><name pos:start="793:44" pos:end="793:46">ost</name><operator pos:start="793:47" pos:end="793:48">-&gt;</operator><name pos:start="793:49" pos:end="793:60">source_index</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="795:13" pos:end="799:45"><block_content pos:start="795:13" pos:end="799:45">

            <expr_stmt pos:start="795:13" pos:end="799:45"><expr pos:start="795:13" pos:end="799:44"><call pos:start="795:13" pos:end="799:44"><name pos:start="795:13" pos:end="795:18">av_log</name><argument_list pos:start="795:19" pos:end="799:44">(<argument pos:start="795:20" pos:end="795:23"><expr pos:start="795:20" pos:end="795:23"><name pos:start="795:20" pos:end="795:23">NULL</name></expr></argument>, <argument pos:start="795:26" pos:end="795:36"><expr pos:start="795:26" pos:end="795:36"><name pos:start="795:26" pos:end="795:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="795:39" pos:end="795:54"><expr pos:start="795:39" pos:end="795:54"><literal type="string" pos:start="795:39" pos:end="795:54">" [sync #%d:%d]"</literal></expr></argument>,

                   <argument pos:start="797:20" pos:end="797:44"><expr pos:start="797:20" pos:end="797:44"><name pos:start="797:20" pos:end="797:44"><name pos:start="797:20" pos:end="797:22">ost</name><operator pos:start="797:23" pos:end="797:24">-&gt;</operator><name pos:start="797:25" pos:end="797:32">sync_ist</name><operator pos:start="797:33" pos:end="797:34">-&gt;</operator><name pos:start="797:35" pos:end="797:44">file_index</name></name></expr></argument>,

                   <argument pos:start="799:20" pos:end="799:43"><expr pos:start="799:20" pos:end="799:43"><name pos:start="799:20" pos:end="799:43"><name pos:start="799:20" pos:end="799:22">ost</name><operator pos:start="799:23" pos:end="799:24">-&gt;</operator><name pos:start="799:25" pos:end="799:32">sync_ist</name><operator pos:start="799:33" pos:end="799:34">-&gt;</operator><name pos:start="799:35" pos:end="799:36">st</name><operator pos:start="799:37" pos:end="799:38">-&gt;</operator><name pos:start="799:39" pos:end="799:43">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="801:9" pos:end="811:52"><if pos:start="801:9" pos:end="803:49">if <condition pos:start="801:12" pos:end="801:29">(<expr pos:start="801:13" pos:end="801:28"><name pos:start="801:13" pos:end="801:28"><name pos:start="801:13" pos:end="801:15">ost</name><operator pos:start="801:16" pos:end="801:17">-&gt;</operator><name pos:start="801:18" pos:end="801:28">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="803:13" pos:end="803:49"><block_content pos:start="803:13" pos:end="803:49">

            <expr_stmt pos:start="803:13" pos:end="803:49"><expr pos:start="803:13" pos:end="803:48"><call pos:start="803:13" pos:end="803:48"><name pos:start="803:13" pos:end="803:18">av_log</name><argument_list pos:start="803:19" pos:end="803:48">(<argument pos:start="803:20" pos:end="803:23"><expr pos:start="803:20" pos:end="803:23"><name pos:start="803:20" pos:end="803:23">NULL</name></expr></argument>, <argument pos:start="803:26" pos:end="803:36"><expr pos:start="803:26" pos:end="803:36"><name pos:start="803:26" pos:end="803:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="803:39" pos:end="803:47"><expr pos:start="803:39" pos:end="803:47"><literal type="string" pos:start="803:39" pos:end="803:47">" (copy)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="805:9" pos:end="811:52">else<block type="pseudo" pos:start="807:13" pos:end="811:52"><block_content pos:start="807:13" pos:end="811:52">

            <expr_stmt pos:start="807:13" pos:end="811:52"><expr pos:start="807:13" pos:end="811:51"><call pos:start="807:13" pos:end="811:51"><name pos:start="807:13" pos:end="807:18">av_log</name><argument_list pos:start="807:19" pos:end="811:51">(<argument pos:start="807:20" pos:end="807:23"><expr pos:start="807:20" pos:end="807:23"><name pos:start="807:20" pos:end="807:23">NULL</name></expr></argument>, <argument pos:start="807:26" pos:end="807:36"><expr pos:start="807:26" pos:end="807:36"><name pos:start="807:26" pos:end="807:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="807:39" pos:end="807:51"><expr pos:start="807:39" pos:end="807:51"><literal type="string" pos:start="807:39" pos:end="807:51">" (%s -&gt; %s)"</literal></expr></argument>, <argument pos:start="807:54" pos:end="809:68"><expr pos:start="807:54" pos:end="809:68"><ternary pos:start="807:54" pos:end="809:68"><condition pos:start="807:54" pos:end="807:92"><expr pos:start="807:54" pos:end="807:90"><name pos:start="807:54" pos:end="807:85"><name pos:start="807:54" pos:end="807:66">input_streams</name><index pos:start="807:67" pos:end="807:85">[<expr pos:start="807:68" pos:end="807:84"><name pos:start="807:68" pos:end="807:84"><name pos:start="807:68" pos:end="807:70">ost</name><operator pos:start="807:71" pos:end="807:72">-&gt;</operator><name pos:start="807:73" pos:end="807:84">source_index</name></name></expr>]</index></name><operator pos:start="807:86" pos:end="807:87">-&gt;</operator><name pos:start="807:88" pos:end="807:90">dec</name></expr> ?</condition><then pos:start="809:20" pos:end="809:62">

                   <expr pos:start="809:20" pos:end="809:62"><name pos:start="809:20" pos:end="809:51"><name pos:start="809:20" pos:end="809:32">input_streams</name><index pos:start="809:33" pos:end="809:51">[<expr pos:start="809:34" pos:end="809:50"><name pos:start="809:34" pos:end="809:50"><name pos:start="809:34" pos:end="809:36">ost</name><operator pos:start="809:37" pos:end="809:38">-&gt;</operator><name pos:start="809:39" pos:end="809:50">source_index</name></name></expr>]</index></name><operator pos:start="809:52" pos:end="809:53">-&gt;</operator><name pos:start="809:54" pos:end="809:62"><name pos:start="809:54" pos:end="809:56">dec</name><operator pos:start="809:57" pos:end="809:58">-&gt;</operator><name pos:start="809:59" pos:end="809:62">name</name></name></expr> </then><else pos:start="809:64" pos:end="809:68">: <expr pos:start="809:66" pos:end="809:68"><literal type="string" pos:start="809:66" pos:end="809:68">"?"</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="811:20" pos:end="811:50"><expr pos:start="811:20" pos:end="811:50"><ternary pos:start="811:20" pos:end="811:50"><condition pos:start="811:20" pos:end="811:29"><expr pos:start="811:20" pos:end="811:27"><name pos:start="811:20" pos:end="811:27"><name pos:start="811:20" pos:end="811:22">ost</name><operator pos:start="811:23" pos:end="811:24">-&gt;</operator><name pos:start="811:25" pos:end="811:27">enc</name></name></expr> ?</condition><then pos:start="811:31" pos:end="811:44"> <expr pos:start="811:31" pos:end="811:44"><name pos:start="811:31" pos:end="811:44"><name pos:start="811:31" pos:end="811:33">ost</name><operator pos:start="811:34" pos:end="811:35">-&gt;</operator><name pos:start="811:36" pos:end="811:38">enc</name><operator pos:start="811:39" pos:end="811:40">-&gt;</operator><name pos:start="811:41" pos:end="811:44">name</name></name></expr> </then><else pos:start="811:46" pos:end="811:50">: <expr pos:start="811:48" pos:end="811:50"><literal type="string" pos:start="811:48" pos:end="811:50">"?"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="813:9" pos:end="813:40"><expr pos:start="813:9" pos:end="813:39"><call pos:start="813:9" pos:end="813:39"><name pos:start="813:9" pos:end="813:14">av_log</name><argument_list pos:start="813:15" pos:end="813:39">(<argument pos:start="813:16" pos:end="813:19"><expr pos:start="813:16" pos:end="813:19"><name pos:start="813:16" pos:end="813:19">NULL</name></expr></argument>, <argument pos:start="813:22" pos:end="813:32"><expr pos:start="813:22" pos:end="813:32"><name pos:start="813:22" pos:end="813:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="813:35" pos:end="813:38"><expr pos:start="813:35" pos:end="813:38"><literal type="string" pos:start="813:35" pos:end="813:38">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="819:5" pos:end="825:5"><if pos:start="819:5" pos:end="825:5">if <condition pos:start="819:8" pos:end="819:12">(<expr pos:start="819:9" pos:end="819:11"><name pos:start="819:9" pos:end="819:11">ret</name></expr>)</condition> <block pos:start="819:14" pos:end="825:5">{<block_content pos:start="821:9" pos:end="823:19">

        <expr_stmt pos:start="821:9" pos:end="821:50"><expr pos:start="821:9" pos:end="821:49"><call pos:start="821:9" pos:end="821:49"><name pos:start="821:9" pos:end="821:14">av_log</name><argument_list pos:start="821:15" pos:end="821:49">(<argument pos:start="821:16" pos:end="821:19"><expr pos:start="821:16" pos:end="821:19"><name pos:start="821:16" pos:end="821:19">NULL</name></expr></argument>, <argument pos:start="821:22" pos:end="821:33"><expr pos:start="821:22" pos:end="821:33"><name pos:start="821:22" pos:end="821:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="821:36" pos:end="821:41"><expr pos:start="821:36" pos:end="821:41"><literal type="string" pos:start="821:36" pos:end="821:41">"%s\n"</literal></expr></argument>, <argument pos:start="821:44" pos:end="821:48"><expr pos:start="821:44" pos:end="821:48"><name pos:start="821:44" pos:end="821:48">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="823:9" pos:end="823:19">return <expr pos:start="823:16" pos:end="823:18"><name pos:start="823:16" pos:end="823:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="829:5" pos:end="833:5"><if pos:start="829:5" pos:end="833:5">if <condition pos:start="829:8" pos:end="829:17">(<expr pos:start="829:9" pos:end="829:16"><name pos:start="829:9" pos:end="829:16">want_sdp</name></expr>)</condition> <block pos:start="829:19" pos:end="833:5">{<block_content pos:start="831:9" pos:end="831:20">

        <expr_stmt pos:start="831:9" pos:end="831:20"><expr pos:start="831:9" pos:end="831:19"><call pos:start="831:9" pos:end="831:19"><name pos:start="831:9" pos:end="831:17">print_sdp</name><argument_list pos:start="831:18" pos:end="831:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="837:5" pos:end="837:13">return <expr pos:start="837:12" pos:end="837:12"><literal type="number" pos:start="837:12" pos:end="837:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
