<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12907.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">print_report</name><parameter_list pos:start="1:25" pos:end="5:44">(<parameter pos:start="1:26" pos:end="1:55"><decl pos:start="1:26" pos:end="1:55"><type pos:start="1:26" pos:end="1:55"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier><modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:55">output_files</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:51"><decl pos:start="3:26" pos:end="3:51"><type pos:start="3:26" pos:end="3:51"><name pos:start="3:26" pos:end="3:39">AVOutputStream</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier><modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:51">ost_table</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:68"><decl pos:start="3:54" pos:end="3:68"><type pos:start="3:54" pos:end="3:68"><name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:68">nb_ostreams</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:43"><decl pos:start="5:26" pos:end="5:43"><type pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:28">int</name></type> <name pos:start="5:30" pos:end="5:43">is_last_report</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="241:1">{<block_content pos:start="9:5" pos:end="239:5">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:12">buf</name><index pos:start="9:13" pos:end="9:18">[<expr pos:start="9:14" pos:end="9:17"><literal type="number" pos:start="9:14" pos:end="9:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVOutputStream</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">AVFormatContext</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:23">oc</name></decl>, <decl pos:start="13:26" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:21"><modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:28">os</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:22">total_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">AVCodecContext</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:20">frame_number</name></decl>, <decl pos:start="19:23" pos:end="19:25"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:23" pos:end="19:25">vid</name></decl>, <decl pos:start="19:28" pos:end="19:28"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:28" pos:end="19:28">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">double</name></type> <name pos:start="21:12" pos:end="21:18">bitrate</name></decl>, <decl pos:start="21:21" pos:end="21:23"><type ref="prev" pos:start="21:5" pos:end="21:10"/><name pos:start="21:21" pos:end="21:23">ti1</name></decl>, <decl pos:start="21:26" pos:end="21:28"><type ref="prev" pos:start="21:5" pos:end="21:10"/><name pos:start="21:26" pos:end="21:28">pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:34"><decl pos:start="23:5" pos:end="23:33"><type pos:start="23:5" pos:end="23:18"><specifier pos:start="23:5" pos:end="23:10">static</specifier> <name pos:start="23:12" pos:end="23:18">int64_t</name></type> <name pos:start="23:20" pos:end="23:28">last_time</name> <init pos:start="23:30" pos:end="23:33">= <expr pos:start="23:32" pos:end="23:33"><operator pos:start="23:32" pos:end="23:32">-</operator><literal type="number" pos:start="23:33" pos:end="23:33">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:32"><decl pos:start="25:5" pos:end="25:31"><type pos:start="25:5" pos:end="25:14"><specifier pos:start="25:5" pos:end="25:10">static</specifier> <name pos:start="25:12" pos:end="25:14">int</name></type> <name pos:start="25:16" pos:end="25:31"><name pos:start="25:16" pos:end="25:27">qp_histogram</name><index pos:start="25:28" pos:end="25:31">[<expr pos:start="25:29" pos:end="25:30"><literal type="number" pos:start="25:29" pos:end="25:30">52</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="51:5"><if pos:start="29:5" pos:end="51:5">if <condition pos:start="29:8" pos:end="29:24">(<expr pos:start="29:9" pos:end="29:23"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:23">is_last_report</name></expr>)</condition> <block pos:start="29:26" pos:end="51:5">{<block_content pos:start="31:9" pos:end="49:29">

        <decl_stmt pos:start="31:9" pos:end="31:25"><decl pos:start="31:9" pos:end="31:24"><type pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:15">int64_t</name></type> <name pos:start="31:17" pos:end="31:24">cur_time</name></decl>;</decl_stmt>

        <comment type="block" pos:start="33:9" pos:end="33:50">/* display the report every 0.5 seconds */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:32"><expr pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:16">cur_time</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:31"><name pos:start="35:20" pos:end="35:29">av_gettime</name><argument_list pos:start="35:30" pos:end="35:31">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:28">(<expr pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:21">last_time</name> <operator pos:start="37:23" pos:end="37:24">==</operator> <operator pos:start="37:26" pos:end="37:26">-</operator><literal type="number" pos:start="37:27" pos:end="37:27">1</literal></expr>)</condition> <block pos:start="37:30" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:19">

            <expr_stmt pos:start="39:13" pos:end="39:33"><expr pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:21">last_time</name> <operator pos:start="39:23" pos:end="39:23">=</operator> <name pos:start="39:25" pos:end="39:32">cur_time</name></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="47:19"><if pos:start="45:9" pos:end="47:19">if <condition pos:start="45:12" pos:end="45:44">(<expr pos:start="45:13" pos:end="45:43"><operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:21">cur_time</name> <operator pos:start="45:23" pos:end="45:23">-</operator> <name pos:start="45:25" pos:end="45:33">last_time</name><operator pos:start="45:34" pos:end="45:34">)</operator> <operator pos:start="45:36" pos:end="45:36">&lt;</operator> <literal type="number" pos:start="45:38" pos:end="45:43">500000</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:19"><block_content pos:start="47:13" pos:end="47:19">

            <return pos:start="47:13" pos:end="47:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:17">last_time</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:28">cur_time</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





    <expr_stmt pos:start="57:5" pos:end="57:25"><expr pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:6">oc</name> <operator pos:start="57:8" pos:end="57:8">=</operator> <name pos:start="57:10" pos:end="57:24"><name pos:start="57:10" pos:end="57:21">output_files</name><index pos:start="57:22" pos:end="57:24">[<expr pos:start="57:23" pos:end="57:23"><literal type="number" pos:start="57:23" pos:end="57:23">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:35"><expr pos:start="61:5" pos:end="61:34"><name pos:start="61:5" pos:end="61:14">total_size</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:34"><name pos:start="61:18" pos:end="61:26">url_fsize</name><argument_list pos:start="61:27" pos:end="61:34">(<argument pos:start="61:28" pos:end="61:33"><expr pos:start="61:28" pos:end="61:33"><name pos:start="61:28" pos:end="61:33"><name pos:start="61:28" pos:end="61:29">oc</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="65:38"><if pos:start="63:5" pos:end="65:38">if<condition pos:start="63:7" pos:end="63:20">(<expr pos:start="63:8" pos:end="63:19"><name pos:start="63:8" pos:end="63:17">total_size</name><operator pos:start="63:18" pos:end="63:18">&lt;</operator><literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:38"><block_content pos:start="65:9" pos:end="65:38"> <comment type="line" pos:start="63:22" pos:end="63:90">// FIXME improve url_fsize() so it works with non seekable output too</comment>

        <expr_stmt pos:start="65:9" pos:end="65:38"><expr pos:start="65:9" pos:end="65:37"><name pos:start="65:9" pos:end="65:18">total_size</name><operator pos:start="65:19" pos:end="65:19">=</operator> <call pos:start="65:21" pos:end="65:37"><name pos:start="65:21" pos:end="65:29">url_ftell</name><argument_list pos:start="65:30" pos:end="65:37">(<argument pos:start="65:31" pos:end="65:36"><expr pos:start="65:31" pos:end="65:36"><name pos:start="65:31" pos:end="65:36"><name pos:start="65:31" pos:end="65:32">oc</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:36">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:18"><expr pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:10"><name pos:start="69:5" pos:end="69:7">buf</name><index pos:start="69:8" pos:end="69:10">[<expr pos:start="69:9" pos:end="69:9"><literal type="number" pos:start="69:9" pos:end="69:9">0</literal></expr>]</index></name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="char" pos:start="69:14" pos:end="69:17">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:15"><expr pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:7">ti1</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <literal type="number" pos:start="71:11" pos:end="71:14">1e10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:12"><expr pos:start="73:5" pos:end="73:11"><name pos:start="73:5" pos:end="73:7">vid</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <literal type="number" pos:start="73:11" pos:end="73:11">0</literal></expr>;</expr_stmt>

    <for pos:start="75:5" pos:end="179:5">for<control pos:start="75:8" pos:end="75:30">(<init pos:start="75:9" pos:end="75:12"><expr pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:9">i</name><operator pos:start="75:10" pos:end="75:10">=</operator><literal type="number" pos:start="75:11" pos:end="75:11">0</literal></expr>;</init><condition pos:start="75:13" pos:end="75:26"><expr pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:13">i</name><operator pos:start="75:14" pos:end="75:14">&lt;</operator><name pos:start="75:15" pos:end="75:25">nb_ostreams</name></expr>;</condition><incr pos:start="75:27" pos:end="75:29"><expr pos:start="75:27" pos:end="75:29"><name pos:start="75:27" pos:end="75:27">i</name><operator pos:start="75:28" pos:end="75:29">++</operator></expr></incr>)</control> <block pos:start="75:32" pos:end="179:5">{<block_content pos:start="77:9" pos:end="177:22">

        <expr_stmt pos:start="77:9" pos:end="77:27"><expr pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:11">ost</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:26"><name pos:start="77:15" pos:end="77:23">ost_table</name><index pos:start="77:24" pos:end="77:26">[<expr pos:start="77:25" pos:end="77:25"><name pos:start="77:25" pos:end="77:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:43"><expr pos:start="79:9" pos:end="79:42"><name pos:start="79:9" pos:end="79:10">os</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <name pos:start="79:14" pos:end="79:42"><name pos:start="79:14" pos:end="79:25">output_files</name><index pos:start="79:26" pos:end="79:42">[<expr pos:start="79:27" pos:end="79:41"><name pos:start="79:27" pos:end="79:41"><name pos:start="79:27" pos:end="79:29">ost</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:41">file_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:29"><expr pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:11">enc</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <name pos:start="81:15" pos:end="81:28"><name pos:start="81:15" pos:end="81:17">ost</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:21">st</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:28">codec</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="89:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:55">(<expr pos:start="83:13" pos:end="83:54"><name pos:start="83:13" pos:end="83:15">vid</name> <operator pos:start="83:17" pos:end="83:18">&amp;&amp;</operator> <name pos:start="83:20" pos:end="83:34"><name pos:start="83:20" pos:end="83:22">enc</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:34">codec_type</name></name> <operator pos:start="83:36" pos:end="83:37">==</operator> <name pos:start="83:39" pos:end="83:54">CODEC_TYPE_VIDEO</name></expr>)</condition> <block pos:start="83:57" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:67">

            <expr_stmt pos:start="85:13" pos:end="87:67"><expr pos:start="85:13" pos:end="87:66"><call pos:start="85:13" pos:end="87:66"><name pos:start="85:13" pos:end="85:20">snprintf</name><argument_list pos:start="85:21" pos:end="87:66">(<argument pos:start="85:22" pos:end="85:38"><expr pos:start="85:22" pos:end="85:38"><name pos:start="85:22" pos:end="85:24">buf</name> <operator pos:start="85:26" pos:end="85:26">+</operator> <call pos:start="85:28" pos:end="85:38"><name pos:start="85:28" pos:end="85:33">strlen</name><argument_list pos:start="85:34" pos:end="85:38">(<argument pos:start="85:35" pos:end="85:37"><expr pos:start="85:35" pos:end="85:37"><name pos:start="85:35" pos:end="85:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:41" pos:end="85:65"><expr pos:start="85:41" pos:end="85:65"><sizeof pos:start="85:41" pos:end="85:51">sizeof<argument_list pos:start="85:47" pos:end="85:51">(<argument pos:start="85:48" pos:end="85:50"><expr pos:start="85:48" pos:end="85:50"><name pos:start="85:48" pos:end="85:50">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="85:53" pos:end="85:53">-</operator> <call pos:start="85:55" pos:end="85:65"><name pos:start="85:55" pos:end="85:60">strlen</name><argument_list pos:start="85:61" pos:end="85:65">(<argument pos:start="85:62" pos:end="85:64"><expr pos:start="85:62" pos:end="85:64"><name pos:start="85:62" pos:end="85:64">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:68" pos:end="85:77"><expr pos:start="85:68" pos:end="85:77"><literal type="string" pos:start="85:68" pos:end="85:77">"q=%2.1f "</literal></expr></argument>,

                    <argument pos:start="87:21" pos:end="87:65"><expr pos:start="87:21" pos:end="87:65"><name pos:start="87:21" pos:end="87:45"><name pos:start="87:21" pos:end="87:23">enc</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:36">coded_frame</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:45">quality</name></name><operator pos:start="87:46" pos:end="87:46">/</operator><operator pos:start="87:47" pos:end="87:47">(</operator><name pos:start="87:48" pos:end="87:52">float</name><operator pos:start="87:53" pos:end="87:53">)</operator><name pos:start="87:54" pos:end="87:65">FF_QP2LAMBDA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="91:9" pos:end="169:9"><if pos:start="91:9" pos:end="169:9">if <condition pos:start="91:12" pos:end="91:56">(<expr pos:start="91:13" pos:end="91:55"><operator pos:start="91:13" pos:end="91:13">!</operator><name pos:start="91:14" pos:end="91:16">vid</name> <operator pos:start="91:18" pos:end="91:19">&amp;&amp;</operator> <name pos:start="91:21" pos:end="91:35"><name pos:start="91:21" pos:end="91:23">enc</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:35">codec_type</name></name> <operator pos:start="91:37" pos:end="91:38">==</operator> <name pos:start="91:40" pos:end="91:55">CODEC_TYPE_VIDEO</name></expr>)</condition> <block pos:start="91:58" pos:end="169:9">{<block_content pos:start="93:13" pos:end="167:20">

            <decl_stmt pos:start="93:13" pos:end="93:61"><decl pos:start="93:13" pos:end="93:60"><type pos:start="93:13" pos:end="93:17"><name pos:start="93:13" pos:end="93:17">float</name></type> <name pos:start="93:19" pos:end="93:19">t</name> <init pos:start="93:21" pos:end="93:60">= <expr pos:start="93:23" pos:end="93:60"><operator pos:start="93:23" pos:end="93:23">(</operator><call pos:start="93:24" pos:end="93:35"><name pos:start="93:24" pos:end="93:33">av_gettime</name><argument_list pos:start="93:34" pos:end="93:35">()</argument_list></call><operator pos:start="93:36" pos:end="93:36">-</operator><name pos:start="93:37" pos:end="93:47">timer_start</name><operator pos:start="93:48" pos:end="93:48">)</operator> <operator pos:start="93:50" pos:end="93:50">/</operator> <literal type="number" pos:start="93:52" pos:end="93:60">1000000.0</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:45"><expr pos:start="97:13" pos:end="97:44"><name pos:start="97:13" pos:end="97:24">frame_number</name> <operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:44"><name pos:start="97:28" pos:end="97:30">ost</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:44">frame_number</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="103:92"><expr pos:start="99:13" pos:end="103:91"><call pos:start="99:13" pos:end="103:91"><name pos:start="99:13" pos:end="99:20">snprintf</name><argument_list pos:start="99:21" pos:end="103:91">(<argument pos:start="99:22" pos:end="99:38"><expr pos:start="99:22" pos:end="99:38"><name pos:start="99:22" pos:end="99:24">buf</name> <operator pos:start="99:26" pos:end="99:26">+</operator> <call pos:start="99:28" pos:end="99:38"><name pos:start="99:28" pos:end="99:33">strlen</name><argument_list pos:start="99:34" pos:end="99:38">(<argument pos:start="99:35" pos:end="99:37"><expr pos:start="99:35" pos:end="99:37"><name pos:start="99:35" pos:end="99:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:41" pos:end="99:65"><expr pos:start="99:41" pos:end="99:65"><sizeof pos:start="99:41" pos:end="99:51">sizeof<argument_list pos:start="99:47" pos:end="99:51">(<argument pos:start="99:48" pos:end="99:50"><expr pos:start="99:48" pos:end="99:50"><name pos:start="99:48" pos:end="99:50">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="99:53" pos:end="99:53">-</operator> <call pos:start="99:55" pos:end="99:65"><name pos:start="99:55" pos:end="99:60">strlen</name><argument_list pos:start="99:61" pos:end="99:65">(<argument pos:start="99:62" pos:end="99:64"><expr pos:start="99:62" pos:end="99:64"><name pos:start="99:62" pos:end="99:64">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:68" pos:end="99:95"><expr pos:start="99:68" pos:end="99:95"><literal type="string" pos:start="99:68" pos:end="99:95">"frame=%5d fps=%3d q=%3.1f "</literal></expr></argument>,

                     <argument pos:start="101:22" pos:end="101:33"><expr pos:start="101:22" pos:end="101:33"><name pos:start="101:22" pos:end="101:33">frame_number</name></expr></argument>, <argument pos:start="101:36" pos:end="101:70"><expr pos:start="101:36" pos:end="101:70"><ternary pos:start="101:36" pos:end="101:70"><condition pos:start="101:36" pos:end="101:41"><expr pos:start="101:36" pos:end="101:40"><operator pos:start="101:36" pos:end="101:36">(</operator><name pos:start="101:37" pos:end="101:37">t</name><operator pos:start="101:38" pos:end="101:38">&gt;</operator><literal type="number" pos:start="101:39" pos:end="101:39">1</literal><operator pos:start="101:40" pos:end="101:40">)</operator></expr>?</condition><then pos:start="101:42" pos:end="101:66"><expr pos:start="101:42" pos:end="101:66"><operator pos:start="101:42" pos:end="101:42">(</operator><name pos:start="101:43" pos:end="101:45">int</name><operator pos:start="101:46" pos:end="101:46">)</operator><operator pos:start="101:47" pos:end="101:47">(</operator><name pos:start="101:48" pos:end="101:59">frame_number</name><operator pos:start="101:60" pos:end="101:60">/</operator><name pos:start="101:61" pos:end="101:61">t</name><operator pos:start="101:62" pos:end="101:62">+</operator><literal type="number" pos:start="101:63" pos:end="101:65">0.5</literal><operator pos:start="101:66" pos:end="101:66">)</operator></expr> </then><else pos:start="101:68" pos:end="101:70">: <expr pos:start="101:70" pos:end="101:70"><literal type="number" pos:start="101:70" pos:end="101:70">0</literal></expr></else></ternary></expr></argument>,

                     <argument pos:start="103:22" pos:end="103:90"><expr pos:start="103:22" pos:end="103:90"><ternary pos:start="103:22" pos:end="103:90"><condition pos:start="103:22" pos:end="103:39"><expr pos:start="103:22" pos:end="103:37"><name pos:start="103:22" pos:end="103:37"><name pos:start="103:22" pos:end="103:24">enc</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:37">coded_frame</name></name></expr> ?</condition><then pos:start="103:41" pos:end="103:85"> <expr pos:start="103:41" pos:end="103:85"><name pos:start="103:41" pos:end="103:65"><name pos:start="103:41" pos:end="103:43">enc</name><operator pos:start="103:44" pos:end="103:45">-&gt;</operator><name pos:start="103:46" pos:end="103:56">coded_frame</name><operator pos:start="103:57" pos:end="103:58">-&gt;</operator><name pos:start="103:59" pos:end="103:65">quality</name></name><operator pos:start="103:66" pos:end="103:66">/</operator><operator pos:start="103:67" pos:end="103:67">(</operator><name pos:start="103:68" pos:end="103:72">float</name><operator pos:start="103:73" pos:end="103:73">)</operator><name pos:start="103:74" pos:end="103:85">FF_QP2LAMBDA</name></expr> </then><else pos:start="103:87" pos:end="103:90">: <expr pos:start="103:89" pos:end="103:90"><operator pos:start="103:89" pos:end="103:89">-</operator><literal type="number" pos:start="103:90" pos:end="103:90">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="107:76"><if pos:start="105:13" pos:end="107:76">if<condition pos:start="105:15" pos:end="105:30">(<expr pos:start="105:16" pos:end="105:29"><name pos:start="105:16" pos:end="105:29">is_last_report</name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:76"><block_content pos:start="107:17" pos:end="107:76">

                <expr_stmt pos:start="107:17" pos:end="107:76"><expr pos:start="107:17" pos:end="107:75"><call pos:start="107:17" pos:end="107:75"><name pos:start="107:17" pos:end="107:24">snprintf</name><argument_list pos:start="107:25" pos:end="107:75">(<argument pos:start="107:26" pos:end="107:42"><expr pos:start="107:26" pos:end="107:42"><name pos:start="107:26" pos:end="107:28">buf</name> <operator pos:start="107:30" pos:end="107:30">+</operator> <call pos:start="107:32" pos:end="107:42"><name pos:start="107:32" pos:end="107:37">strlen</name><argument_list pos:start="107:38" pos:end="107:42">(<argument pos:start="107:39" pos:end="107:41"><expr pos:start="107:39" pos:end="107:41"><name pos:start="107:39" pos:end="107:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:45" pos:end="107:69"><expr pos:start="107:45" pos:end="107:69"><sizeof pos:start="107:45" pos:end="107:55">sizeof<argument_list pos:start="107:51" pos:end="107:55">(<argument pos:start="107:52" pos:end="107:54"><expr pos:start="107:52" pos:end="107:54"><name pos:start="107:52" pos:end="107:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="107:57" pos:end="107:57">-</operator> <call pos:start="107:59" pos:end="107:69"><name pos:start="107:59" pos:end="107:64">strlen</name><argument_list pos:start="107:65" pos:end="107:69">(<argument pos:start="107:66" pos:end="107:68"><expr pos:start="107:66" pos:end="107:68"><name pos:start="107:66" pos:end="107:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:72" pos:end="107:74"><expr pos:start="107:72" pos:end="107:74"><literal type="string" pos:start="107:72" pos:end="107:74">"L"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="109:13" pos:end="123:13"><if pos:start="109:13" pos:end="123:13">if<condition pos:start="109:15" pos:end="109:43">(<expr pos:start="109:16" pos:end="109:42"><name pos:start="109:16" pos:end="109:22">qp_hist</name> <operator pos:start="109:24" pos:end="109:25">&amp;&amp;</operator> <name pos:start="109:27" pos:end="109:42"><name pos:start="109:27" pos:end="109:29">enc</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:42">coded_frame</name></name></expr>)</condition><block pos:start="109:44" pos:end="123:13">{<block_content pos:start="111:17" pos:end="121:125">

                <decl_stmt pos:start="111:17" pos:end="111:22"><decl pos:start="111:17" pos:end="111:21"><type pos:start="111:17" pos:end="111:19"><name pos:start="111:17" pos:end="111:19">int</name></type> <name pos:start="111:21" pos:end="111:21">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="113:17" pos:end="113:78"><decl pos:start="113:17" pos:end="113:77"><type pos:start="113:17" pos:end="113:19"><name pos:start="113:17" pos:end="113:19">int</name></type> <name pos:start="113:21" pos:end="113:22">qp</name><init pos:start="113:23" pos:end="113:77">= <expr pos:start="113:25" pos:end="113:77"><call pos:start="113:25" pos:end="113:77"><name pos:start="113:25" pos:end="113:30">lrintf</name><argument_list pos:start="113:31" pos:end="113:77">(<argument pos:start="113:32" pos:end="113:76"><expr pos:start="113:32" pos:end="113:76"><name pos:start="113:32" pos:end="113:56"><name pos:start="113:32" pos:end="113:34">enc</name><operator pos:start="113:35" pos:end="113:36">-&gt;</operator><name pos:start="113:37" pos:end="113:47">coded_frame</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:56">quality</name></name><operator pos:start="113:57" pos:end="113:57">/</operator><operator pos:start="113:58" pos:end="113:58">(</operator><name pos:start="113:59" pos:end="113:63">float</name><operator pos:start="113:64" pos:end="113:64">)</operator><name pos:start="113:65" pos:end="113:76">FF_QP2LAMBDA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="115:17" pos:end="117:39"><if pos:start="115:17" pos:end="117:39">if<condition pos:start="115:19" pos:end="115:64">(<expr pos:start="115:20" pos:end="115:63"><name pos:start="115:20" pos:end="115:21">qp</name><operator pos:start="115:22" pos:end="115:23">&gt;=</operator><literal type="number" pos:start="115:24" pos:end="115:24">0</literal> <operator pos:start="115:26" pos:end="115:27">&amp;&amp;</operator> <name pos:start="115:29" pos:end="115:30">qp</name><operator pos:start="115:31" pos:end="115:31">&lt;</operator><sizeof pos:start="115:32" pos:end="115:51">sizeof<argument_list pos:start="115:38" pos:end="115:51">(<argument pos:start="115:39" pos:end="115:50"><expr pos:start="115:39" pos:end="115:50"><name pos:start="115:39" pos:end="115:50">qp_histogram</name></expr></argument>)</argument_list></sizeof><operator pos:start="115:52" pos:end="115:52">/</operator><sizeof pos:start="115:53" pos:end="115:63">sizeof<argument_list pos:start="115:59" pos:end="115:63">(<argument pos:start="115:60" pos:end="115:62"><expr pos:start="115:60" pos:end="115:62"><name pos:start="115:60" pos:end="115:62">int</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="117:21" pos:end="117:39"><block_content pos:start="117:21" pos:end="117:39">

                    <expr_stmt pos:start="117:21" pos:end="117:39"><expr pos:start="117:21" pos:end="117:38"><name pos:start="117:21" pos:end="117:36"><name pos:start="117:21" pos:end="117:32">qp_histogram</name><index pos:start="117:33" pos:end="117:36">[<expr pos:start="117:34" pos:end="117:35"><name pos:start="117:34" pos:end="117:35">qp</name></expr>]</index></name><operator pos:start="117:37" pos:end="117:38">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="119:17" pos:end="121:125">for<control pos:start="119:20" pos:end="119:35">(<init pos:start="119:21" pos:end="119:24"><expr pos:start="119:21" pos:end="119:23"><name pos:start="119:21" pos:end="119:21">j</name><operator pos:start="119:22" pos:end="119:22">=</operator><literal type="number" pos:start="119:23" pos:end="119:23">0</literal></expr>;</init> <condition pos:start="119:26" pos:end="119:30"><expr pos:start="119:26" pos:end="119:29"><name pos:start="119:26" pos:end="119:26">j</name><operator pos:start="119:27" pos:end="119:27">&lt;</operator><literal type="number" pos:start="119:28" pos:end="119:29">32</literal></expr>;</condition> <incr pos:start="119:32" pos:end="119:34"><expr pos:start="119:32" pos:end="119:34"><name pos:start="119:32" pos:end="119:32">j</name><operator pos:start="119:33" pos:end="119:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="121:21" pos:end="121:125"><block_content pos:start="121:21" pos:end="121:125">

                    <expr_stmt pos:start="121:21" pos:end="121:125"><expr pos:start="121:21" pos:end="121:124"><call pos:start="121:21" pos:end="121:124"><name pos:start="121:21" pos:end="121:28">snprintf</name><argument_list pos:start="121:29" pos:end="121:124">(<argument pos:start="121:30" pos:end="121:46"><expr pos:start="121:30" pos:end="121:46"><name pos:start="121:30" pos:end="121:32">buf</name> <operator pos:start="121:34" pos:end="121:34">+</operator> <call pos:start="121:36" pos:end="121:46"><name pos:start="121:36" pos:end="121:41">strlen</name><argument_list pos:start="121:42" pos:end="121:46">(<argument pos:start="121:43" pos:end="121:45"><expr pos:start="121:43" pos:end="121:45"><name pos:start="121:43" pos:end="121:45">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="121:49" pos:end="121:73"><expr pos:start="121:49" pos:end="121:73"><sizeof pos:start="121:49" pos:end="121:59">sizeof<argument_list pos:start="121:55" pos:end="121:59">(<argument pos:start="121:56" pos:end="121:58"><expr pos:start="121:56" pos:end="121:58"><name pos:start="121:56" pos:end="121:58">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="121:61" pos:end="121:61">-</operator> <call pos:start="121:63" pos:end="121:73"><name pos:start="121:63" pos:end="121:68">strlen</name><argument_list pos:start="121:69" pos:end="121:73">(<argument pos:start="121:70" pos:end="121:72"><expr pos:start="121:70" pos:end="121:72"><name pos:start="121:70" pos:end="121:72">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="121:76" pos:end="121:79"><expr pos:start="121:76" pos:end="121:79"><literal type="string" pos:start="121:76" pos:end="121:79">"%X"</literal></expr></argument>, <argument pos:start="121:82" pos:end="121:123"><expr pos:start="121:82" pos:end="121:123"><operator pos:start="121:82" pos:end="121:82">(</operator><name pos:start="121:83" pos:end="121:85">int</name><operator pos:start="121:86" pos:end="121:86">)</operator><call pos:start="121:87" pos:end="121:123"><name pos:start="121:87" pos:end="121:92">lrintf</name><argument_list pos:start="121:93" pos:end="121:123">(<argument pos:start="121:94" pos:end="121:122"><expr pos:start="121:94" pos:end="121:122"><call pos:start="121:94" pos:end="121:115"><name pos:start="121:94" pos:end="121:96">log</name><argument_list pos:start="121:97" pos:end="121:115">(<argument pos:start="121:98" pos:end="121:114"><expr pos:start="121:98" pos:end="121:114"><name pos:start="121:98" pos:end="121:112"><name pos:start="121:98" pos:end="121:109">qp_histogram</name><index pos:start="121:110" pos:end="121:112">[<expr pos:start="121:111" pos:end="121:111"><name pos:start="121:111" pos:end="121:111">j</name></expr>]</index></name><operator pos:start="121:113" pos:end="121:113">+</operator><literal type="number" pos:start="121:114" pos:end="121:114">1</literal></expr></argument>)</argument_list></call><operator pos:start="121:116" pos:end="121:116">/</operator><call pos:start="121:117" pos:end="121:122"><name pos:start="121:117" pos:end="121:119">log</name><argument_list pos:start="121:120" pos:end="121:122">(<argument pos:start="121:121" pos:end="121:121"><expr pos:start="121:121" pos:end="121:121"><literal type="number" pos:start="121:121" pos:end="121:121">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="125:13" pos:end="165:13"><if pos:start="125:13" pos:end="165:13">if <condition pos:start="125:16" pos:end="125:43">(<expr pos:start="125:17" pos:end="125:42"><name pos:start="125:17" pos:end="125:26"><name pos:start="125:17" pos:end="125:19">enc</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:26">flags</name></name><operator pos:start="125:27" pos:end="125:27">&amp;</operator><name pos:start="125:28" pos:end="125:42">CODEC_FLAG_PSNR</name></expr>)</condition><block pos:start="125:44" pos:end="165:13">{<block_content pos:start="127:17" pos:end="163:110">

                <decl_stmt pos:start="127:17" pos:end="127:22"><decl pos:start="127:17" pos:end="127:21"><type pos:start="127:17" pos:end="127:19"><name pos:start="127:17" pos:end="127:19">int</name></type> <name pos:start="127:21" pos:end="127:21">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="129:17" pos:end="129:42"><decl pos:start="129:17" pos:end="129:28"><type pos:start="129:17" pos:end="129:22"><name pos:start="129:17" pos:end="129:22">double</name></type> <name pos:start="129:24" pos:end="129:28">error</name></decl>, <decl pos:start="129:31" pos:end="129:41"><type ref="prev" pos:start="129:17" pos:end="129:22"/><name pos:start="129:31" pos:end="129:39">error_sum</name><init pos:start="129:40" pos:end="129:41">=<expr pos:start="129:41" pos:end="129:41"><literal type="number" pos:start="129:41" pos:end="129:41">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="131:17" pos:end="131:42"><decl pos:start="131:17" pos:end="131:28"><type pos:start="131:17" pos:end="131:22"><name pos:start="131:17" pos:end="131:22">double</name></type> <name pos:start="131:24" pos:end="131:28">scale</name></decl>, <decl pos:start="131:31" pos:end="131:41"><type ref="prev" pos:start="131:17" pos:end="131:22"/><name pos:start="131:31" pos:end="131:39">scale_sum</name><init pos:start="131:40" pos:end="131:41">=<expr pos:start="131:41" pos:end="131:41"><literal type="number" pos:start="131:41" pos:end="131:41">0</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="133:17" pos:end="133:44"><decl pos:start="133:17" pos:end="133:43"><type pos:start="133:17" pos:end="133:20"><name pos:start="133:17" pos:end="133:20">char</name></type> <name pos:start="133:22" pos:end="133:28"><name pos:start="133:22" pos:end="133:25">type</name><index pos:start="133:26" pos:end="133:28">[<expr pos:start="133:27" pos:end="133:27"><literal type="number" pos:start="133:27" pos:end="133:27">3</literal></expr>]</index></name><init pos:start="133:29" pos:end="133:43">= <expr pos:start="133:31" pos:end="133:43"><block pos:start="133:31" pos:end="133:43">{<expr pos:start="133:32" pos:end="133:34"><literal type="char" pos:start="133:32" pos:end="133:34">'Y'</literal></expr>,<expr pos:start="133:36" pos:end="133:38"><literal type="char" pos:start="133:36" pos:end="133:38">'U'</literal></expr>,<expr pos:start="133:40" pos:end="133:42"><literal type="char" pos:start="133:40" pos:end="133:42">'V'</literal></expr>}</block></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:80"><expr pos:start="135:17" pos:end="135:79"><call pos:start="135:17" pos:end="135:79"><name pos:start="135:17" pos:end="135:24">snprintf</name><argument_list pos:start="135:25" pos:end="135:79">(<argument pos:start="135:26" pos:end="135:42"><expr pos:start="135:26" pos:end="135:42"><name pos:start="135:26" pos:end="135:28">buf</name> <operator pos:start="135:30" pos:end="135:30">+</operator> <call pos:start="135:32" pos:end="135:42"><name pos:start="135:32" pos:end="135:37">strlen</name><argument_list pos:start="135:38" pos:end="135:42">(<argument pos:start="135:39" pos:end="135:41"><expr pos:start="135:39" pos:end="135:41"><name pos:start="135:39" pos:end="135:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="135:45" pos:end="135:69"><expr pos:start="135:45" pos:end="135:69"><sizeof pos:start="135:45" pos:end="135:55">sizeof<argument_list pos:start="135:51" pos:end="135:55">(<argument pos:start="135:52" pos:end="135:54"><expr pos:start="135:52" pos:end="135:54"><name pos:start="135:52" pos:end="135:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="135:57" pos:end="135:57">-</operator> <call pos:start="135:59" pos:end="135:69"><name pos:start="135:59" pos:end="135:64">strlen</name><argument_list pos:start="135:65" pos:end="135:69">(<argument pos:start="135:66" pos:end="135:68"><expr pos:start="135:66" pos:end="135:68"><name pos:start="135:66" pos:end="135:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="135:72" pos:end="135:78"><expr pos:start="135:72" pos:end="135:78"><literal type="string" pos:start="135:72" pos:end="135:78">"PSNR="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="137:17" pos:end="161:17">for<control pos:start="137:20" pos:end="137:34">(<init pos:start="137:21" pos:end="137:24"><expr pos:start="137:21" pos:end="137:23"><name pos:start="137:21" pos:end="137:21">j</name><operator pos:start="137:22" pos:end="137:22">=</operator><literal type="number" pos:start="137:23" pos:end="137:23">0</literal></expr>;</init> <condition pos:start="137:26" pos:end="137:29"><expr pos:start="137:26" pos:end="137:28"><name pos:start="137:26" pos:end="137:26">j</name><operator pos:start="137:27" pos:end="137:27">&lt;</operator><literal type="number" pos:start="137:28" pos:end="137:28">3</literal></expr>;</condition> <incr pos:start="137:31" pos:end="137:33"><expr pos:start="137:31" pos:end="137:33"><name pos:start="137:31" pos:end="137:31">j</name><operator pos:start="137:32" pos:end="137:33">++</operator></expr></incr>)</control><block pos:start="137:35" pos:end="161:17">{<block_content pos:start="139:21" pos:end="159:116">

                    <if_stmt pos:start="139:21" pos:end="151:21"><if pos:start="139:21" pos:end="145:21">if<condition pos:start="139:23" pos:end="139:38">(<expr pos:start="139:24" pos:end="139:37"><name pos:start="139:24" pos:end="139:37">is_last_report</name></expr>)</condition><block pos:start="139:39" pos:end="145:21">{<block_content pos:start="141:25" pos:end="143:79">

                        <expr_stmt pos:start="141:25" pos:end="141:45"><expr pos:start="141:25" pos:end="141:44"><name pos:start="141:25" pos:end="141:29">error</name><operator pos:start="141:30" pos:end="141:30">=</operator> <name pos:start="141:32" pos:end="141:44"><name pos:start="141:32" pos:end="141:34">enc</name><operator pos:start="141:35" pos:end="141:36">-&gt;</operator><name pos:start="141:37" pos:end="141:41">error</name><index pos:start="141:42" pos:end="141:44">[<expr pos:start="141:43" pos:end="141:43"><name pos:start="141:43" pos:end="141:43">j</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="143:25" pos:end="143:79"><expr pos:start="143:25" pos:end="143:78"><name pos:start="143:25" pos:end="143:29">scale</name><operator pos:start="143:30" pos:end="143:30">=</operator> <name pos:start="143:32" pos:end="143:41"><name pos:start="143:32" pos:end="143:34">enc</name><operator pos:start="143:35" pos:end="143:36">-&gt;</operator><name pos:start="143:37" pos:end="143:41">width</name></name><operator pos:start="143:42" pos:end="143:42">*</operator><name pos:start="143:43" pos:end="143:53"><name pos:start="143:43" pos:end="143:45">enc</name><operator pos:start="143:46" pos:end="143:47">-&gt;</operator><name pos:start="143:48" pos:end="143:53">height</name></name><operator pos:start="143:54" pos:end="143:54">*</operator><literal type="number" pos:start="143:55" pos:end="143:59">255.0</literal><operator pos:start="143:60" pos:end="143:60">*</operator><literal type="number" pos:start="143:61" pos:end="143:65">255.0</literal><operator pos:start="143:66" pos:end="143:66">*</operator><name pos:start="143:67" pos:end="143:78">frame_number</name></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="145:22" pos:end="151:21">else<block pos:start="145:26" pos:end="151:21">{<block_content pos:start="147:25" pos:end="149:66">

                        <expr_stmt pos:start="147:25" pos:end="147:58"><expr pos:start="147:25" pos:end="147:57"><name pos:start="147:25" pos:end="147:29">error</name><operator pos:start="147:30" pos:end="147:30">=</operator> <name pos:start="147:32" pos:end="147:57"><name pos:start="147:32" pos:end="147:34">enc</name><operator pos:start="147:35" pos:end="147:36">-&gt;</operator><name pos:start="147:37" pos:end="147:47">coded_frame</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:54">error</name><index pos:start="147:55" pos:end="147:57">[<expr pos:start="147:56" pos:end="147:56"><name pos:start="147:56" pos:end="147:56">j</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="149:25" pos:end="149:66"><expr pos:start="149:25" pos:end="149:65"><name pos:start="149:25" pos:end="149:29">scale</name><operator pos:start="149:30" pos:end="149:30">=</operator> <name pos:start="149:32" pos:end="149:41"><name pos:start="149:32" pos:end="149:34">enc</name><operator pos:start="149:35" pos:end="149:36">-&gt;</operator><name pos:start="149:37" pos:end="149:41">width</name></name><operator pos:start="149:42" pos:end="149:42">*</operator><name pos:start="149:43" pos:end="149:53"><name pos:start="149:43" pos:end="149:45">enc</name><operator pos:start="149:46" pos:end="149:47">-&gt;</operator><name pos:start="149:48" pos:end="149:53">height</name></name><operator pos:start="149:54" pos:end="149:54">*</operator><literal type="number" pos:start="149:55" pos:end="149:59">255.0</literal><operator pos:start="149:60" pos:end="149:60">*</operator><literal type="number" pos:start="149:61" pos:end="149:65">255.0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="153:21" pos:end="153:35"><if pos:start="153:21" pos:end="153:35">if<condition pos:start="153:23" pos:end="153:25">(<expr pos:start="153:24" pos:end="153:24"><name pos:start="153:24" pos:end="153:24">j</name></expr>)</condition><block type="pseudo" pos:start="153:27" pos:end="153:35"><block_content pos:start="153:27" pos:end="153:35"> <expr_stmt pos:start="153:27" pos:end="153:35"><expr pos:start="153:27" pos:end="153:34"><name pos:start="153:27" pos:end="153:31">scale</name><operator pos:start="153:32" pos:end="153:33">/=</operator><literal type="number" pos:start="153:34" pos:end="153:34">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:39"><expr pos:start="155:21" pos:end="155:38"><name pos:start="155:21" pos:end="155:29">error_sum</name> <operator pos:start="155:31" pos:end="155:32">+=</operator> <name pos:start="155:34" pos:end="155:38">error</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:39"><expr pos:start="157:21" pos:end="157:38"><name pos:start="157:21" pos:end="157:29">scale_sum</name> <operator pos:start="157:31" pos:end="157:32">+=</operator> <name pos:start="157:34" pos:end="157:38">scale</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="159:21" pos:end="159:116"><expr pos:start="159:21" pos:end="159:115"><call pos:start="159:21" pos:end="159:115"><name pos:start="159:21" pos:end="159:28">snprintf</name><argument_list pos:start="159:29" pos:end="159:115">(<argument pos:start="159:30" pos:end="159:46"><expr pos:start="159:30" pos:end="159:46"><name pos:start="159:30" pos:end="159:32">buf</name> <operator pos:start="159:34" pos:end="159:34">+</operator> <call pos:start="159:36" pos:end="159:46"><name pos:start="159:36" pos:end="159:41">strlen</name><argument_list pos:start="159:42" pos:end="159:46">(<argument pos:start="159:43" pos:end="159:45"><expr pos:start="159:43" pos:end="159:45"><name pos:start="159:43" pos:end="159:45">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="159:49" pos:end="159:73"><expr pos:start="159:49" pos:end="159:73"><sizeof pos:start="159:49" pos:end="159:59">sizeof<argument_list pos:start="159:55" pos:end="159:59">(<argument pos:start="159:56" pos:end="159:58"><expr pos:start="159:56" pos:end="159:58"><name pos:start="159:56" pos:end="159:58">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="159:61" pos:end="159:61">-</operator> <call pos:start="159:63" pos:end="159:73"><name pos:start="159:63" pos:end="159:68">strlen</name><argument_list pos:start="159:69" pos:end="159:73">(<argument pos:start="159:70" pos:end="159:72"><expr pos:start="159:70" pos:end="159:72"><name pos:start="159:70" pos:end="159:72">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="159:76" pos:end="159:86"><expr pos:start="159:76" pos:end="159:86"><literal type="string" pos:start="159:76" pos:end="159:86">"%c:%2.2f "</literal></expr></argument>, <argument pos:start="159:89" pos:end="159:95"><expr pos:start="159:89" pos:end="159:95"><name pos:start="159:89" pos:end="159:95"><name pos:start="159:89" pos:end="159:92">type</name><index pos:start="159:93" pos:end="159:95">[<expr pos:start="159:94" pos:end="159:94"><name pos:start="159:94" pos:end="159:94">j</name></expr>]</index></name></expr></argument>, <argument pos:start="159:98" pos:end="159:114"><expr pos:start="159:98" pos:end="159:114"><call pos:start="159:98" pos:end="159:114"><name pos:start="159:98" pos:end="159:101">psnr</name><argument_list pos:start="159:102" pos:end="159:114">(<argument pos:start="159:103" pos:end="159:113"><expr pos:start="159:103" pos:end="159:113"><name pos:start="159:103" pos:end="159:107">error</name><operator pos:start="159:108" pos:end="159:108">/</operator><name pos:start="159:109" pos:end="159:113">scale</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="163:17" pos:end="163:110"><expr pos:start="163:17" pos:end="163:109"><call pos:start="163:17" pos:end="163:109"><name pos:start="163:17" pos:end="163:24">snprintf</name><argument_list pos:start="163:25" pos:end="163:109">(<argument pos:start="163:26" pos:end="163:42"><expr pos:start="163:26" pos:end="163:42"><name pos:start="163:26" pos:end="163:28">buf</name> <operator pos:start="163:30" pos:end="163:30">+</operator> <call pos:start="163:32" pos:end="163:42"><name pos:start="163:32" pos:end="163:37">strlen</name><argument_list pos:start="163:38" pos:end="163:42">(<argument pos:start="163:39" pos:end="163:41"><expr pos:start="163:39" pos:end="163:41"><name pos:start="163:39" pos:end="163:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="163:45" pos:end="163:69"><expr pos:start="163:45" pos:end="163:69"><sizeof pos:start="163:45" pos:end="163:55">sizeof<argument_list pos:start="163:51" pos:end="163:55">(<argument pos:start="163:52" pos:end="163:54"><expr pos:start="163:52" pos:end="163:54"><name pos:start="163:52" pos:end="163:54">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="163:57" pos:end="163:57">-</operator> <call pos:start="163:59" pos:end="163:69"><name pos:start="163:59" pos:end="163:64">strlen</name><argument_list pos:start="163:65" pos:end="163:69">(<argument pos:start="163:66" pos:end="163:68"><expr pos:start="163:66" pos:end="163:68"><name pos:start="163:66" pos:end="163:68">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="163:72" pos:end="163:81"><expr pos:start="163:72" pos:end="163:81"><literal type="string" pos:start="163:72" pos:end="163:81">"*:%2.2f "</literal></expr></argument>, <argument pos:start="163:84" pos:end="163:108"><expr pos:start="163:84" pos:end="163:108"><call pos:start="163:84" pos:end="163:108"><name pos:start="163:84" pos:end="163:87">psnr</name><argument_list pos:start="163:88" pos:end="163:108">(<argument pos:start="163:89" pos:end="163:107"><expr pos:start="163:89" pos:end="163:107"><name pos:start="163:89" pos:end="163:97">error_sum</name><operator pos:start="163:98" pos:end="163:98">/</operator><name pos:start="163:99" pos:end="163:107">scale_sum</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:20"><expr pos:start="167:13" pos:end="167:19"><name pos:start="167:13" pos:end="167:15">vid</name> <operator pos:start="167:17" pos:end="167:17">=</operator> <literal type="number" pos:start="167:19" pos:end="167:19">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="171:9" pos:end="171:38">/* compute min output value */</comment>

        <expr_stmt pos:start="173:9" pos:end="173:68"><expr pos:start="173:9" pos:end="173:67"><name pos:start="173:9" pos:end="173:11">pts</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <operator pos:start="173:15" pos:end="173:15">(</operator><name pos:start="173:16" pos:end="173:21">double</name><operator pos:start="173:22" pos:end="173:22">)</operator><name pos:start="173:23" pos:end="173:38"><name pos:start="173:23" pos:end="173:25">ost</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:29">st</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:34">pts</name><operator pos:start="173:35" pos:end="173:35">.</operator><name pos:start="173:36" pos:end="173:38">val</name></name> <operator pos:start="173:40" pos:end="173:40">*</operator> <call pos:start="173:42" pos:end="173:67"><name pos:start="173:42" pos:end="173:47">av_q2d</name><argument_list pos:start="173:48" pos:end="173:67">(<argument pos:start="173:49" pos:end="173:66"><expr pos:start="173:49" pos:end="173:66"><name pos:start="173:49" pos:end="173:66"><name pos:start="173:49" pos:end="173:51">ost</name><operator pos:start="173:52" pos:end="173:53">-&gt;</operator><name pos:start="173:54" pos:end="173:55">st</name><operator pos:start="173:56" pos:end="173:57">-&gt;</operator><name pos:start="173:58" pos:end="173:66">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="177:22"><if pos:start="175:9" pos:end="177:22">if <condition pos:start="175:12" pos:end="175:37">(<expr pos:start="175:13" pos:end="175:36"><operator pos:start="175:13" pos:end="175:13">(</operator><name pos:start="175:14" pos:end="175:16">pts</name> <operator pos:start="175:18" pos:end="175:18">&lt;</operator> <name pos:start="175:20" pos:end="175:22">ti1</name><operator pos:start="175:23" pos:end="175:23">)</operator> <operator pos:start="175:25" pos:end="175:26">&amp;&amp;</operator> <operator pos:start="175:28" pos:end="175:28">(</operator><name pos:start="175:29" pos:end="175:31">pts</name> <operator pos:start="175:33" pos:end="175:33">&gt;</operator> <literal type="number" pos:start="175:35" pos:end="175:35">0</literal><operator pos:start="175:36" pos:end="175:36">)</operator></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:22"><block_content pos:start="177:13" pos:end="177:22">

            <expr_stmt pos:start="177:13" pos:end="177:22"><expr pos:start="177:13" pos:end="177:21"><name pos:start="177:13" pos:end="177:15">ti1</name> <operator pos:start="177:17" pos:end="177:17">=</operator> <name pos:start="177:19" pos:end="177:21">pts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="181:5" pos:end="183:19"><if pos:start="181:5" pos:end="183:19">if <condition pos:start="181:8" pos:end="181:19">(<expr pos:start="181:9" pos:end="181:18"><name pos:start="181:9" pos:end="181:11">ti1</name> <operator pos:start="181:13" pos:end="181:13">&lt;</operator> <literal type="number" pos:start="181:15" pos:end="181:18">0.01</literal></expr>)</condition><block type="pseudo" pos:start="183:9" pos:end="183:19"><block_content pos:start="183:9" pos:end="183:19">

        <expr_stmt pos:start="183:9" pos:end="183:19"><expr pos:start="183:9" pos:end="183:18"><name pos:start="183:9" pos:end="183:11">ti1</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <literal type="number" pos:start="183:15" pos:end="183:18">0.01</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="187:5" pos:end="217:5"><if pos:start="187:5" pos:end="217:5">if <condition pos:start="187:8" pos:end="187:34">(<expr pos:start="187:9" pos:end="187:33"><name pos:start="187:9" pos:end="187:15">verbose</name> <operator pos:start="187:17" pos:end="187:18">||</operator> <name pos:start="187:20" pos:end="187:33">is_last_report</name></expr>)</condition> <block pos:start="187:36" pos:end="217:5">{<block_content pos:start="189:9" pos:end="215:23">

        <expr_stmt pos:start="189:9" pos:end="189:58"><expr pos:start="189:9" pos:end="189:57"><name pos:start="189:9" pos:end="189:15">bitrate</name> <operator pos:start="189:17" pos:end="189:17">=</operator> <operator pos:start="189:19" pos:end="189:19">(</operator><name pos:start="189:20" pos:end="189:25">double</name><operator pos:start="189:26" pos:end="189:26">)</operator><operator pos:start="189:27" pos:end="189:27">(</operator><name pos:start="189:28" pos:end="189:37">total_size</name> <operator pos:start="189:39" pos:end="189:39">*</operator> <literal type="number" pos:start="189:41" pos:end="189:41">8</literal><operator pos:start="189:42" pos:end="189:42">)</operator> <operator pos:start="189:44" pos:end="189:44">/</operator> <name pos:start="189:46" pos:end="189:48">ti1</name> <operator pos:start="189:50" pos:end="189:50">/</operator> <literal type="number" pos:start="189:52" pos:end="189:57">1000.0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="193:9" pos:end="197:53"><expr pos:start="193:9" pos:end="197:52"><call pos:start="193:9" pos:end="197:52"><name pos:start="193:9" pos:end="193:16">snprintf</name><argument_list pos:start="193:17" pos:end="197:52">(<argument pos:start="193:18" pos:end="193:34"><expr pos:start="193:18" pos:end="193:34"><name pos:start="193:18" pos:end="193:20">buf</name> <operator pos:start="193:22" pos:end="193:22">+</operator> <call pos:start="193:24" pos:end="193:34"><name pos:start="193:24" pos:end="193:29">strlen</name><argument_list pos:start="193:30" pos:end="193:34">(<argument pos:start="193:31" pos:end="193:33"><expr pos:start="193:31" pos:end="193:33"><name pos:start="193:31" pos:end="193:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="193:37" pos:end="193:61"><expr pos:start="193:37" pos:end="193:61"><sizeof pos:start="193:37" pos:end="193:47">sizeof<argument_list pos:start="193:43" pos:end="193:47">(<argument pos:start="193:44" pos:end="193:46"><expr pos:start="193:44" pos:end="193:46"><name pos:start="193:44" pos:end="193:46">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="193:49" pos:end="193:49">-</operator> <call pos:start="193:51" pos:end="193:61"><name pos:start="193:51" pos:end="193:56">strlen</name><argument_list pos:start="193:57" pos:end="193:61">(<argument pos:start="193:58" pos:end="193:60"><expr pos:start="193:58" pos:end="193:60"><name pos:start="193:58" pos:end="193:60">buf</name></expr></argument>)</argument_list></call></expr></argument>,

            <argument pos:start="195:13" pos:end="195:58"><expr pos:start="195:13" pos:end="195:58"><literal type="string" pos:start="195:13" pos:end="195:58">"size=%8.0fkB time=%0.1f bitrate=%6.1fkbits/s"</literal></expr></argument>,

            <argument pos:start="197:13" pos:end="197:37"><expr pos:start="197:13" pos:end="197:37"><operator pos:start="197:13" pos:end="197:13">(</operator><name pos:start="197:14" pos:end="197:19">double</name><operator pos:start="197:20" pos:end="197:20">)</operator><name pos:start="197:21" pos:end="197:30">total_size</name> <operator pos:start="197:32" pos:end="197:32">/</operator> <literal type="number" pos:start="197:34" pos:end="197:37">1024</literal></expr></argument>, <argument pos:start="197:40" pos:end="197:42"><expr pos:start="197:40" pos:end="197:42"><name pos:start="197:40" pos:end="197:42">ti1</name></expr></argument>, <argument pos:start="197:45" pos:end="197:51"><expr pos:start="197:45" pos:end="197:51"><name pos:start="197:45" pos:end="197:51">bitrate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="201:9" pos:end="205:49"><if pos:start="201:9" pos:end="205:49">if <condition pos:start="201:12" pos:end="201:24">(<expr pos:start="201:13" pos:end="201:23"><name pos:start="201:13" pos:end="201:19">verbose</name> <operator pos:start="201:21" pos:end="201:21">&gt;</operator> <literal type="number" pos:start="201:23" pos:end="201:23">1</literal></expr>)</condition><block type="pseudo" pos:start="203:11" pos:end="205:49"><block_content pos:start="203:11" pos:end="205:49">

          <expr_stmt pos:start="203:11" pos:end="205:49"><expr pos:start="203:11" pos:end="205:48"><call pos:start="203:11" pos:end="205:48"><name pos:start="203:11" pos:end="203:18">snprintf</name><argument_list pos:start="203:19" pos:end="205:48">(<argument pos:start="203:20" pos:end="203:36"><expr pos:start="203:20" pos:end="203:36"><name pos:start="203:20" pos:end="203:22">buf</name> <operator pos:start="203:24" pos:end="203:24">+</operator> <call pos:start="203:26" pos:end="203:36"><name pos:start="203:26" pos:end="203:31">strlen</name><argument_list pos:start="203:32" pos:end="203:36">(<argument pos:start="203:33" pos:end="203:35"><expr pos:start="203:33" pos:end="203:35"><name pos:start="203:33" pos:end="203:35">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="203:39" pos:end="203:63"><expr pos:start="203:39" pos:end="203:63"><sizeof pos:start="203:39" pos:end="203:49">sizeof<argument_list pos:start="203:45" pos:end="203:49">(<argument pos:start="203:46" pos:end="203:48"><expr pos:start="203:46" pos:end="203:48"><name pos:start="203:46" pos:end="203:48">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="203:51" pos:end="203:51">-</operator> <call pos:start="203:53" pos:end="203:63"><name pos:start="203:53" pos:end="203:58">strlen</name><argument_list pos:start="203:59" pos:end="203:63">(<argument pos:start="203:60" pos:end="203:62"><expr pos:start="203:60" pos:end="203:62"><name pos:start="203:60" pos:end="203:62">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="203:66" pos:end="203:82"><expr pos:start="203:66" pos:end="203:82"><literal type="string" pos:start="203:66" pos:end="203:82">" dup=%d drop=%d"</literal></expr></argument>,

                  <argument pos:start="205:19" pos:end="205:31"><expr pos:start="205:19" pos:end="205:31"><name pos:start="205:19" pos:end="205:31">nb_frames_dup</name></expr></argument>, <argument pos:start="205:34" pos:end="205:47"><expr pos:start="205:34" pos:end="205:47"><name pos:start="205:34" pos:end="205:47">nb_frames_drop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="209:9" pos:end="211:45"><if pos:start="209:9" pos:end="211:45">if <condition pos:start="209:12" pos:end="209:25">(<expr pos:start="209:13" pos:end="209:24"><name pos:start="209:13" pos:end="209:19">verbose</name> <operator pos:start="209:21" pos:end="209:22">&gt;=</operator> <literal type="number" pos:start="209:24" pos:end="209:24">0</literal></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:45"><block_content pos:start="211:13" pos:end="211:45">

            <expr_stmt pos:start="211:13" pos:end="211:45"><expr pos:start="211:13" pos:end="211:44"><call pos:start="211:13" pos:end="211:44"><name pos:start="211:13" pos:end="211:19">fprintf</name><argument_list pos:start="211:20" pos:end="211:44">(<argument pos:start="211:21" pos:end="211:26"><expr pos:start="211:21" pos:end="211:26"><name pos:start="211:21" pos:end="211:26">stderr</name></expr></argument>, <argument pos:start="211:29" pos:end="211:38"><expr pos:start="211:29" pos:end="211:38"><literal type="string" pos:start="211:29" pos:end="211:38">"%s    \r"</literal></expr></argument>, <argument pos:start="211:41" pos:end="211:43"><expr pos:start="211:41" pos:end="211:43"><name pos:start="211:41" pos:end="211:43">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="215:9" pos:end="215:23"><expr pos:start="215:9" pos:end="215:22"><call pos:start="215:9" pos:end="215:22"><name pos:start="215:9" pos:end="215:14">fflush</name><argument_list pos:start="215:15" pos:end="215:22">(<argument pos:start="215:16" pos:end="215:21"><expr pos:start="215:16" pos:end="215:21"><name pos:start="215:16" pos:end="215:21">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="221:5" pos:end="239:5"><if pos:start="221:5" pos:end="239:5">if <condition pos:start="221:8" pos:end="221:39">(<expr pos:start="221:9" pos:end="221:38"><name pos:start="221:9" pos:end="221:22">is_last_report</name> <operator pos:start="221:24" pos:end="221:25">&amp;&amp;</operator> <name pos:start="221:27" pos:end="221:33">verbose</name> <operator pos:start="221:35" pos:end="221:36">&gt;=</operator> <literal type="number" pos:start="221:38" pos:end="221:38">0</literal></expr>)</condition><block pos:start="221:40" pos:end="239:5">{<block_content pos:start="223:9" pos:end="237:10">

        <decl_stmt pos:start="223:9" pos:end="223:58"><decl pos:start="223:9" pos:end="223:57"><type pos:start="223:9" pos:end="223:15"><name pos:start="223:9" pos:end="223:15">int64_t</name></type> <name pos:start="223:17" pos:end="223:19">raw</name><init pos:start="223:20" pos:end="223:57">= <expr pos:start="223:22" pos:end="223:57"><name pos:start="223:22" pos:end="223:31">audio_size</name> <operator pos:start="223:33" pos:end="223:33">+</operator> <name pos:start="223:35" pos:end="223:44">video_size</name> <operator pos:start="223:46" pos:end="223:46">+</operator> <name pos:start="223:48" pos:end="223:57">extra_size</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:30"><expr pos:start="225:9" pos:end="225:29"><call pos:start="225:9" pos:end="225:29"><name pos:start="225:9" pos:end="225:15">fprintf</name><argument_list pos:start="225:16" pos:end="225:29">(<argument pos:start="225:17" pos:end="225:22"><expr pos:start="225:17" pos:end="225:22"><name pos:start="225:17" pos:end="225:22">stderr</name></expr></argument>, <argument pos:start="225:25" pos:end="225:28"><expr pos:start="225:25" pos:end="225:28"><literal type="string" pos:start="225:25" pos:end="225:28">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="237:10"><expr pos:start="227:9" pos:end="237:9"><call pos:start="227:9" pos:end="237:9"><name pos:start="227:9" pos:end="227:15">fprintf</name><argument_list pos:start="227:16" pos:end="237:9">(<argument pos:start="227:17" pos:end="227:22"><expr pos:start="227:17" pos:end="227:22"><name pos:start="227:17" pos:end="227:22">stderr</name></expr></argument>, <argument pos:start="227:25" pos:end="227:99"><expr pos:start="227:25" pos:end="227:99"><literal type="string" pos:start="227:25" pos:end="227:99">"video:%1.0fkB audio:%1.0fkB global headers:%1.0fkB muxing overhead %f%%\n"</literal></expr></argument>,

                <argument pos:start="229:17" pos:end="229:33"><expr pos:start="229:17" pos:end="229:33"><name pos:start="229:17" pos:end="229:26">video_size</name><operator pos:start="229:27" pos:end="229:27">/</operator><literal type="number" pos:start="229:28" pos:end="229:33">1024.0</literal></expr></argument>,

                <argument pos:start="231:17" pos:end="231:33"><expr pos:start="231:17" pos:end="231:33"><name pos:start="231:17" pos:end="231:26">audio_size</name><operator pos:start="231:27" pos:end="231:27">/</operator><literal type="number" pos:start="231:28" pos:end="231:33">1024.0</literal></expr></argument>,

                <argument pos:start="233:17" pos:end="233:33"><expr pos:start="233:17" pos:end="233:33"><name pos:start="233:17" pos:end="233:26">extra_size</name><operator pos:start="233:27" pos:end="233:27">/</operator><literal type="number" pos:start="233:28" pos:end="233:33">1024.0</literal></expr></argument>,

                <argument pos:start="235:17" pos:end="235:44"><expr pos:start="235:17" pos:end="235:44"><literal type="number" pos:start="235:17" pos:end="235:21">100.0</literal><operator pos:start="235:22" pos:end="235:22">*</operator><operator pos:start="235:23" pos:end="235:23">(</operator><name pos:start="235:24" pos:end="235:33">total_size</name> <operator pos:start="235:35" pos:end="235:35">-</operator> <name pos:start="235:37" pos:end="235:39">raw</name><operator pos:start="235:40" pos:end="235:40">)</operator><operator pos:start="235:41" pos:end="235:41">/</operator><name pos:start="235:42" pos:end="235:44">raw</name></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
