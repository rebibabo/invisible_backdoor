<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5512.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">ioreq_parse</name><parameter_list pos:start="1:23" pos:end="1:43">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:42"><name pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:29">struct</name> <name pos:start="1:31" pos:end="1:35">ioreq</name></name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:42">ioreq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:14">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenBlkDev</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">blkdev</name> <init pos:start="5:30" pos:end="5:44">= <expr pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:36">ioreq</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:44">blkdev</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">uintptr_t</name></type> <name pos:start="7:15" pos:end="7:17">mem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:14">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="21:78"><expr pos:start="15:5" pos:end="21:77"><call pos:start="15:5" pos:end="21:77"><name pos:start="15:5" pos:end="15:17">xen_be_printf</name><argument_list pos:start="15:18" pos:end="21:77">(<argument pos:start="15:19" pos:end="15:33"><expr pos:start="15:19" pos:end="15:33"><operator pos:start="15:19" pos:end="15:19">&amp;</operator><name pos:start="15:20" pos:end="15:33"><name pos:start="15:20" pos:end="15:25">blkdev</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:33">xendev</name></name></expr></argument>, <argument pos:start="15:36" pos:end="15:36"><expr pos:start="15:36" pos:end="15:36"><literal type="number" pos:start="15:36" pos:end="15:36">3</literal></expr></argument>,

		  <argument pos:start="17:19" pos:end="17:81"><expr pos:start="17:19" pos:end="17:81"><literal type="string" pos:start="17:19" pos:end="17:49">"op %d, nr %d, handle %d, id %"</literal> <name pos:start="17:51" pos:end="17:56">PRId64</name> <literal type="string" pos:start="17:58" pos:end="17:69">", sector %"</literal> <name pos:start="17:71" pos:end="17:76">PRId64</name> <literal type="string" pos:start="17:78" pos:end="17:81">"\n"</literal></expr></argument>,

		  <argument pos:start="19:19" pos:end="19:38"><expr pos:start="19:19" pos:end="19:38"><name pos:start="19:19" pos:end="19:38"><name pos:start="19:19" pos:end="19:23">ioreq</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:28">req</name><operator pos:start="19:29" pos:end="19:29">.</operator><name pos:start="19:30" pos:end="19:38">operation</name></name></expr></argument>, <argument pos:start="19:41" pos:end="19:62"><expr pos:start="19:41" pos:end="19:62"><name pos:start="19:41" pos:end="19:62"><name pos:start="19:41" pos:end="19:45">ioreq</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:50">req</name><operator pos:start="19:51" pos:end="19:51">.</operator><name pos:start="19:52" pos:end="19:62">nr_segments</name></name></expr></argument>,

		  <argument pos:start="21:19" pos:end="21:35"><expr pos:start="21:19" pos:end="21:35"><name pos:start="21:19" pos:end="21:35"><name pos:start="21:19" pos:end="21:23">ioreq</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:28">req</name><operator pos:start="21:29" pos:end="21:29">.</operator><name pos:start="21:30" pos:end="21:35">handle</name></name></expr></argument>, <argument pos:start="21:38" pos:end="21:50"><expr pos:start="21:38" pos:end="21:50"><name pos:start="21:38" pos:end="21:50"><name pos:start="21:38" pos:end="21:42">ioreq</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:47">req</name><operator pos:start="21:48" pos:end="21:48">.</operator><name pos:start="21:49" pos:end="21:50">id</name></name></expr></argument>, <argument pos:start="21:53" pos:end="21:76"><expr pos:start="21:53" pos:end="21:76"><name pos:start="21:53" pos:end="21:76"><name pos:start="21:53" pos:end="21:57">ioreq</name><operator pos:start="21:58" pos:end="21:59">-&gt;</operator><name pos:start="21:60" pos:end="21:62">req</name><operator pos:start="21:63" pos:end="21:63">.</operator><name pos:start="21:64" pos:end="21:76">sector_number</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="23:5" pos:end="65:5">switch <condition pos:start="23:12" pos:end="23:33">(<expr pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:17">ioreq</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:22">req</name><operator pos:start="23:23" pos:end="23:23">.</operator><name pos:start="23:24" pos:end="23:32">operation</name></name></expr>)</condition> <block pos:start="23:35" pos:end="65:5">{<block_content pos:start="25:5" pos:end="63:17">

    <case pos:start="25:5" pos:end="25:23">case <expr pos:start="25:10" pos:end="25:22"><name pos:start="25:10" pos:end="25:22">BLKIF_OP_READ</name></expr>:</case>

	<expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:13">ioreq</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:19">prot</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:32">PROT_WRITE</name></expr>;</expr_stmt> <comment type="block" pos:start="27:35" pos:end="27:49">/* to memory */</comment>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:76">(<expr pos:start="29:13" pos:end="29:75"><name pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:17">ioreq</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:22">req</name><operator pos:start="29:23" pos:end="29:23">.</operator><name pos:start="29:24" pos:end="29:32">operation</name></name> <operator pos:start="29:34" pos:end="29:35">!=</operator> <name pos:start="29:37" pos:end="29:49">BLKIF_OP_READ</name> <operator pos:start="29:51" pos:end="29:52">&amp;&amp;</operator> <name pos:start="29:54" pos:end="29:68"><name pos:start="29:54" pos:end="29:59">blkdev</name><operator pos:start="29:60" pos:end="29:61">-&gt;</operator><name pos:start="29:62" pos:end="29:65">mode</name><index pos:start="29:66" pos:end="29:68">[<expr pos:start="29:67" pos:end="29:67"><literal type="number" pos:start="29:67" pos:end="29:67">0</literal></expr>]</index></name> <operator pos:start="29:70" pos:end="29:71">!=</operator> <literal type="char" pos:start="29:73" pos:end="29:75">'w'</literal></expr>)</condition> <block pos:start="29:78" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:21">

	    <expr_stmt pos:start="31:13" pos:end="31:82"><expr pos:start="31:13" pos:end="31:81"><call pos:start="31:13" pos:end="31:81"><name pos:start="31:13" pos:end="31:25">xen_be_printf</name><argument_list pos:start="31:26" pos:end="31:81">(<argument pos:start="31:27" pos:end="31:41"><expr pos:start="31:27" pos:end="31:41"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:41"><name pos:start="31:28" pos:end="31:33">blkdev</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:41">xendev</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:44"><expr pos:start="31:44" pos:end="31:44"><literal type="number" pos:start="31:44" pos:end="31:44">0</literal></expr></argument>, <argument pos:start="31:47" pos:end="31:80"><expr pos:start="31:47" pos:end="31:80"><literal type="string" pos:start="31:47" pos:end="31:80">"error: write req for ro device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <goto pos:start="33:13" pos:end="33:21">goto <name pos:start="33:18" pos:end="33:20">err</name>;</goto>

	</block_content>}</block></if></if_stmt>

	<break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:32">case <expr pos:start="39:10" pos:end="39:31"><name pos:start="39:10" pos:end="39:31">BLKIF_OP_WRITE_BARRIER</name></expr>:</case>

	<if_stmt pos:start="41:9" pos:end="43:49"><if pos:start="41:9" pos:end="43:49">if <condition pos:start="41:12" pos:end="41:23">(<expr pos:start="41:13" pos:end="41:22"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:22">syncwrite</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:49"><block_content pos:start="43:13" pos:end="43:49">

	    <expr_stmt pos:start="43:13" pos:end="43:49"><expr pos:start="43:13" pos:end="43:48"><name pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:17">ioreq</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:26">presync</name></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <name pos:start="43:30" pos:end="43:44"><name pos:start="43:30" pos:end="43:34">ioreq</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:44">postsync</name></name> <operator pos:start="43:46" pos:end="43:46">=</operator> <literal type="number" pos:start="43:48" pos:end="43:48">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<comment type="block" pos:start="45:9" pos:end="45:26">/* fall through */</comment>

    <case pos:start="47:5" pos:end="47:24">case <expr pos:start="47:10" pos:end="47:23"><name pos:start="47:10" pos:end="47:23">BLKIF_OP_WRITE</name></expr>:</case>

	<expr_stmt pos:start="49:9" pos:end="49:32"><expr pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:13">ioreq</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:19">prot</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:31">PROT_READ</name></expr>;</expr_stmt> <comment type="block" pos:start="49:34" pos:end="49:50">/* from memory */</comment>

	<if_stmt pos:start="51:9" pos:end="53:32"><if pos:start="51:9" pos:end="53:32">if <condition pos:start="51:12" pos:end="51:22">(<expr pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:21">syncwrite</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:32"><block_content pos:start="53:13" pos:end="53:32">

	    <expr_stmt pos:start="53:13" pos:end="53:32"><expr pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:17">ioreq</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:27">postsync</name></name> <operator pos:start="53:29" pos:end="53:29">=</operator> <literal type="number" pos:start="53:31" pos:end="53:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<break pos:start="55:9" pos:end="55:14">break;</break>

    <default pos:start="57:5" pos:end="57:12">default:</default>

	<expr_stmt pos:start="59:9" pos:end="61:44"><expr pos:start="59:9" pos:end="61:43"><call pos:start="59:9" pos:end="61:43"><name pos:start="59:9" pos:end="59:21">xen_be_printf</name><argument_list pos:start="59:22" pos:end="61:43">(<argument pos:start="59:23" pos:end="59:37"><expr pos:start="59:23" pos:end="59:37"><operator pos:start="59:23" pos:end="59:23">&amp;</operator><name pos:start="59:24" pos:end="59:37"><name pos:start="59:24" pos:end="59:29">blkdev</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:37">xendev</name></name></expr></argument>, <argument pos:start="59:40" pos:end="59:40"><expr pos:start="59:40" pos:end="59:40"><literal type="number" pos:start="59:40" pos:end="59:40">0</literal></expr></argument>, <argument pos:start="59:43" pos:end="59:75"><expr pos:start="59:43" pos:end="59:75"><literal type="string" pos:start="59:43" pos:end="59:75">"error: unknown operation (%d)\n"</literal></expr></argument>,

		      <argument pos:start="61:23" pos:end="61:42"><expr pos:start="61:23" pos:end="61:42"><name pos:start="61:23" pos:end="61:42"><name pos:start="61:23" pos:end="61:27">ioreq</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:32">req</name><operator pos:start="61:33" pos:end="61:33">.</operator><name pos:start="61:34" pos:end="61:42">operation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<goto pos:start="63:9" pos:end="63:17">goto <name pos:start="63:14" pos:end="63:16">err</name>;</goto>

    </block_content>}</block></switch><empty_stmt pos:start="65:6" pos:end="65:6">;</empty_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:63"><expr pos:start="69:5" pos:end="69:62"><name pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:9">ioreq</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:16">start</name></name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:43"><name pos:start="69:20" pos:end="69:24">ioreq</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:29">req</name><operator pos:start="69:30" pos:end="69:30">.</operator><name pos:start="69:31" pos:end="69:43">sector_number</name></name> <operator pos:start="69:45" pos:end="69:45">*</operator> <name pos:start="69:47" pos:end="69:62"><name pos:start="69:47" pos:end="69:52">blkdev</name><operator pos:start="69:53" pos:end="69:54">-&gt;</operator><name pos:start="69:55" pos:end="69:62">file_blk</name></name></expr>;</expr_stmt>

    <for pos:start="71:5" pos:end="111:5">for <control pos:start="71:9" pos:end="71:48">(<init pos:start="71:10" pos:end="71:15"><expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:10">i</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>;</init> <condition pos:start="71:17" pos:end="71:43"><expr pos:start="71:17" pos:end="71:42"><name pos:start="71:17" pos:end="71:17">i</name> <operator pos:start="71:19" pos:end="71:19">&lt;</operator> <name pos:start="71:21" pos:end="71:42"><name pos:start="71:21" pos:end="71:25">ioreq</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:30">req</name><operator pos:start="71:31" pos:end="71:31">.</operator><name pos:start="71:32" pos:end="71:42">nr_segments</name></name></expr>;</condition> <incr pos:start="71:45" pos:end="71:47"><expr pos:start="71:45" pos:end="71:47"><name pos:start="71:45" pos:end="71:45">i</name><operator pos:start="71:46" pos:end="71:47">++</operator></expr></incr>)</control> <block pos:start="71:50" pos:end="111:5">{<block_content pos:start="73:9" pos:end="109:51">

	<if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:48">(<expr pos:start="73:13" pos:end="73:47"><name pos:start="73:13" pos:end="73:13">i</name> <operator pos:start="73:15" pos:end="73:16">==</operator> <name pos:start="73:18" pos:end="73:47">BLKIF_MAX_SEGMENTS_PER_REQUEST</name></expr>)</condition> <block pos:start="73:50" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:21">

	    <expr_stmt pos:start="75:13" pos:end="75:78"><expr pos:start="75:13" pos:end="75:77"><call pos:start="75:13" pos:end="75:77"><name pos:start="75:13" pos:end="75:25">xen_be_printf</name><argument_list pos:start="75:26" pos:end="75:77">(<argument pos:start="75:27" pos:end="75:41"><expr pos:start="75:27" pos:end="75:41"><operator pos:start="75:27" pos:end="75:27">&amp;</operator><name pos:start="75:28" pos:end="75:41"><name pos:start="75:28" pos:end="75:33">blkdev</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:41">xendev</name></name></expr></argument>, <argument pos:start="75:44" pos:end="75:44"><expr pos:start="75:44" pos:end="75:44"><literal type="number" pos:start="75:44" pos:end="75:44">0</literal></expr></argument>, <argument pos:start="75:47" pos:end="75:76"><expr pos:start="75:47" pos:end="75:76"><literal type="string" pos:start="75:47" pos:end="75:76">"error: nr_segments too big\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <goto pos:start="77:13" pos:end="77:21">goto <name pos:start="77:18" pos:end="77:20">err</name>;</goto>

	</block_content>}</block></if></if_stmt>

	<if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:71">(<expr pos:start="81:13" pos:end="81:70"><name pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:17">ioreq</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:22">req</name><operator pos:start="81:23" pos:end="81:23">.</operator><name pos:start="81:24" pos:end="81:26">seg</name><index pos:start="81:27" pos:end="81:29">[<expr pos:start="81:28" pos:end="81:28"><name pos:start="81:28" pos:end="81:28">i</name></expr>]</index></name><operator pos:start="81:30" pos:end="81:30">.</operator><name pos:start="81:31" pos:end="81:40">first_sect</name> <operator pos:start="81:42" pos:end="81:42">&gt;</operator> <name pos:start="81:44" pos:end="81:60"><name pos:start="81:44" pos:end="81:48">ioreq</name><operator pos:start="81:49" pos:end="81:50">-&gt;</operator><name pos:start="81:51" pos:end="81:53">req</name><operator pos:start="81:54" pos:end="81:54">.</operator><name pos:start="81:55" pos:end="81:57">seg</name><index pos:start="81:58" pos:end="81:60">[<expr pos:start="81:59" pos:end="81:59"><name pos:start="81:59" pos:end="81:59">i</name></expr>]</index></name><operator pos:start="81:61" pos:end="81:61">.</operator><name pos:start="81:62" pos:end="81:70">last_sect</name></expr>)</condition> <block pos:start="81:73" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:21">

	    <expr_stmt pos:start="83:13" pos:end="83:78"><expr pos:start="83:13" pos:end="83:77"><call pos:start="83:13" pos:end="83:77"><name pos:start="83:13" pos:end="83:25">xen_be_printf</name><argument_list pos:start="83:26" pos:end="83:77">(<argument pos:start="83:27" pos:end="83:41"><expr pos:start="83:27" pos:end="83:41"><operator pos:start="83:27" pos:end="83:27">&amp;</operator><name pos:start="83:28" pos:end="83:41"><name pos:start="83:28" pos:end="83:33">blkdev</name><operator pos:start="83:34" pos:end="83:35">-&gt;</operator><name pos:start="83:36" pos:end="83:41">xendev</name></name></expr></argument>, <argument pos:start="83:44" pos:end="83:44"><expr pos:start="83:44" pos:end="83:44"><literal type="number" pos:start="83:44" pos:end="83:44">0</literal></expr></argument>, <argument pos:start="83:47" pos:end="83:76"><expr pos:start="83:47" pos:end="83:76"><literal type="string" pos:start="83:47" pos:end="83:76">"error: first &gt; last sector\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <goto pos:start="85:13" pos:end="85:21">goto <name pos:start="85:18" pos:end="85:20">err</name>;</goto>

	</block_content>}</block></if></if_stmt>

	<if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:69">(<expr pos:start="89:13" pos:end="89:68"><name pos:start="89:13" pos:end="89:29"><name pos:start="89:13" pos:end="89:17">ioreq</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:22">req</name><operator pos:start="89:23" pos:end="89:23">.</operator><name pos:start="89:24" pos:end="89:26">seg</name><index pos:start="89:27" pos:end="89:29">[<expr pos:start="89:28" pos:end="89:28"><name pos:start="89:28" pos:end="89:28">i</name></expr>]</index></name><operator pos:start="89:30" pos:end="89:30">.</operator><name pos:start="89:31" pos:end="89:39">last_sect</name> <operator pos:start="89:41" pos:end="89:41">*</operator> <name pos:start="89:43" pos:end="89:52">BLOCK_SIZE</name> <operator pos:start="89:54" pos:end="89:55">&gt;=</operator> <name pos:start="89:57" pos:end="89:68">XC_PAGE_SIZE</name></expr>)</condition> <block pos:start="89:71" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:21">

	    <expr_stmt pos:start="91:13" pos:end="91:72"><expr pos:start="91:13" pos:end="91:71"><call pos:start="91:13" pos:end="91:71"><name pos:start="91:13" pos:end="91:25">xen_be_printf</name><argument_list pos:start="91:26" pos:end="91:71">(<argument pos:start="91:27" pos:end="91:41"><expr pos:start="91:27" pos:end="91:41"><operator pos:start="91:27" pos:end="91:27">&amp;</operator><name pos:start="91:28" pos:end="91:41"><name pos:start="91:28" pos:end="91:33">blkdev</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:41">xendev</name></name></expr></argument>, <argument pos:start="91:44" pos:end="91:44"><expr pos:start="91:44" pos:end="91:44"><literal type="number" pos:start="91:44" pos:end="91:44">0</literal></expr></argument>, <argument pos:start="91:47" pos:end="91:70"><expr pos:start="91:47" pos:end="91:70"><literal type="string" pos:start="91:47" pos:end="91:70">"error: page crossing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <goto pos:start="93:13" pos:end="93:21">goto <name pos:start="93:18" pos:end="93:20">err</name>;</goto>

	</block_content>}</block></if></if_stmt>



	<expr_stmt pos:start="99:9" pos:end="99:46"><expr pos:start="99:9" pos:end="99:45"><name pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:13">ioreq</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:21">domids</name><index pos:start="99:22" pos:end="99:24">[<expr pos:start="99:23" pos:end="99:23"><name pos:start="99:23" pos:end="99:23">i</name></expr>]</index></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <name pos:start="99:28" pos:end="99:45"><name pos:start="99:28" pos:end="99:33">blkdev</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:41">xendev</name><operator pos:start="99:42" pos:end="99:42">.</operator><name pos:start="99:43" pos:end="99:45">dom</name></name></expr>;</expr_stmt>

	<expr_stmt pos:start="101:9" pos:end="101:50"><expr pos:start="101:9" pos:end="101:49"><name pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:13">ioreq</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:19">refs</name><index pos:start="101:20" pos:end="101:22">[<expr pos:start="101:21" pos:end="101:21"><name pos:start="101:21" pos:end="101:21">i</name></expr>]</index></name>   <operator pos:start="101:26" pos:end="101:26">=</operator> <name pos:start="101:28" pos:end="101:44"><name pos:start="101:28" pos:end="101:32">ioreq</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:37">req</name><operator pos:start="101:38" pos:end="101:38">.</operator><name pos:start="101:39" pos:end="101:41">seg</name><index pos:start="101:42" pos:end="101:44">[<expr pos:start="101:43" pos:end="101:43"><name pos:start="101:43" pos:end="101:43">i</name></expr>]</index></name><operator pos:start="101:45" pos:end="101:45">.</operator><name pos:start="101:46" pos:end="101:49">gref</name></expr>;</expr_stmt>



	<expr_stmt pos:start="105:9" pos:end="105:62"><expr pos:start="105:9" pos:end="105:61"><name pos:start="105:9" pos:end="105:11">mem</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <name pos:start="105:15" pos:end="105:31"><name pos:start="105:15" pos:end="105:19">ioreq</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:24">req</name><operator pos:start="105:25" pos:end="105:25">.</operator><name pos:start="105:26" pos:end="105:28">seg</name><index pos:start="105:29" pos:end="105:31">[<expr pos:start="105:30" pos:end="105:30"><name pos:start="105:30" pos:end="105:30">i</name></expr>]</index></name><operator pos:start="105:32" pos:end="105:32">.</operator><name pos:start="105:33" pos:end="105:42">first_sect</name> <operator pos:start="105:44" pos:end="105:44">*</operator> <name pos:start="105:46" pos:end="105:61"><name pos:start="105:46" pos:end="105:51">blkdev</name><operator pos:start="105:52" pos:end="105:53">-&gt;</operator><name pos:start="105:54" pos:end="105:61">file_blk</name></name></expr>;</expr_stmt>

	<expr_stmt pos:start="107:9" pos:end="107:98"><expr pos:start="107:9" pos:end="107:97"><name pos:start="107:9" pos:end="107:11">len</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <operator pos:start="107:15" pos:end="107:15">(</operator><name pos:start="107:16" pos:end="107:32"><name pos:start="107:16" pos:end="107:20">ioreq</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:25">req</name><operator pos:start="107:26" pos:end="107:26">.</operator><name pos:start="107:27" pos:end="107:29">seg</name><index pos:start="107:30" pos:end="107:32">[<expr pos:start="107:31" pos:end="107:31"><name pos:start="107:31" pos:end="107:31">i</name></expr>]</index></name><operator pos:start="107:33" pos:end="107:33">.</operator><name pos:start="107:34" pos:end="107:42">last_sect</name> <operator pos:start="107:44" pos:end="107:44">-</operator> <name pos:start="107:46" pos:end="107:62"><name pos:start="107:46" pos:end="107:50">ioreq</name><operator pos:start="107:51" pos:end="107:52">-&gt;</operator><name pos:start="107:53" pos:end="107:55">req</name><operator pos:start="107:56" pos:end="107:56">.</operator><name pos:start="107:57" pos:end="107:59">seg</name><index pos:start="107:60" pos:end="107:62">[<expr pos:start="107:61" pos:end="107:61"><name pos:start="107:61" pos:end="107:61">i</name></expr>]</index></name><operator pos:start="107:63" pos:end="107:63">.</operator><name pos:start="107:64" pos:end="107:73">first_sect</name> <operator pos:start="107:75" pos:end="107:75">+</operator> <literal type="number" pos:start="107:77" pos:end="107:77">1</literal><operator pos:start="107:78" pos:end="107:78">)</operator> <operator pos:start="107:80" pos:end="107:80">*</operator> <name pos:start="107:82" pos:end="107:97"><name pos:start="107:82" pos:end="107:87">blkdev</name><operator pos:start="107:88" pos:end="107:89">-&gt;</operator><name pos:start="107:90" pos:end="107:97">file_blk</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:51"><expr pos:start="109:9" pos:end="109:50"><call pos:start="109:9" pos:end="109:50"><name pos:start="109:9" pos:end="109:22">qemu_iovec_add</name><argument_list pos:start="109:23" pos:end="109:50">(<argument pos:start="109:24" pos:end="109:32"><expr pos:start="109:24" pos:end="109:32"><operator pos:start="109:24" pos:end="109:24">&amp;</operator><name pos:start="109:25" pos:end="109:32"><name pos:start="109:25" pos:end="109:29">ioreq</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:32">v</name></name></expr></argument>, <argument pos:start="109:35" pos:end="109:44"><expr pos:start="109:35" pos:end="109:44"><operator pos:start="109:35" pos:end="109:35">(</operator><name pos:start="109:36" pos:end="109:39">void</name><operator pos:start="109:40" pos:end="109:40">*</operator><operator pos:start="109:41" pos:end="109:41">)</operator><name pos:start="109:42" pos:end="109:44">mem</name></expr></argument>, <argument pos:start="109:47" pos:end="109:49"><expr pos:start="109:47" pos:end="109:49"><name pos:start="109:47" pos:end="109:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="113:5" pos:end="119:5"><if pos:start="113:5" pos:end="119:5">if <condition pos:start="113:8" pos:end="113:57">(<expr pos:start="113:9" pos:end="113:56"><name pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:13">ioreq</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:20">start</name></name> <operator pos:start="113:22" pos:end="113:22">+</operator> <name pos:start="113:24" pos:end="113:36"><name pos:start="113:24" pos:end="113:28">ioreq</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:31">v</name><operator pos:start="113:32" pos:end="113:32">.</operator><name pos:start="113:33" pos:end="113:36">size</name></name> <operator pos:start="113:38" pos:end="113:38">&gt;</operator> <name pos:start="113:40" pos:end="113:56"><name pos:start="113:40" pos:end="113:45">blkdev</name><operator pos:start="113:46" pos:end="113:47">-&gt;</operator><name pos:start="113:48" pos:end="113:56">file_size</name></name></expr>)</condition> <block pos:start="113:59" pos:end="119:5">{<block_content pos:start="115:9" pos:end="117:17">

	<expr_stmt pos:start="115:9" pos:end="115:80"><expr pos:start="115:9" pos:end="115:79"><call pos:start="115:9" pos:end="115:79"><name pos:start="115:9" pos:end="115:21">xen_be_printf</name><argument_list pos:start="115:22" pos:end="115:79">(<argument pos:start="115:23" pos:end="115:37"><expr pos:start="115:23" pos:end="115:37"><operator pos:start="115:23" pos:end="115:23">&amp;</operator><name pos:start="115:24" pos:end="115:37"><name pos:start="115:24" pos:end="115:29">blkdev</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:37">xendev</name></name></expr></argument>, <argument pos:start="115:40" pos:end="115:40"><expr pos:start="115:40" pos:end="115:40"><literal type="number" pos:start="115:40" pos:end="115:40">0</literal></expr></argument>, <argument pos:start="115:43" pos:end="115:78"><expr pos:start="115:43" pos:end="115:78"><literal type="string" pos:start="115:43" pos:end="115:78">"error: access beyond end of file\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<goto pos:start="117:9" pos:end="117:17">goto <name pos:start="117:14" pos:end="117:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><literal type="number" pos:start="121:12" pos:end="121:12">0</literal></expr>;</return>



<label pos:start="125:1" pos:end="125:4"><name pos:start="125:1" pos:end="125:3">err</name>:</label>

    <expr_stmt pos:start="127:5" pos:end="127:36"><expr pos:start="127:5" pos:end="127:35"><name pos:start="127:5" pos:end="127:17"><name pos:start="127:5" pos:end="127:9">ioreq</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:17">status</name></name> <operator pos:start="127:19" pos:end="127:19">=</operator> <name pos:start="127:21" pos:end="127:35">BLKIF_RSP_ERROR</name></expr>;</expr_stmt>

    <return pos:start="129:5" pos:end="129:14">return <expr pos:start="129:12" pos:end="129:13"><operator pos:start="129:12" pos:end="129:12">-</operator><literal type="number" pos:start="129:13" pos:end="129:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
