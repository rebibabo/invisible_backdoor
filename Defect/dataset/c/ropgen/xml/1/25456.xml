<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25456.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">qmp_migrate_set_cache_size</name><parameter_list pos:start="1:32" pos:end="1:60">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:39">int64_t</name></type> <name pos:start="1:41" pos:end="1:45">value</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:52">Error</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier><modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:36">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MigrationState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:45">= <expr pos:start="5:25" pos:end="5:45"><call pos:start="5:25" pos:end="5:45"><name pos:start="5:25" pos:end="5:43">migrate_get_current</name><argument_list pos:start="5:44" pos:end="5:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:20">new_size</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:30">/* Check for truncation */</comment>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:31">(<expr pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:13">value</name> <operator pos:start="13:15" pos:end="13:16">!=</operator> <operator pos:start="13:18" pos:end="13:18">(</operator><name pos:start="13:19" pos:end="13:24">size_t</name><operator pos:start="13:25" pos:end="13:25">)</operator><name pos:start="13:26" pos:end="13:30">value</name></expr>)</condition> <block pos:start="13:33" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:15">

        <expr_stmt pos:start="15:9" pos:end="17:45"><expr pos:start="15:9" pos:end="17:44"><call pos:start="15:9" pos:end="17:44"><name pos:start="15:9" pos:end="15:17">error_set</name><argument_list pos:start="15:18" pos:end="17:44">(<argument pos:start="15:19" pos:end="15:22"><expr pos:start="15:19" pos:end="15:22"><name pos:start="15:19" pos:end="15:22">errp</name></expr></argument>, <argument pos:start="15:25" pos:end="15:52"><expr pos:start="15:25" pos:end="15:52"><name pos:start="15:25" pos:end="15:52">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="15:55" pos:end="15:66"><expr pos:start="15:55" pos:end="15:66"><literal type="string" pos:start="15:55" pos:end="15:66">"cache size"</literal></expr></argument>,

                  <argument pos:start="17:19" pos:end="17:43"><expr pos:start="17:19" pos:end="17:43"><literal type="string" pos:start="17:19" pos:end="17:43">"exceeding address space"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:56">/* Cache should not be larger than guest ram size */</comment>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:34">(<expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:13">value</name> <operator pos:start="27:15" pos:end="27:15">&gt;</operator> <call pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:31">ram_bytes_total</name><argument_list pos:start="27:32" pos:end="27:33">()</argument_list></call></expr>)</condition> <block pos:start="27:36" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:15">

        <expr_stmt pos:start="29:9" pos:end="31:45"><expr pos:start="29:9" pos:end="31:44"><call pos:start="29:9" pos:end="31:44"><name pos:start="29:9" pos:end="29:17">error_set</name><argument_list pos:start="29:18" pos:end="31:44">(<argument pos:start="29:19" pos:end="29:22"><expr pos:start="29:19" pos:end="29:22"><name pos:start="29:19" pos:end="29:22">errp</name></expr></argument>, <argument pos:start="29:25" pos:end="29:52"><expr pos:start="29:25" pos:end="29:52"><name pos:start="29:25" pos:end="29:52">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="29:55" pos:end="29:66"><expr pos:start="29:55" pos:end="29:66"><literal type="string" pos:start="29:55" pos:end="29:66">"cache size"</literal></expr></argument>,

                  <argument pos:start="31:19" pos:end="31:43"><expr pos:start="31:19" pos:end="31:43"><literal type="string" pos:start="31:19" pos:end="31:43">"exceeds guest ram size "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:12">new_size</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:41"><name pos:start="39:16" pos:end="39:34">xbzrle_cache_resize</name><argument_list pos:start="39:35" pos:end="39:41">(<argument pos:start="39:36" pos:end="39:40"><expr pos:start="39:36" pos:end="39:40"><name pos:start="39:36" pos:end="39:40">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:16">new_size</name> <operator pos:start="41:18" pos:end="41:18">&lt;</operator> <literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr>)</condition> <block pos:start="41:23" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:15">

        <expr_stmt pos:start="43:9" pos:end="45:47"><expr pos:start="43:9" pos:end="45:46"><call pos:start="43:9" pos:end="45:46"><name pos:start="43:9" pos:end="43:17">error_set</name><argument_list pos:start="43:18" pos:end="45:46">(<argument pos:start="43:19" pos:end="43:22"><expr pos:start="43:19" pos:end="43:22"><name pos:start="43:19" pos:end="43:22">errp</name></expr></argument>, <argument pos:start="43:25" pos:end="43:52"><expr pos:start="43:25" pos:end="43:52"><name pos:start="43:25" pos:end="43:52">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="43:55" pos:end="43:66"><expr pos:start="43:55" pos:end="43:66"><literal type="string" pos:start="43:55" pos:end="43:66">"cache size"</literal></expr></argument>,

                  <argument pos:start="45:19" pos:end="45:45"><expr pos:start="45:19" pos:end="45:45"><literal type="string" pos:start="45:19" pos:end="45:45">"is smaller than page size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:24">xbzrle_cache_size</name></name> <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:35">new_size</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
