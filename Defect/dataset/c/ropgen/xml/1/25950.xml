<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25950.c" pos:tabs="8"><function pos:start="1:1" pos:end="237:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:34">MPA_encode_init</name><parameter_list pos:start="1:35" pos:end="1:57">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="237:1">{<block_content pos:start="5:5" pos:end="235:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">MpegAudioContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name> <init pos:start="5:25" pos:end="5:42">= <expr pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">freq</name> <init pos:start="7:14" pos:end="7:33">= <expr pos:start="7:16" pos:end="7:33"><name pos:start="7:16" pos:end="7:33"><name pos:start="7:16" pos:end="7:20">avctx</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:33">sample_rate</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">bitrate</name> <init pos:start="9:17" pos:end="9:33">= <expr pos:start="9:19" pos:end="9:33"><name pos:start="9:19" pos:end="9:33"><name pos:start="9:19" pos:end="9:23">avctx</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:33">bit_rate</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">channels</name> <init pos:start="11:18" pos:end="11:34">= <expr pos:start="11:20" pos:end="11:34"><name pos:start="11:20" pos:end="11:34"><name pos:start="11:20" pos:end="11:24">avctx</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:34">channels</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">v</name></decl>, <decl pos:start="13:15" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:19">table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">float</name></type> <name pos:start="15:11" pos:end="15:11">a</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:38">(<expr pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:16">channels</name> <operator pos:start="19:18" pos:end="19:19">&lt;=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal> <operator pos:start="19:23" pos:end="19:24">||</operator> <name pos:start="19:26" pos:end="19:33">channels</name> <operator pos:start="19:35" pos:end="19:35">&gt;</operator> <literal type="number" pos:start="19:37" pos:end="19:37">2</literal></expr>)</condition><block pos:start="19:39" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:31">

        <expr_stmt pos:start="21:9" pos:end="21:96"><expr pos:start="21:9" pos:end="21:95"><call pos:start="21:9" pos:end="21:95"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:95">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:84"><expr pos:start="21:37" pos:end="21:84"><literal type="string" pos:start="21:37" pos:end="21:84">"encoding %d channel(s) is not allowed in mp2\n"</literal></expr></argument>, <argument pos:start="21:87" pos:end="21:94"><expr pos:start="21:87" pos:end="21:94"><name pos:start="21:87" pos:end="21:94">channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:11">bitrate</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:21">bitrate</name> <operator pos:start="27:23" pos:end="27:23">/</operator> <literal type="number" pos:start="27:25" pos:end="27:28">1000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:18">nb_channels</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:29">channels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:39"><expr pos:start="31:5" pos:end="31:38"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:9">avctx</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">frame_size</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:38">MPA_FRAME_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:9">avctx</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:16">delay</name></name>      <operator pos:start="33:23" pos:end="33:23">=</operator> <literal type="number" pos:start="33:25" pos:end="33:29">512</literal> <operator pos:start="33:29" pos:end="33:29">-</operator> <literal type="number" pos:start="33:31" pos:end="33:34">32</literal> <operator pos:start="33:34" pos:end="33:34">+</operator> <literal type="number" pos:start="33:36" pos:end="33:36">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:23">/* encoding freq */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:15"><expr pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:10">lsf</name></name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</expr_stmt>

    <for pos:start="41:5" pos:end="55:5">for<control pos:start="41:8" pos:end="41:20">(<init pos:start="41:9" pos:end="41:12"><expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:9">i</name><operator pos:start="41:10" pos:end="41:10">=</operator><literal type="number" pos:start="41:11" pos:end="41:11">0</literal></expr>;</init><condition pos:start="41:13" pos:end="41:16"><expr pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:13">i</name><operator pos:start="41:14" pos:end="41:14">&lt;</operator><literal type="number" pos:start="41:15" pos:end="41:15">3</literal></expr>;</condition><incr pos:start="41:17" pos:end="41:19"><expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:17">i</name><operator pos:start="41:18" pos:end="41:19">++</operator></expr></incr>)</control> <block pos:start="41:22" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:9">

        <if_stmt pos:start="43:9" pos:end="45:18"><if pos:start="43:9" pos:end="45:18">if <condition pos:start="43:12" pos:end="43:43">(<expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:31">avpriv_mpa_freq_tab</name><index pos:start="43:32" pos:end="43:34">[<expr pos:start="43:33" pos:end="43:33"><name pos:start="43:33" pos:end="43:33">i</name></expr>]</index></name> <operator pos:start="43:36" pos:end="43:37">==</operator> <name pos:start="43:39" pos:end="43:42">freq</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:18"><block_content pos:start="45:13" pos:end="45:18">

            <break pos:start="45:13" pos:end="45:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:49">(<expr pos:start="47:13" pos:end="47:48"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:35"><name pos:start="47:14" pos:end="47:32">avpriv_mpa_freq_tab</name><index pos:start="47:33" pos:end="47:35">[<expr pos:start="47:34" pos:end="47:34"><name pos:start="47:34" pos:end="47:34">i</name></expr>]</index></name> <operator pos:start="47:37" pos:end="47:37">/</operator> <literal type="number" pos:start="47:39" pos:end="47:39">2</literal><operator pos:start="47:40" pos:end="47:40">)</operator> <operator pos:start="47:42" pos:end="47:43">==</operator> <name pos:start="47:45" pos:end="47:48">freq</name></expr>)</condition> <block pos:start="47:51" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:18">

            <expr_stmt pos:start="49:13" pos:end="49:23"><expr pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:18"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:18">lsf</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">1</literal></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:15">(<expr pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:9">i</name> <operator pos:start="57:11" pos:end="57:12">==</operator> <literal type="number" pos:start="57:14" pos:end="57:14">3</literal></expr>)</condition><block pos:start="57:16" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:31">

        <expr_stmt pos:start="59:9" pos:end="59:86"><expr pos:start="59:9" pos:end="59:85"><call pos:start="59:9" pos:end="59:85"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="59:85">(<argument pos:start="59:16" pos:end="59:20"><expr pos:start="59:16" pos:end="59:20"><name pos:start="59:16" pos:end="59:20">avctx</name></expr></argument>, <argument pos:start="59:23" pos:end="59:34"><expr pos:start="59:23" pos:end="59:34"><name pos:start="59:23" pos:end="59:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:37" pos:end="59:78"><expr pos:start="59:37" pos:end="59:78"><literal type="string" pos:start="59:37" pos:end="59:78">"Sampling rate %d is not allowed in mp2\n"</literal></expr></argument>, <argument pos:start="59:81" pos:end="59:84"><expr pos:start="59:81" pos:end="59:84"><name pos:start="59:81" pos:end="59:84">freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:31">return <expr pos:start="61:16" pos:end="61:30"><call pos:start="61:16" pos:end="61:30"><name pos:start="61:16" pos:end="61:22">AVERROR</name><argument_list pos:start="61:23" pos:end="61:30">(<argument pos:start="61:24" pos:end="61:29"><expr pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:22"><expr pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:17">freq_index</name></name> <operator pos:start="65:19" pos:end="65:19">=</operator> <name pos:start="65:21" pos:end="65:21">i</name></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:38">/* encoding bitrate &amp; frequency */</comment>

    <for pos:start="71:5" pos:end="77:5">for<control pos:start="71:8" pos:end="71:21">(<init pos:start="71:9" pos:end="71:12"><expr pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:9">i</name><operator pos:start="71:10" pos:end="71:10">=</operator><literal type="number" pos:start="71:11" pos:end="71:11">0</literal></expr>;</init><condition pos:start="71:13" pos:end="71:17"><expr pos:start="71:13" pos:end="71:16"><name pos:start="71:13" pos:end="71:13">i</name><operator pos:start="71:14" pos:end="71:14">&lt;</operator><literal type="number" pos:start="71:15" pos:end="71:16">15</literal></expr>;</condition><incr pos:start="71:18" pos:end="71:20"><expr pos:start="71:18" pos:end="71:20"><name pos:start="71:18" pos:end="71:18">i</name><operator pos:start="71:19" pos:end="71:20">++</operator></expr></incr>)</control> <block pos:start="71:23" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:18">

        <if_stmt pos:start="73:9" pos:end="75:18"><if pos:start="73:9" pos:end="75:18">if <condition pos:start="73:12" pos:end="73:60">(<expr pos:start="73:13" pos:end="73:59"><name pos:start="73:13" pos:end="73:48"><name pos:start="73:13" pos:end="73:34">avpriv_mpa_bitrate_tab</name><index pos:start="73:35" pos:end="73:42">[<expr pos:start="73:36" pos:end="73:41"><name pos:start="73:36" pos:end="73:41"><name pos:start="73:36" pos:end="73:36">s</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:41">lsf</name></name></expr>]</index><index pos:start="73:43" pos:end="73:45">[<expr pos:start="73:44" pos:end="73:44"><literal type="number" pos:start="73:44" pos:end="73:44">1</literal></expr>]</index><index pos:start="73:46" pos:end="73:48">[<expr pos:start="73:47" pos:end="73:47"><name pos:start="73:47" pos:end="73:47">i</name></expr>]</index></name> <operator pos:start="73:50" pos:end="73:51">==</operator> <name pos:start="73:53" pos:end="73:59">bitrate</name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:18"><block_content pos:start="75:13" pos:end="75:18">

            <break pos:start="75:13" pos:end="75:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:16">(<expr pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:9">i</name> <operator pos:start="79:11" pos:end="79:12">==</operator> <literal type="number" pos:start="79:14" pos:end="79:15">15</literal></expr>)</condition><block pos:start="79:17" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:31">

        <expr_stmt pos:start="81:9" pos:end="81:83"><expr pos:start="81:9" pos:end="81:82"><call pos:start="81:9" pos:end="81:82"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:82">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:20">avctx</name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:37" pos:end="81:72"><expr pos:start="81:37" pos:end="81:72"><literal type="string" pos:start="81:37" pos:end="81:72">"bitrate %d is not allowed in mp2\n"</literal></expr></argument>, <argument pos:start="81:75" pos:end="81:81"><expr pos:start="81:75" pos:end="81:81"><name pos:start="81:75" pos:end="81:81">bitrate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:31">return <expr pos:start="83:16" pos:end="83:30"><call pos:start="83:16" pos:end="83:30"><name pos:start="83:16" pos:end="83:22">AVERROR</name><argument_list pos:start="83:23" pos:end="83:30">(<argument pos:start="83:24" pos:end="83:29"><expr pos:start="83:24" pos:end="83:29"><name pos:start="83:24" pos:end="83:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:25"><expr pos:start="87:5" pos:end="87:24"><name pos:start="87:5" pos:end="87:20"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:20">bitrate_index</name></name> <operator pos:start="87:22" pos:end="87:22">=</operator> <name pos:start="87:24" pos:end="87:24">i</name></expr>;</expr_stmt>



    <comment type="block" pos:start="91:5" pos:end="91:45">/* compute total header size &amp; pad bit */</comment>



    <expr_stmt pos:start="95:5" pos:end="95:64"><expr pos:start="95:5" pos:end="95:63"><name pos:start="95:5" pos:end="95:5">a</name> <operator pos:start="95:7" pos:end="95:7">=</operator> <operator pos:start="95:9" pos:end="95:9">(</operator><name pos:start="95:10" pos:end="95:14">float</name><operator pos:start="95:15" pos:end="95:15">)</operator><operator pos:start="95:16" pos:end="95:16">(</operator><name pos:start="95:17" pos:end="95:23">bitrate</name> <operator pos:start="95:25" pos:end="95:25">*</operator> <literal type="number" pos:start="95:27" pos:end="95:30">1000</literal> <operator pos:start="95:32" pos:end="95:32">*</operator> <name pos:start="95:34" pos:end="95:47">MPA_FRAME_SIZE</name><operator pos:start="95:48" pos:end="95:48">)</operator> <operator pos:start="95:50" pos:end="95:50">/</operator> <operator pos:start="95:52" pos:end="95:52">(</operator><name pos:start="95:53" pos:end="95:56">freq</name> <operator pos:start="95:58" pos:end="95:58">*</operator> <literal type="number" pos:start="95:60" pos:end="95:62">8.0</literal><operator pos:start="95:63" pos:end="95:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:33"><expr pos:start="97:5" pos:end="97:32"><name pos:start="97:5" pos:end="97:17"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:17">frame_size</name></name> <operator pos:start="97:19" pos:end="97:19">=</operator> <operator pos:start="97:21" pos:end="97:21">(</operator><operator pos:start="97:22" pos:end="97:22">(</operator><name pos:start="97:23" pos:end="97:25">int</name><operator pos:start="97:26" pos:end="97:26">)</operator><name pos:start="97:27" pos:end="97:27">a</name><operator pos:start="97:28" pos:end="97:28">)</operator> <operator pos:start="97:30" pos:end="97:30">*</operator> <literal type="number" pos:start="97:32" pos:end="97:32">8</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="101:5" pos:end="101:50">/* frame fractional size to compute padding */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:22"><expr pos:start="103:5" pos:end="103:21"><name pos:start="103:5" pos:end="103:17"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:17">frame_frac</name></name> <operator pos:start="103:19" pos:end="103:19">=</operator> <literal type="number" pos:start="103:21" pos:end="103:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:57"><expr pos:start="105:5" pos:end="105:56"><name pos:start="105:5" pos:end="105:22"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:22">frame_frac_incr</name></name> <operator pos:start="105:24" pos:end="105:24">=</operator> <operator pos:start="105:26" pos:end="105:26">(</operator><name pos:start="105:27" pos:end="105:29">int</name><operator pos:start="105:30" pos:end="105:30">)</operator><operator pos:start="105:31" pos:end="105:31">(</operator><operator pos:start="105:32" pos:end="105:32">(</operator><name pos:start="105:33" pos:end="105:33">a</name> <operator pos:start="105:35" pos:end="105:35">-</operator> <call pos:start="105:37" pos:end="105:44"><name pos:start="105:37" pos:end="105:41">floor</name><argument_list pos:start="105:42" pos:end="105:44">(<argument pos:start="105:43" pos:end="105:43"><expr pos:start="105:43" pos:end="105:43"><name pos:start="105:43" pos:end="105:43">a</name></expr></argument>)</argument_list></call><operator pos:start="105:45" pos:end="105:45">)</operator> <operator pos:start="105:47" pos:end="105:47">*</operator> <literal type="number" pos:start="105:49" pos:end="105:55">65536.0</literal><operator pos:start="105:56" pos:end="105:56">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:43">/* select the right allocation table */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:74"><expr pos:start="111:5" pos:end="111:73"><name pos:start="111:5" pos:end="111:9">table</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <call pos:start="111:13" pos:end="111:73"><name pos:start="111:13" pos:end="111:34">ff_mpa_l2_select_table</name><argument_list pos:start="111:35" pos:end="111:73">(<argument pos:start="111:36" pos:end="111:42"><expr pos:start="111:36" pos:end="111:42"><name pos:start="111:36" pos:end="111:42">bitrate</name></expr></argument>, <argument pos:start="111:45" pos:end="111:58"><expr pos:start="111:45" pos:end="111:58"><name pos:start="111:45" pos:end="111:58"><name pos:start="111:45" pos:end="111:45">s</name><operator pos:start="111:46" pos:end="111:47">-&gt;</operator><name pos:start="111:48" pos:end="111:58">nb_channels</name></name></expr></argument>, <argument pos:start="111:61" pos:end="111:64"><expr pos:start="111:61" pos:end="111:64"><name pos:start="111:61" pos:end="111:64">freq</name></expr></argument>, <argument pos:start="111:67" pos:end="111:72"><expr pos:start="111:67" pos:end="111:72"><name pos:start="111:67" pos:end="111:72"><name pos:start="111:67" pos:end="111:67">s</name><operator pos:start="111:68" pos:end="111:69">-&gt;</operator><name pos:start="111:70" pos:end="111:72">lsf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="115:5" pos:end="115:33">/* number of used subbands */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:45"><expr pos:start="117:5" pos:end="117:44"><name pos:start="117:5" pos:end="117:14"><name pos:start="117:5" pos:end="117:5">s</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:14">sblimit</name></name> <operator pos:start="117:16" pos:end="117:16">=</operator> <name pos:start="117:18" pos:end="117:44"><name pos:start="117:18" pos:end="117:37">ff_mpa_sblimit_table</name><index pos:start="117:38" pos:end="117:44">[<expr pos:start="117:39" pos:end="117:43"><name pos:start="117:39" pos:end="117:43">table</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:48"><expr pos:start="119:5" pos:end="119:47"><name pos:start="119:5" pos:end="119:18"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:18">alloc_table</name></name> <operator pos:start="119:20" pos:end="119:20">=</operator> <name pos:start="119:22" pos:end="119:47"><name pos:start="119:22" pos:end="119:40">ff_mpa_alloc_tables</name><index pos:start="119:41" pos:end="119:47">[<expr pos:start="119:42" pos:end="119:46"><name pos:start="119:42" pos:end="119:46">table</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="125:69"><expr pos:start="123:5" pos:end="125:68"><call pos:start="123:5" pos:end="125:68"><name pos:start="123:5" pos:end="123:11">av_dlog</name><argument_list pos:start="123:12" pos:end="125:68">(<argument pos:start="123:13" pos:end="123:17"><expr pos:start="123:13" pos:end="123:17"><name pos:start="123:13" pos:end="123:17">avctx</name></expr></argument>, <argument pos:start="123:20" pos:end="123:79"><expr pos:start="123:20" pos:end="123:79"><literal type="string" pos:start="123:20" pos:end="123:79">"%d kb/s, %d Hz, frame_size=%d bits, table=%d, padincr=%x\n"</literal></expr></argument>,

            <argument pos:start="125:13" pos:end="125:19"><expr pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:19">bitrate</name></expr></argument>, <argument pos:start="125:22" pos:end="125:25"><expr pos:start="125:22" pos:end="125:25"><name pos:start="125:22" pos:end="125:25">freq</name></expr></argument>, <argument pos:start="125:28" pos:end="125:40"><expr pos:start="125:28" pos:end="125:40"><name pos:start="125:28" pos:end="125:40"><name pos:start="125:28" pos:end="125:28">s</name><operator pos:start="125:29" pos:end="125:30">-&gt;</operator><name pos:start="125:31" pos:end="125:40">frame_size</name></name></expr></argument>, <argument pos:start="125:43" pos:end="125:47"><expr pos:start="125:43" pos:end="125:47"><name pos:start="125:43" pos:end="125:47">table</name></expr></argument>, <argument pos:start="125:50" pos:end="125:67"><expr pos:start="125:50" pos:end="125:67"><name pos:start="125:50" pos:end="125:67"><name pos:start="125:50" pos:end="125:50">s</name><operator pos:start="125:51" pos:end="125:52">-&gt;</operator><name pos:start="125:53" pos:end="125:67">frame_frac_incr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="129:5" pos:end="131:33">for<control pos:start="129:8" pos:end="129:33">(<init pos:start="129:9" pos:end="129:12"><expr pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:9">i</name><operator pos:start="129:10" pos:end="129:10">=</operator><literal type="number" pos:start="129:11" pos:end="129:11">0</literal></expr>;</init><condition pos:start="129:13" pos:end="129:29"><expr pos:start="129:13" pos:end="129:28"><name pos:start="129:13" pos:end="129:13">i</name><operator pos:start="129:14" pos:end="129:14">&lt;</operator><name pos:start="129:15" pos:end="129:28"><name pos:start="129:15" pos:end="129:15">s</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:28">nb_channels</name></name></expr>;</condition><incr pos:start="129:30" pos:end="129:32"><expr pos:start="129:30" pos:end="129:32"><name pos:start="129:30" pos:end="129:30">i</name><operator pos:start="129:31" pos:end="129:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="131:9" pos:end="131:33"><block_content pos:start="131:9" pos:end="131:33">

        <expr_stmt pos:start="131:9" pos:end="131:33"><expr pos:start="131:9" pos:end="131:32"><name pos:start="131:9" pos:end="131:28"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:25">samples_offset</name><index pos:start="131:26" pos:end="131:28">[<expr pos:start="131:27" pos:end="131:27"><name pos:start="131:27" pos:end="131:27">i</name></expr>]</index></name> <operator pos:start="131:30" pos:end="131:30">=</operator> <literal type="number" pos:start="131:32" pos:end="131:32">0</literal></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="135:5" pos:end="157:5">for<control pos:start="135:8" pos:end="135:22">(<init pos:start="135:9" pos:end="135:12"><expr pos:start="135:9" pos:end="135:11"><name pos:start="135:9" pos:end="135:9">i</name><operator pos:start="135:10" pos:end="135:10">=</operator><literal type="number" pos:start="135:11" pos:end="135:11">0</literal></expr>;</init><condition pos:start="135:13" pos:end="135:18"><expr pos:start="135:13" pos:end="135:17"><name pos:start="135:13" pos:end="135:13">i</name><operator pos:start="135:14" pos:end="135:14">&lt;</operator><literal type="number" pos:start="135:15" pos:end="135:17">257</literal></expr>;</condition><incr pos:start="135:19" pos:end="135:21"><expr pos:start="135:19" pos:end="135:21"><name pos:start="135:19" pos:end="135:19">i</name><operator pos:start="135:20" pos:end="135:21">++</operator></expr></incr>)</control> <block pos:start="135:24" pos:end="157:5">{<block_content pos:start="137:9" pos:end="155:40">

        <decl_stmt pos:start="137:9" pos:end="137:14"><decl pos:start="137:9" pos:end="137:13"><type pos:start="137:9" pos:end="137:11"><name pos:start="137:9" pos:end="137:11">int</name></type> <name pos:start="137:13" pos:end="137:13">v</name></decl>;</decl_stmt>

        <expr_stmt pos:start="139:9" pos:end="142:0"><expr pos:start="139:9" pos:end="139:30"><name pos:start="139:9" pos:end="139:9">v</name> <operator pos:start="139:11" pos:end="139:11">=</operator> <name pos:start="139:13" pos:end="139:30"><name pos:start="139:13" pos:end="139:27">ff_mpa_enwindow</name><index pos:start="139:28" pos:end="139:30">[<expr pos:start="139:29" pos:end="139:29"><name pos:start="139:29" pos:end="139:29">i</name></expr>]</index></name></expr>;</expr_stmt>

<cpp:if pos:start="141:1" pos:end="141:20">#<cpp:directive pos:start="141:2" pos:end="141:3">if</cpp:directive> <expr pos:start="141:5" pos:end="141:20"><name pos:start="141:5" pos:end="141:14">WFRAC_BITS</name> <operator pos:start="141:16" pos:end="141:17">!=</operator> <literal type="number" pos:start="141:19" pos:end="141:20">16</literal></expr></cpp:if>

        <expr_stmt pos:start="143:9" pos:end="146:0"><expr pos:start="143:9" pos:end="143:67"><name pos:start="143:9" pos:end="143:9">v</name> <operator pos:start="143:11" pos:end="143:11">=</operator> <operator pos:start="143:13" pos:end="143:13">(</operator><name pos:start="143:14" pos:end="143:14">v</name> <operator pos:start="143:16" pos:end="143:16">+</operator> <operator pos:start="143:18" pos:end="143:18">(</operator><literal type="number" pos:start="143:19" pos:end="143:19">1</literal> <operator pos:start="143:21" pos:end="143:22">&lt;&lt;</operator> <operator pos:start="143:24" pos:end="143:24">(</operator><literal type="number" pos:start="143:25" pos:end="143:28">16</literal> <operator pos:start="143:28" pos:end="143:28">-</operator> <name pos:start="143:30" pos:end="143:39">WFRAC_BITS</name> <operator pos:start="143:41" pos:end="143:41">-</operator> <literal type="number" pos:start="143:43" pos:end="143:43">1</literal><operator pos:start="143:44" pos:end="143:44">)</operator><operator pos:start="143:45" pos:end="143:45">)</operator><operator pos:start="143:46" pos:end="143:46">)</operator> <operator pos:start="143:48" pos:end="143:49">&gt;&gt;</operator> <operator pos:start="143:51" pos:end="143:51">(</operator><literal type="number" pos:start="143:52" pos:end="143:55">16</literal> <operator pos:start="143:55" pos:end="143:55">-</operator> <name pos:start="143:57" pos:end="143:66">WFRAC_BITS</name><operator pos:start="143:67" pos:end="143:67">)</operator></expr>;</expr_stmt>

<cpp:endif pos:start="145:1" pos:end="145:6">#<cpp:directive pos:start="145:2" pos:end="145:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="147:9" pos:end="147:30"><expr pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:25"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:22">filter_bank</name><index pos:start="147:23" pos:end="147:25">[<expr pos:start="147:24" pos:end="147:24"><name pos:start="147:24" pos:end="147:24">i</name></expr>]</index></name> <operator pos:start="147:27" pos:end="147:27">=</operator> <name pos:start="147:29" pos:end="147:29">v</name></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="151:19"><if pos:start="149:9" pos:end="151:19">if <condition pos:start="149:12" pos:end="149:26">(<expr pos:start="149:13" pos:end="149:25"><operator pos:start="149:13" pos:end="149:13">(</operator><name pos:start="149:14" pos:end="149:14">i</name> <operator pos:start="149:16" pos:end="149:16">&amp;</operator> <literal type="number" pos:start="149:18" pos:end="149:19">63</literal><operator pos:start="149:20" pos:end="149:20">)</operator> <operator pos:start="149:22" pos:end="149:23">!=</operator> <literal type="number" pos:start="149:25" pos:end="149:25">0</literal></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:19"><block_content pos:start="151:13" pos:end="151:19">

            <expr_stmt pos:start="151:13" pos:end="151:19"><expr pos:start="151:13" pos:end="151:18"><name pos:start="151:13" pos:end="151:13">v</name> <operator pos:start="151:15" pos:end="151:15">=</operator> <operator pos:start="151:17" pos:end="151:17">-</operator><name pos:start="151:18" pos:end="151:18">v</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="153:9" pos:end="155:40"><if pos:start="153:9" pos:end="155:40">if <condition pos:start="153:12" pos:end="153:19">(<expr pos:start="153:13" pos:end="153:18"><name pos:start="153:13" pos:end="153:13">i</name> <operator pos:start="153:15" pos:end="153:16">!=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:40"><block_content pos:start="155:13" pos:end="155:40">

            <expr_stmt pos:start="155:13" pos:end="155:40"><expr pos:start="155:13" pos:end="155:39"><name pos:start="155:13" pos:end="155:35"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:26">filter_bank</name><index pos:start="155:27" pos:end="155:35">[<expr pos:start="155:28" pos:end="155:34"><literal type="number" pos:start="155:28" pos:end="155:30">512</literal> <operator pos:start="155:32" pos:end="155:32">-</operator> <name pos:start="155:34" pos:end="155:34">i</name></expr>]</index></name> <operator pos:start="155:37" pos:end="155:37">=</operator> <name pos:start="155:39" pos:end="155:39">v</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="161:5" pos:end="185:5">for<control pos:start="161:8" pos:end="161:21">(<init pos:start="161:9" pos:end="161:12"><expr pos:start="161:9" pos:end="161:11"><name pos:start="161:9" pos:end="161:9">i</name><operator pos:start="161:10" pos:end="161:10">=</operator><literal type="number" pos:start="161:11" pos:end="161:11">0</literal></expr>;</init><condition pos:start="161:13" pos:end="161:17"><expr pos:start="161:13" pos:end="161:16"><name pos:start="161:13" pos:end="161:13">i</name><operator pos:start="161:14" pos:end="161:14">&lt;</operator><literal type="number" pos:start="161:15" pos:end="161:16">64</literal></expr>;</condition><incr pos:start="161:18" pos:end="161:20"><expr pos:start="161:18" pos:end="161:20"><name pos:start="161:18" pos:end="161:18">i</name><operator pos:start="161:19" pos:end="161:20">++</operator></expr></incr>)</control> <block pos:start="161:23" pos:end="185:5">{<block_content pos:start="163:9" pos:end="184:0">

        <expr_stmt pos:start="163:9" pos:end="163:51"><expr pos:start="163:9" pos:end="163:50"><name pos:start="163:9" pos:end="163:9">v</name> <operator pos:start="163:11" pos:end="163:11">=</operator> <operator pos:start="163:13" pos:end="163:13">(</operator><name pos:start="163:14" pos:end="163:16">int</name><operator pos:start="163:17" pos:end="163:17">)</operator><operator pos:start="163:18" pos:end="163:18">(</operator><call pos:start="163:19" pos:end="163:37"><name pos:start="163:19" pos:end="163:22">exp2</name><argument_list pos:start="163:23" pos:end="163:37">(<argument pos:start="163:24" pos:end="163:36"><expr pos:start="163:24" pos:end="163:36"><operator pos:start="163:24" pos:end="163:24">(</operator><literal type="number" pos:start="163:25" pos:end="163:27">3</literal> <operator pos:start="163:27" pos:end="163:27">-</operator> <name pos:start="163:29" pos:end="163:29">i</name><operator pos:start="163:30" pos:end="163:30">)</operator> <operator pos:start="163:32" pos:end="163:32">/</operator> <literal type="number" pos:start="163:34" pos:end="163:36">3.0</literal></expr></argument>)</argument_list></call> <operator pos:start="163:39" pos:end="163:39">*</operator> <operator pos:start="163:41" pos:end="163:41">(</operator><literal type="number" pos:start="163:42" pos:end="163:42">1</literal> <operator pos:start="163:44" pos:end="163:45">&lt;&lt;</operator> <literal type="number" pos:start="163:47" pos:end="163:48">20</literal><operator pos:start="163:49" pos:end="163:49">)</operator><operator pos:start="163:50" pos:end="163:50">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="167:18"><if pos:start="165:9" pos:end="167:18">if <condition pos:start="165:12" pos:end="165:19">(<expr pos:start="165:13" pos:end="165:18"><name pos:start="165:13" pos:end="165:13">v</name> <operator pos:start="165:15" pos:end="165:16">&lt;=</operator> <literal type="number" pos:start="165:18" pos:end="165:18">0</literal></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:18"><block_content pos:start="167:13" pos:end="167:18">

            <expr_stmt pos:start="167:13" pos:end="167:18"><expr pos:start="167:13" pos:end="167:17"><name pos:start="167:13" pos:end="167:13">v</name> <operator pos:start="167:15" pos:end="167:15">=</operator> <literal type="number" pos:start="167:17" pos:end="167:17">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="169:9" pos:end="172:0"><expr pos:start="169:9" pos:end="169:36"><name pos:start="169:9" pos:end="169:32"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:29">scale_factor_table</name><index pos:start="169:30" pos:end="169:32">[<expr pos:start="169:31" pos:end="169:31"><name pos:start="169:31" pos:end="169:31">i</name></expr>]</index></name> <operator pos:start="169:34" pos:end="169:34">=</operator> <name pos:start="169:36" pos:end="169:36">v</name></expr>;</expr_stmt>

<cpp:if pos:start="171:1" pos:end="171:14">#<cpp:directive pos:start="171:2" pos:end="171:3">if</cpp:directive> <expr pos:start="171:5" pos:end="171:14"><name pos:start="171:5" pos:end="171:14">USE_FLOATS</name></expr></cpp:if>

        <expr_stmt pos:start="173:9" pos:end="178:0"><expr pos:start="173:9" pos:end="173:78"><name pos:start="173:9" pos:end="173:36"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:33">scale_factor_inv_table</name><index pos:start="173:34" pos:end="173:36">[<expr pos:start="173:35" pos:end="173:35"><name pos:start="173:35" pos:end="173:35">i</name></expr>]</index></name> <operator pos:start="173:38" pos:end="173:38">=</operator> <call pos:start="173:40" pos:end="173:59"><name pos:start="173:40" pos:end="173:43">exp2</name><argument_list pos:start="173:44" pos:end="173:59">(<argument pos:start="173:45" pos:end="173:58"><expr pos:start="173:45" pos:end="173:58"><operator pos:start="173:45" pos:end="173:45">-</operator><operator pos:start="173:46" pos:end="173:46">(</operator><literal type="number" pos:start="173:47" pos:end="173:49">3</literal> <operator pos:start="173:49" pos:end="173:49">-</operator> <name pos:start="173:51" pos:end="173:51">i</name><operator pos:start="173:52" pos:end="173:52">)</operator> <operator pos:start="173:54" pos:end="173:54">/</operator> <literal type="number" pos:start="173:56" pos:end="173:58">3.0</literal></expr></argument>)</argument_list></call> <operator pos:start="173:61" pos:end="173:61">/</operator> <operator pos:start="173:63" pos:end="173:63">(</operator><name pos:start="173:64" pos:end="173:68">float</name><operator pos:start="173:69" pos:end="173:69">)</operator><operator pos:start="173:70" pos:end="173:70">(</operator><literal type="number" pos:start="173:71" pos:end="173:71">1</literal> <operator pos:start="173:73" pos:end="173:74">&lt;&lt;</operator> <literal type="number" pos:start="173:76" pos:end="173:77">20</literal><operator pos:start="173:78" pos:end="173:78">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="175:1" pos:end="175:5">#<cpp:directive pos:start="175:2" pos:end="175:5">else</cpp:directive></cpp:else>

<cpp:define pos:start="177:1" pos:end="177:12">#<cpp:directive pos:start="177:2" pos:end="177:7">define</cpp:directive> <cpp:macro pos:start="177:9" pos:end="177:9"><name pos:start="177:9" pos:end="177:9">P</name></cpp:macro> <cpp:value pos:start="177:11" pos:end="177:12">15</cpp:value></cpp:define>

        <expr_stmt pos:start="179:9" pos:end="179:52"><expr pos:start="179:9" pos:end="179:51"><name pos:start="179:9" pos:end="179:32"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:29">scale_factor_shift</name><index pos:start="179:30" pos:end="179:32">[<expr pos:start="179:31" pos:end="179:31"><name pos:start="179:31" pos:end="179:31">i</name></expr>]</index></name> <operator pos:start="179:34" pos:end="179:34">=</operator> <literal type="number" pos:start="179:36" pos:end="179:39">21</literal> <operator pos:start="179:39" pos:end="179:39">-</operator> <name pos:start="179:41" pos:end="179:41">P</name> <operator pos:start="179:43" pos:end="179:43">-</operator> <operator pos:start="179:45" pos:end="179:45">(</operator><name pos:start="179:46" pos:end="179:46">i</name> <operator pos:start="179:48" pos:end="179:48">/</operator> <literal type="number" pos:start="179:50" pos:end="179:50">3</literal><operator pos:start="179:51" pos:end="179:51">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="184:0"><expr pos:start="181:9" pos:end="181:64"><name pos:start="181:9" pos:end="181:31"><name pos:start="181:9" pos:end="181:9">s</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:28">scale_factor_mult</name><index pos:start="181:29" pos:end="181:31">[<expr pos:start="181:30" pos:end="181:30"><name pos:start="181:30" pos:end="181:30">i</name></expr>]</index></name> <operator pos:start="181:33" pos:end="181:33">=</operator> <operator pos:start="181:35" pos:end="181:35">(</operator><literal type="number" pos:start="181:36" pos:end="181:36">1</literal> <operator pos:start="181:38" pos:end="181:39">&lt;&lt;</operator> <name pos:start="181:41" pos:end="181:41">P</name><operator pos:start="181:42" pos:end="181:42">)</operator> <operator pos:start="181:44" pos:end="181:44">*</operator> <call pos:start="181:46" pos:end="181:64"><name pos:start="181:46" pos:end="181:49">exp2</name><argument_list pos:start="181:50" pos:end="181:64">(<argument pos:start="181:51" pos:end="181:63"><expr pos:start="181:51" pos:end="181:63"><operator pos:start="181:51" pos:end="181:51">(</operator><name pos:start="181:52" pos:end="181:52">i</name> <operator pos:start="181:54" pos:end="181:54">%</operator> <literal type="number" pos:start="181:56" pos:end="181:56">3</literal><operator pos:start="181:57" pos:end="181:57">)</operator> <operator pos:start="181:59" pos:end="181:59">/</operator> <literal type="number" pos:start="181:61" pos:end="181:63">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="183:1" pos:end="183:6">#<cpp:directive pos:start="183:2" pos:end="183:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>

    <for pos:start="187:5" pos:end="213:5">for<control pos:start="187:8" pos:end="187:22">(<init pos:start="187:9" pos:end="187:12"><expr pos:start="187:9" pos:end="187:11"><name pos:start="187:9" pos:end="187:9">i</name><operator pos:start="187:10" pos:end="187:10">=</operator><literal type="number" pos:start="187:11" pos:end="187:11">0</literal></expr>;</init><condition pos:start="187:13" pos:end="187:18"><expr pos:start="187:13" pos:end="187:17"><name pos:start="187:13" pos:end="187:13">i</name><operator pos:start="187:14" pos:end="187:14">&lt;</operator><literal type="number" pos:start="187:15" pos:end="187:17">128</literal></expr>;</condition><incr pos:start="187:19" pos:end="187:21"><expr pos:start="187:19" pos:end="187:21"><name pos:start="187:19" pos:end="187:19">i</name><operator pos:start="187:20" pos:end="187:21">++</operator></expr></incr>)</control> <block pos:start="187:24" pos:end="213:5">{<block_content pos:start="189:9" pos:end="211:35">

        <expr_stmt pos:start="189:9" pos:end="189:19"><expr pos:start="189:9" pos:end="189:18"><name pos:start="189:9" pos:end="189:9">v</name> <operator pos:start="189:11" pos:end="189:11">=</operator> <name pos:start="189:13" pos:end="189:13">i</name> <operator pos:start="189:15" pos:end="189:15">-</operator> <literal type="number" pos:start="189:17" pos:end="189:18">64</literal></expr>;</expr_stmt>

        <if_stmt pos:start="191:9" pos:end="209:18"><if pos:start="191:9" pos:end="193:18">if <condition pos:start="191:12" pos:end="191:20">(<expr pos:start="191:13" pos:end="191:19"><name pos:start="191:13" pos:end="191:13">v</name> <operator pos:start="191:15" pos:end="191:16">&lt;=</operator> <operator pos:start="191:18" pos:end="191:18">-</operator><literal type="number" pos:start="191:19" pos:end="191:19">3</literal></expr>)</condition><block type="pseudo" pos:start="193:13" pos:end="193:18"><block_content pos:start="193:13" pos:end="193:18">

            <expr_stmt pos:start="193:13" pos:end="193:18"><expr pos:start="193:13" pos:end="193:17"><name pos:start="193:13" pos:end="193:13">v</name> <operator pos:start="193:15" pos:end="193:15">=</operator> <literal type="number" pos:start="193:17" pos:end="193:17">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="195:9" pos:end="197:18">else if <condition pos:start="195:17" pos:end="195:23">(<expr pos:start="195:18" pos:end="195:22"><name pos:start="195:18" pos:end="195:18">v</name> <operator pos:start="195:20" pos:end="195:20">&lt;</operator> <literal type="number" pos:start="195:22" pos:end="195:22">0</literal></expr>)</condition><block type="pseudo" pos:start="197:13" pos:end="197:18"><block_content pos:start="197:13" pos:end="197:18">

            <expr_stmt pos:start="197:13" pos:end="197:18"><expr pos:start="197:13" pos:end="197:17"><name pos:start="197:13" pos:end="197:13">v</name> <operator pos:start="197:15" pos:end="197:15">=</operator> <literal type="number" pos:start="197:17" pos:end="197:17">1</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="199:9" pos:end="201:18">else if <condition pos:start="199:17" pos:end="199:24">(<expr pos:start="199:18" pos:end="199:23"><name pos:start="199:18" pos:end="199:18">v</name> <operator pos:start="199:20" pos:end="199:21">==</operator> <literal type="number" pos:start="199:23" pos:end="199:23">0</literal></expr>)</condition><block type="pseudo" pos:start="201:13" pos:end="201:18"><block_content pos:start="201:13" pos:end="201:18">

            <expr_stmt pos:start="201:13" pos:end="201:18"><expr pos:start="201:13" pos:end="201:17"><name pos:start="201:13" pos:end="201:13">v</name> <operator pos:start="201:15" pos:end="201:15">=</operator> <literal type="number" pos:start="201:17" pos:end="201:17">2</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="203:9" pos:end="205:18">else if <condition pos:start="203:17" pos:end="203:23">(<expr pos:start="203:18" pos:end="203:22"><name pos:start="203:18" pos:end="203:18">v</name> <operator pos:start="203:20" pos:end="203:20">&lt;</operator> <literal type="number" pos:start="203:22" pos:end="203:22">3</literal></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:18"><block_content pos:start="205:13" pos:end="205:18">

            <expr_stmt pos:start="205:13" pos:end="205:18"><expr pos:start="205:13" pos:end="205:17"><name pos:start="205:13" pos:end="205:13">v</name> <operator pos:start="205:15" pos:end="205:15">=</operator> <literal type="number" pos:start="205:17" pos:end="205:17">3</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="207:9" pos:end="209:18">else<block type="pseudo" pos:start="209:13" pos:end="209:18"><block_content pos:start="209:13" pos:end="209:18">

            <expr_stmt pos:start="209:13" pos:end="209:18"><expr pos:start="209:13" pos:end="209:17"><name pos:start="209:13" pos:end="209:13">v</name> <operator pos:start="209:15" pos:end="209:15">=</operator> <literal type="number" pos:start="209:17" pos:end="209:17">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:35"><expr pos:start="211:9" pos:end="211:34"><name pos:start="211:9" pos:end="211:30"><name pos:start="211:9" pos:end="211:9">s</name><operator pos:start="211:10" pos:end="211:11">-&gt;</operator><name pos:start="211:12" pos:end="211:27">scale_diff_table</name><index pos:start="211:28" pos:end="211:30">[<expr pos:start="211:29" pos:end="211:29"><name pos:start="211:29" pos:end="211:29">i</name></expr>]</index></name> <operator pos:start="211:32" pos:end="211:32">=</operator> <name pos:start="211:34" pos:end="211:34">v</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="217:5" pos:end="231:5">for<control pos:start="217:8" pos:end="217:21">(<init pos:start="217:9" pos:end="217:12"><expr pos:start="217:9" pos:end="217:11"><name pos:start="217:9" pos:end="217:9">i</name><operator pos:start="217:10" pos:end="217:10">=</operator><literal type="number" pos:start="217:11" pos:end="217:11">0</literal></expr>;</init><condition pos:start="217:13" pos:end="217:17"><expr pos:start="217:13" pos:end="217:16"><name pos:start="217:13" pos:end="217:13">i</name><operator pos:start="217:14" pos:end="217:14">&lt;</operator><literal type="number" pos:start="217:15" pos:end="217:16">17</literal></expr>;</condition><incr pos:start="217:18" pos:end="217:20"><expr pos:start="217:18" pos:end="217:20"><name pos:start="217:18" pos:end="217:18">i</name><operator pos:start="217:19" pos:end="217:20">++</operator></expr></incr>)</control> <block pos:start="217:23" pos:end="231:5">{<block_content pos:start="219:9" pos:end="229:40">

        <expr_stmt pos:start="219:9" pos:end="219:33"><expr pos:start="219:9" pos:end="219:32"><name pos:start="219:9" pos:end="219:9">v</name> <operator pos:start="219:11" pos:end="219:11">=</operator> <name pos:start="219:13" pos:end="219:32"><name pos:start="219:13" pos:end="219:29">ff_mpa_quant_bits</name><index pos:start="219:30" pos:end="219:32">[<expr pos:start="219:31" pos:end="219:31"><name pos:start="219:31" pos:end="219:31">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="227:22"><if pos:start="221:9" pos:end="223:19">if <condition pos:start="221:12" pos:end="221:18">(<expr pos:start="221:13" pos:end="221:17"><name pos:start="221:13" pos:end="221:13">v</name> <operator pos:start="221:15" pos:end="221:15">&lt;</operator> <literal type="number" pos:start="221:17" pos:end="221:17">0</literal></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="223:19"><block_content pos:start="223:13" pos:end="223:19">

            <expr_stmt pos:start="223:13" pos:end="223:19"><expr pos:start="223:13" pos:end="223:18"><name pos:start="223:13" pos:end="223:13">v</name> <operator pos:start="223:15" pos:end="223:15">=</operator> <operator pos:start="223:17" pos:end="223:17">-</operator><name pos:start="223:18" pos:end="223:18">v</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="225:9" pos:end="227:22">else<block type="pseudo" pos:start="227:13" pos:end="227:22"><block_content pos:start="227:13" pos:end="227:22">

            <expr_stmt pos:start="227:13" pos:end="227:22"><expr pos:start="227:13" pos:end="227:21"><name pos:start="227:13" pos:end="227:13">v</name> <operator pos:start="227:15" pos:end="227:15">=</operator> <name pos:start="227:17" pos:end="227:17">v</name> <operator pos:start="227:19" pos:end="227:19">*</operator> <literal type="number" pos:start="227:21" pos:end="227:21">3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:40"><expr pos:start="229:9" pos:end="229:39"><name pos:start="229:9" pos:end="229:30"><name pos:start="229:9" pos:end="229:9">s</name><operator pos:start="229:10" pos:end="229:11">-&gt;</operator><name pos:start="229:12" pos:end="229:27">total_quant_bits</name><index pos:start="229:28" pos:end="229:30">[<expr pos:start="229:29" pos:end="229:29"><name pos:start="229:29" pos:end="229:29">i</name></expr>]</index></name> <operator pos:start="229:32" pos:end="229:32">=</operator> <literal type="number" pos:start="229:34" pos:end="229:35">12</literal> <operator pos:start="229:37" pos:end="229:37">*</operator> <name pos:start="229:39" pos:end="229:39">v</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="235:5" pos:end="235:13">return <expr pos:start="235:12" pos:end="235:12"><literal type="number" pos:start="235:12" pos:end="235:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
