<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23790.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:31">do_data_decompress</name><parameter_list pos:start="1:32" pos:end="1:45">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:38"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:16">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">DecompressParam</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:26">param</name> <init pos:start="5:28" pos:end="5:35">= <expr pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:35">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">long</name></type> <name pos:start="7:19" pos:end="7:26">pagesize</name></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="45:5">while <condition pos:start="11:11" pos:end="11:31">(<expr pos:start="11:12" pos:end="11:30"><operator pos:start="11:12" pos:end="11:12">!</operator><name pos:start="11:13" pos:end="11:30">quit_decomp_thread</name></expr>)</condition> <block pos:start="11:33" pos:end="45:5">{<block_content pos:start="13:9" pos:end="43:41">

        <expr_stmt pos:start="13:9" pos:end="13:39"><expr pos:start="13:9" pos:end="13:38"><call pos:start="13:9" pos:end="13:38"><name pos:start="13:9" pos:end="13:23">qemu_mutex_lock</name><argument_list pos:start="13:24" pos:end="13:38">(<argument pos:start="13:25" pos:end="13:37"><expr pos:start="13:25" pos:end="13:37"><operator pos:start="13:25" pos:end="13:25">&amp;</operator><name pos:start="13:26" pos:end="13:37"><name pos:start="13:26" pos:end="13:30">param</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:37">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="15:9" pos:end="41:9">while <condition pos:start="15:15" pos:end="15:52">(<expr pos:start="15:16" pos:end="15:51"><operator pos:start="15:16" pos:end="15:16">!</operator><name pos:start="15:17" pos:end="15:28"><name pos:start="15:17" pos:end="15:21">param</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:28">start</name></name> <operator pos:start="15:30" pos:end="15:31">&amp;&amp;</operator> <operator pos:start="15:33" pos:end="15:33">!</operator><name pos:start="15:34" pos:end="15:51">quit_decomp_thread</name></expr>)</condition> <block pos:start="15:54" pos:end="41:9">{<block_content pos:start="17:13" pos:end="39:33">

            <expr_stmt pos:start="17:13" pos:end="17:56"><expr pos:start="17:13" pos:end="17:55"><call pos:start="17:13" pos:end="17:55"><name pos:start="17:13" pos:end="17:26">qemu_cond_wait</name><argument_list pos:start="17:27" pos:end="17:55">(<argument pos:start="17:28" pos:end="17:39"><expr pos:start="17:28" pos:end="17:39"><operator pos:start="17:28" pos:end="17:28">&amp;</operator><name pos:start="17:29" pos:end="17:39"><name pos:start="17:29" pos:end="17:33">param</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:39">cond</name></name></expr></argument>, <argument pos:start="17:42" pos:end="17:54"><expr pos:start="17:42" pos:end="17:54"><operator pos:start="17:42" pos:end="17:42">&amp;</operator><name pos:start="17:43" pos:end="17:54"><name pos:start="17:43" pos:end="17:47">param</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:54">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:40"><expr pos:start="19:13" pos:end="19:39"><name pos:start="19:13" pos:end="19:20">pagesize</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <name pos:start="19:24" pos:end="19:39">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

            <if_stmt pos:start="21:13" pos:end="37:13"><if pos:start="21:13" pos:end="37:13">if <condition pos:start="21:16" pos:end="21:36">(<expr pos:start="21:17" pos:end="21:35"><operator pos:start="21:17" pos:end="21:17">!</operator><name pos:start="21:18" pos:end="21:35">quit_decomp_thread</name></expr>)</condition> <block pos:start="21:38" pos:end="37:13">{<block_content pos:start="33:17" pos:end="35:70">

                <comment type="block" pos:start="23:17" pos:end="31:19">/* uncompress() will return failed in some case, especially

                 * when the page is dirted when doing the compression, it's

                 * not a problem because the dirty page will be retransferred

                 * and uncompress() won't break the data in other pages.

                 */</comment>

                <expr_stmt pos:start="33:17" pos:end="35:70"><expr pos:start="33:17" pos:end="35:69"><call pos:start="33:17" pos:end="35:69"><name pos:start="33:17" pos:end="33:26">uncompress</name><argument_list pos:start="33:27" pos:end="35:69">(<argument pos:start="33:28" pos:end="33:46"><expr pos:start="33:28" pos:end="33:46"><operator pos:start="33:28" pos:end="33:28">(</operator><name pos:start="33:29" pos:end="33:33">Bytef</name> <operator pos:start="33:35" pos:end="33:35">*</operator><operator pos:start="33:36" pos:end="33:36">)</operator><name pos:start="33:37" pos:end="33:46"><name pos:start="33:37" pos:end="33:41">param</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:46">des</name></name></expr></argument>, <argument pos:start="33:49" pos:end="33:57"><expr pos:start="33:49" pos:end="33:57"><operator pos:start="33:49" pos:end="33:49">&amp;</operator><name pos:start="33:50" pos:end="33:57">pagesize</name></expr></argument>,

                           <argument pos:start="35:28" pos:end="35:56"><expr pos:start="35:28" pos:end="35:56"><operator pos:start="35:28" pos:end="35:28">(</operator><specifier pos:start="35:29" pos:end="35:33">const</specifier> <name pos:start="35:35" pos:end="35:39">Bytef</name> <operator pos:start="35:41" pos:end="35:41">*</operator><operator pos:start="35:42" pos:end="35:42">)</operator><name pos:start="35:43" pos:end="35:56"><name pos:start="35:43" pos:end="35:47">param</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:56">compbuf</name></name></expr></argument>, <argument pos:start="35:59" pos:end="35:68"><expr pos:start="35:59" pos:end="35:68"><name pos:start="35:59" pos:end="35:68"><name pos:start="35:59" pos:end="35:63">param</name><operator pos:start="35:64" pos:end="35:65">-&gt;</operator><name pos:start="35:66" pos:end="35:68">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:33"><expr pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:17">param</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:24">start</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <name pos:start="39:28" pos:end="39:32">false</name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:25">qemu_mutex_unlock</name><argument_list pos:start="43:26" pos:end="43:40">(<argument pos:start="43:27" pos:end="43:39"><expr pos:start="43:27" pos:end="43:39"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:39"><name pos:start="43:28" pos:end="43:32">param</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:39">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="49:5" pos:end="49:16">return <expr pos:start="49:12" pos:end="49:15"><name pos:start="49:12" pos:end="49:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
