<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25183.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">parse_str</name><parameter_list pos:start="1:22" pos:end="1:60">(<parameter pos:start="1:23" pos:end="1:45"><decl pos:start="1:23" pos:end="1:45"><type pos:start="1:23" pos:end="1:45"><name pos:start="1:23" pos:end="1:40">StringInputVisitor</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">siv</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:52">Error</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier><modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:23">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">str</name> <init pos:start="5:15" pos:end="5:36">= <expr pos:start="5:17" pos:end="5:36"><operator pos:start="5:17" pos:end="5:17">(</operator><name pos:start="5:18" pos:end="5:21">char</name> <operator pos:start="5:23" pos:end="5:23">*</operator><operator pos:start="5:24" pos:end="5:24">)</operator> <name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:28">siv</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:36">string</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:8">long</name> <name pos:start="7:10" pos:end="7:13">long</name></type> <name pos:start="7:15" pos:end="7:19">start</name></decl>, <decl pos:start="7:22" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:13"/><name pos:start="7:22" pos:end="7:24">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Range</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">cur</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:16">endptr</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:11">siv</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:19">ranges</name></name></expr>)</condition> <block pos:start="15:22" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <do pos:start="23:5" pos:end="143:18">do <block pos:start="23:8" pos:end="143:5">{<block_content pos:start="25:9" pos:end="141:9">

        <expr_stmt pos:start="25:9" pos:end="25:18"><expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:13">errno</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:13">start</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:40"><name pos:start="27:17" pos:end="27:23">strtoll</name><argument_list pos:start="27:24" pos:end="27:40">(<argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">str</name></expr></argument>, <argument pos:start="27:30" pos:end="27:36"><expr pos:start="27:30" pos:end="27:36"><operator pos:start="27:30" pos:end="27:30">&amp;</operator><name pos:start="27:31" pos:end="27:36">endptr</name></expr></argument>, <argument pos:start="27:39" pos:end="27:39"><expr pos:start="27:39" pos:end="27:39"><literal type="number" pos:start="27:39" pos:end="27:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="141:9"><if pos:start="29:9" pos:end="137:9">if <condition pos:start="29:12" pos:end="29:39">(<expr pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:17">errno</name> <operator pos:start="29:19" pos:end="29:20">==</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal> <operator pos:start="29:24" pos:end="29:25">&amp;&amp;</operator> <name pos:start="29:27" pos:end="29:32">endptr</name> <operator pos:start="29:34" pos:end="29:34">&gt;</operator> <name pos:start="29:36" pos:end="29:38">str</name></expr>)</condition> <block pos:start="29:41" pos:end="137:9">{<block_content pos:start="31:13" pos:end="135:13">

            <if_stmt pos:start="31:13" pos:end="135:13"><if pos:start="31:13" pos:end="47:13">if <condition pos:start="31:16" pos:end="31:32">(<expr pos:start="31:17" pos:end="31:31"><operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:23">endptr</name> <operator pos:start="31:25" pos:end="31:26">==</operator> <literal type="char" pos:start="31:28" pos:end="31:31">'\0'</literal></expr>)</condition> <block pos:start="31:34" pos:end="47:13">{<block_content pos:start="33:17" pos:end="45:27">

                <expr_stmt pos:start="33:17" pos:end="33:46"><expr pos:start="33:17" pos:end="33:45"><name pos:start="33:17" pos:end="33:19">cur</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:45"><name pos:start="33:23" pos:end="33:31">g_malloc0</name><argument_list pos:start="33:32" pos:end="33:45">(<argument pos:start="33:33" pos:end="33:44"><expr pos:start="33:33" pos:end="33:44"><sizeof pos:start="33:33" pos:end="33:44">sizeof<argument_list pos:start="33:39" pos:end="33:44">(<argument pos:start="33:40" pos:end="33:43"><expr pos:start="33:40" pos:end="33:43"><operator pos:start="33:40" pos:end="33:40">*</operator><name pos:start="33:41" pos:end="33:43">cur</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:35"><expr pos:start="35:17" pos:end="35:34"><name pos:start="35:17" pos:end="35:26"><name pos:start="35:17" pos:end="35:19">cur</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:26">begin</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:34">start</name></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:37"><expr pos:start="37:17" pos:end="37:36"><name pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:19">cur</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:24">end</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:32">start</name> <operator pos:start="37:34" pos:end="37:34">+</operator> <literal type="number" pos:start="37:36" pos:end="37:36">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="41:73"><expr pos:start="39:17" pos:end="41:72"><name pos:start="39:17" pos:end="39:27"><name pos:start="39:17" pos:end="39:19">siv</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:27">ranges</name></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <call pos:start="39:31" pos:end="41:72"><name pos:start="39:31" pos:end="39:57">g_list_insert_sorted_merged</name><argument_list pos:start="39:58" pos:end="41:72">(<argument pos:start="39:59" pos:end="39:69"><expr pos:start="39:59" pos:end="39:69"><name pos:start="39:59" pos:end="39:69"><name pos:start="39:59" pos:end="39:61">siv</name><operator pos:start="39:62" pos:end="39:63">-&gt;</operator><name pos:start="39:64" pos:end="39:69">ranges</name></name></expr></argument>, <argument pos:start="39:72" pos:end="39:74"><expr pos:start="39:72" pos:end="39:74"><name pos:start="39:72" pos:end="39:74">cur</name></expr></argument>,

                                                          <argument pos:start="41:59" pos:end="41:71"><expr pos:start="41:59" pos:end="41:71"><name pos:start="41:59" pos:end="41:71">range_compare</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:27"><expr pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:19">cur</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:26">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:27"><expr pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:19">str</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <name pos:start="45:23" pos:end="45:26">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="47:15" pos:end="113:13">else if <condition pos:start="47:23" pos:end="47:38">(<expr pos:start="47:24" pos:end="47:37"><operator pos:start="47:24" pos:end="47:24">*</operator><name pos:start="47:25" pos:end="47:30">endptr</name> <operator pos:start="47:32" pos:end="47:33">==</operator> <literal type="char" pos:start="47:35" pos:end="47:37">'-'</literal></expr>)</condition> <block pos:start="47:40" pos:end="113:13">{<block_content pos:start="49:17" pos:end="111:17">

                <expr_stmt pos:start="49:17" pos:end="49:33"><expr pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:19">str</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:28">endptr</name> <operator pos:start="49:30" pos:end="49:30">+</operator> <literal type="number" pos:start="49:32" pos:end="49:32">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:26"><expr pos:start="51:17" pos:end="51:25"><name pos:start="51:17" pos:end="51:21">errno</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <literal type="number" pos:start="51:25" pos:end="51:25">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:47"><expr pos:start="53:17" pos:end="53:46"><name pos:start="53:17" pos:end="53:19">end</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:46"><name pos:start="53:23" pos:end="53:29">strtoll</name><argument_list pos:start="53:30" pos:end="53:46">(<argument pos:start="53:31" pos:end="53:33"><expr pos:start="53:31" pos:end="53:33"><name pos:start="53:31" pos:end="53:33">str</name></expr></argument>, <argument pos:start="53:36" pos:end="53:42"><expr pos:start="53:36" pos:end="53:42"><operator pos:start="53:36" pos:end="53:36">&amp;</operator><name pos:start="53:37" pos:end="53:42">endptr</name></expr></argument>, <argument pos:start="53:45" pos:end="53:45"><expr pos:start="53:45" pos:end="53:45"><literal type="number" pos:start="53:45" pos:end="53:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="55:17" pos:end="111:17"><if pos:start="55:17" pos:end="107:17">if <condition pos:start="55:20" pos:end="59:42">(<expr pos:start="55:21" pos:end="59:41"><name pos:start="55:21" pos:end="55:25">errno</name> <operator pos:start="55:27" pos:end="55:28">==</operator> <literal type="number" pos:start="55:30" pos:end="55:30">0</literal> <operator pos:start="55:32" pos:end="55:33">&amp;&amp;</operator> <name pos:start="55:35" pos:end="55:40">endptr</name> <operator pos:start="55:42" pos:end="55:42">&gt;</operator> <name pos:start="55:44" pos:end="55:46">str</name> <operator pos:start="55:48" pos:end="55:49">&amp;&amp;</operator> <name pos:start="55:51" pos:end="55:55">start</name> <operator pos:start="55:57" pos:end="55:58">&lt;=</operator> <name pos:start="55:60" pos:end="55:62">end</name> <operator pos:start="55:64" pos:end="55:65">&amp;&amp;</operator>

                    <operator pos:start="57:21" pos:end="57:21">(</operator><name pos:start="57:22" pos:end="57:26">start</name> <operator pos:start="57:28" pos:end="57:28">&gt;</operator> <name pos:start="57:30" pos:end="57:38">INT64_MAX</name> <operator pos:start="57:40" pos:end="57:40">-</operator> <literal type="number" pos:start="57:42" pos:end="57:46">65536</literal> <operator pos:start="57:48" pos:end="57:49">||</operator>

                     <name pos:start="59:22" pos:end="59:24">end</name> <operator pos:start="59:26" pos:end="59:26">&lt;</operator> <name pos:start="59:28" pos:end="59:32">start</name> <operator pos:start="59:34" pos:end="59:34">+</operator> <literal type="number" pos:start="59:36" pos:end="59:40">65536</literal><operator pos:start="59:41" pos:end="59:41">)</operator></expr>)</condition> <block pos:start="59:44" pos:end="107:17">{<block_content pos:start="61:21" pos:end="105:21">

                    <if_stmt pos:start="61:21" pos:end="105:21"><if pos:start="61:21" pos:end="81:21">if <condition pos:start="61:24" pos:end="61:40">(<expr pos:start="61:25" pos:end="61:39"><operator pos:start="61:25" pos:end="61:25">*</operator><name pos:start="61:26" pos:end="61:31">endptr</name> <operator pos:start="61:33" pos:end="61:34">==</operator> <literal type="char" pos:start="61:36" pos:end="61:39">'\0'</literal></expr>)</condition> <block pos:start="61:42" pos:end="81:21">{<block_content pos:start="63:25" pos:end="79:35">

                        <expr_stmt pos:start="63:25" pos:end="63:54"><expr pos:start="63:25" pos:end="63:53"><name pos:start="63:25" pos:end="63:27">cur</name> <operator pos:start="63:29" pos:end="63:29">=</operator> <call pos:start="63:31" pos:end="63:53"><name pos:start="63:31" pos:end="63:39">g_malloc0</name><argument_list pos:start="63:40" pos:end="63:53">(<argument pos:start="63:41" pos:end="63:52"><expr pos:start="63:41" pos:end="63:52"><sizeof pos:start="63:41" pos:end="63:52">sizeof<argument_list pos:start="63:47" pos:end="63:52">(<argument pos:start="63:48" pos:end="63:51"><expr pos:start="63:48" pos:end="63:51"><operator pos:start="63:48" pos:end="63:48">*</operator><name pos:start="63:49" pos:end="63:51">cur</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="65:25" pos:end="65:43"><expr pos:start="65:25" pos:end="65:42"><name pos:start="65:25" pos:end="65:34"><name pos:start="65:25" pos:end="65:27">cur</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:34">begin</name></name> <operator pos:start="65:36" pos:end="65:36">=</operator> <name pos:start="65:38" pos:end="65:42">start</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="67:25" pos:end="67:43"><expr pos:start="67:25" pos:end="67:42"><name pos:start="67:25" pos:end="67:32"><name pos:start="67:25" pos:end="67:27">cur</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:32">end</name></name> <operator pos:start="67:34" pos:end="67:34">=</operator> <name pos:start="67:36" pos:end="67:38">end</name> <operator pos:start="67:40" pos:end="67:40">+</operator> <literal type="number" pos:start="67:42" pos:end="67:42">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="69:25" pos:end="75:71"><expr pos:start="69:25" pos:end="75:70"><name pos:start="69:25" pos:end="69:35"><name pos:start="69:25" pos:end="69:27">siv</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:35">ranges</name></name> <operator pos:start="69:37" pos:end="69:37">=</operator>

                            <call pos:start="71:29" pos:end="75:70"><name pos:start="71:29" pos:end="71:55">g_list_insert_sorted_merged</name><argument_list pos:start="71:56" pos:end="75:70">(<argument pos:start="71:57" pos:end="71:67"><expr pos:start="71:57" pos:end="71:67"><name pos:start="71:57" pos:end="71:67"><name pos:start="71:57" pos:end="71:59">siv</name><operator pos:start="71:60" pos:end="71:61">-&gt;</operator><name pos:start="71:62" pos:end="71:67">ranges</name></name></expr></argument>,

                                                        <argument pos:start="73:57" pos:end="73:59"><expr pos:start="73:57" pos:end="73:59"><name pos:start="73:57" pos:end="73:59">cur</name></expr></argument>,

                                                        <argument pos:start="75:57" pos:end="75:69"><expr pos:start="75:57" pos:end="75:69"><name pos:start="75:57" pos:end="75:69">range_compare</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="77:25" pos:end="77:35"><expr pos:start="77:25" pos:end="77:34"><name pos:start="77:25" pos:end="77:27">cur</name> <operator pos:start="77:29" pos:end="77:29">=</operator> <name pos:start="77:31" pos:end="77:34">NULL</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="79:25" pos:end="79:35"><expr pos:start="79:25" pos:end="79:34"><name pos:start="79:25" pos:end="79:27">str</name> <operator pos:start="79:29" pos:end="79:29">=</operator> <name pos:start="79:31" pos:end="79:34">NULL</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="81:23" pos:end="101:21">else if <condition pos:start="81:31" pos:end="81:46">(<expr pos:start="81:32" pos:end="81:45"><operator pos:start="81:32" pos:end="81:32">*</operator><name pos:start="81:33" pos:end="81:38">endptr</name> <operator pos:start="81:40" pos:end="81:41">==</operator> <literal type="char" pos:start="81:43" pos:end="81:45">','</literal></expr>)</condition> <block pos:start="81:48" pos:end="101:21">{<block_content pos:start="83:25" pos:end="99:35">

                        <expr_stmt pos:start="83:25" pos:end="83:41"><expr pos:start="83:25" pos:end="83:40"><name pos:start="83:25" pos:end="83:27">str</name> <operator pos:start="83:29" pos:end="83:29">=</operator> <name pos:start="83:31" pos:end="83:36">endptr</name> <operator pos:start="83:38" pos:end="83:38">+</operator> <literal type="number" pos:start="83:40" pos:end="83:40">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="85:25" pos:end="85:54"><expr pos:start="85:25" pos:end="85:53"><name pos:start="85:25" pos:end="85:27">cur</name> <operator pos:start="85:29" pos:end="85:29">=</operator> <call pos:start="85:31" pos:end="85:53"><name pos:start="85:31" pos:end="85:39">g_malloc0</name><argument_list pos:start="85:40" pos:end="85:53">(<argument pos:start="85:41" pos:end="85:52"><expr pos:start="85:41" pos:end="85:52"><sizeof pos:start="85:41" pos:end="85:52">sizeof<argument_list pos:start="85:47" pos:end="85:52">(<argument pos:start="85:48" pos:end="85:51"><expr pos:start="85:48" pos:end="85:51"><operator pos:start="85:48" pos:end="85:48">*</operator><name pos:start="85:49" pos:end="85:51">cur</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="87:25" pos:end="87:43"><expr pos:start="87:25" pos:end="87:42"><name pos:start="87:25" pos:end="87:34"><name pos:start="87:25" pos:end="87:27">cur</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:34">begin</name></name> <operator pos:start="87:36" pos:end="87:36">=</operator> <name pos:start="87:38" pos:end="87:42">start</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="89:25" pos:end="89:43"><expr pos:start="89:25" pos:end="89:42"><name pos:start="89:25" pos:end="89:32"><name pos:start="89:25" pos:end="89:27">cur</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:32">end</name></name> <operator pos:start="89:34" pos:end="89:34">=</operator> <name pos:start="89:36" pos:end="89:38">end</name> <operator pos:start="89:40" pos:end="89:40">+</operator> <literal type="number" pos:start="89:42" pos:end="89:42">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="91:25" pos:end="97:71"><expr pos:start="91:25" pos:end="97:70"><name pos:start="91:25" pos:end="91:35"><name pos:start="91:25" pos:end="91:27">siv</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:35">ranges</name></name> <operator pos:start="91:37" pos:end="91:37">=</operator>

                            <call pos:start="93:29" pos:end="97:70"><name pos:start="93:29" pos:end="93:55">g_list_insert_sorted_merged</name><argument_list pos:start="93:56" pos:end="97:70">(<argument pos:start="93:57" pos:end="93:67"><expr pos:start="93:57" pos:end="93:67"><name pos:start="93:57" pos:end="93:67"><name pos:start="93:57" pos:end="93:59">siv</name><operator pos:start="93:60" pos:end="93:61">-&gt;</operator><name pos:start="93:62" pos:end="93:67">ranges</name></name></expr></argument>,

                                                        <argument pos:start="95:57" pos:end="95:59"><expr pos:start="95:57" pos:end="95:59"><name pos:start="95:57" pos:end="95:59">cur</name></expr></argument>,

                                                        <argument pos:start="97:57" pos:end="97:69"><expr pos:start="97:57" pos:end="97:69"><name pos:start="97:57" pos:end="97:69">range_compare</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="99:25" pos:end="99:35"><expr pos:start="99:25" pos:end="99:34"><name pos:start="99:25" pos:end="99:27">cur</name> <operator pos:start="99:29" pos:end="99:29">=</operator> <name pos:start="99:31" pos:end="99:34">NULL</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="101:23" pos:end="105:21">else <block pos:start="101:28" pos:end="105:21">{<block_content pos:start="103:25" pos:end="103:35">

                        <goto pos:start="103:25" pos:end="103:35">goto <name pos:start="103:30" pos:end="103:34">error</name>;</goto>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="107:19" pos:end="111:17">else <block pos:start="107:24" pos:end="111:17">{<block_content pos:start="109:21" pos:end="109:31">

                    <goto pos:start="109:21" pos:end="109:31">goto <name pos:start="109:26" pos:end="109:30">error</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="113:15" pos:end="131:13">else if <condition pos:start="113:23" pos:end="113:38">(<expr pos:start="113:24" pos:end="113:37"><operator pos:start="113:24" pos:end="113:24">*</operator><name pos:start="113:25" pos:end="113:30">endptr</name> <operator pos:start="113:32" pos:end="113:33">==</operator> <literal type="char" pos:start="113:35" pos:end="113:37">','</literal></expr>)</condition> <block pos:start="113:40" pos:end="131:13">{<block_content pos:start="115:17" pos:end="129:27">

                <expr_stmt pos:start="115:17" pos:end="115:33"><expr pos:start="115:17" pos:end="115:32"><name pos:start="115:17" pos:end="115:19">str</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <name pos:start="115:23" pos:end="115:28">endptr</name> <operator pos:start="115:30" pos:end="115:30">+</operator> <literal type="number" pos:start="115:32" pos:end="115:32">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:46"><expr pos:start="117:17" pos:end="117:45"><name pos:start="117:17" pos:end="117:19">cur</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <call pos:start="117:23" pos:end="117:45"><name pos:start="117:23" pos:end="117:31">g_malloc0</name><argument_list pos:start="117:32" pos:end="117:45">(<argument pos:start="117:33" pos:end="117:44"><expr pos:start="117:33" pos:end="117:44"><sizeof pos:start="117:33" pos:end="117:44">sizeof<argument_list pos:start="117:39" pos:end="117:44">(<argument pos:start="117:40" pos:end="117:43"><expr pos:start="117:40" pos:end="117:43"><operator pos:start="117:40" pos:end="117:40">*</operator><name pos:start="117:41" pos:end="117:43">cur</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:35"><expr pos:start="119:17" pos:end="119:34"><name pos:start="119:17" pos:end="119:26"><name pos:start="119:17" pos:end="119:19">cur</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:26">begin</name></name> <operator pos:start="119:28" pos:end="119:28">=</operator> <name pos:start="119:30" pos:end="119:34">start</name></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:37"><expr pos:start="121:17" pos:end="121:36"><name pos:start="121:17" pos:end="121:24"><name pos:start="121:17" pos:end="121:19">cur</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:24">end</name></name> <operator pos:start="121:26" pos:end="121:26">=</operator> <name pos:start="121:28" pos:end="121:32">start</name> <operator pos:start="121:34" pos:end="121:34">+</operator> <literal type="number" pos:start="121:36" pos:end="121:36">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="127:73"><expr pos:start="123:17" pos:end="127:72"><name pos:start="123:17" pos:end="123:27"><name pos:start="123:17" pos:end="123:19">siv</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:27">ranges</name></name> <operator pos:start="123:29" pos:end="123:29">=</operator> <call pos:start="123:31" pos:end="127:72"><name pos:start="123:31" pos:end="123:57">g_list_insert_sorted_merged</name><argument_list pos:start="123:58" pos:end="127:72">(<argument pos:start="123:59" pos:end="123:69"><expr pos:start="123:59" pos:end="123:69"><name pos:start="123:59" pos:end="123:69"><name pos:start="123:59" pos:end="123:61">siv</name><operator pos:start="123:62" pos:end="123:63">-&gt;</operator><name pos:start="123:64" pos:end="123:69">ranges</name></name></expr></argument>,

                                                          <argument pos:start="125:59" pos:end="125:61"><expr pos:start="125:59" pos:end="125:61"><name pos:start="125:59" pos:end="125:61">cur</name></expr></argument>,

                                                          <argument pos:start="127:59" pos:end="127:71"><expr pos:start="127:59" pos:end="127:71"><name pos:start="127:59" pos:end="127:71">range_compare</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:27"><expr pos:start="129:17" pos:end="129:26"><name pos:start="129:17" pos:end="129:19">cur</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <name pos:start="129:23" pos:end="129:26">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="131:15" pos:end="135:13">else <block pos:start="131:20" pos:end="135:13">{<block_content pos:start="133:17" pos:end="133:27">

                <goto pos:start="133:17" pos:end="133:27">goto <name pos:start="133:22" pos:end="133:26">error</name>;</goto>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="137:11" pos:end="141:9">else <block pos:start="137:16" pos:end="141:9">{<block_content pos:start="139:13" pos:end="139:23">

            <goto pos:start="139:13" pos:end="139:23">goto <name pos:start="139:18" pos:end="139:22">error</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block> while <condition pos:start="143:13" pos:end="143:17">(<expr pos:start="143:14" pos:end="143:16"><name pos:start="143:14" pos:end="143:16">str</name></expr>)</condition>;</do>



    <return pos:start="147:5" pos:end="147:11">return;</return>

<label pos:start="149:1" pos:end="149:6"><name pos:start="149:1" pos:end="149:5">error</name>:</label>

    <expr_stmt pos:start="151:5" pos:end="151:50"><expr pos:start="151:5" pos:end="151:49"><call pos:start="151:5" pos:end="151:49"><name pos:start="151:5" pos:end="151:18">g_list_foreach</name><argument_list pos:start="151:19" pos:end="151:49">(<argument pos:start="151:20" pos:end="151:30"><expr pos:start="151:20" pos:end="151:30"><name pos:start="151:20" pos:end="151:30"><name pos:start="151:20" pos:end="151:22">siv</name><operator pos:start="151:23" pos:end="151:24">-&gt;</operator><name pos:start="151:25" pos:end="151:30">ranges</name></name></expr></argument>, <argument pos:start="151:33" pos:end="151:42"><expr pos:start="151:33" pos:end="151:42"><name pos:start="151:33" pos:end="151:42">free_range</name></expr></argument>, <argument pos:start="151:45" pos:end="151:48"><expr pos:start="151:45" pos:end="151:48"><name pos:start="151:45" pos:end="151:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:29"><expr pos:start="153:5" pos:end="153:28"><call pos:start="153:5" pos:end="153:28"><name pos:start="153:5" pos:end="153:15">g_list_free</name><argument_list pos:start="153:16" pos:end="153:28">(<argument pos:start="153:17" pos:end="153:27"><expr pos:start="153:17" pos:end="153:27"><name pos:start="153:17" pos:end="153:27"><name pos:start="153:17" pos:end="153:19">siv</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:27">ranges</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:23"><expr pos:start="155:5" pos:end="155:22"><name pos:start="155:5" pos:end="155:15"><name pos:start="155:5" pos:end="155:7">siv</name><operator pos:start="155:8" pos:end="155:9">-&gt;</operator><name pos:start="155:10" pos:end="155:15">ranges</name></name> <operator pos:start="155:17" pos:end="155:17">=</operator> <name pos:start="155:19" pos:end="155:22">NULL</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
