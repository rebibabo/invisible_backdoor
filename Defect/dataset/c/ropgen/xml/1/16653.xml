<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16653.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">test_tco2_status_bits</name><parameter_list pos:start="1:34" pos:end="1:39">(<parameter pos:start="1:35" pos:end="1:38"><decl pos:start="1:35" pos:end="1:38"><type pos:start="1:35" pos:end="1:38"><name pos:start="1:35" pos:end="1:38">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:16">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">TestData</name></type> <name pos:start="5:14" pos:end="5:14">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:18">ticks</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">8</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:16">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:18"><expr pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:5">d</name><operator pos:start="15:6" pos:end="15:6">.</operator><name pos:start="15:7" pos:end="15:10">args</name></name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:17">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:5">d</name><operator pos:start="17:6" pos:end="17:6">.</operator><name pos:start="17:7" pos:end="17:14">noreboot</name></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:21">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:18"><expr pos:start="19:5" pos:end="19:17"><call pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:13">test_init</name><argument_list pos:start="19:14" pos:end="19:17">(<argument pos:start="19:15" pos:end="19:16"><expr pos:start="19:15" pos:end="19:16"><operator pos:start="19:15" pos:end="19:15">&amp;</operator><name pos:start="19:16" pos:end="19:16">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><call pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:12">stop_tco</name><argument_list pos:start="23:13" pos:end="23:16">(<argument pos:start="23:14" pos:end="23:15"><expr pos:start="23:14" pos:end="23:15"><operator pos:start="23:14" pos:end="23:14">&amp;</operator><name pos:start="23:15" pos:end="23:15">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><call pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:20">clear_tco_status</name><argument_list pos:start="25:21" pos:end="25:24">(<argument pos:start="25:22" pos:end="25:23"><expr pos:start="25:22" pos:end="25:23"><operator pos:start="25:22" pos:end="25:22">&amp;</operator><name pos:start="25:23" pos:end="25:23">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><call pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:27">reset_on_second_timeout</name><argument_list pos:start="27:28" pos:end="27:33">(<argument pos:start="27:29" pos:end="27:32"><expr pos:start="27:29" pos:end="27:32"><name pos:start="27:29" pos:end="27:32">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><call pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:19">set_tco_timeout</name><argument_list pos:start="29:20" pos:end="29:30">(<argument pos:start="29:21" pos:end="29:22"><expr pos:start="29:21" pos:end="29:22"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:22">d</name></expr></argument>, <argument pos:start="29:25" pos:end="29:29"><expr pos:start="29:25" pos:end="29:29"><name pos:start="29:25" pos:end="29:29">ticks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><call pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:12">load_tco</name><argument_list pos:start="31:13" pos:end="31:16">(<argument pos:start="31:14" pos:end="31:15"><expr pos:start="31:14" pos:end="31:15"><operator pos:start="31:14" pos:end="31:14">&amp;</operator><name pos:start="31:15" pos:end="31:15">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><call pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:13">start_tco</name><argument_list pos:start="33:14" pos:end="33:17">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><operator pos:start="33:15" pos:end="33:15">&amp;</operator><name pos:start="33:16" pos:end="33:16">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><call pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:14">clock_step</name><argument_list pos:start="35:15" pos:end="35:41">(<argument pos:start="35:16" pos:end="35:40"><expr pos:start="35:16" pos:end="35:40"><name pos:start="35:16" pos:end="35:20">ticks</name> <operator pos:start="35:22" pos:end="35:22">*</operator> <name pos:start="35:24" pos:end="35:36">TCO_TICK_NSEC</name> <operator pos:start="35:38" pos:end="35:38">*</operator> <literal type="number" pos:start="35:40" pos:end="35:40">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:57"><expr pos:start="39:5" pos:end="39:56"><name pos:start="39:5" pos:end="39:7">val</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:56"><name pos:start="39:11" pos:end="39:23">qpci_io_readw</name><argument_list pos:start="39:24" pos:end="39:56">(<argument pos:start="39:25" pos:end="39:29"><expr pos:start="39:25" pos:end="39:29"><name pos:start="39:25" pos:end="39:29"><name pos:start="39:25" pos:end="39:25">d</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:29">dev</name></name></expr></argument>, <argument pos:start="39:32" pos:end="39:55"><expr pos:start="39:32" pos:end="39:55"><name pos:start="39:32" pos:end="39:44"><name pos:start="39:32" pos:end="39:32">d</name><operator pos:start="39:33" pos:end="39:33">.</operator><name pos:start="39:34" pos:end="39:44">tco_io_base</name></name> <operator pos:start="39:46" pos:end="39:46">+</operator> <name pos:start="39:48" pos:end="39:55">TCO2_STS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:59"><expr pos:start="41:5" pos:end="41:58"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <ternary pos:start="41:11" pos:end="41:58"><condition pos:start="41:11" pos:end="41:52"><expr pos:start="41:11" pos:end="41:50"><name pos:start="41:11" pos:end="41:13">val</name> <operator pos:start="41:15" pos:end="41:15">&amp;</operator> <operator pos:start="41:17" pos:end="41:17">(</operator><name pos:start="41:18" pos:end="41:34">TCO_SECOND_TO_STS</name> <operator pos:start="41:36" pos:end="41:36">|</operator> <name pos:start="41:38" pos:end="41:49">TCO_BOOT_STS</name><operator pos:start="41:50" pos:end="41:50">)</operator></expr> ?</condition><then pos:start="41:54" pos:end="41:54"> <expr pos:start="41:54" pos:end="41:54"><literal type="number" pos:start="41:54" pos:end="41:54">1</literal></expr> </then><else pos:start="41:56" pos:end="41:58">: <expr pos:start="41:58" pos:end="41:58"><literal type="number" pos:start="41:58" pos:end="41:58">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><call pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:12">g_assert</name><argument_list pos:start="43:13" pos:end="43:22">(<argument pos:start="43:14" pos:end="43:21"><expr pos:start="43:14" pos:end="43:21"><name pos:start="43:14" pos:end="43:16">ret</name> <operator pos:start="43:18" pos:end="43:19">==</operator> <literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:57"><expr pos:start="45:5" pos:end="45:56"><call pos:start="45:5" pos:end="45:56"><name pos:start="45:5" pos:end="45:18">qpci_io_writew</name><argument_list pos:start="45:19" pos:end="45:56">(<argument pos:start="45:20" pos:end="45:24"><expr pos:start="45:20" pos:end="45:24"><name pos:start="45:20" pos:end="45:24"><name pos:start="45:20" pos:end="45:20">d</name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:24">dev</name></name></expr></argument>, <argument pos:start="45:27" pos:end="45:50"><expr pos:start="45:27" pos:end="45:50"><name pos:start="45:27" pos:end="45:39"><name pos:start="45:27" pos:end="45:27">d</name><operator pos:start="45:28" pos:end="45:28">.</operator><name pos:start="45:29" pos:end="45:39">tco_io_base</name></name> <operator pos:start="45:41" pos:end="45:41">+</operator> <name pos:start="45:43" pos:end="45:50">TCO2_STS</name></expr></argument>, <argument pos:start="45:53" pos:end="45:55"><expr pos:start="45:53" pos:end="45:55"><name pos:start="45:53" pos:end="45:55">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:75"><expr pos:start="47:5" pos:end="47:74"><call pos:start="47:5" pos:end="47:74"><name pos:start="47:5" pos:end="47:19">g_assert_cmpint</name><argument_list pos:start="47:20" pos:end="47:74">(<argument pos:start="47:21" pos:end="47:66"><expr pos:start="47:21" pos:end="47:66"><call pos:start="47:21" pos:end="47:66"><name pos:start="47:21" pos:end="47:33">qpci_io_readw</name><argument_list pos:start="47:34" pos:end="47:66">(<argument pos:start="47:35" pos:end="47:39"><expr pos:start="47:35" pos:end="47:39"><name pos:start="47:35" pos:end="47:39"><name pos:start="47:35" pos:end="47:35">d</name><operator pos:start="47:36" pos:end="47:36">.</operator><name pos:start="47:37" pos:end="47:39">dev</name></name></expr></argument>, <argument pos:start="47:42" pos:end="47:65"><expr pos:start="47:42" pos:end="47:65"><name pos:start="47:42" pos:end="47:54"><name pos:start="47:42" pos:end="47:42">d</name><operator pos:start="47:43" pos:end="47:43">.</operator><name pos:start="47:44" pos:end="47:54">tco_io_base</name></name> <operator pos:start="47:56" pos:end="47:56">+</operator> <name pos:start="47:58" pos:end="47:65">TCO2_STS</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:69" pos:end="47:70"><expr pos:start="47:69" pos:end="47:70"><operator pos:start="47:69" pos:end="47:70">==</operator></expr></argument>, <argument pos:start="47:73" pos:end="47:73"><expr pos:start="47:73" pos:end="47:73"><literal type="number" pos:start="47:73" pos:end="47:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:16"><expr pos:start="49:5" pos:end="49:15"><call pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:13">qtest_end</name><argument_list pos:start="49:14" pos:end="49:15">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
