<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1382.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:5"><name pos:start="1:1" pos:end="1:5">int32</name></type> <name pos:start="1:7" pos:end="1:37">float128_to_int32_round_to_zero</name><parameter_list pos:start="1:38" pos:end="1:64">( <parameter pos:start="1:40" pos:end="1:62"><decl pos:start="1:40" pos:end="1:62"><type pos:start="1:40" pos:end="1:49"><name pos:start="1:40" pos:end="1:47">float128</name> <name pos:start="1:49" pos:end="1:49">a</name></type> <name pos:start="1:51" pos:end="1:62">STATUS_PARAM</name></decl></parameter> )</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="69:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">flag</name></type> <name pos:start="5:10" pos:end="5:14">aSign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">int32</name></type> <name pos:start="7:11" pos:end="7:14">aExp</name></decl>, <decl pos:start="7:17" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:17" pos:end="7:26">shiftCount</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:18">aSig0</name></decl>, <decl pos:start="9:21" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:21" pos:end="9:25">aSig1</name></decl>, <decl pos:start="9:28" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:28" pos:end="9:36">savedASig</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">int32</name></type> <name pos:start="11:11" pos:end="11:11">z</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:9">aSig1</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:37"><name pos:start="15:13" pos:end="15:32">extractFloat128Frac1</name><argument_list pos:start="15:33" pos:end="15:37">( <argument pos:start="15:35" pos:end="15:35"><expr pos:start="15:35" pos:end="15:35"><name pos:start="15:35" pos:end="15:35">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:9">aSig0</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:37"><name pos:start="17:13" pos:end="17:32">extractFloat128Frac0</name><argument_list pos:start="17:33" pos:end="17:37">( <argument pos:start="17:35" pos:end="17:35"><expr pos:start="17:35" pos:end="17:35"><name pos:start="17:35" pos:end="17:35">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:8">aExp</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:34"><name pos:start="19:12" pos:end="19:29">extractFloat128Exp</name><argument_list pos:start="19:30" pos:end="19:34">( <argument pos:start="19:32" pos:end="19:32"><expr pos:start="19:32" pos:end="19:32"><name pos:start="19:32" pos:end="19:32">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:9">aSign</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:36"><name pos:start="21:13" pos:end="21:31">extractFloat128Sign</name><argument_list pos:start="21:32" pos:end="21:36">( <argument pos:start="21:34" pos:end="21:34"><expr pos:start="21:34" pos:end="21:34"><name pos:start="21:34" pos:end="21:34">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:9">aSig0</name> <operator pos:start="23:11" pos:end="23:12">|=</operator> <operator pos:start="23:14" pos:end="23:14">(</operator> <name pos:start="23:16" pos:end="23:20">aSig1</name> <operator pos:start="23:22" pos:end="23:23">!=</operator> <literal type="number" pos:start="23:25" pos:end="23:25">0</literal> <operator pos:start="23:27" pos:end="23:27">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="39:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:24">( <expr pos:start="25:10" pos:end="25:22"><literal type="number" pos:start="25:10" pos:end="25:15">0x401E</literal> <operator pos:start="25:17" pos:end="25:17">&lt;</operator> <name pos:start="25:19" pos:end="25:22">aExp</name></expr> )</condition> <block pos:start="25:26" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:21">

        <if_stmt pos:start="27:9" pos:end="27:53"><if pos:start="27:9" pos:end="27:53">if <condition pos:start="27:12" pos:end="27:42">( <expr pos:start="27:14" pos:end="27:40"><operator pos:start="27:14" pos:end="27:14">(</operator> <name pos:start="27:16" pos:end="27:19">aExp</name> <operator pos:start="27:21" pos:end="27:22">==</operator> <literal type="number" pos:start="27:24" pos:end="27:29">0x7FFF</literal> <operator pos:start="27:31" pos:end="27:31">)</operator> <operator pos:start="27:33" pos:end="27:34">&amp;&amp;</operator> <name pos:start="27:36" pos:end="27:40">aSig0</name></expr> )</condition><block type="pseudo" pos:start="27:44" pos:end="27:53"><block_content pos:start="27:44" pos:end="27:53"> <expr_stmt pos:start="27:44" pos:end="27:53"><expr pos:start="27:44" pos:end="27:52"><name pos:start="27:44" pos:end="27:48">aSign</name> <operator pos:start="27:50" pos:end="27:50">=</operator> <literal type="number" pos:start="27:52" pos:end="27:52">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <goto pos:start="29:9" pos:end="29:21">goto <name pos:start="29:14" pos:end="29:20">invalid</name>;</goto>

    </block_content>}</block></if>

    <if type="elseif" pos:start="33:5" pos:end="39:5">else if <condition pos:start="33:13" pos:end="33:29">( <expr pos:start="33:15" pos:end="33:27"><name pos:start="33:15" pos:end="33:18">aExp</name> <operator pos:start="33:20" pos:end="33:20">&lt;</operator> <literal type="number" pos:start="33:22" pos:end="33:27">0x3FFF</literal></expr> )</condition> <block pos:start="33:31" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <if_stmt pos:start="35:9" pos:end="35:81"><if pos:start="35:9" pos:end="35:81">if <condition pos:start="35:12" pos:end="35:28">( <expr pos:start="35:14" pos:end="35:26"><name pos:start="35:14" pos:end="35:17">aExp</name> <operator pos:start="35:19" pos:end="35:20">||</operator> <name pos:start="35:22" pos:end="35:26">aSig0</name></expr> )</condition><block type="pseudo" pos:start="35:30" pos:end="35:81"><block_content pos:start="35:30" pos:end="35:81"> <expr_stmt pos:start="35:30" pos:end="35:81"><expr pos:start="35:30" pos:end="35:80"><call pos:start="35:30" pos:end="35:58"><name pos:start="35:30" pos:end="35:35">STATUS</name><argument_list pos:start="35:36" pos:end="35:58">(<argument pos:start="35:37" pos:end="35:57"><expr pos:start="35:37" pos:end="35:57"><name pos:start="35:37" pos:end="35:57">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="35:60" pos:end="35:61">|=</operator> <name pos:start="35:63" pos:end="35:80">float_flag_inexact</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:41"><expr pos:start="41:5" pos:end="41:40"><name pos:start="41:5" pos:end="41:9">aSig0</name> <operator pos:start="41:11" pos:end="41:12">|=</operator> <call pos:start="41:14" pos:end="41:40"><name pos:start="41:14" pos:end="41:18">LIT64</name><argument_list pos:start="41:19" pos:end="41:40">( <argument pos:start="41:21" pos:end="41:38"><expr pos:start="41:21" pos:end="41:38"><literal type="number" pos:start="41:21" pos:end="41:38">0x0001000000000000</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:14">shiftCount</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:25">0x402F</literal> <operator pos:start="43:25" pos:end="43:25">-</operator> <name pos:start="43:27" pos:end="43:30">aExp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:22"><expr pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:13">savedASig</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:21">aSig0</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:25"><expr pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:9">aSig0</name> <operator pos:start="47:11" pos:end="47:13">&gt;&gt;=</operator> <name pos:start="47:15" pos:end="47:24">shiftCount</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:14"><expr pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:5">z</name> <operator pos:start="49:7" pos:end="49:7">=</operator> <name pos:start="49:9" pos:end="49:13">aSig0</name></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="51:25"><if pos:start="51:5" pos:end="51:25">if <condition pos:start="51:8" pos:end="51:16">( <expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:14">aSign</name></expr> )</condition><block type="pseudo" pos:start="51:18" pos:end="51:25"><block_content pos:start="51:18" pos:end="51:25"> <expr_stmt pos:start="51:18" pos:end="51:25"><expr pos:start="51:18" pos:end="51:24"><name pos:start="51:18" pos:end="51:18">z</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <operator pos:start="51:22" pos:end="51:22">-</operator> <name pos:start="51:24" pos:end="51:24">z</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="61:5">if <condition pos:start="53:8" pos:end="53:28">( <expr pos:start="53:10" pos:end="53:26"><operator pos:start="53:10" pos:end="53:10">(</operator> <name pos:start="53:12" pos:end="53:12">z</name> <operator pos:start="53:14" pos:end="53:14">&lt;</operator> <literal type="number" pos:start="53:16" pos:end="53:16">0</literal> <operator pos:start="53:18" pos:end="53:18">)</operator> <operator pos:start="53:20" pos:end="53:20">^</operator> <name pos:start="53:22" pos:end="53:26">aSign</name></expr> )</condition> <block pos:start="53:30" pos:end="61:5">{<block_content pos:start="55:2" pos:end="59:57">

 <label pos:start="55:2" pos:end="55:9"><name pos:start="55:2" pos:end="55:8">invalid</name>:</label>

        <macro pos:start="57:9" pos:end="57:51"><name pos:start="57:9" pos:end="57:19">float_raise</name><argument_list pos:start="57:20" pos:end="57:51">( <argument pos:start="57:22" pos:end="57:50">float_flag_invalid STATUS_VAR</argument>)</argument_list></macro><empty_stmt pos:start="57:52" pos:end="57:52">;</empty_stmt>

        <return pos:start="59:9" pos:end="59:57">return <expr pos:start="59:16" pos:end="59:56"><ternary pos:start="59:16" pos:end="59:56"><condition pos:start="59:16" pos:end="59:22"><expr pos:start="59:16" pos:end="59:20"><name pos:start="59:16" pos:end="59:20">aSign</name></expr> ?</condition><then pos:start="59:24" pos:end="59:43"> <expr pos:start="59:24" pos:end="59:43"><operator pos:start="59:24" pos:end="59:24">(</operator><name pos:start="59:25" pos:end="59:31">int32_t</name><operator pos:start="59:32" pos:end="59:32">)</operator> <literal type="number" pos:start="59:34" pos:end="59:43">0x80000000</literal></expr> </then><else pos:start="59:45" pos:end="59:56">: <expr pos:start="59:47" pos:end="59:56"><literal type="number" pos:start="59:47" pos:end="59:56">0x7FFFFFFF</literal></expr></else></ternary></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:45">( <expr pos:start="63:10" pos:end="63:43"><operator pos:start="63:10" pos:end="63:10">(</operator> <name pos:start="63:12" pos:end="63:16">aSig0</name><operator pos:start="63:17" pos:end="63:18">&lt;&lt;</operator><name pos:start="63:19" pos:end="63:28">shiftCount</name> <operator pos:start="63:30" pos:end="63:30">)</operator> <operator pos:start="63:32" pos:end="63:33">!=</operator> <name pos:start="63:35" pos:end="63:43">savedASig</name></expr> )</condition> <block pos:start="63:47" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:60">

        <expr_stmt pos:start="65:9" pos:end="65:60"><expr pos:start="65:9" pos:end="65:59"><call pos:start="65:9" pos:end="65:37"><name pos:start="65:9" pos:end="65:14">STATUS</name><argument_list pos:start="65:15" pos:end="65:37">(<argument pos:start="65:16" pos:end="65:36"><expr pos:start="65:16" pos:end="65:36"><name pos:start="65:16" pos:end="65:36">float_exception_flags</name></expr></argument>)</argument_list></call> <operator pos:start="65:39" pos:end="65:40">|=</operator> <name pos:start="65:42" pos:end="65:59">float_flag_inexact</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><name pos:start="69:12" pos:end="69:12">z</name></expr>;</return>



</block_content>}</block></function>
</unit>
