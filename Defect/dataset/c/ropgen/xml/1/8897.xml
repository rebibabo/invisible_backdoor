<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8897.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:57"><name pos:start="1:1" pos:end="1:23">iscsi_readcapacity10_cb</name><argument_list pos:start="1:24" pos:end="3:57">(<argument pos:start="1:25" pos:end="1:51">struct iscsi_context *iscsi</argument>, <argument pos:start="1:54" pos:end="1:63">int status</argument>,

                        <argument pos:start="3:25" pos:end="3:42">void *command_data</argument>, <argument pos:start="3:45" pos:end="3:56">void *opaque</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:30">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:20">IscsiTask</name></name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:27">itask</name> <init pos:start="7:29" pos:end="7:36">= <expr pos:start="7:31" pos:end="7:36"><name pos:start="7:31" pos:end="7:36">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:30">scsi_readcapacity10</name></name> <modifier pos:start="9:32" pos:end="9:32">*</modifier></type><name pos:start="9:33" pos:end="9:36">rc10</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:20">scsi_task</name></name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:26">task</name> <init pos:start="11:28" pos:end="11:41">= <expr pos:start="11:30" pos:end="11:41"><name pos:start="11:30" pos:end="11:41">command_data</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="29:5"><if pos:start="15:5" pos:end="29:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:14">status</name> <operator pos:start="15:16" pos:end="15:17">!=</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>)</condition> <block pos:start="15:22" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:15">

        <expr_stmt pos:start="17:9" pos:end="19:45"><expr pos:start="17:9" pos:end="19:44"><call pos:start="17:9" pos:end="19:44"><name pos:start="17:9" pos:end="17:20">error_report</name><argument_list pos:start="17:21" pos:end="19:44">(<argument pos:start="17:22" pos:end="17:70"><expr pos:start="17:22" pos:end="17:70"><literal type="string" pos:start="17:22" pos:end="17:70">"iSCSI: Failed to read capacity of iSCSI lun. %s"</literal></expr></argument>,

                     <argument pos:start="19:22" pos:end="19:43"><expr pos:start="19:22" pos:end="19:43"><call pos:start="19:22" pos:end="19:43"><name pos:start="19:22" pos:end="19:36">iscsi_get_error</name><argument_list pos:start="19:37" pos:end="19:43">(<argument pos:start="19:38" pos:end="19:42"><expr pos:start="19:38" pos:end="19:42"><name pos:start="19:38" pos:end="19:42">iscsi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:13">itask</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:21">status</name></name>   <operator pos:start="21:25" pos:end="21:25">=</operator> <literal type="number" pos:start="21:27" pos:end="21:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:28"><expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:13">itask</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:23">complete</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <literal type="number" pos:start="23:27" pos:end="23:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><call pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:27">scsi_free_scsi_task</name><argument_list pos:start="25:28" pos:end="25:33">(<argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:40"><expr pos:start="33:5" pos:end="33:39"><name pos:start="33:5" pos:end="33:8">rc10</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <call pos:start="33:12" pos:end="33:39"><name pos:start="33:12" pos:end="33:33">scsi_datain_unmarshall</name><argument_list pos:start="33:34" pos:end="33:39">(<argument pos:start="33:35" pos:end="33:38"><expr pos:start="33:35" pos:end="33:38"><name pos:start="33:35" pos:end="33:38">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="47:5">if <condition pos:start="35:8" pos:end="35:21">(<expr pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:12">rc10</name> <operator pos:start="35:14" pos:end="35:15">==</operator> <name pos:start="35:17" pos:end="35:20">NULL</name></expr>)</condition> <block pos:start="35:23" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:15">

        <expr_stmt pos:start="37:9" pos:end="37:73"><expr pos:start="37:9" pos:end="37:72"><call pos:start="37:9" pos:end="37:72"><name pos:start="37:9" pos:end="37:20">error_report</name><argument_list pos:start="37:21" pos:end="37:72">(<argument pos:start="37:22" pos:end="37:71"><expr pos:start="37:22" pos:end="37:71"><literal type="string" pos:start="37:22" pos:end="37:71">"iSCSI: Failed to unmarshall readcapacity10 data."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:13">itask</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:21">status</name></name>   <operator pos:start="39:25" pos:end="39:25">=</operator> <literal type="number" pos:start="39:27" pos:end="39:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:13">itask</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:23">complete</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <literal type="number" pos:start="41:27" pos:end="41:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:34"><expr pos:start="43:9" pos:end="43:33"><call pos:start="43:9" pos:end="43:33"><name pos:start="43:9" pos:end="43:27">scsi_free_scsi_task</name><argument_list pos:start="43:28" pos:end="43:33">(<argument pos:start="43:29" pos:end="43:32"><expr pos:start="43:29" pos:end="43:32"><name pos:start="43:29" pos:end="43:32">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:51"><expr pos:start="51:5" pos:end="51:50"><name pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:9">itask</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:19">iscsilun</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:31">block_size</name></name> <operator pos:start="51:33" pos:end="51:33">=</operator> <name pos:start="51:35" pos:end="51:50"><name pos:start="51:35" pos:end="51:38">rc10</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:50">block_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="63:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:23">(<expr pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:12">rc10</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:17">lba</name></name> <operator pos:start="53:19" pos:end="53:20">==</operator> <literal type="number" pos:start="53:22" pos:end="53:22">0</literal></expr>)</condition> <block pos:start="53:25" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:40">

        <comment type="block" pos:start="55:9" pos:end="55:31">/* blank disk loaded */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:40"><expr pos:start="57:9" pos:end="57:39"><name pos:start="57:9" pos:end="57:35"><name pos:start="57:9" pos:end="57:13">itask</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:23">iscsilun</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:35">num_blocks</name></name> <operator pos:start="57:37" pos:end="57:37">=</operator> <literal type="number" pos:start="57:39" pos:end="57:39">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="63:5">else <block pos:start="59:12" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:52">

        <expr_stmt pos:start="61:9" pos:end="61:52"><expr pos:start="61:9" pos:end="61:51"><name pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:13">itask</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:23">iscsilun</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:35">num_blocks</name></name> <operator pos:start="61:37" pos:end="61:37">=</operator> <name pos:start="61:39" pos:end="61:47"><name pos:start="61:39" pos:end="61:42">rc10</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:47">lba</name></name> <operator pos:start="61:49" pos:end="61:49">+</operator> <literal type="number" pos:start="61:51" pos:end="61:51">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="67:79"><expr pos:start="65:5" pos:end="67:77"><name pos:start="65:5" pos:end="65:28"><name pos:start="65:5" pos:end="65:9">itask</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:13">bs</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:28">total_sectors</name></name>    <operator pos:start="65:33" pos:end="65:33">=</operator> <name pos:start="65:35" pos:end="65:61"><name pos:start="65:35" pos:end="65:39">itask</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:49">iscsilun</name><operator pos:start="65:50" pos:end="65:51">-&gt;</operator><name pos:start="65:52" pos:end="65:61">num_blocks</name></name> <operator pos:start="65:63" pos:end="65:63">*</operator>

                               <name pos:start="67:32" pos:end="67:58"><name pos:start="67:32" pos:end="67:36">itask</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:46">iscsilun</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:58">block_size</name></name> <operator pos:start="67:60" pos:end="67:60">/</operator> <name pos:start="67:62" pos:end="67:77">BDRV_SECTOR_SIZE</name></expr> ;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:24"><expr pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:9">itask</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:17">status</name></name>   <operator pos:start="71:21" pos:end="71:21">=</operator> <literal type="number" pos:start="71:23" pos:end="71:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:24"><expr pos:start="73:5" pos:end="73:23"><name pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:9">itask</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:19">complete</name></name> <operator pos:start="73:21" pos:end="73:21">=</operator> <literal type="number" pos:start="73:23" pos:end="73:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:30"><expr pos:start="75:5" pos:end="75:29"><call pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:23">scsi_free_scsi_task</name><argument_list pos:start="75:24" pos:end="75:29">(<argument pos:start="75:25" pos:end="75:28"><expr pos:start="75:25" pos:end="75:28"><name pos:start="75:25" pos:end="75:28">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
