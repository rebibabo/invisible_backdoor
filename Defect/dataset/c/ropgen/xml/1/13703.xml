<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13703.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">net_rx_pkt_attach_iovec</name><parameter_list pos:start="1:29" pos:end="5:63">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:35">struct</name> <name pos:start="1:37" pos:end="1:44">NetRxPkt</name></name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">pkt</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:55"><decl pos:start="3:33" pos:end="3:55"><type pos:start="3:33" pos:end="3:55"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:50"><name pos:start="3:39" pos:end="3:44">struct</name> <name pos:start="3:46" pos:end="3:50">iovec</name></name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:55">iov</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:67"><decl pos:start="3:58" pos:end="3:67"><type pos:start="3:58" pos:end="3:67"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:67">iovcnt</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:45"><decl pos:start="5:33" pos:end="5:45"><type pos:start="5:33" pos:end="5:45"><name pos:start="5:33" pos:end="5:38">size_t</name></type> <name pos:start="5:40" pos:end="5:45">iovoff</name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:62"><decl pos:start="5:48" pos:end="5:62"><type pos:start="5:48" pos:end="5:62"><name pos:start="5:48" pos:end="5:51">bool</name></type> <name pos:start="5:53" pos:end="5:62">strip_vlan</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="35:1">{<block_content pos:start="9:5" pos:end="33:50">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:16">tci</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint16_t</name></type> <name pos:start="11:14" pos:end="11:18">ploff</name> <init pos:start="11:20" pos:end="11:27">= <expr pos:start="11:22" pos:end="11:27"><name pos:start="11:22" pos:end="11:27">iovoff</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:16"><expr pos:start="13:5" pos:end="13:15"><call pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:15">(<argument pos:start="13:12" pos:end="13:14"><expr pos:start="13:12" pos:end="13:14"><name pos:start="13:12" pos:end="13:14">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:7">pkt</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:22">vlan_stripped</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <name pos:start="15:26" pos:end="15:30">false</name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:19">(<expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:18">strip_vlan</name></expr>)</condition> <block pos:start="19:21" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:58">

        <expr_stmt pos:start="21:9" pos:end="23:58"><expr pos:start="21:9" pos:end="23:57"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:11">pkt</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:26">vlan_stripped</name></name> <operator pos:start="21:28" pos:end="21:28">=</operator> <call pos:start="21:30" pos:end="23:57"><name pos:start="21:30" pos:end="21:43">eth_strip_vlan</name><argument_list pos:start="21:44" pos:end="23:57">(<argument pos:start="21:45" pos:end="21:47"><expr pos:start="21:45" pos:end="21:47"><name pos:start="21:45" pos:end="21:47">iov</name></expr></argument>, <argument pos:start="21:50" pos:end="21:55"><expr pos:start="21:50" pos:end="21:55"><name pos:start="21:50" pos:end="21:55">iovcnt</name></expr></argument>, <argument pos:start="21:58" pos:end="21:63"><expr pos:start="21:58" pos:end="21:63"><name pos:start="21:58" pos:end="21:63">iovoff</name></expr></argument>, <argument pos:start="21:66" pos:end="21:78"><expr pos:start="21:66" pos:end="21:78"><name pos:start="21:66" pos:end="21:78"><name pos:start="21:66" pos:end="21:68">pkt</name><operator pos:start="21:69" pos:end="21:70">-&gt;</operator><name pos:start="21:71" pos:end="21:78">ehdr_buf</name></name></expr></argument>,

                                            <argument pos:start="23:45" pos:end="23:50"><expr pos:start="23:45" pos:end="23:50"><operator pos:start="23:45" pos:end="23:45">&amp;</operator><name pos:start="23:46" pos:end="23:50">ploff</name></expr></argument>, <argument pos:start="23:53" pos:end="23:56"><expr pos:start="23:53" pos:end="23:56"><operator pos:start="23:53" pos:end="23:53">&amp;</operator><name pos:start="23:54" pos:end="23:56">tci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:7">pkt</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:12">tci</name></name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:18">tci</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:50"><expr pos:start="33:5" pos:end="33:49"><call pos:start="33:5" pos:end="33:49"><name pos:start="33:5" pos:end="33:24">net_rx_pkt_pull_data</name><argument_list pos:start="33:25" pos:end="33:49">(<argument pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:28">pkt</name></expr></argument>, <argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:33">iov</name></expr></argument>, <argument pos:start="33:36" pos:end="33:41"><expr pos:start="33:36" pos:end="33:41"><name pos:start="33:36" pos:end="33:41">iovcnt</name></expr></argument>, <argument pos:start="33:44" pos:end="33:48"><expr pos:start="33:44" pos:end="33:48"><name pos:start="33:44" pos:end="33:48">ploff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
