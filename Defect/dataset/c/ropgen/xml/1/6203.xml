<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6203.c" pos:tabs="8"><function pos:start="1:1" pos:end="76:23"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">vpx_decode</name><parameter_list pos:start="1:22" pos:end="2:66">(<parameter pos:start="1:23" pos:end="1:43"><decl pos:start="1:23" pos:end="1:43"><type pos:start="1:23" pos:end="1:43"><name pos:start="1:23" pos:end="1:36">AVCodecContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">avctx</name></decl></parameter>,
                      <parameter pos:start="2:23" pos:end="2:32"><decl pos:start="2:23" pos:end="2:32"><type pos:start="2:23" pos:end="2:32"><name pos:start="2:23" pos:end="2:26">void</name> <modifier pos:start="2:28" pos:end="2:28">*</modifier></type><name pos:start="2:29" pos:end="2:32">data</name></decl></parameter>, <parameter pos:start="2:35" pos:end="2:48"><decl pos:start="2:35" pos:end="2:48"><type pos:start="2:35" pos:end="2:48"><name pos:start="2:35" pos:end="2:37">int</name> <modifier pos:start="2:39" pos:end="2:39">*</modifier></type><name pos:start="2:40" pos:end="2:48">got_frame</name></decl></parameter>, <parameter pos:start="2:51" pos:end="2:65"><decl pos:start="2:51" pos:end="2:65"><type pos:start="2:51" pos:end="2:65"><name pos:start="2:51" pos:end="2:58">AVPacket</name> <modifier pos:start="2:60" pos:end="2:60">*</modifier></type><name pos:start="2:61" pos:end="2:65">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="76:23">{<block_content pos:start="4:5" pos:end="76:23">
    <decl_stmt pos:start="4:5" pos:end="4:39"><decl pos:start="4:5" pos:end="4:38"><type pos:start="4:5" pos:end="4:16"><name pos:start="4:5" pos:end="4:14">VPxContext</name> <modifier pos:start="4:16" pos:end="4:16">*</modifier></type><name pos:start="4:17" pos:end="4:19">ctx</name> <init pos:start="4:21" pos:end="4:38">= <expr pos:start="4:23" pos:end="4:38"><name pos:start="4:23" pos:end="4:38"><name pos:start="4:23" pos:end="4:27">avctx</name><operator pos:start="4:28" pos:end="4:29">-&gt;</operator><name pos:start="4:30" pos:end="4:38">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:20">picture</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">data</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:28"><decl pos:start="6:5" pos:end="6:27"><type pos:start="6:5" pos:end="6:16"><specifier pos:start="6:5" pos:end="6:9">const</specifier> <name pos:start="6:11" pos:end="6:14">void</name> <modifier pos:start="6:16" pos:end="6:16">*</modifier></type><name pos:start="6:17" pos:end="6:20">iter</name> <init pos:start="6:22" pos:end="6:27">= <expr pos:start="6:24" pos:end="6:27"><name pos:start="6:24" pos:end="6:27">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">void</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:26">iter_alpha</name> <init pos:start="7:28" pos:end="7:33">= <expr pos:start="7:30" pos:end="7:33"><name pos:start="7:30" pos:end="7:33">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:38"><decl pos:start="8:5" pos:end="8:25"><type pos:start="8:5" pos:end="8:22"><name pos:start="8:5" pos:end="8:20"><name pos:start="8:5" pos:end="8:10">struct</name> <name pos:start="8:12" pos:end="8:20">vpx_image</name></name> <modifier pos:start="8:22" pos:end="8:22">*</modifier></type><name pos:start="8:23" pos:end="8:25">img</name></decl>, <decl pos:start="8:28" pos:end="8:37"><type ref="prev" pos:start="8:5" pos:end="8:22"><modifier pos:start="8:28" pos:end="8:28">*</modifier></type><name pos:start="8:29" pos:end="8:37">img_alpha</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:30"><decl pos:start="10:5" pos:end="10:29"><type pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:11">uint8_t</name> <modifier pos:start="10:13" pos:end="10:13">*</modifier></type><name pos:start="10:14" pos:end="10:22">side_data</name> <init pos:start="10:24" pos:end="10:29">= <expr pos:start="10:26" pos:end="10:29"><name pos:start="10:26" pos:end="10:29">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:22">side_data_size</name> <init pos:start="11:24" pos:end="11:26">= <expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:71"><expr pos:start="12:5" pos:end="12:70"><name pos:start="12:5" pos:end="12:7">ret</name> <operator pos:start="12:9" pos:end="12:9">=</operator> <call pos:start="12:11" pos:end="12:70"><name pos:start="12:11" pos:end="12:22">decode_frame</name><argument_list pos:start="12:23" pos:end="12:70">(<argument pos:start="12:24" pos:end="12:28"><expr pos:start="12:24" pos:end="12:28"><name pos:start="12:24" pos:end="12:28">avctx</name></expr></argument>, <argument pos:start="12:31" pos:end="12:43"><expr pos:start="12:31" pos:end="12:43"><operator pos:start="12:31" pos:end="12:31">&amp;</operator><name pos:start="12:32" pos:end="12:43"><name pos:start="12:32" pos:end="12:34">ctx</name><operator pos:start="12:35" pos:end="12:36">-&gt;</operator><name pos:start="12:37" pos:end="12:43">decoder</name></name></expr></argument>, <argument pos:start="12:46" pos:end="12:56"><expr pos:start="12:46" pos:end="12:56"><name pos:start="12:46" pos:end="12:56"><name pos:start="12:46" pos:end="12:50">avpkt</name><operator pos:start="12:51" pos:end="12:52">-&gt;</operator><name pos:start="12:53" pos:end="12:56">data</name></name></expr></argument>, <argument pos:start="12:59" pos:end="12:69"><expr pos:start="12:59" pos:end="12:69"><name pos:start="12:59" pos:end="12:69"><name pos:start="12:59" pos:end="12:63">avpkt</name><operator pos:start="12:64" pos:end="12:65">-&gt;</operator><name pos:start="12:66" pos:end="12:69">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="13:5" pos:end="14:19"><if pos:start="13:5" pos:end="14:19">if <condition pos:start="13:8" pos:end="13:12">(<expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">ret</name></expr>)</condition><block type="pseudo" pos:start="14:9" pos:end="14:19"><block_content pos:start="14:9" pos:end="14:19">
        <return pos:start="14:9" pos:end="14:19">return <expr pos:start="14:16" pos:end="14:18"><name pos:start="14:16" pos:end="14:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="15:5" pos:end="17:57"><expr pos:start="15:5" pos:end="17:56"><name pos:start="15:5" pos:end="15:13">side_data</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="17:56"><name pos:start="15:17" pos:end="15:39">av_packet_get_side_data</name><argument_list pos:start="15:40" pos:end="17:56">(<argument pos:start="15:41" pos:end="15:45"><expr pos:start="15:41" pos:end="15:45"><name pos:start="15:41" pos:end="15:45">avpkt</name></expr></argument>,
                                        <argument pos:start="16:41" pos:end="16:76"><expr pos:start="16:41" pos:end="16:76"><name pos:start="16:41" pos:end="16:76">AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL</name></expr></argument>,
                                        <argument pos:start="17:41" pos:end="17:55"><expr pos:start="17:41" pos:end="17:55"><operator pos:start="17:41" pos:end="17:41">&amp;</operator><name pos:start="17:42" pos:end="17:55">side_data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="18:5" pos:end="76:23"><if pos:start="18:5" pos:end="76:23">if <condition pos:start="18:8" pos:end="18:27">(<expr pos:start="18:9" pos:end="18:26"><name pos:start="18:9" pos:end="18:22">side_data_size</name> <operator pos:start="18:24" pos:end="18:24">&gt;</operator> <literal type="number" pos:start="18:26" pos:end="18:26">1</literal></expr>)</condition> <block pos:start="18:29" pos:end="76:23">{<block_content pos:start="19:9" pos:end="76:23">
        <decl_stmt pos:start="19:9" pos:end="19:58"><decl pos:start="19:9" pos:end="19:57"><type pos:start="19:9" pos:end="19:22"><specifier pos:start="19:9" pos:end="19:13">const</specifier> <name pos:start="19:15" pos:end="19:22">uint64_t</name></type> <name pos:start="19:24" pos:end="19:36">additional_id</name> <init pos:start="19:38" pos:end="19:57">= <expr pos:start="19:40" pos:end="19:57"><call pos:start="19:40" pos:end="19:57"><name pos:start="19:40" pos:end="19:46">AV_RB64</name><argument_list pos:start="19:47" pos:end="19:57">(<argument pos:start="19:48" pos:end="19:56"><expr pos:start="19:48" pos:end="19:56"><name pos:start="19:48" pos:end="19:56">side_data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="20:9" pos:end="20:23"><expr pos:start="20:9" pos:end="20:22"><name pos:start="20:9" pos:end="20:17">side_data</name> <operator pos:start="20:19" pos:end="20:20">+=</operator> <literal type="number" pos:start="20:22" pos:end="20:22">8</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:22">side_data_size</name> <operator pos:start="21:24" pos:end="21:25">-=</operator> <literal type="number" pos:start="21:27" pos:end="21:27">8</literal></expr>;</expr_stmt>
        <if_stmt pos:start="22:9" pos:end="76:23"><if pos:start="22:9" pos:end="76:23">if <condition pos:start="22:12" pos:end="22:31">(<expr pos:start="22:13" pos:end="22:30"><name pos:start="22:13" pos:end="22:25">additional_id</name> <operator pos:start="22:27" pos:end="22:28">==</operator> <literal type="number" pos:start="22:30" pos:end="22:30">1</literal></expr>)</condition> <block pos:start="22:33" pos:end="76:23">{<block_content pos:start="23:13" pos:end="76:23">  <comment type="line" pos:start="22:36" pos:end="22:70">// 1 stands for alpha channel data.</comment>
            <if_stmt pos:start="23:13" pos:end="76:23"><if pos:start="23:13" pos:end="76:23">if <condition pos:start="23:16" pos:end="23:40">(<expr pos:start="23:17" pos:end="23:39"><operator pos:start="23:17" pos:end="23:17">!</operator><name pos:start="23:18" pos:end="23:39"><name pos:start="23:18" pos:end="23:20">ctx</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:39">has_alpha_channel</name></name></expr>)</condition> <block pos:start="23:42" pos:end="76:23">{<block_content pos:start="24:17" pos:end="76:23">
                <expr_stmt pos:start="24:17" pos:end="24:43"><expr pos:start="24:17" pos:end="24:42"><name pos:start="24:17" pos:end="24:38"><name pos:start="24:17" pos:end="24:19">ctx</name><operator pos:start="24:20" pos:end="24:21">-&gt;</operator><name pos:start="24:22" pos:end="24:38">has_alpha_channel</name></name> <operator pos:start="24:40" pos:end="24:40">=</operator> <literal type="number" pos:start="24:42" pos:end="24:42">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="25:17" pos:end="34:34"><expr pos:start="25:17" pos:end="34:33"><name pos:start="25:17" pos:end="25:19">ret</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="34:33"><name pos:start="25:23" pos:end="25:30">vpx_init</name><argument_list pos:start="25:31" pos:end="34:33">(<argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><name pos:start="25:32" pos:end="25:36">avctx</name></expr></argument>,
<cpp:if pos:start="26:1" pos:end="26:58">#<cpp:directive pos:start="26:2" pos:end="26:3">if</cpp:directive> <expr pos:start="26:5" pos:end="26:58"><ternary pos:start="26:5" pos:end="26:58"><condition pos:start="26:5" pos:end="26:58"><expr pos:start="26:5" pos:end="26:58"><name pos:start="26:5" pos:end="26:29">CONFIG_LIBVPX_VP8_DECODER</name> <operator pos:start="26:31" pos:end="26:32">&amp;&amp;</operator> <name pos:start="26:34" pos:end="26:58">CONFIG_LIBVPX_VP9_DECODER</name></expr></condition></ternary></expr></cpp:if>
                               <argument pos:start="27:32" pos:end="28:78"><expr pos:start="27:32" pos:end="28:78"><ternary pos:start="27:32" pos:end="28:78"><condition pos:start="27:32" pos:end="27:69"><expr pos:start="27:32" pos:end="27:67"><operator pos:start="27:32" pos:end="27:32">(</operator><name pos:start="27:33" pos:end="27:47"><name pos:start="27:33" pos:end="27:37">avctx</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:47">codec_id</name></name> <operator pos:start="27:49" pos:end="27:50">==</operator> <name pos:start="27:52" pos:end="27:66">AV_CODEC_ID_VP8</name><operator pos:start="27:67" pos:end="27:67">)</operator></expr> ?</condition><then pos:start="28:32" pos:end="28:53">
                               <expr pos:start="28:32" pos:end="28:53"><operator pos:start="28:32" pos:end="28:32">&amp;</operator><name pos:start="28:33" pos:end="28:53">vpx_codec_vp8_dx_algo</name></expr> </then><else pos:start="28:55" pos:end="28:78">: <expr pos:start="28:57" pos:end="28:78"><operator pos:start="28:57" pos:end="28:57">&amp;</operator><name pos:start="28:58" pos:end="28:78">vpx_codec_vp9_dx_algo</name></expr></else></ternary></expr></argument>,
<cpp:elif pos:start="29:1" pos:end="29:31">#<cpp:directive pos:start="29:2" pos:end="29:5">elif</cpp:directive> <expr pos:start="29:7" pos:end="29:31"><name pos:start="29:7" pos:end="29:31">CONFIG_LIBVPX_VP8_DECODER</name></expr></cpp:elif>
                               <argument pos:start="30:32" pos:end="30:53"><expr pos:start="30:32" pos:end="30:53"><operator pos:start="30:32" pos:end="30:32">&amp;</operator><name pos:start="30:33" pos:end="30:53">vpx_codec_vp8_dx_algo</name></expr></argument>,
<cpp:else pos:start="31:1" pos:end="31:5">#<cpp:directive pos:start="31:2" pos:end="31:5">else</cpp:directive></cpp:else>
                               <argument pos:start="32:32" pos:end="32:53"><expr pos:start="32:32" pos:end="32:53"><operator pos:start="32:32" pos:end="32:32">&amp;</operator><name pos:start="32:33" pos:end="32:53">vpx_codec_vp9_dx_algo</name></expr></argument>,
<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>
                               <argument pos:start="34:32" pos:end="34:32"><expr pos:start="34:32" pos:end="34:32"><literal type="number" pos:start="34:32" pos:end="34:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="35:17" pos:end="36:31"><if pos:start="35:17" pos:end="36:31">if <condition pos:start="35:20" pos:end="35:24">(<expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">ret</name></expr>)</condition><block type="pseudo" pos:start="36:21" pos:end="36:31"><block_content pos:start="36:21" pos:end="36:31">
                    <return pos:start="36:21" pos:end="36:31">return <expr pos:start="36:28" pos:end="36:30"><name pos:start="36:28" pos:end="36:30">ret</name></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="37:13" pos:end="38:47"><expr pos:start="37:13" pos:end="38:46"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="38:46"><name pos:start="37:19" pos:end="37:30">decode_frame</name><argument_list pos:start="37:31" pos:end="38:46">(<argument pos:start="37:32" pos:end="37:36"><expr pos:start="37:32" pos:end="37:36"><name pos:start="37:32" pos:end="37:36">avctx</name></expr></argument>, <argument pos:start="37:39" pos:end="37:57"><expr pos:start="37:39" pos:end="37:57"><operator pos:start="37:39" pos:end="37:39">&amp;</operator><name pos:start="37:40" pos:end="37:57"><name pos:start="37:40" pos:end="37:42">ctx</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:57">decoder_alpha</name></name></expr></argument>, <argument pos:start="37:60" pos:end="37:68"><expr pos:start="37:60" pos:end="37:68"><name pos:start="37:60" pos:end="37:68">side_data</name></expr></argument>,
                               <argument pos:start="38:32" pos:end="38:45"><expr pos:start="38:32" pos:end="38:45"><name pos:start="38:32" pos:end="38:45">side_data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="39:13" pos:end="40:27"><if pos:start="39:13" pos:end="40:27">if <condition pos:start="39:16" pos:end="39:20">(<expr pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">ret</name></expr>)</condition><block type="pseudo" pos:start="40:17" pos:end="40:27"><block_content pos:start="40:17" pos:end="40:27">
                <return pos:start="40:17" pos:end="40:27">return <expr pos:start="40:24" pos:end="40:26"><name pos:start="40:24" pos:end="40:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="41:5" pos:end="76:23"><if pos:start="41:5" pos:end="76:23">if <condition pos:start="41:8" pos:end="43:78">(<expr pos:start="41:9" pos:end="43:77"><operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:12">img</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:56"><name pos:start="41:16" pos:end="41:34">vpx_codec_get_frame</name><argument_list pos:start="41:35" pos:end="41:56">(<argument pos:start="41:36" pos:end="41:48"><expr pos:start="41:36" pos:end="41:48"><operator pos:start="41:36" pos:end="41:36">&amp;</operator><name pos:start="41:37" pos:end="41:48"><name pos:start="41:37" pos:end="41:39">ctx</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:48">decoder</name></name></expr></argument>, <argument pos:start="41:51" pos:end="41:55"><expr pos:start="41:51" pos:end="41:55"><operator pos:start="41:51" pos:end="41:51">&amp;</operator><name pos:start="41:52" pos:end="41:55">iter</name></expr></argument>)</argument_list></call><operator pos:start="41:57" pos:end="41:57">)</operator> <operator pos:start="41:59" pos:end="41:60">&amp;&amp;</operator>
        <operator pos:start="42:9" pos:end="42:9">(</operator><operator pos:start="42:10" pos:end="42:10">!</operator><name pos:start="42:11" pos:end="42:32"><name pos:start="42:11" pos:end="42:13">ctx</name><operator pos:start="42:14" pos:end="42:15">-&gt;</operator><name pos:start="42:16" pos:end="42:32">has_alpha_channel</name></name> <operator pos:start="42:34" pos:end="42:35">||</operator>
         <operator pos:start="43:10" pos:end="43:10">(</operator><name pos:start="43:11" pos:end="43:19">img_alpha</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="43:75"><name pos:start="43:23" pos:end="43:41">vpx_codec_get_frame</name><argument_list pos:start="43:42" pos:end="43:75">(<argument pos:start="43:43" pos:end="43:61"><expr pos:start="43:43" pos:end="43:61"><operator pos:start="43:43" pos:end="43:43">&amp;</operator><name pos:start="43:44" pos:end="43:61"><name pos:start="43:44" pos:end="43:46">ctx</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:61">decoder_alpha</name></name></expr></argument>, <argument pos:start="43:64" pos:end="43:74"><expr pos:start="43:64" pos:end="43:74"><operator pos:start="43:64" pos:end="43:64">&amp;</operator><name pos:start="43:65" pos:end="43:74">iter_alpha</name></expr></argument>)</argument_list></call><operator pos:start="43:76" pos:end="43:76">)</operator><operator pos:start="43:77" pos:end="43:77">)</operator></expr>)</condition> <block pos:start="43:80" pos:end="76:23">{<block_content pos:start="44:9" pos:end="76:23">
        <decl_stmt pos:start="44:9" pos:end="44:27"><decl pos:start="44:9" pos:end="44:26"><type pos:start="44:9" pos:end="44:17"><name pos:start="44:9" pos:end="44:15">uint8_t</name> <modifier pos:start="44:17" pos:end="44:17">*</modifier></type><name pos:start="44:18" pos:end="44:26"><name pos:start="44:18" pos:end="44:23">planes</name><index pos:start="44:24" pos:end="44:26">[<expr pos:start="44:25" pos:end="44:25"><literal type="number" pos:start="44:25" pos:end="44:25">4</literal></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="45:9" pos:end="45:25"><decl pos:start="45:9" pos:end="45:24"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:21">linesizes</name><index pos:start="45:22" pos:end="45:24">[<expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">4</literal></expr>]</index></name></decl>;</decl_stmt>
        <if_stmt pos:start="46:9" pos:end="76:23"><if pos:start="46:9" pos:end="76:23">if <condition pos:start="46:12" pos:end="46:72">(<expr pos:start="46:13" pos:end="46:71"><operator pos:start="46:13" pos:end="46:13">(</operator><name pos:start="46:14" pos:end="46:16">ret</name> <operator pos:start="46:18" pos:end="46:18">=</operator> <call pos:start="46:20" pos:end="46:66"><name pos:start="46:20" pos:end="46:30">set_pix_fmt</name><argument_list pos:start="46:31" pos:end="46:66">(<argument pos:start="46:32" pos:end="46:36"><expr pos:start="46:32" pos:end="46:36"><name pos:start="46:32" pos:end="46:36">avctx</name></expr></argument>, <argument pos:start="46:39" pos:end="46:41"><expr pos:start="46:39" pos:end="46:41"><name pos:start="46:39" pos:end="46:41">img</name></expr></argument>, <argument pos:start="46:44" pos:end="46:65"><expr pos:start="46:44" pos:end="46:65"><name pos:start="46:44" pos:end="46:65"><name pos:start="46:44" pos:end="46:46">ctx</name><operator pos:start="46:47" pos:end="46:48">-&gt;</operator><name pos:start="46:49" pos:end="46:65">has_alpha_channel</name></name></expr></argument>)</argument_list></call><operator pos:start="46:67" pos:end="46:67">)</operator> <operator pos:start="46:69" pos:end="46:69">&lt;</operator> <literal type="number" pos:start="46:71" pos:end="46:71">0</literal></expr>)</condition> <block pos:start="46:74" pos:end="76:23">{<block_content pos:start="48:13" pos:end="76:23">
<cpp:ifdef pos:start="47:1" pos:end="47:31">#<cpp:directive pos:start="47:2" pos:end="47:6">ifdef</cpp:directive> <name pos:start="47:8" pos:end="47:31">VPX_IMG_FMT_HIGHBITDEPTH</name></cpp:ifdef>
            <expr_stmt pos:start="48:13" pos:end="51:0"><expr pos:start="48:13" pos:end="49:44"><call pos:start="48:13" pos:end="49:44"><name pos:start="48:13" pos:end="48:18">av_log</name><argument_list pos:start="48:19" pos:end="49:44">(<argument pos:start="48:20" pos:end="48:24"><expr pos:start="48:20" pos:end="48:24"><name pos:start="48:20" pos:end="48:24">avctx</name></expr></argument>, <argument pos:start="48:27" pos:end="48:38"><expr pos:start="48:27" pos:end="48:38"><name pos:start="48:27" pos:end="48:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="48:41" pos:end="48:95"><expr pos:start="48:41" pos:end="48:95"><literal type="string" pos:start="48:41" pos:end="48:95">"Unsupported output colorspace (%d) / bit_depth (%d)\n"</literal></expr></argument>,
                   <argument pos:start="49:20" pos:end="49:27"><expr pos:start="49:20" pos:end="49:27"><name pos:start="49:20" pos:end="49:27"><name pos:start="49:20" pos:end="49:22">img</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:27">fmt</name></name></expr></argument>, <argument pos:start="49:30" pos:end="49:43"><expr pos:start="49:30" pos:end="49:43"><name pos:start="49:30" pos:end="49:43"><name pos:start="49:30" pos:end="49:32">img</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:43">bit_depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:start="50:1" pos:end="50:5">#<cpp:directive pos:start="50:2" pos:end="50:5">else</cpp:directive></cpp:else>
            <expr_stmt pos:start="51:13" pos:end="54:0"><expr pos:start="51:13" pos:end="52:31"><call pos:start="51:13" pos:end="52:31"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="52:31">(<argument pos:start="51:20" pos:end="51:24"><expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:24">avctx</name></expr></argument>, <argument pos:start="51:27" pos:end="51:38"><expr pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:41" pos:end="51:95"><expr pos:start="51:41" pos:end="51:95"><literal type="string" pos:start="51:41" pos:end="51:95">"Unsupported output colorspace (%d) / bit_depth (%d)\n"</literal></expr></argument>,
                   <argument pos:start="52:20" pos:end="52:27"><expr pos:start="52:20" pos:end="52:27"><name pos:start="52:20" pos:end="52:27"><name pos:start="52:20" pos:end="52:22">img</name><operator pos:start="52:23" pos:end="52:24">-&gt;</operator><name pos:start="52:25" pos:end="52:27">fmt</name></name></expr></argument>, <argument pos:start="52:30" pos:end="52:30"><expr pos:start="52:30" pos:end="52:30"><literal type="number" pos:start="52:30" pos:end="52:30">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="53:1" pos:end="53:6">#<cpp:directive pos:start="53:2" pos:end="53:6">endif</cpp:directive></cpp:endif>
            <return pos:start="54:13" pos:end="54:23">return <expr pos:start="54:20" pos:end="54:22"><name pos:start="54:20" pos:end="54:22">ret</name></expr>;</return>
        <if_stmt pos:start="55:9" pos:end="76:23"><if pos:start="55:9" pos:end="76:23">if <condition pos:start="55:12" pos:end="55:78">(<expr pos:start="55:13" pos:end="55:77"><operator pos:start="55:13" pos:end="55:13">(</operator><name pos:start="55:14" pos:end="55:16">int</name><operator pos:start="55:17" pos:end="55:17">)</operator> <name pos:start="55:19" pos:end="55:26"><name pos:start="55:19" pos:end="55:21">img</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:26">d_w</name></name> <operator pos:start="55:28" pos:end="55:29">!=</operator> <name pos:start="55:31" pos:end="55:42"><name pos:start="55:31" pos:end="55:35">avctx</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:42">width</name></name> <operator pos:start="55:44" pos:end="55:45">||</operator> <operator pos:start="55:47" pos:end="55:47">(</operator><name pos:start="55:48" pos:end="55:50">int</name><operator pos:start="55:51" pos:end="55:51">)</operator> <name pos:start="55:53" pos:end="55:60"><name pos:start="55:53" pos:end="55:55">img</name><operator pos:start="55:56" pos:end="55:57">-&gt;</operator><name pos:start="55:58" pos:end="55:60">d_h</name></name> <operator pos:start="55:62" pos:end="55:63">!=</operator> <name pos:start="55:65" pos:end="55:77"><name pos:start="55:65" pos:end="55:69">avctx</name><operator pos:start="55:70" pos:end="55:71">-&gt;</operator><name pos:start="55:72" pos:end="55:77">height</name></name></expr>)</condition> <block pos:start="55:80" pos:end="76:23">{<block_content pos:start="56:13" pos:end="76:23">
            <expr_stmt pos:start="56:13" pos:end="57:68"><expr pos:start="56:13" pos:end="57:67"><call pos:start="56:13" pos:end="57:67"><name pos:start="56:13" pos:end="56:18">av_log</name><argument_list pos:start="56:19" pos:end="57:67">(<argument pos:start="56:20" pos:end="56:24"><expr pos:start="56:20" pos:end="56:24"><name pos:start="56:20" pos:end="56:24">avctx</name></expr></argument>, <argument pos:start="56:27" pos:end="56:37"><expr pos:start="56:27" pos:end="56:37"><name pos:start="56:27" pos:end="56:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="56:40" pos:end="56:75"><expr pos:start="56:40" pos:end="56:75"><literal type="string" pos:start="56:40" pos:end="56:75">"dimension change! %dx%d -&gt; %dx%d\n"</literal></expr></argument>,
                   <argument pos:start="57:20" pos:end="57:31"><expr pos:start="57:20" pos:end="57:31"><name pos:start="57:20" pos:end="57:31"><name pos:start="57:20" pos:end="57:24">avctx</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:31">width</name></name></expr></argument>, <argument pos:start="57:34" pos:end="57:46"><expr pos:start="57:34" pos:end="57:46"><name pos:start="57:34" pos:end="57:46"><name pos:start="57:34" pos:end="57:38">avctx</name><operator pos:start="57:39" pos:end="57:40">-&gt;</operator><name pos:start="57:41" pos:end="57:46">height</name></name></expr></argument>, <argument pos:start="57:49" pos:end="57:56"><expr pos:start="57:49" pos:end="57:56"><name pos:start="57:49" pos:end="57:56"><name pos:start="57:49" pos:end="57:51">img</name><operator pos:start="57:52" pos:end="57:53">-&gt;</operator><name pos:start="57:54" pos:end="57:56">d_w</name></name></expr></argument>, <argument pos:start="57:59" pos:end="57:66"><expr pos:start="57:59" pos:end="57:66"><name pos:start="57:59" pos:end="57:66"><name pos:start="57:59" pos:end="57:61">img</name><operator pos:start="57:62" pos:end="57:63">-&gt;</operator><name pos:start="57:64" pos:end="57:66">d_h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="58:13" pos:end="58:63"><expr pos:start="58:13" pos:end="58:62"><name pos:start="58:13" pos:end="58:15">ret</name> <operator pos:start="58:17" pos:end="58:17">=</operator> <call pos:start="58:19" pos:end="58:62"><name pos:start="58:19" pos:end="58:35">ff_set_dimensions</name><argument_list pos:start="58:36" pos:end="58:62">(<argument pos:start="58:37" pos:end="58:41"><expr pos:start="58:37" pos:end="58:41"><name pos:start="58:37" pos:end="58:41">avctx</name></expr></argument>, <argument pos:start="58:44" pos:end="58:51"><expr pos:start="58:44" pos:end="58:51"><name pos:start="58:44" pos:end="58:51"><name pos:start="58:44" pos:end="58:46">img</name><operator pos:start="58:47" pos:end="58:48">-&gt;</operator><name pos:start="58:49" pos:end="58:51">d_w</name></name></expr></argument>, <argument pos:start="58:54" pos:end="58:61"><expr pos:start="58:54" pos:end="58:61"><name pos:start="58:54" pos:end="58:61"><name pos:start="58:54" pos:end="58:56">img</name><operator pos:start="58:57" pos:end="58:58">-&gt;</operator><name pos:start="58:59" pos:end="58:61">d_h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="59:13" pos:end="60:27"><if pos:start="59:13" pos:end="60:27">if <condition pos:start="59:16" pos:end="59:24">(<expr pos:start="59:17" pos:end="59:23"><name pos:start="59:17" pos:end="59:19">ret</name> <operator pos:start="59:21" pos:end="59:21">&lt;</operator> <literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr>)</condition><block type="pseudo" pos:start="60:17" pos:end="60:27"><block_content pos:start="60:17" pos:end="60:27">
                <return pos:start="60:17" pos:end="60:27">return <expr pos:start="60:24" pos:end="60:26"><name pos:start="60:24" pos:end="60:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt pos:start="61:9" pos:end="62:23"><if pos:start="61:9" pos:end="62:23">if <condition pos:start="61:12" pos:end="61:57">(<expr pos:start="61:13" pos:end="61:56"><operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:16">ret</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:51"><name pos:start="61:20" pos:end="61:32">ff_get_buffer</name><argument_list pos:start="61:33" pos:end="61:51">(<argument pos:start="61:34" pos:end="61:38"><expr pos:start="61:34" pos:end="61:38"><name pos:start="61:34" pos:end="61:38">avctx</name></expr></argument>, <argument pos:start="61:41" pos:end="61:47"><expr pos:start="61:41" pos:end="61:47"><name pos:start="61:41" pos:end="61:47">picture</name></expr></argument>, <argument pos:start="61:50" pos:end="61:50"><expr pos:start="61:50" pos:end="61:50"><literal type="number" pos:start="61:50" pos:end="61:50">0</literal></expr></argument>)</argument_list></call><operator pos:start="61:52" pos:end="61:52">)</operator> <operator pos:start="61:54" pos:end="61:54">&lt;</operator> <literal type="number" pos:start="61:56" pos:end="61:56">0</literal></expr>)</condition><block type="pseudo" pos:start="62:13" pos:end="62:23"><block_content pos:start="62:13" pos:end="62:23">
            <return pos:start="62:13" pos:end="62:23">return <expr pos:start="62:20" pos:end="62:22"><name pos:start="62:20" pos:end="62:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:14">planes</name><index pos:start="63:15" pos:end="63:17">[<expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">0</literal></expr>]</index></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:44"><name pos:start="63:21" pos:end="63:23">img</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:31">planes</name><index pos:start="63:32" pos:end="63:44">[<expr pos:start="63:33" pos:end="63:43"><name pos:start="63:33" pos:end="63:43">VPX_PLANE_Y</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="64:9" pos:end="64:45"><expr pos:start="64:9" pos:end="64:44"><name pos:start="64:9" pos:end="64:17"><name pos:start="64:9" pos:end="64:14">planes</name><index pos:start="64:15" pos:end="64:17">[<expr pos:start="64:16" pos:end="64:16"><literal type="number" pos:start="64:16" pos:end="64:16">1</literal></expr>]</index></name> <operator pos:start="64:19" pos:end="64:19">=</operator> <name pos:start="64:21" pos:end="64:44"><name pos:start="64:21" pos:end="64:23">img</name><operator pos:start="64:24" pos:end="64:25">-&gt;</operator><name pos:start="64:26" pos:end="64:31">planes</name><index pos:start="64:32" pos:end="64:44">[<expr pos:start="64:33" pos:end="64:43"><name pos:start="64:33" pos:end="64:43">VPX_PLANE_U</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="65:9" pos:end="65:45"><expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:14">planes</name><index pos:start="65:15" pos:end="65:17">[<expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">2</literal></expr>]</index></name> <operator pos:start="65:19" pos:end="65:19">=</operator> <name pos:start="65:21" pos:end="65:44"><name pos:start="65:21" pos:end="65:23">img</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:31">planes</name><index pos:start="65:32" pos:end="65:44">[<expr pos:start="65:33" pos:end="65:43"><name pos:start="65:33" pos:end="65:43">VPX_PLANE_V</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="66:9" pos:end="67:75"><expr pos:start="66:9" pos:end="67:74"><name pos:start="66:9" pos:end="66:17"><name pos:start="66:9" pos:end="66:14">planes</name><index pos:start="66:15" pos:end="66:17">[<expr pos:start="66:16" pos:end="66:16"><literal type="number" pos:start="66:16" pos:end="66:16">3</literal></expr>]</index></name> <operator pos:start="66:19" pos:end="66:19">=</operator>
            <ternary pos:start="67:13" pos:end="67:74"><condition pos:start="67:13" pos:end="67:36"><expr pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:15">ctx</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:34">has_alpha_channel</name></name></expr> ?</condition><then pos:start="67:38" pos:end="67:67"> <expr pos:start="67:38" pos:end="67:67"><name pos:start="67:38" pos:end="67:67"><name pos:start="67:38" pos:end="67:46">img_alpha</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:54">planes</name><index pos:start="67:55" pos:end="67:67">[<expr pos:start="67:56" pos:end="67:66"><name pos:start="67:56" pos:end="67:66">VPX_PLANE_Y</name></expr>]</index></name></expr> </then><else pos:start="67:69" pos:end="67:74">: <expr pos:start="67:71" pos:end="67:74"><name pos:start="67:71" pos:end="67:74">NULL</name></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="68:9" pos:end="68:48"><expr pos:start="68:9" pos:end="68:47"><name pos:start="68:9" pos:end="68:20"><name pos:start="68:9" pos:end="68:17">linesizes</name><index pos:start="68:18" pos:end="68:20">[<expr pos:start="68:19" pos:end="68:19"><literal type="number" pos:start="68:19" pos:end="68:19">0</literal></expr>]</index></name> <operator pos:start="68:22" pos:end="68:22">=</operator> <name pos:start="68:24" pos:end="68:47"><name pos:start="68:24" pos:end="68:26">img</name><operator pos:start="68:27" pos:end="68:28">-&gt;</operator><name pos:start="68:29" pos:end="68:34">stride</name><index pos:start="68:35" pos:end="68:47">[<expr pos:start="68:36" pos:end="68:46"><name pos:start="68:36" pos:end="68:46">VPX_PLANE_Y</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="69:9" pos:end="69:48"><expr pos:start="69:9" pos:end="69:47"><name pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:17">linesizes</name><index pos:start="69:18" pos:end="69:20">[<expr pos:start="69:19" pos:end="69:19"><literal type="number" pos:start="69:19" pos:end="69:19">1</literal></expr>]</index></name> <operator pos:start="69:22" pos:end="69:22">=</operator> <name pos:start="69:24" pos:end="69:47"><name pos:start="69:24" pos:end="69:26">img</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:34">stride</name><index pos:start="69:35" pos:end="69:47">[<expr pos:start="69:36" pos:end="69:46"><name pos:start="69:36" pos:end="69:46">VPX_PLANE_U</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="70:9" pos:end="70:48"><expr pos:start="70:9" pos:end="70:47"><name pos:start="70:9" pos:end="70:20"><name pos:start="70:9" pos:end="70:17">linesizes</name><index pos:start="70:18" pos:end="70:20">[<expr pos:start="70:19" pos:end="70:19"><literal type="number" pos:start="70:19" pos:end="70:19">2</literal></expr>]</index></name> <operator pos:start="70:22" pos:end="70:22">=</operator> <name pos:start="70:24" pos:end="70:47"><name pos:start="70:24" pos:end="70:26">img</name><operator pos:start="70:27" pos:end="70:28">-&gt;</operator><name pos:start="70:29" pos:end="70:34">stride</name><index pos:start="70:35" pos:end="70:47">[<expr pos:start="70:36" pos:end="70:46"><name pos:start="70:36" pos:end="70:46">VPX_PLANE_V</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="71:9" pos:end="72:72"><expr pos:start="71:9" pos:end="72:71"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:17">linesizes</name><index pos:start="71:18" pos:end="71:20">[<expr pos:start="71:19" pos:end="71:19"><literal type="number" pos:start="71:19" pos:end="71:19">3</literal></expr>]</index></name> <operator pos:start="71:22" pos:end="71:22">=</operator>
            <ternary pos:start="72:13" pos:end="72:71"><condition pos:start="72:13" pos:end="72:36"><expr pos:start="72:13" pos:end="72:34"><name pos:start="72:13" pos:end="72:34"><name pos:start="72:13" pos:end="72:15">ctx</name><operator pos:start="72:16" pos:end="72:17">-&gt;</operator><name pos:start="72:18" pos:end="72:34">has_alpha_channel</name></name></expr> ?</condition><then pos:start="72:38" pos:end="72:67"> <expr pos:start="72:38" pos:end="72:67"><name pos:start="72:38" pos:end="72:67"><name pos:start="72:38" pos:end="72:46">img_alpha</name><operator pos:start="72:47" pos:end="72:48">-&gt;</operator><name pos:start="72:49" pos:end="72:54">stride</name><index pos:start="72:55" pos:end="72:67">[<expr pos:start="72:56" pos:end="72:66"><name pos:start="72:56" pos:end="72:66">VPX_PLANE_Y</name></expr>]</index></name></expr> </then><else pos:start="72:69" pos:end="72:71">: <expr pos:start="72:71" pos:end="72:71"><literal type="number" pos:start="72:71" pos:end="72:71">0</literal></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="73:9" pos:end="74:69"><expr pos:start="73:9" pos:end="74:68"><call pos:start="73:9" pos:end="74:68"><name pos:start="73:9" pos:end="73:21">av_image_copy</name><argument_list pos:start="73:22" pos:end="74:68">(<argument pos:start="73:23" pos:end="73:35"><expr pos:start="73:23" pos:end="73:35"><name pos:start="73:23" pos:end="73:35"><name pos:start="73:23" pos:end="73:29">picture</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:35">data</name></name></expr></argument>, <argument pos:start="73:38" pos:end="73:54"><expr pos:start="73:38" pos:end="73:54"><name pos:start="73:38" pos:end="73:54"><name pos:start="73:38" pos:end="73:44">picture</name><operator pos:start="73:45" pos:end="73:46">-&gt;</operator><name pos:start="73:47" pos:end="73:54">linesize</name></name></expr></argument>, <argument pos:start="73:57" pos:end="73:79"><expr pos:start="73:57" pos:end="73:79"><operator pos:start="73:57" pos:end="73:57">(</operator><specifier pos:start="73:58" pos:end="73:62">const</specifier> <name pos:start="73:64" pos:end="73:70">uint8_t</name><operator pos:start="73:71" pos:end="73:71">*</operator><operator pos:start="73:72" pos:end="73:72">*</operator><operator pos:start="73:73" pos:end="73:73">)</operator><name pos:start="73:74" pos:end="73:79">planes</name></expr></argument>,
                      <argument pos:start="74:23" pos:end="74:31"><expr pos:start="74:23" pos:end="74:31"><name pos:start="74:23" pos:end="74:31">linesizes</name></expr></argument>, <argument pos:start="74:34" pos:end="74:47"><expr pos:start="74:34" pos:end="74:47"><name pos:start="74:34" pos:end="74:47"><name pos:start="74:34" pos:end="74:38">avctx</name><operator pos:start="74:39" pos:end="74:40">-&gt;</operator><name pos:start="74:41" pos:end="74:47">pix_fmt</name></name></expr></argument>, <argument pos:start="74:50" pos:end="74:57"><expr pos:start="74:50" pos:end="74:57"><name pos:start="74:50" pos:end="74:57"><name pos:start="74:50" pos:end="74:52">img</name><operator pos:start="74:53" pos:end="74:54">-&gt;</operator><name pos:start="74:55" pos:end="74:57">d_w</name></name></expr></argument>, <argument pos:start="74:60" pos:end="74:67"><expr pos:start="74:60" pos:end="74:67"><name pos:start="74:60" pos:end="74:67"><name pos:start="74:60" pos:end="74:62">img</name><operator pos:start="74:63" pos:end="74:64">-&gt;</operator><name pos:start="74:65" pos:end="74:67">d_h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="75:9" pos:end="75:33"><expr pos:start="75:9" pos:end="75:32"><operator pos:start="75:9" pos:end="75:9">*</operator><name pos:start="75:10" pos:end="75:18">got_frame</name>           <operator pos:start="75:30" pos:end="75:30">=</operator> <literal type="number" pos:start="75:32" pos:end="75:32">1</literal></expr>;</expr_stmt>
    <return pos:start="76:5" pos:end="76:23">return <expr pos:start="76:12" pos:end="76:22"><name pos:start="76:12" pos:end="76:22"><name pos:start="76:12" pos:end="76:16">avpkt</name><operator pos:start="76:17" pos:end="76:18">-&gt;</operator><name pos:start="76:19" pos:end="76:22">size</name></name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
