<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23294.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_mb_info</name><parameter_list pos:start="1:26" pos:end="2:63">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:41">IVI45DecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">ctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:65"><decl pos:start="1:49" pos:end="1:65"><type pos:start="1:49" pos:end="1:65"><name pos:start="1:49" pos:end="1:59">IVIBandDesc</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">band</name></decl></parameter>,
                          <parameter pos:start="2:27" pos:end="2:39"><decl pos:start="2:27" pos:end="2:39"><type pos:start="2:27" pos:end="2:39"><name pos:start="2:27" pos:end="2:33">IVITile</name> <modifier pos:start="2:35" pos:end="2:35">*</modifier></type><name pos:start="2:36" pos:end="2:39">tile</name></decl></parameter>, <parameter pos:start="2:42" pos:end="2:62"><decl pos:start="2:42" pos:end="2:62"><type pos:start="2:42" pos:end="2:62"><name pos:start="2:42" pos:end="2:55">AVCodecContext</name> <modifier pos:start="2:57" pos:end="2:57">*</modifier></type><name pos:start="2:58" pos:end="2:62">avctx</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="87:13">{<block_content pos:start="4:5" pos:end="87:13">
    <decl_stmt pos:start="4:5" pos:end="5:38"><decl pos:start="4:5" pos:end="4:17"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type>         <name pos:start="4:17" pos:end="4:17">x</name></decl>, <decl pos:start="4:20" pos:end="4:20"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:20" pos:end="4:20">y</name></decl>, <decl pos:start="4:23" pos:end="4:26"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:23" pos:end="4:26">mv_x</name></decl>, <decl pos:start="4:29" pos:end="4:32"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:29" pos:end="4:32">mv_y</name></decl>, <decl pos:start="4:35" pos:end="4:42"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:35" pos:end="4:42">mv_delta</name></decl>, <decl pos:start="4:45" pos:end="4:48"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:45" pos:end="4:48">offs</name></decl>, <decl pos:start="4:51" pos:end="4:59"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:51" pos:end="4:59">mb_offset</name></decl>,
                <decl pos:start="5:17" pos:end="5:24"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="5:17" pos:end="5:24">mv_scale</name></decl>, <decl pos:start="5:27" pos:end="5:37"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="5:27" pos:end="5:37">blks_per_mb</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:29"><decl pos:start="6:5" pos:end="6:19"><type pos:start="6:5" pos:end="6:17"><name pos:start="6:5" pos:end="6:13">IVIMbInfo</name>   <modifier pos:start="6:17" pos:end="6:17">*</modifier></type><name pos:start="6:18" pos:end="6:19">mb</name></decl>, <decl pos:start="6:22" pos:end="6:28"><type ref="prev" pos:start="6:5" pos:end="6:17"><modifier pos:start="6:22" pos:end="6:22">*</modifier></type><name pos:start="6:23" pos:end="6:28">ref_mb</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>         <name pos:start="7:17" pos:end="7:26">row_offset</name> <init pos:start="7:28" pos:end="7:56">= <expr pos:start="7:30" pos:end="7:56"><name pos:start="7:30" pos:end="7:42"><name pos:start="7:30" pos:end="7:33">band</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:42">mb_size</name></name> <operator pos:start="7:44" pos:end="7:44">*</operator> <name pos:start="7:46" pos:end="7:56"><name pos:start="7:46" pos:end="7:49">band</name><operator pos:start="7:50" pos:end="7:51">-&gt;</operator><name pos:start="7:52" pos:end="7:56">pitch</name></name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:23"><expr pos:start="8:5" pos:end="8:22"><name pos:start="8:5" pos:end="8:6">mb</name>     <operator pos:start="8:12" pos:end="8:12">=</operator> <name pos:start="8:14" pos:end="8:22"><name pos:start="8:14" pos:end="8:17">tile</name><operator pos:start="8:18" pos:end="8:19">-&gt;</operator><name pos:start="8:20" pos:end="8:22">mbs</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:27"><expr pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:10">ref_mb</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <name pos:start="9:14" pos:end="9:26"><name pos:start="9:14" pos:end="9:17">tile</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:26">ref_mbs</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:51"><expr pos:start="10:5" pos:end="10:50"><name pos:start="10:5" pos:end="10:8">offs</name>   <operator pos:start="10:12" pos:end="10:12">=</operator> <name pos:start="10:14" pos:end="10:23"><name pos:start="10:14" pos:end="10:17">tile</name><operator pos:start="10:18" pos:end="10:19">-&gt;</operator><name pos:start="10:20" pos:end="10:23">ypos</name></name> <operator pos:start="10:25" pos:end="10:25">*</operator> <name pos:start="10:27" pos:end="10:37"><name pos:start="10:27" pos:end="10:30">band</name><operator pos:start="10:31" pos:end="10:32">-&gt;</operator><name pos:start="10:33" pos:end="10:37">pitch</name></name> <operator pos:start="10:39" pos:end="10:39">+</operator> <name pos:start="10:41" pos:end="10:50"><name pos:start="10:41" pos:end="10:44">tile</name><operator pos:start="10:45" pos:end="10:46">-&gt;</operator><name pos:start="10:47" pos:end="10:50">xpos</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="14:77"><if pos:start="11:5" pos:end="14:77">if <condition pos:start="11:8" pos:end="12:77">(<expr pos:start="11:9" pos:end="12:76"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:15">ref_mb</name> <operator pos:start="11:17" pos:end="11:18">&amp;&amp;</operator>
        <operator pos:start="12:9" pos:end="12:9">(</operator><operator pos:start="12:10" pos:end="12:10">(</operator><name pos:start="12:11" pos:end="12:30"><name pos:start="12:11" pos:end="12:14">band</name><operator pos:start="12:15" pos:end="12:16">-&gt;</operator><name pos:start="12:17" pos:end="12:30">qdelta_present</name></name> <operator pos:start="12:32" pos:end="12:33">&amp;&amp;</operator> <name pos:start="12:35" pos:end="12:54"><name pos:start="12:35" pos:end="12:38">band</name><operator pos:start="12:39" pos:end="12:40">-&gt;</operator><name pos:start="12:41" pos:end="12:54">inherit_qdelta</name></name><operator pos:start="12:55" pos:end="12:55">)</operator> <operator pos:start="12:57" pos:end="12:58">||</operator> <name pos:start="12:60" pos:end="12:75"><name pos:start="12:60" pos:end="12:63">band</name><operator pos:start="12:64" pos:end="12:65">-&gt;</operator><name pos:start="12:66" pos:end="12:75">inherit_mv</name></name><operator pos:start="12:76" pos:end="12:76">)</operator></expr>)</condition><block type="pseudo" pos:start="14:5" pos:end="14:77"><block_content pos:start="14:5" pos:end="14:77">
    <comment type="block" pos:start="13:5" pos:end="13:41">/* scale factor for motion vectors */</comment>
    <expr_stmt pos:start="14:5" pos:end="14:77"><expr pos:start="14:5" pos:end="14:76"><name pos:start="14:5" pos:end="14:12">mv_scale</name> <operator pos:start="14:14" pos:end="14:14">=</operator> <operator pos:start="14:16" pos:end="14:16">(</operator><name pos:start="14:17" pos:end="14:30"><name pos:start="14:17" pos:end="14:19">ctx</name><operator pos:start="14:20" pos:end="14:21">-&gt;</operator><name pos:start="14:22" pos:end="14:27">planes</name><index pos:start="14:28" pos:end="14:30">[<expr pos:start="14:29" pos:end="14:29"><literal type="number" pos:start="14:29" pos:end="14:29">0</literal></expr>]</index></name><operator pos:start="14:31" pos:end="14:31">.</operator><name pos:start="14:32" pos:end="14:39"><name pos:start="14:32" pos:end="14:36">bands</name><index pos:start="14:37" pos:end="14:39">[<expr pos:start="14:38" pos:end="14:38"><literal type="number" pos:start="14:38" pos:end="14:38">0</literal></expr>]</index></name><operator pos:start="14:40" pos:end="14:40">.</operator><name pos:start="14:41" pos:end="14:47">mb_size</name> <operator pos:start="14:49" pos:end="14:50">&gt;&gt;</operator> <literal type="number" pos:start="14:52" pos:end="14:52">3</literal><operator pos:start="14:53" pos:end="14:53">)</operator> <operator pos:start="14:55" pos:end="14:55">-</operator> <operator pos:start="14:57" pos:end="14:57">(</operator><name pos:start="14:58" pos:end="14:70"><name pos:start="14:58" pos:end="14:61">band</name><operator pos:start="14:62" pos:end="14:63">-&gt;</operator><name pos:start="14:64" pos:end="14:70">mb_size</name></name> <operator pos:start="14:72" pos:end="14:73">&gt;&gt;</operator> <literal type="number" pos:start="14:75" pos:end="14:75">3</literal><operator pos:start="14:76" pos:end="14:76">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:8">mv_x</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <name pos:start="15:12" pos:end="15:15">mv_y</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>;</expr_stmt>
    <for pos:start="16:5" pos:end="87:13">for <control pos:start="16:9" pos:end="16:77">(<init pos:start="16:10" pos:end="16:24"><expr pos:start="16:10" pos:end="16:23"><name pos:start="16:10" pos:end="16:10">y</name> <operator pos:start="16:12" pos:end="16:12">=</operator> <name pos:start="16:14" pos:end="16:23"><name pos:start="16:14" pos:end="16:17">tile</name><operator pos:start="16:18" pos:end="16:19">-&gt;</operator><name pos:start="16:20" pos:end="16:23">ypos</name></name></expr>;</init> <condition pos:start="16:26" pos:end="16:57"><expr pos:start="16:26" pos:end="16:56"><name pos:start="16:26" pos:end="16:26">y</name> <operator pos:start="16:28" pos:end="16:28">&lt;</operator> <operator pos:start="16:30" pos:end="16:30">(</operator><name pos:start="16:31" pos:end="16:40"><name pos:start="16:31" pos:end="16:34">tile</name><operator pos:start="16:35" pos:end="16:36">-&gt;</operator><name pos:start="16:37" pos:end="16:40">ypos</name></name> <operator pos:start="16:42" pos:end="16:42">+</operator> <name pos:start="16:44" pos:end="16:55"><name pos:start="16:44" pos:end="16:47">tile</name><operator pos:start="16:48" pos:end="16:49">-&gt;</operator><name pos:start="16:50" pos:end="16:55">height</name></name><operator pos:start="16:56" pos:end="16:56">)</operator></expr>;</condition> <incr pos:start="16:59" pos:end="16:76"><expr pos:start="16:59" pos:end="16:76"><name pos:start="16:59" pos:end="16:59">y</name> <operator pos:start="16:61" pos:end="16:62">+=</operator> <name pos:start="16:64" pos:end="16:76"><name pos:start="16:64" pos:end="16:67">band</name><operator pos:start="16:68" pos:end="16:69">-&gt;</operator><name pos:start="16:70" pos:end="16:76">mb_size</name></name></expr></incr>)</control> <block pos:start="16:79" pos:end="87:13">{<block_content pos:start="17:9" pos:end="87:13">
        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:17">mb_offset</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:24">offs</name></expr>;</expr_stmt>
        <for pos:start="18:9" pos:end="87:13">for <control pos:start="18:13" pos:end="18:80">(<init pos:start="18:14" pos:end="18:28"><expr pos:start="18:14" pos:end="18:27"><name pos:start="18:14" pos:end="18:14">x</name> <operator pos:start="18:16" pos:end="18:16">=</operator> <name pos:start="18:18" pos:end="18:27"><name pos:start="18:18" pos:end="18:21">tile</name><operator pos:start="18:22" pos:end="18:23">-&gt;</operator><name pos:start="18:24" pos:end="18:27">xpos</name></name></expr>;</init> <condition pos:start="18:30" pos:end="18:60"><expr pos:start="18:30" pos:end="18:59"><name pos:start="18:30" pos:end="18:30">x</name> <operator pos:start="18:32" pos:end="18:32">&lt;</operator> <operator pos:start="18:34" pos:end="18:34">(</operator><name pos:start="18:35" pos:end="18:44"><name pos:start="18:35" pos:end="18:38">tile</name><operator pos:start="18:39" pos:end="18:40">-&gt;</operator><name pos:start="18:41" pos:end="18:44">xpos</name></name> <operator pos:start="18:46" pos:end="18:46">+</operator> <name pos:start="18:48" pos:end="18:58"><name pos:start="18:48" pos:end="18:51">tile</name><operator pos:start="18:52" pos:end="18:53">-&gt;</operator><name pos:start="18:54" pos:end="18:58">width</name></name><operator pos:start="18:59" pos:end="18:59">)</operator></expr>;</condition> <incr pos:start="18:62" pos:end="18:79"><expr pos:start="18:62" pos:end="18:79"><name pos:start="18:62" pos:end="18:62">x</name> <operator pos:start="18:64" pos:end="18:65">+=</operator> <name pos:start="18:67" pos:end="18:79"><name pos:start="18:67" pos:end="18:70">band</name><operator pos:start="18:71" pos:end="18:72">-&gt;</operator><name pos:start="18:73" pos:end="18:79">mb_size</name></name></expr></incr>)</control> <block pos:start="18:82" pos:end="87:13">{<block_content pos:start="19:13" pos:end="87:13">
            <expr_stmt pos:start="19:13" pos:end="19:29"><expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:14">mb</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:20">xpos</name></name>     <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:28">x</name></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:29"><expr pos:start="20:13" pos:end="20:28"><name pos:start="20:13" pos:end="20:20"><name pos:start="20:13" pos:end="20:14">mb</name><operator pos:start="20:15" pos:end="20:16">-&gt;</operator><name pos:start="20:17" pos:end="20:20">ypos</name></name>     <operator pos:start="20:26" pos:end="20:26">=</operator> <name pos:start="20:28" pos:end="20:28">y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:37"><expr pos:start="21:13" pos:end="21:36"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:14">mb</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:24">buf_offs</name></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <name pos:start="21:28" pos:end="21:36">mb_offset</name></expr>;</expr_stmt>
            <if_stmt pos:start="22:13" pos:end="87:13"><if pos:start="22:13" pos:end="87:13">if <condition pos:start="22:16" pos:end="22:36">(<expr pos:start="22:17" pos:end="22:35"><call pos:start="22:17" pos:end="22:35"><name pos:start="22:17" pos:end="22:25">get_bits1</name><argument_list pos:start="22:26" pos:end="22:35">(<argument pos:start="22:27" pos:end="22:34"><expr pos:start="22:27" pos:end="22:34"><operator pos:start="22:27" pos:end="22:27">&amp;</operator><name pos:start="22:28" pos:end="22:34"><name pos:start="22:28" pos:end="22:30">ctx</name><operator pos:start="22:31" pos:end="22:32">-&gt;</operator><name pos:start="22:33" pos:end="22:34">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="22:38" pos:end="87:13">{<block_content pos:start="23:17" pos:end="87:13">
                <if_stmt pos:start="23:17" pos:end="87:13"><if pos:start="23:17" pos:end="87:13">if <condition pos:start="23:20" pos:end="23:55">(<expr pos:start="23:21" pos:end="23:54"><name pos:start="23:21" pos:end="23:35"><name pos:start="23:21" pos:end="23:23">ctx</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:35">frame_type</name></name> <operator pos:start="23:37" pos:end="23:38">==</operator> <name pos:start="23:40" pos:end="23:54">FRAMETYPE_INTRA</name></expr>)</condition> <block pos:start="23:57" pos:end="87:13">{<block_content pos:start="24:21" pos:end="87:13">
                    <expr_stmt pos:start="24:21" pos:end="24:91"><expr pos:start="24:21" pos:end="24:90"><call pos:start="24:21" pos:end="24:90"><name pos:start="24:21" pos:end="24:26">av_log</name><argument_list pos:start="24:27" pos:end="24:90">(<argument pos:start="24:28" pos:end="24:32"><expr pos:start="24:28" pos:end="24:32"><name pos:start="24:28" pos:end="24:32">avctx</name></expr></argument>, <argument pos:start="24:35" pos:end="24:46"><expr pos:start="24:35" pos:end="24:46"><name pos:start="24:35" pos:end="24:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="24:49" pos:end="24:89"><expr pos:start="24:49" pos:end="24:89"><literal type="string" pos:start="24:49" pos:end="24:89">"Empty macroblock in an INTRA picture!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:start="25:21" pos:end="25:30">return <expr pos:start="25:28" pos:end="25:29"><operator pos:start="25:28" pos:end="25:28">-</operator><literal type="number" pos:start="25:29" pos:end="25:29">1</literal></expr>;</return>
                <expr_stmt pos:start="26:17" pos:end="26:29"><expr pos:start="26:17" pos:end="26:28"><name pos:start="26:17" pos:end="26:24"><name pos:start="26:17" pos:end="26:18">mb</name><operator pos:start="26:19" pos:end="26:20">-&gt;</operator><name pos:start="26:21" pos:end="26:24">type</name></name> <operator pos:start="26:26" pos:end="26:26">=</operator> <literal type="number" pos:start="26:28" pos:end="26:28">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="26:31" pos:end="26:70">/* empty macroblocks are always INTER */</comment>
                <expr_stmt pos:start="27:17" pos:end="27:29"><expr pos:start="27:17" pos:end="27:28"><name pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:18">mb</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:23">cbp</name></name>  <operator pos:start="27:26" pos:end="27:26">=</operator> <literal type="number" pos:start="27:28" pos:end="27:28">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="27:31" pos:end="27:56">/* all blocks are empty */</comment>
                <expr_stmt pos:start="28:17" pos:end="28:32"><expr pos:start="28:17" pos:end="28:31"><name pos:start="28:17" pos:end="28:27"><name pos:start="28:17" pos:end="28:18">mb</name><operator pos:start="28:19" pos:end="28:20">-&gt;</operator><name pos:start="28:21" pos:end="28:27">q_delta</name></name> <operator pos:start="28:29" pos:end="28:29">=</operator> <literal type="number" pos:start="28:31" pos:end="28:31">0</literal></expr>;</expr_stmt>
                <if_stmt pos:start="29:17" pos:end="87:13"><if pos:start="29:17" pos:end="87:13">if <condition pos:start="29:20" pos:end="29:78">(<expr pos:start="29:21" pos:end="29:77"><operator pos:start="29:21" pos:end="29:21">!</operator><name pos:start="29:22" pos:end="29:32"><name pos:start="29:22" pos:end="29:25">band</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:32">plane</name></name> <operator pos:start="29:34" pos:end="29:35">&amp;&amp;</operator> <operator pos:start="29:37" pos:end="29:37">!</operator><name pos:start="29:38" pos:end="29:51"><name pos:start="29:38" pos:end="29:41">band</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:51">band_num</name></name> <operator pos:start="29:53" pos:end="29:54">&amp;&amp;</operator> <operator pos:start="29:56" pos:end="29:56">(</operator><name pos:start="29:57" pos:end="29:72"><name pos:start="29:57" pos:end="29:59">ctx</name><operator pos:start="29:60" pos:end="29:61">-&gt;</operator><name pos:start="29:62" pos:end="29:72">frame_flags</name></name> <operator pos:start="29:74" pos:end="29:74">&amp;</operator> <literal type="number" pos:start="29:76" pos:end="29:76">8</literal><operator pos:start="29:77" pos:end="29:77">)</operator></expr>)</condition> <block pos:start="29:80" pos:end="87:13">{<block_content pos:start="30:21" pos:end="87:13">
                    <expr_stmt pos:start="30:21" pos:end="31:60"><expr pos:start="30:21" pos:end="31:59"><name pos:start="30:21" pos:end="30:31"><name pos:start="30:21" pos:end="30:22">mb</name><operator pos:start="30:23" pos:end="30:24">-&gt;</operator><name pos:start="30:25" pos:end="30:31">q_delta</name></name> <operator pos:start="30:33" pos:end="30:33">=</operator> <call pos:start="30:35" pos:end="31:59"><name pos:start="30:35" pos:end="30:42">get_vlc2</name><argument_list pos:start="30:43" pos:end="31:59">(<argument pos:start="30:44" pos:end="30:51"><expr pos:start="30:44" pos:end="30:51"><operator pos:start="30:44" pos:end="30:44">&amp;</operator><name pos:start="30:45" pos:end="30:51"><name pos:start="30:45" pos:end="30:47">ctx</name><operator pos:start="30:48" pos:end="30:49">-&gt;</operator><name pos:start="30:50" pos:end="30:51">gb</name></name></expr></argument>, <argument pos:start="30:54" pos:end="30:75"><expr pos:start="30:54" pos:end="30:75"><name pos:start="30:54" pos:end="30:75"><name pos:start="30:54" pos:end="30:56">ctx</name><operator pos:start="30:57" pos:end="30:58">-&gt;</operator><name pos:start="30:59" pos:end="30:64">mb_vlc</name><operator pos:start="30:65" pos:end="30:65">.</operator><name pos:start="30:66" pos:end="30:68">tab</name><operator pos:start="30:69" pos:end="30:70">-&gt;</operator><name pos:start="30:71" pos:end="30:75">table</name></name></expr></argument>,
                                           <argument pos:start="31:44" pos:end="31:55"><expr pos:start="31:44" pos:end="31:55"><name pos:start="31:44" pos:end="31:55">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="31:58" pos:end="31:58"><expr pos:start="31:58" pos:end="31:58"><literal type="number" pos:start="31:58" pos:end="31:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="32:21" pos:end="32:60"><expr pos:start="32:21" pos:end="32:59"><name pos:start="32:21" pos:end="32:31"><name pos:start="32:21" pos:end="32:22">mb</name><operator pos:start="32:23" pos:end="32:24">-&gt;</operator><name pos:start="32:25" pos:end="32:31">q_delta</name></name> <operator pos:start="32:33" pos:end="32:33">=</operator> <call pos:start="32:35" pos:end="32:59"><name pos:start="32:35" pos:end="32:46">IVI_TOSIGNED</name><argument_list pos:start="32:47" pos:end="32:59">(<argument pos:start="32:48" pos:end="32:58"><expr pos:start="32:48" pos:end="32:58"><name pos:start="32:48" pos:end="32:58"><name pos:start="32:48" pos:end="32:49">mb</name><operator pos:start="32:50" pos:end="32:51">-&gt;</operator><name pos:start="32:52" pos:end="32:58">q_delta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="33:17" pos:end="33:40"><expr pos:start="33:17" pos:end="33:39"><name pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:18">mb</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:24">mv_x</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <name pos:start="33:28" pos:end="33:35"><name pos:start="33:28" pos:end="33:29">mb</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:35">mv_y</name></name> <operator pos:start="33:37" pos:end="33:37">=</operator> <literal type="number" pos:start="33:39" pos:end="33:39">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="33:42" pos:end="33:69">/* no motion vector coded */</comment>
                <if_stmt pos:start="34:17" pos:end="87:13"><if pos:start="34:17" pos:end="87:13">if <condition pos:start="34:20" pos:end="34:37">(<expr pos:start="34:21" pos:end="34:36"><name pos:start="34:21" pos:end="34:36"><name pos:start="34:21" pos:end="34:24">band</name><operator pos:start="34:25" pos:end="34:26">-&gt;</operator><name pos:start="34:27" pos:end="34:36">inherit_mv</name></name></expr>)</condition><block pos:start="34:38" pos:end="87:13">{<block_content pos:start="36:21" pos:end="87:13">
                    <comment type="block" pos:start="35:21" pos:end="35:51">/* motion vector inheritance */</comment>
                    <if_stmt pos:start="36:21" pos:end="42:13"><if pos:start="36:21" pos:end="39:21">if <condition pos:start="36:24" pos:end="36:33">(<expr pos:start="36:25" pos:end="36:32"><name pos:start="36:25" pos:end="36:32">mv_scale</name></expr>)</condition> <block pos:start="36:35" pos:end="39:21">{<block_content pos:start="37:25" pos:end="38:72">
                        <expr_stmt pos:start="37:25" pos:end="37:72"><expr pos:start="37:25" pos:end="37:71"><name pos:start="37:25" pos:end="37:32"><name pos:start="37:25" pos:end="37:26">mb</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:32">mv_x</name></name> <operator pos:start="37:34" pos:end="37:34">=</operator> <call pos:start="37:36" pos:end="37:71"><name pos:start="37:36" pos:end="37:47">ivi_scale_mv</name><argument_list pos:start="37:48" pos:end="37:71">(<argument pos:start="37:49" pos:end="37:60"><expr pos:start="37:49" pos:end="37:60"><name pos:start="37:49" pos:end="37:60"><name pos:start="37:49" pos:end="37:54">ref_mb</name><operator pos:start="37:55" pos:end="37:56">-&gt;</operator><name pos:start="37:57" pos:end="37:60">mv_x</name></name></expr></argument>, <argument pos:start="37:63" pos:end="37:70"><expr pos:start="37:63" pos:end="37:70"><name pos:start="37:63" pos:end="37:70">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="38:25" pos:end="38:72"><expr pos:start="38:25" pos:end="38:71"><name pos:start="38:25" pos:end="38:32"><name pos:start="38:25" pos:end="38:26">mb</name><operator pos:start="38:27" pos:end="38:28">-&gt;</operator><name pos:start="38:29" pos:end="38:32">mv_y</name></name> <operator pos:start="38:34" pos:end="38:34">=</operator> <call pos:start="38:36" pos:end="38:71"><name pos:start="38:36" pos:end="38:47">ivi_scale_mv</name><argument_list pos:start="38:48" pos:end="38:71">(<argument pos:start="38:49" pos:end="38:60"><expr pos:start="38:49" pos:end="38:60"><name pos:start="38:49" pos:end="38:60"><name pos:start="38:49" pos:end="38:54">ref_mb</name><operator pos:start="38:55" pos:end="38:56">-&gt;</operator><name pos:start="38:57" pos:end="38:60">mv_y</name></name></expr></argument>, <argument pos:start="38:63" pos:end="38:70"><expr pos:start="38:63" pos:end="38:70"><name pos:start="38:63" pos:end="38:70">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </block_content>}</block></if> <else pos:start="39:23" pos:end="42:13">else <block pos:start="39:28" pos:end="42:13">{<block_content pos:start="40:25" pos:end="41:48">
                        <expr_stmt pos:start="40:25" pos:end="40:48"><expr pos:start="40:25" pos:end="40:47"><name pos:start="40:25" pos:end="40:32"><name pos:start="40:25" pos:end="40:26">mb</name><operator pos:start="40:27" pos:end="40:28">-&gt;</operator><name pos:start="40:29" pos:end="40:32">mv_x</name></name> <operator pos:start="40:34" pos:end="40:34">=</operator> <name pos:start="40:36" pos:end="40:47"><name pos:start="40:36" pos:end="40:41">ref_mb</name><operator pos:start="40:42" pos:end="40:43">-&gt;</operator><name pos:start="40:44" pos:end="40:47">mv_x</name></name></expr>;</expr_stmt>
                        <expr_stmt pos:start="41:25" pos:end="41:48"><expr pos:start="41:25" pos:end="41:47"><name pos:start="41:25" pos:end="41:32"><name pos:start="41:25" pos:end="41:26">mb</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:32">mv_y</name></name> <operator pos:start="41:34" pos:end="41:34">=</operator> <name pos:start="41:36" pos:end="41:47"><name pos:start="41:36" pos:end="41:41">ref_mb</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:47">mv_y</name></name></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt> <if_stmt pos:start="42:15" pos:end="87:13"><else pos:start="42:15" pos:end="87:13">else <block pos:start="42:20" pos:end="87:13">{<block_content pos:start="43:17" pos:end="87:13">
                <if_stmt pos:start="43:17" pos:end="87:13"><if pos:start="43:17" pos:end="45:17">if <condition pos:start="43:20" pos:end="43:37">(<expr pos:start="43:21" pos:end="43:36"><name pos:start="43:21" pos:end="43:36"><name pos:start="43:21" pos:end="43:24">band</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:36">inherit_mv</name></name></expr>)</condition> <block pos:start="43:39" pos:end="45:17">{<block_content pos:start="44:21" pos:end="44:44">
                    <expr_stmt pos:start="44:21" pos:end="44:44"><expr pos:start="44:21" pos:end="44:43"><name pos:start="44:21" pos:end="44:28"><name pos:start="44:21" pos:end="44:22">mb</name><operator pos:start="44:23" pos:end="44:24">-&gt;</operator><name pos:start="44:25" pos:end="44:28">type</name></name> <operator pos:start="44:30" pos:end="44:30">=</operator> <name pos:start="44:32" pos:end="44:43"><name pos:start="44:32" pos:end="44:37">ref_mb</name><operator pos:start="44:38" pos:end="44:39">-&gt;</operator><name pos:start="44:40" pos:end="44:43">type</name></name></expr>;</expr_stmt> <comment type="block" pos:start="44:46" pos:end="44:95">/* copy mb_type from corresponding reference mb */</comment>
                </block_content>}</block></if> <if type="elseif" pos:start="45:19" pos:end="47:17">else if <condition pos:start="45:27" pos:end="45:62">(<expr pos:start="45:28" pos:end="45:61"><name pos:start="45:28" pos:end="45:42"><name pos:start="45:28" pos:end="45:30">ctx</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:42">frame_type</name></name> <operator pos:start="45:44" pos:end="45:45">==</operator> <name pos:start="45:47" pos:end="45:61">FRAMETYPE_INTRA</name></expr>)</condition> <block pos:start="45:64" pos:end="47:17">{<block_content pos:start="46:21" pos:end="46:33">
                    <expr_stmt pos:start="46:21" pos:end="46:33"><expr pos:start="46:21" pos:end="46:32"><name pos:start="46:21" pos:end="46:28"><name pos:start="46:21" pos:end="46:22">mb</name><operator pos:start="46:23" pos:end="46:24">-&gt;</operator><name pos:start="46:25" pos:end="46:28">type</name></name> <operator pos:start="46:30" pos:end="46:30">=</operator> <literal type="number" pos:start="46:32" pos:end="46:32">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="46:35" pos:end="46:80">/* mb_type is always INTRA for intra-frames */</comment>
                </block_content>}</block></if> <else pos:start="47:19" pos:end="87:13">else <block pos:start="47:24" pos:end="87:13">{<block_content pos:start="48:21" pos:end="87:13">
                    <expr_stmt pos:start="48:21" pos:end="48:51"><expr pos:start="48:21" pos:end="48:50"><name pos:start="48:21" pos:end="48:28"><name pos:start="48:21" pos:end="48:22">mb</name><operator pos:start="48:23" pos:end="48:24">-&gt;</operator><name pos:start="48:25" pos:end="48:28">type</name></name> <operator pos:start="48:30" pos:end="48:30">=</operator> <call pos:start="48:32" pos:end="48:50"><name pos:start="48:32" pos:end="48:40">get_bits1</name><argument_list pos:start="48:41" pos:end="48:50">(<argument pos:start="48:42" pos:end="48:49"><expr pos:start="48:42" pos:end="48:49"><operator pos:start="48:42" pos:end="48:42">&amp;</operator><name pos:start="48:43" pos:end="48:49"><name pos:start="48:43" pos:end="48:45">ctx</name><operator pos:start="48:46" pos:end="48:47">-&gt;</operator><name pos:start="48:48" pos:end="48:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="49:17" pos:end="49:70"><expr pos:start="49:17" pos:end="49:69"><name pos:start="49:17" pos:end="49:27">blks_per_mb</name> <operator pos:start="49:29" pos:end="49:29">=</operator> <ternary pos:start="49:31" pos:end="49:69"><condition pos:start="49:31" pos:end="49:63"><expr pos:start="49:31" pos:end="49:61"><name pos:start="49:31" pos:end="49:43"><name pos:start="49:31" pos:end="49:34">band</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:43">mb_size</name></name> <operator pos:start="49:45" pos:end="49:46">!=</operator> <name pos:start="49:48" pos:end="49:61"><name pos:start="49:48" pos:end="49:51">band</name><operator pos:start="49:52" pos:end="49:53">-&gt;</operator><name pos:start="49:54" pos:end="49:61">blk_size</name></name></expr> ?</condition><then pos:start="49:65" pos:end="49:65"> <expr pos:start="49:65" pos:end="49:65"><literal type="number" pos:start="49:65" pos:end="49:65">4</literal></expr> </then><else pos:start="49:67" pos:end="49:69">: <expr pos:start="49:69" pos:end="49:69"><literal type="number" pos:start="49:69" pos:end="49:69">1</literal></expr></else></ternary></expr>;</expr_stmt>
                <expr_stmt pos:start="50:17" pos:end="50:58"><expr pos:start="50:17" pos:end="50:57"><name pos:start="50:17" pos:end="50:23"><name pos:start="50:17" pos:end="50:18">mb</name><operator pos:start="50:19" pos:end="50:20">-&gt;</operator><name pos:start="50:21" pos:end="50:23">cbp</name></name> <operator pos:start="50:25" pos:end="50:25">=</operator> <call pos:start="50:27" pos:end="50:57"><name pos:start="50:27" pos:end="50:34">get_bits</name><argument_list pos:start="50:35" pos:end="50:57">(<argument pos:start="50:36" pos:end="50:43"><expr pos:start="50:36" pos:end="50:43"><operator pos:start="50:36" pos:end="50:36">&amp;</operator><name pos:start="50:37" pos:end="50:43"><name pos:start="50:37" pos:end="50:39">ctx</name><operator pos:start="50:40" pos:end="50:41">-&gt;</operator><name pos:start="50:42" pos:end="50:43">gb</name></name></expr></argument>, <argument pos:start="50:46" pos:end="50:56"><expr pos:start="50:46" pos:end="50:56"><name pos:start="50:46" pos:end="50:56">blks_per_mb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="51:17" pos:end="51:32"><expr pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:27"><name pos:start="51:17" pos:end="51:18">mb</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:27">q_delta</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <literal type="number" pos:start="51:31" pos:end="51:31">0</literal></expr>;</expr_stmt>
                <if_stmt pos:start="52:17" pos:end="87:13"><if pos:start="52:17" pos:end="87:13">if <condition pos:start="52:20" pos:end="52:41">(<expr pos:start="52:21" pos:end="52:40"><name pos:start="52:21" pos:end="52:40"><name pos:start="52:21" pos:end="52:24">band</name><operator pos:start="52:25" pos:end="52:26">-&gt;</operator><name pos:start="52:27" pos:end="52:40">qdelta_present</name></name></expr>)</condition> <block pos:start="52:43" pos:end="87:13">{<block_content pos:start="53:21" pos:end="87:13">
                    <if_stmt pos:start="53:21" pos:end="87:13"><if pos:start="53:21" pos:end="55:21">if <condition pos:start="53:24" pos:end="53:45">(<expr pos:start="53:25" pos:end="53:44"><name pos:start="53:25" pos:end="53:44"><name pos:start="53:25" pos:end="53:28">band</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:44">inherit_qdelta</name></name></expr>)</condition> <block pos:start="53:47" pos:end="55:21">{<block_content pos:start="54:25" pos:end="54:66">
                        <if_stmt pos:start="54:25" pos:end="54:66"><if pos:start="54:25" pos:end="54:66">if <condition pos:start="54:28" pos:end="54:35">(<expr pos:start="54:29" pos:end="54:34"><name pos:start="54:29" pos:end="54:34">ref_mb</name></expr>)</condition><block type="pseudo" pos:start="54:37" pos:end="54:66"><block_content pos:start="54:37" pos:end="54:66"> <expr_stmt pos:start="54:37" pos:end="54:66"><expr pos:start="54:37" pos:end="54:65"><name pos:start="54:37" pos:end="54:47"><name pos:start="54:37" pos:end="54:38">mb</name><operator pos:start="54:39" pos:end="54:40">-&gt;</operator><name pos:start="54:41" pos:end="54:47">q_delta</name></name> <operator pos:start="54:49" pos:end="54:49">=</operator> <name pos:start="54:51" pos:end="54:65"><name pos:start="54:51" pos:end="54:56">ref_mb</name><operator pos:start="54:57" pos:end="54:58">-&gt;</operator><name pos:start="54:59" pos:end="54:65">q_delta</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    </block_content>}</block></if> <if type="elseif" pos:start="55:23" pos:end="87:13">else if <condition pos:start="55:31" pos:end="56:67">(<expr pos:start="55:32" pos:end="56:66"><name pos:start="55:32" pos:end="55:38"><name pos:start="55:32" pos:end="55:33">mb</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:38">cbp</name></name> <operator pos:start="55:40" pos:end="55:41">||</operator> <operator pos:start="55:43" pos:end="55:43">(</operator><operator pos:start="55:44" pos:end="55:44">!</operator><name pos:start="55:45" pos:end="55:55"><name pos:start="55:45" pos:end="55:48">band</name><operator pos:start="55:49" pos:end="55:50">-&gt;</operator><name pos:start="55:51" pos:end="55:55">plane</name></name> <operator pos:start="55:57" pos:end="55:58">&amp;&amp;</operator> <operator pos:start="55:60" pos:end="55:60">!</operator><name pos:start="55:61" pos:end="55:74"><name pos:start="55:61" pos:end="55:64">band</name><operator pos:start="55:65" pos:end="55:66">-&gt;</operator><name pos:start="55:67" pos:end="55:74">band_num</name></name> <operator pos:start="55:76" pos:end="55:77">&amp;&amp;</operator>
                                           <operator pos:start="56:44" pos:end="56:44">(</operator><name pos:start="56:45" pos:end="56:60"><name pos:start="56:45" pos:end="56:47">ctx</name><operator pos:start="56:48" pos:end="56:49">-&gt;</operator><name pos:start="56:50" pos:end="56:60">frame_flags</name></name> <operator pos:start="56:62" pos:end="56:62">&amp;</operator> <literal type="number" pos:start="56:64" pos:end="56:64">8</literal><operator pos:start="56:65" pos:end="56:65">)</operator><operator pos:start="56:66" pos:end="56:66">)</operator></expr>)</condition> <block pos:start="56:69" pos:end="87:13">{<block_content pos:start="57:25" pos:end="87:13">
                        <expr_stmt pos:start="57:25" pos:end="58:64"><expr pos:start="57:25" pos:end="58:63"><name pos:start="57:25" pos:end="57:35"><name pos:start="57:25" pos:end="57:26">mb</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:35">q_delta</name></name> <operator pos:start="57:37" pos:end="57:37">=</operator> <call pos:start="57:39" pos:end="58:63"><name pos:start="57:39" pos:end="57:46">get_vlc2</name><argument_list pos:start="57:47" pos:end="58:63">(<argument pos:start="57:48" pos:end="57:55"><expr pos:start="57:48" pos:end="57:55"><operator pos:start="57:48" pos:end="57:48">&amp;</operator><name pos:start="57:49" pos:end="57:55"><name pos:start="57:49" pos:end="57:51">ctx</name><operator pos:start="57:52" pos:end="57:53">-&gt;</operator><name pos:start="57:54" pos:end="57:55">gb</name></name></expr></argument>, <argument pos:start="57:58" pos:end="57:79"><expr pos:start="57:58" pos:end="57:79"><name pos:start="57:58" pos:end="57:79"><name pos:start="57:58" pos:end="57:60">ctx</name><operator pos:start="57:61" pos:end="57:62">-&gt;</operator><name pos:start="57:63" pos:end="57:68">mb_vlc</name><operator pos:start="57:69" pos:end="57:69">.</operator><name pos:start="57:70" pos:end="57:72">tab</name><operator pos:start="57:73" pos:end="57:74">-&gt;</operator><name pos:start="57:75" pos:end="57:79">table</name></name></expr></argument>,
                                               <argument pos:start="58:48" pos:end="58:59"><expr pos:start="58:48" pos:end="58:59"><name pos:start="58:48" pos:end="58:59">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="58:62" pos:end="58:62"><expr pos:start="58:62" pos:end="58:62"><literal type="number" pos:start="58:62" pos:end="58:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="59:25" pos:end="59:64"><expr pos:start="59:25" pos:end="59:63"><name pos:start="59:25" pos:end="59:35"><name pos:start="59:25" pos:end="59:26">mb</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:35">q_delta</name></name> <operator pos:start="59:37" pos:end="59:37">=</operator> <call pos:start="59:39" pos:end="59:63"><name pos:start="59:39" pos:end="59:50">IVI_TOSIGNED</name><argument_list pos:start="59:51" pos:end="59:63">(<argument pos:start="59:52" pos:end="59:62"><expr pos:start="59:52" pos:end="59:62"><name pos:start="59:52" pos:end="59:62"><name pos:start="59:52" pos:end="59:53">mb</name><operator pos:start="59:54" pos:end="59:55">-&gt;</operator><name pos:start="59:56" pos:end="59:62">q_delta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="60:17" pos:end="87:13"><if pos:start="60:17" pos:end="62:17">if <condition pos:start="60:20" pos:end="60:30">(<expr pos:start="60:21" pos:end="60:29"><operator pos:start="60:21" pos:end="60:21">!</operator><name pos:start="60:22" pos:end="60:29"><name pos:start="60:22" pos:end="60:23">mb</name><operator pos:start="60:24" pos:end="60:25">-&gt;</operator><name pos:start="60:26" pos:end="60:29">type</name></name></expr>)</condition> <block pos:start="60:32" pos:end="62:17">{<block_content pos:start="61:21" pos:end="61:44">
                    <expr_stmt pos:start="61:21" pos:end="61:44"><expr pos:start="61:21" pos:end="61:43"><name pos:start="61:21" pos:end="61:28"><name pos:start="61:21" pos:end="61:22">mb</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:28">mv_x</name></name> <operator pos:start="61:30" pos:end="61:30">=</operator> <name pos:start="61:32" pos:end="61:39"><name pos:start="61:32" pos:end="61:33">mb</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:39">mv_y</name></name> <operator pos:start="61:41" pos:end="61:41">=</operator> <literal type="number" pos:start="61:43" pos:end="61:43">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="61:46" pos:end="61:97">/* there is no motion vector in intra-macroblocks */</comment>
                </block_content>}</block></if> <else pos:start="62:19" pos:end="87:13">else <block pos:start="62:24" pos:end="87:13">{<block_content pos:start="63:21" pos:end="87:13">
                    <if_stmt pos:start="63:21" pos:end="87:13"><if pos:start="63:21" pos:end="87:13">if <condition pos:start="63:24" pos:end="63:41">(<expr pos:start="63:25" pos:end="63:40"><name pos:start="63:25" pos:end="63:40"><name pos:start="63:25" pos:end="63:28">band</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:40">inherit_mv</name></name></expr>)</condition><block pos:start="63:42" pos:end="87:13">{<block_content pos:start="65:25" pos:end="87:13">
                        <comment type="block" pos:start="64:25" pos:end="64:55">/* motion vector inheritance */</comment>
                        <if_stmt pos:start="65:25" pos:end="71:21"><if pos:start="65:25" pos:end="68:25">if <condition pos:start="65:28" pos:end="65:37">(<expr pos:start="65:29" pos:end="65:36"><name pos:start="65:29" pos:end="65:36">mv_scale</name></expr>)</condition> <block pos:start="65:39" pos:end="68:25">{<block_content pos:start="66:29" pos:end="67:76">
                            <expr_stmt pos:start="66:29" pos:end="66:76"><expr pos:start="66:29" pos:end="66:75"><name pos:start="66:29" pos:end="66:36"><name pos:start="66:29" pos:end="66:30">mb</name><operator pos:start="66:31" pos:end="66:32">-&gt;</operator><name pos:start="66:33" pos:end="66:36">mv_x</name></name> <operator pos:start="66:38" pos:end="66:38">=</operator> <call pos:start="66:40" pos:end="66:75"><name pos:start="66:40" pos:end="66:51">ivi_scale_mv</name><argument_list pos:start="66:52" pos:end="66:75">(<argument pos:start="66:53" pos:end="66:64"><expr pos:start="66:53" pos:end="66:64"><name pos:start="66:53" pos:end="66:64"><name pos:start="66:53" pos:end="66:58">ref_mb</name><operator pos:start="66:59" pos:end="66:60">-&gt;</operator><name pos:start="66:61" pos:end="66:64">mv_x</name></name></expr></argument>, <argument pos:start="66:67" pos:end="66:74"><expr pos:start="66:67" pos:end="66:74"><name pos:start="66:67" pos:end="66:74">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt pos:start="67:29" pos:end="67:76"><expr pos:start="67:29" pos:end="67:75"><name pos:start="67:29" pos:end="67:36"><name pos:start="67:29" pos:end="67:30">mb</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:36">mv_y</name></name> <operator pos:start="67:38" pos:end="67:38">=</operator> <call pos:start="67:40" pos:end="67:75"><name pos:start="67:40" pos:end="67:51">ivi_scale_mv</name><argument_list pos:start="67:52" pos:end="67:75">(<argument pos:start="67:53" pos:end="67:64"><expr pos:start="67:53" pos:end="67:64"><name pos:start="67:53" pos:end="67:64"><name pos:start="67:53" pos:end="67:58">ref_mb</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:64">mv_y</name></name></expr></argument>, <argument pos:start="67:67" pos:end="67:74"><expr pos:start="67:67" pos:end="67:74"><name pos:start="67:67" pos:end="67:74">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        </block_content>}</block></if> <else pos:start="68:27" pos:end="71:21">else <block pos:start="68:32" pos:end="71:21">{<block_content pos:start="69:29" pos:end="70:52">
                            <expr_stmt pos:start="69:29" pos:end="69:52"><expr pos:start="69:29" pos:end="69:51"><name pos:start="69:29" pos:end="69:36"><name pos:start="69:29" pos:end="69:30">mb</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:36">mv_x</name></name> <operator pos:start="69:38" pos:end="69:38">=</operator> <name pos:start="69:40" pos:end="69:51"><name pos:start="69:40" pos:end="69:45">ref_mb</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:51">mv_x</name></name></expr>;</expr_stmt>
                            <expr_stmt pos:start="70:29" pos:end="70:52"><expr pos:start="70:29" pos:end="70:51"><name pos:start="70:29" pos:end="70:36"><name pos:start="70:29" pos:end="70:30">mb</name><operator pos:start="70:31" pos:end="70:32">-&gt;</operator><name pos:start="70:33" pos:end="70:36">mv_y</name></name> <operator pos:start="70:38" pos:end="70:38">=</operator> <name pos:start="70:40" pos:end="70:51"><name pos:start="70:40" pos:end="70:45">ref_mb</name><operator pos:start="70:46" pos:end="70:47">-&gt;</operator><name pos:start="70:48" pos:end="70:51">mv_y</name></name></expr>;</expr_stmt>
                    </block_content>}</block></else></if_stmt> <if_stmt pos:start="71:23" pos:end="87:13"><else pos:start="71:23" pos:end="87:13">else <block pos:start="71:28" pos:end="87:13">{<block_content pos:start="73:25" pos:end="87:13">
                        <comment type="block" pos:start="72:25" pos:end="72:57">/* decode motion vector deltas */</comment>
                        <expr_stmt pos:start="73:25" pos:end="74:61"><expr pos:start="73:25" pos:end="74:60"><name pos:start="73:25" pos:end="73:32">mv_delta</name> <operator pos:start="73:34" pos:end="73:34">=</operator> <call pos:start="73:36" pos:end="74:60"><name pos:start="73:36" pos:end="73:43">get_vlc2</name><argument_list pos:start="73:44" pos:end="74:60">(<argument pos:start="73:45" pos:end="73:52"><expr pos:start="73:45" pos:end="73:52"><operator pos:start="73:45" pos:end="73:45">&amp;</operator><name pos:start="73:46" pos:end="73:52"><name pos:start="73:46" pos:end="73:48">ctx</name><operator pos:start="73:49" pos:end="73:50">-&gt;</operator><name pos:start="73:51" pos:end="73:52">gb</name></name></expr></argument>, <argument pos:start="73:55" pos:end="73:76"><expr pos:start="73:55" pos:end="73:76"><name pos:start="73:55" pos:end="73:76"><name pos:start="73:55" pos:end="73:57">ctx</name><operator pos:start="73:58" pos:end="73:59">-&gt;</operator><name pos:start="73:60" pos:end="73:65">mb_vlc</name><operator pos:start="73:66" pos:end="73:66">.</operator><name pos:start="73:67" pos:end="73:69">tab</name><operator pos:start="73:70" pos:end="73:71">-&gt;</operator><name pos:start="73:72" pos:end="73:76">table</name></name></expr></argument>,
                                            <argument pos:start="74:45" pos:end="74:56"><expr pos:start="74:45" pos:end="74:56"><name pos:start="74:45" pos:end="74:56">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="74:59" pos:end="74:59"><expr pos:start="74:59" pos:end="74:59"><literal type="number" pos:start="74:59" pos:end="74:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="75:25" pos:end="75:55"><expr pos:start="75:25" pos:end="75:54"><name pos:start="75:25" pos:end="75:28">mv_y</name> <operator pos:start="75:30" pos:end="75:31">+=</operator> <call pos:start="75:33" pos:end="75:54"><name pos:start="75:33" pos:end="75:44">IVI_TOSIGNED</name><argument_list pos:start="75:45" pos:end="75:54">(<argument pos:start="75:46" pos:end="75:53"><expr pos:start="75:46" pos:end="75:53"><name pos:start="75:46" pos:end="75:53">mv_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="76:25" pos:end="77:61"><expr pos:start="76:25" pos:end="77:60"><name pos:start="76:25" pos:end="76:32">mv_delta</name> <operator pos:start="76:34" pos:end="76:34">=</operator> <call pos:start="76:36" pos:end="77:60"><name pos:start="76:36" pos:end="76:43">get_vlc2</name><argument_list pos:start="76:44" pos:end="77:60">(<argument pos:start="76:45" pos:end="76:52"><expr pos:start="76:45" pos:end="76:52"><operator pos:start="76:45" pos:end="76:45">&amp;</operator><name pos:start="76:46" pos:end="76:52"><name pos:start="76:46" pos:end="76:48">ctx</name><operator pos:start="76:49" pos:end="76:50">-&gt;</operator><name pos:start="76:51" pos:end="76:52">gb</name></name></expr></argument>, <argument pos:start="76:55" pos:end="76:76"><expr pos:start="76:55" pos:end="76:76"><name pos:start="76:55" pos:end="76:76"><name pos:start="76:55" pos:end="76:57">ctx</name><operator pos:start="76:58" pos:end="76:59">-&gt;</operator><name pos:start="76:60" pos:end="76:65">mb_vlc</name><operator pos:start="76:66" pos:end="76:66">.</operator><name pos:start="76:67" pos:end="76:69">tab</name><operator pos:start="76:70" pos:end="76:71">-&gt;</operator><name pos:start="76:72" pos:end="76:76">table</name></name></expr></argument>,
                                            <argument pos:start="77:45" pos:end="77:56"><expr pos:start="77:45" pos:end="77:56"><name pos:start="77:45" pos:end="77:56">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="77:59" pos:end="77:59"><expr pos:start="77:59" pos:end="77:59"><literal type="number" pos:start="77:59" pos:end="77:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="78:25" pos:end="78:55"><expr pos:start="78:25" pos:end="78:54"><name pos:start="78:25" pos:end="78:28">mv_x</name> <operator pos:start="78:30" pos:end="78:31">+=</operator> <call pos:start="78:33" pos:end="78:54"><name pos:start="78:33" pos:end="78:44">IVI_TOSIGNED</name><argument_list pos:start="78:45" pos:end="78:54">(<argument pos:start="78:46" pos:end="78:53"><expr pos:start="78:46" pos:end="78:53"><name pos:start="78:46" pos:end="78:53">mv_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="79:25" pos:end="79:40"><expr pos:start="79:25" pos:end="79:39"><name pos:start="79:25" pos:end="79:32"><name pos:start="79:25" pos:end="79:26">mb</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:32">mv_x</name></name> <operator pos:start="79:34" pos:end="79:34">=</operator> <name pos:start="79:36" pos:end="79:39">mv_x</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="80:25" pos:end="80:40"><expr pos:start="80:25" pos:end="80:39"><name pos:start="80:25" pos:end="80:32"><name pos:start="80:25" pos:end="80:26">mb</name><operator pos:start="80:27" pos:end="80:28">-&gt;</operator><name pos:start="80:29" pos:end="80:32">mv_y</name></name> <operator pos:start="80:34" pos:end="80:34">=</operator> <name pos:start="80:36" pos:end="80:39">mv_y</name></expr>;</expr_stmt>
            <expr_stmt pos:start="81:13" pos:end="81:17"><expr pos:start="81:13" pos:end="81:16"><name pos:start="81:13" pos:end="81:14">mb</name><operator pos:start="81:15" pos:end="81:16">++</operator></expr>;</expr_stmt>
            <if_stmt pos:start="82:13" pos:end="83:25"><if pos:start="82:13" pos:end="83:25">if <condition pos:start="82:16" pos:end="82:23">(<expr pos:start="82:17" pos:end="82:22"><name pos:start="82:17" pos:end="82:22">ref_mb</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:25"><block_content pos:start="83:17" pos:end="83:25">
                <expr_stmt pos:start="83:17" pos:end="83:25"><expr pos:start="83:17" pos:end="83:24"><name pos:start="83:17" pos:end="83:22">ref_mb</name><operator pos:start="83:23" pos:end="83:24">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="84:13" pos:end="84:39"><expr pos:start="84:13" pos:end="84:38"><name pos:start="84:13" pos:end="84:21">mb_offset</name> <operator pos:start="84:23" pos:end="84:24">+=</operator> <name pos:start="84:26" pos:end="84:38"><name pos:start="84:26" pos:end="84:29">band</name><operator pos:start="84:30" pos:end="84:31">-&gt;</operator><name pos:start="84:32" pos:end="84:38">mb_size</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="85:9" pos:end="85:27"><expr pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:12">offs</name> <operator pos:start="85:14" pos:end="85:15">+=</operator> <name pos:start="85:17" pos:end="85:26">row_offset</name></expr>;</expr_stmt>
    <expr_stmt pos:start="86:5" pos:end="86:29"><expr pos:start="86:5" pos:end="86:28"><call pos:start="86:5" pos:end="86:28"><name pos:start="86:5" pos:end="86:18">align_get_bits</name><argument_list pos:start="86:19" pos:end="86:28">(<argument pos:start="86:20" pos:end="86:27"><expr pos:start="86:20" pos:end="86:27"><operator pos:start="86:20" pos:end="86:20">&amp;</operator><name pos:start="86:21" pos:end="86:27"><name pos:start="86:21" pos:end="86:23">ctx</name><operator pos:start="86:24" pos:end="86:25">-&gt;</operator><name pos:start="86:26" pos:end="86:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></function></unit>
