<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22812.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">update_initial_timestamps</name><parameter_list pos:start="1:38" pos:end="3:78">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:53">AVFormatContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:74"><decl pos:start="1:59" pos:end="1:74"><type pos:start="1:59" pos:end="1:74"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:74">stream_index</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:49"><decl pos:start="3:39" pos:end="3:49"><type pos:start="3:39" pos:end="3:49"><name pos:start="3:39" pos:end="3:45">int64_t</name></type> <name pos:start="3:47" pos:end="3:49">dts</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:62"><decl pos:start="3:52" pos:end="3:62"><type pos:start="3:52" pos:end="3:62"><name pos:start="3:52" pos:end="3:58">int64_t</name></type> <name pos:start="3:60" pos:end="3:62">pts</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:77"><decl pos:start="3:65" pos:end="3:77"><type pos:start="3:65" pos:end="3:77"><name pos:start="3:65" pos:end="3:72">AVPacket</name> <modifier pos:start="3:74" pos:end="3:74">*</modifier></type><name pos:start="3:75" pos:end="3:77">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:29">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name>       <init pos:start="7:24" pos:end="7:49">= <expr pos:start="7:26" pos:end="7:49"><name pos:start="7:26" pos:end="7:49"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:35">streams</name><index pos:start="7:36" pos:end="7:49">[<expr pos:start="7:37" pos:end="7:48"><name pos:start="7:37" pos:end="7:48">stream_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:108"><decl pos:start="9:5" pos:end="9:107"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVPacketList</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">pktl</name> <init pos:start="9:24" pos:end="9:107">= <expr pos:start="9:26" pos:end="9:107"><ternary pos:start="9:26" pos:end="9:107"><condition pos:start="9:26" pos:end="9:53"><expr pos:start="9:26" pos:end="9:51"><name pos:start="9:26" pos:end="9:51"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:36">internal</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:51">packet_buffer</name></name></expr> ?</condition><then pos:start="9:55" pos:end="9:80"> <expr pos:start="9:55" pos:end="9:80"><name pos:start="9:55" pos:end="9:80"><name pos:start="9:55" pos:end="9:55">s</name><operator pos:start="9:56" pos:end="9:57">-&gt;</operator><name pos:start="9:58" pos:end="9:65">internal</name><operator pos:start="9:66" pos:end="9:67">-&gt;</operator><name pos:start="9:68" pos:end="9:80">packet_buffer</name></name></expr> </then><else pos:start="9:82" pos:end="9:107">: <expr pos:start="9:84" pos:end="9:107"><name pos:start="9:84" pos:end="9:107"><name pos:start="9:84" pos:end="9:84">s</name><operator pos:start="9:85" pos:end="9:86">-&gt;</operator><name pos:start="9:87" pos:end="9:94">internal</name><operator pos:start="9:95" pos:end="9:96">-&gt;</operator><name pos:start="9:97" pos:end="9:107">parse_queue</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:43"><name pos:start="11:13" pos:end="11:22">pts_buffer</name><index pos:start="11:23" pos:end="11:43">[<expr pos:start="11:24" pos:end="11:42"><name pos:start="11:24" pos:end="11:40">MAX_REORDER_DELAY</name><operator pos:start="11:41" pos:end="11:41">+</operator><literal type="number" pos:start="11:42" pos:end="11:42">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:17">shift</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:16"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:16">delay</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="27:15"><if pos:start="19:5" pos:end="27:15">if <condition pos:start="19:8" pos:end="25:25">(<expr pos:start="19:9" pos:end="25:24"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:10">st</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:21">first_dts</name></name> <operator pos:start="19:23" pos:end="19:24">!=</operator> <name pos:start="19:26" pos:end="19:39">AV_NOPTS_VALUE</name> <operator pos:start="19:41" pos:end="19:42">||</operator>

        <name pos:start="21:9" pos:end="21:11">dts</name>           <operator pos:start="21:23" pos:end="21:24">==</operator> <name pos:start="21:26" pos:end="21:39">AV_NOPTS_VALUE</name> <operator pos:start="21:41" pos:end="21:42">||</operator>

        <name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:10">st</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:19">cur_dts</name></name>   <operator pos:start="23:23" pos:end="23:24">==</operator> <name pos:start="23:26" pos:end="23:39">AV_NOPTS_VALUE</name> <operator pos:start="23:41" pos:end="23:42">||</operator>

        <call pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:19">is_relative</name><argument_list pos:start="25:20" pos:end="25:24">(<argument pos:start="25:21" pos:end="25:23"><expr pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:23">dts</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:15"><block_content pos:start="27:9" pos:end="27:15">

        <return pos:start="27:9" pos:end="27:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:44"><expr pos:start="31:5" pos:end="31:43"><name pos:start="31:5" pos:end="31:9">delay</name>         <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:43"><name pos:start="31:21" pos:end="31:22">st</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:29">codec</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:43">has_b_frames</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:59"><expr pos:start="33:5" pos:end="33:58"><name pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:6">st</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:17">first_dts</name></name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:23">dts</name> <operator pos:start="33:25" pos:end="33:25">-</operator> <operator pos:start="33:27" pos:end="33:27">(</operator><name pos:start="33:28" pos:end="33:38"><name pos:start="33:28" pos:end="33:29">st</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:38">cur_dts</name></name> <operator pos:start="33:40" pos:end="33:40">-</operator> <name pos:start="33:42" pos:end="33:57">RELATIVE_TS_BASE</name><operator pos:start="33:58" pos:end="33:58">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:6">st</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:15">cur_dts</name></name>   <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:23">dts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:9">shift</name>         <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:22">st</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:33">first_dts</name></name> <operator pos:start="37:35" pos:end="37:35">-</operator> <name pos:start="37:37" pos:end="37:52">RELATIVE_TS_BASE</name></expr>;</expr_stmt>



    <for pos:start="41:5" pos:end="43:39">for <control pos:start="41:9" pos:end="41:43">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:38"><expr pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:17">i</name><operator pos:start="41:18" pos:end="41:18">&lt;</operator><name pos:start="41:19" pos:end="41:35">MAX_REORDER_DELAY</name><operator pos:start="41:36" pos:end="41:36">+</operator><literal type="number" pos:start="41:37" pos:end="41:37">1</literal></expr>;</condition> <incr pos:start="41:40" pos:end="41:42"><expr pos:start="41:40" pos:end="41:42"><name pos:start="41:40" pos:end="41:40">i</name><operator pos:start="41:41" pos:end="41:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:9" pos:end="43:39"><block_content pos:start="43:9" pos:end="43:39">

        <expr_stmt pos:start="43:9" pos:end="43:39"><expr pos:start="43:9" pos:end="43:38"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:18">pts_buffer</name><index pos:start="43:19" pos:end="43:21">[<expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">i</name></expr>]</index></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:38">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="47:5" pos:end="49:21"><if pos:start="47:5" pos:end="49:21">if <condition pos:start="47:8" pos:end="47:25">(<expr pos:start="47:9" pos:end="47:24"><call pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:19">is_relative</name><argument_list pos:start="47:20" pos:end="47:24">(<argument pos:start="47:21" pos:end="47:23"><expr pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:23">pts</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:21"><block_content pos:start="49:9" pos:end="49:21">

        <expr_stmt pos:start="49:9" pos:end="49:21"><expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:11">pts</name> <operator pos:start="49:13" pos:end="49:14">+=</operator> <name pos:start="49:16" pos:end="49:20">shift</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="53:5" pos:end="91:5">for <control pos:start="53:9" pos:end="53:50">(<init pos:start="53:10" pos:end="53:10">;</init> <condition pos:start="53:12" pos:end="53:16"><expr pos:start="53:12" pos:end="53:15"><name pos:start="53:12" pos:end="53:15">pktl</name></expr>;</condition> <incr pos:start="53:18" pos:end="53:49"><expr pos:start="53:18" pos:end="53:49"><name pos:start="53:18" pos:end="53:21">pktl</name> <operator pos:start="53:23" pos:end="53:23">=</operator> <call pos:start="53:25" pos:end="53:49"><name pos:start="53:25" pos:end="53:36">get_next_pkt</name><argument_list pos:start="53:37" pos:end="53:49">(<argument pos:start="53:38" pos:end="53:38"><expr pos:start="53:38" pos:end="53:38"><name pos:start="53:38" pos:end="53:38">s</name></expr></argument>, <argument pos:start="53:41" pos:end="53:42"><expr pos:start="53:41" pos:end="53:42"><name pos:start="53:41" pos:end="53:42">st</name></expr></argument>, <argument pos:start="53:45" pos:end="53:48"><expr pos:start="53:45" pos:end="53:48"><name pos:start="53:45" pos:end="53:48">pktl</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="53:52" pos:end="91:5">{<block_content pos:start="55:9" pos:end="89:9">

        <if_stmt pos:start="55:9" pos:end="57:21"><if pos:start="55:9" pos:end="57:21">if <condition pos:start="55:12" pos:end="55:51">(<expr pos:start="55:13" pos:end="55:50"><name pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:16">pktl</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:21">pkt</name><operator pos:start="55:22" pos:end="55:22">.</operator><name pos:start="55:23" pos:end="55:34">stream_index</name></name> <operator pos:start="55:36" pos:end="55:37">!=</operator> <name pos:start="55:39" pos:end="55:50">stream_index</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:21"><block_content pos:start="57:13" pos:end="57:21">

            <continue pos:start="57:13" pos:end="57:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="61:35"><if pos:start="59:9" pos:end="61:35">if <condition pos:start="59:12" pos:end="59:39">(<expr pos:start="59:13" pos:end="59:38"><call pos:start="59:13" pos:end="59:38"><name pos:start="59:13" pos:end="59:23">is_relative</name><argument_list pos:start="59:24" pos:end="59:38">(<argument pos:start="59:25" pos:end="59:37"><expr pos:start="59:25" pos:end="59:37"><name pos:start="59:25" pos:end="59:37"><name pos:start="59:25" pos:end="59:28">pktl</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:33">pkt</name><operator pos:start="59:34" pos:end="59:34">.</operator><name pos:start="59:35" pos:end="59:37">pts</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:35"><block_content pos:start="61:13" pos:end="61:35">

            <expr_stmt pos:start="61:13" pos:end="61:35"><expr pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:16">pktl</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:21">pkt</name><operator pos:start="61:22" pos:end="61:22">.</operator><name pos:start="61:23" pos:end="61:25">pts</name></name> <operator pos:start="61:27" pos:end="61:28">+=</operator> <name pos:start="61:30" pos:end="61:34">shift</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="65:9" pos:end="67:35"><if pos:start="65:9" pos:end="67:35">if <condition pos:start="65:12" pos:end="65:39">(<expr pos:start="65:13" pos:end="65:38"><call pos:start="65:13" pos:end="65:38"><name pos:start="65:13" pos:end="65:23">is_relative</name><argument_list pos:start="65:24" pos:end="65:38">(<argument pos:start="65:25" pos:end="65:37"><expr pos:start="65:25" pos:end="65:37"><name pos:start="65:25" pos:end="65:37"><name pos:start="65:25" pos:end="65:28">pktl</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:33">pkt</name><operator pos:start="65:34" pos:end="65:34">.</operator><name pos:start="65:35" pos:end="65:37">dts</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:35"><block_content pos:start="67:13" pos:end="67:35">

            <expr_stmt pos:start="67:13" pos:end="67:35"><expr pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:16">pktl</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:21">pkt</name><operator pos:start="67:22" pos:end="67:22">.</operator><name pos:start="67:23" pos:end="67:25">dts</name></name> <operator pos:start="67:27" pos:end="67:28">+=</operator> <name pos:start="67:30" pos:end="67:34">shift</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="71:9" pos:end="73:43"><if pos:start="71:9" pos:end="73:43">if <condition pos:start="71:12" pos:end="71:80">(<expr pos:start="71:13" pos:end="71:79"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:14">st</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:26">start_time</name></name> <operator pos:start="71:28" pos:end="71:29">==</operator> <name pos:start="71:31" pos:end="71:44">AV_NOPTS_VALUE</name> <operator pos:start="71:46" pos:end="71:47">&amp;&amp;</operator> <name pos:start="71:49" pos:end="71:61"><name pos:start="71:49" pos:end="71:52">pktl</name><operator pos:start="71:53" pos:end="71:54">-&gt;</operator><name pos:start="71:55" pos:end="71:57">pkt</name><operator pos:start="71:58" pos:end="71:58">.</operator><name pos:start="71:59" pos:end="71:61">pts</name></name> <operator pos:start="71:63" pos:end="71:64">!=</operator> <name pos:start="71:66" pos:end="71:79">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:43"><block_content pos:start="73:13" pos:end="73:43">

            <expr_stmt pos:start="73:13" pos:end="73:43"><expr pos:start="73:13" pos:end="73:42"><name pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:14">st</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:26">start_time</name></name> <operator pos:start="73:28" pos:end="73:28">=</operator> <name pos:start="73:30" pos:end="73:42"><name pos:start="73:30" pos:end="73:33">pktl</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:38">pkt</name><operator pos:start="73:39" pos:end="73:39">.</operator><name pos:start="73:40" pos:end="73:42">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="77:9" pos:end="89:9"><if pos:start="77:9" pos:end="89:9">if <condition pos:start="77:12" pos:end="77:111">(<expr pos:start="77:13" pos:end="77:110"><name pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:16">pktl</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:21">pkt</name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:25">pts</name></name> <operator pos:start="77:27" pos:end="77:28">!=</operator> <name pos:start="77:30" pos:end="77:43">AV_NOPTS_VALUE</name> <operator pos:start="77:45" pos:end="77:46">&amp;&amp;</operator> <name pos:start="77:48" pos:end="77:52">delay</name> <operator pos:start="77:54" pos:end="77:55">&lt;=</operator> <name pos:start="77:57" pos:end="77:73">MAX_REORDER_DELAY</name> <operator pos:start="77:75" pos:end="77:76">&amp;&amp;</operator> <call pos:start="77:78" pos:end="77:110"><name pos:start="77:78" pos:end="77:106">has_decode_delay_been_guessed</name><argument_list pos:start="77:107" pos:end="77:110">(<argument pos:start="77:108" pos:end="77:109"><expr pos:start="77:108" pos:end="77:109"><name pos:start="77:108" pos:end="77:109">st</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:113" pos:end="89:9">{<block_content pos:start="79:13" pos:end="87:82">

            <expr_stmt pos:start="79:13" pos:end="79:42"><expr pos:start="79:13" pos:end="79:41"><name pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:22">pts_buffer</name><index pos:start="79:23" pos:end="79:25">[<expr pos:start="79:24" pos:end="79:24"><literal type="number" pos:start="79:24" pos:end="79:24">0</literal></expr>]</index></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <name pos:start="79:29" pos:end="79:41"><name pos:start="79:29" pos:end="79:32">pktl</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:37">pkt</name><operator pos:start="79:38" pos:end="79:38">.</operator><name pos:start="79:39" pos:end="79:41">pts</name></name></expr>;</expr_stmt>

            <for pos:start="81:13" pos:end="83:66">for <control pos:start="81:17" pos:end="81:74">(<init pos:start="81:18" pos:end="81:23"><expr pos:start="81:18" pos:end="81:22"><name pos:start="81:18" pos:end="81:18">i</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</init> <condition pos:start="81:25" pos:end="81:69"><expr pos:start="81:25" pos:end="81:68"><name pos:start="81:25" pos:end="81:50"><name pos:start="81:25" pos:end="81:25">i</name><argument_list type="generic" pos:start="81:26" pos:end="81:50">&lt;<argument pos:start="81:27" pos:end="81:48"><expr pos:start="81:27" pos:end="81:48"><name pos:start="81:27" pos:end="81:31">delay</name> <operator pos:start="81:33" pos:end="81:34">&amp;&amp;</operator> <name pos:start="81:36" pos:end="81:48"><name pos:start="81:36" pos:end="81:45">pts_buffer</name><index pos:start="81:46" pos:end="81:48">[<expr pos:start="81:47" pos:end="81:47"><name pos:start="81:47" pos:end="81:47">i</name></expr>]</index></name></expr></argument> &gt;</argument_list></name> <name pos:start="81:52" pos:end="81:68"><name pos:start="81:52" pos:end="81:61">pts_buffer</name><index pos:start="81:62" pos:end="81:68">[<expr pos:start="81:63" pos:end="81:67"><name pos:start="81:63" pos:end="81:63">i</name> <operator pos:start="81:65" pos:end="81:65">+</operator> <literal type="number" pos:start="81:67" pos:end="81:67">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="81:71" pos:end="81:73"><expr pos:start="81:71" pos:end="81:73"><name pos:start="81:71" pos:end="81:71">i</name><operator pos:start="81:72" pos:end="81:73">++</operator></expr></incr>)</control><block type="pseudo" pos:start="83:17" pos:end="83:66"><block_content pos:start="83:17" pos:end="83:66">

                <expr_stmt pos:start="83:17" pos:end="83:66"><expr pos:start="83:17" pos:end="83:65"><call pos:start="83:17" pos:end="83:65"><name pos:start="83:17" pos:end="83:22">FFSWAP</name><argument_list pos:start="83:23" pos:end="83:65">(<argument pos:start="83:24" pos:end="83:30"><expr pos:start="83:24" pos:end="83:30"><name pos:start="83:24" pos:end="83:30">int64_t</name></expr></argument>, <argument pos:start="83:33" pos:end="83:45"><expr pos:start="83:33" pos:end="83:45"><name pos:start="83:33" pos:end="83:45"><name pos:start="83:33" pos:end="83:42">pts_buffer</name><index pos:start="83:43" pos:end="83:45">[<expr pos:start="83:44" pos:end="83:44"><name pos:start="83:44" pos:end="83:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="83:48" pos:end="83:64"><expr pos:start="83:48" pos:end="83:64"><name pos:start="83:48" pos:end="83:64"><name pos:start="83:48" pos:end="83:57">pts_buffer</name><index pos:start="83:58" pos:end="83:64">[<expr pos:start="83:59" pos:end="83:63"><name pos:start="83:59" pos:end="83:59">i</name> <operator pos:start="83:61" pos:end="83:61">+</operator> <literal type="number" pos:start="83:63" pos:end="83:63">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="87:13" pos:end="87:82"><expr pos:start="87:13" pos:end="87:81"><name pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:16">pktl</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:21">pkt</name><operator pos:start="87:22" pos:end="87:22">.</operator><name pos:start="87:23" pos:end="87:25">dts</name></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <call pos:start="87:29" pos:end="87:81"><name pos:start="87:29" pos:end="87:50">select_from_pts_buffer</name><argument_list pos:start="87:51" pos:end="87:81">(<argument pos:start="87:52" pos:end="87:53"><expr pos:start="87:52" pos:end="87:53"><name pos:start="87:52" pos:end="87:53">st</name></expr></argument>, <argument pos:start="87:56" pos:end="87:65"><expr pos:start="87:56" pos:end="87:65"><name pos:start="87:56" pos:end="87:65">pts_buffer</name></expr></argument>, <argument pos:start="87:68" pos:end="87:80"><expr pos:start="87:68" pos:end="87:80"><name pos:start="87:68" pos:end="87:80"><name pos:start="87:68" pos:end="87:71">pktl</name><operator pos:start="87:72" pos:end="87:73">-&gt;</operator><name pos:start="87:74" pos:end="87:76">pkt</name><operator pos:start="87:77" pos:end="87:77">.</operator><name pos:start="87:78" pos:end="87:80">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="95:5" pos:end="97:29"><if pos:start="95:5" pos:end="97:29">if <condition pos:start="95:8" pos:end="95:41">(<expr pos:start="95:9" pos:end="95:40"><name pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:10">st</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:22">start_time</name></name> <operator pos:start="95:24" pos:end="95:25">==</operator> <name pos:start="95:27" pos:end="95:40">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:29"><block_content pos:start="97:9" pos:end="97:29">

        <expr_stmt pos:start="97:9" pos:end="97:29"><expr pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:10">st</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:22">start_time</name></name> <operator pos:start="97:24" pos:end="97:24">=</operator> <name pos:start="97:26" pos:end="97:28">pts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
