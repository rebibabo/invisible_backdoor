<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9173.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">av_strerror</name><parameter_list pos:start="1:16" pos:end="1:61">(<parameter pos:start="1:17" pos:end="1:26"><decl pos:start="1:17" pos:end="1:26"><type pos:start="1:17" pos:end="1:26"><name pos:start="1:17" pos:end="1:19">int</name></type> <name pos:start="1:21" pos:end="1:26">errnum</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">char</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">errbuf</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><name pos:start="1:43" pos:end="1:48">size_t</name></type> <name pos:start="1:50" pos:end="1:60">errbuf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:15">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">error_entry</name></name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:29">entry</name> <init pos:start="7:31" pos:end="7:36">= <expr pos:start="7:33" pos:end="7:36"><name pos:start="7:33" pos:end="7:36">NULL</name></expr></init></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="21:5">for <control pos:start="11:9" pos:end="11:55">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:50"><expr pos:start="11:17" pos:end="11:49"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <call pos:start="11:21" pos:end="11:49"><name pos:start="11:21" pos:end="11:34">FF_ARRAY_ELEMS</name><argument_list pos:start="11:35" pos:end="11:49">(<argument pos:start="11:36" pos:end="11:48"><expr pos:start="11:36" pos:end="11:48"><name pos:start="11:36" pos:end="11:48">error_entries</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="11:52" pos:end="11:54"><expr pos:start="11:52" pos:end="11:54"><name pos:start="11:52" pos:end="11:52">i</name><operator pos:start="11:53" pos:end="11:54">++</operator></expr></incr>)</control> <block pos:start="11:57" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:9">

        <if_stmt pos:start="13:9" pos:end="19:9"><if pos:start="13:9" pos:end="19:9">if <condition pos:start="13:12" pos:end="13:43">(<expr pos:start="13:13" pos:end="13:42"><name pos:start="13:13" pos:end="13:18">errnum</name> <operator pos:start="13:20" pos:end="13:21">==</operator> <name pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:35">error_entries</name><index pos:start="13:36" pos:end="13:38">[<expr pos:start="13:37" pos:end="13:37"><name pos:start="13:37" pos:end="13:37">i</name></expr>]</index></name><operator pos:start="13:39" pos:end="13:39">.</operator><name pos:start="13:40" pos:end="13:42">num</name></expr>)</condition> <block pos:start="13:45" pos:end="19:9">{<block_content pos:start="15:13" pos:end="17:18">

            <expr_stmt pos:start="15:13" pos:end="15:38"><expr pos:start="15:13" pos:end="15:37"><name pos:start="15:13" pos:end="15:17">entry</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <operator pos:start="15:21" pos:end="15:21">&amp;</operator><name pos:start="15:22" pos:end="15:37"><name pos:start="15:22" pos:end="15:34">error_entries</name><index pos:start="15:35" pos:end="15:37">[<expr pos:start="15:36" pos:end="15:36"><name pos:start="15:36" pos:end="15:36">i</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="17:13" pos:end="17:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="23:5" pos:end="43:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:13">entry</name></expr>)</condition> <block pos:start="23:16" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:52">

        <expr_stmt pos:start="25:9" pos:end="25:52"><expr pos:start="25:9" pos:end="25:51"><call pos:start="25:9" pos:end="25:51"><name pos:start="25:9" pos:end="25:18">av_strlcpy</name><argument_list pos:start="25:19" pos:end="25:51">(<argument pos:start="25:20" pos:end="25:25"><expr pos:start="25:20" pos:end="25:25"><name pos:start="25:20" pos:end="25:25">errbuf</name></expr></argument>, <argument pos:start="25:28" pos:end="25:37"><expr pos:start="25:28" pos:end="25:37"><name pos:start="25:28" pos:end="25:37"><name pos:start="25:28" pos:end="25:32">entry</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:37">str</name></name></expr></argument>, <argument pos:start="25:40" pos:end="25:50"><expr pos:start="25:40" pos:end="25:50"><name pos:start="25:40" pos:end="25:50">errbuf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="43:5">else <block pos:start="27:12" pos:end="43:5">{<block_content pos:start="31:9" pos:end="41:78">

<cpp:if pos:start="29:1" pos:end="29:19">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:19">HAVE_STRERROR_R</name></expr></cpp:if>

        <expr_stmt pos:start="31:9" pos:end="34:0"><expr pos:start="31:9" pos:end="31:64"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:64"><name pos:start="31:15" pos:end="31:24">strerror_r</name><argument_list pos:start="31:25" pos:end="31:64">(<argument pos:start="31:26" pos:end="31:42"><expr pos:start="31:26" pos:end="31:42"><call pos:start="31:26" pos:end="31:42"><name pos:start="31:26" pos:end="31:34">AVUNERROR</name><argument_list pos:start="31:35" pos:end="31:42">(<argument pos:start="31:36" pos:end="31:41"><expr pos:start="31:36" pos:end="31:41"><name pos:start="31:36" pos:end="31:41">errnum</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:45" pos:end="31:50"><expr pos:start="31:45" pos:end="31:50"><name pos:start="31:45" pos:end="31:50">errbuf</name></expr></argument>, <argument pos:start="31:53" pos:end="31:63"><expr pos:start="31:53" pos:end="31:63"><name pos:start="31:53" pos:end="31:63">errbuf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="33:1" pos:end="33:5">#<cpp:directive pos:start="33:2" pos:end="33:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="35:9" pos:end="38:0"><expr pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <operator pos:start="35:15" pos:end="35:15">-</operator><literal type="number" pos:start="35:16" pos:end="35:16">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="39:9" pos:end="41:78"><if pos:start="39:9" pos:end="41:78">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">&lt;</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:78"><block_content pos:start="41:13" pos:end="41:78">

            <expr_stmt pos:start="41:13" pos:end="41:78"><expr pos:start="41:13" pos:end="41:77"><call pos:start="41:13" pos:end="41:77"><name pos:start="41:13" pos:end="41:20">snprintf</name><argument_list pos:start="41:21" pos:end="41:77">(<argument pos:start="41:22" pos:end="41:27"><expr pos:start="41:22" pos:end="41:27"><name pos:start="41:22" pos:end="41:27">errbuf</name></expr></argument>, <argument pos:start="41:30" pos:end="41:40"><expr pos:start="41:30" pos:end="41:40"><name pos:start="41:30" pos:end="41:40">errbuf_size</name></expr></argument>, <argument pos:start="41:43" pos:end="41:68"><expr pos:start="41:43" pos:end="41:68"><literal type="string" pos:start="41:43" pos:end="41:68">"Error number %d occurred"</literal></expr></argument>, <argument pos:start="41:71" pos:end="41:76"><expr pos:start="41:71" pos:end="41:76"><name pos:start="41:71" pos:end="41:76">errnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="47:5" pos:end="47:15">return <expr pos:start="47:12" pos:end="47:14"><name pos:start="47:12" pos:end="47:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
