<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1321.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">sd_snapshot_create</name><parameter_list pos:start="1:30" pos:end="1:78">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:46">BlockDriverState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">bs</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:77"><decl pos:start="1:53" pos:end="1:77"><type pos:start="1:53" pos:end="1:77"><name pos:start="1:53" pos:end="1:68">QEMUSnapshotInfo</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:77">sn_info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="147:1">{<block_content pos:start="5:5" pos:end="145:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:20">local_err</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">BDRVSheepdogState</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:37">= <expr pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:29">bs</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:37">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:15">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:20">new_vid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">SheepdogInode</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:24">inode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:24">datalen</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="23:61"><expr pos:start="19:5" pos:end="23:60"><call pos:start="19:5" pos:end="23:60"><name pos:start="19:5" pos:end="19:11">DPRINTF</name><argument_list pos:start="19:12" pos:end="23:60">(<argument pos:start="19:13" pos:end="21:30"><expr pos:start="19:13" pos:end="21:30"><literal type="string" pos:start="19:13" pos:end="19:67">"sn_info: name %s id_str %s s: name %s vm_state_size %"</literal> <name pos:start="19:69" pos:end="19:74">PRId64</name> <literal type="string" pos:start="19:76" pos:end="19:78">" "</literal>

            <literal type="string" pos:start="21:13" pos:end="21:30">"is_snapshot %d\n"</literal></expr></argument>, <argument pos:start="21:33" pos:end="21:45"><expr pos:start="21:33" pos:end="21:45"><name pos:start="21:33" pos:end="21:45"><name pos:start="21:33" pos:end="21:39">sn_info</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:45">name</name></name></expr></argument>, <argument pos:start="21:48" pos:end="21:62"><expr pos:start="21:48" pos:end="21:62"><name pos:start="21:48" pos:end="21:62"><name pos:start="21:48" pos:end="21:54">sn_info</name><operator pos:start="21:55" pos:end="21:56">-&gt;</operator><name pos:start="21:57" pos:end="21:62">id_str</name></name></expr></argument>,

            <argument pos:start="23:13" pos:end="23:19"><expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:19">name</name></name></expr></argument>, <argument pos:start="23:22" pos:end="23:43"><expr pos:start="23:22" pos:end="23:43"><name pos:start="23:22" pos:end="23:43"><name pos:start="23:22" pos:end="23:28">sn_info</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:43">vm_state_size</name></name></expr></argument>, <argument pos:start="23:46" pos:end="23:59"><expr pos:start="23:46" pos:end="23:59"><name pos:start="23:46" pos:end="23:59"><name pos:start="23:46" pos:end="23:46">s</name><operator pos:start="23:47" pos:end="23:48">-&gt;</operator><name pos:start="23:49" pos:end="23:59">is_snapshot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:22">is_snapshot</name></name></expr>)</condition> <block pos:start="27:25" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:23">

        <expr_stmt pos:start="29:9" pos:end="31:68"><expr pos:start="29:9" pos:end="31:67"><call pos:start="29:9" pos:end="31:67"><name pos:start="29:9" pos:end="29:20">error_report</name><argument_list pos:start="29:21" pos:end="31:67">(<argument pos:start="29:22" pos:end="31:40"><expr pos:start="29:22" pos:end="31:40"><literal type="string" pos:start="29:22" pos:end="29:70">"You can't create a snapshot of a snapshot VDI, "</literal>

                     <literal type="string" pos:start="31:22" pos:end="31:28">"%s (%"</literal> <name pos:start="31:30" pos:end="31:35">PRIu32</name> <literal type="string" pos:start="31:37" pos:end="31:40">")."</literal></expr></argument>, <argument pos:start="31:43" pos:end="31:49"><expr pos:start="31:43" pos:end="31:49"><name pos:start="31:43" pos:end="31:49"><name pos:start="31:43" pos:end="31:43">s</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:49">name</name></name></expr></argument>, <argument pos:start="31:52" pos:end="31:66"><expr pos:start="31:52" pos:end="31:66"><name pos:start="31:52" pos:end="31:66"><name pos:start="31:52" pos:end="31:52">s</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:59">inode</name><operator pos:start="31:60" pos:end="31:60">.</operator><name pos:start="31:61" pos:end="31:66">vdi_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="35:9" pos:end="35:23">return <expr pos:start="35:16" pos:end="35:22"><operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:55"><expr pos:start="41:5" pos:end="41:54"><call pos:start="41:5" pos:end="41:54"><name pos:start="41:5" pos:end="41:11">DPRINTF</name><argument_list pos:start="41:12" pos:end="41:54">(<argument pos:start="41:13" pos:end="41:21"><expr pos:start="41:13" pos:end="41:21"><literal type="string" pos:start="41:13" pos:end="41:21">"%s %s\n"</literal></expr></argument>, <argument pos:start="41:24" pos:end="41:36"><expr pos:start="41:24" pos:end="41:36"><name pos:start="41:24" pos:end="41:36"><name pos:start="41:24" pos:end="41:30">sn_info</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:36">name</name></name></expr></argument>, <argument pos:start="41:39" pos:end="41:53"><expr pos:start="41:39" pos:end="41:53"><name pos:start="41:39" pos:end="41:53"><name pos:start="41:39" pos:end="41:45">sn_info</name><operator pos:start="41:46" pos:end="41:47">-&gt;</operator><name pos:start="41:48" pos:end="41:53">id_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:52"><expr pos:start="45:5" pos:end="45:51"><name pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:12">inode</name><operator pos:start="45:13" pos:end="45:13">.</operator><name pos:start="45:14" pos:end="45:26">vm_state_size</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:51"><name pos:start="45:30" pos:end="45:36">sn_info</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:51">vm_state_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:52"><expr pos:start="47:5" pos:end="47:51"><name pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:12">inode</name><operator pos:start="47:13" pos:end="47:13">.</operator><name pos:start="47:14" pos:end="47:26">vm_clock_nsec</name></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:51"><name pos:start="47:30" pos:end="47:36">sn_info</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:51">vm_clock_nsec</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="49:5" pos:end="53:7">/* It appears that inode.tag does not require a NUL terminator,

     * which means this use of strncpy is ok.

     */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:63"><expr pos:start="55:5" pos:end="55:62"><call pos:start="55:5" pos:end="55:62"><name pos:start="55:5" pos:end="55:11">strncpy</name><argument_list pos:start="55:12" pos:end="55:62">(<argument pos:start="55:13" pos:end="55:24"><expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:20">inode</name><operator pos:start="55:21" pos:end="55:21">.</operator><name pos:start="55:22" pos:end="55:24">tag</name></name></expr></argument>, <argument pos:start="55:27" pos:end="55:39"><expr pos:start="55:27" pos:end="55:39"><name pos:start="55:27" pos:end="55:39"><name pos:start="55:27" pos:end="55:33">sn_info</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:39">name</name></name></expr></argument>, <argument pos:start="55:42" pos:end="55:61"><expr pos:start="55:42" pos:end="55:61"><sizeof pos:start="55:42" pos:end="55:61">sizeof<argument_list pos:start="55:48" pos:end="55:61">(<argument pos:start="55:49" pos:end="55:60"><expr pos:start="55:49" pos:end="55:60"><name pos:start="55:49" pos:end="55:60"><name pos:start="55:49" pos:end="55:49">s</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:56">inode</name><operator pos:start="55:57" pos:end="55:57">.</operator><name pos:start="55:58" pos:end="55:60">tag</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="57:5" pos:end="57:47">/* we don't need to update entire object */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:59"><expr pos:start="59:5" pos:end="59:58"><name pos:start="59:5" pos:end="59:11">datalen</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:27">SD_INODE_SIZE</name> <operator pos:start="59:29" pos:end="59:29">-</operator> <sizeof pos:start="59:31" pos:end="59:58">sizeof<argument_list pos:start="59:37" pos:end="59:58">(<argument pos:start="59:38" pos:end="59:57"><expr pos:start="59:38" pos:end="59:57"><name pos:start="59:38" pos:end="59:57"><name pos:start="59:38" pos:end="59:38">s</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:45">inode</name><operator pos:start="59:46" pos:end="59:46">.</operator><name pos:start="59:47" pos:end="59:57">data_vdi_id</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:24">/* refresh inode. */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:40"><expr pos:start="65:5" pos:end="65:39"><name pos:start="65:5" pos:end="65:6">fd</name> <operator pos:start="65:8" pos:end="65:8">=</operator> <call pos:start="65:10" pos:end="65:39"><name pos:start="65:10" pos:end="65:24">connect_to_sdog</name><argument_list pos:start="65:25" pos:end="65:39">(<argument pos:start="65:26" pos:end="65:26"><expr pos:start="65:26" pos:end="65:26"><name pos:start="65:26" pos:end="65:26">s</name></expr></argument>, <argument pos:start="65:29" pos:end="65:38"><expr pos:start="65:29" pos:end="65:38"><operator pos:start="65:29" pos:end="65:29">&amp;</operator><name pos:start="65:30" pos:end="65:38">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="77:5"><if pos:start="67:5" pos:end="77:5">if <condition pos:start="67:8" pos:end="67:15">(<expr pos:start="67:9" pos:end="67:14"><name pos:start="67:9" pos:end="67:10">fd</name> <operator pos:start="67:12" pos:end="67:12">&lt;</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>)</condition> <block pos:start="67:17" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:21">

        <expr_stmt pos:start="69:9" pos:end="69:56"><expr pos:start="69:9" pos:end="69:55"><call pos:start="69:9" pos:end="69:55"><name pos:start="69:9" pos:end="69:20">error_report</name><argument_list pos:start="69:21" pos:end="69:55">(<argument pos:start="69:22" pos:end="69:25"><expr pos:start="69:22" pos:end="69:25"><literal type="string" pos:start="69:22" pos:end="69:25">"%s"</literal></expr></argument>, <argument pos:start="69:28" pos:end="69:54"><expr pos:start="69:28" pos:end="69:54"><call pos:start="69:28" pos:end="69:54"><name pos:start="69:28" pos:end="69:43">error_get_pretty</name><argument_list pos:start="69:44" pos:end="69:54">(<argument pos:start="69:45" pos:end="69:53"><expr pos:start="69:45" pos:end="69:53"><name pos:start="69:45" pos:end="69:53">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt><empty_stmt pos:start="69:57" pos:end="69:57">;</empty_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:30"><expr pos:start="71:9" pos:end="71:29"><call pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:18">error_free</name><argument_list pos:start="71:19" pos:end="71:29">(<argument pos:start="71:20" pos:end="71:28"><expr pos:start="71:20" pos:end="71:28"><name pos:start="71:20" pos:end="71:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:17"><expr pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <name pos:start="73:15" pos:end="73:16">fd</name></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:21">goto <name pos:start="75:14" pos:end="75:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="83:78"><expr pos:start="81:5" pos:end="83:77"><name pos:start="81:5" pos:end="81:7">ret</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <call pos:start="81:11" pos:end="83:77"><name pos:start="81:11" pos:end="81:22">write_object</name><argument_list pos:start="81:23" pos:end="83:77">(<argument pos:start="81:24" pos:end="81:25"><expr pos:start="81:24" pos:end="81:25"><name pos:start="81:24" pos:end="81:25">fd</name></expr></argument>, <argument pos:start="81:28" pos:end="81:44"><expr pos:start="81:28" pos:end="81:44"><operator pos:start="81:28" pos:end="81:28">(</operator><name pos:start="81:29" pos:end="81:32">char</name> <operator pos:start="81:34" pos:end="81:34">*</operator><operator pos:start="81:35" pos:end="81:35">)</operator><operator pos:start="81:36" pos:end="81:36">&amp;</operator><name pos:start="81:37" pos:end="81:44"><name pos:start="81:37" pos:end="81:37">s</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:44">inode</name></name></expr></argument>, <argument pos:start="81:47" pos:end="81:77"><expr pos:start="81:47" pos:end="81:77"><call pos:start="81:47" pos:end="81:77"><name pos:start="81:47" pos:end="81:60">vid_to_vdi_oid</name><argument_list pos:start="81:61" pos:end="81:77">(<argument pos:start="81:62" pos:end="81:76"><expr pos:start="81:62" pos:end="81:76"><name pos:start="81:62" pos:end="81:76"><name pos:start="81:62" pos:end="81:62">s</name><operator pos:start="81:63" pos:end="81:64">-&gt;</operator><name pos:start="81:65" pos:end="81:69">inode</name><operator pos:start="81:70" pos:end="81:70">.</operator><name pos:start="81:71" pos:end="81:76">vdi_id</name></name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="83:24" pos:end="83:41"><expr pos:start="83:24" pos:end="83:41"><name pos:start="83:24" pos:end="83:41"><name pos:start="83:24" pos:end="83:24">s</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:31">inode</name><operator pos:start="83:32" pos:end="83:32">.</operator><name pos:start="83:33" pos:end="83:41">nr_copies</name></name></expr></argument>, <argument pos:start="83:44" pos:end="83:50"><expr pos:start="83:44" pos:end="83:50"><name pos:start="83:44" pos:end="83:50">datalen</name></expr></argument>, <argument pos:start="83:53" pos:end="83:53"><expr pos:start="83:53" pos:end="83:53"><literal type="number" pos:start="83:53" pos:end="83:53">0</literal></expr></argument>, <argument pos:start="83:56" pos:end="83:60"><expr pos:start="83:56" pos:end="83:60"><name pos:start="83:56" pos:end="83:60">false</name></expr></argument>, <argument pos:start="83:63" pos:end="83:76"><expr pos:start="83:63" pos:end="83:76"><name pos:start="83:63" pos:end="83:76"><name pos:start="83:63" pos:end="83:63">s</name><operator pos:start="83:64" pos:end="83:65">-&gt;</operator><name pos:start="83:66" pos:end="83:76">cache_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="91:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="85:16">(<expr pos:start="85:9" pos:end="85:15"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">&lt;</operator> <literal type="number" pos:start="85:15" pos:end="85:15">0</literal></expr>)</condition> <block pos:start="85:18" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:21">

        <expr_stmt pos:start="87:9" pos:end="87:58"><expr pos:start="87:9" pos:end="87:57"><call pos:start="87:9" pos:end="87:57"><name pos:start="87:9" pos:end="87:20">error_report</name><argument_list pos:start="87:21" pos:end="87:57">(<argument pos:start="87:22" pos:end="87:56"><expr pos:start="87:22" pos:end="87:56"><literal type="string" pos:start="87:22" pos:end="87:56">"failed to write snapshot's inode."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="89:9" pos:end="89:21">goto <name pos:start="89:14" pos:end="89:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:51"><expr pos:start="95:5" pos:end="95:50"><name pos:start="95:5" pos:end="95:7">ret</name> <operator pos:start="95:9" pos:end="95:9">=</operator> <call pos:start="95:11" pos:end="95:50"><name pos:start="95:11" pos:end="95:22">do_sd_create</name><argument_list pos:start="95:23" pos:end="95:50">(<argument pos:start="95:24" pos:end="95:24"><expr pos:start="95:24" pos:end="95:24"><name pos:start="95:24" pos:end="95:24">s</name></expr></argument>, <argument pos:start="95:27" pos:end="95:34"><expr pos:start="95:27" pos:end="95:34"><operator pos:start="95:27" pos:end="95:27">&amp;</operator><name pos:start="95:28" pos:end="95:34">new_vid</name></expr></argument>, <argument pos:start="95:37" pos:end="95:37"><expr pos:start="95:37" pos:end="95:37"><literal type="number" pos:start="95:37" pos:end="95:37">1</literal></expr></argument>, <argument pos:start="95:40" pos:end="95:49"><expr pos:start="95:40" pos:end="95:49"><operator pos:start="95:40" pos:end="95:40">&amp;</operator><name pos:start="95:41" pos:end="95:49">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="109:5"><if pos:start="97:5" pos:end="109:5">if <condition pos:start="97:8" pos:end="97:16">(<expr pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:11">ret</name> <operator pos:start="97:13" pos:end="97:13">&lt;</operator> <literal type="number" pos:start="97:15" pos:end="97:15">0</literal></expr>)</condition> <block pos:start="97:18" pos:end="109:5">{<block_content pos:start="99:9" pos:end="107:21">

        <expr_stmt pos:start="99:9" pos:end="99:56"><expr pos:start="99:9" pos:end="99:55"><call pos:start="99:9" pos:end="99:55"><name pos:start="99:9" pos:end="99:20">error_report</name><argument_list pos:start="99:21" pos:end="99:55">(<argument pos:start="99:22" pos:end="99:25"><expr pos:start="99:22" pos:end="99:25"><literal type="string" pos:start="99:22" pos:end="99:25">"%s"</literal></expr></argument>, <argument pos:start="99:28" pos:end="99:54"><expr pos:start="99:28" pos:end="99:54"><call pos:start="99:28" pos:end="99:54"><name pos:start="99:28" pos:end="99:43">error_get_pretty</name><argument_list pos:start="99:44" pos:end="99:54">(<argument pos:start="99:45" pos:end="99:53"><expr pos:start="99:45" pos:end="99:53"><name pos:start="99:45" pos:end="99:53">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt><empty_stmt pos:start="99:57" pos:end="99:57">;</empty_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><call pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:18">error_free</name><argument_list pos:start="101:19" pos:end="101:29">(<argument pos:start="101:20" pos:end="101:28"><expr pos:start="101:20" pos:end="101:28"><name pos:start="101:20" pos:end="101:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="105:38"><expr pos:start="103:9" pos:end="105:37"><call pos:start="103:9" pos:end="105:37"><name pos:start="103:9" pos:end="103:20">error_report</name><argument_list pos:start="103:21" pos:end="105:37">(<argument pos:start="103:22" pos:end="103:62"><expr pos:start="103:22" pos:end="103:62"><literal type="string" pos:start="103:22" pos:end="103:62">"failed to create inode for snapshot. %s"</literal></expr></argument>,

                     <argument pos:start="105:22" pos:end="105:36"><expr pos:start="105:22" pos:end="105:36"><call pos:start="105:22" pos:end="105:36"><name pos:start="105:22" pos:end="105:29">strerror</name><argument_list pos:start="105:30" pos:end="105:36">(<argument pos:start="105:31" pos:end="105:35"><expr pos:start="105:31" pos:end="105:35"><name pos:start="105:31" pos:end="105:35">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="107:9" pos:end="107:21">goto <name pos:start="107:14" pos:end="107:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:47"><expr pos:start="113:5" pos:end="113:46"><name pos:start="113:5" pos:end="113:9">inode</name> <operator pos:start="113:11" pos:end="113:11">=</operator> <operator pos:start="113:13" pos:end="113:13">(</operator><name pos:start="113:14" pos:end="113:26">SheepdogInode</name> <operator pos:start="113:28" pos:end="113:28">*</operator><operator pos:start="113:29" pos:end="113:29">)</operator><call pos:start="113:30" pos:end="113:46"><name pos:start="113:30" pos:end="113:37">g_malloc</name><argument_list pos:start="113:38" pos:end="113:46">(<argument pos:start="113:39" pos:end="113:45"><expr pos:start="113:39" pos:end="113:45"><name pos:start="113:39" pos:end="113:45">datalen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="119:70"><expr pos:start="117:5" pos:end="119:69"><name pos:start="117:5" pos:end="117:7">ret</name> <operator pos:start="117:9" pos:end="117:9">=</operator> <call pos:start="117:11" pos:end="119:69"><name pos:start="117:11" pos:end="117:21">read_object</name><argument_list pos:start="117:22" pos:end="119:69">(<argument pos:start="117:23" pos:end="117:24"><expr pos:start="117:23" pos:end="117:24"><name pos:start="117:23" pos:end="117:24">fd</name></expr></argument>, <argument pos:start="117:27" pos:end="117:39"><expr pos:start="117:27" pos:end="117:39"><operator pos:start="117:27" pos:end="117:27">(</operator><name pos:start="117:28" pos:end="117:31">char</name> <operator pos:start="117:33" pos:end="117:33">*</operator><operator pos:start="117:34" pos:end="117:34">)</operator><name pos:start="117:35" pos:end="117:39">inode</name></expr></argument>, <argument pos:start="117:42" pos:end="117:64"><expr pos:start="117:42" pos:end="117:64"><call pos:start="117:42" pos:end="117:64"><name pos:start="117:42" pos:end="117:55">vid_to_vdi_oid</name><argument_list pos:start="117:56" pos:end="117:64">(<argument pos:start="117:57" pos:end="117:63"><expr pos:start="117:57" pos:end="117:63"><name pos:start="117:57" pos:end="117:63">new_vid</name></expr></argument>)</argument_list></call></expr></argument>,

                      <argument pos:start="119:23" pos:end="119:40"><expr pos:start="119:23" pos:end="119:40"><name pos:start="119:23" pos:end="119:40"><name pos:start="119:23" pos:end="119:23">s</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:30">inode</name><operator pos:start="119:31" pos:end="119:31">.</operator><name pos:start="119:32" pos:end="119:40">nr_copies</name></name></expr></argument>, <argument pos:start="119:43" pos:end="119:49"><expr pos:start="119:43" pos:end="119:49"><name pos:start="119:43" pos:end="119:49">datalen</name></expr></argument>, <argument pos:start="119:52" pos:end="119:52"><expr pos:start="119:52" pos:end="119:52"><literal type="number" pos:start="119:52" pos:end="119:52">0</literal></expr></argument>, <argument pos:start="119:55" pos:end="119:68"><expr pos:start="119:55" pos:end="119:68"><name pos:start="119:55" pos:end="119:68"><name pos:start="119:55" pos:end="119:55">s</name><operator pos:start="119:56" pos:end="119:57">-&gt;</operator><name pos:start="119:58" pos:end="119:68">cache_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="123:5" pos:end="129:5"><if pos:start="123:5" pos:end="129:5">if <condition pos:start="123:8" pos:end="123:16">(<expr pos:start="123:9" pos:end="123:15"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">&lt;</operator> <literal type="number" pos:start="123:15" pos:end="123:15">0</literal></expr>)</condition> <block pos:start="123:18" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:21">

        <expr_stmt pos:start="125:9" pos:end="125:75"><expr pos:start="125:9" pos:end="125:74"><call pos:start="125:9" pos:end="125:74"><name pos:start="125:9" pos:end="125:20">error_report</name><argument_list pos:start="125:21" pos:end="125:74">(<argument pos:start="125:22" pos:end="125:56"><expr pos:start="125:22" pos:end="125:56"><literal type="string" pos:start="125:22" pos:end="125:56">"failed to read new inode info. %s"</literal></expr></argument>, <argument pos:start="125:59" pos:end="125:73"><expr pos:start="125:59" pos:end="125:73"><call pos:start="125:59" pos:end="125:73"><name pos:start="125:59" pos:end="125:66">strerror</name><argument_list pos:start="125:67" pos:end="125:73">(<argument pos:start="125:68" pos:end="125:72"><expr pos:start="125:68" pos:end="125:72"><name pos:start="125:68" pos:end="125:72">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="127:9" pos:end="127:21">goto <name pos:start="127:14" pos:end="127:20">cleanup</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:38"><expr pos:start="133:5" pos:end="133:37"><call pos:start="133:5" pos:end="133:37"><name pos:start="133:5" pos:end="133:10">memcpy</name><argument_list pos:start="133:11" pos:end="133:37">(<argument pos:start="133:12" pos:end="133:20"><expr pos:start="133:12" pos:end="133:20"><operator pos:start="133:12" pos:end="133:12">&amp;</operator><name pos:start="133:13" pos:end="133:20"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:20">inode</name></name></expr></argument>, <argument pos:start="133:23" pos:end="133:27"><expr pos:start="133:23" pos:end="133:27"><name pos:start="133:23" pos:end="133:27">inode</name></expr></argument>, <argument pos:start="133:30" pos:end="133:36"><expr pos:start="133:30" pos:end="133:36"><name pos:start="133:30" pos:end="133:36">datalen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="137:62"><expr pos:start="135:5" pos:end="137:61"><call pos:start="135:5" pos:end="137:61"><name pos:start="135:5" pos:end="135:11">DPRINTF</name><argument_list pos:start="135:12" pos:end="137:61">(<argument pos:start="135:13" pos:end="135:51"><expr pos:start="135:13" pos:end="135:51"><literal type="string" pos:start="135:13" pos:end="135:51">"s-&gt;inode: name %s snap_id %x oid %x\n"</literal></expr></argument>,

            <argument pos:start="137:13" pos:end="137:25"><expr pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:20">inode</name><operator pos:start="137:21" pos:end="137:21">.</operator><name pos:start="137:22" pos:end="137:25">name</name></name></expr></argument>, <argument pos:start="137:28" pos:end="137:43"><expr pos:start="137:28" pos:end="137:43"><name pos:start="137:28" pos:end="137:43"><name pos:start="137:28" pos:end="137:28">s</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:35">inode</name><operator pos:start="137:36" pos:end="137:36">.</operator><name pos:start="137:37" pos:end="137:43">snap_id</name></name></expr></argument>, <argument pos:start="137:46" pos:end="137:60"><expr pos:start="137:46" pos:end="137:60"><name pos:start="137:46" pos:end="137:60"><name pos:start="137:46" pos:end="137:46">s</name><operator pos:start="137:47" pos:end="137:48">-&gt;</operator><name pos:start="137:49" pos:end="137:53">inode</name><operator pos:start="137:54" pos:end="137:54">.</operator><name pos:start="137:55" pos:end="137:60">vdi_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="141:1" pos:end="141:8"><name pos:start="141:1" pos:end="141:7">cleanup</name>:</label>

    <expr_stmt pos:start="143:5" pos:end="143:20"><expr pos:start="143:5" pos:end="143:19"><call pos:start="143:5" pos:end="143:19"><name pos:start="143:5" pos:end="143:15">closesocket</name><argument_list pos:start="143:16" pos:end="143:19">(<argument pos:start="143:17" pos:end="143:18"><expr pos:start="143:17" pos:end="143:18"><name pos:start="143:17" pos:end="143:18">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="145:5" pos:end="145:15">return <expr pos:start="145:12" pos:end="145:14"><name pos:start="145:12" pos:end="145:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
