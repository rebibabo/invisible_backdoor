<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3459.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="54:16"><decl pos:start="1:1" pos:end="54:16"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">sbr_qmf_analysis</name><argument_list pos:start="1:29" pos:end="54:16">(<argument pos:start="1:30" pos:end="1:51"><expr pos:start="1:30" pos:end="1:51"><name pos:start="1:30" pos:end="1:46">AVFixedDSPContext</name> <operator pos:start="1:48" pos:end="1:48">*</operator><name pos:start="1:49" pos:end="1:51">dsp</name></expr></argument>, <argument pos:start="1:54" pos:end="1:69"><expr pos:start="1:54" pos:end="1:69"><name pos:start="1:54" pos:end="1:63">FFTContext</name> <operator pos:start="1:65" pos:end="1:65">*</operator><name pos:start="1:66" pos:end="1:69">mdct</name></expr></argument>,

<cpp:else pos:start="3:1" pos:end="3:5">#<cpp:directive pos:start="3:2" pos:end="3:5">else</cpp:directive></cpp:else>

<argument pos:start="5:1" pos:end="54:16"><expr pos:start="5:1" pos:end="54:16"><specifier pos:start="5:1" pos:end="5:6">static</specifier> <name pos:start="5:8" pos:end="5:11">void</name> <macro pos:start="5:13" pos:end="11:84"><name pos:start="5:13" pos:end="5:28">sbr_qmf_analysis</name><argument_list pos:start="5:29" pos:end="11:84">(<argument pos:start="5:30" pos:end="5:51">AVFloatDSPContext *dsp</argument>, <argument pos:start="5:54" pos:end="5:69">FFTContext *mdct</argument>,

<cpp:endif pos:start="7:1" pos:end="7:6">#<cpp:directive pos:start="7:2" pos:end="7:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="7:8" pos:end="7:22">/* USE_FIXED */</comment>

                             <argument pos:start="9:30" pos:end="9:50">SBRDSPContext *sbrdsp</argument>, <argument pos:start="9:53" pos:end="9:70">const INTFLOAT *in</argument>, <argument pos:start="9:73" pos:end="9:83">INTFLOAT *x</argument>,

                             <argument pos:start="11:30" pos:end="11:44">INTFLOAT z[<literal type="number" pos:start="11:41" pos:end="11:43">320</literal>]</argument>, <argument pos:start="11:47" pos:end="11:70">INTFLOAT W[<literal type="number" pos:start="11:58" pos:end="11:58">2</literal>][<literal type="number" pos:start="11:61" pos:end="11:62">32</literal>][<literal type="number" pos:start="11:65" pos:end="11:66">32</literal>][<literal type="number" pos:start="11:69" pos:end="11:69">2</literal>]</argument>, <argument pos:start="11:73" pos:end="11:83">int buf_idx</argument>)</argument_list></macro>

<block pos:start="13:1" pos:end="54:16">{

    <expr pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:7">int</name> <name pos:start="15:9" pos:end="15:9">i</name></expr>;


    <expr pos:start="18:5" pos:end="18:9"><name pos:start="18:5" pos:end="18:7">int</name> <name pos:start="18:9" pos:end="18:9">j</name></expr>;


    <expr pos:start="21:5" pos:end="21:48"><call pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:10">memcpy</name><argument_list pos:start="21:11" pos:end="21:48">(<argument pos:start="21:12" pos:end="21:12"><expr pos:start="21:12" pos:end="21:12"><name pos:start="21:12" pos:end="21:12">x</name></expr></argument>    , <argument pos:start="21:19" pos:end="21:24"><expr pos:start="21:19" pos:end="21:24"><name pos:start="21:19" pos:end="21:19">x</name><operator pos:start="21:20" pos:end="21:20">+</operator><literal type="number" pos:start="21:21" pos:end="21:24">1024</literal></expr></argument>, <argument pos:start="21:27" pos:end="21:47"><expr pos:start="21:27" pos:end="21:47"><operator pos:start="21:27" pos:end="21:27">(</operator><literal type="number" pos:start="21:28" pos:end="21:31">320</literal><operator pos:start="21:31" pos:end="21:31">-</operator><literal type="number" pos:start="21:32" pos:end="21:33">32</literal><operator pos:start="21:34" pos:end="21:34">)</operator><operator pos:start="21:35" pos:end="21:35">*</operator><sizeof pos:start="21:36" pos:end="21:47">sizeof<argument_list pos:start="21:42" pos:end="21:47">(<argument pos:start="21:43" pos:end="21:46"><expr pos:start="21:43" pos:end="21:46"><name pos:start="21:43" pos:end="21:46"><name pos:start="21:43" pos:end="21:43">x</name><index pos:start="21:44" pos:end="21:46">[<expr pos:start="21:45" pos:end="21:45"><literal type="number" pos:start="21:45" pos:end="21:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;

    <expr pos:start="23:5" pos:end="23:48"><call pos:start="23:5" pos:end="23:48"><name pos:start="23:5" pos:end="23:10">memcpy</name><argument_list pos:start="23:11" pos:end="23:48">(<argument pos:start="23:12" pos:end="23:16"><expr pos:start="23:12" pos:end="23:16"><name pos:start="23:12" pos:end="23:12">x</name><operator pos:start="23:13" pos:end="23:13">+</operator><literal type="number" pos:start="23:14" pos:end="23:16">288</literal></expr></argument>, <argument pos:start="23:19" pos:end="23:20"><expr pos:start="23:19" pos:end="23:20"><name pos:start="23:19" pos:end="23:20">in</name></expr></argument>,         <argument pos:start="23:31" pos:end="23:47"><expr pos:start="23:31" pos:end="23:47"><literal type="number" pos:start="23:31" pos:end="23:34">1024</literal><operator pos:start="23:35" pos:end="23:35">*</operator><sizeof pos:start="23:36" pos:end="23:47">sizeof<argument_list pos:start="23:42" pos:end="23:47">(<argument pos:start="23:43" pos:end="23:46"><expr pos:start="23:43" pos:end="23:46"><name pos:start="23:43" pos:end="23:46"><name pos:start="23:43" pos:end="23:43">x</name><index pos:start="23:44" pos:end="23:46">[<expr pos:start="23:45" pos:end="23:45"><literal type="number" pos:start="23:45" pos:end="23:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;

    <for pos:start="25:5" pos:end="54:16">for <control pos:start="25:9" pos:end="25:28">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:23"><expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <literal type="number" pos:start="25:21" pos:end="25:22">32</literal></expr>;</condition> <incr pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:25">i</name><operator pos:start="25:26" pos:end="25:27">++</operator></expr></incr>)</control> <block pos:start="25:30" pos:end="54:16">{<block_content pos:start="29:9" pos:end="54:16"> <comment type="line" pos:start="25:32" pos:end="25:79">// numTimeSlots*RATE = 16*2 as 960 sample frames</comment>

                               <comment type="line" pos:start="27:32" pos:end="27:51">// are not supported</comment>

        <expr_stmt pos:start="29:9" pos:end="29:63"><expr pos:start="29:9" pos:end="29:62"><call pos:start="29:9" pos:end="29:62"><name pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:11">dsp</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:32">vector_fmul_reverse</name></name><argument_list pos:start="29:33" pos:end="29:62">(<argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">z</name></expr></argument>, <argument pos:start="29:37" pos:end="29:53"><expr pos:start="29:37" pos:end="29:53"><name pos:start="29:37" pos:end="29:53">sbr_qmf_window_ds</name></expr></argument>, <argument pos:start="29:56" pos:end="29:56"><expr pos:start="29:56" pos:end="29:56"><name pos:start="29:56" pos:end="29:56">x</name></expr></argument>, <argument pos:start="29:59" pos:end="29:61"><expr pos:start="29:59" pos:end="29:61"><literal type="number" pos:start="29:59" pos:end="29:61">320</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:27"><expr pos:start="31:9" pos:end="31:26"><call pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:14">sbrdsp</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:23">sum64x5</name></name><argument_list pos:start="31:24" pos:end="31:26">(<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:35"><expr pos:start="33:9" pos:end="33:34"><call pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:14">sbrdsp</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:31">qmf_pre_shuffle</name></name><argument_list pos:start="33:32" pos:end="33:34">(<argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><name pos:start="33:33" pos:end="33:33">z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
















        <expr_stmt pos:start="50:9" pos:end="50:40"><expr pos:start="50:9" pos:end="50:39"><call pos:start="50:9" pos:end="50:39"><name pos:start="50:9" pos:end="50:24"><name pos:start="50:9" pos:end="50:12">mdct</name><operator pos:start="50:13" pos:end="50:14">-&gt;</operator><name pos:start="50:15" pos:end="50:24">imdct_half</name></name><argument_list pos:start="50:25" pos:end="50:39">(<argument pos:start="50:26" pos:end="50:29"><expr pos:start="50:26" pos:end="50:29"><name pos:start="50:26" pos:end="50:29">mdct</name></expr></argument>, <argument pos:start="50:32" pos:end="50:32"><expr pos:start="50:32" pos:end="50:32"><name pos:start="50:32" pos:end="50:32">z</name></expr></argument>, <argument pos:start="50:35" pos:end="50:38"><expr pos:start="50:35" pos:end="50:38"><name pos:start="50:35" pos:end="50:35">z</name><operator pos:start="50:36" pos:end="50:36">+</operator><literal type="number" pos:start="50:37" pos:end="50:38">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="52:9" pos:end="52:51"><expr pos:start="52:9" pos:end="52:50"><call pos:start="52:9" pos:end="52:50"><name pos:start="52:9" pos:end="52:32"><name pos:start="52:9" pos:end="52:14">sbrdsp</name><operator pos:start="52:15" pos:end="52:16">-&gt;</operator><name pos:start="52:17" pos:end="52:32">qmf_post_shuffle</name></name><argument_list pos:start="52:33" pos:end="52:50">(<argument pos:start="52:34" pos:end="52:46"><expr pos:start="52:34" pos:end="52:46"><name pos:start="52:34" pos:end="52:46"><name pos:start="52:34" pos:end="52:34">W</name><index pos:start="52:35" pos:end="52:43">[<expr pos:start="52:36" pos:end="52:42"><name pos:start="52:36" pos:end="52:42">buf_idx</name></expr>]</index><index pos:start="52:44" pos:end="52:46">[<expr pos:start="52:45" pos:end="52:45"><name pos:start="52:45" pos:end="52:45">i</name></expr>]</index></name></expr></argument>, <argument pos:start="52:49" pos:end="52:49"><expr pos:start="52:49" pos:end="52:49"><name pos:start="52:49" pos:end="52:49">z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="54:9" pos:end="54:16"><expr pos:start="54:9" pos:end="54:15"><name pos:start="54:9" pos:end="54:9">x</name> <operator pos:start="54:11" pos:end="54:12">+=</operator> <literal type="number" pos:start="54:14" pos:end="54:15">32</literal></expr>;</expr_stmt></block_content></block></for></block></expr></argument></argument_list></decl></decl_stmt>

</unit>
