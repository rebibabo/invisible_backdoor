<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3388.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:41">text_console_init</name><parameter_list pos:start="1:42" pos:end="1:56">(<parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:51">ChardevVC</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">vc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:15">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">QemuConsole</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:18">width</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:19">height</name> <init pos:start="11:21" pos:end="11:23">= <expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:7">chr</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:44"><name pos:start="15:11" pos:end="15:19">g_malloc0</name><argument_list pos:start="15:20" pos:end="15:44">(<argument pos:start="15:21" pos:end="15:43"><expr pos:start="15:21" pos:end="15:43"><sizeof pos:start="15:21" pos:end="15:43">sizeof<argument_list pos:start="15:27" pos:end="15:43">(<argument pos:start="15:28" pos:end="15:42"><expr pos:start="15:28" pos:end="15:42"><name pos:start="15:28" pos:end="15:42">CharDriverState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:10">vc</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:21">has_width</name></name></expr>)</condition> <block pos:start="19:24" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:26">

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:13">width</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:25"><name pos:start="21:17" pos:end="21:18">vc</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:25">width</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="27:5">else if <condition pos:start="23:15" pos:end="23:28">(<expr pos:start="23:16" pos:end="23:27"><name pos:start="23:16" pos:end="23:27"><name pos:start="23:16" pos:end="23:17">vc</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:27">has_cols</name></name></expr>)</condition> <block pos:start="23:30" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:38">

        <expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:13">width</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:24"><name pos:start="25:17" pos:end="25:18">vc</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:24">cols</name></name> <operator pos:start="25:26" pos:end="25:26">*</operator> <name pos:start="25:28" pos:end="25:37">FONT_WIDTH</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:23">(<expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:10">vc</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:22">has_height</name></name></expr>)</condition> <block pos:start="31:25" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:28">

        <expr_stmt pos:start="33:9" pos:end="33:28"><expr pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:14">height</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:27"><name pos:start="33:18" pos:end="33:19">vc</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:27">height</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="39:5">else if <condition pos:start="35:15" pos:end="35:28">(<expr pos:start="35:16" pos:end="35:27"><name pos:start="35:16" pos:end="35:27"><name pos:start="35:16" pos:end="35:17">vc</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:27">has_rows</name></name></expr>)</condition> <block pos:start="35:30" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:40">

        <expr_stmt pos:start="37:9" pos:end="37:40"><expr pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:14">height</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:25"><name pos:start="37:18" pos:end="37:19">vc</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:25">rows</name></name> <operator pos:start="37:27" pos:end="37:27">*</operator> <name pos:start="37:29" pos:end="37:39">FONT_HEIGHT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><call pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:25">trace_console_txt_new</name><argument_list pos:start="43:26" pos:end="43:40">(<argument pos:start="43:27" pos:end="43:31"><expr pos:start="43:27" pos:end="43:31"><name pos:start="43:27" pos:end="43:31">width</name></expr></argument>, <argument pos:start="43:34" pos:end="43:39"><expr pos:start="43:34" pos:end="43:39"><name pos:start="43:34" pos:end="43:39">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="55:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:34">(<expr pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:13">width</name> <operator pos:start="45:15" pos:end="45:16">==</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal> <operator pos:start="45:20" pos:end="45:21">||</operator> <name pos:start="45:23" pos:end="45:28">height</name> <operator pos:start="45:30" pos:end="45:31">==</operator> <literal type="number" pos:start="45:33" pos:end="45:33">0</literal></expr>)</condition> <block pos:start="45:36" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:44">

        <expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:9">s</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:23">new_console</name><argument_list pos:start="47:24" pos:end="47:43">(<argument pos:start="47:25" pos:end="47:28"><expr pos:start="47:25" pos:end="47:28"><name pos:start="47:25" pos:end="47:28">NULL</name></expr></argument>, <argument pos:start="47:31" pos:end="47:42"><expr pos:start="47:31" pos:end="47:42"><name pos:start="47:31" pos:end="47:42">TEXT_CONSOLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="55:5">else <block pos:start="49:12" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:63">

        <expr_stmt pos:start="51:9" pos:end="51:55"><expr pos:start="51:9" pos:end="51:54"><name pos:start="51:9" pos:end="51:9">s</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:54"><name pos:start="51:13" pos:end="51:23">new_console</name><argument_list pos:start="51:24" pos:end="51:54">(<argument pos:start="51:25" pos:end="51:28"><expr pos:start="51:25" pos:end="51:28"><name pos:start="51:25" pos:end="51:28">NULL</name></expr></argument>, <argument pos:start="51:31" pos:end="51:53"><expr pos:start="51:31" pos:end="51:53"><name pos:start="51:31" pos:end="51:53">TEXT_CONSOLE_FIXED_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:63"><expr pos:start="53:9" pos:end="53:62"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:18">surface</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:62"><name pos:start="53:22" pos:end="53:47">qemu_create_displaysurface</name><argument_list pos:start="53:48" pos:end="53:62">(<argument pos:start="53:49" pos:end="53:53"><expr pos:start="53:49" pos:end="53:53"><name pos:start="53:49" pos:end="53:53">width</name></expr></argument>, <argument pos:start="53:56" pos:end="53:61"><expr pos:start="53:56" pos:end="53:61"><name pos:start="53:56" pos:end="53:61">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:11">(<expr pos:start="59:9" pos:end="59:10"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:10">s</name></expr>)</condition> <block pos:start="59:13" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:20">

        <expr_stmt pos:start="61:9" pos:end="61:20"><expr pos:start="61:9" pos:end="61:19"><call pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:14">g_free</name><argument_list pos:start="61:15" pos:end="61:19">(<argument pos:start="61:16" pos:end="61:18"><expr pos:start="61:16" pos:end="61:18"><name pos:start="61:16" pos:end="61:18">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:20">return <expr pos:start="63:16" pos:end="63:19"><name pos:start="63:16" pos:end="63:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:17"><expr pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:10"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:10">chr</name></name> <operator pos:start="69:12" pos:end="69:12">=</operator> <name pos:start="69:14" pos:end="69:16">chr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:20"><expr pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:7">chr</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:15">opaque</name></name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:19">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:46"><expr pos:start="73:5" pos:end="73:45"><name pos:start="73:5" pos:end="73:21"><name pos:start="73:5" pos:end="73:7">chr</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:21">chr_set_echo</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:45">text_console_set_echo</name></expr>;</expr_stmt>

    <comment type="block" pos:start="75:5" pos:end="79:7">/* console/chardev init sometimes completes elsewhere in a 2nd

     * stage, so defer OPENED events until they are fully initialized

     */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:33"><expr pos:start="81:5" pos:end="81:32"><name pos:start="81:5" pos:end="81:25"><name pos:start="81:5" pos:end="81:7">chr</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:25">explicit_be_open</name></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:32">true</name></expr>;</expr_stmt>



    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:22">(<expr pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:21">display_state</name></expr>)</condition> <block pos:start="85:24" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:49">

        <expr_stmt pos:start="87:9" pos:end="87:49"><expr pos:start="87:9" pos:end="87:48"><call pos:start="87:9" pos:end="87:48"><name pos:start="87:9" pos:end="87:28">text_console_do_init</name><argument_list pos:start="87:29" pos:end="87:48">(<argument pos:start="87:30" pos:end="87:32"><expr pos:start="87:30" pos:end="87:32"><name pos:start="87:30" pos:end="87:32">chr</name></expr></argument>, <argument pos:start="87:35" pos:end="87:47"><expr pos:start="87:35" pos:end="87:47"><name pos:start="87:35" pos:end="87:47">display_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="91:5" pos:end="91:15">return <expr pos:start="91:12" pos:end="91:14"><name pos:start="91:12" pos:end="91:14">chr</name></expr>;</return>

</block_content>}</block></function>
</unit>
