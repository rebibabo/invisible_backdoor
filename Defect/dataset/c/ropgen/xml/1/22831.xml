<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22831.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">avpriv_mpeg4audio_get_config</name><parameter_list pos:start="1:33" pos:end="3:66">(<parameter pos:start="1:34" pos:end="1:52"><decl pos:start="1:34" pos:end="1:52"><type pos:start="1:34" pos:end="1:52"><name pos:start="1:34" pos:end="1:49">MPEG4AudioConfig</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">c</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:72"><decl pos:start="1:55" pos:end="1:72"><type pos:start="1:55" pos:end="1:72"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">buf</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:45">bit_size</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:65"><decl pos:start="3:48" pos:end="3:65"><type pos:start="3:48" pos:end="3:65"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:65">sync_extension</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="143:1">{<block_content pos:start="7:5" pos:end="141:36">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">GetBitContext</name></type> <name pos:start="7:19" pos:end="7:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:32">specific_config_bitindex</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:35"><if pos:start="13:5" pos:end="15:35">if<condition pos:start="13:7" pos:end="13:19">(<expr pos:start="13:8" pos:end="13:18"><name pos:start="13:8" pos:end="13:15">bit_size</name><operator pos:start="13:16" pos:end="13:17">&lt;=</operator><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:35"><block_content pos:start="15:9" pos:end="15:35">

        <return pos:start="15:9" pos:end="15:35">return <expr pos:start="15:16" pos:end="15:34"><name pos:start="15:16" pos:end="15:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><call pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:17">init_get_bits</name><argument_list pos:start="19:18" pos:end="19:37">(<argument pos:start="19:19" pos:end="19:21"><expr pos:start="19:19" pos:end="19:21"><operator pos:start="19:19" pos:end="19:19">&amp;</operator><name pos:start="19:20" pos:end="19:21">gb</name></expr></argument>, <argument pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">buf</name></expr></argument>, <argument pos:start="19:29" pos:end="19:36"><expr pos:start="19:29" pos:end="19:36"><name pos:start="19:29" pos:end="19:36">bit_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:5">c</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:18">object_type</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <call pos:start="21:22" pos:end="21:41"><name pos:start="21:22" pos:end="21:36">get_object_type</name><argument_list pos:start="21:37" pos:end="21:41">(<argument pos:start="21:38" pos:end="21:40"><expr pos:start="21:38" pos:end="21:40"><operator pos:start="21:38" pos:end="21:38">&amp;</operator><name pos:start="21:39" pos:end="21:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:62"><expr pos:start="23:5" pos:end="23:61"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:5">c</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:18">sample_rate</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <call pos:start="23:22" pos:end="23:61"><name pos:start="23:22" pos:end="23:36">get_sample_rate</name><argument_list pos:start="23:37" pos:end="23:61">(<argument pos:start="23:38" pos:end="23:40"><expr pos:start="23:38" pos:end="23:40"><operator pos:start="23:38" pos:end="23:38">&amp;</operator><name pos:start="23:39" pos:end="23:40">gb</name></expr></argument>, <argument pos:start="23:43" pos:end="23:60"><expr pos:start="23:43" pos:end="23:60"><operator pos:start="23:43" pos:end="23:43">&amp;</operator><name pos:start="23:44" pos:end="23:60"><name pos:start="23:44" pos:end="23:44">c</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:60">sampling_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:5">c</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:18">chan_config</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="25:37"><name pos:start="25:22" pos:end="25:29">get_bits</name><argument_list pos:start="25:30" pos:end="25:37">(<argument pos:start="25:31" pos:end="25:33"><expr pos:start="25:31" pos:end="25:33"><operator pos:start="25:31" pos:end="25:31">&amp;</operator><name pos:start="25:32" pos:end="25:33">gb</name></expr></argument>, <argument pos:start="25:36" pos:end="25:36"><expr pos:start="25:36" pos:end="25:36"><literal type="number" pos:start="25:36" pos:end="25:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:61"><if pos:start="27:5" pos:end="29:61">if <condition pos:start="27:8" pos:end="27:64">(<expr pos:start="27:9" pos:end="27:63"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:9">c</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:22">chan_config</name></name> <operator pos:start="27:24" pos:end="27:24">&lt;</operator> <call pos:start="27:26" pos:end="27:63"><name pos:start="27:26" pos:end="27:39">FF_ARRAY_ELEMS</name><argument_list pos:start="27:40" pos:end="27:63">(<argument pos:start="27:41" pos:end="27:62"><expr pos:start="27:41" pos:end="27:62"><name pos:start="27:41" pos:end="27:62">ff_mpeg4audio_channels</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:61"><block_content pos:start="29:9" pos:end="29:61">

        <expr_stmt pos:start="29:9" pos:end="29:61"><expr pos:start="29:9" pos:end="29:60"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:9">c</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:19">channels</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:60"><name pos:start="29:23" pos:end="29:44">ff_mpeg4audio_channels</name><index pos:start="29:45" pos:end="29:60">[<expr pos:start="29:46" pos:end="29:59"><name pos:start="29:46" pos:end="29:59"><name pos:start="29:46" pos:end="29:46">c</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:59">chan_config</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:16"><expr pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:5">c</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:10">sbr</name></name> <operator pos:start="31:12" pos:end="31:12">=</operator> <operator pos:start="31:14" pos:end="31:14">-</operator><literal type="number" pos:start="31:15" pos:end="31:15">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:16"><expr pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:9"><name pos:start="33:5" pos:end="33:5">c</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:9">ps</name></name>  <operator pos:start="33:12" pos:end="33:12">=</operator> <operator pos:start="33:14" pos:end="33:14">-</operator><literal type="number" pos:start="33:15" pos:end="33:15">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="63:5"><if pos:start="35:5" pos:end="57:5">if <condition pos:start="35:8" pos:end="39:68">(<expr pos:start="35:9" pos:end="39:67"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:9">c</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:22">object_type</name></name> <operator pos:start="35:24" pos:end="35:25">==</operator> <name pos:start="35:27" pos:end="35:33">AOT_SBR</name> <operator pos:start="35:35" pos:end="35:36">||</operator> <operator pos:start="35:38" pos:end="35:38">(</operator><name pos:start="35:39" pos:end="35:52"><name pos:start="35:39" pos:end="35:39">c</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:52">object_type</name></name> <operator pos:start="35:54" pos:end="35:55">==</operator> <name pos:start="35:57" pos:end="35:62">AOT_PS</name> <operator pos:start="35:64" pos:end="35:65">&amp;&amp;</operator>

        <comment type="line" pos:start="37:9" pos:end="37:52">// check for W6132 Annex YYYY draft MP3onMP4</comment>

        <operator pos:start="39:9" pos:end="39:9">!</operator><operator pos:start="39:10" pos:end="39:10">(</operator><call pos:start="39:11" pos:end="39:27"><name pos:start="39:11" pos:end="39:19">show_bits</name><argument_list pos:start="39:20" pos:end="39:27">(<argument pos:start="39:21" pos:end="39:23"><expr pos:start="39:21" pos:end="39:23"><operator pos:start="39:21" pos:end="39:21">&amp;</operator><name pos:start="39:22" pos:end="39:23">gb</name></expr></argument>, <argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">3</literal></expr></argument>)</argument_list></call> <operator pos:start="39:29" pos:end="39:29">&amp;</operator> <literal type="number" pos:start="39:31" pos:end="39:34">0x03</literal> <operator pos:start="39:36" pos:end="39:37">&amp;&amp;</operator> <operator pos:start="39:39" pos:end="39:39">!</operator><operator pos:start="39:40" pos:end="39:40">(</operator><call pos:start="39:41" pos:end="39:57"><name pos:start="39:41" pos:end="39:49">show_bits</name><argument_list pos:start="39:50" pos:end="39:57">(<argument pos:start="39:51" pos:end="39:53"><expr pos:start="39:51" pos:end="39:53"><operator pos:start="39:51" pos:end="39:51">&amp;</operator><name pos:start="39:52" pos:end="39:53">gb</name></expr></argument>, <argument pos:start="39:56" pos:end="39:56"><expr pos:start="39:56" pos:end="39:56"><literal type="number" pos:start="39:56" pos:end="39:56">9</literal></expr></argument>)</argument_list></call> <operator pos:start="39:59" pos:end="39:59">&amp;</operator> <literal type="number" pos:start="39:61" pos:end="39:64">0x3F</literal><operator pos:start="39:65" pos:end="39:65">)</operator><operator pos:start="39:66" pos:end="39:66">)</operator><operator pos:start="39:67" pos:end="39:67">)</operator></expr>)</condition> <block pos:start="39:70" pos:end="57:5">{<block_content pos:start="41:9" pos:end="55:50">

        <if_stmt pos:start="41:9" pos:end="43:22"><if pos:start="41:9" pos:end="43:22">if <condition pos:start="41:12" pos:end="41:37">(<expr pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:13">c</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:26">object_type</name></name> <operator pos:start="41:28" pos:end="41:29">==</operator> <name pos:start="41:31" pos:end="41:36">AOT_PS</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:22"><block_content pos:start="43:13" pos:end="43:22">

            <expr_stmt pos:start="43:13" pos:end="43:22"><expr pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:17"><name pos:start="43:13" pos:end="43:13">c</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:17">ps</name></name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:37"><expr pos:start="45:9" pos:end="45:36"><name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:9">c</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:26">ext_object_type</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:36">AOT_SBR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:19"><expr pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:9">c</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:14">sbr</name></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:74"><expr pos:start="49:9" pos:end="49:73"><name pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:9">c</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:26">ext_sample_rate</name></name> <operator pos:start="49:28" pos:end="49:28">=</operator> <call pos:start="49:30" pos:end="49:73"><name pos:start="49:30" pos:end="49:44">get_sample_rate</name><argument_list pos:start="49:45" pos:end="49:73">(<argument pos:start="49:46" pos:end="49:48"><expr pos:start="49:46" pos:end="49:48"><operator pos:start="49:46" pos:end="49:46">&amp;</operator><name pos:start="49:47" pos:end="49:48">gb</name></expr></argument>, <argument pos:start="49:51" pos:end="49:72"><expr pos:start="49:51" pos:end="49:72"><operator pos:start="49:51" pos:end="49:51">&amp;</operator><name pos:start="49:52" pos:end="49:72"><name pos:start="49:52" pos:end="49:52">c</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:72">ext_sampling_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:46"><expr pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:9">c</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:22">object_type</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <call pos:start="51:26" pos:end="51:45"><name pos:start="51:26" pos:end="51:40">get_object_type</name><argument_list pos:start="51:41" pos:end="51:45">(<argument pos:start="51:42" pos:end="51:44"><expr pos:start="51:42" pos:end="51:44"><operator pos:start="51:42" pos:end="51:42">&amp;</operator><name pos:start="51:43" pos:end="51:44">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:50"><if pos:start="53:9" pos:end="55:50">if <condition pos:start="53:12" pos:end="53:42">(<expr pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:13">c</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:26">object_type</name></name> <operator pos:start="53:28" pos:end="53:29">==</operator> <name pos:start="53:31" pos:end="53:41">AOT_ER_BSAC</name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:50"><block_content pos:start="55:13" pos:end="55:50">

            <expr_stmt pos:start="55:13" pos:end="55:50"><expr pos:start="55:13" pos:end="55:49"><name pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:13">c</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:30">ext_chan_config</name></name> <operator pos:start="55:32" pos:end="55:32">=</operator> <call pos:start="55:34" pos:end="55:49"><name pos:start="55:34" pos:end="55:41">get_bits</name><argument_list pos:start="55:42" pos:end="55:49">(<argument pos:start="55:43" pos:end="55:45"><expr pos:start="55:43" pos:end="55:45"><operator pos:start="55:43" pos:end="55:43">&amp;</operator><name pos:start="55:44" pos:end="55:45">gb</name></expr></argument>, <argument pos:start="55:48" pos:end="55:48"><expr pos:start="55:48" pos:end="55:48"><literal type="number" pos:start="55:48" pos:end="55:48">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="63:5">else <block pos:start="57:12" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:31">

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:9">c</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:26">ext_object_type</name></name> <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:37">AOT_NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:9">c</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:26">ext_sample_rate</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <literal type="number" pos:start="61:30" pos:end="61:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:51"><expr pos:start="65:5" pos:end="65:50"><name pos:start="65:5" pos:end="65:28">specific_config_bitindex</name> <operator pos:start="65:30" pos:end="65:30">=</operator> <call pos:start="65:32" pos:end="65:50"><name pos:start="65:32" pos:end="65:45">get_bits_count</name><argument_list pos:start="65:46" pos:end="65:50">(<argument pos:start="65:47" pos:end="65:49"><expr pos:start="65:47" pos:end="65:49"><operator pos:start="65:47" pos:end="65:47">&amp;</operator><name pos:start="65:48" pos:end="65:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="87:5"><if pos:start="69:5" pos:end="87:5">if <condition pos:start="69:8" pos:end="69:34">(<expr pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:9">c</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:22">object_type</name></name> <operator pos:start="69:24" pos:end="69:25">==</operator> <name pos:start="69:27" pos:end="69:33">AOT_ALS</name></expr>)</condition> <block pos:start="69:36" pos:end="87:5">{<block_content pos:start="71:9" pos:end="85:22">

        <expr_stmt pos:start="71:9" pos:end="71:26"><expr pos:start="71:9" pos:end="71:25"><call pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:17">skip_bits</name><argument_list pos:start="71:18" pos:end="71:25">(<argument pos:start="71:19" pos:end="71:21"><expr pos:start="71:19" pos:end="71:21"><operator pos:start="71:19" pos:end="71:19">&amp;</operator><name pos:start="71:20" pos:end="71:21">gb</name></expr></argument>, <argument pos:start="71:24" pos:end="71:24"><expr pos:start="71:24" pos:end="71:24"><literal type="number" pos:start="71:24" pos:end="71:24">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="75:36"><if pos:start="73:9" pos:end="75:36">if <condition pos:start="73:12" pos:end="73:65">(<expr pos:start="73:13" pos:end="73:64"><call pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:26">show_bits_long</name><argument_list pos:start="73:27" pos:end="73:35">(<argument pos:start="73:28" pos:end="73:30"><expr pos:start="73:28" pos:end="73:30"><operator pos:start="73:28" pos:end="73:28">&amp;</operator><name pos:start="73:29" pos:end="73:30">gb</name></expr></argument>, <argument pos:start="73:33" pos:end="73:34"><expr pos:start="73:33" pos:end="73:34"><literal type="number" pos:start="73:33" pos:end="73:34">24</literal></expr></argument>)</argument_list></call> <operator pos:start="73:37" pos:end="73:38">!=</operator> <call pos:start="73:40" pos:end="73:64"><name pos:start="73:40" pos:end="73:46">MKBETAG</name><argument_list pos:start="73:47" pos:end="73:64">(<argument pos:start="73:48" pos:end="73:51"><expr pos:start="73:48" pos:end="73:51"><literal type="char" pos:start="73:48" pos:end="73:51">'\0'</literal></expr></argument>,<argument pos:start="73:53" pos:end="73:55"><expr pos:start="73:53" pos:end="73:55"><literal type="char" pos:start="73:53" pos:end="73:55">'A'</literal></expr></argument>,<argument pos:start="73:57" pos:end="73:59"><expr pos:start="73:57" pos:end="73:59"><literal type="char" pos:start="73:57" pos:end="73:59">'L'</literal></expr></argument>,<argument pos:start="73:61" pos:end="73:63"><expr pos:start="73:61" pos:end="73:63"><literal type="char" pos:start="73:61" pos:end="73:63">'S'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:36"><block_content pos:start="75:13" pos:end="75:36">

            <expr_stmt pos:start="75:13" pos:end="75:36"><expr pos:start="75:13" pos:end="75:35"><call pos:start="75:13" pos:end="75:35"><name pos:start="75:13" pos:end="75:26">skip_bits_long</name><argument_list pos:start="75:27" pos:end="75:35">(<argument pos:start="75:28" pos:end="75:30"><expr pos:start="75:28" pos:end="75:30"><operator pos:start="75:28" pos:end="75:28">&amp;</operator><name pos:start="75:29" pos:end="75:30">gb</name></expr></argument>, <argument pos:start="75:33" pos:end="75:34"><expr pos:start="75:33" pos:end="75:34"><literal type="number" pos:start="75:33" pos:end="75:34">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:55"><expr pos:start="79:9" pos:end="79:54"><name pos:start="79:9" pos:end="79:32">specific_config_bitindex</name> <operator pos:start="79:34" pos:end="79:34">=</operator> <call pos:start="79:36" pos:end="79:54"><name pos:start="79:36" pos:end="79:49">get_bits_count</name><argument_list pos:start="79:50" pos:end="79:54">(<argument pos:start="79:51" pos:end="79:53"><expr pos:start="79:51" pos:end="79:53"><operator pos:start="79:51" pos:end="79:51">&amp;</operator><name pos:start="79:52" pos:end="79:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="85:22"><if pos:start="83:9" pos:end="85:22">if <condition pos:start="83:12" pos:end="83:37">(<expr pos:start="83:13" pos:end="83:36"><call pos:start="83:13" pos:end="83:36"><name pos:start="83:13" pos:end="83:28">parse_config_ALS</name><argument_list pos:start="83:29" pos:end="83:36">(<argument pos:start="83:30" pos:end="83:32"><expr pos:start="83:30" pos:end="83:32"><operator pos:start="83:30" pos:end="83:30">&amp;</operator><name pos:start="83:31" pos:end="83:32">gb</name></expr></argument>, <argument pos:start="83:35" pos:end="83:35"><expr pos:start="83:35" pos:end="83:35"><name pos:start="83:35" pos:end="83:35">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:22"><block_content pos:start="85:13" pos:end="85:22">

            <return pos:start="85:13" pos:end="85:22">return <expr pos:start="85:20" pos:end="85:21"><operator pos:start="85:20" pos:end="85:20">-</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="123:5"><if pos:start="91:5" pos:end="123:5">if <condition pos:start="91:8" pos:end="91:56">(<expr pos:start="91:9" pos:end="91:55"><name pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:9">c</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:26">ext_object_type</name></name> <operator pos:start="91:28" pos:end="91:29">!=</operator> <name pos:start="91:31" pos:end="91:37">AOT_SBR</name> <operator pos:start="91:39" pos:end="91:40">&amp;&amp;</operator> <name pos:start="91:42" pos:end="91:55">sync_extension</name></expr>)</condition> <block pos:start="91:58" pos:end="123:5">{<block_content pos:start="93:9" pos:end="121:9">

        <while pos:start="93:9" pos:end="121:9">while <condition pos:start="93:15" pos:end="93:39">(<expr pos:start="93:16" pos:end="93:38"><call pos:start="93:16" pos:end="93:33"><name pos:start="93:16" pos:end="93:28">get_bits_left</name><argument_list pos:start="93:29" pos:end="93:33">(<argument pos:start="93:30" pos:end="93:32"><expr pos:start="93:30" pos:end="93:32"><operator pos:start="93:30" pos:end="93:30">&amp;</operator><name pos:start="93:31" pos:end="93:32">gb</name></expr></argument>)</argument_list></call> <operator pos:start="93:35" pos:end="93:35">&gt;</operator> <literal type="number" pos:start="93:37" pos:end="93:38">15</literal></expr>)</condition> <block pos:start="93:41" pos:end="121:9">{<block_content pos:start="95:13" pos:end="119:31">

            <if_stmt pos:start="95:13" pos:end="119:31"><if pos:start="95:13" pos:end="117:13">if <condition pos:start="95:16" pos:end="95:44">(<expr pos:start="95:17" pos:end="95:43"><call pos:start="95:17" pos:end="95:34"><name pos:start="95:17" pos:end="95:25">show_bits</name><argument_list pos:start="95:26" pos:end="95:34">(<argument pos:start="95:27" pos:end="95:29"><expr pos:start="95:27" pos:end="95:29"><operator pos:start="95:27" pos:end="95:27">&amp;</operator><name pos:start="95:28" pos:end="95:29">gb</name></expr></argument>, <argument pos:start="95:32" pos:end="95:33"><expr pos:start="95:32" pos:end="95:33"><literal type="number" pos:start="95:32" pos:end="95:33">11</literal></expr></argument>)</argument_list></call> <operator pos:start="95:36" pos:end="95:37">==</operator> <literal type="number" pos:start="95:39" pos:end="95:43">0x2b7</literal></expr>)</condition> <block pos:start="95:46" pos:end="117:13">{<block_content pos:start="97:17" pos:end="115:22"> <comment type="line" pos:start="95:48" pos:end="95:64">// sync extension</comment>

                <expr_stmt pos:start="97:17" pos:end="97:34"><expr pos:start="97:17" pos:end="97:33"><call pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:24">get_bits</name><argument_list pos:start="97:25" pos:end="97:33">(<argument pos:start="97:26" pos:end="97:28"><expr pos:start="97:26" pos:end="97:28"><operator pos:start="97:26" pos:end="97:26">&amp;</operator><name pos:start="97:27" pos:end="97:28">gb</name></expr></argument>, <argument pos:start="97:31" pos:end="97:32"><expr pos:start="97:31" pos:end="97:32"><literal type="number" pos:start="97:31" pos:end="97:32">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:58"><expr pos:start="99:17" pos:end="99:57"><name pos:start="99:17" pos:end="99:34"><name pos:start="99:17" pos:end="99:17">c</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:34">ext_object_type</name></name> <operator pos:start="99:36" pos:end="99:36">=</operator> <call pos:start="99:38" pos:end="99:57"><name pos:start="99:38" pos:end="99:52">get_object_type</name><argument_list pos:start="99:53" pos:end="99:57">(<argument pos:start="99:54" pos:end="99:56"><expr pos:start="99:54" pos:end="99:56"><operator pos:start="99:54" pos:end="99:54">&amp;</operator><name pos:start="99:55" pos:end="99:56">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="101:17" pos:end="109:17"><if pos:start="101:17" pos:end="109:17">if <condition pos:start="101:20" pos:end="101:84">(<expr pos:start="101:21" pos:end="101:83"><name pos:start="101:21" pos:end="101:38"><name pos:start="101:21" pos:end="101:21">c</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:38">ext_object_type</name></name> <operator pos:start="101:40" pos:end="101:41">==</operator> <name pos:start="101:43" pos:end="101:49">AOT_SBR</name> <operator pos:start="101:51" pos:end="101:52">&amp;&amp;</operator> <operator pos:start="101:54" pos:end="101:54">(</operator><name pos:start="101:55" pos:end="101:60"><name pos:start="101:55" pos:end="101:55">c</name><operator pos:start="101:56" pos:end="101:57">-&gt;</operator><name pos:start="101:58" pos:end="101:60">sbr</name></name> <operator pos:start="101:62" pos:end="101:62">=</operator> <call pos:start="101:64" pos:end="101:77"><name pos:start="101:64" pos:end="101:72">get_bits1</name><argument_list pos:start="101:73" pos:end="101:77">(<argument pos:start="101:74" pos:end="101:76"><expr pos:start="101:74" pos:end="101:76"><operator pos:start="101:74" pos:end="101:74">&amp;</operator><name pos:start="101:75" pos:end="101:76">gb</name></expr></argument>)</argument_list></call><operator pos:start="101:78" pos:end="101:78">)</operator> <operator pos:start="101:80" pos:end="101:81">==</operator> <literal type="number" pos:start="101:83" pos:end="101:83">1</literal></expr>)</condition> <block pos:start="101:86" pos:end="109:17">{<block_content pos:start="103:21" pos:end="107:36">

                    <expr_stmt pos:start="103:21" pos:end="103:86"><expr pos:start="103:21" pos:end="103:85"><name pos:start="103:21" pos:end="103:38"><name pos:start="103:21" pos:end="103:21">c</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:38">ext_sample_rate</name></name> <operator pos:start="103:40" pos:end="103:40">=</operator> <call pos:start="103:42" pos:end="103:85"><name pos:start="103:42" pos:end="103:56">get_sample_rate</name><argument_list pos:start="103:57" pos:end="103:85">(<argument pos:start="103:58" pos:end="103:60"><expr pos:start="103:58" pos:end="103:60"><operator pos:start="103:58" pos:end="103:58">&amp;</operator><name pos:start="103:59" pos:end="103:60">gb</name></expr></argument>, <argument pos:start="103:63" pos:end="103:84"><expr pos:start="103:63" pos:end="103:84"><operator pos:start="103:63" pos:end="103:63">&amp;</operator><name pos:start="103:64" pos:end="103:84"><name pos:start="103:64" pos:end="103:64">c</name><operator pos:start="103:65" pos:end="103:66">-&gt;</operator><name pos:start="103:67" pos:end="103:84">ext_sampling_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="105:21" pos:end="107:36"><if pos:start="105:21" pos:end="107:36">if <condition pos:start="105:24" pos:end="105:61">(<expr pos:start="105:25" pos:end="105:60"><name pos:start="105:25" pos:end="105:42"><name pos:start="105:25" pos:end="105:25">c</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:42">ext_sample_rate</name></name> <operator pos:start="105:44" pos:end="105:45">==</operator> <name pos:start="105:47" pos:end="105:60"><name pos:start="105:47" pos:end="105:47">c</name><operator pos:start="105:48" pos:end="105:49">-&gt;</operator><name pos:start="105:50" pos:end="105:60">sample_rate</name></name></expr>)</condition><block type="pseudo" pos:start="107:25" pos:end="107:36"><block_content pos:start="107:25" pos:end="107:36">

                        <expr_stmt pos:start="107:25" pos:end="107:36"><expr pos:start="107:25" pos:end="107:35"><name pos:start="107:25" pos:end="107:30"><name pos:start="107:25" pos:end="107:25">c</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:30">sbr</name></name> <operator pos:start="107:32" pos:end="107:32">=</operator> <operator pos:start="107:34" pos:end="107:34">-</operator><literal type="number" pos:start="107:35" pos:end="107:35">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="111:17" pos:end="113:43"><if pos:start="111:17" pos:end="113:43">if <condition pos:start="111:20" pos:end="111:74">(<expr pos:start="111:21" pos:end="111:73"><call pos:start="111:21" pos:end="111:38"><name pos:start="111:21" pos:end="111:33">get_bits_left</name><argument_list pos:start="111:34" pos:end="111:38">(<argument pos:start="111:35" pos:end="111:37"><expr pos:start="111:35" pos:end="111:37"><operator pos:start="111:35" pos:end="111:35">&amp;</operator><name pos:start="111:36" pos:end="111:37">gb</name></expr></argument>)</argument_list></call> <operator pos:start="111:40" pos:end="111:40">&gt;</operator> <literal type="number" pos:start="111:42" pos:end="111:43">11</literal> <operator pos:start="111:45" pos:end="111:46">&amp;&amp;</operator> <call pos:start="111:48" pos:end="111:64"><name pos:start="111:48" pos:end="111:55">get_bits</name><argument_list pos:start="111:56" pos:end="111:64">(<argument pos:start="111:57" pos:end="111:59"><expr pos:start="111:57" pos:end="111:59"><operator pos:start="111:57" pos:end="111:57">&amp;</operator><name pos:start="111:58" pos:end="111:59">gb</name></expr></argument>, <argument pos:start="111:62" pos:end="111:63"><expr pos:start="111:62" pos:end="111:63"><literal type="number" pos:start="111:62" pos:end="111:63">11</literal></expr></argument>)</argument_list></call> <operator pos:start="111:66" pos:end="111:67">==</operator> <literal type="number" pos:start="111:69" pos:end="111:73">0x548</literal></expr>)</condition><block type="pseudo" pos:start="113:21" pos:end="113:43"><block_content pos:start="113:21" pos:end="113:43">

                    <expr_stmt pos:start="113:21" pos:end="113:43"><expr pos:start="113:21" pos:end="113:42"><name pos:start="113:21" pos:end="113:25"><name pos:start="113:21" pos:end="113:21">c</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:25">ps</name></name> <operator pos:start="113:27" pos:end="113:27">=</operator> <call pos:start="113:29" pos:end="113:42"><name pos:start="113:29" pos:end="113:37">get_bits1</name><argument_list pos:start="113:38" pos:end="113:42">(<argument pos:start="113:39" pos:end="113:41"><expr pos:start="113:39" pos:end="113:41"><operator pos:start="113:39" pos:end="113:39">&amp;</operator><name pos:start="113:40" pos:end="113:41">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="115:17" pos:end="115:22">break;</break>

            </block_content>}</block></if> <else pos:start="117:15" pos:end="119:31">else<block type="pseudo" pos:start="119:17" pos:end="119:31"><block_content pos:start="119:17" pos:end="119:31">

                <expr_stmt pos:start="119:17" pos:end="119:31"><expr pos:start="119:17" pos:end="119:30"><call pos:start="119:17" pos:end="119:30"><name pos:start="119:17" pos:end="119:25">get_bits1</name><argument_list pos:start="119:26" pos:end="119:30">(<argument pos:start="119:27" pos:end="119:29"><expr pos:start="119:27" pos:end="119:29"><operator pos:start="119:27" pos:end="119:27">&amp;</operator><name pos:start="119:28" pos:end="119:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="119:33" pos:end="119:45">// skip 1 bit</comment>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="127:5" pos:end="127:21">//PS requires SBR</comment>

    <if_stmt pos:start="129:5" pos:end="131:18"><if pos:start="129:5" pos:end="131:18">if <condition pos:start="129:8" pos:end="129:16">(<expr pos:start="129:9" pos:end="129:15"><operator pos:start="129:9" pos:end="129:9">!</operator><name pos:start="129:10" pos:end="129:15"><name pos:start="129:10" pos:end="129:10">c</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:15">sbr</name></name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:18"><block_content pos:start="131:9" pos:end="131:18">

        <expr_stmt pos:start="131:9" pos:end="131:18"><expr pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:13"><name pos:start="131:9" pos:end="131:9">c</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:13">ps</name></name> <operator pos:start="131:15" pos:end="131:15">=</operator> <literal type="number" pos:start="131:17" pos:end="131:17">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="line" pos:start="133:5" pos:end="133:47">//Limit implicit PS to the HE-AACv2 Profile</comment>

    <if_stmt pos:start="135:5" pos:end="137:18"><if pos:start="135:5" pos:end="137:18">if <condition pos:start="135:8" pos:end="135:77">(<expr pos:start="135:9" pos:end="135:76"><operator pos:start="135:9" pos:end="135:9">(</operator><name pos:start="135:10" pos:end="135:14"><name pos:start="135:10" pos:end="135:10">c</name><operator pos:start="135:11" pos:end="135:12">-&gt;</operator><name pos:start="135:13" pos:end="135:14">ps</name></name> <operator pos:start="135:16" pos:end="135:17">==</operator> <operator pos:start="135:19" pos:end="135:19">-</operator><literal type="number" pos:start="135:20" pos:end="135:20">1</literal> <operator pos:start="135:22" pos:end="135:23">&amp;&amp;</operator> <name pos:start="135:25" pos:end="135:38"><name pos:start="135:25" pos:end="135:25">c</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:38">object_type</name></name> <operator pos:start="135:40" pos:end="135:41">!=</operator> <name pos:start="135:43" pos:end="135:52">AOT_AAC_LC</name><operator pos:start="135:53" pos:end="135:53">)</operator> <operator pos:start="135:55" pos:end="135:56">||</operator> <name pos:start="135:58" pos:end="135:68"><name pos:start="135:58" pos:end="135:58">c</name><operator pos:start="135:59" pos:end="135:60">-&gt;</operator><name pos:start="135:61" pos:end="135:68">channels</name></name> <operator pos:start="135:70" pos:end="135:70">&amp;</operator> <operator pos:start="135:72" pos:end="135:72">~</operator><literal type="number" pos:start="135:73" pos:end="135:76">0x01</literal></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="137:18"><block_content pos:start="137:9" pos:end="137:18">

        <expr_stmt pos:start="137:9" pos:end="137:18"><expr pos:start="137:9" pos:end="137:17"><name pos:start="137:9" pos:end="137:13"><name pos:start="137:9" pos:end="137:9">c</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:13">ps</name></name> <operator pos:start="137:15" pos:end="137:15">=</operator> <literal type="number" pos:start="137:17" pos:end="137:17">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="141:5" pos:end="141:36">return <expr pos:start="141:12" pos:end="141:35"><name pos:start="141:12" pos:end="141:35">specific_config_bitindex</name></expr>;</return>

</block_content>}</block></function>
</unit>
