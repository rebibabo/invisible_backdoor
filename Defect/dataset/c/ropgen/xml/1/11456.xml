<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11456.c" pos:tabs="8"><function pos:start="1:1" pos:end="253:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">vhost_virtqueue_start</name><parameter_list pos:start="1:33" pos:end="7:45">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:49">vhost_dev</name></name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">dev</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:57"><decl pos:start="3:33" pos:end="3:57"><type pos:start="3:33" pos:end="3:57"><name pos:start="3:33" pos:end="3:51"><name pos:start="3:33" pos:end="3:38">struct</name> <name pos:start="3:40" pos:end="3:51">VirtIODevice</name></name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:57">vdev</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:58"><decl pos:start="5:33" pos:end="5:58"><type pos:start="5:33" pos:end="5:58"><name pos:start="5:33" pos:end="5:54"><name pos:start="5:33" pos:end="5:38">struct</name> <name pos:start="5:40" pos:end="5:54">vhost_virtqueue</name></name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:58">vq</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:44"><decl pos:start="7:33" pos:end="7:44"><type pos:start="7:33" pos:end="7:44"><name pos:start="7:33" pos:end="7:40">unsigned</name></type> <name pos:start="7:42" pos:end="7:44">idx</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="253:1">{<block_content pos:start="11:5" pos:end="251:13">

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:59"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">BusState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">qbus</name> <init pos:start="11:20" pos:end="11:59">= <expr pos:start="11:22" pos:end="11:59"><call pos:start="11:22" pos:end="11:59"><name pos:start="11:22" pos:end="11:24">BUS</name><argument_list pos:start="11:25" pos:end="11:59">(<argument pos:start="11:26" pos:end="11:58"><expr pos:start="11:26" pos:end="11:58"><call pos:start="11:26" pos:end="11:58"><name pos:start="11:26" pos:end="11:44">qdev_get_parent_bus</name><argument_list pos:start="11:45" pos:end="11:58">(<argument pos:start="11:46" pos:end="11:57"><expr pos:start="11:46" pos:end="11:57"><call pos:start="11:46" pos:end="11:57"><name pos:start="11:46" pos:end="11:51">DEVICE</name><argument_list pos:start="11:52" pos:end="11:57">(<argument pos:start="11:53" pos:end="11:56"><expr pos:start="11:53" pos:end="11:56"><name pos:start="11:53" pos:end="11:56">vdev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">VirtioBusState</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:24">vbus</name> <init pos:start="13:26" pos:end="13:43">= <expr pos:start="13:28" pos:end="13:43"><call pos:start="13:28" pos:end="13:43"><name pos:start="13:28" pos:end="13:37">VIRTIO_BUS</name><argument_list pos:start="13:38" pos:end="13:43">(<argument pos:start="13:39" pos:end="13:42"><expr pos:start="13:39" pos:end="13:42"><name pos:start="13:39" pos:end="13:42">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">VirtioBusClass</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:21">k</name> <init pos:start="15:23" pos:end="15:50">= <expr pos:start="15:25" pos:end="15:50"><call pos:start="15:25" pos:end="15:50"><name pos:start="15:25" pos:end="15:44">VIRTIO_BUS_GET_CLASS</name><argument_list pos:start="15:45" pos:end="15:50">(<argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">vbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">hwaddr</name></type> <name pos:start="17:12" pos:end="17:12">s</name></decl>, <decl pos:start="17:15" pos:end="17:15"><type ref="prev" pos:start="17:5" pos:end="17:10"/><name pos:start="17:15" pos:end="17:15">l</name></decl>, <decl pos:start="17:18" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:10"/><name pos:start="17:18" pos:end="17:18">a</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:70"><decl pos:start="21:5" pos:end="21:69"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:22">vhost_vq_index</name> <init pos:start="21:24" pos:end="21:69">= <expr pos:start="21:26" pos:end="21:69"><call pos:start="21:26" pos:end="21:69"><name pos:start="21:26" pos:end="21:59"><name pos:start="21:26" pos:end="21:28">dev</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:39">vhost_ops</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:59">vhost_get_vq_index</name></name><argument_list pos:start="21:60" pos:end="21:69">(<argument pos:start="21:61" pos:end="21:63"><expr pos:start="21:61" pos:end="21:63"><name pos:start="21:61" pos:end="21:63">dev</name></expr></argument>, <argument pos:start="21:66" pos:end="21:68"><expr pos:start="21:66" pos:end="21:68"><name pos:start="21:66" pos:end="21:68">idx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="27:6"><decl pos:start="23:5" pos:end="27:5"><type pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:10">struct</name> <name pos:start="23:12" pos:end="23:27">vhost_vring_file</name></name></type> <name pos:start="23:29" pos:end="23:32">file</name> <init pos:start="23:34" pos:end="27:5">= <expr pos:start="23:36" pos:end="27:5"><block pos:start="23:36" pos:end="27:5">{

        <expr pos:start="25:9" pos:end="25:31"><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:14">index</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:31">vhost_vq_index</name></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="33:6"><decl pos:start="29:5" pos:end="33:5"><type pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:10">struct</name> <name pos:start="29:12" pos:end="29:28">vhost_vring_state</name></name></type> <name pos:start="29:30" pos:end="29:34">state</name> <init pos:start="29:36" pos:end="33:5">= <expr pos:start="29:38" pos:end="33:5"><block pos:start="29:38" pos:end="33:5">{

        <expr pos:start="31:9" pos:end="31:31"><operator pos:start="31:9" pos:end="31:9">.</operator><name pos:start="31:10" pos:end="31:14">index</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:31">vhost_vq_index</name></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:56"><decl pos:start="35:5" pos:end="35:55"><type pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:10">struct</name> <name pos:start="35:12" pos:end="35:20">VirtQueue</name></name> <modifier pos:start="35:22" pos:end="35:22">*</modifier></type><name pos:start="35:23" pos:end="35:25">vvq</name> <init pos:start="35:27" pos:end="35:55">= <expr pos:start="35:29" pos:end="35:55"><call pos:start="35:29" pos:end="35:55"><name pos:start="35:29" pos:end="35:44">virtio_get_queue</name><argument_list pos:start="35:45" pos:end="35:55">(<argument pos:start="35:46" pos:end="35:49"><expr pos:start="35:46" pos:end="35:49"><name pos:start="35:46" pos:end="35:49">vdev</name></expr></argument>, <argument pos:start="35:52" pos:end="35:54"><expr pos:start="35:52" pos:end="35:54"><name pos:start="35:52" pos:end="35:54">idx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>





    <expr_stmt pos:start="41:5" pos:end="41:58"><expr pos:start="41:5" pos:end="41:57"><name pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:6">vq</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:11">num</name></name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:23"><name pos:start="41:15" pos:end="41:19">state</name><operator pos:start="41:20" pos:end="41:20">.</operator><name pos:start="41:21" pos:end="41:23">num</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <call pos:start="41:27" pos:end="41:57"><name pos:start="41:27" pos:end="41:46">virtio_queue_get_num</name><argument_list pos:start="41:47" pos:end="41:57">(<argument pos:start="41:48" pos:end="41:51"><expr pos:start="41:48" pos:end="41:51"><name pos:start="41:48" pos:end="41:51">vdev</name></expr></argument>, <argument pos:start="41:54" pos:end="41:56"><expr pos:start="41:54" pos:end="41:56"><name pos:start="41:54" pos:end="41:56">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:5">r</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <call pos:start="43:9" pos:end="43:56"><name pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:11">dev</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:22">vhost_ops</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:43">vhost_set_vring_num</name></name><argument_list pos:start="43:44" pos:end="43:56">(<argument pos:start="43:45" pos:end="43:47"><expr pos:start="43:45" pos:end="43:47"><name pos:start="43:45" pos:end="43:47">dev</name></expr></argument>, <argument pos:start="43:50" pos:end="43:55"><expr pos:start="43:50" pos:end="43:55"><operator pos:start="43:50" pos:end="43:50">&amp;</operator><name pos:start="43:51" pos:end="43:55">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:10">(<expr pos:start="45:9" pos:end="45:9"><name pos:start="45:9" pos:end="45:9">r</name></expr>)</condition> <block pos:start="45:12" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:22">

        <expr_stmt pos:start="47:9" pos:end="47:54"><expr pos:start="47:9" pos:end="47:53"><call pos:start="47:9" pos:end="47:53"><name pos:start="47:9" pos:end="47:23">VHOST_OPS_DEBUG</name><argument_list pos:start="47:24" pos:end="47:53">(<argument pos:start="47:25" pos:end="47:52"><expr pos:start="47:25" pos:end="47:52"><literal type="string" pos:start="47:25" pos:end="47:52">"vhost_set_vring_num failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:22">return <expr pos:start="49:16" pos:end="49:21"><operator pos:start="49:16" pos:end="49:16">-</operator><name pos:start="49:17" pos:end="49:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:59"><expr pos:start="55:5" pos:end="55:58"><name pos:start="55:5" pos:end="55:13"><name pos:start="55:5" pos:end="55:9">state</name><operator pos:start="55:10" pos:end="55:10">.</operator><name pos:start="55:11" pos:end="55:13">num</name></name> <operator pos:start="55:15" pos:end="55:15">=</operator> <call pos:start="55:17" pos:end="55:58"><name pos:start="55:17" pos:end="55:47">virtio_queue_get_last_avail_idx</name><argument_list pos:start="55:48" pos:end="55:58">(<argument pos:start="55:49" pos:end="55:52"><expr pos:start="55:49" pos:end="55:52"><name pos:start="55:49" pos:end="55:52">vdev</name></expr></argument>, <argument pos:start="55:55" pos:end="55:57"><expr pos:start="55:55" pos:end="55:57"><name pos:start="55:55" pos:end="55:57">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:58"><expr pos:start="57:5" pos:end="57:57"><name pos:start="57:5" pos:end="57:5">r</name> <operator pos:start="57:7" pos:end="57:7">=</operator> <call pos:start="57:9" pos:end="57:57"><name pos:start="57:9" pos:end="57:44"><name pos:start="57:9" pos:end="57:11">dev</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:22">vhost_ops</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:44">vhost_set_vring_base</name></name><argument_list pos:start="57:45" pos:end="57:57">(<argument pos:start="57:46" pos:end="57:48"><expr pos:start="57:46" pos:end="57:48"><name pos:start="57:46" pos:end="57:48">dev</name></expr></argument>, <argument pos:start="57:51" pos:end="57:56"><expr pos:start="57:51" pos:end="57:56"><operator pos:start="57:51" pos:end="57:51">&amp;</operator><name pos:start="57:52" pos:end="57:56">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:10">(<expr pos:start="59:9" pos:end="59:9"><name pos:start="59:9" pos:end="59:9">r</name></expr>)</condition> <block pos:start="59:12" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:22">

        <expr_stmt pos:start="61:9" pos:end="61:55"><expr pos:start="61:9" pos:end="61:54"><call pos:start="61:9" pos:end="61:54"><name pos:start="61:9" pos:end="61:23">VHOST_OPS_DEBUG</name><argument_list pos:start="61:24" pos:end="61:54">(<argument pos:start="61:25" pos:end="61:53"><expr pos:start="61:25" pos:end="61:53"><literal type="string" pos:start="61:25" pos:end="61:53">"vhost_set_vring_base failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:22">return <expr pos:start="63:16" pos:end="63:21"><operator pos:start="63:16" pos:end="63:16">-</operator><name pos:start="63:17" pos:end="63:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="83:5"><if pos:start="69:5" pos:end="83:5">if <condition pos:start="69:8" pos:end="69:39">(<expr pos:start="69:9" pos:end="69:38"><call pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:32">vhost_needs_vring_endian</name><argument_list pos:start="69:33" pos:end="69:38">(<argument pos:start="69:34" pos:end="69:37"><expr pos:start="69:34" pos:end="69:37"><name pos:start="69:34" pos:end="69:37">vdev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:41" pos:end="83:5">{<block_content pos:start="71:9" pos:end="81:9">

        <expr_stmt pos:start="71:9" pos:end="75:68"><expr pos:start="71:9" pos:end="75:67"><name pos:start="71:9" pos:end="71:9">r</name> <operator pos:start="71:11" pos:end="71:11">=</operator> <call pos:start="71:13" pos:end="75:67"><name pos:start="71:13" pos:end="71:51">vhost_virtqueue_set_vring_endian_legacy</name><argument_list pos:start="71:52" pos:end="75:67">(<argument pos:start="71:53" pos:end="71:55"><expr pos:start="71:53" pos:end="71:55"><name pos:start="71:53" pos:end="71:55">dev</name></expr></argument>,

                                                    <argument pos:start="73:53" pos:end="73:78"><expr pos:start="73:53" pos:end="73:78"><call pos:start="73:53" pos:end="73:78"><name pos:start="73:53" pos:end="73:72">virtio_is_big_endian</name><argument_list pos:start="73:73" pos:end="73:78">(<argument pos:start="73:74" pos:end="73:77"><expr pos:start="73:74" pos:end="73:77"><name pos:start="73:74" pos:end="73:77">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                                                    <argument pos:start="75:53" pos:end="75:66"><expr pos:start="75:53" pos:end="75:66"><name pos:start="75:53" pos:end="75:66">vhost_vq_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:14">(<expr pos:start="77:13" pos:end="77:13"><name pos:start="77:13" pos:end="77:13">r</name></expr>)</condition> <block pos:start="77:16" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:26">

            <return pos:start="79:13" pos:end="79:26">return <expr pos:start="79:20" pos:end="79:25"><operator pos:start="79:20" pos:end="79:20">-</operator><name pos:start="79:21" pos:end="79:25">errno</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:50"><expr pos:start="87:5" pos:end="87:49"><name pos:start="87:5" pos:end="87:5">s</name> <operator pos:start="87:7" pos:end="87:7">=</operator> <name pos:start="87:9" pos:end="87:9">l</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <call pos:start="87:13" pos:end="87:49"><name pos:start="87:13" pos:end="87:38">virtio_queue_get_desc_size</name><argument_list pos:start="87:39" pos:end="87:49">(<argument pos:start="87:40" pos:end="87:43"><expr pos:start="87:40" pos:end="87:43"><name pos:start="87:40" pos:end="87:43">vdev</name></expr></argument>, <argument pos:start="87:46" pos:end="87:48"><expr pos:start="87:46" pos:end="87:48"><name pos:start="87:46" pos:end="87:48">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:46"><expr pos:start="89:5" pos:end="89:45"><name pos:start="89:5" pos:end="89:5">a</name> <operator pos:start="89:7" pos:end="89:7">=</operator> <call pos:start="89:9" pos:end="89:45"><name pos:start="89:9" pos:end="89:34">virtio_queue_get_desc_addr</name><argument_list pos:start="89:35" pos:end="89:45">(<argument pos:start="89:36" pos:end="89:39"><expr pos:start="89:36" pos:end="89:39"><name pos:start="89:36" pos:end="89:39">vdev</name></expr></argument>, <argument pos:start="89:42" pos:end="89:44"><expr pos:start="89:42" pos:end="89:44"><name pos:start="89:42" pos:end="89:44">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:49"><expr pos:start="91:5" pos:end="91:48"><name pos:start="91:5" pos:end="91:12"><name pos:start="91:5" pos:end="91:6">vq</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:12">desc</name></name> <operator pos:start="91:14" pos:end="91:14">=</operator> <call pos:start="91:16" pos:end="91:48"><name pos:start="91:16" pos:end="91:38">cpu_physical_memory_map</name><argument_list pos:start="91:39" pos:end="91:48">(<argument pos:start="91:40" pos:end="91:40"><expr pos:start="91:40" pos:end="91:40"><name pos:start="91:40" pos:end="91:40">a</name></expr></argument>, <argument pos:start="91:43" pos:end="91:44"><expr pos:start="91:43" pos:end="91:44"><operator pos:start="91:43" pos:end="91:43">&amp;</operator><name pos:start="91:44" pos:end="91:44">l</name></expr></argument>, <argument pos:start="91:47" pos:end="91:47"><expr pos:start="91:47" pos:end="91:47"><literal type="number" pos:start="91:47" pos:end="91:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:28">(<expr pos:start="93:9" pos:end="93:27"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:17"><name pos:start="93:10" pos:end="93:11">vq</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:17">desc</name></name> <operator pos:start="93:19" pos:end="93:20">||</operator> <name pos:start="93:22" pos:end="93:22">l</name> <operator pos:start="93:24" pos:end="93:25">!=</operator> <name pos:start="93:27" pos:end="93:27">s</name></expr>)</condition> <block pos:start="93:30" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:29">

        <expr_stmt pos:start="95:9" pos:end="95:20"><expr pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:9">r</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <operator pos:start="95:13" pos:end="95:13">-</operator><name pos:start="95:14" pos:end="95:19">ENOMEM</name></expr>;</expr_stmt>

        <goto pos:start="97:9" pos:end="97:29">goto <name pos:start="97:14" pos:end="97:28">fail_alloc_desc</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:51"><expr pos:start="101:5" pos:end="101:50"><name pos:start="101:5" pos:end="101:5">s</name> <operator pos:start="101:7" pos:end="101:7">=</operator> <name pos:start="101:9" pos:end="101:9">l</name> <operator pos:start="101:11" pos:end="101:11">=</operator> <call pos:start="101:13" pos:end="101:50"><name pos:start="101:13" pos:end="101:39">virtio_queue_get_avail_size</name><argument_list pos:start="101:40" pos:end="101:50">(<argument pos:start="101:41" pos:end="101:44"><expr pos:start="101:41" pos:end="101:44"><name pos:start="101:41" pos:end="101:44">vdev</name></expr></argument>, <argument pos:start="101:47" pos:end="101:49"><expr pos:start="101:47" pos:end="101:49"><name pos:start="101:47" pos:end="101:49">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:47"><expr pos:start="103:5" pos:end="103:46"><name pos:start="103:5" pos:end="103:5">a</name> <operator pos:start="103:7" pos:end="103:7">=</operator> <call pos:start="103:9" pos:end="103:46"><name pos:start="103:9" pos:end="103:35">virtio_queue_get_avail_addr</name><argument_list pos:start="103:36" pos:end="103:46">(<argument pos:start="103:37" pos:end="103:40"><expr pos:start="103:37" pos:end="103:40"><name pos:start="103:37" pos:end="103:40">vdev</name></expr></argument>, <argument pos:start="103:43" pos:end="103:45"><expr pos:start="103:43" pos:end="103:45"><name pos:start="103:43" pos:end="103:45">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:50"><expr pos:start="105:5" pos:end="105:49"><name pos:start="105:5" pos:end="105:13"><name pos:start="105:5" pos:end="105:6">vq</name><operator pos:start="105:7" pos:end="105:8">-&gt;</operator><name pos:start="105:9" pos:end="105:13">avail</name></name> <operator pos:start="105:15" pos:end="105:15">=</operator> <call pos:start="105:17" pos:end="105:49"><name pos:start="105:17" pos:end="105:39">cpu_physical_memory_map</name><argument_list pos:start="105:40" pos:end="105:49">(<argument pos:start="105:41" pos:end="105:41"><expr pos:start="105:41" pos:end="105:41"><name pos:start="105:41" pos:end="105:41">a</name></expr></argument>, <argument pos:start="105:44" pos:end="105:45"><expr pos:start="105:44" pos:end="105:45"><operator pos:start="105:44" pos:end="105:44">&amp;</operator><name pos:start="105:45" pos:end="105:45">l</name></expr></argument>, <argument pos:start="105:48" pos:end="105:48"><expr pos:start="105:48" pos:end="105:48"><literal type="number" pos:start="105:48" pos:end="105:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="113:5"><if pos:start="107:5" pos:end="113:5">if <condition pos:start="107:8" pos:end="107:29">(<expr pos:start="107:9" pos:end="107:28"><operator pos:start="107:9" pos:end="107:9">!</operator><name pos:start="107:10" pos:end="107:18"><name pos:start="107:10" pos:end="107:11">vq</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:18">avail</name></name> <operator pos:start="107:20" pos:end="107:21">||</operator> <name pos:start="107:23" pos:end="107:23">l</name> <operator pos:start="107:25" pos:end="107:26">!=</operator> <name pos:start="107:28" pos:end="107:28">s</name></expr>)</condition> <block pos:start="107:31" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:30">

        <expr_stmt pos:start="109:9" pos:end="109:20"><expr pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:9">r</name> <operator pos:start="109:11" pos:end="109:11">=</operator> <operator pos:start="109:13" pos:end="109:13">-</operator><name pos:start="109:14" pos:end="109:19">ENOMEM</name></expr>;</expr_stmt>

        <goto pos:start="111:9" pos:end="111:30">goto <name pos:start="111:14" pos:end="111:29">fail_alloc_avail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:66"><expr pos:start="115:5" pos:end="115:65"><name pos:start="115:5" pos:end="115:17"><name pos:start="115:5" pos:end="115:6">vq</name><operator pos:start="115:7" pos:end="115:8">-&gt;</operator><name pos:start="115:9" pos:end="115:17">used_size</name></name> <operator pos:start="115:19" pos:end="115:19">=</operator> <name pos:start="115:21" pos:end="115:21">s</name> <operator pos:start="115:23" pos:end="115:23">=</operator> <name pos:start="115:25" pos:end="115:25">l</name> <operator pos:start="115:27" pos:end="115:27">=</operator> <call pos:start="115:29" pos:end="115:65"><name pos:start="115:29" pos:end="115:54">virtio_queue_get_used_size</name><argument_list pos:start="115:55" pos:end="115:65">(<argument pos:start="115:56" pos:end="115:59"><expr pos:start="115:56" pos:end="115:59"><name pos:start="115:56" pos:end="115:59">vdev</name></expr></argument>, <argument pos:start="115:62" pos:end="115:64"><expr pos:start="115:62" pos:end="115:64"><name pos:start="115:62" pos:end="115:64">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:62"><expr pos:start="117:5" pos:end="117:61"><name pos:start="117:5" pos:end="117:17"><name pos:start="117:5" pos:end="117:6">vq</name><operator pos:start="117:7" pos:end="117:8">-&gt;</operator><name pos:start="117:9" pos:end="117:17">used_phys</name></name> <operator pos:start="117:19" pos:end="117:19">=</operator> <name pos:start="117:21" pos:end="117:21">a</name> <operator pos:start="117:23" pos:end="117:23">=</operator> <call pos:start="117:25" pos:end="117:61"><name pos:start="117:25" pos:end="117:50">virtio_queue_get_used_addr</name><argument_list pos:start="117:51" pos:end="117:61">(<argument pos:start="117:52" pos:end="117:55"><expr pos:start="117:52" pos:end="117:55"><name pos:start="117:52" pos:end="117:55">vdev</name></expr></argument>, <argument pos:start="117:58" pos:end="117:60"><expr pos:start="117:58" pos:end="117:60"><name pos:start="117:58" pos:end="117:60">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:49"><expr pos:start="119:5" pos:end="119:48"><name pos:start="119:5" pos:end="119:12"><name pos:start="119:5" pos:end="119:6">vq</name><operator pos:start="119:7" pos:end="119:8">-&gt;</operator><name pos:start="119:9" pos:end="119:12">used</name></name> <operator pos:start="119:14" pos:end="119:14">=</operator> <call pos:start="119:16" pos:end="119:48"><name pos:start="119:16" pos:end="119:38">cpu_physical_memory_map</name><argument_list pos:start="119:39" pos:end="119:48">(<argument pos:start="119:40" pos:end="119:40"><expr pos:start="119:40" pos:end="119:40"><name pos:start="119:40" pos:end="119:40">a</name></expr></argument>, <argument pos:start="119:43" pos:end="119:44"><expr pos:start="119:43" pos:end="119:44"><operator pos:start="119:43" pos:end="119:43">&amp;</operator><name pos:start="119:44" pos:end="119:44">l</name></expr></argument>, <argument pos:start="119:47" pos:end="119:47"><expr pos:start="119:47" pos:end="119:47"><literal type="number" pos:start="119:47" pos:end="119:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="127:5"><if pos:start="121:5" pos:end="127:5">if <condition pos:start="121:8" pos:end="121:28">(<expr pos:start="121:9" pos:end="121:27"><operator pos:start="121:9" pos:end="121:9">!</operator><name pos:start="121:10" pos:end="121:17"><name pos:start="121:10" pos:end="121:11">vq</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:17">used</name></name> <operator pos:start="121:19" pos:end="121:20">||</operator> <name pos:start="121:22" pos:end="121:22">l</name> <operator pos:start="121:24" pos:end="121:25">!=</operator> <name pos:start="121:27" pos:end="121:27">s</name></expr>)</condition> <block pos:start="121:30" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:29">

        <expr_stmt pos:start="123:9" pos:end="123:20"><expr pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:9">r</name> <operator pos:start="123:11" pos:end="123:11">=</operator> <operator pos:start="123:13" pos:end="123:13">-</operator><name pos:start="123:14" pos:end="123:19">ENOMEM</name></expr>;</expr_stmt>

        <goto pos:start="125:9" pos:end="125:29">goto <name pos:start="125:14" pos:end="125:28">fail_alloc_used</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:66"><expr pos:start="131:5" pos:end="131:65"><name pos:start="131:5" pos:end="131:17"><name pos:start="131:5" pos:end="131:6">vq</name><operator pos:start="131:7" pos:end="131:8">-&gt;</operator><name pos:start="131:9" pos:end="131:17">ring_size</name></name> <operator pos:start="131:19" pos:end="131:19">=</operator> <name pos:start="131:21" pos:end="131:21">s</name> <operator pos:start="131:23" pos:end="131:23">=</operator> <name pos:start="131:25" pos:end="131:25">l</name> <operator pos:start="131:27" pos:end="131:27">=</operator> <call pos:start="131:29" pos:end="131:65"><name pos:start="131:29" pos:end="131:54">virtio_queue_get_ring_size</name><argument_list pos:start="131:55" pos:end="131:65">(<argument pos:start="131:56" pos:end="131:59"><expr pos:start="131:56" pos:end="131:59"><name pos:start="131:56" pos:end="131:59">vdev</name></expr></argument>, <argument pos:start="131:62" pos:end="131:64"><expr pos:start="131:62" pos:end="131:64"><name pos:start="131:62" pos:end="131:64">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:62"><expr pos:start="133:5" pos:end="133:61"><name pos:start="133:5" pos:end="133:17"><name pos:start="133:5" pos:end="133:6">vq</name><operator pos:start="133:7" pos:end="133:8">-&gt;</operator><name pos:start="133:9" pos:end="133:17">ring_phys</name></name> <operator pos:start="133:19" pos:end="133:19">=</operator> <name pos:start="133:21" pos:end="133:21">a</name> <operator pos:start="133:23" pos:end="133:23">=</operator> <call pos:start="133:25" pos:end="133:61"><name pos:start="133:25" pos:end="133:50">virtio_queue_get_ring_addr</name><argument_list pos:start="133:51" pos:end="133:61">(<argument pos:start="133:52" pos:end="133:55"><expr pos:start="133:52" pos:end="133:55"><name pos:start="133:52" pos:end="133:55">vdev</name></expr></argument>, <argument pos:start="133:58" pos:end="133:60"><expr pos:start="133:58" pos:end="133:60"><name pos:start="133:58" pos:end="133:60">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:49"><expr pos:start="135:5" pos:end="135:48"><name pos:start="135:5" pos:end="135:12"><name pos:start="135:5" pos:end="135:6">vq</name><operator pos:start="135:7" pos:end="135:8">-&gt;</operator><name pos:start="135:9" pos:end="135:12">ring</name></name> <operator pos:start="135:14" pos:end="135:14">=</operator> <call pos:start="135:16" pos:end="135:48"><name pos:start="135:16" pos:end="135:38">cpu_physical_memory_map</name><argument_list pos:start="135:39" pos:end="135:48">(<argument pos:start="135:40" pos:end="135:40"><expr pos:start="135:40" pos:end="135:40"><name pos:start="135:40" pos:end="135:40">a</name></expr></argument>, <argument pos:start="135:43" pos:end="135:44"><expr pos:start="135:43" pos:end="135:44"><operator pos:start="135:43" pos:end="135:43">&amp;</operator><name pos:start="135:44" pos:end="135:44">l</name></expr></argument>, <argument pos:start="135:47" pos:end="135:47"><expr pos:start="135:47" pos:end="135:47"><literal type="number" pos:start="135:47" pos:end="135:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="143:5"><if pos:start="137:5" pos:end="143:5">if <condition pos:start="137:8" pos:end="137:28">(<expr pos:start="137:9" pos:end="137:27"><operator pos:start="137:9" pos:end="137:9">!</operator><name pos:start="137:10" pos:end="137:17"><name pos:start="137:10" pos:end="137:11">vq</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:17">ring</name></name> <operator pos:start="137:19" pos:end="137:20">||</operator> <name pos:start="137:22" pos:end="137:22">l</name> <operator pos:start="137:24" pos:end="137:25">!=</operator> <name pos:start="137:27" pos:end="137:27">s</name></expr>)</condition> <block pos:start="137:30" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:29">

        <expr_stmt pos:start="139:9" pos:end="139:20"><expr pos:start="139:9" pos:end="139:19"><name pos:start="139:9" pos:end="139:9">r</name> <operator pos:start="139:11" pos:end="139:11">=</operator> <operator pos:start="139:13" pos:end="139:13">-</operator><name pos:start="139:14" pos:end="139:19">ENOMEM</name></expr>;</expr_stmt>

        <goto pos:start="141:9" pos:end="141:29">goto <name pos:start="141:14" pos:end="141:28">fail_alloc_ring</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:76"><expr pos:start="147:5" pos:end="147:75"><name pos:start="147:5" pos:end="147:5">r</name> <operator pos:start="147:7" pos:end="147:7">=</operator> <call pos:start="147:9" pos:end="147:75"><name pos:start="147:9" pos:end="147:32">vhost_virtqueue_set_addr</name><argument_list pos:start="147:33" pos:end="147:75">(<argument pos:start="147:34" pos:end="147:36"><expr pos:start="147:34" pos:end="147:36"><name pos:start="147:34" pos:end="147:36">dev</name></expr></argument>, <argument pos:start="147:39" pos:end="147:40"><expr pos:start="147:39" pos:end="147:40"><name pos:start="147:39" pos:end="147:40">vq</name></expr></argument>, <argument pos:start="147:43" pos:end="147:56"><expr pos:start="147:43" pos:end="147:56"><name pos:start="147:43" pos:end="147:56">vhost_vq_index</name></expr></argument>, <argument pos:start="147:59" pos:end="147:74"><expr pos:start="147:59" pos:end="147:74"><name pos:start="147:59" pos:end="147:74"><name pos:start="147:59" pos:end="147:61">dev</name><operator pos:start="147:62" pos:end="147:63">-&gt;</operator><name pos:start="147:64" pos:end="147:74">log_enabled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="149:5" pos:end="155:5"><if pos:start="149:5" pos:end="155:5">if <condition pos:start="149:8" pos:end="149:14">(<expr pos:start="149:9" pos:end="149:13"><name pos:start="149:9" pos:end="149:9">r</name> <operator pos:start="149:11" pos:end="149:11">&lt;</operator> <literal type="number" pos:start="149:13" pos:end="149:13">0</literal></expr>)</condition> <block pos:start="149:16" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:24">

        <expr_stmt pos:start="151:9" pos:end="151:19"><expr pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:9">r</name> <operator pos:start="151:11" pos:end="151:11">=</operator> <operator pos:start="151:13" pos:end="151:13">-</operator><name pos:start="151:14" pos:end="151:18">errno</name></expr>;</expr_stmt>

        <goto pos:start="153:9" pos:end="153:24">goto <name pos:start="153:14" pos:end="153:23">fail_alloc</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:73"><expr pos:start="159:5" pos:end="159:72"><name pos:start="159:5" pos:end="159:11"><name pos:start="159:5" pos:end="159:8">file</name><operator pos:start="159:9" pos:end="159:9">.</operator><name pos:start="159:10" pos:end="159:11">fd</name></name> <operator pos:start="159:13" pos:end="159:13">=</operator> <call pos:start="159:15" pos:end="159:72"><name pos:start="159:15" pos:end="159:35">event_notifier_get_fd</name><argument_list pos:start="159:36" pos:end="159:72">(<argument pos:start="159:37" pos:end="159:71"><expr pos:start="159:37" pos:end="159:71"><call pos:start="159:37" pos:end="159:71"><name pos:start="159:37" pos:end="159:66">virtio_queue_get_host_notifier</name><argument_list pos:start="159:67" pos:end="159:71">(<argument pos:start="159:68" pos:end="159:70"><expr pos:start="159:68" pos:end="159:70"><name pos:start="159:68" pos:end="159:70">vvq</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:57"><expr pos:start="161:5" pos:end="161:56"><name pos:start="161:5" pos:end="161:5">r</name> <operator pos:start="161:7" pos:end="161:7">=</operator> <call pos:start="161:9" pos:end="161:56"><name pos:start="161:9" pos:end="161:44"><name pos:start="161:9" pos:end="161:11">dev</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:22">vhost_ops</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:44">vhost_set_vring_kick</name></name><argument_list pos:start="161:45" pos:end="161:56">(<argument pos:start="161:46" pos:end="161:48"><expr pos:start="161:46" pos:end="161:48"><name pos:start="161:46" pos:end="161:48">dev</name></expr></argument>, <argument pos:start="161:51" pos:end="161:55"><expr pos:start="161:51" pos:end="161:55"><operator pos:start="161:51" pos:end="161:51">&amp;</operator><name pos:start="161:52" pos:end="161:55">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="171:5"><if pos:start="163:5" pos:end="171:5">if <condition pos:start="163:8" pos:end="163:10">(<expr pos:start="163:9" pos:end="163:9"><name pos:start="163:9" pos:end="163:9">r</name></expr>)</condition> <block pos:start="163:12" pos:end="171:5">{<block_content pos:start="165:9" pos:end="169:23">

        <expr_stmt pos:start="165:9" pos:end="165:55"><expr pos:start="165:9" pos:end="165:54"><call pos:start="165:9" pos:end="165:54"><name pos:start="165:9" pos:end="165:23">VHOST_OPS_DEBUG</name><argument_list pos:start="165:24" pos:end="165:54">(<argument pos:start="165:25" pos:end="165:53"><expr pos:start="165:25" pos:end="165:53"><literal type="string" pos:start="165:25" pos:end="165:53">"vhost_set_vring_kick failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:19"><expr pos:start="167:9" pos:end="167:18"><name pos:start="167:9" pos:end="167:9">r</name> <operator pos:start="167:11" pos:end="167:11">=</operator> <operator pos:start="167:13" pos:end="167:13">-</operator><name pos:start="167:14" pos:end="167:18">errno</name></expr>;</expr_stmt>

        <goto pos:start="169:9" pos:end="169:23">goto <name pos:start="169:14" pos:end="169:22">fail_kick</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="175:5" pos:end="175:51">/* Clear and discard previous events if any. */</comment>

    <expr_stmt pos:start="177:5" pos:end="177:56"><expr pos:start="177:5" pos:end="177:55"><call pos:start="177:5" pos:end="177:55"><name pos:start="177:5" pos:end="177:33">event_notifier_test_and_clear</name><argument_list pos:start="177:34" pos:end="177:55">(<argument pos:start="177:35" pos:end="177:54"><expr pos:start="177:35" pos:end="177:54"><operator pos:start="177:35" pos:end="177:35">&amp;</operator><name pos:start="177:36" pos:end="177:54"><name pos:start="177:36" pos:end="177:37">vq</name><operator pos:start="177:38" pos:end="177:39">-&gt;</operator><name pos:start="177:40" pos:end="177:54">masked_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="181:5" pos:end="185:7">/* Init vring in unmasked state, unless guest_notifier_mask

     * will do it later.

     */</comment>

    <if_stmt pos:start="187:5" pos:end="193:5"><if pos:start="187:5" pos:end="193:5">if <condition pos:start="187:8" pos:end="187:39">(<expr pos:start="187:9" pos:end="187:38"><operator pos:start="187:9" pos:end="187:9">!</operator><name pos:start="187:10" pos:end="187:38"><name pos:start="187:10" pos:end="187:13">vdev</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:38">use_guest_notifier_mask</name></name></expr>)</condition> <block pos:start="187:41" pos:end="193:5">{<block_content pos:start="191:9" pos:end="191:52">

        <comment type="block" pos:start="189:9" pos:end="189:44">/* TODO: check and handle errors. */</comment>

        <expr_stmt pos:start="191:9" pos:end="191:52"><expr pos:start="191:9" pos:end="191:51"><call pos:start="191:9" pos:end="191:51"><name pos:start="191:9" pos:end="191:28">vhost_virtqueue_mask</name><argument_list pos:start="191:29" pos:end="191:51">(<argument pos:start="191:30" pos:end="191:32"><expr pos:start="191:30" pos:end="191:32"><name pos:start="191:30" pos:end="191:32">dev</name></expr></argument>, <argument pos:start="191:35" pos:end="191:38"><expr pos:start="191:35" pos:end="191:38"><name pos:start="191:35" pos:end="191:38">vdev</name></expr></argument>, <argument pos:start="191:41" pos:end="191:43"><expr pos:start="191:41" pos:end="191:43"><name pos:start="191:41" pos:end="191:43">idx</name></expr></argument>, <argument pos:start="191:46" pos:end="191:50"><expr pos:start="191:46" pos:end="191:50"><name pos:start="191:46" pos:end="191:50">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="197:5" pos:end="213:5"><if pos:start="197:5" pos:end="213:5">if <condition pos:start="197:8" pos:end="201:59">(<expr pos:start="197:9" pos:end="201:58"><name pos:start="197:9" pos:end="197:32"><name pos:start="197:9" pos:end="197:9">k</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:32">query_guest_notifiers</name></name> <operator pos:start="197:34" pos:end="197:35">&amp;&amp;</operator>

        <call pos:start="199:9" pos:end="199:46"><name pos:start="199:9" pos:end="199:32"><name pos:start="199:9" pos:end="199:9">k</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:32">query_guest_notifiers</name></name><argument_list pos:start="199:33" pos:end="199:46">(<argument pos:start="199:34" pos:end="199:45"><expr pos:start="199:34" pos:end="199:45"><name pos:start="199:34" pos:end="199:45"><name pos:start="199:34" pos:end="199:37">qbus</name><operator pos:start="199:38" pos:end="199:39">-&gt;</operator><name pos:start="199:40" pos:end="199:45">parent</name></name></expr></argument>)</argument_list></call> <operator pos:start="199:48" pos:end="199:49">&amp;&amp;</operator>

        <call pos:start="201:9" pos:end="201:38"><name pos:start="201:9" pos:end="201:27">virtio_queue_vector</name><argument_list pos:start="201:28" pos:end="201:38">(<argument pos:start="201:29" pos:end="201:32"><expr pos:start="201:29" pos:end="201:32"><name pos:start="201:29" pos:end="201:32">vdev</name></expr></argument>, <argument pos:start="201:35" pos:end="201:37"><expr pos:start="201:35" pos:end="201:37"><name pos:start="201:35" pos:end="201:37">idx</name></expr></argument>)</argument_list></call> <operator pos:start="201:40" pos:end="201:41">==</operator> <name pos:start="201:43" pos:end="201:58">VIRTIO_NO_VECTOR</name></expr>)</condition> <block pos:start="201:61" pos:end="213:5">{<block_content pos:start="203:9" pos:end="211:9">

        <expr_stmt pos:start="203:9" pos:end="203:21"><expr pos:start="203:9" pos:end="203:20"><name pos:start="203:9" pos:end="203:15"><name pos:start="203:9" pos:end="203:12">file</name><operator pos:start="203:13" pos:end="203:13">.</operator><name pos:start="203:14" pos:end="203:15">fd</name></name> <operator pos:start="203:17" pos:end="203:17">=</operator> <operator pos:start="203:19" pos:end="203:19">-</operator><literal type="number" pos:start="203:20" pos:end="203:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:61"><expr pos:start="205:9" pos:end="205:60"><name pos:start="205:9" pos:end="205:9">r</name> <operator pos:start="205:11" pos:end="205:11">=</operator> <call pos:start="205:13" pos:end="205:60"><name pos:start="205:13" pos:end="205:48"><name pos:start="205:13" pos:end="205:15">dev</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:26">vhost_ops</name><operator pos:start="205:27" pos:end="205:28">-&gt;</operator><name pos:start="205:29" pos:end="205:48">vhost_set_vring_call</name></name><argument_list pos:start="205:49" pos:end="205:60">(<argument pos:start="205:50" pos:end="205:52"><expr pos:start="205:50" pos:end="205:52"><name pos:start="205:50" pos:end="205:52">dev</name></expr></argument>, <argument pos:start="205:55" pos:end="205:59"><expr pos:start="205:55" pos:end="205:59"><operator pos:start="205:55" pos:end="205:55">&amp;</operator><name pos:start="205:56" pos:end="205:59">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="207:9" pos:end="211:9"><if pos:start="207:9" pos:end="211:9">if <condition pos:start="207:12" pos:end="207:14">(<expr pos:start="207:13" pos:end="207:13"><name pos:start="207:13" pos:end="207:13">r</name></expr>)</condition> <block pos:start="207:16" pos:end="211:9">{<block_content pos:start="209:13" pos:end="209:29">

            <goto pos:start="209:13" pos:end="209:29">goto <name pos:start="209:18" pos:end="209:28">fail_vector</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="217:5" pos:end="217:13">return <expr pos:start="217:12" pos:end="217:12"><literal type="number" pos:start="217:12" pos:end="217:12">0</literal></expr>;</return>



<label pos:start="221:1" pos:end="221:12"><name pos:start="221:1" pos:end="221:11">fail_vector</name>:</label>

<label pos:start="223:1" pos:end="223:10"><name pos:start="223:1" pos:end="223:9">fail_kick</name>:</label>

<label pos:start="225:1" pos:end="225:11"><name pos:start="225:1" pos:end="225:10">fail_alloc</name>:</label>

    <expr_stmt pos:start="227:5" pos:end="229:36"><expr pos:start="227:5" pos:end="229:35"><call pos:start="227:5" pos:end="229:35"><name pos:start="227:5" pos:end="227:29">cpu_physical_memory_unmap</name><argument_list pos:start="227:30" pos:end="229:35">(<argument pos:start="227:31" pos:end="227:38"><expr pos:start="227:31" pos:end="227:38"><name pos:start="227:31" pos:end="227:38"><name pos:start="227:31" pos:end="227:32">vq</name><operator pos:start="227:33" pos:end="227:34">-&gt;</operator><name pos:start="227:35" pos:end="227:38">ring</name></name></expr></argument>, <argument pos:start="227:41" pos:end="227:77"><expr pos:start="227:41" pos:end="227:77"><call pos:start="227:41" pos:end="227:77"><name pos:start="227:41" pos:end="227:66">virtio_queue_get_ring_size</name><argument_list pos:start="227:67" pos:end="227:77">(<argument pos:start="227:68" pos:end="227:71"><expr pos:start="227:68" pos:end="227:71"><name pos:start="227:68" pos:end="227:71">vdev</name></expr></argument>, <argument pos:start="227:74" pos:end="227:76"><expr pos:start="227:74" pos:end="227:76"><name pos:start="227:74" pos:end="227:76">idx</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="229:31" pos:end="229:31"><expr pos:start="229:31" pos:end="229:31"><literal type="number" pos:start="229:31" pos:end="229:31">0</literal></expr></argument>, <argument pos:start="229:34" pos:end="229:34"><expr pos:start="229:34" pos:end="229:34"><literal type="number" pos:start="229:34" pos:end="229:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="231:1" pos:end="231:16"><name pos:start="231:1" pos:end="231:15">fail_alloc_ring</name>:</label>

    <expr_stmt pos:start="233:5" pos:end="235:36"><expr pos:start="233:5" pos:end="235:35"><call pos:start="233:5" pos:end="235:35"><name pos:start="233:5" pos:end="233:29">cpu_physical_memory_unmap</name><argument_list pos:start="233:30" pos:end="235:35">(<argument pos:start="233:31" pos:end="233:38"><expr pos:start="233:31" pos:end="233:38"><name pos:start="233:31" pos:end="233:38"><name pos:start="233:31" pos:end="233:32">vq</name><operator pos:start="233:33" pos:end="233:34">-&gt;</operator><name pos:start="233:35" pos:end="233:38">used</name></name></expr></argument>, <argument pos:start="233:41" pos:end="233:77"><expr pos:start="233:41" pos:end="233:77"><call pos:start="233:41" pos:end="233:77"><name pos:start="233:41" pos:end="233:66">virtio_queue_get_used_size</name><argument_list pos:start="233:67" pos:end="233:77">(<argument pos:start="233:68" pos:end="233:71"><expr pos:start="233:68" pos:end="233:71"><name pos:start="233:68" pos:end="233:71">vdev</name></expr></argument>, <argument pos:start="233:74" pos:end="233:76"><expr pos:start="233:74" pos:end="233:76"><name pos:start="233:74" pos:end="233:76">idx</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="235:31" pos:end="235:31"><expr pos:start="235:31" pos:end="235:31"><literal type="number" pos:start="235:31" pos:end="235:31">0</literal></expr></argument>, <argument pos:start="235:34" pos:end="235:34"><expr pos:start="235:34" pos:end="235:34"><literal type="number" pos:start="235:34" pos:end="235:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="237:1" pos:end="237:16"><name pos:start="237:1" pos:end="237:15">fail_alloc_used</name>:</label>

    <expr_stmt pos:start="239:5" pos:end="241:36"><expr pos:start="239:5" pos:end="241:35"><call pos:start="239:5" pos:end="241:35"><name pos:start="239:5" pos:end="239:29">cpu_physical_memory_unmap</name><argument_list pos:start="239:30" pos:end="241:35">(<argument pos:start="239:31" pos:end="239:39"><expr pos:start="239:31" pos:end="239:39"><name pos:start="239:31" pos:end="239:39"><name pos:start="239:31" pos:end="239:32">vq</name><operator pos:start="239:33" pos:end="239:34">-&gt;</operator><name pos:start="239:35" pos:end="239:39">avail</name></name></expr></argument>, <argument pos:start="239:42" pos:end="239:79"><expr pos:start="239:42" pos:end="239:79"><call pos:start="239:42" pos:end="239:79"><name pos:start="239:42" pos:end="239:68">virtio_queue_get_avail_size</name><argument_list pos:start="239:69" pos:end="239:79">(<argument pos:start="239:70" pos:end="239:73"><expr pos:start="239:70" pos:end="239:73"><name pos:start="239:70" pos:end="239:73">vdev</name></expr></argument>, <argument pos:start="239:76" pos:end="239:78"><expr pos:start="239:76" pos:end="239:78"><name pos:start="239:76" pos:end="239:78">idx</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="241:31" pos:end="241:31"><expr pos:start="241:31" pos:end="241:31"><literal type="number" pos:start="241:31" pos:end="241:31">0</literal></expr></argument>, <argument pos:start="241:34" pos:end="241:34"><expr pos:start="241:34" pos:end="241:34"><literal type="number" pos:start="241:34" pos:end="241:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="243:1" pos:end="243:17"><name pos:start="243:1" pos:end="243:16">fail_alloc_avail</name>:</label>

    <expr_stmt pos:start="245:5" pos:end="247:36"><expr pos:start="245:5" pos:end="247:35"><call pos:start="245:5" pos:end="247:35"><name pos:start="245:5" pos:end="245:29">cpu_physical_memory_unmap</name><argument_list pos:start="245:30" pos:end="247:35">(<argument pos:start="245:31" pos:end="245:38"><expr pos:start="245:31" pos:end="245:38"><name pos:start="245:31" pos:end="245:38"><name pos:start="245:31" pos:end="245:32">vq</name><operator pos:start="245:33" pos:end="245:34">-&gt;</operator><name pos:start="245:35" pos:end="245:38">desc</name></name></expr></argument>, <argument pos:start="245:41" pos:end="245:77"><expr pos:start="245:41" pos:end="245:77"><call pos:start="245:41" pos:end="245:77"><name pos:start="245:41" pos:end="245:66">virtio_queue_get_desc_size</name><argument_list pos:start="245:67" pos:end="245:77">(<argument pos:start="245:68" pos:end="245:71"><expr pos:start="245:68" pos:end="245:71"><name pos:start="245:68" pos:end="245:71">vdev</name></expr></argument>, <argument pos:start="245:74" pos:end="245:76"><expr pos:start="245:74" pos:end="245:76"><name pos:start="245:74" pos:end="245:76">idx</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="247:31" pos:end="247:31"><expr pos:start="247:31" pos:end="247:31"><literal type="number" pos:start="247:31" pos:end="247:31">0</literal></expr></argument>, <argument pos:start="247:34" pos:end="247:34"><expr pos:start="247:34" pos:end="247:34"><literal type="number" pos:start="247:34" pos:end="247:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="249:1" pos:end="249:16"><name pos:start="249:1" pos:end="249:15">fail_alloc_desc</name>:</label>

    <return pos:start="251:5" pos:end="251:13">return <expr pos:start="251:12" pos:end="251:12"><name pos:start="251:12" pos:end="251:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
