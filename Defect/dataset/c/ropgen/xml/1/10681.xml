<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10681.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:77"><name pos:start="1:1" pos:end="1:18">restore_sigcontext</name><argument_list pos:start="1:19" pos:end="1:77">(<argument pos:start="1:20" pos:end="1:35">CPUX86State *env</argument>, <argument pos:start="1:38" pos:end="1:65">struct target_sigcontext *sc</argument>, <argument pos:start="1:68" pos:end="1:76">int *peax</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:9" pos:end="77:17">

	<decl_stmt pos:start="5:9" pos:end="5:29"><decl pos:start="5:9" pos:end="5:28"><type pos:start="5:9" pos:end="5:20"><name pos:start="5:9" pos:end="5:16">unsigned</name> <name pos:start="5:18" pos:end="5:20">int</name></type> <name pos:start="5:22" pos:end="5:24">err</name> <init pos:start="5:26" pos:end="5:28">= <expr pos:start="5:28" pos:end="5:28"><literal type="number" pos:start="5:28" pos:end="5:28">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="7:9" pos:end="7:31"><decl pos:start="7:9" pos:end="7:30"><type pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:17">abi_ulong</name></type> <name pos:start="7:19" pos:end="7:30">fpstate_addr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:30"><decl pos:start="9:9" pos:end="9:29"><type pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:16">unsigned</name> <name pos:start="9:18" pos:end="9:20">int</name></type> <name pos:start="9:22" pos:end="9:29">tmpflags</name></decl>;</decl_stmt>



        <expr_stmt pos:start="13:9" pos:end="13:53"><expr pos:start="13:9" pos:end="13:52"><call pos:start="13:9" pos:end="13:52"><name pos:start="13:9" pos:end="13:24">cpu_x86_load_seg</name><argument_list pos:start="13:25" pos:end="13:52">(<argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:28">env</name></expr></argument>, <argument pos:start="13:31" pos:end="13:34"><expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">R_GS</name></expr></argument>, <argument pos:start="13:37" pos:end="13:51"><expr pos:start="13:37" pos:end="13:51"><call pos:start="13:37" pos:end="13:51"><name pos:start="13:37" pos:end="13:43">tswap16</name><argument_list pos:start="13:44" pos:end="13:51">(<argument pos:start="13:45" pos:end="13:50"><expr pos:start="13:45" pos:end="13:50"><name pos:start="13:45" pos:end="13:50"><name pos:start="13:45" pos:end="13:46">sc</name><operator pos:start="13:47" pos:end="13:48">-&gt;</operator><name pos:start="13:49" pos:end="13:50">gs</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:53"><expr pos:start="15:9" pos:end="15:52"><call pos:start="15:9" pos:end="15:52"><name pos:start="15:9" pos:end="15:24">cpu_x86_load_seg</name><argument_list pos:start="15:25" pos:end="15:52">(<argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:28">env</name></expr></argument>, <argument pos:start="15:31" pos:end="15:34"><expr pos:start="15:31" pos:end="15:34"><name pos:start="15:31" pos:end="15:34">R_FS</name></expr></argument>, <argument pos:start="15:37" pos:end="15:51"><expr pos:start="15:37" pos:end="15:51"><call pos:start="15:37" pos:end="15:51"><name pos:start="15:37" pos:end="15:43">tswap16</name><argument_list pos:start="15:44" pos:end="15:51">(<argument pos:start="15:45" pos:end="15:50"><expr pos:start="15:45" pos:end="15:50"><name pos:start="15:45" pos:end="15:50"><name pos:start="15:45" pos:end="15:46">sc</name><operator pos:start="15:47" pos:end="15:48">-&gt;</operator><name pos:start="15:49" pos:end="15:50">fs</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:53"><expr pos:start="17:9" pos:end="17:52"><call pos:start="17:9" pos:end="17:52"><name pos:start="17:9" pos:end="17:24">cpu_x86_load_seg</name><argument_list pos:start="17:25" pos:end="17:52">(<argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">env</name></expr></argument>, <argument pos:start="17:31" pos:end="17:34"><expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34">R_ES</name></expr></argument>, <argument pos:start="17:37" pos:end="17:51"><expr pos:start="17:37" pos:end="17:51"><call pos:start="17:37" pos:end="17:51"><name pos:start="17:37" pos:end="17:43">tswap16</name><argument_list pos:start="17:44" pos:end="17:51">(<argument pos:start="17:45" pos:end="17:50"><expr pos:start="17:45" pos:end="17:50"><name pos:start="17:45" pos:end="17:50"><name pos:start="17:45" pos:end="17:46">sc</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:50">es</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:53"><expr pos:start="19:9" pos:end="19:52"><call pos:start="19:9" pos:end="19:52"><name pos:start="19:9" pos:end="19:24">cpu_x86_load_seg</name><argument_list pos:start="19:25" pos:end="19:52">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">env</name></expr></argument>, <argument pos:start="19:31" pos:end="19:34"><expr pos:start="19:31" pos:end="19:34"><name pos:start="19:31" pos:end="19:34">R_DS</name></expr></argument>, <argument pos:start="19:37" pos:end="19:51"><expr pos:start="19:37" pos:end="19:51"><call pos:start="19:37" pos:end="19:51"><name pos:start="19:37" pos:end="19:43">tswap16</name><argument_list pos:start="19:44" pos:end="19:51">(<argument pos:start="19:45" pos:end="19:50"><expr pos:start="19:45" pos:end="19:50"><name pos:start="19:45" pos:end="19:50"><name pos:start="19:45" pos:end="19:46">sc</name><operator pos:start="19:47" pos:end="19:48">-&gt;</operator><name pos:start="19:49" pos:end="19:50">ds</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:17">regs</name><index pos:start="23:18" pos:end="23:24">[<expr pos:start="23:19" pos:end="23:23"><name pos:start="23:19" pos:end="23:23">R_EDI</name></expr>]</index></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <call pos:start="23:28" pos:end="23:42"><name pos:start="23:28" pos:end="23:33">tswapl</name><argument_list pos:start="23:34" pos:end="23:42">(<argument pos:start="23:35" pos:end="23:41"><expr pos:start="23:35" pos:end="23:41"><name pos:start="23:35" pos:end="23:41"><name pos:start="23:35" pos:end="23:36">sc</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:41">edi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:17">regs</name><index pos:start="25:18" pos:end="25:24">[<expr pos:start="25:19" pos:end="25:23"><name pos:start="25:19" pos:end="25:23">R_ESI</name></expr>]</index></name> <operator pos:start="25:26" pos:end="25:26">=</operator> <call pos:start="25:28" pos:end="25:42"><name pos:start="25:28" pos:end="25:33">tswapl</name><argument_list pos:start="25:34" pos:end="25:42">(<argument pos:start="25:35" pos:end="25:41"><expr pos:start="25:35" pos:end="25:41"><name pos:start="25:35" pos:end="25:41"><name pos:start="25:35" pos:end="25:36">sc</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:41">esi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:43"><expr pos:start="27:9" pos:end="27:42"><name pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:11">env</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:17">regs</name><index pos:start="27:18" pos:end="27:24">[<expr pos:start="27:19" pos:end="27:23"><name pos:start="27:19" pos:end="27:23">R_EBP</name></expr>]</index></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <call pos:start="27:28" pos:end="27:42"><name pos:start="27:28" pos:end="27:33">tswapl</name><argument_list pos:start="27:34" pos:end="27:42">(<argument pos:start="27:35" pos:end="27:41"><expr pos:start="27:35" pos:end="27:41"><name pos:start="27:35" pos:end="27:41"><name pos:start="27:35" pos:end="27:36">sc</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:41">ebp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:11">env</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:17">regs</name><index pos:start="29:18" pos:end="29:24">[<expr pos:start="29:19" pos:end="29:23"><name pos:start="29:19" pos:end="29:23">R_ESP</name></expr>]</index></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <call pos:start="29:28" pos:end="29:42"><name pos:start="29:28" pos:end="29:33">tswapl</name><argument_list pos:start="29:34" pos:end="29:42">(<argument pos:start="29:35" pos:end="29:41"><expr pos:start="29:35" pos:end="29:41"><name pos:start="29:35" pos:end="29:41"><name pos:start="29:35" pos:end="29:36">sc</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:41">esp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:43"><expr pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:11">env</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:17">regs</name><index pos:start="31:18" pos:end="31:24">[<expr pos:start="31:19" pos:end="31:23"><name pos:start="31:19" pos:end="31:23">R_EBX</name></expr>]</index></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <call pos:start="31:28" pos:end="31:42"><name pos:start="31:28" pos:end="31:33">tswapl</name><argument_list pos:start="31:34" pos:end="31:42">(<argument pos:start="31:35" pos:end="31:41"><expr pos:start="31:35" pos:end="31:41"><name pos:start="31:35" pos:end="31:41"><name pos:start="31:35" pos:end="31:36">sc</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:41">ebx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:11">env</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:17">regs</name><index pos:start="33:18" pos:end="33:24">[<expr pos:start="33:19" pos:end="33:23"><name pos:start="33:19" pos:end="33:23">R_EDX</name></expr>]</index></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <call pos:start="33:28" pos:end="33:42"><name pos:start="33:28" pos:end="33:33">tswapl</name><argument_list pos:start="33:34" pos:end="33:42">(<argument pos:start="33:35" pos:end="33:41"><expr pos:start="33:35" pos:end="33:41"><name pos:start="33:35" pos:end="33:41"><name pos:start="33:35" pos:end="33:36">sc</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:41">edx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:43"><expr pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:11">env</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:17">regs</name><index pos:start="35:18" pos:end="35:24">[<expr pos:start="35:19" pos:end="35:23"><name pos:start="35:19" pos:end="35:23">R_ECX</name></expr>]</index></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <call pos:start="35:28" pos:end="35:42"><name pos:start="35:28" pos:end="35:33">tswapl</name><argument_list pos:start="35:34" pos:end="35:42">(<argument pos:start="35:35" pos:end="35:41"><expr pos:start="35:35" pos:end="35:41"><name pos:start="35:35" pos:end="35:41"><name pos:start="35:35" pos:end="35:36">sc</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:41">ecx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:11">env</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:16">eip</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:25">tswapl</name><argument_list pos:start="37:26" pos:end="37:34">(<argument pos:start="37:27" pos:end="37:33"><expr pos:start="37:27" pos:end="37:33"><name pos:start="37:27" pos:end="37:33"><name pos:start="37:27" pos:end="37:28">sc</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:33">eip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:55"><expr pos:start="41:9" pos:end="41:54"><call pos:start="41:9" pos:end="41:54"><name pos:start="41:9" pos:end="41:24">cpu_x86_load_seg</name><argument_list pos:start="41:25" pos:end="41:54">(<argument pos:start="41:26" pos:end="41:28"><expr pos:start="41:26" pos:end="41:28"><name pos:start="41:26" pos:end="41:28">env</name></expr></argument>, <argument pos:start="41:31" pos:end="41:34"><expr pos:start="41:31" pos:end="41:34"><name pos:start="41:31" pos:end="41:34">R_CS</name></expr></argument>, <argument pos:start="41:37" pos:end="41:53"><expr pos:start="41:37" pos:end="41:53"><call pos:start="41:37" pos:end="41:49"><name pos:start="41:37" pos:end="41:40">lduw</name><argument_list pos:start="41:41" pos:end="41:49">(<argument pos:start="41:42" pos:end="41:48"><expr pos:start="41:42" pos:end="41:48"><operator pos:start="41:42" pos:end="41:42">&amp;</operator><name pos:start="41:43" pos:end="41:48"><name pos:start="41:43" pos:end="41:44">sc</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:48">cs</name></name></expr></argument>)</argument_list></call> <operator pos:start="41:51" pos:end="41:51">|</operator> <literal type="number" pos:start="41:53" pos:end="41:53">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:55"><expr pos:start="43:9" pos:end="43:54"><call pos:start="43:9" pos:end="43:54"><name pos:start="43:9" pos:end="43:24">cpu_x86_load_seg</name><argument_list pos:start="43:25" pos:end="43:54">(<argument pos:start="43:26" pos:end="43:28"><expr pos:start="43:26" pos:end="43:28"><name pos:start="43:26" pos:end="43:28">env</name></expr></argument>, <argument pos:start="43:31" pos:end="43:34"><expr pos:start="43:31" pos:end="43:34"><name pos:start="43:31" pos:end="43:34">R_SS</name></expr></argument>, <argument pos:start="43:37" pos:end="43:53"><expr pos:start="43:37" pos:end="43:53"><call pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:40">lduw</name><argument_list pos:start="43:41" pos:end="43:49">(<argument pos:start="43:42" pos:end="43:48"><expr pos:start="43:42" pos:end="43:48"><operator pos:start="43:42" pos:end="43:42">&amp;</operator><name pos:start="43:43" pos:end="43:48"><name pos:start="43:43" pos:end="43:44">sc</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:48">ss</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:51" pos:end="43:51">|</operator> <literal type="number" pos:start="43:53" pos:end="43:53">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:16">tmpflags</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:37"><name pos:start="47:20" pos:end="47:25">tswapl</name><argument_list pos:start="47:26" pos:end="47:37">(<argument pos:start="47:27" pos:end="47:36"><expr pos:start="47:27" pos:end="47:36"><name pos:start="47:27" pos:end="47:36"><name pos:start="47:27" pos:end="47:28">sc</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:36">eflags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:70"><expr pos:start="49:9" pos:end="49:69"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:11">env</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:19">eflags</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <operator pos:start="49:23" pos:end="49:23">(</operator><name pos:start="49:24" pos:end="49:34"><name pos:start="49:24" pos:end="49:26">env</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:34">eflags</name></name> <operator pos:start="49:36" pos:end="49:36">&amp;</operator> <operator pos:start="49:38" pos:end="49:38">~</operator><literal type="number" pos:start="49:39" pos:end="49:45">0x40DD5</literal><operator pos:start="49:46" pos:end="49:46">)</operator> <operator pos:start="49:48" pos:end="49:48">|</operator> <operator pos:start="49:50" pos:end="49:50">(</operator><name pos:start="49:51" pos:end="49:58">tmpflags</name> <operator pos:start="49:60" pos:end="49:60">&amp;</operator> <literal type="number" pos:start="49:62" pos:end="49:68">0x40DD5</literal><operator pos:start="49:69" pos:end="49:69">)</operator></expr>;</expr_stmt>

        <comment type="line" pos:start="51:9" pos:end="51:84">//		regs-&gt;orig_eax = -1;		/* disable syscall checks */</comment>



        <expr_stmt pos:start="55:9" pos:end="55:43"><expr pos:start="55:9" pos:end="55:42"><name pos:start="55:9" pos:end="55:20">fpstate_addr</name> <operator pos:start="55:22" pos:end="55:22">=</operator> <call pos:start="55:24" pos:end="55:42"><name pos:start="55:24" pos:end="55:29">tswapl</name><argument_list pos:start="55:30" pos:end="55:42">(<argument pos:start="55:31" pos:end="55:41"><expr pos:start="55:31" pos:end="55:41"><name pos:start="55:31" pos:end="55:41"><name pos:start="55:31" pos:end="55:32">sc</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:41">fpstate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="57:9" pos:end="67:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:30">(<expr pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:24">fpstate_addr</name> <operator pos:start="57:26" pos:end="57:27">!=</operator> <literal type="number" pos:start="57:29" pos:end="57:29">0</literal></expr>)</condition> <block pos:start="57:32" pos:end="67:9">{<block_content pos:start="59:17" pos:end="65:53">

                <if_stmt pos:start="59:17" pos:end="63:38"><if pos:start="59:17" pos:end="63:38">if <condition pos:start="59:20" pos:end="61:62">(<expr pos:start="59:21" pos:end="61:61"><operator pos:start="59:21" pos:end="59:21">!</operator><call pos:start="59:22" pos:end="61:61"><name pos:start="59:22" pos:end="59:30">access_ok</name><argument_list pos:start="59:31" pos:end="61:61">(<argument pos:start="59:32" pos:end="59:42"><expr pos:start="59:32" pos:end="59:42"><name pos:start="59:32" pos:end="59:42">VERIFY_READ</name></expr></argument>, <argument pos:start="59:45" pos:end="59:56"><expr pos:start="59:45" pos:end="59:56"><name pos:start="59:45" pos:end="59:56">fpstate_addr</name></expr></argument>, 

                               <argument pos:start="61:32" pos:end="61:60"><expr pos:start="61:32" pos:end="61:60"><sizeof pos:start="61:32" pos:end="61:60">sizeof<argument_list pos:start="61:38" pos:end="61:60">(<argument pos:start="61:39" pos:end="61:59"><expr pos:start="61:39" pos:end="61:59">struct <name pos:start="61:46" pos:end="61:59">target_fpstate</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:25" pos:end="63:38"><block_content pos:start="63:25" pos:end="63:38">

                        <goto pos:start="63:25" pos:end="63:38">goto <name pos:start="63:30" pos:end="63:37">badframe</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:53"><expr pos:start="65:17" pos:end="65:52"><call pos:start="65:17" pos:end="65:52"><name pos:start="65:17" pos:end="65:30">cpu_x86_frstor</name><argument_list pos:start="65:31" pos:end="65:52">(<argument pos:start="65:32" pos:end="65:34"><expr pos:start="65:32" pos:end="65:34"><name pos:start="65:32" pos:end="65:34">env</name></expr></argument>, <argument pos:start="65:37" pos:end="65:48"><expr pos:start="65:37" pos:end="65:48"><name pos:start="65:37" pos:end="65:48">fpstate_addr</name></expr></argument>, <argument pos:start="65:51" pos:end="65:51"><expr pos:start="65:51" pos:end="65:51"><literal type="number" pos:start="65:51" pos:end="65:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:32"><expr pos:start="71:9" pos:end="71:31"><operator pos:start="71:9" pos:end="71:9">*</operator><name pos:start="71:10" pos:end="71:13">peax</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <call pos:start="71:17" pos:end="71:31"><name pos:start="71:17" pos:end="71:22">tswapl</name><argument_list pos:start="71:23" pos:end="71:31">(<argument pos:start="71:24" pos:end="71:30"><expr pos:start="71:24" pos:end="71:30"><name pos:start="71:24" pos:end="71:30"><name pos:start="71:24" pos:end="71:25">sc</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:30">eax</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="73:9" pos:end="73:19">return <expr pos:start="73:16" pos:end="73:18"><name pos:start="73:16" pos:end="73:18">err</name></expr>;</return>

<label pos:start="75:1" pos:end="75:9"><name pos:start="75:1" pos:end="75:8">badframe</name>:</label>

	<return pos:start="77:9" pos:end="77:17">return <expr pos:start="77:16" pos:end="77:16"><literal type="number" pos:start="77:16" pos:end="77:16">1</literal></expr>;</return>

</block_content>}</block>
</unit>
