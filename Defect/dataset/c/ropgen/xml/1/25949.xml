<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25949.c" pos:tabs="8"><function pos:start="1:1" pos:end="335:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:33">sws_scale</name><parameter_list pos:start="1:34" pos:end="9:56">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:40">struct</name> <name pos:start="1:42" pos:end="1:51">SwsContext</name></name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">c</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:66"><decl pos:start="3:35" pos:end="3:66"><type pos:start="3:35" pos:end="3:64"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:47">uint8_t</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier> <specifier pos:start="3:51" pos:end="3:55">const</specifier></type> <name pos:start="3:57" pos:end="3:66"><name pos:start="3:57" pos:end="3:64">srcSlice</name><index pos:start="3:65" pos:end="3:66">[]</index></name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:55"><decl pos:start="5:35" pos:end="5:55"><type pos:start="5:35" pos:end="5:53"><specifier pos:start="5:35" pos:end="5:39">const</specifier> <name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:55"><name pos:start="5:45" pos:end="5:53">srcStride</name><index pos:start="5:54" pos:end="5:55">[]</index></name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:70"><decl pos:start="5:58" pos:end="5:70"><type pos:start="5:58" pos:end="5:70"><name pos:start="5:58" pos:end="5:60">int</name></type> <name pos:start="5:62" pos:end="5:70">srcSliceY</name></decl></parameter>,

                                  <parameter pos:start="7:35" pos:end="7:47"><decl pos:start="7:35" pos:end="7:47"><type pos:start="7:35" pos:end="7:47"><name pos:start="7:35" pos:end="7:37">int</name></type> <name pos:start="7:39" pos:end="7:47">srcSliceH</name></decl></parameter>, <parameter pos:start="7:50" pos:end="7:69"><decl pos:start="7:50" pos:end="7:69"><type pos:start="7:50" pos:end="7:67"><name pos:start="7:50" pos:end="7:56">uint8_t</name> <modifier pos:start="7:58" pos:end="7:58">*</modifier><specifier pos:start="7:59" pos:end="7:63">const</specifier></type> <name pos:start="7:65" pos:end="7:69"><name pos:start="7:65" pos:end="7:67">dst</name><index pos:start="7:68" pos:end="7:69">[]</index></name></decl></parameter>,

                                  <parameter pos:start="9:35" pos:end="9:55"><decl pos:start="9:35" pos:end="9:55"><type pos:start="9:35" pos:end="9:53"><specifier pos:start="9:35" pos:end="9:39">const</specifier> <name pos:start="9:41" pos:end="9:43">int</name></type> <name pos:start="9:45" pos:end="9:55"><name pos:start="9:45" pos:end="9:53">dstStride</name><index pos:start="9:54" pos:end="9:55">[]</index></name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="335:1">{<block_content pos:start="13:5" pos:end="333:15">

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:84"><decl pos:start="15:5" pos:end="15:83"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:26"><name pos:start="15:20" pos:end="15:23">src2</name><index pos:start="15:24" pos:end="15:26">[<expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">4</literal></expr>]</index></name> <init pos:start="15:28" pos:end="15:83">= <expr pos:start="15:30" pos:end="15:83"><block pos:start="15:30" pos:end="15:83">{ <expr pos:start="15:32" pos:end="15:42"><name pos:start="15:32" pos:end="15:42"><name pos:start="15:32" pos:end="15:39">srcSlice</name><index pos:start="15:40" pos:end="15:42">[<expr pos:start="15:41" pos:end="15:41"><literal type="number" pos:start="15:41" pos:end="15:41">0</literal></expr>]</index></name></expr>, <expr pos:start="15:45" pos:end="15:55"><name pos:start="15:45" pos:end="15:55"><name pos:start="15:45" pos:end="15:52">srcSlice</name><index pos:start="15:53" pos:end="15:55">[<expr pos:start="15:54" pos:end="15:54"><literal type="number" pos:start="15:54" pos:end="15:54">1</literal></expr>]</index></name></expr>, <expr pos:start="15:58" pos:end="15:68"><name pos:start="15:58" pos:end="15:68"><name pos:start="15:58" pos:end="15:65">srcSlice</name><index pos:start="15:66" pos:end="15:68">[<expr pos:start="15:67" pos:end="15:67"><literal type="number" pos:start="15:67" pos:end="15:67">2</literal></expr>]</index></name></expr>, <expr pos:start="15:71" pos:end="15:81"><name pos:start="15:71" pos:end="15:81"><name pos:start="15:71" pos:end="15:78">srcSlice</name><index pos:start="15:79" pos:end="15:81">[<expr pos:start="15:80" pos:end="15:80"><literal type="number" pos:start="15:80" pos:end="15:80">3</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:58"><decl pos:start="17:5" pos:end="17:57"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:20"><name pos:start="17:14" pos:end="17:17">dst2</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">4</literal></expr>]</index></name> <init pos:start="17:22" pos:end="17:57">= <expr pos:start="17:24" pos:end="17:57"><block pos:start="17:24" pos:end="17:57">{ <expr pos:start="17:26" pos:end="17:31"><name pos:start="17:26" pos:end="17:31"><name pos:start="17:26" pos:end="17:28">dst</name><index pos:start="17:29" pos:end="17:31">[<expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr>]</index></name></expr>, <expr pos:start="17:34" pos:end="17:39"><name pos:start="17:34" pos:end="17:39"><name pos:start="17:34" pos:end="17:36">dst</name><index pos:start="17:37" pos:end="17:39">[<expr pos:start="17:38" pos:end="17:38"><literal type="number" pos:start="17:38" pos:end="17:38">1</literal></expr>]</index></name></expr>, <expr pos:start="17:42" pos:end="17:47"><name pos:start="17:42" pos:end="17:47"><name pos:start="17:42" pos:end="17:44">dst</name><index pos:start="17:45" pos:end="17:47">[<expr pos:start="17:46" pos:end="17:46"><literal type="number" pos:start="17:46" pos:end="17:46">2</literal></expr>]</index></name></expr>, <expr pos:start="17:50" pos:end="17:55"><name pos:start="17:50" pos:end="17:55"><name pos:start="17:50" pos:end="17:52">dst</name><index pos:start="17:53" pos:end="17:55">[<expr pos:start="17:54" pos:end="17:54"><literal type="number" pos:start="17:54" pos:end="17:54">3</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:21">rgb0_tmp</name> <init pos:start="19:23" pos:end="19:28">= <expr pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:28">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="23:5" pos:end="23:67">// do not mess up sliceDir if we have a "trailing" 0-size slice</comment>

    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:23">(<expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:17">srcSliceH</name> <operator pos:start="25:19" pos:end="25:20">==</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:65">(<expr pos:start="31:9" pos:end="31:64"><operator pos:start="31:9" pos:end="31:9">!</operator><call pos:start="31:10" pos:end="31:64"><name pos:start="31:10" pos:end="31:29">check_image_pointers</name><argument_list pos:start="31:30" pos:end="31:64">(<argument pos:start="31:31" pos:end="31:38"><expr pos:start="31:31" pos:end="31:38"><name pos:start="31:31" pos:end="31:38">srcSlice</name></expr></argument>, <argument pos:start="31:41" pos:end="31:52"><expr pos:start="31:41" pos:end="31:52"><name pos:start="31:41" pos:end="31:52"><name pos:start="31:41" pos:end="31:41">c</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:52">srcFormat</name></name></expr></argument>, <argument pos:start="31:55" pos:end="31:63"><expr pos:start="31:55" pos:end="31:63"><name pos:start="31:55" pos:end="31:63">srcStride</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:67" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:17">

        <expr_stmt pos:start="33:9" pos:end="33:60"><expr pos:start="33:9" pos:end="33:59"><call pos:start="33:9" pos:end="33:59"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:59">(<argument pos:start="33:16" pos:end="33:16"><expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">c</name></expr></argument>, <argument pos:start="33:19" pos:end="33:30"><expr pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:33" pos:end="33:58"><expr pos:start="33:33" pos:end="33:58"><literal type="string" pos:start="33:33" pos:end="33:58">"bad src image pointers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:83">(<expr pos:start="39:9" pos:end="39:82"><operator pos:start="39:9" pos:end="39:9">!</operator><call pos:start="39:10" pos:end="39:82"><name pos:start="39:10" pos:end="39:29">check_image_pointers</name><argument_list pos:start="39:30" pos:end="39:82">(<argument pos:start="39:31" pos:end="39:56"><expr pos:start="39:31" pos:end="39:56"><operator pos:start="39:31" pos:end="39:31">(</operator><specifier pos:start="39:32" pos:end="39:36">const</specifier> <name pos:start="39:38" pos:end="39:44">uint8_t</name><operator pos:start="39:45" pos:end="39:45">*</operator> <specifier pos:start="39:47" pos:end="39:51">const</specifier><operator pos:start="39:52" pos:end="39:52">*</operator><operator pos:start="39:53" pos:end="39:53">)</operator><name pos:start="39:54" pos:end="39:56">dst</name></expr></argument>, <argument pos:start="39:59" pos:end="39:70"><expr pos:start="39:59" pos:end="39:70"><name pos:start="39:59" pos:end="39:70"><name pos:start="39:59" pos:end="39:59">c</name><operator pos:start="39:60" pos:end="39:61">-&gt;</operator><name pos:start="39:62" pos:end="39:70">dstFormat</name></name></expr></argument>, <argument pos:start="39:73" pos:end="39:81"><expr pos:start="39:73" pos:end="39:81"><name pos:start="39:73" pos:end="39:81">dstStride</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:85" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:17">

        <expr_stmt pos:start="41:9" pos:end="41:60"><expr pos:start="41:9" pos:end="41:59"><call pos:start="41:9" pos:end="41:59"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:59">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">c</name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:33" pos:end="41:58"><expr pos:start="41:33" pos:end="41:58"><literal type="string" pos:start="41:33" pos:end="41:58">"bad dst image pointers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:17">return <expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:79">(<expr pos:start="49:9" pos:end="49:78"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:9">c</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:19">sliceDir</name></name> <operator pos:start="49:21" pos:end="49:22">==</operator> <literal type="number" pos:start="49:24" pos:end="49:24">0</literal> <operator pos:start="49:26" pos:end="49:27">&amp;&amp;</operator> <name pos:start="49:29" pos:end="49:37">srcSliceY</name> <operator pos:start="49:39" pos:end="49:40">!=</operator> <literal type="number" pos:start="49:42" pos:end="49:42">0</literal> <operator pos:start="49:44" pos:end="49:45">&amp;&amp;</operator> <name pos:start="49:47" pos:end="49:55">srcSliceY</name> <operator pos:start="49:57" pos:end="49:57">+</operator> <name pos:start="49:59" pos:end="49:67">srcSliceH</name> <operator pos:start="49:69" pos:end="49:70">!=</operator> <name pos:start="49:72" pos:end="49:78"><name pos:start="49:72" pos:end="49:72">c</name><operator pos:start="49:73" pos:end="49:74">-&gt;</operator><name pos:start="49:75" pos:end="49:78">srcH</name></name></expr>)</condition> <block pos:start="49:81" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:17">

        <expr_stmt pos:start="51:9" pos:end="51:65"><expr pos:start="51:9" pos:end="51:64"><call pos:start="51:9" pos:end="51:64"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:64">(<argument pos:start="51:16" pos:end="51:16"><expr pos:start="51:16" pos:end="51:16"><name pos:start="51:16" pos:end="51:16">c</name></expr></argument>, <argument pos:start="51:19" pos:end="51:30"><expr pos:start="51:19" pos:end="51:30"><name pos:start="51:19" pos:end="51:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:33" pos:end="51:63"><expr pos:start="51:33" pos:end="51:63"><literal type="string" pos:start="51:33" pos:end="51:63">"Slices start in the middle!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:25">(<expr pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:9">c</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:19">sliceDir</name></name> <operator pos:start="57:21" pos:end="57:22">==</operator> <literal type="number" pos:start="57:24" pos:end="57:24">0</literal></expr>)</condition> <block pos:start="57:27" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:67">

        <if_stmt pos:start="59:9" pos:end="59:67"><if pos:start="59:9" pos:end="59:44">if <condition pos:start="59:12" pos:end="59:27">(<expr pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:21">srcSliceY</name> <operator pos:start="59:23" pos:end="59:24">==</operator> <literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr>)</condition><block type="pseudo" pos:start="59:29" pos:end="59:44"><block_content pos:start="59:29" pos:end="59:44"> <expr_stmt pos:start="59:29" pos:end="59:44"><expr pos:start="59:29" pos:end="59:43"><name pos:start="59:29" pos:end="59:39"><name pos:start="59:29" pos:end="59:29">c</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:39">sliceDir</name></name> <operator pos:start="59:41" pos:end="59:41">=</operator> <literal type="number" pos:start="59:43" pos:end="59:43">1</literal></expr>;</expr_stmt></block_content></block></if> <else pos:start="59:46" pos:end="59:67">else<block type="pseudo" pos:start="59:51" pos:end="59:67"><block_content pos:start="59:51" pos:end="59:67"> <expr_stmt pos:start="59:51" pos:end="59:67"><expr pos:start="59:51" pos:end="59:66"><name pos:start="59:51" pos:end="59:61"><name pos:start="59:51" pos:end="59:51">c</name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:61">sliceDir</name></name> <operator pos:start="59:63" pos:end="59:63">=</operator> <operator pos:start="59:65" pos:end="59:65">-</operator><literal type="number" pos:start="59:66" pos:end="59:66">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="209:5"><if pos:start="65:5" pos:end="209:5">if <condition pos:start="65:8" pos:end="65:29">(<expr pos:start="65:9" pos:end="65:28"><call pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:14">usePal</name><argument_list pos:start="65:15" pos:end="65:28">(<argument pos:start="65:16" pos:end="65:27"><expr pos:start="65:16" pos:end="65:27"><name pos:start="65:16" pos:end="65:27"><name pos:start="65:16" pos:end="65:16">c</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:27">srcFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:31" pos:end="209:5">{<block_content pos:start="67:9" pos:end="207:9">

        <for pos:start="67:9" pos:end="207:9">for <control pos:start="67:13" pos:end="67:33">(<init pos:start="67:14" pos:end="67:19"><expr pos:start="67:14" pos:end="67:18"><name pos:start="67:14" pos:end="67:14">i</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>;</init> <condition pos:start="67:21" pos:end="67:28"><expr pos:start="67:21" pos:end="67:27"><name pos:start="67:21" pos:end="67:21">i</name> <operator pos:start="67:23" pos:end="67:23">&lt;</operator> <literal type="number" pos:start="67:25" pos:end="67:27">256</literal></expr>;</condition> <incr pos:start="67:30" pos:end="67:32"><expr pos:start="67:30" pos:end="67:32"><name pos:start="67:30" pos:end="67:30">i</name><operator pos:start="67:31" pos:end="67:32">++</operator></expr></incr>)</control> <block pos:start="67:35" pos:end="207:9">{<block_content pos:start="69:13" pos:end="205:13">

            <decl_stmt pos:start="69:13" pos:end="69:46"><decl pos:start="69:13" pos:end="69:17"><type pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">int</name></type> <name pos:start="69:17" pos:end="69:17">p</name></decl>, <decl pos:start="69:20" pos:end="69:20"><type ref="prev" pos:start="69:13" pos:end="69:15"/><name pos:start="69:20" pos:end="69:20">r</name></decl>, <decl pos:start="69:23" pos:end="69:23"><type ref="prev" pos:start="69:13" pos:end="69:15"/><name pos:start="69:23" pos:end="69:23">g</name></decl>, <decl pos:start="69:26" pos:end="69:26"><type ref="prev" pos:start="69:13" pos:end="69:15"/><name pos:start="69:26" pos:end="69:26">b</name></decl>, <decl pos:start="69:29" pos:end="69:29"><type ref="prev" pos:start="69:13" pos:end="69:15"/><name pos:start="69:29" pos:end="69:29">y</name></decl>, <decl pos:start="69:32" pos:end="69:32"><type ref="prev" pos:start="69:13" pos:end="69:15"/><name pos:start="69:32" pos:end="69:32">u</name></decl>, <decl pos:start="69:35" pos:end="69:35"><type ref="prev" pos:start="69:13" pos:end="69:15"/><name pos:start="69:35" pos:end="69:35">v</name></decl>, <decl pos:start="69:38" pos:end="69:45"><type ref="prev" pos:start="69:13" pos:end="69:15"/><name pos:start="69:38" pos:end="69:38">a</name> <init pos:start="69:40" pos:end="69:45">= <expr pos:start="69:42" pos:end="69:45"><literal type="number" pos:start="69:42" pos:end="69:45">0xff</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="71:13" pos:end="142:0"><if pos:start="71:13" pos:end="83:13">if <condition pos:start="71:16" pos:end="71:48">(<expr pos:start="71:17" pos:end="71:47"><name pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:17">c</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:28">srcFormat</name></name> <operator pos:start="71:30" pos:end="71:31">==</operator> <name pos:start="71:33" pos:end="71:47">AV_PIX_FMT_PAL8</name></expr>)</condition> <block pos:start="71:50" pos:end="83:13">{<block_content pos:start="73:17" pos:end="81:37">

                <expr_stmt pos:start="73:17" pos:end="73:57"><expr pos:start="73:17" pos:end="73:56"><name pos:start="73:17" pos:end="73:17">p</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <operator pos:start="73:21" pos:end="73:21">(</operator><operator pos:start="73:22" pos:end="73:22">(</operator><specifier pos:start="73:23" pos:end="73:27">const</specifier> <name pos:start="73:29" pos:end="73:36">uint32_t</name> <operator pos:start="73:38" pos:end="73:38">*</operator><operator pos:start="73:39" pos:end="73:39">)</operator><operator pos:start="73:40" pos:end="73:40">(</operator><name pos:start="73:41" pos:end="73:51"><name pos:start="73:41" pos:end="73:48">srcSlice</name><index pos:start="73:49" pos:end="73:51">[<expr pos:start="73:50" pos:end="73:50"><literal type="number" pos:start="73:50" pos:end="73:50">1</literal></expr>]</index></name><operator pos:start="73:52" pos:end="73:52">)</operator><operator pos:start="73:53" pos:end="73:53">)</operator><index pos:start="73:54" pos:end="73:56">[<expr pos:start="73:55" pos:end="73:55"><name pos:start="73:55" pos:end="73:55">i</name></expr>]</index></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:37"><expr pos:start="75:17" pos:end="75:36"><name pos:start="75:17" pos:end="75:17">a</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:22">p</name> <operator pos:start="75:24" pos:end="75:25">&gt;&gt;</operator> <literal type="number" pos:start="75:27" pos:end="75:28">24</literal><operator pos:start="75:29" pos:end="75:29">)</operator> <operator pos:start="75:31" pos:end="75:31">&amp;</operator> <literal type="number" pos:start="75:33" pos:end="75:36">0xFF</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:37"><expr pos:start="77:17" pos:end="77:36"><name pos:start="77:17" pos:end="77:17">r</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <operator pos:start="77:21" pos:end="77:21">(</operator><name pos:start="77:22" pos:end="77:22">p</name> <operator pos:start="77:24" pos:end="77:25">&gt;&gt;</operator> <literal type="number" pos:start="77:27" pos:end="77:28">16</literal><operator pos:start="77:29" pos:end="77:29">)</operator> <operator pos:start="77:31" pos:end="77:31">&amp;</operator> <literal type="number" pos:start="77:33" pos:end="77:36">0xFF</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:37"><expr pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:17">g</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <operator pos:start="79:21" pos:end="79:21">(</operator><name pos:start="79:22" pos:end="79:22">p</name> <operator pos:start="79:24" pos:end="79:25">&gt;&gt;</operator>  <literal type="number" pos:start="79:28" pos:end="79:28">8</literal><operator pos:start="79:29" pos:end="79:29">)</operator> <operator pos:start="79:31" pos:end="79:31">&amp;</operator> <literal type="number" pos:start="79:33" pos:end="79:36">0xFF</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:37"><expr pos:start="81:17" pos:end="81:36"><name pos:start="81:17" pos:end="81:17">b</name> <operator pos:start="81:19" pos:end="81:19">=</operator>  <name pos:start="81:22" pos:end="81:22">p</name>        <operator pos:start="81:31" pos:end="81:31">&amp;</operator> <literal type="number" pos:start="81:33" pos:end="81:36">0xFF</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="83:15" pos:end="91:13">else if <condition pos:start="83:23" pos:end="83:55">(<expr pos:start="83:24" pos:end="83:54"><name pos:start="83:24" pos:end="83:35"><name pos:start="83:24" pos:end="83:24">c</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:35">srcFormat</name></name> <operator pos:start="83:37" pos:end="83:38">==</operator> <name pos:start="83:40" pos:end="83:54">AV_PIX_FMT_RGB8</name></expr>)</condition> <block pos:start="83:57" pos:end="91:13">{<block_content pos:start="85:17" pos:end="89:40">

                <expr_stmt pos:start="85:17" pos:end="85:40"><expr pos:start="85:17" pos:end="85:39"><name pos:start="85:17" pos:end="85:17">r</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <operator pos:start="85:21" pos:end="85:21">(</operator> <name pos:start="85:23" pos:end="85:23">i</name> <operator pos:start="85:25" pos:end="85:26">&gt;&gt;</operator> <literal type="number" pos:start="85:28" pos:end="85:28">5</literal>     <operator pos:start="85:34" pos:end="85:34">)</operator> <operator pos:start="85:36" pos:end="85:36">*</operator> <literal type="number" pos:start="85:38" pos:end="85:39">36</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:40"><expr pos:start="87:17" pos:end="87:39"><name pos:start="87:17" pos:end="87:17">g</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <operator pos:start="87:21" pos:end="87:21">(</operator><operator pos:start="87:22" pos:end="87:22">(</operator><name pos:start="87:23" pos:end="87:23">i</name> <operator pos:start="87:25" pos:end="87:26">&gt;&gt;</operator> <literal type="number" pos:start="87:28" pos:end="87:28">2</literal><operator pos:start="87:29" pos:end="87:29">)</operator> <operator pos:start="87:31" pos:end="87:31">&amp;</operator> <literal type="number" pos:start="87:33" pos:end="87:33">7</literal><operator pos:start="87:34" pos:end="87:34">)</operator> <operator pos:start="87:36" pos:end="87:36">*</operator> <literal type="number" pos:start="87:38" pos:end="87:39">36</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:40"><expr pos:start="89:17" pos:end="89:39"><name pos:start="89:17" pos:end="89:17">b</name> <operator pos:start="89:19" pos:end="89:19">=</operator> <operator pos:start="89:21" pos:end="89:21">(</operator> <name pos:start="89:23" pos:end="89:23">i</name>       <operator pos:start="89:31" pos:end="89:31">&amp;</operator> <literal type="number" pos:start="89:33" pos:end="89:33">3</literal><operator pos:start="89:34" pos:end="89:34">)</operator> <operator pos:start="89:36" pos:end="89:36">*</operator> <literal type="number" pos:start="89:38" pos:end="89:39">85</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="91:15" pos:end="99:13">else if <condition pos:start="91:23" pos:end="91:55">(<expr pos:start="91:24" pos:end="91:54"><name pos:start="91:24" pos:end="91:35"><name pos:start="91:24" pos:end="91:24">c</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:35">srcFormat</name></name> <operator pos:start="91:37" pos:end="91:38">==</operator> <name pos:start="91:40" pos:end="91:54">AV_PIX_FMT_BGR8</name></expr>)</condition> <block pos:start="91:57" pos:end="99:13">{<block_content pos:start="93:17" pos:end="97:40">

                <expr_stmt pos:start="93:17" pos:end="93:40"><expr pos:start="93:17" pos:end="93:39"><name pos:start="93:17" pos:end="93:17">b</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <operator pos:start="93:21" pos:end="93:21">(</operator> <name pos:start="93:23" pos:end="93:23">i</name> <operator pos:start="93:25" pos:end="93:26">&gt;&gt;</operator> <literal type="number" pos:start="93:28" pos:end="93:28">6</literal>     <operator pos:start="93:34" pos:end="93:34">)</operator> <operator pos:start="93:36" pos:end="93:36">*</operator> <literal type="number" pos:start="93:38" pos:end="93:39">85</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:40"><expr pos:start="95:17" pos:end="95:39"><name pos:start="95:17" pos:end="95:17">g</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <operator pos:start="95:21" pos:end="95:21">(</operator><operator pos:start="95:22" pos:end="95:22">(</operator><name pos:start="95:23" pos:end="95:23">i</name> <operator pos:start="95:25" pos:end="95:26">&gt;&gt;</operator> <literal type="number" pos:start="95:28" pos:end="95:28">3</literal><operator pos:start="95:29" pos:end="95:29">)</operator> <operator pos:start="95:31" pos:end="95:31">&amp;</operator> <literal type="number" pos:start="95:33" pos:end="95:33">7</literal><operator pos:start="95:34" pos:end="95:34">)</operator> <operator pos:start="95:36" pos:end="95:36">*</operator> <literal type="number" pos:start="95:38" pos:end="95:39">36</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:40"><expr pos:start="97:17" pos:end="97:39"><name pos:start="97:17" pos:end="97:17">r</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <operator pos:start="97:21" pos:end="97:21">(</operator> <name pos:start="97:23" pos:end="97:23">i</name>       <operator pos:start="97:31" pos:end="97:31">&amp;</operator> <literal type="number" pos:start="97:33" pos:end="97:33">7</literal><operator pos:start="97:34" pos:end="97:34">)</operator> <operator pos:start="97:36" pos:end="97:36">*</operator> <literal type="number" pos:start="97:38" pos:end="97:39">36</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="99:15" pos:end="107:13">else if <condition pos:start="99:23" pos:end="99:60">(<expr pos:start="99:24" pos:end="99:59"><name pos:start="99:24" pos:end="99:35"><name pos:start="99:24" pos:end="99:24">c</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:35">srcFormat</name></name> <operator pos:start="99:37" pos:end="99:38">==</operator> <name pos:start="99:40" pos:end="99:59">AV_PIX_FMT_RGB4_BYTE</name></expr>)</condition> <block pos:start="99:62" pos:end="107:13">{<block_content pos:start="101:17" pos:end="105:41">

                <expr_stmt pos:start="101:17" pos:end="101:41"><expr pos:start="101:17" pos:end="101:40"><name pos:start="101:17" pos:end="101:17">r</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <operator pos:start="101:21" pos:end="101:21">(</operator> <name pos:start="101:23" pos:end="101:23">i</name> <operator pos:start="101:25" pos:end="101:26">&gt;&gt;</operator> <literal type="number" pos:start="101:28" pos:end="101:28">3</literal>     <operator pos:start="101:34" pos:end="101:34">)</operator> <operator pos:start="101:36" pos:end="101:36">*</operator> <literal type="number" pos:start="101:38" pos:end="101:40">255</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:40"><expr pos:start="103:17" pos:end="103:39"><name pos:start="103:17" pos:end="103:17">g</name> <operator pos:start="103:19" pos:end="103:19">=</operator> <operator pos:start="103:21" pos:end="103:21">(</operator><operator pos:start="103:22" pos:end="103:22">(</operator><name pos:start="103:23" pos:end="103:23">i</name> <operator pos:start="103:25" pos:end="103:26">&gt;&gt;</operator> <literal type="number" pos:start="103:28" pos:end="103:28">1</literal><operator pos:start="103:29" pos:end="103:29">)</operator> <operator pos:start="103:31" pos:end="103:31">&amp;</operator> <literal type="number" pos:start="103:33" pos:end="103:33">3</literal><operator pos:start="103:34" pos:end="103:34">)</operator> <operator pos:start="103:36" pos:end="103:36">*</operator> <literal type="number" pos:start="103:38" pos:end="103:39">85</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:41"><expr pos:start="105:17" pos:end="105:40"><name pos:start="105:17" pos:end="105:17">b</name> <operator pos:start="105:19" pos:end="105:19">=</operator> <operator pos:start="105:21" pos:end="105:21">(</operator> <name pos:start="105:23" pos:end="105:23">i</name>       <operator pos:start="105:31" pos:end="105:31">&amp;</operator> <literal type="number" pos:start="105:33" pos:end="105:33">1</literal><operator pos:start="105:34" pos:end="105:34">)</operator> <operator pos:start="105:36" pos:end="105:36">*</operator> <literal type="number" pos:start="105:38" pos:end="105:40">255</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="107:15" pos:end="111:13">else if <condition pos:start="107:23" pos:end="107:93">(<expr pos:start="107:24" pos:end="107:92"><name pos:start="107:24" pos:end="107:35"><name pos:start="107:24" pos:end="107:24">c</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:35">srcFormat</name></name> <operator pos:start="107:37" pos:end="107:38">==</operator> <name pos:start="107:40" pos:end="107:55">AV_PIX_FMT_GRAY8</name> <operator pos:start="107:57" pos:end="107:58">||</operator> <name pos:start="107:60" pos:end="107:71"><name pos:start="107:60" pos:end="107:60">c</name><operator pos:start="107:61" pos:end="107:62">-&gt;</operator><name pos:start="107:63" pos:end="107:71">srcFormat</name></name> <operator pos:start="107:73" pos:end="107:74">==</operator> <name pos:start="107:76" pos:end="107:92">AV_PIX_FMT_GRAY8A</name></expr>)</condition> <block pos:start="107:95" pos:end="111:13">{<block_content pos:start="109:17" pos:end="109:30">

                <expr_stmt pos:start="109:17" pos:end="109:30"><expr pos:start="109:17" pos:end="109:29"><name pos:start="109:17" pos:end="109:17">r</name> <operator pos:start="109:19" pos:end="109:19">=</operator> <name pos:start="109:21" pos:end="109:21">g</name> <operator pos:start="109:23" pos:end="109:23">=</operator> <name pos:start="109:25" pos:end="109:25">b</name> <operator pos:start="109:27" pos:end="109:27">=</operator> <name pos:start="109:29" pos:end="109:29">i</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="111:15" pos:end="142:0">else <block pos:start="111:20" pos:end="142:0">{<block_content pos:start="113:17" pos:end="119:41">

                <expr_stmt pos:start="113:17" pos:end="113:65"><expr pos:start="113:17" pos:end="113:64"><call pos:start="113:17" pos:end="113:64"><name pos:start="113:17" pos:end="113:26">av_assert1</name><argument_list pos:start="113:27" pos:end="113:64">(<argument pos:start="113:28" pos:end="113:63"><expr pos:start="113:28" pos:end="113:63"><name pos:start="113:28" pos:end="113:39"><name pos:start="113:28" pos:end="113:28">c</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:39">srcFormat</name></name> <operator pos:start="113:41" pos:end="113:42">==</operator> <name pos:start="113:44" pos:end="113:63">AV_PIX_FMT_BGR4_BYTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:41"><expr pos:start="115:17" pos:end="115:40"><name pos:start="115:17" pos:end="115:17">b</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <operator pos:start="115:21" pos:end="115:21">(</operator> <name pos:start="115:23" pos:end="115:23">i</name> <operator pos:start="115:25" pos:end="115:26">&gt;&gt;</operator> <literal type="number" pos:start="115:28" pos:end="115:28">3</literal>     <operator pos:start="115:34" pos:end="115:34">)</operator> <operator pos:start="115:36" pos:end="115:36">*</operator> <literal type="number" pos:start="115:38" pos:end="115:40">255</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:40"><expr pos:start="117:17" pos:end="117:39"><name pos:start="117:17" pos:end="117:17">g</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <operator pos:start="117:21" pos:end="117:21">(</operator><operator pos:start="117:22" pos:end="117:22">(</operator><name pos:start="117:23" pos:end="117:23">i</name> <operator pos:start="117:25" pos:end="117:26">&gt;&gt;</operator> <literal type="number" pos:start="117:28" pos:end="117:28">1</literal><operator pos:start="117:29" pos:end="117:29">)</operator> <operator pos:start="117:31" pos:end="117:31">&amp;</operator> <literal type="number" pos:start="117:33" pos:end="117:33">3</literal><operator pos:start="117:34" pos:end="117:34">)</operator> <operator pos:start="117:36" pos:end="117:36">*</operator> <literal type="number" pos:start="117:38" pos:end="117:39">85</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:41"><expr pos:start="119:17" pos:end="119:40"><name pos:start="119:17" pos:end="119:17">r</name> <operator pos:start="119:19" pos:end="119:19">=</operator> <operator pos:start="119:21" pos:end="119:21">(</operator> <name pos:start="119:23" pos:end="119:23">i</name>       <operator pos:start="119:31" pos:end="119:31">&amp;</operator> <literal type="number" pos:start="119:33" pos:end="119:33">1</literal><operator pos:start="119:34" pos:end="119:34">)</operator> <operator pos:start="119:36" pos:end="119:36">*</operator> <literal type="number" pos:start="119:38" pos:end="119:40">255</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

<cpp:define pos:start="123:1" pos:end="123:24">#<cpp:directive pos:start="123:2" pos:end="123:7">define</cpp:directive> <cpp:macro pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:21">RGB2YUV_SHIFT</name></cpp:macro> <cpp:value pos:start="123:23" pos:end="123:24">15</cpp:value></cpp:define>

<cpp:define pos:start="125:1" pos:end="125:68">#<cpp:directive pos:start="125:2" pos:end="125:7">define</cpp:directive> <cpp:macro pos:start="125:9" pos:end="125:10"><name pos:start="125:9" pos:end="125:10">BY</name></cpp:macro> <cpp:value pos:start="125:12" pos:end="125:68">( (int) (0.114 * 219 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>

<cpp:define pos:start="127:1" pos:end="127:68">#<cpp:directive pos:start="127:2" pos:end="127:7">define</cpp:directive> <cpp:macro pos:start="127:9" pos:end="127:10"><name pos:start="127:9" pos:end="127:10">BV</name></cpp:macro> <cpp:value pos:start="127:12" pos:end="127:68">(-(int) (0.081 * 224 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>

<cpp:define pos:start="129:1" pos:end="129:68">#<cpp:directive pos:start="129:2" pos:end="129:7">define</cpp:directive> <cpp:macro pos:start="129:9" pos:end="129:10"><name pos:start="129:9" pos:end="129:10">BU</name></cpp:macro> <cpp:value pos:start="129:12" pos:end="129:68">( (int) (0.500 * 224 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>

<cpp:define pos:start="131:1" pos:end="131:68">#<cpp:directive pos:start="131:2" pos:end="131:7">define</cpp:directive> <cpp:macro pos:start="131:9" pos:end="131:10"><name pos:start="131:9" pos:end="131:10">GY</name></cpp:macro> <cpp:value pos:start="131:12" pos:end="131:68">( (int) (0.587 * 219 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>

<cpp:define pos:start="133:1" pos:end="133:68">#<cpp:directive pos:start="133:2" pos:end="133:7">define</cpp:directive> <cpp:macro pos:start="133:9" pos:end="133:10"><name pos:start="133:9" pos:end="133:10">GV</name></cpp:macro> <cpp:value pos:start="133:12" pos:end="133:68">(-(int) (0.419 * 224 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>

<cpp:define pos:start="135:1" pos:end="135:68">#<cpp:directive pos:start="135:2" pos:end="135:7">define</cpp:directive> <cpp:macro pos:start="135:9" pos:end="135:10"><name pos:start="135:9" pos:end="135:10">GU</name></cpp:macro> <cpp:value pos:start="135:12" pos:end="135:68">(-(int) (0.331 * 224 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>

<cpp:define pos:start="137:1" pos:end="137:68">#<cpp:directive pos:start="137:2" pos:end="137:7">define</cpp:directive> <cpp:macro pos:start="137:9" pos:end="137:10"><name pos:start="137:9" pos:end="137:10">RY</name></cpp:macro> <cpp:value pos:start="137:12" pos:end="137:68">( (int) (0.299 * 219 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>

<cpp:define pos:start="139:1" pos:end="139:68">#<cpp:directive pos:start="139:2" pos:end="139:7">define</cpp:directive> <cpp:macro pos:start="139:9" pos:end="139:10"><name pos:start="139:9" pos:end="139:10">RV</name></cpp:macro> <cpp:value pos:start="139:12" pos:end="139:68">( (int) (0.500 * 224 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>

<cpp:define pos:start="141:1" pos:end="141:68">#<cpp:directive pos:start="141:2" pos:end="141:7">define</cpp:directive> <cpp:macro pos:start="141:9" pos:end="141:10"><name pos:start="141:9" pos:end="141:10">RU</name></cpp:macro> <cpp:value pos:start="141:12" pos:end="141:68">(-(int) (0.169 * 224 / 255 * (1 &lt;&lt; RGB2YUV_SHIFT) + 0.5))</cpp:value></cpp:define>



            <expr_stmt pos:start="145:13" pos:end="145:106"><expr pos:start="145:13" pos:end="145:105"><name pos:start="145:13" pos:end="145:13">y</name> <operator pos:start="145:15" pos:end="145:15">=</operator> <call pos:start="145:17" pos:end="145:105"><name pos:start="145:17" pos:end="145:29">av_clip_uint8</name><argument_list pos:start="145:30" pos:end="145:105">(<argument pos:start="145:31" pos:end="145:104"><expr pos:start="145:31" pos:end="145:104"><operator pos:start="145:31" pos:end="145:31">(</operator><name pos:start="145:32" pos:end="145:33">RY</name> <operator pos:start="145:35" pos:end="145:35">*</operator> <name pos:start="145:37" pos:end="145:37">r</name> <operator pos:start="145:39" pos:end="145:39">+</operator> <name pos:start="145:41" pos:end="145:42">GY</name> <operator pos:start="145:44" pos:end="145:44">*</operator> <name pos:start="145:46" pos:end="145:46">g</name> <operator pos:start="145:48" pos:end="145:48">+</operator> <name pos:start="145:50" pos:end="145:51">BY</name> <operator pos:start="145:53" pos:end="145:53">*</operator> <name pos:start="145:55" pos:end="145:55">b</name> <operator pos:start="145:57" pos:end="145:57">+</operator> <operator pos:start="145:59" pos:end="145:59">(</operator> <literal type="number" pos:start="145:61" pos:end="145:62">33</literal> <operator pos:start="145:64" pos:end="145:65">&lt;&lt;</operator> <operator pos:start="145:67" pos:end="145:67">(</operator><name pos:start="145:68" pos:end="145:80">RGB2YUV_SHIFT</name> <operator pos:start="145:82" pos:end="145:82">-</operator> <literal type="number" pos:start="145:84" pos:end="145:84">1</literal><operator pos:start="145:85" pos:end="145:85">)</operator><operator pos:start="145:86" pos:end="145:86">)</operator><operator pos:start="145:87" pos:end="145:87">)</operator> <operator pos:start="145:89" pos:end="145:90">&gt;&gt;</operator> <name pos:start="145:92" pos:end="145:104">RGB2YUV_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:106"><expr pos:start="147:13" pos:end="147:105"><name pos:start="147:13" pos:end="147:13">u</name> <operator pos:start="147:15" pos:end="147:15">=</operator> <call pos:start="147:17" pos:end="147:105"><name pos:start="147:17" pos:end="147:29">av_clip_uint8</name><argument_list pos:start="147:30" pos:end="147:105">(<argument pos:start="147:31" pos:end="147:104"><expr pos:start="147:31" pos:end="147:104"><operator pos:start="147:31" pos:end="147:31">(</operator><name pos:start="147:32" pos:end="147:33">RU</name> <operator pos:start="147:35" pos:end="147:35">*</operator> <name pos:start="147:37" pos:end="147:37">r</name> <operator pos:start="147:39" pos:end="147:39">+</operator> <name pos:start="147:41" pos:end="147:42">GU</name> <operator pos:start="147:44" pos:end="147:44">*</operator> <name pos:start="147:46" pos:end="147:46">g</name> <operator pos:start="147:48" pos:end="147:48">+</operator> <name pos:start="147:50" pos:end="147:51">BU</name> <operator pos:start="147:53" pos:end="147:53">*</operator> <name pos:start="147:55" pos:end="147:55">b</name> <operator pos:start="147:57" pos:end="147:57">+</operator> <operator pos:start="147:59" pos:end="147:59">(</operator><literal type="number" pos:start="147:60" pos:end="147:62">257</literal> <operator pos:start="147:64" pos:end="147:65">&lt;&lt;</operator> <operator pos:start="147:67" pos:end="147:67">(</operator><name pos:start="147:68" pos:end="147:80">RGB2YUV_SHIFT</name> <operator pos:start="147:82" pos:end="147:82">-</operator> <literal type="number" pos:start="147:84" pos:end="147:84">1</literal><operator pos:start="147:85" pos:end="147:85">)</operator><operator pos:start="147:86" pos:end="147:86">)</operator><operator pos:start="147:87" pos:end="147:87">)</operator> <operator pos:start="147:89" pos:end="147:90">&gt;&gt;</operator> <name pos:start="147:92" pos:end="147:104">RGB2YUV_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:106"><expr pos:start="149:13" pos:end="149:105"><name pos:start="149:13" pos:end="149:13">v</name> <operator pos:start="149:15" pos:end="149:15">=</operator> <call pos:start="149:17" pos:end="149:105"><name pos:start="149:17" pos:end="149:29">av_clip_uint8</name><argument_list pos:start="149:30" pos:end="149:105">(<argument pos:start="149:31" pos:end="149:104"><expr pos:start="149:31" pos:end="149:104"><operator pos:start="149:31" pos:end="149:31">(</operator><name pos:start="149:32" pos:end="149:33">RV</name> <operator pos:start="149:35" pos:end="149:35">*</operator> <name pos:start="149:37" pos:end="149:37">r</name> <operator pos:start="149:39" pos:end="149:39">+</operator> <name pos:start="149:41" pos:end="149:42">GV</name> <operator pos:start="149:44" pos:end="149:44">*</operator> <name pos:start="149:46" pos:end="149:46">g</name> <operator pos:start="149:48" pos:end="149:48">+</operator> <name pos:start="149:50" pos:end="149:51">BV</name> <operator pos:start="149:53" pos:end="149:53">*</operator> <name pos:start="149:55" pos:end="149:55">b</name> <operator pos:start="149:57" pos:end="149:57">+</operator> <operator pos:start="149:59" pos:end="149:59">(</operator><literal type="number" pos:start="149:60" pos:end="149:62">257</literal> <operator pos:start="149:64" pos:end="149:65">&lt;&lt;</operator> <operator pos:start="149:67" pos:end="149:67">(</operator><name pos:start="149:68" pos:end="149:80">RGB2YUV_SHIFT</name> <operator pos:start="149:82" pos:end="149:82">-</operator> <literal type="number" pos:start="149:84" pos:end="149:84">1</literal><operator pos:start="149:85" pos:end="149:85">)</operator><operator pos:start="149:86" pos:end="149:86">)</operator><operator pos:start="149:87" pos:end="149:87">)</operator> <operator pos:start="149:89" pos:end="149:90">&gt;&gt;</operator> <name pos:start="149:92" pos:end="149:104">RGB2YUV_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:58"><expr pos:start="151:13" pos:end="151:57"><name pos:start="151:13" pos:end="151:25"><name pos:start="151:13" pos:end="151:13">c</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:22">pal_yuv</name><index pos:start="151:23" pos:end="151:25">[<expr pos:start="151:24" pos:end="151:24"><name pos:start="151:24" pos:end="151:24">i</name></expr>]</index></name><operator pos:start="151:26" pos:end="151:26">=</operator> <name pos:start="151:28" pos:end="151:28">y</name> <operator pos:start="151:30" pos:end="151:30">+</operator> <operator pos:start="151:32" pos:end="151:32">(</operator><name pos:start="151:33" pos:end="151:33">u</name><operator pos:start="151:34" pos:end="151:35">&lt;&lt;</operator><literal type="number" pos:start="151:36" pos:end="151:36">8</literal><operator pos:start="151:37" pos:end="151:37">)</operator> <operator pos:start="151:39" pos:end="151:39">+</operator> <operator pos:start="151:41" pos:end="151:41">(</operator><name pos:start="151:42" pos:end="151:42">v</name><operator pos:start="151:43" pos:end="151:44">&lt;&lt;</operator><literal type="number" pos:start="151:45" pos:end="151:46">16</literal><operator pos:start="151:47" pos:end="151:47">)</operator> <operator pos:start="151:49" pos:end="151:49">+</operator> <operator pos:start="151:51" pos:end="151:51">(</operator><name pos:start="151:52" pos:end="151:52">a</name><operator pos:start="151:53" pos:end="151:54">&lt;&lt;</operator><literal type="number" pos:start="151:55" pos:end="151:56">24</literal><operator pos:start="151:57" pos:end="151:57">)</operator></expr>;</expr_stmt>



            <switch pos:start="155:13" pos:end="205:13">switch <condition pos:start="155:20" pos:end="155:33">(<expr pos:start="155:21" pos:end="155:32"><name pos:start="155:21" pos:end="155:32"><name pos:start="155:21" pos:end="155:21">c</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:32">dstFormat</name></name></expr>)</condition> <block pos:start="155:35" pos:end="205:13">{<block_content pos:start="157:13" pos:end="203:63">

            <case pos:start="157:13" pos:end="160:0">case <expr pos:start="157:18" pos:end="157:33"><name pos:start="157:18" pos:end="157:33">AV_PIX_FMT_BGR32</name></expr>:</case>

<cpp:if pos:start="159:1" pos:end="159:19">#<cpp:directive pos:start="159:2" pos:end="159:3">if</cpp:directive> <expr pos:start="159:5" pos:end="159:19"><operator pos:start="159:5" pos:end="159:5">!</operator><name pos:start="159:6" pos:end="159:19">HAVE_BIGENDIAN</name></expr></cpp:if>

            <case pos:start="161:13" pos:end="164:0">case <expr pos:start="161:18" pos:end="161:33"><name pos:start="161:18" pos:end="161:33">AV_PIX_FMT_RGB24</name></expr>:</case>

<cpp:endif pos:start="163:1" pos:end="163:6">#<cpp:directive pos:start="163:2" pos:end="163:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="165:17" pos:end="165:63"><expr pos:start="165:17" pos:end="165:62"><name pos:start="165:17" pos:end="165:29"><name pos:start="165:17" pos:end="165:17">c</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:26">pal_rgb</name><index pos:start="165:27" pos:end="165:29">[<expr pos:start="165:28" pos:end="165:28"><name pos:start="165:28" pos:end="165:28">i</name></expr>]</index></name><operator pos:start="165:30" pos:end="165:30">=</operator>  <name pos:start="165:33" pos:end="165:33">r</name> <operator pos:start="165:35" pos:end="165:35">+</operator> <operator pos:start="165:37" pos:end="165:37">(</operator><name pos:start="165:38" pos:end="165:38">g</name><operator pos:start="165:39" pos:end="165:40">&lt;&lt;</operator><literal type="number" pos:start="165:41" pos:end="165:41">8</literal><operator pos:start="165:42" pos:end="165:42">)</operator> <operator pos:start="165:44" pos:end="165:44">+</operator> <operator pos:start="165:46" pos:end="165:46">(</operator><name pos:start="165:47" pos:end="165:47">b</name><operator pos:start="165:48" pos:end="165:49">&lt;&lt;</operator><literal type="number" pos:start="165:50" pos:end="165:51">16</literal><operator pos:start="165:52" pos:end="165:52">)</operator> <operator pos:start="165:54" pos:end="165:54">+</operator> <operator pos:start="165:56" pos:end="165:56">(</operator><name pos:start="165:57" pos:end="165:57">a</name><operator pos:start="165:58" pos:end="165:59">&lt;&lt;</operator><literal type="number" pos:start="165:60" pos:end="165:61">24</literal><operator pos:start="165:62" pos:end="165:62">)</operator></expr>;</expr_stmt>

                <break pos:start="167:17" pos:end="167:22">break;</break>

            <case pos:start="169:13" pos:end="172:0">case <expr pos:start="169:18" pos:end="169:35"><name pos:start="169:18" pos:end="169:35">AV_PIX_FMT_BGR32_1</name></expr>:</case>

<cpp:if pos:start="171:1" pos:end="171:18">#<cpp:directive pos:start="171:2" pos:end="171:3">if</cpp:directive> <expr pos:start="171:5" pos:end="171:18"><name pos:start="171:5" pos:end="171:18">HAVE_BIGENDIAN</name></expr></cpp:if>

            <case pos:start="173:13" pos:end="176:0">case <expr pos:start="173:18" pos:end="173:33"><name pos:start="173:18" pos:end="173:33">AV_PIX_FMT_BGR24</name></expr>:</case>

<cpp:endif pos:start="175:1" pos:end="175:6">#<cpp:directive pos:start="175:2" pos:end="175:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="177:17" pos:end="177:62"><expr pos:start="177:17" pos:end="177:61"><name pos:start="177:17" pos:end="177:29"><name pos:start="177:17" pos:end="177:17">c</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:26">pal_rgb</name><index pos:start="177:27" pos:end="177:29">[<expr pos:start="177:28" pos:end="177:28"><name pos:start="177:28" pos:end="177:28">i</name></expr>]</index></name><operator pos:start="177:30" pos:end="177:30">=</operator> <name pos:start="177:32" pos:end="177:32">a</name> <operator pos:start="177:34" pos:end="177:34">+</operator> <operator pos:start="177:36" pos:end="177:36">(</operator><name pos:start="177:37" pos:end="177:37">r</name><operator pos:start="177:38" pos:end="177:39">&lt;&lt;</operator><literal type="number" pos:start="177:40" pos:end="177:40">8</literal><operator pos:start="177:41" pos:end="177:41">)</operator> <operator pos:start="177:43" pos:end="177:43">+</operator> <operator pos:start="177:45" pos:end="177:45">(</operator><name pos:start="177:46" pos:end="177:46">g</name><operator pos:start="177:47" pos:end="177:48">&lt;&lt;</operator><literal type="number" pos:start="177:49" pos:end="177:50">16</literal><operator pos:start="177:51" pos:end="177:51">)</operator> <operator pos:start="177:53" pos:end="177:53">+</operator> <operator pos:start="177:55" pos:end="177:55">(</operator><name pos:start="177:56" pos:end="177:56">b</name><operator pos:start="177:57" pos:end="177:58">&lt;&lt;</operator><literal type="number" pos:start="177:59" pos:end="177:60">24</literal><operator pos:start="177:61" pos:end="177:61">)</operator></expr>;</expr_stmt>

                <break pos:start="179:17" pos:end="179:22">break;</break>

            <case pos:start="181:13" pos:end="184:0">case <expr pos:start="181:18" pos:end="181:35"><name pos:start="181:18" pos:end="181:35">AV_PIX_FMT_RGB32_1</name></expr>:</case>

<cpp:if pos:start="183:1" pos:end="183:18">#<cpp:directive pos:start="183:2" pos:end="183:3">if</cpp:directive> <expr pos:start="183:5" pos:end="183:18"><name pos:start="183:5" pos:end="183:18">HAVE_BIGENDIAN</name></expr></cpp:if>

            <case pos:start="185:13" pos:end="188:0">case <expr pos:start="185:18" pos:end="185:33"><name pos:start="185:18" pos:end="185:33">AV_PIX_FMT_RGB24</name></expr>:</case>

<cpp:endif pos:start="187:1" pos:end="187:6">#<cpp:directive pos:start="187:2" pos:end="187:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="189:17" pos:end="189:62"><expr pos:start="189:17" pos:end="189:61"><name pos:start="189:17" pos:end="189:29"><name pos:start="189:17" pos:end="189:17">c</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:26">pal_rgb</name><index pos:start="189:27" pos:end="189:29">[<expr pos:start="189:28" pos:end="189:28"><name pos:start="189:28" pos:end="189:28">i</name></expr>]</index></name><operator pos:start="189:30" pos:end="189:30">=</operator> <name pos:start="189:32" pos:end="189:32">a</name> <operator pos:start="189:34" pos:end="189:34">+</operator> <operator pos:start="189:36" pos:end="189:36">(</operator><name pos:start="189:37" pos:end="189:37">b</name><operator pos:start="189:38" pos:end="189:39">&lt;&lt;</operator><literal type="number" pos:start="189:40" pos:end="189:40">8</literal><operator pos:start="189:41" pos:end="189:41">)</operator> <operator pos:start="189:43" pos:end="189:43">+</operator> <operator pos:start="189:45" pos:end="189:45">(</operator><name pos:start="189:46" pos:end="189:46">g</name><operator pos:start="189:47" pos:end="189:48">&lt;&lt;</operator><literal type="number" pos:start="189:49" pos:end="189:50">16</literal><operator pos:start="189:51" pos:end="189:51">)</operator> <operator pos:start="189:53" pos:end="189:53">+</operator> <operator pos:start="189:55" pos:end="189:55">(</operator><name pos:start="189:56" pos:end="189:56">r</name><operator pos:start="189:57" pos:end="189:58">&lt;&lt;</operator><literal type="number" pos:start="189:59" pos:end="189:60">24</literal><operator pos:start="189:61" pos:end="189:61">)</operator></expr>;</expr_stmt>

                <break pos:start="191:17" pos:end="191:22">break;</break>

            <case pos:start="193:13" pos:end="196:0">case <expr pos:start="193:18" pos:end="193:33"><name pos:start="193:18" pos:end="193:33">AV_PIX_FMT_RGB32</name></expr>:</case>

<cpp:if pos:start="195:1" pos:end="195:19">#<cpp:directive pos:start="195:2" pos:end="195:3">if</cpp:directive> <expr pos:start="195:5" pos:end="195:19"><operator pos:start="195:5" pos:end="195:5">!</operator><name pos:start="195:6" pos:end="195:19">HAVE_BIGENDIAN</name></expr></cpp:if>

            <case pos:start="197:13" pos:end="200:0">case <expr pos:start="197:18" pos:end="197:33"><name pos:start="197:18" pos:end="197:33">AV_PIX_FMT_BGR24</name></expr>:</case>

<cpp:endif pos:start="199:1" pos:end="199:6">#<cpp:directive pos:start="199:2" pos:end="199:6">endif</cpp:directive></cpp:endif>

            <default pos:start="201:13" pos:end="201:20">default:</default>

                <expr_stmt pos:start="203:17" pos:end="203:63"><expr pos:start="203:17" pos:end="203:62"><name pos:start="203:17" pos:end="203:29"><name pos:start="203:17" pos:end="203:17">c</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:26">pal_rgb</name><index pos:start="203:27" pos:end="203:29">[<expr pos:start="203:28" pos:end="203:28"><name pos:start="203:28" pos:end="203:28">i</name></expr>]</index></name><operator pos:start="203:30" pos:end="203:30">=</operator>  <name pos:start="203:33" pos:end="203:33">b</name> <operator pos:start="203:35" pos:end="203:35">+</operator> <operator pos:start="203:37" pos:end="203:37">(</operator><name pos:start="203:38" pos:end="203:38">g</name><operator pos:start="203:39" pos:end="203:40">&lt;&lt;</operator><literal type="number" pos:start="203:41" pos:end="203:41">8</literal><operator pos:start="203:42" pos:end="203:42">)</operator> <operator pos:start="203:44" pos:end="203:44">+</operator> <operator pos:start="203:46" pos:end="203:46">(</operator><name pos:start="203:47" pos:end="203:47">r</name><operator pos:start="203:48" pos:end="203:49">&lt;&lt;</operator><literal type="number" pos:start="203:50" pos:end="203:51">16</literal><operator pos:start="203:52" pos:end="203:52">)</operator> <operator pos:start="203:54" pos:end="203:54">+</operator> <operator pos:start="203:56" pos:end="203:56">(</operator><name pos:start="203:57" pos:end="203:57">a</name><operator pos:start="203:58" pos:end="203:59">&lt;&lt;</operator><literal type="number" pos:start="203:60" pos:end="203:61">24</literal><operator pos:start="203:62" pos:end="203:62">)</operator></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="213:5" pos:end="237:5"><if pos:start="213:5" pos:end="237:5">if <condition pos:start="213:8" pos:end="213:63">(<expr pos:start="213:9" pos:end="213:62"><name pos:start="213:9" pos:end="213:20"><name pos:start="213:9" pos:end="213:9">c</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:20">src0Alpha</name></name> <operator pos:start="213:22" pos:end="213:23">&amp;&amp;</operator> <operator pos:start="213:25" pos:end="213:25">!</operator><name pos:start="213:26" pos:end="213:37"><name pos:start="213:26" pos:end="213:26">c</name><operator pos:start="213:27" pos:end="213:28">-&gt;</operator><name pos:start="213:29" pos:end="213:37">dst0Alpha</name></name> <operator pos:start="213:39" pos:end="213:40">&amp;&amp;</operator> <call pos:start="213:42" pos:end="213:62"><name pos:start="213:42" pos:end="213:48">isALPHA</name><argument_list pos:start="213:49" pos:end="213:62">(<argument pos:start="213:50" pos:end="213:61"><expr pos:start="213:50" pos:end="213:61"><name pos:start="213:50" pos:end="213:61"><name pos:start="213:50" pos:end="213:50">c</name><operator pos:start="213:51" pos:end="213:52">-&gt;</operator><name pos:start="213:53" pos:end="213:61">dstFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="213:65" pos:end="237:5">{<block_content pos:start="215:9" pos:end="235:23">

        <decl_stmt pos:start="215:9" pos:end="215:22"><decl pos:start="215:9" pos:end="215:21"><type pos:start="215:9" pos:end="215:17"><name pos:start="215:9" pos:end="215:15">uint8_t</name> <modifier pos:start="215:17" pos:end="215:17">*</modifier></type><name pos:start="215:18" pos:end="215:21">base</name></decl>;</decl_stmt>

        <decl_stmt pos:start="217:9" pos:end="217:16"><decl pos:start="217:9" pos:end="217:13"><type pos:start="217:9" pos:end="217:11"><name pos:start="217:9" pos:end="217:11">int</name></type> <name pos:start="217:13" pos:end="217:13">x</name></decl>,<decl pos:start="217:15" pos:end="217:15"><type ref="prev" pos:start="217:9" pos:end="217:11"/><name pos:start="217:15" pos:end="217:15">y</name></decl>;</decl_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:67"><expr pos:start="219:9" pos:end="219:66"><name pos:start="219:9" pos:end="219:16">rgb0_tmp</name> <operator pos:start="219:18" pos:end="219:18">=</operator> <call pos:start="219:20" pos:end="219:66"><name pos:start="219:20" pos:end="219:28">av_malloc</name><argument_list pos:start="219:29" pos:end="219:66">(<argument pos:start="219:30" pos:end="219:65"><expr pos:start="219:30" pos:end="219:65"><call pos:start="219:30" pos:end="219:48"><name pos:start="219:30" pos:end="219:34">FFABS</name><argument_list pos:start="219:35" pos:end="219:48">(<argument pos:start="219:36" pos:end="219:47"><expr pos:start="219:36" pos:end="219:47"><name pos:start="219:36" pos:end="219:47"><name pos:start="219:36" pos:end="219:44">srcStride</name><index pos:start="219:45" pos:end="219:47">[<expr pos:start="219:46" pos:end="219:46"><literal type="number" pos:start="219:46" pos:end="219:46">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="219:50" pos:end="219:50">*</operator> <name pos:start="219:52" pos:end="219:60">srcSliceH</name> <operator pos:start="219:62" pos:end="219:62">+</operator> <literal type="number" pos:start="219:64" pos:end="219:65">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:85"><expr pos:start="221:9" pos:end="221:84"><name pos:start="221:9" pos:end="221:12">base</name> <operator pos:start="221:14" pos:end="221:14">=</operator> <ternary pos:start="221:16" pos:end="221:84"><condition pos:start="221:16" pos:end="221:33"><expr pos:start="221:16" pos:end="221:31"><name pos:start="221:16" pos:end="221:27"><name pos:start="221:16" pos:end="221:24">srcStride</name><index pos:start="221:25" pos:end="221:27">[<expr pos:start="221:26" pos:end="221:26"><literal type="number" pos:start="221:26" pos:end="221:26">0</literal></expr>]</index></name> <operator pos:start="221:29" pos:end="221:29">&lt;</operator> <literal type="number" pos:start="221:31" pos:end="221:31">0</literal></expr> ?</condition><then pos:start="221:35" pos:end="221:73"> <expr pos:start="221:35" pos:end="221:73"><name pos:start="221:35" pos:end="221:42">rgb0_tmp</name> <operator pos:start="221:44" pos:end="221:44">-</operator> <name pos:start="221:46" pos:end="221:57"><name pos:start="221:46" pos:end="221:54">srcStride</name><index pos:start="221:55" pos:end="221:57">[<expr pos:start="221:56" pos:end="221:56"><literal type="number" pos:start="221:56" pos:end="221:56">0</literal></expr>]</index></name> <operator pos:start="221:59" pos:end="221:59">*</operator> <operator pos:start="221:61" pos:end="221:61">(</operator><name pos:start="221:62" pos:end="221:70">srcSliceH</name><operator pos:start="221:71" pos:end="221:71">-</operator><literal type="number" pos:start="221:72" pos:end="221:72">1</literal><operator pos:start="221:73" pos:end="221:73">)</operator></expr> </then><else pos:start="221:75" pos:end="221:84">: <expr pos:start="221:77" pos:end="221:84"><name pos:start="221:77" pos:end="221:84">rgb0_tmp</name></expr></else></ternary></expr>;</expr_stmt>

        <for pos:start="223:9" pos:end="233:9">for <control pos:start="223:13" pos:end="223:35">(<init pos:start="223:14" pos:end="223:17"><expr pos:start="223:14" pos:end="223:16"><name pos:start="223:14" pos:end="223:14">y</name><operator pos:start="223:15" pos:end="223:15">=</operator><literal type="number" pos:start="223:16" pos:end="223:16">0</literal></expr>;</init> <condition pos:start="223:19" pos:end="223:30"><expr pos:start="223:19" pos:end="223:29"><name pos:start="223:19" pos:end="223:19">y</name><operator pos:start="223:20" pos:end="223:20">&lt;</operator><name pos:start="223:21" pos:end="223:29">srcSliceH</name></expr>;</condition> <incr pos:start="223:32" pos:end="223:34"><expr pos:start="223:32" pos:end="223:34"><name pos:start="223:32" pos:end="223:32">y</name><operator pos:start="223:33" pos:end="223:34">++</operator></expr></incr>)</control><block pos:start="223:36" pos:end="233:9">{<block_content pos:start="225:13" pos:end="231:13">

            <expr_stmt pos:start="225:13" pos:end="225:79"><expr pos:start="225:13" pos:end="225:78"><call pos:start="225:13" pos:end="225:78"><name pos:start="225:13" pos:end="225:18">memcpy</name><argument_list pos:start="225:19" pos:end="225:78">(<argument pos:start="225:20" pos:end="225:40"><expr pos:start="225:20" pos:end="225:40"><name pos:start="225:20" pos:end="225:23">base</name> <operator pos:start="225:25" pos:end="225:25">+</operator> <name pos:start="225:27" pos:end="225:38"><name pos:start="225:27" pos:end="225:35">srcStride</name><index pos:start="225:36" pos:end="225:38">[<expr pos:start="225:37" pos:end="225:37"><literal type="number" pos:start="225:37" pos:end="225:37">0</literal></expr>]</index></name><operator pos:start="225:39" pos:end="225:39">*</operator><name pos:start="225:40" pos:end="225:40">y</name></expr></argument>, <argument pos:start="225:43" pos:end="225:66"><expr pos:start="225:43" pos:end="225:66"><name pos:start="225:43" pos:end="225:49"><name pos:start="225:43" pos:end="225:46">src2</name><index pos:start="225:47" pos:end="225:49">[<expr pos:start="225:48" pos:end="225:48"><literal type="number" pos:start="225:48" pos:end="225:48">0</literal></expr>]</index></name> <operator pos:start="225:51" pos:end="225:51">+</operator> <name pos:start="225:53" pos:end="225:64"><name pos:start="225:53" pos:end="225:61">srcStride</name><index pos:start="225:62" pos:end="225:64">[<expr pos:start="225:63" pos:end="225:63"><literal type="number" pos:start="225:63" pos:end="225:63">0</literal></expr>]</index></name><operator pos:start="225:65" pos:end="225:65">*</operator><name pos:start="225:66" pos:end="225:66">y</name></expr></argument>, <argument pos:start="225:69" pos:end="225:77"><expr pos:start="225:69" pos:end="225:77"><literal type="number" pos:start="225:69" pos:end="225:69">4</literal><operator pos:start="225:70" pos:end="225:70">*</operator><name pos:start="225:71" pos:end="225:77"><name pos:start="225:71" pos:end="225:71">c</name><operator pos:start="225:72" pos:end="225:73">-&gt;</operator><name pos:start="225:74" pos:end="225:77">srcW</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="227:13" pos:end="231:13">for <control pos:start="227:17" pos:end="227:53">(<init pos:start="227:18" pos:end="227:34"><expr pos:start="227:18" pos:end="227:33"><name pos:start="227:18" pos:end="227:18">x</name><operator pos:start="227:19" pos:end="227:19">=</operator><name pos:start="227:20" pos:end="227:31"><name pos:start="227:20" pos:end="227:20">c</name><operator pos:start="227:21" pos:end="227:22">-&gt;</operator><name pos:start="227:23" pos:end="227:31">src0Alpha</name></name><operator pos:start="227:32" pos:end="227:32">-</operator><literal type="number" pos:start="227:33" pos:end="227:33">1</literal></expr>;</init> <condition pos:start="227:36" pos:end="227:47"><expr pos:start="227:36" pos:end="227:46"><name pos:start="227:36" pos:end="227:36">x</name><operator pos:start="227:37" pos:end="227:37">&lt;</operator><literal type="number" pos:start="227:38" pos:end="227:38">4</literal><operator pos:start="227:39" pos:end="227:39">*</operator><name pos:start="227:40" pos:end="227:46"><name pos:start="227:40" pos:end="227:40">c</name><operator pos:start="227:41" pos:end="227:42">-&gt;</operator><name pos:start="227:43" pos:end="227:46">srcW</name></name></expr>;</condition> <incr pos:start="227:49" pos:end="227:52"><expr pos:start="227:49" pos:end="227:52"><name pos:start="227:49" pos:end="227:49">x</name><operator pos:start="227:50" pos:end="227:51">+=</operator><literal type="number" pos:start="227:52" pos:end="227:52">4</literal></expr></incr>)</control> <block pos:start="227:55" pos:end="231:13">{<block_content pos:start="229:17" pos:end="229:49">

                <expr_stmt pos:start="229:17" pos:end="229:49"><expr pos:start="229:17" pos:end="229:48"><name pos:start="229:17" pos:end="229:41"><name pos:start="229:17" pos:end="229:20">base</name><index pos:start="229:21" pos:end="229:41">[ <expr pos:start="229:23" pos:end="229:40"><name pos:start="229:23" pos:end="229:34"><name pos:start="229:23" pos:end="229:31">srcStride</name><index pos:start="229:32" pos:end="229:34">[<expr pos:start="229:33" pos:end="229:33"><literal type="number" pos:start="229:33" pos:end="229:33">0</literal></expr>]</index></name><operator pos:start="229:35" pos:end="229:35">*</operator><name pos:start="229:36" pos:end="229:36">y</name> <operator pos:start="229:38" pos:end="229:38">+</operator> <name pos:start="229:40" pos:end="229:40">x</name></expr>]</index></name> <operator pos:start="229:43" pos:end="229:43">=</operator> <literal type="number" pos:start="229:45" pos:end="229:48">0xFF</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="235:9" pos:end="235:23"><expr pos:start="235:9" pos:end="235:22"><name pos:start="235:9" pos:end="235:15"><name pos:start="235:9" pos:end="235:12">src2</name><index pos:start="235:13" pos:end="235:15">[<expr pos:start="235:14" pos:end="235:14"><literal type="number" pos:start="235:14" pos:end="235:14">0</literal></expr>]</index></name> <operator pos:start="235:17" pos:end="235:17">=</operator> <name pos:start="235:19" pos:end="235:22">base</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="241:5" pos:end="241:51">// copy strides, so they can safely be modified</comment>

    <if_stmt pos:start="243:5" pos:end="327:5"><if pos:start="243:5" pos:end="275:5">if <condition pos:start="243:8" pos:end="243:25">(<expr pos:start="243:9" pos:end="243:24"><name pos:start="243:9" pos:end="243:19"><name pos:start="243:9" pos:end="243:9">c</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:19">sliceDir</name></name> <operator pos:start="243:21" pos:end="243:22">==</operator> <literal type="number" pos:start="243:24" pos:end="243:24">1</literal></expr>)</condition> <block pos:start="243:27" pos:end="275:5">{<block_content pos:start="247:9" pos:end="273:38">

        <comment type="line" pos:start="245:9" pos:end="245:39">// slices go from top to bottom</comment>

        <decl_stmt pos:start="247:9" pos:end="249:45"><decl pos:start="247:9" pos:end="249:44"><type pos:start="247:9" pos:end="247:11"><name pos:start="247:9" pos:end="247:11">int</name></type> <name pos:start="247:13" pos:end="247:25"><name pos:start="247:13" pos:end="247:22">srcStride2</name><index pos:start="247:23" pos:end="247:25">[<expr pos:start="247:24" pos:end="247:24"><literal type="number" pos:start="247:24" pos:end="247:24">4</literal></expr>]</index></name> <init pos:start="247:27" pos:end="249:44">= <expr pos:start="247:29" pos:end="249:44"><block pos:start="247:29" pos:end="249:44">{ <expr pos:start="247:31" pos:end="247:42"><name pos:start="247:31" pos:end="247:42"><name pos:start="247:31" pos:end="247:39">srcStride</name><index pos:start="247:40" pos:end="247:42">[<expr pos:start="247:41" pos:end="247:41"><literal type="number" pos:start="247:41" pos:end="247:41">0</literal></expr>]</index></name></expr>, <expr pos:start="247:45" pos:end="247:56"><name pos:start="247:45" pos:end="247:56"><name pos:start="247:45" pos:end="247:53">srcStride</name><index pos:start="247:54" pos:end="247:56">[<expr pos:start="247:55" pos:end="247:55"><literal type="number" pos:start="247:55" pos:end="247:55">1</literal></expr>]</index></name></expr>, <expr pos:start="247:59" pos:end="247:70"><name pos:start="247:59" pos:end="247:70"><name pos:start="247:59" pos:end="247:67">srcStride</name><index pos:start="247:68" pos:end="247:70">[<expr pos:start="247:69" pos:end="247:69"><literal type="number" pos:start="247:69" pos:end="247:69">2</literal></expr>]</index></name></expr>,

                              <expr pos:start="249:31" pos:end="249:42"><name pos:start="249:31" pos:end="249:42"><name pos:start="249:31" pos:end="249:39">srcStride</name><index pos:start="249:40" pos:end="249:42">[<expr pos:start="249:41" pos:end="249:41"><literal type="number" pos:start="249:41" pos:end="249:41">3</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="251:9" pos:end="253:45"><decl pos:start="251:9" pos:end="253:44"><type pos:start="251:9" pos:end="251:11"><name pos:start="251:9" pos:end="251:11">int</name></type> <name pos:start="251:13" pos:end="251:25"><name pos:start="251:13" pos:end="251:22">dstStride2</name><index pos:start="251:23" pos:end="251:25">[<expr pos:start="251:24" pos:end="251:24"><literal type="number" pos:start="251:24" pos:end="251:24">4</literal></expr>]</index></name> <init pos:start="251:27" pos:end="253:44">= <expr pos:start="251:29" pos:end="253:44"><block pos:start="251:29" pos:end="253:44">{ <expr pos:start="251:31" pos:end="251:42"><name pos:start="251:31" pos:end="251:42"><name pos:start="251:31" pos:end="251:39">dstStride</name><index pos:start="251:40" pos:end="251:42">[<expr pos:start="251:41" pos:end="251:41"><literal type="number" pos:start="251:41" pos:end="251:41">0</literal></expr>]</index></name></expr>, <expr pos:start="251:45" pos:end="251:56"><name pos:start="251:45" pos:end="251:56"><name pos:start="251:45" pos:end="251:53">dstStride</name><index pos:start="251:54" pos:end="251:56">[<expr pos:start="251:55" pos:end="251:55"><literal type="number" pos:start="251:55" pos:end="251:55">1</literal></expr>]</index></name></expr>, <expr pos:start="251:59" pos:end="251:70"><name pos:start="251:59" pos:end="251:70"><name pos:start="251:59" pos:end="251:67">dstStride</name><index pos:start="251:68" pos:end="251:70">[<expr pos:start="251:69" pos:end="251:69"><literal type="number" pos:start="251:69" pos:end="251:69">2</literal></expr>]</index></name></expr>,

                              <expr pos:start="253:31" pos:end="253:42"><name pos:start="253:31" pos:end="253:42"><name pos:start="253:31" pos:end="253:39">dstStride</name><index pos:start="253:40" pos:end="253:42">[<expr pos:start="253:41" pos:end="253:41"><literal type="number" pos:start="253:41" pos:end="253:41">3</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="257:9" pos:end="257:38"><expr pos:start="257:9" pos:end="257:37"><call pos:start="257:9" pos:end="257:37"><name pos:start="257:9" pos:end="257:17">reset_ptr</name><argument_list pos:start="257:18" pos:end="257:37">(<argument pos:start="257:19" pos:end="257:22"><expr pos:start="257:19" pos:end="257:22"><name pos:start="257:19" pos:end="257:22">src2</name></expr></argument>, <argument pos:start="257:25" pos:end="257:36"><expr pos:start="257:25" pos:end="257:36"><name pos:start="257:25" pos:end="257:36"><name pos:start="257:25" pos:end="257:25">c</name><operator pos:start="257:26" pos:end="257:27">-&gt;</operator><name pos:start="257:28" pos:end="257:36">srcFormat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:45"><expr pos:start="259:9" pos:end="259:44"><call pos:start="259:9" pos:end="259:44"><name pos:start="259:9" pos:end="259:17">reset_ptr</name><argument_list pos:start="259:18" pos:end="259:44">(<argument pos:start="259:19" pos:end="259:29"><expr pos:start="259:19" pos:end="259:29"><operator pos:start="259:19" pos:end="259:19">(</operator><name pos:start="259:20" pos:end="259:23">void</name><operator pos:start="259:24" pos:end="259:24">*</operator><operator pos:start="259:25" pos:end="259:25">)</operator><name pos:start="259:26" pos:end="259:29">dst2</name></expr></argument>, <argument pos:start="259:32" pos:end="259:43"><expr pos:start="259:32" pos:end="259:43"><name pos:start="259:32" pos:end="259:43"><name pos:start="259:32" pos:end="259:32">c</name><operator pos:start="259:33" pos:end="259:34">-&gt;</operator><name pos:start="259:35" pos:end="259:43">dstFormat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="263:9" pos:end="263:51">/* reset slice direction at end of frame */</comment>

        <if_stmt pos:start="265:9" pos:end="267:28"><if pos:start="265:9" pos:end="267:28">if <condition pos:start="265:12" pos:end="265:45">(<expr pos:start="265:13" pos:end="265:44"><name pos:start="265:13" pos:end="265:21">srcSliceY</name> <operator pos:start="265:23" pos:end="265:23">+</operator> <name pos:start="265:25" pos:end="265:33">srcSliceH</name> <operator pos:start="265:35" pos:end="265:36">==</operator> <name pos:start="265:38" pos:end="265:44"><name pos:start="265:38" pos:end="265:38">c</name><operator pos:start="265:39" pos:end="265:40">-&gt;</operator><name pos:start="265:41" pos:end="265:44">srcH</name></name></expr>)</condition><block type="pseudo" pos:start="267:13" pos:end="267:28"><block_content pos:start="267:13" pos:end="267:28">

            <expr_stmt pos:start="267:13" pos:end="267:28"><expr pos:start="267:13" pos:end="267:27"><name pos:start="267:13" pos:end="267:23"><name pos:start="267:13" pos:end="267:13">c</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:23">sliceDir</name></name> <operator pos:start="267:25" pos:end="267:25">=</operator> <literal type="number" pos:start="267:27" pos:end="267:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="271:9" pos:end="273:38"><expr pos:start="271:9" pos:end="273:37"><name pos:start="271:9" pos:end="271:11">ret</name> <operator pos:start="271:13" pos:end="271:13">=</operator> <call pos:start="271:15" pos:end="273:37"><name pos:start="271:15" pos:end="271:24"><name pos:start="271:15" pos:end="271:15">c</name><operator pos:start="271:16" pos:end="271:17">-&gt;</operator><name pos:start="271:18" pos:end="271:24">swScale</name></name><argument_list pos:start="271:25" pos:end="273:37">(<argument pos:start="271:26" pos:end="271:26"><expr pos:start="271:26" pos:end="271:26"><name pos:start="271:26" pos:end="271:26">c</name></expr></argument>, <argument pos:start="271:29" pos:end="271:32"><expr pos:start="271:29" pos:end="271:32"><name pos:start="271:29" pos:end="271:32">src2</name></expr></argument>, <argument pos:start="271:35" pos:end="271:44"><expr pos:start="271:35" pos:end="271:44"><name pos:start="271:35" pos:end="271:44">srcStride2</name></expr></argument>, <argument pos:start="271:47" pos:end="271:55"><expr pos:start="271:47" pos:end="271:55"><name pos:start="271:47" pos:end="271:55">srcSliceY</name></expr></argument>, <argument pos:start="271:58" pos:end="271:66"><expr pos:start="271:58" pos:end="271:66"><name pos:start="271:58" pos:end="271:66">srcSliceH</name></expr></argument>, <argument pos:start="271:69" pos:end="271:72"><expr pos:start="271:69" pos:end="271:72"><name pos:start="271:69" pos:end="271:72">dst2</name></expr></argument>,

                          <argument pos:start="273:27" pos:end="273:36"><expr pos:start="273:27" pos:end="273:36"><name pos:start="273:27" pos:end="273:36">dstStride2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="275:7" pos:end="327:5">else <block pos:start="275:12" pos:end="327:5">{<block_content pos:start="279:9" pos:end="325:55">

        <comment type="line" pos:start="277:9" pos:end="277:71">// slices go from bottom to top =&gt; we flip the image internally</comment>

        <decl_stmt pos:start="279:9" pos:end="281:46"><decl pos:start="279:9" pos:end="281:45"><type pos:start="279:9" pos:end="279:11"><name pos:start="279:9" pos:end="279:11">int</name></type> <name pos:start="279:13" pos:end="279:25"><name pos:start="279:13" pos:end="279:22">srcStride2</name><index pos:start="279:23" pos:end="279:25">[<expr pos:start="279:24" pos:end="279:24"><literal type="number" pos:start="279:24" pos:end="279:24">4</literal></expr>]</index></name> <init pos:start="279:27" pos:end="281:45">= <expr pos:start="279:29" pos:end="281:45"><block pos:start="279:29" pos:end="281:45">{ <expr pos:start="279:31" pos:end="279:43"><operator pos:start="279:31" pos:end="279:31">-</operator><name pos:start="279:32" pos:end="279:43"><name pos:start="279:32" pos:end="279:40">srcStride</name><index pos:start="279:41" pos:end="279:43">[<expr pos:start="279:42" pos:end="279:42"><literal type="number" pos:start="279:42" pos:end="279:42">0</literal></expr>]</index></name></expr>, <expr pos:start="279:46" pos:end="279:58"><operator pos:start="279:46" pos:end="279:46">-</operator><name pos:start="279:47" pos:end="279:58"><name pos:start="279:47" pos:end="279:55">srcStride</name><index pos:start="279:56" pos:end="279:58">[<expr pos:start="279:57" pos:end="279:57"><literal type="number" pos:start="279:57" pos:end="279:57">1</literal></expr>]</index></name></expr>, <expr pos:start="279:61" pos:end="279:73"><operator pos:start="279:61" pos:end="279:61">-</operator><name pos:start="279:62" pos:end="279:73"><name pos:start="279:62" pos:end="279:70">srcStride</name><index pos:start="279:71" pos:end="279:73">[<expr pos:start="279:72" pos:end="279:72"><literal type="number" pos:start="279:72" pos:end="279:72">2</literal></expr>]</index></name></expr>,

                              <expr pos:start="281:31" pos:end="281:43"><operator pos:start="281:31" pos:end="281:31">-</operator><name pos:start="281:32" pos:end="281:43"><name pos:start="281:32" pos:end="281:40">srcStride</name><index pos:start="281:41" pos:end="281:43">[<expr pos:start="281:42" pos:end="281:42"><literal type="number" pos:start="281:42" pos:end="281:42">3</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="283:9" pos:end="285:46"><decl pos:start="283:9" pos:end="285:45"><type pos:start="283:9" pos:end="283:11"><name pos:start="283:9" pos:end="283:11">int</name></type> <name pos:start="283:13" pos:end="283:25"><name pos:start="283:13" pos:end="283:22">dstStride2</name><index pos:start="283:23" pos:end="283:25">[<expr pos:start="283:24" pos:end="283:24"><literal type="number" pos:start="283:24" pos:end="283:24">4</literal></expr>]</index></name> <init pos:start="283:27" pos:end="285:45">= <expr pos:start="283:29" pos:end="285:45"><block pos:start="283:29" pos:end="285:45">{ <expr pos:start="283:31" pos:end="283:43"><operator pos:start="283:31" pos:end="283:31">-</operator><name pos:start="283:32" pos:end="283:43"><name pos:start="283:32" pos:end="283:40">dstStride</name><index pos:start="283:41" pos:end="283:43">[<expr pos:start="283:42" pos:end="283:42"><literal type="number" pos:start="283:42" pos:end="283:42">0</literal></expr>]</index></name></expr>, <expr pos:start="283:46" pos:end="283:58"><operator pos:start="283:46" pos:end="283:46">-</operator><name pos:start="283:47" pos:end="283:58"><name pos:start="283:47" pos:end="283:55">dstStride</name><index pos:start="283:56" pos:end="283:58">[<expr pos:start="283:57" pos:end="283:57"><literal type="number" pos:start="283:57" pos:end="283:57">1</literal></expr>]</index></name></expr>, <expr pos:start="283:61" pos:end="283:73"><operator pos:start="283:61" pos:end="283:61">-</operator><name pos:start="283:62" pos:end="283:73"><name pos:start="283:62" pos:end="283:70">dstStride</name><index pos:start="283:71" pos:end="283:73">[<expr pos:start="283:72" pos:end="283:72"><literal type="number" pos:start="283:72" pos:end="283:72">2</literal></expr>]</index></name></expr>,

                              <expr pos:start="285:31" pos:end="285:43"><operator pos:start="285:31" pos:end="285:31">-</operator><name pos:start="285:32" pos:end="285:43"><name pos:start="285:32" pos:end="285:40">dstStride</name><index pos:start="285:41" pos:end="285:43">[<expr pos:start="285:42" pos:end="285:42"><literal type="number" pos:start="285:42" pos:end="285:42">3</literal></expr>]</index></name></expr> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="289:9" pos:end="289:50"><expr pos:start="289:9" pos:end="289:49"><name pos:start="289:9" pos:end="289:15"><name pos:start="289:9" pos:end="289:12">src2</name><index pos:start="289:13" pos:end="289:15">[<expr pos:start="289:14" pos:end="289:14"><literal type="number" pos:start="289:14" pos:end="289:14">0</literal></expr>]</index></name> <operator pos:start="289:17" pos:end="289:18">+=</operator> <operator pos:start="289:20" pos:end="289:20">(</operator><name pos:start="289:21" pos:end="289:29">srcSliceH</name> <operator pos:start="289:31" pos:end="289:31">-</operator> <literal type="number" pos:start="289:33" pos:end="289:33">1</literal><operator pos:start="289:34" pos:end="289:34">)</operator> <operator pos:start="289:36" pos:end="289:36">*</operator> <name pos:start="289:38" pos:end="289:49"><name pos:start="289:38" pos:end="289:46">srcStride</name><index pos:start="289:47" pos:end="289:49">[<expr pos:start="289:48" pos:end="289:48"><literal type="number" pos:start="289:48" pos:end="289:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="291:9" pos:end="293:79"><if pos:start="291:9" pos:end="293:79">if <condition pos:start="291:12" pos:end="291:34">(<expr pos:start="291:13" pos:end="291:33"><operator pos:start="291:13" pos:end="291:13">!</operator><call pos:start="291:14" pos:end="291:33"><name pos:start="291:14" pos:end="291:19">usePal</name><argument_list pos:start="291:20" pos:end="291:33">(<argument pos:start="291:21" pos:end="291:32"><expr pos:start="291:21" pos:end="291:32"><name pos:start="291:21" pos:end="291:32"><name pos:start="291:21" pos:end="291:21">c</name><operator pos:start="291:22" pos:end="291:23">-&gt;</operator><name pos:start="291:24" pos:end="291:32">srcFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="293:13" pos:end="293:79"><block_content pos:start="293:13" pos:end="293:79">

            <expr_stmt pos:start="293:13" pos:end="293:79"><expr pos:start="293:13" pos:end="293:78"><name pos:start="293:13" pos:end="293:19"><name pos:start="293:13" pos:end="293:16">src2</name><index pos:start="293:17" pos:end="293:19">[<expr pos:start="293:18" pos:end="293:18"><literal type="number" pos:start="293:18" pos:end="293:18">1</literal></expr>]</index></name> <operator pos:start="293:21" pos:end="293:22">+=</operator> <operator pos:start="293:24" pos:end="293:24">(</operator><operator pos:start="293:25" pos:end="293:25">(</operator><name pos:start="293:26" pos:end="293:34">srcSliceH</name> <operator pos:start="293:36" pos:end="293:37">&gt;&gt;</operator> <name pos:start="293:39" pos:end="293:57"><name pos:start="293:39" pos:end="293:39">c</name><operator pos:start="293:40" pos:end="293:41">-&gt;</operator><name pos:start="293:42" pos:end="293:57">chrSrcVSubSample</name></name><operator pos:start="293:58" pos:end="293:58">)</operator> <operator pos:start="293:60" pos:end="293:60">-</operator> <literal type="number" pos:start="293:62" pos:end="293:62">1</literal><operator pos:start="293:63" pos:end="293:63">)</operator> <operator pos:start="293:65" pos:end="293:65">*</operator> <name pos:start="293:67" pos:end="293:78"><name pos:start="293:67" pos:end="293:75">srcStride</name><index pos:start="293:76" pos:end="293:78">[<expr pos:start="293:77" pos:end="293:77"><literal type="number" pos:start="293:77" pos:end="293:77">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="295:9" pos:end="295:75"><expr pos:start="295:9" pos:end="295:74"><name pos:start="295:9" pos:end="295:15"><name pos:start="295:9" pos:end="295:12">src2</name><index pos:start="295:13" pos:end="295:15">[<expr pos:start="295:14" pos:end="295:14"><literal type="number" pos:start="295:14" pos:end="295:14">2</literal></expr>]</index></name> <operator pos:start="295:17" pos:end="295:18">+=</operator> <operator pos:start="295:20" pos:end="295:20">(</operator><operator pos:start="295:21" pos:end="295:21">(</operator><name pos:start="295:22" pos:end="295:30">srcSliceH</name> <operator pos:start="295:32" pos:end="295:33">&gt;&gt;</operator> <name pos:start="295:35" pos:end="295:53"><name pos:start="295:35" pos:end="295:35">c</name><operator pos:start="295:36" pos:end="295:37">-&gt;</operator><name pos:start="295:38" pos:end="295:53">chrSrcVSubSample</name></name><operator pos:start="295:54" pos:end="295:54">)</operator> <operator pos:start="295:56" pos:end="295:56">-</operator> <literal type="number" pos:start="295:58" pos:end="295:58">1</literal><operator pos:start="295:59" pos:end="295:59">)</operator> <operator pos:start="295:61" pos:end="295:61">*</operator> <name pos:start="295:63" pos:end="295:74"><name pos:start="295:63" pos:end="295:71">srcStride</name><index pos:start="295:72" pos:end="295:74">[<expr pos:start="295:73" pos:end="295:73"><literal type="number" pos:start="295:73" pos:end="295:73">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:50"><expr pos:start="297:9" pos:end="297:49"><name pos:start="297:9" pos:end="297:15"><name pos:start="297:9" pos:end="297:12">src2</name><index pos:start="297:13" pos:end="297:15">[<expr pos:start="297:14" pos:end="297:14"><literal type="number" pos:start="297:14" pos:end="297:14">3</literal></expr>]</index></name> <operator pos:start="297:17" pos:end="297:18">+=</operator> <operator pos:start="297:20" pos:end="297:20">(</operator><name pos:start="297:21" pos:end="297:29">srcSliceH</name> <operator pos:start="297:31" pos:end="297:31">-</operator> <literal type="number" pos:start="297:33" pos:end="297:33">1</literal><operator pos:start="297:34" pos:end="297:34">)</operator> <operator pos:start="297:36" pos:end="297:36">*</operator> <name pos:start="297:38" pos:end="297:49"><name pos:start="297:38" pos:end="297:46">srcStride</name><index pos:start="297:47" pos:end="297:49">[<expr pos:start="297:48" pos:end="297:48"><literal type="number" pos:start="297:48" pos:end="297:48">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:73"><expr pos:start="299:9" pos:end="299:72"><name pos:start="299:9" pos:end="299:15"><name pos:start="299:9" pos:end="299:12">dst2</name><index pos:start="299:13" pos:end="299:15">[<expr pos:start="299:14" pos:end="299:14"><literal type="number" pos:start="299:14" pos:end="299:14">0</literal></expr>]</index></name> <operator pos:start="299:17" pos:end="299:18">+=</operator> <operator pos:start="299:20" pos:end="299:20">(</operator> <name pos:start="299:22" pos:end="299:28"><name pos:start="299:22" pos:end="299:22">c</name><operator pos:start="299:23" pos:end="299:24">-&gt;</operator><name pos:start="299:25" pos:end="299:28">dstH</name></name>                         <operator pos:start="299:54" pos:end="299:54">-</operator> <literal type="number" pos:start="299:56" pos:end="299:56">1</literal><operator pos:start="299:57" pos:end="299:57">)</operator> <operator pos:start="299:59" pos:end="299:59">*</operator> <name pos:start="299:61" pos:end="299:72"><name pos:start="299:61" pos:end="299:69">dstStride</name><index pos:start="299:70" pos:end="299:72">[<expr pos:start="299:71" pos:end="299:71"><literal type="number" pos:start="299:71" pos:end="299:71">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:73"><expr pos:start="301:9" pos:end="301:72"><name pos:start="301:9" pos:end="301:15"><name pos:start="301:9" pos:end="301:12">dst2</name><index pos:start="301:13" pos:end="301:15">[<expr pos:start="301:14" pos:end="301:14"><literal type="number" pos:start="301:14" pos:end="301:14">1</literal></expr>]</index></name> <operator pos:start="301:17" pos:end="301:18">+=</operator> <operator pos:start="301:20" pos:end="301:20">(</operator><operator pos:start="301:21" pos:end="301:21">(</operator><name pos:start="301:22" pos:end="301:28"><name pos:start="301:22" pos:end="301:22">c</name><operator pos:start="301:23" pos:end="301:24">-&gt;</operator><name pos:start="301:25" pos:end="301:28">dstH</name></name> <operator pos:start="301:30" pos:end="301:31">&gt;&gt;</operator> <name pos:start="301:33" pos:end="301:51"><name pos:start="301:33" pos:end="301:33">c</name><operator pos:start="301:34" pos:end="301:35">-&gt;</operator><name pos:start="301:36" pos:end="301:51">chrDstVSubSample</name></name><operator pos:start="301:52" pos:end="301:52">)</operator> <operator pos:start="301:54" pos:end="301:54">-</operator> <literal type="number" pos:start="301:56" pos:end="301:56">1</literal><operator pos:start="301:57" pos:end="301:57">)</operator> <operator pos:start="301:59" pos:end="301:59">*</operator> <name pos:start="301:61" pos:end="301:72"><name pos:start="301:61" pos:end="301:69">dstStride</name><index pos:start="301:70" pos:end="301:72">[<expr pos:start="301:71" pos:end="301:71"><literal type="number" pos:start="301:71" pos:end="301:71">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:73"><expr pos:start="303:9" pos:end="303:72"><name pos:start="303:9" pos:end="303:15"><name pos:start="303:9" pos:end="303:12">dst2</name><index pos:start="303:13" pos:end="303:15">[<expr pos:start="303:14" pos:end="303:14"><literal type="number" pos:start="303:14" pos:end="303:14">2</literal></expr>]</index></name> <operator pos:start="303:17" pos:end="303:18">+=</operator> <operator pos:start="303:20" pos:end="303:20">(</operator><operator pos:start="303:21" pos:end="303:21">(</operator><name pos:start="303:22" pos:end="303:28"><name pos:start="303:22" pos:end="303:22">c</name><operator pos:start="303:23" pos:end="303:24">-&gt;</operator><name pos:start="303:25" pos:end="303:28">dstH</name></name> <operator pos:start="303:30" pos:end="303:31">&gt;&gt;</operator> <name pos:start="303:33" pos:end="303:51"><name pos:start="303:33" pos:end="303:33">c</name><operator pos:start="303:34" pos:end="303:35">-&gt;</operator><name pos:start="303:36" pos:end="303:51">chrDstVSubSample</name></name><operator pos:start="303:52" pos:end="303:52">)</operator> <operator pos:start="303:54" pos:end="303:54">-</operator> <literal type="number" pos:start="303:56" pos:end="303:56">1</literal><operator pos:start="303:57" pos:end="303:57">)</operator> <operator pos:start="303:59" pos:end="303:59">*</operator> <name pos:start="303:61" pos:end="303:72"><name pos:start="303:61" pos:end="303:69">dstStride</name><index pos:start="303:70" pos:end="303:72">[<expr pos:start="303:71" pos:end="303:71"><literal type="number" pos:start="303:71" pos:end="303:71">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:73"><expr pos:start="305:9" pos:end="305:72"><name pos:start="305:9" pos:end="305:15"><name pos:start="305:9" pos:end="305:12">dst2</name><index pos:start="305:13" pos:end="305:15">[<expr pos:start="305:14" pos:end="305:14"><literal type="number" pos:start="305:14" pos:end="305:14">3</literal></expr>]</index></name> <operator pos:start="305:17" pos:end="305:18">+=</operator> <operator pos:start="305:20" pos:end="305:20">(</operator> <name pos:start="305:22" pos:end="305:28"><name pos:start="305:22" pos:end="305:22">c</name><operator pos:start="305:23" pos:end="305:24">-&gt;</operator><name pos:start="305:25" pos:end="305:28">dstH</name></name>                         <operator pos:start="305:54" pos:end="305:54">-</operator> <literal type="number" pos:start="305:56" pos:end="305:56">1</literal><operator pos:start="305:57" pos:end="305:57">)</operator> <operator pos:start="305:59" pos:end="305:59">*</operator> <name pos:start="305:61" pos:end="305:72"><name pos:start="305:61" pos:end="305:69">dstStride</name><index pos:start="305:70" pos:end="305:72">[<expr pos:start="305:71" pos:end="305:71"><literal type="number" pos:start="305:71" pos:end="305:71">3</literal></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="309:9" pos:end="309:38"><expr pos:start="309:9" pos:end="309:37"><call pos:start="309:9" pos:end="309:37"><name pos:start="309:9" pos:end="309:17">reset_ptr</name><argument_list pos:start="309:18" pos:end="309:37">(<argument pos:start="309:19" pos:end="309:22"><expr pos:start="309:19" pos:end="309:22"><name pos:start="309:19" pos:end="309:22">src2</name></expr></argument>, <argument pos:start="309:25" pos:end="309:36"><expr pos:start="309:25" pos:end="309:36"><name pos:start="309:25" pos:end="309:36"><name pos:start="309:25" pos:end="309:25">c</name><operator pos:start="309:26" pos:end="309:27">-&gt;</operator><name pos:start="309:28" pos:end="309:36">srcFormat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:45"><expr pos:start="311:9" pos:end="311:44"><call pos:start="311:9" pos:end="311:44"><name pos:start="311:9" pos:end="311:17">reset_ptr</name><argument_list pos:start="311:18" pos:end="311:44">(<argument pos:start="311:19" pos:end="311:29"><expr pos:start="311:19" pos:end="311:29"><operator pos:start="311:19" pos:end="311:19">(</operator><name pos:start="311:20" pos:end="311:23">void</name><operator pos:start="311:24" pos:end="311:24">*</operator><operator pos:start="311:25" pos:end="311:25">)</operator><name pos:start="311:26" pos:end="311:29">dst2</name></expr></argument>, <argument pos:start="311:32" pos:end="311:43"><expr pos:start="311:32" pos:end="311:43"><name pos:start="311:32" pos:end="311:43"><name pos:start="311:32" pos:end="311:32">c</name><operator pos:start="311:33" pos:end="311:34">-&gt;</operator><name pos:start="311:35" pos:end="311:43">dstFormat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="315:9" pos:end="315:51">/* reset slice direction at end of frame */</comment>

        <if_stmt pos:start="317:9" pos:end="319:28"><if pos:start="317:9" pos:end="319:28">if <condition pos:start="317:12" pos:end="317:23">(<expr pos:start="317:13" pos:end="317:22"><operator pos:start="317:13" pos:end="317:13">!</operator><name pos:start="317:14" pos:end="317:22">srcSliceY</name></expr>)</condition><block type="pseudo" pos:start="319:13" pos:end="319:28"><block_content pos:start="319:13" pos:end="319:28">

            <expr_stmt pos:start="319:13" pos:end="319:28"><expr pos:start="319:13" pos:end="319:27"><name pos:start="319:13" pos:end="319:23"><name pos:start="319:13" pos:end="319:13">c</name><operator pos:start="319:14" pos:end="319:15">-&gt;</operator><name pos:start="319:16" pos:end="319:23">sliceDir</name></name> <operator pos:start="319:25" pos:end="319:25">=</operator> <literal type="number" pos:start="319:27" pos:end="319:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="323:9" pos:end="325:55"><expr pos:start="323:9" pos:end="325:54"><name pos:start="323:9" pos:end="323:11">ret</name> <operator pos:start="323:13" pos:end="323:13">=</operator> <call pos:start="323:15" pos:end="325:54"><name pos:start="323:15" pos:end="323:24"><name pos:start="323:15" pos:end="323:15">c</name><operator pos:start="323:16" pos:end="323:17">-&gt;</operator><name pos:start="323:18" pos:end="323:24">swScale</name></name><argument_list pos:start="323:25" pos:end="325:54">(<argument pos:start="323:26" pos:end="323:26"><expr pos:start="323:26" pos:end="323:26"><name pos:start="323:26" pos:end="323:26">c</name></expr></argument>, <argument pos:start="323:29" pos:end="323:32"><expr pos:start="323:29" pos:end="323:32"><name pos:start="323:29" pos:end="323:32">src2</name></expr></argument>, <argument pos:start="323:35" pos:end="323:44"><expr pos:start="323:35" pos:end="323:44"><name pos:start="323:35" pos:end="323:44">srcStride2</name></expr></argument>, <argument pos:start="323:47" pos:end="323:73"><expr pos:start="323:47" pos:end="323:73"><name pos:start="323:47" pos:end="323:53"><name pos:start="323:47" pos:end="323:47">c</name><operator pos:start="323:48" pos:end="323:49">-&gt;</operator><name pos:start="323:50" pos:end="323:53">srcH</name></name><operator pos:start="323:54" pos:end="323:54">-</operator><name pos:start="323:55" pos:end="323:63">srcSliceY</name><operator pos:start="323:64" pos:end="323:64">-</operator><name pos:start="323:65" pos:end="323:73">srcSliceH</name></expr></argument>,

                          <argument pos:start="325:27" pos:end="325:35"><expr pos:start="325:27" pos:end="325:35"><name pos:start="325:27" pos:end="325:35">srcSliceH</name></expr></argument>, <argument pos:start="325:38" pos:end="325:41"><expr pos:start="325:38" pos:end="325:41"><name pos:start="325:38" pos:end="325:41">dst2</name></expr></argument>, <argument pos:start="325:44" pos:end="325:53"><expr pos:start="325:44" pos:end="325:53"><name pos:start="325:44" pos:end="325:53">dstStride2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="331:5" pos:end="331:22"><expr pos:start="331:5" pos:end="331:21"><call pos:start="331:5" pos:end="331:21"><name pos:start="331:5" pos:end="331:11">av_free</name><argument_list pos:start="331:12" pos:end="331:21">(<argument pos:start="331:13" pos:end="331:20"><expr pos:start="331:13" pos:end="331:20"><name pos:start="331:13" pos:end="331:20">rgb0_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="333:5" pos:end="333:15">return <expr pos:start="333:12" pos:end="333:14"><name pos:start="333:12" pos:end="333:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
