<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14700.c" pos:tabs="8"><function pos:start="1:1" pos:end="477:1"><type pos:start="1:1" pos:end="1:25"><name pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:6">struct</name> <name pos:start="1:8" pos:end="1:23">omap_mpu_state_s</name></name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:41">omap310_mpu_init</name><parameter_list pos:start="1:42" pos:end="5:33">(<parameter pos:start="1:43" pos:end="1:69"><decl pos:start="1:43" pos:end="1:69"><type pos:start="1:43" pos:end="1:69"><name pos:start="1:43" pos:end="1:54">MemoryRegion</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:69">system_memory</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:40"><decl pos:start="3:17" pos:end="3:40"><type pos:start="3:17" pos:end="3:40"><name pos:start="3:17" pos:end="3:24">unsigned</name> <name pos:start="3:26" pos:end="3:29">long</name></type> <name pos:start="3:31" pos:end="3:40">sdram_size</name></decl></parameter>,

                <parameter pos:start="5:17" pos:end="5:32"><decl pos:start="5:17" pos:end="5:32"><type pos:start="5:17" pos:end="5:32"><specifier pos:start="5:17" pos:end="5:21">const</specifier> <name pos:start="5:23" pos:end="5:26">char</name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:32">core</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="477:1">{<block_content pos:start="9:5" pos:end="475:13">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="13:55"><decl pos:start="11:5" pos:end="13:54"><type pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:27">omap_mpu_state_s</name></name> <modifier pos:start="11:29" pos:end="11:29">*</modifier></type><name pos:start="11:30" pos:end="11:30">s</name> <init pos:start="11:32" pos:end="13:54">= <expr pos:start="11:34" pos:end="13:54"><operator pos:start="11:34" pos:end="11:34">(</operator>struct <name pos:start="11:42" pos:end="11:57">omap_mpu_state_s</name> <operator pos:start="11:59" pos:end="11:59">*</operator><operator pos:start="11:60" pos:end="11:60">)</operator>

            <call pos:start="13:13" pos:end="13:54"><name pos:start="13:13" pos:end="13:21">g_malloc0</name><argument_list pos:start="13:22" pos:end="13:54">(<argument pos:start="13:23" pos:end="13:53"><expr pos:start="13:23" pos:end="13:53"><sizeof pos:start="13:23" pos:end="13:53">sizeof<argument_list pos:start="13:29" pos:end="13:53">(<argument pos:start="13:30" pos:end="13:52"><expr pos:start="13:30" pos:end="13:52">struct <name pos:start="13:37" pos:end="13:52">omap_mpu_state_s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">qemu_irq</name></type> <name pos:start="15:14" pos:end="15:24"><name pos:start="15:14" pos:end="15:21">dma_irqs</name><index pos:start="15:22" pos:end="15:24">[<expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">6</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">DriveInfo</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">SysBusDevice</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:24">busdev</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:24"><if pos:start="23:5" pos:end="25:24">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:13">core</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:24"><block_content pos:start="25:9" pos:end="25:24">

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:12">core</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <literal type="string" pos:start="25:16" pos:end="25:23">"ti925t"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:14">/* Core */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:16">mpu_model</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:26">omap310</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:10">cpu</name></name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:31"><name pos:start="33:14" pos:end="33:25">cpu_arm_init</name><argument_list pos:start="33:26" pos:end="33:31">(<argument pos:start="33:27" pos:end="33:30"><expr pos:start="33:27" pos:end="33:30"><name pos:start="33:27" pos:end="33:30">core</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:14">cpu</name></name> <operator pos:start="35:16" pos:end="35:17">==</operator> <name pos:start="35:19" pos:end="35:22">NULL</name></expr>)</condition> <block pos:start="35:25" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:16">

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><call pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:15">fprintf</name><argument_list pos:start="37:16" pos:end="37:58">(<argument pos:start="37:17" pos:end="37:22"><expr pos:start="37:17" pos:end="37:22"><name pos:start="37:17" pos:end="37:22">stderr</name></expr></argument>, <argument pos:start="37:25" pos:end="37:57"><expr pos:start="37:25" pos:end="37:57"><literal type="string" pos:start="37:25" pos:end="37:57">"Unable to find CPU definition\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><call pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:12">exit</name><argument_list pos:start="39:13" pos:end="39:15">(<argument pos:start="39:14" pos:end="39:14"><expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:17">sdram_size</name></name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:30">sdram_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:38"><expr pos:start="45:5" pos:end="45:37"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:16">sram_size</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:37">OMAP15XX_SRAM_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:57"><expr pos:start="49:5" pos:end="49:56"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:13">wakeup</name></name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:56"><name pos:start="49:17" pos:end="49:33">qemu_allocate_irq</name><argument_list pos:start="49:34" pos:end="49:56">(<argument pos:start="49:35" pos:end="49:49"><expr pos:start="49:35" pos:end="49:49"><name pos:start="49:35" pos:end="49:49">omap_mpu_wakeup</name></expr></argument>, <argument pos:start="49:52" pos:end="49:52"><expr pos:start="49:52" pos:end="49:52"><name pos:start="49:52" pos:end="49:52">s</name></expr></argument>, <argument pos:start="49:55" pos:end="49:55"><expr pos:start="49:55" pos:end="49:55"><literal type="number" pos:start="49:55" pos:end="49:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:16">/* Clocks */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:21"><expr pos:start="55:5" pos:end="55:20"><call pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:17">omap_clk_init</name><argument_list pos:start="55:18" pos:end="55:20">(<argument pos:start="55:19" pos:end="55:19"><expr pos:start="55:19" pos:end="55:19"><name pos:start="55:19" pos:end="55:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:29">/* Memory-mapped stuff */</comment>

    <expr_stmt pos:start="61:5" pos:end="63:56"><expr pos:start="61:5" pos:end="63:55"><call pos:start="61:5" pos:end="63:55"><name pos:start="61:5" pos:end="61:40">memory_region_allocate_system_memory</name><argument_list pos:start="61:41" pos:end="63:55">(<argument pos:start="61:42" pos:end="61:54"><expr pos:start="61:42" pos:end="61:54"><operator pos:start="61:42" pos:end="61:42">&amp;</operator><name pos:start="61:43" pos:end="61:54"><name pos:start="61:43" pos:end="61:43">s</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:54">emiff_ram</name></name></expr></argument>, <argument pos:start="61:57" pos:end="61:60"><expr pos:start="61:57" pos:end="61:60"><name pos:start="61:57" pos:end="61:60">NULL</name></expr></argument>, <argument pos:start="61:63" pos:end="61:74"><expr pos:start="61:63" pos:end="61:74"><literal type="string" pos:start="61:63" pos:end="61:74">"omap1.dram"</literal></expr></argument>,

                                         <argument pos:start="63:42" pos:end="63:54"><expr pos:start="63:42" pos:end="63:54"><name pos:start="63:42" pos:end="63:54"><name pos:start="63:42" pos:end="63:42">s</name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:54">sdram_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:79"><expr pos:start="65:5" pos:end="65:78"><call pos:start="65:5" pos:end="65:78"><name pos:start="65:5" pos:end="65:31">memory_region_add_subregion</name><argument_list pos:start="65:32" pos:end="65:78">(<argument pos:start="65:33" pos:end="65:45"><expr pos:start="65:33" pos:end="65:45"><name pos:start="65:33" pos:end="65:45">system_memory</name></expr></argument>, <argument pos:start="65:48" pos:end="65:62"><expr pos:start="65:48" pos:end="65:62"><name pos:start="65:48" pos:end="65:62">OMAP_EMIFF_BASE</name></expr></argument>, <argument pos:start="65:65" pos:end="65:77"><expr pos:start="65:65" pos:end="65:77"><operator pos:start="65:65" pos:end="65:65">&amp;</operator><name pos:start="65:66" pos:end="65:77"><name pos:start="65:66" pos:end="65:66">s</name><operator pos:start="65:67" pos:end="65:68">-&gt;</operator><name pos:start="65:69" pos:end="65:77">emiff_ram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="69:41"><expr pos:start="67:5" pos:end="69:40"><call pos:start="67:5" pos:end="69:40"><name pos:start="67:5" pos:end="67:26">memory_region_init_ram</name><argument_list pos:start="67:27" pos:end="69:40">(<argument pos:start="67:28" pos:end="67:39"><expr pos:start="67:28" pos:end="67:39"><operator pos:start="67:28" pos:end="67:28">&amp;</operator><name pos:start="67:29" pos:end="67:39"><name pos:start="67:29" pos:end="67:29">s</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:39">imif_ram</name></name></expr></argument>, <argument pos:start="67:42" pos:end="67:45"><expr pos:start="67:42" pos:end="67:45"><name pos:start="67:42" pos:end="67:45">NULL</name></expr></argument>, <argument pos:start="67:48" pos:end="67:59"><expr pos:start="67:48" pos:end="67:59"><literal type="string" pos:start="67:48" pos:end="67:59">"omap1.sram"</literal></expr></argument>, <argument pos:start="67:62" pos:end="67:73"><expr pos:start="67:62" pos:end="67:73"><name pos:start="67:62" pos:end="67:73"><name pos:start="67:62" pos:end="67:62">s</name><operator pos:start="67:63" pos:end="67:64">-&gt;</operator><name pos:start="67:65" pos:end="67:73">sram_size</name></name></expr></argument>,

                           <argument pos:start="69:28" pos:end="69:39"><expr pos:start="69:28" pos:end="69:39"><operator pos:start="69:28" pos:end="69:28">&amp;</operator><name pos:start="69:29" pos:end="69:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:46"><expr pos:start="71:5" pos:end="71:45"><call pos:start="71:5" pos:end="71:45"><name pos:start="71:5" pos:end="71:31">vmstate_register_ram_global</name><argument_list pos:start="71:32" pos:end="71:45">(<argument pos:start="71:33" pos:end="71:44"><expr pos:start="71:33" pos:end="71:44"><operator pos:start="71:33" pos:end="71:33">&amp;</operator><name pos:start="71:34" pos:end="71:44"><name pos:start="71:34" pos:end="71:34">s</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:44">imif_ram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:77"><expr pos:start="73:5" pos:end="73:76"><call pos:start="73:5" pos:end="73:76"><name pos:start="73:5" pos:end="73:31">memory_region_add_subregion</name><argument_list pos:start="73:32" pos:end="73:76">(<argument pos:start="73:33" pos:end="73:45"><expr pos:start="73:33" pos:end="73:45"><name pos:start="73:33" pos:end="73:45">system_memory</name></expr></argument>, <argument pos:start="73:48" pos:end="73:61"><expr pos:start="73:48" pos:end="73:61"><name pos:start="73:48" pos:end="73:61">OMAP_IMIF_BASE</name></expr></argument>, <argument pos:start="73:64" pos:end="73:75"><expr pos:start="73:64" pos:end="73:75"><operator pos:start="73:64" pos:end="73:64">&amp;</operator><name pos:start="73:65" pos:end="73:75"><name pos:start="73:65" pos:end="73:65">s</name><operator pos:start="73:66" pos:end="73:67">-&gt;</operator><name pos:start="73:68" pos:end="73:75">imif_ram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:61"><expr pos:start="77:5" pos:end="77:60"><call pos:start="77:5" pos:end="77:60"><name pos:start="77:5" pos:end="77:18">omap_clkm_init</name><argument_list pos:start="77:19" pos:end="77:60">(<argument pos:start="77:20" pos:end="77:32"><expr pos:start="77:20" pos:end="77:32"><name pos:start="77:20" pos:end="77:32">system_memory</name></expr></argument>, <argument pos:start="77:35" pos:end="77:44"><expr pos:start="77:35" pos:end="77:44"><literal type="number" pos:start="77:35" pos:end="77:44">0xfffece00</literal></expr></argument>, <argument pos:start="77:47" pos:end="77:56"><expr pos:start="77:47" pos:end="77:56"><literal type="number" pos:start="77:47" pos:end="77:56">0xe1008000</literal></expr></argument>, <argument pos:start="77:59" pos:end="77:59"><expr pos:start="77:59" pos:end="77:59"><name pos:start="77:59" pos:end="77:59">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:46"><expr pos:start="81:5" pos:end="81:45"><name pos:start="81:5" pos:end="81:12"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:9">ih</name><index pos:start="81:10" pos:end="81:12">[<expr pos:start="81:11" pos:end="81:11"><literal type="number" pos:start="81:11" pos:end="81:11">0</literal></expr>]</index></name> <operator pos:start="81:14" pos:end="81:14">=</operator> <call pos:start="81:16" pos:end="81:45"><name pos:start="81:16" pos:end="81:26">qdev_create</name><argument_list pos:start="81:27" pos:end="81:45">(<argument pos:start="81:28" pos:end="81:31"><expr pos:start="81:28" pos:end="81:31"><name pos:start="81:28" pos:end="81:31">NULL</name></expr></argument>, <argument pos:start="81:34" pos:end="81:44"><expr pos:start="81:34" pos:end="81:44"><literal type="string" pos:start="81:34" pos:end="81:44">"omap-intc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:50"><expr pos:start="83:5" pos:end="83:49"><call pos:start="83:5" pos:end="83:49"><name pos:start="83:5" pos:end="83:24">qdev_prop_set_uint32</name><argument_list pos:start="83:25" pos:end="83:49">(<argument pos:start="83:26" pos:end="83:33"><expr pos:start="83:26" pos:end="83:33"><name pos:start="83:26" pos:end="83:33"><name pos:start="83:26" pos:end="83:26">s</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:30">ih</name><index pos:start="83:31" pos:end="83:33">[<expr pos:start="83:32" pos:end="83:32"><literal type="number" pos:start="83:32" pos:end="83:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:36" pos:end="83:41"><expr pos:start="83:36" pos:end="83:41"><literal type="string" pos:start="83:36" pos:end="83:41">"size"</literal></expr></argument>, <argument pos:start="83:44" pos:end="83:48"><expr pos:start="83:44" pos:end="83:48"><literal type="number" pos:start="83:44" pos:end="83:48">0x100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:70"><expr pos:start="85:5" pos:end="85:69"><call pos:start="85:5" pos:end="85:69"><name pos:start="85:5" pos:end="85:21">qdev_prop_set_ptr</name><argument_list pos:start="85:22" pos:end="85:69">(<argument pos:start="85:23" pos:end="85:30"><expr pos:start="85:23" pos:end="85:30"><name pos:start="85:23" pos:end="85:30"><name pos:start="85:23" pos:end="85:23">s</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:27">ih</name><index pos:start="85:28" pos:end="85:30">[<expr pos:start="85:29" pos:end="85:29"><literal type="number" pos:start="85:29" pos:end="85:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:33" pos:end="85:37"><expr pos:start="85:33" pos:end="85:37"><literal type="string" pos:start="85:33" pos:end="85:37">"clk"</literal></expr></argument>, <argument pos:start="85:40" pos:end="85:68"><expr pos:start="85:40" pos:end="85:68"><call pos:start="85:40" pos:end="85:68"><name pos:start="85:40" pos:end="85:51">omap_findclk</name><argument_list pos:start="85:52" pos:end="85:68">(<argument pos:start="85:53" pos:end="85:53"><expr pos:start="85:53" pos:end="85:53"><name pos:start="85:53" pos:end="85:53">s</name></expr></argument>, <argument pos:start="85:56" pos:end="85:67"><expr pos:start="85:56" pos:end="85:67"><literal type="string" pos:start="85:56" pos:end="85:67">"arminth_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:31"><expr pos:start="87:5" pos:end="87:30"><call pos:start="87:5" pos:end="87:30"><name pos:start="87:5" pos:end="87:20">qdev_init_nofail</name><argument_list pos:start="87:21" pos:end="87:30">(<argument pos:start="87:22" pos:end="87:29"><expr pos:start="87:22" pos:end="87:29"><name pos:start="87:22" pos:end="87:29"><name pos:start="87:22" pos:end="87:22">s</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:26">ih</name><index pos:start="87:27" pos:end="87:29">[<expr pos:start="87:28" pos:end="87:28"><literal type="number" pos:start="87:28" pos:end="87:28">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:38"><expr pos:start="89:5" pos:end="89:37"><name pos:start="89:5" pos:end="89:10">busdev</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <call pos:start="89:14" pos:end="89:37"><name pos:start="89:14" pos:end="89:27">SYS_BUS_DEVICE</name><argument_list pos:start="89:28" pos:end="89:37">(<argument pos:start="89:29" pos:end="89:36"><expr pos:start="89:29" pos:end="89:36"><name pos:start="89:29" pos:end="89:36"><name pos:start="89:29" pos:end="89:29">s</name><operator pos:start="89:30" pos:end="89:31">-&gt;</operator><name pos:start="89:32" pos:end="89:33">ih</name><index pos:start="89:34" pos:end="89:36">[<expr pos:start="89:35" pos:end="89:35"><literal type="number" pos:start="89:35" pos:end="89:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="93:70"><expr pos:start="91:5" pos:end="93:69"><call pos:start="91:5" pos:end="93:69"><name pos:start="91:5" pos:end="91:22">sysbus_connect_irq</name><argument_list pos:start="91:23" pos:end="93:69">(<argument pos:start="91:24" pos:end="91:29"><expr pos:start="91:24" pos:end="91:29"><name pos:start="91:24" pos:end="91:29">busdev</name></expr></argument>, <argument pos:start="91:32" pos:end="91:32"><expr pos:start="91:32" pos:end="91:32"><literal type="number" pos:start="91:32" pos:end="91:32">0</literal></expr></argument>,

                       <argument pos:start="93:24" pos:end="93:68"><expr pos:start="93:24" pos:end="93:68"><call pos:start="93:24" pos:end="93:68"><name pos:start="93:24" pos:end="93:39">qdev_get_gpio_in</name><argument_list pos:start="93:40" pos:end="93:68">(<argument pos:start="93:41" pos:end="93:54"><expr pos:start="93:41" pos:end="93:54"><call pos:start="93:41" pos:end="93:54"><name pos:start="93:41" pos:end="93:46">DEVICE</name><argument_list pos:start="93:47" pos:end="93:54">(<argument pos:start="93:48" pos:end="93:53"><expr pos:start="93:48" pos:end="93:53"><name pos:start="93:48" pos:end="93:53"><name pos:start="93:48" pos:end="93:48">s</name><operator pos:start="93:49" pos:end="93:50">-&gt;</operator><name pos:start="93:51" pos:end="93:53">cpu</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:57" pos:end="93:67"><expr pos:start="93:57" pos:end="93:67"><name pos:start="93:57" pos:end="93:67">ARM_CPU_IRQ</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="97:70"><expr pos:start="95:5" pos:end="97:69"><call pos:start="95:5" pos:end="97:69"><name pos:start="95:5" pos:end="95:22">sysbus_connect_irq</name><argument_list pos:start="95:23" pos:end="97:69">(<argument pos:start="95:24" pos:end="95:29"><expr pos:start="95:24" pos:end="95:29"><name pos:start="95:24" pos:end="95:29">busdev</name></expr></argument>, <argument pos:start="95:32" pos:end="95:32"><expr pos:start="95:32" pos:end="95:32"><literal type="number" pos:start="95:32" pos:end="95:32">1</literal></expr></argument>,

                       <argument pos:start="97:24" pos:end="97:68"><expr pos:start="97:24" pos:end="97:68"><call pos:start="97:24" pos:end="97:68"><name pos:start="97:24" pos:end="97:39">qdev_get_gpio_in</name><argument_list pos:start="97:40" pos:end="97:68">(<argument pos:start="97:41" pos:end="97:54"><expr pos:start="97:41" pos:end="97:54"><call pos:start="97:41" pos:end="97:54"><name pos:start="97:41" pos:end="97:46">DEVICE</name><argument_list pos:start="97:47" pos:end="97:54">(<argument pos:start="97:48" pos:end="97:53"><expr pos:start="97:48" pos:end="97:53"><name pos:start="97:48" pos:end="97:53"><name pos:start="97:48" pos:end="97:48">s</name><operator pos:start="97:49" pos:end="97:50">-&gt;</operator><name pos:start="97:51" pos:end="97:53">cpu</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="97:57" pos:end="97:67"><expr pos:start="97:57" pos:end="97:67"><name pos:start="97:57" pos:end="97:67">ARM_CPU_FIQ</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:43"><expr pos:start="99:5" pos:end="99:42"><call pos:start="99:5" pos:end="99:42"><name pos:start="99:5" pos:end="99:19">sysbus_mmio_map</name><argument_list pos:start="99:20" pos:end="99:42">(<argument pos:start="99:21" pos:end="99:26"><expr pos:start="99:21" pos:end="99:26"><name pos:start="99:21" pos:end="99:26">busdev</name></expr></argument>, <argument pos:start="99:29" pos:end="99:29"><expr pos:start="99:29" pos:end="99:29"><literal type="number" pos:start="99:29" pos:end="99:29">0</literal></expr></argument>, <argument pos:start="99:32" pos:end="99:41"><expr pos:start="99:32" pos:end="99:41"><literal type="number" pos:start="99:32" pos:end="99:41">0xfffecb00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:46"><expr pos:start="101:5" pos:end="101:45"><name pos:start="101:5" pos:end="101:12"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:9">ih</name><index pos:start="101:10" pos:end="101:12">[<expr pos:start="101:11" pos:end="101:11"><literal type="number" pos:start="101:11" pos:end="101:11">1</literal></expr>]</index></name> <operator pos:start="101:14" pos:end="101:14">=</operator> <call pos:start="101:16" pos:end="101:45"><name pos:start="101:16" pos:end="101:26">qdev_create</name><argument_list pos:start="101:27" pos:end="101:45">(<argument pos:start="101:28" pos:end="101:31"><expr pos:start="101:28" pos:end="101:31"><name pos:start="101:28" pos:end="101:31">NULL</name></expr></argument>, <argument pos:start="101:34" pos:end="101:44"><expr pos:start="101:34" pos:end="101:44"><literal type="string" pos:start="101:34" pos:end="101:44">"omap-intc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:50"><expr pos:start="103:5" pos:end="103:49"><call pos:start="103:5" pos:end="103:49"><name pos:start="103:5" pos:end="103:24">qdev_prop_set_uint32</name><argument_list pos:start="103:25" pos:end="103:49">(<argument pos:start="103:26" pos:end="103:33"><expr pos:start="103:26" pos:end="103:33"><name pos:start="103:26" pos:end="103:33"><name pos:start="103:26" pos:end="103:26">s</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:30">ih</name><index pos:start="103:31" pos:end="103:33">[<expr pos:start="103:32" pos:end="103:32"><literal type="number" pos:start="103:32" pos:end="103:32">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="103:36" pos:end="103:41"><expr pos:start="103:36" pos:end="103:41"><literal type="string" pos:start="103:36" pos:end="103:41">"size"</literal></expr></argument>, <argument pos:start="103:44" pos:end="103:48"><expr pos:start="103:44" pos:end="103:48"><literal type="number" pos:start="103:44" pos:end="103:48">0x800</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:70"><expr pos:start="105:5" pos:end="105:69"><call pos:start="105:5" pos:end="105:69"><name pos:start="105:5" pos:end="105:21">qdev_prop_set_ptr</name><argument_list pos:start="105:22" pos:end="105:69">(<argument pos:start="105:23" pos:end="105:30"><expr pos:start="105:23" pos:end="105:30"><name pos:start="105:23" pos:end="105:30"><name pos:start="105:23" pos:end="105:23">s</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:27">ih</name><index pos:start="105:28" pos:end="105:30">[<expr pos:start="105:29" pos:end="105:29"><literal type="number" pos:start="105:29" pos:end="105:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="105:33" pos:end="105:37"><expr pos:start="105:33" pos:end="105:37"><literal type="string" pos:start="105:33" pos:end="105:37">"clk"</literal></expr></argument>, <argument pos:start="105:40" pos:end="105:68"><expr pos:start="105:40" pos:end="105:68"><call pos:start="105:40" pos:end="105:68"><name pos:start="105:40" pos:end="105:51">omap_findclk</name><argument_list pos:start="105:52" pos:end="105:68">(<argument pos:start="105:53" pos:end="105:53"><expr pos:start="105:53" pos:end="105:53"><name pos:start="105:53" pos:end="105:53">s</name></expr></argument>, <argument pos:start="105:56" pos:end="105:67"><expr pos:start="105:56" pos:end="105:67"><literal type="string" pos:start="105:56" pos:end="105:67">"arminth_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:31"><expr pos:start="107:5" pos:end="107:30"><call pos:start="107:5" pos:end="107:30"><name pos:start="107:5" pos:end="107:20">qdev_init_nofail</name><argument_list pos:start="107:21" pos:end="107:30">(<argument pos:start="107:22" pos:end="107:29"><expr pos:start="107:22" pos:end="107:29"><name pos:start="107:22" pos:end="107:29"><name pos:start="107:22" pos:end="107:22">s</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:26">ih</name><index pos:start="107:27" pos:end="107:29">[<expr pos:start="107:28" pos:end="107:28"><literal type="number" pos:start="107:28" pos:end="107:28">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:38"><expr pos:start="109:5" pos:end="109:37"><name pos:start="109:5" pos:end="109:10">busdev</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <call pos:start="109:14" pos:end="109:37"><name pos:start="109:14" pos:end="109:27">SYS_BUS_DEVICE</name><argument_list pos:start="109:28" pos:end="109:37">(<argument pos:start="109:29" pos:end="109:36"><expr pos:start="109:29" pos:end="109:36"><name pos:start="109:29" pos:end="109:36"><name pos:start="109:29" pos:end="109:29">s</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:33">ih</name><index pos:start="109:34" pos:end="109:36">[<expr pos:start="109:35" pos:end="109:35"><literal type="number" pos:start="109:35" pos:end="109:35">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="113:74"><expr pos:start="111:5" pos:end="113:73"><call pos:start="111:5" pos:end="113:73"><name pos:start="111:5" pos:end="111:22">sysbus_connect_irq</name><argument_list pos:start="111:23" pos:end="113:73">(<argument pos:start="111:24" pos:end="111:29"><expr pos:start="111:24" pos:end="111:29"><name pos:start="111:24" pos:end="111:29">busdev</name></expr></argument>, <argument pos:start="111:32" pos:end="111:32"><expr pos:start="111:32" pos:end="111:32"><literal type="number" pos:start="111:32" pos:end="111:32">0</literal></expr></argument>,

                       <argument pos:start="113:24" pos:end="113:72"><expr pos:start="113:24" pos:end="113:72"><call pos:start="113:24" pos:end="113:72"><name pos:start="113:24" pos:end="113:39">qdev_get_gpio_in</name><argument_list pos:start="113:40" pos:end="113:72">(<argument pos:start="113:41" pos:end="113:48"><expr pos:start="113:41" pos:end="113:48"><name pos:start="113:41" pos:end="113:48"><name pos:start="113:41" pos:end="113:41">s</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:45">ih</name><index pos:start="113:46" pos:end="113:48">[<expr pos:start="113:47" pos:end="113:47"><literal type="number" pos:start="113:47" pos:end="113:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="113:51" pos:end="113:71"><expr pos:start="113:51" pos:end="113:71"><name pos:start="113:51" pos:end="113:71">OMAP_INT_15XX_IH2_IRQ</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="115:5" pos:end="115:70">/* The second interrupt controller's FIQ output is not wired up */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:43"><expr pos:start="117:5" pos:end="117:42"><call pos:start="117:5" pos:end="117:42"><name pos:start="117:5" pos:end="117:19">sysbus_mmio_map</name><argument_list pos:start="117:20" pos:end="117:42">(<argument pos:start="117:21" pos:end="117:26"><expr pos:start="117:21" pos:end="117:26"><name pos:start="117:21" pos:end="117:26">busdev</name></expr></argument>, <argument pos:start="117:29" pos:end="117:29"><expr pos:start="117:29" pos:end="117:29"><literal type="number" pos:start="117:29" pos:end="117:29">0</literal></expr></argument>, <argument pos:start="117:32" pos:end="117:41"><expr pos:start="117:32" pos:end="117:41"><literal type="number" pos:start="117:32" pos:end="117:41">0xfffe0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="121:5" pos:end="127:5">for <control pos:start="121:9" pos:end="121:27">(<init pos:start="121:10" pos:end="121:15"><expr pos:start="121:10" pos:end="121:14"><name pos:start="121:10" pos:end="121:10">i</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <literal type="number" pos:start="121:14" pos:end="121:14">0</literal></expr>;</init> <condition pos:start="121:17" pos:end="121:22"><expr pos:start="121:17" pos:end="121:21"><name pos:start="121:17" pos:end="121:17">i</name> <operator pos:start="121:19" pos:end="121:19">&lt;</operator> <literal type="number" pos:start="121:21" pos:end="121:21">6</literal></expr>;</condition> <incr pos:start="121:24" pos:end="121:26"><expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:24">i</name><operator pos:start="121:25" pos:end="121:26">++</operator></expr></incr>)</control> <block pos:start="121:29" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:66">

        <expr_stmt pos:start="123:9" pos:end="125:66"><expr pos:start="123:9" pos:end="125:65"><name pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:16">dma_irqs</name><index pos:start="123:17" pos:end="123:19">[<expr pos:start="123:18" pos:end="123:18"><name pos:start="123:18" pos:end="123:18">i</name></expr>]</index></name> <operator pos:start="123:21" pos:end="123:21">=</operator> <call pos:start="123:23" pos:end="125:65"><name pos:start="123:23" pos:end="123:38">qdev_get_gpio_in</name><argument_list pos:start="123:39" pos:end="125:65">(<argument pos:start="123:40" pos:end="123:69"><expr pos:start="123:40" pos:end="123:69"><name pos:start="123:40" pos:end="123:69"><name pos:start="123:40" pos:end="123:40">s</name><operator pos:start="123:41" pos:end="123:42">-&gt;</operator><name pos:start="123:43" pos:end="123:44">ih</name><index pos:start="123:45" pos:end="123:69">[<expr pos:start="123:46" pos:end="123:68"><name pos:start="123:46" pos:end="123:65"><name pos:start="123:46" pos:end="123:62">omap1_dma_irq_map</name><index pos:start="123:63" pos:end="123:65">[<expr pos:start="123:64" pos:end="123:64"><name pos:start="123:64" pos:end="123:64">i</name></expr>]</index></name><operator pos:start="123:66" pos:end="123:66">.</operator><name pos:start="123:67" pos:end="123:68">ih</name></expr>]</index></name></expr></argument>,

                                       <argument pos:start="125:40" pos:end="125:64"><expr pos:start="125:40" pos:end="125:64"><name pos:start="125:40" pos:end="125:59"><name pos:start="125:40" pos:end="125:56">omap1_dma_irq_map</name><index pos:start="125:57" pos:end="125:59">[<expr pos:start="125:58" pos:end="125:58"><name pos:start="125:58" pos:end="125:58">i</name></expr>]</index></name><operator pos:start="125:60" pos:end="125:60">.</operator><name pos:start="125:61" pos:end="125:64">intr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="129:5" pos:end="133:71"><expr pos:start="129:5" pos:end="133:70"><name pos:start="129:5" pos:end="129:10"><name pos:start="129:5" pos:end="129:5">s</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:10">dma</name></name> <operator pos:start="129:12" pos:end="129:12">=</operator> <call pos:start="129:14" pos:end="133:70"><name pos:start="129:14" pos:end="129:26">omap_dma_init</name><argument_list pos:start="129:27" pos:end="133:70">(<argument pos:start="129:28" pos:end="129:37"><expr pos:start="129:28" pos:end="129:37"><literal type="number" pos:start="129:28" pos:end="129:37">0xfffed800</literal></expr></argument>, <argument pos:start="129:40" pos:end="129:47"><expr pos:start="129:40" pos:end="129:47"><name pos:start="129:40" pos:end="129:47">dma_irqs</name></expr></argument>, <argument pos:start="129:50" pos:end="129:62"><expr pos:start="129:50" pos:end="129:62"><name pos:start="129:50" pos:end="129:62">system_memory</name></expr></argument>,

                           <argument pos:start="131:28" pos:end="131:71"><expr pos:start="131:28" pos:end="131:71"><call pos:start="131:28" pos:end="131:71"><name pos:start="131:28" pos:end="131:43">qdev_get_gpio_in</name><argument_list pos:start="131:44" pos:end="131:71">(<argument pos:start="131:45" pos:end="131:52"><expr pos:start="131:45" pos:end="131:52"><name pos:start="131:45" pos:end="131:52"><name pos:start="131:45" pos:end="131:45">s</name><operator pos:start="131:46" pos:end="131:47">-&gt;</operator><name pos:start="131:48" pos:end="131:49">ih</name><index pos:start="131:50" pos:end="131:52">[<expr pos:start="131:51" pos:end="131:51"><literal type="number" pos:start="131:51" pos:end="131:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="131:55" pos:end="131:70"><expr pos:start="131:55" pos:end="131:70"><name pos:start="131:55" pos:end="131:70">OMAP_INT_DMA_LCD</name></expr></argument>)</argument_list></call></expr></argument>,

                           <argument pos:start="133:28" pos:end="133:28"><expr pos:start="133:28" pos:end="133:28"><name pos:start="133:28" pos:end="133:28">s</name></expr></argument>, <argument pos:start="133:31" pos:end="133:55"><expr pos:start="133:31" pos:end="133:55"><call pos:start="133:31" pos:end="133:55"><name pos:start="133:31" pos:end="133:42">omap_findclk</name><argument_list pos:start="133:43" pos:end="133:55">(<argument pos:start="133:44" pos:end="133:44"><expr pos:start="133:44" pos:end="133:44"><name pos:start="133:44" pos:end="133:44">s</name></expr></argument>, <argument pos:start="133:47" pos:end="133:54"><expr pos:start="133:47" pos:end="133:54"><literal type="string" pos:start="133:47" pos:end="133:54">"dma_ck"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="133:58" pos:end="133:69"><expr pos:start="133:58" pos:end="133:69"><name pos:start="133:58" pos:end="133:69">omap_dma_3_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:61"><expr pos:start="137:5" pos:end="137:60"><name pos:start="137:5" pos:end="137:22"><name pos:start="137:5" pos:end="137:5">s</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:11">port</name><index pos:start="137:12" pos:end="137:22">[<expr pos:start="137:13" pos:end="137:17"><name pos:start="137:13" pos:end="137:17">emiff</name></expr>    ]</index></name><operator pos:start="137:23" pos:end="137:23">.</operator><name pos:start="137:24" pos:end="137:33">addr_valid</name> <operator pos:start="137:35" pos:end="137:35">=</operator> <name pos:start="137:37" pos:end="137:60">omap_validate_emiff_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:61"><expr pos:start="139:5" pos:end="139:60"><name pos:start="139:5" pos:end="139:22"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:11">port</name><index pos:start="139:12" pos:end="139:22">[<expr pos:start="139:13" pos:end="139:17"><name pos:start="139:13" pos:end="139:17">emifs</name></expr>    ]</index></name><operator pos:start="139:23" pos:end="139:23">.</operator><name pos:start="139:24" pos:end="139:33">addr_valid</name> <operator pos:start="139:35" pos:end="139:35">=</operator> <name pos:start="139:37" pos:end="139:60">omap_validate_emifs_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:60"><expr pos:start="141:5" pos:end="141:59"><name pos:start="141:5" pos:end="141:22"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:11">port</name><index pos:start="141:12" pos:end="141:22">[<expr pos:start="141:13" pos:end="141:16"><name pos:start="141:13" pos:end="141:16">imif</name></expr>     ]</index></name><operator pos:start="141:23" pos:end="141:23">.</operator><name pos:start="141:24" pos:end="141:33">addr_valid</name> <operator pos:start="141:35" pos:end="141:35">=</operator> <name pos:start="141:37" pos:end="141:59">omap_validate_imif_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:60"><expr pos:start="143:5" pos:end="143:59"><name pos:start="143:5" pos:end="143:22"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:11">port</name><index pos:start="143:12" pos:end="143:22">[<expr pos:start="143:13" pos:end="143:16"><name pos:start="143:13" pos:end="143:16">tipb</name></expr>     ]</index></name><operator pos:start="143:23" pos:end="143:23">.</operator><name pos:start="143:24" pos:end="143:33">addr_valid</name> <operator pos:start="143:35" pos:end="143:35">=</operator> <name pos:start="143:37" pos:end="143:59">omap_validate_tipb_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:61"><expr pos:start="145:5" pos:end="145:60"><name pos:start="145:5" pos:end="145:22"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:11">port</name><index pos:start="145:12" pos:end="145:22">[<expr pos:start="145:13" pos:end="145:17"><name pos:start="145:13" pos:end="145:17">local</name></expr>    ]</index></name><operator pos:start="145:23" pos:end="145:23">.</operator><name pos:start="145:24" pos:end="145:33">addr_valid</name> <operator pos:start="145:35" pos:end="145:35">=</operator> <name pos:start="145:37" pos:end="145:60">omap_validate_local_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:65"><expr pos:start="147:5" pos:end="147:64"><name pos:start="147:5" pos:end="147:22"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:11">port</name><index pos:start="147:12" pos:end="147:22">[<expr pos:start="147:13" pos:end="147:21"><name pos:start="147:13" pos:end="147:21">tipb_mpui</name></expr>]</index></name><operator pos:start="147:23" pos:end="147:23">.</operator><name pos:start="147:24" pos:end="147:33">addr_valid</name> <operator pos:start="147:35" pos:end="147:35">=</operator> <name pos:start="147:37" pos:end="147:64">omap_validate_tipb_mpui_addr</name></expr>;</expr_stmt>



    <comment type="block" pos:start="151:5" pos:end="151:64">/* Register SDRAM and SRAM DMA ports for fast transfers.  */</comment>

    <expr_stmt pos:start="153:5" pos:end="155:57"><expr pos:start="153:5" pos:end="155:56"><call pos:start="153:5" pos:end="155:56"><name pos:start="153:5" pos:end="153:24">soc_dma_port_add_mem</name><argument_list pos:start="153:25" pos:end="155:56">(<argument pos:start="153:26" pos:end="153:31"><expr pos:start="153:26" pos:end="153:31"><name pos:start="153:26" pos:end="153:31"><name pos:start="153:26" pos:end="153:26">s</name><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:31">dma</name></name></expr></argument>, <argument pos:start="153:34" pos:end="153:73"><expr pos:start="153:34" pos:end="153:73"><call pos:start="153:34" pos:end="153:73"><name pos:start="153:34" pos:end="153:58">memory_region_get_ram_ptr</name><argument_list pos:start="153:59" pos:end="153:73">(<argument pos:start="153:60" pos:end="153:72"><expr pos:start="153:60" pos:end="153:72"><operator pos:start="153:60" pos:end="153:60">&amp;</operator><name pos:start="153:61" pos:end="153:72"><name pos:start="153:61" pos:end="153:61">s</name><operator pos:start="153:62" pos:end="153:63">-&gt;</operator><name pos:start="153:64" pos:end="153:72">emiff_ram</name></name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="155:26" pos:end="155:40"><expr pos:start="155:26" pos:end="155:40"><name pos:start="155:26" pos:end="155:40">OMAP_EMIFF_BASE</name></expr></argument>, <argument pos:start="155:43" pos:end="155:55"><expr pos:start="155:43" pos:end="155:55"><name pos:start="155:43" pos:end="155:55"><name pos:start="155:43" pos:end="155:43">s</name><operator pos:start="155:44" pos:end="155:45">-&gt;</operator><name pos:start="155:46" pos:end="155:55">sdram_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="159:55"><expr pos:start="157:5" pos:end="159:54"><call pos:start="157:5" pos:end="159:54"><name pos:start="157:5" pos:end="157:24">soc_dma_port_add_mem</name><argument_list pos:start="157:25" pos:end="159:54">(<argument pos:start="157:26" pos:end="157:31"><expr pos:start="157:26" pos:end="157:31"><name pos:start="157:26" pos:end="157:31"><name pos:start="157:26" pos:end="157:26">s</name><operator pos:start="157:27" pos:end="157:28">-&gt;</operator><name pos:start="157:29" pos:end="157:31">dma</name></name></expr></argument>, <argument pos:start="157:34" pos:end="157:72"><expr pos:start="157:34" pos:end="157:72"><call pos:start="157:34" pos:end="157:72"><name pos:start="157:34" pos:end="157:58">memory_region_get_ram_ptr</name><argument_list pos:start="157:59" pos:end="157:72">(<argument pos:start="157:60" pos:end="157:71"><expr pos:start="157:60" pos:end="157:71"><operator pos:start="157:60" pos:end="157:60">&amp;</operator><name pos:start="157:61" pos:end="157:71"><name pos:start="157:61" pos:end="157:61">s</name><operator pos:start="157:62" pos:end="157:63">-&gt;</operator><name pos:start="157:64" pos:end="157:71">imif_ram</name></name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="159:26" pos:end="159:39"><expr pos:start="159:26" pos:end="159:39"><name pos:start="159:26" pos:end="159:39">OMAP_IMIF_BASE</name></expr></argument>, <argument pos:start="159:42" pos:end="159:53"><expr pos:start="159:42" pos:end="159:53"><name pos:start="159:42" pos:end="159:53"><name pos:start="159:42" pos:end="159:42">s</name><operator pos:start="159:43" pos:end="159:44">-&gt;</operator><name pos:start="159:45" pos:end="159:53">sram_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="163:5" pos:end="167:50"><expr pos:start="163:5" pos:end="167:49"><name pos:start="163:5" pos:end="163:15"><name pos:start="163:5" pos:end="163:5">s</name><operator pos:start="163:6" pos:end="163:7">-&gt;</operator><name pos:start="163:8" pos:end="163:12">timer</name><index pos:start="163:13" pos:end="163:15">[<expr pos:start="163:14" pos:end="163:14"><literal type="number" pos:start="163:14" pos:end="163:14">0</literal></expr>]</index></name> <operator pos:start="163:17" pos:end="163:17">=</operator> <call pos:start="163:19" pos:end="167:49"><name pos:start="163:19" pos:end="163:37">omap_mpu_timer_init</name><argument_list pos:start="163:38" pos:end="167:49">(<argument pos:start="163:39" pos:end="163:51"><expr pos:start="163:39" pos:end="163:51"><name pos:start="163:39" pos:end="163:51">system_memory</name></expr></argument>, <argument pos:start="163:54" pos:end="163:63"><expr pos:start="163:54" pos:end="163:63"><literal type="number" pos:start="163:54" pos:end="163:63">0xfffec500</literal></expr></argument>,

                    <argument pos:start="165:21" pos:end="165:63"><expr pos:start="165:21" pos:end="165:63"><call pos:start="165:21" pos:end="165:63"><name pos:start="165:21" pos:end="165:36">qdev_get_gpio_in</name><argument_list pos:start="165:37" pos:end="165:63">(<argument pos:start="165:38" pos:end="165:45"><expr pos:start="165:38" pos:end="165:45"><name pos:start="165:38" pos:end="165:45"><name pos:start="165:38" pos:end="165:38">s</name><operator pos:start="165:39" pos:end="165:40">-&gt;</operator><name pos:start="165:41" pos:end="165:42">ih</name><index pos:start="165:43" pos:end="165:45">[<expr pos:start="165:44" pos:end="165:44"><literal type="number" pos:start="165:44" pos:end="165:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:48" pos:end="165:62"><expr pos:start="165:48" pos:end="165:62"><name pos:start="165:48" pos:end="165:62">OMAP_INT_TIMER1</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="167:21" pos:end="167:48"><expr pos:start="167:21" pos:end="167:48"><call pos:start="167:21" pos:end="167:48"><name pos:start="167:21" pos:end="167:32">omap_findclk</name><argument_list pos:start="167:33" pos:end="167:48">(<argument pos:start="167:34" pos:end="167:34"><expr pos:start="167:34" pos:end="167:34"><name pos:start="167:34" pos:end="167:34">s</name></expr></argument>, <argument pos:start="167:37" pos:end="167:47"><expr pos:start="167:37" pos:end="167:47"><literal type="string" pos:start="167:37" pos:end="167:47">"mputim_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="173:50"><expr pos:start="169:5" pos:end="173:49"><name pos:start="169:5" pos:end="169:15"><name pos:start="169:5" pos:end="169:5">s</name><operator pos:start="169:6" pos:end="169:7">-&gt;</operator><name pos:start="169:8" pos:end="169:12">timer</name><index pos:start="169:13" pos:end="169:15">[<expr pos:start="169:14" pos:end="169:14"><literal type="number" pos:start="169:14" pos:end="169:14">1</literal></expr>]</index></name> <operator pos:start="169:17" pos:end="169:17">=</operator> <call pos:start="169:19" pos:end="173:49"><name pos:start="169:19" pos:end="169:37">omap_mpu_timer_init</name><argument_list pos:start="169:38" pos:end="173:49">(<argument pos:start="169:39" pos:end="169:51"><expr pos:start="169:39" pos:end="169:51"><name pos:start="169:39" pos:end="169:51">system_memory</name></expr></argument>, <argument pos:start="169:54" pos:end="169:63"><expr pos:start="169:54" pos:end="169:63"><literal type="number" pos:start="169:54" pos:end="169:63">0xfffec600</literal></expr></argument>,

                    <argument pos:start="171:21" pos:end="171:63"><expr pos:start="171:21" pos:end="171:63"><call pos:start="171:21" pos:end="171:63"><name pos:start="171:21" pos:end="171:36">qdev_get_gpio_in</name><argument_list pos:start="171:37" pos:end="171:63">(<argument pos:start="171:38" pos:end="171:45"><expr pos:start="171:38" pos:end="171:45"><name pos:start="171:38" pos:end="171:45"><name pos:start="171:38" pos:end="171:38">s</name><operator pos:start="171:39" pos:end="171:40">-&gt;</operator><name pos:start="171:41" pos:end="171:42">ih</name><index pos:start="171:43" pos:end="171:45">[<expr pos:start="171:44" pos:end="171:44"><literal type="number" pos:start="171:44" pos:end="171:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="171:48" pos:end="171:62"><expr pos:start="171:48" pos:end="171:62"><name pos:start="171:48" pos:end="171:62">OMAP_INT_TIMER2</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="173:21" pos:end="173:48"><expr pos:start="173:21" pos:end="173:48"><call pos:start="173:21" pos:end="173:48"><name pos:start="173:21" pos:end="173:32">omap_findclk</name><argument_list pos:start="173:33" pos:end="173:48">(<argument pos:start="173:34" pos:end="173:34"><expr pos:start="173:34" pos:end="173:34"><name pos:start="173:34" pos:end="173:34">s</name></expr></argument>, <argument pos:start="173:37" pos:end="173:47"><expr pos:start="173:37" pos:end="173:47"><literal type="string" pos:start="173:37" pos:end="173:47">"mputim_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="179:50"><expr pos:start="175:5" pos:end="179:49"><name pos:start="175:5" pos:end="175:15"><name pos:start="175:5" pos:end="175:5">s</name><operator pos:start="175:6" pos:end="175:7">-&gt;</operator><name pos:start="175:8" pos:end="175:12">timer</name><index pos:start="175:13" pos:end="175:15">[<expr pos:start="175:14" pos:end="175:14"><literal type="number" pos:start="175:14" pos:end="175:14">2</literal></expr>]</index></name> <operator pos:start="175:17" pos:end="175:17">=</operator> <call pos:start="175:19" pos:end="179:49"><name pos:start="175:19" pos:end="175:37">omap_mpu_timer_init</name><argument_list pos:start="175:38" pos:end="179:49">(<argument pos:start="175:39" pos:end="175:51"><expr pos:start="175:39" pos:end="175:51"><name pos:start="175:39" pos:end="175:51">system_memory</name></expr></argument>, <argument pos:start="175:54" pos:end="175:63"><expr pos:start="175:54" pos:end="175:63"><literal type="number" pos:start="175:54" pos:end="175:63">0xfffec700</literal></expr></argument>,

                    <argument pos:start="177:21" pos:end="177:63"><expr pos:start="177:21" pos:end="177:63"><call pos:start="177:21" pos:end="177:63"><name pos:start="177:21" pos:end="177:36">qdev_get_gpio_in</name><argument_list pos:start="177:37" pos:end="177:63">(<argument pos:start="177:38" pos:end="177:45"><expr pos:start="177:38" pos:end="177:45"><name pos:start="177:38" pos:end="177:45"><name pos:start="177:38" pos:end="177:38">s</name><operator pos:start="177:39" pos:end="177:40">-&gt;</operator><name pos:start="177:41" pos:end="177:42">ih</name><index pos:start="177:43" pos:end="177:45">[<expr pos:start="177:44" pos:end="177:44"><literal type="number" pos:start="177:44" pos:end="177:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="177:48" pos:end="177:62"><expr pos:start="177:48" pos:end="177:62"><name pos:start="177:48" pos:end="177:62">OMAP_INT_TIMER3</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="179:21" pos:end="179:48"><expr pos:start="179:21" pos:end="179:48"><call pos:start="179:21" pos:end="179:48"><name pos:start="179:21" pos:end="179:32">omap_findclk</name><argument_list pos:start="179:33" pos:end="179:48">(<argument pos:start="179:34" pos:end="179:34"><expr pos:start="179:34" pos:end="179:34"><name pos:start="179:34" pos:end="179:34">s</name></expr></argument>, <argument pos:start="179:37" pos:end="179:47"><expr pos:start="179:37" pos:end="179:47"><literal type="string" pos:start="179:37" pos:end="179:47">"mputim_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="183:5" pos:end="187:50"><expr pos:start="183:5" pos:end="187:49"><name pos:start="183:5" pos:end="183:10"><name pos:start="183:5" pos:end="183:5">s</name><operator pos:start="183:6" pos:end="183:7">-&gt;</operator><name pos:start="183:8" pos:end="183:10">wdt</name></name> <operator pos:start="183:12" pos:end="183:12">=</operator> <call pos:start="183:14" pos:end="187:49"><name pos:start="183:14" pos:end="183:31">omap_wd_timer_init</name><argument_list pos:start="183:32" pos:end="187:49">(<argument pos:start="183:33" pos:end="183:45"><expr pos:start="183:33" pos:end="183:45"><name pos:start="183:33" pos:end="183:45">system_memory</name></expr></argument>, <argument pos:start="183:48" pos:end="183:57"><expr pos:start="183:48" pos:end="183:57"><literal type="number" pos:start="183:48" pos:end="183:57">0xfffec800</literal></expr></argument>,

                    <argument pos:start="185:21" pos:end="185:65"><expr pos:start="185:21" pos:end="185:65"><call pos:start="185:21" pos:end="185:65"><name pos:start="185:21" pos:end="185:36">qdev_get_gpio_in</name><argument_list pos:start="185:37" pos:end="185:65">(<argument pos:start="185:38" pos:end="185:45"><expr pos:start="185:38" pos:end="185:45"><name pos:start="185:38" pos:end="185:45"><name pos:start="185:38" pos:end="185:38">s</name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:42">ih</name><index pos:start="185:43" pos:end="185:45">[<expr pos:start="185:44" pos:end="185:44"><literal type="number" pos:start="185:44" pos:end="185:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="185:48" pos:end="185:64"><expr pos:start="185:48" pos:end="185:64"><name pos:start="185:48" pos:end="185:64">OMAP_INT_WD_TIMER</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="187:21" pos:end="187:48"><expr pos:start="187:21" pos:end="187:48"><call pos:start="187:21" pos:end="187:48"><name pos:start="187:21" pos:end="187:32">omap_findclk</name><argument_list pos:start="187:33" pos:end="187:48">(<argument pos:start="187:34" pos:end="187:34"><expr pos:start="187:34" pos:end="187:34"><name pos:start="187:34" pos:end="187:34">s</name></expr></argument>, <argument pos:start="187:37" pos:end="187:47"><expr pos:start="187:37" pos:end="187:47"><literal type="string" pos:start="187:37" pos:end="187:47">"armwdt_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="195:50"><expr pos:start="191:5" pos:end="195:49"><name pos:start="191:5" pos:end="191:15"><name pos:start="191:5" pos:end="191:5">s</name><operator pos:start="191:6" pos:end="191:7">-&gt;</operator><name pos:start="191:8" pos:end="191:15">os_timer</name></name> <operator pos:start="191:17" pos:end="191:17">=</operator> <call pos:start="191:19" pos:end="195:49"><name pos:start="191:19" pos:end="191:36">omap_os_timer_init</name><argument_list pos:start="191:37" pos:end="195:49">(<argument pos:start="191:38" pos:end="191:50"><expr pos:start="191:38" pos:end="191:50"><name pos:start="191:38" pos:end="191:50">system_memory</name></expr></argument>, <argument pos:start="191:53" pos:end="191:62"><expr pos:start="191:53" pos:end="191:62"><literal type="number" pos:start="191:53" pos:end="191:62">0xfffb9000</literal></expr></argument>,

                    <argument pos:start="193:21" pos:end="193:65"><expr pos:start="193:21" pos:end="193:65"><call pos:start="193:21" pos:end="193:65"><name pos:start="193:21" pos:end="193:36">qdev_get_gpio_in</name><argument_list pos:start="193:37" pos:end="193:65">(<argument pos:start="193:38" pos:end="193:45"><expr pos:start="193:38" pos:end="193:45"><name pos:start="193:38" pos:end="193:45"><name pos:start="193:38" pos:end="193:38">s</name><operator pos:start="193:39" pos:end="193:40">-&gt;</operator><name pos:start="193:41" pos:end="193:42">ih</name><index pos:start="193:43" pos:end="193:45">[<expr pos:start="193:44" pos:end="193:44"><literal type="number" pos:start="193:44" pos:end="193:44">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="193:48" pos:end="193:64"><expr pos:start="193:48" pos:end="193:64"><name pos:start="193:48" pos:end="193:64">OMAP_INT_OS_TIMER</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="195:21" pos:end="195:48"><expr pos:start="195:21" pos:end="195:48"><call pos:start="195:21" pos:end="195:48"><name pos:start="195:21" pos:end="195:32">omap_findclk</name><argument_list pos:start="195:33" pos:end="195:48">(<argument pos:start="195:34" pos:end="195:34"><expr pos:start="195:34" pos:end="195:34"><name pos:start="195:34" pos:end="195:34">s</name></expr></argument>, <argument pos:start="195:37" pos:end="195:47"><expr pos:start="195:37" pos:end="195:47"><literal type="string" pos:start="195:37" pos:end="195:47">"clk32-kHz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="199:5" pos:end="205:55"><expr pos:start="199:5" pos:end="205:54"><name pos:start="199:5" pos:end="199:10"><name pos:start="199:5" pos:end="199:5">s</name><operator pos:start="199:6" pos:end="199:7">-&gt;</operator><name pos:start="199:8" pos:end="199:10">lcd</name></name> <operator pos:start="199:12" pos:end="199:12">=</operator> <call pos:start="199:14" pos:end="205:54"><name pos:start="199:14" pos:end="199:27">omap_lcdc_init</name><argument_list pos:start="199:28" pos:end="205:54">(<argument pos:start="199:29" pos:end="199:41"><expr pos:start="199:29" pos:end="199:41"><name pos:start="199:29" pos:end="199:41">system_memory</name></expr></argument>, <argument pos:start="199:44" pos:end="199:53"><expr pos:start="199:44" pos:end="199:53"><literal type="number" pos:start="199:44" pos:end="199:53">0xfffec000</literal></expr></argument>,

                            <argument pos:start="201:29" pos:end="201:73"><expr pos:start="201:29" pos:end="201:73"><call pos:start="201:29" pos:end="201:73"><name pos:start="201:29" pos:end="201:44">qdev_get_gpio_in</name><argument_list pos:start="201:45" pos:end="201:73">(<argument pos:start="201:46" pos:end="201:53"><expr pos:start="201:46" pos:end="201:53"><name pos:start="201:46" pos:end="201:53"><name pos:start="201:46" pos:end="201:46">s</name><operator pos:start="201:47" pos:end="201:48">-&gt;</operator><name pos:start="201:49" pos:end="201:50">ih</name><index pos:start="201:51" pos:end="201:53">[<expr pos:start="201:52" pos:end="201:52"><literal type="number" pos:start="201:52" pos:end="201:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="201:56" pos:end="201:72"><expr pos:start="201:56" pos:end="201:72"><name pos:start="201:56" pos:end="201:72">OMAP_INT_LCD_CTRL</name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="203:29" pos:end="203:54"><expr pos:start="203:29" pos:end="203:54"><call pos:start="203:29" pos:end="203:54"><name pos:start="203:29" pos:end="203:46">omap_dma_get_lcdch</name><argument_list pos:start="203:47" pos:end="203:54">(<argument pos:start="203:48" pos:end="203:53"><expr pos:start="203:48" pos:end="203:53"><name pos:start="203:48" pos:end="203:53"><name pos:start="203:48" pos:end="203:48">s</name><operator pos:start="203:49" pos:end="203:50">-&gt;</operator><name pos:start="203:51" pos:end="203:53">dma</name></name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="205:29" pos:end="205:53"><expr pos:start="205:29" pos:end="205:53"><call pos:start="205:29" pos:end="205:53"><name pos:start="205:29" pos:end="205:40">omap_findclk</name><argument_list pos:start="205:41" pos:end="205:53">(<argument pos:start="205:42" pos:end="205:42"><expr pos:start="205:42" pos:end="205:42"><name pos:start="205:42" pos:end="205:42">s</name></expr></argument>, <argument pos:start="205:45" pos:end="205:52"><expr pos:start="205:45" pos:end="205:52"><literal type="string" pos:start="205:45" pos:end="205:52">"lcd_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:52"><expr pos:start="209:5" pos:end="209:51"><call pos:start="209:5" pos:end="209:51"><name pos:start="209:5" pos:end="209:21">omap_ulpd_pm_init</name><argument_list pos:start="209:22" pos:end="209:51">(<argument pos:start="209:23" pos:end="209:35"><expr pos:start="209:23" pos:end="209:35"><name pos:start="209:23" pos:end="209:35">system_memory</name></expr></argument>, <argument pos:start="209:38" pos:end="209:47"><expr pos:start="209:38" pos:end="209:47"><literal type="number" pos:start="209:38" pos:end="209:47">0xfffe0800</literal></expr></argument>, <argument pos:start="209:50" pos:end="209:50"><expr pos:start="209:50" pos:end="209:50"><name pos:start="209:50" pos:end="209:50">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:52"><expr pos:start="211:5" pos:end="211:51"><call pos:start="211:5" pos:end="211:51"><name pos:start="211:5" pos:end="211:21">omap_pin_cfg_init</name><argument_list pos:start="211:22" pos:end="211:51">(<argument pos:start="211:23" pos:end="211:35"><expr pos:start="211:23" pos:end="211:35"><name pos:start="211:23" pos:end="211:35">system_memory</name></expr></argument>, <argument pos:start="211:38" pos:end="211:47"><expr pos:start="211:38" pos:end="211:47"><literal type="number" pos:start="211:38" pos:end="211:47">0xfffe1000</literal></expr></argument>, <argument pos:start="211:50" pos:end="211:50"><expr pos:start="211:50" pos:end="211:50"><name pos:start="211:50" pos:end="211:50">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:35"><expr pos:start="213:5" pos:end="213:34"><call pos:start="213:5" pos:end="213:34"><name pos:start="213:5" pos:end="213:16">omap_id_init</name><argument_list pos:start="213:17" pos:end="213:34">(<argument pos:start="213:18" pos:end="213:30"><expr pos:start="213:18" pos:end="213:30"><name pos:start="213:18" pos:end="213:30">system_memory</name></expr></argument>, <argument pos:start="213:33" pos:end="213:33"><expr pos:start="213:33" pos:end="213:33"><name pos:start="213:33" pos:end="213:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="217:5" pos:end="217:49"><expr pos:start="217:5" pos:end="217:48"><call pos:start="217:5" pos:end="217:48"><name pos:start="217:5" pos:end="217:18">omap_mpui_init</name><argument_list pos:start="217:19" pos:end="217:48">(<argument pos:start="217:20" pos:end="217:32"><expr pos:start="217:20" pos:end="217:32"><name pos:start="217:20" pos:end="217:32">system_memory</name></expr></argument>, <argument pos:start="217:35" pos:end="217:44"><expr pos:start="217:35" pos:end="217:44"><literal type="number" pos:start="217:35" pos:end="217:44">0xfffec900</literal></expr></argument>, <argument pos:start="217:47" pos:end="217:47"><expr pos:start="217:47" pos:end="217:47"><name pos:start="217:47" pos:end="217:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="221:5" pos:end="225:48"><expr pos:start="221:5" pos:end="225:47"><name pos:start="221:5" pos:end="221:19"><name pos:start="221:5" pos:end="221:5">s</name><operator pos:start="221:6" pos:end="221:7">-&gt;</operator><name pos:start="221:8" pos:end="221:19">private_tipb</name></name> <operator pos:start="221:21" pos:end="221:21">=</operator> <call pos:start="221:23" pos:end="225:47"><name pos:start="221:23" pos:end="221:43">omap_tipb_bridge_init</name><argument_list pos:start="221:44" pos:end="225:47">(<argument pos:start="221:45" pos:end="221:57"><expr pos:start="221:45" pos:end="221:57"><name pos:start="221:45" pos:end="221:57">system_memory</name></expr></argument>, <argument pos:start="221:60" pos:end="221:69"><expr pos:start="221:60" pos:end="221:69"><literal type="number" pos:start="221:60" pos:end="221:69">0xfffeca00</literal></expr></argument>,

                    <argument pos:start="223:21" pos:end="223:68"><expr pos:start="223:21" pos:end="223:68"><call pos:start="223:21" pos:end="223:68"><name pos:start="223:21" pos:end="223:36">qdev_get_gpio_in</name><argument_list pos:start="223:37" pos:end="223:68">(<argument pos:start="223:38" pos:end="223:45"><expr pos:start="223:38" pos:end="223:45"><name pos:start="223:38" pos:end="223:45"><name pos:start="223:38" pos:end="223:38">s</name><operator pos:start="223:39" pos:end="223:40">-&gt;</operator><name pos:start="223:41" pos:end="223:42">ih</name><index pos:start="223:43" pos:end="223:45">[<expr pos:start="223:44" pos:end="223:44"><literal type="number" pos:start="223:44" pos:end="223:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="223:48" pos:end="223:67"><expr pos:start="223:48" pos:end="223:67"><name pos:start="223:48" pos:end="223:67">OMAP_INT_BRIDGE_PRIV</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="225:21" pos:end="225:46"><expr pos:start="225:21" pos:end="225:46"><call pos:start="225:21" pos:end="225:46"><name pos:start="225:21" pos:end="225:32">omap_findclk</name><argument_list pos:start="225:33" pos:end="225:46">(<argument pos:start="225:34" pos:end="225:34"><expr pos:start="225:34" pos:end="225:34"><name pos:start="225:34" pos:end="225:34">s</name></expr></argument>, <argument pos:start="225:37" pos:end="225:45"><expr pos:start="225:37" pos:end="225:45"><literal type="string" pos:start="225:37" pos:end="225:45">"tipb_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="231:48"><expr pos:start="227:5" pos:end="231:47"><name pos:start="227:5" pos:end="227:18"><name pos:start="227:5" pos:end="227:5">s</name><operator pos:start="227:6" pos:end="227:7">-&gt;</operator><name pos:start="227:8" pos:end="227:18">public_tipb</name></name> <operator pos:start="227:20" pos:end="227:20">=</operator> <call pos:start="227:22" pos:end="231:47"><name pos:start="227:22" pos:end="227:42">omap_tipb_bridge_init</name><argument_list pos:start="227:43" pos:end="231:47">(<argument pos:start="227:44" pos:end="227:56"><expr pos:start="227:44" pos:end="227:56"><name pos:start="227:44" pos:end="227:56">system_memory</name></expr></argument>, <argument pos:start="227:59" pos:end="227:68"><expr pos:start="227:59" pos:end="227:68"><literal type="number" pos:start="227:59" pos:end="227:68">0xfffed300</literal></expr></argument>,

                    <argument pos:start="229:21" pos:end="229:67"><expr pos:start="229:21" pos:end="229:67"><call pos:start="229:21" pos:end="229:67"><name pos:start="229:21" pos:end="229:36">qdev_get_gpio_in</name><argument_list pos:start="229:37" pos:end="229:67">(<argument pos:start="229:38" pos:end="229:45"><expr pos:start="229:38" pos:end="229:45"><name pos:start="229:38" pos:end="229:45"><name pos:start="229:38" pos:end="229:38">s</name><operator pos:start="229:39" pos:end="229:40">-&gt;</operator><name pos:start="229:41" pos:end="229:42">ih</name><index pos:start="229:43" pos:end="229:45">[<expr pos:start="229:44" pos:end="229:44"><literal type="number" pos:start="229:44" pos:end="229:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="229:48" pos:end="229:66"><expr pos:start="229:48" pos:end="229:66"><name pos:start="229:48" pos:end="229:66">OMAP_INT_BRIDGE_PUB</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="231:21" pos:end="231:46"><expr pos:start="231:21" pos:end="231:46"><call pos:start="231:21" pos:end="231:46"><name pos:start="231:21" pos:end="231:32">omap_findclk</name><argument_list pos:start="231:33" pos:end="231:46">(<argument pos:start="231:34" pos:end="231:34"><expr pos:start="231:34" pos:end="231:34"><name pos:start="231:34" pos:end="231:34">s</name></expr></argument>, <argument pos:start="231:37" pos:end="231:45"><expr pos:start="231:37" pos:end="231:45"><literal type="string" pos:start="231:37" pos:end="231:45">"tipb_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="235:5" pos:end="235:49"><expr pos:start="235:5" pos:end="235:48"><call pos:start="235:5" pos:end="235:48"><name pos:start="235:5" pos:end="235:18">omap_tcmi_init</name><argument_list pos:start="235:19" pos:end="235:48">(<argument pos:start="235:20" pos:end="235:32"><expr pos:start="235:20" pos:end="235:32"><name pos:start="235:20" pos:end="235:32">system_memory</name></expr></argument>, <argument pos:start="235:35" pos:end="235:44"><expr pos:start="235:35" pos:end="235:44"><literal type="number" pos:start="235:35" pos:end="235:44">0xfffecc00</literal></expr></argument>, <argument pos:start="235:47" pos:end="235:47"><expr pos:start="235:47" pos:end="235:47"><name pos:start="235:47" pos:end="235:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="239:5" pos:end="251:35"><expr pos:start="239:5" pos:end="251:34"><name pos:start="239:5" pos:end="239:14"><name pos:start="239:5" pos:end="239:5">s</name><operator pos:start="239:6" pos:end="239:7">-&gt;</operator><name pos:start="239:8" pos:end="239:11">uart</name><index pos:start="239:12" pos:end="239:14">[<expr pos:start="239:13" pos:end="239:13"><literal type="number" pos:start="239:13" pos:end="239:13">0</literal></expr>]</index></name> <operator pos:start="239:16" pos:end="239:16">=</operator> <call pos:start="239:18" pos:end="251:34"><name pos:start="239:18" pos:end="239:31">omap_uart_init</name><argument_list pos:start="239:32" pos:end="251:34">(<argument pos:start="239:33" pos:end="239:42"><expr pos:start="239:33" pos:end="239:42"><literal type="number" pos:start="239:33" pos:end="239:42">0xfffb0000</literal></expr></argument>,

                                <argument pos:start="241:33" pos:end="241:74"><expr pos:start="241:33" pos:end="241:74"><call pos:start="241:33" pos:end="241:74"><name pos:start="241:33" pos:end="241:48">qdev_get_gpio_in</name><argument_list pos:start="241:49" pos:end="241:74">(<argument pos:start="241:50" pos:end="241:57"><expr pos:start="241:50" pos:end="241:57"><name pos:start="241:50" pos:end="241:57"><name pos:start="241:50" pos:end="241:50">s</name><operator pos:start="241:51" pos:end="241:52">-&gt;</operator><name pos:start="241:53" pos:end="241:54">ih</name><index pos:start="241:55" pos:end="241:57">[<expr pos:start="241:56" pos:end="241:56"><literal type="number" pos:start="241:56" pos:end="241:56">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="241:60" pos:end="241:73"><expr pos:start="241:60" pos:end="241:73"><name pos:start="241:60" pos:end="241:73">OMAP_INT_UART1</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="243:21" pos:end="243:47"><expr pos:start="243:21" pos:end="243:47"><call pos:start="243:21" pos:end="243:47"><name pos:start="243:21" pos:end="243:32">omap_findclk</name><argument_list pos:start="243:33" pos:end="243:47">(<argument pos:start="243:34" pos:end="243:34"><expr pos:start="243:34" pos:end="243:34"><name pos:start="243:34" pos:end="243:34">s</name></expr></argument>, <argument pos:start="243:37" pos:end="243:46"><expr pos:start="243:37" pos:end="243:46"><literal type="string" pos:start="243:37" pos:end="243:46">"uart1_ck"</literal></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="245:21" pos:end="245:47"><expr pos:start="245:21" pos:end="245:47"><call pos:start="245:21" pos:end="245:47"><name pos:start="245:21" pos:end="245:32">omap_findclk</name><argument_list pos:start="245:33" pos:end="245:47">(<argument pos:start="245:34" pos:end="245:34"><expr pos:start="245:34" pos:end="245:34"><name pos:start="245:34" pos:end="245:34">s</name></expr></argument>, <argument pos:start="245:37" pos:end="245:46"><expr pos:start="245:37" pos:end="245:46"><literal type="string" pos:start="245:37" pos:end="245:46">"uart1_ck"</literal></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="247:21" pos:end="247:45"><expr pos:start="247:21" pos:end="247:45"><name pos:start="247:21" pos:end="247:45"><name pos:start="247:21" pos:end="247:21">s</name><operator pos:start="247:22" pos:end="247:23">-&gt;</operator><name pos:start="247:24" pos:end="247:26">drq</name><index pos:start="247:27" pos:end="247:45">[<expr pos:start="247:28" pos:end="247:44"><name pos:start="247:28" pos:end="247:44">OMAP_DMA_UART1_TX</name></expr>]</index></name></expr></argument>, <argument pos:start="247:48" pos:end="247:72"><expr pos:start="247:48" pos:end="247:72"><name pos:start="247:48" pos:end="247:72"><name pos:start="247:48" pos:end="247:48">s</name><operator pos:start="247:49" pos:end="247:50">-&gt;</operator><name pos:start="247:51" pos:end="247:53">drq</name><index pos:start="247:54" pos:end="247:72">[<expr pos:start="247:55" pos:end="247:71"><name pos:start="247:55" pos:end="247:71">OMAP_DMA_UART1_RX</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="249:21" pos:end="249:27"><expr pos:start="249:21" pos:end="249:27"><literal type="string" pos:start="249:21" pos:end="249:27">"uart1"</literal></expr></argument>,

                    <argument pos:start="251:21" pos:end="251:33"><expr pos:start="251:21" pos:end="251:33"><name pos:start="251:21" pos:end="251:33"><name pos:start="251:21" pos:end="251:30">serial_hds</name><index pos:start="251:31" pos:end="251:33">[<expr pos:start="251:32" pos:end="251:32"><literal type="number" pos:start="251:32" pos:end="251:32">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="265:58"><expr pos:start="253:5" pos:end="265:57"><name pos:start="253:5" pos:end="253:14"><name pos:start="253:5" pos:end="253:5">s</name><operator pos:start="253:6" pos:end="253:7">-&gt;</operator><name pos:start="253:8" pos:end="253:11">uart</name><index pos:start="253:12" pos:end="253:14">[<expr pos:start="253:13" pos:end="253:13"><literal type="number" pos:start="253:13" pos:end="253:13">1</literal></expr>]</index></name> <operator pos:start="253:16" pos:end="253:16">=</operator> <call pos:start="253:18" pos:end="265:57"><name pos:start="253:18" pos:end="253:31">omap_uart_init</name><argument_list pos:start="253:32" pos:end="265:57">(<argument pos:start="253:33" pos:end="253:42"><expr pos:start="253:33" pos:end="253:42"><literal type="number" pos:start="253:33" pos:end="253:42">0xfffb0800</literal></expr></argument>,

                                <argument pos:start="255:33" pos:end="255:74"><expr pos:start="255:33" pos:end="255:74"><call pos:start="255:33" pos:end="255:74"><name pos:start="255:33" pos:end="255:48">qdev_get_gpio_in</name><argument_list pos:start="255:49" pos:end="255:74">(<argument pos:start="255:50" pos:end="255:57"><expr pos:start="255:50" pos:end="255:57"><name pos:start="255:50" pos:end="255:57"><name pos:start="255:50" pos:end="255:50">s</name><operator pos:start="255:51" pos:end="255:52">-&gt;</operator><name pos:start="255:53" pos:end="255:54">ih</name><index pos:start="255:55" pos:end="255:57">[<expr pos:start="255:56" pos:end="255:56"><literal type="number" pos:start="255:56" pos:end="255:56">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="255:60" pos:end="255:73"><expr pos:start="255:60" pos:end="255:73"><name pos:start="255:60" pos:end="255:73">OMAP_INT_UART2</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="257:21" pos:end="257:47"><expr pos:start="257:21" pos:end="257:47"><call pos:start="257:21" pos:end="257:47"><name pos:start="257:21" pos:end="257:32">omap_findclk</name><argument_list pos:start="257:33" pos:end="257:47">(<argument pos:start="257:34" pos:end="257:34"><expr pos:start="257:34" pos:end="257:34"><name pos:start="257:34" pos:end="257:34">s</name></expr></argument>, <argument pos:start="257:37" pos:end="257:46"><expr pos:start="257:37" pos:end="257:46"><literal type="string" pos:start="257:37" pos:end="257:46">"uart2_ck"</literal></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="259:21" pos:end="259:47"><expr pos:start="259:21" pos:end="259:47"><call pos:start="259:21" pos:end="259:47"><name pos:start="259:21" pos:end="259:32">omap_findclk</name><argument_list pos:start="259:33" pos:end="259:47">(<argument pos:start="259:34" pos:end="259:34"><expr pos:start="259:34" pos:end="259:34"><name pos:start="259:34" pos:end="259:34">s</name></expr></argument>, <argument pos:start="259:37" pos:end="259:46"><expr pos:start="259:37" pos:end="259:46"><literal type="string" pos:start="259:37" pos:end="259:46">"uart2_ck"</literal></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="261:21" pos:end="261:45"><expr pos:start="261:21" pos:end="261:45"><name pos:start="261:21" pos:end="261:45"><name pos:start="261:21" pos:end="261:21">s</name><operator pos:start="261:22" pos:end="261:23">-&gt;</operator><name pos:start="261:24" pos:end="261:26">drq</name><index pos:start="261:27" pos:end="261:45">[<expr pos:start="261:28" pos:end="261:44"><name pos:start="261:28" pos:end="261:44">OMAP_DMA_UART2_TX</name></expr>]</index></name></expr></argument>, <argument pos:start="261:48" pos:end="261:72"><expr pos:start="261:48" pos:end="261:72"><name pos:start="261:48" pos:end="261:72"><name pos:start="261:48" pos:end="261:48">s</name><operator pos:start="261:49" pos:end="261:50">-&gt;</operator><name pos:start="261:51" pos:end="261:53">drq</name><index pos:start="261:54" pos:end="261:72">[<expr pos:start="261:55" pos:end="261:71"><name pos:start="261:55" pos:end="261:71">OMAP_DMA_UART2_RX</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="263:21" pos:end="263:27"><expr pos:start="263:21" pos:end="263:27"><literal type="string" pos:start="263:21" pos:end="263:27">"uart2"</literal></expr></argument>,

                    <argument pos:start="265:21" pos:end="265:56"><expr pos:start="265:21" pos:end="265:56"><ternary pos:start="265:21" pos:end="265:56"><condition pos:start="265:21" pos:end="265:35"><expr pos:start="265:21" pos:end="265:33"><name pos:start="265:21" pos:end="265:33"><name pos:start="265:21" pos:end="265:30">serial_hds</name><index pos:start="265:31" pos:end="265:33">[<expr pos:start="265:32" pos:end="265:32"><literal type="number" pos:start="265:32" pos:end="265:32">0</literal></expr>]</index></name></expr> ?</condition><then pos:start="265:37" pos:end="265:49"> <expr pos:start="265:37" pos:end="265:49"><name pos:start="265:37" pos:end="265:49"><name pos:start="265:37" pos:end="265:46">serial_hds</name><index pos:start="265:47" pos:end="265:49">[<expr pos:start="265:48" pos:end="265:48"><literal type="number" pos:start="265:48" pos:end="265:48">1</literal></expr>]</index></name></expr> </then><else pos:start="265:51" pos:end="265:56">: <expr pos:start="265:53" pos:end="265:56"><name pos:start="265:53" pos:end="265:56">NULL</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="279:75"><expr pos:start="267:5" pos:end="279:74"><name pos:start="267:5" pos:end="267:14"><name pos:start="267:5" pos:end="267:5">s</name><operator pos:start="267:6" pos:end="267:7">-&gt;</operator><name pos:start="267:8" pos:end="267:11">uart</name><index pos:start="267:12" pos:end="267:14">[<expr pos:start="267:13" pos:end="267:13"><literal type="number" pos:start="267:13" pos:end="267:13">2</literal></expr>]</index></name> <operator pos:start="267:16" pos:end="267:16">=</operator> <call pos:start="267:18" pos:end="279:74"><name pos:start="267:18" pos:end="267:31">omap_uart_init</name><argument_list pos:start="267:32" pos:end="279:74">(<argument pos:start="267:33" pos:end="267:42"><expr pos:start="267:33" pos:end="267:42"><literal type="number" pos:start="267:33" pos:end="267:42">0xfffb9800</literal></expr></argument>,

                                <argument pos:start="269:33" pos:end="269:74"><expr pos:start="269:33" pos:end="269:74"><call pos:start="269:33" pos:end="269:74"><name pos:start="269:33" pos:end="269:48">qdev_get_gpio_in</name><argument_list pos:start="269:49" pos:end="269:74">(<argument pos:start="269:50" pos:end="269:57"><expr pos:start="269:50" pos:end="269:57"><name pos:start="269:50" pos:end="269:57"><name pos:start="269:50" pos:end="269:50">s</name><operator pos:start="269:51" pos:end="269:52">-&gt;</operator><name pos:start="269:53" pos:end="269:54">ih</name><index pos:start="269:55" pos:end="269:57">[<expr pos:start="269:56" pos:end="269:56"><literal type="number" pos:start="269:56" pos:end="269:56">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="269:60" pos:end="269:73"><expr pos:start="269:60" pos:end="269:73"><name pos:start="269:60" pos:end="269:73">OMAP_INT_UART3</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="271:21" pos:end="271:47"><expr pos:start="271:21" pos:end="271:47"><call pos:start="271:21" pos:end="271:47"><name pos:start="271:21" pos:end="271:32">omap_findclk</name><argument_list pos:start="271:33" pos:end="271:47">(<argument pos:start="271:34" pos:end="271:34"><expr pos:start="271:34" pos:end="271:34"><name pos:start="271:34" pos:end="271:34">s</name></expr></argument>, <argument pos:start="271:37" pos:end="271:46"><expr pos:start="271:37" pos:end="271:46"><literal type="string" pos:start="271:37" pos:end="271:46">"uart3_ck"</literal></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="273:21" pos:end="273:47"><expr pos:start="273:21" pos:end="273:47"><call pos:start="273:21" pos:end="273:47"><name pos:start="273:21" pos:end="273:32">omap_findclk</name><argument_list pos:start="273:33" pos:end="273:47">(<argument pos:start="273:34" pos:end="273:34"><expr pos:start="273:34" pos:end="273:34"><name pos:start="273:34" pos:end="273:34">s</name></expr></argument>, <argument pos:start="273:37" pos:end="273:46"><expr pos:start="273:37" pos:end="273:46"><literal type="string" pos:start="273:37" pos:end="273:46">"uart3_ck"</literal></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="275:21" pos:end="275:45"><expr pos:start="275:21" pos:end="275:45"><name pos:start="275:21" pos:end="275:45"><name pos:start="275:21" pos:end="275:21">s</name><operator pos:start="275:22" pos:end="275:23">-&gt;</operator><name pos:start="275:24" pos:end="275:26">drq</name><index pos:start="275:27" pos:end="275:45">[<expr pos:start="275:28" pos:end="275:44"><name pos:start="275:28" pos:end="275:44">OMAP_DMA_UART3_TX</name></expr>]</index></name></expr></argument>, <argument pos:start="275:48" pos:end="275:72"><expr pos:start="275:48" pos:end="275:72"><name pos:start="275:48" pos:end="275:72"><name pos:start="275:48" pos:end="275:48">s</name><operator pos:start="275:49" pos:end="275:50">-&gt;</operator><name pos:start="275:51" pos:end="275:53">drq</name><index pos:start="275:54" pos:end="275:72">[<expr pos:start="275:55" pos:end="275:71"><name pos:start="275:55" pos:end="275:71">OMAP_DMA_UART3_RX</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="277:21" pos:end="277:27"><expr pos:start="277:21" pos:end="277:27"><literal type="string" pos:start="277:21" pos:end="277:27">"uart3"</literal></expr></argument>,

                    <argument pos:start="279:21" pos:end="279:73"><expr pos:start="279:21" pos:end="279:73"><ternary pos:start="279:21" pos:end="279:73"><condition pos:start="279:21" pos:end="279:52"><expr pos:start="279:21" pos:end="279:50"><name pos:start="279:21" pos:end="279:33"><name pos:start="279:21" pos:end="279:30">serial_hds</name><index pos:start="279:31" pos:end="279:33">[<expr pos:start="279:32" pos:end="279:32"><literal type="number" pos:start="279:32" pos:end="279:32">0</literal></expr>]</index></name> <operator pos:start="279:35" pos:end="279:36">&amp;&amp;</operator> <name pos:start="279:38" pos:end="279:50"><name pos:start="279:38" pos:end="279:47">serial_hds</name><index pos:start="279:48" pos:end="279:50">[<expr pos:start="279:49" pos:end="279:49"><literal type="number" pos:start="279:49" pos:end="279:49">1</literal></expr>]</index></name></expr> ?</condition><then pos:start="279:54" pos:end="279:66"> <expr pos:start="279:54" pos:end="279:66"><name pos:start="279:54" pos:end="279:66"><name pos:start="279:54" pos:end="279:63">serial_hds</name><index pos:start="279:64" pos:end="279:66">[<expr pos:start="279:65" pos:end="279:65"><literal type="number" pos:start="279:65" pos:end="279:65">2</literal></expr>]</index></name></expr> </then><else pos:start="279:68" pos:end="279:73">: <expr pos:start="279:70" pos:end="279:73"><name pos:start="279:70" pos:end="279:73">NULL</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="283:5" pos:end="285:58"><expr pos:start="283:5" pos:end="285:57"><name pos:start="283:5" pos:end="283:14"><name pos:start="283:5" pos:end="283:5">s</name><operator pos:start="283:6" pos:end="283:7">-&gt;</operator><name pos:start="283:8" pos:end="283:11">dpll</name><index pos:start="283:12" pos:end="283:14">[<expr pos:start="283:13" pos:end="283:13"><literal type="number" pos:start="283:13" pos:end="283:13">0</literal></expr>]</index></name> <operator pos:start="283:16" pos:end="283:16">=</operator> <call pos:start="283:18" pos:end="285:57"><name pos:start="283:18" pos:end="283:31">omap_dpll_init</name><argument_list pos:start="283:32" pos:end="285:57">(<argument pos:start="283:33" pos:end="283:45"><expr pos:start="283:33" pos:end="283:45"><name pos:start="283:33" pos:end="283:45">system_memory</name></expr></argument>, <argument pos:start="283:48" pos:end="283:57"><expr pos:start="283:48" pos:end="283:57"><literal type="number" pos:start="283:48" pos:end="283:57">0xfffecf00</literal></expr></argument>,

                                <argument pos:start="285:33" pos:end="285:56"><expr pos:start="285:33" pos:end="285:56"><call pos:start="285:33" pos:end="285:56"><name pos:start="285:33" pos:end="285:44">omap_findclk</name><argument_list pos:start="285:45" pos:end="285:56">(<argument pos:start="285:46" pos:end="285:46"><expr pos:start="285:46" pos:end="285:46"><name pos:start="285:46" pos:end="285:46">s</name></expr></argument>, <argument pos:start="285:49" pos:end="285:55"><expr pos:start="285:49" pos:end="285:55"><literal type="string" pos:start="285:49" pos:end="285:55">"dpll1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="289:58"><expr pos:start="287:5" pos:end="289:57"><name pos:start="287:5" pos:end="287:14"><name pos:start="287:5" pos:end="287:5">s</name><operator pos:start="287:6" pos:end="287:7">-&gt;</operator><name pos:start="287:8" pos:end="287:11">dpll</name><index pos:start="287:12" pos:end="287:14">[<expr pos:start="287:13" pos:end="287:13"><literal type="number" pos:start="287:13" pos:end="287:13">1</literal></expr>]</index></name> <operator pos:start="287:16" pos:end="287:16">=</operator> <call pos:start="287:18" pos:end="289:57"><name pos:start="287:18" pos:end="287:31">omap_dpll_init</name><argument_list pos:start="287:32" pos:end="289:57">(<argument pos:start="287:33" pos:end="287:45"><expr pos:start="287:33" pos:end="287:45"><name pos:start="287:33" pos:end="287:45">system_memory</name></expr></argument>, <argument pos:start="287:48" pos:end="287:57"><expr pos:start="287:48" pos:end="287:57"><literal type="number" pos:start="287:48" pos:end="287:57">0xfffed000</literal></expr></argument>,

                                <argument pos:start="289:33" pos:end="289:56"><expr pos:start="289:33" pos:end="289:56"><call pos:start="289:33" pos:end="289:56"><name pos:start="289:33" pos:end="289:44">omap_findclk</name><argument_list pos:start="289:45" pos:end="289:56">(<argument pos:start="289:46" pos:end="289:46"><expr pos:start="289:46" pos:end="289:46"><name pos:start="289:46" pos:end="289:46">s</name></expr></argument>, <argument pos:start="289:49" pos:end="289:55"><expr pos:start="289:49" pos:end="289:55"><literal type="string" pos:start="289:49" pos:end="289:55">"dpll2"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="291:5" pos:end="293:58"><expr pos:start="291:5" pos:end="293:57"><name pos:start="291:5" pos:end="291:14"><name pos:start="291:5" pos:end="291:5">s</name><operator pos:start="291:6" pos:end="291:7">-&gt;</operator><name pos:start="291:8" pos:end="291:11">dpll</name><index pos:start="291:12" pos:end="291:14">[<expr pos:start="291:13" pos:end="291:13"><literal type="number" pos:start="291:13" pos:end="291:13">2</literal></expr>]</index></name> <operator pos:start="291:16" pos:end="291:16">=</operator> <call pos:start="291:18" pos:end="293:57"><name pos:start="291:18" pos:end="291:31">omap_dpll_init</name><argument_list pos:start="291:32" pos:end="293:57">(<argument pos:start="291:33" pos:end="291:45"><expr pos:start="291:33" pos:end="291:45"><name pos:start="291:33" pos:end="291:45">system_memory</name></expr></argument>, <argument pos:start="291:48" pos:end="291:57"><expr pos:start="291:48" pos:end="291:57"><literal type="number" pos:start="291:48" pos:end="291:57">0xfffed100</literal></expr></argument>,

                                <argument pos:start="293:33" pos:end="293:56"><expr pos:start="293:33" pos:end="293:56"><call pos:start="293:33" pos:end="293:56"><name pos:start="293:33" pos:end="293:44">omap_findclk</name><argument_list pos:start="293:45" pos:end="293:56">(<argument pos:start="293:46" pos:end="293:46"><expr pos:start="293:46" pos:end="293:46"><name pos:start="293:46" pos:end="293:46">s</name></expr></argument>, <argument pos:start="293:49" pos:end="293:55"><expr pos:start="293:49" pos:end="293:55"><literal type="string" pos:start="293:49" pos:end="293:55">"dpll3"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="297:5" pos:end="297:35"><expr pos:start="297:5" pos:end="297:34"><name pos:start="297:5" pos:end="297:9">dinfo</name> <operator pos:start="297:11" pos:end="297:11">=</operator> <call pos:start="297:13" pos:end="297:34"><name pos:start="297:13" pos:end="297:21">drive_get</name><argument_list pos:start="297:22" pos:end="297:34">(<argument pos:start="297:23" pos:end="297:27"><expr pos:start="297:23" pos:end="297:27"><name pos:start="297:23" pos:end="297:27">IF_SD</name></expr></argument>, <argument pos:start="297:30" pos:end="297:30"><expr pos:start="297:30" pos:end="297:30"><literal type="number" pos:start="297:30" pos:end="297:30">0</literal></expr></argument>, <argument pos:start="297:33" pos:end="297:33"><expr pos:start="297:33" pos:end="297:33"><literal type="number" pos:start="297:33" pos:end="297:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="299:5" pos:end="305:5"><if pos:start="299:5" pos:end="305:5">if <condition pos:start="299:8" pos:end="299:15">(<expr pos:start="299:9" pos:end="299:14"><operator pos:start="299:9" pos:end="299:9">!</operator><name pos:start="299:10" pos:end="299:14">dinfo</name></expr>)</condition> <block pos:start="299:17" pos:end="305:5">{<block_content pos:start="301:9" pos:end="303:16">

        <expr_stmt pos:start="301:9" pos:end="301:64"><expr pos:start="301:9" pos:end="301:63"><call pos:start="301:9" pos:end="301:63"><name pos:start="301:9" pos:end="301:15">fprintf</name><argument_list pos:start="301:16" pos:end="301:63">(<argument pos:start="301:17" pos:end="301:22"><expr pos:start="301:17" pos:end="301:22"><name pos:start="301:17" pos:end="301:22">stderr</name></expr></argument>, <argument pos:start="301:25" pos:end="301:62"><expr pos:start="301:25" pos:end="301:62"><literal type="string" pos:start="301:25" pos:end="301:62">"qemu: missing SecureDigital device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:16"><expr pos:start="303:9" pos:end="303:15"><call pos:start="303:9" pos:end="303:15"><name pos:start="303:9" pos:end="303:12">exit</name><argument_list pos:start="303:13" pos:end="303:15">(<argument pos:start="303:14" pos:end="303:14"><expr pos:start="303:14" pos:end="303:14"><literal type="number" pos:start="303:14" pos:end="303:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="307:5" pos:end="315:47"><expr pos:start="307:5" pos:end="315:46"><name pos:start="307:5" pos:end="307:10"><name pos:start="307:5" pos:end="307:5">s</name><operator pos:start="307:6" pos:end="307:7">-&gt;</operator><name pos:start="307:8" pos:end="307:10">mmc</name></name> <operator pos:start="307:12" pos:end="307:12">=</operator> <call pos:start="307:14" pos:end="315:46"><name pos:start="307:14" pos:end="307:26">omap_mmc_init</name><argument_list pos:start="307:27" pos:end="315:46">(<argument pos:start="307:28" pos:end="307:37"><expr pos:start="307:28" pos:end="307:37"><literal type="number" pos:start="307:28" pos:end="307:37">0xfffb7800</literal></expr></argument>, <argument pos:start="307:40" pos:end="307:52"><expr pos:start="307:40" pos:end="307:52"><name pos:start="307:40" pos:end="307:52">system_memory</name></expr></argument>,

                           <argument pos:start="309:28" pos:end="309:53"><expr pos:start="309:28" pos:end="309:53"><call pos:start="309:28" pos:end="309:53"><name pos:start="309:28" pos:end="309:46">blk_by_legacy_dinfo</name><argument_list pos:start="309:47" pos:end="309:53">(<argument pos:start="309:48" pos:end="309:52"><expr pos:start="309:48" pos:end="309:52"><name pos:start="309:48" pos:end="309:52">dinfo</name></expr></argument>)</argument_list></call></expr></argument>,

                           <argument pos:start="311:28" pos:end="311:67"><expr pos:start="311:28" pos:end="311:67"><call pos:start="311:28" pos:end="311:67"><name pos:start="311:28" pos:end="311:43">qdev_get_gpio_in</name><argument_list pos:start="311:44" pos:end="311:67">(<argument pos:start="311:45" pos:end="311:52"><expr pos:start="311:45" pos:end="311:52"><name pos:start="311:45" pos:end="311:52"><name pos:start="311:45" pos:end="311:45">s</name><operator pos:start="311:46" pos:end="311:47">-&gt;</operator><name pos:start="311:48" pos:end="311:49">ih</name><index pos:start="311:50" pos:end="311:52">[<expr pos:start="311:51" pos:end="311:51"><literal type="number" pos:start="311:51" pos:end="311:51">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="311:55" pos:end="311:66"><expr pos:start="311:55" pos:end="311:66"><name pos:start="311:55" pos:end="311:66">OMAP_INT_OQN</name></expr></argument>)</argument_list></call></expr></argument>,

                           <argument pos:start="313:28" pos:end="313:51"><expr pos:start="313:28" pos:end="313:51"><operator pos:start="313:28" pos:end="313:28">&amp;</operator><name pos:start="313:29" pos:end="313:51"><name pos:start="313:29" pos:end="313:29">s</name><operator pos:start="313:30" pos:end="313:31">-&gt;</operator><name pos:start="313:32" pos:end="313:34">drq</name><index pos:start="313:35" pos:end="313:51">[<expr pos:start="313:36" pos:end="313:50"><name pos:start="313:36" pos:end="313:50">OMAP_DMA_MMC_TX</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="315:21" pos:end="315:45"><expr pos:start="315:21" pos:end="315:45"><call pos:start="315:21" pos:end="315:45"><name pos:start="315:21" pos:end="315:32">omap_findclk</name><argument_list pos:start="315:33" pos:end="315:45">(<argument pos:start="315:34" pos:end="315:34"><expr pos:start="315:34" pos:end="315:34"><name pos:start="315:34" pos:end="315:34">s</name></expr></argument>, <argument pos:start="315:37" pos:end="315:44"><expr pos:start="315:37" pos:end="315:44"><literal type="string" pos:start="315:37" pos:end="315:44">"mmc_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="319:5" pos:end="325:72"><expr pos:start="319:5" pos:end="325:71"><name pos:start="319:5" pos:end="319:12"><name pos:start="319:5" pos:end="319:5">s</name><operator pos:start="319:6" pos:end="319:7">-&gt;</operator><name pos:start="319:8" pos:end="319:12">mpuio</name></name> <operator pos:start="319:14" pos:end="319:14">=</operator> <call pos:start="319:16" pos:end="325:71"><name pos:start="319:16" pos:end="319:30">omap_mpuio_init</name><argument_list pos:start="319:31" pos:end="325:71">(<argument pos:start="319:32" pos:end="319:44"><expr pos:start="319:32" pos:end="319:44"><name pos:start="319:32" pos:end="319:44">system_memory</name></expr></argument>, <argument pos:start="319:47" pos:end="319:56"><expr pos:start="319:47" pos:end="319:56"><literal type="number" pos:start="319:47" pos:end="319:56">0xfffb5000</literal></expr></argument>,

                               <argument pos:start="321:32" pos:end="321:76"><expr pos:start="321:32" pos:end="321:76"><call pos:start="321:32" pos:end="321:76"><name pos:start="321:32" pos:end="321:47">qdev_get_gpio_in</name><argument_list pos:start="321:48" pos:end="321:76">(<argument pos:start="321:49" pos:end="321:56"><expr pos:start="321:49" pos:end="321:56"><name pos:start="321:49" pos:end="321:56"><name pos:start="321:49" pos:end="321:49">s</name><operator pos:start="321:50" pos:end="321:51">-&gt;</operator><name pos:start="321:52" pos:end="321:53">ih</name><index pos:start="321:54" pos:end="321:56">[<expr pos:start="321:55" pos:end="321:55"><literal type="number" pos:start="321:55" pos:end="321:55">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="321:59" pos:end="321:75"><expr pos:start="321:59" pos:end="321:75"><name pos:start="321:59" pos:end="321:75">OMAP_INT_KEYBOARD</name></expr></argument>)</argument_list></call></expr></argument>,

                               <argument pos:start="323:32" pos:end="323:73"><expr pos:start="323:32" pos:end="323:73"><call pos:start="323:32" pos:end="323:73"><name pos:start="323:32" pos:end="323:47">qdev_get_gpio_in</name><argument_list pos:start="323:48" pos:end="323:73">(<argument pos:start="323:49" pos:end="323:56"><expr pos:start="323:49" pos:end="323:56"><name pos:start="323:49" pos:end="323:56"><name pos:start="323:49" pos:end="323:49">s</name><operator pos:start="323:50" pos:end="323:51">-&gt;</operator><name pos:start="323:52" pos:end="323:53">ih</name><index pos:start="323:54" pos:end="323:56">[<expr pos:start="323:55" pos:end="323:55"><literal type="number" pos:start="323:55" pos:end="323:55">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="323:59" pos:end="323:72"><expr pos:start="323:59" pos:end="323:72"><name pos:start="323:59" pos:end="323:72">OMAP_INT_MPUIO</name></expr></argument>)</argument_list></call></expr></argument>,

                               <argument pos:start="325:32" pos:end="325:40"><expr pos:start="325:32" pos:end="325:40"><name pos:start="325:32" pos:end="325:40"><name pos:start="325:32" pos:end="325:32">s</name><operator pos:start="325:33" pos:end="325:34">-&gt;</operator><name pos:start="325:35" pos:end="325:40">wakeup</name></name></expr></argument>, <argument pos:start="325:43" pos:end="325:70"><expr pos:start="325:43" pos:end="325:70"><call pos:start="325:43" pos:end="325:70"><name pos:start="325:43" pos:end="325:54">omap_findclk</name><argument_list pos:start="325:55" pos:end="325:70">(<argument pos:start="325:56" pos:end="325:56"><expr pos:start="325:56" pos:end="325:56"><name pos:start="325:56" pos:end="325:56">s</name></expr></argument>, <argument pos:start="325:59" pos:end="325:69"><expr pos:start="325:59" pos:end="325:69"><literal type="string" pos:start="325:59" pos:end="325:69">"clk32-kHz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="329:5" pos:end="329:45"><expr pos:start="329:5" pos:end="329:44"><name pos:start="329:5" pos:end="329:11"><name pos:start="329:5" pos:end="329:5">s</name><operator pos:start="329:6" pos:end="329:7">-&gt;</operator><name pos:start="329:8" pos:end="329:11">gpio</name></name> <operator pos:start="329:13" pos:end="329:13">=</operator> <call pos:start="329:15" pos:end="329:44"><name pos:start="329:15" pos:end="329:25">qdev_create</name><argument_list pos:start="329:26" pos:end="329:44">(<argument pos:start="329:27" pos:end="329:30"><expr pos:start="329:27" pos:end="329:30"><name pos:start="329:27" pos:end="329:30">NULL</name></expr></argument>, <argument pos:start="329:33" pos:end="329:43"><expr pos:start="329:33" pos:end="329:43"><literal type="string" pos:start="329:33" pos:end="329:43">"omap-gpio"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:60"><expr pos:start="331:5" pos:end="331:59"><call pos:start="331:5" pos:end="331:59"><name pos:start="331:5" pos:end="331:23">qdev_prop_set_int32</name><argument_list pos:start="331:24" pos:end="331:59">(<argument pos:start="331:25" pos:end="331:31"><expr pos:start="331:25" pos:end="331:31"><name pos:start="331:25" pos:end="331:31"><name pos:start="331:25" pos:end="331:25">s</name><operator pos:start="331:26" pos:end="331:27">-&gt;</operator><name pos:start="331:28" pos:end="331:31">gpio</name></name></expr></argument>, <argument pos:start="331:34" pos:end="331:44"><expr pos:start="331:34" pos:end="331:44"><literal type="string" pos:start="331:34" pos:end="331:44">"mpu_model"</literal></expr></argument>, <argument pos:start="331:47" pos:end="331:58"><expr pos:start="331:47" pos:end="331:58"><name pos:start="331:47" pos:end="331:58"><name pos:start="331:47" pos:end="331:47">s</name><operator pos:start="331:48" pos:end="331:49">-&gt;</operator><name pos:start="331:50" pos:end="331:58">mpu_model</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="333:5" pos:end="333:70"><expr pos:start="333:5" pos:end="333:69"><call pos:start="333:5" pos:end="333:69"><name pos:start="333:5" pos:end="333:21">qdev_prop_set_ptr</name><argument_list pos:start="333:22" pos:end="333:69">(<argument pos:start="333:23" pos:end="333:29"><expr pos:start="333:23" pos:end="333:29"><name pos:start="333:23" pos:end="333:29"><name pos:start="333:23" pos:end="333:23">s</name><operator pos:start="333:24" pos:end="333:25">-&gt;</operator><name pos:start="333:26" pos:end="333:29">gpio</name></name></expr></argument>, <argument pos:start="333:32" pos:end="333:36"><expr pos:start="333:32" pos:end="333:36"><literal type="string" pos:start="333:32" pos:end="333:36">"clk"</literal></expr></argument>, <argument pos:start="333:39" pos:end="333:68"><expr pos:start="333:39" pos:end="333:68"><call pos:start="333:39" pos:end="333:68"><name pos:start="333:39" pos:end="333:50">omap_findclk</name><argument_list pos:start="333:51" pos:end="333:68">(<argument pos:start="333:52" pos:end="333:52"><expr pos:start="333:52" pos:end="333:52"><name pos:start="333:52" pos:end="333:52">s</name></expr></argument>, <argument pos:start="333:55" pos:end="333:67"><expr pos:start="333:55" pos:end="333:67"><literal type="string" pos:start="333:55" pos:end="333:67">"arm_gpio_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:30"><expr pos:start="335:5" pos:end="335:29"><call pos:start="335:5" pos:end="335:29"><name pos:start="335:5" pos:end="335:20">qdev_init_nofail</name><argument_list pos:start="335:21" pos:end="335:29">(<argument pos:start="335:22" pos:end="335:28"><expr pos:start="335:22" pos:end="335:28"><name pos:start="335:22" pos:end="335:28"><name pos:start="335:22" pos:end="335:22">s</name><operator pos:start="335:23" pos:end="335:24">-&gt;</operator><name pos:start="335:25" pos:end="335:28">gpio</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="339:72"><expr pos:start="337:5" pos:end="339:71"><call pos:start="337:5" pos:end="339:71"><name pos:start="337:5" pos:end="337:22">sysbus_connect_irq</name><argument_list pos:start="337:23" pos:end="339:71">(<argument pos:start="337:24" pos:end="337:46"><expr pos:start="337:24" pos:end="337:46"><call pos:start="337:24" pos:end="337:46"><name pos:start="337:24" pos:end="337:37">SYS_BUS_DEVICE</name><argument_list pos:start="337:38" pos:end="337:46">(<argument pos:start="337:39" pos:end="337:45"><expr pos:start="337:39" pos:end="337:45"><name pos:start="337:39" pos:end="337:45"><name pos:start="337:39" pos:end="337:39">s</name><operator pos:start="337:40" pos:end="337:41">-&gt;</operator><name pos:start="337:42" pos:end="337:45">gpio</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="337:49" pos:end="337:49"><expr pos:start="337:49" pos:end="337:49"><literal type="number" pos:start="337:49" pos:end="337:49">0</literal></expr></argument>,

                       <argument pos:start="339:24" pos:end="339:70"><expr pos:start="339:24" pos:end="339:70"><call pos:start="339:24" pos:end="339:70"><name pos:start="339:24" pos:end="339:39">qdev_get_gpio_in</name><argument_list pos:start="339:40" pos:end="339:70">(<argument pos:start="339:41" pos:end="339:48"><expr pos:start="339:41" pos:end="339:48"><name pos:start="339:41" pos:end="339:48"><name pos:start="339:41" pos:end="339:41">s</name><operator pos:start="339:42" pos:end="339:43">-&gt;</operator><name pos:start="339:44" pos:end="339:45">ih</name><index pos:start="339:46" pos:end="339:48">[<expr pos:start="339:47" pos:end="339:47"><literal type="number" pos:start="339:47" pos:end="339:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="339:51" pos:end="339:69"><expr pos:start="339:51" pos:end="339:69"><name pos:start="339:51" pos:end="339:69">OMAP_INT_GPIO_BANK1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="341:5" pos:end="341:60"><expr pos:start="341:5" pos:end="341:59"><call pos:start="341:5" pos:end="341:59"><name pos:start="341:5" pos:end="341:19">sysbus_mmio_map</name><argument_list pos:start="341:20" pos:end="341:59">(<argument pos:start="341:21" pos:end="341:43"><expr pos:start="341:21" pos:end="341:43"><call pos:start="341:21" pos:end="341:43"><name pos:start="341:21" pos:end="341:34">SYS_BUS_DEVICE</name><argument_list pos:start="341:35" pos:end="341:43">(<argument pos:start="341:36" pos:end="341:42"><expr pos:start="341:36" pos:end="341:42"><name pos:start="341:36" pos:end="341:42"><name pos:start="341:36" pos:end="341:36">s</name><operator pos:start="341:37" pos:end="341:38">-&gt;</operator><name pos:start="341:39" pos:end="341:42">gpio</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="341:46" pos:end="341:46"><expr pos:start="341:46" pos:end="341:46"><literal type="number" pos:start="341:46" pos:end="341:46">0</literal></expr></argument>, <argument pos:start="341:49" pos:end="341:58"><expr pos:start="341:49" pos:end="341:58"><literal type="number" pos:start="341:49" pos:end="341:58">0xfffce000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="345:5" pos:end="351:77"><expr pos:start="345:5" pos:end="351:76"><name pos:start="345:5" pos:end="345:16"><name pos:start="345:5" pos:end="345:5">s</name><operator pos:start="345:6" pos:end="345:7">-&gt;</operator><name pos:start="345:8" pos:end="345:16">microwire</name></name> <operator pos:start="345:18" pos:end="345:18">=</operator> <call pos:start="345:20" pos:end="351:76"><name pos:start="345:20" pos:end="345:34">omap_uwire_init</name><argument_list pos:start="345:35" pos:end="351:76">(<argument pos:start="345:36" pos:end="345:48"><expr pos:start="345:36" pos:end="345:48"><name pos:start="345:36" pos:end="345:48">system_memory</name></expr></argument>, <argument pos:start="345:51" pos:end="345:60"><expr pos:start="345:51" pos:end="345:60"><literal type="number" pos:start="345:51" pos:end="345:60">0xfffb3000</literal></expr></argument>,

                                   <argument pos:start="347:36" pos:end="347:79"><expr pos:start="347:36" pos:end="347:79"><call pos:start="347:36" pos:end="347:79"><name pos:start="347:36" pos:end="347:51">qdev_get_gpio_in</name><argument_list pos:start="347:52" pos:end="347:79">(<argument pos:start="347:53" pos:end="347:60"><expr pos:start="347:53" pos:end="347:60"><name pos:start="347:53" pos:end="347:60"><name pos:start="347:53" pos:end="347:53">s</name><operator pos:start="347:54" pos:end="347:55">-&gt;</operator><name pos:start="347:56" pos:end="347:57">ih</name><index pos:start="347:58" pos:end="347:60">[<expr pos:start="347:59" pos:end="347:59"><literal type="number" pos:start="347:59" pos:end="347:59">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="347:63" pos:end="347:78"><expr pos:start="347:63" pos:end="347:78"><name pos:start="347:63" pos:end="347:78">OMAP_INT_uWireTX</name></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="349:36" pos:end="349:79"><expr pos:start="349:36" pos:end="349:79"><call pos:start="349:36" pos:end="349:79"><name pos:start="349:36" pos:end="349:51">qdev_get_gpio_in</name><argument_list pos:start="349:52" pos:end="349:79">(<argument pos:start="349:53" pos:end="349:60"><expr pos:start="349:53" pos:end="349:60"><name pos:start="349:53" pos:end="349:60"><name pos:start="349:53" pos:end="349:53">s</name><operator pos:start="349:54" pos:end="349:55">-&gt;</operator><name pos:start="349:56" pos:end="349:57">ih</name><index pos:start="349:58" pos:end="349:60">[<expr pos:start="349:59" pos:end="349:59"><literal type="number" pos:start="349:59" pos:end="349:59">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="349:63" pos:end="349:78"><expr pos:start="349:63" pos:end="349:78"><name pos:start="349:63" pos:end="349:78">OMAP_INT_uWireRX</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="351:21" pos:end="351:45"><expr pos:start="351:21" pos:end="351:45"><name pos:start="351:21" pos:end="351:45"><name pos:start="351:21" pos:end="351:21">s</name><operator pos:start="351:22" pos:end="351:23">-&gt;</operator><name pos:start="351:24" pos:end="351:26">drq</name><index pos:start="351:27" pos:end="351:45">[<expr pos:start="351:28" pos:end="351:44"><name pos:start="351:28" pos:end="351:44">OMAP_DMA_UWIRE_TX</name></expr>]</index></name></expr></argument>, <argument pos:start="351:48" pos:end="351:75"><expr pos:start="351:48" pos:end="351:75"><call pos:start="351:48" pos:end="351:75"><name pos:start="351:48" pos:end="351:59">omap_findclk</name><argument_list pos:start="351:60" pos:end="351:75">(<argument pos:start="351:61" pos:end="351:61"><expr pos:start="351:61" pos:end="351:61"><name pos:start="351:61" pos:end="351:61">s</name></expr></argument>, <argument pos:start="351:64" pos:end="351:74"><expr pos:start="351:64" pos:end="351:74"><literal type="string" pos:start="351:64" pos:end="351:74">"mpuper_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="355:5" pos:end="357:57"><expr pos:start="355:5" pos:end="357:56"><name pos:start="355:5" pos:end="355:10"><name pos:start="355:5" pos:end="355:5">s</name><operator pos:start="355:6" pos:end="355:7">-&gt;</operator><name pos:start="355:8" pos:end="355:10">pwl</name></name> <operator pos:start="355:12" pos:end="355:12">=</operator> <call pos:start="355:14" pos:end="357:56"><name pos:start="355:14" pos:end="355:26">omap_pwl_init</name><argument_list pos:start="355:27" pos:end="357:56">(<argument pos:start="355:28" pos:end="355:40"><expr pos:start="355:28" pos:end="355:40"><name pos:start="355:28" pos:end="355:40">system_memory</name></expr></argument>, <argument pos:start="355:43" pos:end="355:52"><expr pos:start="355:43" pos:end="355:52"><literal type="number" pos:start="355:43" pos:end="355:52">0xfffb5800</literal></expr></argument>,

                           <argument pos:start="357:28" pos:end="357:55"><expr pos:start="357:28" pos:end="357:55"><call pos:start="357:28" pos:end="357:55"><name pos:start="357:28" pos:end="357:39">omap_findclk</name><argument_list pos:start="357:40" pos:end="357:55">(<argument pos:start="357:41" pos:end="357:41"><expr pos:start="357:41" pos:end="357:41"><name pos:start="357:41" pos:end="357:41">s</name></expr></argument>, <argument pos:start="357:44" pos:end="357:54"><expr pos:start="357:44" pos:end="357:54"><literal type="string" pos:start="357:44" pos:end="357:54">"armxor_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="359:5" pos:end="361:57"><expr pos:start="359:5" pos:end="361:56"><name pos:start="359:5" pos:end="359:10"><name pos:start="359:5" pos:end="359:5">s</name><operator pos:start="359:6" pos:end="359:7">-&gt;</operator><name pos:start="359:8" pos:end="359:10">pwt</name></name> <operator pos:start="359:12" pos:end="359:12">=</operator> <call pos:start="359:14" pos:end="361:56"><name pos:start="359:14" pos:end="359:26">omap_pwt_init</name><argument_list pos:start="359:27" pos:end="361:56">(<argument pos:start="359:28" pos:end="359:40"><expr pos:start="359:28" pos:end="359:40"><name pos:start="359:28" pos:end="359:40">system_memory</name></expr></argument>, <argument pos:start="359:43" pos:end="359:52"><expr pos:start="359:43" pos:end="359:52"><literal type="number" pos:start="359:43" pos:end="359:52">0xfffb6000</literal></expr></argument>,

                           <argument pos:start="361:28" pos:end="361:55"><expr pos:start="361:28" pos:end="361:55"><call pos:start="361:28" pos:end="361:55"><name pos:start="361:28" pos:end="361:39">omap_findclk</name><argument_list pos:start="361:40" pos:end="361:55">(<argument pos:start="361:41" pos:end="361:41"><expr pos:start="361:41" pos:end="361:41"><name pos:start="361:41" pos:end="361:41">s</name></expr></argument>, <argument pos:start="361:44" pos:end="361:54"><expr pos:start="361:44" pos:end="361:54"><literal type="string" pos:start="361:44" pos:end="361:54">"armxor_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="365:5" pos:end="365:46"><expr pos:start="365:5" pos:end="365:45"><name pos:start="365:5" pos:end="365:13"><name pos:start="365:5" pos:end="365:5">s</name><operator pos:start="365:6" pos:end="365:7">-&gt;</operator><name pos:start="365:8" pos:end="365:10">i2c</name><index pos:start="365:11" pos:end="365:13">[<expr pos:start="365:12" pos:end="365:12"><literal type="number" pos:start="365:12" pos:end="365:12">0</literal></expr>]</index></name> <operator pos:start="365:15" pos:end="365:15">=</operator> <call pos:start="365:17" pos:end="365:45"><name pos:start="365:17" pos:end="365:27">qdev_create</name><argument_list pos:start="365:28" pos:end="365:45">(<argument pos:start="365:29" pos:end="365:32"><expr pos:start="365:29" pos:end="365:32"><name pos:start="365:29" pos:end="365:32">NULL</name></expr></argument>, <argument pos:start="365:35" pos:end="365:44"><expr pos:start="365:35" pos:end="365:44"><literal type="string" pos:start="365:35" pos:end="365:44">"omap_i2c"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="367:5" pos:end="367:53"><expr pos:start="367:5" pos:end="367:52"><call pos:start="367:5" pos:end="367:52"><name pos:start="367:5" pos:end="367:23">qdev_prop_set_uint8</name><argument_list pos:start="367:24" pos:end="367:52">(<argument pos:start="367:25" pos:end="367:33"><expr pos:start="367:25" pos:end="367:33"><name pos:start="367:25" pos:end="367:33"><name pos:start="367:25" pos:end="367:25">s</name><operator pos:start="367:26" pos:end="367:27">-&gt;</operator><name pos:start="367:28" pos:end="367:30">i2c</name><index pos:start="367:31" pos:end="367:33">[<expr pos:start="367:32" pos:end="367:32"><literal type="number" pos:start="367:32" pos:end="367:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="367:36" pos:end="367:45"><expr pos:start="367:36" pos:end="367:45"><literal type="string" pos:start="367:36" pos:end="367:45">"revision"</literal></expr></argument>, <argument pos:start="367:48" pos:end="367:51"><expr pos:start="367:48" pos:end="367:51"><literal type="number" pos:start="367:48" pos:end="367:51">0x11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="369:5" pos:end="369:71"><expr pos:start="369:5" pos:end="369:70"><call pos:start="369:5" pos:end="369:70"><name pos:start="369:5" pos:end="369:21">qdev_prop_set_ptr</name><argument_list pos:start="369:22" pos:end="369:70">(<argument pos:start="369:23" pos:end="369:31"><expr pos:start="369:23" pos:end="369:31"><name pos:start="369:23" pos:end="369:31"><name pos:start="369:23" pos:end="369:23">s</name><operator pos:start="369:24" pos:end="369:25">-&gt;</operator><name pos:start="369:26" pos:end="369:28">i2c</name><index pos:start="369:29" pos:end="369:31">[<expr pos:start="369:30" pos:end="369:30"><literal type="number" pos:start="369:30" pos:end="369:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="369:34" pos:end="369:39"><expr pos:start="369:34" pos:end="369:39"><literal type="string" pos:start="369:34" pos:end="369:39">"fclk"</literal></expr></argument>, <argument pos:start="369:42" pos:end="369:69"><expr pos:start="369:42" pos:end="369:69"><call pos:start="369:42" pos:end="369:69"><name pos:start="369:42" pos:end="369:53">omap_findclk</name><argument_list pos:start="369:54" pos:end="369:69">(<argument pos:start="369:55" pos:end="369:55"><expr pos:start="369:55" pos:end="369:55"><name pos:start="369:55" pos:end="369:55">s</name></expr></argument>, <argument pos:start="369:58" pos:end="369:68"><expr pos:start="369:58" pos:end="369:68"><literal type="string" pos:start="369:58" pos:end="369:68">"mpuper_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="371:5" pos:end="371:32"><expr pos:start="371:5" pos:end="371:31"><call pos:start="371:5" pos:end="371:31"><name pos:start="371:5" pos:end="371:20">qdev_init_nofail</name><argument_list pos:start="371:21" pos:end="371:31">(<argument pos:start="371:22" pos:end="371:30"><expr pos:start="371:22" pos:end="371:30"><name pos:start="371:22" pos:end="371:30"><name pos:start="371:22" pos:end="371:22">s</name><operator pos:start="371:23" pos:end="371:24">-&gt;</operator><name pos:start="371:25" pos:end="371:27">i2c</name><index pos:start="371:28" pos:end="371:30">[<expr pos:start="371:29" pos:end="371:29"><literal type="number" pos:start="371:29" pos:end="371:29">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="373:5" pos:end="373:39"><expr pos:start="373:5" pos:end="373:38"><name pos:start="373:5" pos:end="373:10">busdev</name> <operator pos:start="373:12" pos:end="373:12">=</operator> <call pos:start="373:14" pos:end="373:38"><name pos:start="373:14" pos:end="373:27">SYS_BUS_DEVICE</name><argument_list pos:start="373:28" pos:end="373:38">(<argument pos:start="373:29" pos:end="373:37"><expr pos:start="373:29" pos:end="373:37"><name pos:start="373:29" pos:end="373:37"><name pos:start="373:29" pos:end="373:29">s</name><operator pos:start="373:30" pos:end="373:31">-&gt;</operator><name pos:start="373:32" pos:end="373:34">i2c</name><index pos:start="373:35" pos:end="373:37">[<expr pos:start="373:36" pos:end="373:36"><literal type="number" pos:start="373:36" pos:end="373:36">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="375:5" pos:end="375:76"><expr pos:start="375:5" pos:end="375:75"><call pos:start="375:5" pos:end="375:75"><name pos:start="375:5" pos:end="375:22">sysbus_connect_irq</name><argument_list pos:start="375:23" pos:end="375:75">(<argument pos:start="375:24" pos:end="375:29"><expr pos:start="375:24" pos:end="375:29"><name pos:start="375:24" pos:end="375:29">busdev</name></expr></argument>, <argument pos:start="375:32" pos:end="375:32"><expr pos:start="375:32" pos:end="375:32"><literal type="number" pos:start="375:32" pos:end="375:32">0</literal></expr></argument>, <argument pos:start="375:35" pos:end="375:74"><expr pos:start="375:35" pos:end="375:74"><call pos:start="375:35" pos:end="375:74"><name pos:start="375:35" pos:end="375:50">qdev_get_gpio_in</name><argument_list pos:start="375:51" pos:end="375:74">(<argument pos:start="375:52" pos:end="375:59"><expr pos:start="375:52" pos:end="375:59"><name pos:start="375:52" pos:end="375:59"><name pos:start="375:52" pos:end="375:52">s</name><operator pos:start="375:53" pos:end="375:54">-&gt;</operator><name pos:start="375:55" pos:end="375:56">ih</name><index pos:start="375:57" pos:end="375:59">[<expr pos:start="375:58" pos:end="375:58"><literal type="number" pos:start="375:58" pos:end="375:58">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="375:62" pos:end="375:73"><expr pos:start="375:62" pos:end="375:73"><name pos:start="375:62" pos:end="375:73">OMAP_INT_I2C</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="377:5" pos:end="377:59"><expr pos:start="377:5" pos:end="377:58"><call pos:start="377:5" pos:end="377:58"><name pos:start="377:5" pos:end="377:22">sysbus_connect_irq</name><argument_list pos:start="377:23" pos:end="377:58">(<argument pos:start="377:24" pos:end="377:29"><expr pos:start="377:24" pos:end="377:29"><name pos:start="377:24" pos:end="377:29">busdev</name></expr></argument>, <argument pos:start="377:32" pos:end="377:32"><expr pos:start="377:32" pos:end="377:32"><literal type="number" pos:start="377:32" pos:end="377:32">1</literal></expr></argument>, <argument pos:start="377:35" pos:end="377:57"><expr pos:start="377:35" pos:end="377:57"><name pos:start="377:35" pos:end="377:57"><name pos:start="377:35" pos:end="377:35">s</name><operator pos:start="377:36" pos:end="377:37">-&gt;</operator><name pos:start="377:38" pos:end="377:40">drq</name><index pos:start="377:41" pos:end="377:57">[<expr pos:start="377:42" pos:end="377:56"><name pos:start="377:42" pos:end="377:56">OMAP_DMA_I2C_TX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="379:5" pos:end="379:59"><expr pos:start="379:5" pos:end="379:58"><call pos:start="379:5" pos:end="379:58"><name pos:start="379:5" pos:end="379:22">sysbus_connect_irq</name><argument_list pos:start="379:23" pos:end="379:58">(<argument pos:start="379:24" pos:end="379:29"><expr pos:start="379:24" pos:end="379:29"><name pos:start="379:24" pos:end="379:29">busdev</name></expr></argument>, <argument pos:start="379:32" pos:end="379:32"><expr pos:start="379:32" pos:end="379:32"><literal type="number" pos:start="379:32" pos:end="379:32">2</literal></expr></argument>, <argument pos:start="379:35" pos:end="379:57"><expr pos:start="379:35" pos:end="379:57"><name pos:start="379:35" pos:end="379:57"><name pos:start="379:35" pos:end="379:35">s</name><operator pos:start="379:36" pos:end="379:37">-&gt;</operator><name pos:start="379:38" pos:end="379:40">drq</name><index pos:start="379:41" pos:end="379:57">[<expr pos:start="379:42" pos:end="379:56"><name pos:start="379:42" pos:end="379:56">OMAP_DMA_I2C_RX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="381:5" pos:end="381:43"><expr pos:start="381:5" pos:end="381:42"><call pos:start="381:5" pos:end="381:42"><name pos:start="381:5" pos:end="381:19">sysbus_mmio_map</name><argument_list pos:start="381:20" pos:end="381:42">(<argument pos:start="381:21" pos:end="381:26"><expr pos:start="381:21" pos:end="381:26"><name pos:start="381:21" pos:end="381:26">busdev</name></expr></argument>, <argument pos:start="381:29" pos:end="381:29"><expr pos:start="381:29" pos:end="381:29"><literal type="number" pos:start="381:29" pos:end="381:29">0</literal></expr></argument>, <argument pos:start="381:32" pos:end="381:41"><expr pos:start="381:32" pos:end="381:41"><literal type="number" pos:start="381:32" pos:end="381:41">0xfffb3800</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="385:5" pos:end="391:50"><expr pos:start="385:5" pos:end="391:49"><name pos:start="385:5" pos:end="385:10"><name pos:start="385:5" pos:end="385:5">s</name><operator pos:start="385:6" pos:end="385:7">-&gt;</operator><name pos:start="385:8" pos:end="385:10">rtc</name></name> <operator pos:start="385:12" pos:end="385:12">=</operator> <call pos:start="385:14" pos:end="391:49"><name pos:start="385:14" pos:end="385:26">omap_rtc_init</name><argument_list pos:start="385:27" pos:end="391:49">(<argument pos:start="385:28" pos:end="385:40"><expr pos:start="385:28" pos:end="385:40"><name pos:start="385:28" pos:end="385:40">system_memory</name></expr></argument>, <argument pos:start="385:43" pos:end="385:52"><expr pos:start="385:43" pos:end="385:52"><literal type="number" pos:start="385:43" pos:end="385:52">0xfffb4800</literal></expr></argument>,

                           <argument pos:start="387:28" pos:end="387:73"><expr pos:start="387:28" pos:end="387:73"><call pos:start="387:28" pos:end="387:73"><name pos:start="387:28" pos:end="387:43">qdev_get_gpio_in</name><argument_list pos:start="387:44" pos:end="387:73">(<argument pos:start="387:45" pos:end="387:52"><expr pos:start="387:45" pos:end="387:52"><name pos:start="387:45" pos:end="387:52"><name pos:start="387:45" pos:end="387:45">s</name><operator pos:start="387:46" pos:end="387:47">-&gt;</operator><name pos:start="387:48" pos:end="387:49">ih</name><index pos:start="387:50" pos:end="387:52">[<expr pos:start="387:51" pos:end="387:51"><literal type="number" pos:start="387:51" pos:end="387:51">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="387:55" pos:end="387:72"><expr pos:start="387:55" pos:end="387:72"><name pos:start="387:55" pos:end="387:72">OMAP_INT_RTC_TIMER</name></expr></argument>)</argument_list></call></expr></argument>,

                           <argument pos:start="389:28" pos:end="389:73"><expr pos:start="389:28" pos:end="389:73"><call pos:start="389:28" pos:end="389:73"><name pos:start="389:28" pos:end="389:43">qdev_get_gpio_in</name><argument_list pos:start="389:44" pos:end="389:73">(<argument pos:start="389:45" pos:end="389:52"><expr pos:start="389:45" pos:end="389:52"><name pos:start="389:45" pos:end="389:52"><name pos:start="389:45" pos:end="389:45">s</name><operator pos:start="389:46" pos:end="389:47">-&gt;</operator><name pos:start="389:48" pos:end="389:49">ih</name><index pos:start="389:50" pos:end="389:52">[<expr pos:start="389:51" pos:end="389:51"><literal type="number" pos:start="389:51" pos:end="389:51">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="389:55" pos:end="389:72"><expr pos:start="389:55" pos:end="389:72"><name pos:start="389:55" pos:end="389:72">OMAP_INT_RTC_ALARM</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="391:21" pos:end="391:48"><expr pos:start="391:21" pos:end="391:48"><call pos:start="391:21" pos:end="391:48"><name pos:start="391:21" pos:end="391:32">omap_findclk</name><argument_list pos:start="391:33" pos:end="391:48">(<argument pos:start="391:34" pos:end="391:34"><expr pos:start="391:34" pos:end="391:34"><name pos:start="391:34" pos:end="391:34">s</name></expr></argument>, <argument pos:start="391:37" pos:end="391:47"><expr pos:start="391:37" pos:end="391:47"><literal type="string" pos:start="391:37" pos:end="391:47">"clk32-kHz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="395:5" pos:end="401:79"><expr pos:start="395:5" pos:end="401:78"><name pos:start="395:5" pos:end="395:13"><name pos:start="395:5" pos:end="395:5">s</name><operator pos:start="395:6" pos:end="395:7">-&gt;</operator><name pos:start="395:8" pos:end="395:13">mcbsp1</name></name> <operator pos:start="395:15" pos:end="395:15">=</operator> <call pos:start="395:17" pos:end="401:78"><name pos:start="395:17" pos:end="395:31">omap_mcbsp_init</name><argument_list pos:start="395:32" pos:end="401:78">(<argument pos:start="395:33" pos:end="395:45"><expr pos:start="395:33" pos:end="395:45"><name pos:start="395:33" pos:end="395:45">system_memory</name></expr></argument>, <argument pos:start="395:48" pos:end="395:57"><expr pos:start="395:48" pos:end="395:57"><literal type="number" pos:start="395:48" pos:end="395:57">0xfffb1800</literal></expr></argument>,

                                <argument pos:start="397:33" pos:end="397:77"><expr pos:start="397:33" pos:end="397:77"><call pos:start="397:33" pos:end="397:77"><name pos:start="397:33" pos:end="397:48">qdev_get_gpio_in</name><argument_list pos:start="397:49" pos:end="397:77">(<argument pos:start="397:50" pos:end="397:57"><expr pos:start="397:50" pos:end="397:57"><name pos:start="397:50" pos:end="397:57"><name pos:start="397:50" pos:end="397:50">s</name><operator pos:start="397:51" pos:end="397:52">-&gt;</operator><name pos:start="397:53" pos:end="397:54">ih</name><index pos:start="397:55" pos:end="397:57">[<expr pos:start="397:56" pos:end="397:56"><literal type="number" pos:start="397:56" pos:end="397:56">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="397:60" pos:end="397:76"><expr pos:start="397:60" pos:end="397:76"><name pos:start="397:60" pos:end="397:76">OMAP_INT_McBSP1TX</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="399:33" pos:end="399:77"><expr pos:start="399:33" pos:end="399:77"><call pos:start="399:33" pos:end="399:77"><name pos:start="399:33" pos:end="399:48">qdev_get_gpio_in</name><argument_list pos:start="399:49" pos:end="399:77">(<argument pos:start="399:50" pos:end="399:57"><expr pos:start="399:50" pos:end="399:57"><name pos:start="399:50" pos:end="399:57"><name pos:start="399:50" pos:end="399:50">s</name><operator pos:start="399:51" pos:end="399:52">-&gt;</operator><name pos:start="399:53" pos:end="399:54">ih</name><index pos:start="399:55" pos:end="399:57">[<expr pos:start="399:56" pos:end="399:56"><literal type="number" pos:start="399:56" pos:end="399:56">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="399:60" pos:end="399:76"><expr pos:start="399:60" pos:end="399:76"><name pos:start="399:60" pos:end="399:76">OMAP_INT_McBSP1RX</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="401:21" pos:end="401:47"><expr pos:start="401:21" pos:end="401:47"><operator pos:start="401:21" pos:end="401:21">&amp;</operator><name pos:start="401:22" pos:end="401:47"><name pos:start="401:22" pos:end="401:22">s</name><operator pos:start="401:23" pos:end="401:24">-&gt;</operator><name pos:start="401:25" pos:end="401:27">drq</name><index pos:start="401:28" pos:end="401:47">[<expr pos:start="401:29" pos:end="401:46"><name pos:start="401:29" pos:end="401:46">OMAP_DMA_MCBSP1_TX</name></expr>]</index></name></expr></argument>, <argument pos:start="401:50" pos:end="401:77"><expr pos:start="401:50" pos:end="401:77"><call pos:start="401:50" pos:end="401:77"><name pos:start="401:50" pos:end="401:61">omap_findclk</name><argument_list pos:start="401:62" pos:end="401:77">(<argument pos:start="401:63" pos:end="401:63"><expr pos:start="401:63" pos:end="401:63"><name pos:start="401:63" pos:end="401:63">s</name></expr></argument>, <argument pos:start="401:66" pos:end="401:76"><expr pos:start="401:66" pos:end="401:76"><literal type="string" pos:start="401:66" pos:end="401:76">"dspxor_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="403:5" pos:end="413:79"><expr pos:start="403:5" pos:end="413:78"><name pos:start="403:5" pos:end="403:13"><name pos:start="403:5" pos:end="403:5">s</name><operator pos:start="403:6" pos:end="403:7">-&gt;</operator><name pos:start="403:8" pos:end="403:13">mcbsp2</name></name> <operator pos:start="403:15" pos:end="403:15">=</operator> <call pos:start="403:17" pos:end="413:78"><name pos:start="403:17" pos:end="403:31">omap_mcbsp_init</name><argument_list pos:start="403:32" pos:end="413:78">(<argument pos:start="403:33" pos:end="403:45"><expr pos:start="403:33" pos:end="403:45"><name pos:start="403:33" pos:end="403:45">system_memory</name></expr></argument>, <argument pos:start="403:48" pos:end="403:57"><expr pos:start="403:48" pos:end="403:57"><literal type="number" pos:start="403:48" pos:end="403:57">0xfffb1000</literal></expr></argument>,

                                <argument pos:start="405:33" pos:end="407:72"><expr pos:start="405:33" pos:end="407:72"><call pos:start="405:33" pos:end="407:72"><name pos:start="405:33" pos:end="405:48">qdev_get_gpio_in</name><argument_list pos:start="405:49" pos:end="407:72">(<argument pos:start="405:50" pos:end="405:57"><expr pos:start="405:50" pos:end="405:57"><name pos:start="405:50" pos:end="405:57"><name pos:start="405:50" pos:end="405:50">s</name><operator pos:start="405:51" pos:end="405:52">-&gt;</operator><name pos:start="405:53" pos:end="405:54">ih</name><index pos:start="405:55" pos:end="405:57">[<expr pos:start="405:56" pos:end="405:56"><literal type="number" pos:start="405:56" pos:end="405:56">0</literal></expr>]</index></name></expr></argument>,

                                                 <argument pos:start="407:50" pos:end="407:71"><expr pos:start="407:50" pos:end="407:71"><name pos:start="407:50" pos:end="407:71">OMAP_INT_310_McBSP2_TX</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="409:33" pos:end="411:72"><expr pos:start="409:33" pos:end="411:72"><call pos:start="409:33" pos:end="411:72"><name pos:start="409:33" pos:end="409:48">qdev_get_gpio_in</name><argument_list pos:start="409:49" pos:end="411:72">(<argument pos:start="409:50" pos:end="409:57"><expr pos:start="409:50" pos:end="409:57"><name pos:start="409:50" pos:end="409:57"><name pos:start="409:50" pos:end="409:50">s</name><operator pos:start="409:51" pos:end="409:52">-&gt;</operator><name pos:start="409:53" pos:end="409:54">ih</name><index pos:start="409:55" pos:end="409:57">[<expr pos:start="409:56" pos:end="409:56"><literal type="number" pos:start="409:56" pos:end="409:56">0</literal></expr>]</index></name></expr></argument>,

                                                 <argument pos:start="411:50" pos:end="411:71"><expr pos:start="411:50" pos:end="411:71"><name pos:start="411:50" pos:end="411:71">OMAP_INT_310_McBSP2_RX</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="413:21" pos:end="413:47"><expr pos:start="413:21" pos:end="413:47"><operator pos:start="413:21" pos:end="413:21">&amp;</operator><name pos:start="413:22" pos:end="413:47"><name pos:start="413:22" pos:end="413:22">s</name><operator pos:start="413:23" pos:end="413:24">-&gt;</operator><name pos:start="413:25" pos:end="413:27">drq</name><index pos:start="413:28" pos:end="413:47">[<expr pos:start="413:29" pos:end="413:46"><name pos:start="413:29" pos:end="413:46">OMAP_DMA_MCBSP2_TX</name></expr>]</index></name></expr></argument>, <argument pos:start="413:50" pos:end="413:77"><expr pos:start="413:50" pos:end="413:77"><call pos:start="413:50" pos:end="413:77"><name pos:start="413:50" pos:end="413:61">omap_findclk</name><argument_list pos:start="413:62" pos:end="413:77">(<argument pos:start="413:63" pos:end="413:63"><expr pos:start="413:63" pos:end="413:63"><name pos:start="413:63" pos:end="413:63">s</name></expr></argument>, <argument pos:start="413:66" pos:end="413:76"><expr pos:start="413:66" pos:end="413:76"><literal type="string" pos:start="413:66" pos:end="413:76">"mpuper_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="415:5" pos:end="421:79"><expr pos:start="415:5" pos:end="421:78"><name pos:start="415:5" pos:end="415:13"><name pos:start="415:5" pos:end="415:5">s</name><operator pos:start="415:6" pos:end="415:7">-&gt;</operator><name pos:start="415:8" pos:end="415:13">mcbsp3</name></name> <operator pos:start="415:15" pos:end="415:15">=</operator> <call pos:start="415:17" pos:end="421:78"><name pos:start="415:17" pos:end="415:31">omap_mcbsp_init</name><argument_list pos:start="415:32" pos:end="421:78">(<argument pos:start="415:33" pos:end="415:45"><expr pos:start="415:33" pos:end="415:45"><name pos:start="415:33" pos:end="415:45">system_memory</name></expr></argument>, <argument pos:start="415:48" pos:end="415:57"><expr pos:start="415:48" pos:end="415:57"><literal type="number" pos:start="415:48" pos:end="415:57">0xfffb7000</literal></expr></argument>,

                                <argument pos:start="417:33" pos:end="417:77"><expr pos:start="417:33" pos:end="417:77"><call pos:start="417:33" pos:end="417:77"><name pos:start="417:33" pos:end="417:48">qdev_get_gpio_in</name><argument_list pos:start="417:49" pos:end="417:77">(<argument pos:start="417:50" pos:end="417:57"><expr pos:start="417:50" pos:end="417:57"><name pos:start="417:50" pos:end="417:57"><name pos:start="417:50" pos:end="417:50">s</name><operator pos:start="417:51" pos:end="417:52">-&gt;</operator><name pos:start="417:53" pos:end="417:54">ih</name><index pos:start="417:55" pos:end="417:57">[<expr pos:start="417:56" pos:end="417:56"><literal type="number" pos:start="417:56" pos:end="417:56">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="417:60" pos:end="417:76"><expr pos:start="417:60" pos:end="417:76"><name pos:start="417:60" pos:end="417:76">OMAP_INT_McBSP3TX</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="419:33" pos:end="419:77"><expr pos:start="419:33" pos:end="419:77"><call pos:start="419:33" pos:end="419:77"><name pos:start="419:33" pos:end="419:48">qdev_get_gpio_in</name><argument_list pos:start="419:49" pos:end="419:77">(<argument pos:start="419:50" pos:end="419:57"><expr pos:start="419:50" pos:end="419:57"><name pos:start="419:50" pos:end="419:57"><name pos:start="419:50" pos:end="419:50">s</name><operator pos:start="419:51" pos:end="419:52">-&gt;</operator><name pos:start="419:53" pos:end="419:54">ih</name><index pos:start="419:55" pos:end="419:57">[<expr pos:start="419:56" pos:end="419:56"><literal type="number" pos:start="419:56" pos:end="419:56">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="419:60" pos:end="419:76"><expr pos:start="419:60" pos:end="419:76"><name pos:start="419:60" pos:end="419:76">OMAP_INT_McBSP3RX</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="421:21" pos:end="421:47"><expr pos:start="421:21" pos:end="421:47"><operator pos:start="421:21" pos:end="421:21">&amp;</operator><name pos:start="421:22" pos:end="421:47"><name pos:start="421:22" pos:end="421:22">s</name><operator pos:start="421:23" pos:end="421:24">-&gt;</operator><name pos:start="421:25" pos:end="421:27">drq</name><index pos:start="421:28" pos:end="421:47">[<expr pos:start="421:29" pos:end="421:46"><name pos:start="421:29" pos:end="421:46">OMAP_DMA_MCBSP3_TX</name></expr>]</index></name></expr></argument>, <argument pos:start="421:50" pos:end="421:77"><expr pos:start="421:50" pos:end="421:77"><call pos:start="421:50" pos:end="421:77"><name pos:start="421:50" pos:end="421:61">omap_findclk</name><argument_list pos:start="421:62" pos:end="421:77">(<argument pos:start="421:63" pos:end="421:63"><expr pos:start="421:63" pos:end="421:63"><name pos:start="421:63" pos:end="421:63">s</name></expr></argument>, <argument pos:start="421:66" pos:end="421:76"><expr pos:start="421:66" pos:end="421:76"><literal type="string" pos:start="421:66" pos:end="421:76">"dspxor_ck"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="425:5" pos:end="427:72"><expr pos:start="425:5" pos:end="427:71"><name pos:start="425:5" pos:end="425:13"><name pos:start="425:5" pos:end="425:5">s</name><operator pos:start="425:6" pos:end="425:7">-&gt;</operator><name pos:start="425:8" pos:end="425:10">led</name><index pos:start="425:11" pos:end="425:13">[<expr pos:start="425:12" pos:end="425:12"><literal type="number" pos:start="425:12" pos:end="425:12">0</literal></expr>]</index></name> <operator pos:start="425:15" pos:end="425:15">=</operator> <call pos:start="425:17" pos:end="427:71"><name pos:start="425:17" pos:end="425:29">omap_lpg_init</name><argument_list pos:start="425:30" pos:end="427:71">(<argument pos:start="425:31" pos:end="425:43"><expr pos:start="425:31" pos:end="425:43"><name pos:start="425:31" pos:end="425:43">system_memory</name></expr></argument>,

                              <argument pos:start="427:31" pos:end="427:40"><expr pos:start="427:31" pos:end="427:40"><literal type="number" pos:start="427:31" pos:end="427:40">0xfffbd000</literal></expr></argument>, <argument pos:start="427:43" pos:end="427:70"><expr pos:start="427:43" pos:end="427:70"><call pos:start="427:43" pos:end="427:70"><name pos:start="427:43" pos:end="427:54">omap_findclk</name><argument_list pos:start="427:55" pos:end="427:70">(<argument pos:start="427:56" pos:end="427:56"><expr pos:start="427:56" pos:end="427:56"><name pos:start="427:56" pos:end="427:56">s</name></expr></argument>, <argument pos:start="427:59" pos:end="427:69"><expr pos:start="427:59" pos:end="427:69"><literal type="string" pos:start="427:59" pos:end="427:69">"clk32-kHz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="429:5" pos:end="431:72"><expr pos:start="429:5" pos:end="431:71"><name pos:start="429:5" pos:end="429:13"><name pos:start="429:5" pos:end="429:5">s</name><operator pos:start="429:6" pos:end="429:7">-&gt;</operator><name pos:start="429:8" pos:end="429:10">led</name><index pos:start="429:11" pos:end="429:13">[<expr pos:start="429:12" pos:end="429:12"><literal type="number" pos:start="429:12" pos:end="429:12">1</literal></expr>]</index></name> <operator pos:start="429:15" pos:end="429:15">=</operator> <call pos:start="429:17" pos:end="431:71"><name pos:start="429:17" pos:end="429:29">omap_lpg_init</name><argument_list pos:start="429:30" pos:end="431:71">(<argument pos:start="429:31" pos:end="429:43"><expr pos:start="429:31" pos:end="429:43"><name pos:start="429:31" pos:end="429:43">system_memory</name></expr></argument>,

                              <argument pos:start="431:31" pos:end="431:40"><expr pos:start="431:31" pos:end="431:40"><literal type="number" pos:start="431:31" pos:end="431:40">0xfffbd800</literal></expr></argument>, <argument pos:start="431:43" pos:end="431:70"><expr pos:start="431:43" pos:end="431:70"><call pos:start="431:43" pos:end="431:70"><name pos:start="431:43" pos:end="431:54">omap_findclk</name><argument_list pos:start="431:55" pos:end="431:70">(<argument pos:start="431:56" pos:end="431:56"><expr pos:start="431:56" pos:end="431:56"><name pos:start="431:56" pos:end="431:56">s</name></expr></argument>, <argument pos:start="431:59" pos:end="431:69"><expr pos:start="431:59" pos:end="431:69"><literal type="string" pos:start="431:59" pos:end="431:69">"clk32-kHz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="435:5" pos:end="461:7">/* Register mappings not currenlty implemented:

     * MCSI2 Comm	fffb2000 - fffb27ff (not mapped on OMAP310)

     * MCSI1 Bluetooth	fffb2800 - fffb2fff (not mapped on OMAP310)

     * USB W2FC		fffb4000 - fffb47ff

     * Camera Interface	fffb6800 - fffb6fff

     * USB Host		fffba000 - fffba7ff

     * FAC		fffba800 - fffbafff

     * HDQ/1-Wire	fffbc000 - fffbc7ff

     * TIPB switches	fffbc800 - fffbcfff

     * Mailbox		fffcf000 - fffcf7ff

     * Local bus IF	fffec100 - fffec1ff

     * Local bus MMU	fffec200 - fffec2ff

     * DSP MMU		fffed200 - fffed2ff

     */</comment>



    <expr_stmt pos:start="465:5" pos:end="465:59"><expr pos:start="465:5" pos:end="465:58"><call pos:start="465:5" pos:end="465:58"><name pos:start="465:5" pos:end="465:26">omap_setup_dsp_mapping</name><argument_list pos:start="465:27" pos:end="465:58">(<argument pos:start="465:28" pos:end="465:40"><expr pos:start="465:28" pos:end="465:40"><name pos:start="465:28" pos:end="465:40">system_memory</name></expr></argument>, <argument pos:start="465:43" pos:end="465:57"><expr pos:start="465:43" pos:end="465:57"><name pos:start="465:43" pos:end="465:57">omap15xx_dsp_mm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="467:5" pos:end="467:41"><expr pos:start="467:5" pos:end="467:40"><call pos:start="467:5" pos:end="467:40"><name pos:start="467:5" pos:end="467:22">omap_setup_mpui_io</name><argument_list pos:start="467:23" pos:end="467:40">(<argument pos:start="467:24" pos:end="467:36"><expr pos:start="467:24" pos:end="467:36"><name pos:start="467:24" pos:end="467:36">system_memory</name></expr></argument>, <argument pos:start="467:39" pos:end="467:39"><expr pos:start="467:39" pos:end="467:39"><name pos:start="467:39" pos:end="467:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="471:5" pos:end="471:44"><expr pos:start="471:5" pos:end="471:43"><call pos:start="471:5" pos:end="471:43"><name pos:start="471:5" pos:end="471:23">qemu_register_reset</name><argument_list pos:start="471:24" pos:end="471:43">(<argument pos:start="471:25" pos:end="471:39"><expr pos:start="471:25" pos:end="471:39"><name pos:start="471:25" pos:end="471:39">omap1_mpu_reset</name></expr></argument>, <argument pos:start="471:42" pos:end="471:42"><expr pos:start="471:42" pos:end="471:42"><name pos:start="471:42" pos:end="471:42">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="475:5" pos:end="475:13">return <expr pos:start="475:12" pos:end="475:12"><name pos:start="475:12" pos:end="475:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
