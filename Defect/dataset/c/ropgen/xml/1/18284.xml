<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18284.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">lsi_command_complete</name><parameter_list pos:start="1:33" pos:end="3:46">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:40">SCSIBus</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">bus</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:57">reason</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:67">uint32_t</name></type> <name pos:start="1:69" pos:end="1:71">tag</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:41">uint32_t</name></type> <name pos:start="3:43" pos:end="3:45">arg</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:5">

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:65"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">LSIState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:65">= <expr pos:start="7:19" pos:end="7:65"><call pos:start="7:19" pos:end="7:65"><name pos:start="7:19" pos:end="7:27">DO_UPCAST</name><argument_list pos:start="7:28" pos:end="7:65">(<argument pos:start="7:29" pos:end="7:36"><expr pos:start="7:29" pos:end="7:36"><name pos:start="7:29" pos:end="7:36">LSIState</name></expr></argument>, <argument pos:start="7:39" pos:end="7:46"><expr pos:start="7:39" pos:end="7:46"><name pos:start="7:39" pos:end="7:46"><name pos:start="7:39" pos:end="7:41">dev</name><operator pos:start="7:42" pos:end="7:42">.</operator><name pos:start="7:43" pos:end="7:46">qdev</name></name></expr></argument>, <argument pos:start="7:49" pos:end="7:64"><expr pos:start="7:49" pos:end="7:64"><name pos:start="7:49" pos:end="7:64"><name pos:start="7:49" pos:end="7:51">bus</name><operator pos:start="7:52" pos:end="7:53">-&gt;</operator><name pos:start="7:54" pos:end="7:57">qbus</name><operator pos:start="7:58" pos:end="7:58">.</operator><name pos:start="7:59" pos:end="7:64">parent</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">out</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:47"><expr pos:start="13:5" pos:end="13:46"><name pos:start="13:5" pos:end="13:7">out</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">(</operator><name pos:start="13:12" pos:end="13:20"><name pos:start="13:12" pos:end="13:12">s</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:20">sstat1</name></name> <operator pos:start="13:22" pos:end="13:22">&amp;</operator> <name pos:start="13:24" pos:end="13:33">PHASE_MASK</name><operator pos:start="13:34" pos:end="13:34">)</operator> <operator pos:start="13:36" pos:end="13:37">==</operator> <name pos:start="13:39" pos:end="13:46">PHASE_DO</name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="47:5"><if pos:start="15:5" pos:end="47:5">if <condition pos:start="15:8" pos:end="15:35">(<expr pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:14">reason</name> <operator pos:start="15:16" pos:end="15:17">==</operator> <name pos:start="15:19" pos:end="15:34">SCSI_REASON_DONE</name></expr>)</condition> <block pos:start="15:37" pos:end="47:5">{<block_content pos:start="17:9" pos:end="45:15">

        <expr_stmt pos:start="17:9" pos:end="17:58"><expr pos:start="17:9" pos:end="17:57"><call pos:start="17:9" pos:end="17:57"><name pos:start="17:9" pos:end="17:15">DPRINTF</name><argument_list pos:start="17:16" pos:end="17:57">(<argument pos:start="17:17" pos:end="17:46"><expr pos:start="17:17" pos:end="17:46"><literal type="string" pos:start="17:17" pos:end="17:46">"Command complete status=%d\n"</literal></expr></argument>, <argument pos:start="17:49" pos:end="17:56"><expr pos:start="17:49" pos:end="17:56"><operator pos:start="17:49" pos:end="17:49">(</operator><name pos:start="17:50" pos:end="17:52">int</name><operator pos:start="17:53" pos:end="17:53">)</operator><name pos:start="17:54" pos:end="17:56">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">status</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:23">arg</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:27">command_complete</name></name> <operator pos:start="21:29" pos:end="21:29">=</operator> <literal type="number" pos:start="21:31" pos:end="21:31">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="33:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:38">(<expr pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:22">waiting</name></name> <operator pos:start="23:24" pos:end="23:25">&amp;&amp;</operator> <name pos:start="23:27" pos:end="23:32"><name pos:start="23:27" pos:end="23:27">s</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:32">dbc</name></name> <operator pos:start="23:34" pos:end="23:35">!=</operator> <literal type="number" pos:start="23:37" pos:end="23:37">0</literal></expr>)</condition> <block pos:start="23:40" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:44">

            <comment type="block" pos:start="25:13" pos:end="25:60">/* Raise phase mismatch for short transfers.  */</comment>

            <expr_stmt pos:start="27:13" pos:end="27:44"><expr pos:start="27:13" pos:end="27:43"><call pos:start="27:13" pos:end="27:43"><name pos:start="27:13" pos:end="27:25">lsi_bad_phase</name><argument_list pos:start="27:26" pos:end="27:43">(<argument pos:start="27:27" pos:end="27:27"><expr pos:start="27:27" pos:end="27:27"><name pos:start="27:27" pos:end="27:27">s</name></expr></argument>, <argument pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">out</name></expr></argument>, <argument pos:start="27:35" pos:end="27:42"><expr pos:start="27:35" pos:end="27:42"><name pos:start="27:35" pos:end="27:42">PHASE_ST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="33:9">else <block pos:start="29:16" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:39">

            <expr_stmt pos:start="31:13" pos:end="31:39"><expr pos:start="31:13" pos:end="31:38"><call pos:start="31:13" pos:end="31:38"><name pos:start="31:13" pos:end="31:25">lsi_set_phase</name><argument_list pos:start="31:26" pos:end="31:38">(<argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><name pos:start="31:27" pos:end="31:27">s</name></expr></argument>, <argument pos:start="31:30" pos:end="31:37"><expr pos:start="31:30" pos:end="31:37"><name pos:start="31:30" pos:end="31:37">PHASE_ST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:30"><expr pos:start="37:9" pos:end="37:29"><call pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:17">qemu_free</name><argument_list pos:start="37:18" pos:end="37:29">(<argument pos:start="37:19" pos:end="37:28"><expr pos:start="37:19" pos:end="37:28"><name pos:start="37:19" pos:end="37:28"><name pos:start="37:19" pos:end="37:19">s</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:28">current</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:26"><expr pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:18">current</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:25">NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><call pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:25">lsi_resume_script</name><argument_list pos:start="43:26" pos:end="43:28">(<argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="53:61">(<expr pos:start="51:9" pos:end="53:60"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:18">waiting</name></name> <operator pos:start="51:20" pos:end="51:21">==</operator> <literal type="number" pos:start="51:23" pos:end="51:23">1</literal> <operator pos:start="51:25" pos:end="51:26">||</operator> <operator pos:start="51:28" pos:end="51:28">!</operator><name pos:start="51:29" pos:end="51:38"><name pos:start="51:29" pos:end="51:29">s</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:38">current</name></name> <operator pos:start="51:40" pos:end="51:41">||</operator> <name pos:start="51:43" pos:end="51:45">tag</name> <operator pos:start="51:47" pos:end="51:48">!=</operator> <name pos:start="51:50" pos:end="51:64"><name pos:start="51:50" pos:end="51:50">s</name><operator pos:start="51:51" pos:end="51:52">-&gt;</operator><name pos:start="51:53" pos:end="51:59">current</name><operator pos:start="51:60" pos:end="51:61">-&gt;</operator><name pos:start="51:62" pos:end="51:64">tag</name></name> <operator pos:start="51:66" pos:end="51:67">||</operator>

        <operator pos:start="53:9" pos:end="53:9">(</operator><call pos:start="53:10" pos:end="53:26"><name pos:start="53:10" pos:end="53:23">lsi_irq_on_rsl</name><argument_list pos:start="53:24" pos:end="53:26">(<argument pos:start="53:25" pos:end="53:25"><expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">s</name></expr></argument>)</argument_list></call> <operator pos:start="53:28" pos:end="53:29">&amp;&amp;</operator> <operator pos:start="53:31" pos:end="53:31">!</operator><operator pos:start="53:32" pos:end="53:32">(</operator><name pos:start="53:33" pos:end="53:41"><name pos:start="53:33" pos:end="53:33">s</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:41">scntl1</name></name> <operator pos:start="53:43" pos:end="53:43">&amp;</operator> <name pos:start="53:45" pos:end="53:58">LSI_SCNTL1_CON</name><operator pos:start="53:59" pos:end="53:59">)</operator><operator pos:start="53:60" pos:end="53:60">)</operator></expr>)</condition> <block pos:start="53:63" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:19">

        <if_stmt pos:start="55:9" pos:end="57:19"><if pos:start="55:9" pos:end="57:19">if <condition pos:start="55:12" pos:end="55:39">(<expr pos:start="55:13" pos:end="55:38"><call pos:start="55:13" pos:end="55:38"><name pos:start="55:13" pos:end="55:25">lsi_queue_tag</name><argument_list pos:start="55:26" pos:end="55:38">(<argument pos:start="55:27" pos:end="55:27"><expr pos:start="55:27" pos:end="55:27"><name pos:start="55:27" pos:end="55:27">s</name></expr></argument>, <argument pos:start="55:30" pos:end="55:32"><expr pos:start="55:30" pos:end="55:32"><name pos:start="55:30" pos:end="55:32">tag</name></expr></argument>, <argument pos:start="55:35" pos:end="55:37"><expr pos:start="55:35" pos:end="55:37"><name pos:start="55:35" pos:end="55:37">arg</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:19"><block_content pos:start="57:13" pos:end="57:19">

            <return pos:start="57:13" pos:end="57:19">return;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:36">/* host adapter (re)connected */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:54"><expr pos:start="65:5" pos:end="65:53"><call pos:start="65:5" pos:end="65:53"><name pos:start="65:5" pos:end="65:11">DPRINTF</name><argument_list pos:start="65:12" pos:end="65:53">(<argument pos:start="65:13" pos:end="65:42"><expr pos:start="65:13" pos:end="65:42"><literal type="string" pos:start="65:13" pos:end="65:42">"Data ready tag=0x%x len=%d\n"</literal></expr></argument>, <argument pos:start="65:45" pos:end="65:47"><expr pos:start="65:45" pos:end="65:47"><name pos:start="65:45" pos:end="65:47">tag</name></expr></argument>, <argument pos:start="65:50" pos:end="65:52"><expr pos:start="65:50" pos:end="65:52"><name pos:start="65:50" pos:end="65:52">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:14">current</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:23">dma_len</name></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:29">arg</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:28"><expr pos:start="69:5" pos:end="69:27"><name pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:23">command_complete</name></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <literal type="number" pos:start="69:27" pos:end="69:27">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="73:15"><if pos:start="71:5" pos:end="73:15">if <condition pos:start="71:8" pos:end="71:20">(<expr pos:start="71:9" pos:end="71:19"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:19"><name pos:start="71:10" pos:end="71:10">s</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:19">waiting</name></name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:15"><block_content pos:start="73:9" pos:end="73:15">

        <return pos:start="73:9" pos:end="73:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:39">(<expr pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:18">waiting</name></name> <operator pos:start="75:20" pos:end="75:21">==</operator> <literal type="number" pos:start="75:23" pos:end="75:23">1</literal> <operator pos:start="75:25" pos:end="75:26">||</operator> <name pos:start="75:28" pos:end="75:33"><name pos:start="75:28" pos:end="75:28">s</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:33">dbc</name></name> <operator pos:start="75:35" pos:end="75:36">==</operator> <literal type="number" pos:start="75:38" pos:end="75:38">0</literal></expr>)</condition> <block pos:start="75:41" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:29">

        <expr_stmt pos:start="77:9" pos:end="77:29"><expr pos:start="77:9" pos:end="77:28"><call pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:25">lsi_resume_script</name><argument_list pos:start="77:26" pos:end="77:28">(<argument pos:start="77:27" pos:end="77:27"><expr pos:start="77:27" pos:end="77:27"><name pos:start="77:27" pos:end="77:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="83:5">else <block pos:start="79:12" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:27">

        <expr_stmt pos:start="81:9" pos:end="81:27"><expr pos:start="81:9" pos:end="81:26"><call pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:18">lsi_do_dma</name><argument_list pos:start="81:19" pos:end="81:26">(<argument pos:start="81:20" pos:end="81:20"><expr pos:start="81:20" pos:end="81:20"><name pos:start="81:20" pos:end="81:20">s</name></expr></argument>, <argument pos:start="81:23" pos:end="81:25"><expr pos:start="81:23" pos:end="81:25"><name pos:start="81:23" pos:end="81:25">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
