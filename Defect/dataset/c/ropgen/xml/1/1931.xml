<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1931.c" pos:tabs="8"><function pos:start="1:1" pos:end="551:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">create_filtergraph</name><parameter_list pos:start="1:30" pos:end="3:68">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:45">AVFilterContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:47"><decl pos:start="3:31" pos:end="3:47"><type pos:start="3:31" pos:end="3:47"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:43">AVFrame</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:47">in</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:67"><decl pos:start="3:50" pos:end="3:67"><type pos:start="3:50" pos:end="3:67"><specifier pos:start="3:50" pos:end="3:54">const</specifier> <name pos:start="3:56" pos:end="3:62">AVFrame</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:67">out</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="551:1">{<block_content pos:start="7:5" pos:end="549:13">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">ColorSpaceContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:30">ctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:73"><decl pos:start="9:5" pos:end="9:72"><type pos:start="9:5" pos:end="9:30"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:28">AVPixFmtDescriptor</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:37">in_desc</name>  <init pos:start="9:40" pos:end="9:72">= <expr pos:start="9:42" pos:end="9:72"><call pos:start="9:42" pos:end="9:72"><name pos:start="9:42" pos:end="9:60">av_pix_fmt_desc_get</name><argument_list pos:start="9:61" pos:end="9:72">(<argument pos:start="9:62" pos:end="9:71"><expr pos:start="9:62" pos:end="9:71"><name pos:start="9:62" pos:end="9:71"><name pos:start="9:62" pos:end="9:63">in</name><operator pos:start="9:64" pos:end="9:65">-&gt;</operator><name pos:start="9:66" pos:end="9:71">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:74"><decl pos:start="11:5" pos:end="11:73"><type pos:start="11:5" pos:end="11:30"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:28">AVPixFmtDescriptor</name> <modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:38">out_desc</name> <init pos:start="11:40" pos:end="11:73">= <expr pos:start="11:42" pos:end="11:73"><call pos:start="11:42" pos:end="11:73"><name pos:start="11:42" pos:end="11:60">av_pix_fmt_desc_get</name><argument_list pos:start="11:61" pos:end="11:73">(<argument pos:start="11:62" pos:end="11:72"><expr pos:start="11:62" pos:end="11:72"><name pos:start="11:62" pos:end="11:72"><name pos:start="11:62" pos:end="11:64">out</name><operator pos:start="11:65" pos:end="11:66">-&gt;</operator><name pos:start="11:67" pos:end="11:72">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="32:0"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">emms</name> <init pos:start="13:14" pos:end="13:16">= <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr></init></decl>, <decl pos:start="13:19" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:19">m</name></decl>, <decl pos:start="13:22" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:22">n</name></decl>, <decl pos:start="13:25" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:25">o</name></decl>, <decl pos:start="13:28" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:28" pos:end="13:30">res</name></decl>, <decl pos:start="13:33" pos:end="13:45"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:33" pos:end="13:45">fmt_identical</name></decl>, <decl pos:start="13:48" pos:end="13:63"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:48" pos:end="13:59">redo_yuv2rgb</name> <init pos:start="13:61" pos:end="13:63">= <expr pos:start="13:63" pos:end="13:63"><literal type="number" pos:start="13:63" pos:end="13:63">0</literal></expr></init></decl>, <decl pos:start="13:66" pos:end="13:81"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:66" pos:end="13:77">redo_rgb2yuv</name> <init pos:start="13:79" pos:end="13:81">= <expr pos:start="13:81" pos:end="13:81"><literal type="number" pos:start="13:81" pos:end="13:81">0</literal></expr></init></decl>;</decl_stmt>



<cpp:define pos:start="17:1" pos:end="17:63">#<cpp:directive pos:start="17:2" pos:end="17:7">define</cpp:directive> <cpp:macro pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:23">supported_depth</name><parameter_list pos:start="17:24" pos:end="17:26">(<parameter pos:start="17:25" pos:end="17:25"><type pos:start="17:25" pos:end="17:25"><name pos:start="17:25" pos:end="17:25">d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="17:28" pos:end="17:63">((d) == 8 || (d) == 10 || (d) == 12)</cpp:value></cpp:define>

<cpp:define pos:start="19:1" pos:end="21:92">#<cpp:directive pos:start="19:2" pos:end="19:7">define</cpp:directive> <cpp:macro pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:29">supported_subsampling</name><parameter_list pos:start="19:30" pos:end="19:39">(<parameter pos:start="19:31" pos:end="19:33"><type pos:start="19:31" pos:end="19:33"><name pos:start="19:31" pos:end="19:33">lcw</name></type></parameter>, <parameter pos:start="19:36" pos:end="19:38"><type pos:start="19:36" pos:end="19:38"><name pos:start="19:36" pos:end="19:38">lch</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="21:5" pos:end="21:92">(((lcw) == 0 &amp;&amp; (lch) == 0) || ((lcw) == 1 &amp;&amp; (lch) == 0) || ((lcw) == 1 &amp;&amp; (lch) == 1))</cpp:value></cpp:define>

<cpp:define pos:start="23:1" pos:end="31:67">#<cpp:directive pos:start="23:2" pos:end="23:7">define</cpp:directive> <cpp:macro pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:24">supported_format</name><parameter_list pos:start="23:25" pos:end="23:27">(<parameter pos:start="23:26" pos:end="23:26"><type pos:start="23:26" pos:end="23:26"><name pos:start="23:26" pos:end="23:26">d</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="25:5" pos:end="31:67">((d) != NULL &amp;&amp; (d)-&gt;nb_components == 3 &amp;&amp; \

     !((d)-&gt;flags &amp; AV_PIX_FMT_FLAG_RGB) &amp;&amp; \

     supported_depth((d)-&gt;comp[0].depth) &amp;&amp; \

     supported_subsampling((d)-&gt;log2_chroma_w, (d)-&gt;log2_chroma_h))</cpp:value></cpp:define>



    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="47:5">if <condition pos:start="35:8" pos:end="35:35">(<expr pos:start="35:9" pos:end="35:34"><operator pos:start="35:9" pos:end="35:9">!</operator><call pos:start="35:10" pos:end="35:34"><name pos:start="35:10" pos:end="35:25">supported_format</name><argument_list pos:start="35:26" pos:end="35:34">(<argument pos:start="35:27" pos:end="35:33"><expr pos:start="35:27" pos:end="35:33"><name pos:start="35:27" pos:end="35:33">in_desc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:37" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:31">

        <expr_stmt pos:start="37:9" pos:end="43:54"><expr pos:start="37:9" pos:end="43:53"><call pos:start="37:9" pos:end="43:53"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="43:53">(<argument pos:start="37:16" pos:end="37:18"><expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">ctx</name></expr></argument>, <argument pos:start="37:21" pos:end="37:32"><expr pos:start="37:21" pos:end="37:32"><name pos:start="37:21" pos:end="37:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="39:16" pos:end="39:68"><expr pos:start="39:16" pos:end="39:68"><literal type="string" pos:start="39:16" pos:end="39:68">"Unsupported input format %d (%s) or bitdepth (%d)\n"</literal></expr></argument>,

               <argument pos:start="41:16" pos:end="41:25"><expr pos:start="41:16" pos:end="41:25"><name pos:start="41:16" pos:end="41:25"><name pos:start="41:16" pos:end="41:17">in</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:25">format</name></name></expr></argument>, <argument pos:start="41:28" pos:end="41:58"><expr pos:start="41:28" pos:end="41:58"><call pos:start="41:28" pos:end="41:58"><name pos:start="41:28" pos:end="41:46">av_get_pix_fmt_name</name><argument_list pos:start="41:47" pos:end="41:58">(<argument pos:start="41:48" pos:end="41:57"><expr pos:start="41:48" pos:end="41:57"><name pos:start="41:48" pos:end="41:57"><name pos:start="41:48" pos:end="41:49">in</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:57">format</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="43:16" pos:end="43:52"><expr pos:start="43:16" pos:end="43:52"><ternary pos:start="43:16" pos:end="43:52"><condition pos:start="43:16" pos:end="43:24"><expr pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:22">in_desc</name></expr> ?</condition><then pos:start="43:26" pos:end="43:47"> <expr pos:start="43:26" pos:end="43:47"><name pos:start="43:26" pos:end="43:41"><name pos:start="43:26" pos:end="43:32">in_desc</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:38">comp</name><index pos:start="43:39" pos:end="43:41">[<expr pos:start="43:40" pos:end="43:40"><literal type="number" pos:start="43:40" pos:end="43:40">0</literal></expr>]</index></name><operator pos:start="43:42" pos:end="43:42">.</operator><name pos:start="43:43" pos:end="43:47">depth</name></expr> </then><else pos:start="43:49" pos:end="43:52">: <expr pos:start="43:51" pos:end="43:52"><operator pos:start="43:51" pos:end="43:51">-</operator><literal type="number" pos:start="43:52" pos:end="43:52">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="61:5"><if pos:start="49:5" pos:end="61:5">if <condition pos:start="49:8" pos:end="49:36">(<expr pos:start="49:9" pos:end="49:35"><operator pos:start="49:9" pos:end="49:9">!</operator><call pos:start="49:10" pos:end="49:35"><name pos:start="49:10" pos:end="49:25">supported_format</name><argument_list pos:start="49:26" pos:end="49:35">(<argument pos:start="49:27" pos:end="49:34"><expr pos:start="49:27" pos:end="49:34"><name pos:start="49:27" pos:end="49:34">out_desc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:38" pos:end="61:5">{<block_content pos:start="51:9" pos:end="59:31">

        <expr_stmt pos:start="51:9" pos:end="57:56"><expr pos:start="51:9" pos:end="57:55"><call pos:start="51:9" pos:end="57:55"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="57:55">(<argument pos:start="51:16" pos:end="51:18"><expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">ctx</name></expr></argument>, <argument pos:start="51:21" pos:end="51:32"><expr pos:start="51:21" pos:end="51:32"><name pos:start="51:21" pos:end="51:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="53:16" pos:end="53:69"><expr pos:start="53:16" pos:end="53:69"><literal type="string" pos:start="53:16" pos:end="53:69">"Unsupported output format %d (%s) or bitdepth (%d)\n"</literal></expr></argument>,

               <argument pos:start="55:16" pos:end="55:26"><expr pos:start="55:16" pos:end="55:26"><name pos:start="55:16" pos:end="55:26"><name pos:start="55:16" pos:end="55:18">out</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:26">format</name></name></expr></argument>, <argument pos:start="55:29" pos:end="55:60"><expr pos:start="55:29" pos:end="55:60"><call pos:start="55:29" pos:end="55:60"><name pos:start="55:29" pos:end="55:47">av_get_pix_fmt_name</name><argument_list pos:start="55:48" pos:end="55:60">(<argument pos:start="55:49" pos:end="55:59"><expr pos:start="55:49" pos:end="55:59"><name pos:start="55:49" pos:end="55:59"><name pos:start="55:49" pos:end="55:51">out</name><operator pos:start="55:52" pos:end="55:53">-&gt;</operator><name pos:start="55:54" pos:end="55:59">format</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="57:16" pos:end="57:54"><expr pos:start="57:16" pos:end="57:54"><ternary pos:start="57:16" pos:end="57:54"><condition pos:start="57:16" pos:end="57:25"><expr pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:23">out_desc</name></expr> ?</condition><then pos:start="57:27" pos:end="57:49"> <expr pos:start="57:27" pos:end="57:49"><name pos:start="57:27" pos:end="57:43"><name pos:start="57:27" pos:end="57:34">out_desc</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:40">comp</name><index pos:start="57:41" pos:end="57:43">[<expr pos:start="57:42" pos:end="57:42"><literal type="number" pos:start="57:42" pos:end="57:42">0</literal></expr>]</index></name><operator pos:start="57:44" pos:end="57:44">.</operator><name pos:start="57:45" pos:end="57:49">depth</name></expr> </then><else pos:start="57:51" pos:end="57:54">: <expr pos:start="57:53" pos:end="57:54"><operator pos:start="57:53" pos:end="57:53">-</operator><literal type="number" pos:start="57:54" pos:end="57:54">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:31">return <expr pos:start="59:16" pos:end="59:30"><call pos:start="59:16" pos:end="59:30"><name pos:start="59:16" pos:end="59:22">AVERROR</name><argument_list pos:start="59:23" pos:end="59:30">(<argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="65:68"><if pos:start="65:5" pos:end="65:68">if <condition pos:start="65:8" pos:end="65:42">(<expr pos:start="65:9" pos:end="65:41"><name pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:10">in</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:27">color_primaries</name></name>  <operator pos:start="65:30" pos:end="65:31">!=</operator> <name pos:start="65:33" pos:end="65:41"><name pos:start="65:33" pos:end="65:33">s</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:41">in_prm</name></name></expr>)</condition><block type="pseudo" pos:start="65:45" pos:end="65:68"><block_content pos:start="65:45" pos:end="65:68">  <expr_stmt pos:start="65:45" pos:end="65:68"><expr pos:start="65:45" pos:end="65:67"><name pos:start="65:45" pos:end="65:59"><name pos:start="65:45" pos:end="65:45">s</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:59">in_primaries</name></name>  <operator pos:start="65:62" pos:end="65:62">=</operator> <name pos:start="65:64" pos:end="65:67">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="67:68"><if pos:start="67:5" pos:end="67:68">if <condition pos:start="67:8" pos:end="67:43">(<expr pos:start="67:9" pos:end="67:42"><name pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:11">out</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:28">color_primaries</name></name> <operator pos:start="67:30" pos:end="67:31">!=</operator> <name pos:start="67:33" pos:end="67:42"><name pos:start="67:33" pos:end="67:33">s</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:42">out_prm</name></name></expr>)</condition><block type="pseudo" pos:start="67:45" pos:end="67:68"><block_content pos:start="67:45" pos:end="67:68"> <expr_stmt pos:start="67:45" pos:end="67:68"><expr pos:start="67:45" pos:end="67:67"><name pos:start="67:45" pos:end="67:60"><name pos:start="67:45" pos:end="67:45">s</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:60">out_primaries</name></name> <operator pos:start="67:62" pos:end="67:62">=</operator> <name pos:start="67:64" pos:end="67:67">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="69:68"><if pos:start="69:5" pos:end="69:68">if <condition pos:start="69:8" pos:end="69:42">(<expr pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:10">in</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:21">color_trc</name></name>        <operator pos:start="69:30" pos:end="69:31">!=</operator> <name pos:start="69:33" pos:end="69:41"><name pos:start="69:33" pos:end="69:33">s</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:41">in_trc</name></name></expr>)</condition><block type="pseudo" pos:start="69:45" pos:end="69:68"><block_content pos:start="69:45" pos:end="69:68">  <expr_stmt pos:start="69:45" pos:end="69:68"><expr pos:start="69:45" pos:end="69:67"><name pos:start="69:45" pos:end="69:55"><name pos:start="69:45" pos:end="69:45">s</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:55">in_txchr</name></name>      <operator pos:start="69:62" pos:end="69:62">=</operator> <name pos:start="69:64" pos:end="69:67">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="71:68"><if pos:start="71:5" pos:end="71:68">if <condition pos:start="71:8" pos:end="71:43">(<expr pos:start="71:9" pos:end="71:42"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:11">out</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:22">color_trc</name></name>       <operator pos:start="71:30" pos:end="71:31">!=</operator> <name pos:start="71:33" pos:end="71:42"><name pos:start="71:33" pos:end="71:33">s</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:42">out_trc</name></name></expr>)</condition><block type="pseudo" pos:start="71:45" pos:end="71:68"><block_content pos:start="71:45" pos:end="71:68"> <expr_stmt pos:start="71:45" pos:end="71:68"><expr pos:start="71:45" pos:end="71:67"><name pos:start="71:45" pos:end="71:56"><name pos:start="71:45" pos:end="71:45">s</name><operator pos:start="71:46" pos:end="71:47">-&gt;</operator><name pos:start="71:48" pos:end="71:56">out_txchr</name></name>     <operator pos:start="71:62" pos:end="71:62">=</operator> <name pos:start="71:64" pos:end="71:67">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="75:68"><if pos:start="73:5" pos:end="75:68">if <condition pos:start="73:8" pos:end="75:42">(<expr pos:start="73:9" pos:end="75:41"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:10">in</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:22">colorspace</name></name>       <operator pos:start="73:30" pos:end="73:31">!=</operator> <name pos:start="73:33" pos:end="73:41"><name pos:start="73:33" pos:end="73:33">s</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:41">in_csp</name></name> <operator pos:start="73:43" pos:end="73:44">||</operator>

        <name pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:10">in</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:23">color_range</name></name>      <operator pos:start="75:30" pos:end="75:31">!=</operator> <name pos:start="75:33" pos:end="75:41"><name pos:start="75:33" pos:end="75:33">s</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:41">in_rng</name></name></expr>)</condition><block type="pseudo" pos:start="75:45" pos:end="75:68"><block_content pos:start="75:45" pos:end="75:68">  <expr_stmt pos:start="75:45" pos:end="75:68"><expr pos:start="75:45" pos:end="75:67"><name pos:start="75:45" pos:end="75:58"><name pos:start="75:45" pos:end="75:45">s</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:58">in_lumacoef</name></name>   <operator pos:start="75:62" pos:end="75:62">=</operator> <name pos:start="75:64" pos:end="75:67">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="79:68"><if pos:start="77:5" pos:end="79:68">if <condition pos:start="77:8" pos:end="79:43">(<expr pos:start="77:9" pos:end="79:42"><name pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:11">out</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:23">colorspace</name></name>      <operator pos:start="77:30" pos:end="77:31">!=</operator> <name pos:start="77:33" pos:end="77:42"><name pos:start="77:33" pos:end="77:33">s</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:42">out_csp</name></name> <operator pos:start="77:44" pos:end="77:45">||</operator>

        <name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:11">out</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:24">color_range</name></name>     <operator pos:start="79:30" pos:end="79:31">!=</operator> <name pos:start="79:33" pos:end="79:42"><name pos:start="79:33" pos:end="79:33">s</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:42">out_rng</name></name></expr>)</condition><block type="pseudo" pos:start="79:45" pos:end="79:68"><block_content pos:start="79:45" pos:end="79:68"> <expr_stmt pos:start="79:45" pos:end="79:68"><expr pos:start="79:45" pos:end="79:67"><name pos:start="79:45" pos:end="79:59"><name pos:start="79:45" pos:end="79:45">s</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:59">out_lumacoef</name></name>  <operator pos:start="79:62" pos:end="79:62">=</operator> <name pos:start="79:64" pos:end="79:67">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="191:5"><if pos:start="83:5" pos:end="191:5">if <condition pos:start="83:8" pos:end="83:46">(<expr pos:start="83:9" pos:end="83:45"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:25"><name pos:start="83:10" pos:end="83:10">s</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:25">out_primaries</name></name> <operator pos:start="83:27" pos:end="83:28">||</operator> <operator pos:start="83:30" pos:end="83:30">!</operator><name pos:start="83:31" pos:end="83:45"><name pos:start="83:31" pos:end="83:31">s</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:45">in_primaries</name></name></expr>)</condition> <block pos:start="83:48" pos:end="191:5">{<block_content pos:start="85:9" pos:end="189:9">

        <expr_stmt pos:start="85:9" pos:end="85:40"><expr pos:start="85:9" pos:end="85:39"><name pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:17">in_prm</name></name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:39"><name pos:start="85:21" pos:end="85:22">in</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:39">color_primaries</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:57"><expr pos:start="87:9" pos:end="87:56"><name pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:23">in_primaries</name></name> <operator pos:start="87:25" pos:end="87:25">=</operator> <call pos:start="87:27" pos:end="87:56"><name pos:start="87:27" pos:end="87:45">get_color_primaries</name><argument_list pos:start="87:46" pos:end="87:56">(<argument pos:start="87:47" pos:end="87:55"><expr pos:start="87:47" pos:end="87:55"><name pos:start="87:47" pos:end="87:55"><name pos:start="87:47" pos:end="87:47">s</name><operator pos:start="87:48" pos:end="87:49">-&gt;</operator><name pos:start="87:50" pos:end="87:55">in_prm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="99:9"><if pos:start="89:9" pos:end="99:9">if <condition pos:start="89:12" pos:end="89:29">(<expr pos:start="89:13" pos:end="89:28"><operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:28"><name pos:start="89:14" pos:end="89:14">s</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:28">in_primaries</name></name></expr>)</condition> <block pos:start="89:31" pos:end="99:9">{<block_content pos:start="91:13" pos:end="97:35">

            <expr_stmt pos:start="91:13" pos:end="95:66"><expr pos:start="91:13" pos:end="95:65"><call pos:start="91:13" pos:end="95:65"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="95:65">(<argument pos:start="91:20" pos:end="91:22"><expr pos:start="91:20" pos:end="91:22"><name pos:start="91:20" pos:end="91:22">ctx</name></expr></argument>, <argument pos:start="91:25" pos:end="91:36"><expr pos:start="91:25" pos:end="91:36"><name pos:start="91:25" pos:end="91:36">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="93:20" pos:end="93:58"><expr pos:start="93:20" pos:end="93:58"><literal type="string" pos:start="93:20" pos:end="93:58">"Unsupported input primaries %d (%s)\n"</literal></expr></argument>,

                   <argument pos:start="95:20" pos:end="95:28"><expr pos:start="95:20" pos:end="95:28"><name pos:start="95:20" pos:end="95:28"><name pos:start="95:20" pos:end="95:20">s</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:28">in_prm</name></name></expr></argument>, <argument pos:start="95:31" pos:end="95:64"><expr pos:start="95:31" pos:end="95:64"><call pos:start="95:31" pos:end="95:64"><name pos:start="95:31" pos:end="95:53">av_color_primaries_name</name><argument_list pos:start="95:54" pos:end="95:64">(<argument pos:start="95:55" pos:end="95:63"><expr pos:start="95:55" pos:end="95:63"><name pos:start="95:55" pos:end="95:63"><name pos:start="95:55" pos:end="95:55">s</name><operator pos:start="95:56" pos:end="95:57">-&gt;</operator><name pos:start="95:58" pos:end="95:63">in_prm</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:35">return <expr pos:start="97:20" pos:end="97:34"><call pos:start="97:20" pos:end="97:34"><name pos:start="97:20" pos:end="97:26">AVERROR</name><argument_list pos:start="97:27" pos:end="97:34">(<argument pos:start="97:28" pos:end="97:33"><expr pos:start="97:28" pos:end="97:33"><name pos:start="97:28" pos:end="97:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:42"><expr pos:start="101:9" pos:end="101:41"><name pos:start="101:9" pos:end="101:18"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:18">out_prm</name></name> <operator pos:start="101:20" pos:end="101:20">=</operator> <name pos:start="101:22" pos:end="101:41"><name pos:start="101:22" pos:end="101:24">out</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:41">color_primaries</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:59"><expr pos:start="103:9" pos:end="103:58"><name pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:24">out_primaries</name></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <call pos:start="103:28" pos:end="103:58"><name pos:start="103:28" pos:end="103:46">get_color_primaries</name><argument_list pos:start="103:47" pos:end="103:58">(<argument pos:start="103:48" pos:end="103:57"><expr pos:start="103:48" pos:end="103:57"><name pos:start="103:48" pos:end="103:57"><name pos:start="103:48" pos:end="103:48">s</name><operator pos:start="103:49" pos:end="103:50">-&gt;</operator><name pos:start="103:51" pos:end="103:57">out_prm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="133:9"><if pos:start="105:9" pos:end="133:9">if <condition pos:start="105:12" pos:end="105:30">(<expr pos:start="105:13" pos:end="105:29"><operator pos:start="105:13" pos:end="105:13">!</operator><name pos:start="105:14" pos:end="105:29"><name pos:start="105:14" pos:end="105:14">s</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:29">out_primaries</name></name></expr>)</condition> <block pos:start="105:32" pos:end="133:9">{<block_content pos:start="107:13" pos:end="131:35">

            <if_stmt pos:start="107:13" pos:end="129:13"><if pos:start="107:13" pos:end="121:13">if <condition pos:start="107:16" pos:end="107:52">(<expr pos:start="107:17" pos:end="107:51"><name pos:start="107:17" pos:end="107:26"><name pos:start="107:17" pos:end="107:17">s</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:26">out_prm</name></name> <operator pos:start="107:28" pos:end="107:29">==</operator> <name pos:start="107:31" pos:end="107:51">AVCOL_PRI_UNSPECIFIED</name></expr>)</condition> <block pos:start="107:54" pos:end="121:13">{<block_content pos:start="109:17" pos:end="119:17">

                <if_stmt pos:start="109:17" pos:end="119:17"><if pos:start="109:17" pos:end="113:17">if <condition pos:start="109:20" pos:end="109:50">(<expr pos:start="109:21" pos:end="109:49"><name pos:start="109:21" pos:end="109:31"><name pos:start="109:21" pos:end="109:21">s</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:31">user_all</name></name> <operator pos:start="109:33" pos:end="109:34">==</operator> <name pos:start="109:36" pos:end="109:49">CS_UNSPECIFIED</name></expr>)</condition> <block pos:start="109:52" pos:end="113:17">{<block_content pos:start="111:21" pos:end="111:83">

                    <expr_stmt pos:start="111:21" pos:end="111:83"><expr pos:start="111:21" pos:end="111:82"><call pos:start="111:21" pos:end="111:82"><name pos:start="111:21" pos:end="111:26">av_log</name><argument_list pos:start="111:27" pos:end="111:82">(<argument pos:start="111:28" pos:end="111:30"><expr pos:start="111:28" pos:end="111:30"><name pos:start="111:28" pos:end="111:30">ctx</name></expr></argument>, <argument pos:start="111:33" pos:end="111:44"><expr pos:start="111:33" pos:end="111:44"><name pos:start="111:33" pos:end="111:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="111:47" pos:end="111:81"><expr pos:start="111:47" pos:end="111:81"><literal type="string" pos:start="111:47" pos:end="111:81">"Please specify output primaries\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="113:19" pos:end="119:17">else <block pos:start="113:24" pos:end="119:17">{<block_content pos:start="115:21" pos:end="117:82">

                    <expr_stmt pos:start="115:21" pos:end="117:82"><expr pos:start="115:21" pos:end="117:81"><call pos:start="115:21" pos:end="117:81"><name pos:start="115:21" pos:end="115:26">av_log</name><argument_list pos:start="115:27" pos:end="117:81">(<argument pos:start="115:28" pos:end="115:30"><expr pos:start="115:28" pos:end="115:30"><name pos:start="115:28" pos:end="115:30">ctx</name></expr></argument>, <argument pos:start="115:33" pos:end="115:44"><expr pos:start="115:33" pos:end="115:44"><name pos:start="115:33" pos:end="115:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="117:28" pos:end="117:67"><expr pos:start="117:28" pos:end="117:67"><literal type="string" pos:start="117:28" pos:end="117:67">"Unsupported output color property %d\n"</literal></expr></argument>, <argument pos:start="117:70" pos:end="117:80"><expr pos:start="117:70" pos:end="117:80"><name pos:start="117:70" pos:end="117:80"><name pos:start="117:70" pos:end="117:70">s</name><operator pos:start="117:71" pos:end="117:72">-&gt;</operator><name pos:start="117:73" pos:end="117:80">user_all</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="121:15" pos:end="129:13">else <block pos:start="121:20" pos:end="129:13">{<block_content pos:start="123:17" pos:end="127:72">

                <expr_stmt pos:start="123:17" pos:end="127:72"><expr pos:start="123:17" pos:end="127:71"><call pos:start="123:17" pos:end="127:71"><name pos:start="123:17" pos:end="123:22">av_log</name><argument_list pos:start="123:23" pos:end="127:71">(<argument pos:start="123:24" pos:end="123:26"><expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:26">ctx</name></expr></argument>, <argument pos:start="123:29" pos:end="123:40"><expr pos:start="123:29" pos:end="123:40"><name pos:start="123:29" pos:end="123:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="125:24" pos:end="125:63"><expr pos:start="125:24" pos:end="125:63"><literal type="string" pos:start="125:24" pos:end="125:63">"Unsupported output primaries %d (%s)\n"</literal></expr></argument>,

                       <argument pos:start="127:24" pos:end="127:33"><expr pos:start="127:24" pos:end="127:33"><name pos:start="127:24" pos:end="127:33"><name pos:start="127:24" pos:end="127:24">s</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:33">out_prm</name></name></expr></argument>, <argument pos:start="127:36" pos:end="127:70"><expr pos:start="127:36" pos:end="127:70"><call pos:start="127:36" pos:end="127:70"><name pos:start="127:36" pos:end="127:58">av_color_primaries_name</name><argument_list pos:start="127:59" pos:end="127:70">(<argument pos:start="127:60" pos:end="127:69"><expr pos:start="127:60" pos:end="127:69"><name pos:start="127:60" pos:end="127:69"><name pos:start="127:60" pos:end="127:60">s</name><operator pos:start="127:61" pos:end="127:62">-&gt;</operator><name pos:start="127:63" pos:end="127:69">out_prm</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <return pos:start="131:13" pos:end="131:35">return <expr pos:start="131:20" pos:end="131:34"><call pos:start="131:20" pos:end="131:34"><name pos:start="131:20" pos:end="131:26">AVERROR</name><argument_list pos:start="131:27" pos:end="131:34">(<argument pos:start="131:28" pos:end="131:33"><expr pos:start="131:28" pos:end="131:33"><name pos:start="131:28" pos:end="131:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="137:69"><expr pos:start="135:9" pos:end="137:68"><name pos:start="135:9" pos:end="135:32"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:32">lrgb2lrgb_passthrough</name></name> <operator pos:start="135:34" pos:end="135:34">=</operator> <operator pos:start="135:36" pos:end="135:36">!</operator><call pos:start="135:37" pos:end="137:68"><name pos:start="135:37" pos:end="135:42">memcmp</name><argument_list pos:start="135:43" pos:end="137:68">(<argument pos:start="135:44" pos:end="135:58"><expr pos:start="135:44" pos:end="135:58"><name pos:start="135:44" pos:end="135:58"><name pos:start="135:44" pos:end="135:44">s</name><operator pos:start="135:45" pos:end="135:46">-&gt;</operator><name pos:start="135:47" pos:end="135:58">in_primaries</name></name></expr></argument>, <argument pos:start="135:61" pos:end="135:76"><expr pos:start="135:61" pos:end="135:76"><name pos:start="135:61" pos:end="135:76"><name pos:start="135:61" pos:end="135:61">s</name><operator pos:start="135:62" pos:end="135:63">-&gt;</operator><name pos:start="135:64" pos:end="135:76">out_primaries</name></name></expr></argument>,

                                           <argument pos:start="137:44" pos:end="137:67"><expr pos:start="137:44" pos:end="137:67"><sizeof pos:start="137:44" pos:end="137:67">sizeof<argument_list pos:start="137:50" pos:end="137:67">(<argument pos:start="137:51" pos:end="137:66"><expr pos:start="137:51" pos:end="137:66"><operator pos:start="137:51" pos:end="137:51">*</operator><name pos:start="137:52" pos:end="137:66"><name pos:start="137:52" pos:end="137:52">s</name><operator pos:start="137:53" pos:end="137:54">-&gt;</operator><name pos:start="137:55" pos:end="137:66">in_primaries</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="189:9"><if pos:start="139:9" pos:end="189:9">if <condition pos:start="139:12" pos:end="139:38">(<expr pos:start="139:13" pos:end="139:37"><operator pos:start="139:13" pos:end="139:13">!</operator><name pos:start="139:14" pos:end="139:37"><name pos:start="139:14" pos:end="139:14">s</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:37">lrgb2lrgb_passthrough</name></name></expr>)</condition> <block pos:start="139:40" pos:end="189:9">{<block_content pos:start="141:13" pos:end="187:21">

            <decl_stmt pos:start="141:13" pos:end="141:63"><decl pos:start="141:13" pos:end="141:32"><type pos:start="141:13" pos:end="141:18"><name pos:start="141:13" pos:end="141:18">double</name></type> <name pos:start="141:20" pos:end="141:32"><name pos:start="141:20" pos:end="141:26">rgb2xyz</name><index pos:start="141:27" pos:end="141:29">[<expr pos:start="141:28" pos:end="141:28"><literal type="number" pos:start="141:28" pos:end="141:28">3</literal></expr>]</index><index pos:start="141:30" pos:end="141:32">[<expr pos:start="141:31" pos:end="141:31"><literal type="number" pos:start="141:31" pos:end="141:31">3</literal></expr>]</index></name></decl>, <decl pos:start="141:35" pos:end="141:47"><type ref="prev" pos:start="141:13" pos:end="141:18"/><name pos:start="141:35" pos:end="141:47"><name pos:start="141:35" pos:end="141:41">xyz2rgb</name><index pos:start="141:42" pos:end="141:44">[<expr pos:start="141:43" pos:end="141:43"><literal type="number" pos:start="141:43" pos:end="141:43">3</literal></expr>]</index><index pos:start="141:45" pos:end="141:47">[<expr pos:start="141:46" pos:end="141:46"><literal type="number" pos:start="141:46" pos:end="141:46">3</literal></expr>]</index></name></decl>, <decl pos:start="141:50" pos:end="141:62"><type ref="prev" pos:start="141:13" pos:end="141:18"/><name pos:start="141:50" pos:end="141:62"><name pos:start="141:50" pos:end="141:56">rgb2rgb</name><index pos:start="141:57" pos:end="141:59">[<expr pos:start="141:58" pos:end="141:58"><literal type="number" pos:start="141:58" pos:end="141:58">3</literal></expr>]</index><index pos:start="141:60" pos:end="141:62">[<expr pos:start="141:61" pos:end="141:61"><literal type="number" pos:start="141:61" pos:end="141:61">3</literal></expr>]</index></name></decl>;</decl_stmt>



            <expr_stmt pos:start="145:13" pos:end="145:58"><expr pos:start="145:13" pos:end="145:57"><call pos:start="145:13" pos:end="145:57"><name pos:start="145:13" pos:end="145:30">fill_rgb2xyz_table</name><argument_list pos:start="145:31" pos:end="145:57">(<argument pos:start="145:32" pos:end="145:47"><expr pos:start="145:32" pos:end="145:47"><name pos:start="145:32" pos:end="145:47"><name pos:start="145:32" pos:end="145:32">s</name><operator pos:start="145:33" pos:end="145:34">-&gt;</operator><name pos:start="145:35" pos:end="145:47">out_primaries</name></name></expr></argument>, <argument pos:start="145:50" pos:end="145:56"><expr pos:start="145:50" pos:end="145:56"><name pos:start="145:50" pos:end="145:56">rgb2xyz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:47"><expr pos:start="147:13" pos:end="147:46"><call pos:start="147:13" pos:end="147:46"><name pos:start="147:13" pos:end="147:28">invert_matrix3x3</name><argument_list pos:start="147:29" pos:end="147:46">(<argument pos:start="147:30" pos:end="147:36"><expr pos:start="147:30" pos:end="147:36"><name pos:start="147:30" pos:end="147:36">rgb2xyz</name></expr></argument>, <argument pos:start="147:39" pos:end="147:45"><expr pos:start="147:39" pos:end="147:45"><name pos:start="147:39" pos:end="147:45">xyz2rgb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:57"><expr pos:start="149:13" pos:end="149:56"><call pos:start="149:13" pos:end="149:56"><name pos:start="149:13" pos:end="149:30">fill_rgb2xyz_table</name><argument_list pos:start="149:31" pos:end="149:56">(<argument pos:start="149:32" pos:end="149:46"><expr pos:start="149:32" pos:end="149:46"><name pos:start="149:32" pos:end="149:46"><name pos:start="149:32" pos:end="149:32">s</name><operator pos:start="149:33" pos:end="149:34">-&gt;</operator><name pos:start="149:35" pos:end="149:46">in_primaries</name></name></expr></argument>, <argument pos:start="149:49" pos:end="149:55"><expr pos:start="149:49" pos:end="149:55"><name pos:start="149:49" pos:end="149:55">rgb2xyz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="151:13" pos:end="171:13"><if pos:start="151:13" pos:end="167:13">if <condition pos:start="151:16" pos:end="153:49">(<expr pos:start="151:17" pos:end="153:48"><name pos:start="151:17" pos:end="151:36"><name pos:start="151:17" pos:end="151:17">s</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:32">out_primaries</name><operator pos:start="151:33" pos:end="151:34">-&gt;</operator><name pos:start="151:35" pos:end="151:36">wp</name></name> <operator pos:start="151:38" pos:end="151:39">!=</operator> <name pos:start="151:41" pos:end="151:59"><name pos:start="151:41" pos:end="151:41">s</name><operator pos:start="151:42" pos:end="151:43">-&gt;</operator><name pos:start="151:44" pos:end="151:55">in_primaries</name><operator pos:start="151:56" pos:end="151:57">-&gt;</operator><name pos:start="151:58" pos:end="151:59">wp</name></name> <operator pos:start="151:61" pos:end="151:62">&amp;&amp;</operator>

                <name pos:start="153:17" pos:end="153:27"><name pos:start="153:17" pos:end="153:17">s</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:27">wp_adapt</name></name> <operator pos:start="153:29" pos:end="153:30">!=</operator> <name pos:start="153:32" pos:end="153:48">WP_ADAPT_IDENTITY</name></expr>)</condition> <block pos:start="153:51" pos:end="167:13">{<block_content pos:start="155:17" pos:end="165:46">

                <decl_stmt pos:start="155:17" pos:end="155:47"><decl pos:start="155:17" pos:end="155:35"><type pos:start="155:17" pos:end="155:22"><name pos:start="155:17" pos:end="155:22">double</name></type> <name pos:start="155:24" pos:end="155:35"><name pos:start="155:24" pos:end="155:29">wpconv</name><index pos:start="155:30" pos:end="155:32">[<expr pos:start="155:31" pos:end="155:31"><literal type="number" pos:start="155:31" pos:end="155:31">3</literal></expr>]</index><index pos:start="155:33" pos:end="155:35">[<expr pos:start="155:34" pos:end="155:34"><literal type="number" pos:start="155:34" pos:end="155:34">3</literal></expr>]</index></name></decl>, <decl pos:start="155:38" pos:end="155:46"><type ref="prev" pos:start="155:17" pos:end="155:22"/><name pos:start="155:38" pos:end="155:46"><name pos:start="155:38" pos:end="155:40">tmp</name><index pos:start="155:41" pos:end="155:43">[<expr pos:start="155:42" pos:end="155:42"><literal type="number" pos:start="155:42" pos:end="155:42">3</literal></expr>]</index><index pos:start="155:44" pos:end="155:46">[<expr pos:start="155:45" pos:end="155:45"><literal type="number" pos:start="155:45" pos:end="155:45">3</literal></expr>]</index></name></decl>;</decl_stmt>



                <expr_stmt pos:start="159:17" pos:end="161:65"><expr pos:start="159:17" pos:end="161:64"><call pos:start="159:17" pos:end="161:64"><name pos:start="159:17" pos:end="159:42">fill_whitepoint_conv_table</name><argument_list pos:start="159:43" pos:end="161:64">(<argument pos:start="159:44" pos:end="159:49"><expr pos:start="159:44" pos:end="159:49"><name pos:start="159:44" pos:end="159:49">wpconv</name></expr></argument>, <argument pos:start="159:52" pos:end="159:62"><expr pos:start="159:52" pos:end="159:62"><name pos:start="159:52" pos:end="159:62"><name pos:start="159:52" pos:end="159:52">s</name><operator pos:start="159:53" pos:end="159:54">-&gt;</operator><name pos:start="159:55" pos:end="159:62">wp_adapt</name></name></expr></argument>, <argument pos:start="159:65" pos:end="159:83"><expr pos:start="159:65" pos:end="159:83"><name pos:start="159:65" pos:end="159:83"><name pos:start="159:65" pos:end="159:65">s</name><operator pos:start="159:66" pos:end="159:67">-&gt;</operator><name pos:start="159:68" pos:end="159:79">in_primaries</name><operator pos:start="159:80" pos:end="159:81">-&gt;</operator><name pos:start="159:82" pos:end="159:83">wp</name></name></expr></argument>,

                                           <argument pos:start="161:44" pos:end="161:63"><expr pos:start="161:44" pos:end="161:63"><name pos:start="161:44" pos:end="161:63"><name pos:start="161:44" pos:end="161:44">s</name><operator pos:start="161:45" pos:end="161:46">-&gt;</operator><name pos:start="161:47" pos:end="161:59">out_primaries</name><operator pos:start="161:60" pos:end="161:61">-&gt;</operator><name pos:start="161:62" pos:end="161:63">wp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:45"><expr pos:start="163:17" pos:end="163:44"><call pos:start="163:17" pos:end="163:44"><name pos:start="163:17" pos:end="163:22">mul3x3</name><argument_list pos:start="163:23" pos:end="163:44">(<argument pos:start="163:24" pos:end="163:26"><expr pos:start="163:24" pos:end="163:26"><name pos:start="163:24" pos:end="163:26">tmp</name></expr></argument>, <argument pos:start="163:29" pos:end="163:35"><expr pos:start="163:29" pos:end="163:35"><name pos:start="163:29" pos:end="163:35">rgb2xyz</name></expr></argument>, <argument pos:start="163:38" pos:end="163:43"><expr pos:start="163:38" pos:end="163:43"><name pos:start="163:38" pos:end="163:43">wpconv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:46"><expr pos:start="165:17" pos:end="165:45"><call pos:start="165:17" pos:end="165:45"><name pos:start="165:17" pos:end="165:22">mul3x3</name><argument_list pos:start="165:23" pos:end="165:45">(<argument pos:start="165:24" pos:end="165:30"><expr pos:start="165:24" pos:end="165:30"><name pos:start="165:24" pos:end="165:30">rgb2rgb</name></expr></argument>, <argument pos:start="165:33" pos:end="165:35"><expr pos:start="165:33" pos:end="165:35"><name pos:start="165:33" pos:end="165:35">tmp</name></expr></argument>, <argument pos:start="165:38" pos:end="165:44"><expr pos:start="165:38" pos:end="165:44"><name pos:start="165:38" pos:end="165:44">xyz2rgb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="167:15" pos:end="171:13">else <block pos:start="167:20" pos:end="171:13">{<block_content pos:start="169:17" pos:end="169:50">

                <expr_stmt pos:start="169:17" pos:end="169:50"><expr pos:start="169:17" pos:end="169:49"><call pos:start="169:17" pos:end="169:49"><name pos:start="169:17" pos:end="169:22">mul3x3</name><argument_list pos:start="169:23" pos:end="169:49">(<argument pos:start="169:24" pos:end="169:30"><expr pos:start="169:24" pos:end="169:30"><name pos:start="169:24" pos:end="169:30">rgb2rgb</name></expr></argument>, <argument pos:start="169:33" pos:end="169:39"><expr pos:start="169:33" pos:end="169:39"><name pos:start="169:33" pos:end="169:39">rgb2xyz</name></expr></argument>, <argument pos:start="169:42" pos:end="169:48"><expr pos:start="169:42" pos:end="169:48"><name pos:start="169:42" pos:end="169:48">xyz2rgb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <for pos:start="173:13" pos:end="183:17">for <control pos:start="173:17" pos:end="173:35">(<init pos:start="173:18" pos:end="173:23"><expr pos:start="173:18" pos:end="173:22"><name pos:start="173:18" pos:end="173:18">m</name> <operator pos:start="173:20" pos:end="173:20">=</operator> <literal type="number" pos:start="173:22" pos:end="173:22">0</literal></expr>;</init> <condition pos:start="173:25" pos:end="173:30"><expr pos:start="173:25" pos:end="173:29"><name pos:start="173:25" pos:end="173:25">m</name> <operator pos:start="173:27" pos:end="173:27">&lt;</operator> <literal type="number" pos:start="173:29" pos:end="173:29">3</literal></expr>;</condition> <incr pos:start="173:32" pos:end="173:34"><expr pos:start="173:32" pos:end="173:34"><name pos:start="173:32" pos:end="173:32">m</name><operator pos:start="173:33" pos:end="173:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="175:17" pos:end="183:17"><block_content pos:start="175:17" pos:end="183:17">

                <for pos:start="175:17" pos:end="183:17">for <control pos:start="175:21" pos:end="175:39">(<init pos:start="175:22" pos:end="175:27"><expr pos:start="175:22" pos:end="175:26"><name pos:start="175:22" pos:end="175:22">n</name> <operator pos:start="175:24" pos:end="175:24">=</operator> <literal type="number" pos:start="175:26" pos:end="175:26">0</literal></expr>;</init> <condition pos:start="175:29" pos:end="175:34"><expr pos:start="175:29" pos:end="175:33"><name pos:start="175:29" pos:end="175:29">n</name> <operator pos:start="175:31" pos:end="175:31">&lt;</operator> <literal type="number" pos:start="175:33" pos:end="175:33">3</literal></expr>;</condition> <incr pos:start="175:36" pos:end="175:38"><expr pos:start="175:36" pos:end="175:38"><name pos:start="175:36" pos:end="175:36">n</name><operator pos:start="175:37" pos:end="175:38">++</operator></expr></incr>)</control> <block pos:start="175:41" pos:end="183:17">{<block_content pos:start="177:21" pos:end="181:84">

                    <expr_stmt pos:start="177:21" pos:end="177:82"><expr pos:start="177:21" pos:end="177:81"><name pos:start="177:21" pos:end="177:48"><name pos:start="177:21" pos:end="177:21">s</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:39">lrgb2lrgb_coeffs</name><index pos:start="177:40" pos:end="177:42">[<expr pos:start="177:41" pos:end="177:41"><name pos:start="177:41" pos:end="177:41">m</name></expr>]</index><index pos:start="177:43" pos:end="177:45">[<expr pos:start="177:44" pos:end="177:44"><name pos:start="177:44" pos:end="177:44">n</name></expr>]</index><index pos:start="177:46" pos:end="177:48">[<expr pos:start="177:47" pos:end="177:47"><literal type="number" pos:start="177:47" pos:end="177:47">0</literal></expr>]</index></name> <operator pos:start="177:50" pos:end="177:50">=</operator> <call pos:start="177:52" pos:end="177:81"><name pos:start="177:52" pos:end="177:56">lrint</name><argument_list pos:start="177:57" pos:end="177:81">(<argument pos:start="177:58" pos:end="177:80"><expr pos:start="177:58" pos:end="177:80"><literal type="number" pos:start="177:58" pos:end="177:64">16384.0</literal> <operator pos:start="177:66" pos:end="177:66">*</operator> <name pos:start="177:68" pos:end="177:80"><name pos:start="177:68" pos:end="177:74">rgb2rgb</name><index pos:start="177:75" pos:end="177:77">[<expr pos:start="177:76" pos:end="177:76"><name pos:start="177:76" pos:end="177:76">m</name></expr>]</index><index pos:start="177:78" pos:end="177:80">[<expr pos:start="177:79" pos:end="177:79"><name pos:start="177:79" pos:end="177:79">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="179:21" pos:end="181:84">for <control pos:start="179:25" pos:end="179:43">(<init pos:start="179:26" pos:end="179:31"><expr pos:start="179:26" pos:end="179:30"><name pos:start="179:26" pos:end="179:26">o</name> <operator pos:start="179:28" pos:end="179:28">=</operator> <literal type="number" pos:start="179:30" pos:end="179:30">1</literal></expr>;</init> <condition pos:start="179:33" pos:end="179:38"><expr pos:start="179:33" pos:end="179:37"><name pos:start="179:33" pos:end="179:33">o</name> <operator pos:start="179:35" pos:end="179:35">&lt;</operator> <literal type="number" pos:start="179:37" pos:end="179:37">8</literal></expr>;</condition> <incr pos:start="179:40" pos:end="179:42"><expr pos:start="179:40" pos:end="179:42"><name pos:start="179:40" pos:end="179:40">o</name><operator pos:start="179:41" pos:end="179:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="181:25" pos:end="181:84"><block_content pos:start="181:25" pos:end="181:84">

                        <expr_stmt pos:start="181:25" pos:end="181:84"><expr pos:start="181:25" pos:end="181:83"><name pos:start="181:25" pos:end="181:52"><name pos:start="181:25" pos:end="181:25">s</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:43">lrgb2lrgb_coeffs</name><index pos:start="181:44" pos:end="181:46">[<expr pos:start="181:45" pos:end="181:45"><name pos:start="181:45" pos:end="181:45">m</name></expr>]</index><index pos:start="181:47" pos:end="181:49">[<expr pos:start="181:48" pos:end="181:48"><name pos:start="181:48" pos:end="181:48">n</name></expr>]</index><index pos:start="181:50" pos:end="181:52">[<expr pos:start="181:51" pos:end="181:51"><name pos:start="181:51" pos:end="181:51">o</name></expr>]</index></name> <operator pos:start="181:54" pos:end="181:54">=</operator> <name pos:start="181:56" pos:end="181:83"><name pos:start="181:56" pos:end="181:56">s</name><operator pos:start="181:57" pos:end="181:58">-&gt;</operator><name pos:start="181:59" pos:end="181:74">lrgb2lrgb_coeffs</name><index pos:start="181:75" pos:end="181:77">[<expr pos:start="181:76" pos:end="181:76"><name pos:start="181:76" pos:end="181:76">m</name></expr>]</index><index pos:start="181:78" pos:end="181:80">[<expr pos:start="181:79" pos:end="181:79"><name pos:start="181:79" pos:end="181:79">n</name></expr>]</index><index pos:start="181:81" pos:end="181:83">[<expr pos:start="181:82" pos:end="181:82"><literal type="number" pos:start="181:82" pos:end="181:82">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></for></block_content></block></for>



            <expr_stmt pos:start="187:13" pos:end="187:21"><expr pos:start="187:13" pos:end="187:20"><name pos:start="187:13" pos:end="187:16">emms</name> <operator pos:start="187:18" pos:end="187:18">=</operator> <literal type="number" pos:start="187:20" pos:end="187:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="195:5" pos:end="215:5"><if pos:start="195:5" pos:end="215:5">if <condition pos:start="195:8" pos:end="195:21">(<expr pos:start="195:9" pos:end="195:20"><operator pos:start="195:9" pos:end="195:9">!</operator><name pos:start="195:10" pos:end="195:20"><name pos:start="195:10" pos:end="195:10">s</name><operator pos:start="195:11" pos:end="195:12">-&gt;</operator><name pos:start="195:13" pos:end="195:20">in_txchr</name></name></expr>)</condition> <block pos:start="195:23" pos:end="215:5">{<block_content pos:start="197:9" pos:end="213:9">

        <expr_stmt pos:start="197:9" pos:end="197:30"><expr pos:start="197:9" pos:end="197:29"><call pos:start="197:9" pos:end="197:29"><name pos:start="197:9" pos:end="197:16">av_freep</name><argument_list pos:start="197:17" pos:end="197:29">(<argument pos:start="197:18" pos:end="197:28"><expr pos:start="197:18" pos:end="197:28"><operator pos:start="197:18" pos:end="197:18">&amp;</operator><name pos:start="197:19" pos:end="197:28"><name pos:start="197:19" pos:end="197:19">s</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:28">lin_lut</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:34"><expr pos:start="199:9" pos:end="199:33"><name pos:start="199:9" pos:end="199:17"><name pos:start="199:9" pos:end="199:9">s</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:17">in_trc</name></name> <operator pos:start="199:19" pos:end="199:19">=</operator> <name pos:start="199:21" pos:end="199:33"><name pos:start="199:21" pos:end="199:22">in</name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:33">color_trc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:62"><expr pos:start="201:9" pos:end="201:61"><name pos:start="201:9" pos:end="201:19"><name pos:start="201:9" pos:end="201:9">s</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:19">in_txchr</name></name> <operator pos:start="201:21" pos:end="201:21">=</operator> <call pos:start="201:23" pos:end="201:61"><name pos:start="201:23" pos:end="201:50">get_transfer_characteristics</name><argument_list pos:start="201:51" pos:end="201:61">(<argument pos:start="201:52" pos:end="201:60"><expr pos:start="201:52" pos:end="201:60"><name pos:start="201:52" pos:end="201:60"><name pos:start="201:52" pos:end="201:52">s</name><operator pos:start="201:53" pos:end="201:54">-&gt;</operator><name pos:start="201:55" pos:end="201:60">in_trc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="203:9" pos:end="213:9"><if pos:start="203:9" pos:end="213:9">if <condition pos:start="203:12" pos:end="203:25">(<expr pos:start="203:13" pos:end="203:24"><operator pos:start="203:13" pos:end="203:13">!</operator><name pos:start="203:14" pos:end="203:24"><name pos:start="203:14" pos:end="203:14">s</name><operator pos:start="203:15" pos:end="203:16">-&gt;</operator><name pos:start="203:17" pos:end="203:24">in_txchr</name></name></expr>)</condition> <block pos:start="203:27" pos:end="213:9">{<block_content pos:start="205:13" pos:end="211:35">

            <expr_stmt pos:start="205:13" pos:end="209:65"><expr pos:start="205:13" pos:end="209:64"><call pos:start="205:13" pos:end="209:64"><name pos:start="205:13" pos:end="205:18">av_log</name><argument_list pos:start="205:19" pos:end="209:64">(<argument pos:start="205:20" pos:end="205:22"><expr pos:start="205:20" pos:end="205:22"><name pos:start="205:20" pos:end="205:22">ctx</name></expr></argument>, <argument pos:start="205:25" pos:end="205:36"><expr pos:start="205:25" pos:end="205:36"><name pos:start="205:25" pos:end="205:36">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="207:20" pos:end="207:73"><expr pos:start="207:20" pos:end="207:73"><literal type="string" pos:start="207:20" pos:end="207:73">"Unsupported input transfer characteristics %d (%s)\n"</literal></expr></argument>,

                   <argument pos:start="209:20" pos:end="209:28"><expr pos:start="209:20" pos:end="209:28"><name pos:start="209:20" pos:end="209:28"><name pos:start="209:20" pos:end="209:20">s</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:28">in_trc</name></name></expr></argument>, <argument pos:start="209:31" pos:end="209:63"><expr pos:start="209:31" pos:end="209:63"><call pos:start="209:31" pos:end="209:63"><name pos:start="209:31" pos:end="209:52">av_color_transfer_name</name><argument_list pos:start="209:53" pos:end="209:63">(<argument pos:start="209:54" pos:end="209:62"><expr pos:start="209:54" pos:end="209:62"><name pos:start="209:54" pos:end="209:62"><name pos:start="209:54" pos:end="209:54">s</name><operator pos:start="209:55" pos:end="209:56">-&gt;</operator><name pos:start="209:57" pos:end="209:62">in_trc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="211:13" pos:end="211:35">return <expr pos:start="211:20" pos:end="211:34"><call pos:start="211:20" pos:end="211:34"><name pos:start="211:20" pos:end="211:26">AVERROR</name><argument_list pos:start="211:27" pos:end="211:34">(<argument pos:start="211:28" pos:end="211:33"><expr pos:start="211:28" pos:end="211:33"><name pos:start="211:28" pos:end="211:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="219:5" pos:end="259:5"><if pos:start="219:5" pos:end="259:5">if <condition pos:start="219:8" pos:end="219:22">(<expr pos:start="219:9" pos:end="219:21"><operator pos:start="219:9" pos:end="219:9">!</operator><name pos:start="219:10" pos:end="219:21"><name pos:start="219:10" pos:end="219:10">s</name><operator pos:start="219:11" pos:end="219:12">-&gt;</operator><name pos:start="219:13" pos:end="219:21">out_txchr</name></name></expr>)</condition> <block pos:start="219:24" pos:end="259:5">{<block_content pos:start="221:9" pos:end="257:9">

        <expr_stmt pos:start="221:9" pos:end="221:30"><expr pos:start="221:9" pos:end="221:29"><call pos:start="221:9" pos:end="221:29"><name pos:start="221:9" pos:end="221:16">av_freep</name><argument_list pos:start="221:17" pos:end="221:29">(<argument pos:start="221:18" pos:end="221:28"><expr pos:start="221:18" pos:end="221:28"><operator pos:start="221:18" pos:end="221:18">&amp;</operator><name pos:start="221:19" pos:end="221:28"><name pos:start="221:19" pos:end="221:19">s</name><operator pos:start="221:20" pos:end="221:21">-&gt;</operator><name pos:start="221:22" pos:end="221:28">lin_lut</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:36"><expr pos:start="223:9" pos:end="223:35"><name pos:start="223:9" pos:end="223:18"><name pos:start="223:9" pos:end="223:9">s</name><operator pos:start="223:10" pos:end="223:11">-&gt;</operator><name pos:start="223:12" pos:end="223:18">out_trc</name></name> <operator pos:start="223:20" pos:end="223:20">=</operator> <name pos:start="223:22" pos:end="223:35"><name pos:start="223:22" pos:end="223:24">out</name><operator pos:start="223:25" pos:end="223:26">-&gt;</operator><name pos:start="223:27" pos:end="223:35">color_trc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:64"><expr pos:start="225:9" pos:end="225:63"><name pos:start="225:9" pos:end="225:20"><name pos:start="225:9" pos:end="225:9">s</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:20">out_txchr</name></name> <operator pos:start="225:22" pos:end="225:22">=</operator> <call pos:start="225:24" pos:end="225:63"><name pos:start="225:24" pos:end="225:51">get_transfer_characteristics</name><argument_list pos:start="225:52" pos:end="225:63">(<argument pos:start="225:53" pos:end="225:62"><expr pos:start="225:53" pos:end="225:62"><name pos:start="225:53" pos:end="225:62"><name pos:start="225:53" pos:end="225:53">s</name><operator pos:start="225:54" pos:end="225:55">-&gt;</operator><name pos:start="225:56" pos:end="225:62">out_trc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="227:9" pos:end="257:9"><if pos:start="227:9" pos:end="257:9">if <condition pos:start="227:12" pos:end="227:26">(<expr pos:start="227:13" pos:end="227:25"><operator pos:start="227:13" pos:end="227:13">!</operator><name pos:start="227:14" pos:end="227:25"><name pos:start="227:14" pos:end="227:14">s</name><operator pos:start="227:15" pos:end="227:16">-&gt;</operator><name pos:start="227:17" pos:end="227:25">out_txchr</name></name></expr>)</condition> <block pos:start="227:28" pos:end="257:9">{<block_content pos:start="229:13" pos:end="255:35">

            <if_stmt pos:start="229:13" pos:end="253:13"><if pos:start="229:13" pos:end="245:13">if <condition pos:start="229:16" pos:end="229:52">(<expr pos:start="229:17" pos:end="229:51"><name pos:start="229:17" pos:end="229:26"><name pos:start="229:17" pos:end="229:17">s</name><operator pos:start="229:18" pos:end="229:19">-&gt;</operator><name pos:start="229:20" pos:end="229:26">out_trc</name></name> <operator pos:start="229:28" pos:end="229:29">==</operator> <name pos:start="229:31" pos:end="229:51">AVCOL_TRC_UNSPECIFIED</name></expr>)</condition> <block pos:start="229:54" pos:end="245:13">{<block_content pos:start="231:17" pos:end="243:17">

                <if_stmt pos:start="231:17" pos:end="243:17"><if pos:start="231:17" pos:end="237:17">if <condition pos:start="231:20" pos:end="231:50">(<expr pos:start="231:21" pos:end="231:49"><name pos:start="231:21" pos:end="231:31"><name pos:start="231:21" pos:end="231:21">s</name><operator pos:start="231:22" pos:end="231:23">-&gt;</operator><name pos:start="231:24" pos:end="231:31">user_all</name></name> <operator pos:start="231:33" pos:end="231:34">==</operator> <name pos:start="231:36" pos:end="231:49">CS_UNSPECIFIED</name></expr>)</condition> <block pos:start="231:52" pos:end="237:17">{<block_content pos:start="233:21" pos:end="235:79">

                    <expr_stmt pos:start="233:21" pos:end="235:79"><expr pos:start="233:21" pos:end="235:78"><call pos:start="233:21" pos:end="235:78"><name pos:start="233:21" pos:end="233:26">av_log</name><argument_list pos:start="233:27" pos:end="235:78">(<argument pos:start="233:28" pos:end="233:30"><expr pos:start="233:28" pos:end="233:30"><name pos:start="233:28" pos:end="233:30">ctx</name></expr></argument>, <argument pos:start="233:33" pos:end="233:44"><expr pos:start="233:33" pos:end="233:44"><name pos:start="233:33" pos:end="233:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="235:28" pos:end="235:77"><expr pos:start="235:28" pos:end="235:77"><literal type="string" pos:start="235:28" pos:end="235:77">"Please specify output transfer characteristics\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="237:19" pos:end="243:17">else <block pos:start="237:24" pos:end="243:17">{<block_content pos:start="239:21" pos:end="241:82">

                    <expr_stmt pos:start="239:21" pos:end="241:82"><expr pos:start="239:21" pos:end="241:81"><call pos:start="239:21" pos:end="241:81"><name pos:start="239:21" pos:end="239:26">av_log</name><argument_list pos:start="239:27" pos:end="241:81">(<argument pos:start="239:28" pos:end="239:30"><expr pos:start="239:28" pos:end="239:30"><name pos:start="239:28" pos:end="239:30">ctx</name></expr></argument>, <argument pos:start="239:33" pos:end="239:44"><expr pos:start="239:33" pos:end="239:44"><name pos:start="239:33" pos:end="239:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="241:28" pos:end="241:67"><expr pos:start="241:28" pos:end="241:67"><literal type="string" pos:start="241:28" pos:end="241:67">"Unsupported output color property %d\n"</literal></expr></argument>, <argument pos:start="241:70" pos:end="241:80"><expr pos:start="241:70" pos:end="241:80"><name pos:start="241:70" pos:end="241:80"><name pos:start="241:70" pos:end="241:70">s</name><operator pos:start="241:71" pos:end="241:72">-&gt;</operator><name pos:start="241:73" pos:end="241:80">user_all</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="245:15" pos:end="253:13">else <block pos:start="245:20" pos:end="253:13">{<block_content pos:start="247:17" pos:end="251:71">

                <expr_stmt pos:start="247:17" pos:end="251:71"><expr pos:start="247:17" pos:end="251:70"><call pos:start="247:17" pos:end="251:70"><name pos:start="247:17" pos:end="247:22">av_log</name><argument_list pos:start="247:23" pos:end="251:70">(<argument pos:start="247:24" pos:end="247:26"><expr pos:start="247:24" pos:end="247:26"><name pos:start="247:24" pos:end="247:26">ctx</name></expr></argument>, <argument pos:start="247:29" pos:end="247:40"><expr pos:start="247:29" pos:end="247:40"><name pos:start="247:29" pos:end="247:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="249:24" pos:end="249:78"><expr pos:start="249:24" pos:end="249:78"><literal type="string" pos:start="249:24" pos:end="249:78">"Unsupported output transfer characteristics %d (%s)\n"</literal></expr></argument>,

                       <argument pos:start="251:24" pos:end="251:33"><expr pos:start="251:24" pos:end="251:33"><name pos:start="251:24" pos:end="251:33"><name pos:start="251:24" pos:end="251:24">s</name><operator pos:start="251:25" pos:end="251:26">-&gt;</operator><name pos:start="251:27" pos:end="251:33">out_trc</name></name></expr></argument>, <argument pos:start="251:36" pos:end="251:69"><expr pos:start="251:36" pos:end="251:69"><call pos:start="251:36" pos:end="251:69"><name pos:start="251:36" pos:end="251:57">av_color_transfer_name</name><argument_list pos:start="251:58" pos:end="251:69">(<argument pos:start="251:59" pos:end="251:68"><expr pos:start="251:59" pos:end="251:68"><name pos:start="251:59" pos:end="251:68"><name pos:start="251:59" pos:end="251:59">s</name><operator pos:start="251:60" pos:end="251:61">-&gt;</operator><name pos:start="251:62" pos:end="251:68">out_trc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <return pos:start="255:13" pos:end="255:35">return <expr pos:start="255:20" pos:end="255:34"><call pos:start="255:20" pos:end="255:34"><name pos:start="255:20" pos:end="255:26">AVERROR</name><argument_list pos:start="255:27" pos:end="255:34">(<argument pos:start="255:28" pos:end="255:33"><expr pos:start="255:28" pos:end="255:33"><name pos:start="255:28" pos:end="255:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="263:5" pos:end="265:87"><expr pos:start="263:5" pos:end="265:86"><name pos:start="263:5" pos:end="263:26"><name pos:start="263:5" pos:end="263:5">s</name><operator pos:start="263:6" pos:end="263:7">-&gt;</operator><name pos:start="263:8" pos:end="263:26">rgb2rgb_passthrough</name></name> <operator pos:start="263:28" pos:end="263:28">=</operator> <name pos:start="263:30" pos:end="263:41"><name pos:start="263:30" pos:end="263:30">s</name><operator pos:start="263:31" pos:end="263:32">-&gt;</operator><name pos:start="263:33" pos:end="263:41">fast_mode</name></name> <operator pos:start="263:43" pos:end="263:44">||</operator> <operator pos:start="263:46" pos:end="263:46">(</operator><name pos:start="263:47" pos:end="263:70"><name pos:start="263:47" pos:end="263:47">s</name><operator pos:start="263:48" pos:end="263:49">-&gt;</operator><name pos:start="263:50" pos:end="263:70">lrgb2lrgb_passthrough</name></name> <operator pos:start="263:72" pos:end="263:73">&amp;&amp;</operator>

                             <operator pos:start="265:30" pos:end="265:30">!</operator><call pos:start="265:31" pos:end="265:85"><name pos:start="265:31" pos:end="265:36">memcmp</name><argument_list pos:start="265:37" pos:end="265:85">(<argument pos:start="265:38" pos:end="265:48"><expr pos:start="265:38" pos:end="265:48"><name pos:start="265:38" pos:end="265:48"><name pos:start="265:38" pos:end="265:38">s</name><operator pos:start="265:39" pos:end="265:40">-&gt;</operator><name pos:start="265:41" pos:end="265:48">in_txchr</name></name></expr></argument>, <argument pos:start="265:51" pos:end="265:62"><expr pos:start="265:51" pos:end="265:62"><name pos:start="265:51" pos:end="265:62"><name pos:start="265:51" pos:end="265:51">s</name><operator pos:start="265:52" pos:end="265:53">-&gt;</operator><name pos:start="265:54" pos:end="265:62">out_txchr</name></name></expr></argument>, <argument pos:start="265:65" pos:end="265:84"><expr pos:start="265:65" pos:end="265:84"><sizeof pos:start="265:65" pos:end="265:84">sizeof<argument_list pos:start="265:71" pos:end="265:84">(<argument pos:start="265:72" pos:end="265:83"><expr pos:start="265:72" pos:end="265:83"><operator pos:start="265:72" pos:end="265:72">*</operator><name pos:start="265:73" pos:end="265:83"><name pos:start="265:73" pos:end="265:73">s</name><operator pos:start="265:74" pos:end="265:75">-&gt;</operator><name pos:start="265:76" pos:end="265:83">in_txchr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="265:86" pos:end="265:86">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="267:5" pos:end="277:5"><if pos:start="267:5" pos:end="277:5">if <condition pos:start="267:8" pos:end="267:47">(<expr pos:start="267:9" pos:end="267:46"><operator pos:start="267:9" pos:end="267:9">!</operator><name pos:start="267:10" pos:end="267:31"><name pos:start="267:10" pos:end="267:10">s</name><operator pos:start="267:11" pos:end="267:12">-&gt;</operator><name pos:start="267:13" pos:end="267:31">rgb2rgb_passthrough</name></name> <operator pos:start="267:33" pos:end="267:34">&amp;&amp;</operator> <operator pos:start="267:36" pos:end="267:36">!</operator><name pos:start="267:37" pos:end="267:46"><name pos:start="267:37" pos:end="267:37">s</name><operator pos:start="267:38" pos:end="267:39">-&gt;</operator><name pos:start="267:40" pos:end="267:46">lin_lut</name></name></expr>)</condition> <block pos:start="267:49" pos:end="277:5">{<block_content pos:start="269:9" pos:end="275:17">

        <expr_stmt pos:start="269:9" pos:end="269:34"><expr pos:start="269:9" pos:end="269:33"><name pos:start="269:9" pos:end="269:11">res</name> <operator pos:start="269:13" pos:end="269:13">=</operator> <call pos:start="269:15" pos:end="269:33"><name pos:start="269:15" pos:end="269:30">fill_gamma_table</name><argument_list pos:start="269:31" pos:end="269:33">(<argument pos:start="269:32" pos:end="269:32"><expr pos:start="269:32" pos:end="269:32"><name pos:start="269:32" pos:end="269:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="271:9" pos:end="273:23"><if pos:start="271:9" pos:end="273:23">if <condition pos:start="271:12" pos:end="271:20">(<expr pos:start="271:13" pos:end="271:19"><name pos:start="271:13" pos:end="271:15">res</name> <operator pos:start="271:17" pos:end="271:17">&lt;</operator> <literal type="number" pos:start="271:19" pos:end="271:19">0</literal></expr>)</condition><block type="pseudo" pos:start="273:13" pos:end="273:23"><block_content pos:start="273:13" pos:end="273:23">

            <return pos:start="273:13" pos:end="273:23">return <expr pos:start="273:20" pos:end="273:22"><name pos:start="273:20" pos:end="273:22">res</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:17"><expr pos:start="275:9" pos:end="275:16"><name pos:start="275:9" pos:end="275:12">emms</name> <operator pos:start="275:14" pos:end="275:14">=</operator> <literal type="number" pos:start="275:16" pos:end="275:16">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="281:5" pos:end="303:5"><if pos:start="281:5" pos:end="303:5">if <condition pos:start="281:8" pos:end="281:24">(<expr pos:start="281:9" pos:end="281:23"><operator pos:start="281:9" pos:end="281:9">!</operator><name pos:start="281:10" pos:end="281:23"><name pos:start="281:10" pos:end="281:10">s</name><operator pos:start="281:11" pos:end="281:12">-&gt;</operator><name pos:start="281:13" pos:end="281:23">in_lumacoef</name></name></expr>)</condition> <block pos:start="281:26" pos:end="303:5">{<block_content pos:start="283:9" pos:end="301:25">

        <expr_stmt pos:start="283:9" pos:end="283:35"><expr pos:start="283:9" pos:end="283:34"><name pos:start="283:9" pos:end="283:17"><name pos:start="283:9" pos:end="283:9">s</name><operator pos:start="283:10" pos:end="283:11">-&gt;</operator><name pos:start="283:12" pos:end="283:17">in_csp</name></name> <operator pos:start="283:19" pos:end="283:19">=</operator> <name pos:start="283:21" pos:end="283:34"><name pos:start="283:21" pos:end="283:22">in</name><operator pos:start="283:23" pos:end="283:24">-&gt;</operator><name pos:start="283:25" pos:end="283:34">colorspace</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:36"><expr pos:start="285:9" pos:end="285:35"><name pos:start="285:9" pos:end="285:17"><name pos:start="285:9" pos:end="285:9">s</name><operator pos:start="285:10" pos:end="285:11">-&gt;</operator><name pos:start="285:12" pos:end="285:17">in_rng</name></name> <operator pos:start="285:19" pos:end="285:19">=</operator> <name pos:start="285:21" pos:end="285:35"><name pos:start="285:21" pos:end="285:22">in</name><operator pos:start="285:23" pos:end="285:24">-&gt;</operator><name pos:start="285:25" pos:end="285:35">color_range</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:58"><expr pos:start="287:9" pos:end="287:57"><name pos:start="287:9" pos:end="287:22"><name pos:start="287:9" pos:end="287:9">s</name><operator pos:start="287:10" pos:end="287:11">-&gt;</operator><name pos:start="287:12" pos:end="287:22">in_lumacoef</name></name> <operator pos:start="287:24" pos:end="287:24">=</operator> <call pos:start="287:26" pos:end="287:57"><name pos:start="287:26" pos:end="287:46">get_luma_coefficients</name><argument_list pos:start="287:47" pos:end="287:57">(<argument pos:start="287:48" pos:end="287:56"><expr pos:start="287:48" pos:end="287:56"><name pos:start="287:48" pos:end="287:56"><name pos:start="287:48" pos:end="287:48">s</name><operator pos:start="287:49" pos:end="287:50">-&gt;</operator><name pos:start="287:51" pos:end="287:56">in_csp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="289:9" pos:end="299:9"><if pos:start="289:9" pos:end="299:9">if <condition pos:start="289:12" pos:end="289:28">(<expr pos:start="289:13" pos:end="289:27"><operator pos:start="289:13" pos:end="289:13">!</operator><name pos:start="289:14" pos:end="289:27"><name pos:start="289:14" pos:end="289:14">s</name><operator pos:start="289:15" pos:end="289:16">-&gt;</operator><name pos:start="289:17" pos:end="289:27">in_lumacoef</name></name></expr>)</condition> <block pos:start="289:30" pos:end="299:9">{<block_content pos:start="291:13" pos:end="297:35">

            <expr_stmt pos:start="291:13" pos:end="295:62"><expr pos:start="291:13" pos:end="295:61"><call pos:start="291:13" pos:end="295:61"><name pos:start="291:13" pos:end="291:18">av_log</name><argument_list pos:start="291:19" pos:end="295:61">(<argument pos:start="291:20" pos:end="291:22"><expr pos:start="291:20" pos:end="291:22"><name pos:start="291:20" pos:end="291:22">ctx</name></expr></argument>, <argument pos:start="291:25" pos:end="291:36"><expr pos:start="291:25" pos:end="291:36"><name pos:start="291:25" pos:end="291:36">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="293:20" pos:end="293:59"><expr pos:start="293:20" pos:end="293:59"><literal type="string" pos:start="293:20" pos:end="293:59">"Unsupported input colorspace %d (%s)\n"</literal></expr></argument>,

                   <argument pos:start="295:20" pos:end="295:28"><expr pos:start="295:20" pos:end="295:28"><name pos:start="295:20" pos:end="295:28"><name pos:start="295:20" pos:end="295:20">s</name><operator pos:start="295:21" pos:end="295:22">-&gt;</operator><name pos:start="295:23" pos:end="295:28">in_csp</name></name></expr></argument>, <argument pos:start="295:31" pos:end="295:60"><expr pos:start="295:31" pos:end="295:60"><call pos:start="295:31" pos:end="295:60"><name pos:start="295:31" pos:end="295:49">av_color_space_name</name><argument_list pos:start="295:50" pos:end="295:60">(<argument pos:start="295:51" pos:end="295:59"><expr pos:start="295:51" pos:end="295:59"><name pos:start="295:51" pos:end="295:59"><name pos:start="295:51" pos:end="295:51">s</name><operator pos:start="295:52" pos:end="295:53">-&gt;</operator><name pos:start="295:54" pos:end="295:59">in_csp</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="297:13" pos:end="297:35">return <expr pos:start="297:20" pos:end="297:34"><call pos:start="297:20" pos:end="297:34"><name pos:start="297:20" pos:end="297:26">AVERROR</name><argument_list pos:start="297:27" pos:end="297:34">(<argument pos:start="297:28" pos:end="297:33"><expr pos:start="297:28" pos:end="297:33"><name pos:start="297:28" pos:end="297:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:25"><expr pos:start="301:9" pos:end="301:24"><name pos:start="301:9" pos:end="301:20">redo_yuv2rgb</name> <operator pos:start="301:22" pos:end="301:22">=</operator> <literal type="number" pos:start="301:24" pos:end="301:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="307:5" pos:end="349:5"><if pos:start="307:5" pos:end="349:5">if <condition pos:start="307:8" pos:end="307:25">(<expr pos:start="307:9" pos:end="307:24"><operator pos:start="307:9" pos:end="307:9">!</operator><name pos:start="307:10" pos:end="307:24"><name pos:start="307:10" pos:end="307:10">s</name><operator pos:start="307:11" pos:end="307:12">-&gt;</operator><name pos:start="307:13" pos:end="307:24">out_lumacoef</name></name></expr>)</condition> <block pos:start="307:27" pos:end="349:5">{<block_content pos:start="309:9" pos:end="347:25">

        <expr_stmt pos:start="309:9" pos:end="309:37"><expr pos:start="309:9" pos:end="309:36"><name pos:start="309:9" pos:end="309:18"><name pos:start="309:9" pos:end="309:9">s</name><operator pos:start="309:10" pos:end="309:11">-&gt;</operator><name pos:start="309:12" pos:end="309:18">out_csp</name></name> <operator pos:start="309:20" pos:end="309:20">=</operator> <name pos:start="309:22" pos:end="309:36"><name pos:start="309:22" pos:end="309:24">out</name><operator pos:start="309:25" pos:end="309:26">-&gt;</operator><name pos:start="309:27" pos:end="309:36">colorspace</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:38"><expr pos:start="311:9" pos:end="311:37"><name pos:start="311:9" pos:end="311:18"><name pos:start="311:9" pos:end="311:9">s</name><operator pos:start="311:10" pos:end="311:11">-&gt;</operator><name pos:start="311:12" pos:end="311:18">out_rng</name></name> <operator pos:start="311:20" pos:end="311:20">=</operator> <name pos:start="311:22" pos:end="311:37"><name pos:start="311:22" pos:end="311:24">out</name><operator pos:start="311:25" pos:end="311:26">-&gt;</operator><name pos:start="311:27" pos:end="311:37">color_range</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:60"><expr pos:start="313:9" pos:end="313:59"><name pos:start="313:9" pos:end="313:23"><name pos:start="313:9" pos:end="313:9">s</name><operator pos:start="313:10" pos:end="313:11">-&gt;</operator><name pos:start="313:12" pos:end="313:23">out_lumacoef</name></name> <operator pos:start="313:25" pos:end="313:25">=</operator> <call pos:start="313:27" pos:end="313:59"><name pos:start="313:27" pos:end="313:47">get_luma_coefficients</name><argument_list pos:start="313:48" pos:end="313:59">(<argument pos:start="313:49" pos:end="313:58"><expr pos:start="313:49" pos:end="313:58"><name pos:start="313:49" pos:end="313:58"><name pos:start="313:49" pos:end="313:49">s</name><operator pos:start="313:50" pos:end="313:51">-&gt;</operator><name pos:start="313:52" pos:end="313:58">out_csp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="315:9" pos:end="345:9"><if pos:start="315:9" pos:end="345:9">if <condition pos:start="315:12" pos:end="315:29">(<expr pos:start="315:13" pos:end="315:28"><operator pos:start="315:13" pos:end="315:13">!</operator><name pos:start="315:14" pos:end="315:28"><name pos:start="315:14" pos:end="315:14">s</name><operator pos:start="315:15" pos:end="315:16">-&gt;</operator><name pos:start="315:17" pos:end="315:28">out_lumacoef</name></name></expr>)</condition> <block pos:start="315:31" pos:end="345:9">{<block_content pos:start="317:13" pos:end="343:35">

            <if_stmt pos:start="317:13" pos:end="341:13"><if pos:start="317:13" pos:end="333:13">if <condition pos:start="317:16" pos:end="317:52">(<expr pos:start="317:17" pos:end="317:51"><name pos:start="317:17" pos:end="317:26"><name pos:start="317:17" pos:end="317:17">s</name><operator pos:start="317:18" pos:end="317:19">-&gt;</operator><name pos:start="317:20" pos:end="317:26">out_csp</name></name> <operator pos:start="317:28" pos:end="317:29">==</operator> <name pos:start="317:31" pos:end="317:51">AVCOL_SPC_UNSPECIFIED</name></expr>)</condition> <block pos:start="317:54" pos:end="333:13">{<block_content pos:start="319:17" pos:end="331:17">

                <if_stmt pos:start="319:17" pos:end="331:17"><if pos:start="319:17" pos:end="325:17">if <condition pos:start="319:20" pos:end="319:50">(<expr pos:start="319:21" pos:end="319:49"><name pos:start="319:21" pos:end="319:31"><name pos:start="319:21" pos:end="319:21">s</name><operator pos:start="319:22" pos:end="319:23">-&gt;</operator><name pos:start="319:24" pos:end="319:31">user_all</name></name> <operator pos:start="319:33" pos:end="319:34">==</operator> <name pos:start="319:36" pos:end="319:49">CS_UNSPECIFIED</name></expr>)</condition> <block pos:start="319:52" pos:end="325:17">{<block_content pos:start="321:21" pos:end="323:79">

                    <expr_stmt pos:start="321:21" pos:end="323:79"><expr pos:start="321:21" pos:end="323:78"><call pos:start="321:21" pos:end="323:78"><name pos:start="321:21" pos:end="321:26">av_log</name><argument_list pos:start="321:27" pos:end="323:78">(<argument pos:start="321:28" pos:end="321:30"><expr pos:start="321:28" pos:end="321:30"><name pos:start="321:28" pos:end="321:30">ctx</name></expr></argument>, <argument pos:start="321:33" pos:end="321:44"><expr pos:start="321:33" pos:end="321:44"><name pos:start="321:33" pos:end="321:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="323:28" pos:end="323:77"><expr pos:start="323:28" pos:end="323:77"><literal type="string" pos:start="323:28" pos:end="323:77">"Please specify output transfer characteristics\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="325:19" pos:end="331:17">else <block pos:start="325:24" pos:end="331:17">{<block_content pos:start="327:21" pos:end="329:82">

                    <expr_stmt pos:start="327:21" pos:end="329:82"><expr pos:start="327:21" pos:end="329:81"><call pos:start="327:21" pos:end="329:81"><name pos:start="327:21" pos:end="327:26">av_log</name><argument_list pos:start="327:27" pos:end="329:81">(<argument pos:start="327:28" pos:end="327:30"><expr pos:start="327:28" pos:end="327:30"><name pos:start="327:28" pos:end="327:30">ctx</name></expr></argument>, <argument pos:start="327:33" pos:end="327:44"><expr pos:start="327:33" pos:end="327:44"><name pos:start="327:33" pos:end="327:44">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="329:28" pos:end="329:67"><expr pos:start="329:28" pos:end="329:67"><literal type="string" pos:start="329:28" pos:end="329:67">"Unsupported output color property %d\n"</literal></expr></argument>, <argument pos:start="329:70" pos:end="329:80"><expr pos:start="329:70" pos:end="329:80"><name pos:start="329:70" pos:end="329:80"><name pos:start="329:70" pos:end="329:70">s</name><operator pos:start="329:71" pos:end="329:72">-&gt;</operator><name pos:start="329:73" pos:end="329:80">user_all</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="333:15" pos:end="341:13">else <block pos:start="333:20" pos:end="341:13">{<block_content pos:start="335:17" pos:end="339:68">

                <expr_stmt pos:start="335:17" pos:end="339:68"><expr pos:start="335:17" pos:end="339:67"><call pos:start="335:17" pos:end="339:67"><name pos:start="335:17" pos:end="335:22">av_log</name><argument_list pos:start="335:23" pos:end="339:67">(<argument pos:start="335:24" pos:end="335:26"><expr pos:start="335:24" pos:end="335:26"><name pos:start="335:24" pos:end="335:26">ctx</name></expr></argument>, <argument pos:start="335:29" pos:end="335:40"><expr pos:start="335:29" pos:end="335:40"><name pos:start="335:29" pos:end="335:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="337:24" pos:end="337:78"><expr pos:start="337:24" pos:end="337:78"><literal type="string" pos:start="337:24" pos:end="337:78">"Unsupported output transfer characteristics %d (%s)\n"</literal></expr></argument>,

                       <argument pos:start="339:24" pos:end="339:33"><expr pos:start="339:24" pos:end="339:33"><name pos:start="339:24" pos:end="339:33"><name pos:start="339:24" pos:end="339:24">s</name><operator pos:start="339:25" pos:end="339:26">-&gt;</operator><name pos:start="339:27" pos:end="339:33">out_csp</name></name></expr></argument>, <argument pos:start="339:36" pos:end="339:66"><expr pos:start="339:36" pos:end="339:66"><call pos:start="339:36" pos:end="339:66"><name pos:start="339:36" pos:end="339:54">av_color_space_name</name><argument_list pos:start="339:55" pos:end="339:66">(<argument pos:start="339:56" pos:end="339:65"><expr pos:start="339:56" pos:end="339:65"><name pos:start="339:56" pos:end="339:65"><name pos:start="339:56" pos:end="339:56">s</name><operator pos:start="339:57" pos:end="339:58">-&gt;</operator><name pos:start="339:59" pos:end="339:65">out_csp</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <return pos:start="343:13" pos:end="343:35">return <expr pos:start="343:20" pos:end="343:34"><call pos:start="343:20" pos:end="343:34"><name pos:start="343:20" pos:end="343:26">AVERROR</name><argument_list pos:start="343:27" pos:end="343:34">(<argument pos:start="343:28" pos:end="343:33"><expr pos:start="343:28" pos:end="343:33"><name pos:start="343:28" pos:end="343:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:25"><expr pos:start="347:9" pos:end="347:24"><name pos:start="347:9" pos:end="347:20">redo_rgb2yuv</name> <operator pos:start="347:22" pos:end="347:22">=</operator> <literal type="number" pos:start="347:24" pos:end="347:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="353:5" pos:end="355:70"><expr pos:start="353:5" pos:end="355:69"><name pos:start="353:5" pos:end="353:17">fmt_identical</name> <operator pos:start="353:19" pos:end="353:19">=</operator> <name pos:start="353:21" pos:end="353:42"><name pos:start="353:21" pos:end="353:27">in_desc</name><operator pos:start="353:28" pos:end="353:29">-&gt;</operator><name pos:start="353:30" pos:end="353:42">log2_chroma_h</name></name> <operator pos:start="353:44" pos:end="353:45">==</operator> <name pos:start="353:47" pos:end="353:69"><name pos:start="353:47" pos:end="353:54">out_desc</name><operator pos:start="353:55" pos:end="353:56">-&gt;</operator><name pos:start="353:57" pos:end="353:69">log2_chroma_h</name></name> <operator pos:start="353:71" pos:end="353:72">&amp;&amp;</operator>

                    <name pos:start="355:21" pos:end="355:42"><name pos:start="355:21" pos:end="355:27">in_desc</name><operator pos:start="355:28" pos:end="355:29">-&gt;</operator><name pos:start="355:30" pos:end="355:42">log2_chroma_w</name></name> <operator pos:start="355:44" pos:end="355:45">==</operator> <name pos:start="355:47" pos:end="355:69"><name pos:start="355:47" pos:end="355:54">out_desc</name><operator pos:start="355:55" pos:end="355:56">-&gt;</operator><name pos:start="355:57" pos:end="355:69">log2_chroma_w</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="357:5" pos:end="357:66"><expr pos:start="357:5" pos:end="357:65"><name pos:start="357:5" pos:end="357:23"><name pos:start="357:5" pos:end="357:5">s</name><operator pos:start="357:6" pos:end="357:7">-&gt;</operator><name pos:start="357:8" pos:end="357:23">yuv2yuv_fastmode</name></name> <operator pos:start="357:25" pos:end="357:25">=</operator> <name pos:start="357:27" pos:end="357:48"><name pos:start="357:27" pos:end="357:27">s</name><operator pos:start="357:28" pos:end="357:29">-&gt;</operator><name pos:start="357:30" pos:end="357:48">rgb2rgb_passthrough</name></name> <operator pos:start="357:50" pos:end="357:51">&amp;&amp;</operator> <name pos:start="357:53" pos:end="357:65">fmt_identical</name></expr>;</expr_stmt>

    <expr_stmt pos:start="359:5" pos:end="363:62"><expr pos:start="359:5" pos:end="363:61"><name pos:start="359:5" pos:end="359:26"><name pos:start="359:5" pos:end="359:5">s</name><operator pos:start="359:6" pos:end="359:7">-&gt;</operator><name pos:start="359:8" pos:end="359:26">yuv2yuv_passthrough</name></name> <operator pos:start="359:28" pos:end="359:28">=</operator> <name pos:start="359:30" pos:end="359:48"><name pos:start="359:30" pos:end="359:30">s</name><operator pos:start="359:31" pos:end="359:32">-&gt;</operator><name pos:start="359:33" pos:end="359:48">yuv2yuv_fastmode</name></name> <operator pos:start="359:50" pos:end="359:51">&amp;&amp;</operator> <name pos:start="359:53" pos:end="359:61"><name pos:start="359:53" pos:end="359:53">s</name><operator pos:start="359:54" pos:end="359:55">-&gt;</operator><name pos:start="359:56" pos:end="359:61">in_rng</name></name> <operator pos:start="359:63" pos:end="359:64">==</operator> <name pos:start="359:66" pos:end="359:75"><name pos:start="359:66" pos:end="359:66">s</name><operator pos:start="359:67" pos:end="359:68">-&gt;</operator><name pos:start="359:69" pos:end="359:75">out_rng</name></name> <operator pos:start="359:77" pos:end="359:78">&amp;&amp;</operator>

                             <operator pos:start="361:30" pos:end="361:30">!</operator><call pos:start="361:31" pos:end="363:61"><name pos:start="361:31" pos:end="361:36">memcmp</name><argument_list pos:start="361:37" pos:end="363:61">(<argument pos:start="361:38" pos:end="361:51"><expr pos:start="361:38" pos:end="361:51"><name pos:start="361:38" pos:end="361:51"><name pos:start="361:38" pos:end="361:38">s</name><operator pos:start="361:39" pos:end="361:40">-&gt;</operator><name pos:start="361:41" pos:end="361:51">in_lumacoef</name></name></expr></argument>, <argument pos:start="361:54" pos:end="361:68"><expr pos:start="361:54" pos:end="361:68"><name pos:start="361:54" pos:end="361:68"><name pos:start="361:54" pos:end="361:54">s</name><operator pos:start="361:55" pos:end="361:56">-&gt;</operator><name pos:start="361:57" pos:end="361:68">out_lumacoef</name></name></expr></argument>,

                                     <argument pos:start="363:38" pos:end="363:60"><expr pos:start="363:38" pos:end="363:60"><sizeof pos:start="363:38" pos:end="363:60">sizeof<argument_list pos:start="363:44" pos:end="363:60">(<argument pos:start="363:45" pos:end="363:59"><expr pos:start="363:45" pos:end="363:59"><operator pos:start="363:45" pos:end="363:45">*</operator><name pos:start="363:46" pos:end="363:59"><name pos:start="363:46" pos:end="363:46">s</name><operator pos:start="363:47" pos:end="363:48">-&gt;</operator><name pos:start="363:49" pos:end="363:59">in_lumacoef</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="365:5" pos:end="539:5"><if pos:start="365:5" pos:end="539:5">if <condition pos:start="365:8" pos:end="365:32">(<expr pos:start="365:9" pos:end="365:31"><operator pos:start="365:9" pos:end="365:9">!</operator><name pos:start="365:10" pos:end="365:31"><name pos:start="365:10" pos:end="365:10">s</name><operator pos:start="365:11" pos:end="365:12">-&gt;</operator><name pos:start="365:13" pos:end="365:31">yuv2yuv_passthrough</name></name></expr>)</condition> <block pos:start="365:34" pos:end="539:5">{<block_content pos:start="367:9" pos:end="537:9">

        <if_stmt pos:start="367:9" pos:end="429:9"><if pos:start="367:9" pos:end="429:9">if <condition pos:start="367:12" pos:end="367:25">(<expr pos:start="367:13" pos:end="367:24"><name pos:start="367:13" pos:end="367:24">redo_yuv2rgb</name></expr>)</condition> <block pos:start="367:27" pos:end="429:9">{<block_content pos:start="369:13" pos:end="427:21">

            <decl_stmt pos:start="369:13" pos:end="369:72"><decl pos:start="369:13" pos:end="369:32"><type pos:start="369:13" pos:end="369:18"><name pos:start="369:13" pos:end="369:18">double</name></type> <name pos:start="369:20" pos:end="369:32"><name pos:start="369:20" pos:end="369:26">rgb2yuv</name><index pos:start="369:27" pos:end="369:29">[<expr pos:start="369:28" pos:end="369:28"><literal type="number" pos:start="369:28" pos:end="369:28">3</literal></expr>]</index><index pos:start="369:30" pos:end="369:32">[<expr pos:start="369:31" pos:end="369:31"><literal type="number" pos:start="369:31" pos:end="369:31">3</literal></expr>]</index></name></decl>, <argument_list pos:start="369:35" pos:end="369:44">(<argument pos:start="369:36" pos:end="369:43"><expr pos:start="369:36" pos:end="369:43"><operator pos:start="369:36" pos:end="369:36">*</operator><name pos:start="369:37" pos:end="369:43">yuv2rgb</name></expr></argument>)</argument_list>[3] <init pos:start="369:49" pos:end="369:71">= <expr pos:start="369:51" pos:end="369:71"><name pos:start="369:51" pos:end="369:71"><name pos:start="369:51" pos:end="369:51">s</name><operator pos:start="369:52" pos:end="369:53">-&gt;</operator><name pos:start="369:54" pos:end="369:71">yuv2rgb_dbl_coeffs</name></name></expr></init>;</decl_stmt>

            <decl_stmt pos:start="371:13" pos:end="371:34"><decl pos:start="371:13" pos:end="371:19"><type pos:start="371:13" pos:end="371:15"><name pos:start="371:13" pos:end="371:15">int</name></type> <name pos:start="371:17" pos:end="371:19">off</name></decl>, <decl pos:start="371:22" pos:end="371:25"><type ref="prev" pos:start="371:13" pos:end="371:15"/><name pos:start="371:22" pos:end="371:25">bits</name></decl>, <decl pos:start="371:28" pos:end="371:33"><type ref="prev" pos:start="371:13" pos:end="371:15"/><name pos:start="371:28" pos:end="371:33">in_rng</name></decl>;</decl_stmt>



            <expr_stmt pos:start="375:13" pos:end="377:67"><expr pos:start="375:13" pos:end="377:66"><name pos:start="375:13" pos:end="375:15">res</name> <operator pos:start="375:17" pos:end="375:17">=</operator> <call pos:start="375:19" pos:end="377:66"><name pos:start="375:19" pos:end="375:31">get_range_off</name><argument_list pos:start="375:32" pos:end="377:66">(<argument pos:start="375:33" pos:end="375:36"><expr pos:start="375:33" pos:end="375:36"><operator pos:start="375:33" pos:end="375:33">&amp;</operator><name pos:start="375:34" pos:end="375:36">off</name></expr></argument>, <argument pos:start="375:39" pos:end="375:50"><expr pos:start="375:39" pos:end="375:50"><operator pos:start="375:39" pos:end="375:39">&amp;</operator><name pos:start="375:40" pos:end="375:50"><name pos:start="375:40" pos:end="375:40">s</name><operator pos:start="375:41" pos:end="375:42">-&gt;</operator><name pos:start="375:43" pos:end="375:50">in_y_rng</name></name></expr></argument>, <argument pos:start="375:53" pos:end="375:65"><expr pos:start="375:53" pos:end="375:65"><operator pos:start="375:53" pos:end="375:53">&amp;</operator><name pos:start="375:54" pos:end="375:65"><name pos:start="375:54" pos:end="375:54">s</name><operator pos:start="375:55" pos:end="375:56">-&gt;</operator><name pos:start="375:57" pos:end="375:65">in_uv_rng</name></name></expr></argument>,

                                <argument pos:start="377:33" pos:end="377:41"><expr pos:start="377:33" pos:end="377:41"><name pos:start="377:33" pos:end="377:41"><name pos:start="377:33" pos:end="377:33">s</name><operator pos:start="377:34" pos:end="377:35">-&gt;</operator><name pos:start="377:36" pos:end="377:41">in_rng</name></name></expr></argument>, <argument pos:start="377:44" pos:end="377:65"><expr pos:start="377:44" pos:end="377:65"><name pos:start="377:44" pos:end="377:59"><name pos:start="377:44" pos:end="377:50">in_desc</name><operator pos:start="377:51" pos:end="377:52">-&gt;</operator><name pos:start="377:53" pos:end="377:56">comp</name><index pos:start="377:57" pos:end="377:59">[<expr pos:start="377:58" pos:end="377:58"><literal type="number" pos:start="377:58" pos:end="377:58">0</literal></expr>]</index></name><operator pos:start="377:60" pos:end="377:60">.</operator><name pos:start="377:61" pos:end="377:65">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="379:13" pos:end="389:13"><if pos:start="379:13" pos:end="389:13">if <condition pos:start="379:16" pos:end="379:24">(<expr pos:start="379:17" pos:end="379:23"><name pos:start="379:17" pos:end="379:19">res</name> <operator pos:start="379:21" pos:end="379:21">&lt;</operator> <literal type="number" pos:start="379:23" pos:end="379:23">0</literal></expr>)</condition> <block pos:start="379:26" pos:end="389:13">{<block_content pos:start="381:17" pos:end="387:27">

                <expr_stmt pos:start="381:17" pos:end="385:66"><expr pos:start="381:17" pos:end="385:65"><call pos:start="381:17" pos:end="385:65"><name pos:start="381:17" pos:end="381:22">av_log</name><argument_list pos:start="381:23" pos:end="385:65">(<argument pos:start="381:24" pos:end="381:26"><expr pos:start="381:24" pos:end="381:26"><name pos:start="381:24" pos:end="381:26">ctx</name></expr></argument>, <argument pos:start="381:29" pos:end="381:40"><expr pos:start="381:29" pos:end="381:40"><name pos:start="381:29" pos:end="381:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="383:24" pos:end="383:64"><expr pos:start="383:24" pos:end="383:64"><literal type="string" pos:start="383:24" pos:end="383:64">"Unsupported input color range %d (%s)\n"</literal></expr></argument>,

                       <argument pos:start="385:24" pos:end="385:32"><expr pos:start="385:24" pos:end="385:32"><name pos:start="385:24" pos:end="385:32"><name pos:start="385:24" pos:end="385:24">s</name><operator pos:start="385:25" pos:end="385:26">-&gt;</operator><name pos:start="385:27" pos:end="385:32">in_rng</name></name></expr></argument>, <argument pos:start="385:35" pos:end="385:64"><expr pos:start="385:35" pos:end="385:64"><call pos:start="385:35" pos:end="385:64"><name pos:start="385:35" pos:end="385:53">av_color_range_name</name><argument_list pos:start="385:54" pos:end="385:64">(<argument pos:start="385:55" pos:end="385:63"><expr pos:start="385:55" pos:end="385:63"><name pos:start="385:55" pos:end="385:63"><name pos:start="385:55" pos:end="385:55">s</name><operator pos:start="385:56" pos:end="385:57">-&gt;</operator><name pos:start="385:58" pos:end="385:63">in_rng</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="387:17" pos:end="387:27">return <expr pos:start="387:24" pos:end="387:26"><name pos:start="387:24" pos:end="387:26">res</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <for pos:start="391:13" pos:end="393:42">for <control pos:start="391:17" pos:end="391:35">(<init pos:start="391:18" pos:end="391:23"><expr pos:start="391:18" pos:end="391:22"><name pos:start="391:18" pos:end="391:18">n</name> <operator pos:start="391:20" pos:end="391:20">=</operator> <literal type="number" pos:start="391:22" pos:end="391:22">0</literal></expr>;</init> <condition pos:start="391:25" pos:end="391:30"><expr pos:start="391:25" pos:end="391:29"><name pos:start="391:25" pos:end="391:25">n</name> <operator pos:start="391:27" pos:end="391:27">&lt;</operator> <literal type="number" pos:start="391:29" pos:end="391:29">8</literal></expr>;</condition> <incr pos:start="391:32" pos:end="391:34"><expr pos:start="391:32" pos:end="391:34"><name pos:start="391:32" pos:end="391:32">n</name><operator pos:start="391:33" pos:end="391:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="393:17" pos:end="393:42"><block_content pos:start="393:17" pos:end="393:42">

                <expr_stmt pos:start="393:17" pos:end="393:42"><expr pos:start="393:17" pos:end="393:41"><name pos:start="393:17" pos:end="393:35"><name pos:start="393:17" pos:end="393:17">s</name><operator pos:start="393:18" pos:end="393:19">-&gt;</operator><name pos:start="393:20" pos:end="393:29">yuv_offset</name><index pos:start="393:30" pos:end="393:32">[<expr pos:start="393:31" pos:end="393:31"><literal type="number" pos:start="393:31" pos:end="393:31">0</literal></expr>]</index><index pos:start="393:33" pos:end="393:35">[<expr pos:start="393:34" pos:end="393:34"><name pos:start="393:34" pos:end="393:34">n</name></expr>]</index></name> <operator pos:start="393:37" pos:end="393:37">=</operator> <name pos:start="393:39" pos:end="393:41">off</name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="395:13" pos:end="395:56"><expr pos:start="395:13" pos:end="395:55"><call pos:start="395:13" pos:end="395:55"><name pos:start="395:13" pos:end="395:30">fill_rgb2yuv_table</name><argument_list pos:start="395:31" pos:end="395:55">(<argument pos:start="395:32" pos:end="395:45"><expr pos:start="395:32" pos:end="395:45"><name pos:start="395:32" pos:end="395:45"><name pos:start="395:32" pos:end="395:32">s</name><operator pos:start="395:33" pos:end="395:34">-&gt;</operator><name pos:start="395:35" pos:end="395:45">in_lumacoef</name></name></expr></argument>, <argument pos:start="395:48" pos:end="395:54"><expr pos:start="395:48" pos:end="395:54"><name pos:start="395:48" pos:end="395:54">rgb2yuv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:47"><expr pos:start="397:13" pos:end="397:46"><call pos:start="397:13" pos:end="397:46"><name pos:start="397:13" pos:end="397:28">invert_matrix3x3</name><argument_list pos:start="397:29" pos:end="397:46">(<argument pos:start="397:30" pos:end="397:36"><expr pos:start="397:30" pos:end="397:36"><name pos:start="397:30" pos:end="397:36">rgb2yuv</name></expr></argument>, <argument pos:start="397:39" pos:end="397:45"><expr pos:start="397:39" pos:end="397:45"><name pos:start="397:39" pos:end="397:45">yuv2rgb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:53"><expr pos:start="399:13" pos:end="399:52"><name pos:start="399:13" pos:end="399:16">bits</name> <operator pos:start="399:18" pos:end="399:18">=</operator> <literal type="number" pos:start="399:20" pos:end="399:20">1</literal> <operator pos:start="399:22" pos:end="399:23">&lt;&lt;</operator> <operator pos:start="399:25" pos:end="399:25">(</operator><name pos:start="399:26" pos:end="399:41"><name pos:start="399:26" pos:end="399:32">in_desc</name><operator pos:start="399:33" pos:end="399:34">-&gt;</operator><name pos:start="399:35" pos:end="399:38">comp</name><index pos:start="399:39" pos:end="399:41">[<expr pos:start="399:40" pos:end="399:40"><literal type="number" pos:start="399:40" pos:end="399:40">0</literal></expr>]</index></name><operator pos:start="399:42" pos:end="399:42">.</operator><name pos:start="399:43" pos:end="399:47">depth</name> <operator pos:start="399:49" pos:end="399:49">-</operator> <literal type="number" pos:start="399:51" pos:end="399:51">1</literal><operator pos:start="399:52" pos:end="399:52">)</operator></expr>;</expr_stmt>

            <for pos:start="401:13" pos:end="413:13">for <control pos:start="401:17" pos:end="401:35">(<init pos:start="401:18" pos:end="401:23"><expr pos:start="401:18" pos:end="401:22"><name pos:start="401:18" pos:end="401:18">n</name> <operator pos:start="401:20" pos:end="401:20">=</operator> <literal type="number" pos:start="401:22" pos:end="401:22">0</literal></expr>;</init> <condition pos:start="401:25" pos:end="401:30"><expr pos:start="401:25" pos:end="401:29"><name pos:start="401:25" pos:end="401:25">n</name> <operator pos:start="401:27" pos:end="401:27">&lt;</operator> <literal type="number" pos:start="401:29" pos:end="401:29">3</literal></expr>;</condition> <incr pos:start="401:32" pos:end="401:34"><expr pos:start="401:32" pos:end="401:34"><name pos:start="401:32" pos:end="401:32">n</name><operator pos:start="401:33" pos:end="401:34">++</operator></expr></incr>)</control> <block pos:start="401:37" pos:end="413:13">{<block_content pos:start="403:17" pos:end="411:17">

                <for pos:start="403:17" pos:end="411:17">for <control pos:start="403:21" pos:end="403:84">(<init pos:start="403:22" pos:end="403:49"><expr pos:start="403:22" pos:end="403:41"><name pos:start="403:22" pos:end="403:27">in_rng</name> <operator pos:start="403:29" pos:end="403:29">=</operator> <name pos:start="403:31" pos:end="403:41"><name pos:start="403:31" pos:end="403:31">s</name><operator pos:start="403:32" pos:end="403:33">-&gt;</operator><name pos:start="403:34" pos:end="403:41">in_y_rng</name></name></expr><operator pos:start="403:42" pos:end="403:42">,</operator> <expr pos:start="403:44" pos:end="403:48"><name pos:start="403:44" pos:end="403:44">m</name> <operator pos:start="403:46" pos:end="403:46">=</operator> <literal type="number" pos:start="403:48" pos:end="403:48">0</literal></expr>;</init> <condition pos:start="403:51" pos:end="403:56"><expr pos:start="403:51" pos:end="403:55"><name pos:start="403:51" pos:end="403:51">m</name> <operator pos:start="403:53" pos:end="403:53">&lt;</operator> <literal type="number" pos:start="403:55" pos:end="403:55">3</literal></expr>;</condition> <incr pos:start="403:58" pos:end="403:83"><expr pos:start="403:58" pos:end="403:60"><name pos:start="403:58" pos:end="403:58">m</name><operator pos:start="403:59" pos:end="403:60">++</operator></expr><operator pos:start="403:61" pos:end="403:61">,</operator> <expr pos:start="403:63" pos:end="403:83"><name pos:start="403:63" pos:end="403:68">in_rng</name> <operator pos:start="403:70" pos:end="403:70">=</operator> <name pos:start="403:72" pos:end="403:83"><name pos:start="403:72" pos:end="403:72">s</name><operator pos:start="403:73" pos:end="403:74">-&gt;</operator><name pos:start="403:75" pos:end="403:83">in_uv_rng</name></name></expr></incr>)</control> <block pos:start="403:86" pos:end="411:17">{<block_content pos:start="405:21" pos:end="409:80">

                    <expr_stmt pos:start="405:21" pos:end="405:94"><expr pos:start="405:21" pos:end="405:93"><name pos:start="405:21" pos:end="405:46"><name pos:start="405:21" pos:end="405:21">s</name><operator pos:start="405:22" pos:end="405:23">-&gt;</operator><name pos:start="405:24" pos:end="405:37">yuv2rgb_coeffs</name><index pos:start="405:38" pos:end="405:40">[<expr pos:start="405:39" pos:end="405:39"><name pos:start="405:39" pos:end="405:39">n</name></expr>]</index><index pos:start="405:41" pos:end="405:43">[<expr pos:start="405:42" pos:end="405:42"><name pos:start="405:42" pos:end="405:42">m</name></expr>]</index><index pos:start="405:44" pos:end="405:46">[<expr pos:start="405:45" pos:end="405:45"><literal type="number" pos:start="405:45" pos:end="405:45">0</literal></expr>]</index></name> <operator pos:start="405:48" pos:end="405:48">=</operator> <call pos:start="405:50" pos:end="405:93"><name pos:start="405:50" pos:end="405:54">lrint</name><argument_list pos:start="405:55" pos:end="405:93">(<argument pos:start="405:56" pos:end="405:92"><expr pos:start="405:56" pos:end="405:92"><literal type="number" pos:start="405:56" pos:end="405:60">28672</literal> <operator pos:start="405:62" pos:end="405:62">*</operator> <name pos:start="405:64" pos:end="405:67">bits</name> <operator pos:start="405:69" pos:end="405:69">*</operator> <name pos:start="405:71" pos:end="405:83"><name pos:start="405:71" pos:end="405:77">yuv2rgb</name><index pos:start="405:78" pos:end="405:80">[<expr pos:start="405:79" pos:end="405:79"><name pos:start="405:79" pos:end="405:79">n</name></expr>]</index><index pos:start="405:81" pos:end="405:83">[<expr pos:start="405:82" pos:end="405:82"><name pos:start="405:82" pos:end="405:82">m</name></expr>]</index></name> <operator pos:start="405:85" pos:end="405:85">/</operator> <name pos:start="405:87" pos:end="405:92">in_rng</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="407:21" pos:end="409:80">for <control pos:start="407:25" pos:end="407:43">(<init pos:start="407:26" pos:end="407:31"><expr pos:start="407:26" pos:end="407:30"><name pos:start="407:26" pos:end="407:26">o</name> <operator pos:start="407:28" pos:end="407:28">=</operator> <literal type="number" pos:start="407:30" pos:end="407:30">1</literal></expr>;</init> <condition pos:start="407:33" pos:end="407:38"><expr pos:start="407:33" pos:end="407:37"><name pos:start="407:33" pos:end="407:33">o</name> <operator pos:start="407:35" pos:end="407:35">&lt;</operator> <literal type="number" pos:start="407:37" pos:end="407:37">8</literal></expr>;</condition> <incr pos:start="407:40" pos:end="407:42"><expr pos:start="407:40" pos:end="407:42"><name pos:start="407:40" pos:end="407:40">o</name><operator pos:start="407:41" pos:end="407:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="409:25" pos:end="409:80"><block_content pos:start="409:25" pos:end="409:80">

                        <expr_stmt pos:start="409:25" pos:end="409:80"><expr pos:start="409:25" pos:end="409:79"><name pos:start="409:25" pos:end="409:50"><name pos:start="409:25" pos:end="409:25">s</name><operator pos:start="409:26" pos:end="409:27">-&gt;</operator><name pos:start="409:28" pos:end="409:41">yuv2rgb_coeffs</name><index pos:start="409:42" pos:end="409:44">[<expr pos:start="409:43" pos:end="409:43"><name pos:start="409:43" pos:end="409:43">n</name></expr>]</index><index pos:start="409:45" pos:end="409:47">[<expr pos:start="409:46" pos:end="409:46"><name pos:start="409:46" pos:end="409:46">m</name></expr>]</index><index pos:start="409:48" pos:end="409:50">[<expr pos:start="409:49" pos:end="409:49"><name pos:start="409:49" pos:end="409:49">o</name></expr>]</index></name> <operator pos:start="409:52" pos:end="409:52">=</operator> <name pos:start="409:54" pos:end="409:79"><name pos:start="409:54" pos:end="409:54">s</name><operator pos:start="409:55" pos:end="409:56">-&gt;</operator><name pos:start="409:57" pos:end="409:70">yuv2rgb_coeffs</name><index pos:start="409:71" pos:end="409:73">[<expr pos:start="409:72" pos:end="409:72"><name pos:start="409:72" pos:end="409:72">n</name></expr>]</index><index pos:start="409:74" pos:end="409:76">[<expr pos:start="409:75" pos:end="409:75"><name pos:start="409:75" pos:end="409:75">m</name></expr>]</index><index pos:start="409:77" pos:end="409:79">[<expr pos:start="409:78" pos:end="409:78"><literal type="number" pos:start="409:78" pos:end="409:78">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <expr_stmt pos:start="415:13" pos:end="415:56"><expr pos:start="415:13" pos:end="415:55"><call pos:start="415:13" pos:end="415:55"><name pos:start="415:13" pos:end="415:22">av_assert2</name><argument_list pos:start="415:23" pos:end="415:55">(<argument pos:start="415:24" pos:end="415:54"><expr pos:start="415:24" pos:end="415:54"><name pos:start="415:24" pos:end="415:49"><name pos:start="415:24" pos:end="415:24">s</name><operator pos:start="415:25" pos:end="415:26">-&gt;</operator><name pos:start="415:27" pos:end="415:40">yuv2rgb_coeffs</name><index pos:start="415:41" pos:end="415:43">[<expr pos:start="415:42" pos:end="415:42"><literal type="number" pos:start="415:42" pos:end="415:42">0</literal></expr>]</index><index pos:start="415:44" pos:end="415:46">[<expr pos:start="415:45" pos:end="415:45"><literal type="number" pos:start="415:45" pos:end="415:45">1</literal></expr>]</index><index pos:start="415:47" pos:end="415:49">[<expr pos:start="415:48" pos:end="415:48"><literal type="number" pos:start="415:48" pos:end="415:48">0</literal></expr>]</index></name> <operator pos:start="415:51" pos:end="415:52">==</operator> <literal type="number" pos:start="415:54" pos:end="415:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:56"><expr pos:start="417:13" pos:end="417:55"><call pos:start="417:13" pos:end="417:55"><name pos:start="417:13" pos:end="417:22">av_assert2</name><argument_list pos:start="417:23" pos:end="417:55">(<argument pos:start="417:24" pos:end="417:54"><expr pos:start="417:24" pos:end="417:54"><name pos:start="417:24" pos:end="417:49"><name pos:start="417:24" pos:end="417:24">s</name><operator pos:start="417:25" pos:end="417:26">-&gt;</operator><name pos:start="417:27" pos:end="417:40">yuv2rgb_coeffs</name><index pos:start="417:41" pos:end="417:43">[<expr pos:start="417:42" pos:end="417:42"><literal type="number" pos:start="417:42" pos:end="417:42">2</literal></expr>]</index><index pos:start="417:44" pos:end="417:46">[<expr pos:start="417:45" pos:end="417:45"><literal type="number" pos:start="417:45" pos:end="417:45">2</literal></expr>]</index><index pos:start="417:47" pos:end="417:49">[<expr pos:start="417:48" pos:end="417:48"><literal type="number" pos:start="417:48" pos:end="417:48">0</literal></expr>]</index></name> <operator pos:start="417:51" pos:end="417:52">==</operator> <literal type="number" pos:start="417:54" pos:end="417:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:81"><expr pos:start="419:13" pos:end="419:80"><call pos:start="419:13" pos:end="419:80"><name pos:start="419:13" pos:end="419:22">av_assert2</name><argument_list pos:start="419:23" pos:end="419:80">(<argument pos:start="419:24" pos:end="419:79"><expr pos:start="419:24" pos:end="419:79"><name pos:start="419:24" pos:end="419:49"><name pos:start="419:24" pos:end="419:24">s</name><operator pos:start="419:25" pos:end="419:26">-&gt;</operator><name pos:start="419:27" pos:end="419:40">yuv2rgb_coeffs</name><index pos:start="419:41" pos:end="419:43">[<expr pos:start="419:42" pos:end="419:42"><literal type="number" pos:start="419:42" pos:end="419:42">0</literal></expr>]</index><index pos:start="419:44" pos:end="419:46">[<expr pos:start="419:45" pos:end="419:45"><literal type="number" pos:start="419:45" pos:end="419:45">0</literal></expr>]</index><index pos:start="419:47" pos:end="419:49">[<expr pos:start="419:48" pos:end="419:48"><literal type="number" pos:start="419:48" pos:end="419:48">0</literal></expr>]</index></name> <operator pos:start="419:51" pos:end="419:52">==</operator> <name pos:start="419:54" pos:end="419:79"><name pos:start="419:54" pos:end="419:54">s</name><operator pos:start="419:55" pos:end="419:56">-&gt;</operator><name pos:start="419:57" pos:end="419:70">yuv2rgb_coeffs</name><index pos:start="419:71" pos:end="419:73">[<expr pos:start="419:72" pos:end="419:72"><literal type="number" pos:start="419:72" pos:end="419:72">1</literal></expr>]</index><index pos:start="419:74" pos:end="419:76">[<expr pos:start="419:75" pos:end="419:75"><literal type="number" pos:start="419:75" pos:end="419:75">0</literal></expr>]</index><index pos:start="419:77" pos:end="419:79">[<expr pos:start="419:78" pos:end="419:78"><literal type="number" pos:start="419:78" pos:end="419:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:81"><expr pos:start="421:13" pos:end="421:80"><call pos:start="421:13" pos:end="421:80"><name pos:start="421:13" pos:end="421:22">av_assert2</name><argument_list pos:start="421:23" pos:end="421:80">(<argument pos:start="421:24" pos:end="421:79"><expr pos:start="421:24" pos:end="421:79"><name pos:start="421:24" pos:end="421:49"><name pos:start="421:24" pos:end="421:24">s</name><operator pos:start="421:25" pos:end="421:26">-&gt;</operator><name pos:start="421:27" pos:end="421:40">yuv2rgb_coeffs</name><index pos:start="421:41" pos:end="421:43">[<expr pos:start="421:42" pos:end="421:42"><literal type="number" pos:start="421:42" pos:end="421:42">0</literal></expr>]</index><index pos:start="421:44" pos:end="421:46">[<expr pos:start="421:45" pos:end="421:45"><literal type="number" pos:start="421:45" pos:end="421:45">0</literal></expr>]</index><index pos:start="421:47" pos:end="421:49">[<expr pos:start="421:48" pos:end="421:48"><literal type="number" pos:start="421:48" pos:end="421:48">0</literal></expr>]</index></name> <operator pos:start="421:51" pos:end="421:52">==</operator> <name pos:start="421:54" pos:end="421:79"><name pos:start="421:54" pos:end="421:54">s</name><operator pos:start="421:55" pos:end="421:56">-&gt;</operator><name pos:start="421:57" pos:end="421:70">yuv2rgb_coeffs</name><index pos:start="421:71" pos:end="421:73">[<expr pos:start="421:72" pos:end="421:72"><literal type="number" pos:start="421:72" pos:end="421:72">2</literal></expr>]</index><index pos:start="421:74" pos:end="421:76">[<expr pos:start="421:75" pos:end="421:75"><literal type="number" pos:start="421:75" pos:end="421:75">0</literal></expr>]</index><index pos:start="421:77" pos:end="421:79">[<expr pos:start="421:78" pos:end="421:78"><literal type="number" pos:start="421:78" pos:end="421:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="425:89"><expr pos:start="423:13" pos:end="425:88"><name pos:start="423:13" pos:end="423:22"><name pos:start="423:13" pos:end="423:13">s</name><operator pos:start="423:14" pos:end="423:15">-&gt;</operator><name pos:start="423:16" pos:end="423:22">yuv2rgb</name></name> <operator pos:start="423:24" pos:end="423:24">=</operator> <name pos:start="423:26" pos:end="425:88"><name pos:start="423:26" pos:end="423:26">s</name><operator pos:start="423:27" pos:end="423:28">-&gt;</operator><name pos:start="423:29" pos:end="423:31">dsp</name><operator pos:start="423:32" pos:end="423:32">.</operator><name pos:start="423:33" pos:end="423:39">yuv2rgb</name><index pos:start="423:40" pos:end="423:74">[<expr pos:start="423:41" pos:end="423:73"><operator pos:start="423:41" pos:end="423:41">(</operator><name pos:start="423:42" pos:end="423:57"><name pos:start="423:42" pos:end="423:48">in_desc</name><operator pos:start="423:49" pos:end="423:50">-&gt;</operator><name pos:start="423:51" pos:end="423:54">comp</name><index pos:start="423:55" pos:end="423:57">[<expr pos:start="423:56" pos:end="423:56"><literal type="number" pos:start="423:56" pos:end="423:56">0</literal></expr>]</index></name><operator pos:start="423:58" pos:end="423:58">.</operator><name pos:start="423:59" pos:end="423:63">depth</name> <operator pos:start="423:65" pos:end="423:65">-</operator> <literal type="number" pos:start="423:67" pos:end="423:67">8</literal><operator pos:start="423:68" pos:end="423:68">)</operator> <operator pos:start="423:70" pos:end="423:71">&gt;&gt;</operator> <literal type="number" pos:start="423:73" pos:end="423:73">1</literal></expr>]</index>

                                       <index pos:start="425:40" pos:end="425:88">[<expr pos:start="425:41" pos:end="425:87"><name pos:start="425:41" pos:end="425:62"><name pos:start="425:41" pos:end="425:47">in_desc</name><operator pos:start="425:48" pos:end="425:49">-&gt;</operator><name pos:start="425:50" pos:end="425:62">log2_chroma_h</name></name> <operator pos:start="425:64" pos:end="425:64">+</operator> <name pos:start="425:66" pos:end="425:87"><name pos:start="425:66" pos:end="425:72">in_desc</name><operator pos:start="425:73" pos:end="425:74">-&gt;</operator><name pos:start="425:75" pos:end="425:87">log2_chroma_w</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:21"><expr pos:start="427:13" pos:end="427:20"><name pos:start="427:13" pos:end="427:16">emms</name> <operator pos:start="427:18" pos:end="427:18">=</operator> <literal type="number" pos:start="427:20" pos:end="427:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="433:9" pos:end="491:9"><if pos:start="433:9" pos:end="491:9">if <condition pos:start="433:12" pos:end="433:25">(<expr pos:start="433:13" pos:end="433:24"><name pos:start="433:13" pos:end="433:24">redo_rgb2yuv</name></expr>)</condition> <block pos:start="433:27" pos:end="491:9">{<block_content pos:start="435:13" pos:end="489:21">

            <expr_stmt pos:start="435:13" pos:end="435:57"><expr pos:start="435:13" pos:end="435:56"><call pos:start="435:13" pos:end="435:29"><name pos:start="435:13" pos:end="435:18">double</name> <argument_list pos:start="435:20" pos:end="435:29">(<argument pos:start="435:21" pos:end="435:28"><expr pos:start="435:21" pos:end="435:28"><operator pos:start="435:21" pos:end="435:21">*</operator><name pos:start="435:22" pos:end="435:28">rgb2yuv</name></expr></argument>)</argument_list></call><index pos:start="435:30" pos:end="435:32">[<expr pos:start="435:31" pos:end="435:31"><literal type="number" pos:start="435:31" pos:end="435:31">3</literal></expr>]</index> <operator pos:start="435:34" pos:end="435:34">=</operator> <name pos:start="435:36" pos:end="435:56"><name pos:start="435:36" pos:end="435:36">s</name><operator pos:start="435:37" pos:end="435:38">-&gt;</operator><name pos:start="435:39" pos:end="435:56">rgb2yuv_dbl_coeffs</name></name></expr>;</expr_stmt>

            <decl_stmt pos:start="437:13" pos:end="437:35"><decl pos:start="437:13" pos:end="437:19"><type pos:start="437:13" pos:end="437:15"><name pos:start="437:13" pos:end="437:15">int</name></type> <name pos:start="437:17" pos:end="437:19">off</name></decl>, <decl pos:start="437:22" pos:end="437:28"><type ref="prev" pos:start="437:13" pos:end="437:15"/><name pos:start="437:22" pos:end="437:28">out_rng</name></decl>, <decl pos:start="437:31" pos:end="437:34"><type ref="prev" pos:start="437:13" pos:end="437:15"/><name pos:start="437:31" pos:end="437:34">bits</name></decl>;</decl_stmt>



            <expr_stmt pos:start="441:13" pos:end="443:69"><expr pos:start="441:13" pos:end="443:68"><name pos:start="441:13" pos:end="441:15">res</name> <operator pos:start="441:17" pos:end="441:17">=</operator> <call pos:start="441:19" pos:end="443:68"><name pos:start="441:19" pos:end="441:31">get_range_off</name><argument_list pos:start="441:32" pos:end="443:68">(<argument pos:start="441:33" pos:end="441:36"><expr pos:start="441:33" pos:end="441:36"><operator pos:start="441:33" pos:end="441:33">&amp;</operator><name pos:start="441:34" pos:end="441:36">off</name></expr></argument>, <argument pos:start="441:39" pos:end="441:51"><expr pos:start="441:39" pos:end="441:51"><operator pos:start="441:39" pos:end="441:39">&amp;</operator><name pos:start="441:40" pos:end="441:51"><name pos:start="441:40" pos:end="441:40">s</name><operator pos:start="441:41" pos:end="441:42">-&gt;</operator><name pos:start="441:43" pos:end="441:51">out_y_rng</name></name></expr></argument>, <argument pos:start="441:54" pos:end="441:67"><expr pos:start="441:54" pos:end="441:67"><operator pos:start="441:54" pos:end="441:54">&amp;</operator><name pos:start="441:55" pos:end="441:67"><name pos:start="441:55" pos:end="441:55">s</name><operator pos:start="441:56" pos:end="441:57">-&gt;</operator><name pos:start="441:58" pos:end="441:67">out_uv_rng</name></name></expr></argument>,

                                <argument pos:start="443:33" pos:end="443:42"><expr pos:start="443:33" pos:end="443:42"><name pos:start="443:33" pos:end="443:42"><name pos:start="443:33" pos:end="443:33">s</name><operator pos:start="443:34" pos:end="443:35">-&gt;</operator><name pos:start="443:36" pos:end="443:42">out_rng</name></name></expr></argument>, <argument pos:start="443:45" pos:end="443:67"><expr pos:start="443:45" pos:end="443:67"><name pos:start="443:45" pos:end="443:61"><name pos:start="443:45" pos:end="443:52">out_desc</name><operator pos:start="443:53" pos:end="443:54">-&gt;</operator><name pos:start="443:55" pos:end="443:58">comp</name><index pos:start="443:59" pos:end="443:61">[<expr pos:start="443:60" pos:end="443:60"><literal type="number" pos:start="443:60" pos:end="443:60">0</literal></expr>]</index></name><operator pos:start="443:62" pos:end="443:62">.</operator><name pos:start="443:63" pos:end="443:67">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="445:13" pos:end="455:13"><if pos:start="445:13" pos:end="455:13">if <condition pos:start="445:16" pos:end="445:24">(<expr pos:start="445:17" pos:end="445:23"><name pos:start="445:17" pos:end="445:19">res</name> <operator pos:start="445:21" pos:end="445:21">&lt;</operator> <literal type="number" pos:start="445:23" pos:end="445:23">0</literal></expr>)</condition> <block pos:start="445:26" pos:end="455:13">{<block_content pos:start="447:17" pos:end="453:27">

                <expr_stmt pos:start="447:17" pos:end="451:68"><expr pos:start="447:17" pos:end="451:67"><call pos:start="447:17" pos:end="451:67"><name pos:start="447:17" pos:end="447:22">av_log</name><argument_list pos:start="447:23" pos:end="451:67">(<argument pos:start="447:24" pos:end="447:26"><expr pos:start="447:24" pos:end="447:26"><name pos:start="447:24" pos:end="447:26">ctx</name></expr></argument>, <argument pos:start="447:29" pos:end="447:40"><expr pos:start="447:29" pos:end="447:40"><name pos:start="447:29" pos:end="447:40">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="449:24" pos:end="449:65"><expr pos:start="449:24" pos:end="449:65"><literal type="string" pos:start="449:24" pos:end="449:65">"Unsupported output color range %d (%s)\n"</literal></expr></argument>,

                       <argument pos:start="451:24" pos:end="451:33"><expr pos:start="451:24" pos:end="451:33"><name pos:start="451:24" pos:end="451:33"><name pos:start="451:24" pos:end="451:24">s</name><operator pos:start="451:25" pos:end="451:26">-&gt;</operator><name pos:start="451:27" pos:end="451:33">out_rng</name></name></expr></argument>, <argument pos:start="451:36" pos:end="451:66"><expr pos:start="451:36" pos:end="451:66"><call pos:start="451:36" pos:end="451:66"><name pos:start="451:36" pos:end="451:54">av_color_range_name</name><argument_list pos:start="451:55" pos:end="451:66">(<argument pos:start="451:56" pos:end="451:65"><expr pos:start="451:56" pos:end="451:65"><name pos:start="451:56" pos:end="451:65"><name pos:start="451:56" pos:end="451:56">s</name><operator pos:start="451:57" pos:end="451:58">-&gt;</operator><name pos:start="451:59" pos:end="451:65">out_rng</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="453:17" pos:end="453:27">return <expr pos:start="453:24" pos:end="453:26"><name pos:start="453:24" pos:end="453:26">res</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <for pos:start="457:13" pos:end="459:42">for <control pos:start="457:17" pos:end="457:35">(<init pos:start="457:18" pos:end="457:23"><expr pos:start="457:18" pos:end="457:22"><name pos:start="457:18" pos:end="457:18">n</name> <operator pos:start="457:20" pos:end="457:20">=</operator> <literal type="number" pos:start="457:22" pos:end="457:22">0</literal></expr>;</init> <condition pos:start="457:25" pos:end="457:30"><expr pos:start="457:25" pos:end="457:29"><name pos:start="457:25" pos:end="457:25">n</name> <operator pos:start="457:27" pos:end="457:27">&lt;</operator> <literal type="number" pos:start="457:29" pos:end="457:29">8</literal></expr>;</condition> <incr pos:start="457:32" pos:end="457:34"><expr pos:start="457:32" pos:end="457:34"><name pos:start="457:32" pos:end="457:32">n</name><operator pos:start="457:33" pos:end="457:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="459:17" pos:end="459:42"><block_content pos:start="459:17" pos:end="459:42">

                <expr_stmt pos:start="459:17" pos:end="459:42"><expr pos:start="459:17" pos:end="459:41"><name pos:start="459:17" pos:end="459:35"><name pos:start="459:17" pos:end="459:17">s</name><operator pos:start="459:18" pos:end="459:19">-&gt;</operator><name pos:start="459:20" pos:end="459:29">yuv_offset</name><index pos:start="459:30" pos:end="459:32">[<expr pos:start="459:31" pos:end="459:31"><literal type="number" pos:start="459:31" pos:end="459:31">1</literal></expr>]</index><index pos:start="459:33" pos:end="459:35">[<expr pos:start="459:34" pos:end="459:34"><name pos:start="459:34" pos:end="459:34">n</name></expr>]</index></name> <operator pos:start="459:37" pos:end="459:37">=</operator> <name pos:start="459:39" pos:end="459:41">off</name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="461:13" pos:end="461:57"><expr pos:start="461:13" pos:end="461:56"><call pos:start="461:13" pos:end="461:56"><name pos:start="461:13" pos:end="461:30">fill_rgb2yuv_table</name><argument_list pos:start="461:31" pos:end="461:56">(<argument pos:start="461:32" pos:end="461:46"><expr pos:start="461:32" pos:end="461:46"><name pos:start="461:32" pos:end="461:46"><name pos:start="461:32" pos:end="461:32">s</name><operator pos:start="461:33" pos:end="461:34">-&gt;</operator><name pos:start="461:35" pos:end="461:46">out_lumacoef</name></name></expr></argument>, <argument pos:start="461:49" pos:end="461:55"><expr pos:start="461:49" pos:end="461:55"><name pos:start="461:49" pos:end="461:55">rgb2yuv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="463:13" pos:end="463:55"><expr pos:start="463:13" pos:end="463:54"><name pos:start="463:13" pos:end="463:16">bits</name> <operator pos:start="463:18" pos:end="463:18">=</operator> <literal type="number" pos:start="463:20" pos:end="463:20">1</literal> <operator pos:start="463:22" pos:end="463:23">&lt;&lt;</operator> <operator pos:start="463:25" pos:end="463:25">(</operator><literal type="number" pos:start="463:26" pos:end="463:29">29</literal> <operator pos:start="463:29" pos:end="463:29">-</operator> <name pos:start="463:31" pos:end="463:47"><name pos:start="463:31" pos:end="463:38">out_desc</name><operator pos:start="463:39" pos:end="463:40">-&gt;</operator><name pos:start="463:41" pos:end="463:44">comp</name><index pos:start="463:45" pos:end="463:47">[<expr pos:start="463:46" pos:end="463:46"><literal type="number" pos:start="463:46" pos:end="463:46">0</literal></expr>]</index></name><operator pos:start="463:48" pos:end="463:48">.</operator><name pos:start="463:49" pos:end="463:53">depth</name><operator pos:start="463:54" pos:end="463:54">)</operator></expr>;</expr_stmt>

            <for pos:start="465:13" pos:end="477:13">for <control pos:start="465:17" pos:end="465:84">(<init pos:start="465:18" pos:end="465:47"><expr pos:start="465:18" pos:end="465:39"><name pos:start="465:18" pos:end="465:24">out_rng</name> <operator pos:start="465:26" pos:end="465:26">=</operator> <name pos:start="465:28" pos:end="465:39"><name pos:start="465:28" pos:end="465:28">s</name><operator pos:start="465:29" pos:end="465:30">-&gt;</operator><name pos:start="465:31" pos:end="465:39">out_y_rng</name></name></expr><operator pos:start="465:40" pos:end="465:40">,</operator> <expr pos:start="465:42" pos:end="465:46"><name pos:start="465:42" pos:end="465:42">n</name> <operator pos:start="465:44" pos:end="465:44">=</operator> <literal type="number" pos:start="465:46" pos:end="465:46">0</literal></expr>;</init> <condition pos:start="465:49" pos:end="465:54"><expr pos:start="465:49" pos:end="465:53"><name pos:start="465:49" pos:end="465:49">n</name> <operator pos:start="465:51" pos:end="465:51">&lt;</operator> <literal type="number" pos:start="465:53" pos:end="465:53">3</literal></expr>;</condition> <incr pos:start="465:56" pos:end="465:83"><expr pos:start="465:56" pos:end="465:58"><name pos:start="465:56" pos:end="465:56">n</name><operator pos:start="465:57" pos:end="465:58">++</operator></expr><operator pos:start="465:59" pos:end="465:59">,</operator> <expr pos:start="465:61" pos:end="465:83"><name pos:start="465:61" pos:end="465:67">out_rng</name> <operator pos:start="465:69" pos:end="465:69">=</operator> <name pos:start="465:71" pos:end="465:83"><name pos:start="465:71" pos:end="465:71">s</name><operator pos:start="465:72" pos:end="465:73">-&gt;</operator><name pos:start="465:74" pos:end="465:83">out_uv_rng</name></name></expr></incr>)</control> <block pos:start="465:86" pos:end="477:13">{<block_content pos:start="467:17" pos:end="475:17">

                <for pos:start="467:17" pos:end="475:17">for <control pos:start="467:21" pos:end="467:39">(<init pos:start="467:22" pos:end="467:27"><expr pos:start="467:22" pos:end="467:26"><name pos:start="467:22" pos:end="467:22">m</name> <operator pos:start="467:24" pos:end="467:24">=</operator> <literal type="number" pos:start="467:26" pos:end="467:26">0</literal></expr>;</init> <condition pos:start="467:29" pos:end="467:34"><expr pos:start="467:29" pos:end="467:33"><name pos:start="467:29" pos:end="467:29">m</name> <operator pos:start="467:31" pos:end="467:31">&lt;</operator> <literal type="number" pos:start="467:33" pos:end="467:33">3</literal></expr>;</condition> <incr pos:start="467:36" pos:end="467:38"><expr pos:start="467:36" pos:end="467:38"><name pos:start="467:36" pos:end="467:36">m</name><operator pos:start="467:37" pos:end="467:38">++</operator></expr></incr>)</control> <block pos:start="467:41" pos:end="475:17">{<block_content pos:start="469:21" pos:end="473:80">

                    <expr_stmt pos:start="469:21" pos:end="469:95"><expr pos:start="469:21" pos:end="469:94"><name pos:start="469:21" pos:end="469:46"><name pos:start="469:21" pos:end="469:21">s</name><operator pos:start="469:22" pos:end="469:23">-&gt;</operator><name pos:start="469:24" pos:end="469:37">rgb2yuv_coeffs</name><index pos:start="469:38" pos:end="469:40">[<expr pos:start="469:39" pos:end="469:39"><name pos:start="469:39" pos:end="469:39">n</name></expr>]</index><index pos:start="469:41" pos:end="469:43">[<expr pos:start="469:42" pos:end="469:42"><name pos:start="469:42" pos:end="469:42">m</name></expr>]</index><index pos:start="469:44" pos:end="469:46">[<expr pos:start="469:45" pos:end="469:45"><literal type="number" pos:start="469:45" pos:end="469:45">0</literal></expr>]</index></name> <operator pos:start="469:48" pos:end="469:48">=</operator> <call pos:start="469:50" pos:end="469:94"><name pos:start="469:50" pos:end="469:54">lrint</name><argument_list pos:start="469:55" pos:end="469:94">(<argument pos:start="469:56" pos:end="469:93"><expr pos:start="469:56" pos:end="469:93"><name pos:start="469:56" pos:end="469:59">bits</name> <operator pos:start="469:61" pos:end="469:61">*</operator> <name pos:start="469:63" pos:end="469:69">out_rng</name> <operator pos:start="469:71" pos:end="469:71">*</operator> <name pos:start="469:73" pos:end="469:85"><name pos:start="469:73" pos:end="469:79">rgb2yuv</name><index pos:start="469:80" pos:end="469:82">[<expr pos:start="469:81" pos:end="469:81"><name pos:start="469:81" pos:end="469:81">n</name></expr>]</index><index pos:start="469:83" pos:end="469:85">[<expr pos:start="469:84" pos:end="469:84"><name pos:start="469:84" pos:end="469:84">m</name></expr>]</index></name> <operator pos:start="469:87" pos:end="469:87">/</operator> <literal type="number" pos:start="469:89" pos:end="469:93">28672</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="471:21" pos:end="473:80">for <control pos:start="471:25" pos:end="471:43">(<init pos:start="471:26" pos:end="471:31"><expr pos:start="471:26" pos:end="471:30"><name pos:start="471:26" pos:end="471:26">o</name> <operator pos:start="471:28" pos:end="471:28">=</operator> <literal type="number" pos:start="471:30" pos:end="471:30">1</literal></expr>;</init> <condition pos:start="471:33" pos:end="471:38"><expr pos:start="471:33" pos:end="471:37"><name pos:start="471:33" pos:end="471:33">o</name> <operator pos:start="471:35" pos:end="471:35">&lt;</operator> <literal type="number" pos:start="471:37" pos:end="471:37">8</literal></expr>;</condition> <incr pos:start="471:40" pos:end="471:42"><expr pos:start="471:40" pos:end="471:42"><name pos:start="471:40" pos:end="471:40">o</name><operator pos:start="471:41" pos:end="471:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="473:25" pos:end="473:80"><block_content pos:start="473:25" pos:end="473:80">

                        <expr_stmt pos:start="473:25" pos:end="473:80"><expr pos:start="473:25" pos:end="473:79"><name pos:start="473:25" pos:end="473:50"><name pos:start="473:25" pos:end="473:25">s</name><operator pos:start="473:26" pos:end="473:27">-&gt;</operator><name pos:start="473:28" pos:end="473:41">rgb2yuv_coeffs</name><index pos:start="473:42" pos:end="473:44">[<expr pos:start="473:43" pos:end="473:43"><name pos:start="473:43" pos:end="473:43">n</name></expr>]</index><index pos:start="473:45" pos:end="473:47">[<expr pos:start="473:46" pos:end="473:46"><name pos:start="473:46" pos:end="473:46">m</name></expr>]</index><index pos:start="473:48" pos:end="473:50">[<expr pos:start="473:49" pos:end="473:49"><name pos:start="473:49" pos:end="473:49">o</name></expr>]</index></name> <operator pos:start="473:52" pos:end="473:52">=</operator> <name pos:start="473:54" pos:end="473:79"><name pos:start="473:54" pos:end="473:54">s</name><operator pos:start="473:55" pos:end="473:56">-&gt;</operator><name pos:start="473:57" pos:end="473:70">rgb2yuv_coeffs</name><index pos:start="473:71" pos:end="473:73">[<expr pos:start="473:72" pos:end="473:72"><name pos:start="473:72" pos:end="473:72">n</name></expr>]</index><index pos:start="473:74" pos:end="473:76">[<expr pos:start="473:75" pos:end="473:75"><name pos:start="473:75" pos:end="473:75">m</name></expr>]</index><index pos:start="473:77" pos:end="473:79">[<expr pos:start="473:78" pos:end="473:78"><literal type="number" pos:start="473:78" pos:end="473:78">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <expr_stmt pos:start="479:13" pos:end="479:81"><expr pos:start="479:13" pos:end="479:80"><call pos:start="479:13" pos:end="479:80"><name pos:start="479:13" pos:end="479:22">av_assert2</name><argument_list pos:start="479:23" pos:end="479:80">(<argument pos:start="479:24" pos:end="479:79"><expr pos:start="479:24" pos:end="479:79"><name pos:start="479:24" pos:end="479:49"><name pos:start="479:24" pos:end="479:24">s</name><operator pos:start="479:25" pos:end="479:26">-&gt;</operator><name pos:start="479:27" pos:end="479:40">rgb2yuv_coeffs</name><index pos:start="479:41" pos:end="479:43">[<expr pos:start="479:42" pos:end="479:42"><literal type="number" pos:start="479:42" pos:end="479:42">1</literal></expr>]</index><index pos:start="479:44" pos:end="479:46">[<expr pos:start="479:45" pos:end="479:45"><literal type="number" pos:start="479:45" pos:end="479:45">2</literal></expr>]</index><index pos:start="479:47" pos:end="479:49">[<expr pos:start="479:48" pos:end="479:48"><literal type="number" pos:start="479:48" pos:end="479:48">0</literal></expr>]</index></name> <operator pos:start="479:51" pos:end="479:52">==</operator> <name pos:start="479:54" pos:end="479:79"><name pos:start="479:54" pos:end="479:54">s</name><operator pos:start="479:55" pos:end="479:56">-&gt;</operator><name pos:start="479:57" pos:end="479:70">rgb2yuv_coeffs</name><index pos:start="479:71" pos:end="479:73">[<expr pos:start="479:72" pos:end="479:72"><literal type="number" pos:start="479:72" pos:end="479:72">2</literal></expr>]</index><index pos:start="479:74" pos:end="479:76">[<expr pos:start="479:75" pos:end="479:75"><literal type="number" pos:start="479:75" pos:end="479:75">0</literal></expr>]</index><index pos:start="479:77" pos:end="479:79">[<expr pos:start="479:78" pos:end="479:78"><literal type="number" pos:start="479:78" pos:end="479:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="481:13" pos:end="483:91"><expr pos:start="481:13" pos:end="483:90"><name pos:start="481:13" pos:end="481:22"><name pos:start="481:13" pos:end="481:13">s</name><operator pos:start="481:14" pos:end="481:15">-&gt;</operator><name pos:start="481:16" pos:end="481:22">rgb2yuv</name></name> <operator pos:start="481:24" pos:end="481:24">=</operator> <name pos:start="481:26" pos:end="483:90"><name pos:start="481:26" pos:end="481:26">s</name><operator pos:start="481:27" pos:end="481:28">-&gt;</operator><name pos:start="481:29" pos:end="481:31">dsp</name><operator pos:start="481:32" pos:end="481:32">.</operator><name pos:start="481:33" pos:end="481:39">rgb2yuv</name><index pos:start="481:40" pos:end="481:75">[<expr pos:start="481:41" pos:end="481:74"><operator pos:start="481:41" pos:end="481:41">(</operator><name pos:start="481:42" pos:end="481:58"><name pos:start="481:42" pos:end="481:49">out_desc</name><operator pos:start="481:50" pos:end="481:51">-&gt;</operator><name pos:start="481:52" pos:end="481:55">comp</name><index pos:start="481:56" pos:end="481:58">[<expr pos:start="481:57" pos:end="481:57"><literal type="number" pos:start="481:57" pos:end="481:57">0</literal></expr>]</index></name><operator pos:start="481:59" pos:end="481:59">.</operator><name pos:start="481:60" pos:end="481:64">depth</name> <operator pos:start="481:66" pos:end="481:66">-</operator> <literal type="number" pos:start="481:68" pos:end="481:68">8</literal><operator pos:start="481:69" pos:end="481:69">)</operator> <operator pos:start="481:71" pos:end="481:72">&gt;&gt;</operator> <literal type="number" pos:start="481:74" pos:end="481:74">1</literal></expr>]</index>

                                       <index pos:start="483:40" pos:end="483:90">[<expr pos:start="483:41" pos:end="483:89"><name pos:start="483:41" pos:end="483:63"><name pos:start="483:41" pos:end="483:48">out_desc</name><operator pos:start="483:49" pos:end="483:50">-&gt;</operator><name pos:start="483:51" pos:end="483:63">log2_chroma_h</name></name> <operator pos:start="483:65" pos:end="483:65">+</operator> <name pos:start="483:67" pos:end="483:89"><name pos:start="483:67" pos:end="483:74">out_desc</name><operator pos:start="483:75" pos:end="483:76">-&gt;</operator><name pos:start="483:77" pos:end="483:89">log2_chroma_w</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="485:13" pos:end="487:91"><expr pos:start="485:13" pos:end="487:90"><name pos:start="485:13" pos:end="485:26"><name pos:start="485:13" pos:end="485:13">s</name><operator pos:start="485:14" pos:end="485:15">-&gt;</operator><name pos:start="485:16" pos:end="485:26">rgb2yuv_fsb</name></name> <operator pos:start="485:28" pos:end="485:28">=</operator> <name pos:start="485:30" pos:end="487:90"><name pos:start="485:30" pos:end="485:30">s</name><operator pos:start="485:31" pos:end="485:32">-&gt;</operator><name pos:start="485:33" pos:end="485:35">dsp</name><operator pos:start="485:36" pos:end="485:36">.</operator><name pos:start="485:37" pos:end="485:47">rgb2yuv_fsb</name><index pos:start="485:48" pos:end="485:83">[<expr pos:start="485:49" pos:end="485:82"><operator pos:start="485:49" pos:end="485:49">(</operator><name pos:start="485:50" pos:end="485:66"><name pos:start="485:50" pos:end="485:57">out_desc</name><operator pos:start="485:58" pos:end="485:59">-&gt;</operator><name pos:start="485:60" pos:end="485:63">comp</name><index pos:start="485:64" pos:end="485:66">[<expr pos:start="485:65" pos:end="485:65"><literal type="number" pos:start="485:65" pos:end="485:65">0</literal></expr>]</index></name><operator pos:start="485:67" pos:end="485:67">.</operator><name pos:start="485:68" pos:end="485:72">depth</name> <operator pos:start="485:74" pos:end="485:74">-</operator> <literal type="number" pos:start="485:76" pos:end="485:76">8</literal><operator pos:start="485:77" pos:end="485:77">)</operator> <operator pos:start="485:79" pos:end="485:80">&gt;&gt;</operator> <literal type="number" pos:start="485:82" pos:end="485:82">1</literal></expr>]</index>

                                       <index pos:start="487:40" pos:end="487:90">[<expr pos:start="487:41" pos:end="487:89"><name pos:start="487:41" pos:end="487:63"><name pos:start="487:41" pos:end="487:48">out_desc</name><operator pos:start="487:49" pos:end="487:50">-&gt;</operator><name pos:start="487:51" pos:end="487:63">log2_chroma_h</name></name> <operator pos:start="487:65" pos:end="487:65">+</operator> <name pos:start="487:67" pos:end="487:89"><name pos:start="487:67" pos:end="487:74">out_desc</name><operator pos:start="487:75" pos:end="487:76">-&gt;</operator><name pos:start="487:77" pos:end="487:89">log2_chroma_w</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="489:13" pos:end="489:21"><expr pos:start="489:13" pos:end="489:20"><name pos:start="489:13" pos:end="489:16">emms</name> <operator pos:start="489:18" pos:end="489:18">=</operator> <literal type="number" pos:start="489:20" pos:end="489:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="495:9" pos:end="537:9"><if pos:start="495:9" pos:end="537:9">if <condition pos:start="495:12" pos:end="495:66">(<expr pos:start="495:13" pos:end="495:65"><name pos:start="495:13" pos:end="495:31"><name pos:start="495:13" pos:end="495:13">s</name><operator pos:start="495:14" pos:end="495:15">-&gt;</operator><name pos:start="495:16" pos:end="495:31">yuv2yuv_fastmode</name></name> <operator pos:start="495:33" pos:end="495:34">&amp;&amp;</operator> <operator pos:start="495:36" pos:end="495:36">(</operator><name pos:start="495:37" pos:end="495:48">redo_yuv2rgb</name> <operator pos:start="495:50" pos:end="495:51">||</operator> <name pos:start="495:53" pos:end="495:64">redo_rgb2yuv</name><operator pos:start="495:65" pos:end="495:65">)</operator></expr>)</condition> <block pos:start="495:68" pos:end="537:9">{<block_content pos:start="497:13" pos:end="535:89">

            <decl_stmt pos:start="497:13" pos:end="497:82"><decl pos:start="497:13" pos:end="497:47"><type pos:start="497:13" pos:end="497:15"><name pos:start="497:13" pos:end="497:15">int</name></type> <name pos:start="497:17" pos:end="497:22">idepth</name> <init pos:start="497:24" pos:end="497:47">= <expr pos:start="497:26" pos:end="497:47"><name pos:start="497:26" pos:end="497:41"><name pos:start="497:26" pos:end="497:32">in_desc</name><operator pos:start="497:33" pos:end="497:34">-&gt;</operator><name pos:start="497:35" pos:end="497:38">comp</name><index pos:start="497:39" pos:end="497:41">[<expr pos:start="497:40" pos:end="497:40"><literal type="number" pos:start="497:40" pos:end="497:40">0</literal></expr>]</index></name><operator pos:start="497:42" pos:end="497:42">.</operator><name pos:start="497:43" pos:end="497:47">depth</name></expr></init></decl>, <decl pos:start="497:50" pos:end="497:81"><type ref="prev" pos:start="497:13" pos:end="497:15"/><name pos:start="497:50" pos:end="497:55">odepth</name> <init pos:start="497:57" pos:end="497:81">= <expr pos:start="497:59" pos:end="497:81"><name pos:start="497:59" pos:end="497:75"><name pos:start="497:59" pos:end="497:66">out_desc</name><operator pos:start="497:67" pos:end="497:68">-&gt;</operator><name pos:start="497:69" pos:end="497:72">comp</name><index pos:start="497:73" pos:end="497:75">[<expr pos:start="497:74" pos:end="497:74"><literal type="number" pos:start="497:74" pos:end="497:74">0</literal></expr>]</index></name><operator pos:start="497:76" pos:end="497:76">.</operator><name pos:start="497:77" pos:end="497:81">depth</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="499:13" pos:end="499:57"><expr pos:start="499:13" pos:end="499:56"><call pos:start="499:13" pos:end="499:29"><name pos:start="499:13" pos:end="499:18">double</name> <argument_list pos:start="499:20" pos:end="499:29">(<argument pos:start="499:21" pos:end="499:28"><expr pos:start="499:21" pos:end="499:28"><operator pos:start="499:21" pos:end="499:21">*</operator><name pos:start="499:22" pos:end="499:28">rgb2yuv</name></expr></argument>)</argument_list></call><index pos:start="499:30" pos:end="499:32">[<expr pos:start="499:31" pos:end="499:31"><literal type="number" pos:start="499:31" pos:end="499:31">3</literal></expr>]</index> <operator pos:start="499:34" pos:end="499:34">=</operator> <name pos:start="499:36" pos:end="499:56"><name pos:start="499:36" pos:end="499:36">s</name><operator pos:start="499:37" pos:end="499:38">-&gt;</operator><name pos:start="499:39" pos:end="499:56">rgb2yuv_dbl_coeffs</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="501:13" pos:end="501:57"><expr pos:start="501:13" pos:end="501:56"><call pos:start="501:13" pos:end="501:29"><name pos:start="501:13" pos:end="501:18">double</name> <argument_list pos:start="501:20" pos:end="501:29">(<argument pos:start="501:21" pos:end="501:28"><expr pos:start="501:21" pos:end="501:28"><operator pos:start="501:21" pos:end="501:21">*</operator><name pos:start="501:22" pos:end="501:28">yuv2rgb</name></expr></argument>)</argument_list></call><index pos:start="501:30" pos:end="501:32">[<expr pos:start="501:31" pos:end="501:31"><literal type="number" pos:start="501:31" pos:end="501:31">3</literal></expr>]</index> <operator pos:start="501:34" pos:end="501:34">=</operator> <name pos:start="501:36" pos:end="501:56"><name pos:start="501:36" pos:end="501:36">s</name><operator pos:start="501:37" pos:end="501:38">-&gt;</operator><name pos:start="501:39" pos:end="501:56">yuv2rgb_dbl_coeffs</name></name></expr>;</expr_stmt>

            <decl_stmt pos:start="503:13" pos:end="503:33"><decl pos:start="503:13" pos:end="503:32"><type pos:start="503:13" pos:end="503:18"><name pos:start="503:13" pos:end="503:18">double</name></type> <name pos:start="503:20" pos:end="503:32"><name pos:start="503:20" pos:end="503:26">yuv2yuv</name><index pos:start="503:27" pos:end="503:29">[<expr pos:start="503:28" pos:end="503:28"><literal type="number" pos:start="503:28" pos:end="503:28">3</literal></expr>]</index><index pos:start="503:30" pos:end="503:32">[<expr pos:start="503:31" pos:end="503:31"><literal type="number" pos:start="503:31" pos:end="503:31">3</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="505:13" pos:end="505:32"><decl pos:start="505:13" pos:end="505:22"><type pos:start="505:13" pos:end="505:15"><name pos:start="505:13" pos:end="505:15">int</name></type> <name pos:start="505:17" pos:end="505:22">in_rng</name></decl>, <decl pos:start="505:25" pos:end="505:31"><type ref="prev" pos:start="505:13" pos:end="505:15"/><name pos:start="505:25" pos:end="505:31">out_rng</name></decl>;</decl_stmt>



            <expr_stmt pos:start="509:13" pos:end="509:46"><expr pos:start="509:13" pos:end="509:45"><call pos:start="509:13" pos:end="509:45"><name pos:start="509:13" pos:end="509:18">mul3x3</name><argument_list pos:start="509:19" pos:end="509:45">(<argument pos:start="509:20" pos:end="509:26"><expr pos:start="509:20" pos:end="509:26"><name pos:start="509:20" pos:end="509:26">yuv2yuv</name></expr></argument>, <argument pos:start="509:29" pos:end="509:35"><expr pos:start="509:29" pos:end="509:35"><name pos:start="509:29" pos:end="509:35">yuv2rgb</name></expr></argument>, <argument pos:start="509:38" pos:end="509:44"><expr pos:start="509:38" pos:end="509:44"><name pos:start="509:38" pos:end="509:44">rgb2yuv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="511:13" pos:end="527:13">for <control pos:start="511:17" pos:end="511:84">(<init pos:start="511:18" pos:end="511:47"><expr pos:start="511:18" pos:end="511:39"><name pos:start="511:18" pos:end="511:24">out_rng</name> <operator pos:start="511:26" pos:end="511:26">=</operator> <name pos:start="511:28" pos:end="511:39"><name pos:start="511:28" pos:end="511:28">s</name><operator pos:start="511:29" pos:end="511:30">-&gt;</operator><name pos:start="511:31" pos:end="511:39">out_y_rng</name></name></expr><operator pos:start="511:40" pos:end="511:40">,</operator> <expr pos:start="511:42" pos:end="511:46"><name pos:start="511:42" pos:end="511:42">m</name> <operator pos:start="511:44" pos:end="511:44">=</operator> <literal type="number" pos:start="511:46" pos:end="511:46">0</literal></expr>;</init> <condition pos:start="511:49" pos:end="511:54"><expr pos:start="511:49" pos:end="511:53"><name pos:start="511:49" pos:end="511:49">m</name> <operator pos:start="511:51" pos:end="511:51">&lt;</operator> <literal type="number" pos:start="511:53" pos:end="511:53">3</literal></expr>;</condition> <incr pos:start="511:56" pos:end="511:83"><expr pos:start="511:56" pos:end="511:58"><name pos:start="511:56" pos:end="511:56">m</name><operator pos:start="511:57" pos:end="511:58">++</operator></expr><operator pos:start="511:59" pos:end="511:59">,</operator> <expr pos:start="511:61" pos:end="511:83"><name pos:start="511:61" pos:end="511:67">out_rng</name> <operator pos:start="511:69" pos:end="511:69">=</operator> <name pos:start="511:71" pos:end="511:83"><name pos:start="511:71" pos:end="511:71">s</name><operator pos:start="511:72" pos:end="511:73">-&gt;</operator><name pos:start="511:74" pos:end="511:83">out_uv_rng</name></name></expr></incr>)</control> <block pos:start="511:86" pos:end="527:13">{<block_content pos:start="513:17" pos:end="525:17">

                <for pos:start="513:17" pos:end="525:17">for <control pos:start="513:21" pos:end="513:84">(<init pos:start="513:22" pos:end="513:49"><expr pos:start="513:22" pos:end="513:41"><name pos:start="513:22" pos:end="513:27">in_rng</name> <operator pos:start="513:29" pos:end="513:29">=</operator> <name pos:start="513:31" pos:end="513:41"><name pos:start="513:31" pos:end="513:31">s</name><operator pos:start="513:32" pos:end="513:33">-&gt;</operator><name pos:start="513:34" pos:end="513:41">in_y_rng</name></name></expr><operator pos:start="513:42" pos:end="513:42">,</operator> <expr pos:start="513:44" pos:end="513:48"><name pos:start="513:44" pos:end="513:44">n</name> <operator pos:start="513:46" pos:end="513:46">=</operator> <literal type="number" pos:start="513:48" pos:end="513:48">0</literal></expr>;</init> <condition pos:start="513:51" pos:end="513:56"><expr pos:start="513:51" pos:end="513:55"><name pos:start="513:51" pos:end="513:51">n</name> <operator pos:start="513:53" pos:end="513:53">&lt;</operator> <literal type="number" pos:start="513:55" pos:end="513:55">3</literal></expr>;</condition> <incr pos:start="513:58" pos:end="513:83"><expr pos:start="513:58" pos:end="513:60"><name pos:start="513:58" pos:end="513:58">n</name><operator pos:start="513:59" pos:end="513:60">++</operator></expr><operator pos:start="513:61" pos:end="513:61">,</operator> <expr pos:start="513:63" pos:end="513:83"><name pos:start="513:63" pos:end="513:68">in_rng</name> <operator pos:start="513:70" pos:end="513:70">=</operator> <name pos:start="513:72" pos:end="513:83"><name pos:start="513:72" pos:end="513:72">s</name><operator pos:start="513:73" pos:end="513:74">-&gt;</operator><name pos:start="513:75" pos:end="513:83">in_uv_rng</name></name></expr></incr>)</control> <block pos:start="513:86" pos:end="525:17">{<block_content pos:start="515:21" pos:end="523:80">

                    <expr_stmt pos:start="515:21" pos:end="519:56"><expr pos:start="515:21" pos:end="519:55"><name pos:start="515:21" pos:end="515:46"><name pos:start="515:21" pos:end="515:21">s</name><operator pos:start="515:22" pos:end="515:23">-&gt;</operator><name pos:start="515:24" pos:end="515:37">yuv2yuv_coeffs</name><index pos:start="515:38" pos:end="515:40">[<expr pos:start="515:39" pos:end="515:39"><name pos:start="515:39" pos:end="515:39">m</name></expr>]</index><index pos:start="515:41" pos:end="515:43">[<expr pos:start="515:42" pos:end="515:42"><name pos:start="515:42" pos:end="515:42">n</name></expr>]</index><index pos:start="515:44" pos:end="515:46">[<expr pos:start="515:45" pos:end="515:45"><literal type="number" pos:start="515:45" pos:end="515:45">0</literal></expr>]</index></name> <operator pos:start="515:48" pos:end="515:48">=</operator>

                        <call pos:start="517:25" pos:end="519:55"><name pos:start="517:25" pos:end="517:29">lrint</name><argument_list pos:start="517:30" pos:end="519:55">(<argument pos:start="517:31" pos:end="519:54"><expr pos:start="517:31" pos:end="519:54"><literal type="number" pos:start="517:31" pos:end="517:35">16384</literal> <operator pos:start="517:37" pos:end="517:37">*</operator> <name pos:start="517:39" pos:end="517:51"><name pos:start="517:39" pos:end="517:45">yuv2yuv</name><index pos:start="517:46" pos:end="517:48">[<expr pos:start="517:47" pos:end="517:47"><name pos:start="517:47" pos:end="517:47">m</name></expr>]</index><index pos:start="517:49" pos:end="517:51">[<expr pos:start="517:50" pos:end="517:50"><name pos:start="517:50" pos:end="517:50">n</name></expr>]</index></name> <operator pos:start="517:53" pos:end="517:53">*</operator> <name pos:start="517:55" pos:end="517:61">out_rng</name> <operator pos:start="517:63" pos:end="517:63">*</operator> <operator pos:start="517:65" pos:end="517:65">(</operator><literal type="number" pos:start="517:66" pos:end="517:66">1</literal> <operator pos:start="517:68" pos:end="517:69">&lt;&lt;</operator> <name pos:start="517:71" pos:end="517:76">idepth</name><operator pos:start="517:77" pos:end="517:77">)</operator> <operator pos:start="517:79" pos:end="517:79">/</operator>

                              <operator pos:start="519:31" pos:end="519:31">(</operator><name pos:start="519:32" pos:end="519:37">in_rng</name> <operator pos:start="519:39" pos:end="519:39">*</operator> <operator pos:start="519:41" pos:end="519:41">(</operator><literal type="number" pos:start="519:42" pos:end="519:42">1</literal> <operator pos:start="519:44" pos:end="519:45">&lt;&lt;</operator> <name pos:start="519:47" pos:end="519:52">odepth</name><operator pos:start="519:53" pos:end="519:53">)</operator><operator pos:start="519:54" pos:end="519:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="521:21" pos:end="523:80">for <control pos:start="521:25" pos:end="521:43">(<init pos:start="521:26" pos:end="521:31"><expr pos:start="521:26" pos:end="521:30"><name pos:start="521:26" pos:end="521:26">o</name> <operator pos:start="521:28" pos:end="521:28">=</operator> <literal type="number" pos:start="521:30" pos:end="521:30">1</literal></expr>;</init> <condition pos:start="521:33" pos:end="521:38"><expr pos:start="521:33" pos:end="521:37"><name pos:start="521:33" pos:end="521:33">o</name> <operator pos:start="521:35" pos:end="521:35">&lt;</operator> <literal type="number" pos:start="521:37" pos:end="521:37">8</literal></expr>;</condition> <incr pos:start="521:40" pos:end="521:42"><expr pos:start="521:40" pos:end="521:42"><name pos:start="521:40" pos:end="521:40">o</name><operator pos:start="521:41" pos:end="521:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="523:25" pos:end="523:80"><block_content pos:start="523:25" pos:end="523:80">

                        <expr_stmt pos:start="523:25" pos:end="523:80"><expr pos:start="523:25" pos:end="523:79"><name pos:start="523:25" pos:end="523:50"><name pos:start="523:25" pos:end="523:25">s</name><operator pos:start="523:26" pos:end="523:27">-&gt;</operator><name pos:start="523:28" pos:end="523:41">yuv2yuv_coeffs</name><index pos:start="523:42" pos:end="523:44">[<expr pos:start="523:43" pos:end="523:43"><name pos:start="523:43" pos:end="523:43">m</name></expr>]</index><index pos:start="523:45" pos:end="523:47">[<expr pos:start="523:46" pos:end="523:46"><name pos:start="523:46" pos:end="523:46">n</name></expr>]</index><index pos:start="523:48" pos:end="523:50">[<expr pos:start="523:49" pos:end="523:49"><name pos:start="523:49" pos:end="523:49">o</name></expr>]</index></name> <operator pos:start="523:52" pos:end="523:52">=</operator> <name pos:start="523:54" pos:end="523:79"><name pos:start="523:54" pos:end="523:54">s</name><operator pos:start="523:55" pos:end="523:56">-&gt;</operator><name pos:start="523:57" pos:end="523:70">yuv2yuv_coeffs</name><index pos:start="523:71" pos:end="523:73">[<expr pos:start="523:72" pos:end="523:72"><name pos:start="523:72" pos:end="523:72">m</name></expr>]</index><index pos:start="523:74" pos:end="523:76">[<expr pos:start="523:75" pos:end="523:75"><name pos:start="523:75" pos:end="523:75">n</name></expr>]</index><index pos:start="523:77" pos:end="523:79">[<expr pos:start="523:78" pos:end="523:78"><literal type="number" pos:start="523:78" pos:end="523:78">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <expr_stmt pos:start="529:13" pos:end="529:56"><expr pos:start="529:13" pos:end="529:55"><call pos:start="529:13" pos:end="529:55"><name pos:start="529:13" pos:end="529:22">av_assert2</name><argument_list pos:start="529:23" pos:end="529:55">(<argument pos:start="529:24" pos:end="529:54"><expr pos:start="529:24" pos:end="529:54"><name pos:start="529:24" pos:end="529:49"><name pos:start="529:24" pos:end="529:24">s</name><operator pos:start="529:25" pos:end="529:26">-&gt;</operator><name pos:start="529:27" pos:end="529:40">yuv2yuv_coeffs</name><index pos:start="529:41" pos:end="529:43">[<expr pos:start="529:42" pos:end="529:42"><literal type="number" pos:start="529:42" pos:end="529:42">1</literal></expr>]</index><index pos:start="529:44" pos:end="529:46">[<expr pos:start="529:45" pos:end="529:45"><literal type="number" pos:start="529:45" pos:end="529:45">0</literal></expr>]</index><index pos:start="529:47" pos:end="529:49">[<expr pos:start="529:48" pos:end="529:48"><literal type="number" pos:start="529:48" pos:end="529:48">0</literal></expr>]</index></name> <operator pos:start="529:51" pos:end="529:52">==</operator> <literal type="number" pos:start="529:54" pos:end="529:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="531:13" pos:end="531:56"><expr pos:start="531:13" pos:end="531:55"><call pos:start="531:13" pos:end="531:55"><name pos:start="531:13" pos:end="531:22">av_assert2</name><argument_list pos:start="531:23" pos:end="531:55">(<argument pos:start="531:24" pos:end="531:54"><expr pos:start="531:24" pos:end="531:54"><name pos:start="531:24" pos:end="531:49"><name pos:start="531:24" pos:end="531:24">s</name><operator pos:start="531:25" pos:end="531:26">-&gt;</operator><name pos:start="531:27" pos:end="531:40">yuv2yuv_coeffs</name><index pos:start="531:41" pos:end="531:43">[<expr pos:start="531:42" pos:end="531:42"><literal type="number" pos:start="531:42" pos:end="531:42">2</literal></expr>]</index><index pos:start="531:44" pos:end="531:46">[<expr pos:start="531:45" pos:end="531:45"><literal type="number" pos:start="531:45" pos:end="531:45">0</literal></expr>]</index><index pos:start="531:47" pos:end="531:49">[<expr pos:start="531:48" pos:end="531:48"><literal type="number" pos:start="531:48" pos:end="531:48">0</literal></expr>]</index></name> <operator pos:start="531:51" pos:end="531:52">==</operator> <literal type="number" pos:start="531:54" pos:end="531:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="533:13" pos:end="535:89"><expr pos:start="533:13" pos:end="535:88"><name pos:start="533:13" pos:end="533:22"><name pos:start="533:13" pos:end="533:13">s</name><operator pos:start="533:14" pos:end="533:15">-&gt;</operator><name pos:start="533:16" pos:end="533:22">yuv2yuv</name></name> <operator pos:start="533:24" pos:end="533:24">=</operator> <name pos:start="533:26" pos:end="535:88"><name pos:start="533:26" pos:end="533:26">s</name><operator pos:start="533:27" pos:end="533:28">-&gt;</operator><name pos:start="533:29" pos:end="533:31">dsp</name><operator pos:start="533:32" pos:end="533:32">.</operator><name pos:start="533:33" pos:end="533:39">yuv2yuv</name><index pos:start="533:40" pos:end="533:58">[<expr pos:start="533:41" pos:end="533:57"><operator pos:start="533:41" pos:end="533:41">(</operator><name pos:start="533:42" pos:end="533:47">idepth</name> <operator pos:start="533:49" pos:end="533:49">-</operator> <literal type="number" pos:start="533:51" pos:end="533:51">8</literal><operator pos:start="533:52" pos:end="533:52">)</operator> <operator pos:start="533:54" pos:end="533:55">&gt;&gt;</operator> <literal type="number" pos:start="533:57" pos:end="533:57">1</literal></expr>]</index><index pos:start="533:59" pos:end="533:77">[<expr pos:start="533:60" pos:end="533:76"><operator pos:start="533:60" pos:end="533:60">(</operator><name pos:start="533:61" pos:end="533:66">odepth</name> <operator pos:start="533:68" pos:end="533:68">-</operator> <literal type="number" pos:start="533:70" pos:end="533:70">8</literal><operator pos:start="533:71" pos:end="533:71">)</operator> <operator pos:start="533:73" pos:end="533:74">&gt;&gt;</operator> <literal type="number" pos:start="533:76" pos:end="533:76">1</literal></expr>]</index>

                                       <index pos:start="535:40" pos:end="535:88">[<expr pos:start="535:41" pos:end="535:87"><name pos:start="535:41" pos:end="535:62"><name pos:start="535:41" pos:end="535:47">in_desc</name><operator pos:start="535:48" pos:end="535:49">-&gt;</operator><name pos:start="535:50" pos:end="535:62">log2_chroma_h</name></name> <operator pos:start="535:64" pos:end="535:64">+</operator> <name pos:start="535:66" pos:end="535:87"><name pos:start="535:66" pos:end="535:72">in_desc</name><operator pos:start="535:73" pos:end="535:74">-&gt;</operator><name pos:start="535:75" pos:end="535:87">log2_chroma_w</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="543:5" pos:end="545:17"><if pos:start="543:5" pos:end="545:17">if <condition pos:start="543:8" pos:end="543:13">(<expr pos:start="543:9" pos:end="543:12"><name pos:start="543:9" pos:end="543:12">emms</name></expr>)</condition><block type="pseudo" pos:start="545:9" pos:end="545:17"><block_content pos:start="545:9" pos:end="545:17">

        <expr_stmt pos:start="545:9" pos:end="545:17"><expr pos:start="545:9" pos:end="545:16"><call pos:start="545:9" pos:end="545:16"><name pos:start="545:9" pos:end="545:14">emms_c</name><argument_list pos:start="545:15" pos:end="545:16">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="549:5" pos:end="549:13">return <expr pos:start="549:12" pos:end="549:12"><literal type="number" pos:start="549:12" pos:end="549:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
