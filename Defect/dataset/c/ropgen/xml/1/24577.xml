<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24577.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">arm_sysctl_init</name><parameter_list pos:start="1:21" pos:end="1:52">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:29">uint32_t</name></type> <name pos:start="1:31" pos:end="1:34">base</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><name pos:start="1:37" pos:end="1:44">uint32_t</name></type> <name pos:start="1:46" pos:end="1:51">sys_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="25:62">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">arm_sysctl_state</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">iomemtype</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:67"><expr pos:start="11:5" pos:end="11:66"><name pos:start="11:5" pos:end="11:5">s</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:25">arm_sysctl_state</name> <operator pos:start="11:27" pos:end="11:27">*</operator><operator pos:start="11:28" pos:end="11:28">)</operator><call pos:start="11:29" pos:end="11:66"><name pos:start="11:29" pos:end="11:40">qemu_mallocz</name><argument_list pos:start="11:41" pos:end="11:66">(<argument pos:start="11:42" pos:end="11:65"><expr pos:start="11:42" pos:end="11:65"><sizeof pos:start="11:42" pos:end="11:65">sizeof<argument_list pos:start="11:48" pos:end="11:65">(<argument pos:start="11:49" pos:end="11:64"><expr pos:start="11:49" pos:end="11:64"><name pos:start="11:49" pos:end="11:64">arm_sysctl_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:15"><if pos:start="13:5" pos:end="15:15">if <condition pos:start="13:8" pos:end="13:11">(<expr pos:start="13:9" pos:end="13:10"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:10">s</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:11">base</name></name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:18">base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:13">sys_id</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:22">sys_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="23:62"><expr pos:start="21:5" pos:end="23:61"><name pos:start="21:5" pos:end="21:13">iomemtype</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="23:61"><name pos:start="21:17" pos:end="21:38">cpu_register_io_memory</name><argument_list pos:start="21:39" pos:end="23:61">(<argument pos:start="21:40" pos:end="21:40"><expr pos:start="21:40" pos:end="21:40"><literal type="number" pos:start="21:40" pos:end="21:40">0</literal></expr></argument>, <argument pos:start="21:43" pos:end="21:59"><expr pos:start="21:43" pos:end="21:59"><name pos:start="21:43" pos:end="21:59">arm_sysctl_readfn</name></expr></argument>,

                                       <argument pos:start="23:40" pos:end="23:57"><expr pos:start="23:40" pos:end="23:57"><name pos:start="23:40" pos:end="23:57">arm_sysctl_writefn</name></expr></argument>, <argument pos:start="23:60" pos:end="23:60"><expr pos:start="23:60" pos:end="23:60"><name pos:start="23:60" pos:end="23:60">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:62"><expr pos:start="25:5" pos:end="25:61"><call pos:start="25:5" pos:end="25:61"><name pos:start="25:5" pos:end="25:32">cpu_register_physical_memory</name><argument_list pos:start="25:33" pos:end="25:61">(<argument pos:start="25:34" pos:end="25:37"><expr pos:start="25:34" pos:end="25:37"><name pos:start="25:34" pos:end="25:37">base</name></expr></argument>, <argument pos:start="25:40" pos:end="25:49"><expr pos:start="25:40" pos:end="25:49"><literal type="number" pos:start="25:40" pos:end="25:49">0x00000fff</literal></expr></argument>, <argument pos:start="25:52" pos:end="25:60"><expr pos:start="25:52" pos:end="25:60"><name pos:start="25:52" pos:end="25:60">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:28">/* ??? Save/restore.  */</comment>

</block_content>}</block></function>
</unit>
