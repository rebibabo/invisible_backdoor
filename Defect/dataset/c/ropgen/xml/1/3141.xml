<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3141.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">apic_deliver_pic_intr</name><parameter_list pos:start="1:27" pos:end="1:55">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:38">DeviceState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">dev</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:54"><decl pos:start="1:46" pos:end="1:54"><type pos:start="1:46" pos:end="1:54"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:54">level</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">APICCommonState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><call pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:36">APIC_COMMON</name><argument_list pos:start="5:37" pos:end="5:41">(<argument pos:start="5:38" pos:end="5:40"><expr pos:start="5:38" pos:end="5:40"><name pos:start="5:38" pos:end="5:40">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="39:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:14">(<expr pos:start="9:9" pos:end="9:13"><name pos:start="9:9" pos:end="9:13">level</name></expr>)</condition> <block pos:start="9:16" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:46">

        <expr_stmt pos:start="11:9" pos:end="11:46"><expr pos:start="11:9" pos:end="11:45"><call pos:start="11:9" pos:end="11:45"><name pos:start="11:9" pos:end="11:26">apic_local_deliver</name><argument_list pos:start="11:27" pos:end="11:45">(<argument pos:start="11:28" pos:end="11:28"><expr pos:start="11:28" pos:end="11:28"><name pos:start="11:28" pos:end="11:28">s</name></expr></argument>, <argument pos:start="11:31" pos:end="11:44"><expr pos:start="11:31" pos:end="11:44"><name pos:start="11:31" pos:end="11:44">APIC_LVT_LINT0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="39:5">else <block pos:start="13:12" pos:end="39:5">{<block_content pos:start="15:9" pos:end="37:9">

        <decl_stmt pos:start="15:9" pos:end="15:46"><decl pos:start="15:9" pos:end="15:45"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">uint32_t</name></type> <name pos:start="15:18" pos:end="15:20">lvt</name> <init pos:start="15:22" pos:end="15:45">= <expr pos:start="15:24" pos:end="15:45"><name pos:start="15:24" pos:end="15:45"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:29">lvt</name><index pos:start="15:30" pos:end="15:45">[<expr pos:start="15:31" pos:end="15:44"><name pos:start="15:31" pos:end="15:44">APIC_LVT_LINT0</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <switch pos:start="19:9" pos:end="37:9">switch <condition pos:start="19:16" pos:end="19:31">(<expr pos:start="19:17" pos:end="19:30"><operator pos:start="19:17" pos:end="19:17">(</operator><name pos:start="19:18" pos:end="19:20">lvt</name> <operator pos:start="19:22" pos:end="19:23">&gt;&gt;</operator> <literal type="number" pos:start="19:25" pos:end="19:25">8</literal><operator pos:start="19:26" pos:end="19:26">)</operator> <operator pos:start="19:28" pos:end="19:28">&amp;</operator> <literal type="number" pos:start="19:30" pos:end="19:30">7</literal></expr>)</condition> <block pos:start="19:33" pos:end="37:9">{<block_content pos:start="21:9" pos:end="35:18">

        <case pos:start="21:9" pos:end="21:27">case <expr pos:start="21:14" pos:end="21:26"><name pos:start="21:14" pos:end="21:26">APIC_DM_FIXED</name></expr>:</case>

            <if_stmt pos:start="23:13" pos:end="25:22"><if pos:start="23:13" pos:end="25:22">if <condition pos:start="23:16" pos:end="23:48">(<expr pos:start="23:17" pos:end="23:47"><operator pos:start="23:17" pos:end="23:17">!</operator><operator pos:start="23:18" pos:end="23:18">(</operator><name pos:start="23:19" pos:end="23:21">lvt</name> <operator pos:start="23:23" pos:end="23:23">&amp;</operator> <name pos:start="23:25" pos:end="23:46">APIC_LVT_LEVEL_TRIGGER</name><operator pos:start="23:47" pos:end="23:47">)</operator></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:22"><block_content pos:start="25:17" pos:end="25:22">

                <break pos:start="25:17" pos:end="25:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:47"><expr pos:start="27:13" pos:end="27:46"><call pos:start="27:13" pos:end="27:46"><name pos:start="27:13" pos:end="27:26">apic_reset_bit</name><argument_list pos:start="27:27" pos:end="27:46">(<argument pos:start="27:28" pos:end="27:33"><expr pos:start="27:28" pos:end="27:33"><name pos:start="27:28" pos:end="27:33"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:33">irr</name></name></expr></argument>, <argument pos:start="27:36" pos:end="27:45"><expr pos:start="27:36" pos:end="27:45"><name pos:start="27:36" pos:end="27:38">lvt</name> <operator pos:start="27:40" pos:end="27:40">&amp;</operator> <literal type="number" pos:start="27:42" pos:end="27:45">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="29:13" pos:end="29:30">/* fall through */</comment>

        <case pos:start="31:9" pos:end="31:28">case <expr pos:start="31:14" pos:end="31:27"><name pos:start="31:14" pos:end="31:27">APIC_DM_EXTINT</name></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:65"><expr pos:start="33:13" pos:end="33:64"><call pos:start="33:13" pos:end="33:64"><name pos:start="33:13" pos:end="33:31">cpu_reset_interrupt</name><argument_list pos:start="33:32" pos:end="33:64">(<argument pos:start="33:33" pos:end="33:43"><expr pos:start="33:33" pos:end="33:43"><call pos:start="33:33" pos:end="33:43"><name pos:start="33:33" pos:end="33:35">CPU</name><argument_list pos:start="33:36" pos:end="33:43">(<argument pos:start="33:37" pos:end="33:42"><expr pos:start="33:37" pos:end="33:42"><name pos:start="33:37" pos:end="33:42"><name pos:start="33:37" pos:end="33:37">s</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:42">cpu</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:46" pos:end="33:63"><expr pos:start="33:46" pos:end="33:63"><name pos:start="33:46" pos:end="33:63">CPU_INTERRUPT_HARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
