<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11466.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">virtio_balloon_receive_stats</name><parameter_list pos:start="1:41" pos:end="1:75">(<parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><name pos:start="1:42" pos:end="1:53">VirtIODevice</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">vdev</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:74"><decl pos:start="1:62" pos:end="1:74"><type pos:start="1:62" pos:end="1:74"><name pos:start="1:62" pos:end="1:70">VirtQueue</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:74">vq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:5">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">VirtIOBalloon</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:43">= <expr pos:start="5:24" pos:end="5:43"><call pos:start="5:24" pos:end="5:43"><name pos:start="5:24" pos:end="5:37">VIRTIO_BALLOON</name><argument_list pos:start="5:38" pos:end="5:43">(<argument pos:start="5:39" pos:end="5:42"><expr pos:start="5:39" pos:end="5:42"><name pos:start="5:39" pos:end="5:42">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">VirtQueueElement</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:26">elem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:21">VirtIOBalloonStat</name></type> <name pos:start="9:23" pos:end="9:26">stat</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:17">offset</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">qemu_timeval</name></type> <name pos:start="13:18" pos:end="13:19">tv</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:74"><expr pos:start="17:5" pos:end="17:73"><name pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:20">stats_vq_elem</name></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <name pos:start="17:24" pos:end="17:27">elem</name> <operator pos:start="17:29" pos:end="17:29">=</operator> <call pos:start="17:31" pos:end="17:73"><name pos:start="17:31" pos:end="17:43">virtqueue_pop</name><argument_list pos:start="17:44" pos:end="17:73">(<argument pos:start="17:45" pos:end="17:46"><expr pos:start="17:45" pos:end="17:46"><name pos:start="17:45" pos:end="17:46">vq</name></expr></argument>, <argument pos:start="17:49" pos:end="17:72"><expr pos:start="17:49" pos:end="17:72"><sizeof pos:start="17:49" pos:end="17:72">sizeof<argument_list pos:start="17:55" pos:end="17:72">(<argument pos:start="17:56" pos:end="17:71"><expr pos:start="17:56" pos:end="17:71"><name pos:start="17:56" pos:end="17:71">VirtQueueElement</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:14">(<expr pos:start="19:9" pos:end="19:13"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:13">elem</name></expr>)</condition> <block pos:start="19:16" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="33:7">/* Initialize the stats to get rid of any stale values.  This is only

     * needed to handle the case where a guest supports fewer stats than it

     * used to (ie. it has booted into an old kernel).

     */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:19"><expr pos:start="35:5" pos:end="35:18"><call pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:15">reset_stats</name><argument_list pos:start="35:16" pos:end="35:18">(<argument pos:start="35:17" pos:end="35:17"><expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="39:5" pos:end="55:5">while <condition pos:start="39:11" pos:end="41:27">(<expr pos:start="39:12" pos:end="41:26"><call pos:start="39:12" pos:end="39:79"><name pos:start="39:12" pos:end="39:21">iov_to_buf</name><argument_list pos:start="39:22" pos:end="39:79">(<argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:26">elem</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:34">out_sg</name></name></expr></argument>, <argument pos:start="39:37" pos:end="39:49"><expr pos:start="39:37" pos:end="39:49"><name pos:start="39:37" pos:end="39:49"><name pos:start="39:37" pos:end="39:40">elem</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:49">out_num</name></name></expr></argument>, <argument pos:start="39:52" pos:end="39:57"><expr pos:start="39:52" pos:end="39:57"><name pos:start="39:52" pos:end="39:57">offset</name></expr></argument>, <argument pos:start="39:60" pos:end="39:64"><expr pos:start="39:60" pos:end="39:64"><operator pos:start="39:60" pos:end="39:60">&amp;</operator><name pos:start="39:61" pos:end="39:64">stat</name></expr></argument>, <argument pos:start="39:67" pos:end="39:78"><expr pos:start="39:67" pos:end="39:78"><sizeof pos:start="39:67" pos:end="39:78">sizeof<argument_list pos:start="39:73" pos:end="39:78">(<argument pos:start="39:74" pos:end="39:77"><expr pos:start="39:74" pos:end="39:77"><name pos:start="39:74" pos:end="39:77">stat</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call>

           <operator pos:start="41:12" pos:end="41:13">==</operator> <sizeof pos:start="41:15" pos:end="41:26">sizeof<argument_list pos:start="41:21" pos:end="41:26">(<argument pos:start="41:22" pos:end="41:25"><expr pos:start="41:22" pos:end="41:25"><name pos:start="41:22" pos:end="41:25">stat</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="41:29" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:32">

        <decl_stmt pos:start="43:9" pos:end="43:54"><decl pos:start="43:9" pos:end="43:53"><type pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:16">uint16_t</name></type> <name pos:start="43:18" pos:end="43:20">tag</name> <init pos:start="43:22" pos:end="43:53">= <expr pos:start="43:24" pos:end="43:53"><call pos:start="43:24" pos:end="43:53"><name pos:start="43:24" pos:end="43:37">virtio_tswap16</name><argument_list pos:start="43:38" pos:end="43:53">(<argument pos:start="43:39" pos:end="43:42"><expr pos:start="43:39" pos:end="43:42"><name pos:start="43:39" pos:end="43:42">vdev</name></expr></argument>, <argument pos:start="43:45" pos:end="43:52"><expr pos:start="43:45" pos:end="43:52"><name pos:start="43:45" pos:end="43:52"><name pos:start="43:45" pos:end="43:48">stat</name><operator pos:start="43:49" pos:end="43:49">.</operator><name pos:start="43:50" pos:end="43:52">tag</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:54"><decl pos:start="45:9" pos:end="45:53"><type pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:16">uint64_t</name></type> <name pos:start="45:18" pos:end="45:20">val</name> <init pos:start="45:22" pos:end="45:53">= <expr pos:start="45:24" pos:end="45:53"><call pos:start="45:24" pos:end="45:53"><name pos:start="45:24" pos:end="45:37">virtio_tswap64</name><argument_list pos:start="45:38" pos:end="45:53">(<argument pos:start="45:39" pos:end="45:42"><expr pos:start="45:39" pos:end="45:42"><name pos:start="45:39" pos:end="45:42">vdev</name></expr></argument>, <argument pos:start="45:45" pos:end="45:52"><expr pos:start="45:45" pos:end="45:52"><name pos:start="45:45" pos:end="45:52"><name pos:start="45:45" pos:end="45:48">stat</name><operator pos:start="45:49" pos:end="45:49">.</operator><name pos:start="45:50" pos:end="45:52">val</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:14">offset</name> <operator pos:start="49:16" pos:end="49:17">+=</operator> <sizeof pos:start="49:19" pos:end="49:30">sizeof<argument_list pos:start="49:25" pos:end="49:30">(<argument pos:start="49:26" pos:end="49:29"><expr pos:start="49:26" pos:end="49:29"><name pos:start="49:26" pos:end="49:29">stat</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="53:32"><if pos:start="51:9" pos:end="53:32">if <condition pos:start="51:12" pos:end="51:38">(<expr pos:start="51:13" pos:end="51:37"><name pos:start="51:13" pos:end="51:15">tag</name> <operator pos:start="51:17" pos:end="51:17">&lt;</operator> <name pos:start="51:19" pos:end="51:37">VIRTIO_BALLOON_S_NR</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:32"><block_content pos:start="53:13" pos:end="53:32">

            <expr_stmt pos:start="53:13" pos:end="53:32"><expr pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:20">stats</name><index pos:start="53:21" pos:end="53:25">[<expr pos:start="53:22" pos:end="53:24"><name pos:start="53:22" pos:end="53:24">tag</name></expr>]</index></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:31">val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="57:5" pos:end="57:32"><expr pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:22">stats_vq_offset</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:31">offset</name></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:35">(<expr pos:start="61:9" pos:end="61:34"><call pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:25">qemu_gettimeofday</name><argument_list pos:start="61:26" pos:end="61:30">(<argument pos:start="61:27" pos:end="61:29"><expr pos:start="61:27" pos:end="61:29"><operator pos:start="61:27" pos:end="61:27">&amp;</operator><name pos:start="61:28" pos:end="61:29">tv</name></expr></argument>)</argument_list></call> <operator pos:start="61:32" pos:end="61:32">&lt;</operator> <literal type="number" pos:start="61:34" pos:end="61:34">0</literal></expr>)</condition> <block pos:start="61:37" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:17">

        <expr_stmt pos:start="63:9" pos:end="63:78"><expr pos:start="63:9" pos:end="63:77"><call pos:start="63:9" pos:end="63:77"><name pos:start="63:9" pos:end="63:15">fprintf</name><argument_list pos:start="63:16" pos:end="63:77">(<argument pos:start="63:17" pos:end="63:22"><expr pos:start="63:17" pos:end="63:22"><name pos:start="63:17" pos:end="63:22">stderr</name></expr></argument>, <argument pos:start="63:25" pos:end="63:66"><expr pos:start="63:25" pos:end="63:66"><literal type="string" pos:start="63:25" pos:end="63:66">"warning: %s: failed to get time of day\n"</literal></expr></argument>, <argument pos:start="63:69" pos:end="63:76"><expr pos:start="63:69" pos:end="63:76"><name pos:start="63:69" pos:end="63:76">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:17">goto <name pos:start="65:14" pos:end="65:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:37"><expr pos:start="71:5" pos:end="71:36"><name pos:start="71:5" pos:end="71:24"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:24">stats_last_update</name></name> <operator pos:start="71:26" pos:end="71:26">=</operator> <name pos:start="71:28" pos:end="71:36"><name pos:start="71:28" pos:end="71:29">tv</name><operator pos:start="71:30" pos:end="71:30">.</operator><name pos:start="71:31" pos:end="71:36">tv_sec</name></name></expr>;</expr_stmt>



<label pos:start="75:1" pos:end="75:4"><name pos:start="75:1" pos:end="75:3">out</name>:</label>

    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:33">(<expr pos:start="77:9" pos:end="77:32"><call pos:start="77:9" pos:end="77:32"><name pos:start="77:9" pos:end="77:29">balloon_stats_enabled</name><argument_list pos:start="77:30" pos:end="77:32">(<argument pos:start="77:31" pos:end="77:31"><expr pos:start="77:31" pos:end="77:31"><name pos:start="77:31" pos:end="77:31">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:35" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:62">

        <expr_stmt pos:start="79:9" pos:end="79:62"><expr pos:start="79:9" pos:end="79:61"><call pos:start="79:9" pos:end="79:61"><name pos:start="79:9" pos:end="79:34">balloon_stats_change_timer</name><argument_list pos:start="79:35" pos:end="79:61">(<argument pos:start="79:36" pos:end="79:36"><expr pos:start="79:36" pos:end="79:36"><name pos:start="79:36" pos:end="79:36">s</name></expr></argument>, <argument pos:start="79:39" pos:end="79:60"><expr pos:start="79:39" pos:end="79:60"><name pos:start="79:39" pos:end="79:60"><name pos:start="79:39" pos:end="79:39">s</name><operator pos:start="79:40" pos:end="79:41">-&gt;</operator><name pos:start="79:42" pos:end="79:60">stats_poll_interval</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
