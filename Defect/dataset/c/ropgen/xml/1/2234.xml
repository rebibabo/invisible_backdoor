<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2234.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">usb_host_handle_reset</name><parameter_list pos:start="1:34" pos:end="1:50">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:43">USBDevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">udev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:26">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">USBHostDevice</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:44">= <expr pos:start="5:24" pos:end="5:44"><call pos:start="5:24" pos:end="5:44"><name pos:start="5:24" pos:end="5:38">USB_HOST_DEVICE</name><argument_list pos:start="5:39" pos:end="5:44">(<argument pos:start="5:40" pos:end="5:43"><expr pos:start="5:40" pos:end="5:43"><name pos:start="5:40" pos:end="5:43">udev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:46"><expr pos:start="9:5" pos:end="9:45"><call pos:start="9:5" pos:end="9:45"><name pos:start="9:5" pos:end="9:24">trace_usb_host_reset</name><argument_list pos:start="9:25" pos:end="9:45">(<argument pos:start="9:26" pos:end="9:35"><expr pos:start="9:26" pos:end="9:35"><name pos:start="9:26" pos:end="9:35"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:35">bus_num</name></name></expr></argument>, <argument pos:start="9:38" pos:end="9:44"><expr pos:start="9:38" pos:end="9:44"><name pos:start="9:38" pos:end="9:44"><name pos:start="9:38" pos:end="9:38">s</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:44">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:33">(<expr pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:12">udev</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:27">configuration</name></name> <operator pos:start="13:29" pos:end="13:30">==</operator> <literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr>)</condition> <block pos:start="13:35" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><call pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:31">usb_host_release_interfaces</name><argument_list pos:start="19:32" pos:end="19:34">(<argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><name pos:start="19:33" pos:end="19:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><call pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:23">libusb_reset_device</name><argument_list pos:start="21:24" pos:end="21:30">(<argument pos:start="21:25" pos:end="21:29"><expr pos:start="21:25" pos:end="21:29"><name pos:start="21:25" pos:end="21:29"><name pos:start="21:25" pos:end="21:25">s</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:29">dh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:29">usb_host_claim_interfaces</name><argument_list pos:start="23:30" pos:end="23:35">(<argument pos:start="23:31" pos:end="23:31"><expr pos:start="23:31" pos:end="23:31"><name pos:start="23:31" pos:end="23:31">s</name></expr></argument>, <argument pos:start="23:34" pos:end="23:34"><expr pos:start="23:34" pos:end="23:34"><literal type="number" pos:start="23:34" pos:end="23:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:22">usb_host_ep_update</name><argument_list pos:start="25:23" pos:end="25:25">(<argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
