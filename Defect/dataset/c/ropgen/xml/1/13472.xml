<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13472.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_audio_mix_init</name><parameter_list pos:start="1:22" pos:end="1:50">(<parameter pos:start="1:23" pos:end="1:49"><decl pos:start="1:23" pos:end="1:49"><type pos:start="1:23" pos:end="1:46"><name pos:start="1:23" pos:end="1:44">AVAudioResampleContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">avr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="21:5"><if pos:start="9:5" pos:end="21:5">if <condition pos:start="9:8" pos:end="11:55">(<expr pos:start="9:9" pos:end="11:54"><name pos:start="9:9" pos:end="9:32"><name pos:start="9:9" pos:end="9:11">avr</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:32">internal_sample_fmt</name></name> <operator pos:start="9:34" pos:end="9:35">!=</operator> <name pos:start="9:37" pos:end="9:54">AV_SAMPLE_FMT_S16P</name> <operator pos:start="9:56" pos:end="9:57">&amp;&amp;</operator>

        <name pos:start="11:9" pos:end="11:32"><name pos:start="11:9" pos:end="11:11">avr</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:32">internal_sample_fmt</name></name> <operator pos:start="11:34" pos:end="11:35">!=</operator> <name pos:start="11:37" pos:end="11:54">AV_SAMPLE_FMT_FLTP</name></expr>)</condition> <block pos:start="11:57" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:31">

        <expr_stmt pos:start="13:9" pos:end="17:65"><expr pos:start="13:9" pos:end="17:64"><call pos:start="13:9" pos:end="17:64"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="17:64">(<argument pos:start="13:16" pos:end="13:18"><expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">avr</name></expr></argument>, <argument pos:start="13:21" pos:end="13:32"><expr pos:start="13:21" pos:end="13:32"><name pos:start="13:21" pos:end="13:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:35" pos:end="15:29"><expr pos:start="13:35" pos:end="15:29"><literal type="string" pos:start="13:35" pos:end="13:68">"Unsupported internal format for "</literal>

               <literal type="string" pos:start="15:16" pos:end="15:29">"mixing: %s\n"</literal></expr></argument>,

               <argument pos:start="17:16" pos:end="17:63"><expr pos:start="17:16" pos:end="17:63"><call pos:start="17:16" pos:end="17:63"><name pos:start="17:16" pos:end="17:37">av_get_sample_fmt_name</name><argument_list pos:start="17:38" pos:end="17:63">(<argument pos:start="17:39" pos:end="17:62"><expr pos:start="17:39" pos:end="17:62"><name pos:start="17:39" pos:end="17:62"><name pos:start="17:39" pos:end="17:41">avr</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:62">internal_sample_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:58">/* build matrix if the user did not already set one */</comment>

    <if_stmt pos:start="27:5" pos:end="109:5"><if pos:start="27:5" pos:end="109:5">if <condition pos:start="27:8" pos:end="27:25">(<expr pos:start="27:9" pos:end="27:24"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:24"><name pos:start="27:10" pos:end="27:12">avr</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:16">am</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:24">matrix</name></name></expr>)</condition> <block pos:start="27:27" pos:end="109:5">{<block_content pos:start="29:9" pos:end="107:28">

        <decl_stmt pos:start="29:9" pos:end="29:17"><decl pos:start="29:9" pos:end="29:13"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:13">i</name></decl>, <decl pos:start="29:16" pos:end="29:16"><type ref="prev" pos:start="29:9" pos:end="29:11"/><name pos:start="29:16" pos:end="29:16">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:33"><decl pos:start="31:9" pos:end="31:32"><type pos:start="31:9" pos:end="31:12"><name pos:start="31:9" pos:end="31:12">char</name></type> <name pos:start="31:14" pos:end="31:32"><name pos:start="31:14" pos:end="31:27">in_layout_name</name><index pos:start="31:28" pos:end="31:32">[<expr pos:start="31:29" pos:end="31:31"><literal type="number" pos:start="31:29" pos:end="31:31">128</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:34"><decl pos:start="33:9" pos:end="33:33"><type pos:start="33:9" pos:end="33:12"><name pos:start="33:9" pos:end="33:12">char</name></type> <name pos:start="33:14" pos:end="33:33"><name pos:start="33:14" pos:end="33:28">out_layout_name</name><index pos:start="33:29" pos:end="33:33">[<expr pos:start="33:30" pos:end="33:32"><literal type="number" pos:start="33:30" pos:end="33:32">128</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="37:61"><decl pos:start="35:9" pos:end="37:60"><type pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:14">double</name> <modifier pos:start="35:16" pos:end="35:16">*</modifier></type><name pos:start="35:17" pos:end="35:26">matrix_dbl</name> <init pos:start="35:28" pos:end="37:60">= <expr pos:start="35:30" pos:end="37:60"><call pos:start="35:30" pos:end="37:60"><name pos:start="35:30" pos:end="35:39">av_mallocz</name><argument_list pos:start="35:40" pos:end="37:60">(<argument pos:start="35:41" pos:end="37:59"><expr pos:start="35:41" pos:end="37:59"><name pos:start="35:41" pos:end="35:57"><name pos:start="35:41" pos:end="35:43">avr</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:57">out_channels</name></name> <operator pos:start="35:59" pos:end="35:59">*</operator> <name pos:start="35:61" pos:end="35:76"><name pos:start="35:61" pos:end="35:63">avr</name><operator pos:start="35:64" pos:end="35:65">-&gt;</operator><name pos:start="35:66" pos:end="35:76">in_channels</name></name> <operator pos:start="35:78" pos:end="35:78">*</operator>

                                        <sizeof pos:start="37:41" pos:end="37:59">sizeof<argument_list pos:start="37:47" pos:end="37:59">(<argument pos:start="37:48" pos:end="37:58"><expr pos:start="37:48" pos:end="37:58"><operator pos:start="37:48" pos:end="37:48">*</operator><name pos:start="37:49" pos:end="37:58">matrix_dbl</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="39:9" pos:end="41:35"><if pos:start="39:9" pos:end="41:35">if <condition pos:start="39:12" pos:end="39:24">(<expr pos:start="39:13" pos:end="39:23"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:23">matrix_dbl</name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:35"><block_content pos:start="41:13" pos:end="41:35">

            <return pos:start="41:13" pos:end="41:35">return <expr pos:start="41:20" pos:end="41:34"><call pos:start="41:20" pos:end="41:34"><name pos:start="41:20" pos:end="41:26">AVERROR</name><argument_list pos:start="41:27" pos:end="41:34">(<argument pos:start="41:28" pos:end="41:33"><expr pos:start="41:28" pos:end="41:33"><name pos:start="41:28" pos:end="41:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="45:9" pos:end="57:60"><expr pos:start="45:9" pos:end="57:59"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="57:59"><name pos:start="45:15" pos:end="45:37">avresample_build_matrix</name><argument_list pos:start="45:38" pos:end="57:59">(<argument pos:start="45:39" pos:end="45:60"><expr pos:start="45:39" pos:end="45:60"><name pos:start="45:39" pos:end="45:60"><name pos:start="45:39" pos:end="45:41">avr</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:60">in_channel_layout</name></name></expr></argument>,

                                      <argument pos:start="47:39" pos:end="47:61"><expr pos:start="47:39" pos:end="47:61"><name pos:start="47:39" pos:end="47:61"><name pos:start="47:39" pos:end="47:41">avr</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:61">out_channel_layout</name></name></expr></argument>,

                                      <argument pos:start="49:39" pos:end="49:59"><expr pos:start="49:39" pos:end="49:59"><name pos:start="49:39" pos:end="49:59"><name pos:start="49:39" pos:end="49:41">avr</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:59">center_mix_level</name></name></expr></argument>,

                                      <argument pos:start="51:39" pos:end="51:61"><expr pos:start="51:39" pos:end="51:61"><name pos:start="51:39" pos:end="51:61"><name pos:start="51:39" pos:end="51:41">avr</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:61">surround_mix_level</name></name></expr></argument>,

                                      <argument pos:start="53:39" pos:end="53:56"><expr pos:start="53:39" pos:end="53:56"><name pos:start="53:39" pos:end="53:56"><name pos:start="53:39" pos:end="53:41">avr</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:56">lfe_mix_level</name></name></expr></argument>, <argument pos:start="53:59" pos:end="53:59"><expr pos:start="53:59" pos:end="53:59"><literal type="number" pos:start="53:59" pos:end="53:59">1</literal></expr></argument>, <argument pos:start="53:62" pos:end="53:71"><expr pos:start="53:62" pos:end="53:71"><name pos:start="53:62" pos:end="53:71">matrix_dbl</name></expr></argument>,

                                      <argument pos:start="55:39" pos:end="55:54"><expr pos:start="55:39" pos:end="55:54"><name pos:start="55:39" pos:end="55:54"><name pos:start="55:39" pos:end="55:41">avr</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:54">in_channels</name></name></expr></argument>,

                                      <argument pos:start="57:39" pos:end="57:58"><expr pos:start="57:39" pos:end="57:58"><name pos:start="57:39" pos:end="57:58"><name pos:start="57:39" pos:end="57:41">avr</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:58">matrix_encoding</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:20">(<expr pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:15">ret</name> <operator pos:start="59:17" pos:end="59:17">&lt;</operator> <literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>)</condition> <block pos:start="59:22" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:23">

            <expr_stmt pos:start="61:13" pos:end="61:32"><expr pos:start="61:13" pos:end="61:31"><call pos:start="61:13" pos:end="61:31"><name pos:start="61:13" pos:end="61:19">av_free</name><argument_list pos:start="61:20" pos:end="61:31">(<argument pos:start="61:21" pos:end="61:30"><expr pos:start="61:21" pos:end="61:30"><name pos:start="61:21" pos:end="61:30">matrix_dbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="63:13" pos:end="63:23">return <expr pos:start="63:20" pos:end="63:22"><name pos:start="63:20" pos:end="63:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="69:9" pos:end="71:79"><expr pos:start="69:9" pos:end="71:78"><call pos:start="69:9" pos:end="71:78"><name pos:start="69:9" pos:end="69:36">av_get_channel_layout_string</name><argument_list pos:start="69:37" pos:end="71:78">(<argument pos:start="69:38" pos:end="69:51"><expr pos:start="69:38" pos:end="69:51"><name pos:start="69:38" pos:end="69:51">in_layout_name</name></expr></argument>, <argument pos:start="69:54" pos:end="69:75"><expr pos:start="69:54" pos:end="69:75"><sizeof pos:start="69:54" pos:end="69:75">sizeof<argument_list pos:start="69:60" pos:end="69:75">(<argument pos:start="69:61" pos:end="69:74"><expr pos:start="69:61" pos:end="69:74"><name pos:start="69:61" pos:end="69:74">in_layout_name</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                     <argument pos:start="71:38" pos:end="71:53"><expr pos:start="71:38" pos:end="71:53"><name pos:start="71:38" pos:end="71:53"><name pos:start="71:38" pos:end="71:40">avr</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:53">in_channels</name></name></expr></argument>, <argument pos:start="71:56" pos:end="71:77"><expr pos:start="71:56" pos:end="71:77"><name pos:start="71:56" pos:end="71:77"><name pos:start="71:56" pos:end="71:58">avr</name><operator pos:start="71:59" pos:end="71:60">-&gt;</operator><name pos:start="71:61" pos:end="71:77">in_channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="75:81"><expr pos:start="73:9" pos:end="75:80"><call pos:start="73:9" pos:end="75:80"><name pos:start="73:9" pos:end="73:36">av_get_channel_layout_string</name><argument_list pos:start="73:37" pos:end="75:80">(<argument pos:start="73:38" pos:end="73:52"><expr pos:start="73:38" pos:end="73:52"><name pos:start="73:38" pos:end="73:52">out_layout_name</name></expr></argument>, <argument pos:start="73:55" pos:end="73:77"><expr pos:start="73:55" pos:end="73:77"><sizeof pos:start="73:55" pos:end="73:77">sizeof<argument_list pos:start="73:61" pos:end="73:77">(<argument pos:start="73:62" pos:end="73:76"><expr pos:start="73:62" pos:end="73:76"><name pos:start="73:62" pos:end="73:76">out_layout_name</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                     <argument pos:start="75:38" pos:end="75:54"><expr pos:start="75:38" pos:end="75:54"><name pos:start="75:38" pos:end="75:54"><name pos:start="75:38" pos:end="75:40">avr</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:54">out_channels</name></name></expr></argument>, <argument pos:start="75:57" pos:end="75:79"><expr pos:start="75:57" pos:end="75:79"><name pos:start="75:57" pos:end="75:79"><name pos:start="75:57" pos:end="75:59">avr</name><operator pos:start="75:60" pos:end="75:61">-&gt;</operator><name pos:start="75:62" pos:end="75:79">out_channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="79:48"><expr pos:start="77:9" pos:end="79:47"><call pos:start="77:9" pos:end="79:47"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="79:47">(<argument pos:start="77:16" pos:end="77:18"><expr pos:start="77:16" pos:end="77:18"><name pos:start="77:16" pos:end="77:18">avr</name></expr></argument>, <argument pos:start="77:21" pos:end="77:32"><expr pos:start="77:21" pos:end="77:32"><name pos:start="77:21" pos:end="77:32">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="77:35" pos:end="77:57"><expr pos:start="77:35" pos:end="77:57"><literal type="string" pos:start="77:35" pos:end="77:57">"audio_mix: %s to %s\n"</literal></expr></argument>,

               <argument pos:start="79:16" pos:end="79:29"><expr pos:start="79:16" pos:end="79:29"><name pos:start="79:16" pos:end="79:29">in_layout_name</name></expr></argument>, <argument pos:start="79:32" pos:end="79:46"><expr pos:start="79:32" pos:end="79:46"><name pos:start="79:32" pos:end="79:46">out_layout_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="81:9" pos:end="93:9">for <control pos:start="81:13" pos:end="81:47">(<init pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:18"><name pos:start="81:14" pos:end="81:14">i</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>;</init> <condition pos:start="81:21" pos:end="81:42"><expr pos:start="81:21" pos:end="81:41"><name pos:start="81:21" pos:end="81:21">i</name> <operator pos:start="81:23" pos:end="81:23">&lt;</operator> <name pos:start="81:25" pos:end="81:41"><name pos:start="81:25" pos:end="81:27">avr</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:41">out_channels</name></name></expr>;</condition> <incr pos:start="81:44" pos:end="81:46"><expr pos:start="81:44" pos:end="81:46"><name pos:start="81:44" pos:end="81:44">i</name><operator pos:start="81:45" pos:end="81:46">++</operator></expr></incr>)</control> <block pos:start="81:49" pos:end="93:9">{<block_content pos:start="83:13" pos:end="91:44">

            <for pos:start="83:13" pos:end="89:13">for <control pos:start="83:17" pos:end="83:50">(<init pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:22"><name pos:start="83:18" pos:end="83:18">j</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <literal type="number" pos:start="83:22" pos:end="83:22">0</literal></expr>;</init> <condition pos:start="83:25" pos:end="83:45"><expr pos:start="83:25" pos:end="83:44"><name pos:start="83:25" pos:end="83:25">j</name> <operator pos:start="83:27" pos:end="83:27">&lt;</operator> <name pos:start="83:29" pos:end="83:44"><name pos:start="83:29" pos:end="83:31">avr</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:44">in_channels</name></name></expr>;</condition> <incr pos:start="83:47" pos:end="83:49"><expr pos:start="83:47" pos:end="83:49"><name pos:start="83:47" pos:end="83:47">j</name><operator pos:start="83:48" pos:end="83:49">++</operator></expr></incr>)</control> <block pos:start="83:52" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:61">

                <expr_stmt pos:start="85:17" pos:end="87:61"><expr pos:start="85:17" pos:end="87:60"><call pos:start="85:17" pos:end="87:60"><name pos:start="85:17" pos:end="85:22">av_log</name><argument_list pos:start="85:23" pos:end="87:60">(<argument pos:start="85:24" pos:end="85:26"><expr pos:start="85:24" pos:end="85:26"><name pos:start="85:24" pos:end="85:26">avr</name></expr></argument>, <argument pos:start="85:29" pos:end="85:40"><expr pos:start="85:29" pos:end="85:40"><name pos:start="85:29" pos:end="85:40">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="85:43" pos:end="85:52"><expr pos:start="85:43" pos:end="85:52"><literal type="string" pos:start="85:43" pos:end="85:52">"  %0.3f "</literal></expr></argument>,

                       <argument pos:start="87:24" pos:end="87:59"><expr pos:start="87:24" pos:end="87:59"><name pos:start="87:24" pos:end="87:59"><name pos:start="87:24" pos:end="87:33">matrix_dbl</name><index pos:start="87:34" pos:end="87:59">[<expr pos:start="87:35" pos:end="87:58"><name pos:start="87:35" pos:end="87:35">i</name> <operator pos:start="87:37" pos:end="87:37">*</operator> <name pos:start="87:39" pos:end="87:54"><name pos:start="87:39" pos:end="87:41">avr</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:54">in_channels</name></name> <operator pos:start="87:56" pos:end="87:56">+</operator> <name pos:start="87:58" pos:end="87:58">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="91:13" pos:end="91:44"><expr pos:start="91:13" pos:end="91:43"><call pos:start="91:13" pos:end="91:43"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="91:43">(<argument pos:start="91:20" pos:end="91:22"><expr pos:start="91:20" pos:end="91:22"><name pos:start="91:20" pos:end="91:22">avr</name></expr></argument>, <argument pos:start="91:25" pos:end="91:36"><expr pos:start="91:25" pos:end="91:36"><name pos:start="91:25" pos:end="91:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="91:39" pos:end="91:42"><expr pos:start="91:39" pos:end="91:42"><literal type="string" pos:start="91:39" pos:end="91:42">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="97:9" pos:end="97:71"><expr pos:start="97:9" pos:end="97:70"><name pos:start="97:9" pos:end="97:11">ret</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <call pos:start="97:15" pos:end="97:70"><name pos:start="97:15" pos:end="97:35">avresample_set_matrix</name><argument_list pos:start="97:36" pos:end="97:70">(<argument pos:start="97:37" pos:end="97:39"><expr pos:start="97:37" pos:end="97:39"><name pos:start="97:37" pos:end="97:39">avr</name></expr></argument>, <argument pos:start="97:42" pos:end="97:51"><expr pos:start="97:42" pos:end="97:51"><name pos:start="97:42" pos:end="97:51">matrix_dbl</name></expr></argument>, <argument pos:start="97:54" pos:end="97:69"><expr pos:start="97:54" pos:end="97:69"><name pos:start="97:54" pos:end="97:69"><name pos:start="97:54" pos:end="97:56">avr</name><operator pos:start="97:57" pos:end="97:58">-&gt;</operator><name pos:start="97:59" pos:end="97:69">in_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:20">(<expr pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:15">ret</name> <operator pos:start="99:17" pos:end="99:17">&lt;</operator> <literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>)</condition> <block pos:start="99:22" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:23">

            <expr_stmt pos:start="101:13" pos:end="101:32"><expr pos:start="101:13" pos:end="101:31"><call pos:start="101:13" pos:end="101:31"><name pos:start="101:13" pos:end="101:19">av_free</name><argument_list pos:start="101:20" pos:end="101:31">(<argument pos:start="101:21" pos:end="101:30"><expr pos:start="101:21" pos:end="101:30"><name pos:start="101:21" pos:end="101:30">matrix_dbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:23">return <expr pos:start="103:20" pos:end="103:22"><name pos:start="103:20" pos:end="103:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:28"><expr pos:start="107:9" pos:end="107:27"><call pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:15">av_free</name><argument_list pos:start="107:16" pos:end="107:27">(<argument pos:start="107:17" pos:end="107:26"><expr pos:start="107:17" pos:end="107:26"><name pos:start="107:17" pos:end="107:26">matrix_dbl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:53"><expr pos:start="113:5" pos:end="113:52"><name pos:start="113:5" pos:end="113:16"><name pos:start="113:5" pos:end="113:7">avr</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:11">am</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:16">fmt</name></name>          <operator pos:start="113:27" pos:end="113:27">=</operator> <name pos:start="113:29" pos:end="113:52"><name pos:start="113:29" pos:end="113:31">avr</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:52">internal_sample_fmt</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:48"><expr pos:start="115:5" pos:end="115:47"><name pos:start="115:5" pos:end="115:23"><name pos:start="115:5" pos:end="115:7">avr</name><operator pos:start="115:8" pos:end="115:9">-&gt;</operator><name pos:start="115:10" pos:end="115:11">am</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:23">coeff_type</name></name>   <operator pos:start="115:27" pos:end="115:27">=</operator> <name pos:start="115:29" pos:end="115:47"><name pos:start="115:29" pos:end="115:31">avr</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:47">mix_coeff_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:51"><expr pos:start="117:5" pos:end="117:50"><name pos:start="117:5" pos:end="117:22"><name pos:start="117:5" pos:end="117:7">avr</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:11">am</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:22">in_layout</name></name>    <operator pos:start="117:27" pos:end="117:27">=</operator> <name pos:start="117:29" pos:end="117:50"><name pos:start="117:29" pos:end="117:31">avr</name><operator pos:start="117:32" pos:end="117:33">-&gt;</operator><name pos:start="117:34" pos:end="117:50">in_channel_layout</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:52"><expr pos:start="119:5" pos:end="119:51"><name pos:start="119:5" pos:end="119:23"><name pos:start="119:5" pos:end="119:7">avr</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:11">am</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:23">out_layout</name></name>   <operator pos:start="119:27" pos:end="119:27">=</operator> <name pos:start="119:29" pos:end="119:51"><name pos:start="119:29" pos:end="119:31">avr</name><operator pos:start="119:32" pos:end="119:33">-&gt;</operator><name pos:start="119:34" pos:end="119:51">out_channel_layout</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:45"><expr pos:start="121:5" pos:end="121:44"><name pos:start="121:5" pos:end="121:24"><name pos:start="121:5" pos:end="121:7">avr</name><operator pos:start="121:8" pos:end="121:9">-&gt;</operator><name pos:start="121:10" pos:end="121:11">am</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:24">in_channels</name></name>  <operator pos:start="121:27" pos:end="121:27">=</operator> <name pos:start="121:29" pos:end="121:44"><name pos:start="121:29" pos:end="121:31">avr</name><operator pos:start="121:32" pos:end="121:33">-&gt;</operator><name pos:start="121:34" pos:end="121:44">in_channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:46"><expr pos:start="123:5" pos:end="123:45"><name pos:start="123:5" pos:end="123:25"><name pos:start="123:5" pos:end="123:7">avr</name><operator pos:start="123:8" pos:end="123:9">-&gt;</operator><name pos:start="123:10" pos:end="123:11">am</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:25">out_channels</name></name> <operator pos:start="123:27" pos:end="123:27">=</operator> <name pos:start="123:29" pos:end="123:45"><name pos:start="123:29" pos:end="123:31">avr</name><operator pos:start="123:32" pos:end="123:33">-&gt;</operator><name pos:start="123:34" pos:end="123:45">out_channels</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:37"><expr pos:start="127:5" pos:end="127:36"><name pos:start="127:5" pos:end="127:7">ret</name> <operator pos:start="127:9" pos:end="127:9">=</operator> <call pos:start="127:11" pos:end="127:36"><name pos:start="127:11" pos:end="127:27">mix_function_init</name><argument_list pos:start="127:28" pos:end="127:36">(<argument pos:start="127:29" pos:end="127:35"><expr pos:start="127:29" pos:end="127:35"><name pos:start="127:29" pos:end="127:35"><name pos:start="127:29" pos:end="127:31">avr</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:35">am</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="131:19"><if pos:start="129:5" pos:end="131:19">if <condition pos:start="129:8" pos:end="129:16">(<expr pos:start="129:9" pos:end="129:15"><name pos:start="129:9" pos:end="129:11">ret</name> <operator pos:start="129:13" pos:end="129:13">&lt;</operator> <literal type="number" pos:start="129:15" pos:end="129:15">0</literal></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:19"><block_content pos:start="131:9" pos:end="131:19">

        <return pos:start="131:9" pos:end="131:19">return <expr pos:start="131:16" pos:end="131:18"><name pos:start="131:16" pos:end="131:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
