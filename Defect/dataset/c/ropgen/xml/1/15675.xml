<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15675.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">do_compress_ram_page</name><parameter_list pos:start="1:32" pos:end="3:50">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:40">QEMUFile</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">f</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><name pos:start="1:46" pos:end="1:53">RAMBlock</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">block</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:49"><decl pos:start="3:33" pos:end="3:49"><type pos:start="3:33" pos:end="3:49"><name pos:start="3:33" pos:end="3:42">ram_addr_t</name></type> <name pos:start="3:44" pos:end="3:49">offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:22">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">RAMState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">rs</name> <init pos:start="7:18" pos:end="7:29">= <expr pos:start="7:20" pos:end="7:29"><operator pos:start="7:20" pos:end="7:20">&amp;</operator><name pos:start="7:21" pos:end="7:29">ram_state</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">bytes_sent</name></decl>, <decl pos:start="9:21" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:24">blen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:59"><decl pos:start="11:5" pos:end="11:58"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">p</name> <init pos:start="11:16" pos:end="11:58">= <expr pos:start="11:18" pos:end="11:58"><name pos:start="11:18" pos:end="11:28"><name pos:start="11:18" pos:end="11:22">block</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:28">host</name></name> <operator pos:start="11:30" pos:end="11:30">+</operator> <operator pos:start="11:32" pos:end="11:32">(</operator><name pos:start="11:33" pos:end="11:38">offset</name> <operator pos:start="11:40" pos:end="11:40">&amp;</operator> <name pos:start="11:42" pos:end="11:57">TARGET_PAGE_MASK</name><operator pos:start="11:58" pos:end="11:58">)</operator></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:63"><expr pos:start="15:5" pos:end="17:62"><name pos:start="15:5" pos:end="15:14">bytes_sent</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="17:62"><name pos:start="15:18" pos:end="15:33">save_page_header</name><argument_list pos:start="15:34" pos:end="17:62">(<argument pos:start="15:35" pos:end="15:36"><expr pos:start="15:35" pos:end="15:36"><name pos:start="15:35" pos:end="15:36">rs</name></expr></argument>, <argument pos:start="15:39" pos:end="15:43"><expr pos:start="15:39" pos:end="15:43"><name pos:start="15:39" pos:end="15:43">block</name></expr></argument>, <argument pos:start="15:46" pos:end="17:61"><expr pos:start="15:46" pos:end="17:61"><name pos:start="15:46" pos:end="15:51">offset</name> <operator pos:start="15:53" pos:end="15:53">|</operator>

                                  <name pos:start="17:35" pos:end="17:61">RAM_SAVE_FLAG_COMPRESS_PAGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="21:63"><expr pos:start="19:5" pos:end="21:62"><name pos:start="19:5" pos:end="19:8">blen</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="21:62"><name pos:start="19:12" pos:end="19:36">qemu_put_compression_data</name><argument_list pos:start="19:37" pos:end="21:62">(<argument pos:start="19:38" pos:end="19:38"><expr pos:start="19:38" pos:end="19:38"><name pos:start="19:38" pos:end="19:38">f</name></expr></argument>, <argument pos:start="19:41" pos:end="19:41"><expr pos:start="19:41" pos:end="19:41"><name pos:start="19:41" pos:end="19:41">p</name></expr></argument>, <argument pos:start="19:44" pos:end="19:59"><expr pos:start="19:44" pos:end="19:59"><name pos:start="19:44" pos:end="19:59">TARGET_PAGE_SIZE</name></expr></argument>,

                                     <argument pos:start="21:38" pos:end="21:61"><expr pos:start="21:38" pos:end="21:61"><call pos:start="21:38" pos:end="21:61"><name pos:start="21:38" pos:end="21:59">migrate_compress_level</name><argument_list pos:start="21:60" pos:end="21:61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="37:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:17">(<expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:12">blen</name> <operator pos:start="23:14" pos:end="23:14">&lt;</operator> <literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>)</condition> <block pos:start="23:19" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:48">

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:18">bytes_sent</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:70"><expr pos:start="27:9" pos:end="27:69"><call pos:start="27:9" pos:end="27:69"><name pos:start="27:9" pos:end="27:27">qemu_file_set_error</name><argument_list pos:start="27:28" pos:end="27:69">(<argument pos:start="27:29" pos:end="27:62"><expr pos:start="27:29" pos:end="27:62"><call pos:start="27:29" pos:end="27:49"><name pos:start="27:29" pos:end="27:47">migrate_get_current</name><argument_list pos:start="27:48" pos:end="27:49">()</argument_list></call><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:62">to_dst_file</name></expr></argument>, <argument pos:start="27:65" pos:end="27:68"><expr pos:start="27:65" pos:end="27:68"><name pos:start="27:65" pos:end="27:68">blen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:48"><expr pos:start="29:9" pos:end="29:47"><call pos:start="29:9" pos:end="29:47"><name pos:start="29:9" pos:end="29:20">error_report</name><argument_list pos:start="29:21" pos:end="29:47">(<argument pos:start="29:22" pos:end="29:46"><expr pos:start="29:22" pos:end="29:46"><literal type="string" pos:start="29:22" pos:end="29:46">"compressed data failed!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="37:5">else <block pos:start="31:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:70">

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:18">bytes_sent</name> <operator pos:start="33:20" pos:end="33:21">+=</operator> <name pos:start="33:23" pos:end="33:26">blen</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:70"><expr pos:start="35:9" pos:end="35:69"><call pos:start="35:9" pos:end="35:69"><name pos:start="35:9" pos:end="35:25">ram_release_pages</name><argument_list pos:start="35:26" pos:end="35:69">(<argument pos:start="35:27" pos:end="35:38"><expr pos:start="35:27" pos:end="35:38"><name pos:start="35:27" pos:end="35:38"><name pos:start="35:27" pos:end="35:31">block</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:38">idstr</name></name></expr></argument>, <argument pos:start="35:41" pos:end="35:65"><expr pos:start="35:41" pos:end="35:65"><name pos:start="35:41" pos:end="35:46">offset</name> <operator pos:start="35:48" pos:end="35:48">&amp;</operator> <name pos:start="35:50" pos:end="35:65">TARGET_PAGE_MASK</name></expr></argument>, <argument pos:start="35:68" pos:end="35:68"><expr pos:start="35:68" pos:end="35:68"><literal type="number" pos:start="35:68" pos:end="35:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="41:5" pos:end="41:22">return <expr pos:start="41:12" pos:end="41:21"><name pos:start="41:12" pos:end="41:21">bytes_sent</name></expr>;</return>

</block_content>}</block></function>
</unit>
