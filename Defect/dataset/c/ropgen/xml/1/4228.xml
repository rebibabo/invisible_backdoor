<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4228.c" pos:tabs="8"><function pos:start="1:1" pos:end="397:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_slice</name><parameter_list pos:start="1:24" pos:end="1:42">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:38">MpegEncContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="397:1">{<block_content pos:start="5:5" pos:end="395:31">

    <decl_stmt pos:start="5:5" pos:end="7:61"><decl pos:start="5:5" pos:end="7:60"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:23">part_mask</name> <init pos:start="5:25" pos:end="7:60">= <expr pos:start="5:27" pos:end="7:60"><ternary pos:start="5:27" pos:end="7:60"><condition pos:start="5:27" pos:end="7:27"><expr pos:start="5:27" pos:end="5:46"><name pos:start="5:27" pos:end="5:46"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:46">partitioned_frame</name></name></expr>

                          ?</condition><then pos:start="7:29" pos:end="7:53"> <expr pos:start="7:29" pos:end="7:53"><operator pos:start="7:29" pos:end="7:29">(</operator><name pos:start="7:30" pos:end="7:38">ER_AC_END</name> <operator pos:start="7:40" pos:end="7:40">|</operator> <name pos:start="7:42" pos:end="7:52">ER_AC_ERROR</name><operator pos:start="7:53" pos:end="7:53">)</operator></expr> </then><else pos:start="7:55" pos:end="7:60">: <expr pos:start="7:57" pos:end="7:60"><literal type="number" pos:start="7:57" pos:end="7:60">0x7F</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:21">mb_size</name> <init pos:start="9:23" pos:end="9:26">= <expr pos:start="9:25" pos:end="9:26"><literal type="number" pos:start="9:25" pos:end="9:26">16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:21">last_resync_gb</name></name>   <operator pos:start="15:25" pos:end="15:25">=</operator> <name pos:start="15:27" pos:end="15:31"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:31">gb</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:23">first_slice_line</name></name> <operator pos:start="17:25" pos:end="17:25">=</operator> <literal type="number" pos:start="17:27" pos:end="17:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:18">resync_mb_x</name></name>      <operator pos:start="19:25" pos:end="19:25">=</operator> <name pos:start="19:27" pos:end="19:33"><name pos:start="19:27" pos:end="19:27">s</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:33">mb_x</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:18">resync_mb_y</name></name>      <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:33"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:33">mb_y</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><call pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:17">ff_set_qscale</name><argument_list pos:start="25:18" pos:end="25:31">(<argument pos:start="25:19" pos:end="25:19"><expr pos:start="25:19" pos:end="25:19"><name pos:start="25:19" pos:end="25:19">s</name></expr></argument>, <argument pos:start="25:22" pos:end="25:30"><expr pos:start="25:22" pos:end="25:30"><name pos:start="25:22" pos:end="25:30"><name pos:start="25:22" pos:end="25:22">s</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:30">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="41:5">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:16">avctx</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:25">hwaccel</name></name></expr>)</condition> <block pos:start="29:28" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:77">

        <decl_stmt pos:start="31:9" pos:end="31:73"><decl pos:start="31:9" pos:end="31:72"><type pos:start="31:9" pos:end="31:23"><specifier pos:start="31:9" pos:end="31:13">const</specifier> <name pos:start="31:15" pos:end="31:21">uint8_t</name> <modifier pos:start="31:23" pos:end="31:23">*</modifier></type><name pos:start="31:24" pos:end="31:28">start</name> <init pos:start="31:30" pos:end="31:72">= <expr pos:start="31:32" pos:end="31:72"><name pos:start="31:32" pos:end="31:43"><name pos:start="31:32" pos:end="31:32">s</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:36">gb</name><operator pos:start="31:37" pos:end="31:37">.</operator><name pos:start="31:38" pos:end="31:43">buffer</name></name> <operator pos:start="31:45" pos:end="31:45">+</operator> <call pos:start="31:47" pos:end="31:68"><name pos:start="31:47" pos:end="31:60">get_bits_count</name><argument_list pos:start="31:61" pos:end="31:68">(<argument pos:start="31:62" pos:end="31:67"><expr pos:start="31:62" pos:end="31:67"><operator pos:start="31:62" pos:end="31:62">&amp;</operator><name pos:start="31:63" pos:end="31:67"><name pos:start="31:63" pos:end="31:63">s</name><operator pos:start="31:64" pos:end="31:65">-&gt;</operator><name pos:start="31:66" pos:end="31:67">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:70" pos:end="31:70">/</operator> <literal type="number" pos:start="31:72" pos:end="31:72">8</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="35:76"><decl pos:start="33:9" pos:end="35:75"><type pos:start="33:9" pos:end="33:23"><specifier pos:start="33:9" pos:end="33:13">const</specifier> <name pos:start="33:15" pos:end="33:21">uint8_t</name> <modifier pos:start="33:23" pos:end="33:23">*</modifier></type><name pos:start="33:24" pos:end="33:26">end</name>   <init pos:start="33:30" pos:end="35:75">= <expr pos:start="33:32" pos:end="35:75"><call pos:start="33:32" pos:end="35:75"><name pos:start="33:32" pos:end="33:57">ff_h263_find_resync_marker</name><argument_list pos:start="33:58" pos:end="35:75">(<argument pos:start="33:59" pos:end="33:67"><expr pos:start="33:59" pos:end="33:67"><name pos:start="33:59" pos:end="33:63">start</name> <operator pos:start="33:65" pos:end="33:65">+</operator> <literal type="number" pos:start="33:67" pos:end="33:67">1</literal></expr></argument>,

                                                          <argument pos:start="35:59" pos:end="35:74"><expr pos:start="35:59" pos:end="35:74"><name pos:start="35:59" pos:end="35:74"><name pos:start="35:59" pos:end="35:59">s</name><operator pos:start="35:60" pos:end="35:61">-&gt;</operator><name pos:start="35:62" pos:end="35:63">gb</name><operator pos:start="35:64" pos:end="35:64">.</operator><name pos:start="35:65" pos:end="35:74">buffer_end</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:50"><expr pos:start="37:9" pos:end="37:49"><call pos:start="37:9" pos:end="37:49"><name pos:start="37:9" pos:end="37:22">skip_bits_long</name><argument_list pos:start="37:23" pos:end="37:49">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><operator pos:start="37:24" pos:end="37:24">&amp;</operator><name pos:start="37:25" pos:end="37:29"><name pos:start="37:25" pos:end="37:25">s</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:29">gb</name></name></expr></argument>, <argument pos:start="37:32" pos:end="37:48"><expr pos:start="37:32" pos:end="37:48"><literal type="number" pos:start="37:32" pos:end="37:32">8</literal> <operator pos:start="37:34" pos:end="37:34">*</operator> <operator pos:start="37:36" pos:end="37:36">(</operator><name pos:start="37:37" pos:end="37:39">end</name> <operator pos:start="37:41" pos:end="37:41">-</operator> <name pos:start="37:43" pos:end="37:47">start</name><operator pos:start="37:48" pos:end="37:48">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:77">return <expr pos:start="39:16" pos:end="39:76"><call pos:start="39:16" pos:end="39:76"><name pos:start="39:16" pos:end="39:46"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:23">avctx</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:32">hwaccel</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:46">decode_slice</name></name><argument_list pos:start="39:47" pos:end="39:76">(<argument pos:start="39:48" pos:end="39:55"><expr pos:start="39:48" pos:end="39:55"><name pos:start="39:48" pos:end="39:55"><name pos:start="39:48" pos:end="39:48">s</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:55">avctx</name></name></expr></argument>, <argument pos:start="39:58" pos:end="39:62"><expr pos:start="39:58" pos:end="39:62"><name pos:start="39:58" pos:end="39:62">start</name></expr></argument>, <argument pos:start="39:65" pos:end="39:75"><expr pos:start="39:65" pos:end="39:75"><name pos:start="39:65" pos:end="39:67">end</name> <operator pos:start="39:69" pos:end="39:69">-</operator> <name pos:start="39:71" pos:end="39:75">start</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="69:5"><if pos:start="45:5" pos:end="69:5">if <condition pos:start="45:8" pos:end="45:29">(<expr pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:28">partitioned_frame</name></name></expr>)</condition> <block pos:start="45:31" pos:end="69:5">{<block_content pos:start="47:9" pos:end="67:33">

        <decl_stmt pos:start="47:9" pos:end="47:37"><decl pos:start="47:9" pos:end="47:36"><type pos:start="47:9" pos:end="47:17"><specifier pos:start="47:9" pos:end="47:13">const</specifier> <name pos:start="47:15" pos:end="47:17">int</name></type> <name pos:start="47:19" pos:end="47:24">qscale</name> <init pos:start="47:26" pos:end="47:36">= <expr pos:start="47:28" pos:end="47:36"><name pos:start="47:28" pos:end="47:36"><name pos:start="47:28" pos:end="47:28">s</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:36">qscale</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="51:9" pos:end="55:27"><if pos:start="51:9" pos:end="55:27">if <condition pos:start="51:12" pos:end="51:69">(<expr pos:start="51:13" pos:end="51:68"><name pos:start="51:13" pos:end="51:32">CONFIG_MPEG4_DECODER</name> <operator pos:start="51:34" pos:end="51:35">&amp;&amp;</operator> <name pos:start="51:37" pos:end="51:47"><name pos:start="51:37" pos:end="51:37">s</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:47">codec_id</name></name> <operator pos:start="51:49" pos:end="51:50">==</operator> <name pos:start="51:52" pos:end="51:68">AV_CODEC_ID_MPEG4</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="55:27"><block_content pos:start="53:13" pos:end="55:27">

            <if_stmt pos:start="53:13" pos:end="55:27"><if pos:start="53:13" pos:end="55:27">if <condition pos:start="53:16" pos:end="53:76">(<expr pos:start="53:17" pos:end="53:75"><operator pos:start="53:17" pos:end="53:17">(</operator><name pos:start="53:18" pos:end="53:20">ret</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:70"><name pos:start="53:24" pos:end="53:49">ff_mpeg4_decode_partitions</name><argument_list pos:start="53:50" pos:end="53:70">(<argument pos:start="53:51" pos:end="53:69"><expr pos:start="53:51" pos:end="53:69"><name pos:start="53:51" pos:end="53:69"><name pos:start="53:51" pos:end="53:51">s</name><operator pos:start="53:52" pos:end="53:53">-&gt;</operator><name pos:start="53:54" pos:end="53:58">avctx</name><operator pos:start="53:59" pos:end="53:60">-&gt;</operator><name pos:start="53:61" pos:end="53:69">priv_data</name></name></expr></argument>)</argument_list></call><operator pos:start="53:71" pos:end="53:71">)</operator> <operator pos:start="53:73" pos:end="53:73">&lt;</operator> <literal type="number" pos:start="53:75" pos:end="53:75">0</literal></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:27"><block_content pos:start="55:17" pos:end="55:27">

                <return pos:start="55:17" pos:end="55:27">return <expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="59:9" pos:end="59:51">/* restore variables which were modified */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:27">first_slice_line</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <literal type="number" pos:start="61:31" pos:end="61:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:15">mb_x</name></name>             <operator pos:start="63:29" pos:end="63:29">=</operator> <name pos:start="63:31" pos:end="63:44"><name pos:start="63:31" pos:end="63:31">s</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:44">resync_mb_x</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:45"><expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:15">mb_y</name></name>             <operator pos:start="65:29" pos:end="65:29">=</operator> <name pos:start="65:31" pos:end="65:44"><name pos:start="65:31" pos:end="65:31">s</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:44">resync_mb_y</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><call pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:21">ff_set_qscale</name><argument_list pos:start="67:22" pos:end="67:32">(<argument pos:start="67:23" pos:end="67:23"><expr pos:start="67:23" pos:end="67:23"><name pos:start="67:23" pos:end="67:23">s</name></expr></argument>, <argument pos:start="67:26" pos:end="67:31"><expr pos:start="67:26" pos:end="67:31"><name pos:start="67:26" pos:end="67:31">qscale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="73:5" pos:end="233:5">for <control pos:start="73:9" pos:end="73:45">(<init pos:start="73:10" pos:end="73:10">;</init> <condition pos:start="73:12" pos:end="73:34"><expr pos:start="73:12" pos:end="73:33"><name pos:start="73:12" pos:end="73:18"><name pos:start="73:12" pos:end="73:12">s</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:18">mb_y</name></name> <operator pos:start="73:20" pos:end="73:20">&lt;</operator> <name pos:start="73:22" pos:end="73:33"><name pos:start="73:22" pos:end="73:22">s</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:33">mb_height</name></name></expr>;</condition> <incr pos:start="73:36" pos:end="73:44"><expr pos:start="73:36" pos:end="73:44"><name pos:start="73:36" pos:end="73:42"><name pos:start="73:36" pos:end="73:36">s</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:42">mb_y</name></name><operator pos:start="73:43" pos:end="73:44">++</operator></expr></incr>)</control> <block pos:start="73:47" pos:end="233:5">{<block_content pos:start="77:9" pos:end="231:20">

        <comment type="block" pos:start="75:9" pos:end="75:41">/* per-row end of slice checks */</comment>

        <if_stmt pos:start="77:9" pos:end="91:9"><if pos:start="77:9" pos:end="91:9">if <condition pos:start="77:12" pos:end="77:31">(<expr pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:30">msmpeg4_version</name></name></expr>)</condition> <block pos:start="77:33" pos:end="91:9">{<block_content pos:start="79:13" pos:end="89:13">

            <if_stmt pos:start="79:13" pos:end="89:13"><if pos:start="79:13" pos:end="89:13">if <condition pos:start="79:16" pos:end="79:60">(<expr pos:start="79:17" pos:end="79:59"><name pos:start="79:17" pos:end="79:30"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:30">resync_mb_y</name></name> <operator pos:start="79:32" pos:end="79:32">+</operator> <name pos:start="79:34" pos:end="79:48"><name pos:start="79:34" pos:end="79:34">s</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:48">slice_height</name></name> <operator pos:start="79:50" pos:end="79:51">==</operator> <name pos:start="79:53" pos:end="79:59"><name pos:start="79:53" pos:end="79:53">s</name><operator pos:start="79:54" pos:end="79:55">-&gt;</operator><name pos:start="79:56" pos:end="79:59">mb_y</name></name></expr>)</condition> <block pos:start="79:62" pos:end="89:13">{<block_content pos:start="81:17" pos:end="87:25">

                <expr_stmt pos:start="81:17" pos:end="83:65"><expr pos:start="81:17" pos:end="83:64"><call pos:start="81:17" pos:end="83:64"><name pos:start="81:17" pos:end="81:31">ff_er_add_slice</name><argument_list pos:start="81:32" pos:end="83:64">(<argument pos:start="81:33" pos:end="81:38"><expr pos:start="81:33" pos:end="81:38"><operator pos:start="81:33" pos:end="81:33">&amp;</operator><name pos:start="81:34" pos:end="81:38"><name pos:start="81:34" pos:end="81:34">s</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:38">er</name></name></expr></argument>, <argument pos:start="81:41" pos:end="81:54"><expr pos:start="81:41" pos:end="81:54"><name pos:start="81:41" pos:end="81:54"><name pos:start="81:41" pos:end="81:41">s</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:54">resync_mb_x</name></name></expr></argument>, <argument pos:start="81:57" pos:end="81:70"><expr pos:start="81:57" pos:end="81:70"><name pos:start="81:57" pos:end="81:70"><name pos:start="81:57" pos:end="81:57">s</name><operator pos:start="81:58" pos:end="81:59">-&gt;</operator><name pos:start="81:60" pos:end="81:70">resync_mb_y</name></name></expr></argument>,

                                <argument pos:start="83:33" pos:end="83:43"><expr pos:start="83:33" pos:end="83:43"><name pos:start="83:33" pos:end="83:39"><name pos:start="83:33" pos:end="83:33">s</name><operator pos:start="83:34" pos:end="83:35">-&gt;</operator><name pos:start="83:36" pos:end="83:39">mb_x</name></name> <operator pos:start="83:41" pos:end="83:41">-</operator> <literal type="number" pos:start="83:43" pos:end="83:43">1</literal></expr></argument>, <argument pos:start="83:46" pos:end="83:52"><expr pos:start="83:46" pos:end="83:52"><name pos:start="83:46" pos:end="83:52"><name pos:start="83:46" pos:end="83:46">s</name><operator pos:start="83:47" pos:end="83:48">-&gt;</operator><name pos:start="83:49" pos:end="83:52">mb_y</name></name></expr></argument>, <argument pos:start="83:55" pos:end="83:63"><expr pos:start="83:55" pos:end="83:63"><name pos:start="83:55" pos:end="83:63">ER_MB_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <return pos:start="87:17" pos:end="87:25">return <expr pos:start="87:24" pos:end="87:24"><literal type="number" pos:start="87:24" pos:end="87:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="95:9" pos:end="103:9"><if pos:start="95:9" pos:end="103:9">if <condition pos:start="95:12" pos:end="95:36">(<expr pos:start="95:13" pos:end="95:35"><name pos:start="95:13" pos:end="95:30"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:30">msmpeg4_version</name></name> <operator pos:start="95:32" pos:end="95:33">==</operator> <literal type="number" pos:start="95:35" pos:end="95:35">1</literal></expr>)</condition> <block pos:start="95:38" pos:end="103:9">{<block_content pos:start="97:13" pos:end="101:32">

            <expr_stmt pos:start="97:13" pos:end="101:32"><expr pos:start="97:13" pos:end="101:31"><name pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:22">last_dc</name><index pos:start="97:23" pos:end="97:25">[<expr pos:start="97:24" pos:end="97:24"><literal type="number" pos:start="97:24" pos:end="97:24">0</literal></expr>]</index></name> <operator pos:start="97:27" pos:end="97:27">=</operator>

            <name pos:start="99:13" pos:end="99:25"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:22">last_dc</name><index pos:start="99:23" pos:end="99:25">[<expr pos:start="99:24" pos:end="99:24"><literal type="number" pos:start="99:24" pos:end="99:24">1</literal></expr>]</index></name> <operator pos:start="99:27" pos:end="99:27">=</operator>

            <name pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:22">last_dc</name><index pos:start="101:23" pos:end="101:25">[<expr pos:start="101:24" pos:end="101:24"><literal type="number" pos:start="101:24" pos:end="101:24">2</literal></expr>]</index></name> <operator pos:start="101:27" pos:end="101:27">=</operator> <literal type="number" pos:start="101:29" pos:end="101:31">128</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:31"><expr pos:start="107:9" pos:end="107:30"><call pos:start="107:9" pos:end="107:30"><name pos:start="107:9" pos:end="107:27">ff_init_block_index</name><argument_list pos:start="107:28" pos:end="107:30">(<argument pos:start="107:29" pos:end="107:29"><expr pos:start="107:29" pos:end="107:29"><name pos:start="107:29" pos:end="107:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="109:9" pos:end="221:9">for <control pos:start="109:13" pos:end="109:48">(<init pos:start="109:14" pos:end="109:14">;</init> <condition pos:start="109:16" pos:end="109:37"><expr pos:start="109:16" pos:end="109:36"><name pos:start="109:16" pos:end="109:22"><name pos:start="109:16" pos:end="109:16">s</name><operator pos:start="109:17" pos:end="109:18">-&gt;</operator><name pos:start="109:19" pos:end="109:22">mb_x</name></name> <operator pos:start="109:24" pos:end="109:24">&lt;</operator> <name pos:start="109:26" pos:end="109:36"><name pos:start="109:26" pos:end="109:26">s</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:36">mb_width</name></name></expr>;</condition> <incr pos:start="109:39" pos:end="109:47"><expr pos:start="109:39" pos:end="109:47"><name pos:start="109:39" pos:end="109:45"><name pos:start="109:39" pos:end="109:39">s</name><operator pos:start="109:40" pos:end="109:41">-&gt;</operator><name pos:start="109:42" pos:end="109:45">mb_x</name></name><operator pos:start="109:46" pos:end="109:47">++</operator></expr></incr>)</control> <block pos:start="109:50" pos:end="221:9">{<block_content pos:start="111:13" pos:end="219:39">

            <decl_stmt pos:start="111:13" pos:end="111:20"><decl pos:start="111:13" pos:end="111:19"><type pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:15">int</name></type> <name pos:start="111:17" pos:end="111:19">ret</name></decl>;</decl_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:37"><expr pos:start="115:13" pos:end="115:36"><call pos:start="115:13" pos:end="115:36"><name pos:start="115:13" pos:end="115:33">ff_update_block_index</name><argument_list pos:start="115:34" pos:end="115:36">(<argument pos:start="115:35" pos:end="115:35"><expr pos:start="115:35" pos:end="115:35"><name pos:start="115:35" pos:end="115:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="119:13" pos:end="121:40"><if pos:start="119:13" pos:end="121:40">if <condition pos:start="119:16" pos:end="119:75">(<expr pos:start="119:17" pos:end="119:74"><name pos:start="119:17" pos:end="119:30"><name pos:start="119:17" pos:end="119:17">s</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:30">resync_mb_x</name></name> <operator pos:start="119:32" pos:end="119:33">==</operator> <name pos:start="119:35" pos:end="119:41"><name pos:start="119:35" pos:end="119:35">s</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:41">mb_x</name></name> <operator pos:start="119:43" pos:end="119:44">&amp;&amp;</operator> <name pos:start="119:46" pos:end="119:59"><name pos:start="119:46" pos:end="119:46">s</name><operator pos:start="119:47" pos:end="119:48">-&gt;</operator><name pos:start="119:49" pos:end="119:59">resync_mb_y</name></name> <operator pos:start="119:61" pos:end="119:61">+</operator> <literal type="number" pos:start="119:63" pos:end="119:63">1</literal> <operator pos:start="119:65" pos:end="119:66">==</operator> <name pos:start="119:68" pos:end="119:74"><name pos:start="119:68" pos:end="119:68">s</name><operator pos:start="119:69" pos:end="119:70">-&gt;</operator><name pos:start="119:71" pos:end="119:74">mb_y</name></name></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:40"><block_content pos:start="121:17" pos:end="121:40">

                <expr_stmt pos:start="121:17" pos:end="121:40"><expr pos:start="121:17" pos:end="121:39"><name pos:start="121:17" pos:end="121:35"><name pos:start="121:17" pos:end="121:17">s</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:35">first_slice_line</name></name> <operator pos:start="121:37" pos:end="121:37">=</operator> <literal type="number" pos:start="121:39" pos:end="121:39">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="125:13" pos:end="125:32">/* DCT &amp; quantize */</comment>



            <expr_stmt pos:start="129:13" pos:end="129:40"><expr pos:start="129:13" pos:end="129:39"><name pos:start="129:13" pos:end="129:21"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:21">mv_dir</name></name>  <operator pos:start="129:24" pos:end="129:24">=</operator> <name pos:start="129:26" pos:end="129:39">MV_DIR_FORWARD</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:39"><expr pos:start="131:13" pos:end="131:38"><name pos:start="131:13" pos:end="131:22"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:22">mv_type</name></name> <operator pos:start="131:24" pos:end="131:24">=</operator> <name pos:start="131:26" pos:end="131:38">MV_TYPE_16X16</name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="135:72"><expr pos:start="133:13" pos:end="135:71"><call pos:start="133:13" pos:end="135:71"><name pos:start="133:13" pos:end="133:19">ff_dlog</name><argument_list pos:start="133:20" pos:end="135:71">(<argument pos:start="133:21" pos:end="133:21"><expr pos:start="133:21" pos:end="133:21"><name pos:start="133:21" pos:end="133:21">s</name></expr></argument>, <argument pos:start="133:24" pos:end="133:37"><expr pos:start="133:24" pos:end="133:37"><literal type="string" pos:start="133:24" pos:end="133:37">"%d %d %06X\n"</literal></expr></argument>,

                    <argument pos:start="135:21" pos:end="135:23"><expr pos:start="135:21" pos:end="135:23"><name pos:start="135:21" pos:end="135:23">ret</name></expr></argument>, <argument pos:start="135:26" pos:end="135:47"><expr pos:start="135:26" pos:end="135:47"><call pos:start="135:26" pos:end="135:47"><name pos:start="135:26" pos:end="135:39">get_bits_count</name><argument_list pos:start="135:40" pos:end="135:47">(<argument pos:start="135:41" pos:end="135:46"><expr pos:start="135:41" pos:end="135:46"><operator pos:start="135:41" pos:end="135:41">&amp;</operator><name pos:start="135:42" pos:end="135:46"><name pos:start="135:42" pos:end="135:42">s</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:46">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="135:50" pos:end="135:70"><expr pos:start="135:50" pos:end="135:70"><call pos:start="135:50" pos:end="135:70"><name pos:start="135:50" pos:end="135:58">show_bits</name><argument_list pos:start="135:59" pos:end="135:70">(<argument pos:start="135:60" pos:end="135:65"><expr pos:start="135:60" pos:end="135:65"><operator pos:start="135:60" pos:end="135:60">&amp;</operator><name pos:start="135:61" pos:end="135:65"><name pos:start="135:61" pos:end="135:61">s</name><operator pos:start="135:62" pos:end="135:63">-&gt;</operator><name pos:start="135:64" pos:end="135:65">gb</name></name></expr></argument>, <argument pos:start="135:68" pos:end="135:69"><expr pos:start="135:68" pos:end="135:69"><literal type="number" pos:start="135:68" pos:end="135:69">24</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:44"><expr pos:start="137:13" pos:end="137:43"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <call pos:start="137:19" pos:end="137:43"><name pos:start="137:19" pos:end="137:30"><name pos:start="137:19" pos:end="137:19">s</name><operator pos:start="137:20" pos:end="137:21">-&gt;</operator><name pos:start="137:22" pos:end="137:30">decode_mb</name></name><argument_list pos:start="137:31" pos:end="137:43">(<argument pos:start="137:32" pos:end="137:32"><expr pos:start="137:32" pos:end="137:32"><name pos:start="137:32" pos:end="137:32">s</name></expr></argument>, <argument pos:start="137:35" pos:end="137:42"><expr pos:start="137:35" pos:end="137:42"><name pos:start="137:35" pos:end="137:42"><name pos:start="137:35" pos:end="137:35">s</name><operator pos:start="137:36" pos:end="137:37">-&gt;</operator><name pos:start="137:38" pos:end="137:42">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="141:13" pos:end="143:45"><if pos:start="141:13" pos:end="143:45">if <condition pos:start="141:16" pos:end="141:50">(<expr pos:start="141:17" pos:end="141:49"><name pos:start="141:17" pos:end="141:28"><name pos:start="141:17" pos:end="141:17">s</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:28">pict_type</name></name> <operator pos:start="141:30" pos:end="141:31">!=</operator> <name pos:start="141:33" pos:end="141:49">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:45"><block_content pos:start="143:17" pos:end="143:45">

                <expr_stmt pos:start="143:17" pos:end="143:45"><expr pos:start="143:17" pos:end="143:44"><call pos:start="143:17" pos:end="143:44"><name pos:start="143:17" pos:end="143:41">ff_h263_update_motion_val</name><argument_list pos:start="143:42" pos:end="143:44">(<argument pos:start="143:43" pos:end="143:43"><expr pos:start="143:43" pos:end="143:43"><name pos:start="143:43" pos:end="143:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="147:13" pos:end="211:13"><if pos:start="147:13" pos:end="211:13">if <condition pos:start="147:16" pos:end="147:24">(<expr pos:start="147:17" pos:end="147:23"><name pos:start="147:17" pos:end="147:19">ret</name> <operator pos:start="147:21" pos:end="147:21">&lt;</operator> <literal type="number" pos:start="147:23" pos:end="147:23">0</literal></expr>)</condition> <block pos:start="147:26" pos:end="211:13">{<block_content pos:start="149:17" pos:end="209:43">

                <decl_stmt pos:start="149:17" pos:end="149:64"><decl pos:start="149:17" pos:end="149:63"><type pos:start="149:17" pos:end="149:25"><specifier pos:start="149:17" pos:end="149:21">const</specifier> <name pos:start="149:23" pos:end="149:25">int</name></type> <name pos:start="149:27" pos:end="149:28">xy</name> <init pos:start="149:30" pos:end="149:63">= <expr pos:start="149:32" pos:end="149:63"><name pos:start="149:32" pos:end="149:38"><name pos:start="149:32" pos:end="149:32">s</name><operator pos:start="149:33" pos:end="149:34">-&gt;</operator><name pos:start="149:35" pos:end="149:38">mb_x</name></name> <operator pos:start="149:40" pos:end="149:40">+</operator> <name pos:start="149:42" pos:end="149:48"><name pos:start="149:42" pos:end="149:42">s</name><operator pos:start="149:43" pos:end="149:44">-&gt;</operator><name pos:start="149:45" pos:end="149:48">mb_y</name></name> <operator pos:start="149:50" pos:end="149:50">*</operator> <name pos:start="149:52" pos:end="149:63"><name pos:start="149:52" pos:end="149:52">s</name><operator pos:start="149:53" pos:end="149:54">-&gt;</operator><name pos:start="149:55" pos:end="149:63">mb_stride</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="151:17" pos:end="199:17"><if pos:start="151:17" pos:end="185:17">if <condition pos:start="151:20" pos:end="151:37">(<expr pos:start="151:21" pos:end="151:36"><name pos:start="151:21" pos:end="151:23">ret</name> <operator pos:start="151:25" pos:end="151:26">==</operator> <name pos:start="151:28" pos:end="151:36">SLICE_END</name></expr>)</condition> <block pos:start="151:39" pos:end="185:17">{<block_content pos:start="153:21" pos:end="183:29">

                    <expr_stmt pos:start="153:21" pos:end="153:50"><expr pos:start="153:21" pos:end="153:49"><call pos:start="153:21" pos:end="153:49"><name pos:start="153:21" pos:end="153:36">ff_mpv_decode_mb</name><argument_list pos:start="153:37" pos:end="153:49">(<argument pos:start="153:38" pos:end="153:38"><expr pos:start="153:38" pos:end="153:38"><name pos:start="153:38" pos:end="153:38">s</name></expr></argument>, <argument pos:start="153:41" pos:end="153:48"><expr pos:start="153:41" pos:end="153:48"><name pos:start="153:41" pos:end="153:48"><name pos:start="153:41" pos:end="153:41">s</name><operator pos:start="153:42" pos:end="153:43">-&gt;</operator><name pos:start="153:44" pos:end="153:48">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="155:21" pos:end="157:47"><if pos:start="155:21" pos:end="157:47">if <condition pos:start="155:24" pos:end="155:39">(<expr pos:start="155:25" pos:end="155:38"><name pos:start="155:25" pos:end="155:38"><name pos:start="155:25" pos:end="155:25">s</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:38">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="157:25" pos:end="157:47"><block_content pos:start="157:25" pos:end="157:47">

                        <expr_stmt pos:start="157:25" pos:end="157:47"><expr pos:start="157:25" pos:end="157:46"><call pos:start="157:25" pos:end="157:46"><name pos:start="157:25" pos:end="157:43">ff_h263_loop_filter</name><argument_list pos:start="157:44" pos:end="157:46">(<argument pos:start="157:45" pos:end="157:45"><expr pos:start="157:45" pos:end="157:45"><name pos:start="157:45" pos:end="157:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="161:21" pos:end="163:77"><expr pos:start="161:21" pos:end="163:76"><call pos:start="161:21" pos:end="163:76"><name pos:start="161:21" pos:end="161:35">ff_er_add_slice</name><argument_list pos:start="161:36" pos:end="163:76">(<argument pos:start="161:37" pos:end="161:42"><expr pos:start="161:37" pos:end="161:42"><operator pos:start="161:37" pos:end="161:37">&amp;</operator><name pos:start="161:38" pos:end="161:42"><name pos:start="161:38" pos:end="161:38">s</name><operator pos:start="161:39" pos:end="161:40">-&gt;</operator><name pos:start="161:41" pos:end="161:42">er</name></name></expr></argument>, <argument pos:start="161:45" pos:end="161:58"><expr pos:start="161:45" pos:end="161:58"><name pos:start="161:45" pos:end="161:58"><name pos:start="161:45" pos:end="161:45">s</name><operator pos:start="161:46" pos:end="161:47">-&gt;</operator><name pos:start="161:48" pos:end="161:58">resync_mb_x</name></name></expr></argument>, <argument pos:start="161:61" pos:end="161:74"><expr pos:start="161:61" pos:end="161:74"><name pos:start="161:61" pos:end="161:74"><name pos:start="161:61" pos:end="161:61">s</name><operator pos:start="161:62" pos:end="161:63">-&gt;</operator><name pos:start="161:64" pos:end="161:74">resync_mb_y</name></name></expr></argument>,

                                    <argument pos:start="163:37" pos:end="163:43"><expr pos:start="163:37" pos:end="163:43"><name pos:start="163:37" pos:end="163:43"><name pos:start="163:37" pos:end="163:37">s</name><operator pos:start="163:38" pos:end="163:39">-&gt;</operator><name pos:start="163:40" pos:end="163:43">mb_x</name></name></expr></argument>, <argument pos:start="163:46" pos:end="163:52"><expr pos:start="163:46" pos:end="163:52"><name pos:start="163:46" pos:end="163:52"><name pos:start="163:46" pos:end="163:46">s</name><operator pos:start="163:47" pos:end="163:48">-&gt;</operator><name pos:start="163:49" pos:end="163:52">mb_y</name></name></expr></argument>, <argument pos:start="163:55" pos:end="163:75"><expr pos:start="163:55" pos:end="163:75"><name pos:start="163:55" pos:end="163:63">ER_MB_END</name> <operator pos:start="163:65" pos:end="163:65">&amp;</operator> <name pos:start="163:67" pos:end="163:75">part_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="167:21" pos:end="167:43"><expr pos:start="167:21" pos:end="167:42"><name pos:start="167:21" pos:end="167:40"><name pos:start="167:21" pos:end="167:21">s</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:40">padding_bug_score</name></name><operator pos:start="167:41" pos:end="167:42">--</operator></expr>;</expr_stmt>



                    <if_stmt pos:start="171:21" pos:end="181:21"><if pos:start="171:21" pos:end="181:21">if <condition pos:start="171:24" pos:end="171:49">(<expr pos:start="171:25" pos:end="171:48"><operator pos:start="171:25" pos:end="171:26">++</operator><name pos:start="171:27" pos:end="171:33"><name pos:start="171:27" pos:end="171:27">s</name><operator pos:start="171:28" pos:end="171:29">-&gt;</operator><name pos:start="171:30" pos:end="171:33">mb_x</name></name> <operator pos:start="171:35" pos:end="171:36">&gt;=</operator> <name pos:start="171:38" pos:end="171:48"><name pos:start="171:38" pos:end="171:38">s</name><operator pos:start="171:39" pos:end="171:40">-&gt;</operator><name pos:start="171:41" pos:end="171:48">mb_width</name></name></expr>)</condition> <block pos:start="171:51" pos:end="181:21">{<block_content pos:start="173:25" pos:end="179:34">

                        <expr_stmt pos:start="173:25" pos:end="173:36"><expr pos:start="173:25" pos:end="173:35"><name pos:start="173:25" pos:end="173:31"><name pos:start="173:25" pos:end="173:25">s</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:31">mb_x</name></name> <operator pos:start="173:33" pos:end="173:33">=</operator> <literal type="number" pos:start="173:35" pos:end="173:35">0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="175:25" pos:end="175:79"><expr pos:start="175:25" pos:end="175:78"><call pos:start="175:25" pos:end="175:78"><name pos:start="175:25" pos:end="175:47">ff_mpeg_draw_horiz_band</name><argument_list pos:start="175:48" pos:end="175:78">(<argument pos:start="175:49" pos:end="175:49"><expr pos:start="175:49" pos:end="175:49"><name pos:start="175:49" pos:end="175:49">s</name></expr></argument>, <argument pos:start="175:52" pos:end="175:68"><expr pos:start="175:52" pos:end="175:68"><name pos:start="175:52" pos:end="175:58"><name pos:start="175:52" pos:end="175:52">s</name><operator pos:start="175:53" pos:end="175:54">-&gt;</operator><name pos:start="175:55" pos:end="175:58">mb_y</name></name> <operator pos:start="175:60" pos:end="175:60">*</operator> <name pos:start="175:62" pos:end="175:68">mb_size</name></expr></argument>, <argument pos:start="175:71" pos:end="175:77"><expr pos:start="175:71" pos:end="175:77"><name pos:start="175:71" pos:end="175:77">mb_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="177:25" pos:end="177:57"><expr pos:start="177:25" pos:end="177:56"><call pos:start="177:25" pos:end="177:56"><name pos:start="177:25" pos:end="177:53">ff_mpv_report_decode_progress</name><argument_list pos:start="177:54" pos:end="177:56">(<argument pos:start="177:55" pos:end="177:55"><expr pos:start="177:55" pos:end="177:55"><name pos:start="177:55" pos:end="177:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="179:25" pos:end="179:34"><expr pos:start="179:25" pos:end="179:33"><name pos:start="179:25" pos:end="179:31"><name pos:start="179:25" pos:end="179:25">s</name><operator pos:start="179:26" pos:end="179:27">-&gt;</operator><name pos:start="179:28" pos:end="179:31">mb_y</name></name><operator pos:start="179:32" pos:end="179:33">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <return pos:start="183:21" pos:end="183:29">return <expr pos:start="183:28" pos:end="183:28"><literal type="number" pos:start="183:28" pos:end="183:28">0</literal></expr>;</return>

                </block_content>}</block></if> <if type="elseif" pos:start="185:19" pos:end="199:17">else if <condition pos:start="185:27" pos:end="185:46">(<expr pos:start="185:28" pos:end="185:45"><name pos:start="185:28" pos:end="185:30">ret</name> <operator pos:start="185:32" pos:end="185:33">==</operator> <name pos:start="185:35" pos:end="185:45">SLICE_NOEND</name></expr>)</condition> <block pos:start="185:48" pos:end="199:17">{<block_content pos:start="187:21" pos:end="197:47">

                    <expr_stmt pos:start="187:21" pos:end="189:61"><expr pos:start="187:21" pos:end="189:60"><call pos:start="187:21" pos:end="189:60"><name pos:start="187:21" pos:end="187:26">av_log</name><argument_list pos:start="187:27" pos:end="189:60">(<argument pos:start="187:28" pos:end="187:35"><expr pos:start="187:28" pos:end="187:35"><name pos:start="187:28" pos:end="187:35"><name pos:start="187:28" pos:end="187:28">s</name><operator pos:start="187:29" pos:end="187:30">-&gt;</operator><name pos:start="187:31" pos:end="187:35">avctx</name></name></expr></argument>, <argument pos:start="187:38" pos:end="187:49"><expr pos:start="187:38" pos:end="187:49"><name pos:start="187:38" pos:end="187:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="189:28" pos:end="189:55"><expr pos:start="189:28" pos:end="189:55"><literal type="string" pos:start="189:28" pos:end="189:55">"Slice mismatch at MB: %d\n"</literal></expr></argument>, <argument pos:start="189:58" pos:end="189:59"><expr pos:start="189:58" pos:end="189:59"><name pos:start="189:58" pos:end="189:59">xy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="195:59"><expr pos:start="191:21" pos:end="195:58"><call pos:start="191:21" pos:end="195:58"><name pos:start="191:21" pos:end="191:35">ff_er_add_slice</name><argument_list pos:start="191:36" pos:end="195:58">(<argument pos:start="191:37" pos:end="191:42"><expr pos:start="191:37" pos:end="191:42"><operator pos:start="191:37" pos:end="191:37">&amp;</operator><name pos:start="191:38" pos:end="191:42"><name pos:start="191:38" pos:end="191:38">s</name><operator pos:start="191:39" pos:end="191:40">-&gt;</operator><name pos:start="191:41" pos:end="191:42">er</name></name></expr></argument>, <argument pos:start="191:45" pos:end="191:58"><expr pos:start="191:45" pos:end="191:58"><name pos:start="191:45" pos:end="191:58"><name pos:start="191:45" pos:end="191:45">s</name><operator pos:start="191:46" pos:end="191:47">-&gt;</operator><name pos:start="191:48" pos:end="191:58">resync_mb_x</name></name></expr></argument>, <argument pos:start="191:61" pos:end="191:74"><expr pos:start="191:61" pos:end="191:74"><name pos:start="191:61" pos:end="191:74"><name pos:start="191:61" pos:end="191:61">s</name><operator pos:start="191:62" pos:end="191:63">-&gt;</operator><name pos:start="191:64" pos:end="191:74">resync_mb_y</name></name></expr></argument>,

                                    <argument pos:start="193:37" pos:end="193:47"><expr pos:start="193:37" pos:end="193:47"><name pos:start="193:37" pos:end="193:43"><name pos:start="193:37" pos:end="193:37">s</name><operator pos:start="193:38" pos:end="193:39">-&gt;</operator><name pos:start="193:40" pos:end="193:43">mb_x</name></name> <operator pos:start="193:45" pos:end="193:45">+</operator> <literal type="number" pos:start="193:47" pos:end="193:47">1</literal></expr></argument>, <argument pos:start="193:50" pos:end="193:56"><expr pos:start="193:50" pos:end="193:56"><name pos:start="193:50" pos:end="193:56"><name pos:start="193:50" pos:end="193:50">s</name><operator pos:start="193:51" pos:end="193:52">-&gt;</operator><name pos:start="193:53" pos:end="193:56">mb_y</name></name></expr></argument>,

                                    <argument pos:start="195:37" pos:end="195:57"><expr pos:start="195:37" pos:end="195:57"><name pos:start="195:37" pos:end="195:45">ER_MB_END</name> <operator pos:start="195:47" pos:end="195:47">&amp;</operator> <name pos:start="195:49" pos:end="195:57">part_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="197:21" pos:end="197:47">return <expr pos:start="197:28" pos:end="197:46"><name pos:start="197:28" pos:end="197:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:72"><expr pos:start="201:17" pos:end="201:71"><call pos:start="201:17" pos:end="201:71"><name pos:start="201:17" pos:end="201:22">av_log</name><argument_list pos:start="201:23" pos:end="201:71">(<argument pos:start="201:24" pos:end="201:31"><expr pos:start="201:24" pos:end="201:31"><name pos:start="201:24" pos:end="201:31"><name pos:start="201:24" pos:end="201:24">s</name><operator pos:start="201:25" pos:end="201:26">-&gt;</operator><name pos:start="201:27" pos:end="201:31">avctx</name></name></expr></argument>, <argument pos:start="201:34" pos:end="201:45"><expr pos:start="201:34" pos:end="201:45"><name pos:start="201:34" pos:end="201:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="201:48" pos:end="201:66"><expr pos:start="201:48" pos:end="201:66"><literal type="string" pos:start="201:48" pos:end="201:66">"Error at MB: %d\n"</literal></expr></argument>, <argument pos:start="201:69" pos:end="201:70"><expr pos:start="201:69" pos:end="201:70"><name pos:start="201:69" pos:end="201:70">xy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="205:75"><expr pos:start="203:17" pos:end="205:74"><call pos:start="203:17" pos:end="205:74"><name pos:start="203:17" pos:end="203:31">ff_er_add_slice</name><argument_list pos:start="203:32" pos:end="205:74">(<argument pos:start="203:33" pos:end="203:38"><expr pos:start="203:33" pos:end="203:38"><operator pos:start="203:33" pos:end="203:33">&amp;</operator><name pos:start="203:34" pos:end="203:38"><name pos:start="203:34" pos:end="203:34">s</name><operator pos:start="203:35" pos:end="203:36">-&gt;</operator><name pos:start="203:37" pos:end="203:38">er</name></name></expr></argument>, <argument pos:start="203:41" pos:end="203:54"><expr pos:start="203:41" pos:end="203:54"><name pos:start="203:41" pos:end="203:54"><name pos:start="203:41" pos:end="203:41">s</name><operator pos:start="203:42" pos:end="203:43">-&gt;</operator><name pos:start="203:44" pos:end="203:54">resync_mb_x</name></name></expr></argument>, <argument pos:start="203:57" pos:end="203:70"><expr pos:start="203:57" pos:end="203:70"><name pos:start="203:57" pos:end="203:70"><name pos:start="203:57" pos:end="203:57">s</name><operator pos:start="203:58" pos:end="203:59">-&gt;</operator><name pos:start="203:60" pos:end="203:70">resync_mb_y</name></name></expr></argument>,

                                <argument pos:start="205:33" pos:end="205:39"><expr pos:start="205:33" pos:end="205:39"><name pos:start="205:33" pos:end="205:39"><name pos:start="205:33" pos:end="205:33">s</name><operator pos:start="205:34" pos:end="205:35">-&gt;</operator><name pos:start="205:36" pos:end="205:39">mb_x</name></name></expr></argument>, <argument pos:start="205:42" pos:end="205:48"><expr pos:start="205:42" pos:end="205:48"><name pos:start="205:42" pos:end="205:48"><name pos:start="205:42" pos:end="205:42">s</name><operator pos:start="205:43" pos:end="205:44">-&gt;</operator><name pos:start="205:45" pos:end="205:48">mb_y</name></name></expr></argument>, <argument pos:start="205:51" pos:end="205:73"><expr pos:start="205:51" pos:end="205:73"><name pos:start="205:51" pos:end="205:61">ER_MB_ERROR</name> <operator pos:start="205:63" pos:end="205:63">&amp;</operator> <name pos:start="205:65" pos:end="205:73">part_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <return pos:start="209:17" pos:end="209:43">return <expr pos:start="209:24" pos:end="209:42"><name pos:start="209:24" pos:end="209:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="215:13" pos:end="215:42"><expr pos:start="215:13" pos:end="215:41"><call pos:start="215:13" pos:end="215:41"><name pos:start="215:13" pos:end="215:28">ff_mpv_decode_mb</name><argument_list pos:start="215:29" pos:end="215:41">(<argument pos:start="215:30" pos:end="215:30"><expr pos:start="215:30" pos:end="215:30"><name pos:start="215:30" pos:end="215:30">s</name></expr></argument>, <argument pos:start="215:33" pos:end="215:40"><expr pos:start="215:33" pos:end="215:40"><name pos:start="215:33" pos:end="215:40"><name pos:start="215:33" pos:end="215:33">s</name><operator pos:start="215:34" pos:end="215:35">-&gt;</operator><name pos:start="215:36" pos:end="215:40">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="217:13" pos:end="219:39"><if pos:start="217:13" pos:end="219:39">if <condition pos:start="217:16" pos:end="217:31">(<expr pos:start="217:17" pos:end="217:30"><name pos:start="217:17" pos:end="217:30"><name pos:start="217:17" pos:end="217:17">s</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:30">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="219:17" pos:end="219:39"><block_content pos:start="219:17" pos:end="219:39">

                <expr_stmt pos:start="219:17" pos:end="219:39"><expr pos:start="219:17" pos:end="219:38"><call pos:start="219:17" pos:end="219:38"><name pos:start="219:17" pos:end="219:35">ff_h263_loop_filter</name><argument_list pos:start="219:36" pos:end="219:38">(<argument pos:start="219:37" pos:end="219:37"><expr pos:start="219:37" pos:end="219:37"><name pos:start="219:37" pos:end="219:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="225:9" pos:end="225:63"><expr pos:start="225:9" pos:end="225:62"><call pos:start="225:9" pos:end="225:62"><name pos:start="225:9" pos:end="225:31">ff_mpeg_draw_horiz_band</name><argument_list pos:start="225:32" pos:end="225:62">(<argument pos:start="225:33" pos:end="225:33"><expr pos:start="225:33" pos:end="225:33"><name pos:start="225:33" pos:end="225:33">s</name></expr></argument>, <argument pos:start="225:36" pos:end="225:52"><expr pos:start="225:36" pos:end="225:52"><name pos:start="225:36" pos:end="225:42"><name pos:start="225:36" pos:end="225:36">s</name><operator pos:start="225:37" pos:end="225:38">-&gt;</operator><name pos:start="225:39" pos:end="225:42">mb_y</name></name> <operator pos:start="225:44" pos:end="225:44">*</operator> <name pos:start="225:46" pos:end="225:52">mb_size</name></expr></argument>, <argument pos:start="225:55" pos:end="225:61"><expr pos:start="225:55" pos:end="225:61"><name pos:start="225:55" pos:end="225:61">mb_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:41"><expr pos:start="227:9" pos:end="227:40"><call pos:start="227:9" pos:end="227:40"><name pos:start="227:9" pos:end="227:37">ff_mpv_report_decode_progress</name><argument_list pos:start="227:38" pos:end="227:40">(<argument pos:start="227:39" pos:end="227:39"><expr pos:start="227:39" pos:end="227:39"><name pos:start="227:39" pos:end="227:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="231:9" pos:end="231:20"><expr pos:start="231:9" pos:end="231:19"><name pos:start="231:9" pos:end="231:15"><name pos:start="231:9" pos:end="231:9">s</name><operator pos:start="231:10" pos:end="231:11">-&gt;</operator><name pos:start="231:12" pos:end="231:15">mb_x</name></name> <operator pos:start="231:17" pos:end="231:17">=</operator> <literal type="number" pos:start="231:19" pos:end="231:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="237:5" pos:end="237:52"><expr pos:start="237:5" pos:end="237:51"><call pos:start="237:5" pos:end="237:51"><name pos:start="237:5" pos:end="237:10">assert</name><argument_list pos:start="237:11" pos:end="237:51">(<argument pos:start="237:12" pos:end="237:50"><expr pos:start="237:12" pos:end="237:50"><name pos:start="237:12" pos:end="237:18"><name pos:start="237:12" pos:end="237:12">s</name><operator pos:start="237:13" pos:end="237:14">-&gt;</operator><name pos:start="237:15" pos:end="237:18">mb_x</name></name> <operator pos:start="237:20" pos:end="237:21">==</operator> <literal type="number" pos:start="237:23" pos:end="237:23">0</literal> <operator pos:start="237:25" pos:end="237:26">&amp;&amp;</operator> <name pos:start="237:28" pos:end="237:34"><name pos:start="237:28" pos:end="237:28">s</name><operator pos:start="237:29" pos:end="237:30">-&gt;</operator><name pos:start="237:31" pos:end="237:34">mb_y</name></name> <operator pos:start="237:36" pos:end="237:37">==</operator> <name pos:start="237:39" pos:end="237:50"><name pos:start="237:39" pos:end="237:39">s</name><operator pos:start="237:40" pos:end="237:41">-&gt;</operator><name pos:start="237:42" pos:end="237:50">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="241:5" pos:end="251:35"><if pos:start="241:5" pos:end="251:35">if <condition pos:start="241:8" pos:end="249:30">(<expr pos:start="241:9" pos:end="249:29"><name pos:start="241:9" pos:end="241:19"><name pos:start="241:9" pos:end="241:9">s</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:19">codec_id</name></name> <operator pos:start="241:21" pos:end="241:22">==</operator> <name pos:start="241:24" pos:end="241:40">AV_CODEC_ID_MPEG4</name>         <operator pos:start="241:50" pos:end="241:51">&amp;&amp;</operator>

        <operator pos:start="243:9" pos:end="243:9">(</operator><name pos:start="243:10" pos:end="243:27"><name pos:start="243:10" pos:end="243:10">s</name><operator pos:start="243:11" pos:end="243:12">-&gt;</operator><name pos:start="243:13" pos:end="243:27">workaround_bugs</name></name> <operator pos:start="243:29" pos:end="243:29">&amp;</operator> <name pos:start="243:31" pos:end="243:47">FF_BUG_AUTODETECT</name><operator pos:start="243:48" pos:end="243:48">)</operator> <operator pos:start="243:50" pos:end="243:51">&amp;&amp;</operator>

        <call pos:start="245:9" pos:end="245:29"><name pos:start="245:9" pos:end="245:21">get_bits_left</name><argument_list pos:start="245:22" pos:end="245:29">(<argument pos:start="245:23" pos:end="245:28"><expr pos:start="245:23" pos:end="245:28"><operator pos:start="245:23" pos:end="245:23">&amp;</operator><name pos:start="245:24" pos:end="245:28"><name pos:start="245:24" pos:end="245:24">s</name><operator pos:start="245:25" pos:end="245:26">-&gt;</operator><name pos:start="245:27" pos:end="245:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="245:31" pos:end="245:32">&gt;=</operator> <literal type="number" pos:start="245:34" pos:end="245:35">48</literal>              <operator pos:start="245:50" pos:end="245:51">&amp;&amp;</operator>

        <call pos:start="247:9" pos:end="247:29"><name pos:start="247:9" pos:end="247:17">show_bits</name><argument_list pos:start="247:18" pos:end="247:29">(<argument pos:start="247:19" pos:end="247:24"><expr pos:start="247:19" pos:end="247:24"><operator pos:start="247:19" pos:end="247:19">&amp;</operator><name pos:start="247:20" pos:end="247:24"><name pos:start="247:20" pos:end="247:20">s</name><operator pos:start="247:21" pos:end="247:22">-&gt;</operator><name pos:start="247:23" pos:end="247:24">gb</name></name></expr></argument>, <argument pos:start="247:27" pos:end="247:28"><expr pos:start="247:27" pos:end="247:28"><literal type="number" pos:start="247:27" pos:end="247:28">24</literal></expr></argument>)</argument_list></call> <operator pos:start="247:31" pos:end="247:32">==</operator> <literal type="number" pos:start="247:34" pos:end="247:39">0x4010</literal>          <operator pos:start="247:50" pos:end="247:51">&amp;&amp;</operator>

        <operator pos:start="249:9" pos:end="249:9">!</operator><name pos:start="249:10" pos:end="249:29"><name pos:start="249:10" pos:end="249:10">s</name><operator pos:start="249:11" pos:end="249:12">-&gt;</operator><name pos:start="249:13" pos:end="249:29">data_partitioning</name></name></expr>)</condition><block type="pseudo" pos:start="251:9" pos:end="251:35"><block_content pos:start="251:9" pos:end="251:35">

        <expr_stmt pos:start="251:9" pos:end="251:35"><expr pos:start="251:9" pos:end="251:34"><name pos:start="251:9" pos:end="251:28"><name pos:start="251:9" pos:end="251:9">s</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:28">padding_bug_score</name></name> <operator pos:start="251:30" pos:end="251:31">+=</operator> <literal type="number" pos:start="251:33" pos:end="251:34">32</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="255:5" pos:end="255:39">/* try to detect the padding bug */</comment>

    <if_stmt pos:start="257:5" pos:end="301:5"><if pos:start="257:5" pos:end="301:5">if <condition pos:start="257:8" pos:end="265:30">(<expr pos:start="257:9" pos:end="265:29"><name pos:start="257:9" pos:end="257:19"><name pos:start="257:9" pos:end="257:9">s</name><operator pos:start="257:10" pos:end="257:11">-&gt;</operator><name pos:start="257:12" pos:end="257:19">codec_id</name></name> <operator pos:start="257:21" pos:end="257:22">==</operator> <name pos:start="257:24" pos:end="257:40">AV_CODEC_ID_MPEG4</name>         <operator pos:start="257:50" pos:end="257:51">&amp;&amp;</operator>

        <operator pos:start="259:9" pos:end="259:9">(</operator><name pos:start="259:10" pos:end="259:27"><name pos:start="259:10" pos:end="259:10">s</name><operator pos:start="259:11" pos:end="259:12">-&gt;</operator><name pos:start="259:13" pos:end="259:27">workaround_bugs</name></name> <operator pos:start="259:29" pos:end="259:29">&amp;</operator> <name pos:start="259:31" pos:end="259:47">FF_BUG_AUTODETECT</name><operator pos:start="259:48" pos:end="259:48">)</operator> <operator pos:start="259:50" pos:end="259:51">&amp;&amp;</operator>

        <call pos:start="261:9" pos:end="261:29"><name pos:start="261:9" pos:end="261:21">get_bits_left</name><argument_list pos:start="261:22" pos:end="261:29">(<argument pos:start="261:23" pos:end="261:28"><expr pos:start="261:23" pos:end="261:28"><operator pos:start="261:23" pos:end="261:23">&amp;</operator><name pos:start="261:24" pos:end="261:28"><name pos:start="261:24" pos:end="261:24">s</name><operator pos:start="261:25" pos:end="261:26">-&gt;</operator><name pos:start="261:27" pos:end="261:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="261:31" pos:end="261:32">&gt;=</operator> <literal type="number" pos:start="261:34" pos:end="261:34">0</literal>               <operator pos:start="261:50" pos:end="261:51">&amp;&amp;</operator>

        <call pos:start="263:9" pos:end="263:29"><name pos:start="263:9" pos:end="263:21">get_bits_left</name><argument_list pos:start="263:22" pos:end="263:29">(<argument pos:start="263:23" pos:end="263:28"><expr pos:start="263:23" pos:end="263:28"><operator pos:start="263:23" pos:end="263:23">&amp;</operator><name pos:start="263:24" pos:end="263:28"><name pos:start="263:24" pos:end="263:24">s</name><operator pos:start="263:25" pos:end="263:26">-&gt;</operator><name pos:start="263:27" pos:end="263:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="263:31" pos:end="263:31">&lt;</operator> <literal type="number" pos:start="263:33" pos:end="263:34">48</literal>               <operator pos:start="263:50" pos:end="263:51">&amp;&amp;</operator>

        <operator pos:start="265:9" pos:end="265:9">!</operator><name pos:start="265:10" pos:end="265:29"><name pos:start="265:10" pos:end="265:10">s</name><operator pos:start="265:11" pos:end="265:12">-&gt;</operator><name pos:start="265:13" pos:end="265:29">data_partitioning</name></name></expr>)</condition> <block pos:start="265:32" pos:end="301:5">{<block_content pos:start="267:9" pos:end="299:9">

        <decl_stmt pos:start="267:9" pos:end="267:54"><decl pos:start="267:9" pos:end="267:53"><type pos:start="267:9" pos:end="267:17"><specifier pos:start="267:9" pos:end="267:13">const</specifier> <name pos:start="267:15" pos:end="267:17">int</name></type> <name pos:start="267:19" pos:end="267:28">bits_count</name> <init pos:start="267:30" pos:end="267:53">= <expr pos:start="267:32" pos:end="267:53"><call pos:start="267:32" pos:end="267:53"><name pos:start="267:32" pos:end="267:45">get_bits_count</name><argument_list pos:start="267:46" pos:end="267:53">(<argument pos:start="267:47" pos:end="267:52"><expr pos:start="267:47" pos:end="267:52"><operator pos:start="267:47" pos:end="267:47">&amp;</operator><name pos:start="267:48" pos:end="267:52"><name pos:start="267:48" pos:end="267:48">s</name><operator pos:start="267:49" pos:end="267:50">-&gt;</operator><name pos:start="267:51" pos:end="267:52">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="269:9" pos:end="269:63"><decl pos:start="269:9" pos:end="269:62"><type pos:start="269:9" pos:end="269:17"><specifier pos:start="269:9" pos:end="269:13">const</specifier> <name pos:start="269:15" pos:end="269:17">int</name></type> <name pos:start="269:19" pos:end="269:27">bits_left</name>  <init pos:start="269:30" pos:end="269:62">= <expr pos:start="269:32" pos:end="269:62"><name pos:start="269:32" pos:end="269:49"><name pos:start="269:32" pos:end="269:32">s</name><operator pos:start="269:33" pos:end="269:34">-&gt;</operator><name pos:start="269:35" pos:end="269:36">gb</name><operator pos:start="269:37" pos:end="269:37">.</operator><name pos:start="269:38" pos:end="269:49">size_in_bits</name></name> <operator pos:start="269:51" pos:end="269:51">-</operator> <name pos:start="269:53" pos:end="269:62">bits_count</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="273:9" pos:end="299:9"><if pos:start="273:9" pos:end="277:9">if <condition pos:start="273:12" pos:end="273:27">(<expr pos:start="273:13" pos:end="273:26"><name pos:start="273:13" pos:end="273:21">bits_left</name> <operator pos:start="273:23" pos:end="273:24">==</operator> <literal type="number" pos:start="273:26" pos:end="273:26">0</literal></expr>)</condition> <block pos:start="273:29" pos:end="277:9">{<block_content pos:start="275:13" pos:end="275:39">

            <expr_stmt pos:start="275:13" pos:end="275:39"><expr pos:start="275:13" pos:end="275:38"><name pos:start="275:13" pos:end="275:32"><name pos:start="275:13" pos:end="275:13">s</name><operator pos:start="275:14" pos:end="275:15">-&gt;</operator><name pos:start="275:16" pos:end="275:32">padding_bug_score</name></name> <operator pos:start="275:34" pos:end="275:35">+=</operator> <literal type="number" pos:start="275:37" pos:end="275:38">16</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="277:11" pos:end="299:9">else if <condition pos:start="277:19" pos:end="277:34">(<expr pos:start="277:20" pos:end="277:33"><name pos:start="277:20" pos:end="277:28">bits_left</name> <operator pos:start="277:30" pos:end="277:31">!=</operator> <literal type="number" pos:start="277:33" pos:end="277:33">1</literal></expr>)</condition> <block pos:start="277:36" pos:end="299:9">{<block_content pos:start="279:13" pos:end="297:39">

            <decl_stmt pos:start="279:13" pos:end="279:41"><decl pos:start="279:13" pos:end="279:40"><type pos:start="279:13" pos:end="279:15"><name pos:start="279:13" pos:end="279:15">int</name></type> <name pos:start="279:17" pos:end="279:17">v</name> <init pos:start="279:19" pos:end="279:40">= <expr pos:start="279:21" pos:end="279:40"><call pos:start="279:21" pos:end="279:40"><name pos:start="279:21" pos:end="279:29">show_bits</name><argument_list pos:start="279:30" pos:end="279:40">(<argument pos:start="279:31" pos:end="279:36"><expr pos:start="279:31" pos:end="279:36"><operator pos:start="279:31" pos:end="279:31">&amp;</operator><name pos:start="279:32" pos:end="279:36"><name pos:start="279:32" pos:end="279:32">s</name><operator pos:start="279:33" pos:end="279:34">-&gt;</operator><name pos:start="279:35" pos:end="279:36">gb</name></name></expr></argument>, <argument pos:start="279:39" pos:end="279:39"><expr pos:start="279:39" pos:end="279:39"><literal type="number" pos:start="279:39" pos:end="279:39">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:48"><expr pos:start="281:13" pos:end="281:47"><name pos:start="281:13" pos:end="281:13">v</name> <operator pos:start="281:15" pos:end="281:16">|=</operator> <literal type="number" pos:start="281:18" pos:end="281:21">0x7F</literal> <operator pos:start="281:23" pos:end="281:24">&gt;&gt;</operator> <operator pos:start="281:26" pos:end="281:26">(</operator><literal type="number" pos:start="281:27" pos:end="281:29">7</literal> <operator pos:start="281:29" pos:end="281:29">-</operator> <operator pos:start="281:31" pos:end="281:31">(</operator><name pos:start="281:32" pos:end="281:41">bits_count</name> <operator pos:start="281:43" pos:end="281:43">&amp;</operator> <literal type="number" pos:start="281:45" pos:end="281:45">7</literal><operator pos:start="281:46" pos:end="281:46">)</operator><operator pos:start="281:47" pos:end="281:47">)</operator></expr>;</expr_stmt>



            <if_stmt pos:start="285:13" pos:end="297:39"><if pos:start="285:13" pos:end="287:39">if <condition pos:start="285:16" pos:end="285:44">(<expr pos:start="285:17" pos:end="285:43"><name pos:start="285:17" pos:end="285:17">v</name> <operator pos:start="285:19" pos:end="285:20">==</operator> <literal type="number" pos:start="285:22" pos:end="285:25">0x7F</literal> <operator pos:start="285:27" pos:end="285:28">&amp;&amp;</operator> <name pos:start="285:30" pos:end="285:38">bits_left</name> <operator pos:start="285:40" pos:end="285:41">&lt;=</operator> <literal type="number" pos:start="285:43" pos:end="285:43">8</literal></expr>)</condition><block type="pseudo" pos:start="287:17" pos:end="287:39"><block_content pos:start="287:17" pos:end="287:39">

                <expr_stmt pos:start="287:17" pos:end="287:39"><expr pos:start="287:17" pos:end="287:38"><name pos:start="287:17" pos:end="287:36"><name pos:start="287:17" pos:end="287:17">s</name><operator pos:start="287:18" pos:end="287:19">-&gt;</operator><name pos:start="287:20" pos:end="287:36">padding_bug_score</name></name><operator pos:start="287:37" pos:end="287:38">--</operator></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="289:13" pos:end="293:42">else if <condition pos:start="289:21" pos:end="291:37">(<expr pos:start="289:22" pos:end="291:36"><name pos:start="289:22" pos:end="289:22">v</name> <operator pos:start="289:24" pos:end="289:25">==</operator> <literal type="number" pos:start="289:27" pos:end="289:30">0x7F</literal> <operator pos:start="289:32" pos:end="289:33">&amp;&amp;</operator> <operator pos:start="289:35" pos:end="289:35">(</operator><operator pos:start="289:36" pos:end="289:36">(</operator><call pos:start="289:37" pos:end="289:58"><name pos:start="289:37" pos:end="289:50">get_bits_count</name><argument_list pos:start="289:51" pos:end="289:58">(<argument pos:start="289:52" pos:end="289:57"><expr pos:start="289:52" pos:end="289:57"><operator pos:start="289:52" pos:end="289:52">&amp;</operator><name pos:start="289:53" pos:end="289:57"><name pos:start="289:53" pos:end="289:53">s</name><operator pos:start="289:54" pos:end="289:55">-&gt;</operator><name pos:start="289:56" pos:end="289:57">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="289:60" pos:end="289:60">+</operator> <literal type="number" pos:start="289:62" pos:end="289:62">8</literal><operator pos:start="289:63" pos:end="289:63">)</operator> <operator pos:start="289:65" pos:end="289:65">&amp;</operator> <literal type="number" pos:start="289:67" pos:end="289:67">8</literal><operator pos:start="289:68" pos:end="289:68">)</operator> <operator pos:start="289:70" pos:end="289:71">&amp;&amp;</operator>

                     <name pos:start="291:22" pos:end="291:30">bits_left</name> <operator pos:start="291:32" pos:end="291:33">&lt;=</operator> <literal type="number" pos:start="291:35" pos:end="291:36">16</literal></expr>)</condition><block type="pseudo" pos:start="293:17" pos:end="293:42"><block_content pos:start="293:17" pos:end="293:42">

                <expr_stmt pos:start="293:17" pos:end="293:42"><expr pos:start="293:17" pos:end="293:41"><name pos:start="293:17" pos:end="293:36"><name pos:start="293:17" pos:end="293:17">s</name><operator pos:start="293:18" pos:end="293:19">-&gt;</operator><name pos:start="293:20" pos:end="293:36">padding_bug_score</name></name> <operator pos:start="293:38" pos:end="293:39">+=</operator> <literal type="number" pos:start="293:41" pos:end="293:41">4</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="295:13" pos:end="297:39">else<block type="pseudo" pos:start="297:17" pos:end="297:39"><block_content pos:start="297:17" pos:end="297:39">

                <expr_stmt pos:start="297:17" pos:end="297:39"><expr pos:start="297:17" pos:end="297:38"><name pos:start="297:17" pos:end="297:36"><name pos:start="297:17" pos:end="297:17">s</name><operator pos:start="297:18" pos:end="297:19">-&gt;</operator><name pos:start="297:20" pos:end="297:36">padding_bug_score</name></name><operator pos:start="297:37" pos:end="297:38">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="305:5" pos:end="317:5"><if pos:start="305:5" pos:end="317:5">if <condition pos:start="305:8" pos:end="305:47">(<expr pos:start="305:9" pos:end="305:46"><name pos:start="305:9" pos:end="305:26"><name pos:start="305:9" pos:end="305:9">s</name><operator pos:start="305:10" pos:end="305:11">-&gt;</operator><name pos:start="305:12" pos:end="305:26">workaround_bugs</name></name> <operator pos:start="305:28" pos:end="305:28">&amp;</operator> <name pos:start="305:30" pos:end="305:46">FF_BUG_AUTODETECT</name></expr>)</condition> <block pos:start="305:49" pos:end="317:5">{<block_content pos:start="307:9" pos:end="315:53">

        <if_stmt pos:start="307:9" pos:end="315:53"><if pos:start="307:9" pos:end="311:52">if <condition pos:start="307:12" pos:end="309:65">(<expr pos:start="307:13" pos:end="309:64"><name pos:start="307:13" pos:end="307:23"><name pos:start="307:13" pos:end="307:13">s</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:23">codec_id</name></name> <operator pos:start="307:25" pos:end="307:26">==</operator> <name pos:start="307:28" pos:end="307:43">AV_CODEC_ID_H263</name> <operator pos:start="307:45" pos:end="307:46">||</operator>

            <operator pos:start="309:13" pos:end="309:13">(</operator><name pos:start="309:14" pos:end="309:33"><name pos:start="309:14" pos:end="309:14">s</name><operator pos:start="309:15" pos:end="309:16">-&gt;</operator><name pos:start="309:17" pos:end="309:33">padding_bug_score</name></name> <operator pos:start="309:35" pos:end="309:35">&gt;</operator> <operator pos:start="309:37" pos:end="309:37">-</operator><literal type="number" pos:start="309:38" pos:end="309:38">2</literal> <operator pos:start="309:40" pos:end="309:41">&amp;&amp;</operator> <operator pos:start="309:43" pos:end="309:43">!</operator><name pos:start="309:44" pos:end="309:63"><name pos:start="309:44" pos:end="309:44">s</name><operator pos:start="309:45" pos:end="309:46">-&gt;</operator><name pos:start="309:47" pos:end="309:63">data_partitioning</name></name><operator pos:start="309:64" pos:end="309:64">)</operator></expr>)</condition><block type="pseudo" pos:start="311:13" pos:end="311:52"><block_content pos:start="311:13" pos:end="311:52">

            <expr_stmt pos:start="311:13" pos:end="311:52"><expr pos:start="311:13" pos:end="311:51"><name pos:start="311:13" pos:end="311:30"><name pos:start="311:13" pos:end="311:13">s</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:30">workaround_bugs</name></name> <operator pos:start="311:32" pos:end="311:33">|=</operator> <name pos:start="311:35" pos:end="311:51">FF_BUG_NO_PADDING</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="313:9" pos:end="315:53">else<block type="pseudo" pos:start="315:13" pos:end="315:53"><block_content pos:start="315:13" pos:end="315:53">

            <expr_stmt pos:start="315:13" pos:end="315:53"><expr pos:start="315:13" pos:end="315:52"><name pos:start="315:13" pos:end="315:30"><name pos:start="315:13" pos:end="315:13">s</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:30">workaround_bugs</name></name> <operator pos:start="315:32" pos:end="315:33">&amp;=</operator> <operator pos:start="315:35" pos:end="315:35">~</operator><name pos:start="315:36" pos:end="315:52">FF_BUG_NO_PADDING</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="321:5" pos:end="321:57">// handle formats which don't have unique end markers</comment>

    <if_stmt pos:start="323:5" pos:end="377:5"><if pos:start="323:5" pos:end="377:5">if <condition pos:start="323:8" pos:end="323:71">(<expr pos:start="323:9" pos:end="323:70"><name pos:start="323:9" pos:end="323:26"><name pos:start="323:9" pos:end="323:9">s</name><operator pos:start="323:10" pos:end="323:11">-&gt;</operator><name pos:start="323:12" pos:end="323:26">msmpeg4_version</name></name> <operator pos:start="323:28" pos:end="323:29">||</operator> <operator pos:start="323:31" pos:end="323:31">(</operator><name pos:start="323:32" pos:end="323:49"><name pos:start="323:32" pos:end="323:32">s</name><operator pos:start="323:33" pos:end="323:34">-&gt;</operator><name pos:start="323:35" pos:end="323:49">workaround_bugs</name></name> <operator pos:start="323:51" pos:end="323:51">&amp;</operator> <name pos:start="323:53" pos:end="323:69">FF_BUG_NO_PADDING</name><operator pos:start="323:70" pos:end="323:70">)</operator></expr>)</condition> <block pos:start="323:73" pos:end="377:5">{<block_content pos:start="325:9" pos:end="375:17"> <comment type="line" pos:start="323:75" pos:end="323:114">// FIXME perhaps solve this more cleanly</comment>

        <decl_stmt pos:start="325:9" pos:end="325:46"><decl pos:start="325:9" pos:end="325:45"><type pos:start="325:9" pos:end="325:11"><name pos:start="325:9" pos:end="325:11">int</name></type> <name pos:start="325:13" pos:end="325:16">left</name>      <init pos:start="325:23" pos:end="325:45">= <expr pos:start="325:25" pos:end="325:45"><call pos:start="325:25" pos:end="325:45"><name pos:start="325:25" pos:end="325:37">get_bits_left</name><argument_list pos:start="325:38" pos:end="325:45">(<argument pos:start="325:39" pos:end="325:44"><expr pos:start="325:39" pos:end="325:44"><operator pos:start="325:39" pos:end="325:39">&amp;</operator><name pos:start="325:40" pos:end="325:44"><name pos:start="325:40" pos:end="325:40">s</name><operator pos:start="325:41" pos:end="325:42">-&gt;</operator><name pos:start="325:43" pos:end="325:44">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="327:9" pos:end="327:26"><decl pos:start="327:9" pos:end="327:25"><type pos:start="327:9" pos:end="327:11"><name pos:start="327:9" pos:end="327:11">int</name></type> <name pos:start="327:13" pos:end="327:21">max_extra</name> <init pos:start="327:23" pos:end="327:25">= <expr pos:start="327:25" pos:end="327:25"><literal type="number" pos:start="327:25" pos:end="327:25">7</literal></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="331:9" pos:end="331:35">/* no markers in M$ crap */</comment>

        <if_stmt pos:start="333:9" pos:end="335:28"><if pos:start="333:9" pos:end="335:28">if <condition pos:start="333:12" pos:end="333:68">(<expr pos:start="333:13" pos:end="333:67"><name pos:start="333:13" pos:end="333:30"><name pos:start="333:13" pos:end="333:13">s</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:30">msmpeg4_version</name></name> <operator pos:start="333:32" pos:end="333:33">&amp;&amp;</operator> <name pos:start="333:35" pos:end="333:46"><name pos:start="333:35" pos:end="333:35">s</name><operator pos:start="333:36" pos:end="333:37">-&gt;</operator><name pos:start="333:38" pos:end="333:46">pict_type</name></name> <operator pos:start="333:48" pos:end="333:49">==</operator> <name pos:start="333:51" pos:end="333:67">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="335:13" pos:end="335:28"><block_content pos:start="335:13" pos:end="335:28">

            <expr_stmt pos:start="335:13" pos:end="335:28"><expr pos:start="335:13" pos:end="335:27"><name pos:start="335:13" pos:end="335:21">max_extra</name> <operator pos:start="335:23" pos:end="335:24">+=</operator> <literal type="number" pos:start="335:26" pos:end="335:27">17</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="339:9" pos:end="341:31">/* buggy padding but the frame should still end approximately at

         * the bitstream end */</comment>

        <if_stmt pos:start="343:9" pos:end="351:46"><if pos:start="343:9" pos:end="347:28">if <condition pos:start="343:12" pos:end="345:55">(<expr pos:start="343:13" pos:end="345:54"><operator pos:start="343:13" pos:end="343:13">(</operator><name pos:start="343:14" pos:end="343:31"><name pos:start="343:14" pos:end="343:14">s</name><operator pos:start="343:15" pos:end="343:16">-&gt;</operator><name pos:start="343:17" pos:end="343:31">workaround_bugs</name></name> <operator pos:start="343:33" pos:end="343:33">&amp;</operator> <name pos:start="343:35" pos:end="343:51">FF_BUG_NO_PADDING</name><operator pos:start="343:52" pos:end="343:52">)</operator> <operator pos:start="343:54" pos:end="343:55">&amp;&amp;</operator>

            <operator pos:start="345:13" pos:end="345:13">(</operator><name pos:start="345:14" pos:end="345:38"><name pos:start="345:14" pos:end="345:14">s</name><operator pos:start="345:15" pos:end="345:16">-&gt;</operator><name pos:start="345:17" pos:end="345:21">avctx</name><operator pos:start="345:22" pos:end="345:23">-&gt;</operator><name pos:start="345:24" pos:end="345:38">err_recognition</name></name> <operator pos:start="345:40" pos:end="345:40">&amp;</operator> <name pos:start="345:42" pos:end="345:53">AV_EF_BUFFER</name><operator pos:start="345:54" pos:end="345:54">)</operator></expr>)</condition><block type="pseudo" pos:start="347:13" pos:end="347:28"><block_content pos:start="347:13" pos:end="347:28">

            <expr_stmt pos:start="347:13" pos:end="347:28"><expr pos:start="347:13" pos:end="347:27"><name pos:start="347:13" pos:end="347:21">max_extra</name> <operator pos:start="347:23" pos:end="347:24">+=</operator> <literal type="number" pos:start="347:26" pos:end="347:27">48</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="349:9" pos:end="351:46">else if <condition pos:start="349:17" pos:end="349:58">(<expr pos:start="349:18" pos:end="349:57"><operator pos:start="349:18" pos:end="349:18">(</operator><name pos:start="349:19" pos:end="349:36"><name pos:start="349:19" pos:end="349:19">s</name><operator pos:start="349:20" pos:end="349:21">-&gt;</operator><name pos:start="349:22" pos:end="349:36">workaround_bugs</name></name> <operator pos:start="349:38" pos:end="349:38">&amp;</operator> <name pos:start="349:40" pos:end="349:56">FF_BUG_NO_PADDING</name><operator pos:start="349:57" pos:end="349:57">)</operator></expr>)</condition><block type="pseudo" pos:start="351:13" pos:end="351:46"><block_content pos:start="351:13" pos:end="351:46">

            <expr_stmt pos:start="351:13" pos:end="351:46"><expr pos:start="351:13" pos:end="351:45"><name pos:start="351:13" pos:end="351:21">max_extra</name> <operator pos:start="351:23" pos:end="351:24">+=</operator> <literal type="number" pos:start="351:26" pos:end="351:28">256</literal> <operator pos:start="351:30" pos:end="351:30">*</operator> <literal type="number" pos:start="351:32" pos:end="351:34">256</literal> <operator pos:start="351:36" pos:end="351:36">*</operator> <literal type="number" pos:start="351:38" pos:end="351:40">256</literal> <operator pos:start="351:42" pos:end="351:42">*</operator> <literal type="number" pos:start="351:44" pos:end="351:45">64</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="355:9" pos:end="371:61"><if pos:start="355:9" pos:end="361:48">if <condition pos:start="355:12" pos:end="355:29">(<expr pos:start="355:13" pos:end="355:28"><name pos:start="355:13" pos:end="355:16">left</name> <operator pos:start="355:18" pos:end="355:18">&gt;</operator> <name pos:start="355:20" pos:end="355:28">max_extra</name></expr>)</condition><block type="pseudo" pos:start="357:13" pos:end="361:48"><block_content pos:start="357:13" pos:end="361:48">

            <expr_stmt pos:start="357:13" pos:end="361:48"><expr pos:start="357:13" pos:end="361:47"><call pos:start="357:13" pos:end="361:47"><name pos:start="357:13" pos:end="357:18">av_log</name><argument_list pos:start="357:19" pos:end="361:47">(<argument pos:start="357:20" pos:end="357:27"><expr pos:start="357:20" pos:end="357:27"><name pos:start="357:20" pos:end="357:27"><name pos:start="357:20" pos:end="357:20">s</name><operator pos:start="357:21" pos:end="357:22">-&gt;</operator><name pos:start="357:23" pos:end="357:27">avctx</name></name></expr></argument>, <argument pos:start="357:30" pos:end="357:41"><expr pos:start="357:30" pos:end="357:41"><name pos:start="357:30" pos:end="357:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="359:20" pos:end="359:71"><expr pos:start="359:20" pos:end="359:71"><literal type="string" pos:start="359:20" pos:end="359:71">"discarding %d junk bits at end, next would be %X\n"</literal></expr></argument>,

                   <argument pos:start="361:20" pos:end="361:23"><expr pos:start="361:20" pos:end="361:23"><name pos:start="361:20" pos:end="361:23">left</name></expr></argument>, <argument pos:start="361:26" pos:end="361:46"><expr pos:start="361:26" pos:end="361:46"><call pos:start="361:26" pos:end="361:46"><name pos:start="361:26" pos:end="361:34">show_bits</name><argument_list pos:start="361:35" pos:end="361:46">(<argument pos:start="361:36" pos:end="361:41"><expr pos:start="361:36" pos:end="361:41"><operator pos:start="361:36" pos:end="361:36">&amp;</operator><name pos:start="361:37" pos:end="361:41"><name pos:start="361:37" pos:end="361:37">s</name><operator pos:start="361:38" pos:end="361:39">-&gt;</operator><name pos:start="361:40" pos:end="361:41">gb</name></name></expr></argument>, <argument pos:start="361:44" pos:end="361:45"><expr pos:start="361:44" pos:end="361:45"><literal type="number" pos:start="361:44" pos:end="361:45">24</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="363:9" pos:end="365:75">else if <condition pos:start="363:17" pos:end="363:26">(<expr pos:start="363:18" pos:end="363:25"><name pos:start="363:18" pos:end="363:21">left</name> <operator pos:start="363:23" pos:end="363:23">&lt;</operator> <literal type="number" pos:start="363:25" pos:end="363:25">0</literal></expr>)</condition><block type="pseudo" pos:start="365:13" pos:end="365:75"><block_content pos:start="365:13" pos:end="365:75">

            <expr_stmt pos:start="365:13" pos:end="365:75"><expr pos:start="365:13" pos:end="365:74"><call pos:start="365:13" pos:end="365:74"><name pos:start="365:13" pos:end="365:18">av_log</name><argument_list pos:start="365:19" pos:end="365:74">(<argument pos:start="365:20" pos:end="365:27"><expr pos:start="365:20" pos:end="365:27"><name pos:start="365:20" pos:end="365:27"><name pos:start="365:20" pos:end="365:20">s</name><operator pos:start="365:21" pos:end="365:22">-&gt;</operator><name pos:start="365:23" pos:end="365:27">avctx</name></name></expr></argument>, <argument pos:start="365:30" pos:end="365:41"><expr pos:start="365:30" pos:end="365:41"><name pos:start="365:30" pos:end="365:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="365:44" pos:end="365:66"><expr pos:start="365:44" pos:end="365:66"><literal type="string" pos:start="365:44" pos:end="365:66">"overreading %d bits\n"</literal></expr></argument>, <argument pos:start="365:69" pos:end="365:73"><expr pos:start="365:69" pos:end="365:73"><operator pos:start="365:69" pos:end="365:69">-</operator><name pos:start="365:70" pos:end="365:73">left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="367:9" pos:end="371:61">else<block type="pseudo" pos:start="369:13" pos:end="371:61"><block_content pos:start="369:13" pos:end="371:61">

            <expr_stmt pos:start="369:13" pos:end="371:61"><expr pos:start="369:13" pos:end="371:60"><call pos:start="369:13" pos:end="371:60"><name pos:start="369:13" pos:end="369:27">ff_er_add_slice</name><argument_list pos:start="369:28" pos:end="371:60">(<argument pos:start="369:29" pos:end="369:34"><expr pos:start="369:29" pos:end="369:34"><operator pos:start="369:29" pos:end="369:29">&amp;</operator><name pos:start="369:30" pos:end="369:34"><name pos:start="369:30" pos:end="369:30">s</name><operator pos:start="369:31" pos:end="369:32">-&gt;</operator><name pos:start="369:33" pos:end="369:34">er</name></name></expr></argument>, <argument pos:start="369:37" pos:end="369:50"><expr pos:start="369:37" pos:end="369:50"><name pos:start="369:37" pos:end="369:50"><name pos:start="369:37" pos:end="369:37">s</name><operator pos:start="369:38" pos:end="369:39">-&gt;</operator><name pos:start="369:40" pos:end="369:50">resync_mb_x</name></name></expr></argument>, <argument pos:start="369:53" pos:end="369:66"><expr pos:start="369:53" pos:end="369:66"><name pos:start="369:53" pos:end="369:66"><name pos:start="369:53" pos:end="369:53">s</name><operator pos:start="369:54" pos:end="369:55">-&gt;</operator><name pos:start="369:56" pos:end="369:66">resync_mb_y</name></name></expr></argument>,

                            <argument pos:start="371:29" pos:end="371:39"><expr pos:start="371:29" pos:end="371:39"><name pos:start="371:29" pos:end="371:35"><name pos:start="371:29" pos:end="371:29">s</name><operator pos:start="371:30" pos:end="371:31">-&gt;</operator><name pos:start="371:32" pos:end="371:35">mb_x</name></name> <operator pos:start="371:37" pos:end="371:37">-</operator> <literal type="number" pos:start="371:39" pos:end="371:39">1</literal></expr></argument>, <argument pos:start="371:42" pos:end="371:48"><expr pos:start="371:42" pos:end="371:48"><name pos:start="371:42" pos:end="371:48"><name pos:start="371:42" pos:end="371:42">s</name><operator pos:start="371:43" pos:end="371:44">-&gt;</operator><name pos:start="371:45" pos:end="371:48">mb_y</name></name></expr></argument>, <argument pos:start="371:51" pos:end="371:59"><expr pos:start="371:51" pos:end="371:59"><name pos:start="371:51" pos:end="371:59">ER_MB_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <return pos:start="375:9" pos:end="375:17">return <expr pos:start="375:16" pos:end="375:16"><literal type="number" pos:start="375:16" pos:end="375:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="381:5" pos:end="385:79"><expr pos:start="381:5" pos:end="385:78"><call pos:start="381:5" pos:end="385:78"><name pos:start="381:5" pos:end="381:10">av_log</name><argument_list pos:start="381:11" pos:end="385:78">(<argument pos:start="381:12" pos:end="381:19"><expr pos:start="381:12" pos:end="381:19"><name pos:start="381:12" pos:end="381:19"><name pos:start="381:12" pos:end="381:12">s</name><operator pos:start="381:13" pos:end="381:14">-&gt;</operator><name pos:start="381:15" pos:end="381:19">avctx</name></name></expr></argument>, <argument pos:start="381:22" pos:end="381:33"><expr pos:start="381:22" pos:end="381:33"><name pos:start="381:22" pos:end="381:33">AV_LOG_ERROR</name></expr></argument>,

           <argument pos:start="383:12" pos:end="383:82"><expr pos:start="383:12" pos:end="383:82"><literal type="string" pos:start="383:12" pos:end="383:82">"slice end not reached but screenspace end (%d left %06X, score= %d)\n"</literal></expr></argument>,

           <argument pos:start="385:12" pos:end="385:32"><expr pos:start="385:12" pos:end="385:32"><call pos:start="385:12" pos:end="385:32"><name pos:start="385:12" pos:end="385:24">get_bits_left</name><argument_list pos:start="385:25" pos:end="385:32">(<argument pos:start="385:26" pos:end="385:31"><expr pos:start="385:26" pos:end="385:31"><operator pos:start="385:26" pos:end="385:26">&amp;</operator><name pos:start="385:27" pos:end="385:31"><name pos:start="385:27" pos:end="385:27">s</name><operator pos:start="385:28" pos:end="385:29">-&gt;</operator><name pos:start="385:30" pos:end="385:31">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="385:35" pos:end="385:55"><expr pos:start="385:35" pos:end="385:55"><call pos:start="385:35" pos:end="385:55"><name pos:start="385:35" pos:end="385:43">show_bits</name><argument_list pos:start="385:44" pos:end="385:55">(<argument pos:start="385:45" pos:end="385:50"><expr pos:start="385:45" pos:end="385:50"><operator pos:start="385:45" pos:end="385:45">&amp;</operator><name pos:start="385:46" pos:end="385:50"><name pos:start="385:46" pos:end="385:46">s</name><operator pos:start="385:47" pos:end="385:48">-&gt;</operator><name pos:start="385:49" pos:end="385:50">gb</name></name></expr></argument>, <argument pos:start="385:53" pos:end="385:54"><expr pos:start="385:53" pos:end="385:54"><literal type="number" pos:start="385:53" pos:end="385:54">24</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="385:58" pos:end="385:77"><expr pos:start="385:58" pos:end="385:77"><name pos:start="385:58" pos:end="385:77"><name pos:start="385:58" pos:end="385:58">s</name><operator pos:start="385:59" pos:end="385:60">-&gt;</operator><name pos:start="385:61" pos:end="385:77">padding_bug_score</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="389:5" pos:end="391:43"><expr pos:start="389:5" pos:end="391:42"><call pos:start="389:5" pos:end="391:42"><name pos:start="389:5" pos:end="389:19">ff_er_add_slice</name><argument_list pos:start="389:20" pos:end="391:42">(<argument pos:start="389:21" pos:end="389:26"><expr pos:start="389:21" pos:end="389:26"><operator pos:start="389:21" pos:end="389:21">&amp;</operator><name pos:start="389:22" pos:end="389:26"><name pos:start="389:22" pos:end="389:22">s</name><operator pos:start="389:23" pos:end="389:24">-&gt;</operator><name pos:start="389:25" pos:end="389:26">er</name></name></expr></argument>, <argument pos:start="389:29" pos:end="389:42"><expr pos:start="389:29" pos:end="389:42"><name pos:start="389:29" pos:end="389:42"><name pos:start="389:29" pos:end="389:29">s</name><operator pos:start="389:30" pos:end="389:31">-&gt;</operator><name pos:start="389:32" pos:end="389:42">resync_mb_x</name></name></expr></argument>, <argument pos:start="389:45" pos:end="389:58"><expr pos:start="389:45" pos:end="389:58"><name pos:start="389:45" pos:end="389:58"><name pos:start="389:45" pos:end="389:45">s</name><operator pos:start="389:46" pos:end="389:47">-&gt;</operator><name pos:start="389:48" pos:end="389:58">resync_mb_y</name></name></expr></argument>, <argument pos:start="389:61" pos:end="389:67"><expr pos:start="389:61" pos:end="389:67"><name pos:start="389:61" pos:end="389:67"><name pos:start="389:61" pos:end="389:61">s</name><operator pos:start="389:62" pos:end="389:63">-&gt;</operator><name pos:start="389:64" pos:end="389:67">mb_x</name></name></expr></argument>, <argument pos:start="389:70" pos:end="389:76"><expr pos:start="389:70" pos:end="389:76"><name pos:start="389:70" pos:end="389:76"><name pos:start="389:70" pos:end="389:70">s</name><operator pos:start="389:71" pos:end="389:72">-&gt;</operator><name pos:start="389:73" pos:end="389:76">mb_y</name></name></expr></argument>,

                    <argument pos:start="391:21" pos:end="391:41"><expr pos:start="391:21" pos:end="391:41"><name pos:start="391:21" pos:end="391:29">ER_MB_END</name> <operator pos:start="391:31" pos:end="391:31">&amp;</operator> <name pos:start="391:33" pos:end="391:41">part_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="395:5" pos:end="395:31">return <expr pos:start="395:12" pos:end="395:30"><name pos:start="395:12" pos:end="395:30">AVERROR_INVALIDDATA</name></expr>;</return>

</block_content>}</block></function>
</unit>
