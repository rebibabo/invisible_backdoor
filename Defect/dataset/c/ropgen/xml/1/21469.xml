<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21469.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">ff_lag_rac_init</name><parameter_list pos:start="1:21" pos:end="1:63">(<parameter pos:start="1:22" pos:end="1:31"><decl pos:start="1:22" pos:end="1:31"><type pos:start="1:22" pos:end="1:31"><name pos:start="1:22" pos:end="1:28">lag_rac</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:31">l</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:46">GetBitContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">gb</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:62">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:24">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="13:7">/* According to reference decoder "1st byte is garbage",

     * however, it gets skipped by the call to align_get_bits()

     */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><call pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:18">align_get_bits</name><argument_list pos:start="15:19" pos:end="15:22">(<argument pos:start="15:20" pos:end="15:21"><expr pos:start="15:20" pos:end="15:21"><name pos:start="15:20" pos:end="15:21">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="19:62"><expr pos:start="17:5" pos:end="19:61"><name pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:5">l</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:23">bytestream_start</name></name> <operator pos:start="17:25" pos:end="17:25">=</operator>

    <name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:5">l</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:17">bytestream</name></name>       <operator pos:start="19:25" pos:end="19:25">=</operator> <name pos:start="19:27" pos:end="19:36"><name pos:start="19:27" pos:end="19:28">gb</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:36">buffer</name></name> <operator pos:start="19:38" pos:end="19:38">+</operator> <call pos:start="19:40" pos:end="19:57"><name pos:start="19:40" pos:end="19:53">get_bits_count</name><argument_list pos:start="19:54" pos:end="19:57">(<argument pos:start="19:55" pos:end="19:56"><expr pos:start="19:55" pos:end="19:56"><name pos:start="19:55" pos:end="19:56">gb</name></expr></argument>)</argument_list></call> <operator pos:start="19:59" pos:end="19:59">/</operator> <literal type="number" pos:start="19:61" pos:end="19:61">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:5">l</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:21">bytestream_end</name></name>   <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:45"><name pos:start="21:27" pos:end="21:27">l</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:45">bytestream_start</name></name> <operator pos:start="21:47" pos:end="21:47">+</operator> <name pos:start="21:49" pos:end="21:54">length</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:5">l</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:12">range</name></name>        <operator pos:start="25:21" pos:end="25:21">=</operator> <literal type="number" pos:start="25:23" pos:end="25:26">0x80</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:42"><expr pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:5">l</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:10">low</name></name>          <operator pos:start="27:21" pos:end="27:21">=</operator> <operator pos:start="27:23" pos:end="27:23">*</operator><name pos:start="27:24" pos:end="27:36"><name pos:start="27:24" pos:end="27:24">l</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:36">bytestream</name></name> <operator pos:start="27:38" pos:end="27:39">&gt;&gt;</operator> <literal type="number" pos:start="27:41" pos:end="27:41">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:5">l</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:17">hash_shift</name></name>   <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:44"><name pos:start="29:23" pos:end="29:27">FFMAX</name><argument_list pos:start="29:28" pos:end="29:44">(<argument pos:start="29:29" pos:end="29:40"><expr pos:start="29:29" pos:end="29:40"><name pos:start="29:29" pos:end="29:36"><name pos:start="29:29" pos:end="29:29">l</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:36">scale</name></name> <operator pos:start="29:38" pos:end="29:38">-</operator> <literal type="number" pos:start="29:40" pos:end="29:40">8</literal></expr></argument>, <argument pos:start="29:43" pos:end="29:43"><expr pos:start="29:43" pos:end="29:43"><literal type="number" pos:start="29:43" pos:end="29:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="33:5" pos:end="43:5">for <control pos:start="33:9" pos:end="33:33">(<init pos:start="33:10" pos:end="33:19"><expr pos:start="33:10" pos:end="33:18"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:14">j</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:28"><expr pos:start="33:21" pos:end="33:27"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <literal type="number" pos:start="33:25" pos:end="33:27">256</literal></expr>;</condition> <incr pos:start="33:30" pos:end="33:32"><expr pos:start="33:30" pos:end="33:32"><name pos:start="33:30" pos:end="33:30">i</name><operator pos:start="33:31" pos:end="33:32">++</operator></expr></incr>)</control> <block pos:start="33:35" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:29">

        <decl_stmt pos:start="35:9" pos:end="35:40"><decl pos:start="35:9" pos:end="35:39"><type pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:16">unsigned</name></type> <name pos:start="35:18" pos:end="35:18">r</name> <init pos:start="35:20" pos:end="35:39">= <expr pos:start="35:22" pos:end="35:39"><name pos:start="35:22" pos:end="35:22">i</name> <operator pos:start="35:24" pos:end="35:25">&lt;&lt;</operator> <name pos:start="35:27" pos:end="35:39"><name pos:start="35:27" pos:end="35:27">l</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:39">hash_shift</name></name></expr></init></decl>;</decl_stmt>

        <while pos:start="37:9" pos:end="39:16">while <condition pos:start="37:15" pos:end="37:35">(<expr pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:29"><name pos:start="37:16" pos:end="37:16">l</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:22">prob</name><index pos:start="37:23" pos:end="37:29">[<expr pos:start="37:24" pos:end="37:28"><name pos:start="37:24" pos:end="37:24">j</name> <operator pos:start="37:26" pos:end="37:26">+</operator> <literal type="number" pos:start="37:28" pos:end="37:28">1</literal></expr>]</index></name> <operator pos:start="37:31" pos:end="37:32">&lt;=</operator> <name pos:start="37:34" pos:end="37:34">r</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:16"><block_content pos:start="39:13" pos:end="39:16">

            <expr_stmt pos:start="39:13" pos:end="39:16"><expr pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:13">j</name><operator pos:start="39:14" pos:end="39:15">++</operator></expr>;</expr_stmt></block_content></block></while>

        <expr_stmt pos:start="41:9" pos:end="41:29"><expr pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:9">l</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:21">range_hash</name><index pos:start="41:22" pos:end="41:24">[<expr pos:start="41:23" pos:end="41:23"><name pos:start="41:23" pos:end="41:23">i</name></expr>]</index></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <name pos:start="41:28" pos:end="41:28">j</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="47:5" pos:end="47:81">/* Add conversion factor to hash_shift so we don't have to in lag_get_rac. */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:5">l</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:17">hash_shift</name></name> <operator pos:start="49:19" pos:end="49:20">+=</operator> <literal type="number" pos:start="49:22" pos:end="49:23">23</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
