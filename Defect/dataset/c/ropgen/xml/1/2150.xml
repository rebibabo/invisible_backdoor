<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2150.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:69"><name pos:start="1:1" pos:end="1:24">monitor_qapi_event_queue</name><argument_list pos:start="1:25" pos:end="1:69">(<argument pos:start="1:26" pos:end="1:40">QAPIEvent event</argument>, <argument pos:start="1:43" pos:end="1:54">QDict *qdict</argument>, <argument pos:start="1:57" pos:end="1:68">Error **errp</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:37">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">MonitorQAPIEventConf</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:32">evconf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">MonitorQAPIEventState</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:34">evstate</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><call pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:35">(<argument pos:start="11:12" pos:end="11:34"><expr pos:start="11:12" pos:end="11:34"><name pos:start="11:12" pos:end="11:16">event</name> <operator pos:start="11:18" pos:end="11:18">&lt;</operator> <name pos:start="11:20" pos:end="11:34">QAPI_EVENT__MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:10">evconf</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <operator pos:start="13:14" pos:end="13:14">&amp;</operator><name pos:start="13:15" pos:end="13:44"><name pos:start="13:15" pos:end="13:37">monitor_qapi_event_conf</name><index pos:start="13:38" pos:end="13:44">[<expr pos:start="13:39" pos:end="13:43"><name pos:start="13:39" pos:end="13:43">event</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:67"><expr pos:start="15:5" pos:end="15:66"><call pos:start="15:5" pos:end="15:66"><name pos:start="15:5" pos:end="15:38">trace_monitor_protocol_event_queue</name><argument_list pos:start="15:39" pos:end="15:66">(<argument pos:start="15:40" pos:end="15:44"><expr pos:start="15:40" pos:end="15:44"><name pos:start="15:40" pos:end="15:44">event</name></expr></argument>, <argument pos:start="15:47" pos:end="15:51"><expr pos:start="15:47" pos:end="15:51"><name pos:start="15:47" pos:end="15:51">qdict</name></expr></argument>, <argument pos:start="15:54" pos:end="15:65"><expr pos:start="15:54" pos:end="15:65"><name pos:start="15:54" pos:end="15:65"><name pos:start="15:54" pos:end="15:59">evconf</name><operator pos:start="15:60" pos:end="15:61">-&gt;</operator><name pos:start="15:62" pos:end="15:65">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><call pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:19">qemu_mutex_lock</name><argument_list pos:start="19:20" pos:end="19:34">(<argument pos:start="19:21" pos:end="19:33"><expr pos:start="19:21" pos:end="19:33"><operator pos:start="19:21" pos:end="19:21">&amp;</operator><name pos:start="19:22" pos:end="19:33">monitor_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="105:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:21"><name pos:start="23:10" pos:end="23:15">evconf</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:21">rate</name></name></expr>)</condition> <block pos:start="23:24" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:46">

        <comment type="block" pos:start="25:9" pos:end="25:31">/* Unthrottled event */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><call pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:31">monitor_qapi_event_emit</name><argument_list pos:start="27:32" pos:end="27:45">(<argument pos:start="27:33" pos:end="27:37"><expr pos:start="27:33" pos:end="27:37"><name pos:start="27:33" pos:end="27:37">event</name></expr></argument>, <argument pos:start="27:40" pos:end="27:44"><expr pos:start="27:40" pos:end="27:44"><name pos:start="27:40" pos:end="27:44">qdict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="105:5">else <block pos:start="29:12" pos:end="105:5">{<block_content pos:start="31:9" pos:end="103:9">

        <decl_stmt pos:start="31:9" pos:end="31:65"><decl pos:start="31:9" pos:end="31:64"><type pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:13">QDict</name> <modifier pos:start="31:15" pos:end="31:15">*</modifier></type><name pos:start="31:16" pos:end="31:19">data</name> <init pos:start="31:21" pos:end="31:64">= <expr pos:start="31:23" pos:end="31:64"><call pos:start="31:23" pos:end="31:64"><name pos:start="31:23" pos:end="31:38">qobject_to_qdict</name><argument_list pos:start="31:39" pos:end="31:64">(<argument pos:start="31:40" pos:end="31:63"><expr pos:start="31:40" pos:end="31:63"><call pos:start="31:40" pos:end="31:63"><name pos:start="31:40" pos:end="31:48">qdict_get</name><argument_list pos:start="31:49" pos:end="31:63">(<argument pos:start="31:50" pos:end="31:54"><expr pos:start="31:50" pos:end="31:54"><name pos:start="31:50" pos:end="31:54">qdict</name></expr></argument>, <argument pos:start="31:57" pos:end="31:62"><expr pos:start="31:57" pos:end="31:62"><literal type="string" pos:start="31:57" pos:end="31:62">"data"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:69"><decl pos:start="33:9" pos:end="33:68"><type pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:29">MonitorQAPIEventState</name></type> <name pos:start="33:31" pos:end="33:33">key</name> <init pos:start="33:35" pos:end="33:68">= <expr pos:start="33:37" pos:end="33:68"><block pos:start="33:37" pos:end="33:68">{ <expr pos:start="33:39" pos:end="33:52"><operator pos:start="33:39" pos:end="33:39">.</operator><name pos:start="33:40" pos:end="33:44">event</name> <operator pos:start="33:46" pos:end="33:46">=</operator> <name pos:start="33:48" pos:end="33:52">event</name></expr>, <expr pos:start="33:55" pos:end="33:66"><operator pos:start="33:55" pos:end="33:55">.</operator><name pos:start="33:56" pos:end="33:59">data</name> <operator pos:start="33:61" pos:end="33:61">=</operator> <name pos:start="33:63" pos:end="33:66">data</name></expr> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:70"><expr pos:start="37:9" pos:end="37:69"><name pos:start="37:9" pos:end="37:15">evstate</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:69"><name pos:start="37:19" pos:end="37:37">g_hash_table_lookup</name><argument_list pos:start="37:38" pos:end="37:69">(<argument pos:start="37:39" pos:end="37:62"><expr pos:start="37:39" pos:end="37:62"><name pos:start="37:39" pos:end="37:62">monitor_qapi_event_state</name></expr></argument>, <argument pos:start="37:65" pos:end="37:68"><expr pos:start="37:65" pos:end="37:68"><operator pos:start="37:65" pos:end="37:65">&amp;</operator><name pos:start="37:66" pos:end="37:68">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:58"><expr pos:start="39:9" pos:end="39:57"><call pos:start="39:9" pos:end="39:57"><name pos:start="39:9" pos:end="39:14">assert</name><argument_list pos:start="39:15" pos:end="39:57">(<argument pos:start="39:16" pos:end="39:56"><expr pos:start="39:16" pos:end="39:56"><operator pos:start="39:16" pos:end="39:16">!</operator><name pos:start="39:17" pos:end="39:23">evstate</name> <operator pos:start="39:25" pos:end="39:26">||</operator> <call pos:start="39:28" pos:end="39:56"><name pos:start="39:28" pos:end="39:40">timer_pending</name><argument_list pos:start="39:41" pos:end="39:56">(<argument pos:start="39:42" pos:end="39:55"><expr pos:start="39:42" pos:end="39:55"><name pos:start="39:42" pos:end="39:55"><name pos:start="39:42" pos:end="39:48">evstate</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:55">timer</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="103:9"><if pos:start="43:9" pos:end="61:9">if <condition pos:start="43:12" pos:end="43:20">(<expr pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:19">evstate</name></expr>)</condition> <block pos:start="43:22" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:36">

            <comment type="block" pos:start="45:13" pos:end="53:15">/*

             * Timer is pending for (at least) evconf-&gt;rate ns after

             * last send.  Store event for sending when timer fires,

             * replacing a prior stored event if any.

             */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><call pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:19">QDECREF</name><argument_list pos:start="55:20" pos:end="55:35">(<argument pos:start="55:21" pos:end="55:34"><expr pos:start="55:21" pos:end="55:34"><name pos:start="55:21" pos:end="55:34"><name pos:start="55:21" pos:end="55:27">evstate</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:34">qdict</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:35"><expr pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:19">evstate</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:26">qdict</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator> <name pos:start="57:30" pos:end="57:34">qdict</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:36"><expr pos:start="59:13" pos:end="59:35"><call pos:start="59:13" pos:end="59:35"><name pos:start="59:13" pos:end="59:19">QINCREF</name><argument_list pos:start="59:20" pos:end="59:35">(<argument pos:start="59:21" pos:end="59:34"><expr pos:start="59:21" pos:end="59:34"><name pos:start="59:21" pos:end="59:34"><name pos:start="59:21" pos:end="59:27">evstate</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:34">qdict</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="103:9">else <block pos:start="61:16" pos:end="103:9">{<block_content pos:start="75:13" pos:end="101:61">

            <comment type="block" pos:start="63:13" pos:end="73:15">/*

             * Last send was (at least) evconf-&gt;rate ns ago.

             * Send immediately, and arm the timer to call

             * monitor_qapi_event_handler() in evconf-&gt;rate ns.  Any

             * events arriving before then will be delayed until then.

             */</comment>

            <decl_stmt pos:start="75:13" pos:end="75:65"><decl pos:start="75:13" pos:end="75:64"><type pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:19">int64_t</name></type> <name pos:start="75:21" pos:end="75:23">now</name> <init pos:start="75:25" pos:end="75:64">= <expr pos:start="75:27" pos:end="75:64"><call pos:start="75:27" pos:end="75:64"><name pos:start="75:27" pos:end="75:43">qemu_clock_get_ns</name><argument_list pos:start="75:44" pos:end="75:64">(<argument pos:start="75:45" pos:end="75:63"><expr pos:start="75:45" pos:end="75:63"><name pos:start="75:45" pos:end="75:63">QEMU_CLOCK_REALTIME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="79:13" pos:end="79:50"><expr pos:start="79:13" pos:end="79:49"><call pos:start="79:13" pos:end="79:49"><name pos:start="79:13" pos:end="79:35">monitor_qapi_event_emit</name><argument_list pos:start="79:36" pos:end="79:49">(<argument pos:start="79:37" pos:end="79:41"><expr pos:start="79:37" pos:end="79:41"><name pos:start="79:37" pos:end="79:41">event</name></expr></argument>, <argument pos:start="79:44" pos:end="79:48"><expr pos:start="79:44" pos:end="79:48"><name pos:start="79:44" pos:end="79:48">qdict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="83:13" pos:end="83:54"><expr pos:start="83:13" pos:end="83:53"><name pos:start="83:13" pos:end="83:19">evstate</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <call pos:start="83:23" pos:end="83:53"><name pos:start="83:23" pos:end="83:27">g_new</name><argument_list pos:start="83:28" pos:end="83:53">(<argument pos:start="83:29" pos:end="83:49"><expr pos:start="83:29" pos:end="83:49"><name pos:start="83:29" pos:end="83:49">MonitorQAPIEventState</name></expr></argument>, <argument pos:start="83:52" pos:end="83:52"><expr pos:start="83:52" pos:end="83:52"><literal type="number" pos:start="83:52" pos:end="83:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:35"><expr pos:start="85:13" pos:end="85:34"><name pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:19">evstate</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:26">event</name></name> <operator pos:start="85:28" pos:end="85:28">=</operator> <name pos:start="85:30" pos:end="85:34">event</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:33"><expr pos:start="87:13" pos:end="87:32"><name pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:19">evstate</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:25">data</name></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <name pos:start="87:29" pos:end="87:32">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:35"><expr pos:start="89:13" pos:end="89:34"><call pos:start="89:13" pos:end="89:34"><name pos:start="89:13" pos:end="89:19">QINCREF</name><argument_list pos:start="89:20" pos:end="89:34">(<argument pos:start="89:21" pos:end="89:33"><expr pos:start="89:21" pos:end="89:33"><name pos:start="89:21" pos:end="89:33"><name pos:start="89:21" pos:end="89:27">evstate</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:33">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:34"><expr pos:start="91:13" pos:end="91:33"><name pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:19">evstate</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:26">qdict</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:33">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="97:51"><expr pos:start="93:13" pos:end="97:50"><name pos:start="93:13" pos:end="93:26"><name pos:start="93:13" pos:end="93:19">evstate</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:26">timer</name></name> <operator pos:start="93:28" pos:end="93:28">=</operator> <call pos:start="93:30" pos:end="97:50"><name pos:start="93:30" pos:end="93:41">timer_new_ns</name><argument_list pos:start="93:42" pos:end="97:50">(<argument pos:start="93:43" pos:end="93:61"><expr pos:start="93:43" pos:end="93:61"><name pos:start="93:43" pos:end="93:61">QEMU_CLOCK_REALTIME</name></expr></argument>,

                                          <argument pos:start="95:43" pos:end="95:68"><expr pos:start="95:43" pos:end="95:68"><name pos:start="95:43" pos:end="95:68">monitor_qapi_event_handler</name></expr></argument>,

                                          <argument pos:start="97:43" pos:end="97:49"><expr pos:start="97:43" pos:end="97:49"><name pos:start="97:43" pos:end="97:49">evstate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:64"><expr pos:start="99:13" pos:end="99:63"><call pos:start="99:13" pos:end="99:63"><name pos:start="99:13" pos:end="99:28">g_hash_table_add</name><argument_list pos:start="99:29" pos:end="99:63">(<argument pos:start="99:30" pos:end="99:53"><expr pos:start="99:30" pos:end="99:53"><name pos:start="99:30" pos:end="99:53">monitor_qapi_event_state</name></expr></argument>, <argument pos:start="99:56" pos:end="99:62"><expr pos:start="99:56" pos:end="99:62"><name pos:start="99:56" pos:end="99:62">evstate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:61"><expr pos:start="101:13" pos:end="101:60"><call pos:start="101:13" pos:end="101:60"><name pos:start="101:13" pos:end="101:24">timer_mod_ns</name><argument_list pos:start="101:25" pos:end="101:60">(<argument pos:start="101:26" pos:end="101:39"><expr pos:start="101:26" pos:end="101:39"><name pos:start="101:26" pos:end="101:39"><name pos:start="101:26" pos:end="101:32">evstate</name><operator pos:start="101:33" pos:end="101:34">-&gt;</operator><name pos:start="101:35" pos:end="101:39">timer</name></name></expr></argument>, <argument pos:start="101:42" pos:end="101:59"><expr pos:start="101:42" pos:end="101:59"><name pos:start="101:42" pos:end="101:44">now</name> <operator pos:start="101:46" pos:end="101:46">+</operator> <name pos:start="101:48" pos:end="101:59"><name pos:start="101:48" pos:end="101:53">evconf</name><operator pos:start="101:54" pos:end="101:55">-&gt;</operator><name pos:start="101:56" pos:end="101:59">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:37"><expr pos:start="109:5" pos:end="109:36"><call pos:start="109:5" pos:end="109:36"><name pos:start="109:5" pos:end="109:21">qemu_mutex_unlock</name><argument_list pos:start="109:22" pos:end="109:36">(<argument pos:start="109:23" pos:end="109:35"><expr pos:start="109:23" pos:end="109:35"><operator pos:start="109:23" pos:end="109:23">&amp;</operator><name pos:start="109:24" pos:end="109:35">monitor_lock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
