<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8204.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:45">avcodec_decode_video2</name><parameter_list pos:start="1:46" pos:end="5:62">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:85"><decl pos:start="1:70" pos:end="1:85"><type pos:start="1:70" pos:end="1:85"><name pos:start="1:70" pos:end="1:76">AVFrame</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:85">picture</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:66"><decl pos:start="3:47" pos:end="3:66"><type pos:start="3:47" pos:end="3:66"><name pos:start="3:47" pos:end="3:49">int</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:66">got_picture_ptr</name></decl></parameter>,

                                              <parameter pos:start="5:47" pos:end="5:61"><decl pos:start="5:47" pos:end="5:61"><type pos:start="5:47" pos:end="5:61"><name pos:start="5:47" pos:end="5:54">AVPacket</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:61">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="119:1">{<block_content pos:start="9:5" pos:end="117:15">

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVCodecInternal</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:25">avci</name> <init pos:start="9:27" pos:end="9:43">= <expr pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:33">avctx</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:43">internal</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:20">got_picture_ptr</name> <operator pos:start="15:22" pos:end="15:22">=</operator> <literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:126">(<expr pos:start="17:9" pos:end="17:125"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:27"><name pos:start="17:10" pos:end="17:14">avctx</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:27">coded_width</name></name> <operator pos:start="17:29" pos:end="17:30">||</operator> <name pos:start="17:32" pos:end="17:50"><name pos:start="17:32" pos:end="17:36">avctx</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:50">coded_height</name></name><operator pos:start="17:51" pos:end="17:51">)</operator> <operator pos:start="17:53" pos:end="17:54">&amp;&amp;</operator> <call pos:start="17:56" pos:end="17:125"><name pos:start="17:56" pos:end="17:74">av_image_check_size</name><argument_list pos:start="17:75" pos:end="17:125">(<argument pos:start="17:76" pos:end="17:93"><expr pos:start="17:76" pos:end="17:93"><name pos:start="17:76" pos:end="17:93"><name pos:start="17:76" pos:end="17:80">avctx</name><operator pos:start="17:81" pos:end="17:82">-&gt;</operator><name pos:start="17:83" pos:end="17:93">coded_width</name></name></expr></argument>, <argument pos:start="17:96" pos:end="17:114"><expr pos:start="17:96" pos:end="17:114"><name pos:start="17:96" pos:end="17:114"><name pos:start="17:96" pos:end="17:100">avctx</name><operator pos:start="17:101" pos:end="17:102">-&gt;</operator><name pos:start="17:103" pos:end="17:114">coded_height</name></name></expr></argument>, <argument pos:start="17:117" pos:end="17:117"><expr pos:start="17:117" pos:end="17:117"><literal type="number" pos:start="17:117" pos:end="17:117">0</literal></expr></argument>, <argument pos:start="17:120" pos:end="17:124"><expr pos:start="17:120" pos:end="17:124"><name pos:start="17:120" pos:end="17:124">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:9">avctx</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">internal</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:24">pkt</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <name pos:start="23:28" pos:end="23:32">avpkt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:42"><name pos:start="25:11" pos:end="25:28">apply_param_change</name><argument_list pos:start="25:29" pos:end="25:42">(<argument pos:start="25:30" pos:end="25:34"><expr pos:start="25:30" pos:end="25:34"><name pos:start="25:30" pos:end="25:34">avctx</name></expr></argument>, <argument pos:start="25:37" pos:end="25:41"><expr pos:start="25:37" pos:end="25:41"><name pos:start="25:37" pos:end="25:41">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition> <block pos:start="27:18" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:23">

        <expr_stmt pos:start="29:9" pos:end="29:75"><expr pos:start="29:9" pos:end="29:74"><call pos:start="29:9" pos:end="29:74"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:74">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:73"><expr pos:start="29:37" pos:end="29:73"><literal type="string" pos:start="29:37" pos:end="29:73">"Error applying parameter changes.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:23"><if pos:start="31:9" pos:end="33:23">if <condition pos:start="31:12" pos:end="31:51">(<expr pos:start="31:13" pos:end="31:50"><name pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:17">avctx</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:34">err_recognition</name></name> <operator pos:start="31:36" pos:end="31:36">&amp;</operator> <name pos:start="31:38" pos:end="31:50">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:23"><block_content pos:start="33:13" pos:end="33:23">

            <return pos:start="33:13" pos:end="33:23">return <expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><call pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:30">avcodec_get_frame_defaults</name><argument_list pos:start="39:31" pos:end="39:39">(<argument pos:start="39:32" pos:end="39:38"><expr pos:start="39:32" pos:end="39:38"><name pos:start="39:32" pos:end="39:38">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="45:39"><if pos:start="43:5" pos:end="45:39">if <condition pos:start="43:8" pos:end="43:34">(<expr pos:start="43:9" pos:end="43:33"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:33"><name pos:start="43:10" pos:end="43:14">avctx</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:33">refcounted_frames</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:39"><block_content pos:start="45:9" pos:end="45:39">

        <expr_stmt pos:start="45:9" pos:end="45:39"><expr pos:start="45:9" pos:end="45:38"><call pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:22">av_frame_unref</name><argument_list pos:start="45:23" pos:end="45:38">(<argument pos:start="45:24" pos:end="45:37"><expr pos:start="45:24" pos:end="45:37"><operator pos:start="45:24" pos:end="45:24">&amp;</operator><name pos:start="45:25" pos:end="45:37"><name pos:start="45:25" pos:end="45:28">avci</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:37">to_free</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="113:16"><if pos:start="49:5" pos:end="111:5">if <condition pos:start="49:8" pos:end="49:119">(<expr pos:start="49:9" pos:end="49:118"><operator pos:start="49:9" pos:end="49:9">(</operator><name pos:start="49:10" pos:end="49:35"><name pos:start="49:10" pos:end="49:14">avctx</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:21">codec</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:35">capabilities</name></name> <operator pos:start="49:37" pos:end="49:37">&amp;</operator> <name pos:start="49:39" pos:end="49:53">CODEC_CAP_DELAY</name><operator pos:start="49:54" pos:end="49:54">)</operator> <operator pos:start="49:56" pos:end="49:57">||</operator> <name pos:start="49:59" pos:end="49:69"><name pos:start="49:59" pos:end="49:63">avpkt</name><operator pos:start="49:64" pos:end="49:65">-&gt;</operator><name pos:start="49:66" pos:end="49:69">size</name></name> <operator pos:start="49:71" pos:end="49:72">||</operator> <operator pos:start="49:74" pos:end="49:74">(</operator><name pos:start="49:75" pos:end="49:99"><name pos:start="49:75" pos:end="49:79">avctx</name><operator pos:start="49:80" pos:end="49:81">-&gt;</operator><name pos:start="49:82" pos:end="49:99">active_thread_type</name></name> <operator pos:start="49:101" pos:end="49:101">&amp;</operator> <name pos:start="49:103" pos:end="49:117">FF_THREAD_FRAME</name><operator pos:start="49:118" pos:end="49:118">)</operator></expr>)</condition> <block pos:start="49:121" pos:end="111:5">{<block_content pos:start="51:9" pos:end="109:9">

        <if_stmt pos:start="51:9" pos:end="79:9"><if pos:start="51:9" pos:end="55:48">if <condition pos:start="51:12" pos:end="51:72">(<expr pos:start="51:13" pos:end="51:71"><name pos:start="51:13" pos:end="51:24">HAVE_THREADS</name> <operator pos:start="51:26" pos:end="51:27">&amp;&amp;</operator> <name pos:start="51:29" pos:end="51:53"><name pos:start="51:29" pos:end="51:33">avctx</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:53">active_thread_type</name></name> <operator pos:start="51:55" pos:end="51:55">&amp;</operator> <name pos:start="51:57" pos:end="51:71">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="55:48"><block_content pos:start="53:13" pos:end="55:48">

            <expr_stmt pos:start="53:13" pos:end="55:48"><expr pos:start="53:13" pos:end="55:47"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="55:47"><name pos:start="53:19" pos:end="53:40">ff_thread_decode_frame</name><argument_list pos:start="53:41" pos:end="55:47">(<argument pos:start="53:42" pos:end="53:46"><expr pos:start="53:42" pos:end="53:46"><name pos:start="53:42" pos:end="53:46">avctx</name></expr></argument>, <argument pos:start="53:49" pos:end="53:55"><expr pos:start="53:49" pos:end="53:55"><name pos:start="53:49" pos:end="53:55">picture</name></expr></argument>, <argument pos:start="53:58" pos:end="53:72"><expr pos:start="53:58" pos:end="53:72"><name pos:start="53:58" pos:end="53:72">got_picture_ptr</name></expr></argument>,

                                         <argument pos:start="55:42" pos:end="55:46"><expr pos:start="55:42" pos:end="55:46"><name pos:start="55:42" pos:end="55:46">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="57:9" pos:end="79:9">else <block pos:start="57:14" pos:end="79:9">{<block_content pos:start="59:13" pos:end="77:13">

            <expr_stmt pos:start="59:13" pos:end="61:46"><expr pos:start="59:13" pos:end="61:45"><name pos:start="59:13" pos:end="59:15">ret</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="61:45"><name pos:start="59:19" pos:end="59:38"><name pos:start="59:19" pos:end="59:23">avctx</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:30">codec</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:38">decode</name></name><argument_list pos:start="59:39" pos:end="61:45">(<argument pos:start="59:40" pos:end="59:44"><expr pos:start="59:40" pos:end="59:44"><name pos:start="59:40" pos:end="59:44">avctx</name></expr></argument>, <argument pos:start="59:47" pos:end="59:53"><expr pos:start="59:47" pos:end="59:53"><name pos:start="59:47" pos:end="59:53">picture</name></expr></argument>, <argument pos:start="59:56" pos:end="59:70"><expr pos:start="59:56" pos:end="59:70"><name pos:start="59:56" pos:end="59:70">got_picture_ptr</name></expr></argument>,

                                       <argument pos:start="61:40" pos:end="61:44"><expr pos:start="61:40" pos:end="61:44"><name pos:start="61:40" pos:end="61:44">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:42"><expr pos:start="63:13" pos:end="63:41"><name pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:19">picture</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:28">pkt_dts</name></name> <operator pos:start="63:30" pos:end="63:30">=</operator> <name pos:start="63:32" pos:end="63:41"><name pos:start="63:32" pos:end="63:36">avpkt</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:41">dts</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="65:13" pos:end="65:64">/* get_buffer is supposed to set frame parameters */</comment>

            <if_stmt pos:start="67:13" pos:end="77:13"><if pos:start="67:13" pos:end="77:13">if <condition pos:start="67:16" pos:end="67:62">(<expr pos:start="67:17" pos:end="67:61"><operator pos:start="67:17" pos:end="67:17">!</operator><operator pos:start="67:18" pos:end="67:18">(</operator><name pos:start="67:19" pos:end="67:44"><name pos:start="67:19" pos:end="67:23">avctx</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:30">codec</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:44">capabilities</name></name> <operator pos:start="67:46" pos:end="67:46">&amp;</operator> <name pos:start="67:48" pos:end="67:60">CODEC_CAP_DR1</name><operator pos:start="67:61" pos:end="67:61">)</operator></expr>)</condition> <block pos:start="67:64" pos:end="77:13">{<block_content pos:start="69:17" pos:end="75:62">

                <expr_stmt pos:start="69:17" pos:end="69:74"><expr pos:start="69:17" pos:end="69:73"><name pos:start="69:17" pos:end="69:44"><name pos:start="69:17" pos:end="69:23">picture</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:44">sample_aspect_ratio</name></name> <operator pos:start="69:46" pos:end="69:46">=</operator> <name pos:start="69:48" pos:end="69:73"><name pos:start="69:48" pos:end="69:52">avctx</name><operator pos:start="69:53" pos:end="69:54">-&gt;</operator><name pos:start="69:55" pos:end="69:73">sample_aspect_ratio</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:60"><expr pos:start="71:17" pos:end="71:59"><name pos:start="71:17" pos:end="71:30"><name pos:start="71:17" pos:end="71:23">picture</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:30">width</name></name>               <operator pos:start="71:46" pos:end="71:46">=</operator> <name pos:start="71:48" pos:end="71:59"><name pos:start="71:48" pos:end="71:52">avctx</name><operator pos:start="71:53" pos:end="71:54">-&gt;</operator><name pos:start="71:55" pos:end="71:59">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:61"><expr pos:start="73:17" pos:end="73:60"><name pos:start="73:17" pos:end="73:31"><name pos:start="73:17" pos:end="73:23">picture</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:31">height</name></name>              <operator pos:start="73:46" pos:end="73:46">=</operator> <name pos:start="73:48" pos:end="73:60"><name pos:start="73:48" pos:end="73:52">avctx</name><operator pos:start="73:53" pos:end="73:54">-&gt;</operator><name pos:start="73:55" pos:end="73:60">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:62"><expr pos:start="75:17" pos:end="75:61"><name pos:start="75:17" pos:end="75:31"><name pos:start="75:17" pos:end="75:23">picture</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:31">format</name></name>              <operator pos:start="75:46" pos:end="75:46">=</operator> <name pos:start="75:48" pos:end="75:61"><name pos:start="75:48" pos:end="75:52">avctx</name><operator pos:start="75:53" pos:end="75:54">-&gt;</operator><name pos:start="75:55" pos:end="75:61">pix_fmt</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:17"><expr pos:start="83:9" pos:end="83:16"><call pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:14">emms_c</name><argument_list pos:start="83:15" pos:end="83:16">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="83:19" pos:end="83:73">//needed to avoid an emms_c() call before every return;</comment>



        <if_stmt pos:start="87:9" pos:end="89:36"><if pos:start="87:9" pos:end="89:36">if <condition pos:start="87:12" pos:end="87:39">(<expr pos:start="87:13" pos:end="87:38"><name pos:start="87:13" pos:end="87:15">ret</name> <operator pos:start="87:17" pos:end="87:17">&lt;</operator> <literal type="number" pos:start="87:19" pos:end="87:19">0</literal> <operator pos:start="87:21" pos:end="87:22">&amp;&amp;</operator> <name pos:start="87:24" pos:end="87:38"><name pos:start="87:24" pos:end="87:30">picture</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:35">buf</name><index pos:start="87:36" pos:end="87:38">[<expr pos:start="87:37" pos:end="87:37"><literal type="number" pos:start="87:37" pos:end="87:37">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:36"><block_content pos:start="89:13" pos:end="89:36">

            <expr_stmt pos:start="89:13" pos:end="89:36"><expr pos:start="89:13" pos:end="89:35"><call pos:start="89:13" pos:end="89:35"><name pos:start="89:13" pos:end="89:26">av_frame_unref</name><argument_list pos:start="89:27" pos:end="89:35">(<argument pos:start="89:28" pos:end="89:34"><expr pos:start="89:28" pos:end="89:34"><name pos:start="89:28" pos:end="89:34">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="93:9" pos:end="109:9"><if pos:start="93:9" pos:end="109:9">if <condition pos:start="93:12" pos:end="93:29">(<expr pos:start="93:13" pos:end="93:28"><operator pos:start="93:13" pos:end="93:13">*</operator><name pos:start="93:14" pos:end="93:28">got_picture_ptr</name></expr>)</condition> <block pos:start="93:31" pos:end="109:9">{<block_content pos:start="95:13" pos:end="107:34">

            <if_stmt pos:start="95:13" pos:end="103:13"><if pos:start="95:13" pos:end="103:13">if <condition pos:start="95:16" pos:end="95:42">(<expr pos:start="95:17" pos:end="95:41"><operator pos:start="95:17" pos:end="95:17">!</operator><name pos:start="95:18" pos:end="95:41"><name pos:start="95:18" pos:end="95:22">avctx</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:41">refcounted_frames</name></name></expr>)</condition> <block pos:start="95:44" pos:end="103:13">{<block_content pos:start="97:17" pos:end="101:62">

                <expr_stmt pos:start="97:17" pos:end="97:41"><expr pos:start="97:17" pos:end="97:40"><name pos:start="97:17" pos:end="97:29"><name pos:start="97:17" pos:end="97:20">avci</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:29">to_free</name></name> <operator pos:start="97:31" pos:end="97:31">=</operator> <operator pos:start="97:33" pos:end="97:33">*</operator><name pos:start="97:34" pos:end="97:40">picture</name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:65"><expr pos:start="99:17" pos:end="99:64"><name pos:start="99:17" pos:end="99:43"><name pos:start="99:17" pos:end="99:20">avci</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:29">to_free</name><operator pos:start="99:30" pos:end="99:30">.</operator><name pos:start="99:31" pos:end="99:43">extended_data</name></name> <operator pos:start="99:45" pos:end="99:45">=</operator> <name pos:start="99:47" pos:end="99:64"><name pos:start="99:47" pos:end="99:50">avci</name><operator pos:start="99:51" pos:end="99:52">-&gt;</operator><name pos:start="99:53" pos:end="99:59">to_free</name><operator pos:start="99:60" pos:end="99:60">.</operator><name pos:start="99:61" pos:end="99:64">data</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:62"><expr pos:start="101:17" pos:end="101:61"><call pos:start="101:17" pos:end="101:61"><name pos:start="101:17" pos:end="101:22">memset</name><argument_list pos:start="101:23" pos:end="101:61">(<argument pos:start="101:24" pos:end="101:35"><expr pos:start="101:24" pos:end="101:35"><name pos:start="101:24" pos:end="101:35"><name pos:start="101:24" pos:end="101:30">picture</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:35">buf</name></name></expr></argument>, <argument pos:start="101:38" pos:end="101:38"><expr pos:start="101:38" pos:end="101:38"><literal type="number" pos:start="101:38" pos:end="101:38">0</literal></expr></argument>, <argument pos:start="101:41" pos:end="101:60"><expr pos:start="101:41" pos:end="101:60"><sizeof pos:start="101:41" pos:end="101:60">sizeof<argument_list pos:start="101:47" pos:end="101:60">(<argument pos:start="101:48" pos:end="101:59"><expr pos:start="101:48" pos:end="101:59"><name pos:start="101:48" pos:end="101:59"><name pos:start="101:48" pos:end="101:54">picture</name><operator pos:start="101:55" pos:end="101:56">-&gt;</operator><name pos:start="101:57" pos:end="101:59">buf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="107:13" pos:end="107:34"><expr pos:start="107:13" pos:end="107:33"><name pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:17">avctx</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:31">frame_number</name></name><operator pos:start="107:32" pos:end="107:33">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="111:7" pos:end="113:16">else<block type="pseudo" pos:start="113:9" pos:end="113:16"><block_content pos:start="113:9" pos:end="113:16">

        <expr_stmt pos:start="113:9" pos:end="113:16"><expr pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:11">ret</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <literal type="number" pos:start="113:15" pos:end="113:15">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="117:5" pos:end="117:15">return <expr pos:start="117:12" pos:end="117:14"><name pos:start="117:12" pos:end="117:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
