<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22680.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">vnc_disconnect_finish</name><parameter_list pos:start="1:27" pos:end="1:40">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:37"><name pos:start="1:28" pos:end="1:35">VncState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:15">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><call pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:17">vnc_jobs_join</name><argument_list pos:start="9:18" pos:end="9:21">(<argument pos:start="9:19" pos:end="9:20"><expr pos:start="9:19" pos:end="9:20"><name pos:start="9:19" pos:end="9:20">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="9:24" pos:end="9:47">/* Wait encoding jobs */</comment>



    <expr_stmt pos:start="13:5" pos:end="13:24"><expr pos:start="13:5" pos:end="13:23"><call pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:19">vnc_lock_output</name><argument_list pos:start="13:20" pos:end="13:23">(<argument pos:start="13:21" pos:end="13:22"><expr pos:start="13:21" pos:end="13:22"><name pos:start="13:21" pos:end="13:22">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><call pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:17">vnc_qmp_event</name><argument_list pos:start="15:18" pos:end="15:50">(<argument pos:start="15:19" pos:end="15:20"><expr pos:start="15:19" pos:end="15:20"><name pos:start="15:19" pos:end="15:20">vs</name></expr></argument>, <argument pos:start="15:23" pos:end="15:49"><expr pos:start="15:23" pos:end="15:49"><name pos:start="15:23" pos:end="15:49">QAPI_EVENT_VNC_DISCONNECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:15">buffer_free</name><argument_list pos:start="19:16" pos:end="19:27">(<argument pos:start="19:17" pos:end="19:26"><expr pos:start="19:17" pos:end="19:26"><operator pos:start="19:17" pos:end="19:17">&amp;</operator><name pos:start="19:18" pos:end="19:26"><name pos:start="19:18" pos:end="19:19">vs</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:26">input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><call pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:15">buffer_free</name><argument_list pos:start="21:16" pos:end="21:28">(<argument pos:start="21:17" pos:end="21:27"><expr pos:start="21:17" pos:end="21:27"><operator pos:start="21:17" pos:end="21:17">&amp;</operator><name pos:start="21:18" pos:end="21:27"><name pos:start="21:18" pos:end="21:19">vs</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:27">output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><call pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:15">buffer_free</name><argument_list pos:start="23:16" pos:end="23:30">(<argument pos:start="23:17" pos:end="23:29"><expr pos:start="23:17" pos:end="23:29"><operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:29"><name pos:start="23:18" pos:end="23:19">vs</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:29">ws_input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><call pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:15">buffer_free</name><argument_list pos:start="25:16" pos:end="25:31">(<argument pos:start="25:17" pos:end="25:30"><expr pos:start="25:17" pos:end="25:30"><operator pos:start="25:17" pos:end="25:17">&amp;</operator><name pos:start="25:18" pos:end="25:30"><name pos:start="25:18" pos:end="25:19">vs</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:30">ws_output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><call pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:27">qapi_free_VncClientInfo</name><argument_list pos:start="29:28" pos:end="29:37">(<argument pos:start="29:29" pos:end="29:36"><expr pos:start="29:29" pos:end="29:36"><name pos:start="29:29" pos:end="29:36"><name pos:start="29:29" pos:end="29:30">vs</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:36">info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><call pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:18">vnc_zlib_clear</name><argument_list pos:start="33:19" pos:end="33:22">(<argument pos:start="33:20" pos:end="33:21"><expr pos:start="33:20" pos:end="33:21"><name pos:start="33:20" pos:end="33:21">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><call pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:19">vnc_tight_clear</name><argument_list pos:start="35:20" pos:end="35:23">(<argument pos:start="35:21" pos:end="35:22"><expr pos:start="35:21" pos:end="35:22"><name pos:start="35:21" pos:end="35:22">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="42:0"><expr pos:start="37:5" pos:end="37:22"><call pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:18">vnc_zrle_clear</name><argument_list pos:start="37:19" pos:end="37:22">(<argument pos:start="37:20" pos:end="37:21"><expr pos:start="37:20" pos:end="37:21"><name pos:start="37:20" pos:end="37:21">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="41:1" pos:end="41:21">#<cpp:directive pos:start="41:2" pos:end="41:6">ifdef</cpp:directive> <name pos:start="41:8" pos:end="41:21">CONFIG_VNC_TLS</name></cpp:ifdef>

    <expr_stmt pos:start="43:5" pos:end="48:0"><expr pos:start="43:5" pos:end="43:30"><call pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:26">vnc_tls_client_cleanup</name><argument_list pos:start="43:27" pos:end="43:30">(<argument pos:start="43:28" pos:end="43:29"><expr pos:start="43:28" pos:end="43:29"><name pos:start="43:28" pos:end="43:29">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="45:8" pos:end="45:27">/* CONFIG_VNC_TLS */</comment>

<cpp:ifdef pos:start="47:1" pos:end="47:22">#<cpp:directive pos:start="47:2" pos:end="47:6">ifdef</cpp:directive> <name pos:start="47:8" pos:end="47:22">CONFIG_VNC_SASL</name></cpp:ifdef>

    <expr_stmt pos:start="49:5" pos:end="52:0"><expr pos:start="49:5" pos:end="49:31"><call pos:start="49:5" pos:end="49:31"><name pos:start="49:5" pos:end="49:27">vnc_sasl_client_cleanup</name><argument_list pos:start="49:28" pos:end="49:31">(<argument pos:start="49:29" pos:end="49:30"><expr pos:start="49:29" pos:end="49:30"><name pos:start="49:29" pos:end="49:30">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="51:8" pos:end="51:28">/* CONFIG_VNC_SASL */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:18"><expr pos:start="53:5" pos:end="53:17"><call pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:13">audio_del</name><argument_list pos:start="53:14" pos:end="53:17">(<argument pos:start="53:15" pos:end="53:16"><expr pos:start="53:15" pos:end="53:16"><name pos:start="53:15" pos:end="53:16">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:30"><expr pos:start="55:5" pos:end="55:29"><call pos:start="55:5" pos:end="55:29"><name pos:start="55:5" pos:end="55:25">vnc_release_modifiers</name><argument_list pos:start="55:26" pos:end="55:29">(<argument pos:start="55:27" pos:end="55:28"><expr pos:start="55:27" pos:end="55:28"><name pos:start="55:27" pos:end="55:28">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:24">(<expr pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:10">vs</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:23">initialized</name></name></expr>)</condition> <block pos:start="59:26" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:73">

        <expr_stmt pos:start="61:9" pos:end="61:50"><expr pos:start="61:9" pos:end="61:49"><call pos:start="61:9" pos:end="61:49"><name pos:start="61:9" pos:end="61:21">QTAILQ_REMOVE</name><argument_list pos:start="61:22" pos:end="61:49">(<argument pos:start="61:23" pos:end="61:38"><expr pos:start="61:23" pos:end="61:38"><operator pos:start="61:23" pos:end="61:23">&amp;</operator><name pos:start="61:24" pos:end="61:38"><name pos:start="61:24" pos:end="61:25">vs</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:29">vd</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:38">clients</name></name></expr></argument>, <argument pos:start="61:41" pos:end="61:42"><expr pos:start="61:41" pos:end="61:42"><name pos:start="61:41" pos:end="61:42">vs</name></expr></argument>, <argument pos:start="61:45" pos:end="61:48"><expr pos:start="61:45" pos:end="61:48"><name pos:start="61:45" pos:end="61:48">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:73"><expr pos:start="63:9" pos:end="63:72"><call pos:start="63:9" pos:end="63:72"><name pos:start="63:9" pos:end="63:46">qemu_remove_mouse_mode_change_notifier</name><argument_list pos:start="63:47" pos:end="63:72">(<argument pos:start="63:48" pos:end="63:71"><expr pos:start="63:48" pos:end="63:71"><operator pos:start="63:48" pos:end="63:48">&amp;</operator><name pos:start="63:49" pos:end="63:71"><name pos:start="63:49" pos:end="63:50">vs</name><operator pos:start="63:51" pos:end="63:52">-&gt;</operator><name pos:start="63:53" pos:end="63:71">mouse_mode_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="71:47"><if pos:start="69:5" pos:end="71:47">if <condition pos:start="69:8" pos:end="69:30">(<expr pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:10">vs</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:14">vd</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:29">lock_key_sync</name></name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:47"><block_content pos:start="71:9" pos:end="71:47">

        <expr_stmt pos:start="71:9" pos:end="71:47"><expr pos:start="71:9" pos:end="71:46"><call pos:start="71:9" pos:end="71:46"><name pos:start="71:9" pos:end="71:37">qemu_remove_led_event_handler</name><argument_list pos:start="71:38" pos:end="71:46">(<argument pos:start="71:39" pos:end="71:45"><expr pos:start="71:39" pos:end="71:45"><name pos:start="71:39" pos:end="71:45"><name pos:start="71:39" pos:end="71:40">vs</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:45">led</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:26"><expr pos:start="73:5" pos:end="73:25"><call pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:21">vnc_unlock_output</name><argument_list pos:start="73:22" pos:end="73:25">(<argument pos:start="73:23" pos:end="73:24"><expr pos:start="73:23" pos:end="73:24"><name pos:start="73:23" pos:end="73:24">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:42"><expr pos:start="77:5" pos:end="77:41"><call pos:start="77:5" pos:end="77:41"><name pos:start="77:5" pos:end="77:22">qemu_mutex_destroy</name><argument_list pos:start="77:23" pos:end="77:41">(<argument pos:start="77:24" pos:end="77:40"><expr pos:start="77:24" pos:end="77:40"><operator pos:start="77:24" pos:end="77:24">&amp;</operator><name pos:start="77:25" pos:end="77:40"><name pos:start="77:25" pos:end="77:26">vs</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:40">output_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="83:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:23">(<expr pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:14"><name pos:start="79:9" pos:end="79:10">vs</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:14">bh</name></name> <operator pos:start="79:16" pos:end="79:17">!=</operator> <name pos:start="79:19" pos:end="79:22">NULL</name></expr>)</condition> <block pos:start="79:25" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:31">

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><call pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:22">qemu_bh_delete</name><argument_list pos:start="81:23" pos:end="81:30">(<argument pos:start="81:24" pos:end="81:29"><expr pos:start="81:24" pos:end="81:29"><name pos:start="81:24" pos:end="81:29"><name pos:start="81:24" pos:end="81:25">vs</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:29">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:34"><expr pos:start="85:5" pos:end="85:33"><call pos:start="85:5" pos:end="85:33"><name pos:start="85:5" pos:end="85:15">buffer_free</name><argument_list pos:start="85:16" pos:end="85:33">(<argument pos:start="85:17" pos:end="85:32"><expr pos:start="85:17" pos:end="85:32"><operator pos:start="85:17" pos:end="85:17">&amp;</operator><name pos:start="85:18" pos:end="85:32"><name pos:start="85:18" pos:end="85:19">vs</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:32">jobs_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="89:5" pos:end="93:5">for <control pos:start="89:9" pos:end="89:39">(<init pos:start="89:10" pos:end="89:15"><expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>;</init> <condition pos:start="89:17" pos:end="89:34"><expr pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:19">&lt;</operator> <name pos:start="89:21" pos:end="89:33">VNC_STAT_ROWS</name></expr>;</condition> <incr pos:start="89:36" pos:end="89:38"><expr pos:start="89:36" pos:end="89:38"><operator pos:start="89:36" pos:end="89:37">++</operator><name pos:start="89:38" pos:end="89:38">i</name></expr></incr>)</control> <block pos:start="89:41" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:34">

        <expr_stmt pos:start="91:9" pos:end="91:34"><expr pos:start="91:9" pos:end="91:33"><call pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:14">g_free</name><argument_list pos:start="91:15" pos:end="91:33">(<argument pos:start="91:16" pos:end="91:32"><expr pos:start="91:16" pos:end="91:32"><name pos:start="91:16" pos:end="91:32"><name pos:start="91:16" pos:end="91:17">vs</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:29">lossy_rect</name><index pos:start="91:30" pos:end="91:32">[<expr pos:start="91:31" pos:end="91:31"><name pos:start="91:31" pos:end="91:31">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="95:5" pos:end="95:27"><expr pos:start="95:5" pos:end="95:26"><call pos:start="95:5" pos:end="95:26"><name pos:start="95:5" pos:end="95:10">g_free</name><argument_list pos:start="95:11" pos:end="95:26">(<argument pos:start="95:12" pos:end="95:25"><expr pos:start="95:12" pos:end="95:25"><name pos:start="95:12" pos:end="95:25"><name pos:start="95:12" pos:end="95:13">vs</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:25">lossy_rect</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:15"><expr pos:start="97:5" pos:end="97:14"><call pos:start="97:5" pos:end="97:14"><name pos:start="97:5" pos:end="97:10">g_free</name><argument_list pos:start="97:11" pos:end="97:14">(<argument pos:start="97:12" pos:end="97:13"><expr pos:start="97:12" pos:end="97:13"><name pos:start="97:12" pos:end="97:13">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
