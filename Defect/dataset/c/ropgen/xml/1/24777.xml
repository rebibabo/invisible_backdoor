<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24777.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:32">ff_idctdsp_init_x86</name><parameter_list pos:start="1:33" pos:end="3:57">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:47">IDCTDSPContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">c</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:73"><decl pos:start="1:53" pos:end="1:73"><type pos:start="1:53" pos:end="1:73"><name pos:start="1:53" pos:end="1:66">AVCodecContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">avctx</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:56"><decl pos:start="3:34" pos:end="3:56"><type pos:start="3:34" pos:end="3:56"><name pos:start="3:34" pos:end="3:41">unsigned</name></type> <name pos:start="3:43" pos:end="3:56">high_bit_depth</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:5">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">cpu_flags</name> <init pos:start="7:19" pos:end="7:38">= <expr pos:start="7:21" pos:end="7:38"><call pos:start="7:21" pos:end="7:38"><name pos:start="7:21" pos:end="7:36">av_get_cpu_flags</name><argument_list pos:start="7:37" pos:end="7:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="33:5"><if pos:start="11:5" pos:end="33:5">if <condition pos:start="11:8" pos:end="11:30">(<expr pos:start="11:9" pos:end="11:29"><call pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:18">INLINE_MMX</name><argument_list pos:start="11:19" pos:end="11:29">(<argument pos:start="11:20" pos:end="11:28"><expr pos:start="11:20" pos:end="11:28"><name pos:start="11:20" pos:end="11:28">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:32" pos:end="33:5">{<block_content pos:start="13:9" pos:end="31:9">

        <if_stmt pos:start="13:9" pos:end="31:9"><if pos:start="13:9" pos:end="31:9">if <condition pos:start="13:12" pos:end="21:52">(<expr pos:start="13:13" pos:end="21:51"><operator pos:start="13:13" pos:end="13:13">!</operator><name pos:start="13:14" pos:end="13:27">high_bit_depth</name> <operator pos:start="13:29" pos:end="13:30">&amp;&amp;</operator>

            <name pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:17">avctx</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:25">lowres</name></name> <operator pos:start="15:27" pos:end="15:28">==</operator> <literal type="number" pos:start="15:30" pos:end="15:30">0</literal> <operator pos:start="15:32" pos:end="15:33">&amp;&amp;</operator>

            <operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:29"><name pos:start="17:14" pos:end="17:18">avctx</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:29">idct_algo</name></name> <operator pos:start="17:31" pos:end="17:32">==</operator> <name pos:start="17:34" pos:end="17:45">FF_IDCT_AUTO</name> <operator pos:start="17:47" pos:end="17:48">||</operator>

             <name pos:start="19:14" pos:end="19:29"><name pos:start="19:14" pos:end="19:18">avctx</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:29">idct_algo</name></name> <operator pos:start="19:31" pos:end="19:32">==</operator> <name pos:start="19:34" pos:end="19:51">FF_IDCT_SIMPLEAUTO</name> <operator pos:start="19:53" pos:end="19:54">||</operator>

             <name pos:start="21:14" pos:end="21:29"><name pos:start="21:14" pos:end="21:18">avctx</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:29">idct_algo</name></name> <operator pos:start="21:31" pos:end="21:32">==</operator> <name pos:start="21:34" pos:end="21:50">FF_IDCT_SIMPLEMMX</name><operator pos:start="21:51" pos:end="21:51">)</operator></expr>)</condition> <block pos:start="21:54" pos:end="31:9">{<block_content pos:start="23:17" pos:end="29:51">

                <expr_stmt pos:start="23:17" pos:end="23:54"><expr pos:start="23:17" pos:end="23:53"><name pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:17">c</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:27">idct_put</name></name>  <operator pos:start="23:30" pos:end="23:30">=</operator> <name pos:start="23:32" pos:end="23:53">ff_simple_idct_put_mmx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="25:17" pos:end="25:54"><expr pos:start="25:17" pos:end="25:53"><name pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:17">c</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:27">idct_add</name></name>  <operator pos:start="25:30" pos:end="25:30">=</operator> <name pos:start="25:32" pos:end="25:53">ff_simple_idct_add_mmx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:50"><expr pos:start="27:17" pos:end="27:49"><name pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:17">c</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:23">idct</name></name>      <operator pos:start="27:30" pos:end="27:30">=</operator> <name pos:start="27:32" pos:end="27:49">ff_simple_idct_mmx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:51"><expr pos:start="29:17" pos:end="29:50"><name pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:17">c</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:28">perm_type</name></name> <operator pos:start="29:30" pos:end="29:30">=</operator> <name pos:start="29:32" pos:end="29:50">FF_IDCT_PERM_SIMPLE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:32">(<expr pos:start="35:9" pos:end="35:31"><call pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:20">EXTERNAL_MMX</name><argument_list pos:start="35:21" pos:end="35:31">(<argument pos:start="35:22" pos:end="35:30"><expr pos:start="35:22" pos:end="35:30"><name pos:start="35:22" pos:end="35:30">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:34" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:65">

        <expr_stmt pos:start="37:9" pos:end="37:72"><expr pos:start="37:9" pos:end="37:71"><name pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:9">c</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:36">put_signed_pixels_clamped</name></name> <operator pos:start="37:38" pos:end="37:38">=</operator> <name pos:start="37:40" pos:end="37:71">ff_put_signed_pixels_clamped_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:65"><expr pos:start="39:9" pos:end="39:64"><name pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:9">c</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:29">put_pixels_clamped</name></name>        <operator pos:start="39:38" pos:end="39:38">=</operator> <name pos:start="39:40" pos:end="39:64">ff_put_pixels_clamped_mmx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:65"><expr pos:start="41:9" pos:end="41:64"><name pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:9">c</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:29">add_pixels_clamped</name></name>        <operator pos:start="41:38" pos:end="41:38">=</operator> <name pos:start="41:40" pos:end="41:64">ff_add_pixels_clamped_mmx</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:33">(<expr pos:start="45:9" pos:end="45:32"><call pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:21">EXTERNAL_SSE2</name><argument_list pos:start="45:22" pos:end="45:32">(<argument pos:start="45:23" pos:end="45:31"><expr pos:start="45:23" pos:end="45:31"><name pos:start="45:23" pos:end="45:31">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:35" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:66">

        <expr_stmt pos:start="47:9" pos:end="47:73"><expr pos:start="47:9" pos:end="47:72"><name pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:9">c</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:36">put_signed_pixels_clamped</name></name> <operator pos:start="47:38" pos:end="47:38">=</operator> <name pos:start="47:40" pos:end="47:72">ff_put_signed_pixels_clamped_sse2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:66"><expr pos:start="49:9" pos:end="49:65"><name pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:9">c</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:29">put_pixels_clamped</name></name>        <operator pos:start="49:38" pos:end="49:38">=</operator> <name pos:start="49:40" pos:end="49:65">ff_put_pixels_clamped_sse2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:66"><expr pos:start="51:9" pos:end="51:65"><name pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:9">c</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:29">add_pixels_clamped</name></name>        <operator pos:start="51:38" pos:end="51:38">=</operator> <name pos:start="51:40" pos:end="51:65">ff_add_pixels_clamped_sse2</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="93:5"><if pos:start="57:5" pos:end="93:5">if <condition pos:start="57:8" pos:end="65:45">(<expr pos:start="57:9" pos:end="65:44"><name pos:start="57:9" pos:end="57:19">ARCH_X86_64</name> <operator pos:start="57:21" pos:end="57:22">&amp;&amp;</operator>

        <name pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:13">avctx</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:34">bits_per_raw_sample</name></name> <operator pos:start="59:36" pos:end="59:37">==</operator> <literal type="number" pos:start="59:39" pos:end="59:40">10</literal> <operator pos:start="59:42" pos:end="59:43">&amp;&amp;</operator> <name pos:start="59:45" pos:end="59:57"><name pos:start="59:45" pos:end="59:49">avctx</name><operator pos:start="59:50" pos:end="59:51">-&gt;</operator><name pos:start="59:52" pos:end="59:57">lowres</name></name> <operator pos:start="59:59" pos:end="59:60">==</operator> <literal type="number" pos:start="59:62" pos:end="59:62">0</literal> <operator pos:start="59:64" pos:end="59:65">&amp;&amp;</operator>

        <operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:25"><name pos:start="61:10" pos:end="61:14">avctx</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:25">idct_algo</name></name> <operator pos:start="61:27" pos:end="61:28">==</operator> <name pos:start="61:30" pos:end="61:41">FF_IDCT_AUTO</name> <operator pos:start="61:43" pos:end="61:44">||</operator>

         <name pos:start="63:10" pos:end="63:25"><name pos:start="63:10" pos:end="63:14">avctx</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:25">idct_algo</name></name> <operator pos:start="63:27" pos:end="63:28">==</operator> <name pos:start="63:30" pos:end="63:47">FF_IDCT_SIMPLEAUTO</name> <operator pos:start="63:49" pos:end="63:50">||</operator>

         <name pos:start="65:10" pos:end="65:25"><name pos:start="65:10" pos:end="65:14">avctx</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:25">idct_algo</name></name> <operator pos:start="65:27" pos:end="65:28">==</operator> <name pos:start="65:30" pos:end="65:43">FF_IDCT_SIMPLE</name><operator pos:start="65:44" pos:end="65:44">)</operator></expr>)</condition> <block pos:start="65:47" pos:end="93:5">{<block_content pos:start="67:9" pos:end="91:9">

        <if_stmt pos:start="67:9" pos:end="79:9"><if pos:start="67:9" pos:end="79:9">if <condition pos:start="67:12" pos:end="67:37">(<expr pos:start="67:13" pos:end="67:36"><call pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:25">EXTERNAL_SSE2</name><argument_list pos:start="67:26" pos:end="67:36">(<argument pos:start="67:27" pos:end="67:35"><expr pos:start="67:27" pos:end="67:35"><name pos:start="67:27" pos:end="67:35">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:39" pos:end="79:9">{<block_content pos:start="69:13" pos:end="75:50">

            <expr_stmt pos:start="69:13" pos:end="69:53"><expr pos:start="69:13" pos:end="69:52"><name pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:13">c</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:23">idct_put</name></name>  <operator pos:start="69:26" pos:end="69:26">=</operator> <name pos:start="69:28" pos:end="69:52">ff_simple_idct10_put_sse2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:32"><expr pos:start="71:13" pos:end="71:31"><name pos:start="71:13" pos:end="71:23"><name pos:start="71:13" pos:end="71:13">c</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:23">idct_add</name></name>  <operator pos:start="71:26" pos:end="71:26">=</operator> <name pos:start="71:28" pos:end="71:31">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:49"><expr pos:start="73:13" pos:end="73:48"><name pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:13">c</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:19">idct</name></name>      <operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:48">ff_simple_idct10_sse2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:50"><expr pos:start="75:13" pos:end="75:49"><name pos:start="75:13" pos:end="75:24"><name pos:start="75:13" pos:end="75:13">c</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:24">perm_type</name></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <name pos:start="75:28" pos:end="75:49">FF_IDCT_PERM_TRANSPOSE</name></expr>;</expr_stmt>



        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="81:9" pos:end="91:9"><if pos:start="81:9" pos:end="91:9">if <condition pos:start="81:12" pos:end="81:36">(<expr pos:start="81:13" pos:end="81:35"><call pos:start="81:13" pos:end="81:35"><name pos:start="81:13" pos:end="81:24">EXTERNAL_AVX</name><argument_list pos:start="81:25" pos:end="81:35">(<argument pos:start="81:26" pos:end="81:34"><expr pos:start="81:26" pos:end="81:34"><name pos:start="81:26" pos:end="81:34">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:38" pos:end="91:9">{<block_content pos:start="83:13" pos:end="89:50">

            <expr_stmt pos:start="83:13" pos:end="83:52"><expr pos:start="83:13" pos:end="83:51"><name pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:13">c</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:23">idct_put</name></name>  <operator pos:start="83:26" pos:end="83:26">=</operator> <name pos:start="83:28" pos:end="83:51">ff_simple_idct10_put_avx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:32"><expr pos:start="85:13" pos:end="85:31"><name pos:start="85:13" pos:end="85:23"><name pos:start="85:13" pos:end="85:13">c</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:23">idct_add</name></name>  <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:31">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:48"><expr pos:start="87:13" pos:end="87:47"><name pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:13">c</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:19">idct</name></name>      <operator pos:start="87:26" pos:end="87:26">=</operator> <name pos:start="87:28" pos:end="87:47">ff_simple_idct10_avx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:50"><expr pos:start="89:13" pos:end="89:49"><name pos:start="89:13" pos:end="89:24"><name pos:start="89:13" pos:end="89:13">c</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:24">perm_type</name></name> <operator pos:start="89:26" pos:end="89:26">=</operator> <name pos:start="89:28" pos:end="89:49">FF_IDCT_PERM_TRANSPOSE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
