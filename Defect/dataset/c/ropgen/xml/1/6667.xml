<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6667.c" pos:tabs="8"><function pos:start="1:1" pos:end="118:33"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">readline_completion</name><parameter_list pos:start="1:32" pos:end="1:50">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:45">ReadLineState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">rs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="118:33">{<block_content pos:start="5:5" pos:end="118:33">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">Monitor</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">mon</name> <init pos:start="5:18" pos:end="5:26">= <expr pos:start="5:20" pos:end="5:26"><name pos:start="5:20" pos:end="5:26">cur_mon</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">i</name></decl>, <decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:17">j</name></decl>, <decl pos:start="7:20" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:28">max_width</name></decl>, <decl pos:start="7:31" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:31" pos:end="7:37">nb_cols</name></decl>, <decl pos:start="7:40" pos:end="7:49"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:40" pos:end="7:49">max_prefix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:17">cmdline</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:6">rs</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:22">nb_completions</name></name> <operator pos:start="13:24" pos:end="13:24">=</operator> <literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:11">cmdline</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:45"><name pos:start="17:15" pos:end="17:22">g_malloc</name><argument_list pos:start="17:23" pos:end="17:45">(<argument pos:start="17:24" pos:end="17:44"><expr pos:start="17:24" pos:end="17:44"><name pos:start="17:24" pos:end="17:40"><name pos:start="17:24" pos:end="17:25">rs</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:40">cmd_buf_index</name></name> <operator pos:start="17:42" pos:end="17:42">+</operator> <literal type="number" pos:start="17:44" pos:end="17:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:52"><expr pos:start="19:5" pos:end="19:51"><call pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:10">memcpy</name><argument_list pos:start="19:11" pos:end="19:51">(<argument pos:start="19:12" pos:end="19:18"><expr pos:start="19:12" pos:end="19:18"><name pos:start="19:12" pos:end="19:18">cmdline</name></expr></argument>, <argument pos:start="19:21" pos:end="19:31"><expr pos:start="19:21" pos:end="19:31"><name pos:start="19:21" pos:end="19:31"><name pos:start="19:21" pos:end="19:22">rs</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:31">cmd_buf</name></name></expr></argument>, <argument pos:start="19:34" pos:end="19:50"><expr pos:start="19:34" pos:end="19:50"><name pos:start="19:34" pos:end="19:50"><name pos:start="19:34" pos:end="19:35">rs</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:50">cmd_buf_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:11">cmdline</name><index pos:start="21:12" pos:end="21:30">[<expr pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:14">rs</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:29">cmd_buf_index</name></name></expr>]</index></name> <operator pos:start="21:32" pos:end="21:32">=</operator> <literal type="char" pos:start="21:34" pos:end="21:37">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><call pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:6">rs</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:25">completion_finder</name></name><argument_list pos:start="23:26" pos:end="23:34">(<argument pos:start="23:27" pos:end="23:33"><expr pos:start="23:27" pos:end="23:33"><name pos:start="23:27" pos:end="23:33">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:20"><expr pos:start="25:5" pos:end="25:19"><call pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:10">g_free</name><argument_list pos:start="25:11" pos:end="25:19">(<argument pos:start="25:12" pos:end="25:18"><expr pos:start="25:12" pos:end="25:18"><name pos:start="25:12" pos:end="25:18">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:29">/* no completion found */</comment>

    <if_stmt pos:start="31:5" pos:end="33:15"><if pos:start="31:5" pos:end="33:15">if <condition pos:start="31:8" pos:end="31:32">(<expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:10">rs</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:26">nb_completions</name></name> <operator pos:start="31:28" pos:end="31:29">&lt;=</operator> <literal type="number" pos:start="31:31" pos:end="31:31">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:15"><block_content pos:start="33:9" pos:end="33:15">

        <return pos:start="33:9" pos:end="33:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="118:33"><if pos:start="35:5" pos:end="118:33">if <condition pos:start="35:8" pos:end="35:32">(<expr pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:10">rs</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:26">nb_completions</name></name> <operator pos:start="35:28" pos:end="35:29">==</operator> <literal type="number" pos:start="35:31" pos:end="35:31">1</literal></expr>)</condition> <block pos:start="35:34" pos:end="118:33">{<block_content pos:start="37:9" pos:end="118:33">

        <expr_stmt pos:start="37:9" pos:end="37:41"><expr pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:11">len</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:40"><name pos:start="37:15" pos:end="37:20">strlen</name><argument_list pos:start="37:21" pos:end="37:40">(<argument pos:start="37:22" pos:end="37:39"><expr pos:start="37:22" pos:end="37:39"><name pos:start="37:22" pos:end="37:39"><name pos:start="37:22" pos:end="37:23">rs</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:36">completions</name><index pos:start="37:37" pos:end="37:39">[<expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="39:9" pos:end="50:5">for<control pos:start="39:12" pos:end="39:51">(<init pos:start="39:13" pos:end="39:37"><expr pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:13">i</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:36"><name pos:start="39:17" pos:end="39:18">rs</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:36">completion_index</name></name></expr>;</init> <condition pos:start="39:39" pos:end="39:46"><expr pos:start="39:39" pos:end="39:45"><name pos:start="39:39" pos:end="39:39">i</name> <operator pos:start="39:41" pos:end="39:41">&lt;</operator> <name pos:start="39:43" pos:end="39:45">len</name></expr>;</condition> <incr pos:start="39:48" pos:end="39:50"><expr pos:start="39:48" pos:end="39:50"><name pos:start="39:48" pos:end="39:48">i</name><operator pos:start="39:49" pos:end="39:50">++</operator></expr></incr>)</control> <block pos:start="39:53" pos:end="50:5">{<block_content pos:start="41:13" pos:end="48:42">

            <expr_stmt pos:start="41:13" pos:end="41:60"><expr pos:start="41:13" pos:end="41:59"><call pos:start="41:13" pos:end="41:59"><name pos:start="41:13" pos:end="41:32">readline_insert_char</name><argument_list pos:start="41:33" pos:end="41:59">(<argument pos:start="41:34" pos:end="41:35"><expr pos:start="41:34" pos:end="41:35"><name pos:start="41:34" pos:end="41:35">rs</name></expr></argument>, <argument pos:start="41:38" pos:end="41:58"><expr pos:start="41:38" pos:end="41:58"><name pos:start="41:38" pos:end="41:58"><name pos:start="41:38" pos:end="41:39">rs</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:52">completions</name><index pos:start="41:53" pos:end="41:55">[<expr pos:start="41:54" pos:end="41:54"><literal type="number" pos:start="41:54" pos:end="41:54">0</literal></expr>]</index><index pos:start="41:56" pos:end="41:58">[<expr pos:start="41:57" pos:end="41:57"><name pos:start="41:57" pos:end="41:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <comment type="block" pos:start="44:9" pos:end="44:70">/* extra space for next argument. XXX: make it more generic */</comment>

        <if_stmt pos:start="46:9" pos:end="48:42"><if pos:start="46:9" pos:end="48:42">if <condition pos:start="46:12" pos:end="46:58">(<expr pos:start="46:13" pos:end="46:57"><name pos:start="46:13" pos:end="46:15">len</name> <operator pos:start="46:17" pos:end="46:17">&gt;</operator> <literal type="number" pos:start="46:19" pos:end="46:19">0</literal> <operator pos:start="46:21" pos:end="46:22">&amp;&amp;</operator> <name pos:start="46:24" pos:end="46:50"><name pos:start="46:24" pos:end="46:25">rs</name><operator pos:start="46:26" pos:end="46:27">-&gt;</operator><name pos:start="46:28" pos:end="46:38">completions</name><index pos:start="46:39" pos:end="46:41">[<expr pos:start="46:40" pos:end="46:40"><literal type="number" pos:start="46:40" pos:end="46:40">0</literal></expr>]</index><index pos:start="46:42" pos:end="46:50">[<expr pos:start="46:43" pos:end="46:49"><name pos:start="46:43" pos:end="46:45">len</name> <operator pos:start="46:47" pos:end="46:47">-</operator> <literal type="number" pos:start="46:49" pos:end="46:49">1</literal></expr>]</index></name> <operator pos:start="46:52" pos:end="46:53">!=</operator> <literal type="char" pos:start="46:55" pos:end="46:57">'/'</literal></expr>)</condition><block type="pseudo" pos:start="48:13" pos:end="48:42"><block_content pos:start="48:13" pos:end="48:42">

            <expr_stmt pos:start="48:13" pos:end="48:42"><expr pos:start="48:13" pos:end="48:41"><call pos:start="48:13" pos:end="48:41"><name pos:start="48:13" pos:end="48:32">readline_insert_char</name><argument_list pos:start="48:33" pos:end="48:41">(<argument pos:start="48:34" pos:end="48:35"><expr pos:start="48:34" pos:end="48:35"><name pos:start="48:34" pos:end="48:35">rs</name></expr></argument>, <argument pos:start="48:38" pos:end="48:40"><expr pos:start="48:38" pos:end="48:40"><literal type="char" pos:start="48:38" pos:end="48:40">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for> <if_stmt pos:start="50:7" pos:end="118:33"><else pos:start="50:7" pos:end="118:33">else <block pos:start="50:12" pos:end="118:33">{<block_content pos:start="52:9" pos:end="118:33">

        <expr_stmt pos:start="52:9" pos:end="52:34"><expr pos:start="52:9" pos:end="52:33"><call pos:start="52:9" pos:end="52:33"><name pos:start="52:9" pos:end="52:22">monitor_printf</name><argument_list pos:start="52:23" pos:end="52:33">(<argument pos:start="52:24" pos:end="52:26"><expr pos:start="52:24" pos:end="52:26"><name pos:start="52:24" pos:end="52:26">mon</name></expr></argument>, <argument pos:start="52:29" pos:end="52:32"><expr pos:start="52:29" pos:end="52:32"><literal type="string" pos:start="52:29" pos:end="52:32">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="54:9" pos:end="54:22"><expr pos:start="54:9" pos:end="54:21"><name pos:start="54:9" pos:end="54:17">max_width</name> <operator pos:start="54:19" pos:end="54:19">=</operator> <literal type="number" pos:start="54:21" pos:end="54:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="56:9" pos:end="56:23"><expr pos:start="56:9" pos:end="56:22"><name pos:start="56:9" pos:end="56:18">max_prefix</name> <operator pos:start="56:20" pos:end="56:20">=</operator> <literal type="number" pos:start="56:22" pos:end="56:22">0</literal></expr>;</expr_stmt>	

        <for pos:start="58:9" pos:end="118:33">for<control pos:start="58:12" pos:end="58:47">(<init pos:start="58:13" pos:end="58:18"><expr pos:start="58:13" pos:end="58:17"><name pos:start="58:13" pos:end="58:13">i</name> <operator pos:start="58:15" pos:end="58:15">=</operator> <literal type="number" pos:start="58:17" pos:end="58:17">0</literal></expr>;</init> <condition pos:start="58:20" pos:end="58:42"><expr pos:start="58:20" pos:end="58:41"><name pos:start="58:20" pos:end="58:20">i</name> <operator pos:start="58:22" pos:end="58:22">&lt;</operator> <name pos:start="58:24" pos:end="58:41"><name pos:start="58:24" pos:end="58:25">rs</name><operator pos:start="58:26" pos:end="58:27">-&gt;</operator><name pos:start="58:28" pos:end="58:41">nb_completions</name></name></expr>;</condition> <incr pos:start="58:44" pos:end="58:46"><expr pos:start="58:44" pos:end="58:46"><name pos:start="58:44" pos:end="58:44">i</name><operator pos:start="58:45" pos:end="58:46">++</operator></expr></incr>)</control> <block pos:start="58:49" pos:end="118:33">{<block_content pos:start="60:13" pos:end="118:33">

            <expr_stmt pos:start="60:13" pos:end="60:45"><expr pos:start="60:13" pos:end="60:44"><name pos:start="60:13" pos:end="60:15">len</name> <operator pos:start="60:17" pos:end="60:17">=</operator> <call pos:start="60:19" pos:end="60:44"><name pos:start="60:19" pos:end="60:24">strlen</name><argument_list pos:start="60:25" pos:end="60:44">(<argument pos:start="60:26" pos:end="60:43"><expr pos:start="60:26" pos:end="60:43"><name pos:start="60:26" pos:end="60:43"><name pos:start="60:26" pos:end="60:27">rs</name><operator pos:start="60:28" pos:end="60:29">-&gt;</operator><name pos:start="60:30" pos:end="60:40">completions</name><index pos:start="60:41" pos:end="60:43">[<expr pos:start="60:42" pos:end="60:42"><name pos:start="60:42" pos:end="60:42">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="62:13" pos:end="118:33"><if pos:start="62:13" pos:end="66:13">if <condition pos:start="62:16" pos:end="62:21">(<expr pos:start="62:17" pos:end="62:20"><name pos:start="62:17" pos:end="62:17">i</name><operator pos:start="62:18" pos:end="62:19">==</operator><literal type="number" pos:start="62:20" pos:end="62:20">0</literal></expr>)</condition> <block pos:start="62:23" pos:end="66:13">{<block_content pos:start="64:17" pos:end="64:33">

                <expr_stmt pos:start="64:17" pos:end="64:33"><expr pos:start="64:17" pos:end="64:32"><name pos:start="64:17" pos:end="64:26">max_prefix</name> <operator pos:start="64:28" pos:end="64:28">=</operator> <name pos:start="64:30" pos:end="64:32">len</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="66:15" pos:end="118:33">else <block pos:start="66:20" pos:end="118:33">{<block_content pos:start="68:17" pos:end="118:33">

                <if_stmt pos:start="68:17" pos:end="70:37"><if pos:start="68:17" pos:end="70:37">if <condition pos:start="68:20" pos:end="68:37">(<expr pos:start="68:21" pos:end="68:36"><name pos:start="68:21" pos:end="68:23">len</name> <operator pos:start="68:25" pos:end="68:25">&lt;</operator> <name pos:start="68:27" pos:end="68:36">max_prefix</name></expr>)</condition><block type="pseudo" pos:start="70:21" pos:end="70:37"><block_content pos:start="70:21" pos:end="70:37">

                    <expr_stmt pos:start="70:21" pos:end="70:37"><expr pos:start="70:21" pos:end="70:36"><name pos:start="70:21" pos:end="70:30">max_prefix</name> <operator pos:start="70:32" pos:end="70:32">=</operator> <name pos:start="70:34" pos:end="70:36">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="72:17" pos:end="118:33">for<control pos:start="72:20" pos:end="72:43">(<init pos:start="72:21" pos:end="72:24"><expr pos:start="72:21" pos:end="72:23"><name pos:start="72:21" pos:end="72:21">j</name><operator pos:start="72:22" pos:end="72:22">=</operator><literal type="number" pos:start="72:23" pos:end="72:23">0</literal></expr>;</init> <condition pos:start="72:26" pos:end="72:38"><expr pos:start="72:26" pos:end="72:37"><name pos:start="72:26" pos:end="72:26">j</name><operator pos:start="72:27" pos:end="72:27">&lt;</operator><name pos:start="72:28" pos:end="72:37">max_prefix</name></expr>;</condition> <incr pos:start="72:40" pos:end="72:42"><expr pos:start="72:40" pos:end="72:42"><name pos:start="72:40" pos:end="72:40">j</name><operator pos:start="72:41" pos:end="72:42">++</operator></expr></incr>)</control> <block pos:start="72:45" pos:end="118:33">{<block_content pos:start="74:21" pos:end="118:33">

                    <if_stmt pos:start="74:21" pos:end="76:39"><if pos:start="74:21" pos:end="76:39">if <condition pos:start="74:24" pos:end="74:71">(<expr pos:start="74:25" pos:end="74:70"><name pos:start="74:25" pos:end="74:45"><name pos:start="74:25" pos:end="74:26">rs</name><operator pos:start="74:27" pos:end="74:28">-&gt;</operator><name pos:start="74:29" pos:end="74:39">completions</name><index pos:start="74:40" pos:end="74:42">[<expr pos:start="74:41" pos:end="74:41"><name pos:start="74:41" pos:end="74:41">i</name></expr>]</index><index pos:start="74:43" pos:end="74:45">[<expr pos:start="74:44" pos:end="74:44"><name pos:start="74:44" pos:end="74:44">j</name></expr>]</index></name> <operator pos:start="74:47" pos:end="74:48">!=</operator> <name pos:start="74:50" pos:end="74:70"><name pos:start="74:50" pos:end="74:51">rs</name><operator pos:start="74:52" pos:end="74:53">-&gt;</operator><name pos:start="74:54" pos:end="74:64">completions</name><index pos:start="74:65" pos:end="74:67">[<expr pos:start="74:66" pos:end="74:66"><literal type="number" pos:start="74:66" pos:end="74:66">0</literal></expr>]</index><index pos:start="74:68" pos:end="74:70">[<expr pos:start="74:69" pos:end="74:69"><name pos:start="74:69" pos:end="74:69">j</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="76:25" pos:end="76:39"><block_content pos:start="76:25" pos:end="76:39">

                        <expr_stmt pos:start="76:25" pos:end="76:39"><expr pos:start="76:25" pos:end="76:38"><name pos:start="76:25" pos:end="76:34">max_prefix</name> <operator pos:start="76:36" pos:end="76:36">=</operator> <name pos:start="76:38" pos:end="76:38">j</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="80:13" pos:end="82:32"><if pos:start="80:13" pos:end="82:32">if <condition pos:start="80:16" pos:end="80:32">(<expr pos:start="80:17" pos:end="80:31"><name pos:start="80:17" pos:end="80:19">len</name> <operator pos:start="80:21" pos:end="80:21">&gt;</operator> <name pos:start="80:23" pos:end="80:31">max_width</name></expr>)</condition><block type="pseudo" pos:start="82:17" pos:end="82:32"><block_content pos:start="82:17" pos:end="82:32">

                <expr_stmt pos:start="82:17" pos:end="82:32"><expr pos:start="82:17" pos:end="82:31"><name pos:start="82:17" pos:end="82:25">max_width</name> <operator pos:start="82:27" pos:end="82:27">=</operator> <name pos:start="82:29" pos:end="82:31">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>


        <if_stmt pos:start="85:9" pos:end="118:33"><if pos:start="85:9" pos:end="118:33">if <condition pos:start="85:12" pos:end="85:27">(<expr pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:22">max_prefix</name> <operator pos:start="85:24" pos:end="85:24">&gt;</operator> <literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="118:33"><block_content pos:start="87:13" pos:end="118:33"> 

            <for pos:start="87:13" pos:end="118:33">for<control pos:start="87:16" pos:end="87:62">(<init pos:start="87:17" pos:end="87:41"><expr pos:start="87:17" pos:end="87:40"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:40"><name pos:start="87:21" pos:end="87:22">rs</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:40">completion_index</name></name></expr>;</init> <condition pos:start="87:43" pos:end="87:57"><expr pos:start="87:43" pos:end="87:56"><name pos:start="87:43" pos:end="87:43">i</name> <operator pos:start="87:45" pos:end="87:45">&lt;</operator> <name pos:start="87:47" pos:end="87:56">max_prefix</name></expr>;</condition> <incr pos:start="87:59" pos:end="87:61"><expr pos:start="87:59" pos:end="87:61"><name pos:start="87:59" pos:end="87:59">i</name><operator pos:start="87:60" pos:end="87:61">++</operator></expr></incr>)</control> <block pos:start="87:64" pos:end="118:33">{<block_content pos:start="89:17" pos:end="118:33">

                <expr_stmt pos:start="89:17" pos:end="89:64"><expr pos:start="89:17" pos:end="89:63"><call pos:start="89:17" pos:end="89:63"><name pos:start="89:17" pos:end="89:36">readline_insert_char</name><argument_list pos:start="89:37" pos:end="89:63">(<argument pos:start="89:38" pos:end="89:39"><expr pos:start="89:38" pos:end="89:39"><name pos:start="89:38" pos:end="89:39">rs</name></expr></argument>, <argument pos:start="89:42" pos:end="89:62"><expr pos:start="89:42" pos:end="89:62"><name pos:start="89:42" pos:end="89:62"><name pos:start="89:42" pos:end="89:43">rs</name><operator pos:start="89:44" pos:end="89:45">-&gt;</operator><name pos:start="89:46" pos:end="89:56">completions</name><index pos:start="89:57" pos:end="89:59">[<expr pos:start="89:58" pos:end="89:58"><literal type="number" pos:start="89:58" pos:end="89:58">0</literal></expr>]</index><index pos:start="89:60" pos:end="89:62">[<expr pos:start="89:61" pos:end="89:61"><name pos:start="89:61" pos:end="89:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt pos:start="92:9" pos:end="92:23"><expr pos:start="92:9" pos:end="92:22"><name pos:start="92:9" pos:end="92:17">max_width</name> <operator pos:start="92:19" pos:end="92:20">+=</operator> <literal type="number" pos:start="92:22" pos:end="92:22">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="94:9" pos:end="100:27"><if pos:start="94:9" pos:end="96:27">if <condition pos:start="94:12" pos:end="94:27">(<expr pos:start="94:13" pos:end="94:26"><name pos:start="94:13" pos:end="94:21">max_width</name> <operator pos:start="94:23" pos:end="94:23">&lt;</operator> <literal type="number" pos:start="94:25" pos:end="94:26">10</literal></expr>)</condition><block type="pseudo" pos:start="96:13" pos:end="96:27"><block_content pos:start="96:13" pos:end="96:27">

            <expr_stmt pos:start="96:13" pos:end="96:27"><expr pos:start="96:13" pos:end="96:26"><name pos:start="96:13" pos:end="96:21">max_width</name> <operator pos:start="96:23" pos:end="96:23">=</operator> <literal type="number" pos:start="96:25" pos:end="96:26">10</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="98:9" pos:end="100:27">else if <condition pos:start="98:17" pos:end="98:32">(<expr pos:start="98:18" pos:end="98:31"><name pos:start="98:18" pos:end="98:26">max_width</name> <operator pos:start="98:28" pos:end="98:28">&gt;</operator> <literal type="number" pos:start="98:30" pos:end="98:31">80</literal></expr>)</condition><block type="pseudo" pos:start="100:13" pos:end="100:27"><block_content pos:start="100:13" pos:end="100:27">

            <expr_stmt pos:start="100:13" pos:end="100:27"><expr pos:start="100:13" pos:end="100:26"><name pos:start="100:13" pos:end="100:21">max_width</name> <operator pos:start="100:23" pos:end="100:23">=</operator> <literal type="number" pos:start="100:25" pos:end="100:26">80</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="102:9" pos:end="102:33"><expr pos:start="102:9" pos:end="102:32"><name pos:start="102:9" pos:end="102:15">nb_cols</name> <operator pos:start="102:17" pos:end="102:17">=</operator> <literal type="number" pos:start="102:19" pos:end="102:20">80</literal> <operator pos:start="102:22" pos:end="102:22">/</operator> <name pos:start="102:24" pos:end="102:32">max_width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="104:9" pos:end="104:14"><expr pos:start="104:9" pos:end="104:13"><name pos:start="104:9" pos:end="104:9">j</name> <operator pos:start="104:11" pos:end="104:11">=</operator> <literal type="number" pos:start="104:13" pos:end="104:13">0</literal></expr>;</expr_stmt>

        <for pos:start="106:9" pos:end="118:33">for<control pos:start="106:12" pos:end="106:47">(<init pos:start="106:13" pos:end="106:18"><expr pos:start="106:13" pos:end="106:17"><name pos:start="106:13" pos:end="106:13">i</name> <operator pos:start="106:15" pos:end="106:15">=</operator> <literal type="number" pos:start="106:17" pos:end="106:17">0</literal></expr>;</init> <condition pos:start="106:20" pos:end="106:42"><expr pos:start="106:20" pos:end="106:41"><name pos:start="106:20" pos:end="106:20">i</name> <operator pos:start="106:22" pos:end="106:22">&lt;</operator> <name pos:start="106:24" pos:end="106:41"><name pos:start="106:24" pos:end="106:25">rs</name><operator pos:start="106:26" pos:end="106:27">-&gt;</operator><name pos:start="106:28" pos:end="106:41">nb_completions</name></name></expr>;</condition> <incr pos:start="106:44" pos:end="106:46"><expr pos:start="106:44" pos:end="106:46"><name pos:start="106:44" pos:end="106:44">i</name><operator pos:start="106:45" pos:end="106:46">++</operator></expr></incr>)</control> <block pos:start="106:49" pos:end="118:33">{<block_content pos:start="108:13" pos:end="118:33">

            <expr_stmt pos:start="108:13" pos:end="108:75"><expr pos:start="108:13" pos:end="108:74"><call pos:start="108:13" pos:end="108:74"><name pos:start="108:13" pos:end="108:26">monitor_printf</name><argument_list pos:start="108:27" pos:end="108:74">(<argument pos:start="108:28" pos:end="108:34"><expr pos:start="108:28" pos:end="108:34"><name pos:start="108:28" pos:end="108:34"><name pos:start="108:28" pos:end="108:29">rs</name><operator pos:start="108:30" pos:end="108:31">-&gt;</operator><name pos:start="108:32" pos:end="108:34">mon</name></name></expr></argument>, <argument pos:start="108:37" pos:end="108:42"><expr pos:start="108:37" pos:end="108:42"><literal type="string" pos:start="108:37" pos:end="108:42">"%-*s"</literal></expr></argument>, <argument pos:start="108:45" pos:end="108:53"><expr pos:start="108:45" pos:end="108:53"><name pos:start="108:45" pos:end="108:53">max_width</name></expr></argument>, <argument pos:start="108:56" pos:end="108:73"><expr pos:start="108:56" pos:end="108:73"><name pos:start="108:56" pos:end="108:73"><name pos:start="108:56" pos:end="108:57">rs</name><operator pos:start="108:58" pos:end="108:59">-&gt;</operator><name pos:start="108:60" pos:end="108:70">completions</name><index pos:start="108:71" pos:end="108:73">[<expr pos:start="108:72" pos:end="108:72"><name pos:start="108:72" pos:end="108:72">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="110:13" pos:end="118:33"><if pos:start="110:13" pos:end="118:33">if <condition pos:start="110:16" pos:end="110:64">(<expr pos:start="110:17" pos:end="110:63"><operator pos:start="110:17" pos:end="110:18">++</operator><name pos:start="110:19" pos:end="110:19">j</name> <operator pos:start="110:21" pos:end="110:22">==</operator> <name pos:start="110:24" pos:end="110:30">nb_cols</name> <operator pos:start="110:32" pos:end="110:33">||</operator> <name pos:start="110:35" pos:end="110:35">i</name> <operator pos:start="110:37" pos:end="110:38">==</operator> <operator pos:start="110:40" pos:end="110:40">(</operator><name pos:start="110:41" pos:end="110:58"><name pos:start="110:41" pos:end="110:42">rs</name><operator pos:start="110:43" pos:end="110:44">-&gt;</operator><name pos:start="110:45" pos:end="110:58">nb_completions</name></name> <operator pos:start="110:60" pos:end="110:60">-</operator> <literal type="number" pos:start="110:62" pos:end="110:62">1</literal><operator pos:start="110:63" pos:end="110:63">)</operator></expr>)</condition> <block pos:start="110:66" pos:end="118:33">{<block_content pos:start="112:17" pos:end="118:33">

                <expr_stmt pos:start="112:17" pos:end="112:46"><expr pos:start="112:17" pos:end="112:45"><call pos:start="112:17" pos:end="112:45"><name pos:start="112:17" pos:end="112:30">monitor_printf</name><argument_list pos:start="112:31" pos:end="112:45">(<argument pos:start="112:32" pos:end="112:38"><expr pos:start="112:32" pos:end="112:38"><name pos:start="112:32" pos:end="112:38"><name pos:start="112:32" pos:end="112:33">rs</name><operator pos:start="112:34" pos:end="112:35">-&gt;</operator><name pos:start="112:36" pos:end="112:38">mon</name></name></expr></argument>, <argument pos:start="112:41" pos:end="112:44"><expr pos:start="112:41" pos:end="112:44"><literal type="string" pos:start="112:41" pos:end="112:44">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="114:17" pos:end="114:22"><expr pos:start="114:17" pos:end="114:21"><name pos:start="114:17" pos:end="114:17">j</name> <operator pos:start="114:19" pos:end="114:19">=</operator> <literal type="number" pos:start="114:21" pos:end="114:21">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="118:9" pos:end="118:33"><expr pos:start="118:9" pos:end="118:32"><call pos:start="118:9" pos:end="118:32"><name pos:start="118:9" pos:end="118:28">readline_show_prompt</name><argument_list pos:start="118:29" pos:end="118:32">(<argument pos:start="118:30" pos:end="118:31"><expr pos:start="118:30" pos:end="118:31"><name pos:start="118:30" pos:end="118:31">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></function>




</unit>
