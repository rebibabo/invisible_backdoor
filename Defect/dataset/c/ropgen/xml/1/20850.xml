<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20850.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">epic_decode_tile</name><parameter_list pos:start="1:28" pos:end="3:55">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:39">ePICContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">dc</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">out</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:74"><decl pos:start="1:60" pos:end="1:74"><type pos:start="1:60" pos:end="1:74"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:74">tile_height</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:42">tile_width</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:54"><decl pos:start="3:45" pos:end="3:54"><type pos:start="3:45" pos:end="3:54"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:54">stride</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="117:1">{<block_content pos:start="7:5" pos:end="115:13">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">pix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:62"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint32_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:22">curr_row</name> <init pos:start="11:24" pos:end="11:29">= <expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">NULL</name></expr></init></decl>, <decl pos:start="11:32" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:14"><modifier pos:start="11:32" pos:end="11:32">*</modifier></type><name pos:start="11:33" pos:end="11:41">above_row</name> <init pos:start="11:43" pos:end="11:48">= <expr pos:start="11:45" pos:end="11:48"><name pos:start="11:45" pos:end="11:48">NULL</name></expr></init></decl>, <decl pos:start="11:51" pos:end="11:61"><type ref="prev" pos:start="11:5" pos:end="11:14"><modifier pos:start="11:51" pos:end="11:51">*</modifier></type><name pos:start="11:52" pos:end="11:61">above2_row</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="111:5">for <control pos:start="15:9" pos:end="15:52">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">y</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:32"><expr pos:start="15:17" pos:end="15:31"><name pos:start="15:17" pos:end="15:17">y</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:31">tile_height</name></expr>;</condition> <incr pos:start="15:34" pos:end="15:51"><expr pos:start="15:34" pos:end="15:36"><name pos:start="15:34" pos:end="15:34">y</name><operator pos:start="15:35" pos:end="15:36">++</operator></expr><operator pos:start="15:37" pos:end="15:37">,</operator> <expr pos:start="15:39" pos:end="15:51"><name pos:start="15:39" pos:end="15:41">out</name> <operator pos:start="15:43" pos:end="15:44">+=</operator> <name pos:start="15:46" pos:end="15:51">stride</name></expr></incr>)</control> <block pos:start="15:54" pos:end="111:5">{<block_content pos:start="17:9" pos:end="109:9">

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:18">above2_row</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:30">above_row</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:17">above_row</name>  <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:29">curr_row</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:38"><expr pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:16">curr_row</name>   <operator pos:start="21:20" pos:end="21:20">=</operator> <operator pos:start="21:22" pos:end="21:22">(</operator><name pos:start="21:23" pos:end="21:30">uint32_t</name> <operator pos:start="21:32" pos:end="21:32">*</operator><operator pos:start="21:33" pos:end="21:33">)</operator> <name pos:start="21:35" pos:end="21:37">out</name></expr>;</expr_stmt>



        <for pos:start="25:9" pos:end="109:9">for <control pos:start="25:13" pos:end="25:58">(<init pos:start="25:14" pos:end="25:41"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">x</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr><operator pos:start="25:19" pos:end="25:19">,</operator> <expr pos:start="25:21" pos:end="25:40"><name pos:start="25:21" pos:end="25:36"><name pos:start="25:21" pos:end="25:22">dc</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:36">next_run_pos</name></name> <operator pos:start="25:38" pos:end="25:38">=</operator> <literal type="number" pos:start="25:40" pos:end="25:40">0</literal></expr>;</init> <condition pos:start="25:43" pos:end="25:57"><expr pos:start="25:43" pos:end="25:56"><name pos:start="25:43" pos:end="25:43">x</name> <operator pos:start="25:45" pos:end="25:45">&lt;</operator> <name pos:start="25:47" pos:end="25:56">tile_width</name></expr>;</condition><incr/>)</control> <block pos:start="25:60" pos:end="109:9">{<block_content pos:start="27:13" pos:end="107:13">

            <if_stmt pos:start="27:13" pos:end="29:43"><if pos:start="27:13" pos:end="29:43">if <condition pos:start="27:16" pos:end="27:32">(<expr pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:18">dc</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:27">els_ctx</name><operator pos:start="27:28" pos:end="27:28">.</operator><name pos:start="27:29" pos:end="27:31">err</name></name></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:43"><block_content pos:start="29:17" pos:end="29:43">

                <return pos:start="29:17" pos:end="29:43">return <expr pos:start="29:24" pos:end="29:42"><name pos:start="29:24" pos:end="29:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="29:45" pos:end="29:83">// bail out in the case of ELS overflow</comment>



            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:15">pix</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:33"><name pos:start="33:19" pos:end="33:26">curr_row</name><index pos:start="33:27" pos:end="33:33">[<expr pos:start="33:28" pos:end="33:32"><name pos:start="33:28" pos:end="33:28">x</name> <operator pos:start="33:30" pos:end="33:30">-</operator> <literal type="number" pos:start="33:32" pos:end="33:32">1</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="line" pos:start="33:36" pos:end="33:49">// get W pixel</comment>



            <if_stmt pos:start="37:13" pos:end="107:13"><if pos:start="37:13" pos:end="49:13">if <condition pos:start="37:16" pos:end="43:62">(<expr pos:start="37:17" pos:end="43:61"><name pos:start="37:17" pos:end="37:17">y</name> <operator pos:start="37:19" pos:end="37:20">&gt;=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">1</literal> <operator pos:start="37:24" pos:end="37:25">&amp;&amp;</operator> <name pos:start="37:27" pos:end="37:27">x</name> <operator pos:start="37:29" pos:end="37:30">&gt;=</operator> <literal type="number" pos:start="37:32" pos:end="37:32">2</literal> <operator pos:start="37:34" pos:end="37:35">&amp;&amp;</operator>

                <name pos:start="39:17" pos:end="39:19">pix</name> <operator pos:start="39:21" pos:end="39:22">!=</operator> <name pos:start="39:24" pos:end="39:38"><name pos:start="39:24" pos:end="39:31">curr_row</name><index pos:start="39:32" pos:end="39:38">[<expr pos:start="39:33" pos:end="39:37"><name pos:start="39:33" pos:end="39:33">x</name> <operator pos:start="39:35" pos:end="39:35">-</operator> <literal type="number" pos:start="39:37" pos:end="39:37">2</literal></expr>]</index></name>  <operator pos:start="39:41" pos:end="39:42">&amp;&amp;</operator> <name pos:start="39:44" pos:end="39:46">pix</name> <operator pos:start="39:48" pos:end="39:49">!=</operator> <name pos:start="39:51" pos:end="39:66"><name pos:start="39:51" pos:end="39:59">above_row</name><index pos:start="39:60" pos:end="39:66">[<expr pos:start="39:61" pos:end="39:65"><name pos:start="39:61" pos:end="39:61">x</name> <operator pos:start="39:63" pos:end="39:63">-</operator> <literal type="number" pos:start="39:65" pos:end="39:65">1</literal></expr>]</index></name> <operator pos:start="39:68" pos:end="39:69">&amp;&amp;</operator>

                <name pos:start="41:17" pos:end="41:19">pix</name> <operator pos:start="41:21" pos:end="41:22">!=</operator> <name pos:start="41:24" pos:end="41:39"><name pos:start="41:24" pos:end="41:32">above_row</name><index pos:start="41:33" pos:end="41:39">[<expr pos:start="41:34" pos:end="41:38"><name pos:start="41:34" pos:end="41:34">x</name> <operator pos:start="41:36" pos:end="41:36">-</operator> <literal type="number" pos:start="41:38" pos:end="41:38">2</literal></expr>]</index></name> <operator pos:start="41:41" pos:end="41:42">&amp;&amp;</operator> <name pos:start="41:44" pos:end="41:46">pix</name> <operator pos:start="41:48" pos:end="41:49">!=</operator> <name pos:start="41:51" pos:end="41:62"><name pos:start="41:51" pos:end="41:59">above_row</name><index pos:start="41:60" pos:end="41:62">[<expr pos:start="41:61" pos:end="41:61"><name pos:start="41:61" pos:end="41:61">x</name></expr>]</index></name> <operator pos:start="41:64" pos:end="41:65">&amp;&amp;</operator>

                <operator pos:start="43:17" pos:end="43:17">!</operator><call pos:start="43:18" pos:end="43:61"><name pos:start="43:18" pos:end="43:45">epic_cache_entries_for_pixel</name><argument_list pos:start="43:46" pos:end="43:61">(<argument pos:start="43:47" pos:end="43:55"><expr pos:start="43:47" pos:end="43:55"><operator pos:start="43:47" pos:end="43:47">&amp;</operator><name pos:start="43:48" pos:end="43:55"><name pos:start="43:48" pos:end="43:49">dc</name><operator pos:start="43:50" pos:end="43:51">-&gt;</operator><name pos:start="43:52" pos:end="43:55">hash</name></name></expr></argument>, <argument pos:start="43:58" pos:end="43:60"><expr pos:start="43:58" pos:end="43:60"><name pos:start="43:58" pos:end="43:60">pix</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:64" pos:end="49:13">{<block_content pos:start="45:17" pos:end="47:20">

                <expr_stmt pos:start="45:17" pos:end="45:84"><expr pos:start="45:17" pos:end="45:83"><name pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:24">curr_row</name><index pos:start="45:25" pos:end="45:27">[<expr pos:start="45:26" pos:end="45:26"><name pos:start="45:26" pos:end="45:26">x</name></expr>]</index></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <call pos:start="45:31" pos:end="45:83"><name pos:start="45:31" pos:end="45:52">epic_decode_pixel_pred</name><argument_list pos:start="45:53" pos:end="45:83">(<argument pos:start="45:54" pos:end="45:55"><expr pos:start="45:54" pos:end="45:55"><name pos:start="45:54" pos:end="45:55">dc</name></expr></argument>, <argument pos:start="45:58" pos:end="45:58"><expr pos:start="45:58" pos:end="45:58"><name pos:start="45:58" pos:end="45:58">x</name></expr></argument>, <argument pos:start="45:61" pos:end="45:61"><expr pos:start="45:61" pos:end="45:61"><name pos:start="45:61" pos:end="45:61">y</name></expr></argument>, <argument pos:start="45:64" pos:end="45:71"><expr pos:start="45:64" pos:end="45:71"><name pos:start="45:64" pos:end="45:71">curr_row</name></expr></argument>, <argument pos:start="45:74" pos:end="45:82"><expr pos:start="45:74" pos:end="45:82"><name pos:start="45:74" pos:end="45:82">above_row</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:20"><expr pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:17">x</name><operator pos:start="47:18" pos:end="47:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="49:15" pos:end="107:13">else <block pos:start="49:20" pos:end="107:13">{<block_content pos:start="51:17" pos:end="105:38">

                <decl_stmt pos:start="51:17" pos:end="51:35"><decl pos:start="51:17" pos:end="51:29"><type pos:start="51:17" pos:end="51:19"><name pos:start="51:17" pos:end="51:19">int</name></type> <name pos:start="51:21" pos:end="51:29">got_pixel</name></decl>, <decl pos:start="51:32" pos:end="51:34"><type ref="prev" pos:start="51:17" pos:end="51:19"/><name pos:start="51:32" pos:end="51:34">run</name></decl>;</decl_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:34"><expr pos:start="53:17" pos:end="53:33"><name pos:start="53:17" pos:end="53:29"><name pos:start="53:17" pos:end="53:18">dc</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:29">stack_pos</name></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <literal type="number" pos:start="53:33" pos:end="53:33">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="53:36" pos:end="53:49">// empty stack</comment>



                <if_stmt pos:start="57:17" pos:end="69:79"><if pos:start="57:17" pos:end="63:17">if <condition pos:start="57:20" pos:end="57:58">(<expr pos:start="57:21" pos:end="57:57"><name pos:start="57:21" pos:end="57:21">y</name> <operator pos:start="57:23" pos:end="57:23">&lt;</operator> <literal type="number" pos:start="57:25" pos:end="57:25">2</literal> <operator pos:start="57:27" pos:end="57:28">||</operator> <name pos:start="57:30" pos:end="57:30">x</name> <operator pos:start="57:32" pos:end="57:32">&lt;</operator> <literal type="number" pos:start="57:34" pos:end="57:34">2</literal> <operator pos:start="57:36" pos:end="57:37">||</operator> <name pos:start="57:39" pos:end="57:39">x</name> <operator pos:start="57:41" pos:end="57:42">==</operator> <name pos:start="57:44" pos:end="57:53">tile_width</name> <operator pos:start="57:55" pos:end="57:55">-</operator> <literal type="number" pos:start="57:57" pos:end="57:57">1</literal></expr>)</condition> <block pos:start="57:60" pos:end="63:17">{<block_content pos:start="59:21" pos:end="61:87">

                    <expr_stmt pos:start="59:21" pos:end="59:34"><expr pos:start="59:21" pos:end="59:33"><name pos:start="59:21" pos:end="59:23">run</name>       <operator pos:start="59:31" pos:end="59:31">=</operator> <literal type="number" pos:start="59:33" pos:end="59:33">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="61:21" pos:end="61:87"><expr pos:start="61:21" pos:end="61:86"><name pos:start="61:21" pos:end="61:29">got_pixel</name> <operator pos:start="61:31" pos:end="61:31">=</operator> <call pos:start="61:33" pos:end="61:86"><name pos:start="61:33" pos:end="61:49">epic_handle_edges</name><argument_list pos:start="61:50" pos:end="61:86">(<argument pos:start="61:51" pos:end="61:52"><expr pos:start="61:51" pos:end="61:52"><name pos:start="61:51" pos:end="61:52">dc</name></expr></argument>, <argument pos:start="61:55" pos:end="61:55"><expr pos:start="61:55" pos:end="61:55"><name pos:start="61:55" pos:end="61:55">x</name></expr></argument>, <argument pos:start="61:58" pos:end="61:58"><expr pos:start="61:58" pos:end="61:58"><name pos:start="61:58" pos:end="61:58">y</name></expr></argument>, <argument pos:start="61:61" pos:end="61:68"><expr pos:start="61:61" pos:end="61:68"><name pos:start="61:61" pos:end="61:68">curr_row</name></expr></argument>, <argument pos:start="61:71" pos:end="61:79"><expr pos:start="61:71" pos:end="61:79"><name pos:start="61:71" pos:end="61:79">above_row</name></expr></argument>, <argument pos:start="61:82" pos:end="61:85"><expr pos:start="61:82" pos:end="61:85"><operator pos:start="61:82" pos:end="61:82">&amp;</operator><name pos:start="61:83" pos:end="61:85">pix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="63:19" pos:end="69:79">else<block type="pseudo" pos:start="65:21" pos:end="69:79"><block_content pos:start="65:21" pos:end="69:79">

                    <expr_stmt pos:start="65:21" pos:end="69:79"><expr pos:start="65:21" pos:end="69:78"><name pos:start="65:21" pos:end="65:29">got_pixel</name> <operator pos:start="65:31" pos:end="65:31">=</operator> <call pos:start="65:33" pos:end="69:78"><name pos:start="65:33" pos:end="65:54">epic_decode_run_length</name><argument_list pos:start="65:55" pos:end="69:78">(<argument pos:start="65:56" pos:end="65:57"><expr pos:start="65:56" pos:end="65:57"><name pos:start="65:56" pos:end="65:57">dc</name></expr></argument>, <argument pos:start="65:60" pos:end="65:60"><expr pos:start="65:60" pos:end="65:60"><name pos:start="65:60" pos:end="65:60">x</name></expr></argument>, <argument pos:start="65:63" pos:end="65:63"><expr pos:start="65:63" pos:end="65:63"><name pos:start="65:63" pos:end="65:63">y</name></expr></argument>, <argument pos:start="65:66" pos:end="65:75"><expr pos:start="65:66" pos:end="65:75"><name pos:start="65:66" pos:end="65:75">tile_width</name></expr></argument>,

                                                       <argument pos:start="67:56" pos:end="67:63"><expr pos:start="67:56" pos:end="67:63"><name pos:start="67:56" pos:end="67:63">curr_row</name></expr></argument>, <argument pos:start="67:66" pos:end="67:74"><expr pos:start="67:66" pos:end="67:74"><name pos:start="67:66" pos:end="67:74">above_row</name></expr></argument>,

                                                       <argument pos:start="69:56" pos:end="69:65"><expr pos:start="69:56" pos:end="69:65"><name pos:start="69:56" pos:end="69:65">above2_row</name></expr></argument>, <argument pos:start="69:68" pos:end="69:71"><expr pos:start="69:68" pos:end="69:71"><operator pos:start="69:68" pos:end="69:68">&amp;</operator><name pos:start="69:69" pos:end="69:71">pix</name></expr></argument>, <argument pos:start="69:74" pos:end="69:77"><expr pos:start="69:74" pos:end="69:77"><operator pos:start="69:74" pos:end="69:74">&amp;</operator><name pos:start="69:75" pos:end="69:77">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <if_stmt pos:start="73:17" pos:end="101:17"><if pos:start="73:17" pos:end="101:17">if <condition pos:start="73:20" pos:end="77:76">(<expr pos:start="73:21" pos:end="77:75"><operator pos:start="73:21" pos:end="73:21">!</operator><name pos:start="73:22" pos:end="73:30">got_pixel</name> <operator pos:start="73:32" pos:end="73:33">&amp;&amp;</operator> <operator pos:start="73:35" pos:end="73:35">!</operator><call pos:start="73:36" pos:end="77:75"><name pos:start="73:36" pos:end="73:58">epic_predict_from_NW_NE</name><argument_list pos:start="73:59" pos:end="77:75">(<argument pos:start="73:60" pos:end="73:61"><expr pos:start="73:60" pos:end="73:61"><name pos:start="73:60" pos:end="73:61">dc</name></expr></argument>, <argument pos:start="73:64" pos:end="73:64"><expr pos:start="73:64" pos:end="73:64"><name pos:start="73:64" pos:end="73:64">x</name></expr></argument>, <argument pos:start="73:67" pos:end="73:67"><expr pos:start="73:67" pos:end="73:67"><name pos:start="73:67" pos:end="73:67">y</name></expr></argument>, <argument pos:start="73:70" pos:end="73:72"><expr pos:start="73:70" pos:end="73:72"><name pos:start="73:70" pos:end="73:72">run</name></expr></argument>,

                                                           <argument pos:start="75:60" pos:end="75:69"><expr pos:start="75:60" pos:end="75:69"><name pos:start="75:60" pos:end="75:69">tile_width</name></expr></argument>, <argument pos:start="75:72" pos:end="75:79"><expr pos:start="75:72" pos:end="75:79"><name pos:start="75:72" pos:end="75:79">curr_row</name></expr></argument>,

                                                           <argument pos:start="77:60" pos:end="77:68"><expr pos:start="77:60" pos:end="77:68"><name pos:start="77:60" pos:end="77:68">above_row</name></expr></argument>, <argument pos:start="77:71" pos:end="77:74"><expr pos:start="77:71" pos:end="77:74"><operator pos:start="77:71" pos:end="77:71">&amp;</operator><name pos:start="77:72" pos:end="77:74">pix</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:78" pos:end="101:17">{<block_content pos:start="79:21" pos:end="99:21">

                    <decl_stmt pos:start="79:21" pos:end="79:55"><decl pos:start="79:21" pos:end="79:54"><type pos:start="79:21" pos:end="79:28"><name pos:start="79:21" pos:end="79:28">uint32_t</name></type> <name pos:start="79:30" pos:end="79:36">ref_pix</name> <init pos:start="79:38" pos:end="79:54">= <expr pos:start="79:40" pos:end="79:54"><name pos:start="79:40" pos:end="79:54"><name pos:start="79:40" pos:end="79:47">curr_row</name><index pos:start="79:48" pos:end="79:54">[<expr pos:start="79:49" pos:end="79:53"><name pos:start="79:49" pos:end="79:49">x</name> <operator pos:start="79:51" pos:end="79:51">-</operator> <literal type="number" pos:start="79:53" pos:end="79:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="81:21" pos:end="99:21"><if pos:start="81:21" pos:end="99:21">if <condition pos:start="81:24" pos:end="81:73">(<expr pos:start="81:25" pos:end="81:72"><operator pos:start="81:25" pos:end="81:25">!</operator><name pos:start="81:26" pos:end="81:26">x</name> <operator pos:start="81:28" pos:end="81:29">||</operator> <operator pos:start="81:31" pos:end="81:31">!</operator><call pos:start="81:32" pos:end="81:72"><name pos:start="81:32" pos:end="81:53">epic_decode_from_cache</name><argument_list pos:start="81:54" pos:end="81:72">(<argument pos:start="81:55" pos:end="81:56"><expr pos:start="81:55" pos:end="81:56"><name pos:start="81:55" pos:end="81:56">dc</name></expr></argument>, <argument pos:start="81:59" pos:end="81:65"><expr pos:start="81:59" pos:end="81:65"><name pos:start="81:59" pos:end="81:65">ref_pix</name></expr></argument>, <argument pos:start="81:68" pos:end="81:71"><expr pos:start="81:68" pos:end="81:71"><operator pos:start="81:68" pos:end="81:68">&amp;</operator><name pos:start="81:69" pos:end="81:71">pix</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:75" pos:end="99:21">{<block_content pos:start="83:25" pos:end="97:25">

                        <expr_stmt pos:start="83:25" pos:end="83:84"><expr pos:start="83:25" pos:end="83:83"><name pos:start="83:25" pos:end="83:27">pix</name> <operator pos:start="83:29" pos:end="83:29">=</operator> <call pos:start="83:31" pos:end="83:83"><name pos:start="83:31" pos:end="83:52">epic_decode_pixel_pred</name><argument_list pos:start="83:53" pos:end="83:83">(<argument pos:start="83:54" pos:end="83:55"><expr pos:start="83:54" pos:end="83:55"><name pos:start="83:54" pos:end="83:55">dc</name></expr></argument>, <argument pos:start="83:58" pos:end="83:58"><expr pos:start="83:58" pos:end="83:58"><name pos:start="83:58" pos:end="83:58">x</name></expr></argument>, <argument pos:start="83:61" pos:end="83:61"><expr pos:start="83:61" pos:end="83:61"><name pos:start="83:61" pos:end="83:61">y</name></expr></argument>, <argument pos:start="83:64" pos:end="83:71"><expr pos:start="83:64" pos:end="83:71"><name pos:start="83:64" pos:end="83:71">curr_row</name></expr></argument>, <argument pos:start="83:74" pos:end="83:82"><expr pos:start="83:74" pos:end="83:82"><name pos:start="83:74" pos:end="83:82">above_row</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="85:25" pos:end="97:25"><if pos:start="85:25" pos:end="97:25">if <condition pos:start="85:28" pos:end="85:30">(<expr pos:start="85:29" pos:end="85:29"><name pos:start="85:29" pos:end="85:29">x</name></expr>)</condition> <block pos:start="85:32" pos:end="97:25">{<block_content pos:start="87:29" pos:end="95:43">

                            <decl_stmt pos:start="87:29" pos:end="91:67"><decl pos:start="87:29" pos:end="91:66"><type pos:start="87:29" pos:end="87:31"><name pos:start="87:29" pos:end="87:31">int</name></type> <name pos:start="87:33" pos:end="87:35">ret</name> <init pos:start="87:37" pos:end="91:66">= <expr pos:start="87:39" pos:end="91:66"><call pos:start="87:39" pos:end="91:66"><name pos:start="87:39" pos:end="87:61">epic_add_pixel_to_cache</name><argument_list pos:start="87:62" pos:end="91:66">(<argument pos:start="87:63" pos:end="87:71"><expr pos:start="87:63" pos:end="87:71"><operator pos:start="87:63" pos:end="87:63">&amp;</operator><name pos:start="87:64" pos:end="87:71"><name pos:start="87:64" pos:end="87:65">dc</name><operator pos:start="87:66" pos:end="87:67">-&gt;</operator><name pos:start="87:68" pos:end="87:71">hash</name></name></expr></argument>,

                                                              <argument pos:start="89:63" pos:end="89:69"><expr pos:start="89:63" pos:end="89:69"><name pos:start="89:63" pos:end="89:69">ref_pix</name></expr></argument>,

                                                              <argument pos:start="91:63" pos:end="91:65"><expr pos:start="91:63" pos:end="91:65"><name pos:start="91:63" pos:end="91:65">pix</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <if_stmt pos:start="93:29" pos:end="95:43"><if pos:start="93:29" pos:end="95:43">if <condition pos:start="93:32" pos:end="93:36">(<expr pos:start="93:33" pos:end="93:35"><name pos:start="93:33" pos:end="93:35">ret</name></expr>)</condition><block type="pseudo" pos:start="95:33" pos:end="95:43"><block_content pos:start="95:33" pos:end="95:43">

                                <return pos:start="95:33" pos:end="95:43">return <expr pos:start="95:40" pos:end="95:42"><name pos:start="95:40" pos:end="95:42">ret</name></expr>;</return></block_content></block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <for pos:start="103:17" pos:end="105:38">for <control pos:start="103:21" pos:end="103:43">(<init pos:start="103:22" pos:end="103:22">;</init> <condition pos:start="103:24" pos:end="103:31"><expr pos:start="103:24" pos:end="103:30"><name pos:start="103:24" pos:end="103:26">run</name> <operator pos:start="103:28" pos:end="103:28">&gt;</operator> <literal type="number" pos:start="103:30" pos:end="103:30">0</literal></expr>;</condition> <incr pos:start="103:33" pos:end="103:42"><expr pos:start="103:33" pos:end="103:35"><name pos:start="103:33" pos:end="103:33">x</name><operator pos:start="103:34" pos:end="103:35">++</operator></expr><operator pos:start="103:36" pos:end="103:36">,</operator> <expr pos:start="103:38" pos:end="103:42"><name pos:start="103:38" pos:end="103:40">run</name><operator pos:start="103:41" pos:end="103:42">--</operator></expr></incr>)</control><block type="pseudo" pos:start="105:21" pos:end="105:38"><block_content pos:start="105:21" pos:end="105:38">

                    <expr_stmt pos:start="105:21" pos:end="105:38"><expr pos:start="105:21" pos:end="105:37"><name pos:start="105:21" pos:end="105:31"><name pos:start="105:21" pos:end="105:28">curr_row</name><index pos:start="105:29" pos:end="105:31">[<expr pos:start="105:30" pos:end="105:30"><name pos:start="105:30" pos:end="105:30">x</name></expr>]</index></name> <operator pos:start="105:33" pos:end="105:33">=</operator> <name pos:start="105:35" pos:end="105:37">pix</name></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="115:5" pos:end="115:13">return <expr pos:start="115:12" pos:end="115:12"><literal type="number" pos:start="115:12" pos:end="115:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
