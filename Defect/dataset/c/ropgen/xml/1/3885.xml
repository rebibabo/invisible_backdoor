<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3885.c" pos:tabs="8"><function pos:start="1:1" pos:end="899:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:28">sws_init_context</name><parameter_list pos:start="1:29" pos:end="3:50">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:39">SwsContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">c</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:64"><decl pos:start="1:45" pos:end="1:64"><type pos:start="1:45" pos:end="1:64"><name pos:start="1:45" pos:end="1:53">SwsFilter</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:64">srcFilter</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:49"><decl pos:start="3:30" pos:end="3:49"><type pos:start="3:30" pos:end="3:49"><name pos:start="3:30" pos:end="3:38">SwsFilter</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:49">dstFilter</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="899:1">{<block_content pos:start="7:5" pos:end="897:14">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">usesVFilter</name></decl>, <decl pos:start="9:22" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:32">usesHFilter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">unscaled</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:55"><decl pos:start="13:5" pos:end="13:54"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">SwsFilter</name></type> <name pos:start="13:15" pos:end="13:25">dummyFilter</name> <init pos:start="13:27" pos:end="13:54">= <expr pos:start="13:29" pos:end="13:54"><block pos:start="13:29" pos:end="13:54">{ <expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">NULL</name></expr>, <expr pos:start="13:37" pos:end="13:40"><name pos:start="13:37" pos:end="13:40">NULL</name></expr>, <expr pos:start="13:43" pos:end="13:46"><name pos:start="13:43" pos:end="13:46">NULL</name></expr>, <expr pos:start="13:49" pos:end="13:52"><name pos:start="13:49" pos:end="13:52">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:35"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">srcW</name>              <init pos:start="15:27" pos:end="15:35">= <expr pos:start="15:29" pos:end="15:35"><name pos:start="15:29" pos:end="15:35"><name pos:start="15:29" pos:end="15:29">c</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:35">srcW</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">srcH</name>              <init pos:start="17:27" pos:end="17:35">= <expr pos:start="17:29" pos:end="17:35"><name pos:start="17:29" pos:end="17:35"><name pos:start="17:29" pos:end="17:29">c</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:35">srcH</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:36"><decl pos:start="19:5" pos:end="19:35"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">dstW</name>              <init pos:start="19:27" pos:end="19:35">= <expr pos:start="19:29" pos:end="19:35"><name pos:start="19:29" pos:end="19:35"><name pos:start="19:29" pos:end="19:29">c</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:35">dstW</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:36"><decl pos:start="21:5" pos:end="21:35"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:12">dstH</name>              <init pos:start="21:27" pos:end="21:35">= <expr pos:start="21:29" pos:end="21:35"><name pos:start="21:29" pos:end="21:35"><name pos:start="21:29" pos:end="21:29">c</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:35">dstH</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:69"><decl pos:start="23:5" pos:end="23:68"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:18">dst_stride</name>        <init pos:start="23:27" pos:end="23:68">= <expr pos:start="23:29" pos:end="23:68"><call pos:start="23:29" pos:end="23:68"><name pos:start="23:29" pos:end="23:35">FFALIGN</name><argument_list pos:start="23:36" pos:end="23:68">(<argument pos:start="23:37" pos:end="23:63"><expr pos:start="23:37" pos:end="23:63"><name pos:start="23:37" pos:end="23:40">dstW</name> <operator pos:start="23:42" pos:end="23:42">*</operator> <sizeof pos:start="23:44" pos:end="23:58">sizeof<argument_list pos:start="23:50" pos:end="23:58">(<argument pos:start="23:51" pos:end="23:57"><expr pos:start="23:51" pos:end="23:57"><name pos:start="23:51" pos:end="23:57">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:60" pos:end="23:60">+</operator> <literal type="number" pos:start="23:62" pos:end="23:63">16</literal></expr></argument>, <argument pos:start="23:66" pos:end="23:67"><expr pos:start="23:66" pos:end="23:67"><literal type="number" pos:start="23:66" pos:end="23:67">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:44"><decl pos:start="25:5" pos:end="25:43"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:21">dst_stride_px</name>     <init pos:start="25:27" pos:end="25:43">= <expr pos:start="25:29" pos:end="25:43"><name pos:start="25:29" pos:end="25:38">dst_stride</name> <operator pos:start="25:40" pos:end="25:41">&gt;&gt;</operator> <literal type="number" pos:start="25:43" pos:end="25:43">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:25"><decl pos:start="27:5" pos:end="27:13"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:13">flags</name></decl>, <decl pos:start="27:16" pos:end="27:24"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:16" pos:end="27:24">cpu_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:48"><decl pos:start="29:5" pos:end="29:47"><type pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:8">enum</name> <name pos:start="29:10" pos:end="29:22">AVPixelFormat</name></name></type> <name pos:start="29:24" pos:end="29:32">srcFormat</name> <init pos:start="29:34" pos:end="29:47">= <expr pos:start="29:36" pos:end="29:47"><name pos:start="29:36" pos:end="29:47"><name pos:start="29:36" pos:end="29:36">c</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:47">srcFormat</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:48"><decl pos:start="31:5" pos:end="31:47"><type pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:8">enum</name> <name pos:start="31:10" pos:end="31:22">AVPixelFormat</name></name></type> <name pos:start="31:24" pos:end="31:32">dstFormat</name> <init pos:start="31:34" pos:end="31:47">= <expr pos:start="31:36" pos:end="31:47"><name pos:start="31:36" pos:end="31:47"><name pos:start="31:36" pos:end="31:36">c</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:47">dstFormat</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:72"><decl pos:start="33:5" pos:end="33:71"><type pos:start="33:5" pos:end="33:30"><specifier pos:start="33:5" pos:end="33:9">const</specifier> <name pos:start="33:11" pos:end="33:28">AVPixFmtDescriptor</name> <modifier pos:start="33:30" pos:end="33:30">*</modifier></type><name pos:start="33:31" pos:end="33:38">desc_src</name> <init pos:start="33:40" pos:end="33:71">= <expr pos:start="33:42" pos:end="33:71"><call pos:start="33:42" pos:end="33:71"><name pos:start="33:42" pos:end="33:60">av_pix_fmt_desc_get</name><argument_list pos:start="33:61" pos:end="33:71">(<argument pos:start="33:62" pos:end="33:70"><expr pos:start="33:62" pos:end="33:70"><name pos:start="33:62" pos:end="33:70">srcFormat</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:72"><decl pos:start="35:5" pos:end="35:71"><type pos:start="35:5" pos:end="35:30"><specifier pos:start="35:5" pos:end="35:9">const</specifier> <name pos:start="35:11" pos:end="35:28">AVPixFmtDescriptor</name> <modifier pos:start="35:30" pos:end="35:30">*</modifier></type><name pos:start="35:31" pos:end="35:38">desc_dst</name> <init pos:start="35:40" pos:end="35:71">= <expr pos:start="35:42" pos:end="35:71"><call pos:start="35:42" pos:end="35:71"><name pos:start="35:42" pos:end="35:60">av_pix_fmt_desc_get</name><argument_list pos:start="35:61" pos:end="35:71">(<argument pos:start="35:62" pos:end="35:70"><expr pos:start="35:62" pos:end="35:70"><name pos:start="35:62" pos:end="35:70">dstFormat</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:13">cpu_flags</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:32">av_get_cpu_flags</name><argument_list pos:start="39:33" pos:end="39:34">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:9">flags</name>     <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:24"><name pos:start="41:17" pos:end="41:17">c</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:24">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:13"><expr pos:start="43:5" pos:end="43:12"><call pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:10">emms_c</name><argument_list pos:start="43:11" pos:end="43:12">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:26"><if pos:start="45:5" pos:end="47:26">if <condition pos:start="45:8" pos:end="45:19">(<expr pos:start="45:9" pos:end="45:18"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:18">rgb15to16</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:26"><block_content pos:start="47:9" pos:end="47:26">

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><call pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:23">ff_rgb2rgb_init</name><argument_list pos:start="47:24" pos:end="47:25">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:12">unscaled</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <operator pos:start="51:16" pos:end="51:16">(</operator><name pos:start="51:17" pos:end="51:20">srcW</name> <operator pos:start="51:22" pos:end="51:23">==</operator> <name pos:start="51:25" pos:end="51:28">dstW</name> <operator pos:start="51:30" pos:end="51:31">&amp;&amp;</operator> <name pos:start="51:33" pos:end="51:36">srcH</name> <operator pos:start="51:38" pos:end="51:39">==</operator> <name pos:start="51:41" pos:end="51:44">dstH</name><operator pos:start="51:45" pos:end="51:45">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="79:5"><if pos:start="55:5" pos:end="79:5">if <condition pos:start="55:8" pos:end="57:62">(<expr pos:start="55:9" pos:end="57:61"><operator pos:start="55:9" pos:end="55:9">!</operator><operator pos:start="55:10" pos:end="55:10">(</operator><name pos:start="55:11" pos:end="55:18">unscaled</name> <operator pos:start="55:20" pos:end="55:21">&amp;&amp;</operator> <call pos:start="55:23" pos:end="55:68"><name pos:start="55:23" pos:end="55:57">sws_isSupportedEndiannessConversion</name><argument_list pos:start="55:58" pos:end="55:68">(<argument pos:start="55:59" pos:end="55:67"><expr pos:start="55:59" pos:end="55:67"><name pos:start="55:59" pos:end="55:67">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="55:70" pos:end="55:71">&amp;&amp;</operator>

          <call pos:start="57:11" pos:end="57:47"><name pos:start="57:11" pos:end="57:36">av_pix_fmt_swap_endianness</name><argument_list pos:start="57:37" pos:end="57:47">(<argument pos:start="57:38" pos:end="57:46"><expr pos:start="57:38" pos:end="57:46"><name pos:start="57:38" pos:end="57:46">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="57:49" pos:end="57:50">==</operator> <name pos:start="57:52" pos:end="57:60">dstFormat</name><operator pos:start="57:61" pos:end="57:61">)</operator></expr>)</condition> <block pos:start="57:64" pos:end="79:5">{<block_content pos:start="59:5" pos:end="77:5">

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:41">(<expr pos:start="59:9" pos:end="59:40"><operator pos:start="59:9" pos:end="59:9">!</operator><call pos:start="59:10" pos:end="59:40"><name pos:start="59:10" pos:end="59:29">sws_isSupportedInput</name><argument_list pos:start="59:30" pos:end="59:40">(<argument pos:start="59:31" pos:end="59:39"><expr pos:start="59:31" pos:end="59:39"><name pos:start="59:31" pos:end="59:39">srcFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:43" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:31">

        <expr_stmt pos:start="61:9" pos:end="63:43"><expr pos:start="61:9" pos:end="63:42"><call pos:start="61:9" pos:end="63:42"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="63:42">(<argument pos:start="61:16" pos:end="61:16"><expr pos:start="61:16" pos:end="61:16"><name pos:start="61:16" pos:end="61:16">c</name></expr></argument>, <argument pos:start="61:19" pos:end="61:30"><expr pos:start="61:19" pos:end="61:30"><name pos:start="61:19" pos:end="61:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:33" pos:end="61:77"><expr pos:start="61:33" pos:end="61:77"><literal type="string" pos:start="61:33" pos:end="61:77">"%s is not supported as input pixel format\n"</literal></expr></argument>,

               <argument pos:start="63:16" pos:end="63:41"><expr pos:start="63:16" pos:end="63:41"><call pos:start="63:16" pos:end="63:41"><name pos:start="63:16" pos:end="63:30">sws_format_name</name><argument_list pos:start="63:31" pos:end="63:41">(<argument pos:start="63:32" pos:end="63:40"><expr pos:start="63:32" pos:end="63:40"><name pos:start="63:32" pos:end="63:40">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:31">return <expr pos:start="65:16" pos:end="65:30"><call pos:start="65:16" pos:end="65:30"><name pos:start="65:16" pos:end="65:22">AVERROR</name><argument_list pos:start="65:23" pos:end="65:30">(<argument pos:start="65:24" pos:end="65:29"><expr pos:start="65:24" pos:end="65:29"><name pos:start="65:24" pos:end="65:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:42">(<expr pos:start="69:9" pos:end="69:41"><operator pos:start="69:9" pos:end="69:9">!</operator><call pos:start="69:10" pos:end="69:41"><name pos:start="69:10" pos:end="69:30">sws_isSupportedOutput</name><argument_list pos:start="69:31" pos:end="69:41">(<argument pos:start="69:32" pos:end="69:40"><expr pos:start="69:32" pos:end="69:40"><name pos:start="69:32" pos:end="69:40">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:44" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:31">

        <expr_stmt pos:start="71:9" pos:end="73:43"><expr pos:start="71:9" pos:end="73:42"><call pos:start="71:9" pos:end="73:42"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="73:42">(<argument pos:start="71:16" pos:end="71:16"><expr pos:start="71:16" pos:end="71:16"><name pos:start="71:16" pos:end="71:16">c</name></expr></argument>, <argument pos:start="71:19" pos:end="71:30"><expr pos:start="71:19" pos:end="71:30"><name pos:start="71:19" pos:end="71:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:33" pos:end="71:78"><expr pos:start="71:33" pos:end="71:78"><literal type="string" pos:start="71:33" pos:end="71:78">"%s is not supported as output pixel format\n"</literal></expr></argument>,

               <argument pos:start="73:16" pos:end="73:41"><expr pos:start="73:16" pos:end="73:41"><call pos:start="73:16" pos:end="73:41"><name pos:start="73:16" pos:end="73:30">sws_format_name</name><argument_list pos:start="73:31" pos:end="73:41">(<argument pos:start="73:32" pos:end="73:40"><expr pos:start="73:32" pos:end="73:40"><name pos:start="73:32" pos:end="73:40">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:31">return <expr pos:start="75:16" pos:end="75:30"><call pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:22">AVERROR</name><argument_list pos:start="75:23" pos:end="75:30">(<argument pos:start="75:24" pos:end="75:29"><expr pos:start="75:24" pos:end="75:29"><name pos:start="75:24" pos:end="75:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="103:31"><expr pos:start="83:5" pos:end="103:30"><name pos:start="83:5" pos:end="83:5">i</name> <operator pos:start="83:7" pos:end="83:7">=</operator> <name pos:start="83:9" pos:end="83:13">flags</name> <operator pos:start="83:15" pos:end="83:15">&amp;</operator> <operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:26">SWS_POINT</name>         <operator pos:start="83:36" pos:end="83:36">|</operator>

                 <name pos:start="85:18" pos:end="85:25">SWS_AREA</name>          <operator pos:start="85:36" pos:end="85:36">|</operator>

                 <name pos:start="87:18" pos:end="87:29">SWS_BILINEAR</name>      <operator pos:start="87:36" pos:end="87:36">|</operator>

                 <name pos:start="89:18" pos:end="89:34">SWS_FAST_BILINEAR</name> <operator pos:start="89:36" pos:end="89:36">|</operator>

                 <name pos:start="91:18" pos:end="91:28">SWS_BICUBIC</name>       <operator pos:start="91:36" pos:end="91:36">|</operator>

                 <name pos:start="93:18" pos:end="93:22">SWS_X</name>             <operator pos:start="93:36" pos:end="93:36">|</operator>

                 <name pos:start="95:18" pos:end="95:26">SWS_GAUSS</name>         <operator pos:start="95:36" pos:end="95:36">|</operator>

                 <name pos:start="97:18" pos:end="97:28">SWS_LANCZOS</name>       <operator pos:start="97:36" pos:end="97:36">|</operator>

                 <name pos:start="99:18" pos:end="99:25">SWS_SINC</name>          <operator pos:start="99:36" pos:end="99:36">|</operator>

                 <name pos:start="101:18" pos:end="101:27">SWS_SPLINE</name>        <operator pos:start="101:36" pos:end="101:36">|</operator>

                 <name pos:start="103:18" pos:end="103:29">SWS_BICUBLIN</name><operator pos:start="103:30" pos:end="103:30">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="107:5" pos:end="107:55">/* provide a default scaler if not set by caller */</comment>

    <if_stmt pos:start="109:5" pos:end="133:5"><if pos:start="109:5" pos:end="125:5">if <condition pos:start="109:8" pos:end="109:11">(<expr pos:start="109:9" pos:end="109:10"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:10">i</name></expr>)</condition> <block pos:start="109:13" pos:end="125:5">{<block_content pos:start="111:9" pos:end="123:25">

        <if_stmt pos:start="111:9" pos:end="121:33"><if pos:start="111:9" pos:end="113:31">if <condition pos:start="111:12" pos:end="111:39">(<expr pos:start="111:13" pos:end="111:38"><name pos:start="111:13" pos:end="111:16">dstW</name> <operator pos:start="111:18" pos:end="111:18">&lt;</operator> <name pos:start="111:20" pos:end="111:23">srcW</name> <operator pos:start="111:25" pos:end="111:26">&amp;&amp;</operator> <name pos:start="111:28" pos:end="111:31">dstH</name> <operator pos:start="111:33" pos:end="111:33">&lt;</operator> <name pos:start="111:35" pos:end="111:38">srcH</name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:31"><block_content pos:start="113:13" pos:end="113:31">

            <expr_stmt pos:start="113:13" pos:end="113:31"><expr pos:start="113:13" pos:end="113:30"><name pos:start="113:13" pos:end="113:17">flags</name> <operator pos:start="113:19" pos:end="113:20">|=</operator> <name pos:start="113:22" pos:end="113:30">SWS_GAUSS</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="115:9" pos:end="117:30">else if <condition pos:start="115:17" pos:end="115:44">(<expr pos:start="115:18" pos:end="115:43"><name pos:start="115:18" pos:end="115:21">dstW</name> <operator pos:start="115:23" pos:end="115:23">&gt;</operator> <name pos:start="115:25" pos:end="115:28">srcW</name> <operator pos:start="115:30" pos:end="115:31">&amp;&amp;</operator> <name pos:start="115:33" pos:end="115:36">dstH</name> <operator pos:start="115:38" pos:end="115:38">&gt;</operator> <name pos:start="115:40" pos:end="115:43">srcH</name></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:30"><block_content pos:start="117:13" pos:end="117:30">

            <expr_stmt pos:start="117:13" pos:end="117:30"><expr pos:start="117:13" pos:end="117:29"><name pos:start="117:13" pos:end="117:17">flags</name> <operator pos:start="117:19" pos:end="117:20">|=</operator> <name pos:start="117:22" pos:end="117:29">SWS_SINC</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="119:9" pos:end="121:33">else<block type="pseudo" pos:start="121:13" pos:end="121:33"><block_content pos:start="121:13" pos:end="121:33">

            <expr_stmt pos:start="121:13" pos:end="121:33"><expr pos:start="121:13" pos:end="121:32"><name pos:start="121:13" pos:end="121:17">flags</name> <operator pos:start="121:19" pos:end="121:20">|=</operator> <name pos:start="121:22" pos:end="121:32">SWS_LANCZOS</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:25"><expr pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:16"><name pos:start="123:9" pos:end="123:9">c</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:16">flags</name></name> <operator pos:start="123:18" pos:end="123:18">=</operator> <name pos:start="123:20" pos:end="123:24">flags</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="125:7" pos:end="133:5">else if <condition pos:start="125:15" pos:end="125:27">(<expr pos:start="125:16" pos:end="125:26"><name pos:start="125:16" pos:end="125:16">i</name> <operator pos:start="125:18" pos:end="125:18">&amp;</operator> <operator pos:start="125:20" pos:end="125:20">(</operator><name pos:start="125:21" pos:end="125:21">i</name> <operator pos:start="125:23" pos:end="125:23">-</operator> <literal type="number" pos:start="125:25" pos:end="125:25">1</literal><operator pos:start="125:26" pos:end="125:26">)</operator></expr>)</condition> <block pos:start="125:29" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:31">

        <expr_stmt pos:start="127:9" pos:end="129:64"><expr pos:start="127:9" pos:end="129:63"><call pos:start="127:9" pos:end="129:63"><name pos:start="127:9" pos:end="127:14">av_log</name><argument_list pos:start="127:15" pos:end="129:63">(<argument pos:start="127:16" pos:end="127:16"><expr pos:start="127:16" pos:end="127:16"><name pos:start="127:16" pos:end="127:16">c</name></expr></argument>, <argument pos:start="127:19" pos:end="127:30"><expr pos:start="127:19" pos:end="127:30"><name pos:start="127:19" pos:end="127:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="129:16" pos:end="129:62"><expr pos:start="129:16" pos:end="129:62"><literal type="string" pos:start="129:16" pos:end="129:62">"Exactly one scaler algorithm must be chosen\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:31">return <expr pos:start="131:16" pos:end="131:30"><call pos:start="131:16" pos:end="131:30"><name pos:start="131:16" pos:end="131:22">AVERROR</name><argument_list pos:start="131:23" pos:end="131:30">(<argument pos:start="131:24" pos:end="131:29"><expr pos:start="131:24" pos:end="131:29"><name pos:start="131:24" pos:end="131:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="135:5" pos:end="135:22">/* sanity check */</comment>

    <if_stmt pos:start="137:5" pos:end="149:5"><if pos:start="137:5" pos:end="149:5">if <condition pos:start="137:8" pos:end="137:53">(<expr pos:start="137:9" pos:end="137:52"><name pos:start="137:9" pos:end="137:12">srcW</name> <operator pos:start="137:14" pos:end="137:14">&lt;</operator> <literal type="number" pos:start="137:16" pos:end="137:16">4</literal> <operator pos:start="137:18" pos:end="137:19">||</operator> <name pos:start="137:21" pos:end="137:24">srcH</name> <operator pos:start="137:26" pos:end="137:26">&lt;</operator> <literal type="number" pos:start="137:28" pos:end="137:28">1</literal> <operator pos:start="137:30" pos:end="137:31">||</operator> <name pos:start="137:33" pos:end="137:36">dstW</name> <operator pos:start="137:38" pos:end="137:38">&lt;</operator> <literal type="number" pos:start="137:40" pos:end="137:40">8</literal> <operator pos:start="137:42" pos:end="137:43">||</operator> <name pos:start="137:45" pos:end="137:48">dstH</name> <operator pos:start="137:50" pos:end="137:50">&lt;</operator> <literal type="number" pos:start="137:52" pos:end="137:52">1</literal></expr>)</condition> <block pos:start="137:55" pos:end="149:5">{<block_content pos:start="143:9" pos:end="147:31">

        <comment type="block" pos:start="139:9" pos:end="141:51">/* FIXME check if these are enough and try to lower them after

         * fixing the relevant parts of the code */</comment>

        <expr_stmt pos:start="143:9" pos:end="145:39"><expr pos:start="143:9" pos:end="145:38"><call pos:start="143:9" pos:end="145:38"><name pos:start="143:9" pos:end="143:14">av_log</name><argument_list pos:start="143:15" pos:end="145:38">(<argument pos:start="143:16" pos:end="143:16"><expr pos:start="143:16" pos:end="143:16"><name pos:start="143:16" pos:end="143:16">c</name></expr></argument>, <argument pos:start="143:19" pos:end="143:30"><expr pos:start="143:19" pos:end="143:30"><name pos:start="143:19" pos:end="143:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="143:33" pos:end="143:79"><expr pos:start="143:33" pos:end="143:79"><literal type="string" pos:start="143:33" pos:end="143:79">"%dx%d -&gt; %dx%d is invalid scaling dimension\n"</literal></expr></argument>,

               <argument pos:start="145:16" pos:end="145:19"><expr pos:start="145:16" pos:end="145:19"><name pos:start="145:16" pos:end="145:19">srcW</name></expr></argument>, <argument pos:start="145:22" pos:end="145:25"><expr pos:start="145:22" pos:end="145:25"><name pos:start="145:22" pos:end="145:25">srcH</name></expr></argument>, <argument pos:start="145:28" pos:end="145:31"><expr pos:start="145:28" pos:end="145:31"><name pos:start="145:28" pos:end="145:31">dstW</name></expr></argument>, <argument pos:start="145:34" pos:end="145:37"><expr pos:start="145:34" pos:end="145:37"><name pos:start="145:34" pos:end="145:37">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="147:9" pos:end="147:31">return <expr pos:start="147:16" pos:end="147:30"><call pos:start="147:16" pos:end="147:30"><name pos:start="147:16" pos:end="147:22">AVERROR</name><argument_list pos:start="147:23" pos:end="147:30">(<argument pos:start="147:24" pos:end="147:29"><expr pos:start="147:24" pos:end="147:29"><name pos:start="147:24" pos:end="147:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="153:5" pos:end="155:33"><if pos:start="153:5" pos:end="155:33">if <condition pos:start="153:8" pos:end="153:19">(<expr pos:start="153:9" pos:end="153:18"><operator pos:start="153:9" pos:end="153:9">!</operator><name pos:start="153:10" pos:end="153:18">dstFilter</name></expr>)</condition><block type="pseudo" pos:start="155:9" pos:end="155:33"><block_content pos:start="155:9" pos:end="155:33">

        <expr_stmt pos:start="155:9" pos:end="155:33"><expr pos:start="155:9" pos:end="155:32"><name pos:start="155:9" pos:end="155:17">dstFilter</name> <operator pos:start="155:19" pos:end="155:19">=</operator> <operator pos:start="155:21" pos:end="155:21">&amp;</operator><name pos:start="155:22" pos:end="155:32">dummyFilter</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="157:5" pos:end="159:33"><if pos:start="157:5" pos:end="159:33">if <condition pos:start="157:8" pos:end="157:19">(<expr pos:start="157:9" pos:end="157:18"><operator pos:start="157:9" pos:end="157:9">!</operator><name pos:start="157:10" pos:end="157:18">srcFilter</name></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:33"><block_content pos:start="159:9" pos:end="159:33">

        <expr_stmt pos:start="159:9" pos:end="159:33"><expr pos:start="159:9" pos:end="159:32"><name pos:start="159:9" pos:end="159:17">srcFilter</name> <operator pos:start="159:19" pos:end="159:19">=</operator> <operator pos:start="159:21" pos:end="159:21">&amp;</operator><name pos:start="159:22" pos:end="159:32">dummyFilter</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:67"><expr pos:start="163:5" pos:end="163:66"><name pos:start="163:5" pos:end="163:14"><name pos:start="163:5" pos:end="163:5">c</name><operator pos:start="163:6" pos:end="163:7">-&gt;</operator><name pos:start="163:8" pos:end="163:14">lumXInc</name></name>      <operator pos:start="163:21" pos:end="163:21">=</operator> <operator pos:start="163:23" pos:end="163:23">(</operator><operator pos:start="163:24" pos:end="163:24">(</operator><operator pos:start="163:25" pos:end="163:25">(</operator><name pos:start="163:26" pos:end="163:32">int64_t</name><operator pos:start="163:33" pos:end="163:33">)</operator><name pos:start="163:34" pos:end="163:37">srcW</name> <operator pos:start="163:39" pos:end="163:40">&lt;&lt;</operator> <literal type="number" pos:start="163:42" pos:end="163:43">16</literal><operator pos:start="163:44" pos:end="163:44">)</operator> <operator pos:start="163:46" pos:end="163:46">+</operator> <operator pos:start="163:48" pos:end="163:48">(</operator><name pos:start="163:49" pos:end="163:52">dstW</name> <operator pos:start="163:54" pos:end="163:55">&gt;&gt;</operator> <literal type="number" pos:start="163:57" pos:end="163:57">1</literal><operator pos:start="163:58" pos:end="163:58">)</operator><operator pos:start="163:59" pos:end="163:59">)</operator> <operator pos:start="163:61" pos:end="163:61">/</operator> <name pos:start="163:63" pos:end="163:66">dstW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:67"><expr pos:start="165:5" pos:end="165:66"><name pos:start="165:5" pos:end="165:14"><name pos:start="165:5" pos:end="165:5">c</name><operator pos:start="165:6" pos:end="165:7">-&gt;</operator><name pos:start="165:8" pos:end="165:14">lumYInc</name></name>      <operator pos:start="165:21" pos:end="165:21">=</operator> <operator pos:start="165:23" pos:end="165:23">(</operator><operator pos:start="165:24" pos:end="165:24">(</operator><operator pos:start="165:25" pos:end="165:25">(</operator><name pos:start="165:26" pos:end="165:32">int64_t</name><operator pos:start="165:33" pos:end="165:33">)</operator><name pos:start="165:34" pos:end="165:37">srcH</name> <operator pos:start="165:39" pos:end="165:40">&lt;&lt;</operator> <literal type="number" pos:start="165:42" pos:end="165:43">16</literal><operator pos:start="165:44" pos:end="165:44">)</operator> <operator pos:start="165:46" pos:end="165:46">+</operator> <operator pos:start="165:48" pos:end="165:48">(</operator><name pos:start="165:49" pos:end="165:52">dstH</name> <operator pos:start="165:54" pos:end="165:55">&gt;&gt;</operator> <literal type="number" pos:start="165:57" pos:end="165:57">1</literal><operator pos:start="165:58" pos:end="165:58">)</operator><operator pos:start="165:59" pos:end="165:59">)</operator> <operator pos:start="165:61" pos:end="165:61">/</operator> <name pos:start="165:63" pos:end="165:66">dstH</name></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:54"><expr pos:start="167:5" pos:end="167:53"><name pos:start="167:5" pos:end="167:19"><name pos:start="167:5" pos:end="167:5">c</name><operator pos:start="167:6" pos:end="167:7">-&gt;</operator><name pos:start="167:8" pos:end="167:19">dstFormatBpp</name></name> <operator pos:start="167:21" pos:end="167:21">=</operator> <call pos:start="167:23" pos:end="167:53"><name pos:start="167:23" pos:end="167:43">av_get_bits_per_pixel</name><argument_list pos:start="167:44" pos:end="167:53">(<argument pos:start="167:45" pos:end="167:52"><expr pos:start="167:45" pos:end="167:52"><name pos:start="167:45" pos:end="167:52">desc_dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:54"><expr pos:start="169:5" pos:end="169:53"><name pos:start="169:5" pos:end="169:19"><name pos:start="169:5" pos:end="169:5">c</name><operator pos:start="169:6" pos:end="169:7">-&gt;</operator><name pos:start="169:8" pos:end="169:19">srcFormatBpp</name></name> <operator pos:start="169:21" pos:end="169:21">=</operator> <call pos:start="169:23" pos:end="169:53"><name pos:start="169:23" pos:end="169:43">av_get_bits_per_pixel</name><argument_list pos:start="169:44" pos:end="169:53">(<argument pos:start="169:45" pos:end="169:52"><expr pos:start="169:45" pos:end="169:52"><name pos:start="169:45" pos:end="169:52">desc_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:48"><expr pos:start="171:5" pos:end="171:47"><name pos:start="171:5" pos:end="171:15"><name pos:start="171:5" pos:end="171:5">c</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:15">vRounder</name></name>     <operator pos:start="171:21" pos:end="171:21">=</operator> <literal type="number" pos:start="171:23" pos:end="171:23">4</literal> <operator pos:start="171:25" pos:end="171:25">*</operator> <literal type="number" pos:start="171:27" pos:end="171:47">0x0001000100010001ULL</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="175:5" pos:end="181:67"><expr pos:start="175:5" pos:end="181:66"><name pos:start="175:5" pos:end="175:15">usesVFilter</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <operator pos:start="175:19" pos:end="175:19">(</operator><name pos:start="175:20" pos:end="175:34"><name pos:start="175:20" pos:end="175:28">srcFilter</name><operator pos:start="175:29" pos:end="175:30">-&gt;</operator><name pos:start="175:31" pos:end="175:34">lumV</name></name> <operator pos:start="175:36" pos:end="175:37">&amp;&amp;</operator> <name pos:start="175:39" pos:end="175:61"><name pos:start="175:39" pos:end="175:47">srcFilter</name><operator pos:start="175:48" pos:end="175:49">-&gt;</operator><name pos:start="175:50" pos:end="175:53">lumV</name><operator pos:start="175:54" pos:end="175:55">-&gt;</operator><name pos:start="175:56" pos:end="175:61">length</name></name> <operator pos:start="175:63" pos:end="175:63">&gt;</operator> <literal type="number" pos:start="175:65" pos:end="175:65">1</literal><operator pos:start="175:66" pos:end="175:66">)</operator> <operator pos:start="175:68" pos:end="175:69">||</operator>

                  <operator pos:start="177:19" pos:end="177:19">(</operator><name pos:start="177:20" pos:end="177:34"><name pos:start="177:20" pos:end="177:28">srcFilter</name><operator pos:start="177:29" pos:end="177:30">-&gt;</operator><name pos:start="177:31" pos:end="177:34">chrV</name></name> <operator pos:start="177:36" pos:end="177:37">&amp;&amp;</operator> <name pos:start="177:39" pos:end="177:61"><name pos:start="177:39" pos:end="177:47">srcFilter</name><operator pos:start="177:48" pos:end="177:49">-&gt;</operator><name pos:start="177:50" pos:end="177:53">chrV</name><operator pos:start="177:54" pos:end="177:55">-&gt;</operator><name pos:start="177:56" pos:end="177:61">length</name></name> <operator pos:start="177:63" pos:end="177:63">&gt;</operator> <literal type="number" pos:start="177:65" pos:end="177:65">1</literal><operator pos:start="177:66" pos:end="177:66">)</operator> <operator pos:start="177:68" pos:end="177:69">||</operator>

                  <operator pos:start="179:19" pos:end="179:19">(</operator><name pos:start="179:20" pos:end="179:34"><name pos:start="179:20" pos:end="179:28">dstFilter</name><operator pos:start="179:29" pos:end="179:30">-&gt;</operator><name pos:start="179:31" pos:end="179:34">lumV</name></name> <operator pos:start="179:36" pos:end="179:37">&amp;&amp;</operator> <name pos:start="179:39" pos:end="179:61"><name pos:start="179:39" pos:end="179:47">dstFilter</name><operator pos:start="179:48" pos:end="179:49">-&gt;</operator><name pos:start="179:50" pos:end="179:53">lumV</name><operator pos:start="179:54" pos:end="179:55">-&gt;</operator><name pos:start="179:56" pos:end="179:61">length</name></name> <operator pos:start="179:63" pos:end="179:63">&gt;</operator> <literal type="number" pos:start="179:65" pos:end="179:65">1</literal><operator pos:start="179:66" pos:end="179:66">)</operator> <operator pos:start="179:68" pos:end="179:69">||</operator>

                  <operator pos:start="181:19" pos:end="181:19">(</operator><name pos:start="181:20" pos:end="181:34"><name pos:start="181:20" pos:end="181:28">dstFilter</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:34">chrV</name></name> <operator pos:start="181:36" pos:end="181:37">&amp;&amp;</operator> <name pos:start="181:39" pos:end="181:61"><name pos:start="181:39" pos:end="181:47">dstFilter</name><operator pos:start="181:48" pos:end="181:49">-&gt;</operator><name pos:start="181:50" pos:end="181:53">chrV</name><operator pos:start="181:54" pos:end="181:55">-&gt;</operator><name pos:start="181:56" pos:end="181:61">length</name></name> <operator pos:start="181:63" pos:end="181:63">&gt;</operator> <literal type="number" pos:start="181:65" pos:end="181:65">1</literal><operator pos:start="181:66" pos:end="181:66">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="189:67"><expr pos:start="183:5" pos:end="189:66"><name pos:start="183:5" pos:end="183:15">usesHFilter</name> <operator pos:start="183:17" pos:end="183:17">=</operator> <operator pos:start="183:19" pos:end="183:19">(</operator><name pos:start="183:20" pos:end="183:34"><name pos:start="183:20" pos:end="183:28">srcFilter</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:34">lumH</name></name> <operator pos:start="183:36" pos:end="183:37">&amp;&amp;</operator> <name pos:start="183:39" pos:end="183:61"><name pos:start="183:39" pos:end="183:47">srcFilter</name><operator pos:start="183:48" pos:end="183:49">-&gt;</operator><name pos:start="183:50" pos:end="183:53">lumH</name><operator pos:start="183:54" pos:end="183:55">-&gt;</operator><name pos:start="183:56" pos:end="183:61">length</name></name> <operator pos:start="183:63" pos:end="183:63">&gt;</operator> <literal type="number" pos:start="183:65" pos:end="183:65">1</literal><operator pos:start="183:66" pos:end="183:66">)</operator> <operator pos:start="183:68" pos:end="183:69">||</operator>

                  <operator pos:start="185:19" pos:end="185:19">(</operator><name pos:start="185:20" pos:end="185:34"><name pos:start="185:20" pos:end="185:28">srcFilter</name><operator pos:start="185:29" pos:end="185:30">-&gt;</operator><name pos:start="185:31" pos:end="185:34">chrH</name></name> <operator pos:start="185:36" pos:end="185:37">&amp;&amp;</operator> <name pos:start="185:39" pos:end="185:61"><name pos:start="185:39" pos:end="185:47">srcFilter</name><operator pos:start="185:48" pos:end="185:49">-&gt;</operator><name pos:start="185:50" pos:end="185:53">chrH</name><operator pos:start="185:54" pos:end="185:55">-&gt;</operator><name pos:start="185:56" pos:end="185:61">length</name></name> <operator pos:start="185:63" pos:end="185:63">&gt;</operator> <literal type="number" pos:start="185:65" pos:end="185:65">1</literal><operator pos:start="185:66" pos:end="185:66">)</operator> <operator pos:start="185:68" pos:end="185:69">||</operator>

                  <operator pos:start="187:19" pos:end="187:19">(</operator><name pos:start="187:20" pos:end="187:34"><name pos:start="187:20" pos:end="187:28">dstFilter</name><operator pos:start="187:29" pos:end="187:30">-&gt;</operator><name pos:start="187:31" pos:end="187:34">lumH</name></name> <operator pos:start="187:36" pos:end="187:37">&amp;&amp;</operator> <name pos:start="187:39" pos:end="187:61"><name pos:start="187:39" pos:end="187:47">dstFilter</name><operator pos:start="187:48" pos:end="187:49">-&gt;</operator><name pos:start="187:50" pos:end="187:53">lumH</name><operator pos:start="187:54" pos:end="187:55">-&gt;</operator><name pos:start="187:56" pos:end="187:61">length</name></name> <operator pos:start="187:63" pos:end="187:63">&gt;</operator> <literal type="number" pos:start="187:65" pos:end="187:65">1</literal><operator pos:start="187:66" pos:end="187:66">)</operator> <operator pos:start="187:68" pos:end="187:69">||</operator>

                  <operator pos:start="189:19" pos:end="189:19">(</operator><name pos:start="189:20" pos:end="189:34"><name pos:start="189:20" pos:end="189:28">dstFilter</name><operator pos:start="189:29" pos:end="189:30">-&gt;</operator><name pos:start="189:31" pos:end="189:34">chrH</name></name> <operator pos:start="189:36" pos:end="189:37">&amp;&amp;</operator> <name pos:start="189:39" pos:end="189:61"><name pos:start="189:39" pos:end="189:47">dstFilter</name><operator pos:start="189:48" pos:end="189:49">-&gt;</operator><name pos:start="189:50" pos:end="189:53">chrH</name><operator pos:start="189:54" pos:end="189:55">-&gt;</operator><name pos:start="189:56" pos:end="189:61">length</name></name> <operator pos:start="189:63" pos:end="189:63">&gt;</operator> <literal type="number" pos:start="189:65" pos:end="189:65">1</literal><operator pos:start="189:66" pos:end="189:66">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="193:5" pos:end="193:79"><expr pos:start="193:5" pos:end="193:78"><call pos:start="193:5" pos:end="193:78"><name pos:start="193:5" pos:end="193:23">getSubSampleFactors</name><argument_list pos:start="193:24" pos:end="193:78">(<argument pos:start="193:25" pos:end="193:44"><expr pos:start="193:25" pos:end="193:44"><operator pos:start="193:25" pos:end="193:25">&amp;</operator><name pos:start="193:26" pos:end="193:44"><name pos:start="193:26" pos:end="193:26">c</name><operator pos:start="193:27" pos:end="193:28">-&gt;</operator><name pos:start="193:29" pos:end="193:44">chrSrcHSubSample</name></name></expr></argument>, <argument pos:start="193:47" pos:end="193:66"><expr pos:start="193:47" pos:end="193:66"><operator pos:start="193:47" pos:end="193:47">&amp;</operator><name pos:start="193:48" pos:end="193:66"><name pos:start="193:48" pos:end="193:48">c</name><operator pos:start="193:49" pos:end="193:50">-&gt;</operator><name pos:start="193:51" pos:end="193:66">chrSrcVSubSample</name></name></expr></argument>, <argument pos:start="193:69" pos:end="193:77"><expr pos:start="193:69" pos:end="193:77"><name pos:start="193:69" pos:end="193:77">srcFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:79"><expr pos:start="195:5" pos:end="195:78"><call pos:start="195:5" pos:end="195:78"><name pos:start="195:5" pos:end="195:23">getSubSampleFactors</name><argument_list pos:start="195:24" pos:end="195:78">(<argument pos:start="195:25" pos:end="195:44"><expr pos:start="195:25" pos:end="195:44"><operator pos:start="195:25" pos:end="195:25">&amp;</operator><name pos:start="195:26" pos:end="195:44"><name pos:start="195:26" pos:end="195:26">c</name><operator pos:start="195:27" pos:end="195:28">-&gt;</operator><name pos:start="195:29" pos:end="195:44">chrDstHSubSample</name></name></expr></argument>, <argument pos:start="195:47" pos:end="195:66"><expr pos:start="195:47" pos:end="195:66"><operator pos:start="195:47" pos:end="195:47">&amp;</operator><name pos:start="195:48" pos:end="195:66"><name pos:start="195:48" pos:end="195:48">c</name><operator pos:start="195:49" pos:end="195:50">-&gt;</operator><name pos:start="195:51" pos:end="195:66">chrDstVSubSample</name></name></expr></argument>, <argument pos:start="195:69" pos:end="195:77"><expr pos:start="195:69" pos:end="195:77"><name pos:start="195:69" pos:end="195:77">dstFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="199:5" pos:end="215:5"><if pos:start="199:5" pos:end="215:5">if <condition pos:start="199:8" pos:end="199:31">(<expr pos:start="199:9" pos:end="199:30"><call pos:start="199:9" pos:end="199:30"><name pos:start="199:9" pos:end="199:19">isPlanarRGB</name><argument_list pos:start="199:20" pos:end="199:30">(<argument pos:start="199:21" pos:end="199:29"><expr pos:start="199:21" pos:end="199:29"><name pos:start="199:21" pos:end="199:29">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="199:33" pos:end="215:5">{<block_content pos:start="201:9" pos:end="213:9">

        <if_stmt pos:start="201:9" pos:end="213:9"><if pos:start="201:9" pos:end="213:9">if <condition pos:start="201:12" pos:end="201:42">(<expr pos:start="201:13" pos:end="201:41"><operator pos:start="201:13" pos:end="201:13">!</operator><operator pos:start="201:14" pos:end="201:14">(</operator><name pos:start="201:15" pos:end="201:19">flags</name> <operator pos:start="201:21" pos:end="201:21">&amp;</operator> <name pos:start="201:23" pos:end="201:40">SWS_FULL_CHR_H_INT</name><operator pos:start="201:41" pos:end="201:41">)</operator></expr>)</condition> <block pos:start="201:44" pos:end="213:9">{<block_content pos:start="203:13" pos:end="211:29">

            <expr_stmt pos:start="203:13" pos:end="207:51"><expr pos:start="203:13" pos:end="207:50"><call pos:start="203:13" pos:end="207:50"><name pos:start="203:13" pos:end="203:18">av_log</name><argument_list pos:start="203:19" pos:end="207:50">(<argument pos:start="203:20" pos:end="203:20"><expr pos:start="203:20" pos:end="203:20"><name pos:start="203:20" pos:end="203:20">c</name></expr></argument>, <argument pos:start="203:23" pos:end="203:34"><expr pos:start="203:23" pos:end="203:34"><name pos:start="203:23" pos:end="203:34">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="205:20" pos:end="205:96"><expr pos:start="205:20" pos:end="205:96"><literal type="string" pos:start="205:20" pos:end="205:96">"%s output is not supported with half chroma resolution, switching to full\n"</literal></expr></argument>,

                   <argument pos:start="207:20" pos:end="207:49"><expr pos:start="207:20" pos:end="207:49"><call pos:start="207:20" pos:end="207:49"><name pos:start="207:20" pos:end="207:38">av_get_pix_fmt_name</name><argument_list pos:start="207:39" pos:end="207:49">(<argument pos:start="207:40" pos:end="207:48"><expr pos:start="207:40" pos:end="207:48"><name pos:start="207:40" pos:end="207:48">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:42"><expr pos:start="209:13" pos:end="209:41"><name pos:start="209:13" pos:end="209:17">flags</name>   <operator pos:start="209:21" pos:end="209:22">|=</operator> <name pos:start="209:24" pos:end="209:41">SWS_FULL_CHR_H_INT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:29"><expr pos:start="211:13" pos:end="211:28"><name pos:start="211:13" pos:end="211:20"><name pos:start="211:13" pos:end="211:13">c</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:20">flags</name></name> <operator pos:start="211:22" pos:end="211:22">=</operator> <name pos:start="211:24" pos:end="211:28">flags</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="219:5" pos:end="221:30">/* reuse chroma for 2 pixels RGB/BGR unless user wants full

     * chroma interpolation */</comment>

    <if_stmt pos:start="223:5" pos:end="251:5"><if pos:start="223:5" pos:end="251:5">if <condition pos:start="223:8" pos:end="239:38">(<expr pos:start="223:9" pos:end="239:37"><name pos:start="223:9" pos:end="223:13">flags</name> <operator pos:start="223:15" pos:end="223:15">&amp;</operator> <name pos:start="223:17" pos:end="223:34">SWS_FULL_CHR_H_INT</name> <operator pos:start="223:36" pos:end="223:37">&amp;&amp;</operator>

        <call pos:start="225:9" pos:end="225:27"><name pos:start="225:9" pos:end="225:16">isAnyRGB</name><argument_list pos:start="225:17" pos:end="225:27">(<argument pos:start="225:18" pos:end="225:26"><expr pos:start="225:18" pos:end="225:26"><name pos:start="225:18" pos:end="225:26">dstFormat</name></expr></argument>)</argument_list></call>        <operator pos:start="225:36" pos:end="225:37">&amp;&amp;</operator>

        <operator pos:start="227:9" pos:end="227:9">!</operator><call pos:start="227:10" pos:end="227:31"><name pos:start="227:10" pos:end="227:20">isPlanarRGB</name><argument_list pos:start="227:21" pos:end="227:31">(<argument pos:start="227:22" pos:end="227:30"><expr pos:start="227:22" pos:end="227:30"><name pos:start="227:22" pos:end="227:30">dstFormat</name></expr></argument>)</argument_list></call>    <operator pos:start="227:36" pos:end="227:37">&amp;&amp;</operator>

        <name pos:start="229:9" pos:end="229:17">dstFormat</name> <operator pos:start="229:19" pos:end="229:20">!=</operator> <name pos:start="229:22" pos:end="229:36">AV_PIX_FMT_RGBA</name>  <operator pos:start="229:39" pos:end="229:40">&amp;&amp;</operator>

        <name pos:start="231:9" pos:end="231:17">dstFormat</name> <operator pos:start="231:19" pos:end="231:20">!=</operator> <name pos:start="231:22" pos:end="231:36">AV_PIX_FMT_ARGB</name>  <operator pos:start="231:39" pos:end="231:40">&amp;&amp;</operator>

        <name pos:start="233:9" pos:end="233:17">dstFormat</name> <operator pos:start="233:19" pos:end="233:20">!=</operator> <name pos:start="233:22" pos:end="233:36">AV_PIX_FMT_BGRA</name>  <operator pos:start="233:39" pos:end="233:40">&amp;&amp;</operator>

        <name pos:start="235:9" pos:end="235:17">dstFormat</name> <operator pos:start="235:19" pos:end="235:20">!=</operator> <name pos:start="235:22" pos:end="235:36">AV_PIX_FMT_ABGR</name>  <operator pos:start="235:39" pos:end="235:40">&amp;&amp;</operator>

        <name pos:start="237:9" pos:end="237:17">dstFormat</name> <operator pos:start="237:19" pos:end="237:20">!=</operator> <name pos:start="237:22" pos:end="237:37">AV_PIX_FMT_RGB24</name> <operator pos:start="237:39" pos:end="237:40">&amp;&amp;</operator>

        <name pos:start="239:9" pos:end="239:17">dstFormat</name> <operator pos:start="239:19" pos:end="239:20">!=</operator> <name pos:start="239:22" pos:end="239:37">AV_PIX_FMT_BGR24</name></expr>)</condition> <block pos:start="239:40" pos:end="251:5">{<block_content pos:start="241:9" pos:end="249:25">

        <expr_stmt pos:start="241:9" pos:end="245:43"><expr pos:start="241:9" pos:end="245:42"><call pos:start="241:9" pos:end="245:42"><name pos:start="241:9" pos:end="241:14">av_log</name><argument_list pos:start="241:15" pos:end="245:42">(<argument pos:start="241:16" pos:end="241:16"><expr pos:start="241:16" pos:end="241:16"><name pos:start="241:16" pos:end="241:16">c</name></expr></argument>, <argument pos:start="241:19" pos:end="241:30"><expr pos:start="241:19" pos:end="241:30"><name pos:start="241:19" pos:end="241:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="243:16" pos:end="243:92"><expr pos:start="243:16" pos:end="243:92"><literal type="string" pos:start="243:16" pos:end="243:92">"full chroma interpolation for destination format '%s' not yet implemented\n"</literal></expr></argument>,

               <argument pos:start="245:16" pos:end="245:41"><expr pos:start="245:16" pos:end="245:41"><call pos:start="245:16" pos:end="245:41"><name pos:start="245:16" pos:end="245:30">sws_format_name</name><argument_list pos:start="245:31" pos:end="245:41">(<argument pos:start="245:32" pos:end="245:40"><expr pos:start="245:32" pos:end="245:40"><name pos:start="245:32" pos:end="245:40">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:39"><expr pos:start="247:9" pos:end="247:38"><name pos:start="247:9" pos:end="247:13">flags</name>   <operator pos:start="247:17" pos:end="247:18">&amp;=</operator> <operator pos:start="247:20" pos:end="247:20">~</operator><name pos:start="247:21" pos:end="247:38">SWS_FULL_CHR_H_INT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:25"><expr pos:start="249:9" pos:end="249:24"><name pos:start="249:9" pos:end="249:16"><name pos:start="249:9" pos:end="249:9">c</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:16">flags</name></name> <operator pos:start="249:18" pos:end="249:18">=</operator> <name pos:start="249:20" pos:end="249:24">flags</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="253:5" pos:end="255:32"><if pos:start="253:5" pos:end="255:32">if <condition pos:start="253:8" pos:end="253:61">(<expr pos:start="253:9" pos:end="253:60"><call pos:start="253:9" pos:end="253:27"><name pos:start="253:9" pos:end="253:16">isAnyRGB</name><argument_list pos:start="253:17" pos:end="253:27">(<argument pos:start="253:18" pos:end="253:26"><expr pos:start="253:18" pos:end="253:26"><name pos:start="253:18" pos:end="253:26">dstFormat</name></expr></argument>)</argument_list></call> <operator pos:start="253:29" pos:end="253:30">&amp;&amp;</operator> <operator pos:start="253:32" pos:end="253:32">!</operator><operator pos:start="253:33" pos:end="253:33">(</operator><name pos:start="253:34" pos:end="253:38">flags</name> <operator pos:start="253:40" pos:end="253:40">&amp;</operator> <name pos:start="253:42" pos:end="253:59">SWS_FULL_CHR_H_INT</name><operator pos:start="253:60" pos:end="253:60">)</operator></expr>)</condition><block type="pseudo" pos:start="255:9" pos:end="255:32"><block_content pos:start="255:9" pos:end="255:32">

        <expr_stmt pos:start="255:9" pos:end="255:32"><expr pos:start="255:9" pos:end="255:31"><name pos:start="255:9" pos:end="255:27"><name pos:start="255:9" pos:end="255:9">c</name><operator pos:start="255:10" pos:end="255:11">-&gt;</operator><name pos:start="255:12" pos:end="255:27">chrDstHSubSample</name></name> <operator pos:start="255:29" pos:end="255:29">=</operator> <literal type="number" pos:start="255:31" pos:end="255:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="259:5" pos:end="259:50">// drop some chroma lines if the user wants it</comment>

    <expr_stmt pos:start="261:5" pos:end="263:52"><expr pos:start="261:5" pos:end="263:51"><name pos:start="261:5" pos:end="261:15"><name pos:start="261:5" pos:end="261:5">c</name><operator pos:start="261:6" pos:end="261:7">-&gt;</operator><name pos:start="261:8" pos:end="261:15">vChrDrop</name></name>          <operator pos:start="261:26" pos:end="261:26">=</operator> <operator pos:start="261:28" pos:end="261:28">(</operator><name pos:start="261:29" pos:end="261:33">flags</name> <operator pos:start="261:35" pos:end="261:35">&amp;</operator> <name pos:start="261:37" pos:end="261:59">SWS_SRC_V_CHR_DROP_MASK</name><operator pos:start="261:60" pos:end="261:60">)</operator> <operator pos:start="261:62" pos:end="261:63">&gt;&gt;</operator>

                           <name pos:start="263:28" pos:end="263:51">SWS_SRC_V_CHR_DROP_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:39"><expr pos:start="265:5" pos:end="265:38"><name pos:start="265:5" pos:end="265:23"><name pos:start="265:5" pos:end="265:5">c</name><operator pos:start="265:6" pos:end="265:7">-&gt;</operator><name pos:start="265:8" pos:end="265:23">chrSrcVSubSample</name></name> <operator pos:start="265:25" pos:end="265:26">+=</operator> <name pos:start="265:28" pos:end="265:38"><name pos:start="265:28" pos:end="265:28">c</name><operator pos:start="265:29" pos:end="265:30">-&gt;</operator><name pos:start="265:31" pos:end="265:38">vChrDrop</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="269:5" pos:end="271:27">/* drop every other pixel for chroma calculation unless user

     * wants full chroma */</comment>

    <if_stmt pos:start="273:5" pos:end="295:32"><if pos:start="273:5" pos:end="295:32">if <condition pos:start="273:8" pos:end="293:38">(<expr pos:start="273:9" pos:end="293:37"><call pos:start="273:9" pos:end="273:27"><name pos:start="273:9" pos:end="273:16">isAnyRGB</name><argument_list pos:start="273:17" pos:end="273:27">(<argument pos:start="273:18" pos:end="273:26"><expr pos:start="273:18" pos:end="273:26"><name pos:start="273:18" pos:end="273:26">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="273:29" pos:end="273:30">&amp;&amp;</operator> <operator pos:start="273:32" pos:end="273:32">!</operator><operator pos:start="273:33" pos:end="273:33">(</operator><name pos:start="273:34" pos:end="273:38">flags</name> <operator pos:start="273:40" pos:end="273:40">&amp;</operator> <name pos:start="273:42" pos:end="273:59">SWS_FULL_CHR_H_INP</name><operator pos:start="273:60" pos:end="273:60">)</operator>   <operator pos:start="273:64" pos:end="273:65">&amp;&amp;</operator>

        <name pos:start="275:9" pos:end="275:17">srcFormat</name> <operator pos:start="275:19" pos:end="275:20">!=</operator> <name pos:start="275:22" pos:end="275:36">AV_PIX_FMT_RGB8</name> <operator pos:start="275:38" pos:end="275:39">&amp;&amp;</operator> <name pos:start="275:41" pos:end="275:49">srcFormat</name> <operator pos:start="275:51" pos:end="275:52">!=</operator> <name pos:start="275:54" pos:end="275:68">AV_PIX_FMT_BGR8</name> <operator pos:start="275:70" pos:end="275:71">&amp;&amp;</operator>

        <name pos:start="277:9" pos:end="277:17">srcFormat</name> <operator pos:start="277:19" pos:end="277:20">!=</operator> <name pos:start="277:22" pos:end="277:36">AV_PIX_FMT_RGB4</name> <operator pos:start="277:38" pos:end="277:39">&amp;&amp;</operator> <name pos:start="277:41" pos:end="277:49">srcFormat</name> <operator pos:start="277:51" pos:end="277:52">!=</operator> <name pos:start="277:54" pos:end="277:68">AV_PIX_FMT_BGR4</name> <operator pos:start="277:70" pos:end="277:71">&amp;&amp;</operator>

        <name pos:start="279:9" pos:end="279:17">srcFormat</name> <operator pos:start="279:19" pos:end="279:20">!=</operator> <name pos:start="279:22" pos:end="279:41">AV_PIX_FMT_RGB4_BYTE</name> <operator pos:start="279:43" pos:end="279:44">&amp;&amp;</operator> <name pos:start="279:46" pos:end="279:54">srcFormat</name> <operator pos:start="279:56" pos:end="279:57">!=</operator> <name pos:start="279:59" pos:end="279:78">AV_PIX_FMT_BGR4_BYTE</name> <operator pos:start="279:80" pos:end="279:81">&amp;&amp;</operator>

        <name pos:start="281:9" pos:end="281:17">srcFormat</name> <operator pos:start="281:19" pos:end="281:20">!=</operator> <name pos:start="281:22" pos:end="281:39">AV_PIX_FMT_GBRP9BE</name>   <operator pos:start="281:43" pos:end="281:44">&amp;&amp;</operator> <name pos:start="281:46" pos:end="281:54">srcFormat</name> <operator pos:start="281:56" pos:end="281:57">!=</operator> <name pos:start="281:59" pos:end="281:76">AV_PIX_FMT_GBRP9LE</name>  <operator pos:start="281:79" pos:end="281:80">&amp;&amp;</operator>

        <name pos:start="283:9" pos:end="283:17">srcFormat</name> <operator pos:start="283:19" pos:end="283:20">!=</operator> <name pos:start="283:22" pos:end="283:40">AV_PIX_FMT_GBRP10BE</name>  <operator pos:start="283:43" pos:end="283:44">&amp;&amp;</operator> <name pos:start="283:46" pos:end="283:54">srcFormat</name> <operator pos:start="283:56" pos:end="283:57">!=</operator> <name pos:start="283:59" pos:end="283:77">AV_PIX_FMT_GBRP10LE</name> <operator pos:start="283:79" pos:end="283:80">&amp;&amp;</operator>

        <name pos:start="285:9" pos:end="285:17">srcFormat</name> <operator pos:start="285:19" pos:end="285:20">!=</operator> <name pos:start="285:22" pos:end="285:41">AV_PIX_FMT_GBRAP10BE</name> <operator pos:start="285:43" pos:end="285:44">&amp;&amp;</operator> <name pos:start="285:46" pos:end="285:54">srcFormat</name> <operator pos:start="285:56" pos:end="285:57">!=</operator> <name pos:start="285:59" pos:end="285:78">AV_PIX_FMT_GBRAP10LE</name> <operator pos:start="285:80" pos:end="285:81">&amp;&amp;</operator>

        <name pos:start="287:9" pos:end="287:17">srcFormat</name> <operator pos:start="287:19" pos:end="287:20">!=</operator> <name pos:start="287:22" pos:end="287:40">AV_PIX_FMT_GBRP12BE</name>  <operator pos:start="287:43" pos:end="287:44">&amp;&amp;</operator> <name pos:start="287:46" pos:end="287:54">srcFormat</name> <operator pos:start="287:56" pos:end="287:57">!=</operator> <name pos:start="287:59" pos:end="287:77">AV_PIX_FMT_GBRP12LE</name> <operator pos:start="287:79" pos:end="287:80">&amp;&amp;</operator>

        <name pos:start="289:9" pos:end="289:17">srcFormat</name> <operator pos:start="289:19" pos:end="289:20">!=</operator> <name pos:start="289:22" pos:end="289:40">AV_PIX_FMT_GBRP16BE</name>  <operator pos:start="289:43" pos:end="289:44">&amp;&amp;</operator> <name pos:start="289:46" pos:end="289:54">srcFormat</name> <operator pos:start="289:56" pos:end="289:57">!=</operator> <name pos:start="289:59" pos:end="289:77">AV_PIX_FMT_GBRP16LE</name> <operator pos:start="289:79" pos:end="289:80">&amp;&amp;</operator>

        <operator pos:start="291:9" pos:end="291:9">(</operator><operator pos:start="291:10" pos:end="291:10">(</operator><name pos:start="291:11" pos:end="291:14">dstW</name> <operator pos:start="291:16" pos:end="291:17">&gt;&gt;</operator> <name pos:start="291:19" pos:end="291:37"><name pos:start="291:19" pos:end="291:19">c</name><operator pos:start="291:20" pos:end="291:21">-&gt;</operator><name pos:start="291:22" pos:end="291:37">chrDstHSubSample</name></name><operator pos:start="291:38" pos:end="291:38">)</operator> <operator pos:start="291:40" pos:end="291:41">&lt;=</operator> <operator pos:start="291:43" pos:end="291:43">(</operator><name pos:start="291:44" pos:end="291:47">srcW</name> <operator pos:start="291:49" pos:end="291:50">&gt;&gt;</operator> <literal type="number" pos:start="291:52" pos:end="291:52">1</literal><operator pos:start="291:53" pos:end="291:53">)</operator> <operator pos:start="291:55" pos:end="291:56">||</operator>

         <operator pos:start="293:10" pos:end="293:10">(</operator><name pos:start="293:11" pos:end="293:15">flags</name> <operator pos:start="293:17" pos:end="293:17">&amp;</operator> <name pos:start="293:19" pos:end="293:35">SWS_FAST_BILINEAR</name><operator pos:start="293:36" pos:end="293:36">)</operator><operator pos:start="293:37" pos:end="293:37">)</operator></expr>)</condition><block type="pseudo" pos:start="295:9" pos:end="295:32"><block_content pos:start="295:9" pos:end="295:32">

        <expr_stmt pos:start="295:9" pos:end="295:32"><expr pos:start="295:9" pos:end="295:31"><name pos:start="295:9" pos:end="295:27"><name pos:start="295:9" pos:end="295:9">c</name><operator pos:start="295:10" pos:end="295:11">-&gt;</operator><name pos:start="295:12" pos:end="295:27">chrSrcHSubSample</name></name> <operator pos:start="295:29" pos:end="295:29">=</operator> <literal type="number" pos:start="295:31" pos:end="295:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="299:5" pos:end="299:70">// Note the AV_CEIL_RSHIFT is so that we always round toward +inf.</comment>

    <expr_stmt pos:start="301:5" pos:end="301:59"><expr pos:start="301:5" pos:end="301:58"><name pos:start="301:5" pos:end="301:14"><name pos:start="301:5" pos:end="301:5">c</name><operator pos:start="301:6" pos:end="301:7">-&gt;</operator><name pos:start="301:8" pos:end="301:14">chrSrcW</name></name> <operator pos:start="301:16" pos:end="301:16">=</operator> <call pos:start="301:18" pos:end="301:58"><name pos:start="301:18" pos:end="301:31">AV_CEIL_RSHIFT</name><argument_list pos:start="301:32" pos:end="301:58">(<argument pos:start="301:33" pos:end="301:36"><expr pos:start="301:33" pos:end="301:36"><name pos:start="301:33" pos:end="301:36">srcW</name></expr></argument>, <argument pos:start="301:39" pos:end="301:57"><expr pos:start="301:39" pos:end="301:57"><name pos:start="301:39" pos:end="301:57"><name pos:start="301:39" pos:end="301:39">c</name><operator pos:start="301:40" pos:end="301:41">-&gt;</operator><name pos:start="301:42" pos:end="301:57">chrSrcHSubSample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:59"><expr pos:start="303:5" pos:end="303:58"><name pos:start="303:5" pos:end="303:14"><name pos:start="303:5" pos:end="303:5">c</name><operator pos:start="303:6" pos:end="303:7">-&gt;</operator><name pos:start="303:8" pos:end="303:14">chrSrcH</name></name> <operator pos:start="303:16" pos:end="303:16">=</operator> <call pos:start="303:18" pos:end="303:58"><name pos:start="303:18" pos:end="303:31">AV_CEIL_RSHIFT</name><argument_list pos:start="303:32" pos:end="303:58">(<argument pos:start="303:33" pos:end="303:36"><expr pos:start="303:33" pos:end="303:36"><name pos:start="303:33" pos:end="303:36">srcH</name></expr></argument>, <argument pos:start="303:39" pos:end="303:57"><expr pos:start="303:39" pos:end="303:57"><name pos:start="303:39" pos:end="303:57"><name pos:start="303:39" pos:end="303:39">c</name><operator pos:start="303:40" pos:end="303:41">-&gt;</operator><name pos:start="303:42" pos:end="303:57">chrSrcVSubSample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:59"><expr pos:start="305:5" pos:end="305:58"><name pos:start="305:5" pos:end="305:14"><name pos:start="305:5" pos:end="305:5">c</name><operator pos:start="305:6" pos:end="305:7">-&gt;</operator><name pos:start="305:8" pos:end="305:14">chrDstW</name></name> <operator pos:start="305:16" pos:end="305:16">=</operator> <call pos:start="305:18" pos:end="305:58"><name pos:start="305:18" pos:end="305:31">AV_CEIL_RSHIFT</name><argument_list pos:start="305:32" pos:end="305:58">(<argument pos:start="305:33" pos:end="305:36"><expr pos:start="305:33" pos:end="305:36"><name pos:start="305:33" pos:end="305:36">dstW</name></expr></argument>, <argument pos:start="305:39" pos:end="305:57"><expr pos:start="305:39" pos:end="305:57"><name pos:start="305:39" pos:end="305:57"><name pos:start="305:39" pos:end="305:39">c</name><operator pos:start="305:40" pos:end="305:41">-&gt;</operator><name pos:start="305:42" pos:end="305:57">chrDstHSubSample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:59"><expr pos:start="307:5" pos:end="307:58"><name pos:start="307:5" pos:end="307:14"><name pos:start="307:5" pos:end="307:5">c</name><operator pos:start="307:6" pos:end="307:7">-&gt;</operator><name pos:start="307:8" pos:end="307:14">chrDstH</name></name> <operator pos:start="307:16" pos:end="307:16">=</operator> <call pos:start="307:18" pos:end="307:58"><name pos:start="307:18" pos:end="307:31">AV_CEIL_RSHIFT</name><argument_list pos:start="307:32" pos:end="307:58">(<argument pos:start="307:33" pos:end="307:36"><expr pos:start="307:33" pos:end="307:36"><name pos:start="307:33" pos:end="307:36">dstH</name></expr></argument>, <argument pos:start="307:39" pos:end="307:57"><expr pos:start="307:39" pos:end="307:57"><name pos:start="307:39" pos:end="307:57"><name pos:start="307:39" pos:end="307:39">c</name><operator pos:start="307:40" pos:end="307:41">-&gt;</operator><name pos:start="307:42" pos:end="307:57">chrDstVSubSample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="311:5" pos:end="311:32">/* unscaled special cases */</comment>

    <if_stmt pos:start="313:5" pos:end="335:5"><if pos:start="313:5" pos:end="335:5">if <condition pos:start="313:8" pos:end="315:60">(<expr pos:start="313:9" pos:end="315:59"><name pos:start="313:9" pos:end="313:16">unscaled</name> <operator pos:start="313:18" pos:end="313:19">&amp;&amp;</operator> <operator pos:start="313:21" pos:end="313:21">!</operator><name pos:start="313:22" pos:end="313:32">usesHFilter</name> <operator pos:start="313:34" pos:end="313:35">&amp;&amp;</operator> <operator pos:start="313:37" pos:end="313:37">!</operator><name pos:start="313:38" pos:end="313:48">usesVFilter</name> <operator pos:start="313:50" pos:end="313:51">&amp;&amp;</operator>

        <operator pos:start="315:9" pos:end="315:9">(</operator><name pos:start="315:10" pos:end="315:20"><name pos:start="315:10" pos:end="315:10">c</name><operator pos:start="315:11" pos:end="315:12">-&gt;</operator><name pos:start="315:13" pos:end="315:20">srcRange</name></name> <operator pos:start="315:22" pos:end="315:23">==</operator> <name pos:start="315:25" pos:end="315:35"><name pos:start="315:25" pos:end="315:25">c</name><operator pos:start="315:26" pos:end="315:27">-&gt;</operator><name pos:start="315:28" pos:end="315:35">dstRange</name></name> <operator pos:start="315:37" pos:end="315:38">||</operator> <call pos:start="315:40" pos:end="315:58"><name pos:start="315:40" pos:end="315:47">isAnyRGB</name><argument_list pos:start="315:48" pos:end="315:58">(<argument pos:start="315:49" pos:end="315:57"><expr pos:start="315:49" pos:end="315:57"><name pos:start="315:49" pos:end="315:57">dstFormat</name></expr></argument>)</argument_list></call><operator pos:start="315:59" pos:end="315:59">)</operator></expr>)</condition> <block pos:start="315:62" pos:end="335:5">{<block_content pos:start="317:9" pos:end="333:9">

        <expr_stmt pos:start="317:9" pos:end="317:35"><expr pos:start="317:9" pos:end="317:34"><call pos:start="317:9" pos:end="317:34"><name pos:start="317:9" pos:end="317:31">ff_get_unscaled_swscale</name><argument_list pos:start="317:32" pos:end="317:34">(<argument pos:start="317:33" pos:end="317:33"><expr pos:start="317:33" pos:end="317:33"><name pos:start="317:33" pos:end="317:33">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="321:9" pos:end="333:9"><if pos:start="321:9" pos:end="333:9">if <condition pos:start="321:12" pos:end="321:23">(<expr pos:start="321:13" pos:end="321:22"><name pos:start="321:13" pos:end="321:22"><name pos:start="321:13" pos:end="321:13">c</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:22">swscale</name></name></expr>)</condition> <block pos:start="321:25" pos:end="333:9">{<block_content pos:start="323:13" pos:end="331:21">

            <if_stmt pos:start="323:13" pos:end="329:79"><if pos:start="323:13" pos:end="329:79">if <condition pos:start="323:16" pos:end="323:39">(<expr pos:start="323:17" pos:end="323:38"><name pos:start="323:17" pos:end="323:21">flags</name> <operator pos:start="323:23" pos:end="323:23">&amp;</operator> <name pos:start="323:25" pos:end="323:38">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="325:17" pos:end="329:79"><block_content pos:start="325:17" pos:end="329:79">

                <expr_stmt pos:start="325:17" pos:end="329:79"><expr pos:start="325:17" pos:end="329:78"><call pos:start="325:17" pos:end="329:78"><name pos:start="325:17" pos:end="325:22">av_log</name><argument_list pos:start="325:23" pos:end="329:78">(<argument pos:start="325:24" pos:end="325:24"><expr pos:start="325:24" pos:end="325:24"><name pos:start="325:24" pos:end="325:24">c</name></expr></argument>, <argument pos:start="325:27" pos:end="325:37"><expr pos:start="325:27" pos:end="325:37"><name pos:start="325:27" pos:end="325:37">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="327:24" pos:end="327:68"><expr pos:start="327:24" pos:end="327:68"><literal type="string" pos:start="327:24" pos:end="327:68">"using unscaled %s -&gt; %s special converter\n"</literal></expr></argument>,

                       <argument pos:start="329:24" pos:end="329:49"><expr pos:start="329:24" pos:end="329:49"><call pos:start="329:24" pos:end="329:49"><name pos:start="329:24" pos:end="329:38">sws_format_name</name><argument_list pos:start="329:39" pos:end="329:49">(<argument pos:start="329:40" pos:end="329:48"><expr pos:start="329:40" pos:end="329:48"><name pos:start="329:40" pos:end="329:48">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="329:52" pos:end="329:77"><expr pos:start="329:52" pos:end="329:77"><call pos:start="329:52" pos:end="329:77"><name pos:start="329:52" pos:end="329:66">sws_format_name</name><argument_list pos:start="329:67" pos:end="329:77">(<argument pos:start="329:68" pos:end="329:76"><expr pos:start="329:68" pos:end="329:76"><name pos:start="329:68" pos:end="329:76">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="331:13" pos:end="331:21">return <expr pos:start="331:20" pos:end="331:20"><literal type="number" pos:start="331:20" pos:end="331:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="339:5" pos:end="339:40"><expr pos:start="339:5" pos:end="339:39"><name pos:start="339:5" pos:end="339:13"><name pos:start="339:5" pos:end="339:5">c</name><operator pos:start="339:6" pos:end="339:7">-&gt;</operator><name pos:start="339:8" pos:end="339:13">srcBpc</name></name> <operator pos:start="339:15" pos:end="339:15">=</operator> <name pos:start="339:17" pos:end="339:33"><name pos:start="339:17" pos:end="339:24">desc_src</name><operator pos:start="339:25" pos:end="339:26">-&gt;</operator><name pos:start="339:27" pos:end="339:30">comp</name><index pos:start="339:31" pos:end="339:33">[<expr pos:start="339:32" pos:end="339:32"><literal type="number" pos:start="339:32" pos:end="339:32">0</literal></expr>]</index></name><operator pos:start="339:34" pos:end="339:34">.</operator><name pos:start="339:35" pos:end="339:39">depth</name></expr>;</expr_stmt>

    <if_stmt pos:start="341:5" pos:end="343:22"><if pos:start="341:5" pos:end="343:22">if <condition pos:start="341:8" pos:end="341:22">(<expr pos:start="341:9" pos:end="341:21"><name pos:start="341:9" pos:end="341:17"><name pos:start="341:9" pos:end="341:9">c</name><operator pos:start="341:10" pos:end="341:11">-&gt;</operator><name pos:start="341:12" pos:end="341:17">srcBpc</name></name> <operator pos:start="341:19" pos:end="341:19">&lt;</operator> <literal type="number" pos:start="341:21" pos:end="341:21">8</literal></expr>)</condition><block type="pseudo" pos:start="343:9" pos:end="343:22"><block_content pos:start="343:9" pos:end="343:22">

        <expr_stmt pos:start="343:9" pos:end="343:22"><expr pos:start="343:9" pos:end="343:21"><name pos:start="343:9" pos:end="343:17"><name pos:start="343:9" pos:end="343:9">c</name><operator pos:start="343:10" pos:end="343:11">-&gt;</operator><name pos:start="343:12" pos:end="343:17">srcBpc</name></name> <operator pos:start="343:19" pos:end="343:19">=</operator> <literal type="number" pos:start="343:21" pos:end="343:21">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:40"><expr pos:start="345:5" pos:end="345:39"><name pos:start="345:5" pos:end="345:13"><name pos:start="345:5" pos:end="345:5">c</name><operator pos:start="345:6" pos:end="345:7">-&gt;</operator><name pos:start="345:8" pos:end="345:13">dstBpc</name></name> <operator pos:start="345:15" pos:end="345:15">=</operator> <name pos:start="345:17" pos:end="345:33"><name pos:start="345:17" pos:end="345:24">desc_dst</name><operator pos:start="345:25" pos:end="345:26">-&gt;</operator><name pos:start="345:27" pos:end="345:30">comp</name><index pos:start="345:31" pos:end="345:33">[<expr pos:start="345:32" pos:end="345:32"><literal type="number" pos:start="345:32" pos:end="345:32">0</literal></expr>]</index></name><operator pos:start="345:34" pos:end="345:34">.</operator><name pos:start="345:35" pos:end="345:39">depth</name></expr>;</expr_stmt>

    <if_stmt pos:start="347:5" pos:end="349:22"><if pos:start="347:5" pos:end="349:22">if <condition pos:start="347:8" pos:end="347:22">(<expr pos:start="347:9" pos:end="347:21"><name pos:start="347:9" pos:end="347:17"><name pos:start="347:9" pos:end="347:9">c</name><operator pos:start="347:10" pos:end="347:11">-&gt;</operator><name pos:start="347:12" pos:end="347:17">dstBpc</name></name> <operator pos:start="347:19" pos:end="347:19">&lt;</operator> <literal type="number" pos:start="347:21" pos:end="347:21">8</literal></expr>)</condition><block type="pseudo" pos:start="349:9" pos:end="349:22"><block_content pos:start="349:9" pos:end="349:22">

        <expr_stmt pos:start="349:9" pos:end="349:22"><expr pos:start="349:9" pos:end="349:21"><name pos:start="349:9" pos:end="349:17"><name pos:start="349:9" pos:end="349:9">c</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:17">dstBpc</name></name> <operator pos:start="349:19" pos:end="349:19">=</operator> <literal type="number" pos:start="349:21" pos:end="349:21">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="351:5" pos:end="353:25"><if pos:start="351:5" pos:end="353:25">if <condition pos:start="351:8" pos:end="351:24">(<expr pos:start="351:9" pos:end="351:23"><name pos:start="351:9" pos:end="351:17"><name pos:start="351:9" pos:end="351:9">c</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:17">dstBpc</name></name> <operator pos:start="351:19" pos:end="351:20">==</operator> <literal type="number" pos:start="351:22" pos:end="351:23">16</literal></expr>)</condition><block type="pseudo" pos:start="353:9" pos:end="353:25"><block_content pos:start="353:9" pos:end="353:25">

        <expr_stmt pos:start="353:9" pos:end="353:25"><expr pos:start="353:9" pos:end="353:24"><name pos:start="353:9" pos:end="353:18">dst_stride</name> <operator pos:start="353:20" pos:end="353:22">&lt;&lt;=</operator> <literal type="number" pos:start="353:24" pos:end="353:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="355:5" pos:end="359:27"><expr pos:start="355:5" pos:end="359:26"><call pos:start="355:5" pos:end="359:26"><name pos:start="355:5" pos:end="355:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="355:21" pos:end="359:26">(<argument pos:start="355:22" pos:end="355:22"><expr pos:start="355:22" pos:end="355:22"><name pos:start="355:22" pos:end="355:22">c</name></expr></argument>, <argument pos:start="355:25" pos:end="355:43"><expr pos:start="355:25" pos:end="355:43"><name pos:start="355:25" pos:end="355:43"><name pos:start="355:25" pos:end="355:25">c</name><operator pos:start="355:26" pos:end="355:27">-&gt;</operator><name pos:start="355:28" pos:end="355:43">formatConvBuffer</name></name></expr></argument>,

                     <argument pos:start="357:22" pos:end="357:78"><expr pos:start="357:22" pos:end="357:78"><operator pos:start="357:22" pos:end="357:22">(</operator><call pos:start="357:23" pos:end="357:39"><name pos:start="357:23" pos:end="357:29">FFALIGN</name><argument_list pos:start="357:30" pos:end="357:39">(<argument pos:start="357:31" pos:end="357:34"><expr pos:start="357:31" pos:end="357:34"><name pos:start="357:31" pos:end="357:34">srcW</name></expr></argument>, <argument pos:start="357:37" pos:end="357:38"><expr pos:start="357:37" pos:end="357:38"><literal type="number" pos:start="357:37" pos:end="357:38">16</literal></expr></argument>)</argument_list></call> <operator pos:start="357:41" pos:end="357:41">*</operator> <literal type="number" pos:start="357:43" pos:end="357:43">2</literal> <operator pos:start="357:45" pos:end="357:45">*</operator> <call pos:start="357:47" pos:end="357:67"><name pos:start="357:47" pos:end="357:53">FFALIGN</name><argument_list pos:start="357:54" pos:end="357:67">(<argument pos:start="357:55" pos:end="357:63"><expr pos:start="357:55" pos:end="357:63"><name pos:start="357:55" pos:end="357:63"><name pos:start="357:55" pos:end="357:55">c</name><operator pos:start="357:56" pos:end="357:57">-&gt;</operator><name pos:start="357:58" pos:end="357:63">srcBpc</name></name></expr></argument>, <argument pos:start="357:66" pos:end="357:66"><expr pos:start="357:66" pos:end="357:66"><literal type="number" pos:start="357:66" pos:end="357:66">8</literal></expr></argument>)</argument_list></call> <operator pos:start="357:69" pos:end="357:70">&gt;&gt;</operator> <literal type="number" pos:start="357:72" pos:end="357:72">3</literal><operator pos:start="357:73" pos:end="357:73">)</operator> <operator pos:start="357:75" pos:end="357:75">+</operator> <literal type="number" pos:start="357:77" pos:end="357:78">16</literal></expr></argument>,

                     <argument pos:start="359:22" pos:end="359:25"><expr pos:start="359:22" pos:end="359:25"><name pos:start="359:22" pos:end="359:25">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="361:5" pos:end="385:31"><if pos:start="361:5" pos:end="383:5">if <condition pos:start="361:8" pos:end="361:70">(<expr pos:start="361:9" pos:end="361:69"><call pos:start="361:9" pos:end="361:32"><name pos:start="361:9" pos:end="361:21">INLINE_MMXEXT</name><argument_list pos:start="361:22" pos:end="361:32">(<argument pos:start="361:23" pos:end="361:31"><expr pos:start="361:23" pos:end="361:31"><name pos:start="361:23" pos:end="361:31">cpu_flags</name></expr></argument>)</argument_list></call> <operator pos:start="361:34" pos:end="361:35">&amp;&amp;</operator> <name pos:start="361:37" pos:end="361:45"><name pos:start="361:37" pos:end="361:37">c</name><operator pos:start="361:38" pos:end="361:39">-&gt;</operator><name pos:start="361:40" pos:end="361:45">srcBpc</name></name> <operator pos:start="361:47" pos:end="361:48">==</operator> <literal type="number" pos:start="361:50" pos:end="361:50">8</literal> <operator pos:start="361:52" pos:end="361:53">&amp;&amp;</operator> <name pos:start="361:55" pos:end="361:63"><name pos:start="361:55" pos:end="361:55">c</name><operator pos:start="361:56" pos:end="361:57">-&gt;</operator><name pos:start="361:58" pos:end="361:63">dstBpc</name></name> <operator pos:start="361:65" pos:end="361:66">&lt;=</operator> <literal type="number" pos:start="361:68" pos:end="361:69">12</literal></expr>)</condition> <block pos:start="361:72" pos:end="383:5">{<block_content pos:start="363:9" pos:end="381:35">

        <expr_stmt pos:start="363:9" pos:end="365:56"><expr pos:start="363:9" pos:end="365:55"><name pos:start="363:9" pos:end="363:26"><name pos:start="363:9" pos:end="363:9">c</name><operator pos:start="363:10" pos:end="363:11">-&gt;</operator><name pos:start="363:12" pos:end="363:26">canMMXEXTBeUsed</name></name> <operator pos:start="363:28" pos:end="363:28">=</operator> <ternary pos:start="363:30" pos:end="365:55"><condition pos:start="363:30" pos:end="365:49"><expr pos:start="363:30" pos:end="365:47"><operator pos:start="363:30" pos:end="363:30">(</operator><name pos:start="363:31" pos:end="363:34">dstW</name> <operator pos:start="363:36" pos:end="363:37">&gt;=</operator> <name pos:start="363:39" pos:end="363:42">srcW</name> <operator pos:start="363:44" pos:end="363:45">&amp;&amp;</operator> <operator pos:start="363:47" pos:end="363:47">(</operator><name pos:start="363:48" pos:end="363:51">dstW</name> <operator pos:start="363:53" pos:end="363:53">&amp;</operator> <literal type="number" pos:start="363:55" pos:end="363:56">31</literal><operator pos:start="363:57" pos:end="363:57">)</operator> <operator pos:start="363:59" pos:end="363:60">==</operator> <literal type="number" pos:start="363:62" pos:end="363:62">0</literal> <operator pos:start="363:64" pos:end="363:65">&amp;&amp;</operator>

                              <operator pos:start="365:31" pos:end="365:31">(</operator><name pos:start="365:32" pos:end="365:35">srcW</name> <operator pos:start="365:37" pos:end="365:37">&amp;</operator> <literal type="number" pos:start="365:39" pos:end="365:40">15</literal><operator pos:start="365:41" pos:end="365:41">)</operator> <operator pos:start="365:43" pos:end="365:44">==</operator> <literal type="number" pos:start="365:46" pos:end="365:46">0</literal><operator pos:start="365:47" pos:end="365:47">)</operator></expr> ?</condition><then pos:start="365:51" pos:end="365:51"> <expr pos:start="365:51" pos:end="365:51"><literal type="number" pos:start="365:51" pos:end="365:51">1</literal></expr> </then><else pos:start="365:53" pos:end="365:55">: <expr pos:start="365:55" pos:end="365:55"><literal type="number" pos:start="365:55" pos:end="365:55">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="367:9" pos:end="377:9"><if pos:start="367:9" pos:end="377:9">if <condition pos:start="367:12" pos:end="369:43">(<expr pos:start="367:13" pos:end="369:42"><operator pos:start="367:13" pos:end="367:13">!</operator><name pos:start="367:14" pos:end="367:31"><name pos:start="367:14" pos:end="367:14">c</name><operator pos:start="367:15" pos:end="367:16">-&gt;</operator><name pos:start="367:17" pos:end="367:31">canMMXEXTBeUsed</name></name> <operator pos:start="367:33" pos:end="367:34">&amp;&amp;</operator> <name pos:start="367:36" pos:end="367:39">dstW</name> <operator pos:start="367:41" pos:end="367:42">&gt;=</operator> <name pos:start="367:44" pos:end="367:47">srcW</name> <operator pos:start="367:49" pos:end="367:50">&amp;&amp;</operator> <operator pos:start="367:52" pos:end="367:52">(</operator><name pos:start="367:53" pos:end="367:56">srcW</name> <operator pos:start="367:58" pos:end="367:58">&amp;</operator> <literal type="number" pos:start="367:60" pos:end="367:61">15</literal><operator pos:start="367:62" pos:end="367:62">)</operator> <operator pos:start="367:64" pos:end="367:65">==</operator> <literal type="number" pos:start="367:67" pos:end="367:67">0</literal>

            <operator pos:start="369:13" pos:end="369:14">&amp;&amp;</operator> <operator pos:start="369:16" pos:end="369:16">(</operator><name pos:start="369:17" pos:end="369:21">flags</name> <operator pos:start="369:23" pos:end="369:23">&amp;</operator> <name pos:start="369:25" pos:end="369:41">SWS_FAST_BILINEAR</name><operator pos:start="369:42" pos:end="369:42">)</operator></expr>)</condition> <block pos:start="369:45" pos:end="377:9">{<block_content pos:start="371:13" pos:end="375:85">

            <if_stmt pos:start="371:13" pos:end="375:85"><if pos:start="371:13" pos:end="375:85">if <condition pos:start="371:16" pos:end="371:39">(<expr pos:start="371:17" pos:end="371:38"><name pos:start="371:17" pos:end="371:21">flags</name> <operator pos:start="371:23" pos:end="371:23">&amp;</operator> <name pos:start="371:25" pos:end="371:38">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="373:17" pos:end="375:85"><block_content pos:start="373:17" pos:end="375:85">

                <expr_stmt pos:start="373:17" pos:end="375:85"><expr pos:start="373:17" pos:end="375:84"><call pos:start="373:17" pos:end="375:84"><name pos:start="373:17" pos:end="373:22">av_log</name><argument_list pos:start="373:23" pos:end="375:84">(<argument pos:start="373:24" pos:end="373:24"><expr pos:start="373:24" pos:end="373:24"><name pos:start="373:24" pos:end="373:24">c</name></expr></argument>, <argument pos:start="373:27" pos:end="373:37"><expr pos:start="373:27" pos:end="373:37"><name pos:start="373:27" pos:end="373:37">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="375:24" pos:end="375:83"><expr pos:start="375:24" pos:end="375:83"><literal type="string" pos:start="375:24" pos:end="375:83">"output width is not a multiple of 32 -&gt; no MMXEXT scaler\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="379:9" pos:end="381:35"><if pos:start="379:9" pos:end="381:35">if <condition pos:start="379:12" pos:end="379:24">(<expr pos:start="379:13" pos:end="379:23"><name pos:start="379:13" pos:end="379:23">usesHFilter</name></expr>)</condition><block type="pseudo" pos:start="381:13" pos:end="381:35"><block_content pos:start="381:13" pos:end="381:35">

            <expr_stmt pos:start="381:13" pos:end="381:35"><expr pos:start="381:13" pos:end="381:34"><name pos:start="381:13" pos:end="381:30"><name pos:start="381:13" pos:end="381:13">c</name><operator pos:start="381:14" pos:end="381:15">-&gt;</operator><name pos:start="381:16" pos:end="381:30">canMMXEXTBeUsed</name></name> <operator pos:start="381:32" pos:end="381:32">=</operator> <literal type="number" pos:start="381:34" pos:end="381:34">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="383:7" pos:end="385:31">else<block type="pseudo" pos:start="385:9" pos:end="385:31"><block_content pos:start="385:9" pos:end="385:31">

        <expr_stmt pos:start="385:9" pos:end="385:31"><expr pos:start="385:9" pos:end="385:30"><name pos:start="385:9" pos:end="385:26"><name pos:start="385:9" pos:end="385:9">c</name><operator pos:start="385:10" pos:end="385:11">-&gt;</operator><name pos:start="385:12" pos:end="385:26">canMMXEXTBeUsed</name></name> <operator pos:start="385:28" pos:end="385:28">=</operator> <literal type="number" pos:start="385:30" pos:end="385:30">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="389:5" pos:end="389:80"><expr pos:start="389:5" pos:end="389:79"><name pos:start="389:5" pos:end="389:14"><name pos:start="389:5" pos:end="389:5">c</name><operator pos:start="389:6" pos:end="389:7">-&gt;</operator><name pos:start="389:8" pos:end="389:14">chrXInc</name></name> <operator pos:start="389:16" pos:end="389:16">=</operator> <operator pos:start="389:18" pos:end="389:18">(</operator><operator pos:start="389:19" pos:end="389:19">(</operator><operator pos:start="389:20" pos:end="389:20">(</operator><name pos:start="389:21" pos:end="389:27">int64_t</name><operator pos:start="389:28" pos:end="389:28">)</operator><name pos:start="389:29" pos:end="389:38"><name pos:start="389:29" pos:end="389:29">c</name><operator pos:start="389:30" pos:end="389:31">-&gt;</operator><name pos:start="389:32" pos:end="389:38">chrSrcW</name></name> <operator pos:start="389:40" pos:end="389:41">&lt;&lt;</operator> <literal type="number" pos:start="389:43" pos:end="389:44">16</literal><operator pos:start="389:45" pos:end="389:45">)</operator> <operator pos:start="389:47" pos:end="389:47">+</operator> <operator pos:start="389:49" pos:end="389:49">(</operator><name pos:start="389:50" pos:end="389:59"><name pos:start="389:50" pos:end="389:50">c</name><operator pos:start="389:51" pos:end="389:52">-&gt;</operator><name pos:start="389:53" pos:end="389:59">chrDstW</name></name> <operator pos:start="389:61" pos:end="389:62">&gt;&gt;</operator> <literal type="number" pos:start="389:64" pos:end="389:64">1</literal><operator pos:start="389:65" pos:end="389:65">)</operator><operator pos:start="389:66" pos:end="389:66">)</operator> <operator pos:start="389:68" pos:end="389:68">/</operator> <name pos:start="389:70" pos:end="389:79"><name pos:start="389:70" pos:end="389:70">c</name><operator pos:start="389:71" pos:end="389:72">-&gt;</operator><name pos:start="389:73" pos:end="389:79">chrDstW</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="391:5" pos:end="391:80"><expr pos:start="391:5" pos:end="391:79"><name pos:start="391:5" pos:end="391:14"><name pos:start="391:5" pos:end="391:5">c</name><operator pos:start="391:6" pos:end="391:7">-&gt;</operator><name pos:start="391:8" pos:end="391:14">chrYInc</name></name> <operator pos:start="391:16" pos:end="391:16">=</operator> <operator pos:start="391:18" pos:end="391:18">(</operator><operator pos:start="391:19" pos:end="391:19">(</operator><operator pos:start="391:20" pos:end="391:20">(</operator><name pos:start="391:21" pos:end="391:27">int64_t</name><operator pos:start="391:28" pos:end="391:28">)</operator><name pos:start="391:29" pos:end="391:38"><name pos:start="391:29" pos:end="391:29">c</name><operator pos:start="391:30" pos:end="391:31">-&gt;</operator><name pos:start="391:32" pos:end="391:38">chrSrcH</name></name> <operator pos:start="391:40" pos:end="391:41">&lt;&lt;</operator> <literal type="number" pos:start="391:43" pos:end="391:44">16</literal><operator pos:start="391:45" pos:end="391:45">)</operator> <operator pos:start="391:47" pos:end="391:47">+</operator> <operator pos:start="391:49" pos:end="391:49">(</operator><name pos:start="391:50" pos:end="391:59"><name pos:start="391:50" pos:end="391:50">c</name><operator pos:start="391:51" pos:end="391:52">-&gt;</operator><name pos:start="391:53" pos:end="391:59">chrDstH</name></name> <operator pos:start="391:61" pos:end="391:62">&gt;&gt;</operator> <literal type="number" pos:start="391:64" pos:end="391:64">1</literal><operator pos:start="391:65" pos:end="391:65">)</operator><operator pos:start="391:66" pos:end="391:66">)</operator> <operator pos:start="391:68" pos:end="391:68">/</operator> <name pos:start="391:70" pos:end="391:79"><name pos:start="391:70" pos:end="391:70">c</name><operator pos:start="391:71" pos:end="391:72">-&gt;</operator><name pos:start="391:73" pos:end="391:79">chrDstH</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="395:5" pos:end="407:56">/* Match pixel 0 of the src to pixel 0 of dst and match pixel n-2 of src

     * to pixel n-2 of dst, but only for the FAST_BILINEAR mode otherwise do

     * correct scaling.

     * n-2 is the last chrominance sample available.

     * This is not perfect, but no one should notice the difference, the more

     * correct variant would be like the vertical one, but that would require

     * some special code for the first and last pixel */</comment>

    <if_stmt pos:start="409:5" pos:end="434:0"><if pos:start="409:5" pos:end="434:0">if <condition pos:start="409:8" pos:end="409:34">(<expr pos:start="409:9" pos:end="409:33"><name pos:start="409:9" pos:end="409:13">flags</name> <operator pos:start="409:15" pos:end="409:15">&amp;</operator> <name pos:start="409:17" pos:end="409:33">SWS_FAST_BILINEAR</name></expr>)</condition> <block pos:start="409:36" pos:end="434:0">{<block_content pos:start="411:9" pos:end="427:9">

        <if_stmt pos:start="411:9" pos:end="427:9"><if pos:start="411:9" pos:end="417:9">if <condition pos:start="411:12" pos:end="411:31">(<expr pos:start="411:13" pos:end="411:30"><name pos:start="411:13" pos:end="411:30"><name pos:start="411:13" pos:end="411:13">c</name><operator pos:start="411:14" pos:end="411:15">-&gt;</operator><name pos:start="411:16" pos:end="411:30">canMMXEXTBeUsed</name></name></expr>)</condition> <block pos:start="411:33" pos:end="417:9">{<block_content pos:start="413:13" pos:end="415:29">

            <expr_stmt pos:start="413:13" pos:end="413:29"><expr pos:start="413:13" pos:end="413:28"><name pos:start="413:13" pos:end="413:22"><name pos:start="413:13" pos:end="413:13">c</name><operator pos:start="413:14" pos:end="413:15">-&gt;</operator><name pos:start="413:16" pos:end="413:22">lumXInc</name></name> <operator pos:start="413:24" pos:end="413:25">+=</operator> <literal type="number" pos:start="413:27" pos:end="413:28">20</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="415:13" pos:end="415:29"><expr pos:start="415:13" pos:end="415:28"><name pos:start="415:13" pos:end="415:22"><name pos:start="415:13" pos:end="415:13">c</name><operator pos:start="415:14" pos:end="415:15">-&gt;</operator><name pos:start="415:16" pos:end="415:22">chrXInc</name></name> <operator pos:start="415:24" pos:end="415:25">+=</operator> <literal type="number" pos:start="415:27" pos:end="415:28">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if>

        <comment type="line" pos:start="419:9" pos:end="419:62">// we don't use the x86 asm scaler if MMX is available</comment>

        <if type="elseif" pos:start="421:9" pos:end="427:9">else if <condition pos:start="421:17" pos:end="421:39">(<expr pos:start="421:18" pos:end="421:38"><call pos:start="421:18" pos:end="421:38"><name pos:start="421:18" pos:end="421:27">INLINE_MMX</name><argument_list pos:start="421:28" pos:end="421:38">(<argument pos:start="421:29" pos:end="421:37"><expr pos:start="421:29" pos:end="421:37"><name pos:start="421:29" pos:end="421:37">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="421:41" pos:end="427:9">{<block_content pos:start="423:13" pos:end="425:83">

            <expr_stmt pos:start="423:13" pos:end="423:83"><expr pos:start="423:13" pos:end="423:82"><name pos:start="423:13" pos:end="423:22"><name pos:start="423:13" pos:end="423:13">c</name><operator pos:start="423:14" pos:end="423:15">-&gt;</operator><name pos:start="423:16" pos:end="423:22">lumXInc</name></name> <operator pos:start="423:24" pos:end="423:24">=</operator> <operator pos:start="423:26" pos:end="423:26">(</operator><operator pos:start="423:27" pos:end="423:27">(</operator><name pos:start="423:28" pos:end="423:34">int64_t</name><operator pos:start="423:35" pos:end="423:35">)</operator><operator pos:start="423:36" pos:end="423:36">(</operator><name pos:start="423:37" pos:end="423:40">srcW</name>       <operator pos:start="423:48" pos:end="423:48">-</operator> <literal type="number" pos:start="423:50" pos:end="423:50">2</literal><operator pos:start="423:51" pos:end="423:51">)</operator> <operator pos:start="423:53" pos:end="423:54">&lt;&lt;</operator> <literal type="number" pos:start="423:56" pos:end="423:57">16</literal><operator pos:start="423:58" pos:end="423:58">)</operator> <operator pos:start="423:60" pos:end="423:60">/</operator> <operator pos:start="423:62" pos:end="423:62">(</operator><name pos:start="423:63" pos:end="423:66">dstW</name>       <operator pos:start="423:74" pos:end="423:74">-</operator> <literal type="number" pos:start="423:76" pos:end="423:76">2</literal><operator pos:start="423:77" pos:end="423:77">)</operator> <operator pos:start="423:79" pos:end="423:79">-</operator> <literal type="number" pos:start="423:81" pos:end="423:82">20</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:83"><expr pos:start="425:13" pos:end="425:82"><name pos:start="425:13" pos:end="425:22"><name pos:start="425:13" pos:end="425:13">c</name><operator pos:start="425:14" pos:end="425:15">-&gt;</operator><name pos:start="425:16" pos:end="425:22">chrXInc</name></name> <operator pos:start="425:24" pos:end="425:24">=</operator> <operator pos:start="425:26" pos:end="425:26">(</operator><operator pos:start="425:27" pos:end="425:27">(</operator><name pos:start="425:28" pos:end="425:34">int64_t</name><operator pos:start="425:35" pos:end="425:35">)</operator><operator pos:start="425:36" pos:end="425:36">(</operator><name pos:start="425:37" pos:end="425:46"><name pos:start="425:37" pos:end="425:37">c</name><operator pos:start="425:38" pos:end="425:39">-&gt;</operator><name pos:start="425:40" pos:end="425:46">chrSrcW</name></name> <operator pos:start="425:48" pos:end="425:48">-</operator> <literal type="number" pos:start="425:50" pos:end="425:50">2</literal><operator pos:start="425:51" pos:end="425:51">)</operator> <operator pos:start="425:53" pos:end="425:54">&lt;&lt;</operator> <literal type="number" pos:start="425:56" pos:end="425:57">16</literal><operator pos:start="425:58" pos:end="425:58">)</operator> <operator pos:start="425:60" pos:end="425:60">/</operator> <operator pos:start="425:62" pos:end="425:62">(</operator><name pos:start="425:63" pos:end="425:72"><name pos:start="425:63" pos:end="425:63">c</name><operator pos:start="425:64" pos:end="425:65">-&gt;</operator><name pos:start="425:66" pos:end="425:72">chrDstW</name></name> <operator pos:start="425:74" pos:end="425:74">-</operator> <literal type="number" pos:start="425:76" pos:end="425:76">2</literal><operator pos:start="425:77" pos:end="425:77">)</operator> <operator pos:start="425:79" pos:end="425:79">-</operator> <literal type="number" pos:start="425:81" pos:end="425:82">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:define pos:start="433:1" pos:end="433:70">#<cpp:directive pos:start="433:2" pos:end="433:7">define</cpp:directive> <cpp:macro pos:start="433:9" pos:end="433:16"><name pos:start="433:9" pos:end="433:16">USE_MMAP</name></cpp:macro> <cpp:value pos:start="433:18" pos:end="433:70">(HAVE_MMAP &amp;&amp; HAVE_MPROTECT &amp;&amp; defined MAP_ANONYMOUS)</cpp:value></cpp:define>



    <comment type="block" pos:start="437:5" pos:end="437:60">/* precalculate horizontal scaler filter coefficients */</comment>

    <block pos:start="439:5" pos:end="577:5">{<block_content pos:start="445:9" pos:end="575:9">

<cpp:if pos:start="441:1" pos:end="441:22">#<cpp:directive pos:start="441:2" pos:end="441:3">if</cpp:directive> <expr pos:start="441:5" pos:end="441:22"><name pos:start="441:5" pos:end="441:22">HAVE_MMXEXT_INLINE</name></expr></cpp:if>

<comment type="line" pos:start="443:1" pos:end="443:22">// can't downscale !!!</comment>

        <if_stmt pos:start="445:9" pos:end="575:9"><if pos:start="445:9" pos:end="535:9">if <condition pos:start="445:12" pos:end="445:62">(<expr pos:start="445:13" pos:end="445:61"><name pos:start="445:13" pos:end="445:30"><name pos:start="445:13" pos:end="445:13">c</name><operator pos:start="445:14" pos:end="445:15">-&gt;</operator><name pos:start="445:16" pos:end="445:30">canMMXEXTBeUsed</name></name> <operator pos:start="445:32" pos:end="445:33">&amp;&amp;</operator> <operator pos:start="445:35" pos:end="445:35">(</operator><name pos:start="445:36" pos:end="445:40">flags</name> <operator pos:start="445:42" pos:end="445:42">&amp;</operator> <name pos:start="445:44" pos:end="445:60">SWS_FAST_BILINEAR</name><operator pos:start="445:61" pos:end="445:61">)</operator></expr>)</condition> <block pos:start="445:64" pos:end="535:9">{<block_content pos:start="447:13" pos:end="534:0">

            <expr_stmt pos:start="447:13" pos:end="449:76"><expr pos:start="447:13" pos:end="449:75"><name pos:start="447:13" pos:end="447:38"><name pos:start="447:13" pos:end="447:13">c</name><operator pos:start="447:14" pos:end="447:15">-&gt;</operator><name pos:start="447:16" pos:end="447:38">lumMmxextFilterCodeSize</name></name> <operator pos:start="447:40" pos:end="447:40">=</operator> <call pos:start="447:42" pos:end="449:75"><name pos:start="447:42" pos:end="447:60">init_hscaler_mmxext</name><argument_list pos:start="447:61" pos:end="449:75">(<argument pos:start="447:62" pos:end="447:65"><expr pos:start="447:62" pos:end="447:65"><name pos:start="447:62" pos:end="447:65">dstW</name></expr></argument>, <argument pos:start="447:68" pos:end="447:77"><expr pos:start="447:68" pos:end="447:77"><name pos:start="447:68" pos:end="447:77"><name pos:start="447:68" pos:end="447:68">c</name><operator pos:start="447:69" pos:end="447:70">-&gt;</operator><name pos:start="447:71" pos:end="447:77">lumXInc</name></name></expr></argument>, <argument pos:start="447:80" pos:end="447:83"><expr pos:start="447:80" pos:end="447:83"><name pos:start="447:80" pos:end="447:83">NULL</name></expr></argument>,

                                                             <argument pos:start="449:62" pos:end="449:65"><expr pos:start="449:62" pos:end="449:65"><name pos:start="449:62" pos:end="449:65">NULL</name></expr></argument>, <argument pos:start="449:68" pos:end="449:71"><expr pos:start="449:68" pos:end="449:71"><name pos:start="449:68" pos:end="449:71">NULL</name></expr></argument>, <argument pos:start="449:74" pos:end="449:74"><expr pos:start="449:74" pos:end="449:74"><literal type="number" pos:start="449:74" pos:end="449:74">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="458:0"><expr pos:start="451:13" pos:end="453:81"><name pos:start="451:13" pos:end="451:38"><name pos:start="451:13" pos:end="451:13">c</name><operator pos:start="451:14" pos:end="451:15">-&gt;</operator><name pos:start="451:16" pos:end="451:38">chrMmxextFilterCodeSize</name></name> <operator pos:start="451:40" pos:end="451:40">=</operator> <call pos:start="451:42" pos:end="453:81"><name pos:start="451:42" pos:end="451:60">init_hscaler_mmxext</name><argument_list pos:start="451:61" pos:end="453:81">(<argument pos:start="451:62" pos:end="451:71"><expr pos:start="451:62" pos:end="451:71"><name pos:start="451:62" pos:end="451:71"><name pos:start="451:62" pos:end="451:62">c</name><operator pos:start="451:63" pos:end="451:64">-&gt;</operator><name pos:start="451:65" pos:end="451:71">chrDstW</name></name></expr></argument>, <argument pos:start="451:74" pos:end="451:83"><expr pos:start="451:74" pos:end="451:83"><name pos:start="451:74" pos:end="451:83"><name pos:start="451:74" pos:end="451:74">c</name><operator pos:start="451:75" pos:end="451:76">-&gt;</operator><name pos:start="451:77" pos:end="451:83">chrXInc</name></name></expr></argument>,

                                                             <argument pos:start="453:62" pos:end="453:65"><expr pos:start="453:62" pos:end="453:65"><name pos:start="453:62" pos:end="453:65">NULL</name></expr></argument>, <argument pos:start="453:68" pos:end="453:71"><expr pos:start="453:68" pos:end="453:71"><name pos:start="453:68" pos:end="453:71">NULL</name></expr></argument>, <argument pos:start="453:74" pos:end="453:77"><expr pos:start="453:74" pos:end="453:77"><name pos:start="453:74" pos:end="453:77">NULL</name></expr></argument>, <argument pos:start="453:80" pos:end="453:80"><expr pos:start="453:80" pos:end="453:80"><literal type="number" pos:start="453:80" pos:end="453:80">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="457:1" pos:end="457:12">#<cpp:directive pos:start="457:2" pos:end="457:3">if</cpp:directive> <expr pos:start="457:5" pos:end="457:12"><name pos:start="457:5" pos:end="457:12">USE_MMAP</name></expr></cpp:if>

            <expr_stmt pos:start="459:13" pos:end="465:49"><expr pos:start="459:13" pos:end="465:48"><name pos:start="459:13" pos:end="459:34"><name pos:start="459:13" pos:end="459:13">c</name><operator pos:start="459:14" pos:end="459:15">-&gt;</operator><name pos:start="459:16" pos:end="459:34">lumMmxextFilterCode</name></name> <operator pos:start="459:36" pos:end="459:36">=</operator> <call pos:start="459:38" pos:end="465:48"><name pos:start="459:38" pos:end="459:41">mmap</name><argument_list pos:start="459:42" pos:end="465:48">(<argument pos:start="459:43" pos:end="459:46"><expr pos:start="459:43" pos:end="459:46"><name pos:start="459:43" pos:end="459:46">NULL</name></expr></argument>, <argument pos:start="459:49" pos:end="459:74"><expr pos:start="459:49" pos:end="459:74"><name pos:start="459:49" pos:end="459:74"><name pos:start="459:49" pos:end="459:49">c</name><operator pos:start="459:50" pos:end="459:51">-&gt;</operator><name pos:start="459:52" pos:end="459:74">lumMmxextFilterCodeSize</name></name></expr></argument>,

                                          <argument pos:start="461:43" pos:end="461:64"><expr pos:start="461:43" pos:end="461:64"><name pos:start="461:43" pos:end="461:51">PROT_READ</name> <operator pos:start="461:53" pos:end="461:53">|</operator> <name pos:start="461:55" pos:end="461:64">PROT_WRITE</name></expr></argument>,

                                          <argument pos:start="463:43" pos:end="463:69"><expr pos:start="463:43" pos:end="463:69"><name pos:start="463:43" pos:end="463:53">MAP_PRIVATE</name> <operator pos:start="463:55" pos:end="463:55">|</operator> <name pos:start="463:57" pos:end="463:69">MAP_ANONYMOUS</name></expr></argument>,

                                          <argument pos:start="465:43" pos:end="465:44"><expr pos:start="465:43" pos:end="465:44"><operator pos:start="465:43" pos:end="465:43">-</operator><literal type="number" pos:start="465:44" pos:end="465:44">1</literal></expr></argument>, <argument pos:start="465:47" pos:end="465:47"><expr pos:start="465:47" pos:end="465:47"><literal type="number" pos:start="465:47" pos:end="465:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="467:13" pos:end="476:0"><expr pos:start="467:13" pos:end="473:48"><name pos:start="467:13" pos:end="467:34"><name pos:start="467:13" pos:end="467:13">c</name><operator pos:start="467:14" pos:end="467:15">-&gt;</operator><name pos:start="467:16" pos:end="467:34">chrMmxextFilterCode</name></name> <operator pos:start="467:36" pos:end="467:36">=</operator> <call pos:start="467:38" pos:end="473:48"><name pos:start="467:38" pos:end="467:41">mmap</name><argument_list pos:start="467:42" pos:end="473:48">(<argument pos:start="467:43" pos:end="467:46"><expr pos:start="467:43" pos:end="467:46"><name pos:start="467:43" pos:end="467:46">NULL</name></expr></argument>, <argument pos:start="467:49" pos:end="467:74"><expr pos:start="467:49" pos:end="467:74"><name pos:start="467:49" pos:end="467:74"><name pos:start="467:49" pos:end="467:49">c</name><operator pos:start="467:50" pos:end="467:51">-&gt;</operator><name pos:start="467:52" pos:end="467:74">chrMmxextFilterCodeSize</name></name></expr></argument>,

                                          <argument pos:start="469:43" pos:end="469:64"><expr pos:start="469:43" pos:end="469:64"><name pos:start="469:43" pos:end="469:51">PROT_READ</name> <operator pos:start="469:53" pos:end="469:53">|</operator> <name pos:start="469:55" pos:end="469:64">PROT_WRITE</name></expr></argument>,

                                          <argument pos:start="471:43" pos:end="471:69"><expr pos:start="471:43" pos:end="471:69"><name pos:start="471:43" pos:end="471:53">MAP_PRIVATE</name> <operator pos:start="471:55" pos:end="471:55">|</operator> <name pos:start="471:57" pos:end="471:69">MAP_ANONYMOUS</name></expr></argument>,

                                          <argument pos:start="473:43" pos:end="473:44"><expr pos:start="473:43" pos:end="473:44"><operator pos:start="473:43" pos:end="473:43">-</operator><literal type="number" pos:start="473:44" pos:end="473:44">1</literal></expr></argument>, <argument pos:start="473:47" pos:end="473:47"><expr pos:start="473:47" pos:end="473:47"><literal type="number" pos:start="473:47" pos:end="473:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="475:1" pos:end="475:23">#<cpp:directive pos:start="475:2" pos:end="475:5">elif</cpp:directive> <expr pos:start="475:7" pos:end="475:23"><name pos:start="475:7" pos:end="475:23">HAVE_VIRTUALALLOC</name></expr></cpp:elif>

            <expr_stmt pos:start="477:13" pos:end="483:74"><expr pos:start="477:13" pos:end="483:73"><name pos:start="477:13" pos:end="477:34"><name pos:start="477:13" pos:end="477:13">c</name><operator pos:start="477:14" pos:end="477:15">-&gt;</operator><name pos:start="477:16" pos:end="477:34">lumMmxextFilterCode</name></name> <operator pos:start="477:36" pos:end="477:36">=</operator> <call pos:start="477:38" pos:end="483:73"><name pos:start="477:38" pos:end="477:49">VirtualAlloc</name><argument_list pos:start="477:50" pos:end="483:73">(<argument pos:start="477:51" pos:end="477:54"><expr pos:start="477:51" pos:end="477:54"><name pos:start="477:51" pos:end="477:54">NULL</name></expr></argument>,

                                                  <argument pos:start="479:51" pos:end="479:76"><expr pos:start="479:51" pos:end="479:76"><name pos:start="479:51" pos:end="479:76"><name pos:start="479:51" pos:end="479:51">c</name><operator pos:start="479:52" pos:end="479:53">-&gt;</operator><name pos:start="479:54" pos:end="479:76">lumMmxextFilterCodeSize</name></name></expr></argument>,

                                                  <argument pos:start="481:51" pos:end="481:60"><expr pos:start="481:51" pos:end="481:60"><name pos:start="481:51" pos:end="481:60">MEM_COMMIT</name></expr></argument>,

                                                  <argument pos:start="483:51" pos:end="483:72"><expr pos:start="483:51" pos:end="483:72"><name pos:start="483:51" pos:end="483:72">PAGE_EXECUTE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="485:13" pos:end="494:0"><expr pos:start="485:13" pos:end="491:73"><name pos:start="485:13" pos:end="485:34"><name pos:start="485:13" pos:end="485:13">c</name><operator pos:start="485:14" pos:end="485:15">-&gt;</operator><name pos:start="485:16" pos:end="485:34">chrMmxextFilterCode</name></name> <operator pos:start="485:36" pos:end="485:36">=</operator> <call pos:start="485:38" pos:end="491:73"><name pos:start="485:38" pos:end="485:49">VirtualAlloc</name><argument_list pos:start="485:50" pos:end="491:73">(<argument pos:start="485:51" pos:end="485:54"><expr pos:start="485:51" pos:end="485:54"><name pos:start="485:51" pos:end="485:54">NULL</name></expr></argument>,

                                                  <argument pos:start="487:51" pos:end="487:76"><expr pos:start="487:51" pos:end="487:76"><name pos:start="487:51" pos:end="487:76"><name pos:start="487:51" pos:end="487:51">c</name><operator pos:start="487:52" pos:end="487:53">-&gt;</operator><name pos:start="487:54" pos:end="487:76">chrMmxextFilterCodeSize</name></name></expr></argument>,

                                                  <argument pos:start="489:51" pos:end="489:60"><expr pos:start="489:51" pos:end="489:60"><name pos:start="489:51" pos:end="489:60">MEM_COMMIT</name></expr></argument>,

                                                  <argument pos:start="491:51" pos:end="491:72"><expr pos:start="491:51" pos:end="491:72"><name pos:start="491:51" pos:end="491:72">PAGE_EXECUTE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="493:1" pos:end="493:5">#<cpp:directive pos:start="493:2" pos:end="493:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="495:13" pos:end="495:75"><expr pos:start="495:13" pos:end="495:74"><name pos:start="495:13" pos:end="495:34"><name pos:start="495:13" pos:end="495:13">c</name><operator pos:start="495:14" pos:end="495:15">-&gt;</operator><name pos:start="495:16" pos:end="495:34">lumMmxextFilterCode</name></name> <operator pos:start="495:36" pos:end="495:36">=</operator> <call pos:start="495:38" pos:end="495:74"><name pos:start="495:38" pos:end="495:46">av_malloc</name><argument_list pos:start="495:47" pos:end="495:74">(<argument pos:start="495:48" pos:end="495:73"><expr pos:start="495:48" pos:end="495:73"><name pos:start="495:48" pos:end="495:73"><name pos:start="495:48" pos:end="495:48">c</name><operator pos:start="495:49" pos:end="495:50">-&gt;</operator><name pos:start="495:51" pos:end="495:73">lumMmxextFilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="497:13" pos:end="500:0"><expr pos:start="497:13" pos:end="497:74"><name pos:start="497:13" pos:end="497:34"><name pos:start="497:13" pos:end="497:13">c</name><operator pos:start="497:14" pos:end="497:15">-&gt;</operator><name pos:start="497:16" pos:end="497:34">chrMmxextFilterCode</name></name> <operator pos:start="497:36" pos:end="497:36">=</operator> <call pos:start="497:38" pos:end="497:74"><name pos:start="497:38" pos:end="497:46">av_malloc</name><argument_list pos:start="497:47" pos:end="497:74">(<argument pos:start="497:48" pos:end="497:73"><expr pos:start="497:48" pos:end="497:73"><name pos:start="497:48" pos:end="497:73"><name pos:start="497:48" pos:end="497:48">c</name><operator pos:start="497:49" pos:end="497:50">-&gt;</operator><name pos:start="497:51" pos:end="497:73">chrMmxextFilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="499:1" pos:end="499:6">#<cpp:directive pos:start="499:2" pos:end="499:6">endif</cpp:directive></cpp:endif>



            <if_stmt pos:start="503:13" pos:end="505:39"><if pos:start="503:13" pos:end="505:39">if <condition pos:start="503:16" pos:end="503:67">(<expr pos:start="503:17" pos:end="503:66"><operator pos:start="503:17" pos:end="503:17">!</operator><name pos:start="503:18" pos:end="503:39"><name pos:start="503:18" pos:end="503:18">c</name><operator pos:start="503:19" pos:end="503:20">-&gt;</operator><name pos:start="503:21" pos:end="503:39">lumMmxextFilterCode</name></name> <operator pos:start="503:41" pos:end="503:42">||</operator> <operator pos:start="503:44" pos:end="503:44">!</operator><name pos:start="503:45" pos:end="503:66"><name pos:start="503:45" pos:end="503:45">c</name><operator pos:start="503:46" pos:end="503:47">-&gt;</operator><name pos:start="503:48" pos:end="503:66">chrMmxextFilterCode</name></name></expr>)</condition><block type="pseudo" pos:start="505:17" pos:end="505:39"><block_content pos:start="505:17" pos:end="505:39">

                <return pos:start="505:17" pos:end="505:39">return <expr pos:start="505:24" pos:end="505:38"><call pos:start="505:24" pos:end="505:38"><name pos:start="505:24" pos:end="505:30">AVERROR</name><argument_list pos:start="505:31" pos:end="505:38">(<argument pos:start="505:32" pos:end="505:37"><expr pos:start="505:32" pos:end="505:37"><name pos:start="505:32" pos:end="505:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="507:13" pos:end="507:101"><expr pos:start="507:13" pos:end="507:100"><call pos:start="507:13" pos:end="507:100"><name pos:start="507:13" pos:end="507:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="507:30" pos:end="507:100">(<argument pos:start="507:31" pos:end="507:31"><expr pos:start="507:31" pos:end="507:31"><name pos:start="507:31" pos:end="507:31">c</name></expr></argument>, <argument pos:start="507:34" pos:end="507:46"><expr pos:start="507:34" pos:end="507:46"><name pos:start="507:34" pos:end="507:46"><name pos:start="507:34" pos:end="507:34">c</name><operator pos:start="507:35" pos:end="507:36">-&gt;</operator><name pos:start="507:37" pos:end="507:46">hLumFilter</name></name></expr></argument>,    <argument pos:start="507:52" pos:end="507:93"><expr pos:start="507:52" pos:end="507:93"><operator pos:start="507:52" pos:end="507:52">(</operator><name pos:start="507:53" pos:end="507:56">dstW</name>           <operator pos:start="507:68" pos:end="507:68">/</operator> <literal type="number" pos:start="507:70" pos:end="507:72">8</literal> <operator pos:start="507:72" pos:end="507:72">+</operator> <literal type="number" pos:start="507:74" pos:end="507:74">8</literal><operator pos:start="507:75" pos:end="507:75">)</operator> <operator pos:start="507:77" pos:end="507:77">*</operator> <sizeof pos:start="507:79" pos:end="507:93">sizeof<argument_list pos:start="507:85" pos:end="507:93">(<argument pos:start="507:86" pos:end="507:92"><expr pos:start="507:86" pos:end="507:92"><name pos:start="507:86" pos:end="507:92">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="507:96" pos:end="507:99"><expr pos:start="507:96" pos:end="507:99"><name pos:start="507:96" pos:end="507:99">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="509:13" pos:end="509:101"><expr pos:start="509:13" pos:end="509:100"><call pos:start="509:13" pos:end="509:100"><name pos:start="509:13" pos:end="509:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="509:30" pos:end="509:100">(<argument pos:start="509:31" pos:end="509:31"><expr pos:start="509:31" pos:end="509:31"><name pos:start="509:31" pos:end="509:31">c</name></expr></argument>, <argument pos:start="509:34" pos:end="509:46"><expr pos:start="509:34" pos:end="509:46"><name pos:start="509:34" pos:end="509:46"><name pos:start="509:34" pos:end="509:34">c</name><operator pos:start="509:35" pos:end="509:36">-&gt;</operator><name pos:start="509:37" pos:end="509:46">hChrFilter</name></name></expr></argument>,    <argument pos:start="509:52" pos:end="509:93"><expr pos:start="509:52" pos:end="509:93"><operator pos:start="509:52" pos:end="509:52">(</operator><name pos:start="509:53" pos:end="509:62"><name pos:start="509:53" pos:end="509:53">c</name><operator pos:start="509:54" pos:end="509:55">-&gt;</operator><name pos:start="509:56" pos:end="509:62">chrDstW</name></name>     <operator pos:start="509:68" pos:end="509:68">/</operator> <literal type="number" pos:start="509:70" pos:end="509:72">4</literal> <operator pos:start="509:72" pos:end="509:72">+</operator> <literal type="number" pos:start="509:74" pos:end="509:74">8</literal><operator pos:start="509:75" pos:end="509:75">)</operator> <operator pos:start="509:77" pos:end="509:77">*</operator> <sizeof pos:start="509:79" pos:end="509:93">sizeof<argument_list pos:start="509:85" pos:end="509:93">(<argument pos:start="509:86" pos:end="509:92"><expr pos:start="509:86" pos:end="509:92"><name pos:start="509:86" pos:end="509:92">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="509:96" pos:end="509:99"><expr pos:start="509:96" pos:end="509:99"><name pos:start="509:96" pos:end="509:99">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="511:13" pos:end="511:101"><expr pos:start="511:13" pos:end="511:100"><call pos:start="511:13" pos:end="511:100"><name pos:start="511:13" pos:end="511:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="511:30" pos:end="511:100">(<argument pos:start="511:31" pos:end="511:31"><expr pos:start="511:31" pos:end="511:31"><name pos:start="511:31" pos:end="511:31">c</name></expr></argument>, <argument pos:start="511:34" pos:end="511:49"><expr pos:start="511:34" pos:end="511:49"><name pos:start="511:34" pos:end="511:49"><name pos:start="511:34" pos:end="511:34">c</name><operator pos:start="511:35" pos:end="511:36">-&gt;</operator><name pos:start="511:37" pos:end="511:49">hLumFilterPos</name></name></expr></argument>, <argument pos:start="511:52" pos:end="511:93"><expr pos:start="511:52" pos:end="511:93"><operator pos:start="511:52" pos:end="511:52">(</operator><name pos:start="511:53" pos:end="511:56">dstW</name>       <operator pos:start="511:64" pos:end="511:64">/</operator> <literal type="number" pos:start="511:66" pos:end="511:66">2</literal> <operator pos:start="511:68" pos:end="511:68">/</operator> <literal type="number" pos:start="511:70" pos:end="511:72">8</literal> <operator pos:start="511:72" pos:end="511:72">+</operator> <literal type="number" pos:start="511:74" pos:end="511:74">8</literal><operator pos:start="511:75" pos:end="511:75">)</operator> <operator pos:start="511:77" pos:end="511:77">*</operator> <sizeof pos:start="511:79" pos:end="511:93">sizeof<argument_list pos:start="511:85" pos:end="511:93">(<argument pos:start="511:86" pos:end="511:92"><expr pos:start="511:86" pos:end="511:92"><name pos:start="511:86" pos:end="511:92">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="511:96" pos:end="511:99"><expr pos:start="511:96" pos:end="511:99"><name pos:start="511:96" pos:end="511:99">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="513:13" pos:end="513:101"><expr pos:start="513:13" pos:end="513:100"><call pos:start="513:13" pos:end="513:100"><name pos:start="513:13" pos:end="513:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="513:30" pos:end="513:100">(<argument pos:start="513:31" pos:end="513:31"><expr pos:start="513:31" pos:end="513:31"><name pos:start="513:31" pos:end="513:31">c</name></expr></argument>, <argument pos:start="513:34" pos:end="513:49"><expr pos:start="513:34" pos:end="513:49"><name pos:start="513:34" pos:end="513:49"><name pos:start="513:34" pos:end="513:34">c</name><operator pos:start="513:35" pos:end="513:36">-&gt;</operator><name pos:start="513:37" pos:end="513:49">hChrFilterPos</name></name></expr></argument>, <argument pos:start="513:52" pos:end="513:93"><expr pos:start="513:52" pos:end="513:93"><operator pos:start="513:52" pos:end="513:52">(</operator><name pos:start="513:53" pos:end="513:62"><name pos:start="513:53" pos:end="513:53">c</name><operator pos:start="513:54" pos:end="513:55">-&gt;</operator><name pos:start="513:56" pos:end="513:62">chrDstW</name></name> <operator pos:start="513:64" pos:end="513:64">/</operator> <literal type="number" pos:start="513:66" pos:end="513:66">2</literal> <operator pos:start="513:68" pos:end="513:68">/</operator> <literal type="number" pos:start="513:70" pos:end="513:72">4</literal> <operator pos:start="513:72" pos:end="513:72">+</operator> <literal type="number" pos:start="513:74" pos:end="513:74">8</literal><operator pos:start="513:75" pos:end="513:75">)</operator> <operator pos:start="513:77" pos:end="513:77">*</operator> <sizeof pos:start="513:79" pos:end="513:93">sizeof<argument_list pos:start="513:85" pos:end="513:93">(<argument pos:start="513:86" pos:end="513:92"><expr pos:start="513:86" pos:end="513:92"><name pos:start="513:86" pos:end="513:92">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="513:96" pos:end="513:99"><expr pos:start="513:96" pos:end="513:99"><name pos:start="513:96" pos:end="513:99">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="517:13" pos:end="519:68"><expr pos:start="517:13" pos:end="519:67"><call pos:start="517:13" pos:end="519:67"><name pos:start="517:13" pos:end="517:31">init_hscaler_mmxext</name><argument_list pos:start="517:32" pos:end="519:67">(<argument pos:start="517:33" pos:end="517:36"><expr pos:start="517:33" pos:end="517:36"><name pos:start="517:33" pos:end="517:36">dstW</name></expr></argument>, <argument pos:start="517:39" pos:end="517:48"><expr pos:start="517:39" pos:end="517:48"><name pos:start="517:39" pos:end="517:48"><name pos:start="517:39" pos:end="517:39">c</name><operator pos:start="517:40" pos:end="517:41">-&gt;</operator><name pos:start="517:42" pos:end="517:48">lumXInc</name></name></expr></argument>, <argument pos:start="517:51" pos:end="517:72"><expr pos:start="517:51" pos:end="517:72"><name pos:start="517:51" pos:end="517:72"><name pos:start="517:51" pos:end="517:51">c</name><operator pos:start="517:52" pos:end="517:53">-&gt;</operator><name pos:start="517:54" pos:end="517:72">lumMmxextFilterCode</name></name></expr></argument>,

                                <argument pos:start="519:33" pos:end="519:45"><expr pos:start="519:33" pos:end="519:45"><name pos:start="519:33" pos:end="519:45"><name pos:start="519:33" pos:end="519:33">c</name><operator pos:start="519:34" pos:end="519:35">-&gt;</operator><name pos:start="519:36" pos:end="519:45">hLumFilter</name></name></expr></argument>, <argument pos:start="519:48" pos:end="519:63"><expr pos:start="519:48" pos:end="519:63"><name pos:start="519:48" pos:end="519:63"><name pos:start="519:48" pos:end="519:48">c</name><operator pos:start="519:49" pos:end="519:50">-&gt;</operator><name pos:start="519:51" pos:end="519:63">hLumFilterPos</name></name></expr></argument>, <argument pos:start="519:66" pos:end="519:66"><expr pos:start="519:66" pos:end="519:66"><literal type="number" pos:start="519:66" pos:end="519:66">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="521:13" pos:end="528:0"><expr pos:start="521:13" pos:end="523:67"><call pos:start="521:13" pos:end="523:67"><name pos:start="521:13" pos:end="521:31">init_hscaler_mmxext</name><argument_list pos:start="521:32" pos:end="523:67">(<argument pos:start="521:33" pos:end="521:42"><expr pos:start="521:33" pos:end="521:42"><name pos:start="521:33" pos:end="521:42"><name pos:start="521:33" pos:end="521:33">c</name><operator pos:start="521:34" pos:end="521:35">-&gt;</operator><name pos:start="521:36" pos:end="521:42">chrDstW</name></name></expr></argument>, <argument pos:start="521:45" pos:end="521:54"><expr pos:start="521:45" pos:end="521:54"><name pos:start="521:45" pos:end="521:54"><name pos:start="521:45" pos:end="521:45">c</name><operator pos:start="521:46" pos:end="521:47">-&gt;</operator><name pos:start="521:48" pos:end="521:54">chrXInc</name></name></expr></argument>, <argument pos:start="521:57" pos:end="521:78"><expr pos:start="521:57" pos:end="521:78"><name pos:start="521:57" pos:end="521:78"><name pos:start="521:57" pos:end="521:57">c</name><operator pos:start="521:58" pos:end="521:59">-&gt;</operator><name pos:start="521:60" pos:end="521:78">chrMmxextFilterCode</name></name></expr></argument>,

                                <argument pos:start="523:33" pos:end="523:45"><expr pos:start="523:33" pos:end="523:45"><name pos:start="523:33" pos:end="523:45"><name pos:start="523:33" pos:end="523:33">c</name><operator pos:start="523:34" pos:end="523:35">-&gt;</operator><name pos:start="523:36" pos:end="523:45">hChrFilter</name></name></expr></argument>, <argument pos:start="523:48" pos:end="523:63"><expr pos:start="523:48" pos:end="523:63"><name pos:start="523:48" pos:end="523:63"><name pos:start="523:48" pos:end="523:48">c</name><operator pos:start="523:49" pos:end="523:50">-&gt;</operator><name pos:start="523:51" pos:end="523:63">hChrFilterPos</name></name></expr></argument>, <argument pos:start="523:66" pos:end="523:66"><expr pos:start="523:66" pos:end="523:66"><literal type="number" pos:start="523:66" pos:end="523:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="527:1" pos:end="527:12">#<cpp:directive pos:start="527:2" pos:end="527:3">if</cpp:directive> <expr pos:start="527:5" pos:end="527:12"><name pos:start="527:5" pos:end="527:12">USE_MMAP</name></expr></cpp:if>

            <expr_stmt pos:start="529:13" pos:end="529:96"><expr pos:start="529:13" pos:end="529:95"><call pos:start="529:13" pos:end="529:95"><name pos:start="529:13" pos:end="529:20">mprotect</name><argument_list pos:start="529:21" pos:end="529:95">(<argument pos:start="529:22" pos:end="529:43"><expr pos:start="529:22" pos:end="529:43"><name pos:start="529:22" pos:end="529:43"><name pos:start="529:22" pos:end="529:22">c</name><operator pos:start="529:23" pos:end="529:24">-&gt;</operator><name pos:start="529:25" pos:end="529:43">lumMmxextFilterCode</name></name></expr></argument>, <argument pos:start="529:46" pos:end="529:71"><expr pos:start="529:46" pos:end="529:71"><name pos:start="529:46" pos:end="529:71"><name pos:start="529:46" pos:end="529:46">c</name><operator pos:start="529:47" pos:end="529:48">-&gt;</operator><name pos:start="529:49" pos:end="529:71">lumMmxextFilterCodeSize</name></name></expr></argument>, <argument pos:start="529:74" pos:end="529:94"><expr pos:start="529:74" pos:end="529:94"><name pos:start="529:74" pos:end="529:82">PROT_EXEC</name> <operator pos:start="529:84" pos:end="529:84">|</operator> <name pos:start="529:86" pos:end="529:94">PROT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="531:13" pos:end="534:0"><expr pos:start="531:13" pos:end="531:95"><call pos:start="531:13" pos:end="531:95"><name pos:start="531:13" pos:end="531:20">mprotect</name><argument_list pos:start="531:21" pos:end="531:95">(<argument pos:start="531:22" pos:end="531:43"><expr pos:start="531:22" pos:end="531:43"><name pos:start="531:22" pos:end="531:43"><name pos:start="531:22" pos:end="531:22">c</name><operator pos:start="531:23" pos:end="531:24">-&gt;</operator><name pos:start="531:25" pos:end="531:43">chrMmxextFilterCode</name></name></expr></argument>, <argument pos:start="531:46" pos:end="531:71"><expr pos:start="531:46" pos:end="531:71"><name pos:start="531:46" pos:end="531:71"><name pos:start="531:46" pos:end="531:46">c</name><operator pos:start="531:47" pos:end="531:48">-&gt;</operator><name pos:start="531:49" pos:end="531:71">chrMmxextFilterCodeSize</name></name></expr></argument>, <argument pos:start="531:74" pos:end="531:94"><expr pos:start="531:74" pos:end="531:94"><name pos:start="531:74" pos:end="531:82">PROT_EXEC</name> <operator pos:start="531:84" pos:end="531:84">|</operator> <name pos:start="531:86" pos:end="531:94">PROT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="533:1" pos:end="533:6">#<cpp:directive pos:start="533:2" pos:end="533:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="535:11" pos:end="575:9">else

<cpp:endif pos:start="537:1" pos:end="537:6">#<cpp:directive pos:start="537:2" pos:end="537:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="537:8" pos:end="537:31">/* HAVE_MMXEXT_INLINE */</comment>

        <block pos:start="539:9" pos:end="575:9">{<block_content pos:start="541:13" pos:end="573:26">

            <decl_stmt pos:start="541:13" pos:end="543:67"><decl pos:start="541:13" pos:end="543:66"><type pos:start="541:13" pos:end="541:21"><specifier pos:start="541:13" pos:end="541:17">const</specifier> <name pos:start="541:19" pos:end="541:21">int</name></type> <name pos:start="541:23" pos:end="541:33">filterAlign</name> <init pos:start="541:35" pos:end="543:66">= <expr pos:start="541:37" pos:end="543:66"><ternary pos:start="541:37" pos:end="543:66"><condition pos:start="541:37" pos:end="541:60"><expr pos:start="541:37" pos:end="541:54"><call pos:start="541:37" pos:end="541:54"><name pos:start="541:37" pos:end="541:43">X86_MMX</name><argument_list pos:start="541:44" pos:end="541:54">(<argument pos:start="541:45" pos:end="541:53"><expr pos:start="541:45" pos:end="541:53"><name pos:start="541:45" pos:end="541:53">cpu_flags</name></expr></argument>)</argument_list></call></expr>     ?</condition><then pos:start="541:62" pos:end="541:62"> <expr pos:start="541:62" pos:end="541:62"><literal type="number" pos:start="541:62" pos:end="541:62">4</literal></expr> </then><else pos:start="541:64" pos:end="543:66">:

                                    <expr pos:start="543:37" pos:end="543:66"><ternary pos:start="543:37" pos:end="543:66"><condition pos:start="543:37" pos:end="543:60"><expr pos:start="543:37" pos:end="543:58"><call pos:start="543:37" pos:end="543:58"><name pos:start="543:37" pos:end="543:47">PPC_ALTIVEC</name><argument_list pos:start="543:48" pos:end="543:58">(<argument pos:start="543:49" pos:end="543:57"><expr pos:start="543:49" pos:end="543:57"><name pos:start="543:49" pos:end="543:57">cpu_flags</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="543:62" pos:end="543:62"> <expr pos:start="543:62" pos:end="543:62"><literal type="number" pos:start="543:62" pos:end="543:62">8</literal></expr> </then><else pos:start="543:64" pos:end="543:66">: <expr pos:start="543:66" pos:end="543:66"><literal type="number" pos:start="543:66" pos:end="543:66">1</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="547:13" pos:end="559:26"><if pos:start="547:13" pos:end="559:26">if <condition pos:start="547:16" pos:end="557:44">(<expr pos:start="547:17" pos:end="557:43"><call pos:start="547:17" pos:end="557:39"><name pos:start="547:17" pos:end="547:26">initFilter</name><argument_list pos:start="547:27" pos:end="557:39">(<argument pos:start="547:28" pos:end="547:41"><expr pos:start="547:28" pos:end="547:41"><operator pos:start="547:28" pos:end="547:28">&amp;</operator><name pos:start="547:29" pos:end="547:41"><name pos:start="547:29" pos:end="547:29">c</name><operator pos:start="547:30" pos:end="547:31">-&gt;</operator><name pos:start="547:32" pos:end="547:41">hLumFilter</name></name></expr></argument>, <argument pos:start="547:44" pos:end="547:60"><expr pos:start="547:44" pos:end="547:60"><operator pos:start="547:44" pos:end="547:44">&amp;</operator><name pos:start="547:45" pos:end="547:60"><name pos:start="547:45" pos:end="547:45">c</name><operator pos:start="547:46" pos:end="547:47">-&gt;</operator><name pos:start="547:48" pos:end="547:60">hLumFilterPos</name></name></expr></argument>,

                           <argument pos:start="549:28" pos:end="549:45"><expr pos:start="549:28" pos:end="549:45"><operator pos:start="549:28" pos:end="549:28">&amp;</operator><name pos:start="549:29" pos:end="549:45"><name pos:start="549:29" pos:end="549:29">c</name><operator pos:start="549:30" pos:end="549:31">-&gt;</operator><name pos:start="549:32" pos:end="549:45">hLumFilterSize</name></name></expr></argument>, <argument pos:start="549:48" pos:end="549:57"><expr pos:start="549:48" pos:end="549:57"><name pos:start="549:48" pos:end="549:57"><name pos:start="549:48" pos:end="549:48">c</name><operator pos:start="549:49" pos:end="549:50">-&gt;</operator><name pos:start="549:51" pos:end="549:57">lumXInc</name></name></expr></argument>,

                           <argument pos:start="551:28" pos:end="551:31"><expr pos:start="551:28" pos:end="551:31"><name pos:start="551:28" pos:end="551:31">srcW</name></expr></argument>, <argument pos:start="551:34" pos:end="551:37"><expr pos:start="551:34" pos:end="551:37"><name pos:start="551:34" pos:end="551:37">dstW</name></expr></argument>, <argument pos:start="551:40" pos:end="551:50"><expr pos:start="551:40" pos:end="551:50"><name pos:start="551:40" pos:end="551:50">filterAlign</name></expr></argument>, <argument pos:start="551:53" pos:end="551:59"><expr pos:start="551:53" pos:end="551:59"><literal type="number" pos:start="551:53" pos:end="551:53">1</literal> <operator pos:start="551:55" pos:end="551:56">&lt;&lt;</operator> <literal type="number" pos:start="551:58" pos:end="551:59">14</literal></expr></argument>,

                           <argument pos:start="553:28" pos:end="553:81"><expr pos:start="553:28" pos:end="553:81"><ternary pos:start="553:28" pos:end="553:81"><condition pos:start="553:28" pos:end="553:51"><expr pos:start="553:28" pos:end="553:49"><operator pos:start="553:28" pos:end="553:28">(</operator><name pos:start="553:29" pos:end="553:33">flags</name> <operator pos:start="553:35" pos:end="553:35">&amp;</operator> <name pos:start="553:37" pos:end="553:48">SWS_BICUBLIN</name><operator pos:start="553:49" pos:end="553:49">)</operator></expr> ?</condition><then pos:start="553:53" pos:end="553:73"> <expr pos:start="553:53" pos:end="553:73"><operator pos:start="553:53" pos:end="553:53">(</operator><name pos:start="553:54" pos:end="553:58">flags</name> <operator pos:start="553:60" pos:end="553:60">|</operator> <name pos:start="553:62" pos:end="553:72">SWS_BICUBIC</name><operator pos:start="553:73" pos:end="553:73">)</operator></expr> </then><else pos:start="553:75" pos:end="553:81">: <expr pos:start="553:77" pos:end="553:81"><name pos:start="553:77" pos:end="553:81">flags</name></expr></else></ternary></expr></argument>,

                           <argument pos:start="555:28" pos:end="555:36"><expr pos:start="555:28" pos:end="555:36"><name pos:start="555:28" pos:end="555:36">cpu_flags</name></expr></argument>, <argument pos:start="555:39" pos:end="555:53"><expr pos:start="555:39" pos:end="555:53"><name pos:start="555:39" pos:end="555:53"><name pos:start="555:39" pos:end="555:47">srcFilter</name><operator pos:start="555:48" pos:end="555:49">-&gt;</operator><name pos:start="555:50" pos:end="555:53">lumH</name></name></expr></argument>, <argument pos:start="555:56" pos:end="555:70"><expr pos:start="555:56" pos:end="555:70"><name pos:start="555:56" pos:end="555:70"><name pos:start="555:56" pos:end="555:64">dstFilter</name><operator pos:start="555:65" pos:end="555:66">-&gt;</operator><name pos:start="555:67" pos:end="555:70">lumH</name></name></expr></argument>,

                           <argument pos:start="557:28" pos:end="557:35"><expr pos:start="557:28" pos:end="557:35"><name pos:start="557:28" pos:end="557:35"><name pos:start="557:28" pos:end="557:28">c</name><operator pos:start="557:29" pos:end="557:30">-&gt;</operator><name pos:start="557:31" pos:end="557:35">param</name></name></expr></argument>, <argument pos:start="557:38" pos:end="557:38"><expr pos:start="557:38" pos:end="557:38"><literal type="number" pos:start="557:38" pos:end="557:38">1</literal></expr></argument>)</argument_list></call> <operator pos:start="557:41" pos:end="557:41">&lt;</operator> <literal type="number" pos:start="557:43" pos:end="557:43">0</literal></expr>)</condition><block type="pseudo" pos:start="559:17" pos:end="559:26"><block_content pos:start="559:17" pos:end="559:26">

                <goto pos:start="559:17" pos:end="559:26">goto <name pos:start="559:22" pos:end="559:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="561:13" pos:end="573:26"><if pos:start="561:13" pos:end="573:26">if <condition pos:start="561:16" pos:end="571:44">(<expr pos:start="561:17" pos:end="571:43"><call pos:start="561:17" pos:end="571:39"><name pos:start="561:17" pos:end="561:26">initFilter</name><argument_list pos:start="561:27" pos:end="571:39">(<argument pos:start="561:28" pos:end="561:41"><expr pos:start="561:28" pos:end="561:41"><operator pos:start="561:28" pos:end="561:28">&amp;</operator><name pos:start="561:29" pos:end="561:41"><name pos:start="561:29" pos:end="561:29">c</name><operator pos:start="561:30" pos:end="561:31">-&gt;</operator><name pos:start="561:32" pos:end="561:41">hChrFilter</name></name></expr></argument>, <argument pos:start="561:44" pos:end="561:60"><expr pos:start="561:44" pos:end="561:60"><operator pos:start="561:44" pos:end="561:44">&amp;</operator><name pos:start="561:45" pos:end="561:60"><name pos:start="561:45" pos:end="561:45">c</name><operator pos:start="561:46" pos:end="561:47">-&gt;</operator><name pos:start="561:48" pos:end="561:60">hChrFilterPos</name></name></expr></argument>,

                           <argument pos:start="563:28" pos:end="563:45"><expr pos:start="563:28" pos:end="563:45"><operator pos:start="563:28" pos:end="563:28">&amp;</operator><name pos:start="563:29" pos:end="563:45"><name pos:start="563:29" pos:end="563:29">c</name><operator pos:start="563:30" pos:end="563:31">-&gt;</operator><name pos:start="563:32" pos:end="563:45">hChrFilterSize</name></name></expr></argument>, <argument pos:start="563:48" pos:end="563:57"><expr pos:start="563:48" pos:end="563:57"><name pos:start="563:48" pos:end="563:57"><name pos:start="563:48" pos:end="563:48">c</name><operator pos:start="563:49" pos:end="563:50">-&gt;</operator><name pos:start="563:51" pos:end="563:57">chrXInc</name></name></expr></argument>,

                           <argument pos:start="565:28" pos:end="565:37"><expr pos:start="565:28" pos:end="565:37"><name pos:start="565:28" pos:end="565:37"><name pos:start="565:28" pos:end="565:28">c</name><operator pos:start="565:29" pos:end="565:30">-&gt;</operator><name pos:start="565:31" pos:end="565:37">chrSrcW</name></name></expr></argument>, <argument pos:start="565:40" pos:end="565:49"><expr pos:start="565:40" pos:end="565:49"><name pos:start="565:40" pos:end="565:49"><name pos:start="565:40" pos:end="565:40">c</name><operator pos:start="565:41" pos:end="565:42">-&gt;</operator><name pos:start="565:43" pos:end="565:49">chrDstW</name></name></expr></argument>, <argument pos:start="565:52" pos:end="565:62"><expr pos:start="565:52" pos:end="565:62"><name pos:start="565:52" pos:end="565:62">filterAlign</name></expr></argument>, <argument pos:start="565:65" pos:end="565:71"><expr pos:start="565:65" pos:end="565:71"><literal type="number" pos:start="565:65" pos:end="565:65">1</literal> <operator pos:start="565:67" pos:end="565:68">&lt;&lt;</operator> <literal type="number" pos:start="565:70" pos:end="565:71">14</literal></expr></argument>,

                           <argument pos:start="567:28" pos:end="567:82"><expr pos:start="567:28" pos:end="567:82"><ternary pos:start="567:28" pos:end="567:82"><condition pos:start="567:28" pos:end="567:51"><expr pos:start="567:28" pos:end="567:49"><operator pos:start="567:28" pos:end="567:28">(</operator><name pos:start="567:29" pos:end="567:33">flags</name> <operator pos:start="567:35" pos:end="567:35">&amp;</operator> <name pos:start="567:37" pos:end="567:48">SWS_BICUBLIN</name><operator pos:start="567:49" pos:end="567:49">)</operator></expr> ?</condition><then pos:start="567:53" pos:end="567:74"> <expr pos:start="567:53" pos:end="567:74"><operator pos:start="567:53" pos:end="567:53">(</operator><name pos:start="567:54" pos:end="567:58">flags</name> <operator pos:start="567:60" pos:end="567:60">|</operator> <name pos:start="567:62" pos:end="567:73">SWS_BILINEAR</name><operator pos:start="567:74" pos:end="567:74">)</operator></expr> </then><else pos:start="567:76" pos:end="567:82">: <expr pos:start="567:78" pos:end="567:82"><name pos:start="567:78" pos:end="567:82">flags</name></expr></else></ternary></expr></argument>,

                           <argument pos:start="569:28" pos:end="569:36"><expr pos:start="569:28" pos:end="569:36"><name pos:start="569:28" pos:end="569:36">cpu_flags</name></expr></argument>, <argument pos:start="569:39" pos:end="569:53"><expr pos:start="569:39" pos:end="569:53"><name pos:start="569:39" pos:end="569:53"><name pos:start="569:39" pos:end="569:47">srcFilter</name><operator pos:start="569:48" pos:end="569:49">-&gt;</operator><name pos:start="569:50" pos:end="569:53">chrH</name></name></expr></argument>, <argument pos:start="569:56" pos:end="569:70"><expr pos:start="569:56" pos:end="569:70"><name pos:start="569:56" pos:end="569:70"><name pos:start="569:56" pos:end="569:64">dstFilter</name><operator pos:start="569:65" pos:end="569:66">-&gt;</operator><name pos:start="569:67" pos:end="569:70">chrH</name></name></expr></argument>,

                           <argument pos:start="571:28" pos:end="571:35"><expr pos:start="571:28" pos:end="571:35"><name pos:start="571:28" pos:end="571:35"><name pos:start="571:28" pos:end="571:28">c</name><operator pos:start="571:29" pos:end="571:30">-&gt;</operator><name pos:start="571:31" pos:end="571:35">param</name></name></expr></argument>, <argument pos:start="571:38" pos:end="571:38"><expr pos:start="571:38" pos:end="571:38"><literal type="number" pos:start="571:38" pos:end="571:38">1</literal></expr></argument>)</argument_list></call> <operator pos:start="571:41" pos:end="571:41">&lt;</operator> <literal type="number" pos:start="571:43" pos:end="571:43">0</literal></expr>)</condition><block type="pseudo" pos:start="573:17" pos:end="573:26"><block_content pos:start="573:17" pos:end="573:26">

                <goto pos:start="573:17" pos:end="573:26">goto <name pos:start="573:22" pos:end="573:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block> <comment type="line" pos:start="577:7" pos:end="577:36">// initialize horizontal stuff</comment>



    <comment type="block" pos:start="581:5" pos:end="581:58">/* precalculate vertical scaler filter coefficients */</comment>

    <block pos:start="583:5" pos:end="655:5">{<block_content pos:start="585:9" pos:end="654:0">

        <decl_stmt pos:start="585:9" pos:end="587:63"><decl pos:start="585:9" pos:end="587:62"><type pos:start="585:9" pos:end="585:17"><specifier pos:start="585:9" pos:end="585:13">const</specifier> <name pos:start="585:15" pos:end="585:17">int</name></type> <name pos:start="585:19" pos:end="585:29">filterAlign</name> <init pos:start="585:31" pos:end="587:62">= <expr pos:start="585:33" pos:end="587:62"><ternary pos:start="585:33" pos:end="587:62"><condition pos:start="585:33" pos:end="585:56"><expr pos:start="585:33" pos:end="585:50"><call pos:start="585:33" pos:end="585:50"><name pos:start="585:33" pos:end="585:39">X86_MMX</name><argument_list pos:start="585:40" pos:end="585:50">(<argument pos:start="585:41" pos:end="585:49"><expr pos:start="585:41" pos:end="585:49"><name pos:start="585:41" pos:end="585:49">cpu_flags</name></expr></argument>)</argument_list></call></expr>     ?</condition><then pos:start="585:58" pos:end="585:58"> <expr pos:start="585:58" pos:end="585:58"><literal type="number" pos:start="585:58" pos:end="585:58">2</literal></expr> </then><else pos:start="585:60" pos:end="587:62">:

                                <expr pos:start="587:33" pos:end="587:62"><ternary pos:start="587:33" pos:end="587:62"><condition pos:start="587:33" pos:end="587:56"><expr pos:start="587:33" pos:end="587:54"><call pos:start="587:33" pos:end="587:54"><name pos:start="587:33" pos:end="587:43">PPC_ALTIVEC</name><argument_list pos:start="587:44" pos:end="587:54">(<argument pos:start="587:45" pos:end="587:53"><expr pos:start="587:45" pos:end="587:53"><name pos:start="587:45" pos:end="587:53">cpu_flags</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="587:58" pos:end="587:58"> <expr pos:start="587:58" pos:end="587:58"><literal type="number" pos:start="587:58" pos:end="587:58">8</literal></expr> </then><else pos:start="587:60" pos:end="587:62">: <expr pos:start="587:62" pos:end="587:62"><literal type="number" pos:start="587:62" pos:end="587:62">1</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="591:9" pos:end="601:22"><if pos:start="591:9" pos:end="601:22">if <condition pos:start="591:12" pos:end="599:40">(<expr pos:start="591:13" pos:end="599:39"><call pos:start="591:13" pos:end="599:35"><name pos:start="591:13" pos:end="591:22">initFilter</name><argument_list pos:start="591:23" pos:end="599:35">(<argument pos:start="591:24" pos:end="591:37"><expr pos:start="591:24" pos:end="591:37"><operator pos:start="591:24" pos:end="591:24">&amp;</operator><name pos:start="591:25" pos:end="591:37"><name pos:start="591:25" pos:end="591:25">c</name><operator pos:start="591:26" pos:end="591:27">-&gt;</operator><name pos:start="591:28" pos:end="591:37">vLumFilter</name></name></expr></argument>, <argument pos:start="591:40" pos:end="591:56"><expr pos:start="591:40" pos:end="591:56"><operator pos:start="591:40" pos:end="591:40">&amp;</operator><name pos:start="591:41" pos:end="591:56"><name pos:start="591:41" pos:end="591:41">c</name><operator pos:start="591:42" pos:end="591:43">-&gt;</operator><name pos:start="591:44" pos:end="591:56">vLumFilterPos</name></name></expr></argument>, <argument pos:start="591:59" pos:end="591:76"><expr pos:start="591:59" pos:end="591:76"><operator pos:start="591:59" pos:end="591:59">&amp;</operator><name pos:start="591:60" pos:end="591:76"><name pos:start="591:60" pos:end="591:60">c</name><operator pos:start="591:61" pos:end="591:62">-&gt;</operator><name pos:start="591:63" pos:end="591:76">vLumFilterSize</name></name></expr></argument>,

                       <argument pos:start="593:24" pos:end="593:33"><expr pos:start="593:24" pos:end="593:33"><name pos:start="593:24" pos:end="593:33"><name pos:start="593:24" pos:end="593:24">c</name><operator pos:start="593:25" pos:end="593:26">-&gt;</operator><name pos:start="593:27" pos:end="593:33">lumYInc</name></name></expr></argument>, <argument pos:start="593:36" pos:end="593:39"><expr pos:start="593:36" pos:end="593:39"><name pos:start="593:36" pos:end="593:39">srcH</name></expr></argument>, <argument pos:start="593:42" pos:end="593:45"><expr pos:start="593:42" pos:end="593:45"><name pos:start="593:42" pos:end="593:45">dstH</name></expr></argument>, <argument pos:start="593:48" pos:end="593:58"><expr pos:start="593:48" pos:end="593:58"><name pos:start="593:48" pos:end="593:58">filterAlign</name></expr></argument>, <argument pos:start="593:61" pos:end="593:69"><expr pos:start="593:61" pos:end="593:69"><operator pos:start="593:61" pos:end="593:61">(</operator><literal type="number" pos:start="593:62" pos:end="593:62">1</literal> <operator pos:start="593:64" pos:end="593:65">&lt;&lt;</operator> <literal type="number" pos:start="593:67" pos:end="593:68">12</literal><operator pos:start="593:69" pos:end="593:69">)</operator></expr></argument>,

                       <argument pos:start="595:24" pos:end="595:77"><expr pos:start="595:24" pos:end="595:77"><ternary pos:start="595:24" pos:end="595:77"><condition pos:start="595:24" pos:end="595:47"><expr pos:start="595:24" pos:end="595:45"><operator pos:start="595:24" pos:end="595:24">(</operator><name pos:start="595:25" pos:end="595:29">flags</name> <operator pos:start="595:31" pos:end="595:31">&amp;</operator> <name pos:start="595:33" pos:end="595:44">SWS_BICUBLIN</name><operator pos:start="595:45" pos:end="595:45">)</operator></expr> ?</condition><then pos:start="595:49" pos:end="595:69"> <expr pos:start="595:49" pos:end="595:69"><operator pos:start="595:49" pos:end="595:49">(</operator><name pos:start="595:50" pos:end="595:54">flags</name> <operator pos:start="595:56" pos:end="595:56">|</operator> <name pos:start="595:58" pos:end="595:68">SWS_BICUBIC</name><operator pos:start="595:69" pos:end="595:69">)</operator></expr> </then><else pos:start="595:71" pos:end="595:77">: <expr pos:start="595:73" pos:end="595:77"><name pos:start="595:73" pos:end="595:77">flags</name></expr></else></ternary></expr></argument>,

                       <argument pos:start="597:24" pos:end="597:32"><expr pos:start="597:24" pos:end="597:32"><name pos:start="597:24" pos:end="597:32">cpu_flags</name></expr></argument>, <argument pos:start="597:35" pos:end="597:49"><expr pos:start="597:35" pos:end="597:49"><name pos:start="597:35" pos:end="597:49"><name pos:start="597:35" pos:end="597:43">srcFilter</name><operator pos:start="597:44" pos:end="597:45">-&gt;</operator><name pos:start="597:46" pos:end="597:49">lumV</name></name></expr></argument>, <argument pos:start="597:52" pos:end="597:66"><expr pos:start="597:52" pos:end="597:66"><name pos:start="597:52" pos:end="597:66"><name pos:start="597:52" pos:end="597:60">dstFilter</name><operator pos:start="597:61" pos:end="597:62">-&gt;</operator><name pos:start="597:63" pos:end="597:66">lumV</name></name></expr></argument>,

                       <argument pos:start="599:24" pos:end="599:31"><expr pos:start="599:24" pos:end="599:31"><name pos:start="599:24" pos:end="599:31"><name pos:start="599:24" pos:end="599:24">c</name><operator pos:start="599:25" pos:end="599:26">-&gt;</operator><name pos:start="599:27" pos:end="599:31">param</name></name></expr></argument>, <argument pos:start="599:34" pos:end="599:34"><expr pos:start="599:34" pos:end="599:34"><literal type="number" pos:start="599:34" pos:end="599:34">0</literal></expr></argument>)</argument_list></call> <operator pos:start="599:37" pos:end="599:37">&lt;</operator> <literal type="number" pos:start="599:39" pos:end="599:39">0</literal></expr>)</condition><block type="pseudo" pos:start="601:13" pos:end="601:22"><block_content pos:start="601:13" pos:end="601:22">

            <goto pos:start="601:13" pos:end="601:22">goto <name pos:start="601:18" pos:end="601:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="603:9" pos:end="620:0"><if pos:start="603:9" pos:end="620:0">if <condition pos:start="603:12" pos:end="613:40">(<expr pos:start="603:13" pos:end="613:39"><call pos:start="603:13" pos:end="613:35"><name pos:start="603:13" pos:end="603:22">initFilter</name><argument_list pos:start="603:23" pos:end="613:35">(<argument pos:start="603:24" pos:end="603:37"><expr pos:start="603:24" pos:end="603:37"><operator pos:start="603:24" pos:end="603:24">&amp;</operator><name pos:start="603:25" pos:end="603:37"><name pos:start="603:25" pos:end="603:25">c</name><operator pos:start="603:26" pos:end="603:27">-&gt;</operator><name pos:start="603:28" pos:end="603:37">vChrFilter</name></name></expr></argument>, <argument pos:start="603:40" pos:end="603:56"><expr pos:start="603:40" pos:end="603:56"><operator pos:start="603:40" pos:end="603:40">&amp;</operator><name pos:start="603:41" pos:end="603:56"><name pos:start="603:41" pos:end="603:41">c</name><operator pos:start="603:42" pos:end="603:43">-&gt;</operator><name pos:start="603:44" pos:end="603:56">vChrFilterPos</name></name></expr></argument>, <argument pos:start="603:59" pos:end="603:76"><expr pos:start="603:59" pos:end="603:76"><operator pos:start="603:59" pos:end="603:59">&amp;</operator><name pos:start="603:60" pos:end="603:76"><name pos:start="603:60" pos:end="603:60">c</name><operator pos:start="603:61" pos:end="603:62">-&gt;</operator><name pos:start="603:63" pos:end="603:76">vChrFilterSize</name></name></expr></argument>,

                       <argument pos:start="605:24" pos:end="605:33"><expr pos:start="605:24" pos:end="605:33"><name pos:start="605:24" pos:end="605:33"><name pos:start="605:24" pos:end="605:24">c</name><operator pos:start="605:25" pos:end="605:26">-&gt;</operator><name pos:start="605:27" pos:end="605:33">chrYInc</name></name></expr></argument>, <argument pos:start="605:36" pos:end="605:45"><expr pos:start="605:36" pos:end="605:45"><name pos:start="605:36" pos:end="605:45"><name pos:start="605:36" pos:end="605:36">c</name><operator pos:start="605:37" pos:end="605:38">-&gt;</operator><name pos:start="605:39" pos:end="605:45">chrSrcH</name></name></expr></argument>, <argument pos:start="605:48" pos:end="605:57"><expr pos:start="605:48" pos:end="605:57"><name pos:start="605:48" pos:end="605:57"><name pos:start="605:48" pos:end="605:48">c</name><operator pos:start="605:49" pos:end="605:50">-&gt;</operator><name pos:start="605:51" pos:end="605:57">chrDstH</name></name></expr></argument>,

                       <argument pos:start="607:24" pos:end="607:34"><expr pos:start="607:24" pos:end="607:34"><name pos:start="607:24" pos:end="607:34">filterAlign</name></expr></argument>, <argument pos:start="607:37" pos:end="607:45"><expr pos:start="607:37" pos:end="607:45"><operator pos:start="607:37" pos:end="607:37">(</operator><literal type="number" pos:start="607:38" pos:end="607:38">1</literal> <operator pos:start="607:40" pos:end="607:41">&lt;&lt;</operator> <literal type="number" pos:start="607:43" pos:end="607:44">12</literal><operator pos:start="607:45" pos:end="607:45">)</operator></expr></argument>,

                       <argument pos:start="609:24" pos:end="609:78"><expr pos:start="609:24" pos:end="609:78"><ternary pos:start="609:24" pos:end="609:78"><condition pos:start="609:24" pos:end="609:47"><expr pos:start="609:24" pos:end="609:45"><operator pos:start="609:24" pos:end="609:24">(</operator><name pos:start="609:25" pos:end="609:29">flags</name> <operator pos:start="609:31" pos:end="609:31">&amp;</operator> <name pos:start="609:33" pos:end="609:44">SWS_BICUBLIN</name><operator pos:start="609:45" pos:end="609:45">)</operator></expr> ?</condition><then pos:start="609:49" pos:end="609:70"> <expr pos:start="609:49" pos:end="609:70"><operator pos:start="609:49" pos:end="609:49">(</operator><name pos:start="609:50" pos:end="609:54">flags</name> <operator pos:start="609:56" pos:end="609:56">|</operator> <name pos:start="609:58" pos:end="609:69">SWS_BILINEAR</name><operator pos:start="609:70" pos:end="609:70">)</operator></expr> </then><else pos:start="609:72" pos:end="609:78">: <expr pos:start="609:74" pos:end="609:78"><name pos:start="609:74" pos:end="609:78">flags</name></expr></else></ternary></expr></argument>,

                       <argument pos:start="611:24" pos:end="611:32"><expr pos:start="611:24" pos:end="611:32"><name pos:start="611:24" pos:end="611:32">cpu_flags</name></expr></argument>, <argument pos:start="611:35" pos:end="611:49"><expr pos:start="611:35" pos:end="611:49"><name pos:start="611:35" pos:end="611:49"><name pos:start="611:35" pos:end="611:43">srcFilter</name><operator pos:start="611:44" pos:end="611:45">-&gt;</operator><name pos:start="611:46" pos:end="611:49">chrV</name></name></expr></argument>, <argument pos:start="611:52" pos:end="611:66"><expr pos:start="611:52" pos:end="611:66"><name pos:start="611:52" pos:end="611:66"><name pos:start="611:52" pos:end="611:60">dstFilter</name><operator pos:start="611:61" pos:end="611:62">-&gt;</operator><name pos:start="611:63" pos:end="611:66">chrV</name></name></expr></argument>,

                       <argument pos:start="613:24" pos:end="613:31"><expr pos:start="613:24" pos:end="613:31"><name pos:start="613:24" pos:end="613:31"><name pos:start="613:24" pos:end="613:24">c</name><operator pos:start="613:25" pos:end="613:26">-&gt;</operator><name pos:start="613:27" pos:end="613:31">param</name></name></expr></argument>, <argument pos:start="613:34" pos:end="613:34"><expr pos:start="613:34" pos:end="613:34"><literal type="number" pos:start="613:34" pos:end="613:34">0</literal></expr></argument>)</argument_list></call> <operator pos:start="613:37" pos:end="613:37">&lt;</operator> <literal type="number" pos:start="613:39" pos:end="613:39">0</literal></expr>)</condition><block type="pseudo" pos:start="615:13" pos:end="620:0"><block_content pos:start="615:13" pos:end="620:0">

            <goto pos:start="615:13" pos:end="620:0">goto <name pos:start="615:18" pos:end="615:21">fail</name>;</goto></block_content></block></if></if_stmt>



<cpp:if pos:start="619:1" pos:end="619:16">#<cpp:directive pos:start="619:2" pos:end="619:3">if</cpp:directive> <expr pos:start="619:5" pos:end="619:16"><name pos:start="619:5" pos:end="619:16">HAVE_ALTIVEC</name></expr></cpp:if>

        <expr_stmt pos:start="621:9" pos:end="621:113"><expr pos:start="621:9" pos:end="621:112"><call pos:start="621:9" pos:end="621:112"><name pos:start="621:9" pos:end="621:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="621:25" pos:end="621:112">(<argument pos:start="621:26" pos:end="621:26"><expr pos:start="621:26" pos:end="621:26"><name pos:start="621:26" pos:end="621:26">c</name></expr></argument>, <argument pos:start="621:29" pos:end="621:43"><expr pos:start="621:29" pos:end="621:43"><name pos:start="621:29" pos:end="621:43"><name pos:start="621:29" pos:end="621:29">c</name><operator pos:start="621:30" pos:end="621:31">-&gt;</operator><name pos:start="621:32" pos:end="621:43">vYCoeffsBank</name></name></expr></argument>, <argument pos:start="621:46" pos:end="621:102"><expr pos:start="621:46" pos:end="621:102">sizeof<operator pos:start="621:52" pos:end="621:52">(</operator><name pos:start="621:53" pos:end="621:58">vector</name> <name pos:start="621:60" pos:end="621:65">signed</name> <name pos:start="621:67" pos:end="621:71">short</name><operator pos:start="621:72" pos:end="621:72">)</operator> <operator pos:start="621:74" pos:end="621:74">*</operator> <name pos:start="621:76" pos:end="621:92"><name pos:start="621:76" pos:end="621:76">c</name><operator pos:start="621:77" pos:end="621:78">-&gt;</operator><name pos:start="621:79" pos:end="621:92">vLumFilterSize</name></name> <operator pos:start="621:94" pos:end="621:94">*</operator> <name pos:start="621:96" pos:end="621:102"><name pos:start="621:96" pos:end="621:96">c</name><operator pos:start="621:97" pos:end="621:98">-&gt;</operator><name pos:start="621:99" pos:end="621:102">dstH</name></name></expr></argument>,    <argument pos:start="621:108" pos:end="621:111"><expr pos:start="621:108" pos:end="621:111"><name pos:start="621:108" pos:end="621:111">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="623:9" pos:end="623:113"><expr pos:start="623:9" pos:end="623:112"><call pos:start="623:9" pos:end="623:112"><name pos:start="623:9" pos:end="623:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="623:25" pos:end="623:112">(<argument pos:start="623:26" pos:end="623:26"><expr pos:start="623:26" pos:end="623:26"><name pos:start="623:26" pos:end="623:26">c</name></expr></argument>, <argument pos:start="623:29" pos:end="623:43"><expr pos:start="623:29" pos:end="623:43"><name pos:start="623:29" pos:end="623:43"><name pos:start="623:29" pos:end="623:29">c</name><operator pos:start="623:30" pos:end="623:31">-&gt;</operator><name pos:start="623:32" pos:end="623:43">vCCoeffsBank</name></name></expr></argument>, <argument pos:start="623:46" pos:end="623:105"><expr pos:start="623:46" pos:end="623:105">sizeof<operator pos:start="623:52" pos:end="623:52">(</operator><name pos:start="623:53" pos:end="623:58">vector</name> <name pos:start="623:60" pos:end="623:65">signed</name> <name pos:start="623:67" pos:end="623:71">short</name><operator pos:start="623:72" pos:end="623:72">)</operator> <operator pos:start="623:74" pos:end="623:74">*</operator> <name pos:start="623:76" pos:end="623:92"><name pos:start="623:76" pos:end="623:76">c</name><operator pos:start="623:77" pos:end="623:78">-&gt;</operator><name pos:start="623:79" pos:end="623:92">vChrFilterSize</name></name> <operator pos:start="623:94" pos:end="623:94">*</operator> <name pos:start="623:96" pos:end="623:105"><name pos:start="623:96" pos:end="623:96">c</name><operator pos:start="623:97" pos:end="623:98">-&gt;</operator><name pos:start="623:99" pos:end="623:105">chrDstH</name></name></expr></argument>, <argument pos:start="623:108" pos:end="623:111"><expr pos:start="623:108" pos:end="623:111"><name pos:start="623:108" pos:end="623:111">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="627:9" pos:end="637:9">for <control pos:start="627:13" pos:end="627:57">(<init pos:start="627:14" pos:end="627:19"><expr pos:start="627:14" pos:end="627:18"><name pos:start="627:14" pos:end="627:14">i</name> <operator pos:start="627:16" pos:end="627:16">=</operator> <literal type="number" pos:start="627:18" pos:end="627:18">0</literal></expr>;</init> <condition pos:start="627:21" pos:end="627:52"><expr pos:start="627:21" pos:end="627:51"><name pos:start="627:21" pos:end="627:21">i</name> <operator pos:start="627:23" pos:end="627:23">&lt;</operator> <name pos:start="627:25" pos:end="627:41"><name pos:start="627:25" pos:end="627:25">c</name><operator pos:start="627:26" pos:end="627:27">-&gt;</operator><name pos:start="627:28" pos:end="627:41">vLumFilterSize</name></name> <operator pos:start="627:43" pos:end="627:43">*</operator> <name pos:start="627:45" pos:end="627:51"><name pos:start="627:45" pos:end="627:45">c</name><operator pos:start="627:46" pos:end="627:47">-&gt;</operator><name pos:start="627:48" pos:end="627:51">dstH</name></name></expr>;</condition> <incr pos:start="627:54" pos:end="627:56"><expr pos:start="627:54" pos:end="627:56"><name pos:start="627:54" pos:end="627:54">i</name><operator pos:start="627:55" pos:end="627:56">++</operator></expr></incr>)</control> <block pos:start="627:59" pos:end="637:9">{<block_content pos:start="629:13" pos:end="635:40">

            <decl_stmt pos:start="629:13" pos:end="629:18"><decl pos:start="629:13" pos:end="629:17"><type pos:start="629:13" pos:end="629:15"><name pos:start="629:13" pos:end="629:15">int</name></type> <name pos:start="629:17" pos:end="629:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="631:13" pos:end="631:52"><decl pos:start="631:13" pos:end="631:51"><type pos:start="631:13" pos:end="631:19"><name pos:start="631:13" pos:end="631:17">short</name> <modifier pos:start="631:19" pos:end="631:19">*</modifier></type><name pos:start="631:20" pos:end="631:20">p</name> <init pos:start="631:22" pos:end="631:51">= <expr pos:start="631:24" pos:end="631:51"><operator pos:start="631:24" pos:end="631:24">(</operator><name pos:start="631:25" pos:end="631:29">short</name> <operator pos:start="631:31" pos:end="631:31">*</operator><operator pos:start="631:32" pos:end="631:32">)</operator><operator pos:start="631:33" pos:end="631:33">&amp;</operator><name pos:start="631:34" pos:end="631:51"><name pos:start="631:34" pos:end="631:34">c</name><operator pos:start="631:35" pos:end="631:36">-&gt;</operator><name pos:start="631:37" pos:end="631:48">vYCoeffsBank</name><index pos:start="631:49" pos:end="631:51">[<expr pos:start="631:50" pos:end="631:50"><name pos:start="631:50" pos:end="631:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="633:13" pos:end="635:40">for <control pos:start="633:17" pos:end="633:35">(<init pos:start="633:18" pos:end="633:23"><expr pos:start="633:18" pos:end="633:22"><name pos:start="633:18" pos:end="633:18">j</name> <operator pos:start="633:20" pos:end="633:20">=</operator> <literal type="number" pos:start="633:22" pos:end="633:22">0</literal></expr>;</init> <condition pos:start="633:25" pos:end="633:30"><expr pos:start="633:25" pos:end="633:29"><name pos:start="633:25" pos:end="633:25">j</name> <operator pos:start="633:27" pos:end="633:27">&lt;</operator> <literal type="number" pos:start="633:29" pos:end="633:29">8</literal></expr>;</condition> <incr pos:start="633:32" pos:end="633:34"><expr pos:start="633:32" pos:end="633:34"><name pos:start="633:32" pos:end="633:32">j</name><operator pos:start="633:33" pos:end="633:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="635:17" pos:end="635:40"><block_content pos:start="635:17" pos:end="635:40">

                <expr_stmt pos:start="635:17" pos:end="635:40"><expr pos:start="635:17" pos:end="635:39"><name pos:start="635:17" pos:end="635:20"><name pos:start="635:17" pos:end="635:17">p</name><index pos:start="635:18" pos:end="635:20">[<expr pos:start="635:19" pos:end="635:19"><name pos:start="635:19" pos:end="635:19">j</name></expr>]</index></name> <operator pos:start="635:22" pos:end="635:22">=</operator> <name pos:start="635:24" pos:end="635:39"><name pos:start="635:24" pos:end="635:24">c</name><operator pos:start="635:25" pos:end="635:26">-&gt;</operator><name pos:start="635:27" pos:end="635:36">vLumFilter</name><index pos:start="635:37" pos:end="635:39">[<expr pos:start="635:38" pos:end="635:38"><name pos:start="635:38" pos:end="635:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>



        <for pos:start="641:9" pos:end="654:0">for <control pos:start="641:13" pos:end="641:60">(<init pos:start="641:14" pos:end="641:19"><expr pos:start="641:14" pos:end="641:18"><name pos:start="641:14" pos:end="641:14">i</name> <operator pos:start="641:16" pos:end="641:16">=</operator> <literal type="number" pos:start="641:18" pos:end="641:18">0</literal></expr>;</init> <condition pos:start="641:21" pos:end="641:55"><expr pos:start="641:21" pos:end="641:54"><name pos:start="641:21" pos:end="641:21">i</name> <operator pos:start="641:23" pos:end="641:23">&lt;</operator> <name pos:start="641:25" pos:end="641:41"><name pos:start="641:25" pos:end="641:25">c</name><operator pos:start="641:26" pos:end="641:27">-&gt;</operator><name pos:start="641:28" pos:end="641:41">vChrFilterSize</name></name> <operator pos:start="641:43" pos:end="641:43">*</operator> <name pos:start="641:45" pos:end="641:54"><name pos:start="641:45" pos:end="641:45">c</name><operator pos:start="641:46" pos:end="641:47">-&gt;</operator><name pos:start="641:48" pos:end="641:54">chrDstH</name></name></expr>;</condition> <incr pos:start="641:57" pos:end="641:59"><expr pos:start="641:57" pos:end="641:59"><name pos:start="641:57" pos:end="641:57">i</name><operator pos:start="641:58" pos:end="641:59">++</operator></expr></incr>)</control> <block pos:start="641:62" pos:end="654:0">{<block_content pos:start="643:13" pos:end="649:40">

            <decl_stmt pos:start="643:13" pos:end="643:18"><decl pos:start="643:13" pos:end="643:17"><type pos:start="643:13" pos:end="643:15"><name pos:start="643:13" pos:end="643:15">int</name></type> <name pos:start="643:17" pos:end="643:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="645:13" pos:end="645:52"><decl pos:start="645:13" pos:end="645:51"><type pos:start="645:13" pos:end="645:19"><name pos:start="645:13" pos:end="645:17">short</name> <modifier pos:start="645:19" pos:end="645:19">*</modifier></type><name pos:start="645:20" pos:end="645:20">p</name> <init pos:start="645:22" pos:end="645:51">= <expr pos:start="645:24" pos:end="645:51"><operator pos:start="645:24" pos:end="645:24">(</operator><name pos:start="645:25" pos:end="645:29">short</name> <operator pos:start="645:31" pos:end="645:31">*</operator><operator pos:start="645:32" pos:end="645:32">)</operator><operator pos:start="645:33" pos:end="645:33">&amp;</operator><name pos:start="645:34" pos:end="645:51"><name pos:start="645:34" pos:end="645:34">c</name><operator pos:start="645:35" pos:end="645:36">-&gt;</operator><name pos:start="645:37" pos:end="645:48">vCCoeffsBank</name><index pos:start="645:49" pos:end="645:51">[<expr pos:start="645:50" pos:end="645:50"><name pos:start="645:50" pos:end="645:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="647:13" pos:end="649:40">for <control pos:start="647:17" pos:end="647:35">(<init pos:start="647:18" pos:end="647:23"><expr pos:start="647:18" pos:end="647:22"><name pos:start="647:18" pos:end="647:18">j</name> <operator pos:start="647:20" pos:end="647:20">=</operator> <literal type="number" pos:start="647:22" pos:end="647:22">0</literal></expr>;</init> <condition pos:start="647:25" pos:end="647:30"><expr pos:start="647:25" pos:end="647:29"><name pos:start="647:25" pos:end="647:25">j</name> <operator pos:start="647:27" pos:end="647:27">&lt;</operator> <literal type="number" pos:start="647:29" pos:end="647:29">8</literal></expr>;</condition> <incr pos:start="647:32" pos:end="647:34"><expr pos:start="647:32" pos:end="647:34"><name pos:start="647:32" pos:end="647:32">j</name><operator pos:start="647:33" pos:end="647:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="649:17" pos:end="649:40"><block_content pos:start="649:17" pos:end="649:40">

                <expr_stmt pos:start="649:17" pos:end="649:40"><expr pos:start="649:17" pos:end="649:39"><name pos:start="649:17" pos:end="649:20"><name pos:start="649:17" pos:end="649:17">p</name><index pos:start="649:18" pos:end="649:20">[<expr pos:start="649:19" pos:end="649:19"><name pos:start="649:19" pos:end="649:19">j</name></expr>]</index></name> <operator pos:start="649:22" pos:end="649:22">=</operator> <name pos:start="649:24" pos:end="649:39"><name pos:start="649:24" pos:end="649:24">c</name><operator pos:start="649:25" pos:end="649:26">-&gt;</operator><name pos:start="649:27" pos:end="649:36">vChrFilter</name><index pos:start="649:37" pos:end="649:39">[<expr pos:start="649:38" pos:end="649:38"><name pos:start="649:38" pos:end="649:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

<cpp:endif pos:start="653:1" pos:end="653:6">#<cpp:directive pos:start="653:2" pos:end="653:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block>



    <comment type="line" pos:start="659:5" pos:end="659:89">// calculate buffer sizes so that they won't run out while handling these damn slices</comment>

    <expr_stmt pos:start="661:5" pos:end="661:39"><expr pos:start="661:5" pos:end="661:38"><name pos:start="661:5" pos:end="661:18"><name pos:start="661:5" pos:end="661:5">c</name><operator pos:start="661:6" pos:end="661:7">-&gt;</operator><name pos:start="661:8" pos:end="661:18">vLumBufSize</name></name> <operator pos:start="661:20" pos:end="661:20">=</operator> <name pos:start="661:22" pos:end="661:38"><name pos:start="661:22" pos:end="661:22">c</name><operator pos:start="661:23" pos:end="661:24">-&gt;</operator><name pos:start="661:25" pos:end="661:38">vLumFilterSize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="663:5" pos:end="663:39"><expr pos:start="663:5" pos:end="663:38"><name pos:start="663:5" pos:end="663:18"><name pos:start="663:5" pos:end="663:5">c</name><operator pos:start="663:6" pos:end="663:7">-&gt;</operator><name pos:start="663:8" pos:end="663:18">vChrBufSize</name></name> <operator pos:start="663:20" pos:end="663:20">=</operator> <name pos:start="663:22" pos:end="663:38"><name pos:start="663:22" pos:end="663:22">c</name><operator pos:start="663:23" pos:end="663:24">-&gt;</operator><name pos:start="663:25" pos:end="663:38">vChrFilterSize</name></name></expr>;</expr_stmt>

    <for pos:start="665:5" pos:end="693:5">for <control pos:start="665:9" pos:end="665:30">(<init pos:start="665:10" pos:end="665:15"><expr pos:start="665:10" pos:end="665:14"><name pos:start="665:10" pos:end="665:10">i</name> <operator pos:start="665:12" pos:end="665:12">=</operator> <literal type="number" pos:start="665:14" pos:end="665:14">0</literal></expr>;</init> <condition pos:start="665:17" pos:end="665:25"><expr pos:start="665:17" pos:end="665:24"><name pos:start="665:17" pos:end="665:17">i</name> <operator pos:start="665:19" pos:end="665:19">&lt;</operator> <name pos:start="665:21" pos:end="665:24">dstH</name></expr>;</condition> <incr pos:start="665:27" pos:end="665:29"><expr pos:start="665:27" pos:end="665:29"><name pos:start="665:27" pos:end="665:27">i</name><operator pos:start="665:28" pos:end="665:29">++</operator></expr></incr>)</control> <block pos:start="665:32" pos:end="693:5">{<block_content pos:start="667:9" pos:end="691:52">

        <decl_stmt pos:start="667:9" pos:end="667:55"><decl pos:start="667:9" pos:end="667:54"><type pos:start="667:9" pos:end="667:11"><name pos:start="667:9" pos:end="667:11">int</name></type> <name pos:start="667:13" pos:end="667:16">chrI</name>      <init pos:start="667:23" pos:end="667:54">= <expr pos:start="667:25" pos:end="667:54"><operator pos:start="667:25" pos:end="667:25">(</operator><name pos:start="667:26" pos:end="667:32">int64_t</name><operator pos:start="667:33" pos:end="667:33">)</operator><name pos:start="667:34" pos:end="667:34">i</name> <operator pos:start="667:36" pos:end="667:36">*</operator> <name pos:start="667:38" pos:end="667:47"><name pos:start="667:38" pos:end="667:38">c</name><operator pos:start="667:39" pos:end="667:40">-&gt;</operator><name pos:start="667:41" pos:end="667:47">chrDstH</name></name> <operator pos:start="667:49" pos:end="667:49">/</operator> <name pos:start="667:51" pos:end="667:54">dstH</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="669:9" pos:end="673:56"><decl pos:start="669:9" pos:end="673:55"><type pos:start="669:9" pos:end="669:11"><name pos:start="669:9" pos:end="669:11">int</name></type> <name pos:start="669:13" pos:end="669:21">nextSlice</name> <init pos:start="669:23" pos:end="673:55">= <expr pos:start="669:25" pos:end="673:55"><call pos:start="669:25" pos:end="673:55"><name pos:start="669:25" pos:end="669:29">FFMAX</name><argument_list pos:start="669:30" pos:end="673:55">(<argument pos:start="669:31" pos:end="669:73"><expr pos:start="669:31" pos:end="669:73"><name pos:start="669:31" pos:end="669:49"><name pos:start="669:31" pos:end="669:31">c</name><operator pos:start="669:32" pos:end="669:33">-&gt;</operator><name pos:start="669:34" pos:end="669:46">vLumFilterPos</name><index pos:start="669:47" pos:end="669:49">[<expr pos:start="669:48" pos:end="669:48"><name pos:start="669:48" pos:end="669:48">i</name></expr>]</index></name> <operator pos:start="669:51" pos:end="669:51">+</operator> <name pos:start="669:53" pos:end="669:69"><name pos:start="669:53" pos:end="669:53">c</name><operator pos:start="669:54" pos:end="669:55">-&gt;</operator><name pos:start="669:56" pos:end="669:69">vLumFilterSize</name></name> <operator pos:start="669:71" pos:end="669:71">-</operator> <literal type="number" pos:start="669:73" pos:end="669:73">1</literal></expr></argument>,

                              <argument pos:start="671:31" pos:end="673:54"><expr pos:start="671:31" pos:end="673:54"><operator pos:start="671:31" pos:end="671:31">(</operator><operator pos:start="671:32" pos:end="671:32">(</operator><name pos:start="671:33" pos:end="671:54"><name pos:start="671:33" pos:end="671:33">c</name><operator pos:start="671:34" pos:end="671:35">-&gt;</operator><name pos:start="671:36" pos:end="671:48">vChrFilterPos</name><index pos:start="671:49" pos:end="671:54">[<expr pos:start="671:50" pos:end="671:53"><name pos:start="671:50" pos:end="671:53">chrI</name></expr>]</index></name> <operator pos:start="671:56" pos:end="671:56">+</operator> <name pos:start="671:58" pos:end="671:74"><name pos:start="671:58" pos:end="671:58">c</name><operator pos:start="671:59" pos:end="671:60">-&gt;</operator><name pos:start="671:61" pos:end="671:74">vChrFilterSize</name></name> <operator pos:start="671:76" pos:end="671:76">-</operator> <literal type="number" pos:start="671:78" pos:end="671:78">1</literal><operator pos:start="671:79" pos:end="671:79">)</operator>

                               <operator pos:start="673:32" pos:end="673:33">&lt;&lt;</operator> <name pos:start="673:35" pos:end="673:53"><name pos:start="673:35" pos:end="673:35">c</name><operator pos:start="673:36" pos:end="673:37">-&gt;</operator><name pos:start="673:38" pos:end="673:53">chrSrcVSubSample</name></name><operator pos:start="673:54" pos:end="673:54">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="677:9" pos:end="677:42"><expr pos:start="677:9" pos:end="677:41"><name pos:start="677:9" pos:end="677:17">nextSlice</name> <operator pos:start="677:19" pos:end="677:21">&gt;&gt;=</operator> <name pos:start="677:23" pos:end="677:41"><name pos:start="677:23" pos:end="677:23">c</name><operator pos:start="677:24" pos:end="677:25">-&gt;</operator><name pos:start="677:26" pos:end="677:41">chrSrcVSubSample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="679:9" pos:end="679:42"><expr pos:start="679:9" pos:end="679:41"><name pos:start="679:9" pos:end="679:17">nextSlice</name> <operator pos:start="679:19" pos:end="679:21">&lt;&lt;=</operator> <name pos:start="679:23" pos:end="679:41"><name pos:start="679:23" pos:end="679:23">c</name><operator pos:start="679:24" pos:end="679:25">-&gt;</operator><name pos:start="679:26" pos:end="679:41">chrSrcVSubSample</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="681:9" pos:end="683:61"><if pos:start="681:9" pos:end="683:61">if <condition pos:start="681:12" pos:end="681:61">(<expr pos:start="681:13" pos:end="681:60"><name pos:start="681:13" pos:end="681:31"><name pos:start="681:13" pos:end="681:13">c</name><operator pos:start="681:14" pos:end="681:15">-&gt;</operator><name pos:start="681:16" pos:end="681:28">vLumFilterPos</name><index pos:start="681:29" pos:end="681:31">[<expr pos:start="681:30" pos:end="681:30"><name pos:start="681:30" pos:end="681:30">i</name></expr>]</index></name> <operator pos:start="681:33" pos:end="681:33">+</operator> <name pos:start="681:35" pos:end="681:48"><name pos:start="681:35" pos:end="681:35">c</name><operator pos:start="681:36" pos:end="681:37">-&gt;</operator><name pos:start="681:38" pos:end="681:48">vLumBufSize</name></name> <operator pos:start="681:50" pos:end="681:50">&lt;</operator> <name pos:start="681:52" pos:end="681:60">nextSlice</name></expr>)</condition><block type="pseudo" pos:start="683:13" pos:end="683:61"><block_content pos:start="683:13" pos:end="683:61">

            <expr_stmt pos:start="683:13" pos:end="683:61"><expr pos:start="683:13" pos:end="683:60"><name pos:start="683:13" pos:end="683:26"><name pos:start="683:13" pos:end="683:13">c</name><operator pos:start="683:14" pos:end="683:15">-&gt;</operator><name pos:start="683:16" pos:end="683:26">vLumBufSize</name></name> <operator pos:start="683:28" pos:end="683:28">=</operator> <name pos:start="683:30" pos:end="683:38">nextSlice</name> <operator pos:start="683:40" pos:end="683:40">-</operator> <name pos:start="683:42" pos:end="683:60"><name pos:start="683:42" pos:end="683:42">c</name><operator pos:start="683:43" pos:end="683:44">-&gt;</operator><name pos:start="683:45" pos:end="683:57">vLumFilterPos</name><index pos:start="683:58" pos:end="683:60">[<expr pos:start="683:59" pos:end="683:59"><name pos:start="683:59" pos:end="683:59">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="685:9" pos:end="691:52"><if pos:start="685:9" pos:end="691:52">if <condition pos:start="685:12" pos:end="687:47">(<expr pos:start="685:13" pos:end="687:46"><name pos:start="685:13" pos:end="685:34"><name pos:start="685:13" pos:end="685:13">c</name><operator pos:start="685:14" pos:end="685:15">-&gt;</operator><name pos:start="685:16" pos:end="685:28">vChrFilterPos</name><index pos:start="685:29" pos:end="685:34">[<expr pos:start="685:30" pos:end="685:33"><name pos:start="685:30" pos:end="685:33">chrI</name></expr>]</index></name> <operator pos:start="685:36" pos:end="685:36">+</operator> <name pos:start="685:38" pos:end="685:51"><name pos:start="685:38" pos:end="685:38">c</name><operator pos:start="685:39" pos:end="685:40">-&gt;</operator><name pos:start="685:41" pos:end="685:51">vChrBufSize</name></name> <operator pos:start="685:53" pos:end="685:53">&lt;</operator>

            <operator pos:start="687:13" pos:end="687:13">(</operator><name pos:start="687:14" pos:end="687:22">nextSlice</name> <operator pos:start="687:24" pos:end="687:25">&gt;&gt;</operator> <name pos:start="687:27" pos:end="687:45"><name pos:start="687:27" pos:end="687:27">c</name><operator pos:start="687:28" pos:end="687:29">-&gt;</operator><name pos:start="687:30" pos:end="687:45">chrSrcVSubSample</name></name><operator pos:start="687:46" pos:end="687:46">)</operator></expr>)</condition><block type="pseudo" pos:start="689:13" pos:end="691:52"><block_content pos:start="689:13" pos:end="691:52">

            <expr_stmt pos:start="689:13" pos:end="691:52"><expr pos:start="689:13" pos:end="691:51"><name pos:start="689:13" pos:end="689:26"><name pos:start="689:13" pos:end="689:13">c</name><operator pos:start="689:14" pos:end="689:15">-&gt;</operator><name pos:start="689:16" pos:end="689:26">vChrBufSize</name></name> <operator pos:start="689:28" pos:end="689:28">=</operator> <operator pos:start="689:30" pos:end="689:30">(</operator><name pos:start="689:31" pos:end="689:39">nextSlice</name> <operator pos:start="689:41" pos:end="689:42">&gt;&gt;</operator> <name pos:start="689:44" pos:end="689:62"><name pos:start="689:44" pos:end="689:44">c</name><operator pos:start="689:45" pos:end="689:46">-&gt;</operator><name pos:start="689:47" pos:end="689:62">chrSrcVSubSample</name></name><operator pos:start="689:63" pos:end="689:63">)</operator> <operator pos:start="689:65" pos:end="689:65">-</operator>

                             <name pos:start="691:30" pos:end="691:51"><name pos:start="691:30" pos:end="691:30">c</name><operator pos:start="691:31" pos:end="691:32">-&gt;</operator><name pos:start="691:33" pos:end="691:45">vChrFilterPos</name><index pos:start="691:46" pos:end="691:51">[<expr pos:start="691:47" pos:end="691:50"><name pos:start="691:47" pos:end="691:50">chrI</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="697:5" pos:end="699:74">/* Allocate pixbufs (we use dynamic allocation because otherwise we would

     * need to allocate several megabytes to handle all possible cases) */</comment>

    <expr_stmt pos:start="701:5" pos:end="701:85"><expr pos:start="701:5" pos:end="701:84"><call pos:start="701:5" pos:end="701:84"><name pos:start="701:5" pos:end="701:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="701:21" pos:end="701:84">(<argument pos:start="701:22" pos:end="701:22"><expr pos:start="701:22" pos:end="701:22"><name pos:start="701:22" pos:end="701:22">c</name></expr></argument>, <argument pos:start="701:25" pos:end="701:36"><expr pos:start="701:25" pos:end="701:36"><name pos:start="701:25" pos:end="701:36"><name pos:start="701:25" pos:end="701:25">c</name><operator pos:start="701:26" pos:end="701:27">-&gt;</operator><name pos:start="701:28" pos:end="701:36">lumPixBuf</name></name></expr></argument>,  <argument pos:start="701:40" pos:end="701:77"><expr pos:start="701:40" pos:end="701:77"><name pos:start="701:40" pos:end="701:53"><name pos:start="701:40" pos:end="701:40">c</name><operator pos:start="701:41" pos:end="701:42">-&gt;</operator><name pos:start="701:43" pos:end="701:53">vLumBufSize</name></name> <operator pos:start="701:55" pos:end="701:55">*</operator> <literal type="number" pos:start="701:57" pos:end="701:57">3</literal> <operator pos:start="701:59" pos:end="701:59">*</operator> <sizeof pos:start="701:61" pos:end="701:77">sizeof<argument_list pos:start="701:67" pos:end="701:77">(<argument pos:start="701:68" pos:end="701:76"><expr pos:start="701:68" pos:end="701:76"><name pos:start="701:68" pos:end="701:74">int16_t</name> <operator pos:start="701:76" pos:end="701:76">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="701:80" pos:end="701:83"><expr pos:start="701:80" pos:end="701:83"><name pos:start="701:80" pos:end="701:83">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="703:5" pos:end="703:85"><expr pos:start="703:5" pos:end="703:84"><call pos:start="703:5" pos:end="703:84"><name pos:start="703:5" pos:end="703:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="703:21" pos:end="703:84">(<argument pos:start="703:22" pos:end="703:22"><expr pos:start="703:22" pos:end="703:22"><name pos:start="703:22" pos:end="703:22">c</name></expr></argument>, <argument pos:start="703:25" pos:end="703:37"><expr pos:start="703:25" pos:end="703:37"><name pos:start="703:25" pos:end="703:37"><name pos:start="703:25" pos:end="703:25">c</name><operator pos:start="703:26" pos:end="703:27">-&gt;</operator><name pos:start="703:28" pos:end="703:37">chrUPixBuf</name></name></expr></argument>, <argument pos:start="703:40" pos:end="703:77"><expr pos:start="703:40" pos:end="703:77"><name pos:start="703:40" pos:end="703:53"><name pos:start="703:40" pos:end="703:40">c</name><operator pos:start="703:41" pos:end="703:42">-&gt;</operator><name pos:start="703:43" pos:end="703:53">vChrBufSize</name></name> <operator pos:start="703:55" pos:end="703:55">*</operator> <literal type="number" pos:start="703:57" pos:end="703:57">3</literal> <operator pos:start="703:59" pos:end="703:59">*</operator> <sizeof pos:start="703:61" pos:end="703:77">sizeof<argument_list pos:start="703:67" pos:end="703:77">(<argument pos:start="703:68" pos:end="703:76"><expr pos:start="703:68" pos:end="703:76"><name pos:start="703:68" pos:end="703:74">int16_t</name> <operator pos:start="703:76" pos:end="703:76">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="703:80" pos:end="703:83"><expr pos:start="703:80" pos:end="703:83"><name pos:start="703:80" pos:end="703:83">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="705:5" pos:end="705:85"><expr pos:start="705:5" pos:end="705:84"><call pos:start="705:5" pos:end="705:84"><name pos:start="705:5" pos:end="705:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="705:21" pos:end="705:84">(<argument pos:start="705:22" pos:end="705:22"><expr pos:start="705:22" pos:end="705:22"><name pos:start="705:22" pos:end="705:22">c</name></expr></argument>, <argument pos:start="705:25" pos:end="705:37"><expr pos:start="705:25" pos:end="705:37"><name pos:start="705:25" pos:end="705:37"><name pos:start="705:25" pos:end="705:25">c</name><operator pos:start="705:26" pos:end="705:27">-&gt;</operator><name pos:start="705:28" pos:end="705:37">chrVPixBuf</name></name></expr></argument>, <argument pos:start="705:40" pos:end="705:77"><expr pos:start="705:40" pos:end="705:77"><name pos:start="705:40" pos:end="705:53"><name pos:start="705:40" pos:end="705:40">c</name><operator pos:start="705:41" pos:end="705:42">-&gt;</operator><name pos:start="705:43" pos:end="705:53">vChrBufSize</name></name> <operator pos:start="705:55" pos:end="705:55">*</operator> <literal type="number" pos:start="705:57" pos:end="705:57">3</literal> <operator pos:start="705:59" pos:end="705:59">*</operator> <sizeof pos:start="705:61" pos:end="705:77">sizeof<argument_list pos:start="705:67" pos:end="705:77">(<argument pos:start="705:68" pos:end="705:76"><expr pos:start="705:68" pos:end="705:76"><name pos:start="705:68" pos:end="705:74">int16_t</name> <operator pos:start="705:76" pos:end="705:76">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="705:80" pos:end="705:83"><expr pos:start="705:80" pos:end="705:83"><name pos:start="705:80" pos:end="705:83">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="707:5" pos:end="709:89"><if pos:start="707:5" pos:end="709:89">if <condition pos:start="707:8" pos:end="707:79">(<expr pos:start="707:9" pos:end="707:78"><name pos:start="707:9" pos:end="707:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="707:30" pos:end="707:31">&amp;&amp;</operator> <call pos:start="707:33" pos:end="707:53"><name pos:start="707:33" pos:end="707:39">isALPHA</name><argument_list pos:start="707:40" pos:end="707:53">(<argument pos:start="707:41" pos:end="707:52"><expr pos:start="707:41" pos:end="707:52"><name pos:start="707:41" pos:end="707:52"><name pos:start="707:41" pos:end="707:41">c</name><operator pos:start="707:42" pos:end="707:43">-&gt;</operator><name pos:start="707:44" pos:end="707:52">srcFormat</name></name></expr></argument>)</argument_list></call> <operator pos:start="707:55" pos:end="707:56">&amp;&amp;</operator> <call pos:start="707:58" pos:end="707:78"><name pos:start="707:58" pos:end="707:64">isALPHA</name><argument_list pos:start="707:65" pos:end="707:78">(<argument pos:start="707:66" pos:end="707:77"><expr pos:start="707:66" pos:end="707:77"><name pos:start="707:66" pos:end="707:77"><name pos:start="707:66" pos:end="707:66">c</name><operator pos:start="707:67" pos:end="707:68">-&gt;</operator><name pos:start="707:69" pos:end="707:77">dstFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="709:9" pos:end="709:89"><block_content pos:start="709:9" pos:end="709:89">

        <expr_stmt pos:start="709:9" pos:end="709:89"><expr pos:start="709:9" pos:end="709:88"><call pos:start="709:9" pos:end="709:88"><name pos:start="709:9" pos:end="709:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="709:26" pos:end="709:88">(<argument pos:start="709:27" pos:end="709:27"><expr pos:start="709:27" pos:end="709:27"><name pos:start="709:27" pos:end="709:27">c</name></expr></argument>, <argument pos:start="709:30" pos:end="709:41"><expr pos:start="709:30" pos:end="709:41"><name pos:start="709:30" pos:end="709:41"><name pos:start="709:30" pos:end="709:30">c</name><operator pos:start="709:31" pos:end="709:32">-&gt;</operator><name pos:start="709:33" pos:end="709:41">alpPixBuf</name></name></expr></argument>, <argument pos:start="709:44" pos:end="709:81"><expr pos:start="709:44" pos:end="709:81"><name pos:start="709:44" pos:end="709:57"><name pos:start="709:44" pos:end="709:44">c</name><operator pos:start="709:45" pos:end="709:46">-&gt;</operator><name pos:start="709:47" pos:end="709:57">vLumBufSize</name></name> <operator pos:start="709:59" pos:end="709:59">*</operator> <literal type="number" pos:start="709:61" pos:end="709:61">3</literal> <operator pos:start="709:63" pos:end="709:63">*</operator> <sizeof pos:start="709:65" pos:end="709:81">sizeof<argument_list pos:start="709:71" pos:end="709:81">(<argument pos:start="709:72" pos:end="709:80"><expr pos:start="709:72" pos:end="709:80"><name pos:start="709:72" pos:end="709:78">int16_t</name> <operator pos:start="709:80" pos:end="709:80">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="709:84" pos:end="709:87"><expr pos:start="709:84" pos:end="709:87"><name pos:start="709:84" pos:end="709:87">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="711:5" pos:end="713:64">/* Note we need at least one pixel more at the end because of the MMX code

     * (just in case someone wants to replace the 4000/8000). */</comment>

    <comment type="block" pos:start="715:5" pos:end="715:39">/* align at 16 bytes for AltiVec */</comment>

    <for pos:start="717:5" pos:end="725:5">for <control pos:start="717:9" pos:end="717:40">(<init pos:start="717:10" pos:end="717:15"><expr pos:start="717:10" pos:end="717:14"><name pos:start="717:10" pos:end="717:10">i</name> <operator pos:start="717:12" pos:end="717:12">=</operator> <literal type="number" pos:start="717:14" pos:end="717:14">0</literal></expr>;</init> <condition pos:start="717:17" pos:end="717:35"><expr pos:start="717:17" pos:end="717:34"><name pos:start="717:17" pos:end="717:17">i</name> <operator pos:start="717:19" pos:end="717:19">&lt;</operator> <name pos:start="717:21" pos:end="717:34"><name pos:start="717:21" pos:end="717:21">c</name><operator pos:start="717:22" pos:end="717:23">-&gt;</operator><name pos:start="717:24" pos:end="717:34">vLumBufSize</name></name></expr>;</condition> <incr pos:start="717:37" pos:end="717:39"><expr pos:start="717:37" pos:end="717:39"><name pos:start="717:37" pos:end="717:37">i</name><operator pos:start="717:38" pos:end="717:39">++</operator></expr></incr>)</control> <block pos:start="717:42" pos:end="725:5">{<block_content pos:start="719:9" pos:end="723:59">

        <expr_stmt pos:start="719:9" pos:end="721:49"><expr pos:start="719:9" pos:end="721:48"><call pos:start="719:9" pos:end="721:48"><name pos:start="719:9" pos:end="719:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="719:26" pos:end="721:48">(<argument pos:start="719:27" pos:end="719:27"><expr pos:start="719:27" pos:end="719:27"><name pos:start="719:27" pos:end="719:27">c</name></expr></argument>, <argument pos:start="719:30" pos:end="719:61"><expr pos:start="719:30" pos:end="719:61"><name pos:start="719:30" pos:end="719:61"><name pos:start="719:30" pos:end="719:30">c</name><operator pos:start="719:31" pos:end="719:32">-&gt;</operator><name pos:start="719:33" pos:end="719:41">lumPixBuf</name><index pos:start="719:42" pos:end="719:61">[<expr pos:start="719:43" pos:end="719:60"><name pos:start="719:43" pos:end="719:43">i</name> <operator pos:start="719:45" pos:end="719:45">+</operator> <name pos:start="719:47" pos:end="719:60"><name pos:start="719:47" pos:end="719:47">c</name><operator pos:start="719:48" pos:end="719:49">-&gt;</operator><name pos:start="719:50" pos:end="719:60">vLumBufSize</name></name></expr>]</index></name></expr></argument>,

                          <argument pos:start="721:27" pos:end="721:41"><expr pos:start="721:27" pos:end="721:41"><name pos:start="721:27" pos:end="721:36">dst_stride</name> <operator pos:start="721:38" pos:end="721:38">+</operator> <literal type="number" pos:start="721:40" pos:end="721:41">16</literal></expr></argument>, <argument pos:start="721:44" pos:end="721:47"><expr pos:start="721:44" pos:end="721:47"><name pos:start="721:44" pos:end="721:47">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="723:9" pos:end="723:59"><expr pos:start="723:9" pos:end="723:58"><name pos:start="723:9" pos:end="723:23"><name pos:start="723:9" pos:end="723:9">c</name><operator pos:start="723:10" pos:end="723:11">-&gt;</operator><name pos:start="723:12" pos:end="723:20">lumPixBuf</name><index pos:start="723:21" pos:end="723:23">[<expr pos:start="723:22" pos:end="723:22"><name pos:start="723:22" pos:end="723:22">i</name></expr>]</index></name> <operator pos:start="723:25" pos:end="723:25">=</operator> <name pos:start="723:27" pos:end="723:58"><name pos:start="723:27" pos:end="723:27">c</name><operator pos:start="723:28" pos:end="723:29">-&gt;</operator><name pos:start="723:30" pos:end="723:38">lumPixBuf</name><index pos:start="723:39" pos:end="723:58">[<expr pos:start="723:40" pos:end="723:57"><name pos:start="723:40" pos:end="723:40">i</name> <operator pos:start="723:42" pos:end="723:42">+</operator> <name pos:start="723:44" pos:end="723:57"><name pos:start="723:44" pos:end="723:44">c</name><operator pos:start="723:45" pos:end="723:46">-&gt;</operator><name pos:start="723:47" pos:end="723:57">vLumBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="line" pos:start="727:5" pos:end="727:77">// 64 / (c-&gt;dstBpc &amp; ~7) is the same as 16 / sizeof(scaling_intermediate)</comment>

    <expr_stmt pos:start="729:5" pos:end="729:59"><expr pos:start="729:5" pos:end="729:58"><name pos:start="729:5" pos:end="729:16"><name pos:start="729:5" pos:end="729:5">c</name><operator pos:start="729:6" pos:end="729:7">-&gt;</operator><name pos:start="729:8" pos:end="729:16">uv_off_px</name></name>   <operator pos:start="729:20" pos:end="729:20">=</operator> <name pos:start="729:22" pos:end="729:34">dst_stride_px</name> <operator pos:start="729:36" pos:end="729:36">+</operator> <literal type="number" pos:start="729:38" pos:end="729:39">64</literal> <operator pos:start="729:41" pos:end="729:41">/</operator> <operator pos:start="729:43" pos:end="729:43">(</operator><name pos:start="729:44" pos:end="729:52"><name pos:start="729:44" pos:end="729:44">c</name><operator pos:start="729:45" pos:end="729:46">-&gt;</operator><name pos:start="729:47" pos:end="729:52">dstBpc</name></name> <operator pos:start="729:54" pos:end="729:54">&amp;</operator> <operator pos:start="729:56" pos:end="729:56">~</operator><literal type="number" pos:start="729:57" pos:end="729:57">7</literal><operator pos:start="729:58" pos:end="729:58">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="731:5" pos:end="731:37"><expr pos:start="731:5" pos:end="731:36"><name pos:start="731:5" pos:end="731:18"><name pos:start="731:5" pos:end="731:5">c</name><operator pos:start="731:6" pos:end="731:7">-&gt;</operator><name pos:start="731:8" pos:end="731:18">uv_off_byte</name></name> <operator pos:start="731:20" pos:end="731:20">=</operator> <name pos:start="731:22" pos:end="731:31">dst_stride</name> <operator pos:start="731:33" pos:end="731:33">+</operator> <literal type="number" pos:start="731:35" pos:end="731:36">16</literal></expr>;</expr_stmt>

    <for pos:start="733:5" pos:end="745:5">for <control pos:start="733:9" pos:end="733:40">(<init pos:start="733:10" pos:end="733:15"><expr pos:start="733:10" pos:end="733:14"><name pos:start="733:10" pos:end="733:10">i</name> <operator pos:start="733:12" pos:end="733:12">=</operator> <literal type="number" pos:start="733:14" pos:end="733:14">0</literal></expr>;</init> <condition pos:start="733:17" pos:end="733:35"><expr pos:start="733:17" pos:end="733:34"><name pos:start="733:17" pos:end="733:17">i</name> <operator pos:start="733:19" pos:end="733:19">&lt;</operator> <name pos:start="733:21" pos:end="733:34"><name pos:start="733:21" pos:end="733:21">c</name><operator pos:start="733:22" pos:end="733:23">-&gt;</operator><name pos:start="733:24" pos:end="733:34">vChrBufSize</name></name></expr>;</condition> <incr pos:start="733:37" pos:end="733:39"><expr pos:start="733:37" pos:end="733:39"><name pos:start="733:37" pos:end="733:37">i</name><operator pos:start="733:38" pos:end="733:39">++</operator></expr></incr>)</control> <block pos:start="733:42" pos:end="745:5">{<block_content pos:start="735:9" pos:end="743:68">

        <expr_stmt pos:start="735:9" pos:end="737:52"><expr pos:start="735:9" pos:end="737:51"><call pos:start="735:9" pos:end="737:51"><name pos:start="735:9" pos:end="735:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="735:25" pos:end="737:51">(<argument pos:start="735:26" pos:end="735:26"><expr pos:start="735:26" pos:end="735:26"><name pos:start="735:26" pos:end="735:26">c</name></expr></argument>, <argument pos:start="735:29" pos:end="735:61"><expr pos:start="735:29" pos:end="735:61"><name pos:start="735:29" pos:end="735:61"><name pos:start="735:29" pos:end="735:29">c</name><operator pos:start="735:30" pos:end="735:31">-&gt;</operator><name pos:start="735:32" pos:end="735:41">chrUPixBuf</name><index pos:start="735:42" pos:end="735:61">[<expr pos:start="735:43" pos:end="735:60"><name pos:start="735:43" pos:end="735:43">i</name> <operator pos:start="735:45" pos:end="735:45">+</operator> <name pos:start="735:47" pos:end="735:60"><name pos:start="735:47" pos:end="735:47">c</name><operator pos:start="735:48" pos:end="735:49">-&gt;</operator><name pos:start="735:50" pos:end="735:60">vChrBufSize</name></name></expr>]</index></name></expr></argument>,

                         <argument pos:start="737:26" pos:end="737:44"><expr pos:start="737:26" pos:end="737:44"><name pos:start="737:26" pos:end="737:35">dst_stride</name> <operator pos:start="737:37" pos:end="737:37">*</operator> <literal type="number" pos:start="737:39" pos:end="737:41">2</literal> <operator pos:start="737:41" pos:end="737:41">+</operator> <literal type="number" pos:start="737:43" pos:end="737:44">32</literal></expr></argument>, <argument pos:start="737:47" pos:end="737:50"><expr pos:start="737:47" pos:end="737:50"><name pos:start="737:47" pos:end="737:50">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="739:9" pos:end="739:61"><expr pos:start="739:9" pos:end="739:60"><name pos:start="739:9" pos:end="739:24"><name pos:start="739:9" pos:end="739:9">c</name><operator pos:start="739:10" pos:end="739:11">-&gt;</operator><name pos:start="739:12" pos:end="739:21">chrUPixBuf</name><index pos:start="739:22" pos:end="739:24">[<expr pos:start="739:23" pos:end="739:23"><name pos:start="739:23" pos:end="739:23">i</name></expr>]</index></name> <operator pos:start="739:26" pos:end="739:26">=</operator> <name pos:start="739:28" pos:end="739:60"><name pos:start="739:28" pos:end="739:28">c</name><operator pos:start="739:29" pos:end="739:30">-&gt;</operator><name pos:start="739:31" pos:end="739:40">chrUPixBuf</name><index pos:start="739:41" pos:end="739:60">[<expr pos:start="739:42" pos:end="739:59"><name pos:start="739:42" pos:end="739:42">i</name> <operator pos:start="739:44" pos:end="739:44">+</operator> <name pos:start="739:46" pos:end="739:59"><name pos:start="739:46" pos:end="739:46">c</name><operator pos:start="739:47" pos:end="739:48">-&gt;</operator><name pos:start="739:49" pos:end="739:59">vChrBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="741:9" pos:end="743:68"><expr pos:start="741:9" pos:end="743:67"><name pos:start="741:9" pos:end="741:24"><name pos:start="741:9" pos:end="741:9">c</name><operator pos:start="741:10" pos:end="741:11">-&gt;</operator><name pos:start="741:12" pos:end="741:21">chrVPixBuf</name><index pos:start="741:22" pos:end="741:24">[<expr pos:start="741:23" pos:end="741:23"><name pos:start="741:23" pos:end="741:23">i</name></expr>]</index></name> <operator pos:start="741:26" pos:end="741:26">=</operator> <name pos:start="741:28" pos:end="741:60"><name pos:start="741:28" pos:end="741:28">c</name><operator pos:start="741:29" pos:end="741:30">-&gt;</operator><name pos:start="741:31" pos:end="741:40">chrVPixBuf</name><index pos:start="741:41" pos:end="741:60">[<expr pos:start="741:42" pos:end="741:59"><name pos:start="741:42" pos:end="741:42">i</name> <operator pos:start="741:44" pos:end="741:44">+</operator> <name pos:start="741:46" pos:end="741:59"><name pos:start="741:46" pos:end="741:46">c</name><operator pos:start="741:47" pos:end="741:48">-&gt;</operator><name pos:start="741:49" pos:end="741:59">vChrBufSize</name></name></expr>]</index></name>

                         <operator pos:start="743:26" pos:end="743:26">=</operator> <name pos:start="743:28" pos:end="743:43"><name pos:start="743:28" pos:end="743:28">c</name><operator pos:start="743:29" pos:end="743:30">-&gt;</operator><name pos:start="743:31" pos:end="743:40">chrUPixBuf</name><index pos:start="743:41" pos:end="743:43">[<expr pos:start="743:42" pos:end="743:42"><name pos:start="743:42" pos:end="743:42">i</name></expr>]</index></name> <operator pos:start="743:45" pos:end="743:45">+</operator> <operator pos:start="743:47" pos:end="743:47">(</operator><name pos:start="743:48" pos:end="743:57">dst_stride</name> <operator pos:start="743:59" pos:end="743:60">&gt;&gt;</operator> <literal type="number" pos:start="743:62" pos:end="743:62">1</literal><operator pos:start="743:63" pos:end="743:63">)</operator> <operator pos:start="743:65" pos:end="743:65">+</operator> <literal type="number" pos:start="743:67" pos:end="743:67">8</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="747:5" pos:end="757:9"><if pos:start="747:5" pos:end="757:9">if <condition pos:start="747:8" pos:end="747:45">(<expr pos:start="747:9" pos:end="747:44"><name pos:start="747:9" pos:end="747:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="747:30" pos:end="747:31">&amp;&amp;</operator> <name pos:start="747:33" pos:end="747:44"><name pos:start="747:33" pos:end="747:33">c</name><operator pos:start="747:34" pos:end="747:35">-&gt;</operator><name pos:start="747:36" pos:end="747:44">alpPixBuf</name></name></expr>)</condition><block type="pseudo" pos:start="749:9" pos:end="757:9"><block_content pos:start="749:9" pos:end="757:9">

        <for pos:start="749:9" pos:end="757:9">for <control pos:start="749:13" pos:end="749:44">(<init pos:start="749:14" pos:end="749:19"><expr pos:start="749:14" pos:end="749:18"><name pos:start="749:14" pos:end="749:14">i</name> <operator pos:start="749:16" pos:end="749:16">=</operator> <literal type="number" pos:start="749:18" pos:end="749:18">0</literal></expr>;</init> <condition pos:start="749:21" pos:end="749:39"><expr pos:start="749:21" pos:end="749:38"><name pos:start="749:21" pos:end="749:21">i</name> <operator pos:start="749:23" pos:end="749:23">&lt;</operator> <name pos:start="749:25" pos:end="749:38"><name pos:start="749:25" pos:end="749:25">c</name><operator pos:start="749:26" pos:end="749:27">-&gt;</operator><name pos:start="749:28" pos:end="749:38">vLumBufSize</name></name></expr>;</condition> <incr pos:start="749:41" pos:end="749:43"><expr pos:start="749:41" pos:end="749:43"><name pos:start="749:41" pos:end="749:41">i</name><operator pos:start="749:42" pos:end="749:43">++</operator></expr></incr>)</control> <block pos:start="749:46" pos:end="757:9">{<block_content pos:start="751:13" pos:end="755:63">

            <expr_stmt pos:start="751:13" pos:end="753:53"><expr pos:start="751:13" pos:end="753:52"><call pos:start="751:13" pos:end="753:52"><name pos:start="751:13" pos:end="751:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="751:30" pos:end="753:52">(<argument pos:start="751:31" pos:end="751:31"><expr pos:start="751:31" pos:end="751:31"><name pos:start="751:31" pos:end="751:31">c</name></expr></argument>, <argument pos:start="751:34" pos:end="751:65"><expr pos:start="751:34" pos:end="751:65"><name pos:start="751:34" pos:end="751:65"><name pos:start="751:34" pos:end="751:34">c</name><operator pos:start="751:35" pos:end="751:36">-&gt;</operator><name pos:start="751:37" pos:end="751:45">alpPixBuf</name><index pos:start="751:46" pos:end="751:65">[<expr pos:start="751:47" pos:end="751:64"><name pos:start="751:47" pos:end="751:47">i</name> <operator pos:start="751:49" pos:end="751:49">+</operator> <name pos:start="751:51" pos:end="751:64"><name pos:start="751:51" pos:end="751:51">c</name><operator pos:start="751:52" pos:end="751:53">-&gt;</operator><name pos:start="751:54" pos:end="751:64">vLumBufSize</name></name></expr>]</index></name></expr></argument>,

                              <argument pos:start="753:31" pos:end="753:45"><expr pos:start="753:31" pos:end="753:45"><name pos:start="753:31" pos:end="753:40">dst_stride</name> <operator pos:start="753:42" pos:end="753:42">+</operator> <literal type="number" pos:start="753:44" pos:end="753:45">16</literal></expr></argument>, <argument pos:start="753:48" pos:end="753:51"><expr pos:start="753:48" pos:end="753:51"><name pos:start="753:48" pos:end="753:51">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="755:13" pos:end="755:63"><expr pos:start="755:13" pos:end="755:62"><name pos:start="755:13" pos:end="755:27"><name pos:start="755:13" pos:end="755:13">c</name><operator pos:start="755:14" pos:end="755:15">-&gt;</operator><name pos:start="755:16" pos:end="755:24">alpPixBuf</name><index pos:start="755:25" pos:end="755:27">[<expr pos:start="755:26" pos:end="755:26"><name pos:start="755:26" pos:end="755:26">i</name></expr>]</index></name> <operator pos:start="755:29" pos:end="755:29">=</operator> <name pos:start="755:31" pos:end="755:62"><name pos:start="755:31" pos:end="755:31">c</name><operator pos:start="755:32" pos:end="755:33">-&gt;</operator><name pos:start="755:34" pos:end="755:42">alpPixBuf</name><index pos:start="755:43" pos:end="755:62">[<expr pos:start="755:44" pos:end="755:61"><name pos:start="755:44" pos:end="755:44">i</name> <operator pos:start="755:46" pos:end="755:46">+</operator> <name pos:start="755:48" pos:end="755:61"><name pos:start="755:48" pos:end="755:48">c</name><operator pos:start="755:49" pos:end="755:50">-&gt;</operator><name pos:start="755:51" pos:end="755:61">vLumBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="line" pos:start="761:5" pos:end="761:80">// try to avoid drawing green stuff between the right end and the stride end</comment>

    <for pos:start="763:5" pos:end="765:57">for <control pos:start="763:9" pos:end="763:40">(<init pos:start="763:10" pos:end="763:15"><expr pos:start="763:10" pos:end="763:14"><name pos:start="763:10" pos:end="763:10">i</name> <operator pos:start="763:12" pos:end="763:12">=</operator> <literal type="number" pos:start="763:14" pos:end="763:14">0</literal></expr>;</init> <condition pos:start="763:17" pos:end="763:35"><expr pos:start="763:17" pos:end="763:34"><name pos:start="763:17" pos:end="763:17">i</name> <operator pos:start="763:19" pos:end="763:19">&lt;</operator> <name pos:start="763:21" pos:end="763:34"><name pos:start="763:21" pos:end="763:21">c</name><operator pos:start="763:22" pos:end="763:23">-&gt;</operator><name pos:start="763:24" pos:end="763:34">vChrBufSize</name></name></expr>;</condition> <incr pos:start="763:37" pos:end="763:39"><expr pos:start="763:37" pos:end="763:39"><name pos:start="763:37" pos:end="763:37">i</name><operator pos:start="763:38" pos:end="763:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="765:9" pos:end="765:57"><block_content pos:start="765:9" pos:end="765:57">

        <expr_stmt pos:start="765:9" pos:end="765:57"><expr pos:start="765:9" pos:end="765:56"><call pos:start="765:9" pos:end="765:56"><name pos:start="765:9" pos:end="765:14">memset</name><argument_list pos:start="765:15" pos:end="765:56">(<argument pos:start="765:16" pos:end="765:31"><expr pos:start="765:16" pos:end="765:31"><name pos:start="765:16" pos:end="765:31"><name pos:start="765:16" pos:end="765:16">c</name><operator pos:start="765:17" pos:end="765:18">-&gt;</operator><name pos:start="765:19" pos:end="765:28">chrUPixBuf</name><index pos:start="765:29" pos:end="765:31">[<expr pos:start="765:30" pos:end="765:30"><name pos:start="765:30" pos:end="765:30">i</name></expr>]</index></name></expr></argument>, <argument pos:start="765:34" pos:end="765:35"><expr pos:start="765:34" pos:end="765:35"><literal type="number" pos:start="765:34" pos:end="765:35">64</literal></expr></argument>, <argument pos:start="765:38" pos:end="765:55"><expr pos:start="765:38" pos:end="765:55"><name pos:start="765:38" pos:end="765:47">dst_stride</name> <operator pos:start="765:49" pos:end="765:49">*</operator> <literal type="number" pos:start="765:51" pos:end="765:53">2</literal> <operator pos:start="765:53" pos:end="765:53">+</operator> <literal type="number" pos:start="765:55" pos:end="765:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="769:5" pos:end="769:31"><expr pos:start="769:5" pos:end="769:30"><call pos:start="769:5" pos:end="769:30"><name pos:start="769:5" pos:end="769:10">assert</name><argument_list pos:start="769:11" pos:end="769:30">(<argument pos:start="769:12" pos:end="769:29"><expr pos:start="769:12" pos:end="769:29"><name pos:start="769:12" pos:end="769:21"><name pos:start="769:12" pos:end="769:12">c</name><operator pos:start="769:13" pos:end="769:14">-&gt;</operator><name pos:start="769:15" pos:end="769:21">chrDstH</name></name> <operator pos:start="769:23" pos:end="769:24">&lt;=</operator> <name pos:start="769:26" pos:end="769:29">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="773:5" pos:end="887:5"><if pos:start="773:5" pos:end="887:5">if <condition pos:start="773:8" pos:end="773:31">(<expr pos:start="773:9" pos:end="773:30"><name pos:start="773:9" pos:end="773:13">flags</name> <operator pos:start="773:15" pos:end="773:15">&amp;</operator> <name pos:start="773:17" pos:end="773:30">SWS_PRINT_INFO</name></expr>)</condition> <block pos:start="773:33" pos:end="887:5">{<block_content pos:start="775:9" pos:end="885:39">

        <if_stmt pos:start="775:9" pos:end="821:59"><if pos:start="775:9" pos:end="777:61">if <condition pos:start="775:12" pos:end="775:38">(<expr pos:start="775:13" pos:end="775:37"><name pos:start="775:13" pos:end="775:17">flags</name> <operator pos:start="775:19" pos:end="775:19">&amp;</operator> <name pos:start="775:21" pos:end="775:37">SWS_FAST_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="777:13" pos:end="777:61"><block_content pos:start="777:13" pos:end="777:61">

            <expr_stmt pos:start="777:13" pos:end="777:61"><expr pos:start="777:13" pos:end="777:60"><call pos:start="777:13" pos:end="777:60"><name pos:start="777:13" pos:end="777:18">av_log</name><argument_list pos:start="777:19" pos:end="777:60">(<argument pos:start="777:20" pos:end="777:20"><expr pos:start="777:20" pos:end="777:20"><name pos:start="777:20" pos:end="777:20">c</name></expr></argument>, <argument pos:start="777:23" pos:end="777:33"><expr pos:start="777:23" pos:end="777:33"><name pos:start="777:23" pos:end="777:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="777:36" pos:end="777:59"><expr pos:start="777:36" pos:end="777:59"><literal type="string" pos:start="777:36" pos:end="777:59">"FAST_BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="779:9" pos:end="781:56">else if <condition pos:start="779:17" pos:end="779:38">(<expr pos:start="779:18" pos:end="779:37"><name pos:start="779:18" pos:end="779:22">flags</name> <operator pos:start="779:24" pos:end="779:24">&amp;</operator> <name pos:start="779:26" pos:end="779:37">SWS_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="781:13" pos:end="781:56"><block_content pos:start="781:13" pos:end="781:56">

            <expr_stmt pos:start="781:13" pos:end="781:56"><expr pos:start="781:13" pos:end="781:55"><call pos:start="781:13" pos:end="781:55"><name pos:start="781:13" pos:end="781:18">av_log</name><argument_list pos:start="781:19" pos:end="781:55">(<argument pos:start="781:20" pos:end="781:20"><expr pos:start="781:20" pos:end="781:20"><name pos:start="781:20" pos:end="781:20">c</name></expr></argument>, <argument pos:start="781:23" pos:end="781:33"><expr pos:start="781:23" pos:end="781:33"><name pos:start="781:23" pos:end="781:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="781:36" pos:end="781:54"><expr pos:start="781:36" pos:end="781:54"><literal type="string" pos:start="781:36" pos:end="781:54">"BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="783:9" pos:end="785:55">else if <condition pos:start="783:17" pos:end="783:37">(<expr pos:start="783:18" pos:end="783:36"><name pos:start="783:18" pos:end="783:22">flags</name> <operator pos:start="783:24" pos:end="783:24">&amp;</operator> <name pos:start="783:26" pos:end="783:36">SWS_BICUBIC</name></expr>)</condition><block type="pseudo" pos:start="785:13" pos:end="785:55"><block_content pos:start="785:13" pos:end="785:55">

            <expr_stmt pos:start="785:13" pos:end="785:55"><expr pos:start="785:13" pos:end="785:54"><call pos:start="785:13" pos:end="785:54"><name pos:start="785:13" pos:end="785:18">av_log</name><argument_list pos:start="785:19" pos:end="785:54">(<argument pos:start="785:20" pos:end="785:20"><expr pos:start="785:20" pos:end="785:20"><name pos:start="785:20" pos:end="785:20">c</name></expr></argument>, <argument pos:start="785:23" pos:end="785:33"><expr pos:start="785:23" pos:end="785:33"><name pos:start="785:23" pos:end="785:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="785:36" pos:end="785:53"><expr pos:start="785:36" pos:end="785:53"><literal type="string" pos:start="785:36" pos:end="785:53">"BICUBIC scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="787:9" pos:end="789:60">else if <condition pos:start="787:17" pos:end="787:31">(<expr pos:start="787:18" pos:end="787:30"><name pos:start="787:18" pos:end="787:22">flags</name> <operator pos:start="787:24" pos:end="787:24">&amp;</operator> <name pos:start="787:26" pos:end="787:30">SWS_X</name></expr>)</condition><block type="pseudo" pos:start="789:13" pos:end="789:60"><block_content pos:start="789:13" pos:end="789:60">

            <expr_stmt pos:start="789:13" pos:end="789:60"><expr pos:start="789:13" pos:end="789:59"><call pos:start="789:13" pos:end="789:59"><name pos:start="789:13" pos:end="789:18">av_log</name><argument_list pos:start="789:19" pos:end="789:59">(<argument pos:start="789:20" pos:end="789:20"><expr pos:start="789:20" pos:end="789:20"><name pos:start="789:20" pos:end="789:20">c</name></expr></argument>, <argument pos:start="789:23" pos:end="789:33"><expr pos:start="789:23" pos:end="789:33"><name pos:start="789:23" pos:end="789:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="789:36" pos:end="789:58"><expr pos:start="789:36" pos:end="789:58"><literal type="string" pos:start="789:36" pos:end="789:58">"Experimental scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="791:9" pos:end="793:72">else if <condition pos:start="791:17" pos:end="791:35">(<expr pos:start="791:18" pos:end="791:34"><name pos:start="791:18" pos:end="791:22">flags</name> <operator pos:start="791:24" pos:end="791:24">&amp;</operator> <name pos:start="791:26" pos:end="791:34">SWS_POINT</name></expr>)</condition><block type="pseudo" pos:start="793:13" pos:end="793:72"><block_content pos:start="793:13" pos:end="793:72">

            <expr_stmt pos:start="793:13" pos:end="793:72"><expr pos:start="793:13" pos:end="793:71"><call pos:start="793:13" pos:end="793:71"><name pos:start="793:13" pos:end="793:18">av_log</name><argument_list pos:start="793:19" pos:end="793:71">(<argument pos:start="793:20" pos:end="793:20"><expr pos:start="793:20" pos:end="793:20"><name pos:start="793:20" pos:end="793:20">c</name></expr></argument>, <argument pos:start="793:23" pos:end="793:33"><expr pos:start="793:23" pos:end="793:33"><name pos:start="793:23" pos:end="793:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="793:36" pos:end="793:70"><expr pos:start="793:36" pos:end="793:70"><literal type="string" pos:start="793:36" pos:end="793:70">"Nearest Neighbor / POINT scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="795:9" pos:end="797:62">else if <condition pos:start="795:17" pos:end="795:34">(<expr pos:start="795:18" pos:end="795:33"><name pos:start="795:18" pos:end="795:22">flags</name> <operator pos:start="795:24" pos:end="795:24">&amp;</operator> <name pos:start="795:26" pos:end="795:33">SWS_AREA</name></expr>)</condition><block type="pseudo" pos:start="797:13" pos:end="797:62"><block_content pos:start="797:13" pos:end="797:62">

            <expr_stmt pos:start="797:13" pos:end="797:62"><expr pos:start="797:13" pos:end="797:61"><call pos:start="797:13" pos:end="797:61"><name pos:start="797:13" pos:end="797:18">av_log</name><argument_list pos:start="797:19" pos:end="797:61">(<argument pos:start="797:20" pos:end="797:20"><expr pos:start="797:20" pos:end="797:20"><name pos:start="797:20" pos:end="797:20">c</name></expr></argument>, <argument pos:start="797:23" pos:end="797:33"><expr pos:start="797:23" pos:end="797:33"><name pos:start="797:23" pos:end="797:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="797:36" pos:end="797:60"><expr pos:start="797:36" pos:end="797:60"><literal type="string" pos:start="797:36" pos:end="797:60">"Area Averaging scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="799:9" pos:end="801:78">else if <condition pos:start="799:17" pos:end="799:38">(<expr pos:start="799:18" pos:end="799:37"><name pos:start="799:18" pos:end="799:22">flags</name> <operator pos:start="799:24" pos:end="799:24">&amp;</operator> <name pos:start="799:26" pos:end="799:37">SWS_BICUBLIN</name></expr>)</condition><block type="pseudo" pos:start="801:13" pos:end="801:78"><block_content pos:start="801:13" pos:end="801:78">

            <expr_stmt pos:start="801:13" pos:end="801:78"><expr pos:start="801:13" pos:end="801:77"><call pos:start="801:13" pos:end="801:77"><name pos:start="801:13" pos:end="801:18">av_log</name><argument_list pos:start="801:19" pos:end="801:77">(<argument pos:start="801:20" pos:end="801:20"><expr pos:start="801:20" pos:end="801:20"><name pos:start="801:20" pos:end="801:20">c</name></expr></argument>, <argument pos:start="801:23" pos:end="801:33"><expr pos:start="801:23" pos:end="801:33"><name pos:start="801:23" pos:end="801:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="801:36" pos:end="801:76"><expr pos:start="801:36" pos:end="801:76"><literal type="string" pos:start="801:36" pos:end="801:76">"luma BICUBIC / chroma BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="803:9" pos:end="805:56">else if <condition pos:start="803:17" pos:end="803:35">(<expr pos:start="803:18" pos:end="803:34"><name pos:start="803:18" pos:end="803:22">flags</name> <operator pos:start="803:24" pos:end="803:24">&amp;</operator> <name pos:start="803:26" pos:end="803:34">SWS_GAUSS</name></expr>)</condition><block type="pseudo" pos:start="805:13" pos:end="805:56"><block_content pos:start="805:13" pos:end="805:56">

            <expr_stmt pos:start="805:13" pos:end="805:56"><expr pos:start="805:13" pos:end="805:55"><call pos:start="805:13" pos:end="805:55"><name pos:start="805:13" pos:end="805:18">av_log</name><argument_list pos:start="805:19" pos:end="805:55">(<argument pos:start="805:20" pos:end="805:20"><expr pos:start="805:20" pos:end="805:20"><name pos:start="805:20" pos:end="805:20">c</name></expr></argument>, <argument pos:start="805:23" pos:end="805:33"><expr pos:start="805:23" pos:end="805:33"><name pos:start="805:23" pos:end="805:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="805:36" pos:end="805:54"><expr pos:start="805:36" pos:end="805:54"><literal type="string" pos:start="805:36" pos:end="805:54">"Gaussian scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="807:9" pos:end="809:52">else if <condition pos:start="807:17" pos:end="807:34">(<expr pos:start="807:18" pos:end="807:33"><name pos:start="807:18" pos:end="807:22">flags</name> <operator pos:start="807:24" pos:end="807:24">&amp;</operator> <name pos:start="807:26" pos:end="807:33">SWS_SINC</name></expr>)</condition><block type="pseudo" pos:start="809:13" pos:end="809:52"><block_content pos:start="809:13" pos:end="809:52">

            <expr_stmt pos:start="809:13" pos:end="809:52"><expr pos:start="809:13" pos:end="809:51"><call pos:start="809:13" pos:end="809:51"><name pos:start="809:13" pos:end="809:18">av_log</name><argument_list pos:start="809:19" pos:end="809:51">(<argument pos:start="809:20" pos:end="809:20"><expr pos:start="809:20" pos:end="809:20"><name pos:start="809:20" pos:end="809:20">c</name></expr></argument>, <argument pos:start="809:23" pos:end="809:33"><expr pos:start="809:23" pos:end="809:33"><name pos:start="809:23" pos:end="809:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="809:36" pos:end="809:50"><expr pos:start="809:36" pos:end="809:50"><literal type="string" pos:start="809:36" pos:end="809:50">"Sinc scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="811:9" pos:end="813:55">else if <condition pos:start="811:17" pos:end="811:37">(<expr pos:start="811:18" pos:end="811:36"><name pos:start="811:18" pos:end="811:22">flags</name> <operator pos:start="811:24" pos:end="811:24">&amp;</operator> <name pos:start="811:26" pos:end="811:36">SWS_LANCZOS</name></expr>)</condition><block type="pseudo" pos:start="813:13" pos:end="813:55"><block_content pos:start="813:13" pos:end="813:55">

            <expr_stmt pos:start="813:13" pos:end="813:55"><expr pos:start="813:13" pos:end="813:54"><call pos:start="813:13" pos:end="813:54"><name pos:start="813:13" pos:end="813:18">av_log</name><argument_list pos:start="813:19" pos:end="813:54">(<argument pos:start="813:20" pos:end="813:20"><expr pos:start="813:20" pos:end="813:20"><name pos:start="813:20" pos:end="813:20">c</name></expr></argument>, <argument pos:start="813:23" pos:end="813:33"><expr pos:start="813:23" pos:end="813:33"><name pos:start="813:23" pos:end="813:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="813:36" pos:end="813:53"><expr pos:start="813:36" pos:end="813:53"><literal type="string" pos:start="813:36" pos:end="813:53">"Lanczos scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="815:9" pos:end="817:62">else if <condition pos:start="815:17" pos:end="815:36">(<expr pos:start="815:18" pos:end="815:35"><name pos:start="815:18" pos:end="815:22">flags</name> <operator pos:start="815:24" pos:end="815:24">&amp;</operator> <name pos:start="815:26" pos:end="815:35">SWS_SPLINE</name></expr>)</condition><block type="pseudo" pos:start="817:13" pos:end="817:62"><block_content pos:start="817:13" pos:end="817:62">

            <expr_stmt pos:start="817:13" pos:end="817:62"><expr pos:start="817:13" pos:end="817:61"><call pos:start="817:13" pos:end="817:61"><name pos:start="817:13" pos:end="817:18">av_log</name><argument_list pos:start="817:19" pos:end="817:61">(<argument pos:start="817:20" pos:end="817:20"><expr pos:start="817:20" pos:end="817:20"><name pos:start="817:20" pos:end="817:20">c</name></expr></argument>, <argument pos:start="817:23" pos:end="817:33"><expr pos:start="817:23" pos:end="817:33"><name pos:start="817:23" pos:end="817:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="817:36" pos:end="817:60"><expr pos:start="817:36" pos:end="817:60"><literal type="string" pos:start="817:36" pos:end="817:60">"Bicubic spline scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="819:9" pos:end="821:59">else<block type="pseudo" pos:start="821:13" pos:end="821:59"><block_content pos:start="821:13" pos:end="821:59">

            <expr_stmt pos:start="821:13" pos:end="821:59"><expr pos:start="821:13" pos:end="821:58"><call pos:start="821:13" pos:end="821:58"><name pos:start="821:13" pos:end="821:18">av_log</name><argument_list pos:start="821:19" pos:end="821:58">(<argument pos:start="821:20" pos:end="821:20"><expr pos:start="821:20" pos:end="821:20"><name pos:start="821:20" pos:end="821:20">c</name></expr></argument>, <argument pos:start="821:23" pos:end="821:33"><expr pos:start="821:23" pos:end="821:33"><name pos:start="821:23" pos:end="821:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="821:36" pos:end="821:57"><expr pos:start="821:36" pos:end="821:57"><literal type="string" pos:start="821:36" pos:end="821:57">"ehh flags invalid?! "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="825:9" pos:end="845:43"><expr pos:start="825:9" pos:end="845:42"><call pos:start="825:9" pos:end="845:42"><name pos:start="825:9" pos:end="825:14">av_log</name><argument_list pos:start="825:15" pos:end="845:42">(<argument pos:start="825:16" pos:end="825:16"><expr pos:start="825:16" pos:end="825:16"><name pos:start="825:16" pos:end="825:16">c</name></expr></argument>, <argument pos:start="825:19" pos:end="825:29"><expr pos:start="825:19" pos:end="825:29"><name pos:start="825:19" pos:end="825:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="825:32" pos:end="825:49"><expr pos:start="825:32" pos:end="825:49"><literal type="string" pos:start="825:32" pos:end="825:49">"from %s to %s%s "</literal></expr></argument>,

               <argument pos:start="827:16" pos:end="827:41"><expr pos:start="827:16" pos:end="827:41"><call pos:start="827:16" pos:end="827:41"><name pos:start="827:16" pos:end="827:30">sws_format_name</name><argument_list pos:start="827:31" pos:end="827:41">(<argument pos:start="827:32" pos:end="827:40"><expr pos:start="827:32" pos:end="827:40"><name pos:start="827:32" pos:end="827:40">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>,

<cpp:ifdef pos:start="829:1" pos:end="829:18">#<cpp:directive pos:start="829:2" pos:end="829:6">ifdef</cpp:directive> <name pos:start="829:8" pos:end="829:18">DITHER1XBPP</name></cpp:ifdef>

               <argument pos:start="831:16" pos:end="837:77"><expr pos:start="831:16" pos:end="837:77"><ternary pos:start="831:16" pos:end="837:77"><condition pos:start="831:16" pos:end="835:85"><expr pos:start="831:16" pos:end="835:83"><name pos:start="831:16" pos:end="831:24">dstFormat</name> <operator pos:start="831:26" pos:end="831:27">==</operator> <name pos:start="831:29" pos:end="831:45">AV_PIX_FMT_BGR555</name>   <operator pos:start="831:49" pos:end="831:50">||</operator> <name pos:start="831:52" pos:end="831:60">dstFormat</name> <operator pos:start="831:62" pos:end="831:63">==</operator> <name pos:start="831:65" pos:end="831:81">AV_PIX_FMT_BGR565</name>   <operator pos:start="831:85" pos:end="831:86">||</operator>

               <name pos:start="833:16" pos:end="833:24">dstFormat</name> <operator pos:start="833:26" pos:end="833:27">==</operator> <name pos:start="833:29" pos:end="833:47">AV_PIX_FMT_RGB444BE</name> <operator pos:start="833:49" pos:end="833:50">||</operator> <name pos:start="833:52" pos:end="833:60">dstFormat</name> <operator pos:start="833:62" pos:end="833:63">==</operator> <name pos:start="833:65" pos:end="833:83">AV_PIX_FMT_RGB444LE</name> <operator pos:start="833:85" pos:end="833:86">||</operator>

               <name pos:start="835:16" pos:end="835:24">dstFormat</name> <operator pos:start="835:26" pos:end="835:27">==</operator> <name pos:start="835:29" pos:end="835:47">AV_PIX_FMT_BGR444BE</name> <operator pos:start="835:49" pos:end="835:50">||</operator> <name pos:start="835:52" pos:end="835:60">dstFormat</name> <operator pos:start="835:62" pos:end="835:63">==</operator> <name pos:start="835:65" pos:end="835:83">AV_PIX_FMT_BGR444LE</name></expr> ?</condition><then pos:start="837:62" pos:end="837:72">

                                                             <expr pos:start="837:62" pos:end="837:72"><literal type="string" pos:start="837:62" pos:end="837:72">"dithered "</literal></expr> </then><else pos:start="837:74" pos:end="837:77">: <expr pos:start="837:76" pos:end="837:77"><literal type="string" pos:start="837:76" pos:end="837:77">""</literal></expr></else></ternary></expr></argument>,

<cpp:else pos:start="839:1" pos:end="839:5">#<cpp:directive pos:start="839:2" pos:end="839:5">else</cpp:directive></cpp:else>

               <argument pos:start="841:16" pos:end="841:17"><expr pos:start="841:16" pos:end="841:17"><literal type="string" pos:start="841:16" pos:end="841:17">""</literal></expr></argument>,

<cpp:endif pos:start="843:1" pos:end="843:6">#<cpp:directive pos:start="843:2" pos:end="843:6">endif</cpp:directive></cpp:endif>

               <argument pos:start="845:16" pos:end="845:41"><expr pos:start="845:16" pos:end="845:41"><call pos:start="845:16" pos:end="845:41"><name pos:start="845:16" pos:end="845:30">sws_format_name</name><argument_list pos:start="845:31" pos:end="845:41">(<argument pos:start="845:32" pos:end="845:40"><expr pos:start="845:32" pos:end="845:40"><name pos:start="845:32" pos:end="845:40">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="849:9" pos:end="867:48"><if pos:start="849:9" pos:end="851:53">if <condition pos:start="849:12" pos:end="849:37">(<expr pos:start="849:13" pos:end="849:36"><call pos:start="849:13" pos:end="849:36"><name pos:start="849:13" pos:end="849:25">INLINE_MMXEXT</name><argument_list pos:start="849:26" pos:end="849:36">(<argument pos:start="849:27" pos:end="849:35"><expr pos:start="849:27" pos:end="849:35"><name pos:start="849:27" pos:end="849:35">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="851:13" pos:end="851:53"><block_content pos:start="851:13" pos:end="851:53">

            <expr_stmt pos:start="851:13" pos:end="851:53"><expr pos:start="851:13" pos:end="851:52"><call pos:start="851:13" pos:end="851:52"><name pos:start="851:13" pos:end="851:18">av_log</name><argument_list pos:start="851:19" pos:end="851:52">(<argument pos:start="851:20" pos:end="851:20"><expr pos:start="851:20" pos:end="851:20"><name pos:start="851:20" pos:end="851:20">c</name></expr></argument>, <argument pos:start="851:23" pos:end="851:33"><expr pos:start="851:23" pos:end="851:33"><name pos:start="851:23" pos:end="851:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="851:36" pos:end="851:51"><expr pos:start="851:36" pos:end="851:51"><literal type="string" pos:start="851:36" pos:end="851:51">"using MMXEXT\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="853:9" pos:end="855:52">else if <condition pos:start="853:17" pos:end="853:44">(<expr pos:start="853:18" pos:end="853:43"><call pos:start="853:18" pos:end="853:43"><name pos:start="853:18" pos:end="853:32">INLINE_AMD3DNOW</name><argument_list pos:start="853:33" pos:end="853:43">(<argument pos:start="853:34" pos:end="853:42"><expr pos:start="853:34" pos:end="853:42"><name pos:start="853:34" pos:end="853:42">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="855:13" pos:end="855:52"><block_content pos:start="855:13" pos:end="855:52">

            <expr_stmt pos:start="855:13" pos:end="855:52"><expr pos:start="855:13" pos:end="855:51"><call pos:start="855:13" pos:end="855:51"><name pos:start="855:13" pos:end="855:18">av_log</name><argument_list pos:start="855:19" pos:end="855:51">(<argument pos:start="855:20" pos:end="855:20"><expr pos:start="855:20" pos:end="855:20"><name pos:start="855:20" pos:end="855:20">c</name></expr></argument>, <argument pos:start="855:23" pos:end="855:33"><expr pos:start="855:23" pos:end="855:33"><name pos:start="855:23" pos:end="855:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="855:36" pos:end="855:50"><expr pos:start="855:36" pos:end="855:50"><literal type="string" pos:start="855:36" pos:end="855:50">"using 3DNOW\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="857:9" pos:end="859:50">else if <condition pos:start="857:17" pos:end="857:39">(<expr pos:start="857:18" pos:end="857:38"><call pos:start="857:18" pos:end="857:38"><name pos:start="857:18" pos:end="857:27">INLINE_MMX</name><argument_list pos:start="857:28" pos:end="857:38">(<argument pos:start="857:29" pos:end="857:37"><expr pos:start="857:29" pos:end="857:37"><name pos:start="857:29" pos:end="857:37">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="859:13" pos:end="859:50"><block_content pos:start="859:13" pos:end="859:50">

            <expr_stmt pos:start="859:13" pos:end="859:50"><expr pos:start="859:13" pos:end="859:49"><call pos:start="859:13" pos:end="859:49"><name pos:start="859:13" pos:end="859:18">av_log</name><argument_list pos:start="859:19" pos:end="859:49">(<argument pos:start="859:20" pos:end="859:20"><expr pos:start="859:20" pos:end="859:20"><name pos:start="859:20" pos:end="859:20">c</name></expr></argument>, <argument pos:start="859:23" pos:end="859:33"><expr pos:start="859:23" pos:end="859:33"><name pos:start="859:23" pos:end="859:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="859:36" pos:end="859:48"><expr pos:start="859:36" pos:end="859:48"><literal type="string" pos:start="859:36" pos:end="859:48">"using MMX\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="861:9" pos:end="863:54">else if <condition pos:start="861:17" pos:end="861:40">(<expr pos:start="861:18" pos:end="861:39"><call pos:start="861:18" pos:end="861:39"><name pos:start="861:18" pos:end="861:28">PPC_ALTIVEC</name><argument_list pos:start="861:29" pos:end="861:39">(<argument pos:start="861:30" pos:end="861:38"><expr pos:start="861:30" pos:end="861:38"><name pos:start="861:30" pos:end="861:38">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="863:13" pos:end="863:54"><block_content pos:start="863:13" pos:end="863:54">

            <expr_stmt pos:start="863:13" pos:end="863:54"><expr pos:start="863:13" pos:end="863:53"><call pos:start="863:13" pos:end="863:53"><name pos:start="863:13" pos:end="863:18">av_log</name><argument_list pos:start="863:19" pos:end="863:53">(<argument pos:start="863:20" pos:end="863:20"><expr pos:start="863:20" pos:end="863:20"><name pos:start="863:20" pos:end="863:20">c</name></expr></argument>, <argument pos:start="863:23" pos:end="863:33"><expr pos:start="863:23" pos:end="863:33"><name pos:start="863:23" pos:end="863:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="863:36" pos:end="863:52"><expr pos:start="863:36" pos:end="863:52"><literal type="string" pos:start="863:36" pos:end="863:52">"using AltiVec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="865:9" pos:end="867:48">else<block type="pseudo" pos:start="867:13" pos:end="867:48"><block_content pos:start="867:13" pos:end="867:48">

            <expr_stmt pos:start="867:13" pos:end="867:48"><expr pos:start="867:13" pos:end="867:47"><call pos:start="867:13" pos:end="867:47"><name pos:start="867:13" pos:end="867:18">av_log</name><argument_list pos:start="867:19" pos:end="867:47">(<argument pos:start="867:20" pos:end="867:20"><expr pos:start="867:20" pos:end="867:20"><name pos:start="867:20" pos:end="867:20">c</name></expr></argument>, <argument pos:start="867:23" pos:end="867:33"><expr pos:start="867:23" pos:end="867:33"><name pos:start="867:23" pos:end="867:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="867:36" pos:end="867:46"><expr pos:start="867:36" pos:end="867:46"><literal type="string" pos:start="867:36" pos:end="867:46">"using C\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="871:9" pos:end="871:78"><expr pos:start="871:9" pos:end="871:77"><call pos:start="871:9" pos:end="871:77"><name pos:start="871:9" pos:end="871:14">av_log</name><argument_list pos:start="871:15" pos:end="871:77">(<argument pos:start="871:16" pos:end="871:16"><expr pos:start="871:16" pos:end="871:16"><name pos:start="871:16" pos:end="871:16">c</name></expr></argument>, <argument pos:start="871:19" pos:end="871:32"><expr pos:start="871:19" pos:end="871:32"><name pos:start="871:19" pos:end="871:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="871:35" pos:end="871:52"><expr pos:start="871:35" pos:end="871:52"><literal type="string" pos:start="871:35" pos:end="871:52">"%dx%d -&gt; %dx%d\n"</literal></expr></argument>, <argument pos:start="871:55" pos:end="871:58"><expr pos:start="871:55" pos:end="871:58"><name pos:start="871:55" pos:end="871:58">srcW</name></expr></argument>, <argument pos:start="871:61" pos:end="871:64"><expr pos:start="871:61" pos:end="871:64"><name pos:start="871:61" pos:end="871:64">srcH</name></expr></argument>, <argument pos:start="871:67" pos:end="871:70"><expr pos:start="871:67" pos:end="871:70"><name pos:start="871:67" pos:end="871:70">dstW</name></expr></argument>, <argument pos:start="871:73" pos:end="871:76"><expr pos:start="871:73" pos:end="871:76"><name pos:start="871:73" pos:end="871:76">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="873:9" pos:end="877:75"><expr pos:start="873:9" pos:end="877:74"><call pos:start="873:9" pos:end="877:74"><name pos:start="873:9" pos:end="873:14">av_log</name><argument_list pos:start="873:15" pos:end="877:74">(<argument pos:start="873:16" pos:end="873:16"><expr pos:start="873:16" pos:end="873:16"><name pos:start="873:16" pos:end="873:16">c</name></expr></argument>, <argument pos:start="873:19" pos:end="873:30"><expr pos:start="873:19" pos:end="873:30"><name pos:start="873:19" pos:end="873:30">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="875:16" pos:end="875:70"><expr pos:start="875:16" pos:end="875:70"><literal type="string" pos:start="875:16" pos:end="875:70">"lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n"</literal></expr></argument>,

               <argument pos:start="877:16" pos:end="877:22"><expr pos:start="877:16" pos:end="877:22"><name pos:start="877:16" pos:end="877:22"><name pos:start="877:16" pos:end="877:16">c</name><operator pos:start="877:17" pos:end="877:18">-&gt;</operator><name pos:start="877:19" pos:end="877:22">srcW</name></name></expr></argument>, <argument pos:start="877:25" pos:end="877:31"><expr pos:start="877:25" pos:end="877:31"><name pos:start="877:25" pos:end="877:31"><name pos:start="877:25" pos:end="877:25">c</name><operator pos:start="877:26" pos:end="877:27">-&gt;</operator><name pos:start="877:28" pos:end="877:31">srcH</name></name></expr></argument>, <argument pos:start="877:34" pos:end="877:40"><expr pos:start="877:34" pos:end="877:40"><name pos:start="877:34" pos:end="877:40"><name pos:start="877:34" pos:end="877:34">c</name><operator pos:start="877:35" pos:end="877:36">-&gt;</operator><name pos:start="877:37" pos:end="877:40">dstW</name></name></expr></argument>, <argument pos:start="877:43" pos:end="877:49"><expr pos:start="877:43" pos:end="877:49"><name pos:start="877:43" pos:end="877:49"><name pos:start="877:43" pos:end="877:43">c</name><operator pos:start="877:44" pos:end="877:45">-&gt;</operator><name pos:start="877:46" pos:end="877:49">dstH</name></name></expr></argument>, <argument pos:start="877:52" pos:end="877:61"><expr pos:start="877:52" pos:end="877:61"><name pos:start="877:52" pos:end="877:61"><name pos:start="877:52" pos:end="877:52">c</name><operator pos:start="877:53" pos:end="877:54">-&gt;</operator><name pos:start="877:55" pos:end="877:61">lumXInc</name></name></expr></argument>, <argument pos:start="877:64" pos:end="877:73"><expr pos:start="877:64" pos:end="877:73"><name pos:start="877:64" pos:end="877:73"><name pos:start="877:64" pos:end="877:64">c</name><operator pos:start="877:65" pos:end="877:66">-&gt;</operator><name pos:start="877:67" pos:end="877:73">lumYInc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="879:9" pos:end="885:39"><expr pos:start="879:9" pos:end="885:38"><call pos:start="879:9" pos:end="885:38"><name pos:start="879:9" pos:end="879:14">av_log</name><argument_list pos:start="879:15" pos:end="885:38">(<argument pos:start="879:16" pos:end="879:16"><expr pos:start="879:16" pos:end="879:16"><name pos:start="879:16" pos:end="879:16">c</name></expr></argument>, <argument pos:start="879:19" pos:end="879:30"><expr pos:start="879:19" pos:end="879:30"><name pos:start="879:19" pos:end="879:30">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="881:16" pos:end="881:70"><expr pos:start="881:16" pos:end="881:70"><literal type="string" pos:start="881:16" pos:end="881:70">"chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n"</literal></expr></argument>,

               <argument pos:start="883:16" pos:end="883:25"><expr pos:start="883:16" pos:end="883:25"><name pos:start="883:16" pos:end="883:25"><name pos:start="883:16" pos:end="883:16">c</name><operator pos:start="883:17" pos:end="883:18">-&gt;</operator><name pos:start="883:19" pos:end="883:25">chrSrcW</name></name></expr></argument>, <argument pos:start="883:28" pos:end="883:37"><expr pos:start="883:28" pos:end="883:37"><name pos:start="883:28" pos:end="883:37"><name pos:start="883:28" pos:end="883:28">c</name><operator pos:start="883:29" pos:end="883:30">-&gt;</operator><name pos:start="883:31" pos:end="883:37">chrSrcH</name></name></expr></argument>, <argument pos:start="883:40" pos:end="883:49"><expr pos:start="883:40" pos:end="883:49"><name pos:start="883:40" pos:end="883:49"><name pos:start="883:40" pos:end="883:40">c</name><operator pos:start="883:41" pos:end="883:42">-&gt;</operator><name pos:start="883:43" pos:end="883:49">chrDstW</name></name></expr></argument>, <argument pos:start="883:52" pos:end="883:61"><expr pos:start="883:52" pos:end="883:61"><name pos:start="883:52" pos:end="883:61"><name pos:start="883:52" pos:end="883:52">c</name><operator pos:start="883:53" pos:end="883:54">-&gt;</operator><name pos:start="883:55" pos:end="883:61">chrDstH</name></name></expr></argument>,

               <argument pos:start="885:16" pos:end="885:25"><expr pos:start="885:16" pos:end="885:25"><name pos:start="885:16" pos:end="885:25"><name pos:start="885:16" pos:end="885:16">c</name><operator pos:start="885:17" pos:end="885:18">-&gt;</operator><name pos:start="885:19" pos:end="885:25">chrXInc</name></name></expr></argument>, <argument pos:start="885:28" pos:end="885:37"><expr pos:start="885:28" pos:end="885:37"><name pos:start="885:28" pos:end="885:37"><name pos:start="885:28" pos:end="885:28">c</name><operator pos:start="885:29" pos:end="885:30">-&gt;</operator><name pos:start="885:31" pos:end="885:37">chrYInc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="891:5" pos:end="891:34"><expr pos:start="891:5" pos:end="891:33"><name pos:start="891:5" pos:end="891:14"><name pos:start="891:5" pos:end="891:5">c</name><operator pos:start="891:6" pos:end="891:7">-&gt;</operator><name pos:start="891:8" pos:end="891:14">swscale</name></name> <operator pos:start="891:16" pos:end="891:16">=</operator> <call pos:start="891:18" pos:end="891:33"><name pos:start="891:18" pos:end="891:30">ff_getSwsFunc</name><argument_list pos:start="891:31" pos:end="891:33">(<argument pos:start="891:32" pos:end="891:32"><expr pos:start="891:32" pos:end="891:32"><name pos:start="891:32" pos:end="891:32">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="893:5" pos:end="893:13">return <expr pos:start="893:12" pos:end="893:12"><literal type="number" pos:start="893:12" pos:end="893:12">0</literal></expr>;</return>

<label pos:start="895:1" pos:end="895:5"><name pos:start="895:1" pos:end="895:4">fail</name>:</label> <comment type="line" pos:start="895:7" pos:end="895:56">// FIXME replace things by appropriate error codes</comment>

    <return pos:start="897:5" pos:end="897:14">return <expr pos:start="897:12" pos:end="897:13"><operator pos:start="897:12" pos:end="897:12">-</operator><literal type="number" pos:start="897:13" pos:end="897:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
