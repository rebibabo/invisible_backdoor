<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13731.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vmd_read_packet</name><parameter_list pos:start="1:27" pos:end="3:41">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:35">AVPacket</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:15">

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">VmdDemuxContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">vmd</name> <init pos:start="7:26" pos:end="7:58">= <expr pos:start="7:28" pos:end="7:58"><operator pos:start="7:28" pos:end="7:28">(</operator><name pos:start="7:29" pos:end="7:43">VmdDemuxContext</name> <operator pos:start="7:45" pos:end="7:45">*</operator><operator pos:start="7:46" pos:end="7:46">)</operator><name pos:start="7:47" pos:end="7:58"><name pos:start="7:47" pos:end="7:47">s</name><operator pos:start="7:48" pos:end="7:49">-&gt;</operator><name pos:start="7:50" pos:end="7:58">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:30">= <expr pos:start="9:25" pos:end="9:30"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">vmd_frame_t</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:22">frame</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:20"><if pos:start="17:5" pos:end="19:20">if <condition pos:start="17:8" pos:end="17:47">(<expr pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:11">vmd</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:26">current_frame</name></name> <operator pos:start="17:28" pos:end="17:29">&gt;=</operator> <name pos:start="17:31" pos:end="17:46"><name pos:start="17:31" pos:end="17:33">vmd</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:46">frame_count</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:20"><block_content pos:start="19:9" pos:end="19:20">

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:19">EIO</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:50"><expr pos:start="23:5" pos:end="23:49"><name pos:start="23:5" pos:end="23:9">frame</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <operator pos:start="23:13" pos:end="23:13">&amp;</operator><name pos:start="23:14" pos:end="23:49"><name pos:start="23:14" pos:end="23:16">vmd</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:29">frame_table</name><index pos:start="23:30" pos:end="23:49">[<expr pos:start="23:31" pos:end="23:48"><name pos:start="23:31" pos:end="23:48"><name pos:start="23:31" pos:end="23:33">vmd</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:48">current_frame</name></name></expr>]</index></name></expr>;</expr_stmt>

    <comment type="block" pos:start="25:5" pos:end="25:62">/* position the stream (will probably be there already) */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:49"><expr pos:start="27:5" pos:end="27:48"><call pos:start="27:5" pos:end="27:48"><name pos:start="27:5" pos:end="27:13">url_fseek</name><argument_list pos:start="27:14" pos:end="27:48">(<argument pos:start="27:15" pos:end="27:16"><expr pos:start="27:15" pos:end="27:16"><name pos:start="27:15" pos:end="27:16">pb</name></expr></argument>, <argument pos:start="27:19" pos:end="27:37"><expr pos:start="27:19" pos:end="27:37"><name pos:start="27:19" pos:end="27:37"><name pos:start="27:19" pos:end="27:23">frame</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:37">frame_offset</name></name></expr></argument>, <argument pos:start="27:40" pos:end="27:47"><expr pos:start="27:40" pos:end="27:47"><name pos:start="27:40" pos:end="27:47">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:29"><if pos:start="31:5" pos:end="33:29">if <condition pos:start="31:8" pos:end="31:71">(<expr pos:start="31:9" pos:end="31:70"><call pos:start="31:9" pos:end="31:70"><name pos:start="31:9" pos:end="31:21">av_new_packet</name><argument_list pos:start="31:22" pos:end="31:70">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">pkt</name></expr></argument>, <argument pos:start="31:28" pos:end="31:69"><expr pos:start="31:28" pos:end="31:69"><name pos:start="31:28" pos:end="31:44"><name pos:start="31:28" pos:end="31:32">frame</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:44">frame_size</name></name> <operator pos:start="31:46" pos:end="31:46">+</operator> <name pos:start="31:48" pos:end="31:69">BYTES_PER_FRAME_RECORD</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:29"><block_content pos:start="33:9" pos:end="33:29">

        <return pos:start="33:9" pos:end="33:29">return <expr pos:start="33:16" pos:end="33:28"><name pos:start="33:16" pos:end="33:28">AVERROR_NOMEM</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:67"><expr pos:start="35:5" pos:end="35:66"><call pos:start="35:5" pos:end="35:66"><name pos:start="35:5" pos:end="35:10">memcpy</name><argument_list pos:start="35:11" pos:end="35:66">(<argument pos:start="35:12" pos:end="35:20"><expr pos:start="35:12" pos:end="35:20"><name pos:start="35:12" pos:end="35:20"><name pos:start="35:12" pos:end="35:14">pkt</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:20">data</name></name></expr></argument>, <argument pos:start="35:23" pos:end="35:41"><expr pos:start="35:23" pos:end="35:41"><name pos:start="35:23" pos:end="35:41"><name pos:start="35:23" pos:end="35:27">frame</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:41">frame_record</name></name></expr></argument>, <argument pos:start="35:44" pos:end="35:65"><expr pos:start="35:44" pos:end="35:65"><name pos:start="35:44" pos:end="35:65">BYTES_PER_FRAME_RECORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="39:27"><expr pos:start="37:5" pos:end="39:26"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="39:26"><name pos:start="37:11" pos:end="37:20">get_buffer</name><argument_list pos:start="37:21" pos:end="39:26">(<argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><name pos:start="37:22" pos:end="37:23">pb</name></expr></argument>, <argument pos:start="37:26" pos:end="37:59"><expr pos:start="37:26" pos:end="37:59"><name pos:start="37:26" pos:end="37:34"><name pos:start="37:26" pos:end="37:28">pkt</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:34">data</name></name> <operator pos:start="37:36" pos:end="37:36">+</operator> <name pos:start="37:38" pos:end="37:59">BYTES_PER_FRAME_RECORD</name></expr></argument>, 

        <argument pos:start="39:9" pos:end="39:25"><expr pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:13">frame</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:25">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="45:19"><if pos:start="43:5" pos:end="45:19">if <condition pos:start="43:8" pos:end="43:33">(<expr pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:14">!=</operator> <name pos:start="43:16" pos:end="43:32"><name pos:start="43:16" pos:end="43:20">frame</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:32">frame_size</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:19"><block_content pos:start="45:9" pos:end="45:19">

        <expr_stmt pos:start="45:9" pos:end="45:19"><expr pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <operator pos:start="45:15" pos:end="45:15">-</operator><name pos:start="45:16" pos:end="45:18">EIO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:44"><expr pos:start="47:5" pos:end="47:43"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:7">pkt</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:21">stream_index</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:43"><name pos:start="47:25" pos:end="47:29">frame</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:43">stream_index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:7">pkt</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:12">pts</name></name> <operator pos:start="49:14" pos:end="49:14">=</operator> <name pos:start="49:16" pos:end="49:25"><name pos:start="49:16" pos:end="49:20">frame</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:25">pts</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:25"><expr pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:7">vmd</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:22">current_frame</name></name><operator pos:start="53:23" pos:end="53:24">++</operator></expr>;</expr_stmt>



    <return pos:start="57:5" pos:end="57:15">return <expr pos:start="57:12" pos:end="57:14"><name pos:start="57:12" pos:end="57:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
