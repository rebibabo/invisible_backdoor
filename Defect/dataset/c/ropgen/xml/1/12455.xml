<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12455.c" pos:tabs="8"><function pos:start="1:1" pos:end="48:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">ata_passthrough_16_xfer_size</name><parameter_list pos:start="1:40" pos:end="1:70">(<parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:50">SCSIDevice</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">dev</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">uint8_t</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="48:1">{<block_content pos:start="5:5" pos:end="46:23">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">extend</name> <init pos:start="5:16" pos:end="5:29">= <expr pos:start="5:18" pos:end="5:29"><name pos:start="5:18" pos:end="5:23"><name pos:start="5:18" pos:end="5:20">buf</name><index pos:start="5:21" pos:end="5:23">[<expr pos:start="5:22" pos:end="5:22"><literal type="number" pos:start="5:22" pos:end="5:22">1</literal></expr>]</index></name> <operator pos:start="5:25" pos:end="5:25">&amp;</operator> <literal type="number" pos:start="5:27" pos:end="5:29">0x1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">length</name> <init pos:start="7:16" pos:end="7:29">= <expr pos:start="7:18" pos:end="7:29"><name pos:start="7:18" pos:end="7:23"><name pos:start="7:18" pos:end="7:20">buf</name><index pos:start="7:21" pos:end="7:23">[<expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">2</literal></expr>]</index></name> <operator pos:start="7:25" pos:end="7:25">&amp;</operator> <literal type="number" pos:start="7:27" pos:end="7:29">0x3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">xfer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">unit</name> <init pos:start="11:14" pos:end="11:50">= <expr pos:start="11:16" pos:end="11:50"><call pos:start="11:16" pos:end="11:50"><name pos:start="11:16" pos:end="11:40">ata_passthrough_xfer_unit</name><argument_list pos:start="11:41" pos:end="11:50">(<argument pos:start="11:42" pos:end="11:44"><expr pos:start="11:42" pos:end="11:44"><name pos:start="11:42" pos:end="11:44">dev</name></expr></argument>, <argument pos:start="11:47" pos:end="11:49"><expr pos:start="11:47" pos:end="11:49"><name pos:start="11:47" pos:end="11:49">buf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <switch pos:start="15:5" pos:end="42:5">switch <condition pos:start="15:12" pos:end="15:19">(<expr pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:18">length</name></expr>)</condition> <block pos:start="15:21" pos:end="42:5">{<block_content pos:start="17:5" pos:end="40:14">

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">0</literal></expr>:</case>

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">3</literal></expr>:</case> <comment type="block" pos:start="19:13" pos:end="19:32">/* USB-specific.  */</comment>


        <expr_stmt pos:start="22:9" pos:end="22:17"><expr pos:start="22:9" pos:end="22:16"><name pos:start="22:9" pos:end="22:12">xfer</name> <operator pos:start="22:14" pos:end="22:14">=</operator> <literal type="number" pos:start="22:16" pos:end="22:16">0</literal></expr>;</expr_stmt>

        <break pos:start="24:9" pos:end="24:14">break;</break>

    <case pos:start="26:5" pos:end="26:11">case <expr pos:start="26:10" pos:end="26:10"><literal type="number" pos:start="26:10" pos:end="26:10">1</literal></expr>:</case>

        <expr_stmt pos:start="28:9" pos:end="28:22"><expr pos:start="28:9" pos:end="28:21"><name pos:start="28:9" pos:end="28:12">xfer</name> <operator pos:start="28:14" pos:end="28:14">=</operator> <name pos:start="28:16" pos:end="28:21"><name pos:start="28:16" pos:end="28:18">buf</name><index pos:start="28:19" pos:end="28:21">[<expr pos:start="28:20" pos:end="28:20"><literal type="number" pos:start="28:20" pos:end="28:20">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="30:9" pos:end="30:43"><expr pos:start="30:9" pos:end="30:42"><name pos:start="30:9" pos:end="30:12">xfer</name> <operator pos:start="30:14" pos:end="30:15">|=</operator> <operator pos:start="30:17" pos:end="30:17">(</operator><ternary pos:start="30:18" pos:end="30:41"><condition pos:start="30:18" pos:end="30:25"><expr pos:start="30:18" pos:end="30:23"><name pos:start="30:18" pos:end="30:23">extend</name></expr> ?</condition><then pos:start="30:27" pos:end="30:37"> <expr pos:start="30:27" pos:end="30:37"><name pos:start="30:27" pos:end="30:32"><name pos:start="30:27" pos:end="30:29">buf</name><index pos:start="30:30" pos:end="30:32">[<expr pos:start="30:31" pos:end="30:31"><literal type="number" pos:start="30:31" pos:end="30:31">3</literal></expr>]</index></name> <operator pos:start="30:34" pos:end="30:35">&lt;&lt;</operator> <literal type="number" pos:start="30:37" pos:end="30:37">8</literal></expr> </then><else pos:start="30:39" pos:end="30:41">: <expr pos:start="30:41" pos:end="30:41"><literal type="number" pos:start="30:41" pos:end="30:41">0</literal></expr></else></ternary><operator pos:start="30:42" pos:end="30:42">)</operator></expr>;</expr_stmt>

        <break pos:start="32:9" pos:end="32:14">break;</break>

    <case pos:start="34:5" pos:end="34:11">case <expr pos:start="34:10" pos:end="34:10"><literal type="number" pos:start="34:10" pos:end="34:10">2</literal></expr>:</case>

        <expr_stmt pos:start="36:9" pos:end="36:22"><expr pos:start="36:9" pos:end="36:21"><name pos:start="36:9" pos:end="36:12">xfer</name> <operator pos:start="36:14" pos:end="36:14">=</operator> <name pos:start="36:16" pos:end="36:21"><name pos:start="36:16" pos:end="36:18">buf</name><index pos:start="36:19" pos:end="36:21">[<expr pos:start="36:20" pos:end="36:20"><literal type="number" pos:start="36:20" pos:end="36:20">6</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="38:9" pos:end="38:43"><expr pos:start="38:9" pos:end="38:42"><name pos:start="38:9" pos:end="38:12">xfer</name> <operator pos:start="38:14" pos:end="38:15">|=</operator> <operator pos:start="38:17" pos:end="38:17">(</operator><ternary pos:start="38:18" pos:end="38:41"><condition pos:start="38:18" pos:end="38:25"><expr pos:start="38:18" pos:end="38:23"><name pos:start="38:18" pos:end="38:23">extend</name></expr> ?</condition><then pos:start="38:27" pos:end="38:37"> <expr pos:start="38:27" pos:end="38:37"><name pos:start="38:27" pos:end="38:32"><name pos:start="38:27" pos:end="38:29">buf</name><index pos:start="38:30" pos:end="38:32">[<expr pos:start="38:31" pos:end="38:31"><literal type="number" pos:start="38:31" pos:end="38:31">5</literal></expr>]</index></name> <operator pos:start="38:34" pos:end="38:35">&lt;&lt;</operator> <literal type="number" pos:start="38:37" pos:end="38:37">8</literal></expr> </then><else pos:start="38:39" pos:end="38:41">: <expr pos:start="38:41" pos:end="38:41"><literal type="number" pos:start="38:41" pos:end="38:41">0</literal></expr></else></ternary><operator pos:start="38:42" pos:end="38:42">)</operator></expr>;</expr_stmt>

        <break pos:start="40:9" pos:end="40:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="46:5" pos:end="46:23">return <expr pos:start="46:12" pos:end="46:22"><name pos:start="46:12" pos:end="46:15">xfer</name> <operator pos:start="46:17" pos:end="46:17">*</operator> <name pos:start="46:19" pos:end="46:22">unit</name></expr>;</return>

</block_content>}</block></function></unit>
