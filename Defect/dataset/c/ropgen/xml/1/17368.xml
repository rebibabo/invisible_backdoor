<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17368.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:45">protocol_client_auth_sasl_mechname</name><parameter_list pos:start="1:46" pos:end="1:86">(<parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:54">VncState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">vs</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:73"><decl pos:start="1:61" pos:end="1:73"><type pos:start="1:61" pos:end="1:73"><name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:73">data</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:85"><decl pos:start="1:76" pos:end="1:85"><type pos:start="1:76" pos:end="1:85"><name pos:start="1:76" pos:end="1:81">size_t</name></type> <name pos:start="1:83" pos:end="1:85">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:18">mechname</name> <init pos:start="5:20" pos:end="5:36">= <expr pos:start="5:22" pos:end="5:36"><call pos:start="5:22" pos:end="5:36"><name pos:start="5:22" pos:end="5:27">malloc</name><argument_list pos:start="5:28" pos:end="5:36">(<argument pos:start="5:29" pos:end="5:35"><expr pos:start="5:29" pos:end="5:35"><name pos:start="5:29" pos:end="5:31">len</name> <operator pos:start="5:33" pos:end="5:33">+</operator> <literal type="number" pos:start="5:35" pos:end="5:35">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="13:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="7:18">(<expr pos:start="7:9" pos:end="7:17"><operator pos:start="7:9" pos:end="7:9">!</operator><name pos:start="7:10" pos:end="7:17">mechname</name></expr>)</condition> <block pos:start="7:20" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:29">

        <expr_stmt pos:start="9:9" pos:end="9:54"><expr pos:start="9:9" pos:end="9:53"><call pos:start="9:9" pos:end="9:53"><name pos:start="9:9" pos:end="9:17">VNC_DEBUG</name><argument_list pos:start="9:18" pos:end="9:53">(<argument pos:start="9:19" pos:end="9:52"><expr pos:start="9:19" pos:end="9:52"><literal type="string" pos:start="9:19" pos:end="9:52">"Out of memory reading mechname\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:29"><expr pos:start="11:9" pos:end="11:28"><call pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:24">vnc_client_error</name><argument_list pos:start="11:25" pos:end="11:28">(<argument pos:start="11:26" pos:end="11:27"><expr pos:start="11:26" pos:end="11:27"><name pos:start="11:26" pos:end="11:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><call pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:11">strncpy</name><argument_list pos:start="15:12" pos:end="15:39">(<argument pos:start="15:13" pos:end="15:20"><expr pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:20">mechname</name></expr></argument>, <argument pos:start="15:23" pos:end="15:33"><expr pos:start="15:23" pos:end="15:33"><operator pos:start="15:23" pos:end="15:23">(</operator><name pos:start="15:24" pos:end="15:27">char</name><operator pos:start="15:28" pos:end="15:28">*</operator><operator pos:start="15:29" pos:end="15:29">)</operator><name pos:start="15:30" pos:end="15:33">data</name></expr></argument>, <argument pos:start="15:36" pos:end="15:38"><expr pos:start="15:36" pos:end="15:38"><name pos:start="15:36" pos:end="15:38">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:12">mechname</name><index pos:start="17:13" pos:end="17:17">[<expr pos:start="17:14" pos:end="17:16"><name pos:start="17:14" pos:end="17:16">len</name></expr>]</index></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="char" pos:start="17:21" pos:end="17:24">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="21:43"><expr pos:start="19:5" pos:end="21:42"><call pos:start="19:5" pos:end="21:42"><name pos:start="19:5" pos:end="19:13">VNC_DEBUG</name><argument_list pos:start="19:14" pos:end="21:42">(<argument pos:start="19:15" pos:end="19:61"><expr pos:start="19:15" pos:end="19:61"><literal type="string" pos:start="19:15" pos:end="19:61">"Got client mechname '%s' check against '%s'\n"</literal></expr></argument>,

              <argument pos:start="21:15" pos:end="21:22"><expr pos:start="21:15" pos:end="21:22"><name pos:start="21:15" pos:end="21:22">mechname</name></expr></argument>, <argument pos:start="21:25" pos:end="21:41"><expr pos:start="21:25" pos:end="21:41"><name pos:start="21:25" pos:end="21:41"><name pos:start="21:25" pos:end="21:26">vs</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:32">sasl</name><operator pos:start="21:33" pos:end="21:33">.</operator><name pos:start="21:34" pos:end="21:41">mechlist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="67:5"><if pos:start="25:5" pos:end="39:5">if <condition pos:start="25:8" pos:end="25:55">(<expr pos:start="25:9" pos:end="25:54"><call pos:start="25:9" pos:end="25:49"><name pos:start="25:9" pos:end="25:15">strncmp</name><argument_list pos:start="25:16" pos:end="25:49">(<argument pos:start="25:17" pos:end="25:33"><expr pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:18">vs</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:24">sasl</name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:33">mechlist</name></name></expr></argument>, <argument pos:start="25:36" pos:end="25:43"><expr pos:start="25:36" pos:end="25:43"><name pos:start="25:36" pos:end="25:43">mechname</name></expr></argument>, <argument pos:start="25:46" pos:end="25:48"><expr pos:start="25:46" pos:end="25:48"><name pos:start="25:46" pos:end="25:48">len</name></expr></argument>)</argument_list></call> <operator pos:start="25:51" pos:end="25:52">==</operator> <literal type="number" pos:start="25:54" pos:end="25:54">0</literal></expr>)</condition> <block pos:start="25:57" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:9">

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="29:42">(<expr pos:start="27:13" pos:end="29:41"><name pos:start="27:13" pos:end="27:34"><name pos:start="27:13" pos:end="27:14">vs</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:20">sasl</name><operator pos:start="27:21" pos:end="27:21">.</operator><name pos:start="27:22" pos:end="27:29">mechlist</name><index pos:start="27:30" pos:end="27:34">[<expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:33">len</name></expr>]</index></name> <operator pos:start="27:36" pos:end="27:37">!=</operator> <literal type="char" pos:start="27:39" pos:end="27:42">'\0'</literal> <operator pos:start="27:44" pos:end="27:45">&amp;&amp;</operator>

            <name pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:14">vs</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:20">sasl</name><operator pos:start="29:21" pos:end="29:21">.</operator><name pos:start="29:22" pos:end="29:29">mechlist</name><index pos:start="29:30" pos:end="29:34">[<expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:33">len</name></expr>]</index></name> <operator pos:start="29:36" pos:end="29:37">!=</operator> <literal type="char" pos:start="29:39" pos:end="29:41">','</literal></expr>)</condition> <block pos:start="29:44" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:22">

            <expr_stmt pos:start="31:13" pos:end="31:56"><expr pos:start="31:13" pos:end="31:55"><call pos:start="31:13" pos:end="31:55"><name pos:start="31:13" pos:end="31:21">VNC_DEBUG</name><argument_list pos:start="31:22" pos:end="31:55">(<argument pos:start="31:23" pos:end="31:30"><expr pos:start="31:23" pos:end="31:30"><literal type="string" pos:start="31:23" pos:end="31:30">"One %d"</literal></expr></argument>, <argument pos:start="31:33" pos:end="31:54"><expr pos:start="31:33" pos:end="31:54"><name pos:start="31:33" pos:end="31:54"><name pos:start="31:33" pos:end="31:34">vs</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:40">sasl</name><operator pos:start="31:41" pos:end="31:41">.</operator><name pos:start="31:42" pos:end="31:49">mechlist</name><index pos:start="31:50" pos:end="31:54">[<expr pos:start="31:51" pos:end="31:53"><name pos:start="31:51" pos:end="31:53">len</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:33"><expr pos:start="33:13" pos:end="33:32"><call pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:28">vnc_client_error</name><argument_list pos:start="33:29" pos:end="33:32">(<argument pos:start="33:30" pos:end="33:31"><expr pos:start="33:30" pos:end="33:31"><name pos:start="33:30" pos:end="33:31">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:22">return <expr pos:start="35:20" pos:end="35:21"><operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="67:5">else <block pos:start="39:12" pos:end="67:5">{<block_content pos:start="41:9" pos:end="65:9">

        <decl_stmt pos:start="41:9" pos:end="41:59"><decl pos:start="41:9" pos:end="41:58"><type pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:12">char</name> <modifier pos:start="41:14" pos:end="41:14">*</modifier></type><name pos:start="41:15" pos:end="41:20">offset</name> <init pos:start="41:22" pos:end="41:58">= <expr pos:start="41:24" pos:end="41:58"><call pos:start="41:24" pos:end="41:58"><name pos:start="41:24" pos:end="41:29">strstr</name><argument_list pos:start="41:30" pos:end="41:58">(<argument pos:start="41:31" pos:end="41:47"><expr pos:start="41:31" pos:end="41:47"><name pos:start="41:31" pos:end="41:47"><name pos:start="41:31" pos:end="41:32">vs</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:38">sasl</name><operator pos:start="41:39" pos:end="41:39">.</operator><name pos:start="41:40" pos:end="41:47">mechlist</name></name></expr></argument>, <argument pos:start="41:50" pos:end="41:57"><expr pos:start="41:50" pos:end="41:57"><name pos:start="41:50" pos:end="41:57">mechname</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><call pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:17">VNC_DEBUG</name><argument_list pos:start="43:18" pos:end="43:37">(<argument pos:start="43:19" pos:end="43:28"><expr pos:start="43:19" pos:end="43:28"><literal type="string" pos:start="43:19" pos:end="43:28">"Two %p\n"</literal></expr></argument>, <argument pos:start="43:31" pos:end="43:36"><expr pos:start="43:31" pos:end="43:36"><name pos:start="43:31" pos:end="43:36">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:19">offset</name></expr>)</condition> <block pos:start="45:22" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:22">

            <expr_stmt pos:start="47:13" pos:end="47:33"><expr pos:start="47:13" pos:end="47:32"><call pos:start="47:13" pos:end="47:32"><name pos:start="47:13" pos:end="47:28">vnc_client_error</name><argument_list pos:start="47:29" pos:end="47:32">(<argument pos:start="47:30" pos:end="47:31"><expr pos:start="47:30" pos:end="47:31"><name pos:start="47:30" pos:end="47:31">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:22">return <expr pos:start="49:20" pos:end="49:21"><operator pos:start="49:20" pos:end="49:20">-</operator><literal type="number" pos:start="49:21" pos:end="49:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:40"><expr pos:start="53:9" pos:end="53:39"><call pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:17">VNC_DEBUG</name><argument_list pos:start="53:18" pos:end="53:39">(<argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><literal type="string" pos:start="53:19" pos:end="53:30">"Two '%s'\n"</literal></expr></argument>, <argument pos:start="53:33" pos:end="53:38"><expr pos:start="53:33" pos:end="53:38"><name pos:start="53:33" pos:end="53:38">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="65:9"><if pos:start="55:9" pos:end="65:9">if <condition pos:start="55:12" pos:end="59:33">(<expr pos:start="55:13" pos:end="59:32"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:18">offset</name><index pos:start="55:19" pos:end="55:22">[<expr pos:start="55:20" pos:end="55:21"><operator pos:start="55:20" pos:end="55:20">-</operator><literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>]</index></name> <operator pos:start="55:24" pos:end="55:25">!=</operator> <literal type="char" pos:start="55:27" pos:end="55:29">','</literal> <operator pos:start="55:31" pos:end="55:32">||</operator>

            <operator pos:start="57:13" pos:end="57:13">(</operator><name pos:start="57:14" pos:end="57:24"><name pos:start="57:14" pos:end="57:19">offset</name><index pos:start="57:20" pos:end="57:24">[<expr pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:23">len</name></expr>]</index></name> <operator pos:start="57:26" pos:end="57:27">!=</operator> <literal type="char" pos:start="57:29" pos:end="57:32">'\0'</literal><operator pos:start="57:33" pos:end="57:34">&amp;&amp;</operator>

             <name pos:start="59:14" pos:end="59:24"><name pos:start="59:14" pos:end="59:19">offset</name><index pos:start="59:20" pos:end="59:24">[<expr pos:start="59:21" pos:end="59:23"><name pos:start="59:21" pos:end="59:23">len</name></expr>]</index></name> <operator pos:start="59:26" pos:end="59:27">!=</operator> <literal type="char" pos:start="59:29" pos:end="59:31">','</literal><operator pos:start="59:32" pos:end="59:32">)</operator></expr>)</condition> <block pos:start="59:35" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:22">

            <expr_stmt pos:start="61:13" pos:end="61:33"><expr pos:start="61:13" pos:end="61:32"><call pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:28">vnc_client_error</name><argument_list pos:start="61:29" pos:end="61:32">(<argument pos:start="61:30" pos:end="61:31"><expr pos:start="61:30" pos:end="61:31"><name pos:start="61:30" pos:end="61:31">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="63:13" pos:end="63:22">return <expr pos:start="63:20" pos:end="63:21"><operator pos:start="63:20" pos:end="63:20">-</operator><literal type="number" pos:start="63:21" pos:end="63:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><call pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:8">free</name><argument_list pos:start="71:9" pos:end="71:27">(<argument pos:start="71:10" pos:end="71:26"><expr pos:start="71:10" pos:end="71:26"><name pos:start="71:10" pos:end="71:26"><name pos:start="71:10" pos:end="71:11">vs</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:17">sasl</name><operator pos:start="71:18" pos:end="71:18">.</operator><name pos:start="71:19" pos:end="71:26">mechlist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:33"><expr pos:start="73:5" pos:end="73:32"><name pos:start="73:5" pos:end="73:21"><name pos:start="73:5" pos:end="73:6">vs</name><operator pos:start="73:7" pos:end="73:8">-&gt;</operator><name pos:start="73:9" pos:end="73:12">sasl</name><operator pos:start="73:13" pos:end="73:13">.</operator><name pos:start="73:14" pos:end="73:21">mechlist</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:32">mechname</name></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:53"><expr pos:start="77:5" pos:end="77:52"><call pos:start="77:5" pos:end="77:52"><name pos:start="77:5" pos:end="77:13">VNC_DEBUG</name><argument_list pos:start="77:14" pos:end="77:52">(<argument pos:start="77:15" pos:end="77:41"><expr pos:start="77:15" pos:end="77:41"><literal type="string" pos:start="77:15" pos:end="77:41">"Validated mechname '%s'\n"</literal></expr></argument>, <argument pos:start="77:44" pos:end="77:51"><expr pos:start="77:44" pos:end="77:51"><name pos:start="77:44" pos:end="77:51">mechname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:62"><expr pos:start="79:5" pos:end="79:61"><call pos:start="79:5" pos:end="79:61"><name pos:start="79:5" pos:end="79:17">vnc_read_when</name><argument_list pos:start="79:18" pos:end="79:61">(<argument pos:start="79:19" pos:end="79:20"><expr pos:start="79:19" pos:end="79:20"><name pos:start="79:19" pos:end="79:20">vs</name></expr></argument>, <argument pos:start="79:23" pos:end="79:57"><expr pos:start="79:23" pos:end="79:57"><name pos:start="79:23" pos:end="79:57">protocol_client_auth_sasl_start_len</name></expr></argument>, <argument pos:start="79:60" pos:end="79:60"><expr pos:start="79:60" pos:end="79:60"><literal type="number" pos:start="79:60" pos:end="79:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
