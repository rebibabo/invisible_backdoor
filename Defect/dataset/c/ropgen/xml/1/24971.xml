<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24971.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">usb_mtp_object_readdir</name><parameter_list pos:start="1:35" pos:end="1:61">(<parameter pos:start="1:36" pos:end="1:46"><decl pos:start="1:36" pos:end="1:46"><type pos:start="1:36" pos:end="1:46"><name pos:start="1:36" pos:end="1:43">MTPState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:57">MTPObject</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">o</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:18">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:17">dirent</name></name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:24">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:7">DIR</name> <modifier pos:start="7:9" pos:end="7:9">*</modifier></type><name pos:start="7:10" pos:end="7:12">dir</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:25">(<expr pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:9">o</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:24">have_children</name></name></expr>)</condition> <block pos:start="11:27" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:5">o</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:20">have_children</name></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <name pos:start="17:24" pos:end="17:27">true</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:7">dir</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:26"><name pos:start="21:11" pos:end="21:17">opendir</name><argument_list pos:start="21:18" pos:end="21:26">(<argument pos:start="21:19" pos:end="21:25"><expr pos:start="21:19" pos:end="21:25"><name pos:start="21:19" pos:end="21:25"><name pos:start="21:19" pos:end="21:19">o</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:25">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="30:0"><if pos:start="23:5" pos:end="30:0">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">dir</name></expr>)</condition> <block pos:start="23:15" pos:end="30:0">{<block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="29:1" pos:end="29:16">#<cpp:directive pos:start="29:2" pos:end="29:6">ifdef</cpp:directive> <name pos:start="29:8" pos:end="29:16">__linux__</name></cpp:ifdef>

    <decl_stmt pos:start="31:5" pos:end="31:59"><decl pos:start="31:5" pos:end="31:58"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:15">watchfd</name> <init pos:start="31:17" pos:end="31:58">= <expr pos:start="31:19" pos:end="31:58"><call pos:start="31:19" pos:end="31:58"><name pos:start="31:19" pos:end="31:35">usb_mtp_add_watch</name><argument_list pos:start="31:36" pos:end="31:58">(<argument pos:start="31:37" pos:end="31:48"><expr pos:start="31:37" pos:end="31:48"><name pos:start="31:37" pos:end="31:48"><name pos:start="31:37" pos:end="31:37">s</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:48">inotifyfd</name></name></expr></argument>, <argument pos:start="31:51" pos:end="31:57"><expr pos:start="31:51" pos:end="31:57"><name pos:start="31:51" pos:end="31:57"><name pos:start="31:51" pos:end="31:51">o</name><operator pos:start="31:52" pos:end="31:53">-&gt;</operator><name pos:start="31:54" pos:end="31:57">path</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="33:5" pos:end="48:0"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:22">(<expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:15">watchfd</name> <operator pos:start="33:17" pos:end="33:18">==</operator> <operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>)</condition> <block pos:start="33:24" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:74">

        <expr_stmt pos:start="35:9" pos:end="35:74"><expr pos:start="35:9" pos:end="35:73"><call pos:start="35:9" pos:end="35:73"><name pos:start="35:9" pos:end="35:15">fprintf</name><argument_list pos:start="35:16" pos:end="35:73">(<argument pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22">stderr</name></expr></argument>, <argument pos:start="35:25" pos:end="35:63"><expr pos:start="35:25" pos:end="35:63"><literal type="string" pos:start="35:25" pos:end="35:63">"usb-mtp: failed to add watch for %s\n"</literal></expr></argument>, <argument pos:start="35:66" pos:end="35:72"><expr pos:start="35:66" pos:end="35:72"><name pos:start="35:66" pos:end="35:72"><name pos:start="35:66" pos:end="35:66">o</name><operator pos:start="35:67" pos:end="35:68">-&gt;</operator><name pos:start="35:69" pos:end="35:72">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="48:0">else <block pos:start="37:12" pos:end="48:0">{<block_content pos:start="39:9" pos:end="43:29">

        <expr_stmt pos:start="39:9" pos:end="41:54"><expr pos:start="39:9" pos:end="41:53"><call pos:start="39:9" pos:end="41:53"><name pos:start="39:9" pos:end="39:35">trace_usb_mtp_inotify_event</name><argument_list pos:start="39:36" pos:end="41:53">(<argument pos:start="39:37" pos:end="39:47"><expr pos:start="39:37" pos:end="39:47"><name pos:start="39:37" pos:end="39:47"><name pos:start="39:37" pos:end="39:37">s</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:42">dev</name><operator pos:start="39:43" pos:end="39:43">.</operator><name pos:start="39:44" pos:end="39:47">addr</name></name></expr></argument>, <argument pos:start="39:50" pos:end="39:56"><expr pos:start="39:50" pos:end="39:56"><name pos:start="39:50" pos:end="39:56"><name pos:start="39:50" pos:end="39:50">o</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:56">path</name></name></expr></argument>,

                                    <argument pos:start="41:37" pos:end="41:37"><expr pos:start="41:37" pos:end="41:37"><literal type="number" pos:start="41:37" pos:end="41:37">0</literal></expr></argument>, <argument pos:start="41:40" pos:end="41:52"><expr pos:start="41:40" pos:end="41:52"><literal type="string" pos:start="41:40" pos:end="41:52">"Watch Added"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:9">o</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:18">watchfd</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:28">watchfd</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

    <while pos:start="49:5" pos:end="53:5">while <condition pos:start="49:11" pos:end="49:42">(<expr pos:start="49:12" pos:end="49:41"><operator pos:start="49:12" pos:end="49:12">(</operator><name pos:start="49:13" pos:end="49:17">entry</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="49:32"><name pos:start="49:21" pos:end="49:27">readdir</name><argument_list pos:start="49:28" pos:end="49:32">(<argument pos:start="49:29" pos:end="49:31"><expr pos:start="49:29" pos:end="49:31"><name pos:start="49:29" pos:end="49:31">dir</name></expr></argument>)</argument_list></call><operator pos:start="49:33" pos:end="49:33">)</operator> <operator pos:start="49:35" pos:end="49:36">!=</operator> <name pos:start="49:38" pos:end="49:41">NULL</name></expr>)</condition> <block pos:start="49:44" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:47">

        <expr_stmt pos:start="51:9" pos:end="51:47"><expr pos:start="51:9" pos:end="51:46"><call pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:25">usb_mtp_add_child</name><argument_list pos:start="51:26" pos:end="51:46">(<argument pos:start="51:27" pos:end="51:27"><expr pos:start="51:27" pos:end="51:27"><name pos:start="51:27" pos:end="51:27">s</name></expr></argument>, <argument pos:start="51:30" pos:end="51:30"><expr pos:start="51:30" pos:end="51:30"><name pos:start="51:30" pos:end="51:30">o</name></expr></argument>, <argument pos:start="51:33" pos:end="51:45"><expr pos:start="51:33" pos:end="51:45"><name pos:start="51:33" pos:end="51:45"><name pos:start="51:33" pos:end="51:37">entry</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:45">d_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="55:5" pos:end="55:18"><expr pos:start="55:5" pos:end="55:17"><call pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:12">closedir</name><argument_list pos:start="55:13" pos:end="55:17">(<argument pos:start="55:14" pos:end="55:16"><expr pos:start="55:14" pos:end="55:16"><name pos:start="55:14" pos:end="55:16">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
