<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11215.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:44"><name pos:start="1:1" pos:end="1:15">e1000e_io_write</name><argument_list pos:start="1:16" pos:end="3:44">(<argument pos:start="1:17" pos:end="1:28">void *opaque</argument>, <argument pos:start="1:31" pos:end="1:41">hwaddr addr</argument>,

                <argument pos:start="3:17" pos:end="3:28">uint64_t val</argument>, <argument pos:start="3:31" pos:end="3:43">unsigned size</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:5">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">E1000EState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:27">= <expr pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">idx</name></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="41:5">switch <condition pos:start="13:12" pos:end="13:17">(<expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">addr</name></expr>)</condition> <block pos:start="13:19" pos:end="41:5">{<block_content pos:start="15:5" pos:end="39:15">

    <case pos:start="15:5" pos:end="15:22">case <expr pos:start="15:10" pos:end="15:21"><name pos:start="15:10" pos:end="15:21">E1000_IOADDR</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:40"><expr pos:start="17:9" pos:end="17:39"><call pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:34">trace_e1000e_io_write_addr</name><argument_list pos:start="17:35" pos:end="17:39">(<argument pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">ioaddr</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:29">uint32_t</name><operator pos:start="19:30" pos:end="19:30">)</operator> <name pos:start="19:32" pos:end="19:34">val</name></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    <case pos:start="23:5" pos:end="23:22">case <expr pos:start="23:10" pos:end="23:21"><name pos:start="23:10" pos:end="23:21">E1000_IODATA</name></expr>:</case>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:45">(<expr pos:start="25:13" pos:end="25:44"><call pos:start="25:13" pos:end="25:44"><name pos:start="25:13" pos:end="25:35">e1000e_io_get_reg_index</name><argument_list pos:start="25:36" pos:end="25:44">(<argument pos:start="25:37" pos:end="25:37"><expr pos:start="25:37" pos:end="25:37"><name pos:start="25:37" pos:end="25:37">s</name></expr></argument>, <argument pos:start="25:40" pos:end="25:43"><expr pos:start="25:40" pos:end="25:43"><operator pos:start="25:40" pos:end="25:40">&amp;</operator><name pos:start="25:41" pos:end="25:43">idx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:47" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:63">

            <expr_stmt pos:start="27:13" pos:end="27:49"><expr pos:start="27:13" pos:end="27:48"><call pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:38">trace_e1000e_io_write_data</name><argument_list pos:start="27:39" pos:end="27:48">(<argument pos:start="27:40" pos:end="27:42"><expr pos:start="27:40" pos:end="27:42"><name pos:start="27:40" pos:end="27:42">idx</name></expr></argument>, <argument pos:start="27:45" pos:end="27:47"><expr pos:start="27:45" pos:end="27:47"><name pos:start="27:45" pos:end="27:47">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:63"><expr pos:start="29:13" pos:end="29:62"><call pos:start="29:13" pos:end="29:62"><name pos:start="29:13" pos:end="29:29">e1000e_core_write</name><argument_list pos:start="29:30" pos:end="29:62">(<argument pos:start="29:31" pos:end="29:38"><expr pos:start="29:31" pos:end="29:38"><operator pos:start="29:31" pos:end="29:31">&amp;</operator><name pos:start="29:32" pos:end="29:38"><name pos:start="29:32" pos:end="29:32">s</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:38">core</name></name></expr></argument>, <argument pos:start="29:41" pos:end="29:43"><expr pos:start="29:41" pos:end="29:43"><name pos:start="29:41" pos:end="29:43">idx</name></expr></argument>, <argument pos:start="29:46" pos:end="29:48"><expr pos:start="29:46" pos:end="29:48"><name pos:start="29:46" pos:end="29:48">val</name></expr></argument>, <argument pos:start="29:51" pos:end="29:61"><expr pos:start="29:51" pos:end="29:61"><sizeof pos:start="29:51" pos:end="29:61">sizeof<argument_list pos:start="29:57" pos:end="29:61">(<argument pos:start="29:58" pos:end="29:60"><expr pos:start="29:58" pos:end="29:60"><name pos:start="29:58" pos:end="29:60">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    <default pos:start="35:5" pos:end="35:12">default:</default>

        <expr_stmt pos:start="37:9" pos:end="37:48"><expr pos:start="37:9" pos:end="37:47"><call pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:41">trace_e1000e_wrn_io_write_unknown</name><argument_list pos:start="37:42" pos:end="37:47">(<argument pos:start="37:43" pos:end="37:46"><expr pos:start="37:43" pos:end="37:46"><name pos:start="37:43" pos:end="37:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></switch>

</block_content>}</block>
</unit>
