<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8882.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">ff_rtp_send_h264</name><parameter_list pos:start="1:22" pos:end="1:73">(<parameter pos:start="1:23" pos:end="1:41"><decl pos:start="1:23" pos:end="1:41"><type pos:start="1:23" pos:end="1:41"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">s1</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:62"><decl pos:start="1:44" pos:end="1:62"><type pos:start="1:44" pos:end="1:62"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">buf1</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:72"><decl pos:start="1:65" pos:end="1:72"><type pos:start="1:65" pos:end="1:72"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:72">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:26">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">r</name></decl>, <decl pos:start="5:23" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">end</name> <init pos:start="5:28" pos:end="5:40">= <expr pos:start="5:30" pos:end="5:40"><name pos:start="5:30" pos:end="5:33">buf1</name> <operator pos:start="5:35" pos:end="5:35">+</operator> <name pos:start="5:37" pos:end="5:40">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">RTPMuxContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:36">= <expr pos:start="7:24" pos:end="7:36"><name pos:start="7:24" pos:end="7:36"><name pos:start="7:24" pos:end="7:25">s1</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:16">timestamp</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:35"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:35">cur_timestamp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:14">buf_ptr</name></name>   <operator pos:start="13:18" pos:end="13:18">=</operator> <name pos:start="13:20" pos:end="13:25"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:25">buf</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:45"><if pos:start="15:5" pos:end="17:82">if <condition pos:start="15:8" pos:end="15:27">(<expr pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:26">nal_length_size</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:82"><block_content pos:start="17:9" pos:end="17:82">

        <expr_stmt pos:start="17:9" pos:end="17:82"><expr pos:start="17:9" pos:end="17:81"><name pos:start="17:9" pos:end="17:9">r</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <ternary pos:start="17:13" pos:end="17:81"><condition pos:start="17:13" pos:end="17:70"><expr pos:start="17:13" pos:end="17:68"><call pos:start="17:13" pos:end="17:68"><name pos:start="17:13" pos:end="17:37">ff_avc_mp4_find_startcode</name><argument_list pos:start="17:38" pos:end="17:68">(<argument pos:start="17:39" pos:end="17:42"><expr pos:start="17:39" pos:end="17:42"><name pos:start="17:39" pos:end="17:42">buf1</name></expr></argument>, <argument pos:start="17:45" pos:end="17:47"><expr pos:start="17:45" pos:end="17:47"><name pos:start="17:45" pos:end="17:47">end</name></expr></argument>, <argument pos:start="17:50" pos:end="17:67"><expr pos:start="17:50" pos:end="17:67"><name pos:start="17:50" pos:end="17:67"><name pos:start="17:50" pos:end="17:50">s</name><operator pos:start="17:51" pos:end="17:52">-&gt;</operator><name pos:start="17:53" pos:end="17:67">nal_length_size</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="17:72" pos:end="17:75"> <expr pos:start="17:72" pos:end="17:75"><name pos:start="17:72" pos:end="17:75">buf1</name></expr> </then><else pos:start="17:77" pos:end="17:81">: <expr pos:start="17:79" pos:end="17:81"><name pos:start="17:79" pos:end="17:81">end</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="19:5" pos:end="21:45">else<block type="pseudo" pos:start="21:9" pos:end="21:45"><block_content pos:start="21:9" pos:end="21:45">

        <expr_stmt pos:start="21:9" pos:end="21:45"><expr pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:9">r</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:44"><name pos:start="21:13" pos:end="21:33">ff_avc_find_startcode</name><argument_list pos:start="21:34" pos:end="21:44">(<argument pos:start="21:35" pos:end="21:38"><expr pos:start="21:35" pos:end="21:38"><name pos:start="21:35" pos:end="21:38">buf1</name></expr></argument>, <argument pos:start="21:41" pos:end="21:43"><expr pos:start="21:41" pos:end="21:43"><name pos:start="21:41" pos:end="21:43">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <while pos:start="23:5" pos:end="51:5">while <condition pos:start="23:11" pos:end="23:19">(<expr pos:start="23:12" pos:end="23:18"><name pos:start="23:12" pos:end="23:12">r</name> <operator pos:start="23:14" pos:end="23:14">&lt;</operator> <name pos:start="23:16" pos:end="23:18">end</name></expr>)</condition> <block pos:start="23:21" pos:end="51:5">{<block_content pos:start="25:9" pos:end="49:15">

        <decl_stmt pos:start="25:9" pos:end="25:26"><decl pos:start="25:9" pos:end="25:25"><type pos:start="25:9" pos:end="25:23"><specifier pos:start="25:9" pos:end="25:13">const</specifier> <name pos:start="25:15" pos:end="25:21">uint8_t</name> <modifier pos:start="25:23" pos:end="25:23">*</modifier></type><name pos:start="25:24" pos:end="25:25">r1</name></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="45:9"><if pos:start="29:9" pos:end="39:9">if <condition pos:start="29:12" pos:end="29:31">(<expr pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:30">nal_length_size</name></name></expr>)</condition> <block pos:start="29:33" pos:end="39:9">{<block_content pos:start="31:13" pos:end="37:36">

            <expr_stmt pos:start="31:13" pos:end="31:71"><expr pos:start="31:13" pos:end="31:70"><name pos:start="31:13" pos:end="31:14">r1</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:70"><name pos:start="31:18" pos:end="31:42">ff_avc_mp4_find_startcode</name><argument_list pos:start="31:43" pos:end="31:70">(<argument pos:start="31:44" pos:end="31:44"><expr pos:start="31:44" pos:end="31:44"><name pos:start="31:44" pos:end="31:44">r</name></expr></argument>, <argument pos:start="31:47" pos:end="31:49"><expr pos:start="31:47" pos:end="31:49"><name pos:start="31:47" pos:end="31:49">end</name></expr></argument>, <argument pos:start="31:52" pos:end="31:69"><expr pos:start="31:52" pos:end="31:69"><name pos:start="31:52" pos:end="31:69"><name pos:start="31:52" pos:end="31:52">s</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:69">nal_length_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="35:25"><if pos:start="33:13" pos:end="35:25">if <condition pos:start="33:16" pos:end="33:20">(<expr pos:start="33:17" pos:end="33:19"><operator pos:start="33:17" pos:end="33:17">!</operator><name pos:start="33:18" pos:end="33:19">r1</name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:25"><block_content pos:start="35:17" pos:end="35:25">

                <expr_stmt pos:start="35:17" pos:end="35:25"><expr pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:18">r1</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:24">end</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:36"><expr pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:13">r</name> <operator pos:start="37:15" pos:end="37:16">+=</operator> <name pos:start="37:18" pos:end="37:35"><name pos:start="37:18" pos:end="37:18">s</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:35">nal_length_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="45:9">else <block pos:start="39:16" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:47">

            <while pos:start="41:13" pos:end="41:28">while <condition pos:start="41:19" pos:end="41:27">(<expr pos:start="41:20" pos:end="41:26"><operator pos:start="41:20" pos:end="41:20">!</operator><operator pos:start="41:21" pos:end="41:21">*</operator><operator pos:start="41:22" pos:end="41:22">(</operator><name pos:start="41:23" pos:end="41:23">r</name><operator pos:start="41:24" pos:end="41:25">++</operator><operator pos:start="41:26" pos:end="41:26">)</operator></expr>)</condition><block type="pseudo" pos:start="41:28" pos:end="41:28"><block_content pos:start="41:28" pos:end="41:28"><empty_stmt pos:start="41:28" pos:end="41:28">;</empty_stmt></block_content></block></while>

            <expr_stmt pos:start="43:13" pos:end="43:47"><expr pos:start="43:13" pos:end="43:46"><name pos:start="43:13" pos:end="43:14">r1</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="43:46"><name pos:start="43:18" pos:end="43:38">ff_avc_find_startcode</name><argument_list pos:start="43:39" pos:end="43:46">(<argument pos:start="43:40" pos:end="43:40"><expr pos:start="43:40" pos:end="43:40"><name pos:start="43:40" pos:end="43:40">r</name></expr></argument>, <argument pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><name pos:start="43:43" pos:end="43:45">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:43"><expr pos:start="47:9" pos:end="47:42"><call pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:16">nal_send</name><argument_list pos:start="47:17" pos:end="47:42">(<argument pos:start="47:18" pos:end="47:19"><expr pos:start="47:18" pos:end="47:19"><name pos:start="47:18" pos:end="47:19">s1</name></expr></argument>, <argument pos:start="47:22" pos:end="47:22"><expr pos:start="47:22" pos:end="47:22"><name pos:start="47:22" pos:end="47:22">r</name></expr></argument>, <argument pos:start="47:25" pos:end="47:30"><expr pos:start="47:25" pos:end="47:30"><name pos:start="47:25" pos:end="47:26">r1</name> <operator pos:start="47:28" pos:end="47:28">-</operator> <name pos:start="47:30" pos:end="47:30">r</name></expr></argument>, <argument pos:start="47:33" pos:end="47:41"><expr pos:start="47:33" pos:end="47:41"><name pos:start="47:33" pos:end="47:34">r1</name> <operator pos:start="47:36" pos:end="47:37">==</operator> <name pos:start="47:39" pos:end="47:41">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:15"><expr pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:9">r</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <name pos:start="49:13" pos:end="49:14">r1</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="53:5" pos:end="53:26"><expr pos:start="53:5" pos:end="53:25"><call pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:18">flush_buffered</name><argument_list pos:start="53:19" pos:end="53:25">(<argument pos:start="53:20" pos:end="53:21"><expr pos:start="53:20" pos:end="53:21"><name pos:start="53:20" pos:end="53:21">s1</name></expr></argument>, <argument pos:start="53:24" pos:end="53:24"><expr pos:start="53:24" pos:end="53:24"><literal type="number" pos:start="53:24" pos:end="53:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
