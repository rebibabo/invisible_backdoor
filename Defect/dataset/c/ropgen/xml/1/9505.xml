<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9505.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">net_slirp_parse_legacy</name><parameter_list pos:start="1:27" pos:end="1:81">(<parameter pos:start="1:28" pos:end="1:50"><decl pos:start="1:28" pos:end="1:50"><type pos:start="1:28" pos:end="1:50"><name pos:start="1:28" pos:end="1:39">QemuOptsList</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:50">opts_list</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:70">optarg</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:80"><decl pos:start="1:73" pos:end="1:80"><type pos:start="1:73" pos:end="1:80"><name pos:start="1:73" pos:end="1:75">int</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:80">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:13">

    <if_stmt pos:start="5:5" pos:end="11:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="7:61">(<expr pos:start="5:9" pos:end="7:60"><call pos:start="5:9" pos:end="5:38"><name pos:start="5:9" pos:end="5:14">strcmp</name><argument_list pos:start="5:15" pos:end="5:38">(<argument pos:start="5:16" pos:end="5:30"><expr pos:start="5:16" pos:end="5:30"><name pos:start="5:16" pos:end="5:30"><name pos:start="5:16" pos:end="5:24">opts_list</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:30">name</name></name></expr></argument>, <argument pos:start="5:33" pos:end="5:37"><expr pos:start="5:33" pos:end="5:37"><literal type="string" pos:start="5:33" pos:end="5:37">"net"</literal></expr></argument>)</argument_list></call> <operator pos:start="5:40" pos:end="5:41">!=</operator> <literal type="number" pos:start="5:43" pos:end="5:43">0</literal> <operator pos:start="5:45" pos:end="5:46">||</operator>

        <call pos:start="7:9" pos:end="7:55"><name pos:start="7:9" pos:end="7:15">strncmp</name><argument_list pos:start="7:16" pos:end="7:55">(<argument pos:start="7:17" pos:end="7:22"><expr pos:start="7:17" pos:end="7:22"><name pos:start="7:17" pos:end="7:22">optarg</name></expr></argument>, <argument pos:start="7:25" pos:end="7:34"><expr pos:start="7:25" pos:end="7:34"><literal type="string" pos:start="7:25" pos:end="7:34">"channel,"</literal></expr></argument>, <argument pos:start="7:37" pos:end="7:54"><expr pos:start="7:37" pos:end="7:54"><call pos:start="7:37" pos:end="7:54"><name pos:start="7:37" pos:end="7:42">strlen</name><argument_list pos:start="7:43" pos:end="7:54">(<argument pos:start="7:44" pos:end="7:53"><expr pos:start="7:44" pos:end="7:53"><literal type="string" pos:start="7:44" pos:end="7:53">"channel,"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="7:57" pos:end="7:58">!=</operator> <literal type="number" pos:start="7:60" pos:end="7:60">0</literal></expr>)</condition> <block pos:start="7:63" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:17">

        <return pos:start="9:9" pos:end="9:17">return <expr pos:start="9:16" pos:end="9:16"><literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:68"><expr pos:start="15:5" pos:end="17:67"><call pos:start="15:5" pos:end="17:67"><name pos:start="15:5" pos:end="15:16">error_report</name><argument_list pos:start="15:17" pos:end="17:67">(<argument pos:start="15:18" pos:end="17:66"><expr pos:start="15:18" pos:end="17:66"><literal type="string" pos:start="15:18" pos:end="15:60">"The '-net channel' option is deprecated. "</literal>

                 <literal type="string" pos:start="17:18" pos:end="17:66">"Please use '-netdev user,guestfwd=...' instead."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:45">/* handle legacy -net channel,port:chr */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:10">optarg</name> <operator pos:start="23:12" pos:end="23:13">+=</operator> <call pos:start="23:15" pos:end="23:32"><name pos:start="23:15" pos:end="23:20">strlen</name><argument_list pos:start="23:21" pos:end="23:32">(<argument pos:start="23:22" pos:end="23:31"><expr pos:start="23:22" pos:end="23:31"><literal type="string" pos:start="23:22" pos:end="23:31">"channel,"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="49:5"><if pos:start="27:5" pos:end="45:5">if <condition pos:start="27:8" pos:end="27:36">(<expr pos:start="27:9" pos:end="27:35"><call pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:20">QTAILQ_EMPTY</name><argument_list pos:start="27:21" pos:end="27:35">(<argument pos:start="27:22" pos:end="27:34"><expr pos:start="27:22" pos:end="27:34"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:34">slirp_stacks</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:38" pos:end="45:5">{<block_content pos:start="29:9" pos:end="43:17">

        <decl_stmt pos:start="29:9" pos:end="29:40"><decl pos:start="29:9" pos:end="29:39"><type pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:14">struct</name> <name pos:start="29:16" pos:end="29:31">slirp_config_str</name></name> <modifier pos:start="29:33" pos:end="29:33">*</modifier></type><name pos:start="29:34" pos:end="29:39">config</name></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:14">config</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:42"><name pos:start="33:18" pos:end="33:25">g_malloc</name><argument_list pos:start="33:26" pos:end="33:42">(<argument pos:start="33:27" pos:end="33:41"><expr pos:start="33:27" pos:end="33:41"><sizeof pos:start="33:27" pos:end="33:41">sizeof<argument_list pos:start="33:33" pos:end="33:41">(<argument pos:start="33:34" pos:end="33:40"><expr pos:start="33:34" pos:end="33:40"><operator pos:start="33:34" pos:end="33:34">*</operator><name pos:start="33:35" pos:end="33:40">config</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:58"><expr pos:start="35:9" pos:end="35:57"><call pos:start="35:9" pos:end="35:57"><name pos:start="35:9" pos:end="35:15">pstrcpy</name><argument_list pos:start="35:16" pos:end="35:57">(<argument pos:start="35:17" pos:end="35:27"><expr pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:22">config</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:27">str</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:48"><expr pos:start="35:30" pos:end="35:48"><sizeof pos:start="35:30" pos:end="35:48">sizeof<argument_list pos:start="35:36" pos:end="35:48">(<argument pos:start="35:37" pos:end="35:47"><expr pos:start="35:37" pos:end="35:47"><name pos:start="35:37" pos:end="35:47"><name pos:start="35:37" pos:end="35:42">config</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:47">str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:51" pos:end="35:56"><expr pos:start="35:51" pos:end="35:56"><name pos:start="35:51" pos:end="35:56">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:41"><expr pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:14">config</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:21">flags</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:40">SLIRP_CFG_LEGACY</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:37"><expr pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:14">config</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:20">next</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:36">slirp_configs</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:21">slirp_configs</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:30">config</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:17"><expr pos:start="43:9" pos:end="43:16"><operator pos:start="43:9" pos:end="43:9">*</operator><name pos:start="43:10" pos:end="43:12">ret</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="49:5">else <block pos:start="45:12" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:70">

        <expr_stmt pos:start="47:9" pos:end="47:70"><expr pos:start="47:9" pos:end="47:69"><operator pos:start="47:9" pos:end="47:9">*</operator><name pos:start="47:10" pos:end="47:12">ret</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:69"><name pos:start="47:16" pos:end="47:29">slirp_guestfwd</name><argument_list pos:start="47:30" pos:end="47:69">(<argument pos:start="47:31" pos:end="47:57"><expr pos:start="47:31" pos:end="47:57"><call pos:start="47:31" pos:end="47:57"><name pos:start="47:31" pos:end="47:42">QTAILQ_FIRST</name><argument_list pos:start="47:43" pos:end="47:57">(<argument pos:start="47:44" pos:end="47:56"><expr pos:start="47:44" pos:end="47:56"><operator pos:start="47:44" pos:end="47:44">&amp;</operator><name pos:start="47:45" pos:end="47:56">slirp_stacks</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:60" pos:end="47:65"><expr pos:start="47:60" pos:end="47:65"><name pos:start="47:60" pos:end="47:65">optarg</name></expr></argument>, <argument pos:start="47:68" pos:end="47:68"><expr pos:start="47:68" pos:end="47:68"><literal type="number" pos:start="47:68" pos:end="47:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
