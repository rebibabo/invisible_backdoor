<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25381.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">decode_mb</name><parameter_list pos:start="1:21" pos:end="1:62">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:31">MadContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">s</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:43">AVFrame</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">frame</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:61"><decl pos:start="1:53" pos:end="1:61"><type pos:start="1:53" pos:end="1:61"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:61">inter</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">mv_map</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">mv_x</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">mv_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">j</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="27:5"><if pos:start="13:5" pos:end="27:5">if <condition pos:start="13:8" pos:end="13:14">(<expr pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:13">inter</name></expr>)</condition> <block pos:start="13:16" pos:end="27:5">{<block_content pos:start="15:9" pos:end="25:9">

        <decl_stmt pos:start="15:9" pos:end="15:34"><decl pos:start="15:9" pos:end="15:33"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">v</name> <init pos:start="15:15" pos:end="15:33">= <expr pos:start="15:17" pos:end="15:33"><call pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:25">decode210</name><argument_list pos:start="15:26" pos:end="15:33">(<argument pos:start="15:27" pos:end="15:32"><expr pos:start="15:27" pos:end="15:32"><operator pos:start="15:27" pos:end="15:27">&amp;</operator><name pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:32">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="25:9"><if pos:start="17:9" pos:end="25:9">if <condition pos:start="17:12" pos:end="17:18">(<expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:13">v</name> <operator pos:start="17:15" pos:end="17:15">&lt;</operator> <literal type="number" pos:start="17:17" pos:end="17:17">2</literal></expr>)</condition> <block pos:start="17:20" pos:end="25:9">{<block_content pos:start="19:13" pos:end="23:41">

            <expr_stmt pos:start="19:13" pos:end="19:50"><expr pos:start="19:13" pos:end="19:49"><name pos:start="19:13" pos:end="19:18">mv_map</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <ternary pos:start="19:22" pos:end="19:49"><condition pos:start="19:22" pos:end="19:24"><expr pos:start="19:22" pos:end="19:22"><name pos:start="19:22" pos:end="19:22">v</name></expr> ?</condition><then pos:start="19:26" pos:end="19:44"> <expr pos:start="19:26" pos:end="19:44"><call pos:start="19:26" pos:end="19:44"><name pos:start="19:26" pos:end="19:33">get_bits</name><argument_list pos:start="19:34" pos:end="19:44">(<argument pos:start="19:35" pos:end="19:40"><expr pos:start="19:35" pos:end="19:40"><operator pos:start="19:35" pos:end="19:35">&amp;</operator><name pos:start="19:36" pos:end="19:40"><name pos:start="19:36" pos:end="19:36">s</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:40">gb</name></name></expr></argument>, <argument pos:start="19:43" pos:end="19:43"><expr pos:start="19:43" pos:end="19:43"><literal type="number" pos:start="19:43" pos:end="19:43">6</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="19:46" pos:end="19:49">: <expr pos:start="19:48" pos:end="19:49"><literal type="number" pos:start="19:48" pos:end="19:49">63</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:41"><expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:16">mv_x</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:40"><name pos:start="21:20" pos:end="21:32">decode_motion</name><argument_list pos:start="21:33" pos:end="21:40">(<argument pos:start="21:34" pos:end="21:39"><expr pos:start="21:34" pos:end="21:39"><operator pos:start="21:34" pos:end="21:34">&amp;</operator><name pos:start="21:35" pos:end="21:39"><name pos:start="21:35" pos:end="21:35">s</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:41"><expr pos:start="23:13" pos:end="23:40"><name pos:start="23:13" pos:end="23:16">mv_y</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:40"><name pos:start="23:20" pos:end="23:32">decode_motion</name><argument_list pos:start="23:33" pos:end="23:40">(<argument pos:start="23:34" pos:end="23:39"><expr pos:start="23:34" pos:end="23:39"><operator pos:start="23:34" pos:end="23:34">&amp;</operator><name pos:start="23:35" pos:end="23:39"><name pos:start="23:35" pos:end="23:35">s</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="31:5" pos:end="53:5">for <control pos:start="31:9" pos:end="31:23">(<init pos:start="31:10" pos:end="31:13"><expr pos:start="31:10" pos:end="31:12"><name pos:start="31:10" pos:end="31:10">j</name><operator pos:start="31:11" pos:end="31:11">=</operator><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</init> <condition pos:start="31:15" pos:end="31:18"><expr pos:start="31:15" pos:end="31:17"><name pos:start="31:15" pos:end="31:15">j</name><operator pos:start="31:16" pos:end="31:16">&lt;</operator><literal type="number" pos:start="31:17" pos:end="31:17">6</literal></expr>;</condition> <incr pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:20">j</name><operator pos:start="31:21" pos:end="31:22">++</operator></expr></incr>)</control> <block pos:start="31:25" pos:end="53:5">{<block_content pos:start="33:9" pos:end="51:9">

        <if_stmt pos:start="33:9" pos:end="51:9"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="33:28">(<expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:18">mv_map</name> <operator pos:start="33:20" pos:end="33:20">&amp;</operator> <operator pos:start="33:22" pos:end="33:22">(</operator><literal type="number" pos:start="33:23" pos:end="33:23">1</literal><operator pos:start="33:24" pos:end="33:25">&lt;&lt;</operator><name pos:start="33:26" pos:end="33:26">j</name><operator pos:start="33:27" pos:end="33:27">)</operator></expr>)</condition> <block pos:start="33:30" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:75">  <comment type="line" pos:start="33:33" pos:end="33:70">// mv_x and mv_y are guarded by mv_map</comment>

            <decl_stmt pos:start="35:13" pos:end="35:46"><decl pos:start="35:13" pos:end="35:45"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:19">add</name> <init pos:start="35:21" pos:end="35:45">= <expr pos:start="35:23" pos:end="35:45"><literal type="number" pos:start="35:23" pos:end="35:23">2</literal><operator pos:start="35:24" pos:end="35:24">*</operator><call pos:start="35:25" pos:end="35:45"><name pos:start="35:25" pos:end="35:37">decode_motion</name><argument_list pos:start="35:38" pos:end="35:45">(<argument pos:start="35:39" pos:end="35:44"><expr pos:start="35:39" pos:end="35:44"><operator pos:start="35:39" pos:end="35:39">&amp;</operator><name pos:start="35:40" pos:end="35:44"><name pos:start="35:40" pos:end="35:40">s</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:44">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="37:13" pos:end="39:75"><if pos:start="37:13" pos:end="39:75">if <condition pos:start="37:16" pos:end="37:39">(<expr pos:start="37:17" pos:end="37:38"><name pos:start="37:17" pos:end="37:38"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:29">last_frame</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:35">data</name><index pos:start="37:36" pos:end="37:38">[<expr pos:start="37:37" pos:end="37:37"><literal type="number" pos:start="37:37" pos:end="37:37">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:75"><block_content pos:start="39:17" pos:end="39:75">

                <expr_stmt pos:start="39:17" pos:end="39:75"><expr pos:start="39:17" pos:end="39:74"><call pos:start="39:17" pos:end="39:74"><name pos:start="39:17" pos:end="39:26">comp_block</name><argument_list pos:start="39:27" pos:end="39:74">(<argument pos:start="39:28" pos:end="39:28"><expr pos:start="39:28" pos:end="39:28"><name pos:start="39:28" pos:end="39:28">s</name></expr></argument>, <argument pos:start="39:31" pos:end="39:35"><expr pos:start="39:31" pos:end="39:35"><name pos:start="39:31" pos:end="39:35">frame</name></expr></argument>, <argument pos:start="39:38" pos:end="39:44"><expr pos:start="39:38" pos:end="39:44"><name pos:start="39:38" pos:end="39:44"><name pos:start="39:38" pos:end="39:38">s</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:44">mb_x</name></name></expr></argument>, <argument pos:start="39:47" pos:end="39:53"><expr pos:start="39:47" pos:end="39:53"><name pos:start="39:47" pos:end="39:53"><name pos:start="39:47" pos:end="39:47">s</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:53">mb_y</name></name></expr></argument>, <argument pos:start="39:56" pos:end="39:56"><expr pos:start="39:56" pos:end="39:56"><name pos:start="39:56" pos:end="39:56">j</name></expr></argument>, <argument pos:start="39:59" pos:end="39:62"><expr pos:start="39:59" pos:end="39:62"><name pos:start="39:59" pos:end="39:62">mv_x</name></expr></argument>, <argument pos:start="39:65" pos:end="39:68"><expr pos:start="39:65" pos:end="39:68"><name pos:start="39:65" pos:end="39:68">mv_y</name></expr></argument>, <argument pos:start="39:71" pos:end="39:73"><expr pos:start="39:71" pos:end="39:73"><name pos:start="39:71" pos:end="39:73">add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="51:9">else <block pos:start="41:16" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:62">

            <expr_stmt pos:start="43:13" pos:end="43:41"><expr pos:start="43:13" pos:end="43:40"><call pos:start="43:13" pos:end="43:40"><name pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:18">dsp</name><operator pos:start="43:19" pos:end="43:19">.</operator><name pos:start="43:20" pos:end="43:30">clear_block</name></name><argument_list pos:start="43:31" pos:end="43:40">(<argument pos:start="43:32" pos:end="43:39"><expr pos:start="43:32" pos:end="43:39"><name pos:start="43:32" pos:end="43:39"><name pos:start="43:32" pos:end="43:32">s</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:39">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:26"><if pos:start="45:13" pos:end="47:26">if<condition pos:start="45:15" pos:end="45:51">(<expr pos:start="45:16" pos:end="45:50"><call pos:start="45:16" pos:end="45:46"><name pos:start="45:16" pos:end="45:33">decode_block_intra</name><argument_list pos:start="45:34" pos:end="45:46">(<argument pos:start="45:35" pos:end="45:35"><expr pos:start="45:35" pos:end="45:35"><name pos:start="45:35" pos:end="45:35">s</name></expr></argument>, <argument pos:start="45:38" pos:end="45:45"><expr pos:start="45:38" pos:end="45:45"><name pos:start="45:38" pos:end="45:45"><name pos:start="45:38" pos:end="45:38">s</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:45">block</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:48" pos:end="45:48">&lt;</operator> <literal type="number" pos:start="45:50" pos:end="45:50">0</literal></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:26"><block_content pos:start="47:17" pos:end="47:26">

                <return pos:start="47:17" pos:end="47:26">return <expr pos:start="47:24" pos:end="47:25"><operator pos:start="47:24" pos:end="47:24">-</operator><literal type="number" pos:start="47:25" pos:end="47:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:62"><expr pos:start="49:13" pos:end="49:61"><call pos:start="49:13" pos:end="49:61"><name pos:start="49:13" pos:end="49:20">idct_put</name><argument_list pos:start="49:21" pos:end="49:61">(<argument pos:start="49:22" pos:end="49:22"><expr pos:start="49:22" pos:end="49:22"><name pos:start="49:22" pos:end="49:22">s</name></expr></argument>, <argument pos:start="49:25" pos:end="49:29"><expr pos:start="49:25" pos:end="49:29"><name pos:start="49:25" pos:end="49:29">frame</name></expr></argument>, <argument pos:start="49:32" pos:end="49:39"><expr pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:32">s</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:39">block</name></name></expr></argument>, <argument pos:start="49:42" pos:end="49:48"><expr pos:start="49:42" pos:end="49:48"><name pos:start="49:42" pos:end="49:48"><name pos:start="49:42" pos:end="49:42">s</name><operator pos:start="49:43" pos:end="49:44">-&gt;</operator><name pos:start="49:45" pos:end="49:48">mb_x</name></name></expr></argument>, <argument pos:start="49:51" pos:end="49:57"><expr pos:start="49:51" pos:end="49:57"><name pos:start="49:51" pos:end="49:57"><name pos:start="49:51" pos:end="49:51">s</name><operator pos:start="49:52" pos:end="49:53">-&gt;</operator><name pos:start="49:54" pos:end="49:57">mb_y</name></name></expr></argument>, <argument pos:start="49:60" pos:end="49:60"><expr pos:start="49:60" pos:end="49:60"><name pos:start="49:60" pos:end="49:60">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
