<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7523.c" pos:tabs="8"><function pos:start="1:1" pos:end="547:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_h263_decode_frame</name><parameter_list pos:start="1:25" pos:end="3:41">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:58"><decl pos:start="1:49" pos:end="1:58"><type pos:start="1:49" pos:end="1:58"><name pos:start="1:49" pos:end="1:52">void</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">data</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:74"><decl pos:start="1:61" pos:end="1:74"><type pos:start="1:61" pos:end="1:74"><name pos:start="1:61" pos:end="1:63">int</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:74">got_frame</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:40"><decl pos:start="3:26" pos:end="3:40"><type pos:start="3:26" pos:end="3:40"><name pos:start="3:26" pos:end="3:33">AVPacket</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:40">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="547:1">{<block_content pos:start="7:5" pos:end="545:47">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">MpegEncContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name>  <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:17">pict</name> <init pos:start="15:19" pos:end="15:24">= <expr pos:start="15:21" pos:end="15:24"><name pos:start="15:21" pos:end="15:24">data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:12">flags</name></name>  <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:21">avctx</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:28">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:13">flags2</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:29"><name pos:start="21:17" pos:end="21:21">avctx</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:29">flags2</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="27:5" pos:end="49:5"><if pos:start="27:5" pos:end="49:5">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:16">buf_size</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>)</condition> <block pos:start="27:24" pos:end="49:5">{<block_content pos:start="31:9" pos:end="47:17">

        <comment type="block" pos:start="29:9" pos:end="29:43">/* special case for last picture */</comment>

        <if_stmt pos:start="31:9" pos:end="43:9"><if pos:start="31:9" pos:end="43:9">if <condition pos:start="31:12" pos:end="31:53">(<expr pos:start="31:13" pos:end="31:52"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:24">low_delay</name></name> <operator pos:start="31:26" pos:end="31:27">==</operator> <literal type="number" pos:start="31:29" pos:end="31:29">0</literal> <operator pos:start="31:31" pos:end="31:32">&amp;&amp;</operator> <name pos:start="31:34" pos:end="31:52"><name pos:start="31:34" pos:end="31:34">s</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:52">next_picture_ptr</name></name></expr>)</condition> <block pos:start="31:55" pos:end="43:9">{<block_content pos:start="33:13" pos:end="41:27">

            <if_stmt pos:start="33:13" pos:end="35:27"><if pos:start="33:13" pos:end="35:27">if <condition pos:start="33:16" pos:end="33:72">(<expr pos:start="33:17" pos:end="33:71"><operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:20">ret</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <call pos:start="33:24" pos:end="33:66"><name pos:start="33:24" pos:end="33:35">av_frame_ref</name><argument_list pos:start="33:36" pos:end="33:66">(<argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">pict</name></expr></argument>, <argument pos:start="33:43" pos:end="33:65"><expr pos:start="33:43" pos:end="33:65"><operator pos:start="33:43" pos:end="33:43">&amp;</operator><name pos:start="33:44" pos:end="33:65"><name pos:start="33:44" pos:end="33:44">s</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:62">next_picture_ptr</name><operator pos:start="33:63" pos:end="33:64">-&gt;</operator><name pos:start="33:65" pos:end="33:65">f</name></name></expr></argument>)</argument_list></call><operator pos:start="33:67" pos:end="33:67">)</operator> <operator pos:start="33:69" pos:end="33:69">&lt;</operator> <literal type="number" pos:start="33:71" pos:end="33:71">0</literal></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:27"><block_content pos:start="35:17" pos:end="35:27">

                <return pos:start="35:17" pos:end="35:27">return <expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:39"><expr pos:start="37:13" pos:end="37:38"><name pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:31">next_picture_ptr</name></name> <operator pos:start="37:33" pos:end="37:33">=</operator> <name pos:start="37:35" pos:end="37:38">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="41:13" pos:end="41:27"><expr pos:start="41:13" pos:end="41:26"><operator pos:start="41:13" pos:end="41:13">*</operator><name pos:start="41:14" pos:end="41:22">got_frame</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <literal type="number" pos:start="41:26" pos:end="41:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="85:5"><if pos:start="53:5" pos:end="85:5">if <condition pos:start="53:8" pos:end="53:40">(<expr pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:16">flags</name></name> <operator pos:start="53:18" pos:end="53:18">&amp;</operator> <name pos:start="53:20" pos:end="53:39">CODEC_FLAG_TRUNCATED</name></expr>)</condition> <block pos:start="53:42" pos:end="85:5">{<block_content pos:start="55:9" pos:end="83:28">

        <decl_stmt pos:start="55:9" pos:end="55:17"><decl pos:start="55:9" pos:end="55:16"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:16">next</name></decl>;</decl_stmt>



        <if_stmt pos:start="59:9" pos:end="75:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:69">(<expr pos:start="59:13" pos:end="59:68"><name pos:start="59:13" pos:end="59:32">CONFIG_MPEG4_DECODER</name> <operator pos:start="59:34" pos:end="59:35">&amp;&amp;</operator> <name pos:start="59:37" pos:end="59:47"><name pos:start="59:37" pos:end="59:37">s</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:47">codec_id</name></name> <operator pos:start="59:49" pos:end="59:50">==</operator> <name pos:start="59:52" pos:end="59:68">AV_CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="59:71" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:77">

            <expr_stmt pos:start="61:13" pos:end="61:77"><expr pos:start="61:13" pos:end="61:76"><name pos:start="61:13" pos:end="61:16">next</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:76"><name pos:start="61:20" pos:end="61:42">ff_mpeg4_find_frame_end</name><argument_list pos:start="61:43" pos:end="61:76">(<argument pos:start="61:44" pos:end="61:60"><expr pos:start="61:44" pos:end="61:60"><operator pos:start="61:44" pos:end="61:44">&amp;</operator><name pos:start="61:45" pos:end="61:60"><name pos:start="61:45" pos:end="61:45">s</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:60">parse_context</name></name></expr></argument>, <argument pos:start="61:63" pos:end="61:65"><expr pos:start="61:63" pos:end="61:65"><name pos:start="61:63" pos:end="61:65">buf</name></expr></argument>, <argument pos:start="61:68" pos:end="61:75"><expr pos:start="61:68" pos:end="61:75"><name pos:start="61:68" pos:end="61:75">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="63:11" pos:end="67:9">else if <condition pos:start="63:19" pos:end="63:74">(<expr pos:start="63:20" pos:end="63:73"><name pos:start="63:20" pos:end="63:38">CONFIG_H263_DECODER</name> <operator pos:start="63:40" pos:end="63:41">&amp;&amp;</operator> <name pos:start="63:43" pos:end="63:53"><name pos:start="63:43" pos:end="63:43">s</name><operator pos:start="63:44" pos:end="63:45">-&gt;</operator><name pos:start="63:46" pos:end="63:53">codec_id</name></name> <operator pos:start="63:55" pos:end="63:56">==</operator> <name pos:start="63:58" pos:end="63:73">AV_CODEC_ID_H263</name></expr>)</condition> <block pos:start="63:76" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:76">

            <expr_stmt pos:start="65:13" pos:end="65:76"><expr pos:start="65:13" pos:end="65:75"><name pos:start="65:13" pos:end="65:16">next</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <call pos:start="65:20" pos:end="65:75"><name pos:start="65:20" pos:end="65:41">ff_h263_find_frame_end</name><argument_list pos:start="65:42" pos:end="65:75">(<argument pos:start="65:43" pos:end="65:59"><expr pos:start="65:43" pos:end="65:59"><operator pos:start="65:43" pos:end="65:43">&amp;</operator><name pos:start="65:44" pos:end="65:59"><name pos:start="65:44" pos:end="65:44">s</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:59">parse_context</name></name></expr></argument>, <argument pos:start="65:62" pos:end="65:64"><expr pos:start="65:62" pos:end="65:64"><name pos:start="65:62" pos:end="65:64">buf</name></expr></argument>, <argument pos:start="65:67" pos:end="65:74"><expr pos:start="65:67" pos:end="65:74"><name pos:start="65:67" pos:end="65:74">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="75:9">else <block pos:start="67:16" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:35">

            <expr_stmt pos:start="69:13" pos:end="71:73"><expr pos:start="69:13" pos:end="71:72"><call pos:start="69:13" pos:end="71:72"><name pos:start="69:13" pos:end="69:18">av_log</name><argument_list pos:start="69:19" pos:end="71:72">(<argument pos:start="69:20" pos:end="69:27"><expr pos:start="69:20" pos:end="69:27"><name pos:start="69:20" pos:end="69:27"><name pos:start="69:20" pos:end="69:20">s</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:27">avctx</name></name></expr></argument>, <argument pos:start="69:30" pos:end="69:41"><expr pos:start="69:30" pos:end="69:41"><name pos:start="69:30" pos:end="69:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="71:20" pos:end="71:71"><expr pos:start="71:20" pos:end="71:71"><literal type="string" pos:start="71:20" pos:end="71:71">"this codec does not support truncated bitstreams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="73:13" pos:end="73:35">return <expr pos:start="73:20" pos:end="73:34"><call pos:start="73:20" pos:end="73:34"><name pos:start="73:20" pos:end="73:26">AVERROR</name><argument_list pos:start="73:27" pos:end="73:34">(<argument pos:start="73:28" pos:end="73:33"><expr pos:start="73:28" pos:end="73:33"><name pos:start="73:28" pos:end="73:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="79:9" pos:end="83:28"><if pos:start="79:9" pos:end="83:28">if <condition pos:start="79:12" pos:end="81:44">(<expr pos:start="79:13" pos:end="81:43"><call pos:start="79:13" pos:end="81:39"><name pos:start="79:13" pos:end="79:28">ff_combine_frame</name><argument_list pos:start="79:29" pos:end="81:39">(<argument pos:start="79:30" pos:end="79:46"><expr pos:start="79:30" pos:end="79:46"><operator pos:start="79:30" pos:end="79:30">&amp;</operator><name pos:start="79:31" pos:end="79:46"><name pos:start="79:31" pos:end="79:31">s</name><operator pos:start="79:32" pos:end="79:33">-&gt;</operator><name pos:start="79:34" pos:end="79:46">parse_context</name></name></expr></argument>, <argument pos:start="79:49" pos:end="79:52"><expr pos:start="79:49" pos:end="79:52"><name pos:start="79:49" pos:end="79:52">next</name></expr></argument>, <argument pos:start="79:55" pos:end="79:76"><expr pos:start="79:55" pos:end="79:76"><operator pos:start="79:55" pos:end="79:55">(</operator><specifier pos:start="79:56" pos:end="79:60">const</specifier> <name pos:start="79:62" pos:end="79:68">uint8_t</name> <operator pos:start="79:70" pos:end="79:70">*</operator><operator pos:start="79:71" pos:end="79:71">*</operator><operator pos:start="79:72" pos:end="79:72">)</operator><operator pos:start="79:73" pos:end="79:73">&amp;</operator><name pos:start="79:74" pos:end="79:76">buf</name></expr></argument>,

                             <argument pos:start="81:30" pos:end="81:38"><expr pos:start="81:30" pos:end="81:38"><operator pos:start="81:30" pos:end="81:30">&amp;</operator><name pos:start="81:31" pos:end="81:38">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="81:41" pos:end="81:41">&lt;</operator> <literal type="number" pos:start="81:43" pos:end="81:43">0</literal></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:28"><block_content pos:start="83:13" pos:end="83:28">

            <return pos:start="83:13" pos:end="83:28">return <expr pos:start="83:20" pos:end="83:27"><name pos:start="83:20" pos:end="83:27">buf_size</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="97:52"><if pos:start="89:5" pos:end="93:55">if <condition pos:start="89:8" pos:end="89:70">(<expr pos:start="89:9" pos:end="89:69"><name pos:start="89:9" pos:end="89:32"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:32">bitstream_buffer_size</name></name> <operator pos:start="89:34" pos:end="89:35">&amp;&amp;</operator> <operator pos:start="89:37" pos:end="89:37">(</operator><name pos:start="89:38" pos:end="89:51"><name pos:start="89:38" pos:end="89:38">s</name><operator pos:start="89:39" pos:end="89:40">-&gt;</operator><name pos:start="89:41" pos:end="89:51">divx_packed</name></name> <operator pos:start="89:53" pos:end="89:54">||</operator> <name pos:start="89:56" pos:end="89:63">buf_size</name> <operator pos:start="89:65" pos:end="89:65">&lt;</operator> <literal type="number" pos:start="89:67" pos:end="89:68">20</literal><operator pos:start="89:69" pos:end="89:69">)</operator></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="93:55"><block_content pos:start="91:9" pos:end="93:55"> <comment type="line" pos:start="89:72" pos:end="89:103">// divx 5.01+/xvid frame reorder</comment>

        <expr_stmt pos:start="91:9" pos:end="93:55"><expr pos:start="91:9" pos:end="93:54"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="93:54"><name pos:start="91:15" pos:end="91:28">init_get_bits8</name><argument_list pos:start="91:29" pos:end="93:54">(<argument pos:start="91:30" pos:end="91:35"><expr pos:start="91:30" pos:end="91:35"><operator pos:start="91:30" pos:end="91:30">&amp;</operator><name pos:start="91:31" pos:end="91:35"><name pos:start="91:31" pos:end="91:31">s</name><operator pos:start="91:32" pos:end="91:33">-&gt;</operator><name pos:start="91:34" pos:end="91:35">gb</name></name></expr></argument>, <argument pos:start="91:38" pos:end="91:56"><expr pos:start="91:38" pos:end="91:56"><name pos:start="91:38" pos:end="91:56"><name pos:start="91:38" pos:end="91:38">s</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:56">bitstream_buffer</name></name></expr></argument>,

                             <argument pos:start="93:30" pos:end="93:53"><expr pos:start="93:30" pos:end="93:53"><name pos:start="93:30" pos:end="93:53"><name pos:start="93:30" pos:end="93:30">s</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:53">bitstream_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="95:5" pos:end="97:52">else<block type="pseudo" pos:start="97:9" pos:end="97:52"><block_content pos:start="97:9" pos:end="97:52">

        <expr_stmt pos:start="97:9" pos:end="97:52"><expr pos:start="97:9" pos:end="97:51"><name pos:start="97:9" pos:end="97:11">ret</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <call pos:start="97:15" pos:end="97:51"><name pos:start="97:15" pos:end="97:28">init_get_bits8</name><argument_list pos:start="97:29" pos:end="97:51">(<argument pos:start="97:30" pos:end="97:35"><expr pos:start="97:30" pos:end="97:35"><operator pos:start="97:30" pos:end="97:30">&amp;</operator><name pos:start="97:31" pos:end="97:35"><name pos:start="97:31" pos:end="97:31">s</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:35">gb</name></name></expr></argument>, <argument pos:start="97:38" pos:end="97:40"><expr pos:start="97:38" pos:end="97:40"><name pos:start="97:38" pos:end="97:40">buf</name></expr></argument>, <argument pos:start="97:43" pos:end="97:50"><expr pos:start="97:43" pos:end="97:50"><name pos:start="97:43" pos:end="97:50">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:33"><expr pos:start="99:5" pos:end="99:32"><name pos:start="99:5" pos:end="99:28"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:28">bitstream_buffer_size</name></name> <operator pos:start="99:30" pos:end="99:30">=</operator> <literal type="number" pos:start="99:32" pos:end="99:32">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="103:5" pos:end="105:19"><if pos:start="103:5" pos:end="105:19">if <condition pos:start="103:8" pos:end="103:16">(<expr pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">&lt;</operator> <literal type="number" pos:start="103:15" pos:end="103:15">0</literal></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:19"><block_content pos:start="105:9" pos:end="105:19">

        <return pos:start="105:9" pos:end="105:19">return <expr pos:start="105:16" pos:end="105:18"><name pos:start="105:16" pos:end="105:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="115:23"><if pos:start="109:5" pos:end="115:23">if <condition pos:start="109:8" pos:end="109:32">(<expr pos:start="109:9" pos:end="109:31"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:31"><name pos:start="109:10" pos:end="109:10">s</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:31">context_initialized</name></name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="115:23"><block_content pos:start="113:9" pos:end="115:23">

        <comment type="line" pos:start="111:9" pos:end="111:66">// we need the idct permutaton for reading a custom matrix</comment>

        <if_stmt pos:start="113:9" pos:end="115:23"><if pos:start="113:9" pos:end="115:23">if <condition pos:start="113:12" pos:end="113:46">(<expr pos:start="113:13" pos:end="113:45"><operator pos:start="113:13" pos:end="113:13">(</operator><name pos:start="113:14" pos:end="113:16">ret</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <call pos:start="113:20" pos:end="113:40"><name pos:start="113:20" pos:end="113:37">ff_MPV_common_init</name><argument_list pos:start="113:38" pos:end="113:40">(<argument pos:start="113:39" pos:end="113:39"><expr pos:start="113:39" pos:end="113:39"><name pos:start="113:39" pos:end="113:39">s</name></expr></argument>)</argument_list></call><operator pos:start="113:41" pos:end="113:41">)</operator> <operator pos:start="113:43" pos:end="113:43">&lt;</operator> <literal type="number" pos:start="113:45" pos:end="113:45">0</literal></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:23"><block_content pos:start="115:13" pos:end="115:23">

            <return pos:start="115:13" pos:end="115:23">return <expr pos:start="115:20" pos:end="115:22"><name pos:start="115:20" pos:end="115:22">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="119:5" pos:end="121:52">/* We need to set current_picture_ptr before reading the header,

     * otherwise we cannot store anyting in there */</comment>

    <if_stmt pos:start="123:5" pos:end="133:5"><if pos:start="123:5" pos:end="133:5">if <condition pos:start="123:8" pos:end="123:76">(<expr pos:start="123:9" pos:end="123:75"><name pos:start="123:9" pos:end="123:30"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:30">current_picture_ptr</name></name> <operator pos:start="123:32" pos:end="123:33">==</operator> <name pos:start="123:35" pos:end="123:38">NULL</name> <operator pos:start="123:40" pos:end="123:41">||</operator> <name pos:start="123:43" pos:end="123:75"><name pos:start="123:43" pos:end="123:43">s</name><operator pos:start="123:44" pos:end="123:45">-&gt;</operator><name pos:start="123:46" pos:end="123:64">current_picture_ptr</name><operator pos:start="123:65" pos:end="123:66">-&gt;</operator><name pos:start="123:67" pos:end="123:67">f</name><operator pos:start="123:68" pos:end="123:68">.</operator><name pos:start="123:69" pos:end="123:72">data</name><index pos:start="123:73" pos:end="123:75">[<expr pos:start="123:74" pos:end="123:74"><literal type="number" pos:start="123:74" pos:end="123:74">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="123:78" pos:end="133:5">{<block_content pos:start="125:9" pos:end="131:48">

        <decl_stmt pos:start="125:9" pos:end="125:45"><decl pos:start="125:9" pos:end="125:44"><type pos:start="125:9" pos:end="125:11"><name pos:start="125:9" pos:end="125:11">int</name></type> <name pos:start="125:13" pos:end="125:13">i</name> <init pos:start="125:15" pos:end="125:44">= <expr pos:start="125:17" pos:end="125:44"><call pos:start="125:17" pos:end="125:44"><name pos:start="125:17" pos:end="125:38">ff_find_unused_picture</name><argument_list pos:start="125:39" pos:end="125:44">(<argument pos:start="125:40" pos:end="125:40"><expr pos:start="125:40" pos:end="125:40"><name pos:start="125:40" pos:end="125:40">s</name></expr></argument>, <argument pos:start="125:43" pos:end="125:43"><expr pos:start="125:43" pos:end="125:43"><literal type="number" pos:start="125:43" pos:end="125:43">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="127:9" pos:end="129:21"><if pos:start="127:9" pos:end="129:21">if <condition pos:start="127:12" pos:end="127:18">(<expr pos:start="127:13" pos:end="127:17"><name pos:start="127:13" pos:end="127:13">i</name> <operator pos:start="127:15" pos:end="127:15">&lt;</operator> <literal type="number" pos:start="127:17" pos:end="127:17">0</literal></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:21"><block_content pos:start="129:13" pos:end="129:21">

            <return pos:start="129:13" pos:end="129:21">return <expr pos:start="129:20" pos:end="129:20"><name pos:start="129:20" pos:end="129:20">i</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:48"><expr pos:start="131:9" pos:end="131:47"><name pos:start="131:9" pos:end="131:30"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:30">current_picture_ptr</name></name> <operator pos:start="131:32" pos:end="131:32">=</operator> <operator pos:start="131:34" pos:end="131:34">&amp;</operator><name pos:start="131:35" pos:end="131:47"><name pos:start="131:35" pos:end="131:35">s</name><operator pos:start="131:36" pos:end="131:37">-&gt;</operator><name pos:start="131:38" pos:end="131:44">picture</name><index pos:start="131:45" pos:end="131:47">[<expr pos:start="131:46" pos:end="131:46"><name pos:start="131:46" pos:end="131:46">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:22">/* let's go :-) */</comment>

    <if_stmt pos:start="139:5" pos:end="181:5"><if pos:start="139:5" pos:end="143:5">if <condition pos:start="139:8" pos:end="139:55">(<expr pos:start="139:9" pos:end="139:54"><name pos:start="139:9" pos:end="139:27">CONFIG_WMV2_DECODER</name> <operator pos:start="139:29" pos:end="139:30">&amp;&amp;</operator> <name pos:start="139:32" pos:end="139:49"><name pos:start="139:32" pos:end="139:32">s</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:49">msmpeg4_version</name></name> <operator pos:start="139:51" pos:end="139:52">==</operator> <literal type="number" pos:start="139:54" pos:end="139:54">5</literal></expr>)</condition> <block pos:start="139:57" pos:end="143:5">{<block_content pos:start="141:9" pos:end="141:47">

        <expr_stmt pos:start="141:9" pos:end="141:47"><expr pos:start="141:9" pos:end="141:46"><name pos:start="141:9" pos:end="141:11">ret</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:46"><name pos:start="141:15" pos:end="141:43">ff_wmv2_decode_picture_header</name><argument_list pos:start="141:44" pos:end="141:46">(<argument pos:start="141:45" pos:end="141:45"><expr pos:start="141:45" pos:end="141:45"><name pos:start="141:45" pos:end="141:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="143:7" pos:end="147:5">else if <condition pos:start="143:15" pos:end="143:60">(<expr pos:start="143:16" pos:end="143:59"><name pos:start="143:16" pos:end="143:37">CONFIG_MSMPEG4_DECODER</name> <operator pos:start="143:39" pos:end="143:40">&amp;&amp;</operator> <name pos:start="143:42" pos:end="143:59"><name pos:start="143:42" pos:end="143:42">s</name><operator pos:start="143:43" pos:end="143:44">-&gt;</operator><name pos:start="143:45" pos:end="143:59">msmpeg4_version</name></name></expr>)</condition> <block pos:start="143:62" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:50">

        <expr_stmt pos:start="145:9" pos:end="145:50"><expr pos:start="145:9" pos:end="145:49"><name pos:start="145:9" pos:end="145:11">ret</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <call pos:start="145:15" pos:end="145:49"><name pos:start="145:15" pos:end="145:46">ff_msmpeg4_decode_picture_header</name><argument_list pos:start="145:47" pos:end="145:49">(<argument pos:start="145:48" pos:end="145:48"><expr pos:start="145:48" pos:end="145:48"><name pos:start="145:48" pos:end="145:48">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="147:7" pos:end="169:5">else if <condition pos:start="147:15" pos:end="147:76">(<expr pos:start="147:16" pos:end="147:75"><name pos:start="147:16" pos:end="147:35">CONFIG_MPEG4_DECODER</name> <operator pos:start="147:37" pos:end="147:38">&amp;&amp;</operator> <name pos:start="147:40" pos:end="147:54"><name pos:start="147:40" pos:end="147:44">avctx</name><operator pos:start="147:45" pos:end="147:46">-&gt;</operator><name pos:start="147:47" pos:end="147:54">codec_id</name></name> <operator pos:start="147:56" pos:end="147:57">==</operator> <name pos:start="147:59" pos:end="147:75">AV_CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="147:78" pos:end="169:5">{<block_content pos:start="149:9" pos:end="167:71">

        <if_stmt pos:start="149:9" pos:end="165:9"><if pos:start="149:9" pos:end="165:9">if <condition pos:start="149:12" pos:end="149:63">(<expr pos:start="149:13" pos:end="149:62"><name pos:start="149:13" pos:end="149:36"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:20">avctx</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:36">extradata_size</name></name> <operator pos:start="149:38" pos:end="149:39">&amp;&amp;</operator> <name pos:start="149:41" pos:end="149:57"><name pos:start="149:41" pos:end="149:41">s</name><operator pos:start="149:42" pos:end="149:43">-&gt;</operator><name pos:start="149:44" pos:end="149:57">picture_number</name></name> <operator pos:start="149:59" pos:end="149:60">==</operator> <literal type="number" pos:start="149:62" pos:end="149:62">0</literal></expr>)</condition> <block pos:start="149:65" pos:end="165:9">{<block_content pos:start="151:13" pos:end="163:66">

            <decl_stmt pos:start="151:13" pos:end="151:29"><decl pos:start="151:13" pos:end="151:28"><type pos:start="151:13" pos:end="151:25"><name pos:start="151:13" pos:end="151:25">GetBitContext</name></type> <name pos:start="151:27" pos:end="151:28">gb</name></decl>;</decl_stmt>



            <expr_stmt pos:start="155:13" pos:end="157:59"><expr pos:start="155:13" pos:end="157:58"><name pos:start="155:13" pos:end="155:15">ret</name> <operator pos:start="155:17" pos:end="155:17">=</operator> <call pos:start="155:19" pos:end="157:58"><name pos:start="155:19" pos:end="155:32">init_get_bits8</name><argument_list pos:start="155:33" pos:end="157:58">(<argument pos:start="155:34" pos:end="155:36"><expr pos:start="155:34" pos:end="155:36"><operator pos:start="155:34" pos:end="155:34">&amp;</operator><name pos:start="155:35" pos:end="155:36">gb</name></expr></argument>, <argument pos:start="155:39" pos:end="155:57"><expr pos:start="155:39" pos:end="155:57"><name pos:start="155:39" pos:end="155:57"><name pos:start="155:39" pos:end="155:39">s</name><operator pos:start="155:40" pos:end="155:41">-&gt;</operator><name pos:start="155:42" pos:end="155:46">avctx</name><operator pos:start="155:47" pos:end="155:48">-&gt;</operator><name pos:start="155:49" pos:end="155:57">extradata</name></name></expr></argument>,

                                 <argument pos:start="157:34" pos:end="157:57"><expr pos:start="157:34" pos:end="157:57"><name pos:start="157:34" pos:end="157:57"><name pos:start="157:34" pos:end="157:34">s</name><operator pos:start="157:35" pos:end="157:36">-&gt;</operator><name pos:start="157:37" pos:end="157:41">avctx</name><operator pos:start="157:42" pos:end="157:43">-&gt;</operator><name pos:start="157:44" pos:end="157:57">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="161:27"><if pos:start="159:13" pos:end="161:27">if <condition pos:start="159:16" pos:end="159:24">(<expr pos:start="159:17" pos:end="159:23"><name pos:start="159:17" pos:end="159:19">ret</name> <operator pos:start="159:21" pos:end="159:21">&lt;</operator> <literal type="number" pos:start="159:23" pos:end="159:23">0</literal></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:27"><block_content pos:start="161:17" pos:end="161:27">

                <return pos:start="161:17" pos:end="161:27">return <expr pos:start="161:24" pos:end="161:26"><name pos:start="161:24" pos:end="161:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:66"><expr pos:start="163:13" pos:end="163:65"><call pos:start="163:13" pos:end="163:65"><name pos:start="163:13" pos:end="163:42">ff_mpeg4_decode_picture_header</name><argument_list pos:start="163:43" pos:end="163:65">(<argument pos:start="163:44" pos:end="163:59"><expr pos:start="163:44" pos:end="163:59"><name pos:start="163:44" pos:end="163:59"><name pos:start="163:44" pos:end="163:48">avctx</name><operator pos:start="163:49" pos:end="163:50">-&gt;</operator><name pos:start="163:51" pos:end="163:59">priv_data</name></name></expr></argument>, <argument pos:start="163:62" pos:end="163:64"><expr pos:start="163:62" pos:end="163:64"><operator pos:start="163:62" pos:end="163:62">&amp;</operator><name pos:start="163:63" pos:end="163:64">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:71"><expr pos:start="167:9" pos:end="167:70"><name pos:start="167:9" pos:end="167:11">ret</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <call pos:start="167:15" pos:end="167:70"><name pos:start="167:15" pos:end="167:44">ff_mpeg4_decode_picture_header</name><argument_list pos:start="167:45" pos:end="167:70">(<argument pos:start="167:46" pos:end="167:61"><expr pos:start="167:46" pos:end="167:61"><name pos:start="167:46" pos:end="167:61"><name pos:start="167:46" pos:end="167:50">avctx</name><operator pos:start="167:51" pos:end="167:52">-&gt;</operator><name pos:start="167:53" pos:end="167:61">priv_data</name></name></expr></argument>, <argument pos:start="167:64" pos:end="167:69"><expr pos:start="167:64" pos:end="167:69"><operator pos:start="167:64" pos:end="167:64">&amp;</operator><name pos:start="167:65" pos:end="167:69"><name pos:start="167:65" pos:end="167:65">s</name><operator pos:start="167:66" pos:end="167:67">-&gt;</operator><name pos:start="167:68" pos:end="167:69">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="169:7" pos:end="173:5">else if <condition pos:start="169:15" pos:end="169:72">(<expr pos:start="169:16" pos:end="169:71"><name pos:start="169:16" pos:end="169:35">CONFIG_H263I_DECODER</name> <operator pos:start="169:37" pos:end="169:38">&amp;&amp;</operator> <name pos:start="169:40" pos:end="169:50"><name pos:start="169:40" pos:end="169:40">s</name><operator pos:start="169:41" pos:end="169:42">-&gt;</operator><name pos:start="169:43" pos:end="169:50">codec_id</name></name> <operator pos:start="169:52" pos:end="169:53">==</operator> <name pos:start="169:55" pos:end="169:71">AV_CODEC_ID_H263I</name></expr>)</condition> <block pos:start="169:74" pos:end="173:5">{<block_content pos:start="171:9" pos:end="171:53">

        <expr_stmt pos:start="171:9" pos:end="171:53"><expr pos:start="171:9" pos:end="171:52"><name pos:start="171:9" pos:end="171:11">ret</name> <operator pos:start="171:13" pos:end="171:13">=</operator> <call pos:start="171:15" pos:end="171:52"><name pos:start="171:15" pos:end="171:49">ff_intel_h263_decode_picture_header</name><argument_list pos:start="171:50" pos:end="171:52">(<argument pos:start="171:51" pos:end="171:51"><expr pos:start="171:51" pos:end="171:51"><name pos:start="171:51" pos:end="171:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="173:7" pos:end="177:5">else if <condition pos:start="173:15" pos:end="173:49">(<expr pos:start="173:16" pos:end="173:48"><name pos:start="173:16" pos:end="173:33">CONFIG_FLV_DECODER</name> <operator pos:start="173:35" pos:end="173:36">&amp;&amp;</operator> <name pos:start="173:38" pos:end="173:48"><name pos:start="173:38" pos:end="173:38">s</name><operator pos:start="173:39" pos:end="173:40">-&gt;</operator><name pos:start="173:41" pos:end="173:48">h263_flv</name></name></expr>)</condition> <block pos:start="173:51" pos:end="177:5">{<block_content pos:start="175:9" pos:end="175:46">

        <expr_stmt pos:start="175:9" pos:end="175:46"><expr pos:start="175:9" pos:end="175:45"><name pos:start="175:9" pos:end="175:11">ret</name> <operator pos:start="175:13" pos:end="175:13">=</operator> <call pos:start="175:15" pos:end="175:45"><name pos:start="175:15" pos:end="175:42">ff_flv_decode_picture_header</name><argument_list pos:start="175:43" pos:end="175:45">(<argument pos:start="175:44" pos:end="175:44"><expr pos:start="175:44" pos:end="175:44"><name pos:start="175:44" pos:end="175:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="181:5">else <block pos:start="177:12" pos:end="181:5">{<block_content pos:start="179:9" pos:end="179:47">

        <expr_stmt pos:start="179:9" pos:end="179:47"><expr pos:start="179:9" pos:end="179:46"><name pos:start="179:9" pos:end="179:11">ret</name> <operator pos:start="179:13" pos:end="179:13">=</operator> <call pos:start="179:15" pos:end="179:46"><name pos:start="179:15" pos:end="179:43">ff_h263_decode_picture_header</name><argument_list pos:start="179:44" pos:end="179:46">(<argument pos:start="179:45" pos:end="179:45"><expr pos:start="179:45" pos:end="179:45"><name pos:start="179:45" pos:end="179:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="185:5" pos:end="187:47"><if pos:start="185:5" pos:end="187:47">if <condition pos:start="185:8" pos:end="185:29">(<expr pos:start="185:9" pos:end="185:28"><name pos:start="185:9" pos:end="185:11">ret</name> <operator pos:start="185:13" pos:end="185:14">==</operator> <name pos:start="185:16" pos:end="185:28">FRAME_SKIPPED</name></expr>)</condition><block type="pseudo" pos:start="187:9" pos:end="187:47"><block_content pos:start="187:9" pos:end="187:47">

        <return pos:start="187:9" pos:end="187:47">return <expr pos:start="187:16" pos:end="187:46"><call pos:start="187:16" pos:end="187:46"><name pos:start="187:16" pos:end="187:33">get_consumed_bytes</name><argument_list pos:start="187:34" pos:end="187:46">(<argument pos:start="187:35" pos:end="187:35"><expr pos:start="187:35" pos:end="187:35"><name pos:start="187:35" pos:end="187:35">s</name></expr></argument>, <argument pos:start="187:38" pos:end="187:45"><expr pos:start="187:38" pos:end="187:45"><name pos:start="187:38" pos:end="187:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="191:5" pos:end="191:41">/* skip if the header was thrashed */</comment>

    <if_stmt pos:start="193:5" pos:end="199:5"><if pos:start="193:5" pos:end="199:5">if <condition pos:start="193:8" pos:end="193:16">(<expr pos:start="193:9" pos:end="193:15"><name pos:start="193:9" pos:end="193:11">ret</name> <operator pos:start="193:13" pos:end="193:13">&lt;</operator> <literal type="number" pos:start="193:15" pos:end="193:15">0</literal></expr>)</condition> <block pos:start="193:18" pos:end="199:5">{<block_content pos:start="195:9" pos:end="197:19">

        <expr_stmt pos:start="195:9" pos:end="195:59"><expr pos:start="195:9" pos:end="195:58"><call pos:start="195:9" pos:end="195:58"><name pos:start="195:9" pos:end="195:14">av_log</name><argument_list pos:start="195:15" pos:end="195:58">(<argument pos:start="195:16" pos:end="195:23"><expr pos:start="195:16" pos:end="195:23"><name pos:start="195:16" pos:end="195:23"><name pos:start="195:16" pos:end="195:16">s</name><operator pos:start="195:17" pos:end="195:18">-&gt;</operator><name pos:start="195:19" pos:end="195:23">avctx</name></name></expr></argument>, <argument pos:start="195:26" pos:end="195:37"><expr pos:start="195:26" pos:end="195:37"><name pos:start="195:26" pos:end="195:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="195:40" pos:end="195:57"><expr pos:start="195:40" pos:end="195:57"><literal type="string" pos:start="195:40" pos:end="195:57">"header damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="197:9" pos:end="197:19">return <expr pos:start="197:16" pos:end="197:18"><name pos:start="197:16" pos:end="197:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="203:5" pos:end="214:0"><expr pos:start="203:5" pos:end="203:39"><name pos:start="203:5" pos:end="203:23"><name pos:start="203:5" pos:end="203:9">avctx</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:23">has_b_frames</name></name> <operator pos:start="203:25" pos:end="203:25">=</operator> <operator pos:start="203:27" pos:end="203:27">!</operator><name pos:start="203:28" pos:end="203:39"><name pos:start="203:28" pos:end="203:28">s</name><operator pos:start="203:29" pos:end="203:30">-&gt;</operator><name pos:start="203:31" pos:end="203:39">low_delay</name></name></expr>;</expr_stmt>



<cpp:define pos:start="207:1" pos:end="213:64">#<cpp:directive pos:start="207:2" pos:end="207:7">define</cpp:directive> <cpp:macro pos:start="207:9" pos:end="207:41"><name pos:start="207:9" pos:end="207:21">SET_QPEL_FUNC</name><parameter_list pos:start="207:22" pos:end="207:41">(<parameter pos:start="207:23" pos:end="207:30"><type pos:start="207:23" pos:end="207:30"><name pos:start="207:23" pos:end="207:30">postfix1</name></type></parameter>, <parameter pos:start="207:33" pos:end="207:40"><type pos:start="207:33" pos:end="207:40"><name pos:start="207:33" pos:end="207:40">postfix2</name></type></parameter>)</parameter_list></cpp:macro>                           \

    <cpp:value pos:start="209:5" pos:end="213:64">s-&gt;dsp.put_        ## postfix1 = ff_put_        ## postfix2;    \

    s-&gt;dsp.put_no_rnd_ ## postfix1 = ff_put_no_rnd_ ## postfix2;    \

    s-&gt;dsp.avg_        ## postfix1 = ff_avg_        ## postfix2;</cpp:value></cpp:define>



    <if_stmt pos:start="217:5" pos:end="245:5"><if pos:start="217:5" pos:end="245:5">if <condition pos:start="217:8" pos:end="217:45">(<expr pos:start="217:9" pos:end="217:44"><name pos:start="217:9" pos:end="217:26"><name pos:start="217:9" pos:end="217:9">s</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:26">workaround_bugs</name></name> <operator pos:start="217:28" pos:end="217:28">&amp;</operator> <name pos:start="217:30" pos:end="217:44">FF_BUG_STD_QPEL</name></expr>)</condition> <block pos:start="217:47" pos:end="245:5">{<block_content pos:start="219:9" pos:end="243:63">

        <macro pos:start="219:9" pos:end="219:63"><name pos:start="219:9" pos:end="219:21">SET_QPEL_FUNC</name><argument_list pos:start="219:22" pos:end="219:63">(<argument pos:start="219:23" pos:end="219:43">qpel_pixels_tab[<literal type="number" pos:start="219:39" pos:end="219:39">0</literal>][<literal type="number" pos:start="219:42" pos:end="219:42">5</literal>]</argument>, <argument pos:start="219:46" pos:end="219:62">qpel16_mc11_old_c</argument>)</argument_list></macro>

        <macro pos:start="221:9" pos:end="221:63"><name pos:start="221:9" pos:end="221:21">SET_QPEL_FUNC</name><argument_list pos:start="221:22" pos:end="221:63">(<argument pos:start="221:23" pos:end="221:43">qpel_pixels_tab[<literal type="number" pos:start="221:39" pos:end="221:39">0</literal>][<literal type="number" pos:start="221:42" pos:end="221:42">7</literal>]</argument>, <argument pos:start="221:46" pos:end="221:62">qpel16_mc31_old_c</argument>)</argument_list></macro>

        <macro pos:start="223:9" pos:end="223:63"><name pos:start="223:9" pos:end="223:21">SET_QPEL_FUNC</name><argument_list pos:start="223:22" pos:end="223:63">(<argument pos:start="223:23" pos:end="223:43">qpel_pixels_tab[<literal type="number" pos:start="223:39" pos:end="223:39">0</literal>][<literal type="number" pos:start="223:42" pos:end="223:42">9</literal>]</argument>, <argument pos:start="223:46" pos:end="223:62">qpel16_mc12_old_c</argument>)</argument_list></macro>

        <macro pos:start="225:9" pos:end="225:64"><name pos:start="225:9" pos:end="225:21">SET_QPEL_FUNC</name><argument_list pos:start="225:22" pos:end="225:64">(<argument pos:start="225:23" pos:end="225:44">qpel_pixels_tab[<literal type="number" pos:start="225:39" pos:end="225:39">0</literal>][<literal type="number" pos:start="225:42" pos:end="225:43">11</literal>]</argument>, <argument pos:start="225:47" pos:end="225:63">qpel16_mc32_old_c</argument>)</argument_list></macro>

        <macro pos:start="227:9" pos:end="227:64"><name pos:start="227:9" pos:end="227:21">SET_QPEL_FUNC</name><argument_list pos:start="227:22" pos:end="227:64">(<argument pos:start="227:23" pos:end="227:44">qpel_pixels_tab[<literal type="number" pos:start="227:39" pos:end="227:39">0</literal>][<literal type="number" pos:start="227:42" pos:end="227:43">13</literal>]</argument>, <argument pos:start="227:47" pos:end="227:63">qpel16_mc13_old_c</argument>)</argument_list></macro>

        <macro pos:start="229:9" pos:end="229:64"><name pos:start="229:9" pos:end="229:21">SET_QPEL_FUNC</name><argument_list pos:start="229:22" pos:end="229:64">(<argument pos:start="229:23" pos:end="229:44">qpel_pixels_tab[<literal type="number" pos:start="229:39" pos:end="229:39">0</literal>][<literal type="number" pos:start="229:42" pos:end="229:43">15</literal>]</argument>, <argument pos:start="229:47" pos:end="229:63">qpel16_mc33_old_c</argument>)</argument_list></macro>



        <macro pos:start="233:9" pos:end="233:62"><name pos:start="233:9" pos:end="233:21">SET_QPEL_FUNC</name><argument_list pos:start="233:22" pos:end="233:62">(<argument pos:start="233:23" pos:end="233:43">qpel_pixels_tab[<literal type="number" pos:start="233:39" pos:end="233:39">1</literal>][<literal type="number" pos:start="233:42" pos:end="233:42">5</literal>]</argument>, <argument pos:start="233:46" pos:end="233:61">qpel8_mc11_old_c</argument>)</argument_list></macro>

        <macro pos:start="235:9" pos:end="235:62"><name pos:start="235:9" pos:end="235:21">SET_QPEL_FUNC</name><argument_list pos:start="235:22" pos:end="235:62">(<argument pos:start="235:23" pos:end="235:43">qpel_pixels_tab[<literal type="number" pos:start="235:39" pos:end="235:39">1</literal>][<literal type="number" pos:start="235:42" pos:end="235:42">7</literal>]</argument>, <argument pos:start="235:46" pos:end="235:61">qpel8_mc31_old_c</argument>)</argument_list></macro>

        <macro pos:start="237:9" pos:end="237:62"><name pos:start="237:9" pos:end="237:21">SET_QPEL_FUNC</name><argument_list pos:start="237:22" pos:end="237:62">(<argument pos:start="237:23" pos:end="237:43">qpel_pixels_tab[<literal type="number" pos:start="237:39" pos:end="237:39">1</literal>][<literal type="number" pos:start="237:42" pos:end="237:42">9</literal>]</argument>, <argument pos:start="237:46" pos:end="237:61">qpel8_mc12_old_c</argument>)</argument_list></macro>

        <macro pos:start="239:9" pos:end="239:63"><name pos:start="239:9" pos:end="239:21">SET_QPEL_FUNC</name><argument_list pos:start="239:22" pos:end="239:63">(<argument pos:start="239:23" pos:end="239:44">qpel_pixels_tab[<literal type="number" pos:start="239:39" pos:end="239:39">1</literal>][<literal type="number" pos:start="239:42" pos:end="239:43">11</literal>]</argument>, <argument pos:start="239:47" pos:end="239:62">qpel8_mc32_old_c</argument>)</argument_list></macro>

        <macro pos:start="241:9" pos:end="241:63"><name pos:start="241:9" pos:end="241:21">SET_QPEL_FUNC</name><argument_list pos:start="241:22" pos:end="241:63">(<argument pos:start="241:23" pos:end="241:44">qpel_pixels_tab[<literal type="number" pos:start="241:39" pos:end="241:39">1</literal>][<literal type="number" pos:start="241:42" pos:end="241:43">13</literal>]</argument>, <argument pos:start="241:47" pos:end="241:62">qpel8_mc13_old_c</argument>)</argument_list></macro>

        <macro pos:start="243:9" pos:end="243:63"><name pos:start="243:9" pos:end="243:21">SET_QPEL_FUNC</name><argument_list pos:start="243:22" pos:end="243:63">(<argument pos:start="243:23" pos:end="243:44">qpel_pixels_tab[<literal type="number" pos:start="243:39" pos:end="243:39">1</literal>][<literal type="number" pos:start="243:42" pos:end="243:43">15</literal>]</argument>, <argument pos:start="243:47" pos:end="243:62">qpel8_mc33_old_c</argument>)</argument_list></macro>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="249:5" pos:end="255:27">/* After H263 &amp; mpeg4 header decode we have the height, width,

     * and other parameters. So then we could init the picture.

     * FIXME: By the way H263 decoder is evolving it should have

     * an H263EncContext */</comment>

    <if_stmt pos:start="257:5" pos:end="281:5"><if pos:start="257:5" pos:end="281:5">if <condition pos:start="257:8" pos:end="261:26">(<expr pos:start="257:9" pos:end="261:25"><name pos:start="257:9" pos:end="257:16"><name pos:start="257:9" pos:end="257:9">s</name><operator pos:start="257:10" pos:end="257:11">-&gt;</operator><name pos:start="257:12" pos:end="257:16">width</name></name>  <operator pos:start="257:19" pos:end="257:20">!=</operator> <name pos:start="257:22" pos:end="257:39"><name pos:start="257:22" pos:end="257:26">avctx</name><operator pos:start="257:27" pos:end="257:28">-&gt;</operator><name pos:start="257:29" pos:end="257:39">coded_width</name></name>  <operator pos:start="257:42" pos:end="257:43">||</operator>

        <name pos:start="259:9" pos:end="259:17"><name pos:start="259:9" pos:end="259:9">s</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:17">height</name></name> <operator pos:start="259:19" pos:end="259:20">!=</operator> <name pos:start="259:22" pos:end="259:40"><name pos:start="259:22" pos:end="259:26">avctx</name><operator pos:start="259:27" pos:end="259:28">-&gt;</operator><name pos:start="259:29" pos:end="259:40">coded_height</name></name> <operator pos:start="259:42" pos:end="259:43">||</operator>

        <name pos:start="261:9" pos:end="261:25"><name pos:start="261:9" pos:end="261:9">s</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:25">context_reinit</name></name></expr>)</condition> <block pos:start="261:28" pos:end="281:5">{<block_content pos:start="265:9" pos:end="279:23">

        <comment type="block" pos:start="263:9" pos:end="263:54">/* H.263 could change picture size any time */</comment>

        <expr_stmt pos:start="265:9" pos:end="265:30"><expr pos:start="265:9" pos:end="265:29"><name pos:start="265:9" pos:end="265:25"><name pos:start="265:9" pos:end="265:9">s</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:25">context_reinit</name></name> <operator pos:start="265:27" pos:end="265:27">=</operator> <literal type="number" pos:start="265:29" pos:end="265:29">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="269:9" pos:end="269:60"><expr pos:start="269:9" pos:end="269:59"><name pos:start="269:9" pos:end="269:11">ret</name> <operator pos:start="269:13" pos:end="269:13">=</operator> <call pos:start="269:15" pos:end="269:59"><name pos:start="269:15" pos:end="269:31">ff_set_dimensions</name><argument_list pos:start="269:32" pos:end="269:59">(<argument pos:start="269:33" pos:end="269:37"><expr pos:start="269:33" pos:end="269:37"><name pos:start="269:33" pos:end="269:37">avctx</name></expr></argument>, <argument pos:start="269:40" pos:end="269:47"><expr pos:start="269:40" pos:end="269:47"><name pos:start="269:40" pos:end="269:47"><name pos:start="269:40" pos:end="269:40">s</name><operator pos:start="269:41" pos:end="269:42">-&gt;</operator><name pos:start="269:43" pos:end="269:47">width</name></name></expr></argument>, <argument pos:start="269:50" pos:end="269:58"><expr pos:start="269:50" pos:end="269:58"><name pos:start="269:50" pos:end="269:58"><name pos:start="269:50" pos:end="269:50">s</name><operator pos:start="269:51" pos:end="269:52">-&gt;</operator><name pos:start="269:53" pos:end="269:58">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="271:9" pos:end="273:23"><if pos:start="271:9" pos:end="273:23">if <condition pos:start="271:12" pos:end="271:20">(<expr pos:start="271:13" pos:end="271:19"><name pos:start="271:13" pos:end="271:15">ret</name> <operator pos:start="271:17" pos:end="271:17">&lt;</operator> <literal type="number" pos:start="271:19" pos:end="271:19">0</literal></expr>)</condition><block type="pseudo" pos:start="273:13" pos:end="273:23"><block_content pos:start="273:13" pos:end="273:23">

            <return pos:start="273:13" pos:end="273:23">return <expr pos:start="273:20" pos:end="273:22"><name pos:start="273:20" pos:end="273:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="277:9" pos:end="279:23"><if pos:start="277:9" pos:end="279:23">if <condition pos:start="277:12" pos:end="277:55">(<expr pos:start="277:13" pos:end="277:54"><operator pos:start="277:13" pos:end="277:13">(</operator><name pos:start="277:14" pos:end="277:16">ret</name> <operator pos:start="277:18" pos:end="277:18">=</operator> <call pos:start="277:20" pos:end="277:53"><name pos:start="277:20" pos:end="277:50">ff_MPV_common_frame_size_change</name><argument_list pos:start="277:51" pos:end="277:53">(<argument pos:start="277:52" pos:end="277:52"><expr pos:start="277:52" pos:end="277:52"><name pos:start="277:52" pos:end="277:52">s</name></expr></argument>)</argument_list></call><operator pos:start="277:54" pos:end="277:54">)</operator></expr>)</condition><block type="pseudo" pos:start="279:13" pos:end="279:23"><block_content pos:start="279:13" pos:end="279:23">

            <return pos:start="279:13" pos:end="279:23">return <expr pos:start="279:20" pos:end="279:22"><name pos:start="279:20" pos:end="279:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="285:5" pos:end="291:49"><if pos:start="285:5" pos:end="291:49">if <condition pos:start="285:8" pos:end="289:41">(<expr pos:start="285:9" pos:end="289:40"><name pos:start="285:9" pos:end="285:19"><name pos:start="285:9" pos:end="285:9">s</name><operator pos:start="285:10" pos:end="285:11">-&gt;</operator><name pos:start="285:12" pos:end="285:19">codec_id</name></name> <operator pos:start="285:21" pos:end="285:22">==</operator> <name pos:start="285:24" pos:end="285:39">AV_CODEC_ID_H263</name>  <operator pos:start="285:42" pos:end="285:43">||</operator>

        <name pos:start="287:9" pos:end="287:19"><name pos:start="287:9" pos:end="287:9">s</name><operator pos:start="287:10" pos:end="287:11">-&gt;</operator><name pos:start="287:12" pos:end="287:19">codec_id</name></name> <operator pos:start="287:21" pos:end="287:22">==</operator> <name pos:start="287:24" pos:end="287:40">AV_CODEC_ID_H263P</name> <operator pos:start="287:42" pos:end="287:43">||</operator>

        <name pos:start="289:9" pos:end="289:19"><name pos:start="289:9" pos:end="289:9">s</name><operator pos:start="289:10" pos:end="289:11">-&gt;</operator><name pos:start="289:12" pos:end="289:19">codec_id</name></name> <operator pos:start="289:21" pos:end="289:22">==</operator> <name pos:start="289:24" pos:end="289:40">AV_CODEC_ID_H263I</name></expr>)</condition><block type="pseudo" pos:start="291:9" pos:end="291:49"><block_content pos:start="291:9" pos:end="291:49">

        <expr_stmt pos:start="291:9" pos:end="291:49"><expr pos:start="291:9" pos:end="291:48"><name pos:start="291:9" pos:end="291:20"><name pos:start="291:9" pos:end="291:9">s</name><operator pos:start="291:10" pos:end="291:11">-&gt;</operator><name pos:start="291:12" pos:end="291:20">gob_index</name></name> <operator pos:start="291:22" pos:end="291:22">=</operator> <call pos:start="291:24" pos:end="291:48"><name pos:start="291:24" pos:end="291:45">ff_h263_get_gob_height</name><argument_list pos:start="291:46" pos:end="291:48">(<argument pos:start="291:47" pos:end="291:47"><expr pos:start="291:47" pos:end="291:47"><name pos:start="291:47" pos:end="291:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="295:5" pos:end="295:29">// for skipping the frame</comment>

    <expr_stmt pos:start="297:5" pos:end="297:50"><expr pos:start="297:5" pos:end="297:49"><name pos:start="297:5" pos:end="297:34"><name pos:start="297:5" pos:end="297:5">s</name><operator pos:start="297:6" pos:end="297:7">-&gt;</operator><name pos:start="297:8" pos:end="297:22">current_picture</name><operator pos:start="297:23" pos:end="297:23">.</operator><name pos:start="297:24" pos:end="297:24">f</name><operator pos:start="297:25" pos:end="297:25">.</operator><name pos:start="297:26" pos:end="297:34">pict_type</name></name> <operator pos:start="297:36" pos:end="297:36">=</operator> <name pos:start="297:38" pos:end="297:49"><name pos:start="297:38" pos:end="297:38">s</name><operator pos:start="297:39" pos:end="297:40">-&gt;</operator><name pos:start="297:41" pos:end="297:49">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:71"><expr pos:start="299:5" pos:end="299:70"><name pos:start="299:5" pos:end="299:34"><name pos:start="299:5" pos:end="299:5">s</name><operator pos:start="299:6" pos:end="299:7">-&gt;</operator><name pos:start="299:8" pos:end="299:22">current_picture</name><operator pos:start="299:23" pos:end="299:23">.</operator><name pos:start="299:24" pos:end="299:24">f</name><operator pos:start="299:25" pos:end="299:25">.</operator><name pos:start="299:26" pos:end="299:34">key_frame</name></name> <operator pos:start="299:36" pos:end="299:36">=</operator> <name pos:start="299:38" pos:end="299:49"><name pos:start="299:38" pos:end="299:38">s</name><operator pos:start="299:39" pos:end="299:40">-&gt;</operator><name pos:start="299:41" pos:end="299:49">pict_type</name></name> <operator pos:start="299:51" pos:end="299:52">==</operator> <name pos:start="299:54" pos:end="299:70">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>



    <comment type="block" pos:start="303:5" pos:end="303:57">/* skip B-frames if we don't have reference frames */</comment>

    <if_stmt pos:start="305:5" pos:end="309:47"><if pos:start="305:5" pos:end="309:47">if <condition pos:start="305:8" pos:end="307:60">(<expr pos:start="305:9" pos:end="307:59"><name pos:start="305:9" pos:end="305:27"><name pos:start="305:9" pos:end="305:9">s</name><operator pos:start="305:10" pos:end="305:11">-&gt;</operator><name pos:start="305:12" pos:end="305:27">last_picture_ptr</name></name> <operator pos:start="305:29" pos:end="305:30">==</operator> <name pos:start="305:32" pos:end="305:35">NULL</name> <operator pos:start="305:37" pos:end="305:38">&amp;&amp;</operator>

        <operator pos:start="307:9" pos:end="307:9">(</operator><name pos:start="307:10" pos:end="307:21"><name pos:start="307:10" pos:end="307:10">s</name><operator pos:start="307:11" pos:end="307:12">-&gt;</operator><name pos:start="307:13" pos:end="307:21">pict_type</name></name> <operator pos:start="307:23" pos:end="307:24">==</operator> <name pos:start="307:26" pos:end="307:42">AV_PICTURE_TYPE_B</name> <operator pos:start="307:44" pos:end="307:45">||</operator> <name pos:start="307:47" pos:end="307:58"><name pos:start="307:47" pos:end="307:47">s</name><operator pos:start="307:48" pos:end="307:49">-&gt;</operator><name pos:start="307:50" pos:end="307:58">droppable</name></name><operator pos:start="307:59" pos:end="307:59">)</operator></expr>)</condition><block type="pseudo" pos:start="309:9" pos:end="309:47"><block_content pos:start="309:9" pos:end="309:47">

        <return pos:start="309:9" pos:end="309:47">return <expr pos:start="309:16" pos:end="309:46"><call pos:start="309:16" pos:end="309:46"><name pos:start="309:16" pos:end="309:33">get_consumed_bytes</name><argument_list pos:start="309:34" pos:end="309:46">(<argument pos:start="309:35" pos:end="309:35"><expr pos:start="309:35" pos:end="309:35"><name pos:start="309:35" pos:end="309:35">s</name></expr></argument>, <argument pos:start="309:38" pos:end="309:45"><expr pos:start="309:38" pos:end="309:45"><name pos:start="309:38" pos:end="309:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="311:5" pos:end="321:47"><if pos:start="311:5" pos:end="321:47">if <condition pos:start="311:8" pos:end="319:43">(<expr pos:start="311:9" pos:end="319:42"><operator pos:start="311:9" pos:end="311:9">(</operator><name pos:start="311:10" pos:end="311:26"><name pos:start="311:10" pos:end="311:14">avctx</name><operator pos:start="311:15" pos:end="311:16">-&gt;</operator><name pos:start="311:17" pos:end="311:26">skip_frame</name></name> <operator pos:start="311:28" pos:end="311:29">&gt;=</operator> <name pos:start="311:31" pos:end="311:46">AVDISCARD_NONREF</name> <operator pos:start="311:48" pos:end="311:49">&amp;&amp;</operator>

         <name pos:start="313:10" pos:end="313:21"><name pos:start="313:10" pos:end="313:10">s</name><operator pos:start="313:11" pos:end="313:12">-&gt;</operator><name pos:start="313:13" pos:end="313:21">pict_type</name></name> <operator pos:start="313:23" pos:end="313:24">==</operator> <name pos:start="313:26" pos:end="313:42">AV_PICTURE_TYPE_B</name><operator pos:start="313:43" pos:end="313:43">)</operator>    <operator pos:start="313:48" pos:end="313:49">||</operator>

        <operator pos:start="315:9" pos:end="315:9">(</operator><name pos:start="315:10" pos:end="315:26"><name pos:start="315:10" pos:end="315:14">avctx</name><operator pos:start="315:15" pos:end="315:16">-&gt;</operator><name pos:start="315:17" pos:end="315:26">skip_frame</name></name> <operator pos:start="315:28" pos:end="315:29">&gt;=</operator> <name pos:start="315:31" pos:end="315:46">AVDISCARD_NONKEY</name> <operator pos:start="315:48" pos:end="315:49">&amp;&amp;</operator>

         <name pos:start="317:10" pos:end="317:21"><name pos:start="317:10" pos:end="317:10">s</name><operator pos:start="317:11" pos:end="317:12">-&gt;</operator><name pos:start="317:13" pos:end="317:21">pict_type</name></name> <operator pos:start="317:23" pos:end="317:24">!=</operator> <name pos:start="317:26" pos:end="317:42">AV_PICTURE_TYPE_I</name><operator pos:start="317:43" pos:end="317:43">)</operator>    <operator pos:start="317:48" pos:end="317:49">||</operator>

        <name pos:start="319:9" pos:end="319:25"><name pos:start="319:9" pos:end="319:13">avctx</name><operator pos:start="319:14" pos:end="319:15">-&gt;</operator><name pos:start="319:16" pos:end="319:25">skip_frame</name></name> <operator pos:start="319:27" pos:end="319:28">&gt;=</operator> <name pos:start="319:30" pos:end="319:42">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="321:9" pos:end="321:47"><block_content pos:start="321:9" pos:end="321:47">

        <return pos:start="321:9" pos:end="321:47">return <expr pos:start="321:16" pos:end="321:46"><call pos:start="321:16" pos:end="321:46"><name pos:start="321:16" pos:end="321:33">get_consumed_bytes</name><argument_list pos:start="321:34" pos:end="321:46">(<argument pos:start="321:35" pos:end="321:35"><expr pos:start="321:35" pos:end="321:35"><name pos:start="321:35" pos:end="321:35">s</name></expr></argument>, <argument pos:start="321:38" pos:end="321:45"><expr pos:start="321:38" pos:end="321:45"><name pos:start="321:38" pos:end="321:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="325:5" pos:end="335:5"><if pos:start="325:5" pos:end="335:5">if <condition pos:start="325:8" pos:end="325:32">(<expr pos:start="325:9" pos:end="325:31"><name pos:start="325:9" pos:end="325:31"><name pos:start="325:9" pos:end="325:9">s</name><operator pos:start="325:10" pos:end="325:11">-&gt;</operator><name pos:start="325:12" pos:end="325:31">next_p_frame_damaged</name></name></expr>)</condition> <block pos:start="325:34" pos:end="335:5">{<block_content pos:start="327:9" pos:end="333:40">

        <if_stmt pos:start="327:9" pos:end="333:40"><if pos:start="327:9" pos:end="329:51">if <condition pos:start="327:12" pos:end="327:46">(<expr pos:start="327:13" pos:end="327:45"><name pos:start="327:13" pos:end="327:24"><name pos:start="327:13" pos:end="327:13">s</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:24">pict_type</name></name> <operator pos:start="327:26" pos:end="327:27">==</operator> <name pos:start="327:29" pos:end="327:45">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="329:13" pos:end="329:51"><block_content pos:start="329:13" pos:end="329:51">

            <return pos:start="329:13" pos:end="329:51">return <expr pos:start="329:20" pos:end="329:50"><call pos:start="329:20" pos:end="329:50"><name pos:start="329:20" pos:end="329:37">get_consumed_bytes</name><argument_list pos:start="329:38" pos:end="329:50">(<argument pos:start="329:39" pos:end="329:39"><expr pos:start="329:39" pos:end="329:39"><name pos:start="329:39" pos:end="329:39">s</name></expr></argument>, <argument pos:start="329:42" pos:end="329:49"><expr pos:start="329:42" pos:end="329:49"><name pos:start="329:42" pos:end="329:49">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

        <else pos:start="331:9" pos:end="333:40">else<block type="pseudo" pos:start="333:13" pos:end="333:40"><block_content pos:start="333:13" pos:end="333:40">

            <expr_stmt pos:start="333:13" pos:end="333:40"><expr pos:start="333:13" pos:end="333:39"><name pos:start="333:13" pos:end="333:35"><name pos:start="333:13" pos:end="333:13">s</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:35">next_p_frame_damaged</name></name> <operator pos:start="333:37" pos:end="333:37">=</operator> <literal type="number" pos:start="333:39" pos:end="333:39">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="339:5" pos:end="351:5"><if pos:start="339:5" pos:end="345:5">if <condition pos:start="339:8" pos:end="339:63">(<expr pos:start="339:9" pos:end="339:62"><operator pos:start="339:9" pos:end="339:9">(</operator><operator pos:start="339:10" pos:end="339:10">!</operator><name pos:start="339:11" pos:end="339:24"><name pos:start="339:11" pos:end="339:11">s</name><operator pos:start="339:12" pos:end="339:13">-&gt;</operator><name pos:start="339:14" pos:end="339:24">no_rounding</name></name><operator pos:start="339:25" pos:end="339:25">)</operator> <operator pos:start="339:27" pos:end="339:28">||</operator> <name pos:start="339:30" pos:end="339:41"><name pos:start="339:30" pos:end="339:30">s</name><operator pos:start="339:31" pos:end="339:32">-&gt;</operator><name pos:start="339:33" pos:end="339:41">pict_type</name></name> <operator pos:start="339:43" pos:end="339:44">==</operator> <name pos:start="339:46" pos:end="339:62">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="339:65" pos:end="345:5">{<block_content pos:start="341:9" pos:end="343:52">

        <expr_stmt pos:start="341:9" pos:end="341:52"><expr pos:start="341:9" pos:end="341:51"><name pos:start="341:9" pos:end="341:22"><name pos:start="341:9" pos:end="341:9">s</name><operator pos:start="341:10" pos:end="341:11">-&gt;</operator><name pos:start="341:12" pos:end="341:13">me</name><operator pos:start="341:14" pos:end="341:14">.</operator><name pos:start="341:15" pos:end="341:22">qpel_put</name></name> <operator pos:start="341:24" pos:end="341:24">=</operator> <name pos:start="341:26" pos:end="341:51"><name pos:start="341:26" pos:end="341:26">s</name><operator pos:start="341:27" pos:end="341:28">-&gt;</operator><name pos:start="341:29" pos:end="341:31">dsp</name><operator pos:start="341:32" pos:end="341:32">.</operator><name pos:start="341:33" pos:end="341:51">put_qpel_pixels_tab</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="343:9" pos:end="343:52"><expr pos:start="343:9" pos:end="343:51"><name pos:start="343:9" pos:end="343:22"><name pos:start="343:9" pos:end="343:9">s</name><operator pos:start="343:10" pos:end="343:11">-&gt;</operator><name pos:start="343:12" pos:end="343:13">me</name><operator pos:start="343:14" pos:end="343:14">.</operator><name pos:start="343:15" pos:end="343:22">qpel_avg</name></name> <operator pos:start="343:24" pos:end="343:24">=</operator> <name pos:start="343:26" pos:end="343:51"><name pos:start="343:26" pos:end="343:26">s</name><operator pos:start="343:27" pos:end="343:28">-&gt;</operator><name pos:start="343:29" pos:end="343:31">dsp</name><operator pos:start="343:32" pos:end="343:32">.</operator><name pos:start="343:33" pos:end="343:51">avg_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="345:7" pos:end="351:5">else <block pos:start="345:12" pos:end="351:5">{<block_content pos:start="347:9" pos:end="349:52">

        <expr_stmt pos:start="347:9" pos:end="347:59"><expr pos:start="347:9" pos:end="347:58"><name pos:start="347:9" pos:end="347:22"><name pos:start="347:9" pos:end="347:9">s</name><operator pos:start="347:10" pos:end="347:11">-&gt;</operator><name pos:start="347:12" pos:end="347:13">me</name><operator pos:start="347:14" pos:end="347:14">.</operator><name pos:start="347:15" pos:end="347:22">qpel_put</name></name> <operator pos:start="347:24" pos:end="347:24">=</operator> <name pos:start="347:26" pos:end="347:58"><name pos:start="347:26" pos:end="347:26">s</name><operator pos:start="347:27" pos:end="347:28">-&gt;</operator><name pos:start="347:29" pos:end="347:31">dsp</name><operator pos:start="347:32" pos:end="347:32">.</operator><name pos:start="347:33" pos:end="347:58">put_no_rnd_qpel_pixels_tab</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:52"><expr pos:start="349:9" pos:end="349:51"><name pos:start="349:9" pos:end="349:22"><name pos:start="349:9" pos:end="349:9">s</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:13">me</name><operator pos:start="349:14" pos:end="349:14">.</operator><name pos:start="349:15" pos:end="349:22">qpel_avg</name></name> <operator pos:start="349:24" pos:end="349:24">=</operator> <name pos:start="349:26" pos:end="349:51"><name pos:start="349:26" pos:end="349:26">s</name><operator pos:start="349:27" pos:end="349:28">-&gt;</operator><name pos:start="349:29" pos:end="349:31">dsp</name><operator pos:start="349:32" pos:end="349:32">.</operator><name pos:start="349:33" pos:end="349:51">avg_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="355:5" pos:end="357:19"><if pos:start="355:5" pos:end="357:19">if <condition pos:start="355:8" pos:end="355:49">(<expr pos:start="355:9" pos:end="355:48"><operator pos:start="355:9" pos:end="355:9">(</operator><name pos:start="355:10" pos:end="355:12">ret</name> <operator pos:start="355:14" pos:end="355:14">=</operator> <call pos:start="355:16" pos:end="355:43"><name pos:start="355:16" pos:end="355:33">ff_MPV_frame_start</name><argument_list pos:start="355:34" pos:end="355:43">(<argument pos:start="355:35" pos:end="355:35"><expr pos:start="355:35" pos:end="355:35"><name pos:start="355:35" pos:end="355:35">s</name></expr></argument>, <argument pos:start="355:38" pos:end="355:42"><expr pos:start="355:38" pos:end="355:42"><name pos:start="355:38" pos:end="355:42">avctx</name></expr></argument>)</argument_list></call><operator pos:start="355:44" pos:end="355:44">)</operator> <operator pos:start="355:46" pos:end="355:46">&lt;</operator> <literal type="number" pos:start="355:48" pos:end="355:48">0</literal></expr>)</condition><block type="pseudo" pos:start="357:9" pos:end="357:19"><block_content pos:start="357:9" pos:end="357:19">

        <return pos:start="357:9" pos:end="357:19">return <expr pos:start="357:16" pos:end="357:18"><name pos:start="357:16" pos:end="357:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="361:5" pos:end="363:38"><if pos:start="361:5" pos:end="363:38">if <condition pos:start="361:8" pos:end="361:43">(<expr pos:start="361:9" pos:end="361:42"><operator pos:start="361:9" pos:end="361:9">!</operator><name pos:start="361:10" pos:end="361:23"><name pos:start="361:10" pos:end="361:10">s</name><operator pos:start="361:11" pos:end="361:12">-&gt;</operator><name pos:start="361:13" pos:end="361:23">divx_packed</name></name> <operator pos:start="361:25" pos:end="361:26">&amp;&amp;</operator> <operator pos:start="361:28" pos:end="361:28">!</operator><name pos:start="361:29" pos:end="361:42"><name pos:start="361:29" pos:end="361:33">avctx</name><operator pos:start="361:34" pos:end="361:35">-&gt;</operator><name pos:start="361:36" pos:end="361:42">hwaccel</name></name></expr>)</condition><block type="pseudo" pos:start="363:9" pos:end="363:38"><block_content pos:start="363:9" pos:end="363:38">

        <expr_stmt pos:start="363:9" pos:end="363:38"><expr pos:start="363:9" pos:end="363:37"><call pos:start="363:9" pos:end="363:37"><name pos:start="363:9" pos:end="363:30">ff_thread_finish_setup</name><argument_list pos:start="363:31" pos:end="363:37">(<argument pos:start="363:32" pos:end="363:36"><expr pos:start="363:32" pos:end="363:36"><name pos:start="363:32" pos:end="363:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="367:5" pos:end="377:5"><if pos:start="367:5" pos:end="377:5">if <condition pos:start="367:8" pos:end="367:23">(<expr pos:start="367:9" pos:end="367:22"><name pos:start="367:9" pos:end="367:22"><name pos:start="367:9" pos:end="367:13">avctx</name><operator pos:start="367:14" pos:end="367:15">-&gt;</operator><name pos:start="367:16" pos:end="367:22">hwaccel</name></name></expr>)</condition> <block pos:start="367:25" pos:end="377:5">{<block_content pos:start="369:9" pos:end="375:23">

        <expr_stmt pos:start="369:9" pos:end="371:75"><expr pos:start="369:9" pos:end="371:74"><name pos:start="369:9" pos:end="369:11">ret</name> <operator pos:start="369:13" pos:end="369:13">=</operator> <call pos:start="369:15" pos:end="371:74"><name pos:start="369:15" pos:end="369:41"><name pos:start="369:15" pos:end="369:19">avctx</name><operator pos:start="369:20" pos:end="369:21">-&gt;</operator><name pos:start="369:22" pos:end="369:28">hwaccel</name><operator pos:start="369:29" pos:end="369:30">-&gt;</operator><name pos:start="369:31" pos:end="369:41">start_frame</name></name><argument_list pos:start="369:42" pos:end="371:74">(<argument pos:start="369:43" pos:end="369:47"><expr pos:start="369:43" pos:end="369:47"><name pos:start="369:43" pos:end="369:47">avctx</name></expr></argument>, <argument pos:start="369:50" pos:end="369:61"><expr pos:start="369:50" pos:end="369:61"><name pos:start="369:50" pos:end="369:61"><name pos:start="369:50" pos:end="369:50">s</name><operator pos:start="369:51" pos:end="369:52">-&gt;</operator><name pos:start="369:53" pos:end="369:54">gb</name><operator pos:start="369:55" pos:end="369:55">.</operator><name pos:start="369:56" pos:end="369:61">buffer</name></name></expr></argument>,

                                          <argument pos:start="371:43" pos:end="371:73"><expr pos:start="371:43" pos:end="371:73"><name pos:start="371:43" pos:end="371:58"><name pos:start="371:43" pos:end="371:43">s</name><operator pos:start="371:44" pos:end="371:45">-&gt;</operator><name pos:start="371:46" pos:end="371:47">gb</name><operator pos:start="371:48" pos:end="371:48">.</operator><name pos:start="371:49" pos:end="371:58">buffer_end</name></name> <operator pos:start="371:60" pos:end="371:60">-</operator> <name pos:start="371:62" pos:end="371:73"><name pos:start="371:62" pos:end="371:62">s</name><operator pos:start="371:63" pos:end="371:64">-&gt;</operator><name pos:start="371:65" pos:end="371:66">gb</name><operator pos:start="371:67" pos:end="371:67">.</operator><name pos:start="371:68" pos:end="371:73">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="373:9" pos:end="375:23"><if pos:start="373:9" pos:end="375:23">if <condition pos:start="373:12" pos:end="373:21">(<expr pos:start="373:13" pos:end="373:19"><name pos:start="373:13" pos:end="373:15">ret</name> <operator pos:start="373:17" pos:end="373:17">&lt;</operator> <literal type="number" pos:start="373:19" pos:end="373:19">0</literal></expr> )</condition><block type="pseudo" pos:start="375:13" pos:end="375:23"><block_content pos:start="375:13" pos:end="375:23">

            <return pos:start="375:13" pos:end="375:23">return <expr pos:start="375:20" pos:end="375:22"><name pos:start="375:20" pos:end="375:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="381:5" pos:end="381:30"><expr pos:start="381:5" pos:end="381:29"><call pos:start="381:5" pos:end="381:29"><name pos:start="381:5" pos:end="381:26">ff_mpeg_er_frame_start</name><argument_list pos:start="381:27" pos:end="381:29">(<argument pos:start="381:28" pos:end="381:28"><expr pos:start="381:28" pos:end="381:28"><name pos:start="381:28" pos:end="381:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="385:5" pos:end="389:30">/* the second part of the wmv2 header contains the MB skip bits which

     * are stored in current_picture-&gt;mb_type which is not available before

     * ff_MPV_frame_start() */</comment>

    <if_stmt pos:start="391:5" pos:end="403:5"><if pos:start="391:5" pos:end="403:5">if <condition pos:start="391:8" pos:end="391:55">(<expr pos:start="391:9" pos:end="391:54"><name pos:start="391:9" pos:end="391:27">CONFIG_WMV2_DECODER</name> <operator pos:start="391:29" pos:end="391:30">&amp;&amp;</operator> <name pos:start="391:32" pos:end="391:49"><name pos:start="391:32" pos:end="391:32">s</name><operator pos:start="391:33" pos:end="391:34">-&gt;</operator><name pos:start="391:35" pos:end="391:49">msmpeg4_version</name></name> <operator pos:start="391:51" pos:end="391:52">==</operator> <literal type="number" pos:start="391:54" pos:end="391:54">5</literal></expr>)</condition> <block pos:start="391:57" pos:end="403:5">{<block_content pos:start="393:9" pos:end="401:33">

        <expr_stmt pos:start="393:9" pos:end="393:57"><expr pos:start="393:9" pos:end="393:56"><name pos:start="393:9" pos:end="393:11">ret</name> <operator pos:start="393:13" pos:end="393:13">=</operator> <call pos:start="393:15" pos:end="393:56"><name pos:start="393:15" pos:end="393:53">ff_wmv2_decode_secondary_picture_header</name><argument_list pos:start="393:54" pos:end="393:56">(<argument pos:start="393:55" pos:end="393:55"><expr pos:start="393:55" pos:end="393:55"><name pos:start="393:55" pos:end="393:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="395:9" pos:end="397:23"><if pos:start="395:9" pos:end="397:23">if <condition pos:start="395:12" pos:end="395:20">(<expr pos:start="395:13" pos:end="395:19"><name pos:start="395:13" pos:end="395:15">ret</name> <operator pos:start="395:17" pos:end="395:17">&lt;</operator> <literal type="number" pos:start="395:19" pos:end="395:19">0</literal></expr>)</condition><block type="pseudo" pos:start="397:13" pos:end="397:23"><block_content pos:start="397:13" pos:end="397:23">

            <return pos:start="397:13" pos:end="397:23">return <expr pos:start="397:20" pos:end="397:22"><name pos:start="397:20" pos:end="397:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="399:9" pos:end="401:33"><if pos:start="399:9" pos:end="401:33">if <condition pos:start="399:12" pos:end="399:21">(<expr pos:start="399:13" pos:end="399:20"><name pos:start="399:13" pos:end="399:15">ret</name> <operator pos:start="399:17" pos:end="399:18">==</operator> <literal type="number" pos:start="399:20" pos:end="399:20">1</literal></expr>)</condition><block type="pseudo" pos:start="401:13" pos:end="401:33"><block_content pos:start="401:13" pos:end="401:33">

            <goto pos:start="401:13" pos:end="401:33">goto <name pos:start="401:18" pos:end="401:32">intrax8_decoded</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="407:5" pos:end="407:32">/* decode each macroblock */</comment>

    <expr_stmt pos:start="409:5" pos:end="409:16"><expr pos:start="409:5" pos:end="409:15"><name pos:start="409:5" pos:end="409:11"><name pos:start="409:5" pos:end="409:5">s</name><operator pos:start="409:6" pos:end="409:7">-&gt;</operator><name pos:start="409:8" pos:end="409:11">mb_x</name></name> <operator pos:start="409:13" pos:end="409:13">=</operator> <literal type="number" pos:start="409:15" pos:end="409:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="411:5" pos:end="411:16"><expr pos:start="411:5" pos:end="411:15"><name pos:start="411:5" pos:end="411:11"><name pos:start="411:5" pos:end="411:5">s</name><operator pos:start="411:6" pos:end="411:7">-&gt;</operator><name pos:start="411:8" pos:end="411:11">mb_y</name></name> <operator pos:start="411:13" pos:end="411:13">=</operator> <literal type="number" pos:start="411:15" pos:end="411:15">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="415:5" pos:end="415:26"><expr pos:start="415:5" pos:end="415:25"><name pos:start="415:5" pos:end="415:7">ret</name> <operator pos:start="415:9" pos:end="415:9">=</operator> <call pos:start="415:11" pos:end="415:25"><name pos:start="415:11" pos:end="415:22">decode_slice</name><argument_list pos:start="415:23" pos:end="415:25">(<argument pos:start="415:24" pos:end="415:24"><expr pos:start="415:24" pos:end="415:24"><name pos:start="415:24" pos:end="415:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="417:5" pos:end="453:5">while <condition pos:start="417:11" pos:end="417:34">(<expr pos:start="417:12" pos:end="417:33"><name pos:start="417:12" pos:end="417:18"><name pos:start="417:12" pos:end="417:12">s</name><operator pos:start="417:13" pos:end="417:14">-&gt;</operator><name pos:start="417:15" pos:end="417:18">mb_y</name></name> <operator pos:start="417:20" pos:end="417:20">&lt;</operator> <name pos:start="417:22" pos:end="417:33"><name pos:start="417:22" pos:end="417:22">s</name><operator pos:start="417:23" pos:end="417:24">-&gt;</operator><name pos:start="417:25" pos:end="417:33">mb_height</name></name></expr>)</condition> <block pos:start="417:36" pos:end="453:5">{<block_content pos:start="419:9" pos:end="451:38">

        <if_stmt pos:start="419:9" pos:end="439:9"><if pos:start="419:9" pos:end="427:9">if <condition pos:start="419:12" pos:end="419:31">(<expr pos:start="419:13" pos:end="419:30"><name pos:start="419:13" pos:end="419:30"><name pos:start="419:13" pos:end="419:13">s</name><operator pos:start="419:14" pos:end="419:15">-&gt;</operator><name pos:start="419:16" pos:end="419:30">msmpeg4_version</name></name></expr>)</condition> <block pos:start="419:33" pos:end="427:9">{<block_content pos:start="421:13" pos:end="425:22">

            <if_stmt pos:start="421:13" pos:end="425:22"><if pos:start="421:13" pos:end="425:22">if <condition pos:start="421:16" pos:end="423:78">(<expr pos:start="421:17" pos:end="423:77"><name pos:start="421:17" pos:end="421:31"><name pos:start="421:17" pos:end="421:17">s</name><operator pos:start="421:18" pos:end="421:19">-&gt;</operator><name pos:start="421:20" pos:end="421:31">slice_height</name></name> <operator pos:start="421:33" pos:end="421:34">==</operator> <literal type="number" pos:start="421:36" pos:end="421:36">0</literal> <operator pos:start="421:38" pos:end="421:39">||</operator> <name pos:start="421:41" pos:end="421:47"><name pos:start="421:41" pos:end="421:41">s</name><operator pos:start="421:42" pos:end="421:43">-&gt;</operator><name pos:start="421:44" pos:end="421:47">mb_x</name></name> <operator pos:start="421:49" pos:end="421:50">!=</operator> <literal type="number" pos:start="421:52" pos:end="421:52">0</literal> <operator pos:start="421:54" pos:end="421:55">||</operator>

                <operator pos:start="423:17" pos:end="423:17">(</operator><name pos:start="423:18" pos:end="423:24"><name pos:start="423:18" pos:end="423:18">s</name><operator pos:start="423:19" pos:end="423:20">-&gt;</operator><name pos:start="423:21" pos:end="423:24">mb_y</name></name> <operator pos:start="423:26" pos:end="423:26">%</operator> <name pos:start="423:28" pos:end="423:42"><name pos:start="423:28" pos:end="423:28">s</name><operator pos:start="423:29" pos:end="423:30">-&gt;</operator><name pos:start="423:31" pos:end="423:42">slice_height</name></name><operator pos:start="423:43" pos:end="423:43">)</operator> <operator pos:start="423:45" pos:end="423:46">!=</operator> <literal type="number" pos:start="423:48" pos:end="423:48">0</literal> <operator pos:start="423:50" pos:end="423:51">||</operator> <call pos:start="423:53" pos:end="423:73"><name pos:start="423:53" pos:end="423:65">get_bits_left</name><argument_list pos:start="423:66" pos:end="423:73">(<argument pos:start="423:67" pos:end="423:72"><expr pos:start="423:67" pos:end="423:72"><operator pos:start="423:67" pos:end="423:67">&amp;</operator><name pos:start="423:68" pos:end="423:72"><name pos:start="423:68" pos:end="423:68">s</name><operator pos:start="423:69" pos:end="423:70">-&gt;</operator><name pos:start="423:71" pos:end="423:72">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="423:75" pos:end="423:75">&lt;</operator> <literal type="number" pos:start="423:77" pos:end="423:77">0</literal></expr>)</condition><block type="pseudo" pos:start="425:17" pos:end="425:22"><block_content pos:start="425:17" pos:end="425:22">

                <break pos:start="425:17" pos:end="425:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="427:11" pos:end="439:9">else <block pos:start="427:16" pos:end="439:9">{<block_content pos:start="429:13" pos:end="437:41">

            <decl_stmt pos:start="429:13" pos:end="429:51"><decl pos:start="429:13" pos:end="429:32"><type pos:start="429:13" pos:end="429:15"><name pos:start="429:13" pos:end="429:15">int</name></type> <name pos:start="429:17" pos:end="429:22">prev_x</name> <init pos:start="429:24" pos:end="429:32">= <expr pos:start="429:26" pos:end="429:32"><name pos:start="429:26" pos:end="429:32"><name pos:start="429:26" pos:end="429:26">s</name><operator pos:start="429:27" pos:end="429:28">-&gt;</operator><name pos:start="429:29" pos:end="429:32">mb_x</name></name></expr></init></decl>, <decl pos:start="429:35" pos:end="429:50"><type ref="prev" pos:start="429:13" pos:end="429:15"/><name pos:start="429:35" pos:end="429:40">prev_y</name> <init pos:start="429:42" pos:end="429:50">= <expr pos:start="429:44" pos:end="429:50"><name pos:start="429:44" pos:end="429:50"><name pos:start="429:44" pos:end="429:44">s</name><operator pos:start="429:45" pos:end="429:46">-&gt;</operator><name pos:start="429:47" pos:end="429:50">mb_y</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="431:13" pos:end="433:22"><if pos:start="431:13" pos:end="433:22">if <condition pos:start="431:16" pos:end="431:38">(<expr pos:start="431:17" pos:end="431:37"><call pos:start="431:17" pos:end="431:33"><name pos:start="431:17" pos:end="431:30">ff_h263_resync</name><argument_list pos:start="431:31" pos:end="431:33">(<argument pos:start="431:32" pos:end="431:32"><expr pos:start="431:32" pos:end="431:32"><name pos:start="431:32" pos:end="431:32">s</name></expr></argument>)</argument_list></call> <operator pos:start="431:35" pos:end="431:35">&lt;</operator> <literal type="number" pos:start="431:37" pos:end="431:37">0</literal></expr>)</condition><block type="pseudo" pos:start="433:17" pos:end="433:22"><block_content pos:start="433:17" pos:end="433:22">

                <break pos:start="433:17" pos:end="433:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="435:13" pos:end="437:41"><if pos:start="435:13" pos:end="437:41">if <condition pos:start="435:16" pos:end="435:80">(<expr pos:start="435:17" pos:end="435:79"><name pos:start="435:17" pos:end="435:22">prev_y</name> <operator pos:start="435:24" pos:end="435:24">*</operator> <name pos:start="435:26" pos:end="435:36"><name pos:start="435:26" pos:end="435:26">s</name><operator pos:start="435:27" pos:end="435:28">-&gt;</operator><name pos:start="435:29" pos:end="435:36">mb_width</name></name> <operator pos:start="435:38" pos:end="435:38">+</operator> <name pos:start="435:40" pos:end="435:45">prev_x</name> <operator pos:start="435:47" pos:end="435:47">&lt;</operator> <name pos:start="435:49" pos:end="435:55"><name pos:start="435:49" pos:end="435:49">s</name><operator pos:start="435:50" pos:end="435:51">-&gt;</operator><name pos:start="435:52" pos:end="435:55">mb_y</name></name> <operator pos:start="435:57" pos:end="435:57">*</operator> <name pos:start="435:59" pos:end="435:69"><name pos:start="435:59" pos:end="435:59">s</name><operator pos:start="435:60" pos:end="435:61">-&gt;</operator><name pos:start="435:62" pos:end="435:69">mb_width</name></name> <operator pos:start="435:71" pos:end="435:71">+</operator> <name pos:start="435:73" pos:end="435:79"><name pos:start="435:73" pos:end="435:73">s</name><operator pos:start="435:74" pos:end="435:75">-&gt;</operator><name pos:start="435:76" pos:end="435:79">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="437:17" pos:end="437:41"><block_content pos:start="437:17" pos:end="437:41">

                <expr_stmt pos:start="437:17" pos:end="437:41"><expr pos:start="437:17" pos:end="437:40"><name pos:start="437:17" pos:end="437:36"><name pos:start="437:17" pos:end="437:17">s</name><operator pos:start="437:18" pos:end="437:19">-&gt;</operator><name pos:start="437:20" pos:end="437:21">er</name><operator pos:start="437:22" pos:end="437:22">.</operator><name pos:start="437:23" pos:end="437:36">error_occurred</name></name> <operator pos:start="437:38" pos:end="437:38">=</operator> <literal type="number" pos:start="437:40" pos:end="437:40">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="443:9" pos:end="445:38"><if pos:start="443:9" pos:end="445:38">if <condition pos:start="443:12" pos:end="443:51">(<expr pos:start="443:13" pos:end="443:50"><name pos:start="443:13" pos:end="443:30"><name pos:start="443:13" pos:end="443:13">s</name><operator pos:start="443:14" pos:end="443:15">-&gt;</operator><name pos:start="443:16" pos:end="443:30">msmpeg4_version</name></name> <operator pos:start="443:32" pos:end="443:32">&lt;</operator> <literal type="number" pos:start="443:34" pos:end="443:34">4</literal> <operator pos:start="443:36" pos:end="443:37">&amp;&amp;</operator> <name pos:start="443:39" pos:end="443:50"><name pos:start="443:39" pos:end="443:39">s</name><operator pos:start="443:40" pos:end="443:41">-&gt;</operator><name pos:start="443:42" pos:end="443:50">h263_pred</name></name></expr>)</condition><block type="pseudo" pos:start="445:13" pos:end="445:38"><block_content pos:start="445:13" pos:end="445:38">

            <expr_stmt pos:start="445:13" pos:end="445:38"><expr pos:start="445:13" pos:end="445:37"><call pos:start="445:13" pos:end="445:37"><name pos:start="445:13" pos:end="445:34">ff_mpeg4_clean_buffers</name><argument_list pos:start="445:35" pos:end="445:37">(<argument pos:start="445:36" pos:end="445:36"><expr pos:start="445:36" pos:end="445:36"><name pos:start="445:36" pos:end="445:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="449:9" pos:end="451:38"><if pos:start="449:9" pos:end="451:38">if <condition pos:start="449:12" pos:end="449:32">(<expr pos:start="449:13" pos:end="449:31"><call pos:start="449:13" pos:end="449:27"><name pos:start="449:13" pos:end="449:24">decode_slice</name><argument_list pos:start="449:25" pos:end="449:27">(<argument pos:start="449:26" pos:end="449:26"><expr pos:start="449:26" pos:end="449:26"><name pos:start="449:26" pos:end="449:26">s</name></expr></argument>)</argument_list></call> <operator pos:start="449:29" pos:end="449:29">&lt;</operator> <literal type="number" pos:start="449:31" pos:end="449:31">0</literal></expr>)</condition><block type="pseudo" pos:start="451:13" pos:end="451:38"><block_content pos:start="451:13" pos:end="451:38">

            <expr_stmt pos:start="451:13" pos:end="451:38"><expr pos:start="451:13" pos:end="451:37"><name pos:start="451:13" pos:end="451:15">ret</name> <operator pos:start="451:17" pos:end="451:17">=</operator> <name pos:start="451:19" pos:end="451:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="457:5" pos:end="465:66"><if pos:start="457:5" pos:end="465:66">if <condition pos:start="457:8" pos:end="459:42">(<expr pos:start="457:9" pos:end="459:41"><name pos:start="457:9" pos:end="457:26"><name pos:start="457:9" pos:end="457:9">s</name><operator pos:start="457:10" pos:end="457:11">-&gt;</operator><name pos:start="457:12" pos:end="457:26">msmpeg4_version</name></name> <operator pos:start="457:28" pos:end="457:29">&amp;&amp;</operator> <name pos:start="457:31" pos:end="457:48"><name pos:start="457:31" pos:end="457:31">s</name><operator pos:start="457:32" pos:end="457:33">-&gt;</operator><name pos:start="457:34" pos:end="457:48">msmpeg4_version</name></name> <operator pos:start="457:50" pos:end="457:50">&lt;</operator> <literal type="number" pos:start="457:52" pos:end="457:52">4</literal> <operator pos:start="457:54" pos:end="457:55">&amp;&amp;</operator>

        <name pos:start="459:9" pos:end="459:20"><name pos:start="459:9" pos:end="459:9">s</name><operator pos:start="459:10" pos:end="459:11">-&gt;</operator><name pos:start="459:12" pos:end="459:20">pict_type</name></name> <operator pos:start="459:22" pos:end="459:23">==</operator> <name pos:start="459:25" pos:end="459:41">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="461:9" pos:end="465:66"><block_content pos:start="461:9" pos:end="465:66">

        <if_stmt pos:start="461:9" pos:end="465:66"><if pos:start="461:9" pos:end="465:66">if <condition pos:start="461:12" pos:end="463:58">(<expr pos:start="461:13" pos:end="463:57"><operator pos:start="461:13" pos:end="461:13">!</operator><name pos:start="461:14" pos:end="461:35">CONFIG_MSMPEG4_DECODER</name> <operator pos:start="461:37" pos:end="461:38">||</operator>

            <call pos:start="463:13" pos:end="463:53"><name pos:start="463:13" pos:end="463:40">ff_msmpeg4_decode_ext_header</name><argument_list pos:start="463:41" pos:end="463:53">(<argument pos:start="463:42" pos:end="463:42"><expr pos:start="463:42" pos:end="463:42"><name pos:start="463:42" pos:end="463:42">s</name></expr></argument>, <argument pos:start="463:45" pos:end="463:52"><expr pos:start="463:45" pos:end="463:52"><name pos:start="463:45" pos:end="463:52">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="463:55" pos:end="463:55">&lt;</operator> <literal type="number" pos:start="463:57" pos:end="463:57">0</literal></expr>)</condition><block type="pseudo" pos:start="465:13" pos:end="465:66"><block_content pos:start="465:13" pos:end="465:66">

            <expr_stmt pos:start="465:13" pos:end="465:66"><expr pos:start="465:13" pos:end="465:65"><name pos:start="465:13" pos:end="465:51"><name pos:start="465:13" pos:end="465:13">s</name><operator pos:start="465:14" pos:end="465:15">-&gt;</operator><name pos:start="465:16" pos:end="465:17">er</name><operator pos:start="465:18" pos:end="465:18">.</operator><name pos:start="465:19" pos:end="465:36">error_status_table</name><index pos:start="465:37" pos:end="465:51">[<expr pos:start="465:38" pos:end="465:50"><name pos:start="465:38" pos:end="465:46"><name pos:start="465:38" pos:end="465:38">s</name><operator pos:start="465:39" pos:end="465:40">-&gt;</operator><name pos:start="465:41" pos:end="465:46">mb_num</name></name> <operator pos:start="465:48" pos:end="465:48">-</operator> <literal type="number" pos:start="465:50" pos:end="465:50">1</literal></expr>]</index></name> <operator pos:start="465:53" pos:end="465:53">=</operator> <name pos:start="465:55" pos:end="465:65">ER_MB_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="469:5" pos:end="469:42"><expr pos:start="469:5" pos:end="469:41"><call pos:start="469:5" pos:end="469:41"><name pos:start="469:5" pos:end="469:10">assert</name><argument_list pos:start="469:11" pos:end="469:41">(<argument pos:start="469:12" pos:end="469:40"><expr pos:start="469:12" pos:end="469:40"><name pos:start="469:12" pos:end="469:35"><name pos:start="469:12" pos:end="469:12">s</name><operator pos:start="469:13" pos:end="469:14">-&gt;</operator><name pos:start="469:15" pos:end="469:35">bitstream_buffer_size</name></name> <operator pos:start="469:37" pos:end="469:38">==</operator> <literal type="number" pos:start="469:40" pos:end="469:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="473:5" pos:end="475:49"><if pos:start="473:5" pos:end="475:49">if <condition pos:start="473:8" pos:end="473:69">(<expr pos:start="473:9" pos:end="473:68"><name pos:start="473:9" pos:end="473:28">CONFIG_MPEG4_DECODER</name> <operator pos:start="473:30" pos:end="473:31">&amp;&amp;</operator> <name pos:start="473:33" pos:end="473:47"><name pos:start="473:33" pos:end="473:37">avctx</name><operator pos:start="473:38" pos:end="473:39">-&gt;</operator><name pos:start="473:40" pos:end="473:47">codec_id</name></name> <operator pos:start="473:49" pos:end="473:50">==</operator> <name pos:start="473:52" pos:end="473:68">AV_CODEC_ID_MPEG4</name></expr>)</condition><block type="pseudo" pos:start="475:9" pos:end="475:49"><block_content pos:start="475:9" pos:end="475:49">

        <expr_stmt pos:start="475:9" pos:end="475:49"><expr pos:start="475:9" pos:end="475:48"><call pos:start="475:9" pos:end="475:48"><name pos:start="475:9" pos:end="475:26">ff_mpeg4_frame_end</name><argument_list pos:start="475:27" pos:end="475:48">(<argument pos:start="475:28" pos:end="475:32"><expr pos:start="475:28" pos:end="475:32"><name pos:start="475:28" pos:end="475:32">avctx</name></expr></argument>, <argument pos:start="475:35" pos:end="475:37"><expr pos:start="475:35" pos:end="475:37"><name pos:start="475:35" pos:end="475:37">buf</name></expr></argument>, <argument pos:start="475:40" pos:end="475:47"><expr pos:start="475:40" pos:end="475:47"><name pos:start="475:40" pos:end="475:47">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="479:1" pos:end="479:16"><name pos:start="479:1" pos:end="479:15">intrax8_decoded</name>:</label>

    <expr_stmt pos:start="481:5" pos:end="481:28"><expr pos:start="481:5" pos:end="481:27"><call pos:start="481:5" pos:end="481:27"><name pos:start="481:5" pos:end="481:19">ff_er_frame_end</name><argument_list pos:start="481:20" pos:end="481:27">(<argument pos:start="481:21" pos:end="481:26"><expr pos:start="481:21" pos:end="481:26"><operator pos:start="481:21" pos:end="481:21">&amp;</operator><name pos:start="481:22" pos:end="481:26"><name pos:start="481:22" pos:end="481:22">s</name><operator pos:start="481:23" pos:end="481:24">-&gt;</operator><name pos:start="481:25" pos:end="481:26">er</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="485:5" pos:end="493:5"><if pos:start="485:5" pos:end="493:5">if <condition pos:start="485:8" pos:end="485:23">(<expr pos:start="485:9" pos:end="485:22"><name pos:start="485:9" pos:end="485:22"><name pos:start="485:9" pos:end="485:13">avctx</name><operator pos:start="485:14" pos:end="485:15">-&gt;</operator><name pos:start="485:16" pos:end="485:22">hwaccel</name></name></expr>)</condition> <block pos:start="485:25" pos:end="493:5">{<block_content pos:start="487:9" pos:end="491:23">

        <expr_stmt pos:start="487:9" pos:end="487:47"><expr pos:start="487:9" pos:end="487:46"><name pos:start="487:9" pos:end="487:11">ret</name> <operator pos:start="487:13" pos:end="487:13">=</operator> <call pos:start="487:15" pos:end="487:46"><name pos:start="487:15" pos:end="487:39"><name pos:start="487:15" pos:end="487:19">avctx</name><operator pos:start="487:20" pos:end="487:21">-&gt;</operator><name pos:start="487:22" pos:end="487:28">hwaccel</name><operator pos:start="487:29" pos:end="487:30">-&gt;</operator><name pos:start="487:31" pos:end="487:39">end_frame</name></name><argument_list pos:start="487:40" pos:end="487:46">(<argument pos:start="487:41" pos:end="487:45"><expr pos:start="487:41" pos:end="487:45"><name pos:start="487:41" pos:end="487:45">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="489:9" pos:end="491:23"><if pos:start="489:9" pos:end="491:23">if <condition pos:start="489:12" pos:end="489:20">(<expr pos:start="489:13" pos:end="489:19"><name pos:start="489:13" pos:end="489:15">ret</name> <operator pos:start="489:17" pos:end="489:17">&lt;</operator> <literal type="number" pos:start="489:19" pos:end="489:19">0</literal></expr>)</condition><block type="pseudo" pos:start="491:13" pos:end="491:23"><block_content pos:start="491:13" pos:end="491:23">

            <return pos:start="491:13" pos:end="491:23">return <expr pos:start="491:20" pos:end="491:22"><name pos:start="491:20" pos:end="491:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="497:5" pos:end="497:24"><expr pos:start="497:5" pos:end="497:23"><call pos:start="497:5" pos:end="497:23"><name pos:start="497:5" pos:end="497:20">ff_MPV_frame_end</name><argument_list pos:start="497:21" pos:end="497:23">(<argument pos:start="497:22" pos:end="497:22"><expr pos:start="497:22" pos:end="497:22"><name pos:start="497:22" pos:end="497:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="501:5" pos:end="503:38"><if pos:start="501:5" pos:end="503:38">if <condition pos:start="501:8" pos:end="501:42">(<expr pos:start="501:9" pos:end="501:41"><operator pos:start="501:9" pos:end="501:9">!</operator><name pos:start="501:10" pos:end="501:23"><name pos:start="501:10" pos:end="501:10">s</name><operator pos:start="501:11" pos:end="501:12">-&gt;</operator><name pos:start="501:13" pos:end="501:23">divx_packed</name></name> <operator pos:start="501:25" pos:end="501:26">&amp;&amp;</operator> <name pos:start="501:28" pos:end="501:41"><name pos:start="501:28" pos:end="501:32">avctx</name><operator pos:start="501:33" pos:end="501:34">-&gt;</operator><name pos:start="501:35" pos:end="501:41">hwaccel</name></name></expr>)</condition><block type="pseudo" pos:start="503:9" pos:end="503:38"><block_content pos:start="503:9" pos:end="503:38">

        <expr_stmt pos:start="503:9" pos:end="503:38"><expr pos:start="503:9" pos:end="503:37"><call pos:start="503:9" pos:end="503:37"><name pos:start="503:9" pos:end="503:30">ff_thread_finish_setup</name><argument_list pos:start="503:31" pos:end="503:37">(<argument pos:start="503:32" pos:end="503:36"><expr pos:start="503:32" pos:end="503:36"><name pos:start="503:32" pos:end="503:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="507:5" pos:end="509:48"><expr pos:start="507:5" pos:end="509:47"><call pos:start="507:5" pos:end="509:47"><name pos:start="507:5" pos:end="507:10">assert</name><argument_list pos:start="507:11" pos:end="509:47">(<argument pos:start="507:12" pos:end="509:46"><expr pos:start="507:12" pos:end="509:46"><name pos:start="507:12" pos:end="507:41"><name pos:start="507:12" pos:end="507:12">s</name><operator pos:start="507:13" pos:end="507:14">-&gt;</operator><name pos:start="507:15" pos:end="507:29">current_picture</name><operator pos:start="507:30" pos:end="507:30">.</operator><name pos:start="507:31" pos:end="507:31">f</name><operator pos:start="507:32" pos:end="507:32">.</operator><name pos:start="507:33" pos:end="507:41">pict_type</name></name> <operator pos:start="507:43" pos:end="507:44">==</operator>

           <name pos:start="509:12" pos:end="509:46"><name pos:start="509:12" pos:end="509:12">s</name><operator pos:start="509:13" pos:end="509:14">-&gt;</operator><name pos:start="509:15" pos:end="509:33">current_picture_ptr</name><operator pos:start="509:34" pos:end="509:35">-&gt;</operator><name pos:start="509:36" pos:end="509:36">f</name><operator pos:start="509:37" pos:end="509:37">.</operator><name pos:start="509:38" pos:end="509:46">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="511:5" pos:end="511:59"><expr pos:start="511:5" pos:end="511:58"><call pos:start="511:5" pos:end="511:58"><name pos:start="511:5" pos:end="511:10">assert</name><argument_list pos:start="511:11" pos:end="511:58">(<argument pos:start="511:12" pos:end="511:57"><expr pos:start="511:12" pos:end="511:57"><name pos:start="511:12" pos:end="511:41"><name pos:start="511:12" pos:end="511:12">s</name><operator pos:start="511:13" pos:end="511:14">-&gt;</operator><name pos:start="511:15" pos:end="511:29">current_picture</name><operator pos:start="511:30" pos:end="511:30">.</operator><name pos:start="511:31" pos:end="511:31">f</name><operator pos:start="511:32" pos:end="511:32">.</operator><name pos:start="511:33" pos:end="511:41">pict_type</name></name> <operator pos:start="511:43" pos:end="511:44">==</operator> <name pos:start="511:46" pos:end="511:57"><name pos:start="511:46" pos:end="511:46">s</name><operator pos:start="511:47" pos:end="511:48">-&gt;</operator><name pos:start="511:49" pos:end="511:57">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="513:5" pos:end="529:5"><if pos:start="513:5" pos:end="521:5">if <condition pos:start="513:8" pos:end="513:58">(<expr pos:start="513:9" pos:end="513:57"><name pos:start="513:9" pos:end="513:20"><name pos:start="513:9" pos:end="513:9">s</name><operator pos:start="513:10" pos:end="513:11">-&gt;</operator><name pos:start="513:12" pos:end="513:20">pict_type</name></name> <operator pos:start="513:22" pos:end="513:23">==</operator> <name pos:start="513:25" pos:end="513:41">AV_PICTURE_TYPE_B</name> <operator pos:start="513:43" pos:end="513:44">||</operator> <name pos:start="513:46" pos:end="513:57"><name pos:start="513:46" pos:end="513:46">s</name><operator pos:start="513:47" pos:end="513:48">-&gt;</operator><name pos:start="513:49" pos:end="513:57">low_delay</name></name></expr>)</condition> <block pos:start="513:60" pos:end="521:5">{<block_content pos:start="515:9" pos:end="519:55">

        <if_stmt pos:start="515:9" pos:end="517:23"><if pos:start="515:9" pos:end="517:23">if <condition pos:start="515:12" pos:end="515:71">(<expr pos:start="515:13" pos:end="515:70"><operator pos:start="515:13" pos:end="515:13">(</operator><name pos:start="515:14" pos:end="515:16">ret</name> <operator pos:start="515:18" pos:end="515:18">=</operator> <call pos:start="515:20" pos:end="515:65"><name pos:start="515:20" pos:end="515:31">av_frame_ref</name><argument_list pos:start="515:32" pos:end="515:65">(<argument pos:start="515:33" pos:end="515:36"><expr pos:start="515:33" pos:end="515:36"><name pos:start="515:33" pos:end="515:36">pict</name></expr></argument>, <argument pos:start="515:39" pos:end="515:64"><expr pos:start="515:39" pos:end="515:64"><operator pos:start="515:39" pos:end="515:39">&amp;</operator><name pos:start="515:40" pos:end="515:64"><name pos:start="515:40" pos:end="515:40">s</name><operator pos:start="515:41" pos:end="515:42">-&gt;</operator><name pos:start="515:43" pos:end="515:61">current_picture_ptr</name><operator pos:start="515:62" pos:end="515:63">-&gt;</operator><name pos:start="515:64" pos:end="515:64">f</name></name></expr></argument>)</argument_list></call><operator pos:start="515:66" pos:end="515:66">)</operator> <operator pos:start="515:68" pos:end="515:68">&lt;</operator> <literal type="number" pos:start="515:70" pos:end="515:70">0</literal></expr>)</condition><block type="pseudo" pos:start="517:13" pos:end="517:23"><block_content pos:start="517:13" pos:end="517:23">

            <return pos:start="517:13" pos:end="517:23">return <expr pos:start="517:20" pos:end="517:22"><name pos:start="517:20" pos:end="517:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="519:9" pos:end="519:55"><expr pos:start="519:9" pos:end="519:54"><call pos:start="519:9" pos:end="519:54"><name pos:start="519:9" pos:end="519:27">ff_print_debug_info</name><argument_list pos:start="519:28" pos:end="519:54">(<argument pos:start="519:29" pos:end="519:29"><expr pos:start="519:29" pos:end="519:29"><name pos:start="519:29" pos:end="519:29">s</name></expr></argument>, <argument pos:start="519:32" pos:end="519:53"><expr pos:start="519:32" pos:end="519:53"><name pos:start="519:32" pos:end="519:53"><name pos:start="519:32" pos:end="519:32">s</name><operator pos:start="519:33" pos:end="519:34">-&gt;</operator><name pos:start="519:35" pos:end="519:53">current_picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="521:7" pos:end="529:5">else if <condition pos:start="521:15" pos:end="521:43">(<expr pos:start="521:16" pos:end="521:42"><name pos:start="521:16" pos:end="521:34"><name pos:start="521:16" pos:end="521:16">s</name><operator pos:start="521:17" pos:end="521:18">-&gt;</operator><name pos:start="521:19" pos:end="521:34">last_picture_ptr</name></name> <operator pos:start="521:36" pos:end="521:37">!=</operator> <name pos:start="521:39" pos:end="521:42">NULL</name></expr>)</condition> <block pos:start="521:45" pos:end="529:5">{<block_content pos:start="523:9" pos:end="527:52">

        <if_stmt pos:start="523:9" pos:end="525:23"><if pos:start="523:9" pos:end="525:23">if <condition pos:start="523:12" pos:end="523:68">(<expr pos:start="523:13" pos:end="523:67"><operator pos:start="523:13" pos:end="523:13">(</operator><name pos:start="523:14" pos:end="523:16">ret</name> <operator pos:start="523:18" pos:end="523:18">=</operator> <call pos:start="523:20" pos:end="523:62"><name pos:start="523:20" pos:end="523:31">av_frame_ref</name><argument_list pos:start="523:32" pos:end="523:62">(<argument pos:start="523:33" pos:end="523:36"><expr pos:start="523:33" pos:end="523:36"><name pos:start="523:33" pos:end="523:36">pict</name></expr></argument>, <argument pos:start="523:39" pos:end="523:61"><expr pos:start="523:39" pos:end="523:61"><operator pos:start="523:39" pos:end="523:39">&amp;</operator><name pos:start="523:40" pos:end="523:61"><name pos:start="523:40" pos:end="523:40">s</name><operator pos:start="523:41" pos:end="523:42">-&gt;</operator><name pos:start="523:43" pos:end="523:58">last_picture_ptr</name><operator pos:start="523:59" pos:end="523:60">-&gt;</operator><name pos:start="523:61" pos:end="523:61">f</name></name></expr></argument>)</argument_list></call><operator pos:start="523:63" pos:end="523:63">)</operator> <operator pos:start="523:65" pos:end="523:65">&lt;</operator> <literal type="number" pos:start="523:67" pos:end="523:67">0</literal></expr>)</condition><block type="pseudo" pos:start="525:13" pos:end="525:23"><block_content pos:start="525:13" pos:end="525:23">

            <return pos:start="525:13" pos:end="525:23">return <expr pos:start="525:20" pos:end="525:22"><name pos:start="525:20" pos:end="525:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="527:9" pos:end="527:52"><expr pos:start="527:9" pos:end="527:51"><call pos:start="527:9" pos:end="527:51"><name pos:start="527:9" pos:end="527:27">ff_print_debug_info</name><argument_list pos:start="527:28" pos:end="527:51">(<argument pos:start="527:29" pos:end="527:29"><expr pos:start="527:29" pos:end="527:29"><name pos:start="527:29" pos:end="527:29">s</name></expr></argument>, <argument pos:start="527:32" pos:end="527:50"><expr pos:start="527:32" pos:end="527:50"><name pos:start="527:32" pos:end="527:50"><name pos:start="527:32" pos:end="527:32">s</name><operator pos:start="527:33" pos:end="527:34">-&gt;</operator><name pos:start="527:35" pos:end="527:50">last_picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="533:5" pos:end="535:23"><if pos:start="533:5" pos:end="535:23">if <condition pos:start="533:8" pos:end="533:44">(<expr pos:start="533:9" pos:end="533:43"><name pos:start="533:9" pos:end="533:27"><name pos:start="533:9" pos:end="533:9">s</name><operator pos:start="533:10" pos:end="533:11">-&gt;</operator><name pos:start="533:12" pos:end="533:27">last_picture_ptr</name></name> <operator pos:start="533:29" pos:end="533:30">||</operator> <name pos:start="533:32" pos:end="533:43"><name pos:start="533:32" pos:end="533:32">s</name><operator pos:start="533:33" pos:end="533:34">-&gt;</operator><name pos:start="533:35" pos:end="533:43">low_delay</name></name></expr>)</condition><block type="pseudo" pos:start="535:9" pos:end="535:23"><block_content pos:start="535:9" pos:end="535:23">

        <expr_stmt pos:start="535:9" pos:end="535:23"><expr pos:start="535:9" pos:end="535:22"><operator pos:start="535:9" pos:end="535:9">*</operator><name pos:start="535:10" pos:end="535:18">got_frame</name> <operator pos:start="535:20" pos:end="535:20">=</operator> <literal type="number" pos:start="535:22" pos:end="535:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="539:5" pos:end="545:47"><if pos:start="539:5" pos:end="541:19">if <condition pos:start="539:8" pos:end="539:56">(<expr pos:start="539:9" pos:end="539:55"><name pos:start="539:9" pos:end="539:11">ret</name> <operator pos:start="539:13" pos:end="539:14">&amp;&amp;</operator> <operator pos:start="539:16" pos:end="539:16">(</operator><name pos:start="539:17" pos:end="539:38"><name pos:start="539:17" pos:end="539:21">avctx</name><operator pos:start="539:22" pos:end="539:23">-&gt;</operator><name pos:start="539:24" pos:end="539:38">err_recognition</name></name> <operator pos:start="539:40" pos:end="539:40">&amp;</operator> <name pos:start="539:42" pos:end="539:54">AV_EF_EXPLODE</name><operator pos:start="539:55" pos:end="539:55">)</operator></expr>)</condition><block type="pseudo" pos:start="541:9" pos:end="541:19"><block_content pos:start="541:9" pos:end="541:19">

        <return pos:start="541:9" pos:end="541:19">return <expr pos:start="541:16" pos:end="541:18"><name pos:start="541:16" pos:end="541:18">ret</name></expr>;</return></block_content></block></if>

    <else pos:start="543:5" pos:end="545:47">else<block type="pseudo" pos:start="545:9" pos:end="545:47"><block_content pos:start="545:9" pos:end="545:47">

        <return pos:start="545:9" pos:end="545:47">return <expr pos:start="545:16" pos:end="545:46"><call pos:start="545:16" pos:end="545:46"><name pos:start="545:16" pos:end="545:33">get_consumed_bytes</name><argument_list pos:start="545:34" pos:end="545:46">(<argument pos:start="545:35" pos:end="545:35"><expr pos:start="545:35" pos:end="545:35"><name pos:start="545:35" pos:end="545:35">s</name></expr></argument>, <argument pos:start="545:38" pos:end="545:45"><expr pos:start="545:38" pos:end="545:45"><name pos:start="545:38" pos:end="545:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
