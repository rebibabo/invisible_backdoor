<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24241.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:38">qtrle_decode_2n4bpp</name><parameter_list pos:start="1:39" pos:end="3:71">(<parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><name pos:start="1:40" pos:end="1:51">QtrleContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:70"><decl pos:start="1:57" pos:end="1:70"><type pos:start="1:57" pos:end="1:70"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:70">stream_ptr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:40"><decl pos:start="3:30" pos:end="3:40"><type pos:start="3:30" pos:end="3:40"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:40">row_ptr</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:61"><decl pos:start="3:43" pos:end="3:61"><type pos:start="3:43" pos:end="3:61"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:61">lines_to_change</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:70"><decl pos:start="3:64" pos:end="3:70"><type pos:start="3:64" pos:end="3:70"><name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:70">bpp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="113:1">{<block_content pos:start="7:5" pos:end="111:5">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">rle_code</name></decl>, <decl pos:start="7:19" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:19">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">pixel_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">row_inc</name> <init pos:start="11:17" pos:end="11:38">= <expr pos:start="11:19" pos:end="11:38"><name pos:start="11:19" pos:end="11:38"><name pos:start="11:19" pos:end="11:19">s</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:26">frame</name><operator pos:start="11:27" pos:end="11:27">.</operator><name pos:start="11:28" pos:end="11:35">linesize</name><index pos:start="11:36" pos:end="11:38">[<expr pos:start="11:37" pos:end="11:37"><literal type="number" pos:start="11:37" pos:end="11:37">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">char</name></type> <name pos:start="13:19" pos:end="13:24"><name pos:start="13:19" pos:end="13:20">pi</name><index pos:start="13:21" pos:end="13:24">[<expr pos:start="13:22" pos:end="13:23"><literal type="number" pos:start="13:22" pos:end="13:23">16</literal></expr>]</index></name></decl>;</decl_stmt>  <comment type="block" pos:start="13:28" pos:end="13:51">/* 16 palette indices */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:42"><decl pos:start="15:5" pos:end="15:41"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">char</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:22">rgb</name> <init pos:start="15:24" pos:end="15:41">= <expr pos:start="15:26" pos:end="15:41"><name pos:start="15:26" pos:end="15:41"><name pos:start="15:26" pos:end="15:26">s</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:33">frame</name><operator pos:start="15:34" pos:end="15:34">.</operator><name pos:start="15:35" pos:end="15:38">data</name><index pos:start="15:39" pos:end="15:41">[<expr pos:start="15:40" pos:end="15:40"><literal type="number" pos:start="15:40" pos:end="15:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:62"><decl pos:start="17:5" pos:end="17:61"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">pixel_limit</name> <init pos:start="17:21" pos:end="17:61">= <expr pos:start="17:23" pos:end="17:61"><name pos:start="17:23" pos:end="17:42"><name pos:start="17:23" pos:end="17:23">s</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:30">frame</name><operator pos:start="17:31" pos:end="17:31">.</operator><name pos:start="17:32" pos:end="17:39">linesize</name><index pos:start="17:40" pos:end="17:42">[<expr pos:start="17:41" pos:end="17:41"><literal type="number" pos:start="17:41" pos:end="17:41">0</literal></expr>]</index></name> <operator pos:start="17:44" pos:end="17:44">*</operator> <name pos:start="17:46" pos:end="17:61"><name pos:start="17:46" pos:end="17:46">s</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:53">avctx</name><operator pos:start="17:54" pos:end="17:55">-&gt;</operator><name pos:start="17:56" pos:end="17:61">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:41"><decl pos:start="19:5" pos:end="19:40"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">num_pixels</name> <init pos:start="19:20" pos:end="19:40">= <expr pos:start="19:22" pos:end="19:40"><ternary pos:start="19:22" pos:end="19:40"><condition pos:start="19:22" pos:end="19:33"><expr pos:start="19:22" pos:end="19:31"><operator pos:start="19:22" pos:end="19:22">(</operator><name pos:start="19:23" pos:end="19:25">bpp</name> <operator pos:start="19:27" pos:end="19:28">==</operator> <literal type="number" pos:start="19:30" pos:end="19:30">4</literal><operator pos:start="19:31" pos:end="19:31">)</operator></expr> ?</condition><then pos:start="19:35" pos:end="19:35"> <expr pos:start="19:35" pos:end="19:35"><literal type="number" pos:start="19:35" pos:end="19:35">8</literal></expr> </then><else pos:start="19:37" pos:end="19:40">: <expr pos:start="19:39" pos:end="19:40"><literal type="number" pos:start="19:39" pos:end="19:40">16</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <while pos:start="23:5" pos:end="111:5">while <condition pos:start="23:11" pos:end="23:29">(<expr pos:start="23:12" pos:end="23:28"><name pos:start="23:12" pos:end="23:26">lines_to_change</name><operator pos:start="23:27" pos:end="23:28">--</operator></expr>)</condition> <block pos:start="23:31" pos:end="111:5">{<block_content pos:start="25:9" pos:end="109:27">

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><call pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:24">CHECK_STREAM_PTR</name><argument_list pos:start="25:25" pos:end="25:27">(<argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:72"><expr pos:start="27:9" pos:end="27:71"><name pos:start="27:9" pos:end="27:17">pixel_ptr</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:27">row_ptr</name> <operator pos:start="27:29" pos:end="27:29">+</operator> <operator pos:start="27:31" pos:end="27:31">(</operator><name pos:start="27:32" pos:end="27:41">num_pixels</name> <operator pos:start="27:43" pos:end="27:43">*</operator> <operator pos:start="27:45" pos:end="27:45">(</operator><name pos:start="27:46" pos:end="27:65"><name pos:start="27:46" pos:end="27:46">s</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:51">buf</name><index pos:start="27:52" pos:end="27:65">[<expr pos:start="27:53" pos:end="27:64"><name pos:start="27:53" pos:end="27:62">stream_ptr</name><operator pos:start="27:63" pos:end="27:64">++</operator></expr>]</index></name> <operator pos:start="27:67" pos:end="27:67">-</operator> <literal type="number" pos:start="27:69" pos:end="27:69">1</literal><operator pos:start="27:70" pos:end="27:70">)</operator><operator pos:start="27:71" pos:end="27:71">)</operator></expr>;</expr_stmt>




        <while pos:start="32:9" pos:end="107:9">while <condition pos:start="32:15" pos:end="32:68">(<expr pos:start="32:16" pos:end="32:67"><operator pos:start="32:16" pos:end="32:16">(</operator><name pos:start="32:17" pos:end="32:24">rle_code</name> <operator pos:start="32:26" pos:end="32:26">=</operator> <operator pos:start="32:28" pos:end="32:28">(</operator><name pos:start="32:29" pos:end="32:34">signed</name> <name pos:start="32:36" pos:end="32:39">char</name><operator pos:start="32:40" pos:end="32:40">)</operator><name pos:start="32:41" pos:end="32:60"><name pos:start="32:41" pos:end="32:41">s</name><operator pos:start="32:42" pos:end="32:43">-&gt;</operator><name pos:start="32:44" pos:end="32:46">buf</name><index pos:start="32:47" pos:end="32:60">[<expr pos:start="32:48" pos:end="32:59"><name pos:start="32:48" pos:end="32:57">stream_ptr</name><operator pos:start="32:58" pos:end="32:59">++</operator></expr>]</index></name><operator pos:start="32:61" pos:end="32:61">)</operator> <operator pos:start="32:63" pos:end="32:64">!=</operator> <operator pos:start="32:66" pos:end="32:66">-</operator><literal type="number" pos:start="32:67" pos:end="32:67">1</literal></expr>)</condition> <block pos:start="32:70" pos:end="107:9">{<block_content pos:start="34:13" pos:end="105:13">

            <if_stmt pos:start="34:13" pos:end="105:13"><if pos:start="34:13" pos:end="43:13">if <condition pos:start="34:16" pos:end="34:30">(<expr pos:start="34:17" pos:end="34:29"><name pos:start="34:17" pos:end="34:24">rle_code</name> <operator pos:start="34:26" pos:end="34:27">==</operator> <literal type="number" pos:start="34:29" pos:end="34:29">0</literal></expr>)</condition> <block pos:start="34:32" pos:end="43:13">{<block_content pos:start="38:17" pos:end="40:71">

                <comment type="block" pos:start="36:17" pos:end="36:61">/* there's another skip code in the stream */</comment>

                <expr_stmt pos:start="38:17" pos:end="38:36"><expr pos:start="38:17" pos:end="38:35"><call pos:start="38:17" pos:end="38:35"><name pos:start="38:17" pos:end="38:32">CHECK_STREAM_PTR</name><argument_list pos:start="38:33" pos:end="38:35">(<argument pos:start="38:34" pos:end="38:34"><expr pos:start="38:34" pos:end="38:34"><literal type="number" pos:start="38:34" pos:end="38:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="40:17" pos:end="40:71"><expr pos:start="40:17" pos:end="40:70"><name pos:start="40:17" pos:end="40:25">pixel_ptr</name> <operator pos:start="40:27" pos:end="40:28">+=</operator> <operator pos:start="40:30" pos:end="40:30">(</operator><name pos:start="40:31" pos:end="40:40">num_pixels</name> <operator pos:start="40:42" pos:end="40:42">*</operator> <operator pos:start="40:44" pos:end="40:44">(</operator><name pos:start="40:45" pos:end="40:64"><name pos:start="40:45" pos:end="40:45">s</name><operator pos:start="40:46" pos:end="40:47">-&gt;</operator><name pos:start="40:48" pos:end="40:50">buf</name><index pos:start="40:51" pos:end="40:64">[<expr pos:start="40:52" pos:end="40:63"><name pos:start="40:52" pos:end="40:61">stream_ptr</name><operator pos:start="40:62" pos:end="40:63">++</operator></expr>]</index></name> <operator pos:start="40:66" pos:end="40:66">-</operator> <literal type="number" pos:start="40:68" pos:end="40:68">1</literal><operator pos:start="40:69" pos:end="40:69">)</operator><operator pos:start="40:70" pos:end="40:70">)</operator></expr>;</expr_stmt>


            </block_content>}</block></if> <if type="elseif" pos:start="43:15" pos:end="73:13">else if <condition pos:start="43:23" pos:end="43:36">(<expr pos:start="43:24" pos:end="43:35"><name pos:start="43:24" pos:end="43:31">rle_code</name> <operator pos:start="43:33" pos:end="43:33">&lt;</operator> <literal type="number" pos:start="43:35" pos:end="43:35">0</literal></expr>)</condition> <block pos:start="43:38" pos:end="73:13">{<block_content pos:start="47:17" pos:end="71:17">

                <comment type="block" pos:start="45:17" pos:end="45:48">/* decode the run length code */</comment>

                <expr_stmt pos:start="47:17" pos:end="47:37"><expr pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:24">rle_code</name> <operator pos:start="47:26" pos:end="47:26">=</operator> <operator pos:start="47:28" pos:end="47:28">-</operator><name pos:start="47:29" pos:end="47:36">rle_code</name></expr>;</expr_stmt>

                <comment type="block" pos:start="49:17" pos:end="51:61">/* get the next 4 bytes from the stream, treat them as palette

                 * indexes, and output them rle_code times */</comment>

                <expr_stmt pos:start="53:17" pos:end="53:36"><expr pos:start="53:17" pos:end="53:35"><call pos:start="53:17" pos:end="53:35"><name pos:start="53:17" pos:end="53:32">CHECK_STREAM_PTR</name><argument_list pos:start="53:33" pos:end="53:35">(<argument pos:start="53:34" pos:end="53:34"><expr pos:start="53:34" pos:end="53:34"><literal type="number" pos:start="53:34" pos:end="53:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="55:17" pos:end="61:17">for <control pos:start="55:21" pos:end="55:51">(<init pos:start="55:22" pos:end="55:38"><expr pos:start="55:22" pos:end="55:37"><name pos:start="55:22" pos:end="55:22">i</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:35">num_pixels</name><operator pos:start="55:36" pos:end="55:36">-</operator><literal type="number" pos:start="55:37" pos:end="55:37">1</literal></expr>;</init> <condition pos:start="55:40" pos:end="55:46"><expr pos:start="55:40" pos:end="55:45"><name pos:start="55:40" pos:end="55:40">i</name> <operator pos:start="55:42" pos:end="55:43">&gt;=</operator> <literal type="number" pos:start="55:45" pos:end="55:45">0</literal></expr>;</condition> <incr pos:start="55:48" pos:end="55:50"><expr pos:start="55:48" pos:end="55:50"><name pos:start="55:48" pos:end="55:48">i</name><operator pos:start="55:49" pos:end="55:50">--</operator></expr></incr>)</control> <block pos:start="55:53" pos:end="61:17">{<block_content pos:start="57:21" pos:end="59:66">

                    <expr_stmt pos:start="57:21" pos:end="57:97"><expr pos:start="57:21" pos:end="57:96"><name pos:start="57:21" pos:end="57:38"><name pos:start="57:21" pos:end="57:22">pi</name><index pos:start="57:23" pos:end="57:38">[<expr pos:start="57:24" pos:end="57:37"><name pos:start="57:24" pos:end="57:33">num_pixels</name><operator pos:start="57:34" pos:end="57:34">-</operator><literal type="number" pos:start="57:35" pos:end="57:35">1</literal><operator pos:start="57:36" pos:end="57:36">-</operator><name pos:start="57:37" pos:end="57:37">i</name></expr>]</index></name> <operator pos:start="57:40" pos:end="57:40">=</operator> <operator pos:start="57:42" pos:end="57:42">(</operator><name pos:start="57:43" pos:end="57:60"><name pos:start="57:43" pos:end="57:43">s</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:48">buf</name><index pos:start="57:49" pos:end="57:60">[<expr pos:start="57:50" pos:end="57:59"><name pos:start="57:50" pos:end="57:59">stream_ptr</name></expr>]</index></name> <operator pos:start="57:62" pos:end="57:63">&gt;&gt;</operator> <operator pos:start="57:65" pos:end="57:65">(</operator><operator pos:start="57:66" pos:end="57:66">(</operator><name pos:start="57:67" pos:end="57:67">i</name><operator pos:start="57:68" pos:end="57:68">*</operator><name pos:start="57:69" pos:end="57:71">bpp</name><operator pos:start="57:72" pos:end="57:72">)</operator> <operator pos:start="57:74" pos:end="57:74">&amp;</operator> <literal type="number" pos:start="57:76" pos:end="57:79">0x07</literal><operator pos:start="57:80" pos:end="57:80">)</operator><operator pos:start="57:81" pos:end="57:81">)</operator> <operator pos:start="57:83" pos:end="57:83">&amp;</operator> <operator pos:start="57:85" pos:end="57:85">(</operator><operator pos:start="57:86" pos:end="57:86">(</operator><literal type="number" pos:start="57:87" pos:end="57:87">1</literal><operator pos:start="57:88" pos:end="57:89">&lt;&lt;</operator><name pos:start="57:90" pos:end="57:92">bpp</name><operator pos:start="57:93" pos:end="57:93">)</operator><operator pos:start="57:94" pos:end="57:94">-</operator><literal type="number" pos:start="57:95" pos:end="57:95">1</literal><operator pos:start="57:96" pos:end="57:96">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:66"><expr pos:start="59:21" pos:end="59:65"><name pos:start="59:21" pos:end="59:30">stream_ptr</name><operator pos:start="59:31" pos:end="59:32">+=</operator> <operator pos:start="59:34" pos:end="59:34">(</operator><operator pos:start="59:35" pos:end="59:35">(</operator><name pos:start="59:36" pos:end="59:36">i</name> <operator pos:start="59:38" pos:end="59:38">&amp;</operator> <operator pos:start="59:40" pos:end="59:40">(</operator><operator pos:start="59:41" pos:end="59:41">(</operator><name pos:start="59:42" pos:end="59:51">num_pixels</name><operator pos:start="59:52" pos:end="59:53">&gt;&gt;</operator><literal type="number" pos:start="59:54" pos:end="59:54">2</literal><operator pos:start="59:55" pos:end="59:55">)</operator><operator pos:start="59:56" pos:end="59:56">-</operator><literal type="number" pos:start="59:57" pos:end="59:57">1</literal><operator pos:start="59:58" pos:end="59:58">)</operator><operator pos:start="59:59" pos:end="59:59">)</operator> <operator pos:start="59:61" pos:end="59:62">==</operator> <literal type="number" pos:start="59:64" pos:end="59:64">0</literal><operator pos:start="59:65" pos:end="59:65">)</operator></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="63:17" pos:end="63:55"><expr pos:start="63:17" pos:end="63:54"><call pos:start="63:17" pos:end="63:54"><name pos:start="63:17" pos:end="63:31">CHECK_PIXEL_PTR</name><argument_list pos:start="63:32" pos:end="63:54">(<argument pos:start="63:33" pos:end="63:53"><expr pos:start="63:33" pos:end="63:53"><name pos:start="63:33" pos:end="63:40">rle_code</name> <operator pos:start="63:42" pos:end="63:42">*</operator> <name pos:start="63:44" pos:end="63:53">num_pixels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <while pos:start="65:17" pos:end="71:17">while <condition pos:start="65:23" pos:end="65:34">(<expr pos:start="65:24" pos:end="65:33"><name pos:start="65:24" pos:end="65:31">rle_code</name><operator pos:start="65:32" pos:end="65:33">--</operator></expr>)</condition> <block pos:start="65:36" pos:end="71:17">{<block_content pos:start="67:21" pos:end="69:49">

                    <for pos:start="67:21" pos:end="69:49">for <control pos:start="67:25" pos:end="67:52">(<init pos:start="67:26" pos:end="67:31"><expr pos:start="67:26" pos:end="67:30"><name pos:start="67:26" pos:end="67:26">i</name> <operator pos:start="67:28" pos:end="67:28">=</operator> <literal type="number" pos:start="67:30" pos:end="67:30">0</literal></expr>;</init> <condition pos:start="67:33" pos:end="67:47"><expr pos:start="67:33" pos:end="67:46"><name pos:start="67:33" pos:end="67:33">i</name> <operator pos:start="67:35" pos:end="67:35">&lt;</operator> <name pos:start="67:37" pos:end="67:46">num_pixels</name></expr>;</condition> <incr pos:start="67:49" pos:end="67:51"><expr pos:start="67:49" pos:end="67:51"><name pos:start="67:49" pos:end="67:49">i</name><operator pos:start="67:50" pos:end="67:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:25" pos:end="69:49"><block_content pos:start="69:25" pos:end="69:49">

                        <expr_stmt pos:start="69:25" pos:end="69:49"><expr pos:start="69:25" pos:end="69:48"><name pos:start="69:25" pos:end="69:40"><name pos:start="69:25" pos:end="69:27">rgb</name><index pos:start="69:28" pos:end="69:40">[<expr pos:start="69:29" pos:end="69:39"><name pos:start="69:29" pos:end="69:37">pixel_ptr</name><operator pos:start="69:38" pos:end="69:39">++</operator></expr>]</index></name> <operator pos:start="69:42" pos:end="69:42">=</operator> <name pos:start="69:44" pos:end="69:48"><name pos:start="69:44" pos:end="69:45">pi</name><index pos:start="69:46" pos:end="69:48">[<expr pos:start="69:47" pos:end="69:47"><name pos:start="69:47" pos:end="69:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></while>

            </block_content>}</block></if> <else pos:start="73:15" pos:end="105:13">else <block pos:start="73:20" pos:end="105:13">{<block_content pos:start="77:17" pos:end="103:17">

                <comment type="block" pos:start="75:17" pos:end="75:68">/* copy the same pixel directly to output 4 times */</comment>

                <expr_stmt pos:start="77:17" pos:end="77:30"><expr pos:start="77:17" pos:end="77:29"><name pos:start="77:17" pos:end="77:24">rle_code</name> <operator pos:start="77:26" pos:end="77:27">*=</operator> <literal type="number" pos:start="77:29" pos:end="77:29">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:43"><expr pos:start="79:17" pos:end="79:42"><call pos:start="79:17" pos:end="79:42"><name pos:start="79:17" pos:end="79:32">CHECK_STREAM_PTR</name><argument_list pos:start="79:33" pos:end="79:42">(<argument pos:start="79:34" pos:end="79:41"><expr pos:start="79:34" pos:end="79:41"><name pos:start="79:34" pos:end="79:41">rle_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:58"><expr pos:start="81:17" pos:end="81:57"><call pos:start="81:17" pos:end="81:57"><name pos:start="81:17" pos:end="81:31">CHECK_PIXEL_PTR</name><argument_list pos:start="81:32" pos:end="81:57">(<argument pos:start="81:33" pos:end="81:56"><expr pos:start="81:33" pos:end="81:56"><name pos:start="81:33" pos:end="81:40">rle_code</name><operator pos:start="81:41" pos:end="81:41">*</operator><operator pos:start="81:42" pos:end="81:42">(</operator><name pos:start="81:43" pos:end="81:52">num_pixels</name><operator pos:start="81:53" pos:end="81:54">&gt;&gt;</operator><literal type="number" pos:start="81:55" pos:end="81:55">2</literal><operator pos:start="81:56" pos:end="81:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <while pos:start="83:17" pos:end="103:17">while <condition pos:start="83:23" pos:end="83:34">(<expr pos:start="83:24" pos:end="83:33"><name pos:start="83:24" pos:end="83:31">rle_code</name><operator pos:start="83:32" pos:end="83:33">--</operator></expr>)</condition> <block pos:start="83:36" pos:end="103:17">{<block_content pos:start="85:21" pos:end="101:21">

                    <if_stmt pos:start="85:21" pos:end="101:21"><if pos:start="85:21" pos:end="91:21">if<condition pos:start="85:23" pos:end="85:32">(<expr pos:start="85:24" pos:end="85:31"><name pos:start="85:24" pos:end="85:26">bpp</name> <operator pos:start="85:28" pos:end="85:29">==</operator> <literal type="number" pos:start="85:31" pos:end="85:31">4</literal></expr>)</condition> <block pos:start="85:34" pos:end="91:21">{<block_content pos:start="87:25" pos:end="89:73">

                        <expr_stmt pos:start="87:25" pos:end="87:78"><expr pos:start="87:25" pos:end="87:77"><name pos:start="87:25" pos:end="87:40"><name pos:start="87:25" pos:end="87:27">rgb</name><index pos:start="87:28" pos:end="87:40">[<expr pos:start="87:29" pos:end="87:39"><name pos:start="87:29" pos:end="87:37">pixel_ptr</name><operator pos:start="87:38" pos:end="87:39">++</operator></expr>]</index></name> <operator pos:start="87:42" pos:end="87:42">=</operator> <operator pos:start="87:44" pos:end="87:44">(</operator><operator pos:start="87:45" pos:end="87:45">(</operator><name pos:start="87:46" pos:end="87:63"><name pos:start="87:46" pos:end="87:46">s</name><operator pos:start="87:47" pos:end="87:48">-&gt;</operator><name pos:start="87:49" pos:end="87:51">buf</name><index pos:start="87:52" pos:end="87:63">[<expr pos:start="87:53" pos:end="87:62"><name pos:start="87:53" pos:end="87:62">stream_ptr</name></expr>]</index></name><operator pos:start="87:64" pos:end="87:64">)</operator> <operator pos:start="87:66" pos:end="87:67">&gt;&gt;</operator> <literal type="number" pos:start="87:69" pos:end="87:69">4</literal><operator pos:start="87:70" pos:end="87:70">)</operator> <operator pos:start="87:72" pos:end="87:72">&amp;</operator> <literal type="number" pos:start="87:74" pos:end="87:77">0x0f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="89:25" pos:end="89:73"><expr pos:start="89:25" pos:end="89:72"><name pos:start="89:25" pos:end="89:40"><name pos:start="89:25" pos:end="89:27">rgb</name><index pos:start="89:28" pos:end="89:40">[<expr pos:start="89:29" pos:end="89:39"><name pos:start="89:29" pos:end="89:37">pixel_ptr</name><operator pos:start="89:38" pos:end="89:39">++</operator></expr>]</index></name> <operator pos:start="89:42" pos:end="89:42">=</operator> <operator pos:start="89:44" pos:end="89:44">(</operator><name pos:start="89:45" pos:end="89:64"><name pos:start="89:45" pos:end="89:45">s</name><operator pos:start="89:46" pos:end="89:47">-&gt;</operator><name pos:start="89:48" pos:end="89:50">buf</name><index pos:start="89:51" pos:end="89:64">[<expr pos:start="89:52" pos:end="89:63"><name pos:start="89:52" pos:end="89:61">stream_ptr</name><operator pos:start="89:62" pos:end="89:63">++</operator></expr>]</index></name><operator pos:start="89:65" pos:end="89:65">)</operator> <operator pos:start="89:67" pos:end="89:67">&amp;</operator> <literal type="number" pos:start="89:69" pos:end="89:72">0x0f</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="91:23" pos:end="101:21">else <block pos:start="91:28" pos:end="101:21">{<block_content pos:start="93:25" pos:end="99:73">

                        <expr_stmt pos:start="93:25" pos:end="93:78"><expr pos:start="93:25" pos:end="93:77"><name pos:start="93:25" pos:end="93:40"><name pos:start="93:25" pos:end="93:27">rgb</name><index pos:start="93:28" pos:end="93:40">[<expr pos:start="93:29" pos:end="93:39"><name pos:start="93:29" pos:end="93:37">pixel_ptr</name><operator pos:start="93:38" pos:end="93:39">++</operator></expr>]</index></name> <operator pos:start="93:42" pos:end="93:42">=</operator> <operator pos:start="93:44" pos:end="93:44">(</operator><operator pos:start="93:45" pos:end="93:45">(</operator><name pos:start="93:46" pos:end="93:63"><name pos:start="93:46" pos:end="93:46">s</name><operator pos:start="93:47" pos:end="93:48">-&gt;</operator><name pos:start="93:49" pos:end="93:51">buf</name><index pos:start="93:52" pos:end="93:63">[<expr pos:start="93:53" pos:end="93:62"><name pos:start="93:53" pos:end="93:62">stream_ptr</name></expr>]</index></name><operator pos:start="93:64" pos:end="93:64">)</operator> <operator pos:start="93:66" pos:end="93:67">&gt;&gt;</operator> <literal type="number" pos:start="93:69" pos:end="93:69">6</literal><operator pos:start="93:70" pos:end="93:70">)</operator> <operator pos:start="93:72" pos:end="93:72">&amp;</operator> <literal type="number" pos:start="93:74" pos:end="93:77">0x03</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="95:25" pos:end="95:78"><expr pos:start="95:25" pos:end="95:77"><name pos:start="95:25" pos:end="95:40"><name pos:start="95:25" pos:end="95:27">rgb</name><index pos:start="95:28" pos:end="95:40">[<expr pos:start="95:29" pos:end="95:39"><name pos:start="95:29" pos:end="95:37">pixel_ptr</name><operator pos:start="95:38" pos:end="95:39">++</operator></expr>]</index></name> <operator pos:start="95:42" pos:end="95:42">=</operator> <operator pos:start="95:44" pos:end="95:44">(</operator><operator pos:start="95:45" pos:end="95:45">(</operator><name pos:start="95:46" pos:end="95:63"><name pos:start="95:46" pos:end="95:46">s</name><operator pos:start="95:47" pos:end="95:48">-&gt;</operator><name pos:start="95:49" pos:end="95:51">buf</name><index pos:start="95:52" pos:end="95:63">[<expr pos:start="95:53" pos:end="95:62"><name pos:start="95:53" pos:end="95:62">stream_ptr</name></expr>]</index></name><operator pos:start="95:64" pos:end="95:64">)</operator> <operator pos:start="95:66" pos:end="95:67">&gt;&gt;</operator> <literal type="number" pos:start="95:69" pos:end="95:69">4</literal><operator pos:start="95:70" pos:end="95:70">)</operator> <operator pos:start="95:72" pos:end="95:72">&amp;</operator> <literal type="number" pos:start="95:74" pos:end="95:77">0x03</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="97:25" pos:end="97:78"><expr pos:start="97:25" pos:end="97:77"><name pos:start="97:25" pos:end="97:40"><name pos:start="97:25" pos:end="97:27">rgb</name><index pos:start="97:28" pos:end="97:40">[<expr pos:start="97:29" pos:end="97:39"><name pos:start="97:29" pos:end="97:37">pixel_ptr</name><operator pos:start="97:38" pos:end="97:39">++</operator></expr>]</index></name> <operator pos:start="97:42" pos:end="97:42">=</operator> <operator pos:start="97:44" pos:end="97:44">(</operator><operator pos:start="97:45" pos:end="97:45">(</operator><name pos:start="97:46" pos:end="97:63"><name pos:start="97:46" pos:end="97:46">s</name><operator pos:start="97:47" pos:end="97:48">-&gt;</operator><name pos:start="97:49" pos:end="97:51">buf</name><index pos:start="97:52" pos:end="97:63">[<expr pos:start="97:53" pos:end="97:62"><name pos:start="97:53" pos:end="97:62">stream_ptr</name></expr>]</index></name><operator pos:start="97:64" pos:end="97:64">)</operator> <operator pos:start="97:66" pos:end="97:67">&gt;&gt;</operator> <literal type="number" pos:start="97:69" pos:end="97:69">2</literal><operator pos:start="97:70" pos:end="97:70">)</operator> <operator pos:start="97:72" pos:end="97:72">&amp;</operator> <literal type="number" pos:start="97:74" pos:end="97:77">0x03</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="99:25" pos:end="99:73"><expr pos:start="99:25" pos:end="99:72"><name pos:start="99:25" pos:end="99:40"><name pos:start="99:25" pos:end="99:27">rgb</name><index pos:start="99:28" pos:end="99:40">[<expr pos:start="99:29" pos:end="99:39"><name pos:start="99:29" pos:end="99:37">pixel_ptr</name><operator pos:start="99:38" pos:end="99:39">++</operator></expr>]</index></name> <operator pos:start="99:42" pos:end="99:42">=</operator> <operator pos:start="99:44" pos:end="99:44">(</operator><name pos:start="99:45" pos:end="99:64"><name pos:start="99:45" pos:end="99:45">s</name><operator pos:start="99:46" pos:end="99:47">-&gt;</operator><name pos:start="99:48" pos:end="99:50">buf</name><index pos:start="99:51" pos:end="99:64">[<expr pos:start="99:52" pos:end="99:63"><name pos:start="99:52" pos:end="99:61">stream_ptr</name><operator pos:start="99:62" pos:end="99:63">++</operator></expr>]</index></name><operator pos:start="99:65" pos:end="99:65">)</operator> <operator pos:start="99:67" pos:end="99:67">&amp;</operator> <literal type="number" pos:start="99:69" pos:end="99:72">0x03</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></while>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="109:9" pos:end="109:27"><expr pos:start="109:9" pos:end="109:26"><name pos:start="109:9" pos:end="109:15">row_ptr</name> <operator pos:start="109:17" pos:end="109:18">+=</operator> <name pos:start="109:20" pos:end="109:26">row_inc</name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function></unit>
