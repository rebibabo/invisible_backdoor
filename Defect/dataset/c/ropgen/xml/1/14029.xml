<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14029.c" pos:tabs="8"><function pos:start="1:1" pos:end="72:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">mpeg4_decode_header</name><parameter_list pos:start="1:31" pos:end="3:64">(<parameter pos:start="1:32" pos:end="1:55"><decl pos:start="1:32" pos:end="1:55"><type pos:start="1:32" pos:end="1:55"><name pos:start="1:32" pos:end="1:51">AVCodecParserContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">s1</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:78"><decl pos:start="1:58" pos:end="1:78"><type pos:start="1:58" pos:end="1:78"><name pos:start="1:58" pos:end="1:71">AVCodecContext</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:78">avctx</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><specifier pos:start="3:32" pos:end="3:36">const</specifier> <name pos:start="3:38" pos:end="3:44">uint8_t</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:49">buf</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:63"><decl pos:start="3:52" pos:end="3:63"><type pos:start="3:52" pos:end="3:63"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:63">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="72:1">{<block_content pos:start="7:5" pos:end="70:15">

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">Mp4vParseContext</name></name> <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:31">pc</name> <init pos:start="7:33" pos:end="7:47">= <expr pos:start="7:35" pos:end="7:47"><name pos:start="7:35" pos:end="7:47"><name pos:start="7:35" pos:end="7:36">s1</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:47">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">Mpeg4DecContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:28">dec_ctx</name> <init pos:start="9:30" pos:end="9:43">= <expr pos:start="9:32" pos:end="9:43"><operator pos:start="9:32" pos:end="9:32">&amp;</operator><name pos:start="9:33" pos:end="9:43"><name pos:start="9:33" pos:end="9:34">pc</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:43">dec_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">MpegEncContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name> <init pos:start="11:23" pos:end="11:35">= <expr pos:start="11:25" pos:end="11:35"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:35"><name pos:start="11:26" pos:end="11:32">dec_ctx</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:35">m</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">GetBitContext</name></type> <name pos:start="13:19" pos:end="13:21">gb1</name></decl>, <decl pos:start="13:24" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:17"><modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:26">gb</name> <init pos:start="13:28" pos:end="13:33">= <expr pos:start="13:30" pos:end="13:33"><operator pos:start="13:30" pos:end="13:30">&amp;</operator><name pos:start="13:31" pos:end="13:33">gb1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:12">avctx</name></name>               <operator pos:start="19:28" pos:end="19:28">=</operator> <name pos:start="19:30" pos:end="19:34">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:26">current_picture_ptr</name></name> <operator pos:start="21:28" pos:end="21:28">=</operator> <operator pos:start="21:30" pos:end="21:30">&amp;</operator><name pos:start="21:31" pos:end="21:48"><name pos:start="21:31" pos:end="21:31">s</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:48">current_picture</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:51">(<expr pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:29">extradata_size</name></name> <operator pos:start="25:31" pos:end="25:32">&amp;&amp;</operator> <name pos:start="25:34" pos:end="25:50"><name pos:start="25:34" pos:end="25:35">pc</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:50">first_picture</name></name></expr>)</condition> <block pos:start="25:53" pos:end="33:5">{<block_content pos:start="27:9" pos:end="29:58">

        <expr_stmt pos:start="27:9" pos:end="27:71"><expr pos:start="27:9" pos:end="27:70"><call pos:start="27:9" pos:end="27:70"><name pos:start="27:9" pos:end="27:21">init_get_bits</name><argument_list pos:start="27:22" pos:end="27:70">(<argument pos:start="27:23" pos:end="27:24"><expr pos:start="27:23" pos:end="27:24"><name pos:start="27:23" pos:end="27:24">gb</name></expr></argument>, <argument pos:start="27:27" pos:end="27:42"><expr pos:start="27:27" pos:end="27:42"><name pos:start="27:27" pos:end="27:42"><name pos:start="27:27" pos:end="27:31">avctx</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:42">extradata</name></name></expr></argument>, <argument pos:start="27:45" pos:end="27:69"><expr pos:start="27:45" pos:end="27:69"><name pos:start="27:45" pos:end="27:65"><name pos:start="27:45" pos:end="27:49">avctx</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:65">extradata_size</name></name> <operator pos:start="27:67" pos:end="27:67">*</operator> <literal type="number" pos:start="27:69" pos:end="27:69">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:58"><expr pos:start="29:9" pos:end="29:57"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:57"><name pos:start="29:15" pos:end="29:44">ff_mpeg4_decode_picture_header</name><argument_list pos:start="29:45" pos:end="29:57">(<argument pos:start="29:46" pos:end="29:52"><expr pos:start="29:46" pos:end="29:52"><name pos:start="29:46" pos:end="29:52">dec_ctx</name></expr></argument>, <argument pos:start="29:55" pos:end="29:56"><expr pos:start="29:55" pos:end="29:56"><name pos:start="29:55" pos:end="29:56">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><call pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:17">init_get_bits</name><argument_list pos:start="37:18" pos:end="37:40">(<argument pos:start="37:19" pos:end="37:20"><expr pos:start="37:19" pos:end="37:20"><name pos:start="37:19" pos:end="37:20">gb</name></expr></argument>, <argument pos:start="37:23" pos:end="37:25"><expr pos:start="37:23" pos:end="37:25"><name pos:start="37:23" pos:end="37:25">buf</name></expr></argument>, <argument pos:start="37:28" pos:end="37:39"><expr pos:start="37:28" pos:end="37:39"><literal type="number" pos:start="37:28" pos:end="37:28">8</literal> <operator pos:start="37:30" pos:end="37:30">*</operator> <name pos:start="37:32" pos:end="37:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:53"><name pos:start="39:11" pos:end="39:40">ff_mpeg4_decode_picture_header</name><argument_list pos:start="39:41" pos:end="39:53">(<argument pos:start="39:42" pos:end="39:48"><expr pos:start="39:42" pos:end="39:48"><name pos:start="39:42" pos:end="39:48">dec_ctx</name></expr></argument>, <argument pos:start="39:51" pos:end="39:52"><expr pos:start="39:51" pos:end="39:52"><name pos:start="39:51" pos:end="39:52">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="50:5"><if pos:start="41:5" pos:end="50:5">if <condition pos:start="41:8" pos:end="43:66">(<expr pos:start="41:9" pos:end="43:65"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">width</name></name> <operator pos:start="41:18" pos:end="41:19">&amp;&amp;</operator> <operator pos:start="41:21" pos:end="41:21">(</operator><operator pos:start="41:22" pos:end="41:22">!</operator><name pos:start="41:23" pos:end="41:34"><name pos:start="41:23" pos:end="41:27">avctx</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:34">width</name></name> <operator pos:start="41:36" pos:end="41:37">||</operator> <operator pos:start="41:39" pos:end="41:39">!</operator><name pos:start="41:40" pos:end="41:52"><name pos:start="41:40" pos:end="41:44">avctx</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:52">height</name></name> <operator pos:start="41:54" pos:end="41:55">||</operator>

                     <operator pos:start="43:22" pos:end="43:22">!</operator><name pos:start="43:23" pos:end="43:40"><name pos:start="43:23" pos:end="43:27">avctx</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:40">coded_width</name></name> <operator pos:start="43:42" pos:end="43:43">||</operator> <operator pos:start="43:45" pos:end="43:45">!</operator><name pos:start="43:46" pos:end="43:64"><name pos:start="43:46" pos:end="43:50">avctx</name><operator pos:start="43:51" pos:end="43:52">-&gt;</operator><name pos:start="43:53" pos:end="43:64">coded_height</name></name><operator pos:start="43:65" pos:end="43:65">)</operator></expr>)</condition> <block pos:start="43:68" pos:end="50:5">{<block_content pos:start="45:9" pos:end="48:23">

        <expr_stmt pos:start="45:9" pos:end="45:60"><expr pos:start="45:9" pos:end="45:59"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:59"><name pos:start="45:15" pos:end="45:31">ff_set_dimensions</name><argument_list pos:start="45:32" pos:end="45:59">(<argument pos:start="45:33" pos:end="45:37"><expr pos:start="45:33" pos:end="45:37"><name pos:start="45:33" pos:end="45:37">avctx</name></expr></argument>, <argument pos:start="45:40" pos:end="45:47"><expr pos:start="45:40" pos:end="45:47"><name pos:start="45:40" pos:end="45:47"><name pos:start="45:40" pos:end="45:40">s</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:47">width</name></name></expr></argument>, <argument pos:start="45:50" pos:end="45:58"><expr pos:start="45:50" pos:end="45:58"><name pos:start="45:50" pos:end="45:58"><name pos:start="45:50" pos:end="45:50">s</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:58">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <return pos:start="48:13" pos:end="48:23">return <expr pos:start="48:20" pos:end="48:22"><name pos:start="48:20" pos:end="48:22">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="52:5" pos:end="62:5"><if pos:start="52:5" pos:end="62:5">if<condition pos:start="52:7" pos:end="52:85">(<expr pos:start="52:8" pos:end="52:84"><operator pos:start="52:8" pos:end="52:8">(</operator><name pos:start="52:9" pos:end="52:17"><name pos:start="52:9" pos:end="52:10">s1</name><operator pos:start="52:11" pos:end="52:12">-&gt;</operator><name pos:start="52:13" pos:end="52:17">flags</name></name> <operator pos:start="52:19" pos:end="52:19">&amp;</operator> <name pos:start="52:21" pos:end="52:44">PARSER_FLAG_USE_CODEC_TS</name><operator pos:start="52:45" pos:end="52:45">)</operator> <operator pos:start="52:47" pos:end="52:48">&amp;&amp;</operator> <name pos:start="52:50" pos:end="52:72"><name pos:start="52:50" pos:end="52:50">s</name><operator pos:start="52:51" pos:end="52:52">-&gt;</operator><name pos:start="52:53" pos:end="52:57">avctx</name><operator pos:start="52:58" pos:end="52:59">-&gt;</operator><name pos:start="52:60" pos:end="52:68">time_base</name><operator pos:start="52:69" pos:end="52:69">.</operator><name pos:start="52:70" pos:end="52:72">den</name></name><operator pos:start="52:73" pos:end="52:73">&gt;</operator><literal type="number" pos:start="52:74" pos:end="52:74">0</literal> <operator pos:start="52:76" pos:end="52:77">&amp;&amp;</operator> <name pos:start="52:79" pos:end="52:81">ret</name><operator pos:start="52:82" pos:end="52:83">&gt;=</operator><literal type="number" pos:start="52:84" pos:end="52:84">0</literal></expr>)</condition><block pos:start="52:86" pos:end="62:5">{<block_content pos:start="54:9" pos:end="60:108">

        <expr_stmt pos:start="54:9" pos:end="54:46"><expr pos:start="54:9" pos:end="54:45"><call pos:start="54:9" pos:end="54:45"><name pos:start="54:9" pos:end="54:18">av_assert1</name><argument_list pos:start="54:19" pos:end="54:45">(<argument pos:start="54:20" pos:end="54:44"><expr pos:start="54:20" pos:end="54:44"><name pos:start="54:20" pos:end="54:26"><name pos:start="54:20" pos:end="54:21">s1</name><operator pos:start="54:22" pos:end="54:23">-&gt;</operator><name pos:start="54:24" pos:end="54:26">pts</name></name> <operator pos:start="54:28" pos:end="54:29">==</operator> <name pos:start="54:31" pos:end="54:44">AV_NOPTS_VALUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="56:9" pos:end="56:46"><expr pos:start="56:9" pos:end="56:45"><call pos:start="56:9" pos:end="56:45"><name pos:start="56:9" pos:end="56:18">av_assert1</name><argument_list pos:start="56:19" pos:end="56:45">(<argument pos:start="56:20" pos:end="56:44"><expr pos:start="56:20" pos:end="56:44"><name pos:start="56:20" pos:end="56:26"><name pos:start="56:20" pos:end="56:21">s1</name><operator pos:start="56:22" pos:end="56:23">-&gt;</operator><name pos:start="56:24" pos:end="56:26">dts</name></name> <operator pos:start="56:28" pos:end="56:29">==</operator> <name pos:start="56:31" pos:end="56:44">AV_NOPTS_VALUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="60:9" pos:end="60:108"><expr pos:start="60:9" pos:end="60:107"><name pos:start="60:9" pos:end="60:15"><name pos:start="60:9" pos:end="60:10">s1</name><operator pos:start="60:11" pos:end="60:12">-&gt;</operator><name pos:start="60:13" pos:end="60:15">pts</name></name> <operator pos:start="60:17" pos:end="60:17">=</operator> <macro pos:start="60:19" pos:end="60:107"><name pos:start="60:19" pos:end="60:30">av_rescale_q</name><argument_list pos:start="60:31" pos:end="60:107">(<argument pos:start="60:32" pos:end="60:38">s-&gt;time</argument>, <argument pos:start="60:41" pos:end="60:54">(AVRational){<literal type="number" pos:start="60:54" pos:end="60:54">1</literal></argument>, <argument pos:start="60:57" pos:end="60:80">s-&gt;avctx-&gt;time_base.den}</argument>, <argument pos:start="60:83" pos:end="60:96">(AVRational){<literal type="number" pos:start="60:96" pos:end="60:96">1</literal></argument>, <argument pos:start="60:99" pos:end="60:106"><literal type="number" pos:start="60:99" pos:end="60:105">1200000</literal>}</argument>)</argument_list></macro></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="66:5" pos:end="66:37"><expr pos:start="66:5" pos:end="66:36"><name pos:start="66:5" pos:end="66:17"><name pos:start="66:5" pos:end="66:6">s1</name><operator pos:start="66:7" pos:end="66:8">-&gt;</operator><name pos:start="66:9" pos:end="66:17">pict_type</name></name>     <operator pos:start="66:23" pos:end="66:23">=</operator> <name pos:start="66:25" pos:end="66:36"><name pos:start="66:25" pos:end="66:25">s</name><operator pos:start="66:26" pos:end="66:27">-&gt;</operator><name pos:start="66:28" pos:end="66:36">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="68:5" pos:end="68:26"><expr pos:start="68:5" pos:end="68:25"><name pos:start="68:5" pos:end="68:21"><name pos:start="68:5" pos:end="68:6">pc</name><operator pos:start="68:7" pos:end="68:8">-&gt;</operator><name pos:start="68:9" pos:end="68:21">first_picture</name></name> <operator pos:start="68:23" pos:end="68:23">=</operator> <literal type="number" pos:start="68:25" pos:end="68:25">0</literal></expr>;</expr_stmt>

    <return pos:start="70:5" pos:end="70:15">return <expr pos:start="70:12" pos:end="70:14"><name pos:start="70:12" pos:end="70:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
