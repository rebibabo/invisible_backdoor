<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12172.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">rac_get_model_sym</name><parameter_list pos:start="1:29" pos:end="1:53">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:39">RangeCoder</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">c</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:52"><decl pos:start="1:45" pos:end="1:52"><type pos:start="1:45" pos:end="1:52"><name pos:start="1:45" pos:end="1:49">Model</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">m</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">prob</name></decl>, <decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:19">prob2</name></decl>, <decl pos:start="5:22" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:27">helper</name></decl>, <decl pos:start="5:30" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:30" pos:end="5:32">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">end</name></decl>, <decl pos:start="7:14" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:17">end2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:19"><expr pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:8">prob</name>       <operator pos:start="11:16" pos:end="11:16">=</operator> <literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:9">prob2</name>      <operator pos:start="13:16" pos:end="13:16">=</operator> <name pos:start="13:18" pos:end="13:25"><name pos:start="13:18" pos:end="13:18">c</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:25">range</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:5">c</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:12">range</name></name> <operator pos:start="15:14" pos:end="15:16">&gt;&gt;=</operator> <name pos:start="15:18" pos:end="15:28">MODEL_SCALE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:7">val</name>        <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:7">end</name>        <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:28"><name pos:start="19:18" pos:end="19:18">m</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:28">num_syms</name></name> <operator pos:start="19:30" pos:end="19:31">&gt;&gt;</operator> <literal type="number" pos:start="19:33" pos:end="19:33">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:8">end2</name>       <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:28"><name pos:start="21:18" pos:end="21:18">m</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:28">num_syms</name></name></expr>;</expr_stmt>

    <do pos:start="23:5" pos:end="43:25">do <block pos:start="23:8" pos:end="43:5">{<block_content pos:start="25:9" pos:end="41:32">

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:14">helper</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:30"><name pos:start="25:18" pos:end="25:18">m</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:25">freqs</name><index pos:start="25:26" pos:end="25:30">[<expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">end</name></expr>]</index></name> <operator pos:start="25:32" pos:end="25:32">*</operator> <name pos:start="25:34" pos:end="25:41"><name pos:start="25:34" pos:end="25:34">c</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:41">range</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="39:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:29">(<expr pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:18">helper</name> <operator pos:start="27:20" pos:end="27:21">&lt;=</operator> <name pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:23">c</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:28">low</name></name></expr>)</condition> <block pos:start="27:31" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:27">

            <expr_stmt pos:start="29:13" pos:end="29:24"><expr pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:15">val</name>   <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:23">end</name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:27"><expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:16">prob</name>  <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:26">helper</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="39:9">else <block pos:start="33:16" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:27">

            <expr_stmt pos:start="35:13" pos:end="35:24"><expr pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:16">end2</name>  <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:23">end</name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:27"><expr pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:17">prob2</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:26">helper</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:32"><expr pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:11">end</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">(</operator><name pos:start="41:16" pos:end="41:19">end2</name> <operator pos:start="41:21" pos:end="41:21">+</operator> <name pos:start="41:23" pos:end="41:25">val</name><operator pos:start="41:26" pos:end="41:26">)</operator> <operator pos:start="41:28" pos:end="41:29">&gt;&gt;</operator> <literal type="number" pos:start="41:31" pos:end="41:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="43:13" pos:end="43:24">(<expr pos:start="43:14" pos:end="43:23"><name pos:start="43:14" pos:end="43:16">end</name> <operator pos:start="43:18" pos:end="43:19">!=</operator> <name pos:start="43:21" pos:end="43:23">val</name></expr>)</condition>;</do>

    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:5">c</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:10">low</name></name>  <operator pos:start="45:13" pos:end="45:14">-=</operator> <name pos:start="45:16" pos:end="45:19">prob</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:28"><expr pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:5">c</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:12">range</name></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <name pos:start="47:16" pos:end="47:20">prob2</name> <operator pos:start="47:22" pos:end="47:22">-</operator> <name pos:start="47:24" pos:end="47:27">prob</name></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:25"><if pos:start="49:5" pos:end="51:25">if <condition pos:start="49:8" pos:end="49:30">(<expr pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:9">c</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:16">range</name></name> <operator pos:start="49:18" pos:end="49:18">&lt;</operator> <name pos:start="49:20" pos:end="49:29">RAC_BOTTOM</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:25"><block_content pos:start="51:9" pos:end="51:25">

        <expr_stmt pos:start="51:9" pos:end="51:25"><expr pos:start="51:9" pos:end="51:24"><call pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:21">rac_normalise</name><argument_list pos:start="51:22" pos:end="51:24">(<argument pos:start="51:23" pos:end="51:23"><expr pos:start="51:23" pos:end="51:23"><name pos:start="51:23" pos:end="51:23">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:25"><expr pos:start="55:5" pos:end="55:24"><call pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:16">model_update</name><argument_list pos:start="55:17" pos:end="55:24">(<argument pos:start="55:18" pos:end="55:18"><expr pos:start="55:18" pos:end="55:18"><name pos:start="55:18" pos:end="55:18">m</name></expr></argument>, <argument pos:start="55:21" pos:end="55:23"><expr pos:start="55:21" pos:end="55:23"><name pos:start="55:21" pos:end="55:23">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="59:5" pos:end="59:15">return <expr pos:start="59:12" pos:end="59:14"><name pos:start="59:12" pos:end="59:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
