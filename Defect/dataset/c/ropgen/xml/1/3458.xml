<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3458.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">pmac_dma_read</name><parameter_list pos:start="1:26" pos:end="5:74">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:38">BlockBackend</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">blk</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:33">int64_t</name></type> <name pos:start="3:35" pos:end="3:40">offset</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:60"><decl pos:start="3:43" pos:end="3:60"><type pos:start="3:43" pos:end="3:60"><name pos:start="3:43" pos:end="3:50">unsigned</name> <name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:60">bytes</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:59"><function_decl pos:start="5:27" pos:end="5:59"><type pos:start="5:27" pos:end="5:30"><name pos:start="5:27" pos:end="5:30">void</name></type> (<modifier pos:start="5:33" pos:end="5:33">*</modifier><name pos:start="5:34" pos:end="5:35">cb</name>)<parameter_list pos:start="5:37" pos:end="5:59">(<parameter pos:start="5:38" pos:end="5:49"><decl pos:start="5:38" pos:end="5:49"><type pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:41">void</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:49">opaque</name></decl></parameter>, <parameter pos:start="5:52" pos:end="5:58"><decl pos:start="5:52" pos:end="5:58"><type pos:start="5:52" pos:end="5:58"><name pos:start="5:52" pos:end="5:54">int</name></type> <name pos:start="5:56" pos:end="5:58">ret</name></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter pos:start="5:62" pos:end="5:73"><decl pos:start="5:62" pos:end="5:73"><type pos:start="5:62" pos:end="5:73"><name pos:start="5:62" pos:end="5:65">void</name> <modifier pos:start="5:67" pos:end="5:67">*</modifier></type><name pos:start="5:68" pos:end="5:73">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="127:1">{<block_content pos:start="9:5" pos:end="125:37">

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">DBDMA_io</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">io</name> <init pos:start="9:18" pos:end="9:25">= <expr pos:start="9:20" pos:end="9:25"><name pos:start="9:20" pos:end="9:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">MACIOIDEState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">m</name> <init pos:start="11:22" pos:end="11:33">= <expr pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:25">io</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">IDEState</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:15">s</name> <init pos:start="13:17" pos:end="13:43">= <expr pos:start="13:19" pos:end="13:43"><call pos:start="13:19" pos:end="13:43"><name pos:start="13:19" pos:end="13:34">idebus_active_if</name><argument_list pos:start="13:35" pos:end="13:43">(<argument pos:start="13:36" pos:end="13:42"><expr pos:start="13:36" pos:end="13:42"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:42"><name pos:start="13:37" pos:end="13:37">m</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:42">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:14">dma_addr_t</name></type> <name pos:start="15:16" pos:end="15:23">dma_addr</name></decl>, <decl pos:start="15:26" pos:end="15:32"><type ref="prev" pos:start="15:5" pos:end="15:14"/><name pos:start="15:26" pos:end="15:32">dma_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">void</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:13">mem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:22">sector_num</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:15">nsector</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:38"><decl pos:start="23:5" pos:end="23:37"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint64_t</name></type> <name pos:start="23:14" pos:end="23:18">align</name> <init pos:start="23:20" pos:end="23:37">= <expr pos:start="23:22" pos:end="23:37"><name pos:start="23:22" pos:end="23:37">BDRV_SECTOR_SIZE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:34"><decl pos:start="25:5" pos:end="25:21"><type pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:10">size_t</name></type> <name pos:start="25:12" pos:end="25:21">head_bytes</name></decl>, <decl pos:start="25:24" pos:end="25:33"><type ref="prev" pos:start="25:5" pos:end="25:10"/><name pos:start="25:24" pos:end="25:33">tail_bytes</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><call pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:22">qemu_iovec_destroy</name><argument_list pos:start="29:23" pos:end="29:32">(<argument pos:start="29:24" pos:end="29:31"><expr pos:start="29:24" pos:end="29:31"><operator pos:start="29:24" pos:end="29:24">&amp;</operator><name pos:start="29:25" pos:end="29:31"><name pos:start="29:25" pos:end="29:26">io</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:31">iov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:61"><expr pos:start="31:5" pos:end="31:60"><call pos:start="31:5" pos:end="31:60"><name pos:start="31:5" pos:end="31:19">qemu_iovec_init</name><argument_list pos:start="31:20" pos:end="31:60">(<argument pos:start="31:21" pos:end="31:28"><expr pos:start="31:21" pos:end="31:28"><operator pos:start="31:21" pos:end="31:21">&amp;</operator><name pos:start="31:22" pos:end="31:28"><name pos:start="31:22" pos:end="31:23">io</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:28">iov</name></name></expr></argument>, <argument pos:start="31:31" pos:end="31:59"><expr pos:start="31:31" pos:end="31:59"><name pos:start="31:31" pos:end="31:37"><name pos:start="31:31" pos:end="31:32">io</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:37">len</name></name> <operator pos:start="31:39" pos:end="31:39">/</operator> <name pos:start="31:41" pos:end="31:55">MACIO_PAGE_SIZE</name> <operator pos:start="31:57" pos:end="31:57">+</operator> <literal type="number" pos:start="31:59" pos:end="31:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:14">sector_num</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:24">offset</name> <operator pos:start="35:26" pos:end="35:27">&gt;&gt;</operator> <literal type="number" pos:start="35:29" pos:end="35:29">9</literal><operator pos:start="35:30" pos:end="35:30">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:29"><expr pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:11">nsector</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">(</operator><name pos:start="37:16" pos:end="37:22"><name pos:start="37:16" pos:end="37:17">io</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:22">len</name></name> <operator pos:start="37:24" pos:end="37:25">&gt;&gt;</operator> <literal type="number" pos:start="37:27" pos:end="37:27">9</literal><operator pos:start="37:28" pos:end="37:28">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="45:39"><expr pos:start="41:5" pos:end="45:38"><call pos:start="41:5" pos:end="45:38"><name pos:start="41:5" pos:end="41:17">MACIO_DPRINTF</name><argument_list pos:start="41:18" pos:end="45:38">(<argument pos:start="41:19" pos:end="43:58"><expr pos:start="41:19" pos:end="43:58"><literal type="string" pos:start="41:19" pos:end="41:46">"--- DMA read transfer (0x%"</literal> <name pos:start="41:48" pos:end="41:58">HWADDR_PRIx</name> <literal type="string" pos:start="41:60" pos:end="41:69">",0x%x): "</literal>

                  <literal type="string" pos:start="43:19" pos:end="43:33">"sector_num: %"</literal> <name pos:start="43:35" pos:end="43:40">PRId64</name> <literal type="string" pos:start="43:42" pos:end="43:58">", nsector: %d\n"</literal></expr></argument>, <argument pos:start="43:61" pos:end="43:68"><expr pos:start="43:61" pos:end="43:68"><name pos:start="43:61" pos:end="43:68"><name pos:start="43:61" pos:end="43:62">io</name><operator pos:start="43:63" pos:end="43:64">-&gt;</operator><name pos:start="43:65" pos:end="43:68">addr</name></name></expr></argument>, <argument pos:start="43:71" pos:end="43:77"><expr pos:start="43:71" pos:end="43:77"><name pos:start="43:71" pos:end="43:77"><name pos:start="43:71" pos:end="43:72">io</name><operator pos:start="43:73" pos:end="43:74">-&gt;</operator><name pos:start="43:75" pos:end="43:77">len</name></name></expr></argument>,

                  <argument pos:start="45:19" pos:end="45:28"><expr pos:start="45:19" pos:end="45:28"><name pos:start="45:19" pos:end="45:28">sector_num</name></expr></argument>, <argument pos:start="45:31" pos:end="45:37"><expr pos:start="45:31" pos:end="45:37"><name pos:start="45:31" pos:end="45:37">nsector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:12">dma_addr</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <name pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:17">io</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:23">addr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:22"><expr pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:11">dma_len</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:21"><name pos:start="51:15" pos:end="51:16">io</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:21">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:52"><expr pos:start="53:5" pos:end="55:51"><name pos:start="53:5" pos:end="53:7">mem</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="55:51"><name pos:start="53:11" pos:end="53:24">dma_memory_map</name><argument_list pos:start="53:25" pos:end="55:51">(<argument pos:start="53:26" pos:end="53:46"><expr pos:start="53:26" pos:end="53:46"><operator pos:start="53:26" pos:end="53:26">&amp;</operator><name pos:start="53:27" pos:end="53:46">address_space_memory</name></expr></argument>, <argument pos:start="53:49" pos:end="53:56"><expr pos:start="53:49" pos:end="53:56"><name pos:start="53:49" pos:end="53:56">dma_addr</name></expr></argument>, <argument pos:start="53:59" pos:end="53:66"><expr pos:start="53:59" pos:end="53:66"><operator pos:start="53:59" pos:end="53:59">&amp;</operator><name pos:start="53:60" pos:end="53:66">dma_len</name></expr></argument>,

                         <argument pos:start="55:26" pos:end="55:50"><expr pos:start="55:26" pos:end="55:50"><name pos:start="55:26" pos:end="55:50">DMA_DIRECTION_FROM_DEVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="79:5"><if pos:start="59:5" pos:end="79:5">if <condition pos:start="59:8" pos:end="59:29">(<expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:14">offset</name> <operator pos:start="59:16" pos:end="59:16">&amp;</operator> <operator pos:start="59:18" pos:end="59:18">(</operator><name pos:start="59:19" pos:end="59:23">align</name> <operator pos:start="59:25" pos:end="59:25">-</operator> <literal type="number" pos:start="59:27" pos:end="59:27">1</literal><operator pos:start="59:28" pos:end="59:28">)</operator></expr>)</condition> <block pos:start="59:31" pos:end="79:5">{<block_content pos:start="61:9" pos:end="77:39">

        <expr_stmt pos:start="61:9" pos:end="61:42"><expr pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:18">head_bytes</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:27">offset</name> <operator pos:start="61:29" pos:end="61:29">&amp;</operator> <operator pos:start="61:31" pos:end="61:31">(</operator><name pos:start="61:32" pos:end="61:36">align</name> <operator pos:start="61:38" pos:end="61:38">-</operator> <literal type="number" pos:start="61:40" pos:end="61:40">1</literal><operator pos:start="61:41" pos:end="61:41">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="67:72"><expr pos:start="65:9" pos:end="67:71"><call pos:start="65:9" pos:end="67:71"><name pos:start="65:9" pos:end="65:21">MACIO_DPRINTF</name><argument_list pos:start="65:22" pos:end="67:71">(<argument pos:start="65:23" pos:end="67:46"><expr pos:start="65:23" pos:end="67:46"><literal type="string" pos:start="65:23" pos:end="65:56">"--- DMA unaligned head: sector %"</literal> <name pos:start="65:58" pos:end="65:63">PRId64</name> <literal type="string" pos:start="65:65" pos:end="65:68">", "</literal>

                      <literal type="string" pos:start="67:23" pos:end="67:46">"discarding %zu bytes\n"</literal></expr></argument>, <argument pos:start="67:49" pos:end="67:58"><expr pos:start="67:49" pos:end="67:58"><name pos:start="67:49" pos:end="67:58">sector_num</name></expr></argument>, <argument pos:start="67:61" pos:end="67:70"><expr pos:start="67:61" pos:end="67:70"><name pos:start="67:61" pos:end="67:70">head_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:61"><expr pos:start="71:9" pos:end="71:60"><call pos:start="71:9" pos:end="71:60"><name pos:start="71:9" pos:end="71:22">qemu_iovec_add</name><argument_list pos:start="71:23" pos:end="71:60">(<argument pos:start="71:24" pos:end="71:31"><expr pos:start="71:24" pos:end="71:31"><operator pos:start="71:24" pos:end="71:24">&amp;</operator><name pos:start="71:25" pos:end="71:31"><name pos:start="71:25" pos:end="71:26">io</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:31">iov</name></name></expr></argument>, <argument pos:start="71:34" pos:end="71:47"><expr pos:start="71:34" pos:end="71:47"><operator pos:start="71:34" pos:end="71:34">&amp;</operator><name pos:start="71:35" pos:end="71:47"><name pos:start="71:35" pos:end="71:36">io</name><operator pos:start="71:37" pos:end="71:38">-&gt;</operator><name pos:start="71:39" pos:end="71:47">remainder</name></name></expr></argument>, <argument pos:start="71:50" pos:end="71:59"><expr pos:start="71:50" pos:end="71:59"><name pos:start="71:50" pos:end="71:59">head_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:38"><expr pos:start="75:9" pos:end="75:37"><name pos:start="75:9" pos:end="75:13">bytes</name> <operator pos:start="75:15" pos:end="75:16">+=</operator> <name pos:start="75:18" pos:end="75:23">offset</name> <operator pos:start="75:25" pos:end="75:25">&amp;</operator> <operator pos:start="75:27" pos:end="75:27">(</operator><name pos:start="75:28" pos:end="75:32">align</name> <operator pos:start="75:34" pos:end="75:34">-</operator> <literal type="number" pos:start="75:36" pos:end="75:36">1</literal><operator pos:start="75:37" pos:end="75:37">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:39"><expr pos:start="77:9" pos:end="77:38"><name pos:start="77:9" pos:end="77:14">offset</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <name pos:start="77:18" pos:end="77:23">offset</name> <operator pos:start="77:25" pos:end="77:25">&amp;</operator> <operator pos:start="77:27" pos:end="77:27">~</operator><operator pos:start="77:28" pos:end="77:28">(</operator><name pos:start="77:29" pos:end="77:33">align</name> <operator pos:start="77:35" pos:end="77:35">-</operator> <literal type="number" pos:start="77:37" pos:end="77:37">1</literal><operator pos:start="77:38" pos:end="77:38">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:43"><expr pos:start="83:5" pos:end="83:42"><call pos:start="83:5" pos:end="83:42"><name pos:start="83:5" pos:end="83:18">qemu_iovec_add</name><argument_list pos:start="83:19" pos:end="83:42">(<argument pos:start="83:20" pos:end="83:27"><expr pos:start="83:20" pos:end="83:27"><operator pos:start="83:20" pos:end="83:20">&amp;</operator><name pos:start="83:21" pos:end="83:27"><name pos:start="83:21" pos:end="83:22">io</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:27">iov</name></name></expr></argument>, <argument pos:start="83:30" pos:end="83:32"><expr pos:start="83:30" pos:end="83:32"><name pos:start="83:30" pos:end="83:32">mem</name></expr></argument>, <argument pos:start="83:35" pos:end="83:41"><expr pos:start="83:35" pos:end="83:41"><name pos:start="83:35" pos:end="83:41"><name pos:start="83:35" pos:end="83:36">io</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:41">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="103:5"><if pos:start="87:5" pos:end="103:5">if <condition pos:start="87:8" pos:end="87:39">(<expr pos:start="87:9" pos:end="87:38"><operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:15">offset</name> <operator pos:start="87:17" pos:end="87:17">+</operator> <name pos:start="87:19" pos:end="87:23">bytes</name><operator pos:start="87:24" pos:end="87:24">)</operator> <operator pos:start="87:26" pos:end="87:26">&amp;</operator> <operator pos:start="87:28" pos:end="87:28">(</operator><name pos:start="87:29" pos:end="87:33">align</name> <operator pos:start="87:35" pos:end="87:35">-</operator> <literal type="number" pos:start="87:37" pos:end="87:37">1</literal><operator pos:start="87:38" pos:end="87:38">)</operator></expr>)</condition> <block pos:start="87:41" pos:end="103:5">{<block_content pos:start="89:9" pos:end="101:39">

        <expr_stmt pos:start="89:9" pos:end="89:52"><expr pos:start="89:9" pos:end="89:51"><name pos:start="89:9" pos:end="89:18">tail_bytes</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <operator pos:start="89:22" pos:end="89:22">(</operator><name pos:start="89:23" pos:end="89:28">offset</name> <operator pos:start="89:30" pos:end="89:30">+</operator> <name pos:start="89:32" pos:end="89:36">bytes</name><operator pos:start="89:37" pos:end="89:37">)</operator> <operator pos:start="89:39" pos:end="89:39">&amp;</operator> <operator pos:start="89:41" pos:end="89:41">(</operator><name pos:start="89:42" pos:end="89:46">align</name> <operator pos:start="89:48" pos:end="89:48">-</operator> <literal type="number" pos:start="89:50" pos:end="89:50">1</literal><operator pos:start="89:51" pos:end="89:51">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="95:72"><expr pos:start="93:9" pos:end="95:71"><call pos:start="93:9" pos:end="95:71"><name pos:start="93:9" pos:end="93:21">MACIO_DPRINTF</name><argument_list pos:start="93:22" pos:end="95:71">(<argument pos:start="93:23" pos:end="95:46"><expr pos:start="93:23" pos:end="95:46"><literal type="string" pos:start="93:23" pos:end="93:56">"--- DMA unaligned tail: sector %"</literal> <name pos:start="93:58" pos:end="93:63">PRId64</name> <literal type="string" pos:start="93:65" pos:end="93:68">", "</literal>

                      <literal type="string" pos:start="95:23" pos:end="95:46">"discarding bytes %zu\n"</literal></expr></argument>, <argument pos:start="95:49" pos:end="95:58"><expr pos:start="95:49" pos:end="95:58"><name pos:start="95:49" pos:end="95:58">sector_num</name></expr></argument>, <argument pos:start="95:61" pos:end="95:70"><expr pos:start="95:61" pos:end="95:70"><name pos:start="95:61" pos:end="95:70">tail_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:69"><expr pos:start="99:9" pos:end="99:68"><call pos:start="99:9" pos:end="99:68"><name pos:start="99:9" pos:end="99:22">qemu_iovec_add</name><argument_list pos:start="99:23" pos:end="99:68">(<argument pos:start="99:24" pos:end="99:31"><expr pos:start="99:24" pos:end="99:31"><operator pos:start="99:24" pos:end="99:24">&amp;</operator><name pos:start="99:25" pos:end="99:31"><name pos:start="99:25" pos:end="99:26">io</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:31">iov</name></name></expr></argument>, <argument pos:start="99:34" pos:end="99:47"><expr pos:start="99:34" pos:end="99:47"><operator pos:start="99:34" pos:end="99:34">&amp;</operator><name pos:start="99:35" pos:end="99:47"><name pos:start="99:35" pos:end="99:36">io</name><operator pos:start="99:37" pos:end="99:38">-&gt;</operator><name pos:start="99:39" pos:end="99:47">remainder</name></name></expr></argument>, <argument pos:start="99:50" pos:end="99:67"><expr pos:start="99:50" pos:end="99:67"><name pos:start="99:50" pos:end="99:54">align</name> <operator pos:start="99:56" pos:end="99:56">-</operator> <name pos:start="99:58" pos:end="99:67">tail_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:39"><expr pos:start="101:9" pos:end="101:38"><name pos:start="101:9" pos:end="101:13">bytes</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <call pos:start="101:17" pos:end="101:38"><name pos:start="101:17" pos:end="101:24">ROUND_UP</name><argument_list pos:start="101:25" pos:end="101:38">(<argument pos:start="101:26" pos:end="101:30"><expr pos:start="101:26" pos:end="101:30"><name pos:start="101:26" pos:end="101:30">bytes</name></expr></argument>, <argument pos:start="101:33" pos:end="101:37"><expr pos:start="101:33" pos:end="101:37"><name pos:start="101:33" pos:end="101:37">align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:33"><expr pos:start="107:5" pos:end="107:32"><name pos:start="107:5" pos:end="107:21"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:21">io_buffer_size</name></name> <operator pos:start="107:23" pos:end="107:24">-=</operator> <name pos:start="107:26" pos:end="107:32"><name pos:start="107:26" pos:end="107:27">io</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:32">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:34"><expr pos:start="109:5" pos:end="109:33"><name pos:start="109:5" pos:end="109:22"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:22">io_buffer_index</name></name> <operator pos:start="109:24" pos:end="109:25">+=</operator> <name pos:start="109:27" pos:end="109:33"><name pos:start="109:27" pos:end="109:28">io</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:33">len</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:16"><expr pos:start="113:5" pos:end="113:15"><name pos:start="113:5" pos:end="113:11"><name pos:start="113:5" pos:end="113:6">io</name><operator pos:start="113:7" pos:end="113:8">-&gt;</operator><name pos:start="113:9" pos:end="113:11">len</name></name> <operator pos:start="113:13" pos:end="113:13">=</operator> <literal type="number" pos:start="113:15" pos:end="113:15">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="119:64"><expr pos:start="117:5" pos:end="119:63"><call pos:start="117:5" pos:end="119:63"><name pos:start="117:5" pos:end="117:17">MACIO_DPRINTF</name><argument_list pos:start="117:18" pos:end="119:63">(<argument pos:start="117:19" pos:end="119:33"><expr pos:start="117:19" pos:end="119:33"><literal type="string" pos:start="117:19" pos:end="117:59">"--- Block read transfer - sector_num: %"</literal> <name pos:start="117:61" pos:end="117:66">PRIx64</name> <literal type="string" pos:start="117:68" pos:end="117:71">"  "</literal>

                  <literal type="string" pos:start="119:19" pos:end="119:33">"nsector: %x\n"</literal></expr></argument>, <argument pos:start="119:36" pos:end="119:48"><expr pos:start="119:36" pos:end="119:48"><operator pos:start="119:36" pos:end="119:36">(</operator><name pos:start="119:37" pos:end="119:42">offset</name> <operator pos:start="119:44" pos:end="119:45">&gt;&gt;</operator> <literal type="number" pos:start="119:47" pos:end="119:47">9</literal><operator pos:start="119:48" pos:end="119:48">)</operator></expr></argument>, <argument pos:start="119:51" pos:end="119:62"><expr pos:start="119:51" pos:end="119:62"><operator pos:start="119:51" pos:end="119:51">(</operator><name pos:start="119:52" pos:end="119:56">bytes</name> <operator pos:start="119:58" pos:end="119:59">&gt;&gt;</operator> <literal type="number" pos:start="119:61" pos:end="119:61">9</literal><operator pos:start="119:62" pos:end="119:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="125:37"><expr pos:start="123:5" pos:end="125:36"><name pos:start="123:5" pos:end="123:12"><name pos:start="123:5" pos:end="123:5">m</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:12">aiocb</name></name> <operator pos:start="123:14" pos:end="123:14">=</operator> <call pos:start="123:16" pos:end="125:36"><name pos:start="123:16" pos:end="123:28">blk_aio_readv</name><argument_list pos:start="123:29" pos:end="125:36">(<argument pos:start="123:30" pos:end="123:32"><expr pos:start="123:30" pos:end="123:32"><name pos:start="123:30" pos:end="123:32">blk</name></expr></argument>, <argument pos:start="123:35" pos:end="123:47"><expr pos:start="123:35" pos:end="123:47"><operator pos:start="123:35" pos:end="123:35">(</operator><name pos:start="123:36" pos:end="123:41">offset</name> <operator pos:start="123:43" pos:end="123:44">&gt;&gt;</operator> <literal type="number" pos:start="123:46" pos:end="123:46">9</literal><operator pos:start="123:47" pos:end="123:47">)</operator></expr></argument>, <argument pos:start="123:50" pos:end="123:57"><expr pos:start="123:50" pos:end="123:57"><operator pos:start="123:50" pos:end="123:50">&amp;</operator><name pos:start="123:51" pos:end="123:57"><name pos:start="123:51" pos:end="123:52">io</name><operator pos:start="123:53" pos:end="123:54">-&gt;</operator><name pos:start="123:55" pos:end="123:57">iov</name></name></expr></argument>, <argument pos:start="123:60" pos:end="123:71"><expr pos:start="123:60" pos:end="123:71"><operator pos:start="123:60" pos:end="123:60">(</operator><name pos:start="123:61" pos:end="123:65">bytes</name> <operator pos:start="123:67" pos:end="123:68">&gt;&gt;</operator> <literal type="number" pos:start="123:70" pos:end="123:70">9</literal><operator pos:start="123:71" pos:end="123:71">)</operator></expr></argument>,

                             <argument pos:start="125:30" pos:end="125:31"><expr pos:start="125:30" pos:end="125:31"><name pos:start="125:30" pos:end="125:31">cb</name></expr></argument>, <argument pos:start="125:34" pos:end="125:35"><expr pos:start="125:34" pos:end="125:35"><name pos:start="125:34" pos:end="125:35">io</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
