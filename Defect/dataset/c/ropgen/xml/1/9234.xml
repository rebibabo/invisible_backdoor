<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9234.c" pos:tabs="8"><function pos:start="1:1" pos:end="267:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">encode_residual_ch</name><parameter_list pos:start="1:30" pos:end="1:59">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:47">FlacEncodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:58"><decl pos:start="1:53" pos:end="1:58"><type pos:start="1:53" pos:end="1:58"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:58">ch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="267:1">{<block_content pos:start="5:5" pos:end="265:52">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">min_order</name></decl>, <decl pos:start="7:20" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:28">max_order</name></decl>, <decl pos:start="7:31" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:31" pos:end="7:39">opt_order</name></decl>, <decl pos:start="7:42" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:42" pos:end="7:48">omethod</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">FlacFrame</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">FlacSubframe</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">sub</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int32_t</name></type> <name pos:start="13:13" pos:end="13:47"><name pos:start="13:13" pos:end="13:17">coefs</name><index pos:start="13:18" pos:end="13:32">[<expr pos:start="13:19" pos:end="13:31"><name pos:start="13:19" pos:end="13:31">MAX_LPC_ORDER</name></expr>]</index><index pos:start="13:33" pos:end="13:47">[<expr pos:start="13:34" pos:end="13:46"><name pos:start="13:34" pos:end="13:46">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:13">shift</name><index pos:start="15:14" pos:end="15:28">[<expr pos:start="15:15" pos:end="15:27"><name pos:start="15:15" pos:end="15:27">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">int32_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:16">res</name></decl>, <decl pos:start="17:19" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:13"><modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:22">smp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:9">frame</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <operator pos:start="21:13" pos:end="21:13">&amp;</operator><name pos:start="21:14" pos:end="21:21"><name pos:start="21:14" pos:end="21:14">s</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:21">frame</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:7">sub</name>   <operator pos:start="23:11" pos:end="23:11">=</operator> <operator pos:start="23:13" pos:end="23:13">&amp;</operator><name pos:start="23:14" pos:end="23:33"><name pos:start="23:14" pos:end="23:18">frame</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:29">subframes</name><index pos:start="23:30" pos:end="23:33">[<expr pos:start="23:31" pos:end="23:32"><name pos:start="23:31" pos:end="23:32">ch</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:7">res</name>   <operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:15">sub</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:25">residual</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:7">smp</name>   <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:15">sub</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:24">samples</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:5">n</name>     <operator pos:start="29:11" pos:end="29:11">=</operator> <name pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:17">frame</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:28">blocksize</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:18">/* CONSTANT */</comment>

    <for pos:start="35:5" pos:end="39:18">for <control pos:start="35:9" pos:end="35:27">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">1</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:21">n</name></expr>;</condition> <incr pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:24">i</name><operator pos:start="35:25" pos:end="35:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:9" pos:end="39:18"><block_content pos:start="37:9" pos:end="39:18">

        <if_stmt pos:start="37:9" pos:end="39:18"><if pos:start="37:9" pos:end="39:18">if<condition pos:start="37:11" pos:end="37:28">(<expr pos:start="37:12" pos:end="37:27"><name pos:start="37:12" pos:end="37:17"><name pos:start="37:12" pos:end="37:14">smp</name><index pos:start="37:15" pos:end="37:17">[<expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">i</name></expr>]</index></name> <operator pos:start="37:19" pos:end="37:20">!=</operator> <name pos:start="37:22" pos:end="37:27"><name pos:start="37:22" pos:end="37:24">smp</name><index pos:start="37:25" pos:end="37:27">[<expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:18"><block_content pos:start="39:13" pos:end="39:18">

            <break pos:start="39:13" pos:end="39:18">break;</break></block_content></block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:15">(<expr pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:9">i</name> <operator pos:start="41:11" pos:end="41:12">==</operator> <name pos:start="41:14" pos:end="41:14">n</name></expr>)</condition> <block pos:start="41:17" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:47">

        <expr_stmt pos:start="43:9" pos:end="43:60"><expr pos:start="43:9" pos:end="43:59"><name pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:11">sub</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:17">type</name></name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:34"><name pos:start="43:21" pos:end="43:23">sub</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:34">type_code</name></name> <operator pos:start="43:36" pos:end="43:36">=</operator> <name pos:start="43:38" pos:end="43:59">FLAC_SUBFRAME_CONSTANT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:24"><expr pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:11">res</name><index pos:start="45:12" pos:end="45:14">[<expr pos:start="45:13" pos:end="45:13"><literal type="number" pos:start="45:13" pos:end="45:13">0</literal></expr>]</index></name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:23"><name pos:start="45:18" pos:end="45:20">smp</name><index pos:start="45:21" pos:end="45:23">[<expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:47">return <expr pos:start="47:16" pos:end="47:46"><call pos:start="47:16" pos:end="47:46"><name pos:start="47:16" pos:end="47:35">subframe_count_exact</name><argument_list pos:start="47:36" pos:end="47:46">(<argument pos:start="47:37" pos:end="47:37"><expr pos:start="47:37" pos:end="47:37"><name pos:start="47:37" pos:end="47:37">s</name></expr></argument>, <argument pos:start="47:40" pos:end="47:42"><expr pos:start="47:40" pos:end="47:42"><name pos:start="47:40" pos:end="47:42">sub</name></expr></argument>, <argument pos:start="47:45" pos:end="47:45"><expr pos:start="47:45" pos:end="47:45"><literal type="number" pos:start="47:45" pos:end="47:45">0</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:18">/* VERBATIM */</comment>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:38">(<expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:13">frame</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:28">verbatim_only</name></name> <operator pos:start="55:30" pos:end="55:31">||</operator> <name pos:start="55:33" pos:end="55:33">n</name> <operator pos:start="55:35" pos:end="55:35">&lt;</operator> <literal type="number" pos:start="55:37" pos:end="55:37">5</literal></expr>)</condition> <block pos:start="55:40" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:47">

        <expr_stmt pos:start="57:9" pos:end="57:60"><expr pos:start="57:9" pos:end="57:59"><name pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:11">sub</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:17">type</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:34"><name pos:start="57:21" pos:end="57:23">sub</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:34">type_code</name></name> <operator pos:start="57:36" pos:end="57:36">=</operator> <name pos:start="57:38" pos:end="57:59">FLAC_SUBFRAME_VERBATIM</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:46"><expr pos:start="59:9" pos:end="59:45"><call pos:start="59:9" pos:end="59:45"><name pos:start="59:9" pos:end="59:14">memcpy</name><argument_list pos:start="59:15" pos:end="59:45">(<argument pos:start="59:16" pos:end="59:18"><expr pos:start="59:16" pos:end="59:18"><name pos:start="59:16" pos:end="59:18">res</name></expr></argument>, <argument pos:start="59:21" pos:end="59:23"><expr pos:start="59:21" pos:end="59:23"><name pos:start="59:21" pos:end="59:23">smp</name></expr></argument>, <argument pos:start="59:26" pos:end="59:44"><expr pos:start="59:26" pos:end="59:44"><name pos:start="59:26" pos:end="59:26">n</name> <operator pos:start="59:28" pos:end="59:28">*</operator> <sizeof pos:start="59:30" pos:end="59:44">sizeof<argument_list pos:start="59:36" pos:end="59:44">(<argument pos:start="59:37" pos:end="59:43"><expr pos:start="59:37" pos:end="59:43"><name pos:start="59:37" pos:end="59:43">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:47">return <expr pos:start="61:16" pos:end="61:46"><call pos:start="61:16" pos:end="61:46"><name pos:start="61:16" pos:end="61:35">subframe_count_exact</name><argument_list pos:start="61:36" pos:end="61:46">(<argument pos:start="61:37" pos:end="61:37"><expr pos:start="61:37" pos:end="61:37"><name pos:start="61:37" pos:end="61:37">s</name></expr></argument>, <argument pos:start="61:40" pos:end="61:42"><expr pos:start="61:40" pos:end="61:42"><name pos:start="61:40" pos:end="61:42">sub</name></expr></argument>, <argument pos:start="61:45" pos:end="61:45"><expr pos:start="61:45" pos:end="61:45"><literal type="number" pos:start="61:45" pos:end="61:45">0</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:49"><expr pos:start="67:5" pos:end="67:48"><name pos:start="67:5" pos:end="67:13">min_order</name>  <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:48"><name pos:start="67:18" pos:end="67:18">s</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:27">options</name><operator pos:start="67:28" pos:end="67:28">.</operator><name pos:start="67:29" pos:end="67:48">min_prediction_order</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:49"><expr pos:start="69:5" pos:end="69:48"><name pos:start="69:5" pos:end="69:13">max_order</name>  <operator pos:start="69:16" pos:end="69:16">=</operator> <name pos:start="69:18" pos:end="69:48"><name pos:start="69:18" pos:end="69:18">s</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:27">options</name><operator pos:start="69:28" pos:end="69:28">.</operator><name pos:start="69:29" pos:end="69:48">max_prediction_order</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:52"><expr pos:start="71:5" pos:end="71:51"><name pos:start="71:5" pos:end="71:11">omethod</name>    <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:51"><name pos:start="71:18" pos:end="71:18">s</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:27">options</name><operator pos:start="71:28" pos:end="71:28">.</operator><name pos:start="71:29" pos:end="71:51">prediction_order_method</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:15">/* FIXED */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:36"><expr pos:start="77:5" pos:end="77:35"><name pos:start="77:5" pos:end="77:13"><name pos:start="77:5" pos:end="77:7">sub</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:13">type</name></name> <operator pos:start="77:15" pos:end="77:15">=</operator> <name pos:start="77:17" pos:end="77:35">FLAC_SUBFRAME_FIXED</name></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="119:5"><if pos:start="79:5" pos:end="119:5">if <condition pos:start="79:8" pos:end="81:67">(<expr pos:start="79:9" pos:end="81:66"><name pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:18">options</name><operator pos:start="79:19" pos:end="79:19">.</operator><name pos:start="79:20" pos:end="79:27">lpc_type</name></name> <operator pos:start="79:29" pos:end="79:30">==</operator> <name pos:start="79:32" pos:end="79:47">FF_LPC_TYPE_NONE</name>  <operator pos:start="79:50" pos:end="79:51">||</operator>

        <name pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:18">options</name><operator pos:start="81:19" pos:end="81:19">.</operator><name pos:start="81:20" pos:end="81:27">lpc_type</name></name> <operator pos:start="81:29" pos:end="81:30">==</operator> <name pos:start="81:32" pos:end="81:48">FF_LPC_TYPE_FIXED</name> <operator pos:start="81:50" pos:end="81:51">||</operator> <name pos:start="81:53" pos:end="81:53">n</name> <operator pos:start="81:55" pos:end="81:56">&lt;=</operator> <name pos:start="81:58" pos:end="81:66">max_order</name></expr>)</condition> <block pos:start="81:69" pos:end="119:5">{<block_content pos:start="83:9" pos:end="117:56">

        <decl_stmt pos:start="83:9" pos:end="83:41"><decl pos:start="83:9" pos:end="83:40"><type pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:16">uint32_t</name></type> <name pos:start="83:18" pos:end="83:40"><name pos:start="83:18" pos:end="83:21">bits</name><index pos:start="83:22" pos:end="83:40">[<expr pos:start="83:23" pos:end="83:39"><name pos:start="83:23" pos:end="83:37">MAX_FIXED_ORDER</name><operator pos:start="83:38" pos:end="83:38">+</operator><literal type="number" pos:start="83:39" pos:end="83:39">1</literal></expr>]</index></name></decl>;</decl_stmt>

        <if_stmt pos:start="85:9" pos:end="87:40"><if pos:start="85:9" pos:end="87:40">if <condition pos:start="85:12" pos:end="85:40">(<expr pos:start="85:13" pos:end="85:39"><name pos:start="85:13" pos:end="85:21">max_order</name> <operator pos:start="85:23" pos:end="85:23">&gt;</operator> <name pos:start="85:25" pos:end="85:39">MAX_FIXED_ORDER</name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:40"><block_content pos:start="87:13" pos:end="87:40">

            <expr_stmt pos:start="87:13" pos:end="87:40"><expr pos:start="87:13" pos:end="87:39"><name pos:start="87:13" pos:end="87:21">max_order</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:39">MAX_FIXED_ORDER</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:22"><expr pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:17">opt_order</name> <operator pos:start="89:19" pos:end="89:19">=</operator> <literal type="number" pos:start="89:21" pos:end="89:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:31"><expr pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:12">bits</name><index pos:start="91:13" pos:end="91:15">[<expr pos:start="91:14" pos:end="91:14"><literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>]</index></name>   <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:30">UINT32_MAX</name></expr>;</expr_stmt>

        <for pos:start="93:9" pos:end="103:9">for <control pos:start="93:13" pos:end="93:48">(<init pos:start="93:14" pos:end="93:27"><expr pos:start="93:14" pos:end="93:26"><name pos:start="93:14" pos:end="93:14">i</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <name pos:start="93:18" pos:end="93:26">min_order</name></expr>;</init> <condition pos:start="93:29" pos:end="93:43"><expr pos:start="93:29" pos:end="93:42"><name pos:start="93:29" pos:end="93:29">i</name> <operator pos:start="93:31" pos:end="93:32">&lt;=</operator> <name pos:start="93:34" pos:end="93:42">max_order</name></expr>;</condition> <incr pos:start="93:45" pos:end="93:47"><expr pos:start="93:45" pos:end="93:47"><name pos:start="93:45" pos:end="93:45">i</name><operator pos:start="93:46" pos:end="93:47">++</operator></expr></incr>)</control> <block pos:start="93:50" pos:end="103:9">{<block_content pos:start="95:13" pos:end="101:30">

            <expr_stmt pos:start="95:13" pos:end="95:50"><expr pos:start="95:13" pos:end="95:49"><call pos:start="95:13" pos:end="95:49"><name pos:start="95:13" pos:end="95:33">encode_residual_fixed</name><argument_list pos:start="95:34" pos:end="95:49">(<argument pos:start="95:35" pos:end="95:37"><expr pos:start="95:35" pos:end="95:37"><name pos:start="95:35" pos:end="95:37">res</name></expr></argument>, <argument pos:start="95:40" pos:end="95:42"><expr pos:start="95:40" pos:end="95:42"><name pos:start="95:40" pos:end="95:42">smp</name></expr></argument>, <argument pos:start="95:45" pos:end="95:45"><expr pos:start="95:45" pos:end="95:45"><name pos:start="95:45" pos:end="95:45">n</name></expr></argument>, <argument pos:start="95:48" pos:end="95:48"><expr pos:start="95:48" pos:end="95:48"><name pos:start="95:48" pos:end="95:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:59"><expr pos:start="97:13" pos:end="97:58"><name pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:16">bits</name><index pos:start="97:17" pos:end="97:19">[<expr pos:start="97:18" pos:end="97:18"><name pos:start="97:18" pos:end="97:18">i</name></expr>]</index></name> <operator pos:start="97:21" pos:end="97:21">=</operator> <call pos:start="97:23" pos:end="97:58"><name pos:start="97:23" pos:end="97:47">find_subframe_rice_params</name><argument_list pos:start="97:48" pos:end="97:58">(<argument pos:start="97:49" pos:end="97:49"><expr pos:start="97:49" pos:end="97:49"><name pos:start="97:49" pos:end="97:49">s</name></expr></argument>, <argument pos:start="97:52" pos:end="97:54"><expr pos:start="97:52" pos:end="97:54"><name pos:start="97:52" pos:end="97:54">sub</name></expr></argument>, <argument pos:start="97:57" pos:end="97:57"><expr pos:start="97:57" pos:end="97:57"><name pos:start="97:57" pos:end="97:57">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="101:30"><if pos:start="99:13" pos:end="101:30">if <condition pos:start="99:16" pos:end="99:42">(<expr pos:start="99:17" pos:end="99:41"><name pos:start="99:17" pos:end="99:23"><name pos:start="99:17" pos:end="99:20">bits</name><index pos:start="99:21" pos:end="99:23">[<expr pos:start="99:22" pos:end="99:22"><name pos:start="99:22" pos:end="99:22">i</name></expr>]</index></name> <operator pos:start="99:25" pos:end="99:25">&lt;</operator> <name pos:start="99:27" pos:end="99:41"><name pos:start="99:27" pos:end="99:30">bits</name><index pos:start="99:31" pos:end="99:41">[<expr pos:start="99:32" pos:end="99:40"><name pos:start="99:32" pos:end="99:40">opt_order</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:30"><block_content pos:start="101:17" pos:end="101:30">

                <expr_stmt pos:start="101:17" pos:end="101:30"><expr pos:start="101:17" pos:end="101:29"><name pos:start="101:17" pos:end="101:25">opt_order</name> <operator pos:start="101:27" pos:end="101:27">=</operator> <name pos:start="101:29" pos:end="101:29">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="105:9" pos:end="105:35"><expr pos:start="105:9" pos:end="105:34"><name pos:start="105:9" pos:end="105:18"><name pos:start="105:9" pos:end="105:11">sub</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:18">order</name></name>     <operator pos:start="105:24" pos:end="105:24">=</operator> <name pos:start="105:26" pos:end="105:34">opt_order</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:48"><expr pos:start="107:9" pos:end="107:47"><name pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:11">sub</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:22">type_code</name></name> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:34"><name pos:start="107:26" pos:end="107:28">sub</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:34">type</name></name> <operator pos:start="107:36" pos:end="107:36">|</operator> <name pos:start="107:38" pos:end="107:47"><name pos:start="107:38" pos:end="107:40">sub</name><operator pos:start="107:41" pos:end="107:42">-&gt;</operator><name pos:start="107:43" pos:end="107:47">order</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:36">(<expr pos:start="109:13" pos:end="109:35"><name pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:15">sub</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:22">order</name></name> <operator pos:start="109:24" pos:end="109:25">!=</operator> <name pos:start="109:27" pos:end="109:35">max_order</name></expr>)</condition> <block pos:start="109:38" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:58">

            <expr_stmt pos:start="111:13" pos:end="111:59"><expr pos:start="111:13" pos:end="111:58"><call pos:start="111:13" pos:end="111:58"><name pos:start="111:13" pos:end="111:33">encode_residual_fixed</name><argument_list pos:start="111:34" pos:end="111:58">(<argument pos:start="111:35" pos:end="111:37"><expr pos:start="111:35" pos:end="111:37"><name pos:start="111:35" pos:end="111:37">res</name></expr></argument>, <argument pos:start="111:40" pos:end="111:42"><expr pos:start="111:40" pos:end="111:42"><name pos:start="111:40" pos:end="111:42">smp</name></expr></argument>, <argument pos:start="111:45" pos:end="111:45"><expr pos:start="111:45" pos:end="111:45"><name pos:start="111:45" pos:end="111:45">n</name></expr></argument>, <argument pos:start="111:48" pos:end="111:57"><expr pos:start="111:48" pos:end="111:57"><name pos:start="111:48" pos:end="111:57"><name pos:start="111:48" pos:end="111:50">sub</name><operator pos:start="111:51" pos:end="111:52">-&gt;</operator><name pos:start="111:53" pos:end="111:57">order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:58"><expr pos:start="113:13" pos:end="113:57"><call pos:start="113:13" pos:end="113:57"><name pos:start="113:13" pos:end="113:37">find_subframe_rice_params</name><argument_list pos:start="113:38" pos:end="113:57">(<argument pos:start="113:39" pos:end="113:39"><expr pos:start="113:39" pos:end="113:39"><name pos:start="113:39" pos:end="113:39">s</name></expr></argument>, <argument pos:start="113:42" pos:end="113:44"><expr pos:start="113:42" pos:end="113:44"><name pos:start="113:42" pos:end="113:44">sub</name></expr></argument>, <argument pos:start="113:47" pos:end="113:56"><expr pos:start="113:47" pos:end="113:56"><name pos:start="113:47" pos:end="113:56"><name pos:start="113:47" pos:end="113:49">sub</name><operator pos:start="113:50" pos:end="113:51">-&gt;</operator><name pos:start="113:52" pos:end="113:56">order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="117:9" pos:end="117:56">return <expr pos:start="117:16" pos:end="117:55"><call pos:start="117:16" pos:end="117:55"><name pos:start="117:16" pos:end="117:35">subframe_count_exact</name><argument_list pos:start="117:36" pos:end="117:55">(<argument pos:start="117:37" pos:end="117:37"><expr pos:start="117:37" pos:end="117:37"><name pos:start="117:37" pos:end="117:37">s</name></expr></argument>, <argument pos:start="117:40" pos:end="117:42"><expr pos:start="117:40" pos:end="117:42"><name pos:start="117:40" pos:end="117:42">sub</name></expr></argument>, <argument pos:start="117:45" pos:end="117:54"><expr pos:start="117:45" pos:end="117:54"><name pos:start="117:45" pos:end="117:54"><name pos:start="117:45" pos:end="117:47">sub</name><operator pos:start="117:48" pos:end="117:49">-&gt;</operator><name pos:start="117:50" pos:end="117:54">order</name></name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:13">/* LPC */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:34"><expr pos:start="125:5" pos:end="125:33"><name pos:start="125:5" pos:end="125:13"><name pos:start="125:5" pos:end="125:7">sub</name><operator pos:start="125:8" pos:end="125:9">-&gt;</operator><name pos:start="125:10" pos:end="125:13">type</name></name> <operator pos:start="125:15" pos:end="125:15">=</operator> <name pos:start="125:17" pos:end="125:33">FLAC_SUBFRAME_LPC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="133:52"><expr pos:start="127:5" pos:end="133:51"><name pos:start="127:5" pos:end="127:13">opt_order</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <call pos:start="127:17" pos:end="133:51"><name pos:start="127:17" pos:end="127:33">ff_lpc_calc_coefs</name><argument_list pos:start="127:34" pos:end="133:51">(<argument pos:start="127:35" pos:end="127:45"><expr pos:start="127:35" pos:end="127:45"><operator pos:start="127:35" pos:end="127:35">&amp;</operator><name pos:start="127:36" pos:end="127:45"><name pos:start="127:36" pos:end="127:36">s</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:45">lpc_ctx</name></name></expr></argument>, <argument pos:start="127:48" pos:end="127:50"><expr pos:start="127:48" pos:end="127:50"><name pos:start="127:48" pos:end="127:50">smp</name></expr></argument>, <argument pos:start="127:53" pos:end="127:53"><expr pos:start="127:53" pos:end="127:53"><name pos:start="127:53" pos:end="127:53">n</name></expr></argument>, <argument pos:start="127:56" pos:end="127:64"><expr pos:start="127:56" pos:end="127:64"><name pos:start="127:56" pos:end="127:64">min_order</name></expr></argument>, <argument pos:start="127:67" pos:end="127:75"><expr pos:start="127:67" pos:end="127:75"><name pos:start="127:67" pos:end="127:75">max_order</name></expr></argument>,

                                  <argument pos:start="129:35" pos:end="129:64"><expr pos:start="129:35" pos:end="129:64"><name pos:start="129:35" pos:end="129:64"><name pos:start="129:35" pos:end="129:35">s</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:44">options</name><operator pos:start="129:45" pos:end="129:45">.</operator><name pos:start="129:46" pos:end="129:64">lpc_coeff_precision</name></name></expr></argument>, <argument pos:start="129:67" pos:end="129:71"><expr pos:start="129:67" pos:end="129:71"><name pos:start="129:67" pos:end="129:71">coefs</name></expr></argument>, <argument pos:start="129:74" pos:end="129:78"><expr pos:start="129:74" pos:end="129:78"><name pos:start="129:74" pos:end="129:78">shift</name></expr></argument>, <argument pos:start="129:81" pos:end="129:99"><expr pos:start="129:81" pos:end="129:99"><name pos:start="129:81" pos:end="129:99"><name pos:start="129:81" pos:end="129:81">s</name><operator pos:start="129:82" pos:end="129:83">-&gt;</operator><name pos:start="129:84" pos:end="129:90">options</name><operator pos:start="129:91" pos:end="129:91">.</operator><name pos:start="129:92" pos:end="129:99">lpc_type</name></name></expr></argument>,

                                  <argument pos:start="131:35" pos:end="131:55"><expr pos:start="131:35" pos:end="131:55"><name pos:start="131:35" pos:end="131:55"><name pos:start="131:35" pos:end="131:35">s</name><operator pos:start="131:36" pos:end="131:37">-&gt;</operator><name pos:start="131:38" pos:end="131:44">options</name><operator pos:start="131:45" pos:end="131:45">.</operator><name pos:start="131:46" pos:end="131:55">lpc_passes</name></name></expr></argument>, <argument pos:start="131:58" pos:end="131:64"><expr pos:start="131:58" pos:end="131:64"><name pos:start="131:58" pos:end="131:64">omethod</name></expr></argument>,

                                  <argument pos:start="133:35" pos:end="133:47"><expr pos:start="133:35" pos:end="133:47"><name pos:start="133:35" pos:end="133:47">MAX_LPC_SHIFT</name></expr></argument>, <argument pos:start="133:50" pos:end="133:50"><expr pos:start="133:50" pos:end="133:50"><literal type="number" pos:start="133:50" pos:end="133:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="137:5" pos:end="241:5"><if pos:start="137:5" pos:end="179:5">if <condition pos:start="137:8" pos:end="141:39">(<expr pos:start="137:9" pos:end="141:38"><name pos:start="137:9" pos:end="137:15">omethod</name> <operator pos:start="137:17" pos:end="137:18">==</operator> <name pos:start="137:20" pos:end="137:38">ORDER_METHOD_2LEVEL</name> <operator pos:start="137:40" pos:end="137:41">||</operator>

        <name pos:start="139:9" pos:end="139:15">omethod</name> <operator pos:start="139:17" pos:end="139:18">==</operator> <name pos:start="139:20" pos:end="139:38">ORDER_METHOD_4LEVEL</name> <operator pos:start="139:40" pos:end="139:41">||</operator>

        <name pos:start="141:9" pos:end="141:15">omethod</name> <operator pos:start="141:17" pos:end="141:18">==</operator> <name pos:start="141:20" pos:end="141:38">ORDER_METHOD_8LEVEL</name></expr>)</condition> <block pos:start="141:41" pos:end="179:5">{<block_content pos:start="143:9" pos:end="177:20">

        <decl_stmt pos:start="143:9" pos:end="143:34"><decl pos:start="143:9" pos:end="143:33"><type pos:start="143:9" pos:end="143:11"><name pos:start="143:9" pos:end="143:11">int</name></type> <name pos:start="143:13" pos:end="143:18">levels</name> <init pos:start="143:20" pos:end="143:33">= <expr pos:start="143:22" pos:end="143:33"><literal type="number" pos:start="143:22" pos:end="143:22">1</literal> <operator pos:start="143:24" pos:end="143:25">&lt;&lt;</operator> <name pos:start="143:27" pos:end="143:33">omethod</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="145:9" pos:end="145:48"><decl pos:start="145:9" pos:end="145:47"><type pos:start="145:9" pos:end="145:16"><name pos:start="145:9" pos:end="145:16">uint32_t</name></type> <name pos:start="145:18" pos:end="145:47"><name pos:start="145:18" pos:end="145:21">bits</name><index pos:start="145:22" pos:end="145:47">[<expr pos:start="145:23" pos:end="145:46"><literal type="number" pos:start="145:23" pos:end="145:23">1</literal> <operator pos:start="145:25" pos:end="145:26">&lt;&lt;</operator> <name pos:start="145:28" pos:end="145:46">ORDER_METHOD_8LEVEL</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="147:9" pos:end="147:18"><decl pos:start="147:9" pos:end="147:17"><type pos:start="147:9" pos:end="147:11"><name pos:start="147:9" pos:end="147:11">int</name></type> <name pos:start="147:13" pos:end="147:17">order</name></decl>;</decl_stmt>

        <decl_stmt pos:start="149:9" pos:end="149:35"><decl pos:start="149:9" pos:end="149:34"><type pos:start="149:9" pos:end="149:11"><name pos:start="149:9" pos:end="149:11">int</name></type> <name pos:start="149:13" pos:end="149:21">opt_index</name>   <init pos:start="149:25" pos:end="149:34">= <expr pos:start="149:27" pos:end="149:34"><name pos:start="149:27" pos:end="149:32">levels</name><operator pos:start="149:33" pos:end="149:33">-</operator><literal type="number" pos:start="149:34" pos:end="149:34">1</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:38"><expr pos:start="151:9" pos:end="151:37"><name pos:start="151:9" pos:end="151:17">opt_order</name>       <operator pos:start="151:25" pos:end="151:25">=</operator> <name pos:start="151:27" pos:end="151:35">max_order</name><operator pos:start="151:36" pos:end="151:36">-</operator><literal type="number" pos:start="151:37" pos:end="151:37">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:37"><expr pos:start="153:9" pos:end="153:36"><name pos:start="153:9" pos:end="153:23"><name pos:start="153:9" pos:end="153:12">bits</name><index pos:start="153:13" pos:end="153:23">[<expr pos:start="153:14" pos:end="153:22"><name pos:start="153:14" pos:end="153:22">opt_index</name></expr>]</index></name> <operator pos:start="153:25" pos:end="153:25">=</operator> <name pos:start="153:27" pos:end="153:36">UINT32_MAX</name></expr>;</expr_stmt>

        <for pos:start="155:9" pos:end="175:9">for <control pos:start="155:13" pos:end="155:39">(<init pos:start="155:14" pos:end="155:26"><expr pos:start="155:14" pos:end="155:25"><name pos:start="155:14" pos:end="155:14">i</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <name pos:start="155:18" pos:end="155:23">levels</name><operator pos:start="155:24" pos:end="155:24">-</operator><literal type="number" pos:start="155:25" pos:end="155:25">1</literal></expr>;</init> <condition pos:start="155:28" pos:end="155:34"><expr pos:start="155:28" pos:end="155:33"><name pos:start="155:28" pos:end="155:28">i</name> <operator pos:start="155:30" pos:end="155:31">&gt;=</operator> <literal type="number" pos:start="155:33" pos:end="155:33">0</literal></expr>;</condition> <incr pos:start="155:36" pos:end="155:38"><expr pos:start="155:36" pos:end="155:38"><name pos:start="155:36" pos:end="155:36">i</name><operator pos:start="155:37" pos:end="155:38">--</operator></expr></incr>)</control> <block pos:start="155:41" pos:end="175:9">{<block_content pos:start="157:13" pos:end="173:13">

            <expr_stmt pos:start="157:13" pos:end="157:79"><expr pos:start="157:13" pos:end="157:78"><name pos:start="157:13" pos:end="157:17">order</name> <operator pos:start="157:19" pos:end="157:19">=</operator> <name pos:start="157:21" pos:end="157:29">min_order</name> <operator pos:start="157:31" pos:end="157:31">+</operator> <operator pos:start="157:33" pos:end="157:33">(</operator><operator pos:start="157:34" pos:end="157:34">(</operator><operator pos:start="157:35" pos:end="157:35">(</operator><name pos:start="157:36" pos:end="157:44">max_order</name><operator pos:start="157:45" pos:end="157:45">-</operator><name pos:start="157:46" pos:end="157:54">min_order</name><operator pos:start="157:55" pos:end="157:55">+</operator><literal type="number" pos:start="157:56" pos:end="157:56">1</literal><operator pos:start="157:57" pos:end="157:57">)</operator> <operator pos:start="157:59" pos:end="157:59">*</operator> <operator pos:start="157:61" pos:end="157:61">(</operator><name pos:start="157:62" pos:end="157:62">i</name><operator pos:start="157:63" pos:end="157:63">+</operator><literal type="number" pos:start="157:64" pos:end="157:64">1</literal><operator pos:start="157:65" pos:end="157:65">)</operator><operator pos:start="157:66" pos:end="157:66">)</operator> <operator pos:start="157:68" pos:end="157:68">/</operator> <name pos:start="157:70" pos:end="157:75">levels</name><operator pos:start="157:76" pos:end="157:76">)</operator><operator pos:start="157:77" pos:end="157:77">-</operator><literal type="number" pos:start="157:78" pos:end="157:78">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="161:26"><if pos:start="159:13" pos:end="161:26">if <condition pos:start="159:16" pos:end="159:26">(<expr pos:start="159:17" pos:end="159:25"><name pos:start="159:17" pos:end="159:21">order</name> <operator pos:start="159:23" pos:end="159:23">&lt;</operator> <literal type="number" pos:start="159:25" pos:end="159:25">0</literal></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:26"><block_content pos:start="161:17" pos:end="161:26">

                <expr_stmt pos:start="161:17" pos:end="161:26"><expr pos:start="161:17" pos:end="161:25"><name pos:start="161:17" pos:end="161:21">order</name> <operator pos:start="161:23" pos:end="161:23">=</operator> <literal type="number" pos:start="161:25" pos:end="161:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:82"><expr pos:start="163:13" pos:end="163:81"><call pos:start="163:13" pos:end="163:81"><name pos:start="163:13" pos:end="163:31">encode_residual_lpc</name><argument_list pos:start="163:32" pos:end="163:81">(<argument pos:start="163:33" pos:end="163:35"><expr pos:start="163:33" pos:end="163:35"><name pos:start="163:33" pos:end="163:35">res</name></expr></argument>, <argument pos:start="163:38" pos:end="163:40"><expr pos:start="163:38" pos:end="163:40"><name pos:start="163:38" pos:end="163:40">smp</name></expr></argument>, <argument pos:start="163:43" pos:end="163:43"><expr pos:start="163:43" pos:end="163:43"><name pos:start="163:43" pos:end="163:43">n</name></expr></argument>, <argument pos:start="163:46" pos:end="163:52"><expr pos:start="163:46" pos:end="163:52"><name pos:start="163:46" pos:end="163:50">order</name><operator pos:start="163:51" pos:end="163:51">+</operator><literal type="number" pos:start="163:52" pos:end="163:52">1</literal></expr></argument>, <argument pos:start="163:55" pos:end="163:66"><expr pos:start="163:55" pos:end="163:66"><name pos:start="163:55" pos:end="163:66"><name pos:start="163:55" pos:end="163:59">coefs</name><index pos:start="163:60" pos:end="163:66">[<expr pos:start="163:61" pos:end="163:65"><name pos:start="163:61" pos:end="163:65">order</name></expr>]</index></name></expr></argument>, <argument pos:start="163:69" pos:end="163:80"><expr pos:start="163:69" pos:end="163:80"><name pos:start="163:69" pos:end="163:80"><name pos:start="163:69" pos:end="163:73">shift</name><index pos:start="163:74" pos:end="163:80">[<expr pos:start="163:75" pos:end="163:79"><name pos:start="163:75" pos:end="163:79">order</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:65"><expr pos:start="165:13" pos:end="165:64"><name pos:start="165:13" pos:end="165:19"><name pos:start="165:13" pos:end="165:16">bits</name><index pos:start="165:17" pos:end="165:19">[<expr pos:start="165:18" pos:end="165:18"><name pos:start="165:18" pos:end="165:18">i</name></expr>]</index></name> <operator pos:start="165:21" pos:end="165:21">=</operator> <call pos:start="165:23" pos:end="165:64"><name pos:start="165:23" pos:end="165:47">find_subframe_rice_params</name><argument_list pos:start="165:48" pos:end="165:64">(<argument pos:start="165:49" pos:end="165:49"><expr pos:start="165:49" pos:end="165:49"><name pos:start="165:49" pos:end="165:49">s</name></expr></argument>, <argument pos:start="165:52" pos:end="165:54"><expr pos:start="165:52" pos:end="165:54"><name pos:start="165:52" pos:end="165:54">sub</name></expr></argument>, <argument pos:start="165:57" pos:end="165:63"><expr pos:start="165:57" pos:end="165:63"><name pos:start="165:57" pos:end="165:61">order</name><operator pos:start="165:62" pos:end="165:62">+</operator><literal type="number" pos:start="165:63" pos:end="165:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="167:13" pos:end="173:13"><if pos:start="167:13" pos:end="173:13">if <condition pos:start="167:16" pos:end="167:42">(<expr pos:start="167:17" pos:end="167:41"><name pos:start="167:17" pos:end="167:23"><name pos:start="167:17" pos:end="167:20">bits</name><index pos:start="167:21" pos:end="167:23">[<expr pos:start="167:22" pos:end="167:22"><name pos:start="167:22" pos:end="167:22">i</name></expr>]</index></name> <operator pos:start="167:25" pos:end="167:25">&lt;</operator> <name pos:start="167:27" pos:end="167:41"><name pos:start="167:27" pos:end="167:30">bits</name><index pos:start="167:31" pos:end="167:41">[<expr pos:start="167:32" pos:end="167:40"><name pos:start="167:32" pos:end="167:40">opt_index</name></expr>]</index></name></expr>)</condition> <block pos:start="167:44" pos:end="173:13">{<block_content pos:start="169:17" pos:end="171:34">

                <expr_stmt pos:start="169:17" pos:end="169:30"><expr pos:start="169:17" pos:end="169:29"><name pos:start="169:17" pos:end="169:25">opt_index</name> <operator pos:start="169:27" pos:end="169:27">=</operator> <name pos:start="169:29" pos:end="169:29">i</name></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:34"><expr pos:start="171:17" pos:end="171:33"><name pos:start="171:17" pos:end="171:25">opt_order</name> <operator pos:start="171:27" pos:end="171:27">=</operator> <name pos:start="171:29" pos:end="171:33">order</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="177:9" pos:end="177:20"><expr pos:start="177:9" pos:end="177:19"><name pos:start="177:9" pos:end="177:17">opt_order</name><operator pos:start="177:18" pos:end="177:19">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="179:7" pos:end="203:5">else if <condition pos:start="179:15" pos:end="179:46">(<expr pos:start="179:16" pos:end="179:45"><name pos:start="179:16" pos:end="179:22">omethod</name> <operator pos:start="179:24" pos:end="179:25">==</operator> <name pos:start="179:27" pos:end="179:45">ORDER_METHOD_SEARCH</name></expr>)</condition> <block pos:start="179:48" pos:end="203:5">{<block_content pos:start="183:9" pos:end="201:20">

        <comment type="line" pos:start="181:9" pos:end="181:43">// brute-force optimal order search</comment>

        <decl_stmt pos:start="183:9" pos:end="183:37"><decl pos:start="183:9" pos:end="183:36"><type pos:start="183:9" pos:end="183:16"><name pos:start="183:9" pos:end="183:16">uint32_t</name></type> <name pos:start="183:18" pos:end="183:36"><name pos:start="183:18" pos:end="183:21">bits</name><index pos:start="183:22" pos:end="183:36">[<expr pos:start="183:23" pos:end="183:35"><name pos:start="183:23" pos:end="183:35">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:22"><expr pos:start="185:9" pos:end="185:21"><name pos:start="185:9" pos:end="185:17">opt_order</name> <operator pos:start="185:19" pos:end="185:19">=</operator> <literal type="number" pos:start="185:21" pos:end="185:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:31"><expr pos:start="187:9" pos:end="187:30"><name pos:start="187:9" pos:end="187:15"><name pos:start="187:9" pos:end="187:12">bits</name><index pos:start="187:13" pos:end="187:15">[<expr pos:start="187:14" pos:end="187:14"><literal type="number" pos:start="187:14" pos:end="187:14">0</literal></expr>]</index></name>   <operator pos:start="187:19" pos:end="187:19">=</operator> <name pos:start="187:21" pos:end="187:30">UINT32_MAX</name></expr>;</expr_stmt>

        <for pos:start="189:9" pos:end="199:9">for <control pos:start="189:13" pos:end="189:49">(<init pos:start="189:14" pos:end="189:29"><expr pos:start="189:14" pos:end="189:28"><name pos:start="189:14" pos:end="189:14">i</name> <operator pos:start="189:16" pos:end="189:16">=</operator> <name pos:start="189:18" pos:end="189:26">min_order</name><operator pos:start="189:27" pos:end="189:27">-</operator><literal type="number" pos:start="189:28" pos:end="189:28">1</literal></expr>;</init> <condition pos:start="189:31" pos:end="189:44"><expr pos:start="189:31" pos:end="189:43"><name pos:start="189:31" pos:end="189:31">i</name> <operator pos:start="189:33" pos:end="189:33">&lt;</operator> <name pos:start="189:35" pos:end="189:43">max_order</name></expr>;</condition> <incr pos:start="189:46" pos:end="189:48"><expr pos:start="189:46" pos:end="189:48"><name pos:start="189:46" pos:end="189:46">i</name><operator pos:start="189:47" pos:end="189:48">++</operator></expr></incr>)</control> <block pos:start="189:51" pos:end="199:9">{<block_content pos:start="191:13" pos:end="197:30">

            <expr_stmt pos:start="191:13" pos:end="191:70"><expr pos:start="191:13" pos:end="191:69"><call pos:start="191:13" pos:end="191:69"><name pos:start="191:13" pos:end="191:31">encode_residual_lpc</name><argument_list pos:start="191:32" pos:end="191:69">(<argument pos:start="191:33" pos:end="191:35"><expr pos:start="191:33" pos:end="191:35"><name pos:start="191:33" pos:end="191:35">res</name></expr></argument>, <argument pos:start="191:38" pos:end="191:40"><expr pos:start="191:38" pos:end="191:40"><name pos:start="191:38" pos:end="191:40">smp</name></expr></argument>, <argument pos:start="191:43" pos:end="191:43"><expr pos:start="191:43" pos:end="191:43"><name pos:start="191:43" pos:end="191:43">n</name></expr></argument>, <argument pos:start="191:46" pos:end="191:48"><expr pos:start="191:46" pos:end="191:48"><name pos:start="191:46" pos:end="191:46">i</name><operator pos:start="191:47" pos:end="191:47">+</operator><literal type="number" pos:start="191:48" pos:end="191:48">1</literal></expr></argument>, <argument pos:start="191:51" pos:end="191:58"><expr pos:start="191:51" pos:end="191:58"><name pos:start="191:51" pos:end="191:58"><name pos:start="191:51" pos:end="191:55">coefs</name><index pos:start="191:56" pos:end="191:58">[<expr pos:start="191:57" pos:end="191:57"><name pos:start="191:57" pos:end="191:57">i</name></expr>]</index></name></expr></argument>, <argument pos:start="191:61" pos:end="191:68"><expr pos:start="191:61" pos:end="191:68"><name pos:start="191:61" pos:end="191:68"><name pos:start="191:61" pos:end="191:65">shift</name><index pos:start="191:66" pos:end="191:68">[<expr pos:start="191:67" pos:end="191:67"><name pos:start="191:67" pos:end="191:67">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:61"><expr pos:start="193:13" pos:end="193:60"><name pos:start="193:13" pos:end="193:19"><name pos:start="193:13" pos:end="193:16">bits</name><index pos:start="193:17" pos:end="193:19">[<expr pos:start="193:18" pos:end="193:18"><name pos:start="193:18" pos:end="193:18">i</name></expr>]</index></name> <operator pos:start="193:21" pos:end="193:21">=</operator> <call pos:start="193:23" pos:end="193:60"><name pos:start="193:23" pos:end="193:47">find_subframe_rice_params</name><argument_list pos:start="193:48" pos:end="193:60">(<argument pos:start="193:49" pos:end="193:49"><expr pos:start="193:49" pos:end="193:49"><name pos:start="193:49" pos:end="193:49">s</name></expr></argument>, <argument pos:start="193:52" pos:end="193:54"><expr pos:start="193:52" pos:end="193:54"><name pos:start="193:52" pos:end="193:54">sub</name></expr></argument>, <argument pos:start="193:57" pos:end="193:59"><expr pos:start="193:57" pos:end="193:59"><name pos:start="193:57" pos:end="193:57">i</name><operator pos:start="193:58" pos:end="193:58">+</operator><literal type="number" pos:start="193:59" pos:end="193:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="197:30"><if pos:start="195:13" pos:end="197:30">if <condition pos:start="195:16" pos:end="195:42">(<expr pos:start="195:17" pos:end="195:41"><name pos:start="195:17" pos:end="195:23"><name pos:start="195:17" pos:end="195:20">bits</name><index pos:start="195:21" pos:end="195:23">[<expr pos:start="195:22" pos:end="195:22"><name pos:start="195:22" pos:end="195:22">i</name></expr>]</index></name> <operator pos:start="195:25" pos:end="195:25">&lt;</operator> <name pos:start="195:27" pos:end="195:41"><name pos:start="195:27" pos:end="195:30">bits</name><index pos:start="195:31" pos:end="195:41">[<expr pos:start="195:32" pos:end="195:40"><name pos:start="195:32" pos:end="195:40">opt_order</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:30"><block_content pos:start="197:17" pos:end="197:30">

                <expr_stmt pos:start="197:17" pos:end="197:30"><expr pos:start="197:17" pos:end="197:29"><name pos:start="197:17" pos:end="197:25">opt_order</name> <operator pos:start="197:27" pos:end="197:27">=</operator> <name pos:start="197:29" pos:end="197:29">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="201:9" pos:end="201:20"><expr pos:start="201:9" pos:end="201:19"><name pos:start="201:9" pos:end="201:17">opt_order</name><operator pos:start="201:18" pos:end="201:19">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="203:7" pos:end="241:5">else if <condition pos:start="203:15" pos:end="203:43">(<expr pos:start="203:16" pos:end="203:42"><name pos:start="203:16" pos:end="203:22">omethod</name> <operator pos:start="203:24" pos:end="203:25">==</operator> <name pos:start="203:27" pos:end="203:42">ORDER_METHOD_LOG</name></expr>)</condition> <block pos:start="203:45" pos:end="241:5">{<block_content pos:start="205:9" pos:end="239:20">

        <decl_stmt pos:start="205:9" pos:end="205:37"><decl pos:start="205:9" pos:end="205:36"><type pos:start="205:9" pos:end="205:16"><name pos:start="205:9" pos:end="205:16">uint32_t</name></type> <name pos:start="205:18" pos:end="205:36"><name pos:start="205:18" pos:end="205:21">bits</name><index pos:start="205:22" pos:end="205:36">[<expr pos:start="205:23" pos:end="205:35"><name pos:start="205:23" pos:end="205:35">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="207:9" pos:end="207:17"><decl pos:start="207:9" pos:end="207:16"><type pos:start="207:9" pos:end="207:11"><name pos:start="207:9" pos:end="207:11">int</name></type> <name pos:start="207:13" pos:end="207:16">step</name></decl>;</decl_stmt>



        <expr_stmt pos:start="211:9" pos:end="211:60"><expr pos:start="211:9" pos:end="211:59"><name pos:start="211:9" pos:end="211:17">opt_order</name> <operator pos:start="211:19" pos:end="211:19">=</operator> <name pos:start="211:21" pos:end="211:29">min_order</name> <operator pos:start="211:31" pos:end="211:31">-</operator> <literal type="number" pos:start="211:33" pos:end="211:35">1</literal> <operator pos:start="211:35" pos:end="211:35">+</operator> <operator pos:start="211:37" pos:end="211:37">(</operator><name pos:start="211:38" pos:end="211:46">max_order</name><operator pos:start="211:47" pos:end="211:47">-</operator><name pos:start="211:48" pos:end="211:56">min_order</name><operator pos:start="211:57" pos:end="211:57">)</operator><operator pos:start="211:58" pos:end="211:58">/</operator><literal type="number" pos:start="211:59" pos:end="211:59">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:39"><expr pos:start="213:9" pos:end="213:38"><call pos:start="213:9" pos:end="213:38"><name pos:start="213:9" pos:end="213:14">memset</name><argument_list pos:start="213:15" pos:end="213:38">(<argument pos:start="213:16" pos:end="213:19"><expr pos:start="213:16" pos:end="213:19"><name pos:start="213:16" pos:end="213:19">bits</name></expr></argument>, <argument pos:start="213:22" pos:end="213:23"><expr pos:start="213:22" pos:end="213:23"><operator pos:start="213:22" pos:end="213:22">-</operator><literal type="number" pos:start="213:23" pos:end="213:23">1</literal></expr></argument>, <argument pos:start="213:26" pos:end="213:37"><expr pos:start="213:26" pos:end="213:37"><sizeof pos:start="213:26" pos:end="213:37">sizeof<argument_list pos:start="213:32" pos:end="213:37">(<argument pos:start="213:33" pos:end="213:36"><expr pos:start="213:33" pos:end="213:36"><name pos:start="213:33" pos:end="213:36">bits</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="217:9" pos:end="237:9">for <control pos:start="217:13" pos:end="217:41">(<init pos:start="217:14" pos:end="217:23"><expr pos:start="217:14" pos:end="217:22"><name pos:start="217:14" pos:end="217:17">step</name> <operator pos:start="217:19" pos:end="217:19">=</operator> <literal type="number" pos:start="217:21" pos:end="217:22">16</literal></expr>;</init> <condition pos:start="217:25" pos:end="217:29"><expr pos:start="217:25" pos:end="217:28"><name pos:start="217:25" pos:end="217:28">step</name></expr>;</condition> <incr pos:start="217:31" pos:end="217:40"><expr pos:start="217:31" pos:end="217:40"><name pos:start="217:31" pos:end="217:34">step</name> <operator pos:start="217:36" pos:end="217:38">&gt;&gt;=</operator> <literal type="number" pos:start="217:40" pos:end="217:40">1</literal></expr></incr>)</control> <block pos:start="217:43" pos:end="237:9">{<block_content pos:start="219:13" pos:end="235:13">

            <decl_stmt pos:start="219:13" pos:end="219:33"><decl pos:start="219:13" pos:end="219:32"><type pos:start="219:13" pos:end="219:15"><name pos:start="219:13" pos:end="219:15">int</name></type> <name pos:start="219:17" pos:end="219:20">last</name> <init pos:start="219:22" pos:end="219:32">= <expr pos:start="219:24" pos:end="219:32"><name pos:start="219:24" pos:end="219:32">opt_order</name></expr></init></decl>;</decl_stmt>

            <for pos:start="221:13" pos:end="235:13">for <control pos:start="221:17" pos:end="221:58">(<init pos:start="221:18" pos:end="221:31"><expr pos:start="221:18" pos:end="221:30"><name pos:start="221:18" pos:end="221:18">i</name> <operator pos:start="221:20" pos:end="221:20">=</operator> <name pos:start="221:22" pos:end="221:25">last</name><operator pos:start="221:26" pos:end="221:26">-</operator><name pos:start="221:27" pos:end="221:30">step</name></expr>;</init> <condition pos:start="221:33" pos:end="221:47"><expr pos:start="221:33" pos:end="221:46"><name pos:start="221:33" pos:end="221:33">i</name> <operator pos:start="221:35" pos:end="221:36">&lt;=</operator> <name pos:start="221:38" pos:end="221:41">last</name><operator pos:start="221:42" pos:end="221:42">+</operator><name pos:start="221:43" pos:end="221:46">step</name></expr>;</condition> <incr pos:start="221:49" pos:end="221:57"><expr pos:start="221:49" pos:end="221:57"><name pos:start="221:49" pos:end="221:49">i</name> <operator pos:start="221:51" pos:end="221:52">+=</operator> <name pos:start="221:54" pos:end="221:57">step</name></expr></incr>)</control> <block pos:start="221:60" pos:end="235:13">{<block_content pos:start="223:17" pos:end="233:34">

                <if_stmt pos:start="223:17" pos:end="225:29"><if pos:start="223:17" pos:end="225:29">if <condition pos:start="223:20" pos:end="223:78">(<expr pos:start="223:21" pos:end="223:77"><name pos:start="223:21" pos:end="223:21">i</name> <operator pos:start="223:23" pos:end="223:23">&lt;</operator> <name pos:start="223:25" pos:end="223:33">min_order</name><operator pos:start="223:34" pos:end="223:34">-</operator><literal type="number" pos:start="223:35" pos:end="223:35">1</literal> <operator pos:start="223:37" pos:end="223:38">||</operator> <name pos:start="223:40" pos:end="223:40">i</name> <operator pos:start="223:42" pos:end="223:43">&gt;=</operator> <name pos:start="223:45" pos:end="223:53">max_order</name> <operator pos:start="223:55" pos:end="223:56">||</operator> <name pos:start="223:58" pos:end="223:64"><name pos:start="223:58" pos:end="223:61">bits</name><index pos:start="223:62" pos:end="223:64">[<expr pos:start="223:63" pos:end="223:63"><name pos:start="223:63" pos:end="223:63">i</name></expr>]</index></name> <operator pos:start="223:66" pos:end="223:66">&lt;</operator> <name pos:start="223:68" pos:end="223:77">UINT32_MAX</name></expr>)</condition><block type="pseudo" pos:start="225:21" pos:end="225:29"><block_content pos:start="225:21" pos:end="225:29">

                    <continue pos:start="225:21" pos:end="225:29">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:74"><expr pos:start="227:17" pos:end="227:73"><call pos:start="227:17" pos:end="227:73"><name pos:start="227:17" pos:end="227:35">encode_residual_lpc</name><argument_list pos:start="227:36" pos:end="227:73">(<argument pos:start="227:37" pos:end="227:39"><expr pos:start="227:37" pos:end="227:39"><name pos:start="227:37" pos:end="227:39">res</name></expr></argument>, <argument pos:start="227:42" pos:end="227:44"><expr pos:start="227:42" pos:end="227:44"><name pos:start="227:42" pos:end="227:44">smp</name></expr></argument>, <argument pos:start="227:47" pos:end="227:47"><expr pos:start="227:47" pos:end="227:47"><name pos:start="227:47" pos:end="227:47">n</name></expr></argument>, <argument pos:start="227:50" pos:end="227:52"><expr pos:start="227:50" pos:end="227:52"><name pos:start="227:50" pos:end="227:50">i</name><operator pos:start="227:51" pos:end="227:51">+</operator><literal type="number" pos:start="227:52" pos:end="227:52">1</literal></expr></argument>, <argument pos:start="227:55" pos:end="227:62"><expr pos:start="227:55" pos:end="227:62"><name pos:start="227:55" pos:end="227:62"><name pos:start="227:55" pos:end="227:59">coefs</name><index pos:start="227:60" pos:end="227:62">[<expr pos:start="227:61" pos:end="227:61"><name pos:start="227:61" pos:end="227:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="227:65" pos:end="227:72"><expr pos:start="227:65" pos:end="227:72"><name pos:start="227:65" pos:end="227:72"><name pos:start="227:65" pos:end="227:69">shift</name><index pos:start="227:70" pos:end="227:72">[<expr pos:start="227:71" pos:end="227:71"><name pos:start="227:71" pos:end="227:71">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="229:65"><expr pos:start="229:17" pos:end="229:64"><name pos:start="229:17" pos:end="229:23"><name pos:start="229:17" pos:end="229:20">bits</name><index pos:start="229:21" pos:end="229:23">[<expr pos:start="229:22" pos:end="229:22"><name pos:start="229:22" pos:end="229:22">i</name></expr>]</index></name> <operator pos:start="229:25" pos:end="229:25">=</operator> <call pos:start="229:27" pos:end="229:64"><name pos:start="229:27" pos:end="229:51">find_subframe_rice_params</name><argument_list pos:start="229:52" pos:end="229:64">(<argument pos:start="229:53" pos:end="229:53"><expr pos:start="229:53" pos:end="229:53"><name pos:start="229:53" pos:end="229:53">s</name></expr></argument>, <argument pos:start="229:56" pos:end="229:58"><expr pos:start="229:56" pos:end="229:58"><name pos:start="229:56" pos:end="229:58">sub</name></expr></argument>, <argument pos:start="229:61" pos:end="229:63"><expr pos:start="229:61" pos:end="229:63"><name pos:start="229:61" pos:end="229:61">i</name><operator pos:start="229:62" pos:end="229:62">+</operator><literal type="number" pos:start="229:63" pos:end="229:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="231:17" pos:end="233:34"><if pos:start="231:17" pos:end="233:34">if <condition pos:start="231:20" pos:end="231:46">(<expr pos:start="231:21" pos:end="231:45"><name pos:start="231:21" pos:end="231:27"><name pos:start="231:21" pos:end="231:24">bits</name><index pos:start="231:25" pos:end="231:27">[<expr pos:start="231:26" pos:end="231:26"><name pos:start="231:26" pos:end="231:26">i</name></expr>]</index></name> <operator pos:start="231:29" pos:end="231:29">&lt;</operator> <name pos:start="231:31" pos:end="231:45"><name pos:start="231:31" pos:end="231:34">bits</name><index pos:start="231:35" pos:end="231:45">[<expr pos:start="231:36" pos:end="231:44"><name pos:start="231:36" pos:end="231:44">opt_order</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="233:21" pos:end="233:34"><block_content pos:start="233:21" pos:end="233:34">

                    <expr_stmt pos:start="233:21" pos:end="233:34"><expr pos:start="233:21" pos:end="233:33"><name pos:start="233:21" pos:end="233:29">opt_order</name> <operator pos:start="233:31" pos:end="233:31">=</operator> <name pos:start="233:33" pos:end="233:33">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="239:9" pos:end="239:20"><expr pos:start="239:9" pos:end="239:19"><name pos:start="239:9" pos:end="239:17">opt_order</name><operator pos:start="239:18" pos:end="239:19">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="245:5" pos:end="245:31"><expr pos:start="245:5" pos:end="245:30"><name pos:start="245:5" pos:end="245:14"><name pos:start="245:5" pos:end="245:7">sub</name><operator pos:start="245:8" pos:end="245:9">-&gt;</operator><name pos:start="245:10" pos:end="245:14">order</name></name>     <operator pos:start="245:20" pos:end="245:20">=</operator> <name pos:start="245:22" pos:end="245:30">opt_order</name></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:48"><expr pos:start="247:5" pos:end="247:47"><name pos:start="247:5" pos:end="247:18"><name pos:start="247:5" pos:end="247:7">sub</name><operator pos:start="247:8" pos:end="247:9">-&gt;</operator><name pos:start="247:10" pos:end="247:18">type_code</name></name> <operator pos:start="247:20" pos:end="247:20">=</operator> <name pos:start="247:22" pos:end="247:30"><name pos:start="247:22" pos:end="247:24">sub</name><operator pos:start="247:25" pos:end="247:26">-&gt;</operator><name pos:start="247:27" pos:end="247:30">type</name></name> <operator pos:start="247:32" pos:end="247:32">|</operator> <operator pos:start="247:34" pos:end="247:34">(</operator><name pos:start="247:35" pos:end="247:44"><name pos:start="247:35" pos:end="247:37">sub</name><operator pos:start="247:38" pos:end="247:39">-&gt;</operator><name pos:start="247:40" pos:end="247:44">order</name></name><operator pos:start="247:45" pos:end="247:45">-</operator><literal type="number" pos:start="247:46" pos:end="247:46">1</literal><operator pos:start="247:47" pos:end="247:47">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:41"><expr pos:start="249:5" pos:end="249:40"><name pos:start="249:5" pos:end="249:14"><name pos:start="249:5" pos:end="249:7">sub</name><operator pos:start="249:8" pos:end="249:9">-&gt;</operator><name pos:start="249:10" pos:end="249:14">shift</name></name>     <operator pos:start="249:20" pos:end="249:20">=</operator> <name pos:start="249:22" pos:end="249:40"><name pos:start="249:22" pos:end="249:26">shift</name><index pos:start="249:27" pos:end="249:40">[<expr pos:start="249:28" pos:end="249:39"><name pos:start="249:28" pos:end="249:37"><name pos:start="249:28" pos:end="249:30">sub</name><operator pos:start="249:31" pos:end="249:32">-&gt;</operator><name pos:start="249:33" pos:end="249:37">order</name></name><operator pos:start="249:38" pos:end="249:38">-</operator><literal type="number" pos:start="249:39" pos:end="249:39">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="251:5" pos:end="253:47">for <control pos:start="251:9" pos:end="251:36">(<init pos:start="251:10" pos:end="251:15"><expr pos:start="251:10" pos:end="251:14"><name pos:start="251:10" pos:end="251:10">i</name> <operator pos:start="251:12" pos:end="251:12">=</operator> <literal type="number" pos:start="251:14" pos:end="251:14">0</literal></expr>;</init> <condition pos:start="251:17" pos:end="251:31"><expr pos:start="251:17" pos:end="251:30"><name pos:start="251:17" pos:end="251:17">i</name> <operator pos:start="251:19" pos:end="251:19">&lt;</operator> <name pos:start="251:21" pos:end="251:30"><name pos:start="251:21" pos:end="251:23">sub</name><operator pos:start="251:24" pos:end="251:25">-&gt;</operator><name pos:start="251:26" pos:end="251:30">order</name></name></expr>;</condition> <incr pos:start="251:33" pos:end="251:35"><expr pos:start="251:33" pos:end="251:35"><name pos:start="251:33" pos:end="251:33">i</name><operator pos:start="251:34" pos:end="251:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="253:9" pos:end="253:47"><block_content pos:start="253:9" pos:end="253:47">

        <expr_stmt pos:start="253:9" pos:end="253:47"><expr pos:start="253:9" pos:end="253:46"><name pos:start="253:9" pos:end="253:21"><name pos:start="253:9" pos:end="253:11">sub</name><operator pos:start="253:12" pos:end="253:13">-&gt;</operator><name pos:start="253:14" pos:end="253:18">coefs</name><index pos:start="253:19" pos:end="253:21">[<expr pos:start="253:20" pos:end="253:20"><name pos:start="253:20" pos:end="253:20">i</name></expr>]</index></name> <operator pos:start="253:23" pos:end="253:23">=</operator> <name pos:start="253:25" pos:end="253:46"><name pos:start="253:25" pos:end="253:29">coefs</name><index pos:start="253:30" pos:end="253:43">[<expr pos:start="253:31" pos:end="253:42"><name pos:start="253:31" pos:end="253:40"><name pos:start="253:31" pos:end="253:33">sub</name><operator pos:start="253:34" pos:end="253:35">-&gt;</operator><name pos:start="253:36" pos:end="253:40">order</name></name><operator pos:start="253:41" pos:end="253:41">-</operator><literal type="number" pos:start="253:42" pos:end="253:42">1</literal></expr>]</index><index pos:start="253:44" pos:end="253:46">[<expr pos:start="253:45" pos:end="253:45"><name pos:start="253:45" pos:end="253:45">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="257:5" pos:end="257:73"><expr pos:start="257:5" pos:end="257:72"><call pos:start="257:5" pos:end="257:72"><name pos:start="257:5" pos:end="257:23">encode_residual_lpc</name><argument_list pos:start="257:24" pos:end="257:72">(<argument pos:start="257:25" pos:end="257:27"><expr pos:start="257:25" pos:end="257:27"><name pos:start="257:25" pos:end="257:27">res</name></expr></argument>, <argument pos:start="257:30" pos:end="257:32"><expr pos:start="257:30" pos:end="257:32"><name pos:start="257:30" pos:end="257:32">smp</name></expr></argument>, <argument pos:start="257:35" pos:end="257:35"><expr pos:start="257:35" pos:end="257:35"><name pos:start="257:35" pos:end="257:35">n</name></expr></argument>, <argument pos:start="257:38" pos:end="257:47"><expr pos:start="257:38" pos:end="257:47"><name pos:start="257:38" pos:end="257:47"><name pos:start="257:38" pos:end="257:40">sub</name><operator pos:start="257:41" pos:end="257:42">-&gt;</operator><name pos:start="257:43" pos:end="257:47">order</name></name></expr></argument>, <argument pos:start="257:50" pos:end="257:59"><expr pos:start="257:50" pos:end="257:59"><name pos:start="257:50" pos:end="257:59"><name pos:start="257:50" pos:end="257:52">sub</name><operator pos:start="257:53" pos:end="257:54">-&gt;</operator><name pos:start="257:55" pos:end="257:59">coefs</name></name></expr></argument>, <argument pos:start="257:62" pos:end="257:71"><expr pos:start="257:62" pos:end="257:71"><name pos:start="257:62" pos:end="257:71"><name pos:start="257:62" pos:end="257:64">sub</name><operator pos:start="257:65" pos:end="257:66">-&gt;</operator><name pos:start="257:67" pos:end="257:71">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="261:5" pos:end="261:50"><expr pos:start="261:5" pos:end="261:49"><call pos:start="261:5" pos:end="261:49"><name pos:start="261:5" pos:end="261:29">find_subframe_rice_params</name><argument_list pos:start="261:30" pos:end="261:49">(<argument pos:start="261:31" pos:end="261:31"><expr pos:start="261:31" pos:end="261:31"><name pos:start="261:31" pos:end="261:31">s</name></expr></argument>, <argument pos:start="261:34" pos:end="261:36"><expr pos:start="261:34" pos:end="261:36"><name pos:start="261:34" pos:end="261:36">sub</name></expr></argument>, <argument pos:start="261:39" pos:end="261:48"><expr pos:start="261:39" pos:end="261:48"><name pos:start="261:39" pos:end="261:48"><name pos:start="261:39" pos:end="261:41">sub</name><operator pos:start="261:42" pos:end="261:43">-&gt;</operator><name pos:start="261:44" pos:end="261:48">order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="265:5" pos:end="265:52">return <expr pos:start="265:12" pos:end="265:51"><call pos:start="265:12" pos:end="265:51"><name pos:start="265:12" pos:end="265:31">subframe_count_exact</name><argument_list pos:start="265:32" pos:end="265:51">(<argument pos:start="265:33" pos:end="265:33"><expr pos:start="265:33" pos:end="265:33"><name pos:start="265:33" pos:end="265:33">s</name></expr></argument>, <argument pos:start="265:36" pos:end="265:38"><expr pos:start="265:36" pos:end="265:38"><name pos:start="265:36" pos:end="265:38">sub</name></expr></argument>, <argument pos:start="265:41" pos:end="265:50"><expr pos:start="265:41" pos:end="265:50"><name pos:start="265:41" pos:end="265:50"><name pos:start="265:41" pos:end="265:43">sub</name><operator pos:start="265:44" pos:end="265:45">-&gt;</operator><name pos:start="265:46" pos:end="265:50">order</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
