<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27152.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">imc_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:64">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><name pos:start="3:29" pos:end="3:31">int</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:46">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:63"><decl pos:start="3:49" pos:end="3:63"><type pos:start="3:49" pos:end="3:63"><name pos:start="3:49" pos:end="3:56">AVPacket</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:63">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:44">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">frame</name>     <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">i</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:36"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">IMCContext</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:17">q</name> <init pos:start="17:19" pos:end="17:36">= <expr pos:start="17:21" pos:end="17:36"><name pos:start="17:21" pos:end="17:36"><name pos:start="17:21" pos:end="17:25">avctx</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:36">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:59"><call pos:start="21:5" pos:end="21:59"><name pos:start="21:5" pos:end="21:20">LOCAL_ALIGNED_16</name><argument_list pos:start="21:21" pos:end="21:59">(<argument pos:start="21:22" pos:end="21:29"><expr pos:start="21:22" pos:end="21:29"><name pos:start="21:22" pos:end="21:29">uint16_t</name></expr></argument>, <argument pos:start="21:32" pos:end="21:36"><expr pos:start="21:32" pos:end="21:36"><name pos:start="21:32" pos:end="21:36">buf16</name></expr></argument>, <argument pos:start="21:39" pos:end="21:58"><expr pos:start="21:39" pos:end="21:58"><index pos:start="21:39" pos:end="21:58">[<expr pos:start="21:40" pos:end="21:57"><name pos:start="21:40" pos:end="21:53">IMC_BLOCK_SIZE</name> <operator pos:start="21:55" pos:end="21:55">/</operator> <literal type="number" pos:start="21:57" pos:end="21:57">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:52">(<expr pos:start="25:9" pos:end="25:51"><name pos:start="25:9" pos:end="25:16">buf_size</name> <operator pos:start="25:18" pos:end="25:18">&lt;</operator> <name pos:start="25:20" pos:end="25:33">IMC_BLOCK_SIZE</name> <operator pos:start="25:35" pos:end="25:35">*</operator> <name pos:start="25:37" pos:end="25:51"><name pos:start="25:37" pos:end="25:41">avctx</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:51">channels</name></name></expr>)</condition> <block pos:start="25:54" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:35">

        <expr_stmt pos:start="27:9" pos:end="27:58"><expr pos:start="27:9" pos:end="27:57"><call pos:start="27:9" pos:end="27:57"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:57">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">avctx</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:56"><expr pos:start="27:37" pos:end="27:56"><literal type="string" pos:start="27:37" pos:end="27:56">"frame too small!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:35">return <expr pos:start="29:16" pos:end="29:34"><name pos:start="29:16" pos:end="29:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:27">/* get output buffer */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:31"><expr pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:9">frame</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:21">nb_samples</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:30">COEFFS</name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:19"><if pos:start="39:5" pos:end="41:19">if <condition pos:start="39:8" pos:end="39:51">(<expr pos:start="39:9" pos:end="39:50"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:12">ret</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:45"><name pos:start="39:16" pos:end="39:28">ff_get_buffer</name><argument_list pos:start="39:29" pos:end="39:45">(<argument pos:start="39:30" pos:end="39:34"><expr pos:start="39:30" pos:end="39:34"><name pos:start="39:30" pos:end="39:34">avctx</name></expr></argument>, <argument pos:start="39:37" pos:end="39:41"><expr pos:start="39:37" pos:end="39:41"><name pos:start="39:37" pos:end="39:41">frame</name></expr></argument>, <argument pos:start="39:44" pos:end="39:44"><expr pos:start="39:44" pos:end="39:44"><literal type="number" pos:start="39:44" pos:end="39:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="39:46" pos:end="39:46">)</operator> <operator pos:start="39:48" pos:end="39:48">&lt;</operator> <literal type="number" pos:start="39:50" pos:end="39:50">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:19"><block_content pos:start="41:9" pos:end="41:19">

        <return pos:start="41:9" pos:end="41:19">return <expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="45:5" pos:end="67:5">for <control pos:start="45:9" pos:end="45:41">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:36"><expr pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:35"><name pos:start="45:21" pos:end="45:25">avctx</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:35">channels</name></name></expr>;</condition> <incr pos:start="45:38" pos:end="45:40"><expr pos:start="45:38" pos:end="45:40"><name pos:start="45:38" pos:end="45:38">i</name><operator pos:start="45:39" pos:end="45:40">++</operator></expr></incr>)</control> <block pos:start="45:43" pos:end="67:5">{<block_content pos:start="47:9" pos:end="65:23">

        <expr_stmt pos:start="47:9" pos:end="47:58"><expr pos:start="47:9" pos:end="47:57"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:9">q</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:22">out_samples</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <operator pos:start="47:26" pos:end="47:26">(</operator><name pos:start="47:27" pos:end="47:31">float</name> <operator pos:start="47:33" pos:end="47:33">*</operator><operator pos:start="47:34" pos:end="47:34">)</operator><name pos:start="47:35" pos:end="47:57"><name pos:start="47:35" pos:end="47:39">frame</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:54">extended_data</name><index pos:start="47:55" pos:end="47:57">[<expr pos:start="47:56" pos:end="47:56"><name pos:start="47:56" pos:end="47:56">i</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:79"><expr pos:start="51:9" pos:end="51:78"><call pos:start="51:9" pos:end="51:78"><name pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:9">q</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:15">bdsp</name><operator pos:start="51:16" pos:end="51:16">.</operator><name pos:start="51:17" pos:end="51:27">bswap16_buf</name></name><argument_list pos:start="51:28" pos:end="51:78">(<argument pos:start="51:29" pos:end="51:33"><expr pos:start="51:29" pos:end="51:33"><name pos:start="51:29" pos:end="51:33">buf16</name></expr></argument>, <argument pos:start="51:36" pos:end="51:57"><expr pos:start="51:36" pos:end="51:57"><operator pos:start="51:36" pos:end="51:36">(</operator><specifier pos:start="51:37" pos:end="51:41">const</specifier> <name pos:start="51:43" pos:end="51:50">uint16_t</name> <operator pos:start="51:52" pos:end="51:52">*</operator><operator pos:start="51:53" pos:end="51:53">)</operator> <name pos:start="51:55" pos:end="51:57">buf</name></expr></argument>, <argument pos:start="51:60" pos:end="51:77"><expr pos:start="51:60" pos:end="51:77"><name pos:start="51:60" pos:end="51:73">IMC_BLOCK_SIZE</name> <operator pos:start="51:75" pos:end="51:75">/</operator> <literal type="number" pos:start="51:77" pos:end="51:77">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:73"><expr pos:start="55:9" pos:end="55:72"><call pos:start="55:9" pos:end="55:72"><name pos:start="55:9" pos:end="55:21">init_get_bits</name><argument_list pos:start="55:22" pos:end="55:72">(<argument pos:start="55:23" pos:end="55:28"><expr pos:start="55:23" pos:end="55:28"><operator pos:start="55:23" pos:end="55:23">&amp;</operator><name pos:start="55:24" pos:end="55:28"><name pos:start="55:24" pos:end="55:24">q</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:28">gb</name></name></expr></argument>, <argument pos:start="55:31" pos:end="55:51"><expr pos:start="55:31" pos:end="55:51"><operator pos:start="55:31" pos:end="55:31">(</operator><specifier pos:start="55:32" pos:end="55:36">const</specifier> <name pos:start="55:38" pos:end="55:44">uint8_t</name><operator pos:start="55:45" pos:end="55:45">*</operator><operator pos:start="55:46" pos:end="55:46">)</operator><name pos:start="55:47" pos:end="55:51">buf16</name></expr></argument>, <argument pos:start="55:54" pos:end="55:71"><expr pos:start="55:54" pos:end="55:71"><name pos:start="55:54" pos:end="55:67">IMC_BLOCK_SIZE</name> <operator pos:start="55:69" pos:end="55:69">*</operator> <literal type="number" pos:start="55:71" pos:end="55:71">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:11">buf</name> <operator pos:start="59:13" pos:end="59:14">+=</operator> <name pos:start="59:16" pos:end="59:29">IMC_BLOCK_SIZE</name></expr>;</expr_stmt>



        <if_stmt pos:start="63:9" pos:end="65:23"><if pos:start="63:9" pos:end="65:23">if <condition pos:start="63:12" pos:end="63:54">(<expr pos:start="63:13" pos:end="63:53"><operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:16">ret</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:48"><name pos:start="63:20" pos:end="63:35">imc_decode_block</name><argument_list pos:start="63:36" pos:end="63:48">(<argument pos:start="63:37" pos:end="63:41"><expr pos:start="63:37" pos:end="63:41"><name pos:start="63:37" pos:end="63:41">avctx</name></expr></argument>, <argument pos:start="63:44" pos:end="63:44"><expr pos:start="63:44" pos:end="63:44"><name pos:start="63:44" pos:end="63:44">q</name></expr></argument>, <argument pos:start="63:47" pos:end="63:47"><expr pos:start="63:47" pos:end="63:47"><name pos:start="63:47" pos:end="63:47">i</name></expr></argument>)</argument_list></call><operator pos:start="63:49" pos:end="63:49">)</operator> <operator pos:start="63:51" pos:end="63:51">&lt;</operator> <literal type="number" pos:start="63:53" pos:end="63:53">0</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:23"><block_content pos:start="65:13" pos:end="65:23">

            <return pos:start="65:13" pos:end="65:23">return <expr pos:start="65:20" pos:end="65:22"><name pos:start="65:20" pos:end="65:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:29">(<expr pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:13">avctx</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:23">channels</name></name> <operator pos:start="71:25" pos:end="71:26">==</operator> <literal type="number" pos:start="71:28" pos:end="71:28">2</literal></expr>)</condition> <block pos:start="71:31" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:76">

        <expr_stmt pos:start="73:9" pos:end="75:76"><expr pos:start="73:9" pos:end="75:75"><call pos:start="73:9" pos:end="75:75"><name pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:9">q</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:15">fdsp</name><operator pos:start="73:16" pos:end="73:16">.</operator><name pos:start="73:17" pos:end="73:33">butterflies_float</name></name><argument_list pos:start="73:34" pos:end="75:75">(<argument pos:start="73:35" pos:end="73:66"><expr pos:start="73:35" pos:end="73:66"><operator pos:start="73:35" pos:end="73:35">(</operator><name pos:start="73:36" pos:end="73:40">float</name> <operator pos:start="73:42" pos:end="73:42">*</operator><operator pos:start="73:43" pos:end="73:43">)</operator><name pos:start="73:44" pos:end="73:66"><name pos:start="73:44" pos:end="73:48">frame</name><operator pos:start="73:49" pos:end="73:50">-&gt;</operator><name pos:start="73:51" pos:end="73:63">extended_data</name><index pos:start="73:64" pos:end="73:66">[<expr pos:start="73:65" pos:end="73:65"><literal type="number" pos:start="73:65" pos:end="73:65">0</literal></expr>]</index></name></expr></argument>,

                                  <argument pos:start="75:35" pos:end="75:66"><expr pos:start="75:35" pos:end="75:66"><operator pos:start="75:35" pos:end="75:35">(</operator><name pos:start="75:36" pos:end="75:40">float</name> <operator pos:start="75:42" pos:end="75:42">*</operator><operator pos:start="75:43" pos:end="75:43">)</operator><name pos:start="75:44" pos:end="75:66"><name pos:start="75:44" pos:end="75:48">frame</name><operator pos:start="75:49" pos:end="75:50">-&gt;</operator><name pos:start="75:51" pos:end="75:63">extended_data</name><index pos:start="75:64" pos:end="75:66">[<expr pos:start="75:65" pos:end="75:65"><literal type="number" pos:start="75:65" pos:end="75:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:69" pos:end="75:74"><expr pos:start="75:69" pos:end="75:74"><name pos:start="75:69" pos:end="75:74">COEFFS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:23"><expr pos:start="81:5" pos:end="81:22"><operator pos:start="81:5" pos:end="81:5">*</operator><name pos:start="81:6" pos:end="81:18">got_frame_ptr</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">1</literal></expr>;</expr_stmt>



    <return pos:start="85:5" pos:end="85:44">return <expr pos:start="85:12" pos:end="85:43"><name pos:start="85:12" pos:end="85:25">IMC_BLOCK_SIZE</name> <operator pos:start="85:27" pos:end="85:27">*</operator> <name pos:start="85:29" pos:end="85:43"><name pos:start="85:29" pos:end="85:33">avctx</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:43">channels</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
