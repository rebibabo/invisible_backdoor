<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17948.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">sd_snapshot_list</name><parameter_list pos:start="1:28" pos:end="1:77">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:76"><decl pos:start="1:51" pos:end="1:76"><type pos:start="1:51" pos:end="1:76"><name pos:start="1:51" pos:end="1:66">QEMUSnapshotInfo</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier><modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:76">psn_tab</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:17">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:20">local_err</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">BDRVSheepdogState</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:37">= <expr pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:29">bs</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:37">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15">SheepdogReq</name></type> <name pos:start="9:17" pos:end="9:19">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:75"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">fd</name></decl>, <decl pos:start="11:13" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:14">nr</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><literal type="number" pos:start="11:18" pos:end="11:21">1024</literal></expr></init></decl>, <decl pos:start="11:24" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:24" pos:end="11:26">ret</name></decl>, <decl pos:start="11:29" pos:end="11:74"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:29" pos:end="11:31">max</name> <init pos:start="11:33" pos:end="11:74">= <expr pos:start="11:35" pos:end="11:74"><call pos:start="11:35" pos:end="11:59"><name pos:start="11:35" pos:end="11:47">BITS_TO_LONGS</name><argument_list pos:start="11:48" pos:end="11:59">(<argument pos:start="11:49" pos:end="11:58"><expr pos:start="11:49" pos:end="11:58"><name pos:start="11:49" pos:end="11:58">SD_NR_VDIS</name></expr></argument>)</argument_list></call> <operator pos:start="11:61" pos:end="11:61">*</operator> <sizeof pos:start="11:63" pos:end="11:74">sizeof<argument_list pos:start="11:69" pos:end="11:74">(<argument pos:start="11:70" pos:end="11:73"><expr pos:start="11:70" pos:end="11:73"><name pos:start="11:70" pos:end="11:73">long</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">QEMUSnapshotInfo</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:28">sn_tab</name> <init pos:start="13:30" pos:end="13:35">= <expr pos:start="13:32" pos:end="13:35"><name pos:start="13:32" pos:end="13:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">unsigned</name></type> <name pos:start="15:14" pos:end="15:17">wlen</name></decl>, <decl pos:start="15:20" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:20" pos:end="15:23">rlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">found</name> <init pos:start="17:15" pos:end="17:17">= <expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:30"><type pos:start="19:5" pos:end="19:24"><specifier pos:start="19:5" pos:end="19:10">static</specifier> <name pos:start="19:12" pos:end="19:24">SheepdogInode</name></type> <name pos:start="19:26" pos:end="19:30">inode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:17">long</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:28">vdi_inuse</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:12">unsigned</name> <name pos:start="23:14" pos:end="23:16">int</name></type> <name pos:start="23:18" pos:end="23:25">start_nr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:18"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint64_t</name></type> <name pos:start="25:14" pos:end="25:17">hval</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:16"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint32_t</name></type> <name pos:start="27:14" pos:end="27:16">vid</name></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:13">vdi_inuse</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:29"><name pos:start="31:17" pos:end="31:24">g_malloc</name><argument_list pos:start="31:25" pos:end="31:29">(<argument pos:start="31:26" pos:end="31:28"><expr pos:start="31:26" pos:end="31:28"><name pos:start="31:26" pos:end="31:28">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:6">fd</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:39"><name pos:start="35:10" pos:end="35:24">connect_to_sdog</name><argument_list pos:start="35:25" pos:end="35:39">(<argument pos:start="35:26" pos:end="35:26"><expr pos:start="35:26" pos:end="35:26"><name pos:start="35:26" pos:end="35:26">s</name></expr></argument>, <argument pos:start="35:29" pos:end="35:38"><expr pos:start="35:29" pos:end="35:38"><operator pos:start="35:29" pos:end="35:29">&amp;</operator><name pos:start="35:30" pos:end="35:38">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:15">(<expr pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:10">fd</name> <operator pos:start="37:12" pos:end="37:12">&lt;</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>)</condition> <block pos:start="37:17" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:17">

        <expr_stmt pos:start="39:9" pos:end="39:56"><expr pos:start="39:9" pos:end="39:55"><call pos:start="39:9" pos:end="39:55"><name pos:start="39:9" pos:end="39:20">error_report</name><argument_list pos:start="39:21" pos:end="39:55">(<argument pos:start="39:22" pos:end="39:25"><expr pos:start="39:22" pos:end="39:25"><literal type="string" pos:start="39:22" pos:end="39:25">"%s"</literal></expr></argument>, <argument pos:start="39:28" pos:end="39:54"><expr pos:start="39:28" pos:end="39:54"><call pos:start="39:28" pos:end="39:54"><name pos:start="39:28" pos:end="39:43">error_get_pretty</name><argument_list pos:start="39:44" pos:end="39:54">(<argument pos:start="39:45" pos:end="39:53"><expr pos:start="39:45" pos:end="39:53"><name pos:start="39:45" pos:end="39:53">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt><empty_stmt pos:start="39:57" pos:end="39:57">;</empty_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><call pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:18">error_free</name><argument_list pos:start="41:19" pos:end="41:29">(<argument pos:start="41:20" pos:end="41:28"><expr pos:start="41:20" pos:end="41:28"><name pos:start="41:20" pos:end="41:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:17"><expr pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:16">fd</name></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:17">goto <name pos:start="45:14" pos:end="45:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:15"><expr pos:start="51:5" pos:end="51:14"><name pos:start="51:5" pos:end="51:8">rlen</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <name pos:start="51:12" pos:end="51:14">max</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:13"><expr pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:8">wlen</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:33"><expr pos:start="57:5" pos:end="57:32"><call pos:start="57:5" pos:end="57:32"><name pos:start="57:5" pos:end="57:10">memset</name><argument_list pos:start="57:11" pos:end="57:32">(<argument pos:start="57:12" pos:end="57:15"><expr pos:start="57:12" pos:end="57:15"><operator pos:start="57:12" pos:end="57:12">&amp;</operator><name pos:start="57:13" pos:end="57:15">req</name></expr></argument>, <argument pos:start="57:18" pos:end="57:18"><expr pos:start="57:18" pos:end="57:18"><literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr></argument>, <argument pos:start="57:21" pos:end="57:31"><expr pos:start="57:21" pos:end="57:31"><sizeof pos:start="57:21" pos:end="57:31">sizeof<argument_list pos:start="57:27" pos:end="57:31">(<argument pos:start="57:28" pos:end="57:30"><expr pos:start="57:28" pos:end="57:30"><name pos:start="57:28" pos:end="57:30">req</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:33"><expr pos:start="61:5" pos:end="61:32"><name pos:start="61:5" pos:end="61:14"><name pos:start="61:5" pos:end="61:7">req</name><operator pos:start="61:8" pos:end="61:8">.</operator><name pos:start="61:9" pos:end="61:14">opcode</name></name> <operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:32">SD_OP_READ_VDIS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:26"><expr pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:19"><name pos:start="63:5" pos:end="63:7">req</name><operator pos:start="63:8" pos:end="63:8">.</operator><name pos:start="63:9" pos:end="63:19">data_length</name></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:25">max</name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="69:42"><expr pos:start="67:5" pos:end="69:41"><name pos:start="67:5" pos:end="67:7">ret</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="69:41"><name pos:start="67:11" pos:end="67:16">do_req</name><argument_list pos:start="67:17" pos:end="69:41">(<argument pos:start="67:18" pos:end="67:19"><expr pos:start="67:18" pos:end="67:19"><name pos:start="67:18" pos:end="67:19">fd</name></expr></argument>, <argument pos:start="67:22" pos:end="67:35"><expr pos:start="67:22" pos:end="67:35"><name pos:start="67:22" pos:end="67:35"><name pos:start="67:22" pos:end="67:22">s</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:35">aio_context</name></name></expr></argument>, <argument pos:start="67:38" pos:end="67:56"><expr pos:start="67:38" pos:end="67:56"><operator pos:start="67:38" pos:end="67:38">(</operator><name pos:start="67:39" pos:end="67:49">SheepdogReq</name> <operator pos:start="67:51" pos:end="67:51">*</operator><operator pos:start="67:52" pos:end="67:52">)</operator><operator pos:start="67:53" pos:end="67:53">&amp;</operator><name pos:start="67:54" pos:end="67:56">req</name></expr></argument>,

                 <argument pos:start="69:18" pos:end="69:26"><expr pos:start="69:18" pos:end="69:26"><name pos:start="69:18" pos:end="69:26">vdi_inuse</name></expr></argument>, <argument pos:start="69:29" pos:end="69:33"><expr pos:start="69:29" pos:end="69:33"><operator pos:start="69:29" pos:end="69:29">&amp;</operator><name pos:start="69:30" pos:end="69:33">wlen</name></expr></argument>, <argument pos:start="69:36" pos:end="69:40"><expr pos:start="69:36" pos:end="69:40"><operator pos:start="69:36" pos:end="69:36">&amp;</operator><name pos:start="69:37" pos:end="69:40">rlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:20"><expr pos:start="73:5" pos:end="73:19"><call pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:15">closesocket</name><argument_list pos:start="73:16" pos:end="73:19">(<argument pos:start="73:17" pos:end="73:18"><expr pos:start="73:17" pos:end="73:18"><name pos:start="73:17" pos:end="73:18">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:12">(<expr pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:11">ret</name></expr>)</condition> <block pos:start="75:14" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:17">

        <goto pos:start="77:9" pos:end="77:17">goto <name pos:start="77:14" pos:end="77:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:45"><expr pos:start="83:5" pos:end="83:44"><name pos:start="83:5" pos:end="83:10">sn_tab</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:44"><name pos:start="83:14" pos:end="83:22">g_malloc0</name><argument_list pos:start="83:23" pos:end="83:44">(<argument pos:start="83:24" pos:end="83:43"><expr pos:start="83:24" pos:end="83:43"><name pos:start="83:24" pos:end="83:25">nr</name> <operator pos:start="83:27" pos:end="83:27">*</operator> <sizeof pos:start="83:29" pos:end="83:43">sizeof<argument_list pos:start="83:35" pos:end="83:43">(<argument pos:start="83:36" pos:end="83:42"><expr pos:start="83:36" pos:end="83:42"><operator pos:start="83:36" pos:end="83:36">*</operator><name pos:start="83:37" pos:end="83:42">sn_tab</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:47">/* calculate a vdi id with hash function */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:64"><expr pos:start="89:5" pos:end="89:63"><name pos:start="89:5" pos:end="89:8">hval</name> <operator pos:start="89:10" pos:end="89:10">=</operator> <call pos:start="89:12" pos:end="89:63"><name pos:start="89:12" pos:end="89:22">fnv_64a_buf</name><argument_list pos:start="89:23" pos:end="89:63">(<argument pos:start="89:24" pos:end="89:30"><expr pos:start="89:24" pos:end="89:30"><name pos:start="89:24" pos:end="89:30"><name pos:start="89:24" pos:end="89:24">s</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:30">name</name></name></expr></argument>, <argument pos:start="89:33" pos:end="89:47"><expr pos:start="89:33" pos:end="89:47"><call pos:start="89:33" pos:end="89:47"><name pos:start="89:33" pos:end="89:38">strlen</name><argument_list pos:start="89:39" pos:end="89:47">(<argument pos:start="89:40" pos:end="89:46"><expr pos:start="89:40" pos:end="89:46"><name pos:start="89:40" pos:end="89:46"><name pos:start="89:40" pos:end="89:40">s</name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:46">name</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="89:50" pos:end="89:62"><expr pos:start="89:50" pos:end="89:62"><name pos:start="89:50" pos:end="89:62">FNV1A_64_INIT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:39"><expr pos:start="91:5" pos:end="91:38"><name pos:start="91:5" pos:end="91:12">start_nr</name> <operator pos:start="91:14" pos:end="91:14">=</operator> <name pos:start="91:16" pos:end="91:19">hval</name> <operator pos:start="91:21" pos:end="91:21">&amp;</operator> <operator pos:start="91:23" pos:end="91:23">(</operator><name pos:start="91:24" pos:end="91:33">SD_NR_VDIS</name> <operator pos:start="91:35" pos:end="91:35">-</operator> <literal type="number" pos:start="91:37" pos:end="91:37">1</literal><operator pos:start="91:38" pos:end="91:38">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:40"><expr pos:start="95:5" pos:end="95:39"><name pos:start="95:5" pos:end="95:6">fd</name> <operator pos:start="95:8" pos:end="95:8">=</operator> <call pos:start="95:10" pos:end="95:39"><name pos:start="95:10" pos:end="95:24">connect_to_sdog</name><argument_list pos:start="95:25" pos:end="95:39">(<argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><name pos:start="95:26" pos:end="95:26">s</name></expr></argument>, <argument pos:start="95:29" pos:end="95:38"><expr pos:start="95:29" pos:end="95:38"><operator pos:start="95:29" pos:end="95:29">&amp;</operator><name pos:start="95:30" pos:end="95:38">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="107:5"><if pos:start="97:5" pos:end="107:5">if <condition pos:start="97:8" pos:end="97:15">(<expr pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:10">fd</name> <operator pos:start="97:12" pos:end="97:12">&lt;</operator> <literal type="number" pos:start="97:14" pos:end="97:14">0</literal></expr>)</condition> <block pos:start="97:17" pos:end="107:5">{<block_content pos:start="99:9" pos:end="105:17">

        <expr_stmt pos:start="99:9" pos:end="99:56"><expr pos:start="99:9" pos:end="99:55"><call pos:start="99:9" pos:end="99:55"><name pos:start="99:9" pos:end="99:20">error_report</name><argument_list pos:start="99:21" pos:end="99:55">(<argument pos:start="99:22" pos:end="99:25"><expr pos:start="99:22" pos:end="99:25"><literal type="string" pos:start="99:22" pos:end="99:25">"%s"</literal></expr></argument>, <argument pos:start="99:28" pos:end="99:54"><expr pos:start="99:28" pos:end="99:54"><call pos:start="99:28" pos:end="99:54"><name pos:start="99:28" pos:end="99:43">error_get_pretty</name><argument_list pos:start="99:44" pos:end="99:54">(<argument pos:start="99:45" pos:end="99:53"><expr pos:start="99:45" pos:end="99:53"><name pos:start="99:45" pos:end="99:53">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt><empty_stmt pos:start="99:57" pos:end="99:57">;</empty_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><call pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:18">error_free</name><argument_list pos:start="101:19" pos:end="101:29">(<argument pos:start="101:20" pos:end="101:28"><expr pos:start="101:20" pos:end="101:28"><name pos:start="101:20" pos:end="101:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:17"><expr pos:start="103:9" pos:end="103:16"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <name pos:start="103:15" pos:end="103:16">fd</name></expr>;</expr_stmt>

        <goto pos:start="105:9" pos:end="105:17">goto <name pos:start="105:14" pos:end="105:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="111:5" pos:end="167:5">for <control pos:start="111:9" pos:end="111:66">(<init pos:start="111:10" pos:end="111:24"><expr pos:start="111:10" pos:end="111:23"><name pos:start="111:10" pos:end="111:12">vid</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <name pos:start="111:16" pos:end="111:23">start_nr</name></expr>;</init> <condition pos:start="111:26" pos:end="111:36"><expr pos:start="111:26" pos:end="111:35"><name pos:start="111:26" pos:end="111:30">found</name> <operator pos:start="111:32" pos:end="111:32">&lt;</operator> <name pos:start="111:34" pos:end="111:35">nr</name></expr>;</condition> <incr pos:start="111:38" pos:end="111:65"><expr pos:start="111:38" pos:end="111:65"><name pos:start="111:38" pos:end="111:40">vid</name> <operator pos:start="111:42" pos:end="111:42">=</operator> <operator pos:start="111:44" pos:end="111:44">(</operator><name pos:start="111:45" pos:end="111:47">vid</name> <operator pos:start="111:49" pos:end="111:49">+</operator> <literal type="number" pos:start="111:51" pos:end="111:51">1</literal><operator pos:start="111:52" pos:end="111:52">)</operator> <operator pos:start="111:54" pos:end="111:54">%</operator> <name pos:start="111:56" pos:end="111:65">SD_NR_VDIS</name></expr></incr>)</control> <block pos:start="111:68" pos:end="167:5">{<block_content pos:start="113:9" pos:end="165:9">

        <if_stmt pos:start="113:9" pos:end="117:9"><if pos:start="113:9" pos:end="117:9">if <condition pos:start="113:12" pos:end="113:38">(<expr pos:start="113:13" pos:end="113:37"><operator pos:start="113:13" pos:end="113:13">!</operator><call pos:start="113:14" pos:end="113:37"><name pos:start="113:14" pos:end="113:21">test_bit</name><argument_list pos:start="113:22" pos:end="113:37">(<argument pos:start="113:23" pos:end="113:25"><expr pos:start="113:23" pos:end="113:25"><name pos:start="113:23" pos:end="113:25">vid</name></expr></argument>, <argument pos:start="113:28" pos:end="113:36"><expr pos:start="113:28" pos:end="113:36"><name pos:start="113:28" pos:end="113:36">vdi_inuse</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:40" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:18">

            <break pos:start="115:13" pos:end="115:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="121:9" pos:end="121:49">/* we don't need to read entire object */</comment>

        <expr_stmt pos:start="123:9" pos:end="129:42"><expr pos:start="123:9" pos:end="129:41"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <call pos:start="123:15" pos:end="129:41"><name pos:start="123:15" pos:end="123:25">read_object</name><argument_list pos:start="123:26" pos:end="129:41">(<argument pos:start="123:27" pos:end="123:28"><expr pos:start="123:27" pos:end="123:28"><name pos:start="123:27" pos:end="123:28">fd</name></expr></argument>, <argument pos:start="123:31" pos:end="123:44"><expr pos:start="123:31" pos:end="123:44"><name pos:start="123:31" pos:end="123:44"><name pos:start="123:31" pos:end="123:31">s</name><operator pos:start="123:32" pos:end="123:33">-&gt;</operator><name pos:start="123:34" pos:end="123:44">aio_context</name></name></expr></argument>, <argument pos:start="123:47" pos:end="123:60"><expr pos:start="123:47" pos:end="123:60"><operator pos:start="123:47" pos:end="123:47">(</operator><name pos:start="123:48" pos:end="123:51">char</name> <operator pos:start="123:53" pos:end="123:53">*</operator><operator pos:start="123:54" pos:end="123:54">)</operator><operator pos:start="123:55" pos:end="123:55">&amp;</operator><name pos:start="123:56" pos:end="123:60">inode</name></expr></argument>,

                          <argument pos:start="125:27" pos:end="125:45"><expr pos:start="125:27" pos:end="125:45"><call pos:start="125:27" pos:end="125:45"><name pos:start="125:27" pos:end="125:40">vid_to_vdi_oid</name><argument_list pos:start="125:41" pos:end="125:45">(<argument pos:start="125:42" pos:end="125:44"><expr pos:start="125:42" pos:end="125:44"><name pos:start="125:42" pos:end="125:44">vid</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="127:27" pos:end="127:27"><expr pos:start="127:27" pos:end="127:27"><literal type="number" pos:start="127:27" pos:end="127:27">0</literal></expr></argument>, <argument pos:start="127:30" pos:end="127:70"><expr pos:start="127:30" pos:end="127:70"><name pos:start="127:30" pos:end="127:42">SD_INODE_SIZE</name> <operator pos:start="127:44" pos:end="127:44">-</operator> <sizeof pos:start="127:46" pos:end="127:70">sizeof<argument_list pos:start="127:52" pos:end="127:70">(<argument pos:start="127:53" pos:end="127:69"><expr pos:start="127:53" pos:end="127:69"><name pos:start="127:53" pos:end="127:69"><name pos:start="127:53" pos:end="127:57">inode</name><operator pos:start="127:58" pos:end="127:58">.</operator><name pos:start="127:59" pos:end="127:69">data_vdi_id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="127:73" pos:end="127:73"><expr pos:start="127:73" pos:end="127:73"><literal type="number" pos:start="127:73" pos:end="127:73">0</literal></expr></argument>,

                          <argument pos:start="129:27" pos:end="129:40"><expr pos:start="129:27" pos:end="129:40"><name pos:start="129:27" pos:end="129:40"><name pos:start="129:27" pos:end="129:27">s</name><operator pos:start="129:28" pos:end="129:29">-&gt;</operator><name pos:start="129:30" pos:end="129:40">cache_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="133:9" pos:end="137:9"><if pos:start="133:9" pos:end="137:9">if <condition pos:start="133:12" pos:end="133:16">(<expr pos:start="133:13" pos:end="133:15"><name pos:start="133:13" pos:end="133:15">ret</name></expr>)</condition> <block pos:start="133:18" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:21">

            <continue pos:start="135:13" pos:end="135:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="141:9" pos:end="165:9"><if pos:start="141:9" pos:end="165:9">if <condition pos:start="141:12" pos:end="141:64">(<expr pos:start="141:13" pos:end="141:63"><operator pos:start="141:13" pos:end="141:13">!</operator><call pos:start="141:14" pos:end="141:40"><name pos:start="141:14" pos:end="141:19">strcmp</name><argument_list pos:start="141:20" pos:end="141:40">(<argument pos:start="141:21" pos:end="141:30"><expr pos:start="141:21" pos:end="141:30"><name pos:start="141:21" pos:end="141:30"><name pos:start="141:21" pos:end="141:25">inode</name><operator pos:start="141:26" pos:end="141:26">.</operator><name pos:start="141:27" pos:end="141:30">name</name></name></expr></argument>, <argument pos:start="141:33" pos:end="141:39"><expr pos:start="141:33" pos:end="141:39"><name pos:start="141:33" pos:end="141:39"><name pos:start="141:33" pos:end="141:33">s</name><operator pos:start="141:34" pos:end="141:35">-&gt;</operator><name pos:start="141:36" pos:end="141:39">name</name></name></expr></argument>)</argument_list></call> <operator pos:start="141:42" pos:end="141:43">&amp;&amp;</operator> <call pos:start="141:45" pos:end="141:63"><name pos:start="141:45" pos:end="141:55">is_snapshot</name><argument_list pos:start="141:56" pos:end="141:63">(<argument pos:start="141:57" pos:end="141:62"><expr pos:start="141:57" pos:end="141:62"><operator pos:start="141:57" pos:end="141:57">&amp;</operator><name pos:start="141:58" pos:end="141:62">inode</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:66" pos:end="165:9">{<block_content pos:start="143:13" pos:end="163:20">

            <expr_stmt pos:start="143:13" pos:end="143:60"><expr pos:start="143:13" pos:end="143:59"><name pos:start="143:13" pos:end="143:25"><name pos:start="143:13" pos:end="143:18">sn_tab</name><index pos:start="143:19" pos:end="143:25">[<expr pos:start="143:20" pos:end="143:24"><name pos:start="143:20" pos:end="143:24">found</name></expr>]</index></name><operator pos:start="143:26" pos:end="143:26">.</operator><name pos:start="143:27" pos:end="143:34">date_sec</name> <operator pos:start="143:36" pos:end="143:36">=</operator> <name pos:start="143:38" pos:end="143:53"><name pos:start="143:38" pos:end="143:42">inode</name><operator pos:start="143:43" pos:end="143:43">.</operator><name pos:start="143:44" pos:end="143:53">snap_ctime</name></name> <operator pos:start="143:55" pos:end="143:56">&gt;&gt;</operator> <literal type="number" pos:start="143:58" pos:end="143:59">32</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:68"><expr pos:start="145:13" pos:end="145:67"><name pos:start="145:13" pos:end="145:25"><name pos:start="145:13" pos:end="145:18">sn_tab</name><index pos:start="145:19" pos:end="145:25">[<expr pos:start="145:20" pos:end="145:24"><name pos:start="145:20" pos:end="145:24">found</name></expr>]</index></name><operator pos:start="145:26" pos:end="145:26">.</operator><name pos:start="145:27" pos:end="145:35">date_nsec</name> <operator pos:start="145:37" pos:end="145:37">=</operator> <name pos:start="145:39" pos:end="145:54"><name pos:start="145:39" pos:end="145:43">inode</name><operator pos:start="145:44" pos:end="145:44">.</operator><name pos:start="145:45" pos:end="145:54">snap_ctime</name></name> <operator pos:start="145:56" pos:end="145:56">&amp;</operator> <literal type="number" pos:start="145:58" pos:end="145:67">0xffffffff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:62"><expr pos:start="147:13" pos:end="147:61"><name pos:start="147:13" pos:end="147:25"><name pos:start="147:13" pos:end="147:18">sn_tab</name><index pos:start="147:19" pos:end="147:25">[<expr pos:start="147:20" pos:end="147:24"><name pos:start="147:20" pos:end="147:24">found</name></expr>]</index></name><operator pos:start="147:26" pos:end="147:26">.</operator><name pos:start="147:27" pos:end="147:39">vm_state_size</name> <operator pos:start="147:41" pos:end="147:41">=</operator> <name pos:start="147:43" pos:end="147:61"><name pos:start="147:43" pos:end="147:47">inode</name><operator pos:start="147:48" pos:end="147:48">.</operator><name pos:start="147:49" pos:end="147:61">vm_state_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:62"><expr pos:start="149:13" pos:end="149:61"><name pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:18">sn_tab</name><index pos:start="149:19" pos:end="149:25">[<expr pos:start="149:20" pos:end="149:24"><name pos:start="149:20" pos:end="149:24">found</name></expr>]</index></name><operator pos:start="149:26" pos:end="149:26">.</operator><name pos:start="149:27" pos:end="149:39">vm_clock_nsec</name> <operator pos:start="149:41" pos:end="149:41">=</operator> <name pos:start="149:43" pos:end="149:61"><name pos:start="149:43" pos:end="149:47">inode</name><operator pos:start="149:48" pos:end="149:48">.</operator><name pos:start="149:49" pos:end="149:61">vm_clock_nsec</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="153:13" pos:end="155:48"><expr pos:start="153:13" pos:end="155:47"><call pos:start="153:13" pos:end="155:47"><name pos:start="153:13" pos:end="153:20">snprintf</name><argument_list pos:start="153:21" pos:end="155:47">(<argument pos:start="153:22" pos:end="153:41"><expr pos:start="153:22" pos:end="153:41"><name pos:start="153:22" pos:end="153:34"><name pos:start="153:22" pos:end="153:27">sn_tab</name><index pos:start="153:28" pos:end="153:34">[<expr pos:start="153:29" pos:end="153:33"><name pos:start="153:29" pos:end="153:33">found</name></expr>]</index></name><operator pos:start="153:35" pos:end="153:35">.</operator><name pos:start="153:36" pos:end="153:41">id_str</name></expr></argument>, <argument pos:start="153:44" pos:end="153:71"><expr pos:start="153:44" pos:end="153:71"><sizeof pos:start="153:44" pos:end="153:71">sizeof<argument_list pos:start="153:50" pos:end="153:71">(<argument pos:start="153:51" pos:end="153:70"><expr pos:start="153:51" pos:end="153:70"><name pos:start="153:51" pos:end="153:63"><name pos:start="153:51" pos:end="153:56">sn_tab</name><index pos:start="153:57" pos:end="153:63">[<expr pos:start="153:58" pos:end="153:62"><name pos:start="153:58" pos:end="153:62">found</name></expr>]</index></name><operator pos:start="153:64" pos:end="153:64">.</operator><name pos:start="153:65" pos:end="153:70">id_str</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="155:22" pos:end="155:31"><expr pos:start="155:22" pos:end="155:31"><literal type="string" pos:start="155:22" pos:end="155:24">"%"</literal> <name pos:start="155:26" pos:end="155:31">PRIu32</name></expr></argument>, <argument pos:start="155:34" pos:end="155:46"><expr pos:start="155:34" pos:end="155:46"><name pos:start="155:34" pos:end="155:46"><name pos:start="155:34" pos:end="155:38">inode</name><operator pos:start="155:39" pos:end="155:39">.</operator><name pos:start="155:40" pos:end="155:46">snap_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="161:31"><expr pos:start="157:13" pos:end="161:30"><call pos:start="157:13" pos:end="161:30"><name pos:start="157:13" pos:end="157:19">pstrcpy</name><argument_list pos:start="157:20" pos:end="161:30">(<argument pos:start="157:21" pos:end="157:38"><expr pos:start="157:21" pos:end="157:38"><name pos:start="157:21" pos:end="157:33"><name pos:start="157:21" pos:end="157:26">sn_tab</name><index pos:start="157:27" pos:end="157:33">[<expr pos:start="157:28" pos:end="157:32"><name pos:start="157:28" pos:end="157:32">found</name></expr>]</index></name><operator pos:start="157:34" pos:end="157:34">.</operator><name pos:start="157:35" pos:end="157:38">name</name></expr></argument>,

                    <argument pos:start="159:21" pos:end="159:70"><expr pos:start="159:21" pos:end="159:70"><call pos:start="159:21" pos:end="159:70"><name pos:start="159:21" pos:end="159:23">MIN</name><argument_list pos:start="159:24" pos:end="159:70">(<argument pos:start="159:25" pos:end="159:50"><expr pos:start="159:25" pos:end="159:50"><sizeof pos:start="159:25" pos:end="159:50">sizeof<argument_list pos:start="159:31" pos:end="159:50">(<argument pos:start="159:32" pos:end="159:49"><expr pos:start="159:32" pos:end="159:49"><name pos:start="159:32" pos:end="159:44"><name pos:start="159:32" pos:end="159:37">sn_tab</name><index pos:start="159:38" pos:end="159:44">[<expr pos:start="159:39" pos:end="159:43"><name pos:start="159:39" pos:end="159:43">found</name></expr>]</index></name><operator pos:start="159:45" pos:end="159:45">.</operator><name pos:start="159:46" pos:end="159:49">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="159:53" pos:end="159:69"><expr pos:start="159:53" pos:end="159:69"><sizeof pos:start="159:53" pos:end="159:69">sizeof<argument_list pos:start="159:59" pos:end="159:69">(<argument pos:start="159:60" pos:end="159:68"><expr pos:start="159:60" pos:end="159:68"><name pos:start="159:60" pos:end="159:68"><name pos:start="159:60" pos:end="159:64">inode</name><operator pos:start="159:65" pos:end="159:65">.</operator><name pos:start="159:66" pos:end="159:68">tag</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="161:21" pos:end="161:29"><expr pos:start="161:21" pos:end="161:29"><name pos:start="161:21" pos:end="161:29"><name pos:start="161:21" pos:end="161:25">inode</name><operator pos:start="161:26" pos:end="161:26">.</operator><name pos:start="161:27" pos:end="161:29">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:20"><expr pos:start="163:13" pos:end="163:19"><name pos:start="163:13" pos:end="163:17">found</name><operator pos:start="163:18" pos:end="163:19">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="171:5" pos:end="171:20"><expr pos:start="171:5" pos:end="171:19"><call pos:start="171:5" pos:end="171:19"><name pos:start="171:5" pos:end="171:15">closesocket</name><argument_list pos:start="171:16" pos:end="171:19">(<argument pos:start="171:17" pos:end="171:18"><expr pos:start="171:17" pos:end="171:18"><name pos:start="171:17" pos:end="171:18">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="173:1" pos:end="173:4"><name pos:start="173:1" pos:end="173:3">out</name>:</label>

    <expr_stmt pos:start="175:5" pos:end="175:22"><expr pos:start="175:5" pos:end="175:21"><operator pos:start="175:5" pos:end="175:5">*</operator><name pos:start="175:6" pos:end="175:12">psn_tab</name> <operator pos:start="175:14" pos:end="175:14">=</operator> <name pos:start="175:16" pos:end="175:21">sn_tab</name></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:22"><expr pos:start="179:5" pos:end="179:21"><call pos:start="179:5" pos:end="179:21"><name pos:start="179:5" pos:end="179:10">g_free</name><argument_list pos:start="179:11" pos:end="179:21">(<argument pos:start="179:12" pos:end="179:20"><expr pos:start="179:12" pos:end="179:20"><name pos:start="179:12" pos:end="179:20">vdi_inuse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="183:5" pos:end="187:5"><if pos:start="183:5" pos:end="187:5">if <condition pos:start="183:8" pos:end="183:16">(<expr pos:start="183:9" pos:end="183:15"><name pos:start="183:9" pos:end="183:11">ret</name> <operator pos:start="183:13" pos:end="183:13">&lt;</operator> <literal type="number" pos:start="183:15" pos:end="183:15">0</literal></expr>)</condition> <block pos:start="183:18" pos:end="187:5">{<block_content pos:start="185:9" pos:end="185:19">

        <return pos:start="185:9" pos:end="185:19">return <expr pos:start="185:16" pos:end="185:18"><name pos:start="185:16" pos:end="185:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="191:5" pos:end="191:17">return <expr pos:start="191:12" pos:end="191:16"><name pos:start="191:12" pos:end="191:16">found</name></expr>;</return>

</block_content>}</block></function>
</unit>
