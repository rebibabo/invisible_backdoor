<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4579.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">qcow2_backing_read1</name><parameter_list pos:start="1:24" pos:end="3:50">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:40">BlockDriverState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">bs</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><name pos:start="1:47" pos:end="1:58">QEMUIOVector</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">qiov</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:38"><decl pos:start="3:25" pos:end="3:38"><type pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:31">int64_t</name></type> <name pos:start="3:33" pos:end="3:38">offset</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:49"><decl pos:start="3:41" pos:end="3:49"><type pos:start="3:41" pos:end="3:49"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:49">bytes</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:14">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:20">bs_size</name> <init pos:start="7:22" pos:end="7:59">= <expr pos:start="7:24" pos:end="7:59"><name pos:start="7:24" pos:end="7:40"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:40">total_sectors</name></name> <operator pos:start="7:42" pos:end="7:42">*</operator> <name pos:start="7:44" pos:end="7:59">BDRV_SECTOR_SIZE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">n1</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:36">(<expr pos:start="13:9" pos:end="13:35"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:15">offset</name> <operator pos:start="13:17" pos:end="13:17">+</operator> <name pos:start="13:19" pos:end="13:23">bytes</name><operator pos:start="13:24" pos:end="13:24">)</operator> <operator pos:start="13:26" pos:end="13:27">&lt;=</operator> <name pos:start="13:29" pos:end="13:35">bs_size</name></expr>)</condition> <block pos:start="13:38" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:21">

        <return pos:start="15:9" pos:end="15:21">return <expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">bytes</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:14">offset</name> <operator pos:start="21:16" pos:end="21:17">&gt;=</operator> <name pos:start="21:19" pos:end="21:25">bs_size</name></expr>)</condition> <block pos:start="21:28" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:15">

        <expr_stmt pos:start="23:9" pos:end="23:15"><expr pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:10">n1</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="29:5">else <block pos:start="25:12" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:30">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:10">n1</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:20">bs_size</name> <operator pos:start="27:22" pos:end="27:22">-</operator> <name pos:start="27:24" pos:end="27:29">offset</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:47"><expr pos:start="33:5" pos:end="33:46"><call pos:start="33:5" pos:end="33:46"><name pos:start="33:5" pos:end="33:21">qemu_iovec_memset</name><argument_list pos:start="33:22" pos:end="33:46">(<argument pos:start="33:23" pos:end="33:26"><expr pos:start="33:23" pos:end="33:26"><name pos:start="33:23" pos:end="33:26">qiov</name></expr></argument>, <argument pos:start="33:29" pos:end="33:30"><expr pos:start="33:29" pos:end="33:30"><name pos:start="33:29" pos:end="33:30">n1</name></expr></argument>, <argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><literal type="number" pos:start="33:33" pos:end="33:33">0</literal></expr></argument>, <argument pos:start="33:36" pos:end="33:45"><expr pos:start="33:36" pos:end="33:45"><name pos:start="33:36" pos:end="33:40">bytes</name> <operator pos:start="33:42" pos:end="33:42">-</operator> <name pos:start="33:44" pos:end="33:45">n1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="37:5" pos:end="37:14">return <expr pos:start="37:12" pos:end="37:13"><name pos:start="37:12" pos:end="37:13">n1</name></expr>;</return>

</block_content>}</block></function>
</unit>
