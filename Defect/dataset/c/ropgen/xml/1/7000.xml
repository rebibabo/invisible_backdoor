<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7000.c" pos:tabs="8"><function pos:start="1:1" pos:end="543:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">decode_postinit</name><parameter_list pos:start="1:28" pos:end="1:63">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:39">H264Context</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">h</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:62">setup_finished</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="543:1">{<block_content pos:start="5:5" pos:end="541:41">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">H264Picture</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">out</name> <init pos:start="5:22" pos:end="5:37">= <expr pos:start="5:24" pos:end="5:37"><name pos:start="5:24" pos:end="5:37"><name pos:start="5:24" pos:end="5:24">h</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:37">cur_pic_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">H264Picture</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">cur</name> <init pos:start="7:22" pos:end="7:37">= <expr pos:start="7:24" pos:end="7:37"><name pos:start="7:24" pos:end="7:37"><name pos:start="7:24" pos:end="7:24">h</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:37">cur_pic_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:15">pics</name></decl>, <decl pos:start="9:18" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:29">out_of_order</name></decl>, <decl pos:start="9:32" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:38">out_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">invalid</name> <init pos:start="11:17" pos:end="11:19">= <expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr></init></decl>, <decl pos:start="11:22" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:24">cnt</name> <init pos:start="11:26" pos:end="11:28">= <expr pos:start="11:28" pos:end="11:28"><literal type="number" pos:start="11:28" pos:end="11:28">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:48"><expr pos:start="15:5" pos:end="15:47"><name pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:5">h</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:18">cur_pic_ptr</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:21">f</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:32">pict_type</name></name> <operator pos:start="15:34" pos:end="15:34">=</operator> <name pos:start="15:36" pos:end="15:47"><name pos:start="15:36" pos:end="15:36">h</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:47">pict_type</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:15"><if pos:start="19:5" pos:end="21:15">if <condition pos:start="19:8" pos:end="19:27">(<expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:9">h</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:26">next_output_pic</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:15"><block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="41:5"><if pos:start="25:5" pos:end="41:5">if <condition pos:start="25:8" pos:end="25:69">(<expr pos:start="25:9" pos:end="25:68"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:11">cur</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:22">field_poc</name><index pos:start="25:23" pos:end="25:25">[<expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr>]</index></name> <operator pos:start="25:27" pos:end="25:28">==</operator> <name pos:start="25:30" pos:end="25:36">INT_MAX</name> <operator pos:start="25:38" pos:end="25:39">||</operator> <name pos:start="25:41" pos:end="25:57"><name pos:start="25:41" pos:end="25:43">cur</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:54">field_poc</name><index pos:start="25:55" pos:end="25:57">[<expr pos:start="25:56" pos:end="25:56"><literal type="number" pos:start="25:56" pos:end="25:56">1</literal></expr>]</index></name> <operator pos:start="25:59" pos:end="25:60">==</operator> <name pos:start="25:62" pos:end="25:68">INT_MAX</name></expr>)</condition> <block pos:start="25:71" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:15">

        <comment type="block" pos:start="27:9" pos:end="33:50">/* FIXME: if we have two PAFF fields in one packet, we can't start

         * the next thread here. If we have one field per packet, we can.

         * The check in decode_nal_units() is not good enough to find this

         * yet, so we assume the worst for now. */</comment>

        <comment type="line" pos:start="35:9" pos:end="35:30">// if (setup_finished)</comment>

        <comment type="line" pos:start="37:9" pos:end="37:47">//    ff_thread_finish_setup(h-&gt;avctx);</comment>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:7">cur</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:10">f</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:28">interlaced_frame</name></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <literal type="number" pos:start="45:32" pos:end="45:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:7">cur</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:10">f</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:23">repeat_pict</name></name>      <operator pos:start="47:30" pos:end="47:30">=</operator> <literal type="number" pos:start="47:32" pos:end="47:32">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:52">/* Signal interlacing information externally. */</comment>

    <comment type="block" pos:start="53:5" pos:end="55:40">/* Prioritize picture timing SEI information over used

     * decoding process if it exists. */</comment>



    <if_stmt pos:start="59:5" pos:end="133:5"><if pos:start="59:5" pos:end="127:5">if <condition pos:start="59:8" pos:end="59:39">(<expr pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:9">h</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:14">sps</name><operator pos:start="59:15" pos:end="59:15">.</operator><name pos:start="59:16" pos:end="59:38">pic_struct_present_flag</name></name></expr>)</condition> <block pos:start="59:41" pos:end="127:5">{<block_content pos:start="61:9" pos:end="125:72">

        <switch pos:start="61:9" pos:end="117:9">switch <condition pos:start="61:16" pos:end="61:34">(<expr pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:17">h</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:33">sei_pic_struct</name></name></expr>)</condition> <block pos:start="61:36" pos:end="117:9">{<block_content pos:start="63:9" pos:end="115:18">

        <case pos:start="63:9" pos:end="63:34">case <expr pos:start="63:14" pos:end="63:33"><name pos:start="63:14" pos:end="63:33">SEI_PIC_STRUCT_FRAME</name></expr>:</case>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:38">case <expr pos:start="67:14" pos:end="67:37"><name pos:start="67:14" pos:end="67:37">SEI_PIC_STRUCT_TOP_FIELD</name></expr>:</case>

        <case pos:start="69:9" pos:end="69:41">case <expr pos:start="69:14" pos:end="69:40"><name pos:start="69:14" pos:end="69:40">SEI_PIC_STRUCT_BOTTOM_FIELD</name></expr>:</case>

            <expr_stmt pos:start="71:13" pos:end="71:41"><expr pos:start="71:13" pos:end="71:40"><name pos:start="71:13" pos:end="71:36"><name pos:start="71:13" pos:end="71:15">cur</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:18">f</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:36">interlaced_frame</name></name> <operator pos:start="71:38" pos:end="71:38">=</operator> <literal type="number" pos:start="71:40" pos:end="71:40">1</literal></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <case pos:start="75:9" pos:end="75:39">case <expr pos:start="75:14" pos:end="75:38"><name pos:start="75:14" pos:end="75:38">SEI_PIC_STRUCT_TOP_BOTTOM</name></expr>:</case>

        <case pos:start="77:9" pos:end="77:39">case <expr pos:start="77:14" pos:end="77:38"><name pos:start="77:14" pos:end="77:38">SEI_PIC_STRUCT_BOTTOM_TOP</name></expr>:</case>

            <if_stmt pos:start="79:13" pos:end="87:68"><if pos:start="79:13" pos:end="81:45">if <condition pos:start="79:16" pos:end="79:42">(<expr pos:start="79:17" pos:end="79:41"><call pos:start="79:17" pos:end="79:41"><name pos:start="79:17" pos:end="79:38">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="79:39" pos:end="79:41">(<argument pos:start="79:40" pos:end="79:40"><expr pos:start="79:40" pos:end="79:40"><name pos:start="79:40" pos:end="79:40">h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:45"><block_content pos:start="81:17" pos:end="81:45">

                <expr_stmt pos:start="81:17" pos:end="81:45"><expr pos:start="81:17" pos:end="81:44"><name pos:start="81:17" pos:end="81:40"><name pos:start="81:17" pos:end="81:19">cur</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:22">f</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:40">interlaced_frame</name></name> <operator pos:start="81:42" pos:end="81:42">=</operator> <literal type="number" pos:start="81:44" pos:end="81:44">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="83:13" pos:end="87:68">else<block type="pseudo" pos:start="87:17" pos:end="87:68"><block_content pos:start="87:17" pos:end="87:68">

                <comment type="line" pos:start="85:17" pos:end="85:56">// try to flag soft telecine progressive</comment>

                <expr_stmt pos:start="87:17" pos:end="87:68"><expr pos:start="87:17" pos:end="87:67"><name pos:start="87:17" pos:end="87:40"><name pos:start="87:17" pos:end="87:19">cur</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:22">f</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:40">interlaced_frame</name></name> <operator pos:start="87:42" pos:end="87:42">=</operator> <name pos:start="87:44" pos:end="87:67"><name pos:start="87:44" pos:end="87:44">h</name><operator pos:start="87:45" pos:end="87:46">-&gt;</operator><name pos:start="87:47" pos:end="87:67">prev_interlaced_frame</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        <case pos:start="91:9" pos:end="91:43">case <expr pos:start="91:14" pos:end="91:42"><name pos:start="91:14" pos:end="91:42">SEI_PIC_STRUCT_TOP_BOTTOM_TOP</name></expr>:</case>

        <case pos:start="93:9" pos:end="93:46">case <expr pos:start="93:14" pos:end="93:45"><name pos:start="93:14" pos:end="93:45">SEI_PIC_STRUCT_BOTTOM_TOP_BOTTOM</name></expr>:</case>

            <comment type="block" pos:start="95:13" pos:end="99:53">/* Signal the possibility of telecined film externally

             * (pic_struct 5,6). From these hints, let the applications

             * decide if they apply deinterlacing. */</comment>

            <expr_stmt pos:start="101:13" pos:end="101:36"><expr pos:start="101:13" pos:end="101:35"><name pos:start="101:13" pos:end="101:31"><name pos:start="101:13" pos:end="101:15">cur</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:18">f</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:31">repeat_pict</name></name> <operator pos:start="101:33" pos:end="101:33">=</operator> <literal type="number" pos:start="101:35" pos:end="101:35">1</literal></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        <case pos:start="105:9" pos:end="105:43">case <expr pos:start="105:14" pos:end="105:42"><name pos:start="105:14" pos:end="105:42">SEI_PIC_STRUCT_FRAME_DOUBLING</name></expr>:</case>

            <expr_stmt pos:start="107:13" pos:end="107:36"><expr pos:start="107:13" pos:end="107:35"><name pos:start="107:13" pos:end="107:31"><name pos:start="107:13" pos:end="107:15">cur</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:18">f</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:31">repeat_pict</name></name> <operator pos:start="107:33" pos:end="107:33">=</operator> <literal type="number" pos:start="107:35" pos:end="107:35">2</literal></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:43">case <expr pos:start="111:14" pos:end="111:42"><name pos:start="111:14" pos:end="111:42">SEI_PIC_STRUCT_FRAME_TRIPLING</name></expr>:</case>

            <expr_stmt pos:start="113:13" pos:end="113:36"><expr pos:start="113:13" pos:end="113:35"><name pos:start="113:13" pos:end="113:31"><name pos:start="113:13" pos:end="113:15">cur</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:18">f</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:31">repeat_pict</name></name> <operator pos:start="113:33" pos:end="113:33">=</operator> <literal type="number" pos:start="113:35" pos:end="113:35">4</literal></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="121:9" pos:end="125:72"><if pos:start="121:9" pos:end="125:72">if <condition pos:start="121:12" pos:end="123:59">(<expr pos:start="121:13" pos:end="123:58"><operator pos:start="121:13" pos:end="121:13">(</operator><name pos:start="121:14" pos:end="121:27"><name pos:start="121:14" pos:end="121:14">h</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:27">sei_ct_type</name></name> <operator pos:start="121:29" pos:end="121:29">&amp;</operator> <literal type="number" pos:start="121:31" pos:end="121:31">3</literal><operator pos:start="121:32" pos:end="121:32">)</operator> <operator pos:start="121:34" pos:end="121:35">&amp;&amp;</operator>

            <name pos:start="123:13" pos:end="123:29"><name pos:start="123:13" pos:end="123:13">h</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:29">sei_pic_struct</name></name> <operator pos:start="123:31" pos:end="123:32">&lt;=</operator> <name pos:start="123:34" pos:end="123:58">SEI_PIC_STRUCT_BOTTOM_TOP</name></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:72"><block_content pos:start="125:13" pos:end="125:72">

            <expr_stmt pos:start="125:13" pos:end="125:72"><expr pos:start="125:13" pos:end="125:71"><name pos:start="125:13" pos:end="125:36"><name pos:start="125:13" pos:end="125:15">cur</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:18">f</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:36">interlaced_frame</name></name> <operator pos:start="125:38" pos:end="125:38">=</operator> <operator pos:start="125:40" pos:end="125:40">(</operator><name pos:start="125:41" pos:end="125:54"><name pos:start="125:41" pos:end="125:41">h</name><operator pos:start="125:42" pos:end="125:43">-&gt;</operator><name pos:start="125:44" pos:end="125:54">sei_ct_type</name></name> <operator pos:start="125:56" pos:end="125:56">&amp;</operator> <operator pos:start="125:58" pos:end="125:58">(</operator><literal type="number" pos:start="125:59" pos:end="125:59">1</literal> <operator pos:start="125:61" pos:end="125:62">&lt;&lt;</operator> <literal type="number" pos:start="125:64" pos:end="125:64">1</literal><operator pos:start="125:65" pos:end="125:65">)</operator><operator pos:start="125:66" pos:end="125:66">)</operator> <operator pos:start="125:68" pos:end="125:69">!=</operator> <literal type="number" pos:start="125:71" pos:end="125:71">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="127:7" pos:end="133:5">else <block pos:start="127:12" pos:end="133:5">{<block_content pos:start="131:9" pos:end="131:61">

        <comment type="block" pos:start="129:9" pos:end="129:65">/* Derive interlacing flag from used decoding process. */</comment>

        <expr_stmt pos:start="131:9" pos:end="131:61"><expr pos:start="131:9" pos:end="131:60"><name pos:start="131:9" pos:end="131:32"><name pos:start="131:9" pos:end="131:11">cur</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:14">f</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:32">interlaced_frame</name></name> <operator pos:start="131:34" pos:end="131:34">=</operator> <call pos:start="131:36" pos:end="131:60"><name pos:start="131:36" pos:end="131:57">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="131:58" pos:end="131:60">(<argument pos:start="131:59" pos:end="131:59"><expr pos:start="131:59" pos:end="131:59"><name pos:start="131:59" pos:end="131:59">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:56"><expr pos:start="135:5" pos:end="135:55"><name pos:start="135:5" pos:end="135:28"><name pos:start="135:5" pos:end="135:5">h</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:28">prev_interlaced_frame</name></name> <operator pos:start="135:30" pos:end="135:30">=</operator> <name pos:start="135:32" pos:end="135:55"><name pos:start="135:32" pos:end="135:34">cur</name><operator pos:start="135:35" pos:end="135:36">-&gt;</operator><name pos:start="135:37" pos:end="135:37">f</name><operator pos:start="135:38" pos:end="135:39">-&gt;</operator><name pos:start="135:40" pos:end="135:55">interlaced_frame</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="139:5" pos:end="171:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:47">(<expr pos:start="139:9" pos:end="139:46"><name pos:start="139:9" pos:end="139:25"><name pos:start="139:9" pos:end="139:11">cur</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:22">field_poc</name><index pos:start="139:23" pos:end="139:25">[<expr pos:start="139:24" pos:end="139:24"><literal type="number" pos:start="139:24" pos:end="139:24">0</literal></expr>]</index></name> <operator pos:start="139:27" pos:end="139:28">!=</operator> <name pos:start="139:30" pos:end="139:46"><name pos:start="139:30" pos:end="139:32">cur</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:43">field_poc</name><index pos:start="139:44" pos:end="139:46">[<expr pos:start="139:45" pos:end="139:45"><literal type="number" pos:start="139:45" pos:end="139:45">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="139:49" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:72">

        <comment type="block" pos:start="141:9" pos:end="141:53">/* Derive top_field_first from field pocs. */</comment>

        <expr_stmt pos:start="143:9" pos:end="143:72"><expr pos:start="143:9" pos:end="143:71"><name pos:start="143:9" pos:end="143:31"><name pos:start="143:9" pos:end="143:11">cur</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:14">f</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:31">top_field_first</name></name> <operator pos:start="143:33" pos:end="143:33">=</operator> <name pos:start="143:35" pos:end="143:51"><name pos:start="143:35" pos:end="143:37">cur</name><operator pos:start="143:38" pos:end="143:39">-&gt;</operator><name pos:start="143:40" pos:end="143:48">field_poc</name><index pos:start="143:49" pos:end="143:51">[<expr pos:start="143:50" pos:end="143:50"><literal type="number" pos:start="143:50" pos:end="143:50">0</literal></expr>]</index></name> <operator pos:start="143:53" pos:end="143:53">&lt;</operator> <name pos:start="143:55" pos:end="143:71"><name pos:start="143:55" pos:end="143:57">cur</name><operator pos:start="143:58" pos:end="143:59">-&gt;</operator><name pos:start="143:60" pos:end="143:68">field_poc</name><index pos:start="143:69" pos:end="143:71">[<expr pos:start="143:70" pos:end="143:70"><literal type="number" pos:start="143:70" pos:end="143:70">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="145:7" pos:end="171:5">else <block pos:start="145:12" pos:end="171:5">{<block_content pos:start="147:9" pos:end="169:9">

        <if_stmt pos:start="147:9" pos:end="169:9"><if pos:start="147:9" pos:end="163:9">if <condition pos:start="147:12" pos:end="147:71">(<expr pos:start="147:13" pos:end="147:70"><name pos:start="147:13" pos:end="147:36"><name pos:start="147:13" pos:end="147:15">cur</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:18">f</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:36">interlaced_frame</name></name> <operator pos:start="147:38" pos:end="147:39">||</operator> <name pos:start="147:41" pos:end="147:70"><name pos:start="147:41" pos:end="147:41">h</name><operator pos:start="147:42" pos:end="147:43">-&gt;</operator><name pos:start="147:44" pos:end="147:46">sps</name><operator pos:start="147:47" pos:end="147:47">.</operator><name pos:start="147:48" pos:end="147:70">pic_struct_present_flag</name></name></expr>)</condition> <block pos:start="147:73" pos:end="163:9">{<block_content pos:start="153:13" pos:end="161:44">

            <comment type="block" pos:start="149:13" pos:end="151:67">/* Use picture timing SEI information. Even if it is a

             * information of a past frame, better than nothing. */</comment>

            <if_stmt pos:start="153:13" pos:end="161:44"><if pos:start="153:13" pos:end="157:44">if <condition pos:start="153:16" pos:end="155:67">(<expr pos:start="153:17" pos:end="155:66"><name pos:start="153:17" pos:end="153:33"><name pos:start="153:17" pos:end="153:17">h</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:33">sei_pic_struct</name></name> <operator pos:start="153:35" pos:end="153:36">==</operator> <name pos:start="153:38" pos:end="153:62">SEI_PIC_STRUCT_TOP_BOTTOM</name> <operator pos:start="153:64" pos:end="153:65">||</operator>

                <name pos:start="155:17" pos:end="155:33"><name pos:start="155:17" pos:end="155:17">h</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:33">sei_pic_struct</name></name> <operator pos:start="155:35" pos:end="155:36">==</operator> <name pos:start="155:38" pos:end="155:66">SEI_PIC_STRUCT_TOP_BOTTOM_TOP</name></expr>)</condition><block type="pseudo" pos:start="157:17" pos:end="157:44"><block_content pos:start="157:17" pos:end="157:44">

                <expr_stmt pos:start="157:17" pos:end="157:44"><expr pos:start="157:17" pos:end="157:43"><name pos:start="157:17" pos:end="157:39"><name pos:start="157:17" pos:end="157:19">cur</name><operator pos:start="157:20" pos:end="157:21">-&gt;</operator><name pos:start="157:22" pos:end="157:22">f</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:39">top_field_first</name></name> <operator pos:start="157:41" pos:end="157:41">=</operator> <literal type="number" pos:start="157:43" pos:end="157:43">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="159:13" pos:end="161:44">else<block type="pseudo" pos:start="161:17" pos:end="161:44"><block_content pos:start="161:17" pos:end="161:44">

                <expr_stmt pos:start="161:17" pos:end="161:44"><expr pos:start="161:17" pos:end="161:43"><name pos:start="161:17" pos:end="161:39"><name pos:start="161:17" pos:end="161:19">cur</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:22">f</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:39">top_field_first</name></name> <operator pos:start="161:41" pos:end="161:41">=</operator> <literal type="number" pos:start="161:43" pos:end="161:43">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="163:11" pos:end="169:9">else <block pos:start="163:16" pos:end="169:9">{<block_content pos:start="167:13" pos:end="167:40">

            <comment type="block" pos:start="165:13" pos:end="165:41">/* Most likely progressive */</comment>

            <expr_stmt pos:start="167:13" pos:end="167:40"><expr pos:start="167:13" pos:end="167:39"><name pos:start="167:13" pos:end="167:35"><name pos:start="167:13" pos:end="167:15">cur</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:18">f</name><operator pos:start="167:19" pos:end="167:20">-&gt;</operator><name pos:start="167:21" pos:end="167:35">top_field_first</name></name> <operator pos:start="167:37" pos:end="167:37">=</operator> <literal type="number" pos:start="167:39" pos:end="167:39">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="175:5" pos:end="251:5"><if pos:start="175:5" pos:end="251:5">if <condition pos:start="175:8" pos:end="183:43">(<expr pos:start="175:9" pos:end="183:42"><name pos:start="175:9" pos:end="175:36"><name pos:start="175:9" pos:end="175:9">h</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:36">sei_frame_packing_present</name></name> <operator pos:start="175:38" pos:end="175:39">&amp;&amp;</operator>

        <name pos:start="177:9" pos:end="177:41"><name pos:start="177:9" pos:end="177:9">h</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:41">frame_packing_arrangement_type</name></name> <operator pos:start="177:43" pos:end="177:44">&gt;=</operator> <literal type="number" pos:start="177:46" pos:end="177:46">0</literal> <operator pos:start="177:48" pos:end="177:49">&amp;&amp;</operator>

        <name pos:start="179:9" pos:end="179:41"><name pos:start="179:9" pos:end="179:9">h</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:41">frame_packing_arrangement_type</name></name> <operator pos:start="179:43" pos:end="179:44">&lt;=</operator> <literal type="number" pos:start="179:46" pos:end="179:46">6</literal> <operator pos:start="179:48" pos:end="179:49">&amp;&amp;</operator>

        <name pos:start="181:9" pos:end="181:38"><name pos:start="181:9" pos:end="181:9">h</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:38">content_interpretation_type</name></name> <operator pos:start="181:40" pos:end="181:40">&gt;</operator> <literal type="number" pos:start="181:42" pos:end="181:42">0</literal> <operator pos:start="181:44" pos:end="181:45">&amp;&amp;</operator>

        <name pos:start="183:9" pos:end="183:38"><name pos:start="183:9" pos:end="183:9">h</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:38">content_interpretation_type</name></name> <operator pos:start="183:40" pos:end="183:40">&lt;</operator> <literal type="number" pos:start="183:42" pos:end="183:42">3</literal></expr>)</condition> <block pos:start="183:45" pos:end="251:5">{<block_content pos:start="185:9" pos:end="249:52">

        <decl_stmt pos:start="185:9" pos:end="185:66"><decl pos:start="185:9" pos:end="185:65"><type pos:start="185:9" pos:end="185:20"><name pos:start="185:9" pos:end="185:18">AVStereo3D</name> <modifier pos:start="185:20" pos:end="185:20">*</modifier></type><name pos:start="185:21" pos:end="185:26">stereo</name> <init pos:start="185:28" pos:end="185:65">= <expr pos:start="185:30" pos:end="185:65"><call pos:start="185:30" pos:end="185:65"><name pos:start="185:30" pos:end="185:57">av_stereo3d_create_side_data</name><argument_list pos:start="185:58" pos:end="185:65">(<argument pos:start="185:59" pos:end="185:64"><expr pos:start="185:59" pos:end="185:64"><name pos:start="185:59" pos:end="185:64"><name pos:start="185:59" pos:end="185:61">cur</name><operator pos:start="185:62" pos:end="185:63">-&gt;</operator><name pos:start="185:64" pos:end="185:64">f</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="187:9" pos:end="189:19"><if pos:start="187:9" pos:end="189:19">if <condition pos:start="187:12" pos:end="187:20">(<expr pos:start="187:13" pos:end="187:19"><operator pos:start="187:13" pos:end="187:13">!</operator><name pos:start="187:14" pos:end="187:19">stereo</name></expr>)</condition><block type="pseudo" pos:start="189:13" pos:end="189:19"><block_content pos:start="189:13" pos:end="189:19">

            <return pos:start="189:13" pos:end="189:19">return;</return></block_content></block></if></if_stmt>



        <switch pos:start="193:9" pos:end="243:9">switch <condition pos:start="193:16" pos:end="193:50">(<expr pos:start="193:17" pos:end="193:49"><name pos:start="193:17" pos:end="193:49"><name pos:start="193:17" pos:end="193:17">h</name><operator pos:start="193:18" pos:end="193:19">-&gt;</operator><name pos:start="193:20" pos:end="193:49">frame_packing_arrangement_type</name></name></expr>)</condition> <block pos:start="193:52" pos:end="243:9">{<block_content pos:start="195:9" pos:end="241:18">

        <case pos:start="195:9" pos:end="195:15">case <expr pos:start="195:14" pos:end="195:14"><literal type="number" pos:start="195:14" pos:end="195:14">0</literal></expr>:</case>

            <expr_stmt pos:start="197:13" pos:end="197:52"><expr pos:start="197:13" pos:end="197:51"><name pos:start="197:13" pos:end="197:24"><name pos:start="197:13" pos:end="197:18">stereo</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:24">type</name></name> <operator pos:start="197:26" pos:end="197:26">=</operator> <name pos:start="197:28" pos:end="197:51">AV_STEREO3D_CHECKERBOARD</name></expr>;</expr_stmt>

            <break pos:start="199:13" pos:end="199:18">break;</break>

        <case pos:start="201:9" pos:end="201:15">case <expr pos:start="201:14" pos:end="201:14"><literal type="number" pos:start="201:14" pos:end="201:14">1</literal></expr>:</case>

            <expr_stmt pos:start="203:13" pos:end="203:47"><expr pos:start="203:13" pos:end="203:46"><name pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:18">stereo</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:24">type</name></name> <operator pos:start="203:26" pos:end="203:26">=</operator> <name pos:start="203:28" pos:end="203:46">AV_STEREO3D_COLUMNS</name></expr>;</expr_stmt>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <case pos:start="207:9" pos:end="207:15">case <expr pos:start="207:14" pos:end="207:14"><literal type="number" pos:start="207:14" pos:end="207:14">2</literal></expr>:</case>

            <expr_stmt pos:start="209:13" pos:end="209:45"><expr pos:start="209:13" pos:end="209:44"><name pos:start="209:13" pos:end="209:24"><name pos:start="209:13" pos:end="209:18">stereo</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:24">type</name></name> <operator pos:start="209:26" pos:end="209:26">=</operator> <name pos:start="209:28" pos:end="209:44">AV_STEREO3D_LINES</name></expr>;</expr_stmt>

            <break pos:start="211:13" pos:end="211:18">break;</break>

        <case pos:start="213:9" pos:end="213:15">case <expr pos:start="213:14" pos:end="213:14"><literal type="number" pos:start="213:14" pos:end="213:14">3</literal></expr>:</case>

            <if_stmt pos:start="215:13" pos:end="221:54"><if pos:start="215:13" pos:end="217:63">if <condition pos:start="215:16" pos:end="215:40">(<expr pos:start="215:17" pos:end="215:39"><name pos:start="215:17" pos:end="215:39"><name pos:start="215:17" pos:end="215:17">h</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:39">quincunx_subsampling</name></name></expr>)</condition><block type="pseudo" pos:start="217:17" pos:end="217:63"><block_content pos:start="217:17" pos:end="217:63">

                <expr_stmt pos:start="217:17" pos:end="217:63"><expr pos:start="217:17" pos:end="217:62"><name pos:start="217:17" pos:end="217:28"><name pos:start="217:17" pos:end="217:22">stereo</name><operator pos:start="217:23" pos:end="217:24">-&gt;</operator><name pos:start="217:25" pos:end="217:28">type</name></name> <operator pos:start="217:30" pos:end="217:30">=</operator> <name pos:start="217:32" pos:end="217:62">AV_STEREO3D_SIDEBYSIDE_QUINCUNX</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="219:13" pos:end="221:54">else<block type="pseudo" pos:start="221:17" pos:end="221:54"><block_content pos:start="221:17" pos:end="221:54">

                <expr_stmt pos:start="221:17" pos:end="221:54"><expr pos:start="221:17" pos:end="221:53"><name pos:start="221:17" pos:end="221:28"><name pos:start="221:17" pos:end="221:22">stereo</name><operator pos:start="221:23" pos:end="221:24">-&gt;</operator><name pos:start="221:25" pos:end="221:28">type</name></name> <operator pos:start="221:30" pos:end="221:30">=</operator> <name pos:start="221:32" pos:end="221:53">AV_STEREO3D_SIDEBYSIDE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="223:13" pos:end="223:18">break;</break>

        <case pos:start="225:9" pos:end="225:15">case <expr pos:start="225:14" pos:end="225:14"><literal type="number" pos:start="225:14" pos:end="225:14">4</literal></expr>:</case>

            <expr_stmt pos:start="227:13" pos:end="227:49"><expr pos:start="227:13" pos:end="227:48"><name pos:start="227:13" pos:end="227:24"><name pos:start="227:13" pos:end="227:18">stereo</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:24">type</name></name> <operator pos:start="227:26" pos:end="227:26">=</operator> <name pos:start="227:28" pos:end="227:48">AV_STEREO3D_TOPBOTTOM</name></expr>;</expr_stmt>

            <break pos:start="229:13" pos:end="229:18">break;</break>

        <case pos:start="231:9" pos:end="231:15">case <expr pos:start="231:14" pos:end="231:14"><literal type="number" pos:start="231:14" pos:end="231:14">5</literal></expr>:</case>

            <expr_stmt pos:start="233:13" pos:end="233:53"><expr pos:start="233:13" pos:end="233:52"><name pos:start="233:13" pos:end="233:24"><name pos:start="233:13" pos:end="233:18">stereo</name><operator pos:start="233:19" pos:end="233:20">-&gt;</operator><name pos:start="233:21" pos:end="233:24">type</name></name> <operator pos:start="233:26" pos:end="233:26">=</operator> <name pos:start="233:28" pos:end="233:52">AV_STEREO3D_FRAMESEQUENCE</name></expr>;</expr_stmt>

            <break pos:start="235:13" pos:end="235:18">break;</break>

        <case pos:start="237:9" pos:end="237:15">case <expr pos:start="237:14" pos:end="237:14"><literal type="number" pos:start="237:14" pos:end="237:14">6</literal></expr>:</case>

            <expr_stmt pos:start="239:13" pos:end="239:42"><expr pos:start="239:13" pos:end="239:41"><name pos:start="239:13" pos:end="239:24"><name pos:start="239:13" pos:end="239:18">stereo</name><operator pos:start="239:19" pos:end="239:20">-&gt;</operator><name pos:start="239:21" pos:end="239:24">type</name></name> <operator pos:start="239:26" pos:end="239:26">=</operator> <name pos:start="239:28" pos:end="239:41">AV_STEREO3D_2D</name></expr>;</expr_stmt>

            <break pos:start="241:13" pos:end="241:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="247:9" pos:end="249:52"><if pos:start="247:9" pos:end="249:52">if <condition pos:start="247:12" pos:end="247:48">(<expr pos:start="247:13" pos:end="247:47"><name pos:start="247:13" pos:end="247:42"><name pos:start="247:13" pos:end="247:13">h</name><operator pos:start="247:14" pos:end="247:15">-&gt;</operator><name pos:start="247:16" pos:end="247:42">content_interpretation_type</name></name> <operator pos:start="247:44" pos:end="247:45">==</operator> <literal type="number" pos:start="247:47" pos:end="247:47">2</literal></expr>)</condition><block type="pseudo" pos:start="249:13" pos:end="249:52"><block_content pos:start="249:13" pos:end="249:52">

            <expr_stmt pos:start="249:13" pos:end="249:52"><expr pos:start="249:13" pos:end="249:51"><name pos:start="249:13" pos:end="249:25"><name pos:start="249:13" pos:end="249:18">stereo</name><operator pos:start="249:19" pos:end="249:20">-&gt;</operator><name pos:start="249:21" pos:end="249:25">flags</name></name> <operator pos:start="249:27" pos:end="249:27">=</operator> <name pos:start="249:29" pos:end="249:51">AV_STEREO3D_FLAG_INVERT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="255:5" pos:end="279:5"><if pos:start="255:5" pos:end="279:5">if <condition pos:start="255:8" pos:end="257:72">(<expr pos:start="255:9" pos:end="257:71"><name pos:start="255:9" pos:end="255:42"><name pos:start="255:9" pos:end="255:9">h</name><operator pos:start="255:10" pos:end="255:11">-&gt;</operator><name pos:start="255:12" pos:end="255:42">sei_display_orientation_present</name></name> <operator pos:start="255:44" pos:end="255:45">&amp;&amp;</operator>

        <operator pos:start="257:9" pos:end="257:9">(</operator><name pos:start="257:10" pos:end="257:38"><name pos:start="257:10" pos:end="257:10">h</name><operator pos:start="257:11" pos:end="257:12">-&gt;</operator><name pos:start="257:13" pos:end="257:38">sei_anticlockwise_rotation</name></name> <operator pos:start="257:40" pos:end="257:41">||</operator> <name pos:start="257:43" pos:end="257:54"><name pos:start="257:43" pos:end="257:43">h</name><operator pos:start="257:44" pos:end="257:45">-&gt;</operator><name pos:start="257:46" pos:end="257:54">sei_hflip</name></name> <operator pos:start="257:56" pos:end="257:57">||</operator> <name pos:start="257:59" pos:end="257:70"><name pos:start="257:59" pos:end="257:59">h</name><operator pos:start="257:60" pos:end="257:61">-&gt;</operator><name pos:start="257:62" pos:end="257:70">sei_vflip</name></name><operator pos:start="257:71" pos:end="257:71">)</operator></expr>)</condition> <block pos:start="257:74" pos:end="279:5">{<block_content pos:start="259:9" pos:end="277:59">

        <decl_stmt pos:start="259:9" pos:end="259:80"><decl pos:start="259:9" pos:end="259:79"><type pos:start="259:9" pos:end="259:14"><name pos:start="259:9" pos:end="259:14">double</name></type> <name pos:start="259:16" pos:end="259:20">angle</name> <init pos:start="259:22" pos:end="259:79">= <expr pos:start="259:24" pos:end="259:79"><name pos:start="259:24" pos:end="259:52"><name pos:start="259:24" pos:end="259:24">h</name><operator pos:start="259:25" pos:end="259:26">-&gt;</operator><name pos:start="259:27" pos:end="259:52">sei_anticlockwise_rotation</name></name> <operator pos:start="259:54" pos:end="259:54">*</operator> <literal type="number" pos:start="259:56" pos:end="259:58">360</literal> <operator pos:start="259:60" pos:end="259:60">/</operator> <operator pos:start="259:62" pos:end="259:62">(</operator><name pos:start="259:63" pos:end="259:68">double</name><operator pos:start="259:69" pos:end="259:69">)</operator> <operator pos:start="259:71" pos:end="259:71">(</operator><literal type="number" pos:start="259:72" pos:end="259:72">1</literal> <operator pos:start="259:74" pos:end="259:75">&lt;&lt;</operator> <literal type="number" pos:start="259:77" pos:end="259:78">16</literal><operator pos:start="259:79" pos:end="259:79">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="261:9" pos:end="265:80"><decl pos:start="261:9" pos:end="265:79"><type pos:start="261:9" pos:end="261:25"><name pos:start="261:9" pos:end="261:23">AVFrameSideData</name> <modifier pos:start="261:25" pos:end="261:25">*</modifier></type><name pos:start="261:26" pos:end="261:33">rotation</name> <init pos:start="261:35" pos:end="265:79">= <expr pos:start="261:37" pos:end="265:79"><call pos:start="261:37" pos:end="265:79"><name pos:start="261:37" pos:end="261:58">av_frame_new_side_data</name><argument_list pos:start="261:59" pos:end="265:79">(<argument pos:start="261:60" pos:end="261:65"><expr pos:start="261:60" pos:end="261:65"><name pos:start="261:60" pos:end="261:65"><name pos:start="261:60" pos:end="261:62">cur</name><operator pos:start="261:63" pos:end="261:64">-&gt;</operator><name pos:start="261:65" pos:end="261:65">f</name></name></expr></argument>,

                                                           <argument pos:start="263:60" pos:end="263:86"><expr pos:start="263:60" pos:end="263:86"><name pos:start="263:60" pos:end="263:86">AV_FRAME_DATA_DISPLAYMATRIX</name></expr></argument>,

                                                           <argument pos:start="265:60" pos:end="265:78"><expr pos:start="265:60" pos:end="265:78"><sizeof pos:start="265:60" pos:end="265:74">sizeof<argument_list pos:start="265:66" pos:end="265:74">(<argument pos:start="265:67" pos:end="265:73"><expr pos:start="265:67" pos:end="265:73"><name pos:start="265:67" pos:end="265:73">int32_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="265:76" pos:end="265:76">*</operator> <literal type="number" pos:start="265:78" pos:end="265:78">9</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="267:9" pos:end="269:19"><if pos:start="267:9" pos:end="269:19">if <condition pos:start="267:12" pos:end="267:22">(<expr pos:start="267:13" pos:end="267:21"><operator pos:start="267:13" pos:end="267:13">!</operator><name pos:start="267:14" pos:end="267:21">rotation</name></expr>)</condition><block type="pseudo" pos:start="269:13" pos:end="269:19"><block_content pos:start="269:13" pos:end="269:19">

            <return pos:start="269:13" pos:end="269:19">return;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="273:9" pos:end="273:66"><expr pos:start="273:9" pos:end="273:65"><call pos:start="273:9" pos:end="273:65"><name pos:start="273:9" pos:end="273:31">av_display_rotation_set</name><argument_list pos:start="273:32" pos:end="273:65">(<argument pos:start="273:33" pos:end="273:57"><expr pos:start="273:33" pos:end="273:57"><operator pos:start="273:33" pos:end="273:33">(</operator><name pos:start="273:34" pos:end="273:40">int32_t</name> <operator pos:start="273:42" pos:end="273:42">*</operator><operator pos:start="273:43" pos:end="273:43">)</operator><name pos:start="273:44" pos:end="273:57"><name pos:start="273:44" pos:end="273:51">rotation</name><operator pos:start="273:52" pos:end="273:53">-&gt;</operator><name pos:start="273:54" pos:end="273:57">data</name></name></expr></argument>, <argument pos:start="273:60" pos:end="273:64"><expr pos:start="273:60" pos:end="273:64"><name pos:start="273:60" pos:end="273:64">angle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="277:59"><expr pos:start="275:9" pos:end="277:58"><call pos:start="275:9" pos:end="277:58"><name pos:start="275:9" pos:end="275:30">av_display_matrix_flip</name><argument_list pos:start="275:31" pos:end="277:58">(<argument pos:start="275:32" pos:end="275:56"><expr pos:start="275:32" pos:end="275:56"><operator pos:start="275:32" pos:end="275:32">(</operator><name pos:start="275:33" pos:end="275:39">int32_t</name> <operator pos:start="275:41" pos:end="275:41">*</operator><operator pos:start="275:42" pos:end="275:42">)</operator><name pos:start="275:43" pos:end="275:56"><name pos:start="275:43" pos:end="275:50">rotation</name><operator pos:start="275:51" pos:end="275:52">-&gt;</operator><name pos:start="275:53" pos:end="275:56">data</name></name></expr></argument>,

                               <argument pos:start="277:32" pos:end="277:43"><expr pos:start="277:32" pos:end="277:43"><name pos:start="277:32" pos:end="277:43"><name pos:start="277:32" pos:end="277:32">h</name><operator pos:start="277:33" pos:end="277:34">-&gt;</operator><name pos:start="277:35" pos:end="277:43">sei_hflip</name></name></expr></argument>, <argument pos:start="277:46" pos:end="277:57"><expr pos:start="277:46" pos:end="277:57"><name pos:start="277:46" pos:end="277:57"><name pos:start="277:46" pos:end="277:46">h</name><operator pos:start="277:47" pos:end="277:48">-&gt;</operator><name pos:start="277:49" pos:end="277:57">sei_vflip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="283:5" pos:end="283:59">// FIXME do something with unavailable reference frames</comment>



    <comment type="block" pos:start="287:5" pos:end="287:42">/* Sort B-frames into display order */</comment>



    <if_stmt pos:start="291:5" pos:end="299:5"><if pos:start="291:5" pos:end="299:5">if <condition pos:start="291:8" pos:end="293:59">(<expr pos:start="291:9" pos:end="293:58"><name pos:start="291:9" pos:end="291:41"><name pos:start="291:9" pos:end="291:9">h</name><operator pos:start="291:10" pos:end="291:11">-&gt;</operator><name pos:start="291:12" pos:end="291:14">sps</name><operator pos:start="291:15" pos:end="291:15">.</operator><name pos:start="291:16" pos:end="291:41">bitstream_restriction_flag</name></name> <operator pos:start="291:43" pos:end="291:44">&amp;&amp;</operator>

        <name pos:start="293:9" pos:end="293:30"><name pos:start="293:9" pos:end="293:9">h</name><operator pos:start="293:10" pos:end="293:11">-&gt;</operator><name pos:start="293:12" pos:end="293:16">avctx</name><operator pos:start="293:17" pos:end="293:18">-&gt;</operator><name pos:start="293:19" pos:end="293:30">has_b_frames</name></name> <operator pos:start="293:32" pos:end="293:32">&lt;</operator> <name pos:start="293:34" pos:end="293:58"><name pos:start="293:34" pos:end="293:34">h</name><operator pos:start="293:35" pos:end="293:36">-&gt;</operator><name pos:start="293:37" pos:end="293:39">sps</name><operator pos:start="293:40" pos:end="293:40">.</operator><name pos:start="293:41" pos:end="293:58">num_reorder_frames</name></name></expr>)</condition> <block pos:start="293:61" pos:end="299:5">{<block_content pos:start="295:9" pos:end="297:35">

        <expr_stmt pos:start="295:9" pos:end="295:59"><expr pos:start="295:9" pos:end="295:58"><name pos:start="295:9" pos:end="295:30"><name pos:start="295:9" pos:end="295:9">h</name><operator pos:start="295:10" pos:end="295:11">-&gt;</operator><name pos:start="295:12" pos:end="295:16">avctx</name><operator pos:start="295:17" pos:end="295:18">-&gt;</operator><name pos:start="295:19" pos:end="295:30">has_b_frames</name></name> <operator pos:start="295:32" pos:end="295:32">=</operator> <name pos:start="295:34" pos:end="295:58"><name pos:start="295:34" pos:end="295:34">h</name><operator pos:start="295:35" pos:end="295:36">-&gt;</operator><name pos:start="295:37" pos:end="295:39">sps</name><operator pos:start="295:40" pos:end="295:40">.</operator><name pos:start="295:41" pos:end="295:58">num_reorder_frames</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:35"><expr pos:start="297:9" pos:end="297:34"><name pos:start="297:9" pos:end="297:20"><name pos:start="297:9" pos:end="297:9">h</name><operator pos:start="297:10" pos:end="297:11">-&gt;</operator><name pos:start="297:12" pos:end="297:20">low_delay</name></name>           <operator pos:start="297:32" pos:end="297:32">=</operator> <literal type="number" pos:start="297:34" pos:end="297:34">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="303:5" pos:end="311:5"><if pos:start="303:5" pos:end="311:5">if <condition pos:start="303:8" pos:end="305:43">(<expr pos:start="303:9" pos:end="305:42"><name pos:start="303:9" pos:end="303:39"><name pos:start="303:9" pos:end="303:9">h</name><operator pos:start="303:10" pos:end="303:11">-&gt;</operator><name pos:start="303:12" pos:end="303:16">avctx</name><operator pos:start="303:17" pos:end="303:18">-&gt;</operator><name pos:start="303:19" pos:end="303:39">strict_std_compliance</name></name> <operator pos:start="303:41" pos:end="303:42">&gt;=</operator> <name pos:start="303:44" pos:end="303:63">FF_COMPLIANCE_STRICT</name> <operator pos:start="303:65" pos:end="303:66">&amp;&amp;</operator>

        <operator pos:start="305:9" pos:end="305:9">!</operator><name pos:start="305:10" pos:end="305:42"><name pos:start="305:10" pos:end="305:10">h</name><operator pos:start="305:11" pos:end="305:12">-&gt;</operator><name pos:start="305:13" pos:end="305:15">sps</name><operator pos:start="305:16" pos:end="305:16">.</operator><name pos:start="305:17" pos:end="305:42">bitstream_restriction_flag</name></name></expr>)</condition> <block pos:start="305:45" pos:end="311:5">{<block_content pos:start="307:9" pos:end="309:35">

        <expr_stmt pos:start="307:9" pos:end="307:59"><expr pos:start="307:9" pos:end="307:58"><name pos:start="307:9" pos:end="307:30"><name pos:start="307:9" pos:end="307:9">h</name><operator pos:start="307:10" pos:end="307:11">-&gt;</operator><name pos:start="307:12" pos:end="307:16">avctx</name><operator pos:start="307:17" pos:end="307:18">-&gt;</operator><name pos:start="307:19" pos:end="307:30">has_b_frames</name></name> <operator pos:start="307:32" pos:end="307:32">=</operator> <name pos:start="307:34" pos:end="307:54">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="307:56" pos:end="307:56">-</operator> <literal type="number" pos:start="307:58" pos:end="307:58">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:35"><expr pos:start="309:9" pos:end="309:34"><name pos:start="309:9" pos:end="309:20"><name pos:start="309:9" pos:end="309:9">h</name><operator pos:start="309:10" pos:end="309:11">-&gt;</operator><name pos:start="309:12" pos:end="309:20">low_delay</name></name>           <operator pos:start="309:32" pos:end="309:32">=</operator> <literal type="number" pos:start="309:34" pos:end="309:34">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="315:5" pos:end="315:13"><expr pos:start="315:5" pos:end="315:12"><name pos:start="315:5" pos:end="315:8">pics</name> <operator pos:start="315:10" pos:end="315:10">=</operator> <literal type="number" pos:start="315:12" pos:end="315:12">0</literal></expr>;</expr_stmt>

    <while pos:start="317:5" pos:end="319:15">while <condition pos:start="317:11" pos:end="317:32">(<expr pos:start="317:12" pos:end="317:31"><name pos:start="317:12" pos:end="317:31"><name pos:start="317:12" pos:end="317:12">h</name><operator pos:start="317:13" pos:end="317:14">-&gt;</operator><name pos:start="317:15" pos:end="317:25">delayed_pic</name><index pos:start="317:26" pos:end="317:31">[<expr pos:start="317:27" pos:end="317:30"><name pos:start="317:27" pos:end="317:30">pics</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="319:9" pos:end="319:15"><block_content pos:start="319:9" pos:end="319:15">

        <expr_stmt pos:start="319:9" pos:end="319:15"><expr pos:start="319:9" pos:end="319:14"><name pos:start="319:9" pos:end="319:12">pics</name><operator pos:start="319:13" pos:end="319:14">++</operator></expr>;</expr_stmt></block_content></block></while>



    <expr_stmt pos:start="323:5" pos:end="323:42"><expr pos:start="323:5" pos:end="323:41"><call pos:start="323:5" pos:end="323:41"><name pos:start="323:5" pos:end="323:10">assert</name><argument_list pos:start="323:11" pos:end="323:41">(<argument pos:start="323:12" pos:end="323:40"><expr pos:start="323:12" pos:end="323:40"><name pos:start="323:12" pos:end="323:15">pics</name> <operator pos:start="323:17" pos:end="323:18">&lt;=</operator> <name pos:start="323:20" pos:end="323:40">MAX_DELAYED_PIC_COUNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="327:5" pos:end="327:33"><expr pos:start="327:5" pos:end="327:32"><name pos:start="327:5" pos:end="327:26"><name pos:start="327:5" pos:end="327:5">h</name><operator pos:start="327:6" pos:end="327:7">-&gt;</operator><name pos:start="327:8" pos:end="327:18">delayed_pic</name><index pos:start="327:19" pos:end="327:26">[<expr pos:start="327:20" pos:end="327:25"><name pos:start="327:20" pos:end="327:23">pics</name><operator pos:start="327:24" pos:end="327:25">++</operator></expr>]</index></name> <operator pos:start="327:28" pos:end="327:28">=</operator> <name pos:start="327:30" pos:end="327:32">cur</name></expr>;</expr_stmt>

    <if_stmt pos:start="329:5" pos:end="331:41"><if pos:start="329:5" pos:end="331:41">if <condition pos:start="329:8" pos:end="329:28">(<expr pos:start="329:9" pos:end="329:27"><name pos:start="329:9" pos:end="329:22"><name pos:start="329:9" pos:end="329:11">cur</name><operator pos:start="329:12" pos:end="329:13">-&gt;</operator><name pos:start="329:14" pos:end="329:22">reference</name></name> <operator pos:start="329:24" pos:end="329:25">==</operator> <literal type="number" pos:start="329:27" pos:end="329:27">0</literal></expr>)</condition><block type="pseudo" pos:start="331:9" pos:end="331:41"><block_content pos:start="331:9" pos:end="331:41">

        <expr_stmt pos:start="331:9" pos:end="331:41"><expr pos:start="331:9" pos:end="331:40"><name pos:start="331:9" pos:end="331:22"><name pos:start="331:9" pos:end="331:11">cur</name><operator pos:start="331:12" pos:end="331:13">-&gt;</operator><name pos:start="331:14" pos:end="331:22">reference</name></name> <operator pos:start="331:24" pos:end="331:24">=</operator> <name pos:start="331:26" pos:end="331:40">DELAYED_PIC_REF</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="335:5" pos:end="359:33">/* Frame reordering. This code takes pictures from coding order and sorts

     * them by their incremental POC value into display order. It supports POC

     * gaps, MMCO reset codes and random resets.

     * A "display group" can start either with a IDR frame (f.key_frame = 1),

     * and/or can be closed down with a MMCO reset code. In sequences where

     * there is no delay, we can't detect that (since the frame was already

     * output to the user), so we also set h-&gt;mmco_reset to detect the MMCO

     * reset code.

     * FIXME: if we detect insufficient delays (as per h-&gt;avctx-&gt;has_b_frames),

     * we increase the delay between input and output. All frames affected by

     * the lag (e.g. those that should have been output before another frame

     * that we already returned to the user) will be dropped. This is a bug

     * that we will fix later. */</comment>

    <for pos:start="361:5" pos:end="367:5">for <control pos:start="361:9" pos:end="361:47">(<init pos:start="361:10" pos:end="361:15"><expr pos:start="361:10" pos:end="361:14"><name pos:start="361:10" pos:end="361:10">i</name> <operator pos:start="361:12" pos:end="361:12">=</operator> <literal type="number" pos:start="361:14" pos:end="361:14">0</literal></expr>;</init> <condition pos:start="361:17" pos:end="361:42"><expr pos:start="361:17" pos:end="361:41"><name pos:start="361:17" pos:end="361:17">i</name> <operator pos:start="361:19" pos:end="361:19">&lt;</operator> <name pos:start="361:21" pos:end="361:41">MAX_DELAYED_PIC_COUNT</name></expr>;</condition> <incr pos:start="361:44" pos:end="361:46"><expr pos:start="361:44" pos:end="361:46"><name pos:start="361:44" pos:end="361:44">i</name><operator pos:start="361:45" pos:end="361:46">++</operator></expr></incr>)</control> <block pos:start="361:49" pos:end="367:5">{<block_content pos:start="363:9" pos:end="365:39">

        <expr_stmt pos:start="363:9" pos:end="363:46"><expr pos:start="363:9" pos:end="363:45"><name pos:start="363:9" pos:end="363:11">cnt</name>     <operator pos:start="363:17" pos:end="363:18">+=</operator> <name pos:start="363:20" pos:end="363:27"><name pos:start="363:20" pos:end="363:22">out</name><operator pos:start="363:23" pos:end="363:24">-&gt;</operator><name pos:start="363:25" pos:end="363:27">poc</name></name> <operator pos:start="363:29" pos:end="363:29">&lt;</operator> <name pos:start="363:31" pos:end="363:45"><name pos:start="363:31" pos:end="363:31">h</name><operator pos:start="363:32" pos:end="363:33">-&gt;</operator><name pos:start="363:34" pos:end="363:42">last_pocs</name><index pos:start="363:43" pos:end="363:45">[<expr pos:start="363:44" pos:end="363:44"><name pos:start="363:44" pos:end="363:44">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:39"><expr pos:start="365:9" pos:end="365:38"><name pos:start="365:9" pos:end="365:15">invalid</name> <operator pos:start="365:17" pos:end="365:18">+=</operator> <name pos:start="365:20" pos:end="365:27"><name pos:start="365:20" pos:end="365:22">out</name><operator pos:start="365:23" pos:end="365:24">-&gt;</operator><name pos:start="365:25" pos:end="365:27">poc</name></name> <operator pos:start="365:29" pos:end="365:30">==</operator> <name pos:start="365:32" pos:end="365:38">INT_MIN</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="369:5" pos:end="379:5"><if pos:start="369:5" pos:end="379:5">if <condition pos:start="369:8" pos:end="371:58">(<expr pos:start="369:9" pos:end="371:57"><operator pos:start="369:9" pos:end="369:9">!</operator><name pos:start="369:10" pos:end="369:22"><name pos:start="369:10" pos:end="369:10">h</name><operator pos:start="369:11" pos:end="369:12">-&gt;</operator><name pos:start="369:13" pos:end="369:22">mmco_reset</name></name> <operator pos:start="369:24" pos:end="369:25">&amp;&amp;</operator> <operator pos:start="369:27" pos:end="369:27">!</operator><name pos:start="369:28" pos:end="369:44"><name pos:start="369:28" pos:end="369:30">cur</name><operator pos:start="369:31" pos:end="369:32">-&gt;</operator><name pos:start="369:33" pos:end="369:33">f</name><operator pos:start="369:34" pos:end="369:35">-&gt;</operator><name pos:start="369:36" pos:end="369:44">key_frame</name></name> <operator pos:start="369:46" pos:end="369:47">&amp;&amp;</operator>

        <name pos:start="371:9" pos:end="371:11">cnt</name> <operator pos:start="371:13" pos:end="371:13">+</operator> <name pos:start="371:15" pos:end="371:21">invalid</name> <operator pos:start="371:23" pos:end="371:24">==</operator> <name pos:start="371:26" pos:end="371:46">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="371:48" pos:end="371:49">&amp;&amp;</operator> <name pos:start="371:51" pos:end="371:53">cnt</name> <operator pos:start="371:55" pos:end="371:55">&gt;</operator> <literal type="number" pos:start="371:57" pos:end="371:57">0</literal></expr>)</condition> <block pos:start="371:60" pos:end="379:5">{<block_content pos:start="373:9" pos:end="377:53">

        <expr_stmt pos:start="373:9" pos:end="373:26"><expr pos:start="373:9" pos:end="373:25"><name pos:start="373:9" pos:end="373:21"><name pos:start="373:9" pos:end="373:9">h</name><operator pos:start="373:10" pos:end="373:11">-&gt;</operator><name pos:start="373:12" pos:end="373:21">mmco_reset</name></name> <operator pos:start="373:23" pos:end="373:23">=</operator> <literal type="number" pos:start="373:25" pos:end="373:25">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="375:9" pos:end="377:53"><if pos:start="375:9" pos:end="377:53">if <condition pos:start="375:12" pos:end="375:21">(<expr pos:start="375:13" pos:end="375:20"><name pos:start="375:13" pos:end="375:16">pics</name> <operator pos:start="375:18" pos:end="375:18">&gt;</operator> <literal type="number" pos:start="375:20" pos:end="375:20">1</literal></expr>)</condition><block type="pseudo" pos:start="377:13" pos:end="377:53"><block_content pos:start="377:13" pos:end="377:53">

            <expr_stmt pos:start="377:13" pos:end="377:53"><expr pos:start="377:13" pos:end="377:52"><name pos:start="377:13" pos:end="377:36"><name pos:start="377:13" pos:end="377:13">h</name><operator pos:start="377:14" pos:end="377:15">-&gt;</operator><name pos:start="377:16" pos:end="377:26">delayed_pic</name><index pos:start="377:27" pos:end="377:36">[<expr pos:start="377:28" pos:end="377:35"><name pos:start="377:28" pos:end="377:31">pics</name> <operator pos:start="377:33" pos:end="377:33">-</operator> <literal type="number" pos:start="377:35" pos:end="377:35">2</literal></expr>]</index></name><operator pos:start="377:37" pos:end="377:38">-&gt;</operator><name pos:start="377:39" pos:end="377:48">mmco_reset</name> <operator pos:start="377:50" pos:end="377:50">=</operator> <literal type="number" pos:start="377:52" pos:end="377:52">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="381:5" pos:end="391:5"><if pos:start="381:5" pos:end="391:5">if <condition pos:start="381:8" pos:end="381:43">(<expr pos:start="381:9" pos:end="381:42"><name pos:start="381:9" pos:end="381:21"><name pos:start="381:9" pos:end="381:9">h</name><operator pos:start="381:10" pos:end="381:11">-&gt;</operator><name pos:start="381:12" pos:end="381:21">mmco_reset</name></name> <operator pos:start="381:23" pos:end="381:24">||</operator> <name pos:start="381:26" pos:end="381:42"><name pos:start="381:26" pos:end="381:28">cur</name><operator pos:start="381:29" pos:end="381:30">-&gt;</operator><name pos:start="381:31" pos:end="381:31">f</name><operator pos:start="381:32" pos:end="381:33">-&gt;</operator><name pos:start="381:34" pos:end="381:42">key_frame</name></name></expr>)</condition> <block pos:start="381:45" pos:end="391:5">{<block_content pos:start="383:9" pos:end="389:40">

        <for pos:start="383:9" pos:end="385:38">for <control pos:start="383:13" pos:end="383:51">(<init pos:start="383:14" pos:end="383:19"><expr pos:start="383:14" pos:end="383:18"><name pos:start="383:14" pos:end="383:14">i</name> <operator pos:start="383:16" pos:end="383:16">=</operator> <literal type="number" pos:start="383:18" pos:end="383:18">0</literal></expr>;</init> <condition pos:start="383:21" pos:end="383:46"><expr pos:start="383:21" pos:end="383:45"><name pos:start="383:21" pos:end="383:21">i</name> <operator pos:start="383:23" pos:end="383:23">&lt;</operator> <name pos:start="383:25" pos:end="383:45">MAX_DELAYED_PIC_COUNT</name></expr>;</condition> <incr pos:start="383:48" pos:end="383:50"><expr pos:start="383:48" pos:end="383:50"><name pos:start="383:48" pos:end="383:48">i</name><operator pos:start="383:49" pos:end="383:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="385:13" pos:end="385:38"><block_content pos:start="385:13" pos:end="385:38">

            <expr_stmt pos:start="385:13" pos:end="385:38"><expr pos:start="385:13" pos:end="385:37"><name pos:start="385:13" pos:end="385:27"><name pos:start="385:13" pos:end="385:13">h</name><operator pos:start="385:14" pos:end="385:15">-&gt;</operator><name pos:start="385:16" pos:end="385:24">last_pocs</name><index pos:start="385:25" pos:end="385:27">[<expr pos:start="385:26" pos:end="385:26"><name pos:start="385:26" pos:end="385:26">i</name></expr>]</index></name> <operator pos:start="385:29" pos:end="385:29">=</operator> <name pos:start="385:31" pos:end="385:37">INT_MIN</name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="387:9" pos:end="387:20"><expr pos:start="387:9" pos:end="387:19"><name pos:start="387:9" pos:end="387:11">cnt</name>     <operator pos:start="387:17" pos:end="387:17">=</operator> <literal type="number" pos:start="387:19" pos:end="387:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="389:9" pos:end="389:40"><expr pos:start="389:9" pos:end="389:39"><name pos:start="389:9" pos:end="389:15">invalid</name> <operator pos:start="389:17" pos:end="389:17">=</operator> <name pos:start="389:19" pos:end="389:39">MAX_DELAYED_PIC_COUNT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="393:5" pos:end="393:32"><expr pos:start="393:5" pos:end="393:31"><name pos:start="393:5" pos:end="393:7">out</name>     <operator pos:start="393:13" pos:end="393:13">=</operator> <name pos:start="393:15" pos:end="393:31"><name pos:start="393:15" pos:end="393:15">h</name><operator pos:start="393:16" pos:end="393:17">-&gt;</operator><name pos:start="393:18" pos:end="393:28">delayed_pic</name><index pos:start="393:29" pos:end="393:31">[<expr pos:start="393:30" pos:end="393:30"><literal type="number" pos:start="393:30" pos:end="393:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="395:5" pos:end="395:16"><expr pos:start="395:5" pos:end="395:15"><name pos:start="395:5" pos:end="395:11">out_idx</name> <operator pos:start="395:13" pos:end="395:13">=</operator> <literal type="number" pos:start="395:15" pos:end="395:15">0</literal></expr>;</expr_stmt>

    <for pos:start="397:5" pos:end="413:9">for <control pos:start="397:9" pos:end="405:13">(<init pos:start="397:10" pos:end="397:15"><expr pos:start="397:10" pos:end="397:14"><name pos:start="397:10" pos:end="397:10">i</name> <operator pos:start="397:12" pos:end="397:12">=</operator> <literal type="number" pos:start="397:14" pos:end="397:14">1</literal></expr>;</init> <condition pos:start="397:17" pos:end="403:49"><expr pos:start="397:17" pos:end="403:48"><name pos:start="397:17" pos:end="397:17">i</name> <operator pos:start="397:19" pos:end="397:19">&lt;</operator> <name pos:start="397:21" pos:end="397:41">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="397:43" pos:end="397:44">&amp;&amp;</operator>

                <name pos:start="399:17" pos:end="399:33"><name pos:start="399:17" pos:end="399:17">h</name><operator pos:start="399:18" pos:end="399:19">-&gt;</operator><name pos:start="399:20" pos:end="399:30">delayed_pic</name><index pos:start="399:31" pos:end="399:33">[<expr pos:start="399:32" pos:end="399:32"><name pos:start="399:32" pos:end="399:32">i</name></expr>]</index></name> <operator pos:start="399:35" pos:end="399:36">&amp;&amp;</operator>

                <operator pos:start="401:17" pos:end="401:17">!</operator><name pos:start="401:18" pos:end="401:38"><name pos:start="401:18" pos:end="401:18">h</name><operator pos:start="401:19" pos:end="401:20">-&gt;</operator><name pos:start="401:21" pos:end="401:31">delayed_pic</name><index pos:start="401:32" pos:end="401:38">[<expr pos:start="401:33" pos:end="401:37"><name pos:start="401:33" pos:end="401:33">i</name> <operator pos:start="401:35" pos:end="401:35">-</operator> <literal type="number" pos:start="401:37" pos:end="401:37">1</literal></expr>]</index></name><operator pos:start="401:39" pos:end="401:40">-&gt;</operator><name pos:start="401:41" pos:end="401:50">mmco_reset</name> <operator pos:start="401:52" pos:end="401:53">&amp;&amp;</operator>

                <operator pos:start="403:17" pos:end="403:17">!</operator><name pos:start="403:18" pos:end="403:34"><name pos:start="403:18" pos:end="403:18">h</name><operator pos:start="403:19" pos:end="403:20">-&gt;</operator><name pos:start="403:21" pos:end="403:31">delayed_pic</name><index pos:start="403:32" pos:end="403:34">[<expr pos:start="403:33" pos:end="403:33"><name pos:start="403:33" pos:end="403:33">i</name></expr>]</index></name><operator pos:start="403:35" pos:end="403:36">-&gt;</operator><name pos:start="403:37" pos:end="403:48"><name pos:start="403:37" pos:end="403:37">f</name><operator pos:start="403:38" pos:end="403:39">-&gt;</operator><name pos:start="403:40" pos:end="403:48">key_frame</name></name></expr>;</condition>

         <incr pos:start="405:10" pos:end="405:12"><expr pos:start="405:10" pos:end="405:12"><name pos:start="405:10" pos:end="405:10">i</name><operator pos:start="405:11" pos:end="405:12">++</operator></expr></incr>)</control><block type="pseudo" pos:start="407:9" pos:end="413:9"><block_content pos:start="407:9" pos:end="413:9">

        <if_stmt pos:start="407:9" pos:end="413:9"><if pos:start="407:9" pos:end="413:9">if <condition pos:start="407:12" pos:end="407:46">(<expr pos:start="407:13" pos:end="407:45"><name pos:start="407:13" pos:end="407:29"><name pos:start="407:13" pos:end="407:13">h</name><operator pos:start="407:14" pos:end="407:15">-&gt;</operator><name pos:start="407:16" pos:end="407:26">delayed_pic</name><index pos:start="407:27" pos:end="407:29">[<expr pos:start="407:28" pos:end="407:28"><name pos:start="407:28" pos:end="407:28">i</name></expr>]</index></name><operator pos:start="407:30" pos:end="407:31">-&gt;</operator><name pos:start="407:32" pos:end="407:34">poc</name> <operator pos:start="407:36" pos:end="407:36">&lt;</operator> <name pos:start="407:38" pos:end="407:45"><name pos:start="407:38" pos:end="407:40">out</name><operator pos:start="407:41" pos:end="407:42">-&gt;</operator><name pos:start="407:43" pos:end="407:45">poc</name></name></expr>)</condition> <block pos:start="407:48" pos:end="413:9">{<block_content pos:start="409:13" pos:end="411:24">

            <expr_stmt pos:start="409:13" pos:end="409:40"><expr pos:start="409:13" pos:end="409:39"><name pos:start="409:13" pos:end="409:15">out</name>     <operator pos:start="409:21" pos:end="409:21">=</operator> <name pos:start="409:23" pos:end="409:39"><name pos:start="409:23" pos:end="409:23">h</name><operator pos:start="409:24" pos:end="409:25">-&gt;</operator><name pos:start="409:26" pos:end="409:36">delayed_pic</name><index pos:start="409:37" pos:end="409:39">[<expr pos:start="409:38" pos:end="409:38"><name pos:start="409:38" pos:end="409:38">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="411:13" pos:end="411:24"><expr pos:start="411:13" pos:end="411:23"><name pos:start="411:13" pos:end="411:19">out_idx</name> <operator pos:start="411:21" pos:end="411:21">=</operator> <name pos:start="411:23" pos:end="411:23">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="415:5" pos:end="419:39"><if pos:start="415:5" pos:end="419:39">if <condition pos:start="415:8" pos:end="417:59">(<expr pos:start="415:9" pos:end="417:58"><name pos:start="415:9" pos:end="415:30"><name pos:start="415:9" pos:end="415:9">h</name><operator pos:start="415:10" pos:end="415:11">-&gt;</operator><name pos:start="415:12" pos:end="415:16">avctx</name><operator pos:start="415:17" pos:end="415:18">-&gt;</operator><name pos:start="415:19" pos:end="415:30">has_b_frames</name></name> <operator pos:start="415:32" pos:end="415:33">==</operator> <literal type="number" pos:start="415:35" pos:end="415:35">0</literal> <operator pos:start="415:37" pos:end="415:38">&amp;&amp;</operator>

        <operator pos:start="417:9" pos:end="417:9">(</operator><name pos:start="417:10" pos:end="417:26"><name pos:start="417:10" pos:end="417:10">h</name><operator pos:start="417:11" pos:end="417:12">-&gt;</operator><name pos:start="417:13" pos:end="417:23">delayed_pic</name><index pos:start="417:24" pos:end="417:26">[<expr pos:start="417:25" pos:end="417:25"><literal type="number" pos:start="417:25" pos:end="417:25">0</literal></expr>]</index></name><operator pos:start="417:27" pos:end="417:28">-&gt;</operator><name pos:start="417:29" pos:end="417:40"><name pos:start="417:29" pos:end="417:29">f</name><operator pos:start="417:30" pos:end="417:31">-&gt;</operator><name pos:start="417:32" pos:end="417:40">key_frame</name></name> <operator pos:start="417:42" pos:end="417:43">||</operator> <name pos:start="417:45" pos:end="417:57"><name pos:start="417:45" pos:end="417:45">h</name><operator pos:start="417:46" pos:end="417:47">-&gt;</operator><name pos:start="417:48" pos:end="417:57">mmco_reset</name></name><operator pos:start="417:58" pos:end="417:58">)</operator></expr>)</condition><block type="pseudo" pos:start="419:9" pos:end="419:39"><block_content pos:start="419:9" pos:end="419:39">

        <expr_stmt pos:start="419:9" pos:end="419:39"><expr pos:start="419:9" pos:end="419:38"><name pos:start="419:9" pos:end="419:28"><name pos:start="419:9" pos:end="419:9">h</name><operator pos:start="419:10" pos:end="419:11">-&gt;</operator><name pos:start="419:12" pos:end="419:28">next_outputed_poc</name></name> <operator pos:start="419:30" pos:end="419:30">=</operator> <name pos:start="419:32" pos:end="419:38">INT_MIN</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="421:5" pos:end="423:53"><expr pos:start="421:5" pos:end="423:52"><name pos:start="421:5" pos:end="421:16">out_of_order</name> <operator pos:start="421:18" pos:end="421:18">=</operator> <operator pos:start="421:20" pos:end="421:20">!</operator><name pos:start="421:21" pos:end="421:37"><name pos:start="421:21" pos:end="421:23">out</name><operator pos:start="421:24" pos:end="421:25">-&gt;</operator><name pos:start="421:26" pos:end="421:26">f</name><operator pos:start="421:27" pos:end="421:28">-&gt;</operator><name pos:start="421:29" pos:end="421:37">key_frame</name></name> <operator pos:start="421:39" pos:end="421:40">&amp;&amp;</operator> <operator pos:start="421:42" pos:end="421:42">!</operator><name pos:start="421:43" pos:end="421:55"><name pos:start="421:43" pos:end="421:43">h</name><operator pos:start="421:44" pos:end="421:45">-&gt;</operator><name pos:start="421:46" pos:end="421:55">mmco_reset</name></name> <operator pos:start="421:57" pos:end="421:58">&amp;&amp;</operator>

                   <operator pos:start="423:20" pos:end="423:20">(</operator><name pos:start="423:21" pos:end="423:28"><name pos:start="423:21" pos:end="423:23">out</name><operator pos:start="423:24" pos:end="423:25">-&gt;</operator><name pos:start="423:26" pos:end="423:28">poc</name></name> <operator pos:start="423:30" pos:end="423:30">&lt;</operator> <name pos:start="423:32" pos:end="423:51"><name pos:start="423:32" pos:end="423:32">h</name><operator pos:start="423:33" pos:end="423:34">-&gt;</operator><name pos:start="423:35" pos:end="423:51">next_outputed_poc</name></name><operator pos:start="423:52" pos:end="423:52">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="427:5" pos:end="455:5"><if pos:start="427:5" pos:end="431:5">if <condition pos:start="427:8" pos:end="429:60">(<expr pos:start="427:9" pos:end="429:59"><name pos:start="427:9" pos:end="427:41"><name pos:start="427:9" pos:end="427:9">h</name><operator pos:start="427:10" pos:end="427:11">-&gt;</operator><name pos:start="427:12" pos:end="427:14">sps</name><operator pos:start="427:15" pos:end="427:15">.</operator><name pos:start="427:16" pos:end="427:41">bitstream_restriction_flag</name></name> <operator pos:start="427:43" pos:end="427:44">&amp;&amp;</operator>

        <name pos:start="429:9" pos:end="429:30"><name pos:start="429:9" pos:end="429:9">h</name><operator pos:start="429:10" pos:end="429:11">-&gt;</operator><name pos:start="429:12" pos:end="429:16">avctx</name><operator pos:start="429:17" pos:end="429:18">-&gt;</operator><name pos:start="429:19" pos:end="429:30">has_b_frames</name></name> <operator pos:start="429:32" pos:end="429:33">&gt;=</operator> <name pos:start="429:35" pos:end="429:59"><name pos:start="429:35" pos:end="429:35">h</name><operator pos:start="429:36" pos:end="429:37">-&gt;</operator><name pos:start="429:38" pos:end="429:40">sps</name><operator pos:start="429:41" pos:end="429:41">.</operator><name pos:start="429:42" pos:end="429:59">num_reorder_frames</name></name></expr>)</condition> <block pos:start="429:62" pos:end="431:5">{<block_content>

    </block_content>}</block></if> <if type="elseif" pos:start="431:7" pos:end="443:5">else if <condition pos:start="431:15" pos:end="433:62">(<expr pos:start="431:16" pos:end="433:61"><name pos:start="431:16" pos:end="431:27">out_of_order</name> <operator pos:start="431:29" pos:end="431:30">&amp;&amp;</operator> <name pos:start="431:32" pos:end="431:35">pics</name> <operator pos:start="431:37" pos:end="431:37">-</operator> <literal type="number" pos:start="431:39" pos:end="431:39">1</literal> <operator pos:start="431:41" pos:end="431:42">==</operator> <name pos:start="431:44" pos:end="431:65"><name pos:start="431:44" pos:end="431:44">h</name><operator pos:start="431:45" pos:end="431:46">-&gt;</operator><name pos:start="431:47" pos:end="431:51">avctx</name><operator pos:start="431:52" pos:end="431:53">-&gt;</operator><name pos:start="431:54" pos:end="431:65">has_b_frames</name></name> <operator pos:start="431:67" pos:end="431:68">&amp;&amp;</operator>

               <name pos:start="433:16" pos:end="433:37"><name pos:start="433:16" pos:end="433:16">h</name><operator pos:start="433:17" pos:end="433:18">-&gt;</operator><name pos:start="433:19" pos:end="433:23">avctx</name><operator pos:start="433:24" pos:end="433:25">-&gt;</operator><name pos:start="433:26" pos:end="433:37">has_b_frames</name></name> <operator pos:start="433:39" pos:end="433:39">&lt;</operator> <name pos:start="433:41" pos:end="433:61">MAX_DELAYED_PIC_COUNT</name></expr>)</condition> <block pos:start="433:64" pos:end="443:5">{<block_content pos:start="435:9" pos:end="441:25">

        <if_stmt pos:start="435:9" pos:end="439:9"><if pos:start="435:9" pos:end="439:9">if <condition pos:start="435:12" pos:end="435:50">(<expr pos:start="435:13" pos:end="435:49"><name pos:start="435:13" pos:end="435:19">invalid</name> <operator pos:start="435:21" pos:end="435:21">+</operator> <name pos:start="435:23" pos:end="435:25">cnt</name> <operator pos:start="435:27" pos:end="435:27">&lt;</operator> <name pos:start="435:29" pos:end="435:49">MAX_DELAYED_PIC_COUNT</name></expr>)</condition> <block pos:start="435:52" pos:end="439:9">{<block_content pos:start="437:13" pos:end="437:72">

            <expr_stmt pos:start="437:13" pos:end="437:72"><expr pos:start="437:13" pos:end="437:71"><name pos:start="437:13" pos:end="437:34"><name pos:start="437:13" pos:end="437:13">h</name><operator pos:start="437:14" pos:end="437:15">-&gt;</operator><name pos:start="437:16" pos:end="437:20">avctx</name><operator pos:start="437:21" pos:end="437:22">-&gt;</operator><name pos:start="437:23" pos:end="437:34">has_b_frames</name></name> <operator pos:start="437:36" pos:end="437:36">=</operator> <call pos:start="437:38" pos:end="437:71"><name pos:start="437:38" pos:end="437:42">FFMAX</name><argument_list pos:start="437:43" pos:end="437:71">(<argument pos:start="437:44" pos:end="437:65"><expr pos:start="437:44" pos:end="437:65"><name pos:start="437:44" pos:end="437:65"><name pos:start="437:44" pos:end="437:44">h</name><operator pos:start="437:45" pos:end="437:46">-&gt;</operator><name pos:start="437:47" pos:end="437:51">avctx</name><operator pos:start="437:52" pos:end="437:53">-&gt;</operator><name pos:start="437:54" pos:end="437:65">has_b_frames</name></name></expr></argument>, <argument pos:start="437:68" pos:end="437:70"><expr pos:start="437:68" pos:end="437:70"><name pos:start="437:68" pos:end="437:70">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="441:9" pos:end="441:25"><expr pos:start="441:9" pos:end="441:24"><name pos:start="441:9" pos:end="441:20"><name pos:start="441:9" pos:end="441:9">h</name><operator pos:start="441:10" pos:end="441:11">-&gt;</operator><name pos:start="441:12" pos:end="441:20">low_delay</name></name> <operator pos:start="441:22" pos:end="441:22">=</operator> <literal type="number" pos:start="441:24" pos:end="441:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="443:7" pos:end="455:5">else if <condition pos:start="443:15" pos:end="449:56">(<expr pos:start="443:16" pos:end="449:55"><name pos:start="443:16" pos:end="443:27"><name pos:start="443:16" pos:end="443:16">h</name><operator pos:start="443:17" pos:end="443:18">-&gt;</operator><name pos:start="443:19" pos:end="443:27">low_delay</name></name> <operator pos:start="443:29" pos:end="443:30">&amp;&amp;</operator>

               <operator pos:start="445:16" pos:end="445:16">(</operator><operator pos:start="445:17" pos:end="445:17">(</operator><name pos:start="445:18" pos:end="445:37"><name pos:start="445:18" pos:end="445:18">h</name><operator pos:start="445:19" pos:end="445:20">-&gt;</operator><name pos:start="445:21" pos:end="445:37">next_outputed_poc</name></name> <operator pos:start="445:39" pos:end="445:40">!=</operator> <name pos:start="445:42" pos:end="445:48">INT_MIN</name> <operator pos:start="445:50" pos:end="445:51">&amp;&amp;</operator>

                 <name pos:start="447:18" pos:end="447:25"><name pos:start="447:18" pos:end="447:20">out</name><operator pos:start="447:21" pos:end="447:22">-&gt;</operator><name pos:start="447:23" pos:end="447:25">poc</name></name> <operator pos:start="447:27" pos:end="447:27">&gt;</operator> <name pos:start="447:29" pos:end="447:48"><name pos:start="447:29" pos:end="447:29">h</name><operator pos:start="447:30" pos:end="447:31">-&gt;</operator><name pos:start="447:32" pos:end="447:48">next_outputed_poc</name></name> <operator pos:start="447:50" pos:end="447:50">+</operator> <literal type="number" pos:start="447:52" pos:end="447:52">2</literal><operator pos:start="447:53" pos:end="447:53">)</operator> <operator pos:start="447:55" pos:end="447:56">||</operator>

                <name pos:start="449:17" pos:end="449:33"><name pos:start="449:17" pos:end="449:19">cur</name><operator pos:start="449:20" pos:end="449:21">-&gt;</operator><name pos:start="449:22" pos:end="449:22">f</name><operator pos:start="449:23" pos:end="449:24">-&gt;</operator><name pos:start="449:25" pos:end="449:33">pict_type</name></name> <operator pos:start="449:35" pos:end="449:36">==</operator> <name pos:start="449:38" pos:end="449:54">AV_PICTURE_TYPE_B</name><operator pos:start="449:55" pos:end="449:55">)</operator></expr>)</condition> <block pos:start="449:58" pos:end="455:5">{<block_content pos:start="451:9" pos:end="453:33">

        <expr_stmt pos:start="451:9" pos:end="451:25"><expr pos:start="451:9" pos:end="451:24"><name pos:start="451:9" pos:end="451:20"><name pos:start="451:9" pos:end="451:9">h</name><operator pos:start="451:10" pos:end="451:11">-&gt;</operator><name pos:start="451:12" pos:end="451:20">low_delay</name></name> <operator pos:start="451:22" pos:end="451:22">=</operator> <literal type="number" pos:start="451:24" pos:end="451:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="453:9" pos:end="453:33"><expr pos:start="453:9" pos:end="453:32"><name pos:start="453:9" pos:end="453:30"><name pos:start="453:9" pos:end="453:9">h</name><operator pos:start="453:10" pos:end="453:11">-&gt;</operator><name pos:start="453:12" pos:end="453:16">avctx</name><operator pos:start="453:17" pos:end="453:18">-&gt;</operator><name pos:start="453:19" pos:end="453:30">has_b_frames</name></name><operator pos:start="453:31" pos:end="453:32">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="459:5" pos:end="471:5"><if pos:start="459:5" pos:end="471:5">if <condition pos:start="459:8" pos:end="459:38">(<expr pos:start="459:9" pos:end="459:37"><name pos:start="459:9" pos:end="459:12">pics</name> <operator pos:start="459:14" pos:end="459:14">&gt;</operator> <name pos:start="459:16" pos:end="459:37"><name pos:start="459:16" pos:end="459:16">h</name><operator pos:start="459:17" pos:end="459:18">-&gt;</operator><name pos:start="459:19" pos:end="459:23">avctx</name><operator pos:start="459:24" pos:end="459:25">-&gt;</operator><name pos:start="459:26" pos:end="459:37">has_b_frames</name></name></expr>)</condition> <block pos:start="459:40" pos:end="471:5">{<block_content pos:start="461:9" pos:end="469:54">

        <expr_stmt pos:start="461:9" pos:end="461:43"><expr pos:start="461:9" pos:end="461:42"><name pos:start="461:9" pos:end="461:22"><name pos:start="461:9" pos:end="461:11">out</name><operator pos:start="461:12" pos:end="461:13">-&gt;</operator><name pos:start="461:14" pos:end="461:22">reference</name></name> <operator pos:start="461:24" pos:end="461:25">&amp;=</operator> <operator pos:start="461:27" pos:end="461:27">~</operator><name pos:start="461:28" pos:end="461:42">DELAYED_PIC_REF</name></expr>;</expr_stmt>

        <comment type="line" pos:start="463:9" pos:end="463:78">// for frame threading, the owner must be the second field's thread or</comment>

        <comment type="line" pos:start="465:9" pos:end="465:78">// else the first thread can release the picture and reuse it unsafely</comment>

        <for pos:start="467:9" pos:end="469:54">for <control pos:start="467:13" pos:end="467:49">(<init pos:start="467:14" pos:end="467:25"><expr pos:start="467:14" pos:end="467:24"><name pos:start="467:14" pos:end="467:14">i</name> <operator pos:start="467:16" pos:end="467:16">=</operator> <name pos:start="467:18" pos:end="467:24">out_idx</name></expr>;</init> <condition pos:start="467:27" pos:end="467:44"><expr pos:start="467:27" pos:end="467:43"><name pos:start="467:27" pos:end="467:43"><name pos:start="467:27" pos:end="467:27">h</name><operator pos:start="467:28" pos:end="467:29">-&gt;</operator><name pos:start="467:30" pos:end="467:40">delayed_pic</name><index pos:start="467:41" pos:end="467:43">[<expr pos:start="467:42" pos:end="467:42"><name pos:start="467:42" pos:end="467:42">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="467:46" pos:end="467:48"><expr pos:start="467:46" pos:end="467:48"><name pos:start="467:46" pos:end="467:46">i</name><operator pos:start="467:47" pos:end="467:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="469:13" pos:end="469:54"><block_content pos:start="469:13" pos:end="469:54">

            <expr_stmt pos:start="469:13" pos:end="469:54"><expr pos:start="469:13" pos:end="469:53"><name pos:start="469:13" pos:end="469:29"><name pos:start="469:13" pos:end="469:13">h</name><operator pos:start="469:14" pos:end="469:15">-&gt;</operator><name pos:start="469:16" pos:end="469:26">delayed_pic</name><index pos:start="469:27" pos:end="469:29">[<expr pos:start="469:28" pos:end="469:28"><name pos:start="469:28" pos:end="469:28">i</name></expr>]</index></name> <operator pos:start="469:31" pos:end="469:31">=</operator> <name pos:start="469:33" pos:end="469:53"><name pos:start="469:33" pos:end="469:33">h</name><operator pos:start="469:34" pos:end="469:35">-&gt;</operator><name pos:start="469:36" pos:end="469:46">delayed_pic</name><index pos:start="469:47" pos:end="469:53">[<expr pos:start="469:48" pos:end="469:52"><name pos:start="469:48" pos:end="469:48">i</name> <operator pos:start="469:50" pos:end="469:50">+</operator> <literal type="number" pos:start="469:52" pos:end="469:52">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="473:5" pos:end="475:65"><expr pos:start="473:5" pos:end="475:64"><call pos:start="473:5" pos:end="475:64"><name pos:start="473:5" pos:end="473:11">memmove</name><argument_list pos:start="473:12" pos:end="475:64">(<argument pos:start="473:13" pos:end="473:24"><expr pos:start="473:13" pos:end="473:24"><name pos:start="473:13" pos:end="473:24"><name pos:start="473:13" pos:end="473:13">h</name><operator pos:start="473:14" pos:end="473:15">-&gt;</operator><name pos:start="473:16" pos:end="473:24">last_pocs</name></name></expr></argument>, <argument pos:start="473:27" pos:end="473:42"><expr pos:start="473:27" pos:end="473:42"><operator pos:start="473:27" pos:end="473:27">&amp;</operator><name pos:start="473:28" pos:end="473:42"><name pos:start="473:28" pos:end="473:28">h</name><operator pos:start="473:29" pos:end="473:30">-&gt;</operator><name pos:start="473:31" pos:end="473:39">last_pocs</name><index pos:start="473:40" pos:end="473:42">[<expr pos:start="473:41" pos:end="473:41"><literal type="number" pos:start="473:41" pos:end="473:41">1</literal></expr>]</index></name></expr></argument>,

            <argument pos:start="475:13" pos:end="475:63"><expr pos:start="475:13" pos:end="475:63"><sizeof pos:start="475:13" pos:end="475:33">sizeof<argument_list pos:start="475:19" pos:end="475:33">(<argument pos:start="475:20" pos:end="475:32"><expr pos:start="475:20" pos:end="475:32"><operator pos:start="475:20" pos:end="475:20">*</operator><name pos:start="475:21" pos:end="475:32"><name pos:start="475:21" pos:end="475:21">h</name><operator pos:start="475:22" pos:end="475:23">-&gt;</operator><name pos:start="475:24" pos:end="475:32">last_pocs</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="475:35" pos:end="475:35">*</operator> <operator pos:start="475:37" pos:end="475:37">(</operator><name pos:start="475:38" pos:end="475:58">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="475:60" pos:end="475:60">-</operator> <literal type="number" pos:start="475:62" pos:end="475:62">1</literal><operator pos:start="475:63" pos:end="475:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="477:5" pos:end="477:55"><expr pos:start="477:5" pos:end="477:54"><name pos:start="477:5" pos:end="477:43"><name pos:start="477:5" pos:end="477:5">h</name><operator pos:start="477:6" pos:end="477:7">-&gt;</operator><name pos:start="477:8" pos:end="477:16">last_pocs</name><index pos:start="477:17" pos:end="477:43">[<expr pos:start="477:18" pos:end="477:42"><name pos:start="477:18" pos:end="477:38">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="477:40" pos:end="477:40">-</operator> <literal type="number" pos:start="477:42" pos:end="477:42">1</literal></expr>]</index></name> <operator pos:start="477:45" pos:end="477:45">=</operator> <name pos:start="477:47" pos:end="477:54"><name pos:start="477:47" pos:end="477:49">cur</name><operator pos:start="477:50" pos:end="477:51">-&gt;</operator><name pos:start="477:52" pos:end="477:54">poc</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="479:5" pos:end="517:5"><if pos:start="479:5" pos:end="513:5">if <condition pos:start="479:8" pos:end="479:55">(<expr pos:start="479:9" pos:end="479:54"><operator pos:start="479:9" pos:end="479:9">!</operator><name pos:start="479:10" pos:end="479:21">out_of_order</name> <operator pos:start="479:23" pos:end="479:24">&amp;&amp;</operator> <name pos:start="479:26" pos:end="479:29">pics</name> <operator pos:start="479:31" pos:end="479:31">&gt;</operator> <name pos:start="479:33" pos:end="479:54"><name pos:start="479:33" pos:end="479:33">h</name><operator pos:start="479:34" pos:end="479:35">-&gt;</operator><name pos:start="479:36" pos:end="479:40">avctx</name><operator pos:start="479:41" pos:end="479:42">-&gt;</operator><name pos:start="479:43" pos:end="479:54">has_b_frames</name></name></expr>)</condition> <block pos:start="479:57" pos:end="513:5">{<block_content pos:start="481:9" pos:end="511:26">

        <expr_stmt pos:start="481:9" pos:end="481:33"><expr pos:start="481:9" pos:end="481:32"><name pos:start="481:9" pos:end="481:26"><name pos:start="481:9" pos:end="481:9">h</name><operator pos:start="481:10" pos:end="481:11">-&gt;</operator><name pos:start="481:12" pos:end="481:26">next_output_pic</name></name> <operator pos:start="481:28" pos:end="481:28">=</operator> <name pos:start="481:30" pos:end="481:32">out</name></expr>;</expr_stmt>

        <if_stmt pos:start="483:9" pos:end="509:9"><if pos:start="483:9" pos:end="497:9">if <condition pos:start="483:12" pos:end="483:28">(<expr pos:start="483:13" pos:end="483:27"><name pos:start="483:13" pos:end="483:27"><name pos:start="483:13" pos:end="483:15">out</name><operator pos:start="483:16" pos:end="483:17">-&gt;</operator><name pos:start="483:18" pos:end="483:27">mmco_reset</name></name></expr>)</condition> <block pos:start="483:30" pos:end="497:9">{<block_content pos:start="485:13" pos:end="495:13">

            <if_stmt pos:start="485:13" pos:end="495:13"><if pos:start="485:13" pos:end="491:13">if <condition pos:start="485:16" pos:end="485:28">(<expr pos:start="485:17" pos:end="485:27"><name pos:start="485:17" pos:end="485:23">out_idx</name> <operator pos:start="485:25" pos:end="485:25">&gt;</operator> <literal type="number" pos:start="485:27" pos:end="485:27">0</literal></expr>)</condition> <block pos:start="485:30" pos:end="491:13">{<block_content pos:start="487:17" pos:end="489:74">

                <expr_stmt pos:start="487:17" pos:end="487:67"><expr pos:start="487:17" pos:end="487:66"><name pos:start="487:17" pos:end="487:36"><name pos:start="487:17" pos:end="487:17">h</name><operator pos:start="487:18" pos:end="487:19">-&gt;</operator><name pos:start="487:20" pos:end="487:36">next_outputed_poc</name></name>                    <operator pos:start="487:57" pos:end="487:57">=</operator> <name pos:start="487:59" pos:end="487:66"><name pos:start="487:59" pos:end="487:61">out</name><operator pos:start="487:62" pos:end="487:63">-&gt;</operator><name pos:start="487:64" pos:end="487:66">poc</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="489:17" pos:end="489:74"><expr pos:start="489:17" pos:end="489:73"><name pos:start="489:17" pos:end="489:43"><name pos:start="489:17" pos:end="489:17">h</name><operator pos:start="489:18" pos:end="489:19">-&gt;</operator><name pos:start="489:20" pos:end="489:30">delayed_pic</name><index pos:start="489:31" pos:end="489:43">[<expr pos:start="489:32" pos:end="489:42"><name pos:start="489:32" pos:end="489:38">out_idx</name> <operator pos:start="489:40" pos:end="489:40">-</operator> <literal type="number" pos:start="489:42" pos:end="489:42">1</literal></expr>]</index></name><operator pos:start="489:44" pos:end="489:45">-&gt;</operator><name pos:start="489:46" pos:end="489:55">mmco_reset</name> <operator pos:start="489:57" pos:end="489:57">=</operator> <name pos:start="489:59" pos:end="489:73"><name pos:start="489:59" pos:end="489:61">out</name><operator pos:start="489:62" pos:end="489:63">-&gt;</operator><name pos:start="489:64" pos:end="489:73">mmco_reset</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="491:15" pos:end="495:13">else <block pos:start="491:20" pos:end="495:13">{<block_content pos:start="493:17" pos:end="493:47">

                <expr_stmt pos:start="493:17" pos:end="493:47"><expr pos:start="493:17" pos:end="493:46"><name pos:start="493:17" pos:end="493:36"><name pos:start="493:17" pos:end="493:17">h</name><operator pos:start="493:18" pos:end="493:19">-&gt;</operator><name pos:start="493:20" pos:end="493:36">next_outputed_poc</name></name> <operator pos:start="493:38" pos:end="493:38">=</operator> <name pos:start="493:40" pos:end="493:46">INT_MIN</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="497:11" pos:end="509:9">else <block pos:start="497:16" pos:end="509:9">{<block_content pos:start="499:13" pos:end="507:13">

            <if_stmt pos:start="499:13" pos:end="507:13"><if pos:start="499:13" pos:end="503:13">if <condition pos:start="499:16" pos:end="499:76">(<expr pos:start="499:17" pos:end="499:75"><name pos:start="499:17" pos:end="499:23">out_idx</name> <operator pos:start="499:25" pos:end="499:26">==</operator> <literal type="number" pos:start="499:28" pos:end="499:28">0</literal> <operator pos:start="499:30" pos:end="499:31">&amp;&amp;</operator> <name pos:start="499:33" pos:end="499:36">pics</name> <operator pos:start="499:38" pos:end="499:38">&gt;</operator> <literal type="number" pos:start="499:40" pos:end="499:40">1</literal> <operator pos:start="499:42" pos:end="499:43">&amp;&amp;</operator> <name pos:start="499:45" pos:end="499:61"><name pos:start="499:45" pos:end="499:45">h</name><operator pos:start="499:46" pos:end="499:47">-&gt;</operator><name pos:start="499:48" pos:end="499:58">delayed_pic</name><index pos:start="499:59" pos:end="499:61">[<expr pos:start="499:60" pos:end="499:60"><literal type="number" pos:start="499:60" pos:end="499:60">0</literal></expr>]</index></name><operator pos:start="499:62" pos:end="499:63">-&gt;</operator><name pos:start="499:64" pos:end="499:75"><name pos:start="499:64" pos:end="499:64">f</name><operator pos:start="499:65" pos:end="499:66">-&gt;</operator><name pos:start="499:67" pos:end="499:75">key_frame</name></name></expr>)</condition> <block pos:start="499:78" pos:end="503:13">{<block_content pos:start="501:17" pos:end="501:47">

                <expr_stmt pos:start="501:17" pos:end="501:47"><expr pos:start="501:17" pos:end="501:46"><name pos:start="501:17" pos:end="501:36"><name pos:start="501:17" pos:end="501:17">h</name><operator pos:start="501:18" pos:end="501:19">-&gt;</operator><name pos:start="501:20" pos:end="501:36">next_outputed_poc</name></name> <operator pos:start="501:38" pos:end="501:38">=</operator> <name pos:start="501:40" pos:end="501:46">INT_MIN</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="503:15" pos:end="507:13">else <block pos:start="503:20" pos:end="507:13">{<block_content pos:start="505:17" pos:end="505:48">

                <expr_stmt pos:start="505:17" pos:end="505:48"><expr pos:start="505:17" pos:end="505:47"><name pos:start="505:17" pos:end="505:36"><name pos:start="505:17" pos:end="505:17">h</name><operator pos:start="505:18" pos:end="505:19">-&gt;</operator><name pos:start="505:20" pos:end="505:36">next_outputed_poc</name></name> <operator pos:start="505:38" pos:end="505:38">=</operator> <name pos:start="505:40" pos:end="505:47"><name pos:start="505:40" pos:end="505:42">out</name><operator pos:start="505:43" pos:end="505:44">-&gt;</operator><name pos:start="505:45" pos:end="505:47">poc</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="511:9" pos:end="511:26"><expr pos:start="511:9" pos:end="511:25"><name pos:start="511:9" pos:end="511:21"><name pos:start="511:9" pos:end="511:9">h</name><operator pos:start="511:10" pos:end="511:11">-&gt;</operator><name pos:start="511:12" pos:end="511:21">mmco_reset</name></name> <operator pos:start="511:23" pos:end="511:23">=</operator> <literal type="number" pos:start="511:25" pos:end="511:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="513:7" pos:end="517:5">else <block pos:start="513:12" pos:end="517:5">{<block_content pos:start="515:9" pos:end="515:55">

        <expr_stmt pos:start="515:9" pos:end="515:55"><expr pos:start="515:9" pos:end="515:54"><call pos:start="515:9" pos:end="515:54"><name pos:start="515:9" pos:end="515:14">av_log</name><argument_list pos:start="515:15" pos:end="515:54">(<argument pos:start="515:16" pos:end="515:23"><expr pos:start="515:16" pos:end="515:23"><name pos:start="515:16" pos:end="515:23"><name pos:start="515:16" pos:end="515:16">h</name><operator pos:start="515:17" pos:end="515:18">-&gt;</operator><name pos:start="515:19" pos:end="515:23">avctx</name></name></expr></argument>, <argument pos:start="515:26" pos:end="515:37"><expr pos:start="515:26" pos:end="515:37"><name pos:start="515:26" pos:end="515:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="515:40" pos:end="515:53"><expr pos:start="515:40" pos:end="515:53"><literal type="string" pos:start="515:40" pos:end="515:53">"no picture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="521:5" pos:end="535:5"><if pos:start="521:5" pos:end="535:5">if <condition pos:start="521:8" pos:end="521:27">(<expr pos:start="521:9" pos:end="521:26"><name pos:start="521:9" pos:end="521:26"><name pos:start="521:9" pos:end="521:9">h</name><operator pos:start="521:10" pos:end="521:11">-&gt;</operator><name pos:start="521:12" pos:end="521:26">next_output_pic</name></name></expr>)</condition> <block pos:start="521:29" pos:end="535:5">{<block_content pos:start="523:9" pos:end="533:86">

        <if_stmt pos:start="523:9" pos:end="531:9"><if pos:start="523:9" pos:end="531:9">if <condition pos:start="523:12" pos:end="523:42">(<expr pos:start="523:13" pos:end="523:41"><name pos:start="523:13" pos:end="523:41"><name pos:start="523:13" pos:end="523:13">h</name><operator pos:start="523:14" pos:end="523:15">-&gt;</operator><name pos:start="523:16" pos:end="523:30">next_output_pic</name><operator pos:start="523:31" pos:end="523:32">-&gt;</operator><name pos:start="523:33" pos:end="523:41">recovered</name></name></expr>)</condition> <block pos:start="523:44" pos:end="531:9">{<block_content pos:start="529:13" pos:end="529:54">

            <comment type="line" pos:start="525:13" pos:end="525:75">// We have reached an recovery point and all frames after it in</comment>

            <comment type="line" pos:start="527:13" pos:end="527:45">// display order are "recovered".</comment>

            <expr_stmt pos:start="529:13" pos:end="529:54"><expr pos:start="529:13" pos:end="529:53"><name pos:start="529:13" pos:end="529:30"><name pos:start="529:13" pos:end="529:13">h</name><operator pos:start="529:14" pos:end="529:15">-&gt;</operator><name pos:start="529:16" pos:end="529:30">frame_recovered</name></name> <operator pos:start="529:32" pos:end="529:33">|=</operator> <name pos:start="529:35" pos:end="529:53">FRAME_RECOVERED_SEI</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="533:9" pos:end="533:86"><expr pos:start="533:9" pos:end="533:85"><name pos:start="533:9" pos:end="533:37"><name pos:start="533:9" pos:end="533:9">h</name><operator pos:start="533:10" pos:end="533:11">-&gt;</operator><name pos:start="533:12" pos:end="533:26">next_output_pic</name><operator pos:start="533:27" pos:end="533:28">-&gt;</operator><name pos:start="533:29" pos:end="533:37">recovered</name></name> <operator pos:start="533:39" pos:end="533:40">|=</operator> <operator pos:start="533:42" pos:end="533:42">!</operator><operator pos:start="533:43" pos:end="533:43">!</operator><operator pos:start="533:44" pos:end="533:44">(</operator><name pos:start="533:45" pos:end="533:62"><name pos:start="533:45" pos:end="533:45">h</name><operator pos:start="533:46" pos:end="533:47">-&gt;</operator><name pos:start="533:48" pos:end="533:62">frame_recovered</name></name> <operator pos:start="533:64" pos:end="533:64">&amp;</operator> <name pos:start="533:66" pos:end="533:84">FRAME_RECOVERED_SEI</name><operator pos:start="533:85" pos:end="533:85">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="539:5" pos:end="541:41"><if pos:start="539:5" pos:end="541:41">if <condition pos:start="539:8" pos:end="539:45">(<expr pos:start="539:9" pos:end="539:44"><name pos:start="539:9" pos:end="539:22">setup_finished</name> <operator pos:start="539:24" pos:end="539:25">&amp;&amp;</operator> <operator pos:start="539:27" pos:end="539:27">!</operator><name pos:start="539:28" pos:end="539:44"><name pos:start="539:28" pos:end="539:28">h</name><operator pos:start="539:29" pos:end="539:30">-&gt;</operator><name pos:start="539:31" pos:end="539:35">avctx</name><operator pos:start="539:36" pos:end="539:37">-&gt;</operator><name pos:start="539:38" pos:end="539:44">hwaccel</name></name></expr>)</condition><block type="pseudo" pos:start="541:9" pos:end="541:41"><block_content pos:start="541:9" pos:end="541:41">

        <expr_stmt pos:start="541:9" pos:end="541:41"><expr pos:start="541:9" pos:end="541:40"><call pos:start="541:9" pos:end="541:40"><name pos:start="541:9" pos:end="541:30">ff_thread_finish_setup</name><argument_list pos:start="541:31" pos:end="541:40">(<argument pos:start="541:32" pos:end="541:39"><expr pos:start="541:32" pos:end="541:39"><name pos:start="541:32" pos:end="541:39"><name pos:start="541:32" pos:end="541:32">h</name><operator pos:start="541:33" pos:end="541:34">-&gt;</operator><name pos:start="541:35" pos:end="541:39">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
