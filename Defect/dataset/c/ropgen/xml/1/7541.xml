<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7541.c" pos:tabs="8"><function pos:start="1:1" pos:end="52:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">ff_framequeue_skip_samples</name><parameter_list pos:start="1:32" pos:end="1:87">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:44">FFFrameQueue</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">fq</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:56">size_t</name></type> <name pos:start="1:58" pos:end="1:64">samples</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:86"><decl pos:start="1:67" pos:end="1:86"><type pos:start="1:67" pos:end="1:86"><name pos:start="1:67" pos:end="1:76">AVRational</name></type> <name pos:start="1:78" pos:end="1:86">time_base</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="52:1">{<block_content pos:start="5:5" pos:end="50:39">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">FFFrameBucket</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:16">bytes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">planar</name></decl>, <decl pos:start="9:17" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:22">planes</name></decl>, <decl pos:start="9:25" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:25">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><call pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:21">check_consistency</name><argument_list pos:start="13:22" pos:end="13:25">(<argument pos:start="13:23" pos:end="13:24"><expr pos:start="13:23" pos:end="13:24"><name pos:start="13:23" pos:end="13:24">fq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><call pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:14">av_assert1</name><argument_list pos:start="15:15" pos:end="15:26">(<argument pos:start="15:16" pos:end="15:25"><expr pos:start="15:16" pos:end="15:25"><name pos:start="15:16" pos:end="15:25"><name pos:start="15:16" pos:end="15:17">fq</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:25">queued</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:5">b</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <call pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:14">bucket</name><argument_list pos:start="17:15" pos:end="17:21">(<argument pos:start="17:16" pos:end="17:17"><expr pos:start="17:16" pos:end="17:17"><name pos:start="17:16" pos:end="17:17">fq</name></expr></argument>, <argument pos:start="17:20" pos:end="17:20"><expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:47"><expr pos:start="19:5" pos:end="19:46"><call pos:start="19:5" pos:end="19:46"><name pos:start="19:5" pos:end="19:14">av_assert1</name><argument_list pos:start="19:15" pos:end="19:46">(<argument pos:start="19:16" pos:end="19:45"><expr pos:start="19:16" pos:end="19:45"><name pos:start="19:16" pos:end="19:22">samples</name> <operator pos:start="19:24" pos:end="19:24">&lt;</operator> <name pos:start="19:26" pos:end="19:45"><name pos:start="19:26" pos:end="19:26">b</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:33">frame</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:45">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:10">planar</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="21:54"><name pos:start="21:14" pos:end="21:36">av_sample_fmt_is_planar</name><argument_list pos:start="21:37" pos:end="21:54">(<argument pos:start="21:38" pos:end="21:53"><expr pos:start="21:38" pos:end="21:53"><name pos:start="21:38" pos:end="21:53"><name pos:start="21:38" pos:end="21:38">b</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:45">frame</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:53">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:10">planes</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <ternary pos:start="23:14" pos:end="23:44"><condition pos:start="23:14" pos:end="23:21"><expr pos:start="23:14" pos:end="23:19"><name pos:start="23:14" pos:end="23:19">planar</name></expr> ?</condition><then pos:start="23:23" pos:end="23:40"> <expr pos:start="23:23" pos:end="23:40"><name pos:start="23:23" pos:end="23:40"><name pos:start="23:23" pos:end="23:23">b</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:30">frame</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:40">channels</name></name></expr> </then><else pos:start="23:42" pos:end="23:44">: <expr pos:start="23:44" pos:end="23:44"><literal type="number" pos:start="23:44" pos:end="23:44">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:64"><expr pos:start="25:5" pos:end="25:63"><name pos:start="25:5" pos:end="25:9">bytes</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:19">samples</name> <operator pos:start="25:21" pos:end="25:21">*</operator> <call pos:start="25:23" pos:end="25:63"><name pos:start="25:23" pos:end="25:45">av_get_bytes_per_sample</name><argument_list pos:start="25:46" pos:end="25:63">(<argument pos:start="25:47" pos:end="25:62"><expr pos:start="25:47" pos:end="25:62"><name pos:start="25:47" pos:end="25:62"><name pos:start="25:47" pos:end="25:47">b</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:54">frame</name><operator pos:start="25:55" pos:end="25:56">-&gt;</operator><name pos:start="25:57" pos:end="25:62">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:36"><if pos:start="27:5" pos:end="29:36">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:15">planar</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:36"><block_content pos:start="29:9" pos:end="29:36">

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:13">bytes</name> <operator pos:start="29:15" pos:end="29:16">*=</operator> <name pos:start="29:18" pos:end="29:35"><name pos:start="29:18" pos:end="29:18">b</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:25">frame</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:35">channels</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="33:95"><if pos:start="31:5" pos:end="33:95">if <condition pos:start="31:8" pos:end="31:40">(<expr pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:9">b</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">frame</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:21">pts</name></name> <operator pos:start="31:23" pos:end="31:24">!=</operator> <name pos:start="31:26" pos:end="31:39">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:95"><block_content pos:start="33:9" pos:end="33:95">

        <expr_stmt pos:start="33:9" pos:end="33:95"><expr pos:start="33:9" pos:end="33:94"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:9">b</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:16">frame</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:21">pts</name></name> <operator pos:start="33:23" pos:end="33:24">+=</operator> <call pos:start="33:26" pos:end="33:94"><name pos:start="33:26" pos:end="33:37">av_rescale_q</name><argument_list pos:start="33:38" pos:end="33:94">(<argument pos:start="33:39" pos:end="33:45"><expr pos:start="33:39" pos:end="33:45"><name pos:start="33:39" pos:end="33:45">samples</name></expr></argument>, <argument pos:start="33:48" pos:end="33:82"><expr pos:start="33:48" pos:end="33:82"><call pos:start="33:48" pos:end="33:82"><name pos:start="33:48" pos:end="33:56">av_make_q</name><argument_list pos:start="33:57" pos:end="33:82">(<argument pos:start="33:58" pos:end="33:58"><expr pos:start="33:58" pos:end="33:58"><literal type="number" pos:start="33:58" pos:end="33:58">1</literal></expr></argument>, <argument pos:start="33:61" pos:end="33:81"><expr pos:start="33:61" pos:end="33:81"><name pos:start="33:61" pos:end="33:81"><name pos:start="33:61" pos:end="33:61">b</name><operator pos:start="33:62" pos:end="33:63">-&gt;</operator><name pos:start="33:64" pos:end="33:68">frame</name><operator pos:start="33:69" pos:end="33:70">-&gt;</operator><name pos:start="33:71" pos:end="33:81">sample_rate</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:85" pos:end="33:93"><expr pos:start="33:85" pos:end="33:93"><name pos:start="33:85" pos:end="33:93">time_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:36"><expr pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:5">b</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:12">frame</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:24">nb_samples</name></name> <operator pos:start="35:26" pos:end="35:27">-=</operator> <name pos:start="35:29" pos:end="35:35">samples</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:5">b</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:12">frame</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:22">linesize</name><index pos:start="37:23" pos:end="37:25">[<expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>]</index></name> <operator pos:start="37:27" pos:end="37:28">-=</operator> <name pos:start="37:30" pos:end="37:34">bytes</name></expr>;</expr_stmt>

    <for pos:start="39:5" pos:end="41:44">for <control pos:start="39:9" pos:end="39:32">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:27"><expr pos:start="39:17" pos:end="39:26"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:26">planes</name></expr>;</condition> <incr pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:29">i</name><operator pos:start="39:30" pos:end="39:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="41:9" pos:end="41:44"><block_content pos:start="41:9" pos:end="41:44">

        <expr_stmt pos:start="41:9" pos:end="41:44"><expr pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:9">b</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">frame</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:31">extended_data</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">i</name></expr>]</index></name> <operator pos:start="41:36" pos:end="41:37">+=</operator> <name pos:start="41:39" pos:end="41:43">bytes</name></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="43:5" pos:end="45:55">for <control pos:start="43:9" pos:end="43:60">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:55"><expr pos:start="43:17" pos:end="43:54"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:26">planes</name> <operator pos:start="43:28" pos:end="43:29">&amp;&amp;</operator> <name pos:start="43:31" pos:end="43:31">i</name> <operator pos:start="43:33" pos:end="43:33">&lt;</operator> <name pos:start="43:35" pos:end="43:54">AV_NUM_DATA_POINTERS</name></expr>;</condition> <incr pos:start="43:57" pos:end="43:59"><expr pos:start="43:57" pos:end="43:59"><name pos:start="43:57" pos:end="43:57">i</name><operator pos:start="43:58" pos:end="43:59">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:9" pos:end="45:55"><block_content pos:start="45:9" pos:end="45:55">

        <expr_stmt pos:start="45:9" pos:end="45:55"><expr pos:start="45:9" pos:end="45:54"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:9">b</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">frame</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:22">data</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">i</name></expr>]</index></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:54"><name pos:start="45:29" pos:end="45:29">b</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:36">frame</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:51">extended_data</name><index pos:start="45:52" pos:end="45:54">[<expr pos:start="45:53" pos:end="45:53"><name pos:start="45:53" pos:end="45:53">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="47:5" pos:end="47:38"><expr pos:start="47:5" pos:end="47:37"><name pos:start="47:5" pos:end="47:26"><name pos:start="47:5" pos:end="47:6">fq</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:26">total_samples_tail</name></name> <operator pos:start="47:28" pos:end="47:29">+=</operator> <name pos:start="47:31" pos:end="47:37">samples</name></expr>;</expr_stmt>


    <expr_stmt pos:start="50:5" pos:end="50:39"><expr pos:start="50:5" pos:end="50:38"><call pos:start="50:5" pos:end="50:38"><name pos:start="50:5" pos:end="50:31">ff_framequeue_update_peeked</name><argument_list pos:start="50:32" pos:end="50:38">(<argument pos:start="50:33" pos:end="50:34"><expr pos:start="50:33" pos:end="50:34"><name pos:start="50:33" pos:end="50:34">fq</name></expr></argument>, <argument pos:start="50:37" pos:end="50:37"><expr pos:start="50:37" pos:end="50:37"><literal type="number" pos:start="50:37" pos:end="50:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
