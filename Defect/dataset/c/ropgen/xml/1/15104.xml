<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15104.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:44">qemu_chr_open_socket</name><parameter_list pos:start="1:45" pos:end="1:60">(<parameter pos:start="1:46" pos:end="1:59"><decl pos:start="1:46" pos:end="1:59"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:53">QemuOpts</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">opts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="197:1">{<block_content pos:start="5:5" pos:end="195:16">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">TCPCharDriver</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name> <init pos:start="9:12" pos:end="9:15">= <expr pos:start="9:14" pos:end="9:15"><operator pos:start="9:14" pos:end="9:14">-</operator><literal type="number" pos:start="9:15" pos:end="9:15">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">is_listen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:22">is_waitconnect</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">do_nodelay</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">is_unix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">is_telnet</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:58"><expr pos:start="23:5" pos:end="23:57"><name pos:start="23:5" pos:end="23:13">is_listen</name>      <operator pos:start="23:20" pos:end="23:20">=</operator> <call pos:start="23:22" pos:end="23:57"><name pos:start="23:22" pos:end="23:38">qemu_opt_get_bool</name><argument_list pos:start="23:39" pos:end="23:57">(<argument pos:start="23:40" pos:end="23:43"><expr pos:start="23:40" pos:end="23:43"><name pos:start="23:40" pos:end="23:43">opts</name></expr></argument>, <argument pos:start="23:46" pos:end="23:53"><expr pos:start="23:46" pos:end="23:53"><literal type="string" pos:start="23:46" pos:end="23:53">"server"</literal></expr></argument>, <argument pos:start="23:56" pos:end="23:56"><expr pos:start="23:56" pos:end="23:56"><literal type="number" pos:start="23:56" pos:end="23:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:56"><expr pos:start="25:5" pos:end="25:55"><name pos:start="25:5" pos:end="25:18">is_waitconnect</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="25:55"><name pos:start="25:22" pos:end="25:38">qemu_opt_get_bool</name><argument_list pos:start="25:39" pos:end="25:55">(<argument pos:start="25:40" pos:end="25:43"><expr pos:start="25:40" pos:end="25:43"><name pos:start="25:40" pos:end="25:43">opts</name></expr></argument>, <argument pos:start="25:46" pos:end="25:51"><expr pos:start="25:46" pos:end="25:51"><literal type="string" pos:start="25:46" pos:end="25:51">"wait"</literal></expr></argument>, <argument pos:start="25:54" pos:end="25:54"><expr pos:start="25:54" pos:end="25:54"><literal type="number" pos:start="25:54" pos:end="25:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:58"><expr pos:start="27:5" pos:end="27:57"><name pos:start="27:5" pos:end="27:13">is_telnet</name>      <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:57"><name pos:start="27:22" pos:end="27:38">qemu_opt_get_bool</name><argument_list pos:start="27:39" pos:end="27:57">(<argument pos:start="27:40" pos:end="27:43"><expr pos:start="27:40" pos:end="27:43"><name pos:start="27:40" pos:end="27:43">opts</name></expr></argument>, <argument pos:start="27:46" pos:end="27:53"><expr pos:start="27:46" pos:end="27:53"><literal type="string" pos:start="27:46" pos:end="27:53">"telnet"</literal></expr></argument>, <argument pos:start="27:56" pos:end="27:56"><expr pos:start="27:56" pos:end="27:56"><literal type="number" pos:start="27:56" pos:end="27:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:58"><expr pos:start="29:5" pos:end="29:57"><name pos:start="29:5" pos:end="29:14">do_nodelay</name>     <operator pos:start="29:20" pos:end="29:20">=</operator> <operator pos:start="29:22" pos:end="29:22">!</operator><call pos:start="29:23" pos:end="29:57"><name pos:start="29:23" pos:end="29:39">qemu_opt_get_bool</name><argument_list pos:start="29:40" pos:end="29:57">(<argument pos:start="29:41" pos:end="29:44"><expr pos:start="29:41" pos:end="29:44"><name pos:start="29:41" pos:end="29:44">opts</name></expr></argument>, <argument pos:start="29:47" pos:end="29:53"><expr pos:start="29:47" pos:end="29:53"><literal type="string" pos:start="29:47" pos:end="29:53">"delay"</literal></expr></argument>, <argument pos:start="29:56" pos:end="29:56"><expr pos:start="29:56" pos:end="29:56"><literal type="number" pos:start="29:56" pos:end="29:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:56"><expr pos:start="31:5" pos:end="31:55"><name pos:start="31:5" pos:end="31:11">is_unix</name>        <operator pos:start="31:20" pos:end="31:20">=</operator> <call pos:start="31:22" pos:end="31:47"><name pos:start="31:22" pos:end="31:33">qemu_opt_get</name><argument_list pos:start="31:34" pos:end="31:47">(<argument pos:start="31:35" pos:end="31:38"><expr pos:start="31:35" pos:end="31:38"><name pos:start="31:35" pos:end="31:38">opts</name></expr></argument>, <argument pos:start="31:41" pos:end="31:46"><expr pos:start="31:41" pos:end="31:46"><literal type="string" pos:start="31:41" pos:end="31:46">"path"</literal></expr></argument>)</argument_list></call> <operator pos:start="31:49" pos:end="31:50">!=</operator> <name pos:start="31:52" pos:end="31:55">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:27"><if pos:start="33:5" pos:end="35:27">if <condition pos:start="33:8" pos:end="33:19">(<expr pos:start="33:9" pos:end="33:18"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:18">is_listen</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:27"><block_content pos:start="35:9" pos:end="35:27">

        <expr_stmt pos:start="35:9" pos:end="35:27"><expr pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:22">is_waitconnect</name> <operator pos:start="35:24" pos:end="35:24">=</operator> <literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:7">chr</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:44"><name pos:start="39:11" pos:end="39:19">g_malloc0</name><argument_list pos:start="39:20" pos:end="39:44">(<argument pos:start="39:21" pos:end="39:43"><expr pos:start="39:21" pos:end="39:43"><sizeof pos:start="39:21" pos:end="39:43">sizeof<argument_list pos:start="39:27" pos:end="39:43">(<argument pos:start="39:28" pos:end="39:42"><expr pos:start="39:28" pos:end="39:42"><name pos:start="39:28" pos:end="39:42">CharDriverState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:41"><expr pos:start="41:5" pos:end="41:40"><name pos:start="41:5" pos:end="41:5">s</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <call pos:start="41:9" pos:end="41:40"><name pos:start="41:9" pos:end="41:17">g_malloc0</name><argument_list pos:start="41:18" pos:end="41:40">(<argument pos:start="41:19" pos:end="41:39"><expr pos:start="41:19" pos:end="41:39"><sizeof pos:start="41:19" pos:end="41:39">sizeof<argument_list pos:start="41:25" pos:end="41:39">(<argument pos:start="41:26" pos:end="41:38"><expr pos:start="41:26" pos:end="41:38"><name pos:start="41:26" pos:end="41:38">TCPCharDriver</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="69:5"><if pos:start="45:5" pos:end="57:5">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:15">is_unix</name></expr>)</condition> <block pos:start="45:18" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:9">

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:22">(<expr pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:21">is_listen</name></expr>)</condition> <block pos:start="47:24" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:40">

            <expr_stmt pos:start="49:13" pos:end="49:40"><expr pos:start="49:13" pos:end="49:39"><name pos:start="49:13" pos:end="49:14">fd</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="49:39"><name pos:start="49:18" pos:end="49:33">unix_listen_opts</name><argument_list pos:start="49:34" pos:end="49:39">(<argument pos:start="49:35" pos:end="49:38"><expr pos:start="49:35" pos:end="49:38"><name pos:start="49:35" pos:end="49:38">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="55:9">else <block pos:start="51:16" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:41">

            <expr_stmt pos:start="53:13" pos:end="53:41"><expr pos:start="53:13" pos:end="53:40"><name pos:start="53:13" pos:end="53:14">fd</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <call pos:start="53:18" pos:end="53:40"><name pos:start="53:18" pos:end="53:34">unix_connect_opts</name><argument_list pos:start="53:35" pos:end="53:40">(<argument pos:start="53:36" pos:end="53:39"><expr pos:start="53:36" pos:end="53:39"><name pos:start="53:36" pos:end="53:39">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="69:5">else <block pos:start="57:12" pos:end="69:5">{<block_content pos:start="59:9" pos:end="67:9">

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:22">(<expr pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:21">is_listen</name></expr>)</condition> <block pos:start="59:24" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:49">

            <expr_stmt pos:start="61:13" pos:end="61:49"><expr pos:start="61:13" pos:end="61:48"><name pos:start="61:13" pos:end="61:14">fd</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:48"><name pos:start="61:18" pos:end="61:33">inet_listen_opts</name><argument_list pos:start="61:34" pos:end="61:48">(<argument pos:start="61:35" pos:end="61:38"><expr pos:start="61:35" pos:end="61:38"><name pos:start="61:35" pos:end="61:38">opts</name></expr></argument>, <argument pos:start="61:41" pos:end="61:41"><expr pos:start="61:41" pos:end="61:41"><literal type="number" pos:start="61:41" pos:end="61:41">0</literal></expr></argument>, <argument pos:start="61:44" pos:end="61:47"><expr pos:start="61:44" pos:end="61:47"><name pos:start="61:44" pos:end="61:47">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="67:9">else <block pos:start="63:16" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:59">

            <expr_stmt pos:start="65:13" pos:end="65:59"><expr pos:start="65:13" pos:end="65:58"><name pos:start="65:13" pos:end="65:14">fd</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="65:58"><name pos:start="65:18" pos:end="65:34">inet_connect_opts</name><argument_list pos:start="65:35" pos:end="65:58">(<argument pos:start="65:36" pos:end="65:39"><expr pos:start="65:36" pos:end="65:39"><name pos:start="65:36" pos:end="65:39">opts</name></expr></argument>, <argument pos:start="65:42" pos:end="65:45"><expr pos:start="65:42" pos:end="65:45"><name pos:start="65:42" pos:end="65:45">true</name></expr></argument>, <argument pos:start="65:48" pos:end="65:51"><expr pos:start="65:48" pos:end="65:51"><name pos:start="65:48" pos:end="65:51">NULL</name></expr></argument>, <argument pos:start="65:54" pos:end="65:57"><expr pos:start="65:54" pos:end="65:57"><name pos:start="65:54" pos:end="65:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="71:5" pos:end="75:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:15">(<expr pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:10">fd</name> <operator pos:start="71:12" pos:end="71:12">&lt;</operator> <literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>)</condition> <block pos:start="71:17" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:18">

        <goto pos:start="73:9" pos:end="73:18">goto <name pos:start="73:14" pos:end="73:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="81:32"><if pos:start="79:5" pos:end="81:32">if <condition pos:start="79:8" pos:end="79:24">(<expr pos:start="79:9" pos:end="79:23"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:23">is_waitconnect</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:32"><block_content pos:start="81:9" pos:end="81:32">

        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><call pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:27">socket_set_nonblock</name><argument_list pos:start="81:28" pos:end="81:31">(<argument pos:start="81:29" pos:end="81:30"><expr pos:start="81:29" pos:end="81:30"><name pos:start="81:29" pos:end="81:30">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:21"><expr pos:start="85:5" pos:end="85:20"><name pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:16">connected</name></name> <operator pos:start="85:18" pos:end="85:18">=</operator> <literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:15"><expr pos:start="87:5" pos:end="87:14"><name pos:start="87:5" pos:end="87:9"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:9">fd</name></name> <operator pos:start="87:11" pos:end="87:11">=</operator> <operator pos:start="87:13" pos:end="87:13">-</operator><literal type="number" pos:start="87:14" pos:end="87:14">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:22"><expr pos:start="89:5" pos:end="89:21"><name pos:start="89:5" pos:end="89:16"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:16">listen_fd</name></name> <operator pos:start="89:18" pos:end="89:18">=</operator> <operator pos:start="89:20" pos:end="89:20">-</operator><literal type="number" pos:start="89:21" pos:end="89:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:18"><expr pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:12"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:12">msgfd</name></name> <operator pos:start="91:14" pos:end="91:14">=</operator> <operator pos:start="91:16" pos:end="91:16">-</operator><literal type="number" pos:start="91:17" pos:end="91:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:25"><expr pos:start="93:5" pos:end="93:24"><name pos:start="93:5" pos:end="93:14"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:14">is_unix</name></name> <operator pos:start="93:16" pos:end="93:16">=</operator> <name pos:start="93:18" pos:end="93:24">is_unix</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:43"><expr pos:start="95:5" pos:end="95:42"><name pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:17">do_nodelay</name></name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:30">do_nodelay</name> <operator pos:start="95:32" pos:end="95:33">&amp;&amp;</operator> <operator pos:start="95:35" pos:end="95:35">!</operator><name pos:start="95:36" pos:end="95:42">is_unix</name></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:20"><expr pos:start="99:5" pos:end="99:19"><name pos:start="99:5" pos:end="99:15"><name pos:start="99:5" pos:end="99:7">chr</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:15">opaque</name></name> <operator pos:start="99:17" pos:end="99:17">=</operator> <name pos:start="99:19" pos:end="99:19">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:35"><expr pos:start="101:5" pos:end="101:34"><name pos:start="101:5" pos:end="101:18"><name pos:start="101:5" pos:end="101:7">chr</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:18">chr_write</name></name> <operator pos:start="101:20" pos:end="101:20">=</operator> <name pos:start="101:22" pos:end="101:34">tcp_chr_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:35"><expr pos:start="103:5" pos:end="103:34"><name pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:7">chr</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:18">chr_close</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:34">tcp_chr_close</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:18"><name pos:start="105:5" pos:end="105:7">chr</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:18">get_msgfd</name></name> <operator pos:start="105:20" pos:end="105:20">=</operator> <name pos:start="105:22" pos:end="105:34">tcp_get_msgfd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:45"><expr pos:start="107:5" pos:end="107:44"><name pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:7">chr</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:23">chr_add_client</name></name> <operator pos:start="107:25" pos:end="107:25">=</operator> <name pos:start="107:27" pos:end="107:44">tcp_chr_add_client</name></expr>;</expr_stmt>



    <if_stmt pos:start="111:5" pos:end="133:5"><if pos:start="111:5" pos:end="123:5">if <condition pos:start="111:8" pos:end="111:18">(<expr pos:start="111:9" pos:end="111:17"><name pos:start="111:9" pos:end="111:17">is_listen</name></expr>)</condition> <block pos:start="111:20" pos:end="123:5">{<block_content pos:start="113:9" pos:end="119:32">

        <expr_stmt pos:start="113:9" pos:end="113:26"><expr pos:start="113:9" pos:end="113:25"><name pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:20">listen_fd</name></name> <operator pos:start="113:22" pos:end="113:22">=</operator> <name pos:start="113:24" pos:end="113:25">fd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:76"><expr pos:start="115:9" pos:end="115:75"><call pos:start="115:9" pos:end="115:75"><name pos:start="115:9" pos:end="115:28">qemu_set_fd_handler2</name><argument_list pos:start="115:29" pos:end="115:75">(<argument pos:start="115:30" pos:end="115:41"><expr pos:start="115:30" pos:end="115:41"><name pos:start="115:30" pos:end="115:41"><name pos:start="115:30" pos:end="115:30">s</name><operator pos:start="115:31" pos:end="115:32">-&gt;</operator><name pos:start="115:33" pos:end="115:41">listen_fd</name></name></expr></argument>, <argument pos:start="115:44" pos:end="115:47"><expr pos:start="115:44" pos:end="115:47"><name pos:start="115:44" pos:end="115:47">NULL</name></expr></argument>, <argument pos:start="115:50" pos:end="115:63"><expr pos:start="115:50" pos:end="115:63"><name pos:start="115:50" pos:end="115:63">tcp_chr_accept</name></expr></argument>, <argument pos:start="115:66" pos:end="115:69"><expr pos:start="115:66" pos:end="115:69"><name pos:start="115:66" pos:end="115:69">NULL</name></expr></argument>, <argument pos:start="115:72" pos:end="115:74"><expr pos:start="115:72" pos:end="115:74"><name pos:start="115:72" pos:end="115:74">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="119:32"><if pos:start="117:9" pos:end="119:32">if <condition pos:start="117:12" pos:end="117:22">(<expr pos:start="117:13" pos:end="117:21"><name pos:start="117:13" pos:end="117:21">is_telnet</name></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:32"><block_content pos:start="119:13" pos:end="119:32">

            <expr_stmt pos:start="119:13" pos:end="119:32"><expr pos:start="119:13" pos:end="119:31"><name pos:start="119:13" pos:end="119:27"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:27">do_telnetopt</name></name> <operator pos:start="119:29" pos:end="119:29">=</operator> <literal type="number" pos:start="119:31" pos:end="119:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    </block_content>}</block></if> <else pos:start="123:7" pos:end="133:5">else <block pos:start="123:12" pos:end="133:5">{<block_content pos:start="125:9" pos:end="131:29">

        <expr_stmt pos:start="125:9" pos:end="125:25"><expr pos:start="125:9" pos:end="125:24"><name pos:start="125:9" pos:end="125:20"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:20">connected</name></name> <operator pos:start="125:22" pos:end="125:22">=</operator> <literal type="number" pos:start="125:24" pos:end="125:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:19"><expr pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:13"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:13">fd</name></name> <operator pos:start="127:15" pos:end="127:15">=</operator> <name pos:start="127:17" pos:end="127:18">fd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:31"><expr pos:start="129:9" pos:end="129:30"><call pos:start="129:9" pos:end="129:30"><name pos:start="129:9" pos:end="129:26">socket_set_nodelay</name><argument_list pos:start="129:27" pos:end="129:30">(<argument pos:start="129:28" pos:end="129:29"><expr pos:start="129:28" pos:end="129:29"><name pos:start="129:28" pos:end="129:29">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:29"><expr pos:start="131:9" pos:end="131:28"><call pos:start="131:9" pos:end="131:28"><name pos:start="131:9" pos:end="131:23">tcp_chr_connect</name><argument_list pos:start="131:24" pos:end="131:28">(<argument pos:start="131:25" pos:end="131:27"><expr pos:start="131:25" pos:end="131:27"><name pos:start="131:25" pos:end="131:27">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:44">/* for "info chardev" monitor command */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:34"><expr pos:start="139:5" pos:end="139:33"><name pos:start="139:5" pos:end="139:17"><name pos:start="139:5" pos:end="139:7">chr</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:17">filename</name></name> <operator pos:start="139:19" pos:end="139:19">=</operator> <call pos:start="139:21" pos:end="139:33"><name pos:start="139:21" pos:end="139:28">g_malloc</name><argument_list pos:start="139:29" pos:end="139:33">(<argument pos:start="139:30" pos:end="139:32"><expr pos:start="139:30" pos:end="139:32"><literal type="number" pos:start="139:30" pos:end="139:32">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="165:5"><if pos:start="141:5" pos:end="149:5">if <condition pos:start="141:8" pos:end="141:16">(<expr pos:start="141:9" pos:end="141:15"><name pos:start="141:9" pos:end="141:15">is_unix</name></expr>)</condition> <block pos:start="141:18" pos:end="149:5">{<block_content pos:start="143:9" pos:end="147:72">

        <expr_stmt pos:start="143:9" pos:end="147:72"><expr pos:start="143:9" pos:end="147:71"><call pos:start="143:9" pos:end="147:71"><name pos:start="143:9" pos:end="143:16">snprintf</name><argument_list pos:start="143:17" pos:end="147:71">(<argument pos:start="143:18" pos:end="143:30"><expr pos:start="143:18" pos:end="143:30"><name pos:start="143:18" pos:end="143:30"><name pos:start="143:18" pos:end="143:20">chr</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:30">filename</name></name></expr></argument>, <argument pos:start="143:33" pos:end="143:35"><expr pos:start="143:33" pos:end="143:35"><literal type="number" pos:start="143:33" pos:end="143:35">256</literal></expr></argument>, <argument pos:start="143:38" pos:end="143:48"><expr pos:start="143:38" pos:end="143:48"><literal type="string" pos:start="143:38" pos:end="143:48">"unix:%s%s"</literal></expr></argument>,

                 <argument pos:start="145:18" pos:end="145:43"><expr pos:start="145:18" pos:end="145:43"><call pos:start="145:18" pos:end="145:43"><name pos:start="145:18" pos:end="145:29">qemu_opt_get</name><argument_list pos:start="145:30" pos:end="145:43">(<argument pos:start="145:31" pos:end="145:34"><expr pos:start="145:31" pos:end="145:34"><name pos:start="145:31" pos:end="145:34">opts</name></expr></argument>, <argument pos:start="145:37" pos:end="145:42"><expr pos:start="145:37" pos:end="145:42"><literal type="string" pos:start="145:37" pos:end="145:42">"path"</literal></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="147:18" pos:end="147:70"><expr pos:start="147:18" pos:end="147:70"><ternary pos:start="147:18" pos:end="147:70"><condition pos:start="147:18" pos:end="147:55"><expr pos:start="147:18" pos:end="147:53"><call pos:start="147:18" pos:end="147:53"><name pos:start="147:18" pos:end="147:34">qemu_opt_get_bool</name><argument_list pos:start="147:35" pos:end="147:53">(<argument pos:start="147:36" pos:end="147:39"><expr pos:start="147:36" pos:end="147:39"><name pos:start="147:36" pos:end="147:39">opts</name></expr></argument>, <argument pos:start="147:42" pos:end="147:49"><expr pos:start="147:42" pos:end="147:49"><literal type="string" pos:start="147:42" pos:end="147:49">"server"</literal></expr></argument>, <argument pos:start="147:52" pos:end="147:52"><expr pos:start="147:52" pos:end="147:52"><literal type="number" pos:start="147:52" pos:end="147:52">0</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="147:57" pos:end="147:65"> <expr pos:start="147:57" pos:end="147:65"><literal type="string" pos:start="147:57" pos:end="147:65">",server"</literal></expr> </then><else pos:start="147:67" pos:end="147:70">: <expr pos:start="147:69" pos:end="147:70"><literal type="string" pos:start="147:69" pos:end="147:70">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="149:7" pos:end="157:5">else if <condition pos:start="149:15" pos:end="149:25">(<expr pos:start="149:16" pos:end="149:24"><name pos:start="149:16" pos:end="149:24">is_telnet</name></expr>)</condition> <block pos:start="149:27" pos:end="157:5">{<block_content pos:start="151:9" pos:end="155:72">

        <expr_stmt pos:start="151:9" pos:end="155:72"><expr pos:start="151:9" pos:end="155:71"><call pos:start="151:9" pos:end="155:71"><name pos:start="151:9" pos:end="151:16">snprintf</name><argument_list pos:start="151:17" pos:end="155:71">(<argument pos:start="151:18" pos:end="151:30"><expr pos:start="151:18" pos:end="151:30"><name pos:start="151:18" pos:end="151:30"><name pos:start="151:18" pos:end="151:20">chr</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:30">filename</name></name></expr></argument>, <argument pos:start="151:33" pos:end="151:35"><expr pos:start="151:33" pos:end="151:35"><literal type="number" pos:start="151:33" pos:end="151:35">256</literal></expr></argument>, <argument pos:start="151:38" pos:end="151:53"><expr pos:start="151:38" pos:end="151:53"><literal type="string" pos:start="151:38" pos:end="151:53">"telnet:%s:%s%s"</literal></expr></argument>,

                 <argument pos:start="153:18" pos:end="153:43"><expr pos:start="153:18" pos:end="153:43"><call pos:start="153:18" pos:end="153:43"><name pos:start="153:18" pos:end="153:29">qemu_opt_get</name><argument_list pos:start="153:30" pos:end="153:43">(<argument pos:start="153:31" pos:end="153:34"><expr pos:start="153:31" pos:end="153:34"><name pos:start="153:31" pos:end="153:34">opts</name></expr></argument>, <argument pos:start="153:37" pos:end="153:42"><expr pos:start="153:37" pos:end="153:42"><literal type="string" pos:start="153:37" pos:end="153:42">"host"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="153:46" pos:end="153:71"><expr pos:start="153:46" pos:end="153:71"><call pos:start="153:46" pos:end="153:71"><name pos:start="153:46" pos:end="153:57">qemu_opt_get</name><argument_list pos:start="153:58" pos:end="153:71">(<argument pos:start="153:59" pos:end="153:62"><expr pos:start="153:59" pos:end="153:62"><name pos:start="153:59" pos:end="153:62">opts</name></expr></argument>, <argument pos:start="153:65" pos:end="153:70"><expr pos:start="153:65" pos:end="153:70"><literal type="string" pos:start="153:65" pos:end="153:70">"port"</literal></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="155:18" pos:end="155:70"><expr pos:start="155:18" pos:end="155:70"><ternary pos:start="155:18" pos:end="155:70"><condition pos:start="155:18" pos:end="155:55"><expr pos:start="155:18" pos:end="155:53"><call pos:start="155:18" pos:end="155:53"><name pos:start="155:18" pos:end="155:34">qemu_opt_get_bool</name><argument_list pos:start="155:35" pos:end="155:53">(<argument pos:start="155:36" pos:end="155:39"><expr pos:start="155:36" pos:end="155:39"><name pos:start="155:36" pos:end="155:39">opts</name></expr></argument>, <argument pos:start="155:42" pos:end="155:49"><expr pos:start="155:42" pos:end="155:49"><literal type="string" pos:start="155:42" pos:end="155:49">"server"</literal></expr></argument>, <argument pos:start="155:52" pos:end="155:52"><expr pos:start="155:52" pos:end="155:52"><literal type="number" pos:start="155:52" pos:end="155:52">0</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="155:57" pos:end="155:65"> <expr pos:start="155:57" pos:end="155:65"><literal type="string" pos:start="155:57" pos:end="155:65">",server"</literal></expr> </then><else pos:start="155:67" pos:end="155:70">: <expr pos:start="155:69" pos:end="155:70"><literal type="string" pos:start="155:69" pos:end="155:70">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="157:7" pos:end="165:5">else <block pos:start="157:12" pos:end="165:5">{<block_content pos:start="159:9" pos:end="163:72">

        <expr_stmt pos:start="159:9" pos:end="163:72"><expr pos:start="159:9" pos:end="163:71"><call pos:start="159:9" pos:end="163:71"><name pos:start="159:9" pos:end="159:16">snprintf</name><argument_list pos:start="159:17" pos:end="163:71">(<argument pos:start="159:18" pos:end="159:30"><expr pos:start="159:18" pos:end="159:30"><name pos:start="159:18" pos:end="159:30"><name pos:start="159:18" pos:end="159:20">chr</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:30">filename</name></name></expr></argument>, <argument pos:start="159:33" pos:end="159:35"><expr pos:start="159:33" pos:end="159:35"><literal type="number" pos:start="159:33" pos:end="159:35">256</literal></expr></argument>, <argument pos:start="159:38" pos:end="159:50"><expr pos:start="159:38" pos:end="159:50"><literal type="string" pos:start="159:38" pos:end="159:50">"tcp:%s:%s%s"</literal></expr></argument>,

                 <argument pos:start="161:18" pos:end="161:43"><expr pos:start="161:18" pos:end="161:43"><call pos:start="161:18" pos:end="161:43"><name pos:start="161:18" pos:end="161:29">qemu_opt_get</name><argument_list pos:start="161:30" pos:end="161:43">(<argument pos:start="161:31" pos:end="161:34"><expr pos:start="161:31" pos:end="161:34"><name pos:start="161:31" pos:end="161:34">opts</name></expr></argument>, <argument pos:start="161:37" pos:end="161:42"><expr pos:start="161:37" pos:end="161:42"><literal type="string" pos:start="161:37" pos:end="161:42">"host"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="161:46" pos:end="161:71"><expr pos:start="161:46" pos:end="161:71"><call pos:start="161:46" pos:end="161:71"><name pos:start="161:46" pos:end="161:57">qemu_opt_get</name><argument_list pos:start="161:58" pos:end="161:71">(<argument pos:start="161:59" pos:end="161:62"><expr pos:start="161:59" pos:end="161:62"><name pos:start="161:59" pos:end="161:62">opts</name></expr></argument>, <argument pos:start="161:65" pos:end="161:70"><expr pos:start="161:65" pos:end="161:70"><literal type="string" pos:start="161:65" pos:end="161:70">"port"</literal></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="163:18" pos:end="163:70"><expr pos:start="163:18" pos:end="163:70"><ternary pos:start="163:18" pos:end="163:70"><condition pos:start="163:18" pos:end="163:55"><expr pos:start="163:18" pos:end="163:53"><call pos:start="163:18" pos:end="163:53"><name pos:start="163:18" pos:end="163:34">qemu_opt_get_bool</name><argument_list pos:start="163:35" pos:end="163:53">(<argument pos:start="163:36" pos:end="163:39"><expr pos:start="163:36" pos:end="163:39"><name pos:start="163:36" pos:end="163:39">opts</name></expr></argument>, <argument pos:start="163:42" pos:end="163:49"><expr pos:start="163:42" pos:end="163:49"><literal type="string" pos:start="163:42" pos:end="163:49">"server"</literal></expr></argument>, <argument pos:start="163:52" pos:end="163:52"><expr pos:start="163:52" pos:end="163:52"><literal type="number" pos:start="163:52" pos:end="163:52">0</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="163:57" pos:end="163:65"> <expr pos:start="163:57" pos:end="163:65"><literal type="string" pos:start="163:57" pos:end="163:65">",server"</literal></expr> </then><else pos:start="163:67" pos:end="163:70">: <expr pos:start="163:69" pos:end="163:70"><literal type="string" pos:start="163:69" pos:end="163:70">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="169:5" pos:end="179:5"><if pos:start="169:5" pos:end="179:5">if <condition pos:start="169:8" pos:end="169:36">(<expr pos:start="169:9" pos:end="169:35"><name pos:start="169:9" pos:end="169:17">is_listen</name> <operator pos:start="169:19" pos:end="169:20">&amp;&amp;</operator> <name pos:start="169:22" pos:end="169:35">is_waitconnect</name></expr>)</condition> <block pos:start="169:38" pos:end="179:5">{<block_content pos:start="171:9" pos:end="177:42">

        <expr_stmt pos:start="171:9" pos:end="173:30"><expr pos:start="171:9" pos:end="173:29"><call pos:start="171:9" pos:end="173:29"><name pos:start="171:9" pos:end="171:14">printf</name><argument_list pos:start="171:15" pos:end="173:29">(<argument pos:start="171:16" pos:end="171:53"><expr pos:start="171:16" pos:end="171:53"><literal type="string" pos:start="171:16" pos:end="171:53">"QEMU waiting for connection on: %s\n"</literal></expr></argument>,

               <argument pos:start="173:16" pos:end="173:28"><expr pos:start="173:16" pos:end="173:28"><name pos:start="173:16" pos:end="173:28"><name pos:start="173:16" pos:end="173:18">chr</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:28">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:28"><expr pos:start="175:9" pos:end="175:27"><call pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:22">tcp_chr_accept</name><argument_list pos:start="175:23" pos:end="175:27">(<argument pos:start="175:24" pos:end="175:26"><expr pos:start="175:24" pos:end="175:26"><name pos:start="175:24" pos:end="175:26">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:42"><expr pos:start="177:9" pos:end="177:41"><call pos:start="177:9" pos:end="177:41"><name pos:start="177:9" pos:end="177:27">socket_set_nonblock</name><argument_list pos:start="177:28" pos:end="177:41">(<argument pos:start="177:29" pos:end="177:40"><expr pos:start="177:29" pos:end="177:40"><name pos:start="177:29" pos:end="177:40"><name pos:start="177:29" pos:end="177:29">s</name><operator pos:start="177:30" pos:end="177:31">-&gt;</operator><name pos:start="177:32" pos:end="177:40">listen_fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="181:5" pos:end="181:15">return <expr pos:start="181:12" pos:end="181:14"><name pos:start="181:12" pos:end="181:14">chr</name></expr>;</return>



 <label pos:start="185:2" pos:end="185:6"><name pos:start="185:2" pos:end="185:5">fail</name>:</label>

    <if_stmt pos:start="187:5" pos:end="189:24"><if pos:start="187:5" pos:end="189:24">if <condition pos:start="187:8" pos:end="187:16">(<expr pos:start="187:9" pos:end="187:15"><name pos:start="187:9" pos:end="187:10">fd</name> <operator pos:start="187:12" pos:end="187:13">&gt;=</operator> <literal type="number" pos:start="187:15" pos:end="187:15">0</literal></expr>)</condition><block type="pseudo" pos:start="189:9" pos:end="189:24"><block_content pos:start="189:9" pos:end="189:24">

        <expr_stmt pos:start="189:9" pos:end="189:24"><expr pos:start="189:9" pos:end="189:23"><call pos:start="189:9" pos:end="189:23"><name pos:start="189:9" pos:end="189:19">closesocket</name><argument_list pos:start="189:20" pos:end="189:23">(<argument pos:start="189:21" pos:end="189:22"><expr pos:start="189:21" pos:end="189:22"><name pos:start="189:21" pos:end="189:22">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:14"><expr pos:start="191:5" pos:end="191:13"><call pos:start="191:5" pos:end="191:13"><name pos:start="191:5" pos:end="191:10">g_free</name><argument_list pos:start="191:11" pos:end="191:13">(<argument pos:start="191:12" pos:end="191:12"><expr pos:start="191:12" pos:end="191:12"><name pos:start="191:12" pos:end="191:12">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:16"><expr pos:start="193:5" pos:end="193:15"><call pos:start="193:5" pos:end="193:15"><name pos:start="193:5" pos:end="193:10">g_free</name><argument_list pos:start="193:11" pos:end="193:15">(<argument pos:start="193:12" pos:end="193:14"><expr pos:start="193:12" pos:end="193:14"><name pos:start="193:12" pos:end="193:14">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="195:5" pos:end="195:16">return <expr pos:start="195:12" pos:end="195:15"><name pos:start="195:12" pos:end="195:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
