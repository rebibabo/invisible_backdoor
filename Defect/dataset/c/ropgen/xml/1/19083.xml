<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19083.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">openpic_init</name><parameter_list pos:start="1:24" pos:end="1:42">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:36">SysBusDevice</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="201:1">{<block_content pos:start="5:5" pos:end="199:13">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">OpenPICState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">opp</name> <init pos:start="5:23" pos:end="5:55">= <expr pos:start="5:25" pos:end="5:55"><call pos:start="5:25" pos:end="5:55"><name pos:start="5:25" pos:end="5:35">FROM_SYSBUS</name><argument_list pos:start="5:36" pos:end="5:55">(<argument pos:start="5:37" pos:end="5:49"><expr pos:start="5:37" pos:end="5:49"><call pos:start="5:37" pos:end="5:49"><name pos:start="5:37" pos:end="5:42">typeof</name> <argument_list pos:start="5:44" pos:end="5:49">(<argument pos:start="5:45" pos:end="5:48"><expr pos:start="5:45" pos:end="5:48"><operator pos:start="5:45" pos:end="5:45">*</operator><name pos:start="5:46" pos:end="5:48">opp</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="5:52" pos:end="5:54"><expr pos:start="5:52" pos:end="5:54"><name pos:start="5:52" pos:end="5:54">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="31:6"><decl pos:start="9:5" pos:end="31:5"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:17">memreg</name></name></type> <name pos:start="9:19" pos:end="9:27"><name pos:start="9:19" pos:end="9:25">list_le</name><index pos:start="9:26" pos:end="9:27">[]</index></name> <init pos:start="9:29" pos:end="31:5">= <expr pos:start="9:31" pos:end="31:5"><block pos:start="9:31" pos:end="31:5">{

        <expr pos:start="11:9" pos:end="13:60"><block pos:start="11:9" pos:end="13:60">{<expr pos:start="11:10" pos:end="11:14"><literal type="string" pos:start="11:10" pos:end="11:14">"glb"</literal></expr>, <expr pos:start="11:17" pos:end="11:35"><operator pos:start="11:17" pos:end="11:17">&amp;</operator><name pos:start="11:18" pos:end="11:35">openpic_glb_ops_le</name></expr>, <expr pos:start="11:38" pos:end="11:41"><name pos:start="11:38" pos:end="11:41">true</name></expr>,

                <expr pos:start="13:17" pos:end="13:37"><name pos:start="13:17" pos:end="13:37">OPENPIC_GLB_REG_START</name></expr>, <expr pos:start="13:40" pos:end="13:59"><name pos:start="13:40" pos:end="13:59">OPENPIC_GLB_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="15:9" pos:end="17:60"><block pos:start="15:9" pos:end="17:60">{<expr pos:start="15:10" pos:end="15:14"><literal type="string" pos:start="15:10" pos:end="15:14">"tmr"</literal></expr>, <expr pos:start="15:17" pos:end="15:35"><operator pos:start="15:17" pos:end="15:17">&amp;</operator><name pos:start="15:18" pos:end="15:35">openpic_tmr_ops_le</name></expr>, <expr pos:start="15:38" pos:end="15:41"><name pos:start="15:38" pos:end="15:41">true</name></expr>,

                <expr pos:start="17:17" pos:end="17:37"><name pos:start="17:17" pos:end="17:37">OPENPIC_TMR_REG_START</name></expr>, <expr pos:start="17:40" pos:end="17:59"><name pos:start="17:40" pos:end="17:59">OPENPIC_TMR_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="19:9" pos:end="21:60"><block pos:start="19:9" pos:end="21:60">{<expr pos:start="19:10" pos:end="19:14"><literal type="string" pos:start="19:10" pos:end="19:14">"msi"</literal></expr>, <expr pos:start="19:17" pos:end="19:35"><operator pos:start="19:17" pos:end="19:17">&amp;</operator><name pos:start="19:18" pos:end="19:35">openpic_msi_ops_le</name></expr>, <expr pos:start="19:38" pos:end="19:41"><name pos:start="19:38" pos:end="19:41">true</name></expr>,

                <expr pos:start="21:17" pos:end="21:37"><name pos:start="21:17" pos:end="21:37">OPENPIC_MSI_REG_START</name></expr>, <expr pos:start="21:40" pos:end="21:59"><name pos:start="21:40" pos:end="21:59">OPENPIC_MSI_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="23:9" pos:end="25:60"><block pos:start="23:9" pos:end="25:60">{<expr pos:start="23:10" pos:end="23:14"><literal type="string" pos:start="23:10" pos:end="23:14">"src"</literal></expr>, <expr pos:start="23:17" pos:end="23:35"><operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:35">openpic_src_ops_le</name></expr>, <expr pos:start="23:38" pos:end="23:41"><name pos:start="23:38" pos:end="23:41">true</name></expr>,

                <expr pos:start="25:17" pos:end="25:37"><name pos:start="25:17" pos:end="25:37">OPENPIC_SRC_REG_START</name></expr>, <expr pos:start="25:40" pos:end="25:59"><name pos:start="25:40" pos:end="25:59">OPENPIC_SRC_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="27:9" pos:end="29:60"><block pos:start="27:9" pos:end="29:60">{<expr pos:start="27:10" pos:end="27:14"><literal type="string" pos:start="27:10" pos:end="27:14">"cpu"</literal></expr>, <expr pos:start="27:17" pos:end="27:35"><operator pos:start="27:17" pos:end="27:17">&amp;</operator><name pos:start="27:18" pos:end="27:35">openpic_cpu_ops_le</name></expr>, <expr pos:start="27:38" pos:end="27:41"><name pos:start="27:38" pos:end="27:41">true</name></expr>,

                <expr pos:start="29:17" pos:end="29:37"><name pos:start="29:17" pos:end="29:37">OPENPIC_CPU_REG_START</name></expr>, <expr pos:start="29:40" pos:end="29:59"><name pos:start="29:40" pos:end="29:59">OPENPIC_CPU_REG_SIZE</name></expr>}</block></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="55:6"><decl pos:start="33:5" pos:end="55:5"><type pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:10">struct</name> <name pos:start="33:12" pos:end="33:17">memreg</name></name></type> <name pos:start="33:19" pos:end="33:27"><name pos:start="33:19" pos:end="33:25">list_be</name><index pos:start="33:26" pos:end="33:27">[]</index></name> <init pos:start="33:29" pos:end="55:5">= <expr pos:start="33:31" pos:end="55:5"><block pos:start="33:31" pos:end="55:5">{

        <expr pos:start="35:9" pos:end="37:60"><block pos:start="35:9" pos:end="37:60">{<expr pos:start="35:10" pos:end="35:14"><literal type="string" pos:start="35:10" pos:end="35:14">"glb"</literal></expr>, <expr pos:start="35:17" pos:end="35:35"><operator pos:start="35:17" pos:end="35:17">&amp;</operator><name pos:start="35:18" pos:end="35:35">openpic_glb_ops_be</name></expr>, <expr pos:start="35:38" pos:end="35:41"><name pos:start="35:38" pos:end="35:41">true</name></expr>,

                <expr pos:start="37:17" pos:end="37:37"><name pos:start="37:17" pos:end="37:37">OPENPIC_GLB_REG_START</name></expr>, <expr pos:start="37:40" pos:end="37:59"><name pos:start="37:40" pos:end="37:59">OPENPIC_GLB_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="39:9" pos:end="41:60"><block pos:start="39:9" pos:end="41:60">{<expr pos:start="39:10" pos:end="39:14"><literal type="string" pos:start="39:10" pos:end="39:14">"tmr"</literal></expr>, <expr pos:start="39:17" pos:end="39:35"><operator pos:start="39:17" pos:end="39:17">&amp;</operator><name pos:start="39:18" pos:end="39:35">openpic_tmr_ops_be</name></expr>, <expr pos:start="39:38" pos:end="39:41"><name pos:start="39:38" pos:end="39:41">true</name></expr>,

                <expr pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:37">OPENPIC_TMR_REG_START</name></expr>, <expr pos:start="41:40" pos:end="41:59"><name pos:start="41:40" pos:end="41:59">OPENPIC_TMR_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="43:9" pos:end="45:60"><block pos:start="43:9" pos:end="45:60">{<expr pos:start="43:10" pos:end="43:14"><literal type="string" pos:start="43:10" pos:end="43:14">"msi"</literal></expr>, <expr pos:start="43:17" pos:end="43:35"><operator pos:start="43:17" pos:end="43:17">&amp;</operator><name pos:start="43:18" pos:end="43:35">openpic_msi_ops_be</name></expr>, <expr pos:start="43:38" pos:end="43:41"><name pos:start="43:38" pos:end="43:41">true</name></expr>,

                <expr pos:start="45:17" pos:end="45:37"><name pos:start="45:17" pos:end="45:37">OPENPIC_MSI_REG_START</name></expr>, <expr pos:start="45:40" pos:end="45:59"><name pos:start="45:40" pos:end="45:59">OPENPIC_MSI_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="47:9" pos:end="49:60"><block pos:start="47:9" pos:end="49:60">{<expr pos:start="47:10" pos:end="47:14"><literal type="string" pos:start="47:10" pos:end="47:14">"src"</literal></expr>, <expr pos:start="47:17" pos:end="47:35"><operator pos:start="47:17" pos:end="47:17">&amp;</operator><name pos:start="47:18" pos:end="47:35">openpic_src_ops_be</name></expr>, <expr pos:start="47:38" pos:end="47:41"><name pos:start="47:38" pos:end="47:41">true</name></expr>,

                <expr pos:start="49:17" pos:end="49:37"><name pos:start="49:17" pos:end="49:37">OPENPIC_SRC_REG_START</name></expr>, <expr pos:start="49:40" pos:end="49:59"><name pos:start="49:40" pos:end="49:59">OPENPIC_SRC_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="51:9" pos:end="53:60"><block pos:start="51:9" pos:end="53:60">{<expr pos:start="51:10" pos:end="51:14"><literal type="string" pos:start="51:10" pos:end="51:14">"cpu"</literal></expr>, <expr pos:start="51:17" pos:end="51:35"><operator pos:start="51:17" pos:end="51:17">&amp;</operator><name pos:start="51:18" pos:end="51:35">openpic_cpu_ops_be</name></expr>, <expr pos:start="51:38" pos:end="51:41"><name pos:start="51:38" pos:end="51:41">true</name></expr>,

                <expr pos:start="53:17" pos:end="53:37"><name pos:start="53:17" pos:end="53:37">OPENPIC_CPU_REG_START</name></expr>, <expr pos:start="53:40" pos:end="53:59"><name pos:start="53:40" pos:end="53:59">OPENPIC_CPU_REG_SIZE</name></expr>}</block></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="57:24"><decl pos:start="57:5" pos:end="57:23"><type pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:10">struct</name> <name pos:start="57:12" pos:end="57:17">memreg</name></name> <modifier pos:start="57:19" pos:end="57:19">*</modifier></type><name pos:start="57:20" pos:end="57:23">list</name></decl>;</decl_stmt>



    <switch pos:start="61:5" pos:end="141:5">switch <condition pos:start="61:12" pos:end="61:23">(<expr pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:15">opp</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:22">model</name></name></expr>)</condition> <block pos:start="61:25" pos:end="141:5">{<block_content pos:start="63:5" pos:end="139:14">

    <case pos:start="63:5" pos:end="63:35">case <expr pos:start="63:10" pos:end="63:34"><name pos:start="63:10" pos:end="63:34">OPENPIC_MODEL_FSL_MPIC_20</name></expr>:</case>

    <default pos:start="65:5" pos:end="65:12">default:</default>

        <expr_stmt pos:start="67:9" pos:end="67:44"><expr pos:start="67:9" pos:end="67:43"><name pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:11">opp</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:18">flags</name></name> <operator pos:start="67:20" pos:end="67:21">|=</operator> <name pos:start="67:23" pos:end="67:43">OPENPIC_FLAG_IDE_CRIT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:26"><expr pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:11">opp</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:20">nb_irqs</name></name> <operator pos:start="69:22" pos:end="69:22">=</operator> <literal type="number" pos:start="69:24" pos:end="69:25">80</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:36"><expr pos:start="71:9" pos:end="71:35"><name pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:11">opp</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:16">vid</name></name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:35">VID_REVISION_1_2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:33"><expr pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:17"><name pos:start="73:9" pos:end="73:11">opp</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:17">veni</name></name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:32">VENI_GENERIC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:34"><expr pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:11">opp</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:24">vector_mask</name></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <literal type="number" pos:start="75:28" pos:end="75:33">0xFFFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:11">opp</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:23">tifr_reset</name></name> <operator pos:start="77:25" pos:end="77:25">=</operator> <literal type="number" pos:start="77:27" pos:end="77:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:41"><expr pos:start="79:9" pos:end="79:40"><name pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:11">opp</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:23">ipvp_reset</name></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:40">IPVP_MASK_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:11">opp</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:22">ide_reset</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <literal type="number" pos:start="81:26" pos:end="81:26">1</literal> <operator pos:start="81:28" pos:end="81:29">&lt;&lt;</operator> <literal type="number" pos:start="81:31" pos:end="81:31">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:43"><expr pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:11">opp</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:20">max_irq</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:42">FSL_MPIC_20_MAX_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:44"><expr pos:start="85:9" pos:end="85:43"><name pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:11">opp</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:21">irq_ipi0</name></name> <operator pos:start="85:23" pos:end="85:23">=</operator> <name pos:start="85:25" pos:end="85:43">FSL_MPIC_20_IPI_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:44"><expr pos:start="87:9" pos:end="87:43"><name pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:11">opp</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:21">irq_tim0</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:43">FSL_MPIC_20_TMR_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:43"><expr pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:11">opp</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:20">irq_msi</name></name> <operator pos:start="89:22" pos:end="89:22">=</operator> <name pos:start="89:24" pos:end="89:42">FSL_MPIC_20_MSI_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:66"><expr pos:start="91:9" pos:end="91:65"><name pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:11">opp</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:17">brr1</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:33">FSL_BRR1_IPID</name> <operator pos:start="91:35" pos:end="91:35">|</operator> <name pos:start="91:37" pos:end="91:49">FSL_BRR1_IPMJ</name> <operator pos:start="91:51" pos:end="91:51">|</operator> <name pos:start="91:53" pos:end="91:65">FSL_BRR1_IPMN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:29"><expr pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:21">msi_supported</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <name pos:start="93:25" pos:end="93:28">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:23"><expr pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:12">list</name> <operator pos:start="95:14" pos:end="95:14">=</operator> <name pos:start="95:16" pos:end="95:22">list_be</name></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:29">case <expr pos:start="99:10" pos:end="99:28"><name pos:start="99:10" pos:end="99:28">OPENPIC_MODEL_RAVEN</name></expr>:</case>

        <expr_stmt pos:start="101:9" pos:end="101:37"><expr pos:start="101:9" pos:end="101:36"><name pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:11">opp</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:20">nb_irqs</name></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:36">RAVEN_MAX_EXT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:36"><expr pos:start="103:9" pos:end="103:35"><name pos:start="103:9" pos:end="103:16"><name pos:start="103:9" pos:end="103:11">opp</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:16">vid</name></name> <operator pos:start="103:18" pos:end="103:18">=</operator> <name pos:start="103:20" pos:end="103:35">VID_REVISION_1_3</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:33"><expr pos:start="105:9" pos:end="105:32"><name pos:start="105:9" pos:end="105:17"><name pos:start="105:9" pos:end="105:11">opp</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:17">veni</name></name> <operator pos:start="105:19" pos:end="105:19">=</operator> <name pos:start="105:21" pos:end="105:32">VENI_GENERIC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:32"><expr pos:start="107:9" pos:end="107:31"><name pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:11">opp</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:24">vector_mask</name></name> <operator pos:start="107:26" pos:end="107:26">=</operator> <literal type="number" pos:start="107:28" pos:end="107:31">0xFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:34"><expr pos:start="109:9" pos:end="109:33"><name pos:start="109:9" pos:end="109:23"><name pos:start="109:9" pos:end="109:11">opp</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:23">tifr_reset</name></name> <operator pos:start="109:25" pos:end="109:25">=</operator> <literal type="number" pos:start="109:27" pos:end="109:33">4160000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:58"><expr pos:start="111:9" pos:end="111:57"><name pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:11">opp</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:23">ipvp_reset</name></name> <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:40">IPVP_MASK_MASK</name> <operator pos:start="111:42" pos:end="111:42">|</operator> <name pos:start="111:44" pos:end="111:57">IPVP_MODE_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:27"><expr pos:start="113:9" pos:end="113:26"><name pos:start="113:9" pos:end="113:22"><name pos:start="113:9" pos:end="113:11">opp</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:22">ide_reset</name></name> <operator pos:start="113:24" pos:end="113:24">=</operator> <literal type="number" pos:start="113:26" pos:end="113:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:37"><expr pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:20"><name pos:start="115:9" pos:end="115:11">opp</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:20">max_irq</name></name> <operator pos:start="115:22" pos:end="115:22">=</operator> <name pos:start="115:24" pos:end="115:36">RAVEN_MAX_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:38"><expr pos:start="117:9" pos:end="117:37"><name pos:start="117:9" pos:end="117:21"><name pos:start="117:9" pos:end="117:11">opp</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:21">irq_ipi0</name></name> <operator pos:start="117:23" pos:end="117:23">=</operator> <name pos:start="117:25" pos:end="117:37">RAVEN_IPI_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:38"><expr pos:start="119:9" pos:end="119:37"><name pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:11">opp</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:21">irq_tim0</name></name> <operator pos:start="119:23" pos:end="119:23">=</operator> <name pos:start="119:25" pos:end="119:37">RAVEN_TMR_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:23"><expr pos:start="121:9" pos:end="121:22"><name pos:start="121:9" pos:end="121:17"><name pos:start="121:9" pos:end="121:11">opp</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:17">brr1</name></name> <operator pos:start="121:19" pos:end="121:19">=</operator> <operator pos:start="121:21" pos:end="121:21">-</operator><literal type="number" pos:start="121:22" pos:end="121:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:23"><expr pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:12">list</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <name pos:start="123:16" pos:end="123:22">list_le</name></expr>;</expr_stmt>

        <comment type="block" pos:start="125:9" pos:end="125:34">/* Don't map MSI region */</comment>

        <expr_stmt pos:start="127:9" pos:end="127:28"><expr pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:15"><name pos:start="127:9" pos:end="127:12">list</name><index pos:start="127:13" pos:end="127:15">[<expr pos:start="127:14" pos:end="127:14"><literal type="number" pos:start="127:14" pos:end="127:14">2</literal></expr>]</index></name><operator pos:start="127:16" pos:end="127:16">.</operator><name pos:start="127:17" pos:end="127:19">map</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <name pos:start="127:23" pos:end="127:27">false</name></expr>;</expr_stmt>



        <comment type="block" pos:start="131:9" pos:end="131:37">/* Only UP supported today */</comment>

        <if_stmt pos:start="133:9" pos:end="137:9"><if pos:start="133:9" pos:end="137:9">if <condition pos:start="133:12" pos:end="133:30">(<expr pos:start="133:13" pos:end="133:29"><name pos:start="133:13" pos:end="133:24"><name pos:start="133:13" pos:end="133:15">opp</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:24">nb_cpus</name></name> <operator pos:start="133:26" pos:end="133:27">!=</operator> <literal type="number" pos:start="133:29" pos:end="133:29">1</literal></expr>)</condition> <block pos:start="133:32" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:27">

            <return pos:start="135:13" pos:end="135:27">return <expr pos:start="135:20" pos:end="135:26"><operator pos:start="135:20" pos:end="135:20">-</operator><name pos:start="135:21" pos:end="135:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="145:5" pos:end="145:54"><expr pos:start="145:5" pos:end="145:53"><call pos:start="145:5" pos:end="145:53"><name pos:start="145:5" pos:end="145:22">memory_region_init</name><argument_list pos:start="145:23" pos:end="145:53">(<argument pos:start="145:24" pos:end="145:32"><expr pos:start="145:24" pos:end="145:32"><operator pos:start="145:24" pos:end="145:24">&amp;</operator><name pos:start="145:25" pos:end="145:32"><name pos:start="145:25" pos:end="145:27">opp</name><operator pos:start="145:28" pos:end="145:29">-&gt;</operator><name pos:start="145:30" pos:end="145:32">mem</name></name></expr></argument>, <argument pos:start="145:35" pos:end="145:43"><expr pos:start="145:35" pos:end="145:43"><literal type="string" pos:start="145:35" pos:end="145:43">"openpic"</literal></expr></argument>, <argument pos:start="145:46" pos:end="145:52"><expr pos:start="145:46" pos:end="145:52"><literal type="number" pos:start="145:46" pos:end="145:52">0x40000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="149:5" pos:end="169:5">for <control pos:start="149:9" pos:end="149:45">(<init pos:start="149:10" pos:end="149:15"><expr pos:start="149:10" pos:end="149:14"><name pos:start="149:10" pos:end="149:10">i</name> <operator pos:start="149:12" pos:end="149:12">=</operator> <literal type="number" pos:start="149:14" pos:end="149:14">0</literal></expr>;</init> <condition pos:start="149:17" pos:end="149:40"><expr pos:start="149:17" pos:end="149:39"><name pos:start="149:17" pos:end="149:17">i</name> <operator pos:start="149:19" pos:end="149:19">&lt;</operator> <call pos:start="149:21" pos:end="149:39"><name pos:start="149:21" pos:end="149:30">ARRAY_SIZE</name><argument_list pos:start="149:31" pos:end="149:39">(<argument pos:start="149:32" pos:end="149:38"><expr pos:start="149:32" pos:end="149:38"><name pos:start="149:32" pos:end="149:38">list_le</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="149:42" pos:end="149:44"><expr pos:start="149:42" pos:end="149:44"><name pos:start="149:42" pos:end="149:42">i</name><operator pos:start="149:43" pos:end="149:44">++</operator></expr></incr>)</control> <block pos:start="149:47" pos:end="169:5">{<block_content pos:start="151:9" pos:end="167:57">

        <if_stmt pos:start="151:9" pos:end="155:9"><if pos:start="151:9" pos:end="155:9">if <condition pos:start="151:12" pos:end="151:25">(<expr pos:start="151:13" pos:end="151:24"><operator pos:start="151:13" pos:end="151:13">!</operator><name pos:start="151:14" pos:end="151:20"><name pos:start="151:14" pos:end="151:17">list</name><index pos:start="151:18" pos:end="151:20">[<expr pos:start="151:19" pos:end="151:19"><name pos:start="151:19" pos:end="151:19">i</name></expr>]</index></name><operator pos:start="151:21" pos:end="151:21">.</operator><name pos:start="151:22" pos:end="151:24">map</name></expr>)</condition> <block pos:start="151:27" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:21">

            <continue pos:start="153:13" pos:end="153:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="159:9" pos:end="161:58"><expr pos:start="159:9" pos:end="161:57"><call pos:start="159:9" pos:end="161:57"><name pos:start="159:9" pos:end="159:29">memory_region_init_io</name><argument_list pos:start="159:30" pos:end="161:57">(<argument pos:start="159:31" pos:end="159:49"><expr pos:start="159:31" pos:end="159:49"><operator pos:start="159:31" pos:end="159:31">&amp;</operator><name pos:start="159:32" pos:end="159:49"><name pos:start="159:32" pos:end="159:34">opp</name><operator pos:start="159:35" pos:end="159:36">-&gt;</operator><name pos:start="159:37" pos:end="159:46">sub_io_mem</name><index pos:start="159:47" pos:end="159:49">[<expr pos:start="159:48" pos:end="159:48"><name pos:start="159:48" pos:end="159:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="159:52" pos:end="159:62"><expr pos:start="159:52" pos:end="159:62"><name pos:start="159:52" pos:end="159:58"><name pos:start="159:52" pos:end="159:55">list</name><index pos:start="159:56" pos:end="159:58">[<expr pos:start="159:57" pos:end="159:57"><name pos:start="159:57" pos:end="159:57">i</name></expr>]</index></name><operator pos:start="159:59" pos:end="159:59">.</operator><name pos:start="159:60" pos:end="159:62">ops</name></expr></argument>, <argument pos:start="159:65" pos:end="159:67"><expr pos:start="159:65" pos:end="159:67"><name pos:start="159:65" pos:end="159:67">opp</name></expr></argument>,

                              <argument pos:start="161:31" pos:end="161:42"><expr pos:start="161:31" pos:end="161:42"><name pos:start="161:31" pos:end="161:37"><name pos:start="161:31" pos:end="161:34">list</name><index pos:start="161:35" pos:end="161:37">[<expr pos:start="161:36" pos:end="161:36"><name pos:start="161:36" pos:end="161:36">i</name></expr>]</index></name><operator pos:start="161:38" pos:end="161:38">.</operator><name pos:start="161:39" pos:end="161:42">name</name></expr></argument>, <argument pos:start="161:45" pos:end="161:56"><expr pos:start="161:45" pos:end="161:56"><name pos:start="161:45" pos:end="161:51"><name pos:start="161:45" pos:end="161:48">list</name><index pos:start="161:49" pos:end="161:51">[<expr pos:start="161:50" pos:end="161:50"><name pos:start="161:50" pos:end="161:50">i</name></expr>]</index></name><operator pos:start="161:52" pos:end="161:52">.</operator><name pos:start="161:53" pos:end="161:56">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="165:9" pos:end="167:57"><expr pos:start="165:9" pos:end="167:56"><call pos:start="165:9" pos:end="167:56"><name pos:start="165:9" pos:end="165:35">memory_region_add_subregion</name><argument_list pos:start="165:36" pos:end="167:56">(<argument pos:start="165:37" pos:end="165:45"><expr pos:start="165:37" pos:end="165:45"><operator pos:start="165:37" pos:end="165:37">&amp;</operator><name pos:start="165:38" pos:end="165:45"><name pos:start="165:38" pos:end="165:40">opp</name><operator pos:start="165:41" pos:end="165:42">-&gt;</operator><name pos:start="165:43" pos:end="165:45">mem</name></name></expr></argument>, <argument pos:start="165:48" pos:end="165:65"><expr pos:start="165:48" pos:end="165:65"><name pos:start="165:48" pos:end="165:54"><name pos:start="165:48" pos:end="165:51">list</name><index pos:start="165:52" pos:end="165:54">[<expr pos:start="165:53" pos:end="165:53"><name pos:start="165:53" pos:end="165:53">i</name></expr>]</index></name><operator pos:start="165:55" pos:end="165:55">.</operator><name pos:start="165:56" pos:end="165:65">start_addr</name></expr></argument>,

                                    <argument pos:start="167:37" pos:end="167:55"><expr pos:start="167:37" pos:end="167:55"><operator pos:start="167:37" pos:end="167:37">&amp;</operator><name pos:start="167:38" pos:end="167:55"><name pos:start="167:38" pos:end="167:40">opp</name><operator pos:start="167:41" pos:end="167:42">-&gt;</operator><name pos:start="167:43" pos:end="167:52">sub_io_mem</name><index pos:start="167:53" pos:end="167:55">[<expr pos:start="167:54" pos:end="167:54"><name pos:start="167:54" pos:end="167:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="173:5" pos:end="183:5">for <control pos:start="173:9" pos:end="173:38">(<init pos:start="173:10" pos:end="173:15"><expr pos:start="173:10" pos:end="173:14"><name pos:start="173:10" pos:end="173:10">i</name> <operator pos:start="173:12" pos:end="173:12">=</operator> <literal type="number" pos:start="173:14" pos:end="173:14">0</literal></expr>;</init> <condition pos:start="173:17" pos:end="173:33"><expr pos:start="173:17" pos:end="173:32"><name pos:start="173:17" pos:end="173:17">i</name> <operator pos:start="173:19" pos:end="173:19">&lt;</operator> <name pos:start="173:21" pos:end="173:32"><name pos:start="173:21" pos:end="173:23">opp</name><operator pos:start="173:24" pos:end="173:25">-&gt;</operator><name pos:start="173:26" pos:end="173:32">nb_cpus</name></name></expr>;</condition> <incr pos:start="173:35" pos:end="173:37"><expr pos:start="173:35" pos:end="173:37"><name pos:start="173:35" pos:end="173:35">i</name><operator pos:start="173:36" pos:end="173:37">++</operator></expr></incr>)</control> <block pos:start="173:40" pos:end="183:5">{<block_content pos:start="175:9" pos:end="181:9">

        <expr_stmt pos:start="175:9" pos:end="175:62"><expr pos:start="175:9" pos:end="175:61"><name pos:start="175:9" pos:end="175:19"><name pos:start="175:9" pos:end="175:11">opp</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:16">dst</name><index pos:start="175:17" pos:end="175:19">[<expr pos:start="175:18" pos:end="175:18"><name pos:start="175:18" pos:end="175:18">i</name></expr>]</index></name><operator pos:start="175:20" pos:end="175:20">.</operator><name pos:start="175:21" pos:end="175:24">irqs</name> <operator pos:start="175:26" pos:end="175:26">=</operator> <call pos:start="175:28" pos:end="175:61"><name pos:start="175:28" pos:end="175:32">g_new</name><argument_list pos:start="175:33" pos:end="175:61">(<argument pos:start="175:34" pos:end="175:41"><expr pos:start="175:34" pos:end="175:41"><name pos:start="175:34" pos:end="175:41">qemu_irq</name></expr></argument>, <argument pos:start="175:44" pos:end="175:60"><expr pos:start="175:44" pos:end="175:60"><name pos:start="175:44" pos:end="175:60">OPENPIC_OUTPUT_NB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="177:9" pos:end="181:9">for <control pos:start="177:13" pos:end="177:47">(<init pos:start="177:14" pos:end="177:19"><expr pos:start="177:14" pos:end="177:18"><name pos:start="177:14" pos:end="177:14">j</name> <operator pos:start="177:16" pos:end="177:16">=</operator> <literal type="number" pos:start="177:18" pos:end="177:18">0</literal></expr>;</init> <condition pos:start="177:21" pos:end="177:42"><expr pos:start="177:21" pos:end="177:41"><name pos:start="177:21" pos:end="177:21">j</name> <operator pos:start="177:23" pos:end="177:23">&lt;</operator> <name pos:start="177:25" pos:end="177:41">OPENPIC_OUTPUT_NB</name></expr>;</condition> <incr pos:start="177:44" pos:end="177:46"><expr pos:start="177:44" pos:end="177:46"><name pos:start="177:44" pos:end="177:44">j</name><operator pos:start="177:45" pos:end="177:46">++</operator></expr></incr>)</control> <block pos:start="177:49" pos:end="181:9">{<block_content pos:start="179:13" pos:end="179:55">

            <expr_stmt pos:start="179:13" pos:end="179:55"><expr pos:start="179:13" pos:end="179:54"><call pos:start="179:13" pos:end="179:54"><name pos:start="179:13" pos:end="179:27">sysbus_init_irq</name><argument_list pos:start="179:28" pos:end="179:54">(<argument pos:start="179:29" pos:end="179:31"><expr pos:start="179:29" pos:end="179:31"><name pos:start="179:29" pos:end="179:31">dev</name></expr></argument>, <argument pos:start="179:34" pos:end="179:53"><expr pos:start="179:34" pos:end="179:53"><operator pos:start="179:34" pos:end="179:34">&amp;</operator><name pos:start="179:35" pos:end="179:45"><name pos:start="179:35" pos:end="179:37">opp</name><operator pos:start="179:38" pos:end="179:39">-&gt;</operator><name pos:start="179:40" pos:end="179:42">dst</name><index pos:start="179:43" pos:end="179:45">[<expr pos:start="179:44" pos:end="179:44"><name pos:start="179:44" pos:end="179:44">i</name></expr>]</index></name><operator pos:start="179:46" pos:end="179:46">.</operator><name pos:start="179:47" pos:end="179:53"><name pos:start="179:47" pos:end="179:50">irqs</name><index pos:start="179:51" pos:end="179:53">[<expr pos:start="179:52" pos:end="179:52"><name pos:start="179:52" pos:end="179:52">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="187:5" pos:end="189:53"><expr pos:start="187:5" pos:end="189:52"><call pos:start="187:5" pos:end="189:52"><name pos:start="187:5" pos:end="187:19">register_savevm</name><argument_list pos:start="187:20" pos:end="189:52">(<argument pos:start="187:21" pos:end="187:37"><expr pos:start="187:21" pos:end="187:37"><operator pos:start="187:21" pos:end="187:21">&amp;</operator><name pos:start="187:22" pos:end="187:37"><name pos:start="187:22" pos:end="187:24">opp</name><operator pos:start="187:25" pos:end="187:26">-&gt;</operator><name pos:start="187:27" pos:end="187:32">busdev</name><operator pos:start="187:33" pos:end="187:33">.</operator><name pos:start="187:34" pos:end="187:37">qdev</name></name></expr></argument>, <argument pos:start="187:40" pos:end="187:48"><expr pos:start="187:40" pos:end="187:48"><literal type="string" pos:start="187:40" pos:end="187:48">"openpic"</literal></expr></argument>, <argument pos:start="187:51" pos:end="187:51"><expr pos:start="187:51" pos:end="187:51"><literal type="number" pos:start="187:51" pos:end="187:51">0</literal></expr></argument>, <argument pos:start="187:54" pos:end="187:54"><expr pos:start="187:54" pos:end="187:54"><literal type="number" pos:start="187:54" pos:end="187:54">2</literal></expr></argument>,

                    <argument pos:start="189:21" pos:end="189:32"><expr pos:start="189:21" pos:end="189:32"><name pos:start="189:21" pos:end="189:32">openpic_save</name></expr></argument>, <argument pos:start="189:35" pos:end="189:46"><expr pos:start="189:35" pos:end="189:46"><name pos:start="189:35" pos:end="189:46">openpic_load</name></expr></argument>, <argument pos:start="189:49" pos:end="189:51"><expr pos:start="189:49" pos:end="189:51"><name pos:start="189:49" pos:end="189:51">opp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="193:5" pos:end="193:37"><expr pos:start="193:5" pos:end="193:36"><call pos:start="193:5" pos:end="193:36"><name pos:start="193:5" pos:end="193:20">sysbus_init_mmio</name><argument_list pos:start="193:21" pos:end="193:36">(<argument pos:start="193:22" pos:end="193:24"><expr pos:start="193:22" pos:end="193:24"><name pos:start="193:22" pos:end="193:24">dev</name></expr></argument>, <argument pos:start="193:27" pos:end="193:35"><expr pos:start="193:27" pos:end="193:35"><operator pos:start="193:27" pos:end="193:27">&amp;</operator><name pos:start="193:28" pos:end="193:35"><name pos:start="193:28" pos:end="193:30">opp</name><operator pos:start="193:31" pos:end="193:32">-&gt;</operator><name pos:start="193:33" pos:end="193:35">mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:65"><expr pos:start="195:5" pos:end="195:64"><call pos:start="195:5" pos:end="195:64"><name pos:start="195:5" pos:end="195:21">qdev_init_gpio_in</name><argument_list pos:start="195:22" pos:end="195:64">(<argument pos:start="195:23" pos:end="195:32"><expr pos:start="195:23" pos:end="195:32"><operator pos:start="195:23" pos:end="195:23">&amp;</operator><name pos:start="195:24" pos:end="195:32"><name pos:start="195:24" pos:end="195:26">dev</name><operator pos:start="195:27" pos:end="195:28">-&gt;</operator><name pos:start="195:29" pos:end="195:32">qdev</name></name></expr></argument>, <argument pos:start="195:35" pos:end="195:49"><expr pos:start="195:35" pos:end="195:49"><name pos:start="195:35" pos:end="195:49">openpic_set_irq</name></expr></argument>, <argument pos:start="195:52" pos:end="195:63"><expr pos:start="195:52" pos:end="195:63"><name pos:start="195:52" pos:end="195:63"><name pos:start="195:52" pos:end="195:54">opp</name><operator pos:start="195:55" pos:end="195:56">-&gt;</operator><name pos:start="195:57" pos:end="195:63">max_irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="199:5" pos:end="199:13">return <expr pos:start="199:12" pos:end="199:12"><literal type="number" pos:start="199:12" pos:end="199:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
