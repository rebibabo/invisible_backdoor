<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25688.c" pos:tabs="8"><function pos:start="1:1" pos:end="26:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">icp_pit_write</name><parameter_list pos:start="1:26" pos:end="3:56">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:46">hwaddr</name></type> <name pos:start="1:48" pos:end="1:53">offset</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:40">value</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:50">unsigned</name></type> <name pos:start="3:52" pos:end="3:55">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="26:1">{<block_content pos:start="7:5" pos:end="24:55">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">icp_pit_state</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:46">= <expr pos:start="7:24" pos:end="7:46"><operator pos:start="7:24" pos:end="7:24">(</operator><name pos:start="7:25" pos:end="7:37">icp_pit_state</name> <operator pos:start="7:39" pos:end="7:39">*</operator><operator pos:start="7:40" pos:end="7:40">)</operator><name pos:start="7:41" pos:end="7:46">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:5">n</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <name pos:start="13:9" pos:end="13:14">offset</name> <operator pos:start="13:16" pos:end="13:17">&gt;&gt;</operator> <literal type="number" pos:start="13:19" pos:end="13:19">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="20:5"><if pos:start="15:5" pos:end="20:5">if <condition pos:start="15:8" pos:end="15:14">(<expr pos:start="15:9" pos:end="15:13"><name pos:start="15:9" pos:end="15:9">n</name> <operator pos:start="15:11" pos:end="15:11">&gt;</operator> <literal type="number" pos:start="15:13" pos:end="15:13">2</literal></expr>)</condition> <block pos:start="15:16" pos:end="20:5">{<block_content pos:start="17:9" pos:end="17:74">

        <expr_stmt pos:start="17:9" pos:end="17:74"><expr pos:start="17:9" pos:end="17:73"><call pos:start="17:9" pos:end="17:73"><name pos:start="17:9" pos:end="17:21">qemu_log_mask</name><argument_list pos:start="17:22" pos:end="17:73">(<argument pos:start="17:23" pos:end="17:37"><expr pos:start="17:23" pos:end="17:37"><name pos:start="17:23" pos:end="17:37">LOG_GUEST_ERROR</name></expr></argument>, <argument pos:start="17:40" pos:end="17:59"><expr pos:start="17:40" pos:end="17:59"><literal type="string" pos:start="17:40" pos:end="17:59">"%s: Bad timer %d\n"</literal></expr></argument>, <argument pos:start="17:62" pos:end="17:69"><expr pos:start="17:62" pos:end="17:69"><name pos:start="17:62" pos:end="17:69">__func__</name></expr></argument>, <argument pos:start="17:72" pos:end="17:72"><expr pos:start="17:72" pos:end="17:72"><name pos:start="17:72" pos:end="17:72">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="24:5" pos:end="24:55"><expr pos:start="24:5" pos:end="24:54"><call pos:start="24:5" pos:end="24:54"><name pos:start="24:5" pos:end="24:19">arm_timer_write</name><argument_list pos:start="24:20" pos:end="24:54">(<argument pos:start="24:21" pos:end="24:31"><expr pos:start="24:21" pos:end="24:31"><name pos:start="24:21" pos:end="24:31"><name pos:start="24:21" pos:end="24:21">s</name><operator pos:start="24:22" pos:end="24:23">-&gt;</operator><name pos:start="24:24" pos:end="24:28">timer</name><index pos:start="24:29" pos:end="24:31">[<expr pos:start="24:30" pos:end="24:30"><name pos:start="24:30" pos:end="24:30">n</name></expr>]</index></name></expr></argument>, <argument pos:start="24:34" pos:end="24:46"><expr pos:start="24:34" pos:end="24:46"><name pos:start="24:34" pos:end="24:39">offset</name> <operator pos:start="24:41" pos:end="24:41">&amp;</operator> <literal type="number" pos:start="24:43" pos:end="24:46">0xff</literal></expr></argument>, <argument pos:start="24:49" pos:end="24:53"><expr pos:start="24:49" pos:end="24:53"><name pos:start="24:49" pos:end="24:53">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
