<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3609.c" pos:tabs="8"><function pos:start="1:1" pos:end="523:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">h264_field_start</name><parameter_list pos:start="1:28" pos:end="3:65">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:39">H264Context</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">h</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:70"><decl pos:start="1:45" pos:end="1:70"><type pos:start="1:45" pos:end="1:70"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:66">H264SliceContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:70">sl</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:47"><decl pos:start="3:29" pos:end="3:47"><type pos:start="3:29" pos:end="3:47"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:42">H2645NAL</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">nal</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:64"><decl pos:start="3:50" pos:end="3:64"><type pos:start="3:50" pos:end="3:64"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:64">first_slice</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="523:1">{<block_content pos:start="7:5" pos:end="521:13">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:15"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">SPS</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:18">sps</name></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:26">last_pic_structure</name></decl>, <decl pos:start="13:29" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:29" pos:end="13:46">last_pic_droppable</name></decl>, <decl pos:start="13:49" pos:end="13:51"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:49" pos:end="13:51">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:42"><name pos:start="17:11" pos:end="17:22">h264_init_ps</name><argument_list pos:start="17:23" pos:end="17:42">(<argument pos:start="17:24" pos:end="17:24"><expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">h</name></expr></argument>, <argument pos:start="17:27" pos:end="17:28"><expr pos:start="17:27" pos:end="17:28"><name pos:start="17:27" pos:end="17:28">sl</name></expr></argument>, <argument pos:start="17:31" pos:end="17:41"><expr pos:start="17:31" pos:end="17:41"><name pos:start="17:31" pos:end="17:41">first_slice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:19"><if pos:start="19:5" pos:end="21:19">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:19"><block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:20"><expr pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:7">sps</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:19"><name pos:start="25:11" pos:end="25:11">h</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:15">ps</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:19">sps</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:22">last_pic_droppable</name>   <operator pos:start="29:26" pos:end="29:26">=</operator> <name pos:start="29:28" pos:end="29:39"><name pos:start="29:28" pos:end="29:28">h</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:39">droppable</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:22">last_pic_structure</name>   <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:47"><name pos:start="31:28" pos:end="31:28">h</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:47">picture_structure</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:47"><expr pos:start="33:5" pos:end="33:46"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:5">h</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:16">droppable</name></name>         <operator pos:start="33:26" pos:end="33:26">=</operator> <operator pos:start="33:28" pos:end="33:28">(</operator><name pos:start="33:29" pos:end="33:40"><name pos:start="33:29" pos:end="33:31">nal</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:40">ref_idc</name></name> <operator pos:start="33:42" pos:end="33:43">==</operator> <literal type="number" pos:start="33:45" pos:end="33:45">0</literal><operator pos:start="33:46" pos:end="33:46">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:5">h</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:24">picture_structure</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:48"><name pos:start="35:28" pos:end="35:29">sl</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:48">picture_structure</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:44"><expr pos:start="39:5" pos:end="39:43"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:5">h</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:10">poc</name><operator pos:start="39:11" pos:end="39:11">.</operator><name pos:start="39:12" pos:end="39:20">frame_num</name></name>        <operator pos:start="39:29" pos:end="39:29">=</operator> <name pos:start="39:31" pos:end="39:43"><name pos:start="39:31" pos:end="39:32">sl</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:43">frame_num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:5">h</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:10">poc</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:18">poc_lsb</name></name>          <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:41"><name pos:start="41:31" pos:end="41:32">sl</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:41">poc_lsb</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:51"><expr pos:start="43:5" pos:end="43:50"><name pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:5">h</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:10">poc</name><operator pos:start="43:11" pos:end="43:11">.</operator><name pos:start="43:12" pos:end="43:27">delta_poc_bottom</name></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:50"><name pos:start="43:31" pos:end="43:32">sl</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:50">delta_poc_bottom</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:47"><expr pos:start="45:5" pos:end="45:46"><name pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:5">h</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:10">poc</name><operator pos:start="45:11" pos:end="45:11">.</operator><name pos:start="45:12" pos:end="45:20">delta_poc</name><index pos:start="45:21" pos:end="45:23">[<expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>]</index></name>     <operator pos:start="45:29" pos:end="45:29">=</operator> <name pos:start="45:31" pos:end="45:46"><name pos:start="45:31" pos:end="45:32">sl</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:43">delta_poc</name><index pos:start="45:44" pos:end="45:46">[<expr pos:start="45:45" pos:end="45:45"><literal type="number" pos:start="45:45" pos:end="45:45">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:47"><expr pos:start="47:5" pos:end="47:46"><name pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:5">h</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:10">poc</name><operator pos:start="47:11" pos:end="47:11">.</operator><name pos:start="47:12" pos:end="47:20">delta_poc</name><index pos:start="47:21" pos:end="47:23">[<expr pos:start="47:22" pos:end="47:22"><literal type="number" pos:start="47:22" pos:end="47:22">1</literal></expr>]</index></name>     <operator pos:start="47:29" pos:end="47:29">=</operator> <name pos:start="47:31" pos:end="47:46"><name pos:start="47:31" pos:end="47:32">sl</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:43">delta_poc</name><index pos:start="47:44" pos:end="47:46">[<expr pos:start="47:45" pos:end="47:45"><literal type="number" pos:start="47:45" pos:end="47:45">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="53:40">/* Shorten frame num gaps so we don't have to allocate reference

     * frames just to throw them away */</comment>

    <if_stmt pos:start="55:5" pos:end="83:5"><if pos:start="55:5" pos:end="83:5">if <condition pos:start="55:8" pos:end="55:50">(<expr pos:start="55:9" pos:end="55:49"><name pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:9">h</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:14">poc</name><operator pos:start="55:15" pos:end="55:15">.</operator><name pos:start="55:16" pos:end="55:24">frame_num</name></name> <operator pos:start="55:26" pos:end="55:27">!=</operator> <name pos:start="55:29" pos:end="55:49"><name pos:start="55:29" pos:end="55:29">h</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:34">poc</name><operator pos:start="55:35" pos:end="55:35">.</operator><name pos:start="55:36" pos:end="55:49">prev_frame_num</name></name></expr>)</condition> <block pos:start="55:52" pos:end="83:5">{<block_content pos:start="57:9" pos:end="81:9">

        <decl_stmt pos:start="57:9" pos:end="57:58"><decl pos:start="57:9" pos:end="57:57"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:33">unwrap_prev_frame_num</name> <init pos:start="57:35" pos:end="57:57">= <expr pos:start="57:37" pos:end="57:57"><name pos:start="57:37" pos:end="57:57"><name pos:start="57:37" pos:end="57:37">h</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:42">poc</name><operator pos:start="57:43" pos:end="57:43">.</operator><name pos:start="57:44" pos:end="57:57">prev_frame_num</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:65"><decl pos:start="59:9" pos:end="59:64"><type pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">int</name></type> <name pos:start="59:13" pos:end="59:25">max_frame_num</name>         <init pos:start="59:35" pos:end="59:64">= <expr pos:start="59:37" pos:end="59:64"><literal type="number" pos:start="59:37" pos:end="59:37">1</literal> <operator pos:start="59:39" pos:end="59:40">&lt;&lt;</operator> <name pos:start="59:42" pos:end="59:64"><name pos:start="59:42" pos:end="59:44">sps</name><operator pos:start="59:45" pos:end="59:46">-&gt;</operator><name pos:start="59:47" pos:end="59:64">log2_max_frame_num</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="63:9" pos:end="65:51"><if pos:start="63:9" pos:end="65:51">if <condition pos:start="63:12" pos:end="63:53">(<expr pos:start="63:13" pos:end="63:52"><name pos:start="63:13" pos:end="63:33">unwrap_prev_frame_num</name> <operator pos:start="63:35" pos:end="63:35">&gt;</operator> <name pos:start="63:37" pos:end="63:52"><name pos:start="63:37" pos:end="63:37">h</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:42">poc</name><operator pos:start="63:43" pos:end="63:43">.</operator><name pos:start="63:44" pos:end="63:52">frame_num</name></name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:51"><block_content pos:start="65:13" pos:end="65:51">

            <expr_stmt pos:start="65:13" pos:end="65:51"><expr pos:start="65:13" pos:end="65:50"><name pos:start="65:13" pos:end="65:33">unwrap_prev_frame_num</name> <operator pos:start="65:35" pos:end="65:36">-=</operator> <name pos:start="65:38" pos:end="65:50">max_frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="69:9" pos:end="81:9"><if pos:start="69:9" pos:end="81:9">if <condition pos:start="69:12" pos:end="69:78">(<expr pos:start="69:13" pos:end="69:77"><operator pos:start="69:13" pos:end="69:13">(</operator><name pos:start="69:14" pos:end="69:29"><name pos:start="69:14" pos:end="69:14">h</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:19">poc</name><operator pos:start="69:20" pos:end="69:20">.</operator><name pos:start="69:21" pos:end="69:29">frame_num</name></name> <operator pos:start="69:31" pos:end="69:31">-</operator> <name pos:start="69:33" pos:end="69:53">unwrap_prev_frame_num</name><operator pos:start="69:54" pos:end="69:54">)</operator> <operator pos:start="69:56" pos:end="69:56">&gt;</operator> <name pos:start="69:58" pos:end="69:77"><name pos:start="69:58" pos:end="69:60">sps</name><operator pos:start="69:61" pos:end="69:62">-&gt;</operator><name pos:start="69:63" pos:end="69:77">ref_frame_count</name></name></expr>)</condition> <block pos:start="69:80" pos:end="81:9">{<block_content pos:start="71:13" pos:end="79:58">

            <expr_stmt pos:start="71:13" pos:end="71:82"><expr pos:start="71:13" pos:end="71:81"><name pos:start="71:13" pos:end="71:33">unwrap_prev_frame_num</name> <operator pos:start="71:35" pos:end="71:35">=</operator> <operator pos:start="71:37" pos:end="71:37">(</operator><name pos:start="71:38" pos:end="71:53"><name pos:start="71:38" pos:end="71:38">h</name><operator pos:start="71:39" pos:end="71:40">-&gt;</operator><name pos:start="71:41" pos:end="71:43">poc</name><operator pos:start="71:44" pos:end="71:44">.</operator><name pos:start="71:45" pos:end="71:53">frame_num</name></name> <operator pos:start="71:55" pos:end="71:55">-</operator> <name pos:start="71:57" pos:end="71:76"><name pos:start="71:57" pos:end="71:59">sps</name><operator pos:start="71:60" pos:end="71:61">-&gt;</operator><name pos:start="71:62" pos:end="71:76">ref_frame_count</name></name><operator pos:start="71:77" pos:end="71:77">)</operator> <operator pos:start="71:79" pos:end="71:79">-</operator> <literal type="number" pos:start="71:81" pos:end="71:81">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="75:55"><if pos:start="73:13" pos:end="75:55">if <condition pos:start="73:16" pos:end="73:42">(<expr pos:start="73:17" pos:end="73:41"><name pos:start="73:17" pos:end="73:37">unwrap_prev_frame_num</name> <operator pos:start="73:39" pos:end="73:39">&lt;</operator> <literal type="number" pos:start="73:41" pos:end="73:41">0</literal></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:55"><block_content pos:start="75:17" pos:end="75:55">

                <expr_stmt pos:start="75:17" pos:end="75:55"><expr pos:start="75:17" pos:end="75:54"><name pos:start="75:17" pos:end="75:37">unwrap_prev_frame_num</name> <operator pos:start="75:39" pos:end="75:40">+=</operator> <name pos:start="75:42" pos:end="75:54">max_frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="79:13" pos:end="79:58"><expr pos:start="79:13" pos:end="79:57"><name pos:start="79:13" pos:end="79:33"><name pos:start="79:13" pos:end="79:13">h</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:18">poc</name><operator pos:start="79:19" pos:end="79:19">.</operator><name pos:start="79:20" pos:end="79:33">prev_frame_num</name></name> <operator pos:start="79:35" pos:end="79:35">=</operator> <name pos:start="79:37" pos:end="79:57">unwrap_prev_frame_num</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="87:5" pos:end="95:47">/* See if we have a decoded first field looking for a pair...

     * Here, we're using that to see if we should mark previously

     * decode frames as "finished".

     * We have to do that before the "dummy" in-between frame allocation,

     * since that can modify h-&gt;cur_pic_ptr. */</comment>

    <if_stmt pos:start="97:5" pos:end="197:5"><if pos:start="97:5" pos:end="197:5">if <condition pos:start="97:8" pos:end="97:23">(<expr pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:9">h</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:22">first_field</name></name></expr>)</condition> <block pos:start="97:25" pos:end="197:5">{<block_content pos:start="99:9" pos:end="195:9">

        <expr_stmt pos:start="99:9" pos:end="99:35"><expr pos:start="99:9" pos:end="99:34"><call pos:start="99:9" pos:end="99:34"><name pos:start="99:9" pos:end="99:18">av_assert0</name><argument_list pos:start="99:19" pos:end="99:34">(<argument pos:start="99:20" pos:end="99:33"><expr pos:start="99:20" pos:end="99:33"><name pos:start="99:20" pos:end="99:33"><name pos:start="99:20" pos:end="99:20">h</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:33">cur_pic_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:46"><expr pos:start="101:9" pos:end="101:45"><call pos:start="101:9" pos:end="101:45"><name pos:start="101:9" pos:end="101:18">av_assert0</name><argument_list pos:start="101:19" pos:end="101:45">(<argument pos:start="101:20" pos:end="101:44"><expr pos:start="101:20" pos:end="101:44"><name pos:start="101:20" pos:end="101:44"><name pos:start="101:20" pos:end="101:20">h</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:33">cur_pic_ptr</name><operator pos:start="101:34" pos:end="101:35">-&gt;</operator><name pos:start="101:36" pos:end="101:36">f</name><operator pos:start="101:37" pos:end="101:38">-&gt;</operator><name pos:start="101:39" pos:end="101:41">buf</name><index pos:start="101:42" pos:end="101:44">[<expr pos:start="101:43" pos:end="101:43"><literal type="number" pos:start="101:43" pos:end="101:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:61"><expr pos:start="103:9" pos:end="103:60"><call pos:start="103:9" pos:end="103:60"><name pos:start="103:9" pos:end="103:14">assert</name><argument_list pos:start="103:15" pos:end="103:60">(<argument pos:start="103:16" pos:end="103:59"><expr pos:start="103:16" pos:end="103:59"><name pos:start="103:16" pos:end="103:40"><name pos:start="103:16" pos:end="103:16">h</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:29">cur_pic_ptr</name><operator pos:start="103:30" pos:end="103:31">-&gt;</operator><name pos:start="103:32" pos:end="103:40">reference</name></name> <operator pos:start="103:42" pos:end="103:43">!=</operator> <name pos:start="103:45" pos:end="103:59">DELAYED_PIC_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="107:9" pos:end="107:47">/* Mark old field/frame as completed */</comment>

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:49">(<expr pos:start="109:13" pos:end="109:48"><name pos:start="109:13" pos:end="109:36"><name pos:start="109:13" pos:end="109:13">h</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:26">cur_pic_ptr</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:30">tf</name><operator pos:start="109:31" pos:end="109:31">.</operator><name pos:start="109:32" pos:end="109:36">owner</name></name> <operator pos:start="109:38" pos:end="109:39">==</operator> <name pos:start="109:41" pos:end="109:48"><name pos:start="109:41" pos:end="109:41">h</name><operator pos:start="109:42" pos:end="109:43">-&gt;</operator><name pos:start="109:44" pos:end="109:48">avctx</name></name></expr>)</condition> <block pos:start="109:51" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:79">

            <expr_stmt pos:start="111:13" pos:end="113:79"><expr pos:start="111:13" pos:end="113:78"><call pos:start="111:13" pos:end="113:78"><name pos:start="111:13" pos:end="111:37">ff_thread_report_progress</name><argument_list pos:start="111:38" pos:end="113:78">(<argument pos:start="111:39" pos:end="111:57"><expr pos:start="111:39" pos:end="111:57"><operator pos:start="111:39" pos:end="111:39">&amp;</operator><name pos:start="111:40" pos:end="111:57"><name pos:start="111:40" pos:end="111:40">h</name><operator pos:start="111:41" pos:end="111:42">-&gt;</operator><name pos:start="111:43" pos:end="111:53">cur_pic_ptr</name><operator pos:start="111:54" pos:end="111:55">-&gt;</operator><name pos:start="111:56" pos:end="111:57">tf</name></name></expr></argument>, <argument pos:start="111:60" pos:end="111:66"><expr pos:start="111:60" pos:end="111:66"><name pos:start="111:60" pos:end="111:66">INT_MAX</name></expr></argument>,

                                      <argument pos:start="113:39" pos:end="113:77"><expr pos:start="113:39" pos:end="113:77"><name pos:start="113:39" pos:end="113:56">last_pic_structure</name> <operator pos:start="113:58" pos:end="113:59">==</operator> <name pos:start="113:61" pos:end="113:77">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="119:9" pos:end="119:62">/* figure out if we have a complementary field pair */</comment>

        <if_stmt pos:start="121:9" pos:end="195:9"><if pos:start="121:9" pos:end="135:9">if <condition pos:start="121:12" pos:end="121:76">(<expr pos:start="121:13" pos:end="121:75"><operator pos:start="121:13" pos:end="121:13">!</operator><call pos:start="121:14" pos:end="121:29"><name pos:start="121:14" pos:end="121:26">FIELD_PICTURE</name><argument_list pos:start="121:27" pos:end="121:29">(<argument pos:start="121:28" pos:end="121:28"><expr pos:start="121:28" pos:end="121:28"><name pos:start="121:28" pos:end="121:28">h</name></expr></argument>)</argument_list></call> <operator pos:start="121:31" pos:end="121:32">||</operator> <name pos:start="121:34" pos:end="121:53"><name pos:start="121:34" pos:end="121:34">h</name><operator pos:start="121:35" pos:end="121:36">-&gt;</operator><name pos:start="121:37" pos:end="121:53">picture_structure</name></name> <operator pos:start="121:55" pos:end="121:56">==</operator> <name pos:start="121:58" pos:end="121:75">last_pic_structure</name></expr>)</condition> <block pos:start="121:78" pos:end="135:9">{<block_content pos:start="127:13" pos:end="133:13">

            <comment type="block" pos:start="123:13" pos:end="125:57">/* Previous field is unmatched. Don't display it, but let it

             * remain for reference if marked as such. */</comment>

            <if_stmt pos:start="127:13" pos:end="133:13"><if pos:start="127:13" pos:end="133:13">if <condition pos:start="127:16" pos:end="127:49">(<expr pos:start="127:17" pos:end="127:48"><name pos:start="127:17" pos:end="127:34">last_pic_structure</name> <operator pos:start="127:36" pos:end="127:37">!=</operator> <name pos:start="127:39" pos:end="127:48">PICT_FRAME</name></expr>)</condition> <block pos:start="127:51" pos:end="133:13">{<block_content pos:start="129:17" pos:end="131:80">

                <expr_stmt pos:start="129:17" pos:end="131:80"><expr pos:start="129:17" pos:end="131:79"><call pos:start="129:17" pos:end="131:79"><name pos:start="129:17" pos:end="129:41">ff_thread_report_progress</name><argument_list pos:start="129:42" pos:end="131:79">(<argument pos:start="129:43" pos:end="129:61"><expr pos:start="129:43" pos:end="129:61"><operator pos:start="129:43" pos:end="129:43">&amp;</operator><name pos:start="129:44" pos:end="129:61"><name pos:start="129:44" pos:end="129:44">h</name><operator pos:start="129:45" pos:end="129:46">-&gt;</operator><name pos:start="129:47" pos:end="129:57">cur_pic_ptr</name><operator pos:start="129:58" pos:end="129:59">-&gt;</operator><name pos:start="129:60" pos:end="129:61">tf</name></name></expr></argument>, <argument pos:start="129:64" pos:end="129:70"><expr pos:start="129:64" pos:end="129:70"><name pos:start="129:64" pos:end="129:70">INT_MAX</name></expr></argument>,

                                          <argument pos:start="131:43" pos:end="131:78"><expr pos:start="131:43" pos:end="131:78"><name pos:start="131:43" pos:end="131:60">last_pic_structure</name> <operator pos:start="131:62" pos:end="131:63">==</operator> <name pos:start="131:65" pos:end="131:78">PICT_TOP_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="135:11" pos:end="195:9">else <block pos:start="135:16" pos:end="195:9">{<block_content pos:start="137:13" pos:end="193:13">

            <if_stmt pos:start="137:13" pos:end="193:13"><if pos:start="137:13" pos:end="155:13">if <condition pos:start="137:16" pos:end="137:62">(<expr pos:start="137:17" pos:end="137:61"><name pos:start="137:17" pos:end="137:41"><name pos:start="137:17" pos:end="137:17">h</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:30">cur_pic_ptr</name><operator pos:start="137:31" pos:end="137:32">-&gt;</operator><name pos:start="137:33" pos:end="137:41">frame_num</name></name> <operator pos:start="137:43" pos:end="137:44">!=</operator> <name pos:start="137:46" pos:end="137:61"><name pos:start="137:46" pos:end="137:46">h</name><operator pos:start="137:47" pos:end="137:48">-&gt;</operator><name pos:start="137:49" pos:end="137:51">poc</name><operator pos:start="137:52" pos:end="137:52">.</operator><name pos:start="137:53" pos:end="137:61">frame_num</name></name></expr>)</condition> <block pos:start="137:64" pos:end="155:13">{<block_content pos:start="147:17" pos:end="153:17">

                <comment type="block" pos:start="139:17" pos:end="145:31">/* This and previous field were reference, but had

                 * different frame_nums. Consider this field first in

                 * pair. Throw away previous field except for reference

                 * purposes. */</comment>

                <if_stmt pos:start="147:17" pos:end="153:17"><if pos:start="147:17" pos:end="153:17">if <condition pos:start="147:20" pos:end="147:53">(<expr pos:start="147:21" pos:end="147:52"><name pos:start="147:21" pos:end="147:38">last_pic_structure</name> <operator pos:start="147:40" pos:end="147:41">!=</operator> <name pos:start="147:43" pos:end="147:52">PICT_FRAME</name></expr>)</condition> <block pos:start="147:55" pos:end="153:17">{<block_content pos:start="149:21" pos:end="151:84">

                    <expr_stmt pos:start="149:21" pos:end="151:84"><expr pos:start="149:21" pos:end="151:83"><call pos:start="149:21" pos:end="151:83"><name pos:start="149:21" pos:end="149:45">ff_thread_report_progress</name><argument_list pos:start="149:46" pos:end="151:83">(<argument pos:start="149:47" pos:end="149:65"><expr pos:start="149:47" pos:end="149:65"><operator pos:start="149:47" pos:end="149:47">&amp;</operator><name pos:start="149:48" pos:end="149:65"><name pos:start="149:48" pos:end="149:48">h</name><operator pos:start="149:49" pos:end="149:50">-&gt;</operator><name pos:start="149:51" pos:end="149:61">cur_pic_ptr</name><operator pos:start="149:62" pos:end="149:63">-&gt;</operator><name pos:start="149:64" pos:end="149:65">tf</name></name></expr></argument>, <argument pos:start="149:68" pos:end="149:74"><expr pos:start="149:68" pos:end="149:74"><name pos:start="149:68" pos:end="149:74">INT_MAX</name></expr></argument>,

                                              <argument pos:start="151:47" pos:end="151:82"><expr pos:start="151:47" pos:end="151:82"><name pos:start="151:47" pos:end="151:64">last_pic_structure</name> <operator pos:start="151:66" pos:end="151:67">==</operator> <name pos:start="151:69" pos:end="151:82">PICT_TOP_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="155:15" pos:end="193:13">else <block pos:start="155:20" pos:end="193:13">{<block_content pos:start="159:17" pos:end="191:17">

                <comment type="block" pos:start="157:17" pos:end="157:56">/* Second field in complementary pair */</comment>

                <if_stmt pos:start="159:17" pos:end="191:17"><if pos:start="159:17" pos:end="179:17">if <condition pos:start="159:20" pos:end="165:64">(<expr pos:start="159:21" pos:end="165:63"><operator pos:start="159:21" pos:end="159:21">!</operator><operator pos:start="159:22" pos:end="159:22">(</operator><operator pos:start="159:23" pos:end="159:23">(</operator><name pos:start="159:24" pos:end="159:41">last_pic_structure</name>   <operator pos:start="159:45" pos:end="159:46">==</operator> <name pos:start="159:48" pos:end="159:61">PICT_TOP_FIELD</name> <operator pos:start="159:63" pos:end="159:64">&amp;&amp;</operator>

                       <name pos:start="161:24" pos:end="161:43"><name pos:start="161:24" pos:end="161:24">h</name><operator pos:start="161:25" pos:end="161:26">-&gt;</operator><name pos:start="161:27" pos:end="161:43">picture_structure</name></name> <operator pos:start="161:45" pos:end="161:46">==</operator> <name pos:start="161:48" pos:end="161:64">PICT_BOTTOM_FIELD</name><operator pos:start="161:65" pos:end="161:65">)</operator> <operator pos:start="161:67" pos:end="161:68">||</operator>

                      <operator pos:start="163:23" pos:end="163:23">(</operator><name pos:start="163:24" pos:end="163:41">last_pic_structure</name>   <operator pos:start="163:45" pos:end="163:46">==</operator> <name pos:start="163:48" pos:end="163:64">PICT_BOTTOM_FIELD</name> <operator pos:start="163:66" pos:end="163:67">&amp;&amp;</operator>

                       <name pos:start="165:24" pos:end="165:43"><name pos:start="165:24" pos:end="165:24">h</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:43">picture_structure</name></name> <operator pos:start="165:45" pos:end="165:46">==</operator> <name pos:start="165:48" pos:end="165:61">PICT_TOP_FIELD</name><operator pos:start="165:62" pos:end="165:62">)</operator><operator pos:start="165:63" pos:end="165:63">)</operator></expr>)</condition> <block pos:start="165:66" pos:end="179:17">{<block_content pos:start="167:21" pos:end="177:47">

                    <expr_stmt pos:start="167:21" pos:end="171:69"><expr pos:start="167:21" pos:end="171:68"><call pos:start="167:21" pos:end="171:68"><name pos:start="167:21" pos:end="167:26">av_log</name><argument_list pos:start="167:27" pos:end="171:68">(<argument pos:start="167:28" pos:end="167:35"><expr pos:start="167:28" pos:end="167:35"><name pos:start="167:28" pos:end="167:35"><name pos:start="167:28" pos:end="167:28">h</name><operator pos:start="167:29" pos:end="167:30">-&gt;</operator><name pos:start="167:31" pos:end="167:35">avctx</name></name></expr></argument>, <argument pos:start="167:38" pos:end="167:49"><expr pos:start="167:38" pos:end="167:49"><name pos:start="167:38" pos:end="167:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="169:28" pos:end="169:67"><expr pos:start="169:28" pos:end="169:67"><literal type="string" pos:start="169:28" pos:end="169:67">"Invalid field mode combination %d/%d\n"</literal></expr></argument>,

                           <argument pos:start="171:28" pos:end="171:45"><expr pos:start="171:28" pos:end="171:45"><name pos:start="171:28" pos:end="171:45">last_pic_structure</name></expr></argument>, <argument pos:start="171:48" pos:end="171:67"><expr pos:start="171:48" pos:end="171:67"><name pos:start="171:48" pos:end="171:67"><name pos:start="171:48" pos:end="171:48">h</name><operator pos:start="171:49" pos:end="171:50">-&gt;</operator><name pos:start="171:51" pos:end="171:67">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="173:21" pos:end="173:62"><expr pos:start="173:21" pos:end="173:61"><name pos:start="173:21" pos:end="173:40"><name pos:start="173:21" pos:end="173:21">h</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:40">picture_structure</name></name> <operator pos:start="173:42" pos:end="173:42">=</operator> <name pos:start="173:44" pos:end="173:61">last_pic_structure</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="175:21" pos:end="175:62"><expr pos:start="175:21" pos:end="175:61"><name pos:start="175:21" pos:end="175:32"><name pos:start="175:21" pos:end="175:21">h</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:32">droppable</name></name>         <operator pos:start="175:42" pos:end="175:42">=</operator> <name pos:start="175:44" pos:end="175:61">last_pic_droppable</name></expr>;</expr_stmt>

                    <return pos:start="177:21" pos:end="177:47">return <expr pos:start="177:28" pos:end="177:46"><name pos:start="177:28" pos:end="177:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if> <if type="elseif" pos:start="179:19" pos:end="191:17">else if <condition pos:start="179:27" pos:end="179:62">(<expr pos:start="179:28" pos:end="179:61"><name pos:start="179:28" pos:end="179:45">last_pic_droppable</name> <operator pos:start="179:47" pos:end="179:48">!=</operator> <name pos:start="179:50" pos:end="179:61"><name pos:start="179:50" pos:end="179:50">h</name><operator pos:start="179:51" pos:end="179:52">-&gt;</operator><name pos:start="179:53" pos:end="179:61">droppable</name></name></expr>)</condition> <block pos:start="179:64" pos:end="191:17">{<block_content pos:start="181:21" pos:end="189:48">

                    <expr_stmt pos:start="181:21" pos:end="183:111"><expr pos:start="181:21" pos:end="183:110"><call pos:start="181:21" pos:end="183:110"><name pos:start="181:21" pos:end="181:41">avpriv_request_sample</name><argument_list pos:start="181:42" pos:end="183:110">(<argument pos:start="181:43" pos:end="181:50"><expr pos:start="181:43" pos:end="181:50"><name pos:start="181:43" pos:end="181:50"><name pos:start="181:43" pos:end="181:43">h</name><operator pos:start="181:44" pos:end="181:45">-&gt;</operator><name pos:start="181:46" pos:end="181:50">avctx</name></name></expr></argument>,

                                          <argument pos:start="183:43" pos:end="183:109"><expr pos:start="183:43" pos:end="183:109"><literal type="string" pos:start="183:43" pos:end="183:109">"Found reference and non-reference fields in the same frame, which"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="185:21" pos:end="185:62"><expr pos:start="185:21" pos:end="185:61"><name pos:start="185:21" pos:end="185:40"><name pos:start="185:21" pos:end="185:21">h</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:40">picture_structure</name></name> <operator pos:start="185:42" pos:end="185:42">=</operator> <name pos:start="185:44" pos:end="185:61">last_pic_structure</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="187:21" pos:end="187:62"><expr pos:start="187:21" pos:end="187:61"><name pos:start="187:21" pos:end="187:32"><name pos:start="187:21" pos:end="187:21">h</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:32">droppable</name></name>         <operator pos:start="187:42" pos:end="187:42">=</operator> <name pos:start="187:44" pos:end="187:61">last_pic_droppable</name></expr>;</expr_stmt>

                    <return pos:start="189:21" pos:end="189:48">return <expr pos:start="189:28" pos:end="189:47"><name pos:start="189:28" pos:end="189:47">AVERROR_PATCHWELCOME</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="201:5" pos:end="303:5">while <condition pos:start="201:11" pos:end="203:92">(<expr pos:start="201:12" pos:end="203:91"><name pos:start="201:12" pos:end="201:27"><name pos:start="201:12" pos:end="201:12">h</name><operator pos:start="201:13" pos:end="201:14">-&gt;</operator><name pos:start="201:15" pos:end="201:17">poc</name><operator pos:start="201:18" pos:end="201:18">.</operator><name pos:start="201:19" pos:end="201:27">frame_num</name></name> <operator pos:start="201:29" pos:end="201:30">!=</operator> <name pos:start="201:32" pos:end="201:52"><name pos:start="201:32" pos:end="201:32">h</name><operator pos:start="201:33" pos:end="201:34">-&gt;</operator><name pos:start="201:35" pos:end="201:37">poc</name><operator pos:start="201:38" pos:end="201:38">.</operator><name pos:start="201:39" pos:end="201:52">prev_frame_num</name></name> <operator pos:start="201:54" pos:end="201:55">&amp;&amp;</operator> <operator pos:start="201:57" pos:end="201:57">!</operator><name pos:start="201:58" pos:end="201:71"><name pos:start="201:58" pos:end="201:58">h</name><operator pos:start="201:59" pos:end="201:60">-&gt;</operator><name pos:start="201:61" pos:end="201:71">first_field</name></name> <operator pos:start="201:73" pos:end="201:74">&amp;&amp;</operator>

           <name pos:start="203:12" pos:end="203:27"><name pos:start="203:12" pos:end="203:12">h</name><operator pos:start="203:13" pos:end="203:14">-&gt;</operator><name pos:start="203:15" pos:end="203:17">poc</name><operator pos:start="203:18" pos:end="203:18">.</operator><name pos:start="203:19" pos:end="203:27">frame_num</name></name> <operator pos:start="203:29" pos:end="203:30">!=</operator> <operator pos:start="203:32" pos:end="203:32">(</operator><name pos:start="203:33" pos:end="203:53"><name pos:start="203:33" pos:end="203:33">h</name><operator pos:start="203:34" pos:end="203:35">-&gt;</operator><name pos:start="203:36" pos:end="203:38">poc</name><operator pos:start="203:39" pos:end="203:39">.</operator><name pos:start="203:40" pos:end="203:53">prev_frame_num</name></name> <operator pos:start="203:55" pos:end="203:55">+</operator> <literal type="number" pos:start="203:57" pos:end="203:57">1</literal><operator pos:start="203:58" pos:end="203:58">)</operator> <operator pos:start="203:60" pos:end="203:60">%</operator> <operator pos:start="203:62" pos:end="203:62">(</operator><literal type="number" pos:start="203:63" pos:end="203:63">1</literal> <operator pos:start="203:65" pos:end="203:66">&lt;&lt;</operator> <name pos:start="203:68" pos:end="203:90"><name pos:start="203:68" pos:end="203:70">sps</name><operator pos:start="203:71" pos:end="203:72">-&gt;</operator><name pos:start="203:73" pos:end="203:90">log2_max_frame_num</name></name><operator pos:start="203:91" pos:end="203:91">)</operator></expr>)</condition> <block pos:start="203:94" pos:end="303:5">{<block_content pos:start="205:9" pos:end="301:9">

        <decl_stmt pos:start="205:9" pos:end="205:72"><decl pos:start="205:9" pos:end="205:71"><type pos:start="205:9" pos:end="205:21"><name pos:start="205:9" pos:end="205:19">H264Picture</name> <modifier pos:start="205:21" pos:end="205:21">*</modifier></type><name pos:start="205:22" pos:end="205:25">prev</name> <init pos:start="205:27" pos:end="205:71">= <expr pos:start="205:29" pos:end="205:71"><ternary pos:start="205:29" pos:end="205:71"><condition pos:start="205:29" pos:end="205:48"><expr pos:start="205:29" pos:end="205:46"><name pos:start="205:29" pos:end="205:46"><name pos:start="205:29" pos:end="205:29">h</name><operator pos:start="205:30" pos:end="205:31">-&gt;</operator><name pos:start="205:32" pos:end="205:46">short_ref_count</name></name></expr> ?</condition><then pos:start="205:50" pos:end="205:64"> <expr pos:start="205:50" pos:end="205:64"><name pos:start="205:50" pos:end="205:64"><name pos:start="205:50" pos:end="205:50">h</name><operator pos:start="205:51" pos:end="205:52">-&gt;</operator><name pos:start="205:53" pos:end="205:61">short_ref</name><index pos:start="205:62" pos:end="205:64">[<expr pos:start="205:63" pos:end="205:63"><literal type="number" pos:start="205:63" pos:end="205:63">0</literal></expr>]</index></name></expr> </then><else pos:start="205:66" pos:end="205:71">: <expr pos:start="205:68" pos:end="205:71"><name pos:start="205:68" pos:end="205:71">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="207:9" pos:end="209:56"><expr pos:start="207:9" pos:end="209:55"><call pos:start="207:9" pos:end="209:55"><name pos:start="207:9" pos:end="207:14">av_log</name><argument_list pos:start="207:15" pos:end="209:55">(<argument pos:start="207:16" pos:end="207:23"><expr pos:start="207:16" pos:end="207:23"><name pos:start="207:16" pos:end="207:23"><name pos:start="207:16" pos:end="207:16">h</name><operator pos:start="207:17" pos:end="207:18">-&gt;</operator><name pos:start="207:19" pos:end="207:23">avctx</name></name></expr></argument>, <argument pos:start="207:26" pos:end="207:37"><expr pos:start="207:26" pos:end="207:37"><name pos:start="207:26" pos:end="207:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="207:40" pos:end="207:62"><expr pos:start="207:40" pos:end="207:62"><literal type="string" pos:start="207:40" pos:end="207:62">"Frame num gap %d %d\n"</literal></expr></argument>,

               <argument pos:start="209:16" pos:end="209:31"><expr pos:start="209:16" pos:end="209:31"><name pos:start="209:16" pos:end="209:31"><name pos:start="209:16" pos:end="209:16">h</name><operator pos:start="209:17" pos:end="209:18">-&gt;</operator><name pos:start="209:19" pos:end="209:21">poc</name><operator pos:start="209:22" pos:end="209:22">.</operator><name pos:start="209:23" pos:end="209:31">frame_num</name></name></expr></argument>, <argument pos:start="209:34" pos:end="209:54"><expr pos:start="209:34" pos:end="209:54"><name pos:start="209:34" pos:end="209:54"><name pos:start="209:34" pos:end="209:34">h</name><operator pos:start="209:35" pos:end="209:36">-&gt;</operator><name pos:start="209:37" pos:end="209:39">poc</name><operator pos:start="209:40" pos:end="209:40">.</operator><name pos:start="209:41" pos:end="209:54">prev_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="211:9" pos:end="215:42"><if pos:start="211:9" pos:end="215:42">if <condition pos:start="211:12" pos:end="211:49">(<expr pos:start="211:13" pos:end="211:48"><operator pos:start="211:13" pos:end="211:13">!</operator><name pos:start="211:14" pos:end="211:48"><name pos:start="211:14" pos:end="211:16">sps</name><operator pos:start="211:17" pos:end="211:18">-&gt;</operator><name pos:start="211:19" pos:end="211:48">gaps_in_frame_num_allowed_flag</name></name></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="215:42"><block_content pos:start="213:13" pos:end="215:42">

            <for pos:start="213:13" pos:end="215:42">for<control pos:start="213:16" pos:end="213:57">(<init pos:start="213:17" pos:end="213:20"><expr pos:start="213:17" pos:end="213:19"><name pos:start="213:17" pos:end="213:17">i</name><operator pos:start="213:18" pos:end="213:18">=</operator><literal type="number" pos:start="213:19" pos:end="213:19">0</literal></expr>;</init> <condition pos:start="213:22" pos:end="213:52"><expr pos:start="213:22" pos:end="213:51"><name pos:start="213:22" pos:end="213:22">i</name><operator pos:start="213:23" pos:end="213:23">&lt;</operator><call pos:start="213:24" pos:end="213:51"><name pos:start="213:24" pos:end="213:37">FF_ARRAY_ELEMS</name><argument_list pos:start="213:38" pos:end="213:51">(<argument pos:start="213:39" pos:end="213:50"><expr pos:start="213:39" pos:end="213:50"><name pos:start="213:39" pos:end="213:50"><name pos:start="213:39" pos:end="213:39">h</name><operator pos:start="213:40" pos:end="213:41">-&gt;</operator><name pos:start="213:42" pos:end="213:50">last_pocs</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="213:54" pos:end="213:56"><expr pos:start="213:54" pos:end="213:56"><name pos:start="213:54" pos:end="213:54">i</name><operator pos:start="213:55" pos:end="213:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="215:17" pos:end="215:42"><block_content pos:start="215:17" pos:end="215:42">

                <expr_stmt pos:start="215:17" pos:end="215:42"><expr pos:start="215:17" pos:end="215:41"><name pos:start="215:17" pos:end="215:31"><name pos:start="215:17" pos:end="215:17">h</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:28">last_pocs</name><index pos:start="215:29" pos:end="215:31">[<expr pos:start="215:30" pos:end="215:30"><name pos:start="215:30" pos:end="215:30">i</name></expr>]</index></name> <operator pos:start="215:33" pos:end="215:33">=</operator> <name pos:start="215:35" pos:end="215:41">INT_MIN</name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:34"><expr pos:start="217:9" pos:end="217:33"><name pos:start="217:9" pos:end="217:11">ret</name> <operator pos:start="217:13" pos:end="217:13">=</operator> <call pos:start="217:15" pos:end="217:33"><name pos:start="217:15" pos:end="217:30">h264_frame_start</name><argument_list pos:start="217:31" pos:end="217:33">(<argument pos:start="217:32" pos:end="217:32"><expr pos:start="217:32" pos:end="217:32"><name pos:start="217:32" pos:end="217:32">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="219:9" pos:end="225:9"><if pos:start="219:9" pos:end="225:9">if <condition pos:start="219:12" pos:end="219:20">(<expr pos:start="219:13" pos:end="219:19"><name pos:start="219:13" pos:end="219:15">ret</name> <operator pos:start="219:17" pos:end="219:17">&lt;</operator> <literal type="number" pos:start="219:19" pos:end="219:19">0</literal></expr>)</condition> <block pos:start="219:22" pos:end="225:9">{<block_content pos:start="221:13" pos:end="223:23">

            <expr_stmt pos:start="221:13" pos:end="221:31"><expr pos:start="221:13" pos:end="221:30"><name pos:start="221:13" pos:end="221:26"><name pos:start="221:13" pos:end="221:13">h</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:26">first_field</name></name> <operator pos:start="221:28" pos:end="221:28">=</operator> <literal type="number" pos:start="221:30" pos:end="221:30">0</literal></expr>;</expr_stmt>

            <return pos:start="223:13" pos:end="223:23">return <expr pos:start="223:20" pos:end="223:22"><name pos:start="223:20" pos:end="223:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="229:9" pos:end="229:32"><expr pos:start="229:9" pos:end="229:31"><name pos:start="229:9" pos:end="229:29"><name pos:start="229:9" pos:end="229:9">h</name><operator pos:start="229:10" pos:end="229:11">-&gt;</operator><name pos:start="229:12" pos:end="229:14">poc</name><operator pos:start="229:15" pos:end="229:15">.</operator><name pos:start="229:16" pos:end="229:29">prev_frame_num</name></name><operator pos:start="229:30" pos:end="229:31">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:69"><expr pos:start="231:9" pos:end="231:68"><name pos:start="231:9" pos:end="231:29"><name pos:start="231:9" pos:end="231:9">h</name><operator pos:start="231:10" pos:end="231:11">-&gt;</operator><name pos:start="231:12" pos:end="231:14">poc</name><operator pos:start="231:15" pos:end="231:15">.</operator><name pos:start="231:16" pos:end="231:29">prev_frame_num</name></name>        <operator pos:start="231:38" pos:end="231:39">%=</operator> <literal type="number" pos:start="231:41" pos:end="231:41">1</literal> <operator pos:start="231:43" pos:end="231:44">&lt;&lt;</operator> <name pos:start="231:46" pos:end="231:68"><name pos:start="231:46" pos:end="231:48">sps</name><operator pos:start="231:49" pos:end="231:50">-&gt;</operator><name pos:start="231:51" pos:end="231:68">log2_max_frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:58"><expr pos:start="233:9" pos:end="233:57"><name pos:start="233:9" pos:end="233:33"><name pos:start="233:9" pos:end="233:9">h</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:22">cur_pic_ptr</name><operator pos:start="233:23" pos:end="233:24">-&gt;</operator><name pos:start="233:25" pos:end="233:33">frame_num</name></name> <operator pos:start="233:35" pos:end="233:35">=</operator> <name pos:start="233:37" pos:end="233:57"><name pos:start="233:37" pos:end="233:37">h</name><operator pos:start="233:38" pos:end="233:39">-&gt;</operator><name pos:start="233:40" pos:end="233:42">poc</name><operator pos:start="233:43" pos:end="233:43">.</operator><name pos:start="233:44" pos:end="233:57">prev_frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:75"><expr pos:start="235:9" pos:end="235:74"><name pos:start="235:9" pos:end="235:35"><name pos:start="235:9" pos:end="235:9">h</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:22">cur_pic_ptr</name><operator pos:start="235:23" pos:end="235:24">-&gt;</operator><name pos:start="235:25" pos:end="235:35">invalid_gap</name></name> <operator pos:start="235:37" pos:end="235:37">=</operator> <operator pos:start="235:39" pos:end="235:39">!</operator><name pos:start="235:40" pos:end="235:74"><name pos:start="235:40" pos:end="235:42">sps</name><operator pos:start="235:43" pos:end="235:44">-&gt;</operator><name pos:start="235:45" pos:end="235:74">gaps_in_frame_num_allowed_flag</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:67"><expr pos:start="237:9" pos:end="237:66"><call pos:start="237:9" pos:end="237:66"><name pos:start="237:9" pos:end="237:33">ff_thread_report_progress</name><argument_list pos:start="237:34" pos:end="237:66">(<argument pos:start="237:35" pos:end="237:53"><expr pos:start="237:35" pos:end="237:53"><operator pos:start="237:35" pos:end="237:35">&amp;</operator><name pos:start="237:36" pos:end="237:53"><name pos:start="237:36" pos:end="237:36">h</name><operator pos:start="237:37" pos:end="237:38">-&gt;</operator><name pos:start="237:39" pos:end="237:49">cur_pic_ptr</name><operator pos:start="237:50" pos:end="237:51">-&gt;</operator><name pos:start="237:52" pos:end="237:53">tf</name></name></expr></argument>, <argument pos:start="237:56" pos:end="237:62"><expr pos:start="237:56" pos:end="237:62"><name pos:start="237:56" pos:end="237:62">INT_MAX</name></expr></argument>, <argument pos:start="237:65" pos:end="237:65"><expr pos:start="237:65" pos:end="237:65"><literal type="number" pos:start="237:65" pos:end="237:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:67"><expr pos:start="239:9" pos:end="239:66"><call pos:start="239:9" pos:end="239:66"><name pos:start="239:9" pos:end="239:33">ff_thread_report_progress</name><argument_list pos:start="239:34" pos:end="239:66">(<argument pos:start="239:35" pos:end="239:53"><expr pos:start="239:35" pos:end="239:53"><operator pos:start="239:35" pos:end="239:35">&amp;</operator><name pos:start="239:36" pos:end="239:53"><name pos:start="239:36" pos:end="239:36">h</name><operator pos:start="239:37" pos:end="239:38">-&gt;</operator><name pos:start="239:39" pos:end="239:49">cur_pic_ptr</name><operator pos:start="239:50" pos:end="239:51">-&gt;</operator><name pos:start="239:52" pos:end="239:53">tf</name></name></expr></argument>, <argument pos:start="239:56" pos:end="239:62"><expr pos:start="239:56" pos:end="239:62"><name pos:start="239:56" pos:end="239:62">INT_MAX</name></expr></argument>, <argument pos:start="239:65" pos:end="239:65"><expr pos:start="239:65" pos:end="239:65"><literal type="number" pos:start="239:65" pos:end="239:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="243:9" pos:end="243:36"><expr pos:start="243:9" pos:end="243:35"><name pos:start="243:9" pos:end="243:31"><name pos:start="243:9" pos:end="243:9">h</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:31">explicit_ref_marking</name></name> <operator pos:start="243:33" pos:end="243:33">=</operator> <literal type="number" pos:start="243:35" pos:end="243:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:49"><expr pos:start="245:9" pos:end="245:48"><name pos:start="245:9" pos:end="245:11">ret</name> <operator pos:start="245:13" pos:end="245:13">=</operator> <call pos:start="245:15" pos:end="245:48"><name pos:start="245:15" pos:end="245:45">ff_h264_execute_ref_pic_marking</name><argument_list pos:start="245:46" pos:end="245:48">(<argument pos:start="245:47" pos:end="245:47"><expr pos:start="245:47" pos:end="245:47"><name pos:start="245:47" pos:end="245:47">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="247:9" pos:end="249:23"><if pos:start="247:9" pos:end="249:23">if <condition pos:start="247:12" pos:end="247:67">(<expr pos:start="247:13" pos:end="247:66"><name pos:start="247:13" pos:end="247:15">ret</name> <operator pos:start="247:17" pos:end="247:17">&lt;</operator> <literal type="number" pos:start="247:19" pos:end="247:19">0</literal> <operator pos:start="247:21" pos:end="247:22">&amp;&amp;</operator> <operator pos:start="247:24" pos:end="247:24">(</operator><name pos:start="247:25" pos:end="247:49"><name pos:start="247:25" pos:end="247:25">h</name><operator pos:start="247:26" pos:end="247:27">-&gt;</operator><name pos:start="247:28" pos:end="247:32">avctx</name><operator pos:start="247:33" pos:end="247:34">-&gt;</operator><name pos:start="247:35" pos:end="247:49">err_recognition</name></name> <operator pos:start="247:51" pos:end="247:51">&amp;</operator> <name pos:start="247:53" pos:end="247:65">AV_EF_EXPLODE</name><operator pos:start="247:66" pos:end="247:66">)</operator></expr>)</condition><block type="pseudo" pos:start="249:13" pos:end="249:23"><block_content pos:start="249:13" pos:end="249:23">

            <return pos:start="249:13" pos:end="249:23">return <expr pos:start="249:20" pos:end="249:22"><name pos:start="249:20" pos:end="249:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="251:9" pos:end="263:70">/* Error concealment: If a ref is missing, copy the previous ref

         * in its place.

         * FIXME: Avoiding a memcpy would be nice, but ref handling makes

         * many assumptions about there being no actual duplicates.

         * FIXME: This does not copy padding for out-of-frame motion

         * vectors.  Given we are concealing a lost frame, this probably

         * is not noticeable by comparison, but it should be fixed. */</comment>

        <if_stmt pos:start="265:9" pos:end="301:9"><if pos:start="265:9" pos:end="301:9">if <condition pos:start="265:12" pos:end="265:31">(<expr pos:start="265:13" pos:end="265:30"><name pos:start="265:13" pos:end="265:30"><name pos:start="265:13" pos:end="265:13">h</name><operator pos:start="265:14" pos:end="265:15">-&gt;</operator><name pos:start="265:16" pos:end="265:30">short_ref_count</name></name></expr>)</condition> <block pos:start="265:33" pos:end="301:9">{<block_content pos:start="267:13" pos:end="299:63">

            <if_stmt pos:start="267:13" pos:end="297:13"><if pos:start="267:13" pos:end="297:13">if <condition pos:start="267:16" pos:end="273:62">(<expr pos:start="267:17" pos:end="273:61"><name pos:start="267:17" pos:end="267:20">prev</name> <operator pos:start="267:22" pos:end="267:23">&amp;&amp;</operator>

                <name pos:start="269:17" pos:end="269:31"><name pos:start="269:17" pos:end="269:17">h</name><operator pos:start="269:18" pos:end="269:19">-&gt;</operator><name pos:start="269:20" pos:end="269:28">short_ref</name><index pos:start="269:29" pos:end="269:31">[<expr pos:start="269:30" pos:end="269:30"><literal type="number" pos:start="269:30" pos:end="269:30">0</literal></expr>]</index></name><operator pos:start="269:32" pos:end="269:33">-&gt;</operator><name pos:start="269:34" pos:end="269:41"><name pos:start="269:34" pos:end="269:34">f</name><operator pos:start="269:35" pos:end="269:36">-&gt;</operator><name pos:start="269:37" pos:end="269:41">width</name></name> <operator pos:start="269:43" pos:end="269:44">==</operator> <name pos:start="269:46" pos:end="269:59"><name pos:start="269:46" pos:end="269:49">prev</name><operator pos:start="269:50" pos:end="269:51">-&gt;</operator><name pos:start="269:52" pos:end="269:52">f</name><operator pos:start="269:53" pos:end="269:54">-&gt;</operator><name pos:start="269:55" pos:end="269:59">width</name></name> <operator pos:start="269:61" pos:end="269:62">&amp;&amp;</operator>

                <name pos:start="271:17" pos:end="271:31"><name pos:start="271:17" pos:end="271:17">h</name><operator pos:start="271:18" pos:end="271:19">-&gt;</operator><name pos:start="271:20" pos:end="271:28">short_ref</name><index pos:start="271:29" pos:end="271:31">[<expr pos:start="271:30" pos:end="271:30"><literal type="number" pos:start="271:30" pos:end="271:30">0</literal></expr>]</index></name><operator pos:start="271:32" pos:end="271:33">-&gt;</operator><name pos:start="271:34" pos:end="271:42"><name pos:start="271:34" pos:end="271:34">f</name><operator pos:start="271:35" pos:end="271:36">-&gt;</operator><name pos:start="271:37" pos:end="271:42">height</name></name> <operator pos:start="271:44" pos:end="271:45">==</operator> <name pos:start="271:47" pos:end="271:61"><name pos:start="271:47" pos:end="271:50">prev</name><operator pos:start="271:51" pos:end="271:52">-&gt;</operator><name pos:start="271:53" pos:end="271:53">f</name><operator pos:start="271:54" pos:end="271:55">-&gt;</operator><name pos:start="271:56" pos:end="271:61">height</name></name> <operator pos:start="271:63" pos:end="271:64">&amp;&amp;</operator>

                <name pos:start="273:17" pos:end="273:31"><name pos:start="273:17" pos:end="273:17">h</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:28">short_ref</name><index pos:start="273:29" pos:end="273:31">[<expr pos:start="273:30" pos:end="273:30"><literal type="number" pos:start="273:30" pos:end="273:30">0</literal></expr>]</index></name><operator pos:start="273:32" pos:end="273:33">-&gt;</operator><name pos:start="273:34" pos:end="273:42"><name pos:start="273:34" pos:end="273:34">f</name><operator pos:start="273:35" pos:end="273:36">-&gt;</operator><name pos:start="273:37" pos:end="273:42">format</name></name> <operator pos:start="273:44" pos:end="273:45">==</operator> <name pos:start="273:47" pos:end="273:61"><name pos:start="273:47" pos:end="273:50">prev</name><operator pos:start="273:51" pos:end="273:52">-&gt;</operator><name pos:start="273:53" pos:end="273:53">f</name><operator pos:start="273:54" pos:end="273:55">-&gt;</operator><name pos:start="273:56" pos:end="273:61">format</name></name></expr>)</condition> <block pos:start="273:64" pos:end="297:13">{<block_content pos:start="275:17" pos:end="295:53">

                <expr_stmt pos:start="275:17" pos:end="275:64"><expr pos:start="275:17" pos:end="275:63"><call pos:start="275:17" pos:end="275:63"><name pos:start="275:17" pos:end="275:40">ff_thread_await_progress</name><argument_list pos:start="275:41" pos:end="275:63">(<argument pos:start="275:42" pos:end="275:50"><expr pos:start="275:42" pos:end="275:50"><operator pos:start="275:42" pos:end="275:42">&amp;</operator><name pos:start="275:43" pos:end="275:50"><name pos:start="275:43" pos:end="275:46">prev</name><operator pos:start="275:47" pos:end="275:48">-&gt;</operator><name pos:start="275:49" pos:end="275:50">tf</name></name></expr></argument>, <argument pos:start="275:53" pos:end="275:59"><expr pos:start="275:53" pos:end="275:59"><name pos:start="275:53" pos:end="275:59">INT_MAX</name></expr></argument>, <argument pos:start="275:62" pos:end="275:62"><expr pos:start="275:62" pos:end="275:62"><literal type="number" pos:start="275:62" pos:end="275:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="277:17" pos:end="279:68"><if pos:start="277:17" pos:end="279:68">if <condition pos:start="277:20" pos:end="277:40">(<expr pos:start="277:21" pos:end="277:39"><name pos:start="277:21" pos:end="277:39"><name pos:start="277:21" pos:end="277:24">prev</name><operator pos:start="277:25" pos:end="277:26">-&gt;</operator><name pos:start="277:27" pos:end="277:39">field_picture</name></name></expr>)</condition><block type="pseudo" pos:start="279:21" pos:end="279:68"><block_content pos:start="279:21" pos:end="279:68">

                    <expr_stmt pos:start="279:21" pos:end="279:68"><expr pos:start="279:21" pos:end="279:67"><call pos:start="279:21" pos:end="279:67"><name pos:start="279:21" pos:end="279:44">ff_thread_await_progress</name><argument_list pos:start="279:45" pos:end="279:67">(<argument pos:start="279:46" pos:end="279:54"><expr pos:start="279:46" pos:end="279:54"><operator pos:start="279:46" pos:end="279:46">&amp;</operator><name pos:start="279:47" pos:end="279:54"><name pos:start="279:47" pos:end="279:50">prev</name><operator pos:start="279:51" pos:end="279:52">-&gt;</operator><name pos:start="279:53" pos:end="279:54">tf</name></name></expr></argument>, <argument pos:start="279:57" pos:end="279:63"><expr pos:start="279:57" pos:end="279:63"><name pos:start="279:57" pos:end="279:63">INT_MAX</name></expr></argument>, <argument pos:start="279:66" pos:end="279:66"><expr pos:start="279:66" pos:end="279:66"><literal type="number" pos:start="279:66" pos:end="279:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="281:17" pos:end="293:47"><expr pos:start="281:17" pos:end="293:46"><call pos:start="281:17" pos:end="293:46"><name pos:start="281:17" pos:end="281:29">av_image_copy</name><argument_list pos:start="281:30" pos:end="293:46">(<argument pos:start="281:31" pos:end="281:54"><expr pos:start="281:31" pos:end="281:54"><name pos:start="281:31" pos:end="281:45"><name pos:start="281:31" pos:end="281:31">h</name><operator pos:start="281:32" pos:end="281:33">-&gt;</operator><name pos:start="281:34" pos:end="281:42">short_ref</name><index pos:start="281:43" pos:end="281:45">[<expr pos:start="281:44" pos:end="281:44"><literal type="number" pos:start="281:44" pos:end="281:44">0</literal></expr>]</index></name><operator pos:start="281:46" pos:end="281:47">-&gt;</operator><name pos:start="281:48" pos:end="281:54"><name pos:start="281:48" pos:end="281:48">f</name><operator pos:start="281:49" pos:end="281:50">-&gt;</operator><name pos:start="281:51" pos:end="281:54">data</name></name></expr></argument>,

                              <argument pos:start="283:31" pos:end="283:58"><expr pos:start="283:31" pos:end="283:58"><name pos:start="283:31" pos:end="283:45"><name pos:start="283:31" pos:end="283:31">h</name><operator pos:start="283:32" pos:end="283:33">-&gt;</operator><name pos:start="283:34" pos:end="283:42">short_ref</name><index pos:start="283:43" pos:end="283:45">[<expr pos:start="283:44" pos:end="283:44"><literal type="number" pos:start="283:44" pos:end="283:44">0</literal></expr>]</index></name><operator pos:start="283:46" pos:end="283:47">-&gt;</operator><name pos:start="283:48" pos:end="283:58"><name pos:start="283:48" pos:end="283:48">f</name><operator pos:start="283:49" pos:end="283:50">-&gt;</operator><name pos:start="283:51" pos:end="283:58">linesize</name></name></expr></argument>,

                              <argument pos:start="285:31" pos:end="285:61"><expr pos:start="285:31" pos:end="285:61"><operator pos:start="285:31" pos:end="285:31">(</operator><specifier pos:start="285:32" pos:end="285:36">const</specifier> <name pos:start="285:38" pos:end="285:44">uint8_t</name> <operator pos:start="285:46" pos:end="285:46">*</operator><operator pos:start="285:47" pos:end="285:47">*</operator><operator pos:start="285:48" pos:end="285:48">)</operator><name pos:start="285:49" pos:end="285:61"><name pos:start="285:49" pos:end="285:52">prev</name><operator pos:start="285:53" pos:end="285:54">-&gt;</operator><name pos:start="285:55" pos:end="285:55">f</name><operator pos:start="285:56" pos:end="285:57">-&gt;</operator><name pos:start="285:58" pos:end="285:61">data</name></name></expr></argument>,

                              <argument pos:start="287:31" pos:end="287:47"><expr pos:start="287:31" pos:end="287:47"><name pos:start="287:31" pos:end="287:47"><name pos:start="287:31" pos:end="287:34">prev</name><operator pos:start="287:35" pos:end="287:36">-&gt;</operator><name pos:start="287:37" pos:end="287:37">f</name><operator pos:start="287:38" pos:end="287:39">-&gt;</operator><name pos:start="287:40" pos:end="287:47">linesize</name></name></expr></argument>,

                              <argument pos:start="289:31" pos:end="289:45"><expr pos:start="289:31" pos:end="289:45"><name pos:start="289:31" pos:end="289:45"><name pos:start="289:31" pos:end="289:34">prev</name><operator pos:start="289:35" pos:end="289:36">-&gt;</operator><name pos:start="289:37" pos:end="289:37">f</name><operator pos:start="289:38" pos:end="289:39">-&gt;</operator><name pos:start="289:40" pos:end="289:45">format</name></name></expr></argument>,

                              <argument pos:start="291:31" pos:end="291:44"><expr pos:start="291:31" pos:end="291:44"><name pos:start="291:31" pos:end="291:44"><name pos:start="291:31" pos:end="291:34">prev</name><operator pos:start="291:35" pos:end="291:36">-&gt;</operator><name pos:start="291:37" pos:end="291:37">f</name><operator pos:start="291:38" pos:end="291:39">-&gt;</operator><name pos:start="291:40" pos:end="291:44">width</name></name></expr></argument>,

                              <argument pos:start="293:31" pos:end="293:45"><expr pos:start="293:31" pos:end="293:45"><name pos:start="293:31" pos:end="293:45"><name pos:start="293:31" pos:end="293:34">prev</name><operator pos:start="293:35" pos:end="293:36">-&gt;</operator><name pos:start="293:37" pos:end="293:37">f</name><operator pos:start="293:38" pos:end="293:39">-&gt;</operator><name pos:start="293:40" pos:end="293:45">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:53"><expr pos:start="295:17" pos:end="295:52"><name pos:start="295:17" pos:end="295:31"><name pos:start="295:17" pos:end="295:17">h</name><operator pos:start="295:18" pos:end="295:19">-&gt;</operator><name pos:start="295:20" pos:end="295:28">short_ref</name><index pos:start="295:29" pos:end="295:31">[<expr pos:start="295:30" pos:end="295:30"><literal type="number" pos:start="295:30" pos:end="295:30">0</literal></expr>]</index></name><operator pos:start="295:32" pos:end="295:33">-&gt;</operator><name pos:start="295:34" pos:end="295:36">poc</name> <operator pos:start="295:38" pos:end="295:38">=</operator> <name pos:start="295:40" pos:end="295:48"><name pos:start="295:40" pos:end="295:43">prev</name><operator pos:start="295:44" pos:end="295:45">-&gt;</operator><name pos:start="295:46" pos:end="295:48">poc</name></name> <operator pos:start="295:50" pos:end="295:50">+</operator> <literal type="number" pos:start="295:52" pos:end="295:52">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:63"><expr pos:start="299:13" pos:end="299:62"><name pos:start="299:13" pos:end="299:27"><name pos:start="299:13" pos:end="299:13">h</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:24">short_ref</name><index pos:start="299:25" pos:end="299:27">[<expr pos:start="299:26" pos:end="299:26"><literal type="number" pos:start="299:26" pos:end="299:26">0</literal></expr>]</index></name><operator pos:start="299:28" pos:end="299:29">-&gt;</operator><name pos:start="299:30" pos:end="299:38">frame_num</name> <operator pos:start="299:40" pos:end="299:40">=</operator> <name pos:start="299:42" pos:end="299:62"><name pos:start="299:42" pos:end="299:42">h</name><operator pos:start="299:43" pos:end="299:44">-&gt;</operator><name pos:start="299:45" pos:end="299:47">poc</name><operator pos:start="299:48" pos:end="299:48">.</operator><name pos:start="299:49" pos:end="299:62">prev_frame_num</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="307:5" pos:end="311:42">/* See if we have a decoded first field looking for a pair...

     * We're using that to see whether to continue decoding in that

     * frame, or to allocate a new one. */</comment>

    <if_stmt pos:start="313:5" pos:end="373:5"><if pos:start="313:5" pos:end="367:5">if <condition pos:start="313:8" pos:end="313:23">(<expr pos:start="313:9" pos:end="313:22"><name pos:start="313:9" pos:end="313:22"><name pos:start="313:9" pos:end="313:9">h</name><operator pos:start="313:10" pos:end="313:11">-&gt;</operator><name pos:start="313:12" pos:end="313:22">first_field</name></name></expr>)</condition> <block pos:start="313:25" pos:end="367:5">{<block_content pos:start="315:9" pos:end="365:9">

        <expr_stmt pos:start="315:9" pos:end="315:35"><expr pos:start="315:9" pos:end="315:34"><call pos:start="315:9" pos:end="315:34"><name pos:start="315:9" pos:end="315:18">av_assert0</name><argument_list pos:start="315:19" pos:end="315:34">(<argument pos:start="315:20" pos:end="315:33"><expr pos:start="315:20" pos:end="315:33"><name pos:start="315:20" pos:end="315:33"><name pos:start="315:20" pos:end="315:20">h</name><operator pos:start="315:21" pos:end="315:22">-&gt;</operator><name pos:start="315:23" pos:end="315:33">cur_pic_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:46"><expr pos:start="317:9" pos:end="317:45"><call pos:start="317:9" pos:end="317:45"><name pos:start="317:9" pos:end="317:18">av_assert0</name><argument_list pos:start="317:19" pos:end="317:45">(<argument pos:start="317:20" pos:end="317:44"><expr pos:start="317:20" pos:end="317:44"><name pos:start="317:20" pos:end="317:44"><name pos:start="317:20" pos:end="317:20">h</name><operator pos:start="317:21" pos:end="317:22">-&gt;</operator><name pos:start="317:23" pos:end="317:33">cur_pic_ptr</name><operator pos:start="317:34" pos:end="317:35">-&gt;</operator><name pos:start="317:36" pos:end="317:36">f</name><operator pos:start="317:37" pos:end="317:38">-&gt;</operator><name pos:start="317:39" pos:end="317:41">buf</name><index pos:start="317:42" pos:end="317:44">[<expr pos:start="317:43" pos:end="317:43"><literal type="number" pos:start="317:43" pos:end="317:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:61"><expr pos:start="319:9" pos:end="319:60"><call pos:start="319:9" pos:end="319:60"><name pos:start="319:9" pos:end="319:14">assert</name><argument_list pos:start="319:15" pos:end="319:60">(<argument pos:start="319:16" pos:end="319:59"><expr pos:start="319:16" pos:end="319:59"><name pos:start="319:16" pos:end="319:40"><name pos:start="319:16" pos:end="319:16">h</name><operator pos:start="319:17" pos:end="319:18">-&gt;</operator><name pos:start="319:19" pos:end="319:29">cur_pic_ptr</name><operator pos:start="319:30" pos:end="319:31">-&gt;</operator><name pos:start="319:32" pos:end="319:40">reference</name></name> <operator pos:start="319:42" pos:end="319:43">!=</operator> <name pos:start="319:45" pos:end="319:59">DELAYED_PIC_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="323:9" pos:end="323:62">/* figure out if we have a complementary field pair */</comment>

        <if_stmt pos:start="325:9" pos:end="365:9"><if pos:start="325:9" pos:end="337:9">if <condition pos:start="325:12" pos:end="325:76">(<expr pos:start="325:13" pos:end="325:75"><operator pos:start="325:13" pos:end="325:13">!</operator><call pos:start="325:14" pos:end="325:29"><name pos:start="325:14" pos:end="325:26">FIELD_PICTURE</name><argument_list pos:start="325:27" pos:end="325:29">(<argument pos:start="325:28" pos:end="325:28"><expr pos:start="325:28" pos:end="325:28"><name pos:start="325:28" pos:end="325:28">h</name></expr></argument>)</argument_list></call> <operator pos:start="325:31" pos:end="325:32">||</operator> <name pos:start="325:34" pos:end="325:53"><name pos:start="325:34" pos:end="325:34">h</name><operator pos:start="325:35" pos:end="325:36">-&gt;</operator><name pos:start="325:37" pos:end="325:53">picture_structure</name></name> <operator pos:start="325:55" pos:end="325:56">==</operator> <name pos:start="325:58" pos:end="325:75">last_pic_structure</name></expr>)</condition> <block pos:start="325:78" pos:end="337:9">{<block_content pos:start="331:13" pos:end="335:46">

            <comment type="block" pos:start="327:13" pos:end="329:57">/* Previous field is unmatched. Don't display it, but let it

             * remain for reference if marked as such. */</comment>

            <expr_stmt pos:start="331:13" pos:end="331:33"><expr pos:start="331:13" pos:end="331:32"><name pos:start="331:13" pos:end="331:29"><name pos:start="331:13" pos:end="331:13">h</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:29">missing_fields</name></name> <operator pos:start="331:31" pos:end="331:32">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:34"><expr pos:start="333:13" pos:end="333:33"><name pos:start="333:13" pos:end="333:26"><name pos:start="333:13" pos:end="333:13">h</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:26">cur_pic_ptr</name></name> <operator pos:start="333:28" pos:end="333:28">=</operator> <name pos:start="333:30" pos:end="333:33">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:46"><expr pos:start="335:13" pos:end="335:45"><name pos:start="335:13" pos:end="335:26"><name pos:start="335:13" pos:end="335:13">h</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:26">first_field</name></name> <operator pos:start="335:28" pos:end="335:28">=</operator> <call pos:start="335:30" pos:end="335:45"><name pos:start="335:30" pos:end="335:42">FIELD_PICTURE</name><argument_list pos:start="335:43" pos:end="335:45">(<argument pos:start="335:44" pos:end="335:44"><expr pos:start="335:44" pos:end="335:44"><name pos:start="335:44" pos:end="335:44">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="337:11" pos:end="365:9">else <block pos:start="337:16" pos:end="365:9">{<block_content pos:start="339:13" pos:end="363:13">

            <expr_stmt pos:start="339:13" pos:end="339:34"><expr pos:start="339:13" pos:end="339:33"><name pos:start="339:13" pos:end="339:29"><name pos:start="339:13" pos:end="339:13">h</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:29">missing_fields</name></name> <operator pos:start="339:31" pos:end="339:31">=</operator> <literal type="number" pos:start="339:33" pos:end="339:33">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="341:13" pos:end="363:13"><if pos:start="341:13" pos:end="357:13">if <condition pos:start="341:16" pos:end="341:62">(<expr pos:start="341:17" pos:end="341:61"><name pos:start="341:17" pos:end="341:41"><name pos:start="341:17" pos:end="341:17">h</name><operator pos:start="341:18" pos:end="341:19">-&gt;</operator><name pos:start="341:20" pos:end="341:30">cur_pic_ptr</name><operator pos:start="341:31" pos:end="341:32">-&gt;</operator><name pos:start="341:33" pos:end="341:41">frame_num</name></name> <operator pos:start="341:43" pos:end="341:44">!=</operator> <name pos:start="341:46" pos:end="341:61"><name pos:start="341:46" pos:end="341:46">h</name><operator pos:start="341:47" pos:end="341:48">-&gt;</operator><name pos:start="341:49" pos:end="341:51">poc</name><operator pos:start="341:52" pos:end="341:52">.</operator><name pos:start="341:53" pos:end="341:61">frame_num</name></name></expr>)</condition> <block pos:start="341:64" pos:end="357:13">{<block_content pos:start="343:17" pos:end="355:38">

                <expr_stmt pos:start="343:17" pos:end="345:83"><expr pos:start="343:17" pos:end="345:82"><call pos:start="343:17" pos:end="345:82"><name pos:start="343:17" pos:end="343:41">ff_thread_report_progress</name><argument_list pos:start="343:42" pos:end="345:82">(<argument pos:start="343:43" pos:end="343:61"><expr pos:start="343:43" pos:end="343:61"><operator pos:start="343:43" pos:end="343:43">&amp;</operator><name pos:start="343:44" pos:end="343:61"><name pos:start="343:44" pos:end="343:44">h</name><operator pos:start="343:45" pos:end="343:46">-&gt;</operator><name pos:start="343:47" pos:end="343:57">cur_pic_ptr</name><operator pos:start="343:58" pos:end="343:59">-&gt;</operator><name pos:start="343:60" pos:end="343:61">tf</name></name></expr></argument>, <argument pos:start="343:64" pos:end="343:70"><expr pos:start="343:64" pos:end="343:70"><name pos:start="343:64" pos:end="343:70">INT_MAX</name></expr></argument>,

                                          <argument pos:start="345:43" pos:end="345:81"><expr pos:start="345:43" pos:end="345:81"><name pos:start="345:43" pos:end="345:62"><name pos:start="345:43" pos:end="345:43">h</name><operator pos:start="345:44" pos:end="345:45">-&gt;</operator><name pos:start="345:46" pos:end="345:62">picture_structure</name></name><operator pos:start="345:63" pos:end="345:64">==</operator><name pos:start="345:65" pos:end="345:81">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="347:17" pos:end="351:56">/* This and the previous field had different frame_nums.

                 * Consider this field first in pair. Throw away previous

                 * one except for reference purposes. */</comment>

                <expr_stmt pos:start="353:17" pos:end="353:35"><expr pos:start="353:17" pos:end="353:34"><name pos:start="353:17" pos:end="353:30"><name pos:start="353:17" pos:end="353:17">h</name><operator pos:start="353:18" pos:end="353:19">-&gt;</operator><name pos:start="353:20" pos:end="353:30">first_field</name></name> <operator pos:start="353:32" pos:end="353:32">=</operator> <literal type="number" pos:start="353:34" pos:end="353:34">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="355:17" pos:end="355:38"><expr pos:start="355:17" pos:end="355:37"><name pos:start="355:17" pos:end="355:30"><name pos:start="355:17" pos:end="355:17">h</name><operator pos:start="355:18" pos:end="355:19">-&gt;</operator><name pos:start="355:20" pos:end="355:30">cur_pic_ptr</name></name> <operator pos:start="355:32" pos:end="355:32">=</operator> <name pos:start="355:34" pos:end="355:37">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="357:15" pos:end="363:13">else <block pos:start="357:20" pos:end="363:13">{<block_content pos:start="361:17" pos:end="361:35">

                <comment type="block" pos:start="359:17" pos:end="359:56">/* Second field in complementary pair */</comment>

                <expr_stmt pos:start="361:17" pos:end="361:35"><expr pos:start="361:17" pos:end="361:34"><name pos:start="361:17" pos:end="361:30"><name pos:start="361:17" pos:end="361:17">h</name><operator pos:start="361:18" pos:end="361:19">-&gt;</operator><name pos:start="361:20" pos:end="361:30">first_field</name></name> <operator pos:start="361:32" pos:end="361:32">=</operator> <literal type="number" pos:start="361:34" pos:end="361:34">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="367:7" pos:end="373:5">else <block pos:start="367:12" pos:end="373:5">{<block_content pos:start="371:9" pos:end="371:42">

        <comment type="block" pos:start="369:9" pos:end="369:70">/* Frame or first field in a potentially complementary pair */</comment>

        <expr_stmt pos:start="371:9" pos:end="371:42"><expr pos:start="371:9" pos:end="371:41"><name pos:start="371:9" pos:end="371:22"><name pos:start="371:9" pos:end="371:9">h</name><operator pos:start="371:10" pos:end="371:11">-&gt;</operator><name pos:start="371:12" pos:end="371:22">first_field</name></name> <operator pos:start="371:24" pos:end="371:24">=</operator> <call pos:start="371:26" pos:end="371:41"><name pos:start="371:26" pos:end="371:38">FIELD_PICTURE</name><argument_list pos:start="371:39" pos:end="371:41">(<argument pos:start="371:40" pos:end="371:40"><expr pos:start="371:40" pos:end="371:40"><name pos:start="371:40" pos:end="371:40">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="377:5" pos:end="391:5"><if pos:start="377:5" pos:end="387:5">if <condition pos:start="377:8" pos:end="377:44">(<expr pos:start="377:9" pos:end="377:43"><operator pos:start="377:9" pos:end="377:9">!</operator><call pos:start="377:10" pos:end="377:25"><name pos:start="377:10" pos:end="377:22">FIELD_PICTURE</name><argument_list pos:start="377:23" pos:end="377:25">(<argument pos:start="377:24" pos:end="377:24"><expr pos:start="377:24" pos:end="377:24"><name pos:start="377:24" pos:end="377:24">h</name></expr></argument>)</argument_list></call> <operator pos:start="377:27" pos:end="377:28">||</operator> <name pos:start="377:30" pos:end="377:43"><name pos:start="377:30" pos:end="377:30">h</name><operator pos:start="377:31" pos:end="377:32">-&gt;</operator><name pos:start="377:33" pos:end="377:43">first_field</name></name></expr>)</condition> <block pos:start="377:46" pos:end="387:5">{<block_content pos:start="379:9" pos:end="385:9">

        <if_stmt pos:start="379:9" pos:end="385:9"><if pos:start="379:9" pos:end="385:9">if <condition pos:start="379:12" pos:end="379:36">(<expr pos:start="379:13" pos:end="379:35"><call pos:start="379:13" pos:end="379:31"><name pos:start="379:13" pos:end="379:28">h264_frame_start</name><argument_list pos:start="379:29" pos:end="379:31">(<argument pos:start="379:30" pos:end="379:30"><expr pos:start="379:30" pos:end="379:30"><name pos:start="379:30" pos:end="379:30">h</name></expr></argument>)</argument_list></call> <operator pos:start="379:33" pos:end="379:33">&lt;</operator> <literal type="number" pos:start="379:35" pos:end="379:35">0</literal></expr>)</condition> <block pos:start="379:38" pos:end="385:9">{<block_content pos:start="381:13" pos:end="383:39">

            <expr_stmt pos:start="381:13" pos:end="381:31"><expr pos:start="381:13" pos:end="381:30"><name pos:start="381:13" pos:end="381:26"><name pos:start="381:13" pos:end="381:13">h</name><operator pos:start="381:14" pos:end="381:15">-&gt;</operator><name pos:start="381:16" pos:end="381:26">first_field</name></name> <operator pos:start="381:28" pos:end="381:28">=</operator> <literal type="number" pos:start="381:30" pos:end="381:30">0</literal></expr>;</expr_stmt>

            <return pos:start="383:13" pos:end="383:39">return <expr pos:start="383:20" pos:end="383:38"><name pos:start="383:20" pos:end="383:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="387:7" pos:end="391:5">else <block pos:start="387:12" pos:end="391:5">{<block_content pos:start="389:9" pos:end="389:38">

        <expr_stmt pos:start="389:9" pos:end="389:38"><expr pos:start="389:9" pos:end="389:37"><call pos:start="389:9" pos:end="389:37"><name pos:start="389:9" pos:end="389:31">release_unused_pictures</name><argument_list pos:start="389:32" pos:end="389:37">(<argument pos:start="389:33" pos:end="389:33"><expr pos:start="389:33" pos:end="389:33"><name pos:start="389:33" pos:end="389:33">h</name></expr></argument>, <argument pos:start="389:36" pos:end="389:36"><expr pos:start="389:36" pos:end="389:36"><literal type="number" pos:start="389:36" pos:end="389:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="393:5" pos:end="395:44">/* Some macroblocks can be accessed before they're available in case

    * of lost slices, MBAFF or threading. */</comment>

    <if_stmt pos:start="397:5" pos:end="409:5"><if pos:start="397:5" pos:end="403:5">if <condition pos:start="397:8" pos:end="397:25">(<expr pos:start="397:9" pos:end="397:24"><call pos:start="397:9" pos:end="397:24"><name pos:start="397:9" pos:end="397:21">FIELD_PICTURE</name><argument_list pos:start="397:22" pos:end="397:24">(<argument pos:start="397:23" pos:end="397:23"><expr pos:start="397:23" pos:end="397:23"><name pos:start="397:23" pos:end="397:23">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="397:27" pos:end="403:5">{<block_content pos:start="399:9" pos:end="401:120">

        <for pos:start="399:9" pos:end="401:120">for<control pos:start="399:12" pos:end="399:81">(<init pos:start="399:13" pos:end="399:60"><expr pos:start="399:13" pos:end="399:59"><name pos:start="399:13" pos:end="399:13">i</name> <operator pos:start="399:15" pos:end="399:15">=</operator> <operator pos:start="399:17" pos:end="399:17">(</operator><name pos:start="399:18" pos:end="399:37"><name pos:start="399:18" pos:end="399:18">h</name><operator pos:start="399:19" pos:end="399:20">-&gt;</operator><name pos:start="399:21" pos:end="399:37">picture_structure</name></name> <operator pos:start="399:39" pos:end="399:40">==</operator> <name pos:start="399:42" pos:end="399:58">PICT_BOTTOM_FIELD</name><operator pos:start="399:59" pos:end="399:59">)</operator></expr>;</init> <condition pos:start="399:62" pos:end="399:76"><expr pos:start="399:62" pos:end="399:75"><name pos:start="399:62" pos:end="399:62">i</name><operator pos:start="399:63" pos:end="399:63">&lt;</operator><name pos:start="399:64" pos:end="399:75"><name pos:start="399:64" pos:end="399:64">h</name><operator pos:start="399:65" pos:end="399:66">-&gt;</operator><name pos:start="399:67" pos:end="399:75">mb_height</name></name></expr>;</condition> <incr pos:start="399:78" pos:end="399:80"><expr pos:start="399:78" pos:end="399:80"><name pos:start="399:78" pos:end="399:78">i</name><operator pos:start="399:79" pos:end="399:80">++</operator></expr></incr>)</control><block type="pseudo" pos:start="401:13" pos:end="401:120"><block_content pos:start="401:13" pos:end="401:120">

            <expr_stmt pos:start="401:13" pos:end="401:120"><expr pos:start="401:13" pos:end="401:119"><call pos:start="401:13" pos:end="401:119"><name pos:start="401:13" pos:end="401:18">memset</name><argument_list pos:start="401:19" pos:end="401:119">(<argument pos:start="401:20" pos:end="401:50"><expr pos:start="401:20" pos:end="401:50"><name pos:start="401:20" pos:end="401:33"><name pos:start="401:20" pos:end="401:20">h</name><operator pos:start="401:21" pos:end="401:22">-&gt;</operator><name pos:start="401:23" pos:end="401:33">slice_table</name></name> <operator pos:start="401:35" pos:end="401:35">+</operator> <name pos:start="401:37" pos:end="401:37">i</name><operator pos:start="401:38" pos:end="401:38">*</operator><name pos:start="401:39" pos:end="401:50"><name pos:start="401:39" pos:end="401:39">h</name><operator pos:start="401:40" pos:end="401:41">-&gt;</operator><name pos:start="401:42" pos:end="401:50">mb_stride</name></name></expr></argument>, <argument pos:start="401:53" pos:end="401:54"><expr pos:start="401:53" pos:end="401:54"><operator pos:start="401:53" pos:end="401:53">-</operator><literal type="number" pos:start="401:54" pos:end="401:54">1</literal></expr></argument>, <argument pos:start="401:57" pos:end="401:118"><expr pos:start="401:57" pos:end="401:118"><operator pos:start="401:57" pos:end="401:57">(</operator><name pos:start="401:58" pos:end="401:69"><name pos:start="401:58" pos:end="401:58">h</name><operator pos:start="401:59" pos:end="401:60">-&gt;</operator><name pos:start="401:61" pos:end="401:69">mb_stride</name></name> <operator pos:start="401:71" pos:end="401:71">-</operator> <operator pos:start="401:73" pos:end="401:73">(</operator><name pos:start="401:74" pos:end="401:74">i</name><operator pos:start="401:75" pos:end="401:75">+</operator><literal type="number" pos:start="401:76" pos:end="401:76">1</literal><operator pos:start="401:77" pos:end="401:78">==</operator><name pos:start="401:79" pos:end="401:90"><name pos:start="401:79" pos:end="401:79">h</name><operator pos:start="401:80" pos:end="401:81">-&gt;</operator><name pos:start="401:82" pos:end="401:90">mb_height</name></name><operator pos:start="401:91" pos:end="401:91">)</operator><operator pos:start="401:92" pos:end="401:92">)</operator> <operator pos:start="401:94" pos:end="401:94">*</operator> <sizeof pos:start="401:96" pos:end="401:118">sizeof<argument_list pos:start="401:102" pos:end="401:118">(<argument pos:start="401:103" pos:end="401:117"><expr pos:start="401:103" pos:end="401:117"><operator pos:start="401:103" pos:end="401:103">*</operator><name pos:start="401:104" pos:end="401:117"><name pos:start="401:104" pos:end="401:104">h</name><operator pos:start="401:105" pos:end="401:106">-&gt;</operator><name pos:start="401:107" pos:end="401:117">slice_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <else pos:start="403:7" pos:end="409:5">else <block pos:start="403:12" pos:end="409:5">{<block_content pos:start="405:9" pos:end="407:73">

        <expr_stmt pos:start="405:9" pos:end="407:73"><expr pos:start="405:9" pos:end="407:72"><call pos:start="405:9" pos:end="407:72"><name pos:start="405:9" pos:end="405:14">memset</name><argument_list pos:start="405:15" pos:end="407:72">(<argument pos:start="405:16" pos:end="405:29"><expr pos:start="405:16" pos:end="405:29"><name pos:start="405:16" pos:end="405:29"><name pos:start="405:16" pos:end="405:16">h</name><operator pos:start="405:17" pos:end="405:18">-&gt;</operator><name pos:start="405:19" pos:end="405:29">slice_table</name></name></expr></argument>, <argument pos:start="405:32" pos:end="405:33"><expr pos:start="405:32" pos:end="405:33"><operator pos:start="405:32" pos:end="405:32">-</operator><literal type="number" pos:start="405:33" pos:end="405:33">1</literal></expr></argument>,

            <argument pos:start="407:13" pos:end="407:71"><expr pos:start="407:13" pos:end="407:71"><operator pos:start="407:13" pos:end="407:13">(</operator><name pos:start="407:14" pos:end="407:25"><name pos:start="407:14" pos:end="407:14">h</name><operator pos:start="407:15" pos:end="407:16">-&gt;</operator><name pos:start="407:17" pos:end="407:25">mb_height</name></name> <operator pos:start="407:27" pos:end="407:27">*</operator> <name pos:start="407:29" pos:end="407:40"><name pos:start="407:29" pos:end="407:29">h</name><operator pos:start="407:30" pos:end="407:31">-&gt;</operator><name pos:start="407:32" pos:end="407:40">mb_stride</name></name> <operator pos:start="407:42" pos:end="407:42">-</operator> <literal type="number" pos:start="407:44" pos:end="407:44">1</literal><operator pos:start="407:45" pos:end="407:45">)</operator> <operator pos:start="407:47" pos:end="407:47">*</operator> <sizeof pos:start="407:49" pos:end="407:71">sizeof<argument_list pos:start="407:55" pos:end="407:71">(<argument pos:start="407:56" pos:end="407:70"><expr pos:start="407:56" pos:end="407:70"><operator pos:start="407:56" pos:end="407:56">*</operator><name pos:start="407:57" pos:end="407:70"><name pos:start="407:57" pos:end="407:57">h</name><operator pos:start="407:58" pos:end="407:59">-&gt;</operator><name pos:start="407:60" pos:end="407:70">slice_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="413:5" pos:end="415:77"><expr pos:start="413:5" pos:end="415:76"><call pos:start="413:5" pos:end="415:76"><name pos:start="413:5" pos:end="413:20">ff_h264_init_poc</name><argument_list pos:start="413:21" pos:end="415:76">(<argument pos:start="413:22" pos:end="413:46"><expr pos:start="413:22" pos:end="413:46"><name pos:start="413:22" pos:end="413:46"><name pos:start="413:22" pos:end="413:22">h</name><operator pos:start="413:23" pos:end="413:24">-&gt;</operator><name pos:start="413:25" pos:end="413:35">cur_pic_ptr</name><operator pos:start="413:36" pos:end="413:37">-&gt;</operator><name pos:start="413:38" pos:end="413:46">field_poc</name></name></expr></argument>, <argument pos:start="413:49" pos:end="413:68"><expr pos:start="413:49" pos:end="413:68"><operator pos:start="413:49" pos:end="413:49">&amp;</operator><name pos:start="413:50" pos:end="413:68"><name pos:start="413:50" pos:end="413:50">h</name><operator pos:start="413:51" pos:end="413:52">-&gt;</operator><name pos:start="413:53" pos:end="413:63">cur_pic_ptr</name><operator pos:start="413:64" pos:end="413:65">-&gt;</operator><name pos:start="413:66" pos:end="413:68">poc</name></name></expr></argument>,

                     <argument pos:start="415:22" pos:end="415:30"><expr pos:start="415:22" pos:end="415:30"><name pos:start="415:22" pos:end="415:30"><name pos:start="415:22" pos:end="415:22">h</name><operator pos:start="415:23" pos:end="415:24">-&gt;</operator><name pos:start="415:25" pos:end="415:26">ps</name><operator pos:start="415:27" pos:end="415:27">.</operator><name pos:start="415:28" pos:end="415:30">sps</name></name></expr></argument>, <argument pos:start="415:33" pos:end="415:39"><expr pos:start="415:33" pos:end="415:39"><operator pos:start="415:33" pos:end="415:33">&amp;</operator><name pos:start="415:34" pos:end="415:39"><name pos:start="415:34" pos:end="415:34">h</name><operator pos:start="415:35" pos:end="415:36">-&gt;</operator><name pos:start="415:37" pos:end="415:39">poc</name></name></expr></argument>, <argument pos:start="415:42" pos:end="415:61"><expr pos:start="415:42" pos:end="415:61"><name pos:start="415:42" pos:end="415:61"><name pos:start="415:42" pos:end="415:42">h</name><operator pos:start="415:43" pos:end="415:44">-&gt;</operator><name pos:start="415:45" pos:end="415:61">picture_structure</name></name></expr></argument>, <argument pos:start="415:64" pos:end="415:75"><expr pos:start="415:64" pos:end="415:75"><name pos:start="415:64" pos:end="415:75"><name pos:start="415:64" pos:end="415:66">nal</name><operator pos:start="415:67" pos:end="415:68">-&gt;</operator><name pos:start="415:69" pos:end="415:75">ref_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="419:5" pos:end="419:62"><expr pos:start="419:5" pos:end="419:61"><call pos:start="419:5" pos:end="419:61"><name pos:start="419:5" pos:end="419:10">memcpy</name><argument_list pos:start="419:11" pos:end="419:61">(<argument pos:start="419:12" pos:end="419:18"><expr pos:start="419:12" pos:end="419:18"><name pos:start="419:12" pos:end="419:18"><name pos:start="419:12" pos:end="419:12">h</name><operator pos:start="419:13" pos:end="419:14">-&gt;</operator><name pos:start="419:15" pos:end="419:18">mmco</name></name></expr></argument>, <argument pos:start="419:21" pos:end="419:28"><expr pos:start="419:21" pos:end="419:28"><name pos:start="419:21" pos:end="419:28"><name pos:start="419:21" pos:end="419:22">sl</name><operator pos:start="419:23" pos:end="419:24">-&gt;</operator><name pos:start="419:25" pos:end="419:28">mmco</name></name></expr></argument>, <argument pos:start="419:31" pos:end="419:60"><expr pos:start="419:31" pos:end="419:60"><name pos:start="419:31" pos:end="419:41"><name pos:start="419:31" pos:end="419:32">sl</name><operator pos:start="419:33" pos:end="419:34">-&gt;</operator><name pos:start="419:35" pos:end="419:41">nb_mmco</name></name> <operator pos:start="419:43" pos:end="419:43">*</operator> <sizeof pos:start="419:45" pos:end="419:60">sizeof<argument_list pos:start="419:51" pos:end="419:60">(<argument pos:start="419:52" pos:end="419:59"><expr pos:start="419:52" pos:end="419:59"><operator pos:start="419:52" pos:end="419:52">*</operator><name pos:start="419:53" pos:end="419:59"><name pos:start="419:53" pos:end="419:53">h</name><operator pos:start="419:54" pos:end="419:55">-&gt;</operator><name pos:start="419:56" pos:end="419:59">mmco</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="421:5" pos:end="421:29"><expr pos:start="421:5" pos:end="421:28"><name pos:start="421:5" pos:end="421:14"><name pos:start="421:5" pos:end="421:5">h</name><operator pos:start="421:6" pos:end="421:7">-&gt;</operator><name pos:start="421:8" pos:end="421:14">nb_mmco</name></name> <operator pos:start="421:16" pos:end="421:16">=</operator> <name pos:start="421:18" pos:end="421:28"><name pos:start="421:18" pos:end="421:19">sl</name><operator pos:start="421:20" pos:end="421:21">-&gt;</operator><name pos:start="421:22" pos:end="421:28">nb_mmco</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="423:5" pos:end="423:55"><expr pos:start="423:5" pos:end="423:54"><name pos:start="423:5" pos:end="423:27"><name pos:start="423:5" pos:end="423:5">h</name><operator pos:start="423:6" pos:end="423:7">-&gt;</operator><name pos:start="423:8" pos:end="423:27">explicit_ref_marking</name></name> <operator pos:start="423:29" pos:end="423:29">=</operator> <name pos:start="423:31" pos:end="423:54"><name pos:start="423:31" pos:end="423:32">sl</name><operator pos:start="423:33" pos:end="423:34">-&gt;</operator><name pos:start="423:35" pos:end="423:54">explicit_ref_marking</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="427:5" pos:end="427:53"><expr pos:start="427:5" pos:end="427:52"><name pos:start="427:5" pos:end="427:18"><name pos:start="427:5" pos:end="427:5">h</name><operator pos:start="427:6" pos:end="427:7">-&gt;</operator><name pos:start="427:8" pos:end="427:18">picture_idr</name></name> <operator pos:start="427:20" pos:end="427:20">=</operator> <name pos:start="427:22" pos:end="427:30"><name pos:start="427:22" pos:end="427:24">nal</name><operator pos:start="427:25" pos:end="427:26">-&gt;</operator><name pos:start="427:27" pos:end="427:30">type</name></name> <operator pos:start="427:32" pos:end="427:33">==</operator> <name pos:start="427:35" pos:end="427:52">H264_NAL_IDR_SLICE</name></expr>;</expr_stmt>



    <if_stmt pos:start="431:5" pos:end="457:5"><if pos:start="431:5" pos:end="457:5">if <condition pos:start="431:8" pos:end="431:54">(<expr pos:start="431:9" pos:end="431:53"><name pos:start="431:9" pos:end="431:48"><name pos:start="431:9" pos:end="431:9">h</name><operator pos:start="431:10" pos:end="431:11">-&gt;</operator><name pos:start="431:12" pos:end="431:14">sei</name><operator pos:start="431:15" pos:end="431:15">.</operator><name pos:start="431:16" pos:end="431:29">recovery_point</name><operator pos:start="431:30" pos:end="431:30">.</operator><name pos:start="431:31" pos:end="431:48">recovery_frame_cnt</name></name> <operator pos:start="431:50" pos:end="431:51">&gt;=</operator> <literal type="number" pos:start="431:53" pos:end="431:53">0</literal></expr>)</condition> <block pos:start="431:56" pos:end="457:5">{<block_content pos:start="433:9" pos:end="455:9">

        <decl_stmt pos:start="433:9" pos:end="433:84"><decl pos:start="433:9" pos:end="433:83"><type pos:start="433:9" pos:end="433:17"><specifier pos:start="433:9" pos:end="433:13">const</specifier> <name pos:start="433:15" pos:end="433:17">int</name></type> <name pos:start="433:19" pos:end="433:40">sei_recovery_frame_cnt</name> <init pos:start="433:42" pos:end="433:83">= <expr pos:start="433:44" pos:end="433:83"><name pos:start="433:44" pos:end="433:83"><name pos:start="433:44" pos:end="433:44">h</name><operator pos:start="433:45" pos:end="433:46">-&gt;</operator><name pos:start="433:47" pos:end="433:49">sei</name><operator pos:start="433:50" pos:end="433:50">.</operator><name pos:start="433:51" pos:end="433:64">recovery_point</name><operator pos:start="433:65" pos:end="433:65">.</operator><name pos:start="433:66" pos:end="433:83">recovery_frame_cnt</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="437:9" pos:end="439:40"><if pos:start="437:9" pos:end="439:40">if <condition pos:start="437:12" pos:end="437:98">(<expr pos:start="437:13" pos:end="437:97"><name pos:start="437:13" pos:end="437:28"><name pos:start="437:13" pos:end="437:13">h</name><operator pos:start="437:14" pos:end="437:15">-&gt;</operator><name pos:start="437:16" pos:end="437:18">poc</name><operator pos:start="437:19" pos:end="437:19">.</operator><name pos:start="437:20" pos:end="437:28">frame_num</name></name> <operator pos:start="437:30" pos:end="437:31">!=</operator> <name pos:start="437:33" pos:end="437:54">sei_recovery_frame_cnt</name> <operator pos:start="437:56" pos:end="437:57">||</operator> <name pos:start="437:59" pos:end="437:76"><name pos:start="437:59" pos:end="437:60">sl</name><operator pos:start="437:61" pos:end="437:62">-&gt;</operator><name pos:start="437:63" pos:end="437:76">slice_type_nos</name></name> <operator pos:start="437:78" pos:end="437:79">!=</operator> <name pos:start="437:81" pos:end="437:97">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="439:13" pos:end="439:40"><block_content pos:start="439:13" pos:end="439:40">

            <expr_stmt pos:start="439:13" pos:end="439:40"><expr pos:start="439:13" pos:end="439:39"><name pos:start="439:13" pos:end="439:35"><name pos:start="439:13" pos:end="439:13">h</name><operator pos:start="439:14" pos:end="439:15">-&gt;</operator><name pos:start="439:16" pos:end="439:35">valid_recovery_point</name></name> <operator pos:start="439:37" pos:end="439:37">=</operator> <literal type="number" pos:start="439:39" pos:end="439:39">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="443:9" pos:end="455:9"><if pos:start="443:9" pos:end="455:9">if <condition pos:start="443:12" pos:end="445:123">(   <expr pos:start="443:16" pos:end="445:122"><name pos:start="443:16" pos:end="443:32"><name pos:start="443:16" pos:end="443:16">h</name><operator pos:start="443:17" pos:end="443:18">-&gt;</operator><name pos:start="443:19" pos:end="443:32">recovery_frame</name></name> <operator pos:start="443:34" pos:end="443:34">&lt;</operator> <literal type="number" pos:start="443:36" pos:end="443:36">0</literal>

            <operator pos:start="445:13" pos:end="445:14">||</operator> <call pos:start="445:16" pos:end="445:97"><name pos:start="445:16" pos:end="445:28">av_mod_uintp2</name><argument_list pos:start="445:29" pos:end="445:97">(<argument pos:start="445:30" pos:end="445:65"><expr pos:start="445:30" pos:end="445:65"><name pos:start="445:30" pos:end="445:46"><name pos:start="445:30" pos:end="445:30">h</name><operator pos:start="445:31" pos:end="445:32">-&gt;</operator><name pos:start="445:33" pos:end="445:46">recovery_frame</name></name> <operator pos:start="445:48" pos:end="445:48">-</operator> <name pos:start="445:50" pos:end="445:65"><name pos:start="445:50" pos:end="445:50">h</name><operator pos:start="445:51" pos:end="445:52">-&gt;</operator><name pos:start="445:53" pos:end="445:55">poc</name><operator pos:start="445:56" pos:end="445:56">.</operator><name pos:start="445:57" pos:end="445:65">frame_num</name></name></expr></argument>, <argument pos:start="445:68" pos:end="445:96"><expr pos:start="445:68" pos:end="445:96"><name pos:start="445:68" pos:end="445:96"><name pos:start="445:68" pos:end="445:68">h</name><operator pos:start="445:69" pos:end="445:70">-&gt;</operator><name pos:start="445:71" pos:end="445:72">ps</name><operator pos:start="445:73" pos:end="445:73">.</operator><name pos:start="445:74" pos:end="445:76">sps</name><operator pos:start="445:77" pos:end="445:78">-&gt;</operator><name pos:start="445:79" pos:end="445:96">log2_max_frame_num</name></name></expr></argument>)</argument_list></call> <operator pos:start="445:99" pos:end="445:99">&gt;</operator> <name pos:start="445:101" pos:end="445:122">sei_recovery_frame_cnt</name></expr>)</condition> <block pos:start="445:125" pos:end="455:9">{<block_content pos:start="447:13" pos:end="453:53">

            <expr_stmt pos:start="447:13" pos:end="447:120"><expr pos:start="447:13" pos:end="447:119"><name pos:start="447:13" pos:end="447:29"><name pos:start="447:13" pos:end="447:13">h</name><operator pos:start="447:14" pos:end="447:15">-&gt;</operator><name pos:start="447:16" pos:end="447:29">recovery_frame</name></name> <operator pos:start="447:31" pos:end="447:31">=</operator> <call pos:start="447:33" pos:end="447:119"><name pos:start="447:33" pos:end="447:45">av_mod_uintp2</name><argument_list pos:start="447:46" pos:end="447:119">(<argument pos:start="447:47" pos:end="447:87"><expr pos:start="447:47" pos:end="447:87"><name pos:start="447:47" pos:end="447:62"><name pos:start="447:47" pos:end="447:47">h</name><operator pos:start="447:48" pos:end="447:49">-&gt;</operator><name pos:start="447:50" pos:end="447:52">poc</name><operator pos:start="447:53" pos:end="447:53">.</operator><name pos:start="447:54" pos:end="447:62">frame_num</name></name> <operator pos:start="447:64" pos:end="447:64">+</operator> <name pos:start="447:66" pos:end="447:87">sei_recovery_frame_cnt</name></expr></argument>, <argument pos:start="447:90" pos:end="447:118"><expr pos:start="447:90" pos:end="447:118"><name pos:start="447:90" pos:end="447:118"><name pos:start="447:90" pos:end="447:90">h</name><operator pos:start="447:91" pos:end="447:92">-&gt;</operator><name pos:start="447:93" pos:end="447:94">ps</name><operator pos:start="447:95" pos:end="447:95">.</operator><name pos:start="447:96" pos:end="447:98">sps</name><operator pos:start="447:99" pos:end="447:100">-&gt;</operator><name pos:start="447:101" pos:end="447:118">log2_max_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="451:13" pos:end="453:53"><if pos:start="451:13" pos:end="453:53">if <condition pos:start="451:16" pos:end="451:41">(<expr pos:start="451:17" pos:end="451:40"><operator pos:start="451:17" pos:end="451:17">!</operator><name pos:start="451:18" pos:end="451:40"><name pos:start="451:18" pos:end="451:18">h</name><operator pos:start="451:19" pos:end="451:20">-&gt;</operator><name pos:start="451:21" pos:end="451:40">valid_recovery_point</name></name></expr>)</condition><block type="pseudo" pos:start="453:17" pos:end="453:53"><block_content pos:start="453:17" pos:end="453:53">

                <expr_stmt pos:start="453:17" pos:end="453:53"><expr pos:start="453:17" pos:end="453:52"><name pos:start="453:17" pos:end="453:33"><name pos:start="453:17" pos:end="453:17">h</name><operator pos:start="453:18" pos:end="453:19">-&gt;</operator><name pos:start="453:20" pos:end="453:33">recovery_frame</name></name> <operator pos:start="453:35" pos:end="453:35">=</operator> <name pos:start="453:37" pos:end="453:52"><name pos:start="453:37" pos:end="453:37">h</name><operator pos:start="453:38" pos:end="453:39">-&gt;</operator><name pos:start="453:40" pos:end="453:42">poc</name><operator pos:start="453:43" pos:end="453:43">.</operator><name pos:start="453:44" pos:end="453:52">frame_num</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="461:5" pos:end="461:70"><expr pos:start="461:5" pos:end="461:69"><name pos:start="461:5" pos:end="461:32"><name pos:start="461:5" pos:end="461:5">h</name><operator pos:start="461:6" pos:end="461:7">-&gt;</operator><name pos:start="461:8" pos:end="461:18">cur_pic_ptr</name><operator pos:start="461:19" pos:end="461:20">-&gt;</operator><name pos:start="461:21" pos:end="461:21">f</name><operator pos:start="461:22" pos:end="461:23">-&gt;</operator><name pos:start="461:24" pos:end="461:32">key_frame</name></name> <operator pos:start="461:34" pos:end="461:35">|=</operator> <operator pos:start="461:37" pos:end="461:37">(</operator><name pos:start="461:38" pos:end="461:46"><name pos:start="461:38" pos:end="461:40">nal</name><operator pos:start="461:41" pos:end="461:42">-&gt;</operator><name pos:start="461:43" pos:end="461:46">type</name></name> <operator pos:start="461:48" pos:end="461:49">==</operator> <name pos:start="461:51" pos:end="461:68">H264_NAL_IDR_SLICE</name><operator pos:start="461:69" pos:end="461:69">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="465:5" pos:end="473:5"><if pos:start="465:5" pos:end="473:5">if <condition pos:start="465:8" pos:end="467:64">(<expr pos:start="465:9" pos:end="467:63"><name pos:start="465:9" pos:end="465:17"><name pos:start="465:9" pos:end="465:11">nal</name><operator pos:start="465:12" pos:end="465:13">-&gt;</operator><name pos:start="465:14" pos:end="465:17">type</name></name> <operator pos:start="465:19" pos:end="465:20">==</operator> <name pos:start="465:22" pos:end="465:39">H264_NAL_IDR_SLICE</name> <operator pos:start="465:41" pos:end="465:42">||</operator>

        <operator pos:start="467:9" pos:end="467:9">(</operator><name pos:start="467:10" pos:end="467:26"><name pos:start="467:10" pos:end="467:10">h</name><operator pos:start="467:11" pos:end="467:12">-&gt;</operator><name pos:start="467:13" pos:end="467:26">recovery_frame</name></name> <operator pos:start="467:28" pos:end="467:29">==</operator> <name pos:start="467:31" pos:end="467:46"><name pos:start="467:31" pos:end="467:31">h</name><operator pos:start="467:32" pos:end="467:33">-&gt;</operator><name pos:start="467:34" pos:end="467:36">poc</name><operator pos:start="467:37" pos:end="467:37">.</operator><name pos:start="467:38" pos:end="467:46">frame_num</name></name> <operator pos:start="467:48" pos:end="467:49">&amp;&amp;</operator> <name pos:start="467:51" pos:end="467:62"><name pos:start="467:51" pos:end="467:53">nal</name><operator pos:start="467:54" pos:end="467:55">-&gt;</operator><name pos:start="467:56" pos:end="467:62">ref_idc</name></name><operator pos:start="467:63" pos:end="467:63">)</operator></expr>)</condition> <block pos:start="467:66" pos:end="473:5">{<block_content pos:start="469:9" pos:end="471:38">

        <expr_stmt pos:start="469:9" pos:end="469:39"><expr pos:start="469:9" pos:end="469:38"><name pos:start="469:9" pos:end="469:25"><name pos:start="469:9" pos:end="469:9">h</name><operator pos:start="469:10" pos:end="469:11">-&gt;</operator><name pos:start="469:12" pos:end="469:25">recovery_frame</name></name>         <operator pos:start="469:35" pos:end="469:35">=</operator> <operator pos:start="469:37" pos:end="469:37">-</operator><literal type="number" pos:start="469:38" pos:end="469:38">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="471:9" pos:end="471:38"><expr pos:start="471:9" pos:end="471:37"><name pos:start="471:9" pos:end="471:33"><name pos:start="471:9" pos:end="471:9">h</name><operator pos:start="471:10" pos:end="471:11">-&gt;</operator><name pos:start="471:12" pos:end="471:22">cur_pic_ptr</name><operator pos:start="471:23" pos:end="471:24">-&gt;</operator><name pos:start="471:25" pos:end="471:33">recovered</name></name> <operator pos:start="471:35" pos:end="471:35">=</operator> <literal type="number" pos:start="471:37" pos:end="471:37">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="475:5" pos:end="475:66">// If we have an IDR, all frames after it in decoded order are</comment>

    <comment type="line" pos:start="477:5" pos:end="477:19">// "recovered".</comment>

    <if_stmt pos:start="479:5" pos:end="484:0"><if pos:start="479:5" pos:end="484:0">if <condition pos:start="479:8" pos:end="479:40">(<expr pos:start="479:9" pos:end="479:39"><name pos:start="479:9" pos:end="479:17"><name pos:start="479:9" pos:end="479:11">nal</name><operator pos:start="479:12" pos:end="479:13">-&gt;</operator><name pos:start="479:14" pos:end="479:17">type</name></name> <operator pos:start="479:19" pos:end="479:20">==</operator> <name pos:start="479:22" pos:end="479:39">H264_NAL_IDR_SLICE</name></expr>)</condition><block type="pseudo" pos:start="481:9" pos:end="484:0"><block_content pos:start="481:9" pos:end="484:0">

        <expr_stmt pos:start="481:9" pos:end="484:0"><expr pos:start="481:9" pos:end="481:49"><name pos:start="481:9" pos:end="481:26"><name pos:start="481:9" pos:end="481:9">h</name><operator pos:start="481:10" pos:end="481:11">-&gt;</operator><name pos:start="481:12" pos:end="481:26">frame_recovered</name></name> <operator pos:start="481:28" pos:end="481:29">|=</operator> <name pos:start="481:31" pos:end="481:49">FRAME_RECOVERED_IDR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:if pos:start="483:1" pos:end="483:5">#<cpp:directive pos:start="483:2" pos:end="483:3">if</cpp:directive> <expr pos:start="483:5" pos:end="483:5"><literal type="number" pos:start="483:5" pos:end="483:5">1</literal></expr></cpp:if>

    <expr_stmt pos:start="485:5" pos:end="488:0"><expr pos:start="485:5" pos:end="485:51"><name pos:start="485:5" pos:end="485:29"><name pos:start="485:5" pos:end="485:5">h</name><operator pos:start="485:6" pos:end="485:7">-&gt;</operator><name pos:start="485:8" pos:end="485:18">cur_pic_ptr</name><operator pos:start="485:19" pos:end="485:20">-&gt;</operator><name pos:start="485:21" pos:end="485:29">recovered</name></name> <operator pos:start="485:31" pos:end="485:32">|=</operator> <name pos:start="485:34" pos:end="485:51"><name pos:start="485:34" pos:end="485:34">h</name><operator pos:start="485:35" pos:end="485:36">-&gt;</operator><name pos:start="485:37" pos:end="485:51">frame_recovered</name></name></expr>;</expr_stmt>

<cpp:else pos:start="487:1" pos:end="487:5">#<cpp:directive pos:start="487:2" pos:end="487:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="489:5" pos:end="492:0"><expr pos:start="489:5" pos:end="489:77"><name pos:start="489:5" pos:end="489:29"><name pos:start="489:5" pos:end="489:5">h</name><operator pos:start="489:6" pos:end="489:7">-&gt;</operator><name pos:start="489:8" pos:end="489:18">cur_pic_ptr</name><operator pos:start="489:19" pos:end="489:20">-&gt;</operator><name pos:start="489:21" pos:end="489:29">recovered</name></name> <operator pos:start="489:31" pos:end="489:32">|=</operator> <operator pos:start="489:34" pos:end="489:34">!</operator><operator pos:start="489:35" pos:end="489:35">!</operator><operator pos:start="489:36" pos:end="489:36">(</operator><name pos:start="489:37" pos:end="489:54"><name pos:start="489:37" pos:end="489:37">h</name><operator pos:start="489:38" pos:end="489:39">-&gt;</operator><name pos:start="489:40" pos:end="489:54">frame_recovered</name></name> <operator pos:start="489:56" pos:end="489:56">&amp;</operator> <name pos:start="489:58" pos:end="489:76">FRAME_RECOVERED_IDR</name><operator pos:start="489:77" pos:end="489:77">)</operator></expr>;</expr_stmt>

<cpp:endif pos:start="491:1" pos:end="491:6">#<cpp:directive pos:start="491:2" pos:end="491:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="495:5" pos:end="499:48">/* Set the frame properties/side data. Only done for the second field in

     * field coded frames, since some SEI information is present for each field

     * and is merged by the SEI parsing code. */</comment>

    <if_stmt pos:start="501:5" pos:end="517:5"><if pos:start="501:5" pos:end="517:5">if <condition pos:start="501:8" pos:end="501:70">(<expr pos:start="501:9" pos:end="501:69"><operator pos:start="501:9" pos:end="501:9">!</operator><call pos:start="501:10" pos:end="501:25"><name pos:start="501:10" pos:end="501:22">FIELD_PICTURE</name><argument_list pos:start="501:23" pos:end="501:25">(<argument pos:start="501:24" pos:end="501:24"><expr pos:start="501:24" pos:end="501:24"><name pos:start="501:24" pos:end="501:24">h</name></expr></argument>)</argument_list></call> <operator pos:start="501:27" pos:end="501:28">||</operator> <operator pos:start="501:30" pos:end="501:30">!</operator><name pos:start="501:31" pos:end="501:44"><name pos:start="501:31" pos:end="501:31">h</name><operator pos:start="501:32" pos:end="501:33">-&gt;</operator><name pos:start="501:34" pos:end="501:44">first_field</name></name> <operator pos:start="501:46" pos:end="501:47">||</operator> <name pos:start="501:49" pos:end="501:65"><name pos:start="501:49" pos:end="501:49">h</name><operator pos:start="501:50" pos:end="501:51">-&gt;</operator><name pos:start="501:52" pos:end="501:65">missing_fields</name></name> <operator pos:start="501:67" pos:end="501:67">&gt;</operator> <literal type="number" pos:start="501:69" pos:end="501:69">1</literal></expr>)</condition> <block pos:start="501:72" pos:end="517:5">{<block_content pos:start="503:9" pos:end="515:23">

        <expr_stmt pos:start="503:9" pos:end="503:41"><expr pos:start="503:9" pos:end="503:40"><name pos:start="503:9" pos:end="503:11">ret</name> <operator pos:start="503:13" pos:end="503:13">=</operator> <call pos:start="503:15" pos:end="503:40"><name pos:start="503:15" pos:end="503:37">h264_export_frame_props</name><argument_list pos:start="503:38" pos:end="503:40">(<argument pos:start="503:39" pos:end="503:39"><expr pos:start="503:39" pos:end="503:39"><name pos:start="503:39" pos:end="503:39">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="505:9" pos:end="507:23"><if pos:start="505:9" pos:end="507:23">if <condition pos:start="505:12" pos:end="505:20">(<expr pos:start="505:13" pos:end="505:19"><name pos:start="505:13" pos:end="505:15">ret</name> <operator pos:start="505:17" pos:end="505:17">&lt;</operator> <literal type="number" pos:start="505:19" pos:end="505:19">0</literal></expr>)</condition><block type="pseudo" pos:start="507:13" pos:end="507:23"><block_content pos:start="507:13" pos:end="507:23">

            <return pos:start="507:13" pos:end="507:23">return <expr pos:start="507:20" pos:end="507:22"><name pos:start="507:20" pos:end="507:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="511:9" pos:end="511:42"><expr pos:start="511:9" pos:end="511:41"><name pos:start="511:9" pos:end="511:11">ret</name> <operator pos:start="511:13" pos:end="511:13">=</operator> <call pos:start="511:15" pos:end="511:41"><name pos:start="511:15" pos:end="511:38">h264_select_output_frame</name><argument_list pos:start="511:39" pos:end="511:41">(<argument pos:start="511:40" pos:end="511:40"><expr pos:start="511:40" pos:end="511:40"><name pos:start="511:40" pos:end="511:40">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="513:9" pos:end="515:23"><if pos:start="513:9" pos:end="515:23">if <condition pos:start="513:12" pos:end="513:20">(<expr pos:start="513:13" pos:end="513:19"><name pos:start="513:13" pos:end="513:15">ret</name> <operator pos:start="513:17" pos:end="513:17">&lt;</operator> <literal type="number" pos:start="513:19" pos:end="513:19">0</literal></expr>)</condition><block type="pseudo" pos:start="515:13" pos:end="515:23"><block_content pos:start="515:13" pos:end="515:23">

            <return pos:start="515:13" pos:end="515:23">return <expr pos:start="515:20" pos:end="515:22"><name pos:start="515:20" pos:end="515:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="521:5" pos:end="521:13">return <expr pos:start="521:12" pos:end="521:12"><literal type="number" pos:start="521:12" pos:end="521:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
