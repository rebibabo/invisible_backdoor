<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14057.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">v4l2_receive_frame</name><parameter_list pos:start="1:30" pos:end="1:68">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:67"><decl pos:start="1:54" pos:end="1:67"><type pos:start="1:54" pos:end="1:67"><name pos:start="1:54" pos:end="1:60">AVFrame</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:57">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">V4L2m2mContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:15">V4L2Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier><specifier pos:start="7:18" pos:end="7:22">const</specifier></type> <name pos:start="7:24" pos:end="7:30">capture</name> <init pos:start="7:32" pos:end="7:44">= <expr pos:start="7:34" pos:end="7:44"><operator pos:start="7:34" pos:end="7:34">&amp;</operator><name pos:start="7:35" pos:end="7:44"><name pos:start="7:35" pos:end="7:35">s</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:44">capture</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:15">V4L2Context</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier><specifier pos:start="9:18" pos:end="9:22">const</specifier></type> <name pos:start="9:24" pos:end="9:29">output</name> <init pos:start="9:31" pos:end="9:42">= <expr pos:start="9:33" pos:end="9:42"><operator pos:start="9:33" pos:end="9:33">&amp;</operator><name pos:start="9:34" pos:end="9:42"><name pos:start="9:34" pos:end="9:34">s</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:42">output</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">AVPacket</name></type> <name pos:start="11:14" pos:end="11:18">avpkt</name> <init pos:start="11:20" pos:end="11:24">= <expr pos:start="11:22" pos:end="11:24"><block pos:start="11:22" pos:end="11:24">{<expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:46"><expr pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:45"><name pos:start="17:11" pos:end="17:30">ff_decode_get_packet</name><argument_list pos:start="17:31" pos:end="17:45">(<argument pos:start="17:32" pos:end="17:36"><expr pos:start="17:32" pos:end="17:36"><name pos:start="17:32" pos:end="17:36">avctx</name></expr></argument>, <argument pos:start="17:39" pos:end="17:44"><expr pos:start="17:39" pos:end="17:44"><operator pos:start="17:39" pos:end="17:39">&amp;</operator><name pos:start="17:40" pos:end="17:44">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:19"><if pos:start="19:5" pos:end="21:19">if <condition pos:start="19:8" pos:end="19:38">(<expr pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal> <operator pos:start="19:17" pos:end="19:18">&amp;&amp;</operator> <name pos:start="19:20" pos:end="19:22">ret</name> <operator pos:start="19:24" pos:end="19:25">!=</operator> <name pos:start="19:27" pos:end="19:37">AVERROR_EOF</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:19"><block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:21"><if pos:start="25:5" pos:end="27:21">if <condition pos:start="25:8" pos:end="25:20">(<expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:19">draining</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:21"><block_content pos:start="27:9" pos:end="27:21">

        <goto pos:start="27:9" pos:end="27:21">goto <name pos:start="27:14" pos:end="27:20">dequeue</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:57"><expr pos:start="31:5" pos:end="31:56"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:56"><name pos:start="31:11" pos:end="31:40">ff_v4l2_context_enqueue_packet</name><argument_list pos:start="31:41" pos:end="31:56">(<argument pos:start="31:42" pos:end="31:47"><expr pos:start="31:42" pos:end="31:47"><name pos:start="31:42" pos:end="31:47">output</name></expr></argument>, <argument pos:start="31:50" pos:end="31:55"><expr pos:start="31:50" pos:end="31:55"><operator pos:start="31:50" pos:end="31:50">&amp;</operator><name pos:start="31:51" pos:end="31:55">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>)</condition> <block pos:start="33:18" pos:end="41:5">{<block_content pos:start="35:9" pos:end="37:22">

        <if_stmt pos:start="35:9" pos:end="37:22"><if pos:start="35:9" pos:end="37:22">if <condition pos:start="35:12" pos:end="35:35">(<expr pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:18">!=</operator> <call pos:start="35:20" pos:end="35:34"><name pos:start="35:20" pos:end="35:26">AVERROR</name><argument_list pos:start="35:27" pos:end="35:34">(<argument pos:start="35:28" pos:end="35:33"><expr pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:12" pos:end="37:22"><block_content pos:start="37:12" pos:end="37:22">

           <return pos:start="37:12" pos:end="37:22">return <expr pos:start="37:19" pos:end="37:21"><name pos:start="37:19" pos:end="37:21">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="39:9" pos:end="39:59">/* no input buffers available, continue dequeing */</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:19">(<expr pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:13">avpkt</name><operator pos:start="45:14" pos:end="45:14">.</operator><name pos:start="45:15" pos:end="45:18">size</name></name></expr>)</condition> <block pos:start="45:21" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:21">

        <expr_stmt pos:start="47:9" pos:end="47:36"><expr pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:35"><name pos:start="47:15" pos:end="47:28">v4l2_try_start</name><argument_list pos:start="47:29" pos:end="47:35">(<argument pos:start="47:30" pos:end="47:34"><expr pos:start="47:30" pos:end="47:34"><name pos:start="47:30" pos:end="47:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:21"><if pos:start="49:9" pos:end="51:21">if <condition pos:start="49:12" pos:end="49:16">(<expr pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">ret</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:21"><block_content pos:start="51:13" pos:end="51:21">

            <return pos:start="51:13" pos:end="51:21">return <expr pos:start="51:20" pos:end="51:20"><literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="57:1" pos:end="57:8"><name pos:start="57:1" pos:end="57:7">dequeue</name>:</label>

    <return pos:start="59:5" pos:end="59:57">return <expr pos:start="59:12" pos:end="59:56"><call pos:start="59:12" pos:end="59:56"><name pos:start="59:12" pos:end="59:40">ff_v4l2_context_dequeue_frame</name><argument_list pos:start="59:41" pos:end="59:56">(<argument pos:start="59:42" pos:end="59:48"><expr pos:start="59:42" pos:end="59:48"><name pos:start="59:42" pos:end="59:48">capture</name></expr></argument>, <argument pos:start="59:51" pos:end="59:55"><expr pos:start="59:51" pos:end="59:55"><name pos:start="59:51" pos:end="59:55">frame</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
