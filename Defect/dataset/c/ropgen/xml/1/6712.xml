<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6712.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">ff_af_queue_remove</name><parameter_list pos:start="1:24" pos:end="3:38">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:39">AudioFrameQueue</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">afq</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:60"><decl pos:start="1:47" pos:end="1:60"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:60">nb_samples</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:69">int64_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">pts</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:37"><decl pos:start="3:25" pos:end="3:37"><type pos:start="3:25" pos:end="3:37"><name pos:start="3:25" pos:end="3:27">int</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:37">duration</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:73">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:19">out_pts</name> <init pos:start="7:21" pos:end="7:36">= <expr pos:start="7:23" pos:end="7:36"><name pos:start="7:23" pos:end="7:36">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:23">removed_samples</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:45">(<expr pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:11">afq</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:24">frame_count</name></name> <operator pos:start="15:26" pos:end="15:27">||</operator> <name pos:start="15:29" pos:end="15:44"><name pos:start="15:29" pos:end="15:31">afq</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:44">frame_alloc</name></name></expr>)</condition> <block pos:start="15:47" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:39">

        <if_stmt pos:start="17:9" pos:end="19:39"><if pos:start="17:9" pos:end="19:39">if <condition pos:start="17:12" pos:end="17:47">(<expr pos:start="17:13" pos:end="17:46"><name pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:15">afq</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:23">frames</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:28">pts</name></name> <operator pos:start="17:30" pos:end="17:31">!=</operator> <name pos:start="17:33" pos:end="17:46">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:39"><block_content pos:start="19:13" pos:end="19:39">

            <expr_stmt pos:start="19:13" pos:end="19:39"><expr pos:start="19:13" pos:end="19:38"><name pos:start="19:13" pos:end="19:19">out_pts</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:38"><name pos:start="19:23" pos:end="19:25">afq</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:33">frames</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:38">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="25:103"><if pos:start="23:5" pos:end="25:103">if<condition pos:start="23:7" pos:end="23:25">(<expr pos:start="23:8" pos:end="23:24"><operator pos:start="23:8" pos:end="23:8">!</operator><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:11">afq</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:24">frame_count</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:103"><block_content pos:start="25:9" pos:end="25:103">

        <expr_stmt pos:start="25:9" pos:end="25:103"><expr pos:start="25:9" pos:end="25:102"><call pos:start="25:9" pos:end="25:102"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:102">(<argument pos:start="25:16" pos:end="25:25"><expr pos:start="25:16" pos:end="25:25"><name pos:start="25:16" pos:end="25:25"><name pos:start="25:16" pos:end="25:18">afq</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:25">avctx</name></name></expr></argument>, <argument pos:start="25:28" pos:end="25:41"><expr pos:start="25:28" pos:end="25:41"><name pos:start="25:28" pos:end="25:41">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="25:44" pos:end="25:89"><expr pos:start="25:44" pos:end="25:89"><literal type="string" pos:start="25:44" pos:end="25:89">"Trying to remove %d samples, but que empty\n"</literal></expr></argument>, <argument pos:start="25:92" pos:end="25:101"><expr pos:start="25:92" pos:end="25:101"><name pos:start="25:92" pos:end="25:101">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="29:60"><if pos:start="27:5" pos:end="29:60">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">pts</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:60"><block_content pos:start="29:9" pos:end="29:60">

        <expr_stmt pos:start="29:9" pos:end="29:60"><expr pos:start="29:9" pos:end="29:59"><operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:12">pts</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:59"><name pos:start="29:16" pos:end="29:38">ff_samples_to_time_base</name><argument_list pos:start="29:39" pos:end="29:59">(<argument pos:start="29:40" pos:end="29:49"><expr pos:start="29:40" pos:end="29:49"><name pos:start="29:40" pos:end="29:49"><name pos:start="29:40" pos:end="29:42">afq</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:49">avctx</name></name></expr></argument>, <argument pos:start="29:52" pos:end="29:58"><expr pos:start="29:52" pos:end="29:58"><name pos:start="29:52" pos:end="29:58">out_pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="33:5" pos:end="47:5">for<control pos:start="33:8" pos:end="33:51">(<init pos:start="33:9" pos:end="33:12"><expr pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:9">i</name><operator pos:start="33:10" pos:end="33:10">=</operator><literal type="number" pos:start="33:11" pos:end="33:11">0</literal></expr>;</init> <condition pos:start="33:14" pos:end="33:46"><expr pos:start="33:14" pos:end="33:45"><name pos:start="33:14" pos:end="33:23">nb_samples</name> <operator pos:start="33:25" pos:end="33:26">&amp;&amp;</operator> <name pos:start="33:28" pos:end="33:28">i</name><operator pos:start="33:29" pos:end="33:29">&lt;</operator><name pos:start="33:30" pos:end="33:45"><name pos:start="33:30" pos:end="33:32">afq</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:45">frame_count</name></name></expr>;</condition> <incr pos:start="33:48" pos:end="33:50"><expr pos:start="33:48" pos:end="33:50"><name pos:start="33:48" pos:end="33:48">i</name><operator pos:start="33:49" pos:end="33:50">++</operator></expr></incr>)</control><block pos:start="33:52" pos:end="47:5">{<block_content pos:start="35:9" pos:end="45:41">

        <decl_stmt pos:start="35:9" pos:end="35:58"><decl pos:start="35:9" pos:end="35:57"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:13">n</name><init pos:start="35:14" pos:end="35:57">= <expr pos:start="35:16" pos:end="35:57"><call pos:start="35:16" pos:end="35:57"><name pos:start="35:16" pos:end="35:20">FFMIN</name><argument_list pos:start="35:21" pos:end="35:57">(<argument pos:start="35:22" pos:end="35:44"><expr pos:start="35:22" pos:end="35:44"><name pos:start="35:22" pos:end="35:35"><name pos:start="35:22" pos:end="35:24">afq</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:32">frames</name><index pos:start="35:33" pos:end="35:35">[<expr pos:start="35:34" pos:end="35:34"><name pos:start="35:34" pos:end="35:34">i</name></expr>]</index></name><operator pos:start="35:36" pos:end="35:36">.</operator><name pos:start="35:37" pos:end="35:44">duration</name></expr></argument>, <argument pos:start="35:47" pos:end="35:56"><expr pos:start="35:47" pos:end="35:56"><name pos:start="35:47" pos:end="35:56">nb_samples</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:37"><expr pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:11">afq</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:19">frames</name><index pos:start="37:20" pos:end="37:22">[<expr pos:start="37:21" pos:end="37:21"><name pos:start="37:21" pos:end="37:21">i</name></expr>]</index></name><operator pos:start="37:23" pos:end="37:23">.</operator><name pos:start="37:24" pos:end="37:31">duration</name> <operator pos:start="37:33" pos:end="37:34">-=</operator> <name pos:start="37:36" pos:end="37:36">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:37"><expr pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:18">nb_samples</name>              <operator pos:start="39:33" pos:end="39:34">-=</operator> <name pos:start="39:36" pos:end="39:36">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:37"><expr pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:23">removed_samples</name>         <operator pos:start="41:33" pos:end="41:34">+=</operator> <name pos:start="41:36" pos:end="41:36">n</name></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:41"><if pos:start="43:9" pos:end="45:41">if<condition pos:start="43:11" pos:end="43:48">(<expr pos:start="43:12" pos:end="43:47"><name pos:start="43:12" pos:end="43:25"><name pos:start="43:12" pos:end="43:14">afq</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:22">frames</name><index pos:start="43:23" pos:end="43:25">[<expr pos:start="43:24" pos:end="43:24"><name pos:start="43:24" pos:end="43:24">i</name></expr>]</index></name><operator pos:start="43:26" pos:end="43:26">.</operator><name pos:start="43:27" pos:end="43:29">pts</name> <operator pos:start="43:31" pos:end="43:32">!=</operator> <name pos:start="43:34" pos:end="43:47">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:41"><block_content pos:start="45:13" pos:end="45:41">

            <expr_stmt pos:start="45:13" pos:end="45:41"><expr pos:start="45:13" pos:end="45:40"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:15">afq</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:23">frames</name><index pos:start="45:24" pos:end="45:26">[<expr pos:start="45:25" pos:end="45:25"><name pos:start="45:25" pos:end="45:25">i</name></expr>]</index></name><operator pos:start="45:27" pos:end="45:27">.</operator><name pos:start="45:28" pos:end="45:30">pts</name>      <operator pos:start="45:37" pos:end="45:38">+=</operator> <name pos:start="45:40" pos:end="45:40">n</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="49:5" pos:end="49:40"><expr pos:start="49:5" pos:end="49:39"><name pos:start="49:5" pos:end="49:5">i</name> <operator pos:start="49:7" pos:end="49:8">-=</operator> <name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:13">&amp;&amp;</operator> <name pos:start="49:15" pos:end="49:30"><name pos:start="49:15" pos:end="49:17">afq</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:25">frames</name><index pos:start="49:26" pos:end="49:30">[<expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:27">i</name><operator pos:start="49:28" pos:end="49:28">-</operator><literal type="number" pos:start="49:29" pos:end="49:29">1</literal></expr>]</index></name><operator pos:start="49:31" pos:end="49:31">.</operator><name pos:start="49:32" pos:end="49:39">duration</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:89"><expr pos:start="51:5" pos:end="51:88"><call pos:start="51:5" pos:end="51:88"><name pos:start="51:5" pos:end="51:11">memmove</name><argument_list pos:start="51:12" pos:end="51:88">(<argument pos:start="51:13" pos:end="51:23"><expr pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:15">afq</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:23">frames</name></name></expr></argument>, <argument pos:start="51:26" pos:end="51:40"><expr pos:start="51:26" pos:end="51:40"><name pos:start="51:26" pos:end="51:36"><name pos:start="51:26" pos:end="51:28">afq</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:36">frames</name></name> <operator pos:start="51:38" pos:end="51:38">+</operator> <name pos:start="51:40" pos:end="51:40">i</name></expr></argument>, <argument pos:start="51:43" pos:end="51:87"><expr pos:start="51:43" pos:end="51:87"><sizeof pos:start="51:43" pos:end="51:62">sizeof<argument_list pos:start="51:49" pos:end="51:62">(<argument pos:start="51:50" pos:end="51:61"><expr pos:start="51:50" pos:end="51:61"><operator pos:start="51:50" pos:end="51:50">*</operator><name pos:start="51:51" pos:end="51:61"><name pos:start="51:51" pos:end="51:53">afq</name><operator pos:start="51:54" pos:end="51:55">-&gt;</operator><name pos:start="51:56" pos:end="51:61">frames</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="51:64" pos:end="51:64">*</operator> <operator pos:start="51:66" pos:end="51:66">(</operator><name pos:start="51:67" pos:end="51:82"><name pos:start="51:67" pos:end="51:69">afq</name><operator pos:start="51:70" pos:end="51:71">-&gt;</operator><name pos:start="51:72" pos:end="51:82">frame_count</name></name> <operator pos:start="51:84" pos:end="51:84">-</operator> <name pos:start="51:86" pos:end="51:86">i</name><operator pos:start="51:87" pos:end="51:87">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:26"><expr pos:start="53:5" pos:end="53:25"><name pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:7">afq</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:20">frame_count</name></name> <operator pos:start="53:22" pos:end="53:23">-=</operator> <name pos:start="53:25" pos:end="53:25">i</name></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="67:5"><if pos:start="57:5" pos:end="67:5">if<condition pos:start="57:7" pos:end="57:18">(<expr pos:start="57:8" pos:end="57:17"><name pos:start="57:8" pos:end="57:17">nb_samples</name></expr>)</condition><block pos:start="57:19" pos:end="67:5">{<block_content pos:start="59:9" pos:end="65:111">

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><call pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:18">av_assert0</name><argument_list pos:start="59:19" pos:end="59:37">(<argument pos:start="59:20" pos:end="59:36"><expr pos:start="59:20" pos:end="59:36"><operator pos:start="59:20" pos:end="59:20">!</operator><name pos:start="59:21" pos:end="59:36"><name pos:start="59:21" pos:end="59:23">afq</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:36">frame_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="63:45"><if pos:start="61:9" pos:end="63:45">if<condition pos:start="61:11" pos:end="61:48">(<expr pos:start="61:12" pos:end="61:47"><name pos:start="61:12" pos:end="61:25"><name pos:start="61:12" pos:end="61:14">afq</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:22">frames</name><index pos:start="61:23" pos:end="61:25">[<expr pos:start="61:24" pos:end="61:24"><literal type="number" pos:start="61:24" pos:end="61:24">0</literal></expr>]</index></name><operator pos:start="61:26" pos:end="61:26">.</operator><name pos:start="61:27" pos:end="61:29">pts</name> <operator pos:start="61:31" pos:end="61:32">!=</operator> <name pos:start="61:34" pos:end="61:47">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:45"><block_content pos:start="63:13" pos:end="63:45">

            <expr_stmt pos:start="63:13" pos:end="63:45"><expr pos:start="63:13" pos:end="63:44"><name pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:15">afq</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:23">frames</name><index pos:start="63:24" pos:end="63:26">[<expr pos:start="63:25" pos:end="63:25"><literal type="number" pos:start="63:25" pos:end="63:25">0</literal></expr>]</index></name><operator pos:start="63:27" pos:end="63:27">.</operator><name pos:start="63:28" pos:end="63:30">pts</name> <operator pos:start="63:32" pos:end="63:33">+=</operator> <name pos:start="63:35" pos:end="63:44">nb_samples</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:111"><expr pos:start="65:9" pos:end="65:110"><call pos:start="65:9" pos:end="65:110"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:110">(<argument pos:start="65:16" pos:end="65:25"><expr pos:start="65:16" pos:end="65:25"><name pos:start="65:16" pos:end="65:25"><name pos:start="65:16" pos:end="65:18">afq</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:25">avctx</name></name></expr></argument>, <argument pos:start="65:28" pos:end="65:39"><expr pos:start="65:28" pos:end="65:39"><name pos:start="65:28" pos:end="65:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="65:42" pos:end="65:97"><expr pos:start="65:42" pos:end="65:97"><literal type="string" pos:start="65:42" pos:end="65:97">"Trying to remove %d more samples than are in the que\n"</literal></expr></argument>, <argument pos:start="65:100" pos:end="65:109"><expr pos:start="65:100" pos:end="65:109"><name pos:start="65:100" pos:end="65:109">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="71:73"><if pos:start="69:5" pos:end="71:73">if <condition pos:start="69:8" pos:end="69:17">(<expr pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:16">duration</name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:73"><block_content pos:start="71:9" pos:end="71:73">

        <expr_stmt pos:start="71:9" pos:end="71:73"><expr pos:start="71:9" pos:end="71:72"><operator pos:start="71:9" pos:end="71:9">*</operator><name pos:start="71:10" pos:end="71:17">duration</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <call pos:start="71:21" pos:end="71:72"><name pos:start="71:21" pos:end="71:43">ff_samples_to_time_base</name><argument_list pos:start="71:44" pos:end="71:72">(<argument pos:start="71:45" pos:end="71:54"><expr pos:start="71:45" pos:end="71:54"><name pos:start="71:45" pos:end="71:54"><name pos:start="71:45" pos:end="71:47">afq</name><operator pos:start="71:48" pos:end="71:49">-&gt;</operator><name pos:start="71:50" pos:end="71:54">avctx</name></name></expr></argument>, <argument pos:start="71:57" pos:end="71:71"><expr pos:start="71:57" pos:end="71:71"><name pos:start="71:57" pos:end="71:71">removed_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
