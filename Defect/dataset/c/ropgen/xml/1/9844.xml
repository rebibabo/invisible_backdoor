<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9844.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">raven_realize</name><parameter_list pos:start="1:26" pos:end="1:53">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:35">PCIDevice</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">d</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:45">Error</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier><modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:5">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">RavenPCIState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:42">= <expr pos:start="5:24" pos:end="5:42"><call pos:start="5:24" pos:end="5:42"><name pos:start="5:24" pos:end="5:39">RAVEN_PCI_DEVICE</name><argument_list pos:start="5:40" pos:end="5:42">(<argument pos:start="5:41" pos:end="5:41"><expr pos:start="5:41" pos:end="5:41"><name pos:start="5:41" pos:end="5:41">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:18">filename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">bios_size</name> <init pos:start="9:19" pos:end="9:22">= <expr pos:start="9:21" pos:end="9:22"><operator pos:start="9:21" pos:end="9:21">-</operator><literal type="number" pos:start="9:22" pos:end="9:22">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:5">d</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:13">config</name><index pos:start="13:14" pos:end="13:19">[<expr pos:start="13:15" pos:end="13:18"><literal type="number" pos:start="13:15" pos:end="13:18">0x0C</literal></expr>]</index></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <literal type="number" pos:start="13:23" pos:end="13:26">0x08</literal></expr>;</expr_stmt> <comment type="line" pos:start="13:29" pos:end="13:46">// cache_line_size</comment>

    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:5">d</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:13">config</name><index pos:start="15:14" pos:end="15:19">[<expr pos:start="15:15" pos:end="15:18"><literal type="number" pos:start="15:15" pos:end="15:18">0x0D</literal></expr>]</index></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <literal type="number" pos:start="15:23" pos:end="15:26">0x10</literal></expr>;</expr_stmt> <comment type="line" pos:start="15:29" pos:end="15:44">// latency_timer</comment>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:5">d</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:13">config</name><index pos:start="17:14" pos:end="17:19">[<expr pos:start="17:15" pos:end="17:18"><literal type="number" pos:start="17:15" pos:end="17:18">0x34</literal></expr>]</index></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <literal type="number" pos:start="17:23" pos:end="17:26">0x00</literal></expr>;</expr_stmt> <comment type="line" pos:start="17:29" pos:end="17:51">// capabilities_pointer</comment>



    <expr_stmt pos:start="21:5" pos:end="23:41"><expr pos:start="21:5" pos:end="23:40"><call pos:start="21:5" pos:end="23:40"><name pos:start="21:5" pos:end="21:26">memory_region_init_ram</name><argument_list pos:start="21:27" pos:end="23:40">(<argument pos:start="21:28" pos:end="21:35"><expr pos:start="21:28" pos:end="21:35"><operator pos:start="21:28" pos:end="21:28">&amp;</operator><name pos:start="21:29" pos:end="21:35"><name pos:start="21:29" pos:end="21:29">s</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:35">bios</name></name></expr></argument>, <argument pos:start="21:38" pos:end="21:46"><expr pos:start="21:38" pos:end="21:46"><call pos:start="21:38" pos:end="21:46"><name pos:start="21:38" pos:end="21:43">OBJECT</name><argument_list pos:start="21:44" pos:end="21:46">(<argument pos:start="21:45" pos:end="21:45"><expr pos:start="21:45" pos:end="21:45"><name pos:start="21:45" pos:end="21:45">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:49" pos:end="21:54"><expr pos:start="21:49" pos:end="21:54"><literal type="string" pos:start="21:49" pos:end="21:54">"bios"</literal></expr></argument>, <argument pos:start="21:57" pos:end="21:65"><expr pos:start="21:57" pos:end="21:65"><name pos:start="21:57" pos:end="21:65">BIOS_SIZE</name></expr></argument>,

                           <argument pos:start="23:28" pos:end="23:39"><expr pos:start="23:28" pos:end="23:39"><operator pos:start="23:28" pos:end="23:28">&amp;</operator><name pos:start="23:29" pos:end="23:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><call pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:30">memory_region_set_readonly</name><argument_list pos:start="25:31" pos:end="25:46">(<argument pos:start="25:32" pos:end="25:39"><expr pos:start="25:32" pos:end="25:39"><operator pos:start="25:32" pos:end="25:32">&amp;</operator><name pos:start="25:33" pos:end="25:39"><name pos:start="25:33" pos:end="25:33">s</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:39">bios</name></name></expr></argument>, <argument pos:start="25:42" pos:end="25:45"><expr pos:start="25:42" pos:end="25:45"><name pos:start="25:42" pos:end="25:45">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="29:42"><expr pos:start="27:5" pos:end="29:41"><call pos:start="27:5" pos:end="29:41"><name pos:start="27:5" pos:end="27:31">memory_region_add_subregion</name><argument_list pos:start="27:32" pos:end="29:41">(<argument pos:start="27:33" pos:end="27:51"><expr pos:start="27:33" pos:end="27:51"><call pos:start="27:33" pos:end="27:51"><name pos:start="27:33" pos:end="27:49">get_system_memory</name><argument_list pos:start="27:50" pos:end="27:51">()</argument_list></call></expr></argument>, <argument pos:start="27:54" pos:end="27:75"><expr pos:start="27:54" pos:end="27:75"><operator pos:start="27:54" pos:end="27:54">(</operator><name pos:start="27:55" pos:end="27:62">uint32_t</name><operator pos:start="27:63" pos:end="27:63">)</operator><operator pos:start="27:64" pos:end="27:64">(</operator><operator pos:start="27:65" pos:end="27:65">-</operator><name pos:start="27:66" pos:end="27:74">BIOS_SIZE</name><operator pos:start="27:75" pos:end="27:75">)</operator></expr></argument>,

                                <argument pos:start="29:33" pos:end="29:40"><expr pos:start="29:33" pos:end="29:40"><operator pos:start="29:33" pos:end="29:33">&amp;</operator><name pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:34">s</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:40">bios</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><call pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:31">vmstate_register_ram_global</name><argument_list pos:start="31:32" pos:end="31:41">(<argument pos:start="31:33" pos:end="31:40"><expr pos:start="31:33" pos:end="31:40"><operator pos:start="31:33" pos:end="31:33">&amp;</operator><name pos:start="31:34" pos:end="31:40"><name pos:start="31:34" pos:end="31:34">s</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:40">bios</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="77:5"><if pos:start="33:5" pos:end="77:5">if <condition pos:start="33:8" pos:end="33:21">(<expr pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:20">bios_name</name></name></expr>)</condition> <block pos:start="33:23" pos:end="77:5">{<block_content pos:start="35:9" pos:end="75:25">

        <expr_stmt pos:start="35:9" pos:end="35:69"><expr pos:start="35:9" pos:end="35:68"><name pos:start="35:9" pos:end="35:16">filename</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:68"><name pos:start="35:20" pos:end="35:33">qemu_find_file</name><argument_list pos:start="35:34" pos:end="35:68">(<argument pos:start="35:35" pos:end="35:53"><expr pos:start="35:35" pos:end="35:53"><name pos:start="35:35" pos:end="35:53">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="35:56" pos:end="35:67"><expr pos:start="35:56" pos:end="35:67"><name pos:start="35:56" pos:end="35:67"><name pos:start="35:56" pos:end="35:56">s</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:67">bios_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="67:9"><if pos:start="37:9" pos:end="67:9">if <condition pos:start="37:12" pos:end="37:21">(<expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:20">filename</name></expr>)</condition> <block pos:start="37:23" pos:end="67:9">{<block_content pos:start="39:13" pos:end="65:13">

            <if_stmt pos:start="39:13" pos:end="45:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:42">(<expr pos:start="39:17" pos:end="39:41"><name pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:30">elf_machine</name></name> <operator pos:start="39:32" pos:end="39:33">!=</operator> <name pos:start="39:35" pos:end="39:41">EM_NONE</name></expr>)</condition> <block pos:start="39:44" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:71">

                <expr_stmt pos:start="41:17" pos:end="43:71"><expr pos:start="41:17" pos:end="43:70"><name pos:start="41:17" pos:end="41:25">bios_size</name> <operator pos:start="41:27" pos:end="41:27">=</operator> <call pos:start="41:29" pos:end="43:70"><name pos:start="41:29" pos:end="41:36">load_elf</name><argument_list pos:start="41:37" pos:end="43:70">(<argument pos:start="41:38" pos:end="41:45"><expr pos:start="41:38" pos:end="41:45"><name pos:start="41:38" pos:end="41:45">filename</name></expr></argument>, <argument pos:start="41:48" pos:end="41:51"><expr pos:start="41:48" pos:end="41:51"><name pos:start="41:48" pos:end="41:51">NULL</name></expr></argument>, <argument pos:start="41:54" pos:end="41:57"><expr pos:start="41:54" pos:end="41:57"><name pos:start="41:54" pos:end="41:57">NULL</name></expr></argument>, <argument pos:start="41:60" pos:end="41:63"><expr pos:start="41:60" pos:end="41:63"><name pos:start="41:60" pos:end="41:63">NULL</name></expr></argument>,

                                     <argument pos:start="43:38" pos:end="43:41"><expr pos:start="43:38" pos:end="43:41"><name pos:start="43:38" pos:end="43:41">NULL</name></expr></argument>, <argument pos:start="43:44" pos:end="43:47"><expr pos:start="43:44" pos:end="43:47"><name pos:start="43:44" pos:end="43:47">NULL</name></expr></argument>, <argument pos:start="43:50" pos:end="43:50"><expr pos:start="43:50" pos:end="43:50"><literal type="number" pos:start="43:50" pos:end="43:50">1</literal></expr></argument>, <argument pos:start="43:53" pos:end="43:66"><expr pos:start="43:53" pos:end="43:66"><name pos:start="43:53" pos:end="43:66"><name pos:start="43:53" pos:end="43:53">s</name><operator pos:start="43:54" pos:end="43:55">-&gt;</operator><name pos:start="43:56" pos:end="43:66">elf_machine</name></name></expr></argument>, <argument pos:start="43:69" pos:end="43:69"><expr pos:start="43:69" pos:end="43:69"><literal type="number" pos:start="43:69" pos:end="43:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="47:13" pos:end="65:13"><if pos:start="47:13" pos:end="65:13">if <condition pos:start="47:16" pos:end="47:30">(<expr pos:start="47:17" pos:end="47:29"><name pos:start="47:17" pos:end="47:25">bios_size</name> <operator pos:start="47:27" pos:end="47:27">&lt;</operator> <literal type="number" pos:start="47:29" pos:end="47:29">0</literal></expr>)</condition> <block pos:start="47:32" pos:end="65:13">{<block_content pos:start="49:17" pos:end="63:17">

                <expr_stmt pos:start="49:17" pos:end="49:53"><expr pos:start="49:17" pos:end="49:52"><name pos:start="49:17" pos:end="49:25">bios_size</name> <operator pos:start="49:27" pos:end="49:27">=</operator> <call pos:start="49:29" pos:end="49:52"><name pos:start="49:29" pos:end="49:42">get_image_size</name><argument_list pos:start="49:43" pos:end="49:52">(<argument pos:start="49:44" pos:end="49:51"><expr pos:start="49:44" pos:end="49:51"><name pos:start="49:44" pos:end="49:51">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="51:17" pos:end="63:17"><if pos:start="51:17" pos:end="63:17">if <condition pos:start="51:20" pos:end="51:60">(<expr pos:start="51:21" pos:end="51:59"><name pos:start="51:21" pos:end="51:29">bios_size</name> <operator pos:start="51:31" pos:end="51:31">&gt;</operator> <literal type="number" pos:start="51:33" pos:end="51:33">0</literal> <operator pos:start="51:35" pos:end="51:36">&amp;&amp;</operator> <name pos:start="51:38" pos:end="51:46">bios_size</name> <operator pos:start="51:48" pos:end="51:49">&lt;=</operator> <name pos:start="51:51" pos:end="51:59">BIOS_SIZE</name></expr>)</condition> <block pos:start="51:62" pos:end="63:17">{<block_content pos:start="53:21" pos:end="61:63">

                    <decl_stmt pos:start="53:21" pos:end="53:37"><decl pos:start="53:21" pos:end="53:36"><type pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:26">hwaddr</name></type> <name pos:start="53:28" pos:end="53:36">bios_addr</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:61"><expr pos:start="55:21" pos:end="55:60"><name pos:start="55:21" pos:end="55:29">bios_size</name> <operator pos:start="55:31" pos:end="55:31">=</operator> <operator pos:start="55:33" pos:end="55:33">(</operator><name pos:start="55:34" pos:end="55:42">bios_size</name> <operator pos:start="55:44" pos:end="55:44">+</operator> <literal type="number" pos:start="55:46" pos:end="55:50">0xfff</literal><operator pos:start="55:51" pos:end="55:51">)</operator> <operator pos:start="55:53" pos:end="55:53">&amp;</operator> <operator pos:start="55:55" pos:end="55:55">~</operator><literal type="number" pos:start="55:56" pos:end="55:60">0xfff</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:55"><expr pos:start="57:21" pos:end="57:54"><name pos:start="57:21" pos:end="57:29">bios_addr</name> <operator pos:start="57:31" pos:end="57:31">=</operator> <operator pos:start="57:33" pos:end="57:33">(</operator><name pos:start="57:34" pos:end="57:41">uint32_t</name><operator pos:start="57:42" pos:end="57:42">)</operator><operator pos:start="57:43" pos:end="57:43">(</operator><operator pos:start="57:44" pos:end="57:44">-</operator><name pos:start="57:45" pos:end="57:53">BIOS_SIZE</name><operator pos:start="57:54" pos:end="57:54">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="61:63"><expr pos:start="59:21" pos:end="61:62"><name pos:start="59:21" pos:end="59:29">bios_size</name> <operator pos:start="59:31" pos:end="59:31">=</operator> <call pos:start="59:33" pos:end="61:62"><name pos:start="59:33" pos:end="59:51">load_image_targphys</name><argument_list pos:start="59:52" pos:end="61:62">(<argument pos:start="59:53" pos:end="59:60"><expr pos:start="59:53" pos:end="59:60"><name pos:start="59:53" pos:end="59:60">filename</name></expr></argument>, <argument pos:start="59:63" pos:end="59:71"><expr pos:start="59:63" pos:end="59:71"><name pos:start="59:63" pos:end="59:71">bios_addr</name></expr></argument>,

                                                    <argument pos:start="61:53" pos:end="61:61"><expr pos:start="61:53" pos:end="61:61"><name pos:start="61:53" pos:end="61:61">bios_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:51">(<expr pos:start="69:13" pos:end="69:50"><name pos:start="69:13" pos:end="69:40"><name pos:start="69:13" pos:end="69:21">bios_size</name> <argument_list type="generic" pos:start="69:23" pos:end="69:40">&lt; <argument pos:start="69:25" pos:end="69:38"><expr pos:start="69:25" pos:end="69:38"><literal type="number" pos:start="69:25" pos:end="69:25">0</literal> <operator pos:start="69:27" pos:end="69:28">||</operator> <name pos:start="69:30" pos:end="69:38">bios_size</name></expr></argument> &gt;</argument_list></name> <name pos:start="69:42" pos:end="69:50">BIOS_SIZE</name></expr>)</condition> <block pos:start="69:53" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:77">

            <expr_stmt pos:start="71:13" pos:end="71:77"><expr pos:start="71:13" pos:end="71:76"><call pos:start="71:13" pos:end="71:76"><name pos:start="71:13" pos:end="71:20">hw_error</name><argument_list pos:start="71:21" pos:end="71:76">(<argument pos:start="71:22" pos:end="71:61"><expr pos:start="71:22" pos:end="71:61"><literal type="string" pos:start="71:22" pos:end="71:61">"qemu: could not load bios image '%s'\n"</literal></expr></argument>, <argument pos:start="71:64" pos:end="71:75"><expr pos:start="71:64" pos:end="71:75"><name pos:start="71:64" pos:end="71:75"><name pos:start="71:64" pos:end="71:64">s</name><operator pos:start="71:65" pos:end="71:66">-&gt;</operator><name pos:start="71:67" pos:end="71:75">bios_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:25"><expr pos:start="75:9" pos:end="75:24"><call pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:14">g_free</name><argument_list pos:start="75:15" pos:end="75:24">(<argument pos:start="75:16" pos:end="75:23"><expr pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
