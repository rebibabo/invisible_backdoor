<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16287.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">host_net_remove_completion</name><parameter_list pos:start="1:32" pos:end="1:80">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:45">ReadLineState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">rs</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:62"><decl pos:start="1:52" pos:end="1:62"><type pos:start="1:52" pos:end="1:62"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:62">nb_args</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:79"><specifier pos:start="1:65" pos:end="1:69">const</specifier> <name pos:start="1:71" pos:end="1:74">char</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:79">str</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">NetClientState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:38"><name pos:start="5:21" pos:end="5:23">ncs</name><index pos:start="5:24" pos:end="5:38">[<expr pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:37">MAX_QUEUE_NUM</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">count</name></decl>, <decl pos:start="7:16" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:16">i</name></decl>, <decl pos:start="7:19" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:21">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:7">len</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:21"><name pos:start="11:11" pos:end="11:16">strlen</name><argument_list pos:start="11:17" pos:end="11:21">(<argument pos:start="11:18" pos:end="11:20"><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:20">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><call pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:33">readline_set_completion_index</name><argument_list pos:start="13:34" pos:end="13:42">(<argument pos:start="13:35" pos:end="13:36"><expr pos:start="13:35" pos:end="13:36"><name pos:start="13:35" pos:end="13:36">rs</name></expr></argument>, <argument pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="85:5"><if pos:start="15:5" pos:end="49:5">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:15">nb_args</name> <operator pos:start="15:17" pos:end="15:18">==</operator> <literal type="number" pos:start="15:20" pos:end="15:20">2</literal></expr>)</condition> <block pos:start="15:23" pos:end="49:5">{<block_content pos:start="17:9" pos:end="47:15">

        <expr_stmt pos:start="17:9" pos:end="21:60"><expr pos:start="17:9" pos:end="21:59"><name pos:start="17:9" pos:end="17:13">count</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="21:59"><name pos:start="17:17" pos:end="17:44">qemu_find_net_clients_except</name><argument_list pos:start="17:45" pos:end="21:59">(<argument pos:start="17:46" pos:end="17:49"><expr pos:start="17:46" pos:end="17:49"><name pos:start="17:46" pos:end="17:49">NULL</name></expr></argument>, <argument pos:start="17:52" pos:end="17:54"><expr pos:start="17:52" pos:end="17:54"><name pos:start="17:52" pos:end="17:54">ncs</name></expr></argument>,

                                             <argument pos:start="19:46" pos:end="19:73"><expr pos:start="19:46" pos:end="19:73"><name pos:start="19:46" pos:end="19:73">NET_CLIENT_OPTIONS_KIND_NONE</name></expr></argument>,

                                             <argument pos:start="21:46" pos:end="21:58"><expr pos:start="21:46" pos:end="21:58"><name pos:start="21:46" pos:end="21:58">MAX_QUEUE_NUM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="23:9" pos:end="45:9">for <control pos:start="23:13" pos:end="23:35">(<init pos:start="23:14" pos:end="23:19"><expr pos:start="23:14" pos:end="23:18"><name pos:start="23:14" pos:end="23:14">i</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</init> <condition pos:start="23:21" pos:end="23:30"><expr pos:start="23:21" pos:end="23:29"><name pos:start="23:21" pos:end="23:21">i</name> <operator pos:start="23:23" pos:end="23:23">&lt;</operator> <name pos:start="23:25" pos:end="23:29">count</name></expr>;</condition> <incr pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><name pos:start="23:32" pos:end="23:32">i</name><operator pos:start="23:33" pos:end="23:34">++</operator></expr></incr>)</control> <block pos:start="23:37" pos:end="45:9">{<block_content pos:start="25:13" pos:end="43:13">

            <decl_stmt pos:start="25:13" pos:end="25:19"><decl pos:start="25:13" pos:end="25:18"><type pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">int</name></type> <name pos:start="25:17" pos:end="25:18">id</name></decl>;</decl_stmt>

            <decl_stmt pos:start="27:13" pos:end="27:26"><decl pos:start="27:13" pos:end="27:25"><type pos:start="27:13" pos:end="27:16"><name pos:start="27:13" pos:end="27:16">char</name></type> <name pos:start="27:18" pos:end="27:25"><name pos:start="27:18" pos:end="27:21">name</name><index pos:start="27:22" pos:end="27:25">[<expr pos:start="27:23" pos:end="27:24"><literal type="number" pos:start="27:23" pos:end="27:24">16</literal></expr>]</index></name></decl>;</decl_stmt>



            <if_stmt pos:start="31:13" pos:end="35:13"><if pos:start="31:13" pos:end="35:13">if <condition pos:start="31:16" pos:end="31:51">(<expr pos:start="31:17" pos:end="31:50"><call pos:start="31:17" pos:end="31:50"><name pos:start="31:17" pos:end="31:37">net_hub_id_for_client</name><argument_list pos:start="31:38" pos:end="31:50">(<argument pos:start="31:39" pos:end="31:44"><expr pos:start="31:39" pos:end="31:44"><name pos:start="31:39" pos:end="31:44"><name pos:start="31:39" pos:end="31:41">ncs</name><index pos:start="31:42" pos:end="31:44">[<expr pos:start="31:43" pos:end="31:43"><name pos:start="31:43" pos:end="31:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:47" pos:end="31:49"><expr pos:start="31:47" pos:end="31:49"><operator pos:start="31:47" pos:end="31:47">&amp;</operator><name pos:start="31:48" pos:end="31:49">id</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:53" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:25">

                <continue pos:start="33:17" pos:end="33:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:51"><expr pos:start="37:13" pos:end="37:50"><call pos:start="37:13" pos:end="37:50"><name pos:start="37:13" pos:end="37:20">snprintf</name><argument_list pos:start="37:21" pos:end="37:50">(<argument pos:start="37:22" pos:end="37:25"><expr pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:25">name</name></expr></argument>, <argument pos:start="37:28" pos:end="37:39"><expr pos:start="37:28" pos:end="37:39"><sizeof pos:start="37:28" pos:end="37:39">sizeof<argument_list pos:start="37:34" pos:end="37:39">(<argument pos:start="37:35" pos:end="37:38"><expr pos:start="37:35" pos:end="37:38"><name pos:start="37:35" pos:end="37:38">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="37:42" pos:end="37:45"><expr pos:start="37:42" pos:end="37:45"><literal type="string" pos:start="37:42" pos:end="37:45">"%d"</literal></expr></argument>, <argument pos:start="37:48" pos:end="37:49"><expr pos:start="37:48" pos:end="37:49"><name pos:start="37:48" pos:end="37:49">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="43:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:41">(<expr pos:start="39:17" pos:end="39:40"><operator pos:start="39:17" pos:end="39:17">!</operator><call pos:start="39:18" pos:end="39:40"><name pos:start="39:18" pos:end="39:24">strncmp</name><argument_list pos:start="39:25" pos:end="39:40">(<argument pos:start="39:26" pos:end="39:28"><expr pos:start="39:26" pos:end="39:28"><name pos:start="39:26" pos:end="39:28">str</name></expr></argument>, <argument pos:start="39:31" pos:end="39:34"><expr pos:start="39:31" pos:end="39:34"><name pos:start="39:31" pos:end="39:34">name</name></expr></argument>, <argument pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><name pos:start="39:37" pos:end="39:39">len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:43" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:50">

                <expr_stmt pos:start="41:17" pos:end="41:50"><expr pos:start="41:17" pos:end="41:49"><call pos:start="41:17" pos:end="41:49"><name pos:start="41:17" pos:end="41:39">readline_add_completion</name><argument_list pos:start="41:40" pos:end="41:49">(<argument pos:start="41:41" pos:end="41:42"><expr pos:start="41:41" pos:end="41:42"><name pos:start="41:41" pos:end="41:42">rs</name></expr></argument>, <argument pos:start="41:45" pos:end="41:48"><expr pos:start="41:45" pos:end="41:48"><name pos:start="41:45" pos:end="41:48">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="85:5">else if <condition pos:start="49:15" pos:end="49:28">(<expr pos:start="49:16" pos:end="49:27"><name pos:start="49:16" pos:end="49:22">nb_args</name> <operator pos:start="49:24" pos:end="49:25">==</operator> <literal type="number" pos:start="49:27" pos:end="49:27">3</literal></expr>)</condition> <block pos:start="49:30" pos:end="85:5">{<block_content pos:start="51:9" pos:end="83:15">

        <expr_stmt pos:start="51:9" pos:end="55:60"><expr pos:start="51:9" pos:end="55:59"><name pos:start="51:9" pos:end="51:13">count</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="55:59"><name pos:start="51:17" pos:end="51:44">qemu_find_net_clients_except</name><argument_list pos:start="51:45" pos:end="55:59">(<argument pos:start="51:46" pos:end="51:49"><expr pos:start="51:46" pos:end="51:49"><name pos:start="51:46" pos:end="51:49">NULL</name></expr></argument>, <argument pos:start="51:52" pos:end="51:54"><expr pos:start="51:52" pos:end="51:54"><name pos:start="51:52" pos:end="51:54">ncs</name></expr></argument>,

                                             <argument pos:start="53:46" pos:end="53:72"><expr pos:start="53:46" pos:end="53:72"><name pos:start="53:46" pos:end="53:72">NET_CLIENT_OPTIONS_KIND_NIC</name></expr></argument>,

                                             <argument pos:start="55:46" pos:end="55:58"><expr pos:start="55:46" pos:end="55:58"><name pos:start="55:46" pos:end="55:58">MAX_QUEUE_NUM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="57:9" pos:end="81:9">for <control pos:start="57:13" pos:end="57:35">(<init pos:start="57:14" pos:end="57:19"><expr pos:start="57:14" pos:end="57:18"><name pos:start="57:14" pos:end="57:14">i</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>;</init> <condition pos:start="57:21" pos:end="57:30"><expr pos:start="57:21" pos:end="57:29"><name pos:start="57:21" pos:end="57:21">i</name> <operator pos:start="57:23" pos:end="57:23">&lt;</operator> <name pos:start="57:25" pos:end="57:29">count</name></expr>;</condition> <incr pos:start="57:32" pos:end="57:34"><expr pos:start="57:32" pos:end="57:34"><name pos:start="57:32" pos:end="57:32">i</name><operator pos:start="57:33" pos:end="57:34">++</operator></expr></incr>)</control> <block pos:start="57:37" pos:end="81:9">{<block_content pos:start="59:13" pos:end="79:13">

            <decl_stmt pos:start="59:13" pos:end="59:19"><decl pos:start="59:13" pos:end="59:18"><type pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">int</name></type> <name pos:start="59:17" pos:end="59:18">id</name></decl>;</decl_stmt>

            <decl_stmt pos:start="61:13" pos:end="61:29"><decl pos:start="61:13" pos:end="61:28"><type pos:start="61:13" pos:end="61:24"><specifier pos:start="61:13" pos:end="61:17">const</specifier> <name pos:start="61:19" pos:end="61:22">char</name> <modifier pos:start="61:24" pos:end="61:24">*</modifier></type><name pos:start="61:25" pos:end="61:28">name</name></decl>;</decl_stmt>



            <if_stmt pos:start="65:13" pos:end="71:13"><if pos:start="65:13" pos:end="71:13">if <condition pos:start="65:16" pos:end="67:51">(<expr pos:start="65:17" pos:end="67:50"><name pos:start="65:17" pos:end="65:22"><name pos:start="65:17" pos:end="65:19">ncs</name><index pos:start="65:20" pos:end="65:22">[<expr pos:start="65:21" pos:end="65:21"><name pos:start="65:21" pos:end="65:21">i</name></expr>]</index></name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:34"><name pos:start="65:25" pos:end="65:28">info</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:34">type</name></name> <operator pos:start="65:36" pos:end="65:37">==</operator> <name pos:start="65:39" pos:end="65:69">NET_CLIENT_OPTIONS_KIND_HUBPORT</name> <operator pos:start="65:71" pos:end="65:72">||</operator>

                <call pos:start="67:17" pos:end="67:50"><name pos:start="67:17" pos:end="67:37">net_hub_id_for_client</name><argument_list pos:start="67:38" pos:end="67:50">(<argument pos:start="67:39" pos:end="67:44"><expr pos:start="67:39" pos:end="67:44"><name pos:start="67:39" pos:end="67:44"><name pos:start="67:39" pos:end="67:41">ncs</name><index pos:start="67:42" pos:end="67:44">[<expr pos:start="67:43" pos:end="67:43"><name pos:start="67:43" pos:end="67:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="67:47" pos:end="67:49"><expr pos:start="67:47" pos:end="67:49"><operator pos:start="67:47" pos:end="67:47">&amp;</operator><name pos:start="67:48" pos:end="67:49">id</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:53" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:25">

                <continue pos:start="69:17" pos:end="69:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:32"><expr pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:16">name</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:25"><name pos:start="73:20" pos:end="73:22">ncs</name><index pos:start="73:23" pos:end="73:25">[<expr pos:start="73:24" pos:end="73:24"><name pos:start="73:24" pos:end="73:24">i</name></expr>]</index></name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:31">name</name></expr>;</expr_stmt>

            <if_stmt pos:start="75:13" pos:end="79:13"><if pos:start="75:13" pos:end="79:13">if <condition pos:start="75:16" pos:end="75:41">(<expr pos:start="75:17" pos:end="75:40"><operator pos:start="75:17" pos:end="75:17">!</operator><call pos:start="75:18" pos:end="75:40"><name pos:start="75:18" pos:end="75:24">strncmp</name><argument_list pos:start="75:25" pos:end="75:40">(<argument pos:start="75:26" pos:end="75:28"><expr pos:start="75:26" pos:end="75:28"><name pos:start="75:26" pos:end="75:28">str</name></expr></argument>, <argument pos:start="75:31" pos:end="75:34"><expr pos:start="75:31" pos:end="75:34"><name pos:start="75:31" pos:end="75:34">name</name></expr></argument>, <argument pos:start="75:37" pos:end="75:39"><expr pos:start="75:37" pos:end="75:39"><name pos:start="75:37" pos:end="75:39">len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:43" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:50">

                <expr_stmt pos:start="77:17" pos:end="77:50"><expr pos:start="77:17" pos:end="77:49"><call pos:start="77:17" pos:end="77:49"><name pos:start="77:17" pos:end="77:39">readline_add_completion</name><argument_list pos:start="77:40" pos:end="77:49">(<argument pos:start="77:41" pos:end="77:42"><expr pos:start="77:41" pos:end="77:42"><name pos:start="77:41" pos:end="77:42">rs</name></expr></argument>, <argument pos:start="77:45" pos:end="77:48"><expr pos:start="77:45" pos:end="77:48"><name pos:start="77:45" pos:end="77:48">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <return pos:start="83:9" pos:end="83:15">return;</return>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
