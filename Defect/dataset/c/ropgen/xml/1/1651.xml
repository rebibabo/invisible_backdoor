<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1651.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">ff_rtp_send_aac</name><parameter_list pos:start="1:21" pos:end="1:72">(<parameter pos:start="1:22" pos:end="1:40"><decl pos:start="1:22" pos:end="1:40"><type pos:start="1:22" pos:end="1:40"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">s1</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:61"><decl pos:start="1:43" pos:end="1:61"><type pos:start="1:43" pos:end="1:61"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">buff</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:71"><decl pos:start="1:64" pos:end="1:71"><type pos:start="1:64" pos:end="1:71"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:71">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:5">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">RTPMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:36">= <expr pos:start="5:24" pos:end="5:36"><name pos:start="5:24" pos:end="5:36"><name pos:start="5:24" pos:end="5:25">s1</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:28">max_packet_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:94"><decl pos:start="11:5" pos:end="11:93"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:35">max_frames_per_packet</name> <init pos:start="11:37" pos:end="11:93">= <expr pos:start="11:39" pos:end="11:93"><ternary pos:start="11:39" pos:end="11:93"><condition pos:start="11:39" pos:end="11:64"><expr pos:start="11:39" pos:end="11:62"><name pos:start="11:39" pos:end="11:62"><name pos:start="11:39" pos:end="11:39">s</name><operator pos:start="11:40" pos:end="11:41">-&gt;</operator><name pos:start="11:42" pos:end="11:62">max_frames_per_packet</name></name></expr> ?</condition><then pos:start="11:66" pos:end="11:89"> <expr pos:start="11:66" pos:end="11:89"><name pos:start="11:66" pos:end="11:89"><name pos:start="11:66" pos:end="11:66">s</name><operator pos:start="11:67" pos:end="11:68">-&gt;</operator><name pos:start="11:69" pos:end="11:89">max_frames_per_packet</name></name></expr> </then><else pos:start="11:91" pos:end="11:93">: <expr pos:start="11:93" pos:end="11:93"><literal type="number" pos:start="11:93" pos:end="11:93">5</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:66"><decl pos:start="13:5" pos:end="13:65"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:33">max_au_headers_size</name> <init pos:start="13:35" pos:end="13:65">= <expr pos:start="13:37" pos:end="13:65"><literal type="number" pos:start="13:37" pos:end="13:39">2</literal> <operator pos:start="13:39" pos:end="13:39">+</operator> <literal type="number" pos:start="13:41" pos:end="13:41">2</literal> <operator pos:start="13:43" pos:end="13:43">*</operator> <name pos:start="13:45" pos:end="13:65">max_frames_per_packet</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:38">/* skip ADTS header, if present */</comment>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:53">(<expr pos:start="19:9" pos:end="19:52"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:23"><name pos:start="19:10" pos:end="19:11">s1</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:20">streams</name><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>]</index></name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:46"><name pos:start="19:26" pos:end="19:30">codec</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:46">extradata_size</name></name><operator pos:start="19:47" pos:end="19:47">)</operator> <operator pos:start="19:49" pos:end="19:50">==</operator> <literal type="number" pos:start="19:52" pos:end="19:52">0</literal></expr>)</condition> <block pos:start="19:55" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:18"><expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:12">size</name> <operator pos:start="21:14" pos:end="21:15">-=</operator> <literal type="number" pos:start="21:17" pos:end="21:17">7</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:12">buff</name> <operator pos:start="23:14" pos:end="23:15">+=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">7</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:64"><expr pos:start="27:5" pos:end="27:63"><name pos:start="27:5" pos:end="27:19">max_packet_size</name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:41"><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:41">max_payload_size</name></name> <operator pos:start="27:43" pos:end="27:43">-</operator> <name pos:start="27:45" pos:end="27:63">max_au_headers_size</name></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:41">/* test if the packet must be sent */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:7">len</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <operator pos:start="33:11" pos:end="33:11">(</operator><name pos:start="33:12" pos:end="33:21"><name pos:start="33:12" pos:end="33:12">s</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:21">buf_ptr</name></name> <operator pos:start="33:23" pos:end="33:23">-</operator> <name pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:30">buf</name></name><operator pos:start="33:31" pos:end="33:31">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="63:5"><if pos:start="35:5" pos:end="63:5">if <condition pos:start="35:8" pos:end="35:96">(<expr pos:start="35:9" pos:end="35:95"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:22">num_frames</name></name> <operator pos:start="35:24" pos:end="35:25">==</operator> <name pos:start="35:27" pos:end="35:47">max_frames_per_packet</name><operator pos:start="35:48" pos:end="35:48">)</operator> <operator pos:start="35:50" pos:end="35:51">||</operator> <operator pos:start="35:53" pos:end="35:53">(</operator><name pos:start="35:54" pos:end="35:56">len</name> <operator pos:start="35:58" pos:end="35:59">&amp;&amp;</operator> <operator pos:start="35:61" pos:end="35:61">(</operator><name pos:start="35:62" pos:end="35:64">len</name> <operator pos:start="35:66" pos:end="35:66">+</operator> <name pos:start="35:68" pos:end="35:71">size</name><operator pos:start="35:72" pos:end="35:72">)</operator> <operator pos:start="35:74" pos:end="35:74">&gt;</operator> <name pos:start="35:76" pos:end="35:94"><name pos:start="35:76" pos:end="35:76">s</name><operator pos:start="35:77" pos:end="35:78">-&gt;</operator><name pos:start="35:79" pos:end="35:94">max_payload_size</name></name><operator pos:start="35:95" pos:end="35:95">)</operator></expr>)</condition> <block pos:start="35:98" pos:end="63:5">{<block_content pos:start="37:9" pos:end="61:26">

        <decl_stmt pos:start="37:9" pos:end="37:40"><decl pos:start="37:9" pos:end="37:39"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:19">au_size</name> <init pos:start="37:21" pos:end="37:39">= <expr pos:start="37:23" pos:end="37:39"><name pos:start="37:23" pos:end="37:35"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:35">num_frames</name></name> <operator pos:start="37:37" pos:end="37:37">*</operator> <literal type="number" pos:start="37:39" pos:end="37:39">2</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:55"><expr pos:start="41:9" pos:end="41:54"><name pos:start="41:9" pos:end="41:9">p</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <name pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:18">buf</name></name> <operator pos:start="41:20" pos:end="41:20">+</operator> <name pos:start="41:22" pos:end="41:40">max_au_headers_size</name> <operator pos:start="41:42" pos:end="41:42">-</operator> <name pos:start="41:44" pos:end="41:50">au_size</name> <operator pos:start="41:52" pos:end="41:52">-</operator> <literal type="number" pos:start="41:54" pos:end="41:54">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:24">(<expr pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:13">p</name> <operator pos:start="43:15" pos:end="43:16">!=</operator> <name pos:start="43:18" pos:end="43:23"><name pos:start="43:18" pos:end="43:18">s</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:23">buf</name></name></expr>)</condition> <block pos:start="43:26" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:48">

            <expr_stmt pos:start="45:13" pos:end="45:48"><expr pos:start="45:13" pos:end="45:47"><call pos:start="45:13" pos:end="45:47"><name pos:start="45:13" pos:end="45:19">memmove</name><argument_list pos:start="45:20" pos:end="45:47">(<argument pos:start="45:21" pos:end="45:25"><expr pos:start="45:21" pos:end="45:25"><name pos:start="45:21" pos:end="45:21">p</name> <operator pos:start="45:23" pos:end="45:23">+</operator> <literal type="number" pos:start="45:25" pos:end="45:25">2</literal></expr></argument>, <argument pos:start="45:28" pos:end="45:37"><expr pos:start="45:28" pos:end="45:37"><name pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:33">buf</name></name> <operator pos:start="45:35" pos:end="45:35">+</operator> <literal type="number" pos:start="45:37" pos:end="45:37">2</literal></expr></argument>, <argument pos:start="45:40" pos:end="45:46"><expr pos:start="45:40" pos:end="45:46"><name pos:start="45:40" pos:end="45:46">au_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="49:9" pos:end="49:38">/* Write the AU header size */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:12"><name pos:start="51:9" pos:end="51:9">p</name><index pos:start="51:10" pos:end="51:12">[<expr pos:start="51:11" pos:end="51:11"><literal type="number" pos:start="51:11" pos:end="51:11">0</literal></expr>]</index></name> <operator pos:start="51:14" pos:end="51:14">=</operator> <operator pos:start="51:16" pos:end="51:16">(</operator><operator pos:start="51:17" pos:end="51:17">(</operator><name pos:start="51:18" pos:end="51:24">au_size</name> <operator pos:start="51:26" pos:end="51:26">*</operator> <literal type="number" pos:start="51:28" pos:end="51:28">8</literal><operator pos:start="51:29" pos:end="51:29">)</operator> <operator pos:start="51:31" pos:end="51:31">&amp;</operator> <literal type="number" pos:start="51:33" pos:end="51:36">0xFF</literal><operator pos:start="51:37" pos:end="51:37">)</operator> <operator pos:start="51:39" pos:end="51:40">&gt;&gt;</operator> <literal type="number" pos:start="51:42" pos:end="51:42">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:36"><expr pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:12"><name pos:start="53:9" pos:end="53:9">p</name><index pos:start="53:10" pos:end="53:12">[<expr pos:start="53:11" pos:end="53:11"><literal type="number" pos:start="53:11" pos:end="53:11">1</literal></expr>]</index></name> <operator pos:start="53:14" pos:end="53:14">=</operator> <operator pos:start="53:16" pos:end="53:16">(</operator><name pos:start="53:17" pos:end="53:23">au_size</name> <operator pos:start="53:25" pos:end="53:25">*</operator> <literal type="number" pos:start="53:27" pos:end="53:27">8</literal><operator pos:start="53:28" pos:end="53:28">)</operator> <operator pos:start="53:30" pos:end="53:30">&amp;</operator> <literal type="number" pos:start="53:32" pos:end="53:35">0xFF</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:51"><expr pos:start="57:9" pos:end="57:50"><call pos:start="57:9" pos:end="57:50"><name pos:start="57:9" pos:end="57:24">ff_rtp_send_data</name><argument_list pos:start="57:25" pos:end="57:50">(<argument pos:start="57:26" pos:end="57:27"><expr pos:start="57:26" pos:end="57:27"><name pos:start="57:26" pos:end="57:27">s1</name></expr></argument>, <argument pos:start="57:30" pos:end="57:30"><expr pos:start="57:30" pos:end="57:30"><name pos:start="57:30" pos:end="57:30">p</name></expr></argument>, <argument pos:start="57:33" pos:end="57:46"><expr pos:start="57:33" pos:end="57:46"><name pos:start="57:33" pos:end="57:42"><name pos:start="57:33" pos:end="57:33">s</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:42">buf_ptr</name></name> <operator pos:start="57:44" pos:end="57:44">-</operator> <name pos:start="57:46" pos:end="57:46">p</name></expr></argument>, <argument pos:start="57:49" pos:end="57:49"><expr pos:start="57:49" pos:end="57:49"><literal type="number" pos:start="57:49" pos:end="57:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:21">num_frames</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:27">(<expr pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:21">num_frames</name></name> <operator pos:start="65:23" pos:end="65:24">==</operator> <literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr>)</condition> <block pos:start="65:29" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:40">

        <expr_stmt pos:start="67:9" pos:end="67:50"><expr pos:start="67:9" pos:end="67:49"><name pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:18">buf_ptr</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <name pos:start="67:22" pos:end="67:27"><name pos:start="67:22" pos:end="67:22">s</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:27">buf</name></name> <operator pos:start="67:29" pos:end="67:29">+</operator> <name pos:start="67:31" pos:end="67:49">max_au_headers_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:40"><expr pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:20">timestamp</name></name> <operator pos:start="69:22" pos:end="69:22">=</operator> <name pos:start="69:24" pos:end="69:39"><name pos:start="69:24" pos:end="69:24">s</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:39">cur_timestamp</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="119:5"><if pos:start="75:5" pos:end="87:5">if <condition pos:start="75:8" pos:end="75:32">(<expr pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:12">size</name> <operator pos:start="75:14" pos:end="75:15">&lt;=</operator> <name pos:start="75:17" pos:end="75:31">max_packet_size</name></expr>)</condition> <block pos:start="75:34" pos:end="87:5">{<block_content pos:start="77:9" pos:end="85:27">

        <expr_stmt pos:start="77:9" pos:end="77:45"><expr pos:start="77:9" pos:end="77:44"><name pos:start="77:9" pos:end="77:9">p</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <name pos:start="77:13" pos:end="77:18"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:18">buf</name></name> <operator pos:start="77:20" pos:end="77:20">+</operator> <name pos:start="77:22" pos:end="77:34"><name pos:start="77:22" pos:end="77:22">s</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:34">num_frames</name></name><operator pos:start="77:35" pos:end="77:36">++</operator> <operator pos:start="77:38" pos:end="77:38">*</operator> <literal type="number" pos:start="77:40" pos:end="77:42">2</literal> <operator pos:start="77:42" pos:end="77:42">+</operator> <literal type="number" pos:start="77:44" pos:end="77:44">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:25"><expr pos:start="79:9" pos:end="79:24"><operator pos:start="79:9" pos:end="79:9">*</operator><name pos:start="79:10" pos:end="79:10">p</name><operator pos:start="79:11" pos:end="79:12">++</operator> <operator pos:start="79:14" pos:end="79:14">=</operator> <name pos:start="79:16" pos:end="79:19">size</name> <operator pos:start="79:21" pos:end="79:22">&gt;&gt;</operator> <literal type="number" pos:start="79:24" pos:end="79:24">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><operator pos:start="81:9" pos:end="81:9">*</operator><name pos:start="81:10" pos:end="81:10">p</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <operator pos:start="81:14" pos:end="81:14">(</operator><name pos:start="81:15" pos:end="81:18">size</name> <operator pos:start="81:20" pos:end="81:20">&amp;</operator> <literal type="number" pos:start="81:22" pos:end="81:25">0x1F</literal><operator pos:start="81:26" pos:end="81:26">)</operator> <operator pos:start="81:28" pos:end="81:29">&lt;&lt;</operator> <literal type="number" pos:start="81:31" pos:end="81:31">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:39"><expr pos:start="83:9" pos:end="83:38"><call pos:start="83:9" pos:end="83:38"><name pos:start="83:9" pos:end="83:14">memcpy</name><argument_list pos:start="83:15" pos:end="83:38">(<argument pos:start="83:16" pos:end="83:25"><expr pos:start="83:16" pos:end="83:25"><name pos:start="83:16" pos:end="83:25"><name pos:start="83:16" pos:end="83:16">s</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:25">buf_ptr</name></name></expr></argument>, <argument pos:start="83:28" pos:end="83:31"><expr pos:start="83:28" pos:end="83:31"><name pos:start="83:28" pos:end="83:31">buff</name></expr></argument>, <argument pos:start="83:34" pos:end="83:37"><expr pos:start="83:34" pos:end="83:37"><name pos:start="83:34" pos:end="83:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:27"><expr pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:18">buf_ptr</name></name> <operator pos:start="85:20" pos:end="85:21">+=</operator> <name pos:start="85:23" pos:end="85:26">size</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="119:5">else <block pos:start="87:12" pos:end="119:5">{<block_content pos:start="89:9" pos:end="117:9">

        <decl_stmt pos:start="89:9" pos:end="89:27"><decl pos:start="89:9" pos:end="89:26"><type pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">int</name></type> <name pos:start="89:13" pos:end="89:19">au_size</name> <init pos:start="89:21" pos:end="89:26">= <expr pos:start="89:23" pos:end="89:26"><name pos:start="89:23" pos:end="89:26">size</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:50"><expr pos:start="93:9" pos:end="93:49"><name pos:start="93:9" pos:end="93:23">max_packet_size</name> <operator pos:start="93:25" pos:end="93:25">=</operator> <name pos:start="93:27" pos:end="93:45"><name pos:start="93:27" pos:end="93:27">s</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:45">max_payload_size</name></name> <operator pos:start="93:47" pos:end="93:47">-</operator> <literal type="number" pos:start="93:49" pos:end="93:49">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:19"><expr pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:9">p</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <name pos:start="95:13" pos:end="95:18"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:18">buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:17"><expr pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:12"><name pos:start="97:9" pos:end="97:9">p</name><index pos:start="97:10" pos:end="97:12">[<expr pos:start="97:11" pos:end="97:11"><literal type="number" pos:start="97:11" pos:end="97:11">0</literal></expr>]</index></name> <operator pos:start="97:14" pos:end="97:14">=</operator> <literal type="number" pos:start="97:16" pos:end="97:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:18"><expr pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:12"><name pos:start="99:9" pos:end="99:9">p</name><index pos:start="99:10" pos:end="99:12">[<expr pos:start="99:11" pos:end="99:11"><literal type="number" pos:start="99:11" pos:end="99:11">1</literal></expr>]</index></name> <operator pos:start="99:14" pos:end="99:14">=</operator> <literal type="number" pos:start="99:16" pos:end="99:17">16</literal></expr>;</expr_stmt>

        <while pos:start="101:9" pos:end="117:9">while <condition pos:start="101:15" pos:end="101:24">(<expr pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:19">size</name> <operator pos:start="101:21" pos:end="101:21">&gt;</operator> <literal type="number" pos:start="101:23" pos:end="101:23">0</literal></expr>)</condition> <block pos:start="101:26" pos:end="117:9">{<block_content pos:start="103:13" pos:end="115:24">

            <expr_stmt pos:start="103:13" pos:end="103:47"><expr pos:start="103:13" pos:end="103:46"><name pos:start="103:13" pos:end="103:15">len</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:46"><name pos:start="103:19" pos:end="103:23">FFMIN</name><argument_list pos:start="103:24" pos:end="103:46">(<argument pos:start="103:25" pos:end="103:28"><expr pos:start="103:25" pos:end="103:28"><name pos:start="103:25" pos:end="103:28">size</name></expr></argument>, <argument pos:start="103:31" pos:end="103:45"><expr pos:start="103:31" pos:end="103:45"><name pos:start="103:31" pos:end="103:45">max_packet_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:32"><expr pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:16"><name pos:start="105:13" pos:end="105:13">p</name><index pos:start="105:14" pos:end="105:16">[<expr pos:start="105:15" pos:end="105:15"><literal type="number" pos:start="105:15" pos:end="105:15">2</literal></expr>]</index></name> <operator pos:start="105:18" pos:end="105:18">=</operator> <name pos:start="105:20" pos:end="105:26">au_size</name> <operator pos:start="105:28" pos:end="105:29">&gt;&gt;</operator> <literal type="number" pos:start="105:31" pos:end="105:31">5</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:41"><expr pos:start="107:13" pos:end="107:40"><name pos:start="107:13" pos:end="107:16"><name pos:start="107:13" pos:end="107:13">p</name><index pos:start="107:14" pos:end="107:16">[<expr pos:start="107:15" pos:end="107:15"><literal type="number" pos:start="107:15" pos:end="107:15">3</literal></expr>]</index></name> <operator pos:start="107:18" pos:end="107:18">=</operator> <operator pos:start="107:20" pos:end="107:20">(</operator><name pos:start="107:21" pos:end="107:27">au_size</name> <operator pos:start="107:29" pos:end="107:29">&amp;</operator> <literal type="number" pos:start="107:31" pos:end="107:34">0x1F</literal><operator pos:start="107:35" pos:end="107:35">)</operator> <operator pos:start="107:37" pos:end="107:38">&lt;&lt;</operator> <literal type="number" pos:start="107:40" pos:end="107:40">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:37"><expr pos:start="109:13" pos:end="109:36"><call pos:start="109:13" pos:end="109:36"><name pos:start="109:13" pos:end="109:18">memcpy</name><argument_list pos:start="109:19" pos:end="109:36">(<argument pos:start="109:20" pos:end="109:24"><expr pos:start="109:20" pos:end="109:24"><name pos:start="109:20" pos:end="109:20">p</name> <operator pos:start="109:22" pos:end="109:22">+</operator> <literal type="number" pos:start="109:24" pos:end="109:24">4</literal></expr></argument>, <argument pos:start="109:27" pos:end="109:30"><expr pos:start="109:27" pos:end="109:30"><name pos:start="109:27" pos:end="109:30">buff</name></expr></argument>, <argument pos:start="109:33" pos:end="109:35"><expr pos:start="109:33" pos:end="109:35"><name pos:start="109:33" pos:end="109:35">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:58"><expr pos:start="111:13" pos:end="111:57"><call pos:start="111:13" pos:end="111:57"><name pos:start="111:13" pos:end="111:28">ff_rtp_send_data</name><argument_list pos:start="111:29" pos:end="111:57">(<argument pos:start="111:30" pos:end="111:31"><expr pos:start="111:30" pos:end="111:31"><name pos:start="111:30" pos:end="111:31">s1</name></expr></argument>, <argument pos:start="111:34" pos:end="111:34"><expr pos:start="111:34" pos:end="111:34"><name pos:start="111:34" pos:end="111:34">p</name></expr></argument>, <argument pos:start="111:37" pos:end="111:43"><expr pos:start="111:37" pos:end="111:43"><name pos:start="111:37" pos:end="111:39">len</name> <operator pos:start="111:41" pos:end="111:41">+</operator> <literal type="number" pos:start="111:43" pos:end="111:43">4</literal></expr></argument>, <argument pos:start="111:46" pos:end="111:56"><expr pos:start="111:46" pos:end="111:56"><name pos:start="111:46" pos:end="111:48">len</name> <operator pos:start="111:50" pos:end="111:51">==</operator> <name pos:start="111:53" pos:end="111:56">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:24"><expr pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:16">size</name> <operator pos:start="113:18" pos:end="113:19">-=</operator> <name pos:start="113:21" pos:end="113:23">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:24"><expr pos:start="115:13" pos:end="115:23"><name pos:start="115:13" pos:end="115:16">buff</name> <operator pos:start="115:18" pos:end="115:19">+=</operator> <name pos:start="115:21" pos:end="115:23">len</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
