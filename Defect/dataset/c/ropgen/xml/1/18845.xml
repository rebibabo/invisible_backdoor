<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18845.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">ff_dirac_golomb_read_16bit</name><parameter_list pos:start="1:31" pos:end="3:68">(<parameter pos:start="1:32" pos:end="1:54"><decl pos:start="1:32" pos:end="1:54"><type pos:start="1:32" pos:end="1:54"><name pos:start="1:32" pos:end="1:45">DiracGolombLUT</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:54">lut_ctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:74"><decl pos:start="1:57" pos:end="1:74"><type pos:start="1:57" pos:end="1:74"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:69">uint8_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">buf</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:40"><decl pos:start="3:32" pos:end="3:40"><type pos:start="3:32" pos:end="3:40"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:40">bytes</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:49">uint8_t</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:55">_dst</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:67"><decl pos:start="3:58" pos:end="3:67"><type pos:start="3:58" pos:end="3:67"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:67">coeffs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:17">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">b</name></decl>, <decl pos:start="7:15" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">c_idx</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int16_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">dst</name> <init pos:start="9:18" pos:end="9:34">= <expr pos:start="9:20" pos:end="9:34"><operator pos:start="9:20" pos:end="9:20">(</operator><name pos:start="9:21" pos:end="9:27">int16_t</name> <operator pos:start="9:29" pos:end="9:29">*</operator><operator pos:start="9:30" pos:end="9:30">)</operator><name pos:start="9:31" pos:end="9:34">_dst</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:66"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">DiracGolombLUT</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:29"><name pos:start="11:21" pos:end="11:26">future</name><index pos:start="11:27" pos:end="11:29">[<expr pos:start="11:28" pos:end="11:28"><literal type="number" pos:start="11:28" pos:end="11:28">4</literal></expr>]</index></name></decl>, <decl pos:start="11:32" pos:end="11:65"><type ref="prev" pos:start="11:5" pos:end="11:20"><modifier pos:start="11:32" pos:end="11:32">*</modifier></type><name pos:start="11:33" pos:end="11:33">l</name> <init pos:start="11:35" pos:end="11:65">= <expr pos:start="11:37" pos:end="11:65"><operator pos:start="11:37" pos:end="11:37">&amp;</operator><name pos:start="11:38" pos:end="11:65"><name pos:start="11:38" pos:end="11:44">lut_ctx</name><index pos:start="11:45" pos:end="11:65">[<expr pos:start="11:46" pos:end="11:64"><literal type="number" pos:start="11:46" pos:end="11:46">2</literal><operator pos:start="11:47" pos:end="11:47">*</operator><name pos:start="11:48" pos:end="11:55">LUT_SIZE</name> <operator pos:start="11:57" pos:end="11:57">+</operator> <name pos:start="11:59" pos:end="11:64"><name pos:start="11:59" pos:end="11:61">buf</name><index pos:start="11:62" pos:end="11:64">[<expr pos:start="11:63" pos:end="11:63"><literal type="number" pos:start="11:63" pos:end="11:63">0</literal></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="22:0"><expr pos:start="13:5" pos:end="13:27"><call pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:16">INIT_RESIDUE</name><argument_list pos:start="13:17" pos:end="13:27">(<argument pos:start="13:18" pos:end="13:20"><expr pos:start="13:18" pos:end="13:20"><name pos:start="13:18" pos:end="13:20">res</name></expr></argument>, <argument pos:start="13:23" pos:end="13:23"><expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></argument>, <argument pos:start="13:26" pos:end="13:26"><expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:define pos:start="17:1" pos:end="21:35">#<cpp:directive pos:start="17:2" pos:end="17:7">define</cpp:directive> <cpp:macro pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:22">APPEND_RESIDUE</name><parameter_list pos:start="17:23" pos:end="17:28">(<parameter pos:start="17:24" pos:end="17:24"><type pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">N</name></type></parameter>, <parameter pos:start="17:27" pos:end="17:27"><type pos:start="17:27" pos:end="17:27"><name pos:start="17:27" pos:end="17:27">M</name></type></parameter>)</parameter_list></cpp:macro>         \

    <cpp:value pos:start="19:5" pos:end="21:35">N          |= M &gt;&gt; (N ## _bits); \

    N ## _bits +=      (M ## _bits)</cpp:value></cpp:define>



    <for pos:start="25:5" pos:end="79:5">for <control pos:start="25:9" pos:end="25:32">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">b</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">1</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:27"><expr pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:17">b</name> <operator pos:start="25:19" pos:end="25:20">&lt;=</operator> <name pos:start="25:22" pos:end="25:26">bytes</name></expr>;</condition> <incr pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:29">b</name><operator pos:start="25:30" pos:end="25:31">++</operator></expr></incr>)</control> <block pos:start="25:34" pos:end="79:5">{<block_content pos:start="27:9" pos:end="77:65">

        <expr_stmt pos:start="27:9" pos:end="27:37"><expr pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:14">future</name><index pos:start="27:15" pos:end="27:17">[<expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>]</index></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <operator pos:start="27:21" pos:end="27:21">&amp;</operator><name pos:start="27:22" pos:end="27:36"><name pos:start="27:22" pos:end="27:28">lut_ctx</name><index pos:start="27:29" pos:end="27:36">[<expr pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:35"><name pos:start="27:30" pos:end="27:32">buf</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">b</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:14">future</name><index pos:start="29:15" pos:end="29:17">[<expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">1</literal></expr>]</index></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:29"><name pos:start="29:21" pos:end="29:26">future</name><index pos:start="29:27" pos:end="29:29">[<expr pos:start="29:28" pos:end="29:28"><literal type="number" pos:start="29:28" pos:end="29:28">0</literal></expr>]</index></name> <operator pos:start="29:31" pos:end="29:31">+</operator> <literal type="number" pos:start="29:33" pos:end="29:33">1</literal><operator pos:start="29:34" pos:end="29:34">*</operator><name pos:start="29:35" pos:end="29:42">LUT_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:43"><expr pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:14">future</name><index pos:start="31:15" pos:end="31:17">[<expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">2</literal></expr>]</index></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:29"><name pos:start="31:21" pos:end="31:26">future</name><index pos:start="31:27" pos:end="31:29">[<expr pos:start="31:28" pos:end="31:28"><literal type="number" pos:start="31:28" pos:end="31:28">0</literal></expr>]</index></name> <operator pos:start="31:31" pos:end="31:31">+</operator> <literal type="number" pos:start="31:33" pos:end="31:33">2</literal><operator pos:start="31:34" pos:end="31:34">*</operator><name pos:start="31:35" pos:end="31:42">LUT_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:14">future</name><index pos:start="33:15" pos:end="33:17">[<expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">3</literal></expr>]</index></name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:29"><name pos:start="33:21" pos:end="33:26">future</name><index pos:start="33:27" pos:end="33:29">[<expr pos:start="33:28" pos:end="33:28"><literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr>]</index></name> <operator pos:start="33:31" pos:end="33:31">+</operator> <literal type="number" pos:start="33:33" pos:end="33:33">3</literal><operator pos:start="33:34" pos:end="33:34">*</operator><name pos:start="33:35" pos:end="33:42">LUT_SIZE</name></expr>;</expr_stmt>



        <if_stmt pos:start="37:9" pos:end="39:25"><if pos:start="37:9" pos:end="39:25">if <condition pos:start="37:12" pos:end="37:33">(<expr pos:start="37:13" pos:end="37:32"><operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:18">c_idx</name> <operator pos:start="37:20" pos:end="37:20">+</operator> <literal type="number" pos:start="37:22" pos:end="37:22">1</literal><operator pos:start="37:23" pos:end="37:23">)</operator> <operator pos:start="37:25" pos:end="37:25">&gt;</operator> <name pos:start="37:27" pos:end="37:32">coeffs</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:25"><block_content pos:start="39:13" pos:end="39:25">

            <return pos:start="39:13" pos:end="39:25">return <expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:24">c_idx</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="43:9" pos:end="61:9"><if pos:start="43:9" pos:end="61:9">if <condition pos:start="43:12" pos:end="43:32">(<expr pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:20">res_bits</name> <operator pos:start="43:22" pos:end="43:23">&amp;&amp;</operator> <name pos:start="43:25" pos:end="43:31"><name pos:start="43:25" pos:end="43:25">l</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:31">sign</name></name></expr>)</condition> <block pos:start="43:34" pos:end="61:9">{<block_content pos:start="45:13" pos:end="59:31">

            <decl_stmt pos:start="45:13" pos:end="45:30"><decl pos:start="45:13" pos:end="45:29"><type pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:19">int32_t</name></type> <name pos:start="45:21" pos:end="45:25">coeff</name> <init pos:start="45:27" pos:end="45:29">= <expr pos:start="45:29" pos:end="45:29"><literal type="number" pos:start="45:29" pos:end="45:29">1</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:45"><expr pos:start="47:13" pos:end="47:44"><call pos:start="47:13" pos:end="47:44"><name pos:start="47:13" pos:end="47:26">APPEND_RESIDUE</name><argument_list pos:start="47:27" pos:end="47:44">(<argument pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">res</name></expr></argument>, <argument pos:start="47:33" pos:end="47:43"><expr pos:start="47:33" pos:end="47:43"><name pos:start="47:33" pos:end="47:43"><name pos:start="47:33" pos:end="47:33">l</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:43">preamble</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="49:13" pos:end="55:13">for <control pos:start="49:17" pos:end="49:53">(<init pos:start="49:18" pos:end="49:23"><expr pos:start="49:18" pos:end="49:22"><name pos:start="49:18" pos:end="49:18">i</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr>;</init> <condition pos:start="49:25" pos:end="49:48"><expr pos:start="49:25" pos:end="49:47"><name pos:start="49:25" pos:end="49:25">i</name> <operator pos:start="49:27" pos:end="49:27">&lt;</operator> <operator pos:start="49:29" pos:end="49:29">(</operator><name pos:start="49:30" pos:end="49:37">res_bits</name> <operator pos:start="49:39" pos:end="49:40">&gt;&gt;</operator> <literal type="number" pos:start="49:42" pos:end="49:42">1</literal><operator pos:start="49:43" pos:end="49:43">)</operator> <operator pos:start="49:45" pos:end="49:45">-</operator> <literal type="number" pos:start="49:47" pos:end="49:47">1</literal></expr>;</condition> <incr pos:start="49:50" pos:end="49:52"><expr pos:start="49:50" pos:end="49:52"><name pos:start="49:50" pos:end="49:50">i</name><operator pos:start="49:51" pos:end="49:52">++</operator></expr></incr>)</control> <block pos:start="49:55" pos:end="55:13">{<block_content pos:start="51:17" pos:end="53:61">

                <expr_stmt pos:start="51:17" pos:end="51:28"><expr pos:start="51:17" pos:end="51:27"><name pos:start="51:17" pos:end="51:21">coeff</name> <operator pos:start="51:23" pos:end="51:25">&lt;&lt;=</operator> <literal type="number" pos:start="51:27" pos:end="51:27">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:61"><expr pos:start="53:17" pos:end="53:60"><name pos:start="53:17" pos:end="53:21">coeff</name> <operator pos:start="53:23" pos:end="53:24">|=</operator> <operator pos:start="53:26" pos:end="53:26">(</operator><name pos:start="53:27" pos:end="53:29">res</name> <operator pos:start="53:31" pos:end="53:32">&gt;&gt;</operator> <operator pos:start="53:34" pos:end="53:34">(</operator><name pos:start="53:35" pos:end="53:44">RSIZE_BITS</name> <operator pos:start="53:46" pos:end="53:46">-</operator> <literal type="number" pos:start="53:48" pos:end="53:48">2</literal><operator pos:start="53:49" pos:end="53:49">*</operator><name pos:start="53:50" pos:end="53:50">i</name> <operator pos:start="53:52" pos:end="53:52">-</operator> <literal type="number" pos:start="53:54" pos:end="53:54">2</literal><operator pos:start="53:55" pos:end="53:55">)</operator><operator pos:start="53:56" pos:end="53:56">)</operator> <operator pos:start="53:58" pos:end="53:58">&amp;</operator> <literal type="number" pos:start="53:60" pos:end="53:60">1</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="57:13" pos:end="57:49"><expr pos:start="57:13" pos:end="57:48"><name pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:15">dst</name><index pos:start="57:16" pos:end="57:24">[<expr pos:start="57:17" pos:end="57:23"><name pos:start="57:17" pos:end="57:21">c_idx</name><operator pos:start="57:22" pos:end="57:23">++</operator></expr>]</index></name> <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:34"><name pos:start="57:28" pos:end="57:28">l</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:34">sign</name></name> <operator pos:start="57:36" pos:end="57:36">*</operator> <operator pos:start="57:38" pos:end="57:38">(</operator><name pos:start="57:39" pos:end="57:43">coeff</name> <operator pos:start="57:45" pos:end="57:45">-</operator> <literal type="number" pos:start="57:47" pos:end="57:47">1</literal><operator pos:start="57:48" pos:end="57:48">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:31"><expr pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:20">res_bits</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:26">res</name> <operator pos:start="59:28" pos:end="59:28">=</operator> <literal type="number" pos:start="59:30" pos:end="59:30">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="65:9" pos:end="67:41">for <control pos:start="65:13" pos:end="65:38">(<init pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:18"><name pos:start="65:14" pos:end="65:14">i</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="number" pos:start="65:18" pos:end="65:18">0</literal></expr>;</init> <condition pos:start="65:21" pos:end="65:33"><expr pos:start="65:21" pos:end="65:32"><name pos:start="65:21" pos:end="65:21">i</name> <operator pos:start="65:23" pos:end="65:23">&lt;</operator> <name pos:start="65:25" pos:end="65:32">LUT_BITS</name></expr>;</condition> <incr pos:start="65:35" pos:end="65:37"><expr pos:start="65:35" pos:end="65:37"><name pos:start="65:35" pos:end="65:35">i</name><operator pos:start="65:36" pos:end="65:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:13" pos:end="67:41"><block_content pos:start="67:13" pos:end="67:41">

            <expr_stmt pos:start="67:13" pos:end="67:41"><expr pos:start="67:13" pos:end="67:40"><name pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:15">dst</name><index pos:start="67:16" pos:end="67:26">[<expr pos:start="67:17" pos:end="67:25"><name pos:start="67:17" pos:end="67:21">c_idx</name> <operator pos:start="67:23" pos:end="67:23">+</operator> <name pos:start="67:25" pos:end="67:25">i</name></expr>]</index></name> <operator pos:start="67:28" pos:end="67:28">=</operator> <name pos:start="67:30" pos:end="67:40"><name pos:start="67:30" pos:end="67:30">l</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:37">ready</name><index pos:start="67:38" pos:end="67:40">[<expr pos:start="67:39" pos:end="67:39"><name pos:start="67:39" pos:end="67:39">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="69:9" pos:end="69:30"><expr pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:13">c_idx</name> <operator pos:start="69:15" pos:end="69:16">+=</operator> <name pos:start="69:18" pos:end="69:29"><name pos:start="69:18" pos:end="69:18">l</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:29">ready_num</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:41"><expr pos:start="73:9" pos:end="73:40"><call pos:start="73:9" pos:end="73:40"><name pos:start="73:9" pos:end="73:22">APPEND_RESIDUE</name><argument_list pos:start="73:23" pos:end="73:40">(<argument pos:start="73:24" pos:end="73:26"><expr pos:start="73:24" pos:end="73:26"><name pos:start="73:24" pos:end="73:26">res</name></expr></argument>, <argument pos:start="73:29" pos:end="73:39"><expr pos:start="73:29" pos:end="73:39"><name pos:start="73:29" pos:end="73:39"><name pos:start="73:29" pos:end="73:29">l</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:39">leftover</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:65"><expr pos:start="77:9" pos:end="77:64"><name pos:start="77:9" pos:end="77:9">l</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <name pos:start="77:13" pos:end="77:64"><name pos:start="77:13" pos:end="77:18">future</name><index pos:start="77:19" pos:end="77:64">[<expr pos:start="77:20" pos:end="77:63"><ternary pos:start="77:20" pos:end="77:63"><condition pos:start="77:20" pos:end="77:30"><expr pos:start="77:20" pos:end="77:28"><name pos:start="77:20" pos:end="77:28"><name pos:start="77:20" pos:end="77:20">l</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:28">need_s</name></name></expr> ?</condition><then pos:start="77:32" pos:end="77:32"> <expr pos:start="77:32" pos:end="77:32"><literal type="number" pos:start="77:32" pos:end="77:32">3</literal></expr> </then><else pos:start="77:34" pos:end="77:63">: <expr pos:start="77:36" pos:end="77:63"><ternary pos:start="77:36" pos:end="77:63"><condition pos:start="77:36" pos:end="77:46"><expr pos:start="77:36" pos:end="77:44"><operator pos:start="77:36" pos:end="77:36">!</operator><name pos:start="77:37" pos:end="77:44">res_bits</name></expr> ?</condition><then pos:start="77:48" pos:end="77:48"> <expr pos:start="77:48" pos:end="77:48"><literal type="number" pos:start="77:48" pos:end="77:48">2</literal></expr> </then><else pos:start="77:50" pos:end="77:63">: <expr pos:start="77:52" pos:end="77:63"><name pos:start="77:52" pos:end="77:59">res_bits</name> <operator pos:start="77:61" pos:end="77:61">&amp;</operator> <literal type="number" pos:start="77:63" pos:end="77:63">1</literal></expr></else></ternary></expr></else></ternary></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="83:5" pos:end="83:17">return <expr pos:start="83:12" pos:end="83:16"><name pos:start="83:12" pos:end="83:16">c_idx</name></expr>;</return>

</block_content>}</block></function>
</unit>
