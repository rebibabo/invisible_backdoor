<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16661.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:31"><name pos:start="1:1" pos:end="1:15">pvscsi_init_msi</name><argument_list pos:start="1:16" pos:end="1:31">(<argument pos:start="1:17" pos:end="1:30">PVSCSIState *s</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:5">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">PCIDevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">d</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><call pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:29">PCI_DEVICE</name><argument_list pos:start="7:30" pos:end="7:32">(<argument pos:start="7:31" pos:end="7:31"><expr pos:start="7:31" pos:end="7:31"><name pos:start="7:31" pos:end="7:31">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:61"><expr pos:start="11:5" pos:end="13:60"><name pos:start="11:5" pos:end="11:7">res</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="13:60"><name pos:start="11:11" pos:end="11:18">msi_init</name><argument_list pos:start="11:19" pos:end="13:60">(<argument pos:start="11:20" pos:end="11:20"><expr pos:start="11:20" pos:end="11:20"><name pos:start="11:20" pos:end="11:20">d</name></expr></argument>, <argument pos:start="11:23" pos:end="11:42"><expr pos:start="11:23" pos:end="11:42"><call pos:start="11:23" pos:end="11:42"><name pos:start="11:23" pos:end="11:39">PVSCSI_MSI_OFFSET</name><argument_list pos:start="11:40" pos:end="11:42">(<argument pos:start="11:41" pos:end="11:41"><expr pos:start="11:41" pos:end="11:41"><name pos:start="11:41" pos:end="11:41">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="11:45" pos:end="11:67"><expr pos:start="11:45" pos:end="11:67"><name pos:start="11:45" pos:end="11:67">PVSCSI_MSIX_NUM_VECTORS</name></expr></argument>,

                   <argument pos:start="13:20" pos:end="13:35"><expr pos:start="13:20" pos:end="13:35"><name pos:start="13:20" pos:end="13:35">PVSCSI_USE_64BIT</name></expr></argument>, <argument pos:start="13:38" pos:end="13:59"><expr pos:start="13:38" pos:end="13:59"><name pos:start="13:38" pos:end="13:59">PVSCSI_PER_VECTOR_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">res</name> <operator pos:start="15:13" pos:end="15:13">&lt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition> <block pos:start="15:18" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:28">

        <expr_stmt pos:start="17:9" pos:end="17:40"><expr pos:start="17:9" pos:end="17:39"><call pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:34">trace_pvscsi_init_msi_fail</name><argument_list pos:start="17:35" pos:end="17:39">(<argument pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:38">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:19">msi_used</name></name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:27">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="25:5">else <block pos:start="21:12" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:27">

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">msi_used</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:26">true</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block>
</unit>
