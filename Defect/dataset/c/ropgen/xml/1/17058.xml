<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17058.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:31">ff_rv34_decode_init</name><parameter_list pos:start="1:32" pos:end="1:54">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">RV34DecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">r</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:26">r</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:30"><expr pos:start="13:5" pos:end="13:29"><call pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:26">ff_MPV_decode_defaults</name><argument_list pos:start="13:27" pos:end="13:29">(<argument pos:start="13:28" pos:end="13:28"><expr pos:start="13:28" pos:end="13:28"><name pos:start="13:28" pos:end="13:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:12">avctx</name></name>      <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:25">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:17">out_format</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:28">FMT_H263</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:15">codec_id</name></name>   <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:35"><name pos:start="19:21" pos:end="19:25">avctx</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:35">codec_id</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:12">width</name></name>  <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:21">avctx</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:28">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:13">height</name></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:21">avctx</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:29">height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:23"><expr pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:5">r</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:8">s</name><operator pos:start="29:9" pos:end="29:9">.</operator><name pos:start="29:10" pos:end="29:14">avctx</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:22">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:9">avctx</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">flags</name></name> <operator pos:start="31:18" pos:end="31:19">|=</operator> <name pos:start="31:21" pos:end="31:39">CODEC_FLAG_EMU_EDGE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:5">r</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:8">s</name><operator pos:start="33:9" pos:end="33:9">.</operator><name pos:start="33:10" pos:end="33:14">flags</name></name> <operator pos:start="33:16" pos:end="33:17">|=</operator> <name pos:start="33:19" pos:end="33:37">CODEC_FLAG_EMU_EDGE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:9">avctx</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:18">pix_fmt</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:39">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:9">avctx</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:23">has_b_frames</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <literal type="number" pos:start="37:27" pos:end="37:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:21"><expr pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:16">low_delay</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="45:19"><if pos:start="43:5" pos:end="45:19">if <condition pos:start="43:8" pos:end="43:42">(<expr pos:start="43:9" pos:end="43:41"><operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:12">ret</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:36"><name pos:start="43:16" pos:end="43:33">ff_MPV_common_init</name><argument_list pos:start="43:34" pos:end="43:36">(<argument pos:start="43:35" pos:end="43:35"><expr pos:start="43:35" pos:end="43:35"><name pos:start="43:35" pos:end="43:35">s</name></expr></argument>)</argument_list></call><operator pos:start="43:37" pos:end="43:37">)</operator> <operator pos:start="43:39" pos:end="43:39">&lt;</operator> <literal type="number" pos:start="43:41" pos:end="43:41">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:19"><block_content pos:start="45:9" pos:end="45:19">

        <return pos:start="45:9" pos:end="45:19">return <expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="54:0"><expr pos:start="49:5" pos:end="49:52"><call pos:start="49:5" pos:end="49:52"><name pos:start="49:5" pos:end="49:21">ff_h264_pred_init</name><argument_list pos:start="49:22" pos:end="49:52">(<argument pos:start="49:23" pos:end="49:27"><expr pos:start="49:23" pos:end="49:27"><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:27"><name pos:start="49:24" pos:end="49:24">r</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:27">h</name></name></expr></argument>, <argument pos:start="49:30" pos:end="49:45"><expr pos:start="49:30" pos:end="49:45"><name pos:start="49:30" pos:end="49:45">AV_CODEC_ID_RV40</name></expr></argument>, <argument pos:start="49:48" pos:end="49:48"><expr pos:start="49:48" pos:end="49:48"><literal type="number" pos:start="49:48" pos:end="49:48">8</literal></expr></argument>, <argument pos:start="49:51" pos:end="49:51"><expr pos:start="49:51" pos:end="49:51"><literal type="number" pos:start="49:51" pos:end="49:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="53:1" pos:end="53:23">#<cpp:directive pos:start="53:2" pos:end="53:3">if</cpp:directive> <expr pos:start="53:5" pos:end="53:23"><name pos:start="53:5" pos:end="53:23">CONFIG_RV30_DECODER</name></expr></cpp:if>

    <if_stmt pos:start="55:5" pos:end="62:0"><if pos:start="55:5" pos:end="62:0">if <condition pos:start="55:8" pos:end="55:44">(<expr pos:start="55:9" pos:end="55:43"><name pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:13">avctx</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:23">codec_id</name></name> <operator pos:start="55:25" pos:end="55:26">==</operator> <name pos:start="55:28" pos:end="55:43">AV_CODEC_ID_RV30</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="62:0"><block_content pos:start="57:9" pos:end="62:0">

        <expr_stmt pos:start="57:9" pos:end="62:0"><expr pos:start="57:9" pos:end="57:33"><call pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:23">ff_rv30dsp_init</name><argument_list pos:start="57:24" pos:end="57:33">(<argument pos:start="57:25" pos:end="57:32"><expr pos:start="57:25" pos:end="57:32"><operator pos:start="57:25" pos:end="57:25">&amp;</operator><name pos:start="57:26" pos:end="57:32"><name pos:start="57:26" pos:end="57:26">r</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:32">rdsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="59:1" pos:end="59:6">#<cpp:directive pos:start="59:2" pos:end="59:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="61:1" pos:end="61:23">#<cpp:directive pos:start="61:2" pos:end="61:3">if</cpp:directive> <expr pos:start="61:5" pos:end="61:23"><name pos:start="61:5" pos:end="61:23">CONFIG_RV40_DECODER</name></expr></cpp:if>

    <if_stmt pos:start="63:5" pos:end="68:0"><if pos:start="63:5" pos:end="68:0">if <condition pos:start="63:8" pos:end="63:44">(<expr pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:13">avctx</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:23">codec_id</name></name> <operator pos:start="63:25" pos:end="63:26">==</operator> <name pos:start="63:28" pos:end="63:43">AV_CODEC_ID_RV40</name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="68:0"><block_content pos:start="65:9" pos:end="68:0">

        <expr_stmt pos:start="65:9" pos:end="68:0"><expr pos:start="65:9" pos:end="65:33"><call pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:23">ff_rv40dsp_init</name><argument_list pos:start="65:24" pos:end="65:33">(<argument pos:start="65:25" pos:end="65:32"><expr pos:start="65:25" pos:end="65:32"><operator pos:start="65:25" pos:end="65:25">&amp;</operator><name pos:start="65:26" pos:end="65:32"><name pos:start="65:26" pos:end="65:26">r</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:32">rdsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="71:5" pos:end="73:19"><if pos:start="71:5" pos:end="73:19">if <condition pos:start="71:8" pos:end="71:42">(<expr pos:start="71:9" pos:end="71:41"><operator pos:start="71:9" pos:end="71:9">(</operator><name pos:start="71:10" pos:end="71:12">ret</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <call pos:start="71:16" pos:end="71:36"><name pos:start="71:16" pos:end="71:33">rv34_decoder_alloc</name><argument_list pos:start="71:34" pos:end="71:36">(<argument pos:start="71:35" pos:end="71:35"><expr pos:start="71:35" pos:end="71:35"><name pos:start="71:35" pos:end="71:35">r</name></expr></argument>)</argument_list></call><operator pos:start="71:37" pos:end="71:37">)</operator> <operator pos:start="71:39" pos:end="71:39">&lt;</operator> <literal type="number" pos:start="71:41" pos:end="71:41">0</literal></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:19"><block_content pos:start="73:9" pos:end="73:19">

        <return pos:start="73:9" pos:end="73:19">return <expr pos:start="73:16" pos:end="73:18"><name pos:start="73:16" pos:end="73:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="79:27"><if pos:start="77:5" pos:end="79:27">if<condition pos:start="77:7" pos:end="77:41">(<expr pos:start="77:8" pos:end="77:40"><operator pos:start="77:8" pos:end="77:8">!</operator><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:18">intra_vlcs</name><index pos:start="77:19" pos:end="77:21">[<expr pos:start="77:20" pos:end="77:20"><literal type="number" pos:start="77:20" pos:end="77:20">0</literal></expr>]</index></name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:35"><name pos:start="77:23" pos:end="77:32">cbppattern</name><index pos:start="77:33" pos:end="77:35">[<expr pos:start="77:34" pos:end="77:34"><literal type="number" pos:start="77:34" pos:end="77:34">0</literal></expr>]</index></name><operator pos:start="77:36" pos:end="77:36">.</operator><name pos:start="77:37" pos:end="77:40">bits</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:27"><block_content pos:start="79:9" pos:end="79:27">

        <expr_stmt pos:start="79:9" pos:end="79:27"><expr pos:start="79:9" pos:end="79:26"><call pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:24">rv34_init_tables</name><argument_list pos:start="79:25" pos:end="79:26">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:43"><expr pos:start="83:5" pos:end="83:42"><name pos:start="83:5" pos:end="83:38"><name pos:start="83:5" pos:end="83:9">avctx</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:19">internal</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:38">allocate_progress</name></name> <operator pos:start="83:40" pos:end="83:40">=</operator> <literal type="number" pos:start="83:42" pos:end="83:42">1</literal></expr>;</expr_stmt>



    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
