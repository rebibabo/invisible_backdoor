<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18404.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">msmpeg4v12_decode_mb</name><parameter_list pos:start="1:32" pos:end="1:72">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:46">MpegEncContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:71"><decl pos:start="1:52" pos:end="1:71"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:58">int16_t</name></type> <name pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:64">block</name><index pos:start="1:65" pos:end="1:67">[<expr pos:start="1:66" pos:end="1:66"><literal type="number" pos:start="1:66" pos:end="1:66">6</literal></expr>]</index><index pos:start="1:68" pos:end="1:71">[<expr pos:start="1:69" pos:end="1:70"><literal type="number" pos:start="1:69" pos:end="1:70">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="177:1">{<block_content pos:start="5:5" pos:end="175:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">cbp</name></decl>, <decl pos:start="5:14" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:17">code</name></decl>, <decl pos:start="5:20" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:20">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:95"><decl pos:start="7:5" pos:end="7:94"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:12">uint32_t</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier> <specifier pos:start="7:16" pos:end="7:20">const</specifier></type> <name pos:start="7:22" pos:end="7:32">mb_type_ptr</name> <init pos:start="7:34" pos:end="7:94">= <expr pos:start="7:36" pos:end="7:94"><operator pos:start="7:36" pos:end="7:36">&amp;</operator><name pos:start="7:37" pos:end="7:94"><name pos:start="7:37" pos:end="7:37">s</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:54">current_picture</name><operator pos:start="7:55" pos:end="7:55">.</operator><name pos:start="7:56" pos:end="7:62">mb_type</name><index pos:start="7:63" pos:end="7:94">[<expr pos:start="7:64" pos:end="7:93"><name pos:start="7:64" pos:end="7:70"><name pos:start="7:64" pos:end="7:64">s</name><operator pos:start="7:65" pos:end="7:66">-&gt;</operator><name pos:start="7:67" pos:end="7:70">mb_x</name></name> <operator pos:start="7:72" pos:end="7:72">+</operator> <name pos:start="7:74" pos:end="7:80"><name pos:start="7:74" pos:end="7:74">s</name><operator pos:start="7:75" pos:end="7:76">-&gt;</operator><name pos:start="7:77" pos:end="7:80">mb_y</name></name><operator pos:start="7:81" pos:end="7:81">*</operator><name pos:start="7:82" pos:end="7:93"><name pos:start="7:82" pos:end="7:82">s</name><operator pos:start="7:83" pos:end="7:84">-&gt;</operator><name pos:start="7:85" pos:end="7:93">mb_stride</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="89:5"><if pos:start="11:5" pos:end="69:5">if <condition pos:start="11:8" pos:end="11:42">(<expr pos:start="11:9" pos:end="11:41"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:20">pict_type</name></name> <operator pos:start="11:22" pos:end="11:23">==</operator> <name pos:start="11:25" pos:end="11:41">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="11:44" pos:end="69:5">{<block_content pos:start="13:9" pos:end="67:25">

        <if_stmt pos:start="13:9" pos:end="41:9"><if pos:start="13:9" pos:end="41:9">if <condition pos:start="13:12" pos:end="13:32">(<expr pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:31">use_skip_mb_code</name></name></expr>)</condition> <block pos:start="13:34" pos:end="41:9">{<block_content pos:start="15:13" pos:end="39:13">

            <if_stmt pos:start="15:13" pos:end="39:13"><if pos:start="15:13" pos:end="39:13">if <condition pos:start="15:16" pos:end="15:34">(<expr pos:start="15:17" pos:end="15:33"><call pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:25">get_bits1</name><argument_list pos:start="15:26" pos:end="15:33">(<argument pos:start="15:27" pos:end="15:32"><expr pos:start="15:27" pos:end="15:32"><operator pos:start="15:27" pos:end="15:27">&amp;</operator><name pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:32">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:36" pos:end="39:13">{<block_content pos:start="19:17" pos:end="37:25">

                <comment type="block" pos:start="17:17" pos:end="17:29">/* skip mb */</comment>

                <expr_stmt pos:start="19:17" pos:end="19:32"><expr pos:start="19:17" pos:end="19:31"><name pos:start="19:17" pos:end="19:27"><name pos:start="19:17" pos:end="19:17">s</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:27">mb_intra</name></name> <operator pos:start="19:29" pos:end="19:29">=</operator> <literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr>;</expr_stmt>

                <for pos:start="21:17" pos:end="23:48">for<control pos:start="21:20" pos:end="21:32">(<init pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:21">i</name><operator pos:start="21:22" pos:end="21:22">=</operator><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr>;</init><condition pos:start="21:25" pos:end="21:28"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:25">i</name><operator pos:start="21:26" pos:end="21:26">&lt;</operator><literal type="number" pos:start="21:27" pos:end="21:27">6</literal></expr>;</condition><incr pos:start="21:29" pos:end="21:31"><expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:29">i</name><operator pos:start="21:30" pos:end="21:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:21" pos:end="23:48"><block_content pos:start="23:21" pos:end="23:48">

                    <expr_stmt pos:start="23:21" pos:end="23:48"><expr pos:start="23:21" pos:end="23:47"><name pos:start="23:21" pos:end="23:42"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:39">block_last_index</name><index pos:start="23:40" pos:end="23:42">[<expr pos:start="23:41" pos:end="23:41"><name pos:start="23:41" pos:end="23:41">i</name></expr>]</index></name> <operator pos:start="23:44" pos:end="23:44">=</operator> <operator pos:start="23:46" pos:end="23:46">-</operator><literal type="number" pos:start="23:47" pos:end="23:47">1</literal></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="25:17" pos:end="25:43"><expr pos:start="25:17" pos:end="25:42"><name pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:25">mv_dir</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:42">MV_DIR_FORWARD</name></expr>;</expr_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:43"><expr pos:start="27:17" pos:end="27:42"><name pos:start="27:17" pos:end="27:26"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:26">mv_type</name></name> <operator pos:start="27:28" pos:end="27:28">=</operator> <name pos:start="27:30" pos:end="27:42">MV_TYPE_16X16</name></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:35"><expr pos:start="29:17" pos:end="29:34"><name pos:start="29:17" pos:end="29:30"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:21">mv</name><index pos:start="29:22" pos:end="29:24">[<expr pos:start="29:23" pos:end="29:23"><literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr>]</index><index pos:start="29:25" pos:end="29:27">[<expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">0</literal></expr>]</index><index pos:start="29:28" pos:end="29:30">[<expr pos:start="29:29" pos:end="29:29"><literal type="number" pos:start="29:29" pos:end="29:29">0</literal></expr>]</index></name> <operator pos:start="29:32" pos:end="29:32">=</operator> <literal type="number" pos:start="29:34" pos:end="29:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="31:17" pos:end="31:35"><expr pos:start="31:17" pos:end="31:34"><name pos:start="31:17" pos:end="31:30"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:21">mv</name><index pos:start="31:22" pos:end="31:24">[<expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">0</literal></expr>]</index><index pos:start="31:25" pos:end="31:27">[<expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">0</literal></expr>]</index><index pos:start="31:28" pos:end="31:30">[<expr pos:start="31:29" pos:end="31:29"><literal type="number" pos:start="31:29" pos:end="31:29">1</literal></expr>]</index></name> <operator pos:start="31:32" pos:end="31:32">=</operator> <literal type="number" pos:start="31:34" pos:end="31:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:34"><expr pos:start="33:17" pos:end="33:33"><name pos:start="33:17" pos:end="33:29"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:29">mb_skipped</name></name> <operator pos:start="33:31" pos:end="33:31">=</operator> <literal type="number" pos:start="33:33" pos:end="33:33">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:73"><expr pos:start="35:17" pos:end="35:72"><operator pos:start="35:17" pos:end="35:17">*</operator><name pos:start="35:18" pos:end="35:28">mb_type_ptr</name> <operator pos:start="35:30" pos:end="35:30">=</operator> <name pos:start="35:32" pos:end="35:43">MB_TYPE_SKIP</name> <operator pos:start="35:45" pos:end="35:45">|</operator> <name pos:start="35:47" pos:end="35:56">MB_TYPE_L0</name> <operator pos:start="35:58" pos:end="35:58">|</operator> <name pos:start="35:60" pos:end="35:72">MB_TYPE_16x16</name></expr>;</expr_stmt>

                <return pos:start="37:17" pos:end="37:25">return <expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="45:9" pos:end="51:92"><if pos:start="45:9" pos:end="47:82">if<condition pos:start="45:11" pos:end="45:33">(<expr pos:start="45:12" pos:end="45:32"><name pos:start="45:12" pos:end="45:29"><name pos:start="45:12" pos:end="45:12">s</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:29">msmpeg4_version</name></name><operator pos:start="45:30" pos:end="45:31">==</operator><literal type="number" pos:start="45:32" pos:end="45:32">2</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:82"><block_content pos:start="47:13" pos:end="47:82">

            <expr_stmt pos:start="47:13" pos:end="47:82"><expr pos:start="47:13" pos:end="47:81"><name pos:start="47:13" pos:end="47:16">code</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:81"><name pos:start="47:20" pos:end="47:27">get_vlc2</name><argument_list pos:start="47:28" pos:end="47:81">(<argument pos:start="47:29" pos:end="47:34"><expr pos:start="47:29" pos:end="47:34"><operator pos:start="47:29" pos:end="47:29">&amp;</operator><name pos:start="47:30" pos:end="47:34"><name pos:start="47:30" pos:end="47:30">s</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:34">gb</name></name></expr></argument>, <argument pos:start="47:37" pos:end="47:56"><expr pos:start="47:37" pos:end="47:56"><name pos:start="47:37" pos:end="47:56"><name pos:start="47:37" pos:end="47:50">v2_mb_type_vlc</name><operator pos:start="47:51" pos:end="47:51">.</operator><name pos:start="47:52" pos:end="47:56">table</name></name></expr></argument>, <argument pos:start="47:59" pos:end="47:77"><expr pos:start="47:59" pos:end="47:77"><name pos:start="47:59" pos:end="47:77">V2_MB_TYPE_VLC_BITS</name></expr></argument>, <argument pos:start="47:80" pos:end="47:80"><expr pos:start="47:80" pos:end="47:80"><literal type="number" pos:start="47:80" pos:end="47:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="49:9" pos:end="51:92">else<block type="pseudo" pos:start="51:13" pos:end="51:92"><block_content pos:start="51:13" pos:end="51:92">

            <expr_stmt pos:start="51:13" pos:end="51:92"><expr pos:start="51:13" pos:end="51:91"><name pos:start="51:13" pos:end="51:16">code</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <call pos:start="51:20" pos:end="51:91"><name pos:start="51:20" pos:end="51:27">get_vlc2</name><argument_list pos:start="51:28" pos:end="51:91">(<argument pos:start="51:29" pos:end="51:34"><expr pos:start="51:29" pos:end="51:34"><operator pos:start="51:29" pos:end="51:29">&amp;</operator><name pos:start="51:30" pos:end="51:34"><name pos:start="51:30" pos:end="51:30">s</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:34">gb</name></name></expr></argument>, <argument pos:start="51:37" pos:end="51:65"><expr pos:start="51:37" pos:end="51:65"><name pos:start="51:37" pos:end="51:65"><name pos:start="51:37" pos:end="51:59">ff_h263_inter_MCBPC_vlc</name><operator pos:start="51:60" pos:end="51:60">.</operator><name pos:start="51:61" pos:end="51:65">table</name></name></expr></argument>, <argument pos:start="51:68" pos:end="51:87"><expr pos:start="51:68" pos:end="51:87"><name pos:start="51:68" pos:end="51:87">INTER_MCBPC_VLC_BITS</name></expr></argument>, <argument pos:start="51:90" pos:end="51:90"><expr pos:start="51:90" pos:end="51:90"><literal type="number" pos:start="51:90" pos:end="51:90">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if<condition pos:start="53:11" pos:end="53:28">(<expr pos:start="53:12" pos:end="53:27"><name pos:start="53:12" pos:end="53:26"><name pos:start="53:12" pos:end="53:15">code</name><argument_list type="generic" pos:start="53:16" pos:end="53:26">&lt;<argument pos:start="53:17" pos:end="53:25"><expr pos:start="53:17" pos:end="53:25"><literal type="number" pos:start="53:17" pos:end="53:17">0</literal> <operator pos:start="53:19" pos:end="53:20">||</operator> <name pos:start="53:22" pos:end="53:25">code</name></expr></argument>&gt;</argument_list></name><literal type="number" pos:start="53:27" pos:end="53:27">7</literal></expr>)</condition><block pos:start="53:29" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:22">

            <expr_stmt pos:start="55:13" pos:end="55:97"><expr pos:start="55:13" pos:end="55:96"><call pos:start="55:13" pos:end="55:96"><name pos:start="55:13" pos:end="55:18">av_log</name><argument_list pos:start="55:19" pos:end="55:96">(<argument pos:start="55:20" pos:end="55:27"><expr pos:start="55:20" pos:end="55:27"><name pos:start="55:20" pos:end="55:27"><name pos:start="55:20" pos:end="55:20">s</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:27">avctx</name></name></expr></argument>, <argument pos:start="55:30" pos:end="55:41"><expr pos:start="55:30" pos:end="55:41"><name pos:start="55:30" pos:end="55:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:44" pos:end="55:71"><expr pos:start="55:44" pos:end="55:71"><literal type="string" pos:start="55:44" pos:end="55:71">"cbpc %d invalid at %d %d\n"</literal></expr></argument>, <argument pos:start="55:74" pos:end="55:77"><expr pos:start="55:74" pos:end="55:77"><name pos:start="55:74" pos:end="55:77">code</name></expr></argument>, <argument pos:start="55:80" pos:end="55:86"><expr pos:start="55:80" pos:end="55:86"><name pos:start="55:80" pos:end="55:86"><name pos:start="55:80" pos:end="55:80">s</name><operator pos:start="55:81" pos:end="55:82">-&gt;</operator><name pos:start="55:83" pos:end="55:86">mb_x</name></name></expr></argument>, <argument pos:start="55:89" pos:end="55:95"><expr pos:start="55:89" pos:end="55:95"><name pos:start="55:89" pos:end="55:95"><name pos:start="55:89" pos:end="55:89">s</name><operator pos:start="55:90" pos:end="55:91">-&gt;</operator><name pos:start="55:92" pos:end="55:95">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:22">return <expr pos:start="57:20" pos:end="57:21"><operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:19">mb_intra</name></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:26">code</name> <operator pos:start="63:28" pos:end="63:29">&gt;&gt;</operator><literal type="number" pos:start="63:30" pos:end="63:30">2</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:25"><expr pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:11">cbp</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <name pos:start="67:15" pos:end="67:18">code</name> <operator pos:start="67:20" pos:end="67:20">&amp;</operator> <literal type="number" pos:start="67:22" pos:end="67:24">0x3</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="89:5">else <block pos:start="69:12" pos:end="89:5">{<block_content pos:start="71:9" pos:end="87:9">

        <expr_stmt pos:start="71:9" pos:end="71:24"><expr pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:19">mb_intra</name></name> <operator pos:start="71:21" pos:end="71:21">=</operator> <literal type="number" pos:start="71:23" pos:end="71:23">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="79:90"><if pos:start="73:9" pos:end="75:86">if<condition pos:start="73:11" pos:end="73:33">(<expr pos:start="73:12" pos:end="73:32"><name pos:start="73:12" pos:end="73:29"><name pos:start="73:12" pos:end="73:12">s</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:29">msmpeg4_version</name></name><operator pos:start="73:30" pos:end="73:31">==</operator><literal type="number" pos:start="73:32" pos:end="73:32">2</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:86"><block_content pos:start="75:13" pos:end="75:86">

            <expr_stmt pos:start="75:13" pos:end="75:86"><expr pos:start="75:13" pos:end="75:85"><name pos:start="75:13" pos:end="75:15">cbp</name><operator pos:start="75:16" pos:end="75:16">=</operator> <call pos:start="75:18" pos:end="75:85"><name pos:start="75:18" pos:end="75:25">get_vlc2</name><argument_list pos:start="75:26" pos:end="75:85">(<argument pos:start="75:27" pos:end="75:32"><expr pos:start="75:27" pos:end="75:32"><operator pos:start="75:27" pos:end="75:27">&amp;</operator><name pos:start="75:28" pos:end="75:32"><name pos:start="75:28" pos:end="75:28">s</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:32">gb</name></name></expr></argument>, <argument pos:start="75:35" pos:end="75:57"><expr pos:start="75:35" pos:end="75:57"><name pos:start="75:35" pos:end="75:57"><name pos:start="75:35" pos:end="75:51">v2_intra_cbpc_vlc</name><operator pos:start="75:52" pos:end="75:52">.</operator><name pos:start="75:53" pos:end="75:57">table</name></name></expr></argument>, <argument pos:start="75:60" pos:end="75:81"><expr pos:start="75:60" pos:end="75:81"><name pos:start="75:60" pos:end="75:81">V2_INTRA_CBPC_VLC_BITS</name></expr></argument>, <argument pos:start="75:84" pos:end="75:84"><expr pos:start="75:84" pos:end="75:84"><literal type="number" pos:start="75:84" pos:end="75:84">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="77:9" pos:end="79:90">else<block type="pseudo" pos:start="79:13" pos:end="79:90"><block_content pos:start="79:13" pos:end="79:90">

            <expr_stmt pos:start="79:13" pos:end="79:90"><expr pos:start="79:13" pos:end="79:89"><name pos:start="79:13" pos:end="79:15">cbp</name><operator pos:start="79:16" pos:end="79:16">=</operator> <call pos:start="79:18" pos:end="79:89"><name pos:start="79:18" pos:end="79:25">get_vlc2</name><argument_list pos:start="79:26" pos:end="79:89">(<argument pos:start="79:27" pos:end="79:32"><expr pos:start="79:27" pos:end="79:32"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:32"><name pos:start="79:28" pos:end="79:28">s</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:32">gb</name></name></expr></argument>, <argument pos:start="79:35" pos:end="79:63"><expr pos:start="79:35" pos:end="79:63"><name pos:start="79:35" pos:end="79:63"><name pos:start="79:35" pos:end="79:57">ff_h263_intra_MCBPC_vlc</name><operator pos:start="79:58" pos:end="79:58">.</operator><name pos:start="79:59" pos:end="79:63">table</name></name></expr></argument>, <argument pos:start="79:66" pos:end="79:85"><expr pos:start="79:66" pos:end="79:85"><name pos:start="79:66" pos:end="79:85">INTRA_MCBPC_VLC_BITS</name></expr></argument>, <argument pos:start="79:88" pos:end="79:88"><expr pos:start="79:88" pos:end="79:88"><literal type="number" pos:start="79:88" pos:end="79:88">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if<condition pos:start="81:11" pos:end="81:26">(<expr pos:start="81:12" pos:end="81:25"><name pos:start="81:12" pos:end="81:24"><name pos:start="81:12" pos:end="81:14">cbp</name><argument_list type="generic" pos:start="81:15" pos:end="81:24">&lt;<argument pos:start="81:16" pos:end="81:23"><expr pos:start="81:16" pos:end="81:23"><literal type="number" pos:start="81:16" pos:end="81:16">0</literal> <operator pos:start="81:18" pos:end="81:19">||</operator> <name pos:start="81:21" pos:end="81:23">cbp</name></expr></argument>&gt;</argument_list></name><literal type="number" pos:start="81:25" pos:end="81:25">3</literal></expr>)</condition><block pos:start="81:27" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:22">

            <expr_stmt pos:start="83:13" pos:end="83:96"><expr pos:start="83:13" pos:end="83:95"><call pos:start="83:13" pos:end="83:95"><name pos:start="83:13" pos:end="83:18">av_log</name><argument_list pos:start="83:19" pos:end="83:95">(<argument pos:start="83:20" pos:end="83:27"><expr pos:start="83:20" pos:end="83:27"><name pos:start="83:20" pos:end="83:27"><name pos:start="83:20" pos:end="83:20">s</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:27">avctx</name></name></expr></argument>, <argument pos:start="83:30" pos:end="83:41"><expr pos:start="83:30" pos:end="83:41"><name pos:start="83:30" pos:end="83:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:44" pos:end="83:71"><expr pos:start="83:44" pos:end="83:71"><literal type="string" pos:start="83:44" pos:end="83:71">"cbpc %d invalid at %d %d\n"</literal></expr></argument>, <argument pos:start="83:74" pos:end="83:76"><expr pos:start="83:74" pos:end="83:76"><name pos:start="83:74" pos:end="83:76">cbp</name></expr></argument>, <argument pos:start="83:79" pos:end="83:85"><expr pos:start="83:79" pos:end="83:85"><name pos:start="83:79" pos:end="83:85"><name pos:start="83:79" pos:end="83:79">s</name><operator pos:start="83:80" pos:end="83:81">-&gt;</operator><name pos:start="83:82" pos:end="83:85">mb_x</name></name></expr></argument>, <argument pos:start="83:88" pos:end="83:94"><expr pos:start="83:88" pos:end="83:94"><name pos:start="83:88" pos:end="83:94"><name pos:start="83:88" pos:end="83:88">s</name><operator pos:start="83:89" pos:end="83:90">-&gt;</operator><name pos:start="83:91" pos:end="83:94">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="85:13" pos:end="85:22">return <expr pos:start="85:20" pos:end="85:21"><operator pos:start="85:20" pos:end="85:20">-</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="93:5" pos:end="155:5"><if pos:start="93:5" pos:end="135:5">if <condition pos:start="93:8" pos:end="93:21">(<expr pos:start="93:9" pos:end="93:20"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:20"><name pos:start="93:10" pos:end="93:10">s</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:20">mb_intra</name></name></expr>)</condition> <block pos:start="93:23" pos:end="135:5">{<block_content pos:start="95:9" pos:end="133:50">

        <decl_stmt pos:start="95:9" pos:end="95:25"><decl pos:start="95:9" pos:end="95:14"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:14">mx</name></decl>, <decl pos:start="95:17" pos:end="95:18"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:17" pos:end="95:18">my</name></decl>, <decl pos:start="95:21" pos:end="95:24"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:21" pos:end="95:24">cbpy</name></decl>;</decl_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:73"><expr pos:start="99:9" pos:end="99:72"><name pos:start="99:9" pos:end="99:12">cbpy</name><operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:72"><name pos:start="99:15" pos:end="99:22">get_vlc2</name><argument_list pos:start="99:23" pos:end="99:72">(<argument pos:start="99:24" pos:end="99:29"><expr pos:start="99:24" pos:end="99:29"><operator pos:start="99:24" pos:end="99:24">&amp;</operator><name pos:start="99:25" pos:end="99:29"><name pos:start="99:25" pos:end="99:25">s</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:29">gb</name></name></expr></argument>, <argument pos:start="99:32" pos:end="99:53"><expr pos:start="99:32" pos:end="99:53"><name pos:start="99:32" pos:end="99:53"><name pos:start="99:32" pos:end="99:47">ff_h263_cbpy_vlc</name><operator pos:start="99:48" pos:end="99:48">.</operator><name pos:start="99:49" pos:end="99:53">table</name></name></expr></argument>, <argument pos:start="99:56" pos:end="99:68"><expr pos:start="99:56" pos:end="99:68"><name pos:start="99:56" pos:end="99:68">CBPY_VLC_BITS</name></expr></argument>, <argument pos:start="99:71" pos:end="99:71"><expr pos:start="99:71" pos:end="99:71"><literal type="number" pos:start="99:71" pos:end="99:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if<condition pos:start="101:11" pos:end="101:18">(<expr pos:start="101:12" pos:end="101:17"><name pos:start="101:12" pos:end="101:15">cbpy</name><operator pos:start="101:16" pos:end="101:16">&lt;</operator><literal type="number" pos:start="101:17" pos:end="101:17">0</literal></expr>)</condition><block pos:start="101:19" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:22">

            <expr_stmt pos:start="103:13" pos:end="103:96"><expr pos:start="103:13" pos:end="103:95"><call pos:start="103:13" pos:end="103:95"><name pos:start="103:13" pos:end="103:18">av_log</name><argument_list pos:start="103:19" pos:end="103:95">(<argument pos:start="103:20" pos:end="103:27"><expr pos:start="103:20" pos:end="103:27"><name pos:start="103:20" pos:end="103:27"><name pos:start="103:20" pos:end="103:20">s</name><operator pos:start="103:21" pos:end="103:22">-&gt;</operator><name pos:start="103:23" pos:end="103:27">avctx</name></name></expr></argument>, <argument pos:start="103:30" pos:end="103:41"><expr pos:start="103:30" pos:end="103:41"><name pos:start="103:30" pos:end="103:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:44" pos:end="103:71"><expr pos:start="103:44" pos:end="103:71"><literal type="string" pos:start="103:44" pos:end="103:71">"cbpy %d invalid at %d %d\n"</literal></expr></argument>, <argument pos:start="103:74" pos:end="103:76"><expr pos:start="103:74" pos:end="103:76"><name pos:start="103:74" pos:end="103:76">cbp</name></expr></argument>, <argument pos:start="103:79" pos:end="103:85"><expr pos:start="103:79" pos:end="103:85"><name pos:start="103:79" pos:end="103:85"><name pos:start="103:79" pos:end="103:79">s</name><operator pos:start="103:80" pos:end="103:81">-&gt;</operator><name pos:start="103:82" pos:end="103:85">mb_x</name></name></expr></argument>, <argument pos:start="103:88" pos:end="103:94"><expr pos:start="103:88" pos:end="103:94"><name pos:start="103:88" pos:end="103:94"><name pos:start="103:88" pos:end="103:88">s</name><operator pos:start="103:89" pos:end="103:90">-&gt;</operator><name pos:start="103:91" pos:end="103:94">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="105:13" pos:end="105:22">return <expr pos:start="105:20" pos:end="105:21"><operator pos:start="105:20" pos:end="105:20">-</operator><literal type="number" pos:start="105:21" pos:end="105:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:22"><expr pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:11">cbp</name><operator pos:start="111:12" pos:end="111:13">|=</operator> <name pos:start="111:15" pos:end="111:18">cbpy</name><operator pos:start="111:19" pos:end="111:20">&lt;&lt;</operator><literal type="number" pos:start="111:21" pos:end="111:21">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="113:61"><if pos:start="113:9" pos:end="113:61">if<condition pos:start="113:11" pos:end="113:49">(<expr pos:start="113:12" pos:end="113:48"><name pos:start="113:12" pos:end="113:29"><name pos:start="113:12" pos:end="113:12">s</name><operator pos:start="113:13" pos:end="113:14">-&gt;</operator><name pos:start="113:15" pos:end="113:29">msmpeg4_version</name></name><operator pos:start="113:30" pos:end="113:31">==</operator><literal type="number" pos:start="113:32" pos:end="113:32">1</literal> <operator pos:start="113:34" pos:end="113:35">||</operator> <operator pos:start="113:37" pos:end="113:37">(</operator><name pos:start="113:38" pos:end="113:40">cbp</name><operator pos:start="113:41" pos:end="113:41">&amp;</operator><literal type="number" pos:start="113:42" pos:end="113:42">3</literal><operator pos:start="113:43" pos:end="113:43">)</operator> <operator pos:start="113:45" pos:end="113:46">!=</operator> <literal type="number" pos:start="113:48" pos:end="113:48">3</literal></expr>)</condition><block type="pseudo" pos:start="113:51" pos:end="113:61"><block_content pos:start="113:51" pos:end="113:61"> <expr_stmt pos:start="113:51" pos:end="113:61"><expr pos:start="113:51" pos:end="113:60"><name pos:start="113:51" pos:end="113:53">cbp</name><operator pos:start="113:54" pos:end="113:55">^=</operator> <literal type="number" pos:start="113:57" pos:end="113:60">0x3C</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:47"><expr pos:start="117:9" pos:end="117:46"><call pos:start="117:9" pos:end="117:46"><name pos:start="117:9" pos:end="117:27">ff_h263_pred_motion</name><argument_list pos:start="117:28" pos:end="117:46">(<argument pos:start="117:29" pos:end="117:29"><expr pos:start="117:29" pos:end="117:29"><name pos:start="117:29" pos:end="117:29">s</name></expr></argument>, <argument pos:start="117:32" pos:end="117:32"><expr pos:start="117:32" pos:end="117:32"><literal type="number" pos:start="117:32" pos:end="117:32">0</literal></expr></argument>, <argument pos:start="117:35" pos:end="117:35"><expr pos:start="117:35" pos:end="117:35"><literal type="number" pos:start="117:35" pos:end="117:35">0</literal></expr></argument>, <argument pos:start="117:38" pos:end="117:40"><expr pos:start="117:38" pos:end="117:40"><operator pos:start="117:38" pos:end="117:38">&amp;</operator><name pos:start="117:39" pos:end="117:40">mx</name></expr></argument>, <argument pos:start="117:43" pos:end="117:45"><expr pos:start="117:43" pos:end="117:45"><operator pos:start="117:43" pos:end="117:43">&amp;</operator><name pos:start="117:44" pos:end="117:45">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:46"><expr pos:start="119:9" pos:end="119:45"><name pos:start="119:9" pos:end="119:10">mx</name><operator pos:start="119:11" pos:end="119:11">=</operator> <call pos:start="119:13" pos:end="119:45"><name pos:start="119:13" pos:end="119:35">msmpeg4v2_decode_motion</name><argument_list pos:start="119:36" pos:end="119:45">(<argument pos:start="119:37" pos:end="119:37"><expr pos:start="119:37" pos:end="119:37"><name pos:start="119:37" pos:end="119:37">s</name></expr></argument>, <argument pos:start="119:40" pos:end="119:41"><expr pos:start="119:40" pos:end="119:41"><name pos:start="119:40" pos:end="119:41">mx</name></expr></argument>, <argument pos:start="119:44" pos:end="119:44"><expr pos:start="119:44" pos:end="119:44"><literal type="number" pos:start="119:44" pos:end="119:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:46"><expr pos:start="121:9" pos:end="121:45"><name pos:start="121:9" pos:end="121:10">my</name><operator pos:start="121:11" pos:end="121:11">=</operator> <call pos:start="121:13" pos:end="121:45"><name pos:start="121:13" pos:end="121:35">msmpeg4v2_decode_motion</name><argument_list pos:start="121:36" pos:end="121:45">(<argument pos:start="121:37" pos:end="121:37"><expr pos:start="121:37" pos:end="121:37"><name pos:start="121:37" pos:end="121:37">s</name></expr></argument>, <argument pos:start="121:40" pos:end="121:41"><expr pos:start="121:40" pos:end="121:41"><name pos:start="121:40" pos:end="121:41">my</name></expr></argument>, <argument pos:start="121:44" pos:end="121:44"><expr pos:start="121:44" pos:end="121:44"><literal type="number" pos:start="121:44" pos:end="121:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:35"><expr pos:start="125:9" pos:end="125:34"><name pos:start="125:9" pos:end="125:17"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:17">mv_dir</name></name> <operator pos:start="125:19" pos:end="125:19">=</operator> <name pos:start="125:21" pos:end="125:34">MV_DIR_FORWARD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:35"><expr pos:start="127:9" pos:end="127:34"><name pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:18">mv_type</name></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <name pos:start="127:22" pos:end="127:34">MV_TYPE_16X16</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:28"><expr pos:start="129:9" pos:end="129:27"><name pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:13">mv</name><index pos:start="129:14" pos:end="129:16">[<expr pos:start="129:15" pos:end="129:15"><literal type="number" pos:start="129:15" pos:end="129:15">0</literal></expr>]</index><index pos:start="129:17" pos:end="129:19">[<expr pos:start="129:18" pos:end="129:18"><literal type="number" pos:start="129:18" pos:end="129:18">0</literal></expr>]</index><index pos:start="129:20" pos:end="129:22">[<expr pos:start="129:21" pos:end="129:21"><literal type="number" pos:start="129:21" pos:end="129:21">0</literal></expr>]</index></name> <operator pos:start="129:24" pos:end="129:24">=</operator> <name pos:start="129:26" pos:end="129:27">mx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:28"><expr pos:start="131:9" pos:end="131:27"><name pos:start="131:9" pos:end="131:22"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:13">mv</name><index pos:start="131:14" pos:end="131:16">[<expr pos:start="131:15" pos:end="131:15"><literal type="number" pos:start="131:15" pos:end="131:15">0</literal></expr>]</index><index pos:start="131:17" pos:end="131:19">[<expr pos:start="131:18" pos:end="131:18"><literal type="number" pos:start="131:18" pos:end="131:18">0</literal></expr>]</index><index pos:start="131:20" pos:end="131:22">[<expr pos:start="131:21" pos:end="131:21"><literal type="number" pos:start="131:21" pos:end="131:21">1</literal></expr>]</index></name> <operator pos:start="131:24" pos:end="131:24">=</operator> <name pos:start="131:26" pos:end="131:27">my</name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:50"><expr pos:start="133:9" pos:end="133:49"><operator pos:start="133:9" pos:end="133:9">*</operator><name pos:start="133:10" pos:end="133:20">mb_type_ptr</name> <operator pos:start="133:22" pos:end="133:22">=</operator> <name pos:start="133:24" pos:end="133:33">MB_TYPE_L0</name> <operator pos:start="133:35" pos:end="133:35">|</operator> <name pos:start="133:37" pos:end="133:49">MB_TYPE_16x16</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="135:7" pos:end="155:5">else <block pos:start="135:12" pos:end="155:5">{<block_content pos:start="137:9" pos:end="153:37">

        <if_stmt pos:start="137:9" pos:end="151:9"><if pos:start="137:9" pos:end="143:9">if<condition pos:start="137:11" pos:end="137:33">(<expr pos:start="137:12" pos:end="137:32"><name pos:start="137:12" pos:end="137:29"><name pos:start="137:12" pos:end="137:12">s</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:29">msmpeg4_version</name></name><operator pos:start="137:30" pos:end="137:31">==</operator><literal type="number" pos:start="137:32" pos:end="137:32">2</literal></expr>)</condition><block pos:start="137:34" pos:end="143:9">{<block_content pos:start="139:13" pos:end="141:80">

            <expr_stmt pos:start="139:13" pos:end="139:43"><expr pos:start="139:13" pos:end="139:42"><name pos:start="139:13" pos:end="139:22"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:22">ac_pred</name></name> <operator pos:start="139:24" pos:end="139:24">=</operator> <call pos:start="139:26" pos:end="139:42"><name pos:start="139:26" pos:end="139:34">get_bits1</name><argument_list pos:start="139:35" pos:end="139:42">(<argument pos:start="139:36" pos:end="139:41"><expr pos:start="139:36" pos:end="139:41"><operator pos:start="139:36" pos:end="139:36">&amp;</operator><name pos:start="139:37" pos:end="139:41"><name pos:start="139:37" pos:end="139:37">s</name><operator pos:start="139:38" pos:end="139:39">-&gt;</operator><name pos:start="139:40" pos:end="139:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:80"><expr pos:start="141:13" pos:end="141:79"><name pos:start="141:13" pos:end="141:15">cbp</name><operator pos:start="141:16" pos:end="141:17">|=</operator> <call pos:start="141:19" pos:end="141:76"><name pos:start="141:19" pos:end="141:26">get_vlc2</name><argument_list pos:start="141:27" pos:end="141:76">(<argument pos:start="141:28" pos:end="141:33"><expr pos:start="141:28" pos:end="141:33"><operator pos:start="141:28" pos:end="141:28">&amp;</operator><name pos:start="141:29" pos:end="141:33"><name pos:start="141:29" pos:end="141:29">s</name><operator pos:start="141:30" pos:end="141:31">-&gt;</operator><name pos:start="141:32" pos:end="141:33">gb</name></name></expr></argument>, <argument pos:start="141:36" pos:end="141:57"><expr pos:start="141:36" pos:end="141:57"><name pos:start="141:36" pos:end="141:57"><name pos:start="141:36" pos:end="141:51">ff_h263_cbpy_vlc</name><operator pos:start="141:52" pos:end="141:52">.</operator><name pos:start="141:53" pos:end="141:57">table</name></name></expr></argument>, <argument pos:start="141:60" pos:end="141:72"><expr pos:start="141:60" pos:end="141:72"><name pos:start="141:60" pos:end="141:72">CBPY_VLC_BITS</name></expr></argument>, <argument pos:start="141:75" pos:end="141:75"><expr pos:start="141:75" pos:end="141:75"><literal type="number" pos:start="141:75" pos:end="141:75">1</literal></expr></argument>)</argument_list></call><operator pos:start="141:77" pos:end="141:78">&lt;&lt;</operator><literal type="number" pos:start="141:79" pos:end="141:79">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="141:82" pos:end="141:101">//FIXME check errors</comment>

        </block_content>}</block></if> <else pos:start="143:11" pos:end="151:9">else<block pos:start="143:15" pos:end="151:9">{<block_content pos:start="145:13" pos:end="149:58">

            <expr_stmt pos:start="145:13" pos:end="145:27"><expr pos:start="145:13" pos:end="145:26"><name pos:start="145:13" pos:end="145:22"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:22">ac_pred</name></name> <operator pos:start="145:24" pos:end="145:24">=</operator> <literal type="number" pos:start="145:26" pos:end="145:26">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:80"><expr pos:start="147:13" pos:end="147:79"><name pos:start="147:13" pos:end="147:15">cbp</name><operator pos:start="147:16" pos:end="147:17">|=</operator> <call pos:start="147:19" pos:end="147:76"><name pos:start="147:19" pos:end="147:26">get_vlc2</name><argument_list pos:start="147:27" pos:end="147:76">(<argument pos:start="147:28" pos:end="147:33"><expr pos:start="147:28" pos:end="147:33"><operator pos:start="147:28" pos:end="147:28">&amp;</operator><name pos:start="147:29" pos:end="147:33"><name pos:start="147:29" pos:end="147:29">s</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:33">gb</name></name></expr></argument>, <argument pos:start="147:36" pos:end="147:57"><expr pos:start="147:36" pos:end="147:57"><name pos:start="147:36" pos:end="147:57"><name pos:start="147:36" pos:end="147:51">ff_h263_cbpy_vlc</name><operator pos:start="147:52" pos:end="147:52">.</operator><name pos:start="147:53" pos:end="147:57">table</name></name></expr></argument>, <argument pos:start="147:60" pos:end="147:72"><expr pos:start="147:60" pos:end="147:72"><name pos:start="147:60" pos:end="147:72">CBPY_VLC_BITS</name></expr></argument>, <argument pos:start="147:75" pos:end="147:75"><expr pos:start="147:75" pos:end="147:75"><literal type="number" pos:start="147:75" pos:end="147:75">1</literal></expr></argument>)</argument_list></call><operator pos:start="147:77" pos:end="147:78">&lt;&lt;</operator><literal type="number" pos:start="147:79" pos:end="147:79">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="147:82" pos:end="147:101">//FIXME check errors</comment>

            <if_stmt pos:start="149:13" pos:end="149:58"><if pos:start="149:13" pos:end="149:58">if<condition pos:start="149:15" pos:end="149:47">(<expr pos:start="149:16" pos:end="149:46"><name pos:start="149:16" pos:end="149:27"><name pos:start="149:16" pos:end="149:16">s</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:27">pict_type</name></name><operator pos:start="149:28" pos:end="149:29">==</operator><name pos:start="149:30" pos:end="149:46">AV_PICTURE_TYPE_P</name></expr>)</condition><block type="pseudo" pos:start="149:49" pos:end="149:58"><block_content pos:start="149:49" pos:end="149:58"> <expr_stmt pos:start="149:49" pos:end="149:58"><expr pos:start="149:49" pos:end="149:57"><name pos:start="149:49" pos:end="149:51">cbp</name><operator pos:start="149:52" pos:end="149:53">^=</operator><literal type="number" pos:start="149:54" pos:end="149:57">0x3C</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:37"><expr pos:start="153:9" pos:end="153:36"><operator pos:start="153:9" pos:end="153:9">*</operator><name pos:start="153:10" pos:end="153:20">mb_type_ptr</name> <operator pos:start="153:22" pos:end="153:22">=</operator> <name pos:start="153:24" pos:end="153:36">MB_TYPE_INTRA</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:38"><expr pos:start="159:5" pos:end="159:37"><call pos:start="159:5" pos:end="159:37"><name pos:start="159:5" pos:end="159:24"><name pos:start="159:5" pos:end="159:5">s</name><operator pos:start="159:6" pos:end="159:7">-&gt;</operator><name pos:start="159:8" pos:end="159:11">bdsp</name><operator pos:start="159:12" pos:end="159:12">.</operator><name pos:start="159:13" pos:end="159:24">clear_blocks</name></name><argument_list pos:start="159:25" pos:end="159:37">(<argument pos:start="159:26" pos:end="159:36"><expr pos:start="159:26" pos:end="159:36"><name pos:start="159:26" pos:end="159:36"><name pos:start="159:26" pos:end="159:26">s</name><operator pos:start="159:27" pos:end="159:28">-&gt;</operator><name pos:start="159:29" pos:end="159:33">block</name><index pos:start="159:34" pos:end="159:36">[<expr pos:start="159:35" pos:end="159:35"><literal type="number" pos:start="159:35" pos:end="159:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="161:5" pos:end="173:5">for <control pos:start="161:9" pos:end="161:27">(<init pos:start="161:10" pos:end="161:15"><expr pos:start="161:10" pos:end="161:14"><name pos:start="161:10" pos:end="161:10">i</name> <operator pos:start="161:12" pos:end="161:12">=</operator> <literal type="number" pos:start="161:14" pos:end="161:14">0</literal></expr>;</init> <condition pos:start="161:17" pos:end="161:22"><expr pos:start="161:17" pos:end="161:21"><name pos:start="161:17" pos:end="161:17">i</name> <operator pos:start="161:19" pos:end="161:19">&lt;</operator> <literal type="number" pos:start="161:21" pos:end="161:21">6</literal></expr>;</condition> <incr pos:start="161:24" pos:end="161:26"><expr pos:start="161:24" pos:end="161:26"><name pos:start="161:24" pos:end="161:24">i</name><operator pos:start="161:25" pos:end="161:26">++</operator></expr></incr>)</control> <block pos:start="161:29" pos:end="173:5">{<block_content pos:start="163:9" pos:end="171:9">

        <if_stmt pos:start="163:9" pos:end="171:9"><if pos:start="163:9" pos:end="171:9">if <condition pos:start="163:12" pos:end="163:84">(<expr pos:start="163:13" pos:end="163:83"><call pos:start="163:13" pos:end="163:79"><name pos:start="163:13" pos:end="163:35">ff_msmpeg4_decode_block</name><argument_list pos:start="163:36" pos:end="163:79">(<argument pos:start="163:37" pos:end="163:37"><expr pos:start="163:37" pos:end="163:37"><name pos:start="163:37" pos:end="163:37">s</name></expr></argument>, <argument pos:start="163:40" pos:end="163:47"><expr pos:start="163:40" pos:end="163:47"><name pos:start="163:40" pos:end="163:47"><name pos:start="163:40" pos:end="163:44">block</name><index pos:start="163:45" pos:end="163:47">[<expr pos:start="163:46" pos:end="163:46"><name pos:start="163:46" pos:end="163:46">i</name></expr>]</index></name></expr></argument>, <argument pos:start="163:50" pos:end="163:50"><expr pos:start="163:50" pos:end="163:50"><name pos:start="163:50" pos:end="163:50">i</name></expr></argument>, <argument pos:start="163:53" pos:end="163:72"><expr pos:start="163:53" pos:end="163:72"><operator pos:start="163:53" pos:end="163:53">(</operator><name pos:start="163:54" pos:end="163:56">cbp</name> <operator pos:start="163:58" pos:end="163:59">&gt;&gt;</operator> <operator pos:start="163:61" pos:end="163:61">(</operator><literal type="number" pos:start="163:62" pos:end="163:64">5</literal> <operator pos:start="163:64" pos:end="163:64">-</operator> <name pos:start="163:66" pos:end="163:66">i</name><operator pos:start="163:67" pos:end="163:67">)</operator><operator pos:start="163:68" pos:end="163:68">)</operator> <operator pos:start="163:70" pos:end="163:70">&amp;</operator> <literal type="number" pos:start="163:72" pos:end="163:72">1</literal></expr></argument>, <argument pos:start="163:75" pos:end="163:78"><expr pos:start="163:75" pos:end="163:78"><name pos:start="163:75" pos:end="163:78">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="163:81" pos:end="163:81">&lt;</operator> <literal type="number" pos:start="163:83" pos:end="163:83">0</literal></expr>)</condition>

        <block pos:start="165:9" pos:end="171:9">{<block_content pos:start="167:14" pos:end="169:23">

             <expr_stmt pos:start="167:14" pos:end="167:113"><expr pos:start="167:14" pos:end="167:112"><call pos:start="167:14" pos:end="167:112"><name pos:start="167:14" pos:end="167:19">av_log</name><argument_list pos:start="167:20" pos:end="167:112">(<argument pos:start="167:21" pos:end="167:28"><expr pos:start="167:21" pos:end="167:28"><name pos:start="167:21" pos:end="167:28"><name pos:start="167:21" pos:end="167:21">s</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:28">avctx</name></name></expr></argument>, <argument pos:start="167:31" pos:end="167:42"><expr pos:start="167:31" pos:end="167:42"><name pos:start="167:31" pos:end="167:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="167:45" pos:end="167:90"><expr pos:start="167:45" pos:end="167:90"><literal type="string" pos:start="167:45" pos:end="167:90">"\nerror while decoding block: %d x %d (%d)\n"</literal></expr></argument>, <argument pos:start="167:93" pos:end="167:99"><expr pos:start="167:93" pos:end="167:99"><name pos:start="167:93" pos:end="167:99"><name pos:start="167:93" pos:end="167:93">s</name><operator pos:start="167:94" pos:end="167:95">-&gt;</operator><name pos:start="167:96" pos:end="167:99">mb_x</name></name></expr></argument>, <argument pos:start="167:102" pos:end="167:108"><expr pos:start="167:102" pos:end="167:108"><name pos:start="167:102" pos:end="167:108"><name pos:start="167:102" pos:end="167:102">s</name><operator pos:start="167:103" pos:end="167:104">-&gt;</operator><name pos:start="167:105" pos:end="167:108">mb_y</name></name></expr></argument>, <argument pos:start="167:111" pos:end="167:111"><expr pos:start="167:111" pos:end="167:111"><name pos:start="167:111" pos:end="167:111">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             <return pos:start="169:14" pos:end="169:23">return <expr pos:start="169:21" pos:end="169:22"><operator pos:start="169:21" pos:end="169:21">-</operator><literal type="number" pos:start="169:22" pos:end="169:22">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="175:5" pos:end="175:13">return <expr pos:start="175:12" pos:end="175:12"><literal type="number" pos:start="175:12" pos:end="175:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
