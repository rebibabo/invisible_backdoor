<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6150.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">dxtory_decode_v2</name><parameter_list pos:start="1:28" pos:end="3:61">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:58">AVFrame</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pic</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:41">uint8_t</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:46">src</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:60"><decl pos:start="3:49" pos:end="3:60"><type pos:start="3:49" pos:end="3:60"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:60">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="147:1">{<block_content pos:start="7:5" pos:end="145:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18">GetByteContext</name></type> <name pos:start="7:20" pos:end="7:21">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type>  <name pos:start="9:20" pos:end="9:22">gb2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:55"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">nslices</name></decl>, <decl pos:start="11:18" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:22">slice</name></decl>, <decl pos:start="11:25" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:36">slice_height</name></decl>, <decl pos:start="11:39" pos:end="11:54"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:39" pos:end="11:54">ref_slice_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">cur_y</name></decl>, <decl pos:start="13:16" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:21">next_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:16">off</name></decl>, <decl pos:start="15:19" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:19" pos:end="15:28">slice_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:14">Y</name></decl>, <decl pos:start="17:17" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:13"><modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:18">U</name></decl>, <decl pos:start="17:21" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:13"><modifier pos:start="17:21" pos:end="17:21">*</modifier></type><name pos:start="17:22" pos:end="17:22">V</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><call pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:20">bytestream2_init</name><argument_list pos:start="23:21" pos:end="23:40">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:24">gb</name></expr></argument>, <argument pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><name pos:start="23:27" pos:end="23:29">src</name></expr></argument>, <argument pos:start="23:32" pos:end="23:39"><expr pos:start="23:32" pos:end="23:39"><name pos:start="23:32" pos:end="23:39">src_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:11">nslices</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:39"><name pos:start="25:15" pos:end="25:34">bytestream2_get_le16</name><argument_list pos:start="25:35" pos:end="25:39">(<argument pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><operator pos:start="25:36" pos:end="25:36">&amp;</operator><name pos:start="25:37" pos:end="25:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:7">off</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:38"><name pos:start="27:11" pos:end="27:17">FFALIGN</name><argument_list pos:start="27:18" pos:end="27:38">(<argument pos:start="27:19" pos:end="27:33"><expr pos:start="27:19" pos:end="27:33"><name pos:start="27:19" pos:end="27:25">nslices</name> <operator pos:start="27:27" pos:end="27:27">*</operator> <literal type="number" pos:start="27:29" pos:end="27:31">4</literal> <operator pos:start="27:31" pos:end="27:31">+</operator> <literal type="number" pos:start="27:33" pos:end="27:33">2</literal></expr></argument>, <argument pos:start="27:36" pos:end="27:37"><expr pos:start="27:36" pos:end="27:37"><literal type="number" pos:start="27:36" pos:end="27:37">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:16">src_size</name> <operator pos:start="29:18" pos:end="29:18">&lt;</operator> <name pos:start="29:20" pos:end="29:22">off</name></expr>)</condition> <block pos:start="29:25" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:35">

        <expr_stmt pos:start="31:9" pos:end="31:55"><expr pos:start="31:9" pos:end="31:54"><call pos:start="31:9" pos:end="31:54"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:54">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">avctx</name></expr></argument>, <argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:37" pos:end="31:53"><expr pos:start="31:37" pos:end="31:53"><literal type="string" pos:start="31:37" pos:end="31:53">"no slice data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:35">return <expr pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:44">(<expr pos:start="39:9" pos:end="39:43"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:16">nslices</name> <operator pos:start="39:18" pos:end="39:19">||</operator> <name pos:start="39:21" pos:end="39:33"><name pos:start="39:21" pos:end="39:25">avctx</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:33">height</name></name> <operator pos:start="39:35" pos:end="39:35">%</operator> <name pos:start="39:37" pos:end="39:43">nslices</name></expr>)</condition> <block pos:start="39:46" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:31">

        <expr_stmt pos:start="41:9" pos:end="43:59"><expr pos:start="41:9" pos:end="43:58"><call pos:start="41:9" pos:end="43:58"><name pos:start="41:9" pos:end="41:29">avpriv_request_sample</name><argument_list pos:start="41:30" pos:end="43:58">(<argument pos:start="41:31" pos:end="41:35"><expr pos:start="41:31" pos:end="41:35"><name pos:start="41:31" pos:end="41:35">avctx</name></expr></argument>, <argument pos:start="41:38" pos:end="41:58"><expr pos:start="41:38" pos:end="41:58"><literal type="string" pos:start="41:38" pos:end="41:58">"%d slices for %dx%d"</literal></expr></argument>, <argument pos:start="41:61" pos:end="41:67"><expr pos:start="41:61" pos:end="41:67"><name pos:start="41:61" pos:end="41:67">nslices</name></expr></argument>,

                              <argument pos:start="43:31" pos:end="43:42"><expr pos:start="43:31" pos:end="43:42"><name pos:start="43:31" pos:end="43:42"><name pos:start="43:31" pos:end="43:35">avctx</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:42">width</name></name></expr></argument>, <argument pos:start="43:45" pos:end="43:57"><expr pos:start="43:45" pos:end="43:57"><name pos:start="43:45" pos:end="43:57"><name pos:start="43:45" pos:end="43:49">avctx</name><operator pos:start="43:50" pos:end="43:51">-&gt;</operator><name pos:start="43:52" pos:end="43:57">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:47"><expr pos:start="51:5" pos:end="51:46"><name pos:start="51:5" pos:end="51:20">ref_slice_height</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:36"><name pos:start="51:24" pos:end="51:28">avctx</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:36">height</name></name> <operator pos:start="51:38" pos:end="51:38">/</operator> <name pos:start="51:40" pos:end="51:46">nslices</name></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:50">(<expr pos:start="53:9" pos:end="53:49"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:21"><name pos:start="53:10" pos:end="53:14">avctx</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:21">width</name></name> <operator pos:start="53:23" pos:end="53:23">&amp;</operator> <literal type="number" pos:start="53:25" pos:end="53:25">1</literal><operator pos:start="53:26" pos:end="53:26">)</operator> <operator pos:start="53:28" pos:end="53:29">||</operator> <operator pos:start="53:31" pos:end="53:31">(</operator><name pos:start="53:32" pos:end="53:44"><name pos:start="53:32" pos:end="53:36">avctx</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:44">height</name></name> <operator pos:start="53:46" pos:end="53:46">&amp;</operator> <literal type="number" pos:start="53:48" pos:end="53:48">1</literal><operator pos:start="53:49" pos:end="53:49">)</operator></expr>)</condition> <block pos:start="53:52" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:59">

        <expr_stmt pos:start="55:9" pos:end="57:59"><expr pos:start="55:9" pos:end="57:58"><call pos:start="55:9" pos:end="57:58"><name pos:start="55:9" pos:end="55:29">avpriv_request_sample</name><argument_list pos:start="55:30" pos:end="57:58">(<argument pos:start="55:31" pos:end="55:35"><expr pos:start="55:31" pos:end="55:35"><name pos:start="55:31" pos:end="55:35">avctx</name></expr></argument>, <argument pos:start="55:38" pos:end="55:61"><expr pos:start="55:38" pos:end="55:61"><literal type="string" pos:start="55:38" pos:end="55:61">"Frame dimensions %dx%d"</literal></expr></argument>,

                              <argument pos:start="57:31" pos:end="57:42"><expr pos:start="57:31" pos:end="57:42"><name pos:start="57:31" pos:end="57:42"><name pos:start="57:31" pos:end="57:35">avctx</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:42">width</name></name></expr></argument>, <argument pos:start="57:45" pos:end="57:57"><expr pos:start="57:45" pos:end="57:57"><name pos:start="57:45" pos:end="57:57"><name pos:start="57:45" pos:end="57:49">avctx</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:57">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:40"><expr pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:9">avctx</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:18">pix_fmt</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:39">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:19"><if pos:start="65:5" pos:end="67:19">if <condition pos:start="65:8" pos:end="65:49">(<expr pos:start="65:9" pos:end="65:48"><operator pos:start="65:9" pos:end="65:9">(</operator><name pos:start="65:10" pos:end="65:12">ret</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:43"><name pos:start="65:16" pos:end="65:28">ff_get_buffer</name><argument_list pos:start="65:29" pos:end="65:43">(<argument pos:start="65:30" pos:end="65:34"><expr pos:start="65:30" pos:end="65:34"><name pos:start="65:30" pos:end="65:34">avctx</name></expr></argument>, <argument pos:start="65:37" pos:end="65:39"><expr pos:start="65:37" pos:end="65:39"><name pos:start="65:37" pos:end="65:39">pic</name></expr></argument>, <argument pos:start="65:42" pos:end="65:42"><expr pos:start="65:42" pos:end="65:42"><literal type="number" pos:start="65:42" pos:end="65:42">0</literal></expr></argument>)</argument_list></call><operator pos:start="65:44" pos:end="65:44">)</operator> <operator pos:start="65:46" pos:end="65:46">&lt;</operator> <literal type="number" pos:start="65:48" pos:end="65:48">0</literal></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:19"><block_content pos:start="67:9" pos:end="67:19">

        <return pos:start="67:9" pos:end="67:19">return <expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:21"><expr pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:5">Y</name> <operator pos:start="71:7" pos:end="71:7">=</operator> <name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:11">pic</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:17">data</name><index pos:start="71:18" pos:end="71:20">[<expr pos:start="71:19" pos:end="71:19"><literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:21"><expr pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:5">U</name> <operator pos:start="73:7" pos:end="73:7">=</operator> <name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:11">pic</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:17">data</name><index pos:start="73:18" pos:end="73:20">[<expr pos:start="73:19" pos:end="73:19"><literal type="number" pos:start="73:19" pos:end="73:19">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:21"><expr pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:5">V</name> <operator pos:start="75:7" pos:end="75:7">=</operator> <name pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:11">pic</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:17">data</name><index pos:start="75:18" pos:end="75:20">[<expr pos:start="75:19" pos:end="75:19"><literal type="number" pos:start="75:19" pos:end="75:19">2</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:15"><expr pos:start="79:5" pos:end="79:14"><name pos:start="79:5" pos:end="79:9">cur_y</name>  <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:30"><expr pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:10">next_y</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <name pos:start="81:14" pos:end="81:29">ref_slice_height</name></expr>;</expr_stmt>

    <for pos:start="83:5" pos:end="141:5">for <control pos:start="83:9" pos:end="83:45">(<init pos:start="83:10" pos:end="83:19"><expr pos:start="83:10" pos:end="83:18"><name pos:start="83:10" pos:end="83:14">slice</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>;</init> <condition pos:start="83:21" pos:end="83:36"><expr pos:start="83:21" pos:end="83:35"><name pos:start="83:21" pos:end="83:25">slice</name> <operator pos:start="83:27" pos:end="83:27">&lt;</operator> <name pos:start="83:29" pos:end="83:35">nslices</name></expr>;</condition> <incr pos:start="83:38" pos:end="83:44"><expr pos:start="83:38" pos:end="83:44"><name pos:start="83:38" pos:end="83:42">slice</name><operator pos:start="83:43" pos:end="83:44">++</operator></expr></incr>)</control> <block pos:start="83:47" pos:end="141:5">{<block_content pos:start="85:9" pos:end="139:35">

        <expr_stmt pos:start="85:9" pos:end="85:49"><expr pos:start="85:9" pos:end="85:48"><name pos:start="85:9" pos:end="85:18">slice_size</name>   <operator pos:start="85:22" pos:end="85:22">=</operator> <call pos:start="85:24" pos:end="85:48"><name pos:start="85:24" pos:end="85:43">bytestream2_get_le32</name><argument_list pos:start="85:44" pos:end="85:48">(<argument pos:start="85:45" pos:end="85:47"><expr pos:start="85:45" pos:end="85:47"><operator pos:start="85:45" pos:end="85:45">&amp;</operator><name pos:start="85:46" pos:end="85:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:52"><expr pos:start="87:9" pos:end="87:51"><name pos:start="87:9" pos:end="87:20">slice_height</name> <operator pos:start="87:22" pos:end="87:22">=</operator> <operator pos:start="87:24" pos:end="87:24">(</operator><name pos:start="87:25" pos:end="87:30">next_y</name> <operator pos:start="87:32" pos:end="87:32">&amp;</operator> <operator pos:start="87:34" pos:end="87:34">~</operator><literal type="number" pos:start="87:35" pos:end="87:35">1</literal><operator pos:start="87:36" pos:end="87:36">)</operator> <operator pos:start="87:38" pos:end="87:38">-</operator> <operator pos:start="87:40" pos:end="87:40">(</operator><name pos:start="87:41" pos:end="87:45">cur_y</name> <operator pos:start="87:47" pos:end="87:47">&amp;</operator> <operator pos:start="87:49" pos:end="87:49">~</operator><literal type="number" pos:start="87:50" pos:end="87:50">1</literal><operator pos:start="87:51" pos:end="87:51">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="99:9"><if pos:start="89:9" pos:end="99:9">if <condition pos:start="89:12" pos:end="89:40">(<expr pos:start="89:13" pos:end="89:39"><name pos:start="89:13" pos:end="89:22">slice_size</name> <operator pos:start="89:24" pos:end="89:24">&gt;</operator> <name pos:start="89:26" pos:end="89:33">src_size</name> <operator pos:start="89:35" pos:end="89:35">-</operator> <name pos:start="89:37" pos:end="89:39">off</name></expr>)</condition> <block pos:start="89:42" pos:end="99:9">{<block_content pos:start="91:13" pos:end="97:39">

            <expr_stmt pos:start="91:13" pos:end="95:47"><expr pos:start="91:13" pos:end="95:46"><call pos:start="91:13" pos:end="95:46"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="95:46">(<argument pos:start="91:20" pos:end="91:24"><expr pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:24">avctx</name></expr></argument>, <argument pos:start="91:27" pos:end="91:38"><expr pos:start="91:27" pos:end="91:38"><name pos:start="91:27" pos:end="91:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="93:20" pos:end="93:65"><expr pos:start="93:20" pos:end="93:65"><literal type="string" pos:start="93:20" pos:end="93:65">"invalid slice size %d (only %d bytes left)\n"</literal></expr></argument>,

                   <argument pos:start="95:20" pos:end="95:29"><expr pos:start="95:20" pos:end="95:29"><name pos:start="95:20" pos:end="95:29">slice_size</name></expr></argument>, <argument pos:start="95:32" pos:end="95:45"><expr pos:start="95:32" pos:end="95:45"><name pos:start="95:32" pos:end="95:39">src_size</name> <operator pos:start="95:41" pos:end="95:41">-</operator> <name pos:start="95:43" pos:end="95:45">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="97:13" pos:end="97:39">return <expr pos:start="97:20" pos:end="97:38"><name pos:start="97:20" pos:end="97:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:29">(<expr pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:22">slice_size</name> <operator pos:start="101:24" pos:end="101:25">&lt;=</operator> <literal type="number" pos:start="101:27" pos:end="101:28">16</literal></expr>)</condition> <block pos:start="101:31" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:39">

            <expr_stmt pos:start="103:13" pos:end="103:79"><expr pos:start="103:13" pos:end="103:78"><call pos:start="103:13" pos:end="103:78"><name pos:start="103:13" pos:end="103:18">av_log</name><argument_list pos:start="103:19" pos:end="103:78">(<argument pos:start="103:20" pos:end="103:24"><expr pos:start="103:20" pos:end="103:24"><name pos:start="103:20" pos:end="103:24">avctx</name></expr></argument>, <argument pos:start="103:27" pos:end="103:38"><expr pos:start="103:27" pos:end="103:38"><name pos:start="103:27" pos:end="103:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:41" pos:end="103:65"><expr pos:start="103:41" pos:end="103:65"><literal type="string" pos:start="103:41" pos:end="103:65">"invalid slice size %d\n"</literal></expr></argument>, <argument pos:start="103:68" pos:end="103:77"><expr pos:start="103:68" pos:end="103:77"><name pos:start="103:68" pos:end="103:77">slice_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="105:13" pos:end="105:39">return <expr pos:start="105:20" pos:end="105:38"><name pos:start="105:20" pos:end="105:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="111:9" pos:end="119:9"><if pos:start="111:9" pos:end="119:9">if <condition pos:start="111:12" pos:end="111:50">(<expr pos:start="111:13" pos:end="111:49"><call pos:start="111:13" pos:end="111:30"><name pos:start="111:13" pos:end="111:19">AV_RL32</name><argument_list pos:start="111:20" pos:end="111:30">(<argument pos:start="111:21" pos:end="111:29"><expr pos:start="111:21" pos:end="111:29"><name pos:start="111:21" pos:end="111:23">src</name> <operator pos:start="111:25" pos:end="111:25">+</operator> <name pos:start="111:27" pos:end="111:29">off</name></expr></argument>)</argument_list></call> <operator pos:start="111:32" pos:end="111:33">!=</operator> <name pos:start="111:35" pos:end="111:44">slice_size</name> <operator pos:start="111:46" pos:end="111:46">-</operator> <literal type="number" pos:start="111:48" pos:end="111:49">16</literal></expr>)</condition> <block pos:start="111:52" pos:end="119:9">{<block_content pos:start="113:13" pos:end="117:56">

            <expr_stmt pos:start="113:13" pos:end="117:56"><expr pos:start="113:13" pos:end="117:55"><call pos:start="113:13" pos:end="117:55"><name pos:start="113:13" pos:end="113:18">av_log</name><argument_list pos:start="113:19" pos:end="117:55">(<argument pos:start="113:20" pos:end="113:24"><expr pos:start="113:20" pos:end="113:24"><name pos:start="113:20" pos:end="113:24">avctx</name></expr></argument>, <argument pos:start="113:27" pos:end="113:38"><expr pos:start="113:27" pos:end="113:38"><name pos:start="113:27" pos:end="113:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="115:20" pos:end="115:65"><expr pos:start="115:20" pos:end="115:65"><literal type="string" pos:start="115:20" pos:end="115:65">"Slice sizes mismatch: got %d instead of %d\n"</literal></expr></argument>,

                   <argument pos:start="117:20" pos:end="117:37"><expr pos:start="117:20" pos:end="117:37"><call pos:start="117:20" pos:end="117:37"><name pos:start="117:20" pos:end="117:26">AV_RL32</name><argument_list pos:start="117:27" pos:end="117:37">(<argument pos:start="117:28" pos:end="117:36"><expr pos:start="117:28" pos:end="117:36"><name pos:start="117:28" pos:end="117:30">src</name> <operator pos:start="117:32" pos:end="117:32">+</operator> <name pos:start="117:34" pos:end="117:36">off</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:40" pos:end="117:54"><expr pos:start="117:40" pos:end="117:54"><name pos:start="117:40" pos:end="117:49">slice_size</name> <operator pos:start="117:51" pos:end="117:51">-</operator> <literal type="number" pos:start="117:53" pos:end="117:54">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:67"><expr pos:start="121:9" pos:end="121:66"><call pos:start="121:9" pos:end="121:66"><name pos:start="121:9" pos:end="121:21">init_get_bits</name><argument_list pos:start="121:22" pos:end="121:66">(<argument pos:start="121:23" pos:end="121:26"><expr pos:start="121:23" pos:end="121:26"><operator pos:start="121:23" pos:end="121:23">&amp;</operator><name pos:start="121:24" pos:end="121:26">gb2</name></expr></argument>, <argument pos:start="121:29" pos:end="121:42"><expr pos:start="121:29" pos:end="121:42"><name pos:start="121:29" pos:end="121:31">src</name> <operator pos:start="121:33" pos:end="121:33">+</operator> <name pos:start="121:35" pos:end="121:37">off</name> <operator pos:start="121:39" pos:end="121:39">+</operator> <literal type="number" pos:start="121:41" pos:end="121:42">16</literal></expr></argument>, <argument pos:start="121:45" pos:end="121:65"><expr pos:start="121:45" pos:end="121:65"><operator pos:start="121:45" pos:end="121:45">(</operator><name pos:start="121:46" pos:end="121:55">slice_size</name> <operator pos:start="121:57" pos:end="121:57">-</operator> <literal type="number" pos:start="121:59" pos:end="121:60">16</literal><operator pos:start="121:61" pos:end="121:61">)</operator> <operator pos:start="121:63" pos:end="121:63">*</operator> <literal type="number" pos:start="121:65" pos:end="121:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="125:79"><expr pos:start="123:9" pos:end="125:78"><call pos:start="123:9" pos:end="125:78"><name pos:start="123:9" pos:end="123:24">dx2_decode_slice</name><argument_list pos:start="123:25" pos:end="125:78">(<argument pos:start="123:26" pos:end="123:29"><expr pos:start="123:26" pos:end="123:29"><operator pos:start="123:26" pos:end="123:26">&amp;</operator><name pos:start="123:27" pos:end="123:29">gb2</name></expr></argument>, <argument pos:start="123:32" pos:end="123:43"><expr pos:start="123:32" pos:end="123:43"><name pos:start="123:32" pos:end="123:43"><name pos:start="123:32" pos:end="123:36">avctx</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:43">width</name></name></expr></argument>, <argument pos:start="123:46" pos:end="123:57"><expr pos:start="123:46" pos:end="123:57"><name pos:start="123:46" pos:end="123:57">slice_height</name></expr></argument>, <argument pos:start="123:60" pos:end="123:60"><expr pos:start="123:60" pos:end="123:60"><name pos:start="123:60" pos:end="123:60">Y</name></expr></argument>, <argument pos:start="123:63" pos:end="123:63"><expr pos:start="123:63" pos:end="123:63"><name pos:start="123:63" pos:end="123:63">U</name></expr></argument>, <argument pos:start="123:66" pos:end="123:66"><expr pos:start="123:66" pos:end="123:66"><name pos:start="123:66" pos:end="123:66">V</name></expr></argument>,

                         <argument pos:start="125:26" pos:end="125:41"><expr pos:start="125:26" pos:end="125:41"><name pos:start="125:26" pos:end="125:41"><name pos:start="125:26" pos:end="125:28">pic</name><operator pos:start="125:29" pos:end="125:30">-&gt;</operator><name pos:start="125:31" pos:end="125:38">linesize</name><index pos:start="125:39" pos:end="125:41">[<expr pos:start="125:40" pos:end="125:40"><literal type="number" pos:start="125:40" pos:end="125:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:44" pos:end="125:59"><expr pos:start="125:44" pos:end="125:59"><name pos:start="125:44" pos:end="125:59"><name pos:start="125:44" pos:end="125:46">pic</name><operator pos:start="125:47" pos:end="125:48">-&gt;</operator><name pos:start="125:49" pos:end="125:56">linesize</name><index pos:start="125:57" pos:end="125:59">[<expr pos:start="125:58" pos:end="125:58"><literal type="number" pos:start="125:58" pos:end="125:58">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:62" pos:end="125:77"><expr pos:start="125:62" pos:end="125:77"><name pos:start="125:62" pos:end="125:77"><name pos:start="125:62" pos:end="125:64">pic</name><operator pos:start="125:65" pos:end="125:66">-&gt;</operator><name pos:start="125:67" pos:end="125:74">linesize</name><index pos:start="125:75" pos:end="125:77">[<expr pos:start="125:76" pos:end="125:76"><literal type="number" pos:start="125:76" pos:end="125:76">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:46"><expr pos:start="129:9" pos:end="129:45"><name pos:start="129:9" pos:end="129:9">Y</name> <operator pos:start="129:11" pos:end="129:12">+=</operator> <name pos:start="129:14" pos:end="129:29"><name pos:start="129:14" pos:end="129:16">pic</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:26">linesize</name><index pos:start="129:27" pos:end="129:29">[<expr pos:start="129:28" pos:end="129:28"><literal type="number" pos:start="129:28" pos:end="129:28">0</literal></expr>]</index></name> <operator pos:start="129:31" pos:end="129:31">*</operator>  <name pos:start="129:34" pos:end="129:45">slice_height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:52"><expr pos:start="131:9" pos:end="131:51"><name pos:start="131:9" pos:end="131:9">U</name> <operator pos:start="131:11" pos:end="131:12">+=</operator> <name pos:start="131:14" pos:end="131:29"><name pos:start="131:14" pos:end="131:16">pic</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:26">linesize</name><index pos:start="131:27" pos:end="131:29">[<expr pos:start="131:28" pos:end="131:28"><literal type="number" pos:start="131:28" pos:end="131:28">1</literal></expr>]</index></name> <operator pos:start="131:31" pos:end="131:31">*</operator> <operator pos:start="131:33" pos:end="131:33">(</operator><name pos:start="131:34" pos:end="131:45">slice_height</name> <operator pos:start="131:47" pos:end="131:48">&gt;&gt;</operator> <literal type="number" pos:start="131:50" pos:end="131:50">1</literal><operator pos:start="131:51" pos:end="131:51">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:52"><expr pos:start="133:9" pos:end="133:51"><name pos:start="133:9" pos:end="133:9">V</name> <operator pos:start="133:11" pos:end="133:12">+=</operator> <name pos:start="133:14" pos:end="133:29"><name pos:start="133:14" pos:end="133:16">pic</name><operator pos:start="133:17" pos:end="133:18">-&gt;</operator><name pos:start="133:19" pos:end="133:26">linesize</name><index pos:start="133:27" pos:end="133:29">[<expr pos:start="133:28" pos:end="133:28"><literal type="number" pos:start="133:28" pos:end="133:28">2</literal></expr>]</index></name> <operator pos:start="133:31" pos:end="133:31">*</operator> <operator pos:start="133:33" pos:end="133:33">(</operator><name pos:start="133:34" pos:end="133:45">slice_height</name> <operator pos:start="133:47" pos:end="133:48">&gt;&gt;</operator> <literal type="number" pos:start="133:50" pos:end="133:50">1</literal><operator pos:start="133:51" pos:end="133:51">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:26"><expr pos:start="135:9" pos:end="135:25"><name pos:start="135:9" pos:end="135:11">off</name> <operator pos:start="135:13" pos:end="135:14">+=</operator> <name pos:start="135:16" pos:end="135:25">slice_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:25"><expr pos:start="137:9" pos:end="137:24"><name pos:start="137:9" pos:end="137:13">cur_y</name>   <operator pos:start="137:17" pos:end="137:17">=</operator> <name pos:start="137:19" pos:end="137:24">next_y</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:35"><expr pos:start="139:9" pos:end="139:34"><name pos:start="139:9" pos:end="139:14">next_y</name> <operator pos:start="139:16" pos:end="139:17">+=</operator> <name pos:start="139:19" pos:end="139:34">ref_slice_height</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="145:5" pos:end="145:13">return <expr pos:start="145:12" pos:end="145:12"><literal type="number" pos:start="145:12" pos:end="145:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
