<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9027.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">uhci_port_test</name><parameter_list pos:start="1:20" pos:end="1:62">(<parameter pos:start="1:21" pos:end="1:34"><decl pos:start="1:21" pos:end="1:34"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:30"><name pos:start="1:21" pos:end="1:26">struct</name> <name pos:start="1:28" pos:end="1:30">qhc</name></name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:34">hc</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:44"><decl pos:start="1:37" pos:end="1:44"><type pos:start="1:37" pos:end="1:44"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:44">port</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:54">uint16_t</name></type> <name pos:start="1:56" pos:end="1:61">expect</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="15:1">{<block_content pos:start="5:5" pos:end="13:48">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">void</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:14">addr</name> <init pos:start="5:16" pos:end="5:43">= <expr pos:start="5:18" pos:end="5:43"><name pos:start="5:18" pos:end="5:25"><name pos:start="5:18" pos:end="5:19">hc</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:25">base</name></name> <operator pos:start="5:27" pos:end="5:27">+</operator> <literal type="number" pos:start="5:29" pos:end="5:34">0x10</literal> <operator pos:start="5:34" pos:end="5:34">+</operator> <literal type="number" pos:start="5:36" pos:end="5:36">2</literal> <operator pos:start="5:38" pos:end="5:38">*</operator> <name pos:start="5:40" pos:end="5:43">port</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:18">value</name> <init pos:start="7:20" pos:end="7:49">= <expr pos:start="7:22" pos:end="7:49"><call pos:start="7:22" pos:end="7:49"><name pos:start="7:22" pos:end="7:34">qpci_io_readw</name><argument_list pos:start="7:35" pos:end="7:49">(<argument pos:start="7:36" pos:end="7:42"><expr pos:start="7:36" pos:end="7:42"><name pos:start="7:36" pos:end="7:42"><name pos:start="7:36" pos:end="7:37">hc</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:42">dev</name></name></expr></argument>, <argument pos:start="7:45" pos:end="7:48"><expr pos:start="7:45" pos:end="7:48"><name pos:start="7:45" pos:end="7:48">addr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:63"><decl pos:start="9:5" pos:end="9:62"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:17">mask</name> <init pos:start="9:19" pos:end="9:62">= <expr pos:start="9:21" pos:end="9:62"><operator pos:start="9:21" pos:end="9:21">~</operator><operator pos:start="9:22" pos:end="9:22">(</operator><name pos:start="9:23" pos:end="9:43">UHCI_PORT_WRITE_CLEAR</name> <operator pos:start="9:45" pos:end="9:45">|</operator> <name pos:start="9:47" pos:end="9:61">UHCI_PORT_RSVD1</name><operator pos:start="9:62" pos:end="9:62">)</operator></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:48"><expr pos:start="13:5" pos:end="13:47"><call pos:start="13:5" pos:end="13:47"><name pos:start="13:5" pos:end="13:12">g_assert</name><argument_list pos:start="13:13" pos:end="13:47">(<argument pos:start="13:14" pos:end="13:46"><expr pos:start="13:14" pos:end="13:46"><operator pos:start="13:14" pos:end="13:14">(</operator><name pos:start="13:15" pos:end="13:19">value</name> <operator pos:start="13:21" pos:end="13:21">&amp;</operator> <name pos:start="13:23" pos:end="13:26">mask</name><operator pos:start="13:27" pos:end="13:27">)</operator> <operator pos:start="13:29" pos:end="13:30">==</operator> <operator pos:start="13:32" pos:end="13:32">(</operator><name pos:start="13:33" pos:end="13:38">expect</name> <operator pos:start="13:40" pos:end="13:40">&amp;</operator> <name pos:start="13:42" pos:end="13:45">mask</name><operator pos:start="13:46" pos:end="13:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
