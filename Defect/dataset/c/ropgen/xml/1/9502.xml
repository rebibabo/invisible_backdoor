<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9502.c" pos:tabs="8"><function pos:start="1:1" pos:end="362:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">ff_jpegls_decode_picture</name><parameter_list pos:start="1:29" pos:end="3:58">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:47">MJpegDecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:60"><decl pos:start="1:53" pos:end="1:60"><type pos:start="1:53" pos:end="1:60"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:60">near</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:48"><decl pos:start="3:30" pos:end="3:48"><type pos:start="3:30" pos:end="3:48"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:48">point_transform</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:57"><decl pos:start="3:51" pos:end="3:57"><type pos:start="3:51" pos:end="3:57"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:57">ilv</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="362:1">{<block_content pos:start="7:5" pos:end="360:15">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">t</name> <init pos:start="7:14" pos:end="7:16">= <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">zero</name></decl>, <decl pos:start="9:20" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:24">last</name></decl>, <decl pos:start="9:27" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:30">cur</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">JLSState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:19">state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">off</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>, <decl pos:start="13:18" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:23">stride</name> <init pos:start="13:25" pos:end="13:27">= <expr pos:start="13:27" pos:end="13:27"><literal type="number" pos:start="13:27" pos:end="13:27">1</literal></expr></init></decl>, <decl pos:start="13:30" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:30" pos:end="13:34">width</name></decl>, <decl pos:start="13:37" pos:end="13:41"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:37" pos:end="13:41">shift</name></decl>, <decl pos:start="13:44" pos:end="13:50"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:44" pos:end="13:46">ret</name> <init pos:start="13:48" pos:end="13:50">= <expr pos:start="13:50" pos:end="13:50"><literal type="number" pos:start="13:50" pos:end="13:50">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:51"><expr pos:start="17:5" pos:end="17:50"><name pos:start="17:5" pos:end="17:8">zero</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:50"><name pos:start="17:12" pos:end="17:21">av_mallocz</name><argument_list pos:start="17:22" pos:end="17:50">(<argument pos:start="17:23" pos:end="17:49"><expr pos:start="17:23" pos:end="17:49"><name pos:start="17:23" pos:end="17:49"><name pos:start="17:23" pos:end="17:23">s</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:36">picture_ptr</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:46">linesize</name><index pos:start="17:47" pos:end="17:49">[<expr pos:start="17:48" pos:end="17:48"><literal type="number" pos:start="17:48" pos:end="17:48">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:14">(<expr pos:start="19:9" pos:end="19:13"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:13">zero</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:16"><expr pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:8">last</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:15">zero</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:7">cur</name>  <operator pos:start="25:10" pos:end="25:10">=</operator> <name pos:start="25:12" pos:end="25:34"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:25">picture_ptr</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:31">data</name><index pos:start="25:32" pos:end="25:34">[<expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:41"><expr pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:9">state</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:22">av_mallocz</name><argument_list pos:start="29:23" pos:end="29:40">(<argument pos:start="29:24" pos:end="29:39"><expr pos:start="29:24" pos:end="29:39"><sizeof pos:start="29:24" pos:end="29:39">sizeof<argument_list pos:start="29:30" pos:end="29:39">(<argument pos:start="29:31" pos:end="29:38"><expr pos:start="29:31" pos:end="29:38"><name pos:start="29:31" pos:end="29:38">JLSState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:15">(<expr pos:start="31:9" pos:end="31:14"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:14">state</name></expr>)</condition> <block pos:start="31:17" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:31">

        <expr_stmt pos:start="33:9" pos:end="33:22"><expr pos:start="33:9" pos:end="33:21"><call pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:15">av_free</name><argument_list pos:start="33:16" pos:end="33:21">(<argument pos:start="33:17" pos:end="33:20"><expr pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:20">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:31">return <expr pos:start="35:16" pos:end="35:30"><call pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:22">AVERROR</name><argument_list pos:start="35:23" pos:end="35:30">(<argument pos:start="35:24" pos:end="35:29"><expr pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="39:5" pos:end="39:55">/* initialize JPEG-LS state from JPEG parameters */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:9">state</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:15">near</name></name>   <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:24">near</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:48"><expr pos:start="43:5" pos:end="43:47"><name pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:9">state</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:14">bpp</name></name>    <operator pos:start="43:19" pos:end="43:19">=</operator> <ternary pos:start="43:21" pos:end="43:47"><condition pos:start="43:21" pos:end="43:35"><expr pos:start="43:21" pos:end="43:33"><operator pos:start="43:21" pos:end="43:21">(</operator><name pos:start="43:22" pos:end="43:28"><name pos:start="43:22" pos:end="43:22">s</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:28">bits</name></name> <operator pos:start="43:30" pos:end="43:30">&lt;</operator> <literal type="number" pos:start="43:32" pos:end="43:32">2</literal><operator pos:start="43:33" pos:end="43:33">)</operator></expr> ?</condition><then pos:start="43:37" pos:end="43:37"> <expr pos:start="43:37" pos:end="43:37"><literal type="number" pos:start="43:37" pos:end="43:37">2</literal></expr> </then><else pos:start="43:39" pos:end="43:47">: <expr pos:start="43:41" pos:end="43:47"><name pos:start="43:41" pos:end="43:47"><name pos:start="43:41" pos:end="43:41">s</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:47">bits</name></name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:9">state</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:17">maxval</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:29"><name pos:start="45:21" pos:end="45:21">s</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:29">maxval</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:26"><expr pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:13"><name pos:start="47:5" pos:end="47:9">state</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:13">T1</name></name>     <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:25"><name pos:start="47:21" pos:end="47:21">s</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:25">t1</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:9">state</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:13">T2</name></name>     <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:25"><name pos:start="49:21" pos:end="49:21">s</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:25">t2</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:26"><expr pos:start="51:5" pos:end="51:25"><name pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:9">state</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:13">T3</name></name>     <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:25"><name pos:start="51:21" pos:end="51:21">s</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:25">t3</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:9">state</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:16">reset</name></name>  <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:28"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:28">reset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:48"><expr pos:start="55:5" pos:end="55:47"><call pos:start="55:5" pos:end="55:47"><name pos:start="55:5" pos:end="55:37">ff_jpegls_reset_coding_parameters</name><argument_list pos:start="55:38" pos:end="55:47">(<argument pos:start="55:39" pos:end="55:43"><expr pos:start="55:39" pos:end="55:43"><name pos:start="55:39" pos:end="55:43">state</name></expr></argument>, <argument pos:start="55:46" pos:end="55:46"><expr pos:start="55:46" pos:end="55:46"><literal type="number" pos:start="55:46" pos:end="55:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:32"><expr pos:start="57:5" pos:end="57:31"><call pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:24">ff_jpegls_init_state</name><argument_list pos:start="57:25" pos:end="57:31">(<argument pos:start="57:26" pos:end="57:30"><expr pos:start="57:26" pos:end="57:30"><name pos:start="57:26" pos:end="57:30">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="67:49"><if pos:start="61:5" pos:end="63:48">if <condition pos:start="61:8" pos:end="61:21">(<expr pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:15">bits</name></name> <operator pos:start="61:17" pos:end="61:18">&lt;=</operator> <literal type="number" pos:start="61:20" pos:end="61:20">8</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:48"><block_content pos:start="63:9" pos:end="63:48">

        <expr_stmt pos:start="63:9" pos:end="63:48"><expr pos:start="63:9" pos:end="63:47"><name pos:start="63:9" pos:end="63:13">shift</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:31">point_transform</name> <operator pos:start="63:33" pos:end="63:33">+</operator> <operator pos:start="63:35" pos:end="63:35">(</operator><literal type="number" pos:start="63:36" pos:end="63:38">8</literal> <operator pos:start="63:38" pos:end="63:38">-</operator> <name pos:start="63:40" pos:end="63:46"><name pos:start="63:40" pos:end="63:40">s</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:46">bits</name></name><operator pos:start="63:47" pos:end="63:47">)</operator></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="65:5" pos:end="67:49">else<block type="pseudo" pos:start="67:9" pos:end="67:49"><block_content pos:start="67:9" pos:end="67:49">

        <expr_stmt pos:start="67:9" pos:end="67:49"><expr pos:start="67:9" pos:end="67:48"><name pos:start="67:9" pos:end="67:13">shift</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <name pos:start="67:17" pos:end="67:31">point_transform</name> <operator pos:start="67:33" pos:end="67:33">+</operator> <operator pos:start="67:35" pos:end="67:35">(</operator><literal type="number" pos:start="67:36" pos:end="67:39">16</literal> <operator pos:start="67:39" pos:end="67:39">-</operator> <name pos:start="67:41" pos:end="67:47"><name pos:start="67:41" pos:end="67:41">s</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:47">bits</name></name><operator pos:start="67:48" pos:end="67:48">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="71:5" pos:end="76:5"><if pos:start="71:5" pos:end="76:5">if <condition pos:start="71:8" pos:end="71:20">(<expr pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:13">shift</name> <operator pos:start="71:15" pos:end="71:16">&gt;=</operator> <literal type="number" pos:start="71:18" pos:end="71:19">16</literal></expr>)</condition> <block pos:start="71:22" pos:end="76:5">{<block_content pos:start="73:9" pos:end="73:34">

        <expr_stmt pos:start="73:9" pos:end="73:34"><expr pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <name pos:start="73:15" pos:end="73:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="80:5" pos:end="98:5"><if pos:start="80:5" pos:end="98:5">if <condition pos:start="80:8" pos:end="80:45">(<expr pos:start="80:9" pos:end="80:44"><name pos:start="80:9" pos:end="80:23"><name pos:start="80:9" pos:end="80:9">s</name><operator pos:start="80:10" pos:end="80:11">-&gt;</operator><name pos:start="80:12" pos:end="80:16">avctx</name><operator pos:start="80:17" pos:end="80:18">-&gt;</operator><name pos:start="80:19" pos:end="80:23">debug</name></name> <operator pos:start="80:25" pos:end="80:25">&amp;</operator> <name pos:start="80:27" pos:end="80:44">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="80:47" pos:end="98:5">{<block_content pos:start="82:9" pos:end="96:60">

        <expr_stmt pos:start="82:9" pos:end="92:71"><expr pos:start="82:9" pos:end="92:70"><call pos:start="82:9" pos:end="92:70"><name pos:start="82:9" pos:end="82:14">av_log</name><argument_list pos:start="82:15" pos:end="92:70">(<argument pos:start="82:16" pos:end="82:23"><expr pos:start="82:16" pos:end="82:23"><name pos:start="82:16" pos:end="82:23"><name pos:start="82:16" pos:end="82:16">s</name><operator pos:start="82:17" pos:end="82:18">-&gt;</operator><name pos:start="82:19" pos:end="82:23">avctx</name></name></expr></argument>, <argument pos:start="82:26" pos:end="82:37"><expr pos:start="82:26" pos:end="82:37"><name pos:start="82:26" pos:end="82:37">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="84:16" pos:end="86:56"><expr pos:start="84:16" pos:end="86:56"><literal type="string" pos:start="84:16" pos:end="84:65">"JPEG-LS params: %ix%i NEAR=%i MV=%i T(%i,%i,%i) "</literal>

               <literal type="string" pos:start="86:16" pos:end="86:56">"RESET=%i, LIMIT=%i, qbpp=%i, RANGE=%i\n"</literal></expr></argument>,

                <argument pos:start="88:17" pos:end="88:24"><expr pos:start="88:17" pos:end="88:24"><name pos:start="88:17" pos:end="88:24"><name pos:start="88:17" pos:end="88:17">s</name><operator pos:start="88:18" pos:end="88:19">-&gt;</operator><name pos:start="88:20" pos:end="88:24">width</name></name></expr></argument>, <argument pos:start="88:27" pos:end="88:35"><expr pos:start="88:27" pos:end="88:35"><name pos:start="88:27" pos:end="88:35"><name pos:start="88:27" pos:end="88:27">s</name><operator pos:start="88:28" pos:end="88:29">-&gt;</operator><name pos:start="88:30" pos:end="88:35">height</name></name></expr></argument>, <argument pos:start="88:38" pos:end="88:48"><expr pos:start="88:38" pos:end="88:48"><name pos:start="88:38" pos:end="88:48"><name pos:start="88:38" pos:end="88:42">state</name><operator pos:start="88:43" pos:end="88:44">-&gt;</operator><name pos:start="88:45" pos:end="88:48">near</name></name></expr></argument>, <argument pos:start="88:51" pos:end="88:63"><expr pos:start="88:51" pos:end="88:63"><name pos:start="88:51" pos:end="88:63"><name pos:start="88:51" pos:end="88:55">state</name><operator pos:start="88:56" pos:end="88:57">-&gt;</operator><name pos:start="88:58" pos:end="88:63">maxval</name></name></expr></argument>,

                <argument pos:start="90:17" pos:end="90:25"><expr pos:start="90:17" pos:end="90:25"><name pos:start="90:17" pos:end="90:25"><name pos:start="90:17" pos:end="90:21">state</name><operator pos:start="90:22" pos:end="90:23">-&gt;</operator><name pos:start="90:24" pos:end="90:25">T1</name></name></expr></argument>, <argument pos:start="90:28" pos:end="90:36"><expr pos:start="90:28" pos:end="90:36"><name pos:start="90:28" pos:end="90:36"><name pos:start="90:28" pos:end="90:32">state</name><operator pos:start="90:33" pos:end="90:34">-&gt;</operator><name pos:start="90:35" pos:end="90:36">T2</name></name></expr></argument>, <argument pos:start="90:39" pos:end="90:47"><expr pos:start="90:39" pos:end="90:47"><name pos:start="90:39" pos:end="90:47"><name pos:start="90:39" pos:end="90:43">state</name><operator pos:start="90:44" pos:end="90:45">-&gt;</operator><name pos:start="90:46" pos:end="90:47">T3</name></name></expr></argument>,

                <argument pos:start="92:17" pos:end="92:28"><expr pos:start="92:17" pos:end="92:28"><name pos:start="92:17" pos:end="92:28"><name pos:start="92:17" pos:end="92:21">state</name><operator pos:start="92:22" pos:end="92:23">-&gt;</operator><name pos:start="92:24" pos:end="92:28">reset</name></name></expr></argument>, <argument pos:start="92:31" pos:end="92:42"><expr pos:start="92:31" pos:end="92:42"><name pos:start="92:31" pos:end="92:42"><name pos:start="92:31" pos:end="92:35">state</name><operator pos:start="92:36" pos:end="92:37">-&gt;</operator><name pos:start="92:38" pos:end="92:42">limit</name></name></expr></argument>, <argument pos:start="92:45" pos:end="92:55"><expr pos:start="92:45" pos:end="92:55"><name pos:start="92:45" pos:end="92:55"><name pos:start="92:45" pos:end="92:49">state</name><operator pos:start="92:50" pos:end="92:51">-&gt;</operator><name pos:start="92:52" pos:end="92:55">qbpp</name></name></expr></argument>, <argument pos:start="92:58" pos:end="92:69"><expr pos:start="92:58" pos:end="92:69"><name pos:start="92:58" pos:end="92:69"><name pos:start="92:58" pos:end="92:62">state</name><operator pos:start="92:63" pos:end="92:64">-&gt;</operator><name pos:start="92:65" pos:end="92:69">range</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="94:9" pos:end="96:60"><expr pos:start="94:9" pos:end="96:59"><call pos:start="94:9" pos:end="96:59"><name pos:start="94:9" pos:end="94:14">av_log</name><argument_list pos:start="94:15" pos:end="96:59">(<argument pos:start="94:16" pos:end="94:23"><expr pos:start="94:16" pos:end="94:23"><name pos:start="94:16" pos:end="94:23"><name pos:start="94:16" pos:end="94:16">s</name><operator pos:start="94:17" pos:end="94:18">-&gt;</operator><name pos:start="94:19" pos:end="94:23">avctx</name></name></expr></argument>, <argument pos:start="94:26" pos:end="94:37"><expr pos:start="94:26" pos:end="94:37"><name pos:start="94:26" pos:end="94:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="94:40" pos:end="94:86"><expr pos:start="94:40" pos:end="94:86"><literal type="string" pos:start="94:40" pos:end="94:86">"JPEG params: ILV=%i Pt=%i BPP=%i, scan = %i\n"</literal></expr></argument>,

                <argument pos:start="96:17" pos:end="96:19"><expr pos:start="96:17" pos:end="96:19"><name pos:start="96:17" pos:end="96:19">ilv</name></expr></argument>, <argument pos:start="96:22" pos:end="96:36"><expr pos:start="96:22" pos:end="96:36"><name pos:start="96:22" pos:end="96:36">point_transform</name></expr></argument>, <argument pos:start="96:39" pos:end="96:45"><expr pos:start="96:39" pos:end="96:45"><name pos:start="96:39" pos:end="96:45"><name pos:start="96:39" pos:end="96:39">s</name><operator pos:start="96:40" pos:end="96:41">-&gt;</operator><name pos:start="96:42" pos:end="96:45">bits</name></name></expr></argument>, <argument pos:start="96:48" pos:end="96:58"><expr pos:start="96:48" pos:end="96:58"><name pos:start="96:48" pos:end="96:58"><name pos:start="96:48" pos:end="96:48">s</name><operator pos:start="96:49" pos:end="96:50">-&gt;</operator><name pos:start="96:51" pos:end="96:58">cur_scan</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="100:5" pos:end="105:5"><if pos:start="100:5" pos:end="105:5">if <condition pos:start="100:8" pos:end="100:42">(<expr pos:start="100:9" pos:end="100:41"><call pos:start="100:9" pos:end="100:29"><name pos:start="100:9" pos:end="100:21">get_bits_left</name><argument_list pos:start="100:22" pos:end="100:29">(<argument pos:start="100:23" pos:end="100:28"><expr pos:start="100:23" pos:end="100:28"><operator pos:start="100:23" pos:end="100:23">&amp;</operator><name pos:start="100:24" pos:end="100:28"><name pos:start="100:24" pos:end="100:24">s</name><operator pos:start="100:25" pos:end="100:26">-&gt;</operator><name pos:start="100:27" pos:end="100:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="100:31" pos:end="100:31">&lt;</operator> <name pos:start="100:33" pos:end="100:41"><name pos:start="100:33" pos:end="100:33">s</name><operator pos:start="100:34" pos:end="100:35">-&gt;</operator><name pos:start="100:36" pos:end="100:41">height</name></name></expr>)</condition> <block pos:start="100:44" pos:end="105:5">{<block_content pos:start="102:9" pos:end="102:34">

        <expr_stmt pos:start="102:9" pos:end="102:34"><expr pos:start="102:9" pos:end="102:33"><name pos:start="102:9" pos:end="102:11">ret</name> <operator pos:start="102:13" pos:end="102:13">=</operator> <name pos:start="102:15" pos:end="102:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="206:5"><if pos:start="107:5" pos:end="156:5">if <condition pos:start="107:8" pos:end="107:17">(<expr pos:start="107:9" pos:end="107:16"><name pos:start="107:9" pos:end="107:11">ilv</name> <operator pos:start="107:13" pos:end="107:14">==</operator> <literal type="number" pos:start="107:16" pos:end="107:16">0</literal></expr>)</condition> <block pos:start="107:19" pos:end="156:5">{<block_content pos:start="109:9" pos:end="154:9"> <comment type="block" pos:start="107:21" pos:end="107:41">/* separate planes */</comment>

        <if_stmt pos:start="109:9" pos:end="114:9"><if pos:start="109:9" pos:end="114:9">if <condition pos:start="109:12" pos:end="109:43">(<expr pos:start="109:13" pos:end="109:42"><name pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:23">cur_scan</name></name> <operator pos:start="109:25" pos:end="109:25">&gt;</operator> <name pos:start="109:27" pos:end="109:42"><name pos:start="109:27" pos:end="109:27">s</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:42">nb_components</name></name></expr>)</condition> <block pos:start="109:45" pos:end="114:9">{<block_content pos:start="111:13" pos:end="111:38">

            <expr_stmt pos:start="111:13" pos:end="111:38"><expr pos:start="111:13" pos:end="111:37"><name pos:start="111:13" pos:end="111:15">ret</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <name pos:start="111:19" pos:end="111:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>


        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="116:9" pos:end="116:48"><expr pos:start="116:9" pos:end="116:47"><name pos:start="116:9" pos:end="116:14">stride</name> <operator pos:start="116:16" pos:end="116:16">=</operator> <ternary pos:start="116:18" pos:end="116:47"><condition pos:start="116:18" pos:end="116:41"><expr pos:start="116:18" pos:end="116:39"><operator pos:start="116:18" pos:end="116:18">(</operator><name pos:start="116:19" pos:end="116:34"><name pos:start="116:19" pos:end="116:19">s</name><operator pos:start="116:20" pos:end="116:21">-&gt;</operator><name pos:start="116:22" pos:end="116:34">nb_components</name></name> <operator pos:start="116:36" pos:end="116:36">&gt;</operator> <literal type="number" pos:start="116:38" pos:end="116:38">1</literal><operator pos:start="116:39" pos:end="116:39">)</operator></expr> ?</condition><then pos:start="116:43" pos:end="116:43"> <expr pos:start="116:43" pos:end="116:43"><literal type="number" pos:start="116:43" pos:end="116:43">3</literal></expr> </then><else pos:start="116:45" pos:end="116:47">: <expr pos:start="116:47" pos:end="116:47"><literal type="number" pos:start="116:47" pos:end="116:47">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="118:9" pos:end="118:57"><expr pos:start="118:9" pos:end="118:56"><name pos:start="118:9" pos:end="118:11">off</name>    <operator pos:start="118:16" pos:end="118:16">=</operator> <call pos:start="118:18" pos:end="118:56"><name pos:start="118:18" pos:end="118:24">av_clip</name><argument_list pos:start="118:25" pos:end="118:56">(<argument pos:start="118:26" pos:end="118:40"><expr pos:start="118:26" pos:end="118:40"><name pos:start="118:26" pos:end="118:36"><name pos:start="118:26" pos:end="118:26">s</name><operator pos:start="118:27" pos:end="118:28">-&gt;</operator><name pos:start="118:29" pos:end="118:36">cur_scan</name></name> <operator pos:start="118:38" pos:end="118:38">-</operator> <literal type="number" pos:start="118:40" pos:end="118:40">1</literal></expr></argument>, <argument pos:start="118:43" pos:end="118:43"><expr pos:start="118:43" pos:end="118:43"><literal type="number" pos:start="118:43" pos:end="118:43">0</literal></expr></argument>, <argument pos:start="118:46" pos:end="118:55"><expr pos:start="118:46" pos:end="118:55"><name pos:start="118:46" pos:end="118:51">stride</name> <operator pos:start="118:53" pos:end="118:53">-</operator> <literal type="number" pos:start="118:55" pos:end="118:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="120:9" pos:end="120:35"><expr pos:start="120:9" pos:end="120:34"><name pos:start="120:9" pos:end="120:13">width</name>  <operator pos:start="120:16" pos:end="120:16">=</operator> <name pos:start="120:18" pos:end="120:25"><name pos:start="120:18" pos:end="120:18">s</name><operator pos:start="120:19" pos:end="120:20">-&gt;</operator><name pos:start="120:21" pos:end="120:25">width</name></name> <operator pos:start="120:27" pos:end="120:27">*</operator> <name pos:start="120:29" pos:end="120:34">stride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="122:9" pos:end="122:21"><expr pos:start="122:9" pos:end="122:20"><name pos:start="122:9" pos:end="122:11">cur</name>   <operator pos:start="122:15" pos:end="122:16">+=</operator> <name pos:start="122:18" pos:end="122:20">off</name></expr>;</expr_stmt>

        <for pos:start="124:9" pos:end="154:9">for <control pos:start="124:13" pos:end="124:39">(<init pos:start="124:14" pos:end="124:19"><expr pos:start="124:14" pos:end="124:18"><name pos:start="124:14" pos:end="124:14">i</name> <operator pos:start="124:16" pos:end="124:16">=</operator> <literal type="number" pos:start="124:18" pos:end="124:18">0</literal></expr>;</init> <condition pos:start="124:21" pos:end="124:34"><expr pos:start="124:21" pos:end="124:33"><name pos:start="124:21" pos:end="124:21">i</name> <operator pos:start="124:23" pos:end="124:23">&lt;</operator> <name pos:start="124:25" pos:end="124:33"><name pos:start="124:25" pos:end="124:25">s</name><operator pos:start="124:26" pos:end="124:27">-&gt;</operator><name pos:start="124:28" pos:end="124:33">height</name></name></expr>;</condition> <incr pos:start="124:36" pos:end="124:38"><expr pos:start="124:36" pos:end="124:38"><name pos:start="124:36" pos:end="124:36">i</name><operator pos:start="124:37" pos:end="124:38">++</operator></expr></incr>)</control> <block pos:start="124:41" pos:end="154:9">{<block_content pos:start="126:13" pos:end="152:13">

            <if_stmt pos:start="126:13" pos:end="138:13"><if pos:start="126:13" pos:end="132:13">if <condition pos:start="126:16" pos:end="126:29">(<expr pos:start="126:17" pos:end="126:28"><name pos:start="126:17" pos:end="126:23"><name pos:start="126:17" pos:end="126:17">s</name><operator pos:start="126:18" pos:end="126:19">-&gt;</operator><name pos:start="126:20" pos:end="126:23">bits</name></name> <operator pos:start="126:25" pos:end="126:26">&lt;=</operator> <literal type="number" pos:start="126:28" pos:end="126:28">8</literal></expr>)</condition> <block pos:start="126:31" pos:end="132:13">{<block_content pos:start="128:17" pos:end="130:28">

                <expr_stmt pos:start="128:17" pos:end="128:78"><expr pos:start="128:17" pos:end="128:77"><call pos:start="128:17" pos:end="128:77"><name pos:start="128:17" pos:end="128:30">ls_decode_line</name><argument_list pos:start="128:31" pos:end="128:77">(<argument pos:start="128:32" pos:end="128:36"><expr pos:start="128:32" pos:end="128:36"><name pos:start="128:32" pos:end="128:36">state</name></expr></argument>, <argument pos:start="128:39" pos:end="128:39"><expr pos:start="128:39" pos:end="128:39"><name pos:start="128:39" pos:end="128:39">s</name></expr></argument>, <argument pos:start="128:42" pos:end="128:45"><expr pos:start="128:42" pos:end="128:45"><name pos:start="128:42" pos:end="128:45">last</name></expr></argument>, <argument pos:start="128:48" pos:end="128:50"><expr pos:start="128:48" pos:end="128:50"><name pos:start="128:48" pos:end="128:50">cur</name></expr></argument>, <argument pos:start="128:53" pos:end="128:53"><expr pos:start="128:53" pos:end="128:53"><name pos:start="128:53" pos:end="128:53">t</name></expr></argument>, <argument pos:start="128:56" pos:end="128:60"><expr pos:start="128:56" pos:end="128:60"><name pos:start="128:56" pos:end="128:60">width</name></expr></argument>, <argument pos:start="128:63" pos:end="128:68"><expr pos:start="128:63" pos:end="128:68"><name pos:start="128:63" pos:end="128:68">stride</name></expr></argument>, <argument pos:start="128:71" pos:end="128:73"><expr pos:start="128:71" pos:end="128:73"><name pos:start="128:71" pos:end="128:73">off</name></expr></argument>, <argument pos:start="128:76" pos:end="128:76"><expr pos:start="128:76" pos:end="128:76"><literal type="number" pos:start="128:76" pos:end="128:76">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="130:17" pos:end="130:28"><expr pos:start="130:17" pos:end="130:27"><name pos:start="130:17" pos:end="130:17">t</name> <operator pos:start="130:19" pos:end="130:19">=</operator> <name pos:start="130:21" pos:end="130:27"><name pos:start="130:21" pos:end="130:24">last</name><index pos:start="130:25" pos:end="130:27">[<expr pos:start="130:26" pos:end="130:26"><literal type="number" pos:start="130:26" pos:end="130:26">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="132:15" pos:end="138:13">else <block pos:start="132:20" pos:end="138:13">{<block_content pos:start="134:17" pos:end="136:40">

                <expr_stmt pos:start="134:17" pos:end="134:79"><expr pos:start="134:17" pos:end="134:78"><call pos:start="134:17" pos:end="134:78"><name pos:start="134:17" pos:end="134:30">ls_decode_line</name><argument_list pos:start="134:31" pos:end="134:78">(<argument pos:start="134:32" pos:end="134:36"><expr pos:start="134:32" pos:end="134:36"><name pos:start="134:32" pos:end="134:36">state</name></expr></argument>, <argument pos:start="134:39" pos:end="134:39"><expr pos:start="134:39" pos:end="134:39"><name pos:start="134:39" pos:end="134:39">s</name></expr></argument>, <argument pos:start="134:42" pos:end="134:45"><expr pos:start="134:42" pos:end="134:45"><name pos:start="134:42" pos:end="134:45">last</name></expr></argument>, <argument pos:start="134:48" pos:end="134:50"><expr pos:start="134:48" pos:end="134:50"><name pos:start="134:48" pos:end="134:50">cur</name></expr></argument>, <argument pos:start="134:53" pos:end="134:53"><expr pos:start="134:53" pos:end="134:53"><name pos:start="134:53" pos:end="134:53">t</name></expr></argument>, <argument pos:start="134:56" pos:end="134:60"><expr pos:start="134:56" pos:end="134:60"><name pos:start="134:56" pos:end="134:60">width</name></expr></argument>, <argument pos:start="134:63" pos:end="134:68"><expr pos:start="134:63" pos:end="134:68"><name pos:start="134:63" pos:end="134:68">stride</name></expr></argument>, <argument pos:start="134:71" pos:end="134:73"><expr pos:start="134:71" pos:end="134:73"><name pos:start="134:71" pos:end="134:73">off</name></expr></argument>, <argument pos:start="134:76" pos:end="134:77"><expr pos:start="134:76" pos:end="134:77"><literal type="number" pos:start="134:76" pos:end="134:77">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="136:17" pos:end="136:40"><expr pos:start="136:17" pos:end="136:39"><name pos:start="136:17" pos:end="136:17">t</name> <operator pos:start="136:19" pos:end="136:19">=</operator> <operator pos:start="136:21" pos:end="136:21">*</operator><operator pos:start="136:22" pos:end="136:22">(</operator><operator pos:start="136:23" pos:end="136:23">(</operator><name pos:start="136:24" pos:end="136:31">uint16_t</name> <operator pos:start="136:33" pos:end="136:33">*</operator><operator pos:start="136:34" pos:end="136:34">)</operator><name pos:start="136:35" pos:end="136:38">last</name><operator pos:start="136:39" pos:end="136:39">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="140:13" pos:end="140:23"><expr pos:start="140:13" pos:end="140:22"><name pos:start="140:13" pos:end="140:16">last</name> <operator pos:start="140:18" pos:end="140:18">=</operator> <name pos:start="140:20" pos:end="140:22">cur</name></expr>;</expr_stmt>

            <expr_stmt pos:start="142:13" pos:end="142:47"><expr pos:start="142:13" pos:end="142:46"><name pos:start="142:13" pos:end="142:15">cur</name> <operator pos:start="142:17" pos:end="142:18">+=</operator> <name pos:start="142:20" pos:end="142:46"><name pos:start="142:20" pos:end="142:20">s</name><operator pos:start="142:21" pos:end="142:22">-&gt;</operator><name pos:start="142:23" pos:end="142:33">picture_ptr</name><operator pos:start="142:34" pos:end="142:35">-&gt;</operator><name pos:start="142:36" pos:end="142:43">linesize</name><index pos:start="142:44" pos:end="142:46">[<expr pos:start="142:45" pos:end="142:45"><literal type="number" pos:start="142:45" pos:end="142:45">0</literal></expr>]</index></name></expr>;</expr_stmt>



            <if_stmt pos:start="146:13" pos:end="152:13"><if pos:start="146:13" pos:end="152:13">if <condition pos:start="146:16" pos:end="146:59">(<expr pos:start="146:17" pos:end="146:58"><name pos:start="146:17" pos:end="146:35"><name pos:start="146:17" pos:end="146:17">s</name><operator pos:start="146:18" pos:end="146:19">-&gt;</operator><name pos:start="146:20" pos:end="146:35">restart_interval</name></name> <operator pos:start="146:37" pos:end="146:38">&amp;&amp;</operator> <operator pos:start="146:40" pos:end="146:40">!</operator><operator pos:start="146:41" pos:end="146:42">--</operator><name pos:start="146:43" pos:end="146:58"><name pos:start="146:43" pos:end="146:43">s</name><operator pos:start="146:44" pos:end="146:45">-&gt;</operator><name pos:start="146:46" pos:end="146:58">restart_count</name></name></expr>)</condition> <block pos:start="146:61" pos:end="152:13">{<block_content pos:start="148:17" pos:end="150:38">

                <expr_stmt pos:start="148:17" pos:end="148:39"><expr pos:start="148:17" pos:end="148:38"><call pos:start="148:17" pos:end="148:38"><name pos:start="148:17" pos:end="148:30">align_get_bits</name><argument_list pos:start="148:31" pos:end="148:38">(<argument pos:start="148:32" pos:end="148:37"><expr pos:start="148:32" pos:end="148:37"><operator pos:start="148:32" pos:end="148:32">&amp;</operator><name pos:start="148:33" pos:end="148:37"><name pos:start="148:33" pos:end="148:33">s</name><operator pos:start="148:34" pos:end="148:35">-&gt;</operator><name pos:start="148:36" pos:end="148:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="150:17" pos:end="150:38"><expr pos:start="150:17" pos:end="150:37"><call pos:start="150:17" pos:end="150:37"><name pos:start="150:17" pos:end="150:25">skip_bits</name><argument_list pos:start="150:26" pos:end="150:37">(<argument pos:start="150:27" pos:end="150:32"><expr pos:start="150:27" pos:end="150:32"><operator pos:start="150:27" pos:end="150:27">&amp;</operator><name pos:start="150:28" pos:end="150:32"><name pos:start="150:28" pos:end="150:28">s</name><operator pos:start="150:29" pos:end="150:30">-&gt;</operator><name pos:start="150:31" pos:end="150:32">gb</name></name></expr></argument>, <argument pos:start="150:35" pos:end="150:36"><expr pos:start="150:35" pos:end="150:36"><literal type="number" pos:start="150:35" pos:end="150:36">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="150:40" pos:end="150:54">/* skip RSTn */</comment>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="156:7" pos:end="196:5">else if <condition pos:start="156:15" pos:end="156:24">(<expr pos:start="156:16" pos:end="156:23"><name pos:start="156:16" pos:end="156:18">ilv</name> <operator pos:start="156:20" pos:end="156:21">==</operator> <literal type="number" pos:start="156:23" pos:end="156:23">1</literal></expr>)</condition> <block pos:start="156:26" pos:end="196:5">{<block_content pos:start="158:9" pos:end="194:9"> <comment type="block" pos:start="156:28" pos:end="156:50">/* line interleaving */</comment>

        <decl_stmt pos:start="158:9" pos:end="158:14"><decl pos:start="158:9" pos:end="158:13"><type pos:start="158:9" pos:end="158:11"><name pos:start="158:9" pos:end="158:11">int</name></type> <name pos:start="158:13" pos:end="158:13">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="160:9" pos:end="160:32"><decl pos:start="160:9" pos:end="160:31"><type pos:start="160:9" pos:end="160:11"><name pos:start="160:9" pos:end="160:11">int</name></type> <name pos:start="160:13" pos:end="160:17"><name pos:start="160:13" pos:end="160:14">Rc</name><index pos:start="160:15" pos:end="160:17">[<expr pos:start="160:16" pos:end="160:16"><literal type="number" pos:start="160:16" pos:end="160:16">3</literal></expr>]</index></name> <init pos:start="160:19" pos:end="160:31">= <expr pos:start="160:21" pos:end="160:31"><block pos:start="160:21" pos:end="160:31">{ <expr pos:start="160:23" pos:end="160:23"><literal type="number" pos:start="160:23" pos:end="160:23">0</literal></expr>, <expr pos:start="160:26" pos:end="160:26"><literal type="number" pos:start="160:26" pos:end="160:26">0</literal></expr>, <expr pos:start="160:29" pos:end="160:29"><literal type="number" pos:start="160:29" pos:end="160:29">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="162:9" pos:end="162:48"><expr pos:start="162:9" pos:end="162:47"><name pos:start="162:9" pos:end="162:14">stride</name> <operator pos:start="162:16" pos:end="162:16">=</operator> <ternary pos:start="162:18" pos:end="162:47"><condition pos:start="162:18" pos:end="162:41"><expr pos:start="162:18" pos:end="162:39"><operator pos:start="162:18" pos:end="162:18">(</operator><name pos:start="162:19" pos:end="162:34"><name pos:start="162:19" pos:end="162:19">s</name><operator pos:start="162:20" pos:end="162:21">-&gt;</operator><name pos:start="162:22" pos:end="162:34">nb_components</name></name> <operator pos:start="162:36" pos:end="162:36">&gt;</operator> <literal type="number" pos:start="162:38" pos:end="162:38">1</literal><operator pos:start="162:39" pos:end="162:39">)</operator></expr> ?</condition><then pos:start="162:43" pos:end="162:43"> <expr pos:start="162:43" pos:end="162:43"><literal type="number" pos:start="162:43" pos:end="162:43">3</literal></expr> </then><else pos:start="162:45" pos:end="162:47">: <expr pos:start="162:47" pos:end="162:47"><literal type="number" pos:start="162:47" pos:end="162:47">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="164:9" pos:end="164:52"><expr pos:start="164:9" pos:end="164:51"><call pos:start="164:9" pos:end="164:51"><name pos:start="164:9" pos:end="164:14">memset</name><argument_list pos:start="164:15" pos:end="164:51">(<argument pos:start="164:16" pos:end="164:18"><expr pos:start="164:16" pos:end="164:18"><name pos:start="164:16" pos:end="164:18">cur</name></expr></argument>, <argument pos:start="164:21" pos:end="164:21"><expr pos:start="164:21" pos:end="164:21"><literal type="number" pos:start="164:21" pos:end="164:21">0</literal></expr></argument>, <argument pos:start="164:24" pos:end="164:50"><expr pos:start="164:24" pos:end="164:50"><name pos:start="164:24" pos:end="164:50"><name pos:start="164:24" pos:end="164:24">s</name><operator pos:start="164:25" pos:end="164:26">-&gt;</operator><name pos:start="164:27" pos:end="164:37">picture_ptr</name><operator pos:start="164:38" pos:end="164:39">-&gt;</operator><name pos:start="164:40" pos:end="164:47">linesize</name><index pos:start="164:48" pos:end="164:50">[<expr pos:start="164:49" pos:end="164:49"><literal type="number" pos:start="164:49" pos:end="164:49">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="166:9" pos:end="166:34"><expr pos:start="166:9" pos:end="166:33"><name pos:start="166:9" pos:end="166:13">width</name> <operator pos:start="166:15" pos:end="166:15">=</operator> <name pos:start="166:17" pos:end="166:24"><name pos:start="166:17" pos:end="166:17">s</name><operator pos:start="166:18" pos:end="166:19">-&gt;</operator><name pos:start="166:20" pos:end="166:24">width</name></name> <operator pos:start="166:26" pos:end="166:26">*</operator> <name pos:start="166:28" pos:end="166:33">stride</name></expr>;</expr_stmt>

        <for pos:start="168:9" pos:end="194:9">for <control pos:start="168:13" pos:end="168:39">(<init pos:start="168:14" pos:end="168:19"><expr pos:start="168:14" pos:end="168:18"><name pos:start="168:14" pos:end="168:14">i</name> <operator pos:start="168:16" pos:end="168:16">=</operator> <literal type="number" pos:start="168:18" pos:end="168:18">0</literal></expr>;</init> <condition pos:start="168:21" pos:end="168:34"><expr pos:start="168:21" pos:end="168:33"><name pos:start="168:21" pos:end="168:21">i</name> <operator pos:start="168:23" pos:end="168:23">&lt;</operator> <name pos:start="168:25" pos:end="168:33"><name pos:start="168:25" pos:end="168:25">s</name><operator pos:start="168:26" pos:end="168:27">-&gt;</operator><name pos:start="168:28" pos:end="168:33">height</name></name></expr>;</condition> <incr pos:start="168:36" pos:end="168:38"><expr pos:start="168:36" pos:end="168:38"><name pos:start="168:36" pos:end="168:36">i</name><operator pos:start="168:37" pos:end="168:38">++</operator></expr></incr>)</control> <block pos:start="168:41" pos:end="194:9">{<block_content pos:start="170:13" pos:end="192:47">

            <for pos:start="170:13" pos:end="188:13">for <control pos:start="170:17" pos:end="170:40">(<init pos:start="170:18" pos:end="170:23"><expr pos:start="170:18" pos:end="170:22"><name pos:start="170:18" pos:end="170:18">j</name> <operator pos:start="170:20" pos:end="170:20">=</operator> <literal type="number" pos:start="170:22" pos:end="170:22">0</literal></expr>;</init> <condition pos:start="170:25" pos:end="170:35"><expr pos:start="170:25" pos:end="170:34"><name pos:start="170:25" pos:end="170:25">j</name> <operator pos:start="170:27" pos:end="170:27">&lt;</operator> <name pos:start="170:29" pos:end="170:34">stride</name></expr>;</condition> <incr pos:start="170:37" pos:end="170:39"><expr pos:start="170:37" pos:end="170:39"><name pos:start="170:37" pos:end="170:37">j</name><operator pos:start="170:38" pos:end="170:39">++</operator></expr></incr>)</control> <block pos:start="170:42" pos:end="188:13">{<block_content pos:start="172:17" pos:end="186:17">

                <expr_stmt pos:start="172:17" pos:end="174:59"><expr pos:start="172:17" pos:end="174:58"><call pos:start="172:17" pos:end="174:58"><name pos:start="172:17" pos:end="172:30">ls_decode_line</name><argument_list pos:start="172:31" pos:end="174:58">(<argument pos:start="172:32" pos:end="172:36"><expr pos:start="172:32" pos:end="172:36"><name pos:start="172:32" pos:end="172:36">state</name></expr></argument>, <argument pos:start="172:39" pos:end="172:39"><expr pos:start="172:39" pos:end="172:39"><name pos:start="172:39" pos:end="172:39">s</name></expr></argument>, <argument pos:start="172:42" pos:end="172:49"><expr pos:start="172:42" pos:end="172:49"><name pos:start="172:42" pos:end="172:45">last</name> <operator pos:start="172:47" pos:end="172:47">+</operator> <name pos:start="172:49" pos:end="172:49">j</name></expr></argument>, <argument pos:start="172:52" pos:end="172:58"><expr pos:start="172:52" pos:end="172:58"><name pos:start="172:52" pos:end="172:54">cur</name> <operator pos:start="172:56" pos:end="172:56">+</operator> <name pos:start="172:58" pos:end="172:58">j</name></expr></argument>,

                               <argument pos:start="174:32" pos:end="174:36"><expr pos:start="174:32" pos:end="174:36"><name pos:start="174:32" pos:end="174:36"><name pos:start="174:32" pos:end="174:33">Rc</name><index pos:start="174:34" pos:end="174:36">[<expr pos:start="174:35" pos:end="174:35"><name pos:start="174:35" pos:end="174:35">j</name></expr>]</index></name></expr></argument>, <argument pos:start="174:39" pos:end="174:43"><expr pos:start="174:39" pos:end="174:43"><name pos:start="174:39" pos:end="174:43">width</name></expr></argument>, <argument pos:start="174:46" pos:end="174:51"><expr pos:start="174:46" pos:end="174:51"><name pos:start="174:46" pos:end="174:51">stride</name></expr></argument>, <argument pos:start="174:54" pos:end="174:54"><expr pos:start="174:54" pos:end="174:54"><name pos:start="174:54" pos:end="174:54">j</name></expr></argument>, <argument pos:start="174:57" pos:end="174:57"><expr pos:start="174:57" pos:end="174:57"><literal type="number" pos:start="174:57" pos:end="174:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="176:17" pos:end="176:32"><expr pos:start="176:17" pos:end="176:31"><name pos:start="176:17" pos:end="176:21"><name pos:start="176:17" pos:end="176:18">Rc</name><index pos:start="176:19" pos:end="176:21">[<expr pos:start="176:20" pos:end="176:20"><name pos:start="176:20" pos:end="176:20">j</name></expr>]</index></name> <operator pos:start="176:23" pos:end="176:23">=</operator> <name pos:start="176:25" pos:end="176:31"><name pos:start="176:25" pos:end="176:28">last</name><index pos:start="176:29" pos:end="176:31">[<expr pos:start="176:30" pos:end="176:30"><name pos:start="176:30" pos:end="176:30">j</name></expr>]</index></name></expr>;</expr_stmt>



                <if_stmt pos:start="180:17" pos:end="186:17"><if pos:start="180:17" pos:end="186:17">if <condition pos:start="180:20" pos:end="180:63">(<expr pos:start="180:21" pos:end="180:62"><name pos:start="180:21" pos:end="180:39"><name pos:start="180:21" pos:end="180:21">s</name><operator pos:start="180:22" pos:end="180:23">-&gt;</operator><name pos:start="180:24" pos:end="180:39">restart_interval</name></name> <operator pos:start="180:41" pos:end="180:42">&amp;&amp;</operator> <operator pos:start="180:44" pos:end="180:44">!</operator><operator pos:start="180:45" pos:end="180:46">--</operator><name pos:start="180:47" pos:end="180:62"><name pos:start="180:47" pos:end="180:47">s</name><operator pos:start="180:48" pos:end="180:49">-&gt;</operator><name pos:start="180:50" pos:end="180:62">restart_count</name></name></expr>)</condition> <block pos:start="180:65" pos:end="186:17">{<block_content pos:start="182:21" pos:end="184:42">

                    <expr_stmt pos:start="182:21" pos:end="182:43"><expr pos:start="182:21" pos:end="182:42"><call pos:start="182:21" pos:end="182:42"><name pos:start="182:21" pos:end="182:34">align_get_bits</name><argument_list pos:start="182:35" pos:end="182:42">(<argument pos:start="182:36" pos:end="182:41"><expr pos:start="182:36" pos:end="182:41"><operator pos:start="182:36" pos:end="182:36">&amp;</operator><name pos:start="182:37" pos:end="182:41"><name pos:start="182:37" pos:end="182:37">s</name><operator pos:start="182:38" pos:end="182:39">-&gt;</operator><name pos:start="182:40" pos:end="182:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="184:21" pos:end="184:42"><expr pos:start="184:21" pos:end="184:41"><call pos:start="184:21" pos:end="184:41"><name pos:start="184:21" pos:end="184:29">skip_bits</name><argument_list pos:start="184:30" pos:end="184:41">(<argument pos:start="184:31" pos:end="184:36"><expr pos:start="184:31" pos:end="184:36"><operator pos:start="184:31" pos:end="184:31">&amp;</operator><name pos:start="184:32" pos:end="184:36"><name pos:start="184:32" pos:end="184:32">s</name><operator pos:start="184:33" pos:end="184:34">-&gt;</operator><name pos:start="184:35" pos:end="184:36">gb</name></name></expr></argument>, <argument pos:start="184:39" pos:end="184:40"><expr pos:start="184:39" pos:end="184:40"><literal type="number" pos:start="184:39" pos:end="184:40">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="184:44" pos:end="184:58">/* skip RSTn */</comment>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="190:13" pos:end="190:23"><expr pos:start="190:13" pos:end="190:22"><name pos:start="190:13" pos:end="190:16">last</name> <operator pos:start="190:18" pos:end="190:18">=</operator> <name pos:start="190:20" pos:end="190:22">cur</name></expr>;</expr_stmt>

            <expr_stmt pos:start="192:13" pos:end="192:47"><expr pos:start="192:13" pos:end="192:46"><name pos:start="192:13" pos:end="192:15">cur</name> <operator pos:start="192:17" pos:end="192:18">+=</operator> <name pos:start="192:20" pos:end="192:46"><name pos:start="192:20" pos:end="192:20">s</name><operator pos:start="192:21" pos:end="192:22">-&gt;</operator><name pos:start="192:23" pos:end="192:33">picture_ptr</name><operator pos:start="192:34" pos:end="192:35">-&gt;</operator><name pos:start="192:36" pos:end="192:43">linesize</name><index pos:start="192:44" pos:end="192:46">[<expr pos:start="192:45" pos:end="192:45"><literal type="number" pos:start="192:45" pos:end="192:45">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="196:7" pos:end="206:5">else if <condition pos:start="196:15" pos:end="196:24">(<expr pos:start="196:16" pos:end="196:23"><name pos:start="196:16" pos:end="196:18">ilv</name> <operator pos:start="196:20" pos:end="196:21">==</operator> <literal type="number" pos:start="196:23" pos:end="196:23">2</literal></expr>)</condition> <block pos:start="196:26" pos:end="206:5">{<block_content pos:start="198:9" pos:end="198:77"> <comment type="block" pos:start="196:28" pos:end="196:52">/* sample interleaving */</comment>

        <expr_stmt pos:start="198:9" pos:end="198:77"><expr pos:start="198:9" pos:end="198:76"><call pos:start="198:9" pos:end="198:76"><name pos:start="198:9" pos:end="198:37">avpriv_report_missing_feature</name><argument_list pos:start="198:38" pos:end="198:76">(<argument pos:start="198:39" pos:end="198:46"><expr pos:start="198:39" pos:end="198:46"><name pos:start="198:39" pos:end="198:46"><name pos:start="198:39" pos:end="198:39">s</name><operator pos:start="198:40" pos:end="198:41">-&gt;</operator><name pos:start="198:42" pos:end="198:46">avctx</name></name></expr></argument>, <argument pos:start="198:49" pos:end="198:75"><expr pos:start="198:49" pos:end="198:75"><literal type="string" pos:start="198:49" pos:end="198:75">"Sample interleaved images"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>







    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="210:5" pos:end="300:5"><if pos:start="210:5" pos:end="300:5">if <condition pos:start="210:8" pos:end="210:41">(<expr pos:start="210:9" pos:end="210:40"><name pos:start="210:9" pos:end="210:15"><name pos:start="210:9" pos:end="210:9">s</name><operator pos:start="210:10" pos:end="210:11">-&gt;</operator><name pos:start="210:12" pos:end="210:15">xfrm</name></name> <operator pos:start="210:17" pos:end="210:18">&amp;&amp;</operator> <name pos:start="210:20" pos:end="210:35"><name pos:start="210:20" pos:end="210:20">s</name><operator pos:start="210:21" pos:end="210:22">-&gt;</operator><name pos:start="210:23" pos:end="210:35">nb_components</name></name> <operator pos:start="210:37" pos:end="210:38">==</operator> <literal type="number" pos:start="210:40" pos:end="210:40">3</literal></expr>)</condition> <block pos:start="210:43" pos:end="300:5">{<block_content pos:start="212:9" pos:end="298:66">

        <decl_stmt pos:start="212:9" pos:end="212:17"><decl pos:start="212:9" pos:end="212:13"><type pos:start="212:9" pos:end="212:11"><name pos:start="212:9" pos:end="212:11">int</name></type> <name pos:start="212:13" pos:end="212:13">x</name></decl>, <decl pos:start="212:16" pos:end="212:16"><type ref="prev" pos:start="212:9" pos:end="212:11"/><name pos:start="212:16" pos:end="212:16">w</name></decl>;</decl_stmt>



        <expr_stmt pos:start="216:9" pos:end="216:40"><expr pos:start="216:9" pos:end="216:39"><name pos:start="216:9" pos:end="216:9">w</name> <operator pos:start="216:11" pos:end="216:11">=</operator> <name pos:start="216:13" pos:end="216:20"><name pos:start="216:13" pos:end="216:13">s</name><operator pos:start="216:14" pos:end="216:15">-&gt;</operator><name pos:start="216:16" pos:end="216:20">width</name></name> <operator pos:start="216:22" pos:end="216:22">*</operator> <name pos:start="216:24" pos:end="216:39"><name pos:start="216:24" pos:end="216:24">s</name><operator pos:start="216:25" pos:end="216:26">-&gt;</operator><name pos:start="216:27" pos:end="216:39">nb_components</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="220:9" pos:end="298:66"><if pos:start="220:9" pos:end="296:9">if <condition pos:start="220:12" pos:end="220:25">(<expr pos:start="220:13" pos:end="220:24"><name pos:start="220:13" pos:end="220:19"><name pos:start="220:13" pos:end="220:13">s</name><operator pos:start="220:14" pos:end="220:15">-&gt;</operator><name pos:start="220:16" pos:end="220:19">bits</name></name> <operator pos:start="220:21" pos:end="220:22">&lt;=</operator> <literal type="number" pos:start="220:24" pos:end="220:24">8</literal></expr>)</condition> <block pos:start="220:27" pos:end="296:9">{<block_content pos:start="222:13" pos:end="294:13">

            <decl_stmt pos:start="222:13" pos:end="222:51"><decl pos:start="222:13" pos:end="222:50"><type pos:start="222:13" pos:end="222:21"><name pos:start="222:13" pos:end="222:19">uint8_t</name> <modifier pos:start="222:21" pos:end="222:21">*</modifier></type><name pos:start="222:22" pos:end="222:24">src</name> <init pos:start="222:26" pos:end="222:50">= <expr pos:start="222:28" pos:end="222:50"><name pos:start="222:28" pos:end="222:50"><name pos:start="222:28" pos:end="222:28">s</name><operator pos:start="222:29" pos:end="222:30">-&gt;</operator><name pos:start="222:31" pos:end="222:41">picture_ptr</name><operator pos:start="222:42" pos:end="222:43">-&gt;</operator><name pos:start="222:44" pos:end="222:47">data</name><index pos:start="222:48" pos:end="222:50">[<expr pos:start="222:49" pos:end="222:49"><literal type="number" pos:start="222:49" pos:end="222:49">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <for pos:start="226:13" pos:end="294:13">for <control pos:start="226:17" pos:end="226:43">(<init pos:start="226:18" pos:end="226:23"><expr pos:start="226:18" pos:end="226:22"><name pos:start="226:18" pos:end="226:18">i</name> <operator pos:start="226:20" pos:end="226:20">=</operator> <literal type="number" pos:start="226:22" pos:end="226:22">0</literal></expr>;</init> <condition pos:start="226:25" pos:end="226:38"><expr pos:start="226:25" pos:end="226:37"><name pos:start="226:25" pos:end="226:25">i</name> <operator pos:start="226:27" pos:end="226:27">&lt;</operator> <name pos:start="226:29" pos:end="226:37"><name pos:start="226:29" pos:end="226:29">s</name><operator pos:start="226:30" pos:end="226:31">-&gt;</operator><name pos:start="226:32" pos:end="226:37">height</name></name></expr>;</condition> <incr pos:start="226:40" pos:end="226:42"><expr pos:start="226:40" pos:end="226:42"><name pos:start="226:40" pos:end="226:40">i</name><operator pos:start="226:41" pos:end="226:42">++</operator></expr></incr>)</control> <block pos:start="226:45" pos:end="294:13">{<block_content pos:start="228:17" pos:end="292:51">

                <switch pos:start="228:17" pos:end="290:17">switch<condition pos:start="228:23" pos:end="228:31">(<expr pos:start="228:24" pos:end="228:30"><name pos:start="228:24" pos:end="228:30"><name pos:start="228:24" pos:end="228:24">s</name><operator pos:start="228:25" pos:end="228:26">-&gt;</operator><name pos:start="228:27" pos:end="228:30">xfrm</name></name></expr>)</condition> <block pos:start="228:33" pos:end="290:17">{<block_content pos:start="230:17" pos:end="288:26">

                <case pos:start="230:17" pos:end="230:23">case <expr pos:start="230:22" pos:end="230:22"><literal type="number" pos:start="230:22" pos:end="230:22">1</literal></expr>:</case>

                    <for pos:start="232:21" pos:end="238:21">for <control pos:start="232:25" pos:end="232:48">(<init pos:start="232:26" pos:end="232:33"><expr pos:start="232:26" pos:end="232:32"><name pos:start="232:26" pos:end="232:26">x</name> <operator pos:start="232:28" pos:end="232:28">=</operator> <name pos:start="232:30" pos:end="232:32">off</name></expr>;</init> <condition pos:start="232:35" pos:end="232:40"><expr pos:start="232:35" pos:end="232:39"><name pos:start="232:35" pos:end="232:35">x</name> <operator pos:start="232:37" pos:end="232:37">&lt;</operator> <name pos:start="232:39" pos:end="232:39">w</name></expr>;</condition> <incr pos:start="232:42" pos:end="232:47"><expr pos:start="232:42" pos:end="232:47"><name pos:start="232:42" pos:end="232:42">x</name> <operator pos:start="232:44" pos:end="232:45">+=</operator> <literal type="number" pos:start="232:47" pos:end="232:47">3</literal></expr></incr>)</control> <block pos:start="232:50" pos:end="238:21">{<block_content pos:start="234:25" pos:end="236:51">

                        <expr_stmt pos:start="234:25" pos:end="234:51"><expr pos:start="234:25" pos:end="234:50"><name pos:start="234:25" pos:end="234:32"><name pos:start="234:25" pos:end="234:27">src</name><index pos:start="234:28" pos:end="234:32">[<expr pos:start="234:29" pos:end="234:29"><name pos:start="234:29" pos:end="234:29">x</name></expr>  ]</index></name> <operator pos:start="234:34" pos:end="234:35">+=</operator> <name pos:start="234:37" pos:end="234:44"><name pos:start="234:37" pos:end="234:39">src</name><index pos:start="234:40" pos:end="234:44">[<expr pos:start="234:41" pos:end="234:43"><name pos:start="234:41" pos:end="234:41">x</name><operator pos:start="234:42" pos:end="234:42">+</operator><literal type="number" pos:start="234:43" pos:end="234:43">1</literal></expr>]</index></name> <operator pos:start="234:46" pos:end="234:46">+</operator> <literal type="number" pos:start="234:48" pos:end="234:50">128</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="236:25" pos:end="236:51"><expr pos:start="236:25" pos:end="236:50"><name pos:start="236:25" pos:end="236:32"><name pos:start="236:25" pos:end="236:27">src</name><index pos:start="236:28" pos:end="236:32">[<expr pos:start="236:29" pos:end="236:31"><name pos:start="236:29" pos:end="236:29">x</name><operator pos:start="236:30" pos:end="236:30">+</operator><literal type="number" pos:start="236:31" pos:end="236:31">2</literal></expr>]</index></name> <operator pos:start="236:34" pos:end="236:35">+=</operator> <name pos:start="236:37" pos:end="236:44"><name pos:start="236:37" pos:end="236:39">src</name><index pos:start="236:40" pos:end="236:44">[<expr pos:start="236:41" pos:end="236:43"><name pos:start="236:41" pos:end="236:41">x</name><operator pos:start="236:42" pos:end="236:42">+</operator><literal type="number" pos:start="236:43" pos:end="236:43">1</literal></expr>]</index></name> <operator pos:start="236:46" pos:end="236:46">+</operator> <literal type="number" pos:start="236:48" pos:end="236:50">128</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <break pos:start="240:21" pos:end="240:26">break;</break>

                <case pos:start="242:17" pos:end="242:23">case <expr pos:start="242:22" pos:end="242:22"><literal type="number" pos:start="242:22" pos:end="242:22">2</literal></expr>:</case>

                    <for pos:start="244:21" pos:end="250:21">for <control pos:start="244:25" pos:end="244:48">(<init pos:start="244:26" pos:end="244:33"><expr pos:start="244:26" pos:end="244:32"><name pos:start="244:26" pos:end="244:26">x</name> <operator pos:start="244:28" pos:end="244:28">=</operator> <name pos:start="244:30" pos:end="244:32">off</name></expr>;</init> <condition pos:start="244:35" pos:end="244:40"><expr pos:start="244:35" pos:end="244:39"><name pos:start="244:35" pos:end="244:35">x</name> <operator pos:start="244:37" pos:end="244:37">&lt;</operator> <name pos:start="244:39" pos:end="244:39">w</name></expr>;</condition> <incr pos:start="244:42" pos:end="244:47"><expr pos:start="244:42" pos:end="244:47"><name pos:start="244:42" pos:end="244:42">x</name> <operator pos:start="244:44" pos:end="244:45">+=</operator> <literal type="number" pos:start="244:47" pos:end="244:47">3</literal></expr></incr>)</control> <block pos:start="244:50" pos:end="250:21">{<block_content pos:start="246:25" pos:end="248:69">

                        <expr_stmt pos:start="246:25" pos:end="246:51"><expr pos:start="246:25" pos:end="246:50"><name pos:start="246:25" pos:end="246:32"><name pos:start="246:25" pos:end="246:27">src</name><index pos:start="246:28" pos:end="246:32">[<expr pos:start="246:29" pos:end="246:29"><name pos:start="246:29" pos:end="246:29">x</name></expr>  ]</index></name> <operator pos:start="246:34" pos:end="246:35">+=</operator> <name pos:start="246:37" pos:end="246:44"><name pos:start="246:37" pos:end="246:39">src</name><index pos:start="246:40" pos:end="246:44">[<expr pos:start="246:41" pos:end="246:43"><name pos:start="246:41" pos:end="246:41">x</name><operator pos:start="246:42" pos:end="246:42">+</operator><literal type="number" pos:start="246:43" pos:end="246:43">1</literal></expr>]</index></name> <operator pos:start="246:46" pos:end="246:46">+</operator> <literal type="number" pos:start="246:48" pos:end="246:50">128</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="248:25" pos:end="248:69"><expr pos:start="248:25" pos:end="248:68"><name pos:start="248:25" pos:end="248:32"><name pos:start="248:25" pos:end="248:27">src</name><index pos:start="248:28" pos:end="248:32">[<expr pos:start="248:29" pos:end="248:31"><name pos:start="248:29" pos:end="248:29">x</name><operator pos:start="248:30" pos:end="248:30">+</operator><literal type="number" pos:start="248:31" pos:end="248:31">2</literal></expr>]</index></name> <operator pos:start="248:34" pos:end="248:35">+=</operator> <operator pos:start="248:37" pos:end="248:37">(</operator><operator pos:start="248:38" pos:end="248:38">(</operator><name pos:start="248:39" pos:end="248:46"><name pos:start="248:39" pos:end="248:41">src</name><index pos:start="248:42" pos:end="248:46">[<expr pos:start="248:43" pos:end="248:43"><name pos:start="248:43" pos:end="248:43">x</name></expr>  ]</index></name> <operator pos:start="248:48" pos:end="248:48">+</operator> <name pos:start="248:50" pos:end="248:57"><name pos:start="248:50" pos:end="248:52">src</name><index pos:start="248:53" pos:end="248:57">[<expr pos:start="248:54" pos:end="248:56"><name pos:start="248:54" pos:end="248:54">x</name><operator pos:start="248:55" pos:end="248:55">+</operator><literal type="number" pos:start="248:56" pos:end="248:56">1</literal></expr>]</index></name><operator pos:start="248:58" pos:end="248:58">)</operator><operator pos:start="248:59" pos:end="248:60">&gt;&gt;</operator><literal type="number" pos:start="248:61" pos:end="248:61">1</literal><operator pos:start="248:62" pos:end="248:62">)</operator> <operator pos:start="248:64" pos:end="248:64">+</operator> <literal type="number" pos:start="248:66" pos:end="248:68">128</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <break pos:start="252:21" pos:end="252:26">break;</break>

                <case pos:start="254:17" pos:end="254:23">case <expr pos:start="254:22" pos:end="254:22"><literal type="number" pos:start="254:22" pos:end="254:22">3</literal></expr>:</case>

                    <for pos:start="256:21" pos:end="266:21">for <control pos:start="256:25" pos:end="256:48">(<init pos:start="256:26" pos:end="256:33"><expr pos:start="256:26" pos:end="256:32"><name pos:start="256:26" pos:end="256:26">x</name> <operator pos:start="256:28" pos:end="256:28">=</operator> <name pos:start="256:30" pos:end="256:32">off</name></expr>;</init> <condition pos:start="256:35" pos:end="256:40"><expr pos:start="256:35" pos:end="256:39"><name pos:start="256:35" pos:end="256:35">x</name> <operator pos:start="256:37" pos:end="256:37">&lt;</operator> <name pos:start="256:39" pos:end="256:39">w</name></expr>;</condition> <incr pos:start="256:42" pos:end="256:47"><expr pos:start="256:42" pos:end="256:47"><name pos:start="256:42" pos:end="256:42">x</name> <operator pos:start="256:44" pos:end="256:45">+=</operator> <literal type="number" pos:start="256:47" pos:end="256:47">3</literal></expr></incr>)</control> <block pos:start="256:50" pos:end="266:21">{<block_content pos:start="258:25" pos:end="264:37">

                        <decl_stmt pos:start="258:25" pos:end="258:73"><decl pos:start="258:25" pos:end="258:72"><type pos:start="258:25" pos:end="258:27"><name pos:start="258:25" pos:end="258:27">int</name></type> <name pos:start="258:29" pos:end="258:29">g</name> <init pos:start="258:31" pos:end="258:72">= <expr pos:start="258:33" pos:end="258:72"><name pos:start="258:33" pos:end="258:40"><name pos:start="258:33" pos:end="258:35">src</name><index pos:start="258:36" pos:end="258:40">[<expr pos:start="258:37" pos:end="258:39"><name pos:start="258:37" pos:end="258:37">x</name><operator pos:start="258:38" pos:end="258:38">+</operator><literal type="number" pos:start="258:39" pos:end="258:39">0</literal></expr>]</index></name> <operator pos:start="258:42" pos:end="258:42">-</operator> <operator pos:start="258:44" pos:end="258:44">(</operator><operator pos:start="258:45" pos:end="258:45">(</operator><name pos:start="258:46" pos:end="258:53"><name pos:start="258:46" pos:end="258:48">src</name><index pos:start="258:49" pos:end="258:53">[<expr pos:start="258:50" pos:end="258:52"><name pos:start="258:50" pos:end="258:50">x</name><operator pos:start="258:51" pos:end="258:51">+</operator><literal type="number" pos:start="258:52" pos:end="258:52">2</literal></expr>]</index></name><operator pos:start="258:54" pos:end="258:54">+</operator><name pos:start="258:55" pos:end="258:62"><name pos:start="258:55" pos:end="258:57">src</name><index pos:start="258:58" pos:end="258:62">[<expr pos:start="258:59" pos:end="258:61"><name pos:start="258:59" pos:end="258:59">x</name><operator pos:start="258:60" pos:end="258:60">+</operator><literal type="number" pos:start="258:61" pos:end="258:61">1</literal></expr>]</index></name><operator pos:start="258:63" pos:end="258:63">)</operator><operator pos:start="258:64" pos:end="258:65">&gt;&gt;</operator><literal type="number" pos:start="258:66" pos:end="258:66">2</literal><operator pos:start="258:67" pos:end="258:67">)</operator> <operator pos:start="258:69" pos:end="258:69">+</operator> <literal type="number" pos:start="258:71" pos:end="258:72">64</literal></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="260:25" pos:end="260:54"><expr pos:start="260:25" pos:end="260:53"><name pos:start="260:25" pos:end="260:32"><name pos:start="260:25" pos:end="260:27">src</name><index pos:start="260:28" pos:end="260:32">[<expr pos:start="260:29" pos:end="260:31"><name pos:start="260:29" pos:end="260:29">x</name><operator pos:start="260:30" pos:end="260:30">+</operator><literal type="number" pos:start="260:31" pos:end="260:31">0</literal></expr>]</index></name> <operator pos:start="260:34" pos:end="260:34">=</operator> <name pos:start="260:36" pos:end="260:43"><name pos:start="260:36" pos:end="260:38">src</name><index pos:start="260:39" pos:end="260:43">[<expr pos:start="260:40" pos:end="260:42"><name pos:start="260:40" pos:end="260:40">x</name><operator pos:start="260:41" pos:end="260:41">+</operator><literal type="number" pos:start="260:42" pos:end="260:42">2</literal></expr>]</index></name> <operator pos:start="260:45" pos:end="260:45">+</operator> <name pos:start="260:47" pos:end="260:47">g</name> <operator pos:start="260:49" pos:end="260:49">+</operator> <literal type="number" pos:start="260:51" pos:end="260:53">128</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="262:25" pos:end="262:54"><expr pos:start="262:25" pos:end="262:53"><name pos:start="262:25" pos:end="262:32"><name pos:start="262:25" pos:end="262:27">src</name><index pos:start="262:28" pos:end="262:32">[<expr pos:start="262:29" pos:end="262:31"><name pos:start="262:29" pos:end="262:29">x</name><operator pos:start="262:30" pos:end="262:30">+</operator><literal type="number" pos:start="262:31" pos:end="262:31">2</literal></expr>]</index></name> <operator pos:start="262:34" pos:end="262:34">=</operator> <name pos:start="262:36" pos:end="262:43"><name pos:start="262:36" pos:end="262:38">src</name><index pos:start="262:39" pos:end="262:43">[<expr pos:start="262:40" pos:end="262:42"><name pos:start="262:40" pos:end="262:40">x</name><operator pos:start="262:41" pos:end="262:41">+</operator><literal type="number" pos:start="262:42" pos:end="262:42">1</literal></expr>]</index></name> <operator pos:start="262:45" pos:end="262:45">+</operator> <name pos:start="262:47" pos:end="262:47">g</name> <operator pos:start="262:49" pos:end="262:49">+</operator> <literal type="number" pos:start="262:51" pos:end="262:53">128</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="264:25" pos:end="264:37"><expr pos:start="264:25" pos:end="264:36"><name pos:start="264:25" pos:end="264:32"><name pos:start="264:25" pos:end="264:27">src</name><index pos:start="264:28" pos:end="264:32">[<expr pos:start="264:29" pos:end="264:31"><name pos:start="264:29" pos:end="264:29">x</name><operator pos:start="264:30" pos:end="264:30">+</operator><literal type="number" pos:start="264:31" pos:end="264:31">1</literal></expr>]</index></name> <operator pos:start="264:34" pos:end="264:34">=</operator> <name pos:start="264:36" pos:end="264:36">g</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <break pos:start="268:21" pos:end="268:26">break;</break>

                <case pos:start="270:17" pos:end="270:23">case <expr pos:start="270:22" pos:end="270:22"><literal type="number" pos:start="270:22" pos:end="270:22">4</literal></expr>:</case>

                    <for pos:start="272:21" pos:end="286:21">for <control pos:start="272:25" pos:end="272:48">(<init pos:start="272:26" pos:end="272:33"><expr pos:start="272:26" pos:end="272:32"><name pos:start="272:26" pos:end="272:26">x</name> <operator pos:start="272:28" pos:end="272:28">=</operator> <name pos:start="272:30" pos:end="272:32">off</name></expr>;</init> <condition pos:start="272:35" pos:end="272:40"><expr pos:start="272:35" pos:end="272:39"><name pos:start="272:35" pos:end="272:35">x</name> <operator pos:start="272:37" pos:end="272:37">&lt;</operator> <name pos:start="272:39" pos:end="272:39">w</name></expr>;</condition> <incr pos:start="272:42" pos:end="272:47"><expr pos:start="272:42" pos:end="272:47"><name pos:start="272:42" pos:end="272:42">x</name> <operator pos:start="272:44" pos:end="272:45">+=</operator> <literal type="number" pos:start="272:47" pos:end="272:47">3</literal></expr></incr>)</control> <block pos:start="272:50" pos:end="286:21">{<block_content pos:start="274:25" pos:end="284:52">

                        <decl_stmt pos:start="274:25" pos:end="274:105"><decl pos:start="274:25" pos:end="274:104"><type pos:start="274:25" pos:end="274:27"><name pos:start="274:25" pos:end="274:27">int</name></type> <name pos:start="274:29" pos:end="274:29">r</name>    <init pos:start="274:34" pos:end="274:104">= <expr pos:start="274:36" pos:end="274:104"><name pos:start="274:36" pos:end="274:43"><name pos:start="274:36" pos:end="274:38">src</name><index pos:start="274:39" pos:end="274:43">[<expr pos:start="274:40" pos:end="274:42"><name pos:start="274:40" pos:end="274:40">x</name><operator pos:start="274:41" pos:end="274:41">+</operator><literal type="number" pos:start="274:42" pos:end="274:42">0</literal></expr>]</index></name> <operator pos:start="274:45" pos:end="274:45">-</operator> <operator pos:start="274:47" pos:end="274:47">(</operator><operator pos:start="274:48" pos:end="274:48">(</operator>                       <literal type="number" pos:start="274:72" pos:end="274:74">359</literal> <operator pos:start="274:76" pos:end="274:76">*</operator> <operator pos:start="274:78" pos:end="274:78">(</operator><name pos:start="274:79" pos:end="274:86"><name pos:start="274:79" pos:end="274:81">src</name><index pos:start="274:82" pos:end="274:86">[<expr pos:start="274:83" pos:end="274:85"><name pos:start="274:83" pos:end="274:83">x</name><operator pos:start="274:84" pos:end="274:84">+</operator><literal type="number" pos:start="274:85" pos:end="274:85">2</literal></expr>]</index></name><operator pos:start="274:87" pos:end="274:87">-</operator><literal type="number" pos:start="274:88" pos:end="274:90">128</literal><operator pos:start="274:91" pos:end="274:91">)</operator> <operator pos:start="274:93" pos:end="274:93">+</operator> <literal type="number" pos:start="274:95" pos:end="274:97">490</literal><operator pos:start="274:98" pos:end="274:98">)</operator> <operator pos:start="274:100" pos:end="274:101">&gt;&gt;</operator> <literal type="number" pos:start="274:103" pos:end="274:103">8</literal><operator pos:start="274:104" pos:end="274:104">)</operator></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="276:25" pos:end="276:105"><decl pos:start="276:25" pos:end="276:104"><type pos:start="276:25" pos:end="276:27"><name pos:start="276:25" pos:end="276:27">int</name></type> <name pos:start="276:29" pos:end="276:29">g</name>    <init pos:start="276:34" pos:end="276:104">= <expr pos:start="276:36" pos:end="276:104"><name pos:start="276:36" pos:end="276:43"><name pos:start="276:36" pos:end="276:38">src</name><index pos:start="276:39" pos:end="276:43">[<expr pos:start="276:40" pos:end="276:42"><name pos:start="276:40" pos:end="276:40">x</name><operator pos:start="276:41" pos:end="276:41">+</operator><literal type="number" pos:start="276:42" pos:end="276:42">0</literal></expr>]</index></name> <operator pos:start="276:45" pos:end="276:45">-</operator> <operator pos:start="276:47" pos:end="276:47">(</operator><operator pos:start="276:48" pos:end="276:48">(</operator> <literal type="number" pos:start="276:50" pos:end="276:51">88</literal> <operator pos:start="276:53" pos:end="276:53">*</operator> <operator pos:start="276:55" pos:end="276:55">(</operator><name pos:start="276:56" pos:end="276:63"><name pos:start="276:56" pos:end="276:58">src</name><index pos:start="276:59" pos:end="276:63">[<expr pos:start="276:60" pos:end="276:62"><name pos:start="276:60" pos:end="276:60">x</name><operator pos:start="276:61" pos:end="276:61">+</operator><literal type="number" pos:start="276:62" pos:end="276:62">1</literal></expr>]</index></name><operator pos:start="276:64" pos:end="276:64">-</operator><literal type="number" pos:start="276:65" pos:end="276:67">128</literal><operator pos:start="276:68" pos:end="276:68">)</operator> <operator pos:start="276:70" pos:end="276:70">-</operator> <literal type="number" pos:start="276:72" pos:end="276:74">183</literal> <operator pos:start="276:76" pos:end="276:76">*</operator> <operator pos:start="276:78" pos:end="276:78">(</operator><name pos:start="276:79" pos:end="276:86"><name pos:start="276:79" pos:end="276:81">src</name><index pos:start="276:82" pos:end="276:86">[<expr pos:start="276:83" pos:end="276:85"><name pos:start="276:83" pos:end="276:83">x</name><operator pos:start="276:84" pos:end="276:84">+</operator><literal type="number" pos:start="276:85" pos:end="276:85">2</literal></expr>]</index></name><operator pos:start="276:87" pos:end="276:87">-</operator><literal type="number" pos:start="276:88" pos:end="276:90">128</literal><operator pos:start="276:91" pos:end="276:91">)</operator> <operator pos:start="276:93" pos:end="276:93">+</operator>  <literal type="number" pos:start="276:96" pos:end="276:97">30</literal><operator pos:start="276:98" pos:end="276:98">)</operator> <operator pos:start="276:100" pos:end="276:101">&gt;&gt;</operator> <literal type="number" pos:start="276:103" pos:end="276:103">8</literal><operator pos:start="276:104" pos:end="276:104">)</operator></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="278:25" pos:end="278:105"><decl pos:start="278:25" pos:end="278:104"><type pos:start="278:25" pos:end="278:27"><name pos:start="278:25" pos:end="278:27">int</name></type> <name pos:start="278:29" pos:end="278:29">b</name>    <init pos:start="278:34" pos:end="278:104">= <expr pos:start="278:36" pos:end="278:104"><name pos:start="278:36" pos:end="278:43"><name pos:start="278:36" pos:end="278:38">src</name><index pos:start="278:39" pos:end="278:43">[<expr pos:start="278:40" pos:end="278:42"><name pos:start="278:40" pos:end="278:40">x</name><operator pos:start="278:41" pos:end="278:41">+</operator><literal type="number" pos:start="278:42" pos:end="278:42">0</literal></expr>]</index></name> <operator pos:start="278:45" pos:end="278:45">+</operator> <operator pos:start="278:47" pos:end="278:47">(</operator><operator pos:start="278:48" pos:end="278:48">(</operator><literal type="number" pos:start="278:49" pos:end="278:51">454</literal> <operator pos:start="278:53" pos:end="278:53">*</operator> <operator pos:start="278:55" pos:end="278:55">(</operator><name pos:start="278:56" pos:end="278:63"><name pos:start="278:56" pos:end="278:58">src</name><index pos:start="278:59" pos:end="278:63">[<expr pos:start="278:60" pos:end="278:62"><name pos:start="278:60" pos:end="278:60">x</name><operator pos:start="278:61" pos:end="278:61">+</operator><literal type="number" pos:start="278:62" pos:end="278:62">1</literal></expr>]</index></name><operator pos:start="278:64" pos:end="278:64">-</operator><literal type="number" pos:start="278:65" pos:end="278:67">128</literal><operator pos:start="278:68" pos:end="278:68">)</operator>                        <operator pos:start="278:93" pos:end="278:93">+</operator> <literal type="number" pos:start="278:95" pos:end="278:97">574</literal><operator pos:start="278:98" pos:end="278:98">)</operator> <operator pos:start="278:100" pos:end="278:101">&gt;&gt;</operator> <literal type="number" pos:start="278:103" pos:end="278:103">8</literal><operator pos:start="278:104" pos:end="278:104">)</operator></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="280:25" pos:end="280:52"><expr pos:start="280:25" pos:end="280:51"><name pos:start="280:25" pos:end="280:32"><name pos:start="280:25" pos:end="280:27">src</name><index pos:start="280:28" pos:end="280:32">[<expr pos:start="280:29" pos:end="280:31"><name pos:start="280:29" pos:end="280:29">x</name><operator pos:start="280:30" pos:end="280:30">+</operator><literal type="number" pos:start="280:31" pos:end="280:31">0</literal></expr>]</index></name> <operator pos:start="280:34" pos:end="280:34">=</operator> <call pos:start="280:36" pos:end="280:51"><name pos:start="280:36" pos:end="280:48">av_clip_uint8</name><argument_list pos:start="280:49" pos:end="280:51">(<argument pos:start="280:50" pos:end="280:50"><expr pos:start="280:50" pos:end="280:50"><name pos:start="280:50" pos:end="280:50">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="282:25" pos:end="282:52"><expr pos:start="282:25" pos:end="282:51"><name pos:start="282:25" pos:end="282:32"><name pos:start="282:25" pos:end="282:27">src</name><index pos:start="282:28" pos:end="282:32">[<expr pos:start="282:29" pos:end="282:31"><name pos:start="282:29" pos:end="282:29">x</name><operator pos:start="282:30" pos:end="282:30">+</operator><literal type="number" pos:start="282:31" pos:end="282:31">1</literal></expr>]</index></name> <operator pos:start="282:34" pos:end="282:34">=</operator> <call pos:start="282:36" pos:end="282:51"><name pos:start="282:36" pos:end="282:48">av_clip_uint8</name><argument_list pos:start="282:49" pos:end="282:51">(<argument pos:start="282:50" pos:end="282:50"><expr pos:start="282:50" pos:end="282:50"><name pos:start="282:50" pos:end="282:50">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="284:25" pos:end="284:52"><expr pos:start="284:25" pos:end="284:51"><name pos:start="284:25" pos:end="284:32"><name pos:start="284:25" pos:end="284:27">src</name><index pos:start="284:28" pos:end="284:32">[<expr pos:start="284:29" pos:end="284:31"><name pos:start="284:29" pos:end="284:29">x</name><operator pos:start="284:30" pos:end="284:30">+</operator><literal type="number" pos:start="284:31" pos:end="284:31">2</literal></expr>]</index></name> <operator pos:start="284:34" pos:end="284:34">=</operator> <call pos:start="284:36" pos:end="284:51"><name pos:start="284:36" pos:end="284:48">av_clip_uint8</name><argument_list pos:start="284:49" pos:end="284:51">(<argument pos:start="284:50" pos:end="284:50"><expr pos:start="284:50" pos:end="284:50"><name pos:start="284:50" pos:end="284:50">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <break pos:start="288:21" pos:end="288:26">break;</break>

                </block_content>}</block></switch>

                <expr_stmt pos:start="292:17" pos:end="292:51"><expr pos:start="292:17" pos:end="292:50"><name pos:start="292:17" pos:end="292:19">src</name> <operator pos:start="292:21" pos:end="292:22">+=</operator> <name pos:start="292:24" pos:end="292:50"><name pos:start="292:24" pos:end="292:24">s</name><operator pos:start="292:25" pos:end="292:26">-&gt;</operator><name pos:start="292:27" pos:end="292:37">picture_ptr</name><operator pos:start="292:38" pos:end="292:39">-&gt;</operator><name pos:start="292:40" pos:end="292:47">linesize</name><index pos:start="292:48" pos:end="292:50">[<expr pos:start="292:49" pos:end="292:49"><literal type="number" pos:start="292:49" pos:end="292:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if><else pos:start="296:10" pos:end="298:66">else<block type="pseudo" pos:start="298:13" pos:end="298:66"><block_content pos:start="298:13" pos:end="298:66">

            <expr_stmt pos:start="298:13" pos:end="298:66"><expr pos:start="298:13" pos:end="298:65"><call pos:start="298:13" pos:end="298:65"><name pos:start="298:13" pos:end="298:41">avpriv_report_missing_feature</name><argument_list pos:start="298:42" pos:end="298:65">(<argument pos:start="298:43" pos:end="298:50"><expr pos:start="298:43" pos:end="298:50"><name pos:start="298:43" pos:end="298:50"><name pos:start="298:43" pos:end="298:43">s</name><operator pos:start="298:44" pos:end="298:45">-&gt;</operator><name pos:start="298:46" pos:end="298:50">avctx</name></name></expr></argument>, <argument pos:start="298:53" pos:end="298:64"><expr pos:start="298:53" pos:end="298:64"><literal type="string" pos:start="298:53" pos:end="298:64">"16bit xfrm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="304:5" pos:end="348:5"><if pos:start="304:5" pos:end="348:5">if <condition pos:start="304:8" pos:end="304:14">(<expr pos:start="304:9" pos:end="304:13"><name pos:start="304:9" pos:end="304:13">shift</name></expr>)</condition> <block pos:start="304:16" pos:end="348:5">{<block_content pos:start="306:9" pos:end="346:9"> <comment type="block" pos:start="304:18" pos:end="304:73">/* we need to do point transform or normalize samples */</comment>

        <decl_stmt pos:start="306:9" pos:end="306:17"><decl pos:start="306:9" pos:end="306:13"><type pos:start="306:9" pos:end="306:11"><name pos:start="306:9" pos:end="306:11">int</name></type> <name pos:start="306:13" pos:end="306:13">x</name></decl>, <decl pos:start="306:16" pos:end="306:16"><type ref="prev" pos:start="306:9" pos:end="306:11"/><name pos:start="306:16" pos:end="306:16">w</name></decl>;</decl_stmt>



        <expr_stmt pos:start="310:9" pos:end="310:40"><expr pos:start="310:9" pos:end="310:39"><name pos:start="310:9" pos:end="310:9">w</name> <operator pos:start="310:11" pos:end="310:11">=</operator> <name pos:start="310:13" pos:end="310:20"><name pos:start="310:13" pos:end="310:13">s</name><operator pos:start="310:14" pos:end="310:15">-&gt;</operator><name pos:start="310:16" pos:end="310:20">width</name></name> <operator pos:start="310:22" pos:end="310:22">*</operator> <name pos:start="310:24" pos:end="310:39"><name pos:start="310:24" pos:end="310:24">s</name><operator pos:start="310:25" pos:end="310:26">-&gt;</operator><name pos:start="310:27" pos:end="310:39">nb_components</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="314:9" pos:end="346:9"><if pos:start="314:9" pos:end="330:9">if <condition pos:start="314:12" pos:end="314:25">(<expr pos:start="314:13" pos:end="314:24"><name pos:start="314:13" pos:end="314:19"><name pos:start="314:13" pos:end="314:13">s</name><operator pos:start="314:14" pos:end="314:15">-&gt;</operator><name pos:start="314:16" pos:end="314:19">bits</name></name> <operator pos:start="314:21" pos:end="314:22">&lt;=</operator> <literal type="number" pos:start="314:24" pos:end="314:24">8</literal></expr>)</condition> <block pos:start="314:27" pos:end="330:9">{<block_content pos:start="316:13" pos:end="328:13">

            <decl_stmt pos:start="316:13" pos:end="316:51"><decl pos:start="316:13" pos:end="316:50"><type pos:start="316:13" pos:end="316:21"><name pos:start="316:13" pos:end="316:19">uint8_t</name> <modifier pos:start="316:21" pos:end="316:21">*</modifier></type><name pos:start="316:22" pos:end="316:24">src</name> <init pos:start="316:26" pos:end="316:50">= <expr pos:start="316:28" pos:end="316:50"><name pos:start="316:28" pos:end="316:50"><name pos:start="316:28" pos:end="316:28">s</name><operator pos:start="316:29" pos:end="316:30">-&gt;</operator><name pos:start="316:31" pos:end="316:41">picture_ptr</name><operator pos:start="316:42" pos:end="316:43">-&gt;</operator><name pos:start="316:44" pos:end="316:47">data</name><index pos:start="316:48" pos:end="316:50">[<expr pos:start="316:49" pos:end="316:49"><literal type="number" pos:start="316:49" pos:end="316:49">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <for pos:start="320:13" pos:end="328:13">for <control pos:start="320:17" pos:end="320:43">(<init pos:start="320:18" pos:end="320:23"><expr pos:start="320:18" pos:end="320:22"><name pos:start="320:18" pos:end="320:18">i</name> <operator pos:start="320:20" pos:end="320:20">=</operator> <literal type="number" pos:start="320:22" pos:end="320:22">0</literal></expr>;</init> <condition pos:start="320:25" pos:end="320:38"><expr pos:start="320:25" pos:end="320:37"><name pos:start="320:25" pos:end="320:25">i</name> <operator pos:start="320:27" pos:end="320:27">&lt;</operator> <name pos:start="320:29" pos:end="320:37"><name pos:start="320:29" pos:end="320:29">s</name><operator pos:start="320:30" pos:end="320:31">-&gt;</operator><name pos:start="320:32" pos:end="320:37">height</name></name></expr>;</condition> <incr pos:start="320:40" pos:end="320:42"><expr pos:start="320:40" pos:end="320:42"><name pos:start="320:40" pos:end="320:40">i</name><operator pos:start="320:41" pos:end="320:42">++</operator></expr></incr>)</control> <block pos:start="320:45" pos:end="328:13">{<block_content pos:start="322:17" pos:end="326:51">

                <for pos:start="322:17" pos:end="324:37">for <control pos:start="322:21" pos:end="322:49">(<init pos:start="322:22" pos:end="322:29"><expr pos:start="322:22" pos:end="322:28"><name pos:start="322:22" pos:end="322:22">x</name> <operator pos:start="322:24" pos:end="322:24">=</operator> <name pos:start="322:26" pos:end="322:28">off</name></expr>;</init> <condition pos:start="322:31" pos:end="322:36"><expr pos:start="322:31" pos:end="322:35"><name pos:start="322:31" pos:end="322:31">x</name> <operator pos:start="322:33" pos:end="322:33">&lt;</operator> <name pos:start="322:35" pos:end="322:35">w</name></expr>;</condition> <incr pos:start="322:38" pos:end="322:48"><expr pos:start="322:38" pos:end="322:48"><name pos:start="322:38" pos:end="322:38">x</name> <operator pos:start="322:40" pos:end="322:41">+=</operator> <name pos:start="322:43" pos:end="322:48">stride</name></expr></incr>)</control><block type="pseudo" pos:start="324:21" pos:end="324:37"><block_content pos:start="324:21" pos:end="324:37">

                    <expr_stmt pos:start="324:21" pos:end="324:37"><expr pos:start="324:21" pos:end="324:36"><name pos:start="324:21" pos:end="324:26"><name pos:start="324:21" pos:end="324:23">src</name><index pos:start="324:24" pos:end="324:26">[<expr pos:start="324:25" pos:end="324:25"><name pos:start="324:25" pos:end="324:25">x</name></expr>]</index></name> <operator pos:start="324:28" pos:end="324:30">&lt;&lt;=</operator> <name pos:start="324:32" pos:end="324:36">shift</name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="326:17" pos:end="326:51"><expr pos:start="326:17" pos:end="326:50"><name pos:start="326:17" pos:end="326:19">src</name> <operator pos:start="326:21" pos:end="326:22">+=</operator> <name pos:start="326:24" pos:end="326:50"><name pos:start="326:24" pos:end="326:24">s</name><operator pos:start="326:25" pos:end="326:26">-&gt;</operator><name pos:start="326:27" pos:end="326:37">picture_ptr</name><operator pos:start="326:38" pos:end="326:39">-&gt;</operator><name pos:start="326:40" pos:end="326:47">linesize</name><index pos:start="326:48" pos:end="326:50">[<expr pos:start="326:49" pos:end="326:49"><literal type="number" pos:start="326:49" pos:end="326:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="330:11" pos:end="346:9">else <block pos:start="330:16" pos:end="346:9">{<block_content pos:start="332:13" pos:end="344:13">

            <decl_stmt pos:start="332:13" pos:end="332:64"><decl pos:start="332:13" pos:end="332:63"><type pos:start="332:13" pos:end="332:22"><name pos:start="332:13" pos:end="332:20">uint16_t</name> <modifier pos:start="332:22" pos:end="332:22">*</modifier></type><name pos:start="332:23" pos:end="332:25">src</name> <init pos:start="332:27" pos:end="332:63">= <expr pos:start="332:29" pos:end="332:63"><operator pos:start="332:29" pos:end="332:29">(</operator><name pos:start="332:30" pos:end="332:37">uint16_t</name> <operator pos:start="332:39" pos:end="332:39">*</operator><operator pos:start="332:40" pos:end="332:40">)</operator><name pos:start="332:41" pos:end="332:63"><name pos:start="332:41" pos:end="332:41">s</name><operator pos:start="332:42" pos:end="332:43">-&gt;</operator><name pos:start="332:44" pos:end="332:54">picture_ptr</name><operator pos:start="332:55" pos:end="332:56">-&gt;</operator><name pos:start="332:57" pos:end="332:60">data</name><index pos:start="332:61" pos:end="332:63">[<expr pos:start="332:62" pos:end="332:62"><literal type="number" pos:start="332:62" pos:end="332:62">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <for pos:start="336:13" pos:end="344:13">for <control pos:start="336:17" pos:end="336:43">(<init pos:start="336:18" pos:end="336:23"><expr pos:start="336:18" pos:end="336:22"><name pos:start="336:18" pos:end="336:18">i</name> <operator pos:start="336:20" pos:end="336:20">=</operator> <literal type="number" pos:start="336:22" pos:end="336:22">0</literal></expr>;</init> <condition pos:start="336:25" pos:end="336:38"><expr pos:start="336:25" pos:end="336:37"><name pos:start="336:25" pos:end="336:25">i</name> <operator pos:start="336:27" pos:end="336:27">&lt;</operator> <name pos:start="336:29" pos:end="336:37"><name pos:start="336:29" pos:end="336:29">s</name><operator pos:start="336:30" pos:end="336:31">-&gt;</operator><name pos:start="336:32" pos:end="336:37">height</name></name></expr>;</condition> <incr pos:start="336:40" pos:end="336:42"><expr pos:start="336:40" pos:end="336:42"><name pos:start="336:40" pos:end="336:40">i</name><operator pos:start="336:41" pos:end="336:42">++</operator></expr></incr>)</control> <block pos:start="336:45" pos:end="344:13">{<block_content pos:start="338:17" pos:end="342:55">

                <for pos:start="338:17" pos:end="340:37">for <control pos:start="338:21" pos:end="338:39">(<init pos:start="338:22" pos:end="338:27"><expr pos:start="338:22" pos:end="338:26"><name pos:start="338:22" pos:end="338:22">x</name> <operator pos:start="338:24" pos:end="338:24">=</operator> <literal type="number" pos:start="338:26" pos:end="338:26">0</literal></expr>;</init> <condition pos:start="338:29" pos:end="338:34"><expr pos:start="338:29" pos:end="338:33"><name pos:start="338:29" pos:end="338:29">x</name> <operator pos:start="338:31" pos:end="338:31">&lt;</operator> <name pos:start="338:33" pos:end="338:33">w</name></expr>;</condition> <incr pos:start="338:36" pos:end="338:38"><expr pos:start="338:36" pos:end="338:38"><name pos:start="338:36" pos:end="338:36">x</name><operator pos:start="338:37" pos:end="338:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="340:21" pos:end="340:37"><block_content pos:start="340:21" pos:end="340:37">

                    <expr_stmt pos:start="340:21" pos:end="340:37"><expr pos:start="340:21" pos:end="340:36"><name pos:start="340:21" pos:end="340:26"><name pos:start="340:21" pos:end="340:23">src</name><index pos:start="340:24" pos:end="340:26">[<expr pos:start="340:25" pos:end="340:25"><name pos:start="340:25" pos:end="340:25">x</name></expr>]</index></name> <operator pos:start="340:28" pos:end="340:30">&lt;&lt;=</operator> <name pos:start="340:32" pos:end="340:36">shift</name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="342:17" pos:end="342:55"><expr pos:start="342:17" pos:end="342:54"><name pos:start="342:17" pos:end="342:19">src</name> <operator pos:start="342:21" pos:end="342:22">+=</operator> <name pos:start="342:24" pos:end="342:50"><name pos:start="342:24" pos:end="342:24">s</name><operator pos:start="342:25" pos:end="342:26">-&gt;</operator><name pos:start="342:27" pos:end="342:37">picture_ptr</name><operator pos:start="342:38" pos:end="342:39">-&gt;</operator><name pos:start="342:40" pos:end="342:47">linesize</name><index pos:start="342:48" pos:end="342:50">[<expr pos:start="342:49" pos:end="342:49"><literal type="number" pos:start="342:49" pos:end="342:49">0</literal></expr>]</index></name> <operator pos:start="342:52" pos:end="342:52">/</operator> <literal type="number" pos:start="342:54" pos:end="342:54">2</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="352:1" pos:end="352:4"><name pos:start="352:1" pos:end="352:3">end</name>:</label>

    <expr_stmt pos:start="354:5" pos:end="354:19"><expr pos:start="354:5" pos:end="354:18"><call pos:start="354:5" pos:end="354:18"><name pos:start="354:5" pos:end="354:11">av_free</name><argument_list pos:start="354:12" pos:end="354:18">(<argument pos:start="354:13" pos:end="354:17"><expr pos:start="354:13" pos:end="354:17"><name pos:start="354:13" pos:end="354:17">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="356:5" pos:end="356:18"><expr pos:start="356:5" pos:end="356:17"><call pos:start="356:5" pos:end="356:17"><name pos:start="356:5" pos:end="356:11">av_free</name><argument_list pos:start="356:12" pos:end="356:17">(<argument pos:start="356:13" pos:end="356:16"><expr pos:start="356:13" pos:end="356:16"><name pos:start="356:13" pos:end="356:16">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="360:5" pos:end="360:15">return <expr pos:start="360:12" pos:end="360:14"><name pos:start="360:12" pos:end="360:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
