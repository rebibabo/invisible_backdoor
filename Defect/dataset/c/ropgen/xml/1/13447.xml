<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13447.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">ehci_reset</name><parameter_list pos:start="1:23" pos:end="1:36">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:29"><name pos:start="1:24" pos:end="1:27">void</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:35">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:32">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">EHCIState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">USBDevice</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:29"><name pos:start="9:16" pos:end="9:19">devs</name><index pos:start="9:20" pos:end="9:29">[<expr pos:start="9:21" pos:end="9:28"><name pos:start="9:21" pos:end="9:28">NB_PORTS</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><call pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:24">trace_usb_ehci_reset</name><argument_list pos:start="13:25" pos:end="13:26">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="23:7">/*

     * Do the detach before touching portsc, so that it correctly gets send to

     * us or to our companion based on PORTSC_POWNER before the reset.

     */</comment>

    <for pos:start="25:5" pos:end="35:5">for<control pos:start="25:8" pos:end="25:33">(<init pos:start="25:9" pos:end="25:14"><expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">i</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr>;</init> <condition pos:start="25:16" pos:end="25:28"><expr pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:16">i</name> <operator pos:start="25:18" pos:end="25:18">&lt;</operator> <name pos:start="25:20" pos:end="25:27">NB_PORTS</name></expr>;</condition> <incr pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:30">i</name><operator pos:start="25:31" pos:end="25:32">++</operator></expr></incr>)</control> <block pos:start="25:35" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:9">

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:12">devs</name><index pos:start="27:13" pos:end="27:15">[<expr pos:start="27:14" pos:end="27:14"><name pos:start="27:14" pos:end="27:14">i</name></expr>]</index></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:29"><name pos:start="27:19" pos:end="27:19">s</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:26">ports</name><index pos:start="27:27" pos:end="27:29">[<expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">i</name></expr>]</index></name><operator pos:start="27:30" pos:end="27:30">.</operator><name pos:start="27:31" pos:end="27:33">dev</name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:41">(<expr pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:16">devs</name><index pos:start="29:17" pos:end="29:19">[<expr pos:start="29:18" pos:end="29:18"><name pos:start="29:18" pos:end="29:18">i</name></expr>]</index></name> <operator pos:start="29:21" pos:end="29:22">&amp;&amp;</operator> <name pos:start="29:24" pos:end="29:30"><name pos:start="29:24" pos:end="29:27">devs</name><index pos:start="29:28" pos:end="29:30">[<expr pos:start="29:29" pos:end="29:29"><name pos:start="29:29" pos:end="29:29">i</name></expr>]</index></name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:40">attached</name></expr>)</condition> <block pos:start="29:43" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:37">

            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><call pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:22">usb_detach</name><argument_list pos:start="31:23" pos:end="31:36">(<argument pos:start="31:24" pos:end="31:35"><expr pos:start="31:24" pos:end="31:35"><operator pos:start="31:24" pos:end="31:24">&amp;</operator><name pos:start="31:25" pos:end="31:35"><name pos:start="31:25" pos:end="31:25">s</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:32">ports</name><index pos:start="31:33" pos:end="31:35">[<expr pos:start="31:34" pos:end="31:34"><name pos:start="31:34" pos:end="31:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="39:5" pos:end="39:61"><expr pos:start="39:5" pos:end="39:60"><call pos:start="39:5" pos:end="39:60"><name pos:start="39:5" pos:end="39:10">memset</name><argument_list pos:start="39:11" pos:end="39:60">(<argument pos:start="39:12" pos:end="39:30"><expr pos:start="39:12" pos:end="39:30"><operator pos:start="39:12" pos:end="39:12">&amp;</operator><name pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:19">mmio</name><index pos:start="39:20" pos:end="39:30">[<expr pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:29">OPREGBASE</name></expr>]</index></name></expr></argument>, <argument pos:start="39:33" pos:end="39:36"><expr pos:start="39:33" pos:end="39:36"><literal type="number" pos:start="39:33" pos:end="39:36">0x00</literal></expr></argument>, <argument pos:start="39:39" pos:end="39:59"><expr pos:start="39:39" pos:end="39:59"><name pos:start="39:39" pos:end="39:47">MMIO_SIZE</name> <operator pos:start="39:49" pos:end="39:49">-</operator> <name pos:start="39:51" pos:end="39:59">OPREGBASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:47"><expr pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:13"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:13">usbcmd</name></name> <operator pos:start="43:15" pos:end="43:15">=</operator> <name pos:start="43:17" pos:end="43:29">NB_MAXINTRATE</name> <operator pos:start="43:31" pos:end="43:32">&lt;&lt;</operator> <name pos:start="43:34" pos:end="43:46">USBCMD_ITC_SH</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:28"><expr pos:start="45:5" pos:end="45:27"><name pos:start="45:5" pos:end="45:13"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:13">usbsts</name></name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:27">USBSTS_HALT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:26"><expr pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:21">usbsts_pending</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <literal type="number" pos:start="47:25" pos:end="47:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:21">usbsts_frindex</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="number" pos:start="49:25" pos:end="49:25">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:13">astate</name></name> <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:28">EST_INACTIVE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:29"><expr pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:13"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:13">pstate</name></name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:28">EST_INACTIVE</name></expr>;</expr_stmt>



    <for pos:start="59:5" pos:end="79:5">for<control pos:start="59:8" pos:end="59:33">(<init pos:start="59:9" pos:end="59:14"><expr pos:start="59:9" pos:end="59:13"><name pos:start="59:9" pos:end="59:9">i</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <literal type="number" pos:start="59:13" pos:end="59:13">0</literal></expr>;</init> <condition pos:start="59:16" pos:end="59:28"><expr pos:start="59:16" pos:end="59:27"><name pos:start="59:16" pos:end="59:16">i</name> <operator pos:start="59:18" pos:end="59:18">&lt;</operator> <name pos:start="59:20" pos:end="59:27">NB_PORTS</name></expr>;</condition> <incr pos:start="59:30" pos:end="59:32"><expr pos:start="59:30" pos:end="59:32"><name pos:start="59:30" pos:end="59:30">i</name><operator pos:start="59:31" pos:end="59:32">++</operator></expr></incr>)</control> <block pos:start="59:35" pos:end="79:5">{<block_content pos:start="61:9" pos:end="77:9">

        <if_stmt pos:start="61:9" pos:end="69:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:34">(<expr pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:33"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:30">companion_ports</name><index pos:start="61:31" pos:end="61:33">[<expr pos:start="61:32" pos:end="61:32"><name pos:start="61:32" pos:end="61:32">i</name></expr>]</index></name></expr>)</condition> <block pos:start="61:36" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:57">

            <expr_stmt pos:start="63:13" pos:end="63:57"><expr pos:start="63:13" pos:end="63:56"><name pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:21">portsc</name><index pos:start="63:22" pos:end="63:24">[<expr pos:start="63:23" pos:end="63:23"><name pos:start="63:23" pos:end="63:23">i</name></expr>]</index></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <name pos:start="63:28" pos:end="63:40">PORTSC_POWNER</name> <operator pos:start="63:42" pos:end="63:42">|</operator> <name pos:start="63:44" pos:end="63:56">PORTSC_PPOWER</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="69:9">else <block pos:start="65:16" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:41">

            <expr_stmt pos:start="67:13" pos:end="67:41"><expr pos:start="67:13" pos:end="67:40"><name pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:21">portsc</name><index pos:start="67:22" pos:end="67:24">[<expr pos:start="67:23" pos:end="67:23"><name pos:start="67:23" pos:end="67:23">i</name></expr>]</index></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:40">PORTSC_PPOWER</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="71:9" pos:end="77:9"><if pos:start="71:9" pos:end="77:9">if <condition pos:start="71:12" pos:end="71:41">(<expr pos:start="71:13" pos:end="71:40"><name pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:16">devs</name><index pos:start="71:17" pos:end="71:19">[<expr pos:start="71:18" pos:end="71:18"><name pos:start="71:18" pos:end="71:18">i</name></expr>]</index></name> <operator pos:start="71:21" pos:end="71:22">&amp;&amp;</operator> <name pos:start="71:24" pos:end="71:30"><name pos:start="71:24" pos:end="71:27">devs</name><index pos:start="71:28" pos:end="71:30">[<expr pos:start="71:29" pos:end="71:29"><name pos:start="71:29" pos:end="71:29">i</name></expr>]</index></name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:40">attached</name></expr>)</condition> <block pos:start="71:43" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:38">

            <expr_stmt pos:start="73:13" pos:end="73:37"><expr pos:start="73:13" pos:end="73:36"><call pos:start="73:13" pos:end="73:36"><name pos:start="73:13" pos:end="73:22">usb_attach</name><argument_list pos:start="73:23" pos:end="73:36">(<argument pos:start="73:24" pos:end="73:35"><expr pos:start="73:24" pos:end="73:35"><operator pos:start="73:24" pos:end="73:24">&amp;</operator><name pos:start="73:25" pos:end="73:35"><name pos:start="73:25" pos:end="73:25">s</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:32">ports</name><index pos:start="73:33" pos:end="73:35">[<expr pos:start="73:34" pos:end="73:34"><name pos:start="73:34" pos:end="73:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:38"><expr pos:start="75:13" pos:end="75:37"><call pos:start="75:13" pos:end="75:37"><name pos:start="75:13" pos:end="75:28">usb_device_reset</name><argument_list pos:start="75:29" pos:end="75:37">(<argument pos:start="75:30" pos:end="75:36"><expr pos:start="75:30" pos:end="75:36"><name pos:start="75:30" pos:end="75:36"><name pos:start="75:30" pos:end="75:33">devs</name><index pos:start="75:34" pos:end="75:36">[<expr pos:start="75:35" pos:end="75:35"><name pos:start="75:35" pos:end="75:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="81:5" pos:end="81:30"><expr pos:start="81:5" pos:end="81:29"><call pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:23">ehci_queues_rip_all</name><argument_list pos:start="81:24" pos:end="81:29">(<argument pos:start="81:25" pos:end="81:25"><expr pos:start="81:25" pos:end="81:25"><name pos:start="81:25" pos:end="81:25">s</name></expr></argument>, <argument pos:start="81:28" pos:end="81:28"><expr pos:start="81:28" pos:end="81:28"><literal type="number" pos:start="81:28" pos:end="81:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:30"><expr pos:start="83:5" pos:end="83:29"><call pos:start="83:5" pos:end="83:29"><name pos:start="83:5" pos:end="83:23">ehci_queues_rip_all</name><argument_list pos:start="83:24" pos:end="83:29">(<argument pos:start="83:25" pos:end="83:25"><expr pos:start="83:25" pos:end="83:25"><name pos:start="83:25" pos:end="83:25">s</name></expr></argument>, <argument pos:start="83:28" pos:end="83:28"><expr pos:start="83:28" pos:end="83:28"><literal type="number" pos:start="83:28" pos:end="83:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:35"><expr pos:start="85:5" pos:end="85:34"><call pos:start="85:5" pos:end="85:34"><name pos:start="85:5" pos:end="85:18">qemu_del_timer</name><argument_list pos:start="85:19" pos:end="85:34">(<argument pos:start="85:20" pos:end="85:33"><expr pos:start="85:20" pos:end="85:33"><name pos:start="85:20" pos:end="85:33"><name pos:start="85:20" pos:end="85:20">s</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:33">frame_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:32"><expr pos:start="87:5" pos:end="87:31"><call pos:start="87:5" pos:end="87:31"><name pos:start="87:5" pos:end="87:18">qemu_bh_cancel</name><argument_list pos:start="87:19" pos:end="87:31">(<argument pos:start="87:20" pos:end="87:30"><expr pos:start="87:20" pos:end="87:30"><name pos:start="87:20" pos:end="87:30"><name pos:start="87:20" pos:end="87:20">s</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:30">async_bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
