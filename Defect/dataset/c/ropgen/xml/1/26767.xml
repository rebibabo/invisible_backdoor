<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26767.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">usb_xhci_initfn</name><parameter_list pos:start="1:27" pos:end="1:49">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:33">struct</name> <name pos:start="1:35" pos:end="1:43">PCIDevice</name></name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:13">{<block_content pos:start="5:5" pos:end="139:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>



    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:56"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">XHCIState</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:19">xhci</name> <init pos:start="9:21" pos:end="9:56">= <expr pos:start="9:23" pos:end="9:56"><call pos:start="9:23" pos:end="9:56"><name pos:start="9:23" pos:end="9:31">DO_UPCAST</name><argument_list pos:start="9:32" pos:end="9:56">(<argument pos:start="9:33" pos:end="9:41"><expr pos:start="9:33" pos:end="9:41"><name pos:start="9:33" pos:end="9:41">XHCIState</name></expr></argument>, <argument pos:start="9:44" pos:end="9:50"><expr pos:start="9:44" pos:end="9:50"><name pos:start="9:44" pos:end="9:50">pci_dev</name></expr></argument>, <argument pos:start="9:53" pos:end="9:55"><expr pos:start="9:53" pos:end="9:55"><name pos:start="9:53" pos:end="9:55">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:48"><expr pos:start="13:5" pos:end="13:47"><name pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:8">xhci</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:17">pci_dev</name><operator pos:start="13:18" pos:end="13:18">.</operator><name pos:start="13:19" pos:end="13:24">config</name><index pos:start="13:25" pos:end="13:40">[<expr pos:start="13:26" pos:end="13:39"><name pos:start="13:26" pos:end="13:39">PCI_CLASS_PROG</name></expr>]</index></name> <operator pos:start="13:42" pos:end="13:42">=</operator> <literal type="number" pos:start="13:44" pos:end="13:47">0x30</literal></expr>;</expr_stmt>    <comment type="block" pos:start="13:53" pos:end="13:62">/* xHCI */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:8">xhci</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:17">pci_dev</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:24">config</name><index pos:start="15:25" pos:end="15:43">[<expr pos:start="15:26" pos:end="15:42"><name pos:start="15:26" pos:end="15:42">PCI_INTERRUPT_PIN</name></expr>]</index></name> <operator pos:start="15:45" pos:end="15:45">=</operator> <literal type="number" pos:start="15:47" pos:end="15:50">0x01</literal></expr>;</expr_stmt> <comment type="block" pos:start="15:53" pos:end="15:73">/* interrupt pin 1 */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:8">xhci</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:17">pci_dev</name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:24">config</name><index pos:start="17:25" pos:end="17:45">[<expr pos:start="17:26" pos:end="17:44"><name pos:start="17:26" pos:end="17:44">PCI_CACHE_LINE_SIZE</name></expr>]</index></name> <operator pos:start="17:47" pos:end="17:47">=</operator> <literal type="number" pos:start="17:49" pos:end="17:52">0x10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:8">xhci</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:17">pci_dev</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:24">config</name><index pos:start="19:25" pos:end="19:30">[<expr pos:start="19:26" pos:end="19:29"><literal type="number" pos:start="19:26" pos:end="19:29">0x60</literal></expr>]</index></name> <operator pos:start="19:32" pos:end="19:32">=</operator> <literal type="number" pos:start="19:34" pos:end="19:37">0x30</literal></expr>;</expr_stmt> <comment type="block" pos:start="19:40" pos:end="19:59">/* release number */</comment>



    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:17">usb_xhci_init</name><argument_list pos:start="23:18" pos:end="23:35">(<argument pos:start="23:19" pos:end="23:22"><expr pos:start="23:19" pos:end="23:22"><name pos:start="23:19" pos:end="23:22">xhci</name></expr></argument>, <argument pos:start="23:25" pos:end="23:34"><expr pos:start="23:25" pos:end="23:34"><operator pos:start="23:25" pos:end="23:25">&amp;</operator><name pos:start="23:26" pos:end="23:34"><name pos:start="23:26" pos:end="23:28">dev</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:34">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="139:13"><if pos:start="27:5" pos:end="139:13">if <condition pos:start="27:8" pos:end="27:34">(<expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:12">xhci</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:22">numintrs</name></name> <operator pos:start="27:24" pos:end="27:24">&gt;</operator> <name pos:start="27:26" pos:end="27:33">MAXINTRS</name></expr>)</condition> <block pos:start="27:36" pos:end="139:13">{<block_content pos:start="29:9" pos:end="139:13">

        <expr_stmt pos:start="29:9" pos:end="29:34"><expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:12">xhci</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:22">numintrs</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:33">MAXINTRS</name></expr>;</expr_stmt>





    <if_stmt pos:start="35:5" pos:end="139:13"><if pos:start="35:5" pos:end="139:13">if <condition pos:start="35:8" pos:end="35:27">(<expr pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:12">xhci</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:22">numintrs</name></name> <operator pos:start="35:24" pos:end="35:24">&lt;</operator> <literal type="number" pos:start="35:26" pos:end="35:26">1</literal></expr>)</condition> <block pos:start="35:29" pos:end="139:13">{<block_content pos:start="37:9" pos:end="139:13">

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:12">xhci</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:22">numintrs</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <literal type="number" pos:start="37:26" pos:end="37:26">1</literal></expr>;</expr_stmt>


    <if_stmt pos:start="40:5" pos:end="139:13"><if pos:start="40:5" pos:end="139:13">if <condition pos:start="40:8" pos:end="40:34">(<expr pos:start="40:9" pos:end="40:33"><name pos:start="40:9" pos:end="40:22"><name pos:start="40:9" pos:end="40:12">xhci</name><operator pos:start="40:13" pos:end="40:14">-&gt;</operator><name pos:start="40:15" pos:end="40:22">numslots</name></name> <operator pos:start="40:24" pos:end="40:24">&gt;</operator> <name pos:start="40:26" pos:end="40:33">MAXSLOTS</name></expr>)</condition> <block pos:start="40:36" pos:end="139:13">{<block_content pos:start="42:9" pos:end="139:13">

        <expr_stmt pos:start="42:9" pos:end="42:34"><expr pos:start="42:9" pos:end="42:33"><name pos:start="42:9" pos:end="42:22"><name pos:start="42:9" pos:end="42:12">xhci</name><operator pos:start="42:13" pos:end="42:14">-&gt;</operator><name pos:start="42:15" pos:end="42:22">numslots</name></name> <operator pos:start="42:24" pos:end="42:24">=</operator> <name pos:start="42:26" pos:end="42:33">MAXSLOTS</name></expr>;</expr_stmt>


    <if_stmt pos:start="45:5" pos:end="139:13"><if pos:start="45:5" pos:end="139:13">if <condition pos:start="45:8" pos:end="45:27">(<expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:12">xhci</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:22">numslots</name></name> <operator pos:start="45:24" pos:end="45:24">&lt;</operator> <literal type="number" pos:start="45:26" pos:end="45:26">1</literal></expr>)</condition> <block pos:start="45:29" pos:end="139:13">{<block_content pos:start="47:9" pos:end="139:13">

        <expr_stmt pos:start="47:9" pos:end="47:27"><expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:12">xhci</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:22">numslots</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr>;</expr_stmt>




    <expr_stmt pos:start="52:5" pos:end="52:78"><expr pos:start="52:5" pos:end="52:77"><name pos:start="52:5" pos:end="52:22"><name pos:start="52:5" pos:end="52:8">xhci</name><operator pos:start="52:9" pos:end="52:10">-&gt;</operator><name pos:start="52:11" pos:end="52:22">mfwrap_timer</name></name> <operator pos:start="52:24" pos:end="52:24">=</operator> <call pos:start="52:26" pos:end="52:77"><name pos:start="52:26" pos:end="52:42">qemu_new_timer_ns</name><argument_list pos:start="52:43" pos:end="52:77">(<argument pos:start="52:44" pos:end="52:51"><expr pos:start="52:44" pos:end="52:51"><name pos:start="52:44" pos:end="52:51">vm_clock</name></expr></argument>, <argument pos:start="52:54" pos:end="52:70"><expr pos:start="52:54" pos:end="52:70"><name pos:start="52:54" pos:end="52:70">xhci_mfwrap_timer</name></expr></argument>, <argument pos:start="52:73" pos:end="52:76"><expr pos:start="52:73" pos:end="52:76"><name pos:start="52:73" pos:end="52:76">xhci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="56:5" pos:end="56:37"><expr pos:start="56:5" pos:end="56:36"><name pos:start="56:5" pos:end="56:13"><name pos:start="56:5" pos:end="56:8">xhci</name><operator pos:start="56:9" pos:end="56:10">-&gt;</operator><name pos:start="56:11" pos:end="56:13">irq</name></name> <operator pos:start="56:15" pos:end="56:15">=</operator> <name pos:start="56:17" pos:end="56:36"><name pos:start="56:17" pos:end="56:20">xhci</name><operator pos:start="56:21" pos:end="56:22">-&gt;</operator><name pos:start="56:23" pos:end="56:29">pci_dev</name><operator pos:start="56:30" pos:end="56:30">.</operator><name pos:start="56:31" pos:end="56:33">irq</name><index pos:start="56:34" pos:end="56:36">[<expr pos:start="56:35" pos:end="56:35"><literal type="number" pos:start="56:35" pos:end="56:35">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="60:5" pos:end="60:53"><expr pos:start="60:5" pos:end="60:52"><call pos:start="60:5" pos:end="60:52"><name pos:start="60:5" pos:end="60:22">memory_region_init</name><argument_list pos:start="60:23" pos:end="60:52">(<argument pos:start="60:24" pos:end="60:33"><expr pos:start="60:24" pos:end="60:33"><operator pos:start="60:24" pos:end="60:24">&amp;</operator><name pos:start="60:25" pos:end="60:33"><name pos:start="60:25" pos:end="60:28">xhci</name><operator pos:start="60:29" pos:end="60:30">-&gt;</operator><name pos:start="60:31" pos:end="60:33">mem</name></name></expr></argument>, <argument pos:start="60:36" pos:end="60:41"><expr pos:start="60:36" pos:end="60:41"><literal type="string" pos:start="60:36" pos:end="60:41">"xhci"</literal></expr></argument>, <argument pos:start="60:44" pos:end="60:51"><expr pos:start="60:44" pos:end="60:51"><name pos:start="60:44" pos:end="60:51">LEN_REGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="62:5" pos:end="64:51"><expr pos:start="62:5" pos:end="64:50"><call pos:start="62:5" pos:end="64:50"><name pos:start="62:5" pos:end="62:25">memory_region_init_io</name><argument_list pos:start="62:26" pos:end="64:50">(<argument pos:start="62:27" pos:end="62:40"><expr pos:start="62:27" pos:end="62:40"><operator pos:start="62:27" pos:end="62:27">&amp;</operator><name pos:start="62:28" pos:end="62:40"><name pos:start="62:28" pos:end="62:31">xhci</name><operator pos:start="62:32" pos:end="62:33">-&gt;</operator><name pos:start="62:34" pos:end="62:40">mem_cap</name></name></expr></argument>, <argument pos:start="62:43" pos:end="62:55"><expr pos:start="62:43" pos:end="62:55"><operator pos:start="62:43" pos:end="62:43">&amp;</operator><name pos:start="62:44" pos:end="62:55">xhci_cap_ops</name></expr></argument>, <argument pos:start="62:58" pos:end="62:61"><expr pos:start="62:58" pos:end="62:61"><name pos:start="62:58" pos:end="62:61">xhci</name></expr></argument>,

                          <argument pos:start="64:27" pos:end="64:40"><expr pos:start="64:27" pos:end="64:40"><literal type="string" pos:start="64:27" pos:end="64:40">"capabilities"</literal></expr></argument>, <argument pos:start="64:43" pos:end="64:49"><expr pos:start="64:43" pos:end="64:49"><name pos:start="64:43" pos:end="64:49">LEN_CAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="66:5" pos:end="68:48"><expr pos:start="66:5" pos:end="68:47"><call pos:start="66:5" pos:end="68:47"><name pos:start="66:5" pos:end="66:25">memory_region_init_io</name><argument_list pos:start="66:26" pos:end="68:47">(<argument pos:start="66:27" pos:end="66:41"><expr pos:start="66:27" pos:end="66:41"><operator pos:start="66:27" pos:end="66:27">&amp;</operator><name pos:start="66:28" pos:end="66:41"><name pos:start="66:28" pos:end="66:31">xhci</name><operator pos:start="66:32" pos:end="66:33">-&gt;</operator><name pos:start="66:34" pos:end="66:41">mem_oper</name></name></expr></argument>, <argument pos:start="66:44" pos:end="66:57"><expr pos:start="66:44" pos:end="66:57"><operator pos:start="66:44" pos:end="66:44">&amp;</operator><name pos:start="66:45" pos:end="66:57">xhci_oper_ops</name></expr></argument>, <argument pos:start="66:60" pos:end="66:63"><expr pos:start="66:60" pos:end="66:63"><name pos:start="66:60" pos:end="66:63">xhci</name></expr></argument>,

                          <argument pos:start="68:27" pos:end="68:39"><expr pos:start="68:27" pos:end="68:39"><literal type="string" pos:start="68:27" pos:end="68:39">"operational"</literal></expr></argument>, <argument pos:start="68:42" pos:end="68:46"><expr pos:start="68:42" pos:end="68:46"><literal type="number" pos:start="68:42" pos:end="68:46">0x400</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="70:5" pos:end="72:50"><expr pos:start="70:5" pos:end="72:49"><call pos:start="70:5" pos:end="72:49"><name pos:start="70:5" pos:end="70:25">memory_region_init_io</name><argument_list pos:start="70:26" pos:end="72:49">(<argument pos:start="70:27" pos:end="70:44"><expr pos:start="70:27" pos:end="70:44"><operator pos:start="70:27" pos:end="70:27">&amp;</operator><name pos:start="70:28" pos:end="70:44"><name pos:start="70:28" pos:end="70:31">xhci</name><operator pos:start="70:32" pos:end="70:33">-&gt;</operator><name pos:start="70:34" pos:end="70:44">mem_runtime</name></name></expr></argument>, <argument pos:start="70:47" pos:end="70:63"><expr pos:start="70:47" pos:end="70:63"><operator pos:start="70:47" pos:end="70:47">&amp;</operator><name pos:start="70:48" pos:end="70:63">xhci_runtime_ops</name></expr></argument>, <argument pos:start="70:66" pos:end="70:69"><expr pos:start="70:66" pos:end="70:69"><name pos:start="70:66" pos:end="70:69">xhci</name></expr></argument>,

                          <argument pos:start="72:27" pos:end="72:35"><expr pos:start="72:27" pos:end="72:35"><literal type="string" pos:start="72:27" pos:end="72:35">"runtime"</literal></expr></argument>, <argument pos:start="72:38" pos:end="72:48"><expr pos:start="72:38" pos:end="72:48"><name pos:start="72:38" pos:end="72:48">LEN_RUNTIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="74:5" pos:end="76:52"><expr pos:start="74:5" pos:end="76:51"><call pos:start="74:5" pos:end="76:51"><name pos:start="74:5" pos:end="74:25">memory_region_init_io</name><argument_list pos:start="74:26" pos:end="76:51">(<argument pos:start="74:27" pos:end="74:45"><expr pos:start="74:27" pos:end="74:45"><operator pos:start="74:27" pos:end="74:27">&amp;</operator><name pos:start="74:28" pos:end="74:45"><name pos:start="74:28" pos:end="74:31">xhci</name><operator pos:start="74:32" pos:end="74:33">-&gt;</operator><name pos:start="74:34" pos:end="74:45">mem_doorbell</name></name></expr></argument>, <argument pos:start="74:48" pos:end="74:65"><expr pos:start="74:48" pos:end="74:65"><operator pos:start="74:48" pos:end="74:48">&amp;</operator><name pos:start="74:49" pos:end="74:65">xhci_doorbell_ops</name></expr></argument>, <argument pos:start="74:68" pos:end="74:71"><expr pos:start="74:68" pos:end="74:71"><name pos:start="74:68" pos:end="74:71">xhci</name></expr></argument>,

                          <argument pos:start="76:27" pos:end="76:36"><expr pos:start="76:27" pos:end="76:36"><literal type="string" pos:start="76:27" pos:end="76:36">"doorbell"</literal></expr></argument>, <argument pos:start="76:39" pos:end="76:50"><expr pos:start="76:39" pos:end="76:50"><name pos:start="76:39" pos:end="76:50">LEN_DOORBELL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="80:5" pos:end="80:74"><expr pos:start="80:5" pos:end="80:73"><call pos:start="80:5" pos:end="80:73"><name pos:start="80:5" pos:end="80:31">memory_region_add_subregion</name><argument_list pos:start="80:32" pos:end="80:73">(<argument pos:start="80:33" pos:end="80:42"><expr pos:start="80:33" pos:end="80:42"><operator pos:start="80:33" pos:end="80:33">&amp;</operator><name pos:start="80:34" pos:end="80:42"><name pos:start="80:34" pos:end="80:37">xhci</name><operator pos:start="80:38" pos:end="80:39">-&gt;</operator><name pos:start="80:40" pos:end="80:42">mem</name></name></expr></argument>, <argument pos:start="80:45" pos:end="80:45"><expr pos:start="80:45" pos:end="80:45"><literal type="number" pos:start="80:45" pos:end="80:45">0</literal></expr></argument>,            <argument pos:start="80:59" pos:end="80:72"><expr pos:start="80:59" pos:end="80:72"><operator pos:start="80:59" pos:end="80:59">&amp;</operator><name pos:start="80:60" pos:end="80:72"><name pos:start="80:60" pos:end="80:63">xhci</name><operator pos:start="80:64" pos:end="80:65">-&gt;</operator><name pos:start="80:66" pos:end="80:72">mem_cap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="82:5" pos:end="82:75"><expr pos:start="82:5" pos:end="82:74"><call pos:start="82:5" pos:end="82:74"><name pos:start="82:5" pos:end="82:31">memory_region_add_subregion</name><argument_list pos:start="82:32" pos:end="82:74">(<argument pos:start="82:33" pos:end="82:42"><expr pos:start="82:33" pos:end="82:42"><operator pos:start="82:33" pos:end="82:33">&amp;</operator><name pos:start="82:34" pos:end="82:42"><name pos:start="82:34" pos:end="82:37">xhci</name><operator pos:start="82:38" pos:end="82:39">-&gt;</operator><name pos:start="82:40" pos:end="82:42">mem</name></name></expr></argument>, <argument pos:start="82:45" pos:end="82:52"><expr pos:start="82:45" pos:end="82:52"><name pos:start="82:45" pos:end="82:52">OFF_OPER</name></expr></argument>,     <argument pos:start="82:59" pos:end="82:73"><expr pos:start="82:59" pos:end="82:73"><operator pos:start="82:59" pos:end="82:59">&amp;</operator><name pos:start="82:60" pos:end="82:73"><name pos:start="82:60" pos:end="82:63">xhci</name><operator pos:start="82:64" pos:end="82:65">-&gt;</operator><name pos:start="82:66" pos:end="82:73">mem_oper</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="84:5" pos:end="84:78"><expr pos:start="84:5" pos:end="84:77"><call pos:start="84:5" pos:end="84:77"><name pos:start="84:5" pos:end="84:31">memory_region_add_subregion</name><argument_list pos:start="84:32" pos:end="84:77">(<argument pos:start="84:33" pos:end="84:42"><expr pos:start="84:33" pos:end="84:42"><operator pos:start="84:33" pos:end="84:33">&amp;</operator><name pos:start="84:34" pos:end="84:42"><name pos:start="84:34" pos:end="84:37">xhci</name><operator pos:start="84:38" pos:end="84:39">-&gt;</operator><name pos:start="84:40" pos:end="84:42">mem</name></name></expr></argument>, <argument pos:start="84:45" pos:end="84:55"><expr pos:start="84:45" pos:end="84:55"><name pos:start="84:45" pos:end="84:55">OFF_RUNTIME</name></expr></argument>,  <argument pos:start="84:59" pos:end="84:76"><expr pos:start="84:59" pos:end="84:76"><operator pos:start="84:59" pos:end="84:59">&amp;</operator><name pos:start="84:60" pos:end="84:76"><name pos:start="84:60" pos:end="84:63">xhci</name><operator pos:start="84:64" pos:end="84:65">-&gt;</operator><name pos:start="84:66" pos:end="84:76">mem_runtime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="86:5" pos:end="86:79"><expr pos:start="86:5" pos:end="86:78"><call pos:start="86:5" pos:end="86:78"><name pos:start="86:5" pos:end="86:31">memory_region_add_subregion</name><argument_list pos:start="86:32" pos:end="86:78">(<argument pos:start="86:33" pos:end="86:42"><expr pos:start="86:33" pos:end="86:42"><operator pos:start="86:33" pos:end="86:33">&amp;</operator><name pos:start="86:34" pos:end="86:42"><name pos:start="86:34" pos:end="86:37">xhci</name><operator pos:start="86:38" pos:end="86:39">-&gt;</operator><name pos:start="86:40" pos:end="86:42">mem</name></name></expr></argument>, <argument pos:start="86:45" pos:end="86:56"><expr pos:start="86:45" pos:end="86:56"><name pos:start="86:45" pos:end="86:56">OFF_DOORBELL</name></expr></argument>, <argument pos:start="86:59" pos:end="86:77"><expr pos:start="86:59" pos:end="86:77"><operator pos:start="86:59" pos:end="86:59">&amp;</operator><name pos:start="86:60" pos:end="86:77"><name pos:start="86:60" pos:end="86:63">xhci</name><operator pos:start="86:64" pos:end="86:65">-&gt;</operator><name pos:start="86:66" pos:end="86:77">mem_doorbell</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="90:5" pos:end="139:13">for <control pos:start="90:9" pos:end="90:40">(<init pos:start="90:10" pos:end="90:15"><expr pos:start="90:10" pos:end="90:14"><name pos:start="90:10" pos:end="90:10">i</name> <operator pos:start="90:12" pos:end="90:12">=</operator> <literal type="number" pos:start="90:14" pos:end="90:14">0</literal></expr>;</init> <condition pos:start="90:17" pos:end="90:35"><expr pos:start="90:17" pos:end="90:34"><name pos:start="90:17" pos:end="90:17">i</name> <operator pos:start="90:19" pos:end="90:19">&lt;</operator> <name pos:start="90:21" pos:end="90:34"><name pos:start="90:21" pos:end="90:24">xhci</name><operator pos:start="90:25" pos:end="90:26">-&gt;</operator><name pos:start="90:27" pos:end="90:34">numports</name></name></expr>;</condition> <incr pos:start="90:37" pos:end="90:39"><expr pos:start="90:37" pos:end="90:39"><name pos:start="90:37" pos:end="90:37">i</name><operator pos:start="90:38" pos:end="90:39">++</operator></expr></incr>)</control> <block pos:start="90:42" pos:end="139:13">{<block_content pos:start="92:9" pos:end="139:13">

        <decl_stmt pos:start="92:9" pos:end="92:41"><decl pos:start="92:9" pos:end="92:40"><type pos:start="92:9" pos:end="92:18"><name pos:start="92:9" pos:end="92:16">XHCIPort</name> <modifier pos:start="92:18" pos:end="92:18">*</modifier></type><name pos:start="92:19" pos:end="92:22">port</name> <init pos:start="92:24" pos:end="92:40">= <expr pos:start="92:26" pos:end="92:40"><operator pos:start="92:26" pos:end="92:26">&amp;</operator><name pos:start="92:27" pos:end="92:40"><name pos:start="92:27" pos:end="92:30">xhci</name><operator pos:start="92:31" pos:end="92:32">-&gt;</operator><name pos:start="92:33" pos:end="92:37">ports</name><index pos:start="92:38" pos:end="92:40">[<expr pos:start="92:39" pos:end="92:39"><name pos:start="92:39" pos:end="92:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="94:9" pos:end="94:54"><decl pos:start="94:9" pos:end="94:53"><type pos:start="94:9" pos:end="94:16"><name pos:start="94:9" pos:end="94:16">uint32_t</name></type> <name pos:start="94:18" pos:end="94:23">offset</name> <init pos:start="94:25" pos:end="94:53">= <expr pos:start="94:27" pos:end="94:53"><name pos:start="94:27" pos:end="94:34">OFF_OPER</name> <operator pos:start="94:36" pos:end="94:36">+</operator> <literal type="number" pos:start="94:38" pos:end="94:44">0x400</literal> <operator pos:start="94:44" pos:end="94:44">+</operator> <literal type="number" pos:start="94:46" pos:end="94:49">0x10</literal> <operator pos:start="94:51" pos:end="94:51">*</operator> <name pos:start="94:53" pos:end="94:53">i</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="96:9" pos:end="96:26"><expr pos:start="96:9" pos:end="96:25"><name pos:start="96:9" pos:end="96:18"><name pos:start="96:9" pos:end="96:12">port</name><operator pos:start="96:13" pos:end="96:14">-&gt;</operator><name pos:start="96:15" pos:end="96:18">xhci</name></name> <operator pos:start="96:20" pos:end="96:20">=</operator> <name pos:start="96:22" pos:end="96:25">xhci</name></expr>;</expr_stmt>

        <expr_stmt pos:start="98:9" pos:end="100:48"><expr pos:start="98:9" pos:end="100:47"><call pos:start="98:9" pos:end="100:47"><name pos:start="98:9" pos:end="98:29">memory_region_init_io</name><argument_list pos:start="98:30" pos:end="100:47">(<argument pos:start="98:31" pos:end="98:40"><expr pos:start="98:31" pos:end="98:40"><operator pos:start="98:31" pos:end="98:31">&amp;</operator><name pos:start="98:32" pos:end="98:40"><name pos:start="98:32" pos:end="98:35">port</name><operator pos:start="98:36" pos:end="98:37">-&gt;</operator><name pos:start="98:38" pos:end="98:40">mem</name></name></expr></argument>, <argument pos:start="98:43" pos:end="98:56"><expr pos:start="98:43" pos:end="98:56"><operator pos:start="98:43" pos:end="98:43">&amp;</operator><name pos:start="98:44" pos:end="98:56">xhci_port_ops</name></expr></argument>, <argument pos:start="98:59" pos:end="98:62"><expr pos:start="98:59" pos:end="98:62"><name pos:start="98:59" pos:end="98:62">port</name></expr></argument>,

                              <argument pos:start="100:31" pos:end="100:40"><expr pos:start="100:31" pos:end="100:40"><name pos:start="100:31" pos:end="100:40"><name pos:start="100:31" pos:end="100:34">port</name><operator pos:start="100:35" pos:end="100:36">-&gt;</operator><name pos:start="100:37" pos:end="100:40">name</name></name></expr></argument>, <argument pos:start="100:43" pos:end="100:46"><expr pos:start="100:43" pos:end="100:46"><literal type="number" pos:start="100:43" pos:end="100:46">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="102:9" pos:end="102:68"><expr pos:start="102:9" pos:end="102:67"><call pos:start="102:9" pos:end="102:67"><name pos:start="102:9" pos:end="102:35">memory_region_add_subregion</name><argument_list pos:start="102:36" pos:end="102:67">(<argument pos:start="102:37" pos:end="102:46"><expr pos:start="102:37" pos:end="102:46"><operator pos:start="102:37" pos:end="102:37">&amp;</operator><name pos:start="102:38" pos:end="102:46"><name pos:start="102:38" pos:end="102:41">xhci</name><operator pos:start="102:42" pos:end="102:43">-&gt;</operator><name pos:start="102:44" pos:end="102:46">mem</name></name></expr></argument>, <argument pos:start="102:49" pos:end="102:54"><expr pos:start="102:49" pos:end="102:54"><name pos:start="102:49" pos:end="102:54">offset</name></expr></argument>, <argument pos:start="102:57" pos:end="102:66"><expr pos:start="102:57" pos:end="102:66"><operator pos:start="102:57" pos:end="102:57">&amp;</operator><name pos:start="102:58" pos:end="102:66"><name pos:start="102:58" pos:end="102:61">port</name><operator pos:start="102:62" pos:end="102:63">-&gt;</operator><name pos:start="102:64" pos:end="102:66">mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="107:5" pos:end="111:33"><expr pos:start="107:5" pos:end="111:32"><call pos:start="107:5" pos:end="111:32"><name pos:start="107:5" pos:end="107:20">pci_register_bar</name><argument_list pos:start="107:21" pos:end="111:32">(<argument pos:start="107:22" pos:end="107:35"><expr pos:start="107:22" pos:end="107:35"><operator pos:start="107:22" pos:end="107:22">&amp;</operator><name pos:start="107:23" pos:end="107:35"><name pos:start="107:23" pos:end="107:26">xhci</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:35">pci_dev</name></name></expr></argument>, <argument pos:start="107:38" pos:end="107:38"><expr pos:start="107:38" pos:end="107:38"><literal type="number" pos:start="107:38" pos:end="107:38">0</literal></expr></argument>,

                     <argument pos:start="109:22" pos:end="109:79"><expr pos:start="109:22" pos:end="109:79"><name pos:start="109:22" pos:end="109:50">PCI_BASE_ADDRESS_SPACE_MEMORY</name><operator pos:start="109:51" pos:end="109:51">|</operator><name pos:start="109:52" pos:end="109:79">PCI_BASE_ADDRESS_MEM_TYPE_64</name></expr></argument>,

                     <argument pos:start="111:22" pos:end="111:31"><expr pos:start="111:22" pos:end="111:31"><operator pos:start="111:22" pos:end="111:22">&amp;</operator><name pos:start="111:23" pos:end="111:31"><name pos:start="111:23" pos:end="111:26">xhci</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:31">mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:55"><expr pos:start="115:5" pos:end="115:54"><name pos:start="115:5" pos:end="115:7">ret</name> <operator pos:start="115:9" pos:end="115:9">=</operator> <call pos:start="115:11" pos:end="115:54"><name pos:start="115:11" pos:end="115:32">pcie_endpoint_cap_init</name><argument_list pos:start="115:33" pos:end="115:54">(<argument pos:start="115:34" pos:end="115:47"><expr pos:start="115:34" pos:end="115:47"><operator pos:start="115:34" pos:end="115:34">&amp;</operator><name pos:start="115:35" pos:end="115:47"><name pos:start="115:35" pos:end="115:38">xhci</name><operator pos:start="115:39" pos:end="115:40">-&gt;</operator><name pos:start="115:41" pos:end="115:47">pci_dev</name></name></expr></argument>, <argument pos:start="115:50" pos:end="115:53"><expr pos:start="115:50" pos:end="115:53"><literal type="number" pos:start="115:50" pos:end="115:53">0xa0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:21"><expr pos:start="117:5" pos:end="117:20"><call pos:start="117:5" pos:end="117:20"><name pos:start="117:5" pos:end="117:10">assert</name><argument_list pos:start="117:11" pos:end="117:20">(<argument pos:start="117:12" pos:end="117:19"><expr pos:start="117:12" pos:end="117:19"><name pos:start="117:12" pos:end="117:14">ret</name> <operator pos:start="117:16" pos:end="117:17">&gt;=</operator> <literal type="number" pos:start="117:19" pos:end="117:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="121:5" pos:end="139:13"><if pos:start="121:5" pos:end="139:13">if <condition pos:start="121:8" pos:end="121:47">(<expr pos:start="121:9" pos:end="121:46"><name pos:start="121:9" pos:end="121:19"><name pos:start="121:9" pos:end="121:12">xhci</name><operator pos:start="121:13" pos:end="121:14">-&gt;</operator><name pos:start="121:15" pos:end="121:19">flags</name></name> <operator pos:start="121:21" pos:end="121:21">&amp;</operator> <operator pos:start="121:23" pos:end="121:23">(</operator><literal type="number" pos:start="121:24" pos:end="121:24">1</literal> <operator pos:start="121:26" pos:end="121:27">&lt;&lt;</operator> <name pos:start="121:29" pos:end="121:45">XHCI_FLAG_USE_MSI</name><operator pos:start="121:46" pos:end="121:46">)</operator></expr>)</condition> <block pos:start="121:49" pos:end="139:13">{<block_content pos:start="123:9" pos:end="139:13">

        <expr_stmt pos:start="123:9" pos:end="123:68"><expr pos:start="123:9" pos:end="123:67"><call pos:start="123:9" pos:end="123:67"><name pos:start="123:9" pos:end="123:16">msi_init</name><argument_list pos:start="123:17" pos:end="123:67">(<argument pos:start="123:18" pos:end="123:31"><expr pos:start="123:18" pos:end="123:31"><operator pos:start="123:18" pos:end="123:18">&amp;</operator><name pos:start="123:19" pos:end="123:31"><name pos:start="123:19" pos:end="123:22">xhci</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:31">pci_dev</name></name></expr></argument>, <argument pos:start="123:34" pos:end="123:37"><expr pos:start="123:34" pos:end="123:37"><literal type="number" pos:start="123:34" pos:end="123:37">0x70</literal></expr></argument>, <argument pos:start="123:40" pos:end="123:53"><expr pos:start="123:40" pos:end="123:53"><name pos:start="123:40" pos:end="123:53"><name pos:start="123:40" pos:end="123:43">xhci</name><operator pos:start="123:44" pos:end="123:45">-&gt;</operator><name pos:start="123:46" pos:end="123:53">numintrs</name></name></expr></argument>, <argument pos:start="123:56" pos:end="123:59"><expr pos:start="123:56" pos:end="123:59"><name pos:start="123:56" pos:end="123:59">true</name></expr></argument>, <argument pos:start="123:62" pos:end="123:66"><expr pos:start="123:62" pos:end="123:66"><name pos:start="123:62" pos:end="123:66">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <if_stmt pos:start="126:5" pos:end="139:13"><if pos:start="126:5" pos:end="139:13">if <condition pos:start="126:8" pos:end="126:49">(<expr pos:start="126:9" pos:end="126:48"><name pos:start="126:9" pos:end="126:19"><name pos:start="126:9" pos:end="126:12">xhci</name><operator pos:start="126:13" pos:end="126:14">-&gt;</operator><name pos:start="126:15" pos:end="126:19">flags</name></name> <operator pos:start="126:21" pos:end="126:21">&amp;</operator> <operator pos:start="126:23" pos:end="126:23">(</operator><literal type="number" pos:start="126:24" pos:end="126:24">1</literal> <operator pos:start="126:26" pos:end="126:27">&lt;&lt;</operator> <name pos:start="126:29" pos:end="126:47">XHCI_FLAG_USE_MSI_X</name><operator pos:start="126:48" pos:end="126:48">)</operator></expr>)</condition> <block pos:start="126:51" pos:end="139:13">{<block_content pos:start="128:9" pos:end="139:13">

        <expr_stmt pos:start="128:9" pos:end="134:24"><expr pos:start="128:9" pos:end="134:23"><call pos:start="128:9" pos:end="134:23"><name pos:start="128:9" pos:end="128:17">msix_init</name><argument_list pos:start="128:18" pos:end="134:23">(<argument pos:start="128:19" pos:end="128:32"><expr pos:start="128:19" pos:end="128:32"><operator pos:start="128:19" pos:end="128:19">&amp;</operator><name pos:start="128:20" pos:end="128:32"><name pos:start="128:20" pos:end="128:23">xhci</name><operator pos:start="128:24" pos:end="128:25">-&gt;</operator><name pos:start="128:26" pos:end="128:32">pci_dev</name></name></expr></argument>, <argument pos:start="128:35" pos:end="128:48"><expr pos:start="128:35" pos:end="128:48"><name pos:start="128:35" pos:end="128:48"><name pos:start="128:35" pos:end="128:38">xhci</name><operator pos:start="128:39" pos:end="128:40">-&gt;</operator><name pos:start="128:41" pos:end="128:48">numintrs</name></name></expr></argument>,

                  <argument pos:start="130:19" pos:end="130:28"><expr pos:start="130:19" pos:end="130:28"><operator pos:start="130:19" pos:end="130:19">&amp;</operator><name pos:start="130:20" pos:end="130:28"><name pos:start="130:20" pos:end="130:23">xhci</name><operator pos:start="130:24" pos:end="130:25">-&gt;</operator><name pos:start="130:26" pos:end="130:28">mem</name></name></expr></argument>, <argument pos:start="130:31" pos:end="130:31"><expr pos:start="130:31" pos:end="130:31"><literal type="number" pos:start="130:31" pos:end="130:31">0</literal></expr></argument>, <argument pos:start="130:34" pos:end="130:47"><expr pos:start="130:34" pos:end="130:47"><name pos:start="130:34" pos:end="130:47">OFF_MSIX_TABLE</name></expr></argument>,

                  <argument pos:start="132:19" pos:end="132:28"><expr pos:start="132:19" pos:end="132:28"><operator pos:start="132:19" pos:end="132:19">&amp;</operator><name pos:start="132:20" pos:end="132:28"><name pos:start="132:20" pos:end="132:23">xhci</name><operator pos:start="132:24" pos:end="132:25">-&gt;</operator><name pos:start="132:26" pos:end="132:28">mem</name></name></expr></argument>, <argument pos:start="132:31" pos:end="132:31"><expr pos:start="132:31" pos:end="132:31"><literal type="number" pos:start="132:31" pos:end="132:31">0</literal></expr></argument>, <argument pos:start="132:34" pos:end="132:45"><expr pos:start="132:34" pos:end="132:45"><name pos:start="132:34" pos:end="132:45">OFF_MSIX_PBA</name></expr></argument>,

                  <argument pos:start="134:19" pos:end="134:22"><expr pos:start="134:19" pos:end="134:22"><literal type="number" pos:start="134:19" pos:end="134:22">0x90</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <return pos:start="139:5" pos:end="139:13">return <expr pos:start="139:12" pos:end="139:12"><literal type="number" pos:start="139:12" pos:end="139:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
