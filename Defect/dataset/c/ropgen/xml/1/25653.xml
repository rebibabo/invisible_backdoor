<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25653.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:26">qemu_co_rwlock_unlock</name><parameter_list pos:start="1:27" pos:end="1:42">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:37"><name pos:start="1:28" pos:end="1:35">CoRwlock</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">lock</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="15:1">{<block_content pos:start="3:5" pos:end="14:5">
    <expr_stmt pos:start="3:5" pos:end="3:32"><expr pos:start="3:5" pos:end="3:31"><call pos:start="3:5" pos:end="3:31"><name pos:start="3:5" pos:end="3:10">assert</name><argument_list pos:start="3:11" pos:end="3:31">(<argument pos:start="3:12" pos:end="3:30"><expr pos:start="3:12" pos:end="3:30"><call pos:start="3:12" pos:end="3:30"><name pos:start="3:12" pos:end="3:28">qemu_in_coroutine</name><argument_list pos:start="3:29" pos:end="3:30">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="4:5" pos:end="14:5"><if pos:start="4:5" pos:end="7:5">if <condition pos:start="4:8" pos:end="4:21">(<expr pos:start="4:9" pos:end="4:20"><name pos:start="4:9" pos:end="4:20"><name pos:start="4:9" pos:end="4:12">lock</name><operator pos:start="4:13" pos:end="4:14">-&gt;</operator><name pos:start="4:15" pos:end="4:20">writer</name></name></expr>)</condition> <block pos:start="4:23" pos:end="7:5">{<block_content pos:start="5:9" pos:end="6:48">
        <expr_stmt pos:start="5:9" pos:end="5:29"><expr pos:start="5:9" pos:end="5:28"><name pos:start="5:9" pos:end="5:20"><name pos:start="5:9" pos:end="5:12">lock</name><operator pos:start="5:13" pos:end="5:14">-&gt;</operator><name pos:start="5:15" pos:end="5:20">writer</name></name> <operator pos:start="5:22" pos:end="5:22">=</operator> <name pos:start="5:24" pos:end="5:28">false</name></expr>;</expr_stmt>
        <expr_stmt pos:start="6:9" pos:end="6:48"><expr pos:start="6:9" pos:end="6:47"><call pos:start="6:9" pos:end="6:47"><name pos:start="6:9" pos:end="6:33">qemu_co_queue_restart_all</name><argument_list pos:start="6:34" pos:end="6:47">(<argument pos:start="6:35" pos:end="6:46"><expr pos:start="6:35" pos:end="6:46"><operator pos:start="6:35" pos:end="6:35">&amp;</operator><name pos:start="6:36" pos:end="6:46"><name pos:start="6:36" pos:end="6:39">lock</name><operator pos:start="6:40" pos:end="6:41">-&gt;</operator><name pos:start="6:42" pos:end="6:46">queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="7:7" pos:end="14:5">else <block pos:start="7:12" pos:end="14:5">{<block_content pos:start="8:9" pos:end="13:9">
        <expr_stmt pos:start="8:9" pos:end="8:23"><expr pos:start="8:9" pos:end="8:22"><name pos:start="8:9" pos:end="8:20"><name pos:start="8:9" pos:end="8:12">lock</name><operator pos:start="8:13" pos:end="8:14">-&gt;</operator><name pos:start="8:15" pos:end="8:20">reader</name></name><operator pos:start="8:21" pos:end="8:22">--</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:34"><expr pos:start="9:9" pos:end="9:33"><call pos:start="9:9" pos:end="9:33"><name pos:start="9:9" pos:end="9:14">assert</name><argument_list pos:start="9:15" pos:end="9:33">(<argument pos:start="9:16" pos:end="9:32"><expr pos:start="9:16" pos:end="9:32"><name pos:start="9:16" pos:end="9:27"><name pos:start="9:16" pos:end="9:19">lock</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:27">reader</name></name> <operator pos:start="9:29" pos:end="9:30">&gt;=</operator> <literal type="number" pos:start="9:32" pos:end="9:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="10:9" pos:end="10:44">/* Wakeup only one waiting writer */</comment>
        <if_stmt pos:start="11:9" pos:end="13:9"><if pos:start="11:9" pos:end="13:9">if <condition pos:start="11:12" pos:end="11:26">(<expr pos:start="11:13" pos:end="11:25"><operator pos:start="11:13" pos:end="11:13">!</operator><name pos:start="11:14" pos:end="11:25"><name pos:start="11:14" pos:end="11:17">lock</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:25">reader</name></name></expr>)</condition> <block pos:start="11:28" pos:end="13:9">{<block_content pos:start="12:13" pos:end="12:45">
            <expr_stmt pos:start="12:13" pos:end="12:45"><expr pos:start="12:13" pos:end="12:44"><call pos:start="12:13" pos:end="12:44"><name pos:start="12:13" pos:end="12:30">qemu_co_queue_next</name><argument_list pos:start="12:31" pos:end="12:44">(<argument pos:start="12:32" pos:end="12:43"><expr pos:start="12:32" pos:end="12:43"><operator pos:start="12:32" pos:end="12:32">&amp;</operator><name pos:start="12:33" pos:end="12:43"><name pos:start="12:33" pos:end="12:36">lock</name><operator pos:start="12:37" pos:end="12:38">-&gt;</operator><name pos:start="12:39" pos:end="12:43">queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></else></if_stmt>
</block_content>}</block></function></unit>
