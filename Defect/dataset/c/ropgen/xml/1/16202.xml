<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16202.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:28">g726_init</name><parameter_list pos:start="1:29" pos:end="1:52">(<parameter pos:start="1:30" pos:end="1:51"><decl pos:start="1:30" pos:end="1:51"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type> <name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:15">G726Context</name><modifier pos:start="5:16" pos:end="5:16">*</modifier></type> <name pos:start="5:18" pos:end="5:18">c</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:90"><decl pos:start="7:5" pos:end="7:89"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:22">index</name><init pos:start="7:23" pos:end="7:89">= <expr pos:start="7:25" pos:end="7:89"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:40"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:40">bit_rate</name></name> <operator pos:start="7:42" pos:end="7:42">+</operator> <name pos:start="7:44" pos:end="7:61"><name pos:start="7:44" pos:end="7:48">avctx</name><operator pos:start="7:49" pos:end="7:50">-&gt;</operator><name pos:start="7:51" pos:end="7:61">sample_rate</name></name><operator pos:start="7:62" pos:end="7:62">/</operator><literal type="number" pos:start="7:63" pos:end="7:63">2</literal><operator pos:start="7:64" pos:end="7:64">)</operator> <operator pos:start="7:66" pos:end="7:66">/</operator> <name pos:start="7:68" pos:end="7:85"><name pos:start="7:68" pos:end="7:72">avctx</name><operator pos:start="7:73" pos:end="7:74">-&gt;</operator><name pos:start="7:75" pos:end="7:85">sample_rate</name></name> <operator pos:start="7:87" pos:end="7:87">-</operator> <literal type="number" pos:start="7:89" pos:end="7:89">2</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:69">(<expr pos:start="11:9" pos:end="11:68"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:13">avctx</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:23">bit_rate</name></name> <operator pos:start="11:25" pos:end="11:25">%</operator> <name pos:start="11:27" pos:end="11:44"><name pos:start="11:27" pos:end="11:31">avctx</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:44">sample_rate</name></name> <operator pos:start="11:46" pos:end="11:47">&amp;&amp;</operator> <name pos:start="11:49" pos:end="11:68"><name pos:start="11:49" pos:end="11:53">avctx</name><operator pos:start="11:54" pos:end="11:55">-&gt;</operator><name pos:start="11:56" pos:end="11:60">codec</name><operator pos:start="11:61" pos:end="11:62">-&gt;</operator><name pos:start="11:63" pos:end="11:68">encode</name></name></expr>)</condition> <block pos:start="11:71" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:85"><expr pos:start="13:9" pos:end="13:84"><call pos:start="13:9" pos:end="13:84"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:84">(<argument pos:start="13:16" pos:end="13:20"><expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">avctx</name></expr></argument>, <argument pos:start="13:23" pos:end="13:34"><expr pos:start="13:23" pos:end="13:34"><name pos:start="13:23" pos:end="13:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:37" pos:end="13:83"><expr pos:start="13:37" pos:end="13:83"><literal type="string" pos:start="13:37" pos:end="13:83">"Bitrate - Samplerate combination is invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if<condition pos:start="19:7" pos:end="19:28">(<expr pos:start="19:8" pos:end="19:27"><name pos:start="19:8" pos:end="19:22"><name pos:start="19:8" pos:end="19:12">avctx</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:22">channels</name></name> <operator pos:start="19:24" pos:end="19:25">!=</operator> <literal type="number" pos:start="19:27" pos:end="19:27">1</literal></expr>)</condition><block pos:start="19:29" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:64"><expr pos:start="21:9" pos:end="21:63"><call pos:start="21:9" pos:end="21:63"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:63">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:62"><expr pos:start="21:37" pos:end="21:62"><literal type="string" pos:start="21:37" pos:end="21:62">"Only mono is supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if<condition pos:start="27:7" pos:end="27:15">(<expr pos:start="27:8" pos:end="27:14"><name pos:start="27:8" pos:end="27:12">index</name><operator pos:start="27:13" pos:end="27:13">&gt;</operator><literal type="number" pos:start="27:14" pos:end="27:14">3</literal></expr>)</condition><block pos:start="27:16" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:80"><expr pos:start="29:9" pos:end="29:79"><call pos:start="29:9" pos:end="29:79"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:79">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:69"><expr pos:start="29:37" pos:end="29:69"><literal type="string" pos:start="29:37" pos:end="29:69">"Unsupported number of bits %d\n"</literal></expr></argument>, <argument pos:start="29:72" pos:end="29:78"><expr pos:start="29:72" pos:end="29:78"><name pos:start="29:72" pos:end="29:76">index</name><operator pos:start="29:77" pos:end="29:77">+</operator><literal type="number" pos:start="29:78" pos:end="29:78">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><call pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:14">g726_reset</name><argument_list pos:start="35:15" pos:end="35:24">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">c</name></expr></argument>, <argument pos:start="35:19" pos:end="35:23"><expr pos:start="35:19" pos:end="35:23"><name pos:start="35:19" pos:end="35:23">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:5">c</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:16">code_size</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:24">index</name><operator pos:start="37:25" pos:end="37:25">+</operator><literal type="number" pos:start="37:26" pos:end="37:26">2</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:9">avctx</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:22">coded_frame</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <call pos:start="41:26" pos:end="41:46"><name pos:start="41:26" pos:end="41:44">avcodec_alloc_frame</name><argument_list pos:start="41:45" pos:end="41:46">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:31"><if pos:start="43:5" pos:end="45:31">if <condition pos:start="43:8" pos:end="43:28">(<expr pos:start="43:9" pos:end="43:27"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:27"><name pos:start="43:10" pos:end="43:14">avctx</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:27">coded_frame</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:31"><block_content pos:start="45:9" pos:end="45:31">

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:38"><expr pos:start="47:5" pos:end="47:37"><name pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:9">avctx</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:22">coded_frame</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:33">key_frame</name></name> <operator pos:start="47:35" pos:end="47:35">=</operator> <literal type="number" pos:start="47:37" pos:end="47:37">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="53:43"><if pos:start="51:5" pos:end="53:43">if <condition pos:start="51:8" pos:end="51:29">(<expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:13">avctx</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:20">codec</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:28">decode</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:43"><block_content pos:start="53:9" pos:end="53:43">

        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:13">avctx</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:25">sample_fmt</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:42">SAMPLE_FMT_S16</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
