<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20335.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">vobsub_read_packet</name><parameter_list pos:start="1:30" pos:end="1:64">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">AVPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="5:5" pos:end="165:15">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">MpegDemuxContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">vobsub</name> <init pos:start="5:30" pos:end="5:43">= <expr pos:start="5:32" pos:end="5:43"><name pos:start="5:32" pos:end="5:43"><name pos:start="5:32" pos:end="5:32">s</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">FFDemuxSubtitlesQueue</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:28">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:41">= <expr pos:start="9:23" pos:end="9:41"><name pos:start="9:23" pos:end="9:41"><name pos:start="9:23" pos:end="9:28">vobsub</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:37">sub_ctx</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:41">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:18">psize</name></decl>, <decl pos:start="11:21" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:30">total_read</name> <init pos:start="11:32" pos:end="11:34">= <expr pos:start="11:34" pos:end="11:34"><literal type="number" pos:start="11:34" pos:end="11:34">0</literal></expr></init></decl>, <decl pos:start="11:37" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:37" pos:end="11:37">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">AVPacket</name></type> <name pos:start="13:14" pos:end="13:20">idx_pkt</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:18">min_ts</name> <init pos:start="17:20" pos:end="17:30">= <expr pos:start="17:22" pos:end="17:30"><name pos:start="17:22" pos:end="17:30">INT64_MAX</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">sid</name> <init pos:start="19:13" pos:end="19:15">= <expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr></init></decl>;</decl_stmt>

    <for pos:start="21:5" pos:end="35:5">for <control pos:start="21:9" pos:end="21:39">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:34"><expr pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:33">nb_streams</name></name></expr>;</condition> <incr pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:36">i</name><operator pos:start="21:37" pos:end="21:38">++</operator></expr></incr>)</control> <block pos:start="21:41" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:9">

        <decl_stmt pos:start="23:9" pos:end="23:52"><decl pos:start="23:9" pos:end="23:51"><type pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:29">FFDemuxSubtitlesQueue</name> <modifier pos:start="23:31" pos:end="23:31">*</modifier></type><name pos:start="23:32" pos:end="23:35">tmpq</name> <init pos:start="23:37" pos:end="23:51">= <expr pos:start="23:39" pos:end="23:51"><operator pos:start="23:39" pos:end="23:39">&amp;</operator><name pos:start="23:40" pos:end="23:51"><name pos:start="23:40" pos:end="23:45">vobsub</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:48">q</name><index pos:start="23:49" pos:end="23:51">[<expr pos:start="23:50" pos:end="23:50"><name pos:start="23:50" pos:end="23:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:59"><decl pos:start="25:9" pos:end="25:58"><type pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:15">int64_t</name></type> <name pos:start="25:17" pos:end="25:18">ts</name> <init pos:start="25:20" pos:end="25:58">= <expr pos:start="25:22" pos:end="25:58"><name pos:start="25:22" pos:end="25:54"><name pos:start="25:22" pos:end="25:25">tmpq</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:31">subs</name><index pos:start="25:32" pos:end="25:54">[<expr pos:start="25:33" pos:end="25:53"><name pos:start="25:33" pos:end="25:53"><name pos:start="25:33" pos:end="25:36">tmpq</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:53">current_sub_idx</name></name></expr>]</index></name><operator pos:start="25:55" pos:end="25:55">.</operator><name pos:start="25:56" pos:end="25:58">pts</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:24">(<expr pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:14">ts</name> <operator pos:start="27:16" pos:end="27:16">&lt;</operator> <name pos:start="27:18" pos:end="27:23">min_ts</name></expr>)</condition> <block pos:start="27:26" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:20">

            <expr_stmt pos:start="29:13" pos:end="29:24"><expr pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:18">min_ts</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:23">ts</name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">sid</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:19">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:5">q</name> <operator pos:start="37:7" pos:end="37:7">=</operator> <operator pos:start="37:9" pos:end="37:9">&amp;</operator><name pos:start="37:10" pos:end="37:23"><name pos:start="37:10" pos:end="37:15">vobsub</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:18">q</name><index pos:start="37:19" pos:end="37:23">[<expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">sid</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:53"><name pos:start="39:11" pos:end="39:40">ff_subtitles_queue_read_packet</name><argument_list pos:start="39:41" pos:end="39:53">(<argument pos:start="39:42" pos:end="39:42"><expr pos:start="39:42" pos:end="39:42"><name pos:start="39:42" pos:end="39:42">q</name></expr></argument>, <argument pos:start="39:45" pos:end="39:52"><expr pos:start="39:45" pos:end="39:52"><operator pos:start="39:45" pos:end="39:45">&amp;</operator><name pos:start="39:46" pos:end="39:52">idx_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:19"><if pos:start="41:5" pos:end="43:19">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">&lt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:19"><block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="49:56">/* compute maximum packet size using the next packet position. This is

     * useful when the len in the header is non-sense */</comment>

    <if_stmt pos:start="51:5" pos:end="61:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:40">(<expr pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:9">q</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:26">current_sub_idx</name></name> <operator pos:start="51:28" pos:end="51:28">&lt;</operator> <name pos:start="51:30" pos:end="51:39"><name pos:start="51:30" pos:end="51:30">q</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:39">nb_subs</name></name></expr>)</condition> <block pos:start="51:42" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:62">

        <expr_stmt pos:start="53:9" pos:end="53:62"><expr pos:start="53:9" pos:end="53:61"><name pos:start="53:9" pos:end="53:13">psize</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:43"><name pos:start="53:17" pos:end="53:17">q</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:23">subs</name><index pos:start="53:24" pos:end="53:43">[<expr pos:start="53:25" pos:end="53:42"><name pos:start="53:25" pos:end="53:42"><name pos:start="53:25" pos:end="53:25">q</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:42">current_sub_idx</name></name></expr>]</index></name><operator pos:start="53:44" pos:end="53:44">.</operator><name pos:start="53:45" pos:end="53:47">pos</name> <operator pos:start="53:49" pos:end="53:49">-</operator> <name pos:start="53:51" pos:end="53:61"><name pos:start="53:51" pos:end="53:57">idx_pkt</name><operator pos:start="53:58" pos:end="53:58">.</operator><name pos:start="53:59" pos:end="53:61">pos</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="61:5">else <block pos:start="55:12" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:57">

        <decl_stmt pos:start="57:9" pos:end="57:38"><decl pos:start="57:9" pos:end="57:37"><type pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:15">int64_t</name></type> <name pos:start="57:17" pos:end="57:21">fsize</name> <init pos:start="57:23" pos:end="57:37">= <expr pos:start="57:25" pos:end="57:37"><call pos:start="57:25" pos:end="57:37"><name pos:start="57:25" pos:end="57:33">avio_size</name><argument_list pos:start="57:34" pos:end="57:37">(<argument pos:start="57:35" pos:end="57:36"><expr pos:start="57:35" pos:end="57:36"><name pos:start="57:35" pos:end="57:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:57"><expr pos:start="59:9" pos:end="59:56"><name pos:start="59:9" pos:end="59:13">psize</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <ternary pos:start="59:17" pos:end="59:56"><condition pos:start="59:17" pos:end="59:27"><expr pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:21">fsize</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <literal type="number" pos:start="59:25" pos:end="59:25">0</literal></expr> ?</condition><then pos:start="59:29" pos:end="59:34"> <expr pos:start="59:29" pos:end="59:34"><literal type="number" pos:start="59:29" pos:end="59:34">0xffff</literal></expr> </then><else pos:start="59:36" pos:end="59:56">: <expr pos:start="59:38" pos:end="59:56"><name pos:start="59:38" pos:end="59:42">fsize</name> <operator pos:start="59:44" pos:end="59:44">-</operator> <name pos:start="59:46" pos:end="59:56"><name pos:start="59:46" pos:end="59:52">idx_pkt</name><operator pos:start="59:53" pos:end="59:53">.</operator><name pos:start="59:54" pos:end="59:56">pos</name></name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:41"><expr pos:start="65:5" pos:end="65:40"><call pos:start="65:5" pos:end="65:40"><name pos:start="65:5" pos:end="65:13">avio_seek</name><argument_list pos:start="65:14" pos:end="65:40">(<argument pos:start="65:15" pos:end="65:16"><expr pos:start="65:15" pos:end="65:16"><name pos:start="65:15" pos:end="65:16">pb</name></expr></argument>, <argument pos:start="65:19" pos:end="65:29"><expr pos:start="65:19" pos:end="65:29"><name pos:start="65:19" pos:end="65:29"><name pos:start="65:19" pos:end="65:25">idx_pkt</name><operator pos:start="65:26" pos:end="65:26">.</operator><name pos:start="65:27" pos:end="65:29">pos</name></name></expr></argument>, <argument pos:start="65:32" pos:end="65:39"><expr pos:start="65:32" pos:end="65:39"><name pos:start="65:32" pos:end="65:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:24"><expr pos:start="69:5" pos:end="69:23"><call pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:18">av_init_packet</name><argument_list pos:start="69:19" pos:end="69:23">(<argument pos:start="69:20" pos:end="69:22"><expr pos:start="69:20" pos:end="69:22"><name pos:start="69:20" pos:end="69:22">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:18"><expr pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:7">pkt</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:13">size</name></name> <operator pos:start="71:15" pos:end="71:15">=</operator> <literal type="number" pos:start="71:17" pos:end="71:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:21"><expr pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:13"><name pos:start="73:5" pos:end="73:7">pkt</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:13">data</name></name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:20">NULL</name></expr>;</expr_stmt>



    <do pos:start="77:5" pos:end="141:33">do <block pos:start="77:8" pos:end="141:5">{<block_content pos:start="79:9" pos:end="139:37">

        <decl_stmt pos:start="79:9" pos:end="79:34"><decl pos:start="79:9" pos:end="79:13"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:13">n</name></decl>, <decl pos:start="79:16" pos:end="79:22"><type ref="prev" pos:start="79:9" pos:end="79:11"/><name pos:start="79:16" pos:end="79:22">to_read</name></decl>, <decl pos:start="79:25" pos:end="79:33"><type ref="prev" pos:start="79:9" pos:end="79:11"/><name pos:start="79:25" pos:end="79:33">startcode</name></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:25"><decl pos:start="81:9" pos:end="81:19"><type pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:15">int64_t</name></type> <name pos:start="81:17" pos:end="81:19">pts</name></decl>, <decl pos:start="81:22" pos:end="81:24"><type ref="prev" pos:start="81:9" pos:end="81:15"/><name pos:start="81:22" pos:end="81:24">dts</name></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="83:49"><decl pos:start="83:9" pos:end="83:39"><type pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:15">int64_t</name></type> <name pos:start="83:17" pos:end="83:23">old_pos</name> <init pos:start="83:25" pos:end="83:39">= <expr pos:start="83:27" pos:end="83:39"><call pos:start="83:27" pos:end="83:39"><name pos:start="83:27" pos:end="83:35">avio_tell</name><argument_list pos:start="83:36" pos:end="83:39">(<argument pos:start="83:37" pos:end="83:38"><expr pos:start="83:37" pos:end="83:38"><name pos:start="83:37" pos:end="83:38">pb</name></expr></argument>)</argument_list></call></expr></init></decl>, <decl pos:start="83:42" pos:end="83:48"><type ref="prev" pos:start="83:9" pos:end="83:15"/><name pos:start="83:42" pos:end="83:48">new_pos</name></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:21"><decl pos:start="85:9" pos:end="85:20"><type pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">int</name></type> <name pos:start="85:13" pos:end="85:20">pkt_size</name></decl>;</decl_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:84"><expr pos:start="89:9" pos:end="89:83"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:83"><name pos:start="89:15" pos:end="89:36">mpegps_read_pes_header</name><argument_list pos:start="89:37" pos:end="89:83">(<argument pos:start="89:38" pos:end="89:52"><expr pos:start="89:38" pos:end="89:52"><name pos:start="89:38" pos:end="89:52"><name pos:start="89:38" pos:end="89:43">vobsub</name><operator pos:start="89:44" pos:end="89:45">-&gt;</operator><name pos:start="89:46" pos:end="89:52">sub_ctx</name></name></expr></argument>, <argument pos:start="89:55" pos:end="89:58"><expr pos:start="89:55" pos:end="89:58"><name pos:start="89:55" pos:end="89:58">NULL</name></expr></argument>, <argument pos:start="89:61" pos:end="89:70"><expr pos:start="89:61" pos:end="89:70"><operator pos:start="89:61" pos:end="89:61">&amp;</operator><name pos:start="89:62" pos:end="89:70">startcode</name></expr></argument>, <argument pos:start="89:73" pos:end="89:76"><expr pos:start="89:73" pos:end="89:76"><operator pos:start="89:73" pos:end="89:73">&amp;</operator><name pos:start="89:74" pos:end="89:76">pts</name></expr></argument>, <argument pos:start="89:79" pos:end="89:82"><expr pos:start="89:79" pos:end="89:82"><operator pos:start="89:79" pos:end="89:79">&amp;</operator><name pos:start="89:80" pos:end="89:82">dts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="99:9"><if pos:start="91:9" pos:end="99:9">if <condition pos:start="91:12" pos:end="91:20">(<expr pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">&lt;</operator> <literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr>)</condition> <block pos:start="91:22" pos:end="99:9">{<block_content pos:start="93:13" pos:end="97:22">

            <if_stmt pos:start="93:13" pos:end="95:22"><if pos:start="93:13" pos:end="95:22">if <condition pos:start="93:16" pos:end="93:26">(<expr pos:start="93:17" pos:end="93:25"><name pos:start="93:17" pos:end="93:25"><name pos:start="93:17" pos:end="93:19">pkt</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:25">size</name></name></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:22"><block_content pos:start="95:17" pos:end="95:22"> <comment type="line" pos:start="93:28" pos:end="93:61">// raise packet even if incomplete</comment>

                <break pos:start="95:17" pos:end="95:22">break;</break></block_content></block></if></if_stmt>

            <goto pos:start="97:13" pos:end="97:22">goto <name pos:start="97:18" pos:end="97:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:31"><expr pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:15">to_read</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <name pos:start="101:19" pos:end="101:21">ret</name> <operator pos:start="101:23" pos:end="101:23">&amp;</operator> <literal type="number" pos:start="101:25" pos:end="101:30">0xffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:32"><expr pos:start="103:9" pos:end="103:31"><name pos:start="103:9" pos:end="103:15">new_pos</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:31"><name pos:start="103:19" pos:end="103:27">avio_tell</name><argument_list pos:start="103:28" pos:end="103:31">(<argument pos:start="103:29" pos:end="103:30"><expr pos:start="103:29" pos:end="103:30"><name pos:start="103:29" pos:end="103:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:45"><expr pos:start="105:9" pos:end="105:44"><name pos:start="105:9" pos:end="105:16">pkt_size</name> <operator pos:start="105:18" pos:end="105:18">=</operator> <name pos:start="105:20" pos:end="105:22">ret</name> <operator pos:start="105:24" pos:end="105:24">+</operator> <operator pos:start="105:26" pos:end="105:26">(</operator><name pos:start="105:27" pos:end="105:33">new_pos</name> <operator pos:start="105:35" pos:end="105:35">-</operator> <name pos:start="105:37" pos:end="105:43">old_pos</name><operator pos:start="105:44" pos:end="105:44">)</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="109:9" pos:end="109:58">/* this prevents reads above the current packet */</comment>

        <if_stmt pos:start="111:9" pos:end="113:18"><if pos:start="111:9" pos:end="113:18">if <condition pos:start="111:12" pos:end="111:42">(<expr pos:start="111:13" pos:end="111:41"><name pos:start="111:13" pos:end="111:22">total_read</name> <operator pos:start="111:24" pos:end="111:24">+</operator> <name pos:start="111:26" pos:end="111:33">pkt_size</name> <operator pos:start="111:35" pos:end="111:35">&gt;</operator> <name pos:start="111:37" pos:end="111:41">psize</name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:18"><block_content pos:start="113:13" pos:end="113:18">

            <break pos:start="113:13" pos:end="113:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:31"><expr pos:start="115:9" pos:end="115:30"><name pos:start="115:9" pos:end="115:18">total_read</name> <operator pos:start="115:20" pos:end="115:21">+=</operator> <name pos:start="115:23" pos:end="115:30">pkt_size</name></expr>;</expr_stmt>



        <comment type="block" pos:start="119:9" pos:end="119:73">/* the current chunk doesn't match the stream index (unlikely) */</comment>

        <if_stmt pos:start="121:9" pos:end="123:18"><if pos:start="121:9" pos:end="123:18">if <condition pos:start="121:12" pos:end="121:55">(<expr pos:start="121:13" pos:end="121:54"><operator pos:start="121:13" pos:end="121:13">(</operator><name pos:start="121:14" pos:end="121:22">startcode</name> <operator pos:start="121:24" pos:end="121:24">&amp;</operator> <literal type="number" pos:start="121:26" pos:end="121:29">0x1f</literal><operator pos:start="121:30" pos:end="121:30">)</operator> <operator pos:start="121:32" pos:end="121:33">!=</operator> <name pos:start="121:35" pos:end="121:54"><name pos:start="121:35" pos:end="121:41">idx_pkt</name><operator pos:start="121:42" pos:end="121:42">.</operator><name pos:start="121:43" pos:end="121:54">stream_index</name></name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:18"><block_content pos:start="123:13" pos:end="123:18">

            <break pos:start="123:13" pos:end="123:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:43"><expr pos:start="127:9" pos:end="127:42"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:42"><name pos:start="127:15" pos:end="127:28">av_grow_packet</name><argument_list pos:start="127:29" pos:end="127:42">(<argument pos:start="127:30" pos:end="127:32"><expr pos:start="127:30" pos:end="127:32"><name pos:start="127:30" pos:end="127:32">pkt</name></expr></argument>, <argument pos:start="127:35" pos:end="127:41"><expr pos:start="127:35" pos:end="127:41"><name pos:start="127:35" pos:end="127:41">to_read</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="131:22"><if pos:start="129:9" pos:end="131:22">if <condition pos:start="129:12" pos:end="129:20">(<expr pos:start="129:13" pos:end="129:19"><name pos:start="129:13" pos:end="129:15">ret</name> <operator pos:start="129:17" pos:end="129:17">&lt;</operator> <literal type="number" pos:start="129:19" pos:end="129:19">0</literal></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:22"><block_content pos:start="131:13" pos:end="131:22">

            <goto pos:start="131:13" pos:end="131:22">goto <name pos:start="131:18" pos:end="131:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:70"><expr pos:start="135:9" pos:end="135:69"><name pos:start="135:9" pos:end="135:9">n</name> <operator pos:start="135:11" pos:end="135:11">=</operator> <call pos:start="135:13" pos:end="135:69"><name pos:start="135:13" pos:end="135:21">avio_read</name><argument_list pos:start="135:22" pos:end="135:69">(<argument pos:start="135:23" pos:end="135:24"><expr pos:start="135:23" pos:end="135:24"><name pos:start="135:23" pos:end="135:24">pb</name></expr></argument>, <argument pos:start="135:27" pos:end="135:59"><expr pos:start="135:27" pos:end="135:59"><name pos:start="135:27" pos:end="135:35"><name pos:start="135:27" pos:end="135:29">pkt</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:35">data</name></name> <operator pos:start="135:37" pos:end="135:37">+</operator> <operator pos:start="135:39" pos:end="135:39">(</operator><name pos:start="135:40" pos:end="135:48"><name pos:start="135:40" pos:end="135:42">pkt</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:48">size</name></name> <operator pos:start="135:50" pos:end="135:50">-</operator> <name pos:start="135:52" pos:end="135:58">to_read</name><operator pos:start="135:59" pos:end="135:59">)</operator></expr></argument>, <argument pos:start="135:62" pos:end="135:68"><expr pos:start="135:62" pos:end="135:68"><name pos:start="135:62" pos:end="135:68">to_read</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="139:37"><if pos:start="137:9" pos:end="139:37">if <condition pos:start="137:12" pos:end="137:24">(<expr pos:start="137:13" pos:end="137:23"><name pos:start="137:13" pos:end="137:13">n</name> <operator pos:start="137:15" pos:end="137:15">&lt;</operator> <name pos:start="137:17" pos:end="137:23">to_read</name></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:37"><block_content pos:start="139:13" pos:end="139:37">

            <expr_stmt pos:start="139:13" pos:end="139:37"><expr pos:start="139:13" pos:end="139:36"><name pos:start="139:13" pos:end="139:21"><name pos:start="139:13" pos:end="139:15">pkt</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:21">size</name></name> <operator pos:start="139:23" pos:end="139:24">-=</operator> <name pos:start="139:26" pos:end="139:32">to_read</name> <operator pos:start="139:34" pos:end="139:34">-</operator> <name pos:start="139:36" pos:end="139:36">n</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="141:13" pos:end="141:32">(<expr pos:start="141:14" pos:end="141:31"><name pos:start="141:14" pos:end="141:23">total_read</name> <operator pos:start="141:25" pos:end="141:25">&lt;</operator> <name pos:start="141:27" pos:end="141:31">psize</name></expr>)</condition>;</do>



    <expr_stmt pos:start="145:5" pos:end="145:38"><expr pos:start="145:5" pos:end="145:37"><name pos:start="145:5" pos:end="145:12"><name pos:start="145:5" pos:end="145:7">pkt</name><operator pos:start="145:8" pos:end="145:9">-&gt;</operator><name pos:start="145:10" pos:end="145:12">pts</name></name> <operator pos:start="145:14" pos:end="145:14">=</operator> <name pos:start="145:16" pos:end="145:23"><name pos:start="145:16" pos:end="145:18">pkt</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:23">dts</name></name> <operator pos:start="145:25" pos:end="145:25">=</operator> <name pos:start="145:27" pos:end="145:37"><name pos:start="145:27" pos:end="145:33">idx_pkt</name><operator pos:start="145:34" pos:end="145:34">.</operator><name pos:start="145:35" pos:end="145:37">pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:27"><expr pos:start="147:5" pos:end="147:26"><name pos:start="147:5" pos:end="147:12"><name pos:start="147:5" pos:end="147:7">pkt</name><operator pos:start="147:8" pos:end="147:9">-&gt;</operator><name pos:start="147:10" pos:end="147:12">pos</name></name> <operator pos:start="147:14" pos:end="147:14">=</operator> <name pos:start="147:16" pos:end="147:26"><name pos:start="147:16" pos:end="147:22">idx_pkt</name><operator pos:start="147:23" pos:end="147:23">.</operator><name pos:start="147:24" pos:end="147:26">pos</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:45"><expr pos:start="149:5" pos:end="149:44"><name pos:start="149:5" pos:end="149:21"><name pos:start="149:5" pos:end="149:7">pkt</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:21">stream_index</name></name> <operator pos:start="149:23" pos:end="149:23">=</operator> <name pos:start="149:25" pos:end="149:44"><name pos:start="149:25" pos:end="149:31">idx_pkt</name><operator pos:start="149:32" pos:end="149:32">.</operator><name pos:start="149:33" pos:end="149:44">stream_index</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:29"><expr pos:start="153:5" pos:end="153:28"><call pos:start="153:5" pos:end="153:28"><name pos:start="153:5" pos:end="153:18">av_free_packet</name><argument_list pos:start="153:19" pos:end="153:28">(<argument pos:start="153:20" pos:end="153:27"><expr pos:start="153:20" pos:end="153:27"><operator pos:start="153:20" pos:end="153:20">&amp;</operator><name pos:start="153:21" pos:end="153:27">idx_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="155:5" pos:end="155:13">return <expr pos:start="155:12" pos:end="155:12"><literal type="number" pos:start="155:12" pos:end="155:12">0</literal></expr>;</return>



<label pos:start="159:1" pos:end="159:5"><name pos:start="159:1" pos:end="159:4">fail</name>:</label>

    <expr_stmt pos:start="161:5" pos:end="161:24"><expr pos:start="161:5" pos:end="161:23"><call pos:start="161:5" pos:end="161:23"><name pos:start="161:5" pos:end="161:18">av_free_packet</name><argument_list pos:start="161:19" pos:end="161:23">(<argument pos:start="161:20" pos:end="161:22"><expr pos:start="161:20" pos:end="161:22"><name pos:start="161:20" pos:end="161:22">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:29"><expr pos:start="163:5" pos:end="163:28"><call pos:start="163:5" pos:end="163:28"><name pos:start="163:5" pos:end="163:18">av_free_packet</name><argument_list pos:start="163:19" pos:end="163:28">(<argument pos:start="163:20" pos:end="163:27"><expr pos:start="163:20" pos:end="163:27"><operator pos:start="163:20" pos:end="163:20">&amp;</operator><name pos:start="163:21" pos:end="163:27">idx_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="165:5" pos:end="165:15">return <expr pos:start="165:12" pos:end="165:14"><name pos:start="165:12" pos:end="165:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
