<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/266.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vp5_parse_header</name><parameter_list pos:start="1:28" pos:end="1:77">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:39">VP56Context</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:57">uint8_t</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">buf</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:76">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VP56RangeCoder</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">c</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">rows</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">cols</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:53"><expr pos:start="11:5" pos:end="11:52"><call pos:start="11:5" pos:end="11:52"><name pos:start="11:5" pos:end="11:30">ff_vp56_init_range_decoder</name><argument_list pos:start="11:31" pos:end="11:52">(<argument pos:start="11:32" pos:end="11:36"><expr pos:start="11:32" pos:end="11:36"><operator pos:start="11:32" pos:end="11:32">&amp;</operator><name pos:start="11:33" pos:end="11:36"><name pos:start="11:33" pos:end="11:33">s</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:36">c</name></name></expr></argument>, <argument pos:start="11:39" pos:end="11:41"><expr pos:start="11:39" pos:end="11:41"><name pos:start="11:39" pos:end="11:41">buf</name></expr></argument>, <argument pos:start="11:44" pos:end="11:51"><expr pos:start="11:44" pos:end="11:51"><name pos:start="11:44" pos:end="11:51">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:64"><expr pos:start="13:5" pos:end="13:63"><name pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:13">frames</name><index pos:start="13:14" pos:end="13:33">[<expr pos:start="13:15" pos:end="13:32"><name pos:start="13:15" pos:end="13:32">VP56_FRAME_CURRENT</name></expr>]</index></name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:44">key_frame</name> <operator pos:start="13:46" pos:end="13:46">=</operator> <operator pos:start="13:48" pos:end="13:48">!</operator><call pos:start="13:49" pos:end="13:63"><name pos:start="13:49" pos:end="13:60">vp56_rac_get</name><argument_list pos:start="13:61" pos:end="13:63">(<argument pos:start="13:62" pos:end="13:62"><expr pos:start="13:62" pos:end="13:62"><name pos:start="13:62" pos:end="13:62">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:20"><expr pos:start="15:5" pos:end="15:19"><call pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:16">vp56_rac_get</name><argument_list pos:start="15:17" pos:end="15:19">(<argument pos:start="15:18" pos:end="15:18"><expr pos:start="15:18" pos:end="15:18"><name pos:start="15:18" pos:end="15:18">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><call pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:24">ff_vp56_init_dequant</name><argument_list pos:start="17:25" pos:end="17:48">(<argument pos:start="17:26" pos:end="17:26"><expr pos:start="17:26" pos:end="17:26"><name pos:start="17:26" pos:end="17:26">s</name></expr></argument>, <argument pos:start="17:29" pos:end="17:47"><expr pos:start="17:29" pos:end="17:47"><call pos:start="17:29" pos:end="17:47"><name pos:start="17:29" pos:end="17:41">vp56_rac_gets</name><argument_list pos:start="17:42" pos:end="17:47">(<argument pos:start="17:43" pos:end="17:43"><expr pos:start="17:43" pos:end="17:43"><name pos:start="17:43" pos:end="17:43">c</name></expr></argument>, <argument pos:start="17:46" pos:end="17:46"><expr pos:start="17:46" pos:end="17:46"><literal type="number" pos:start="17:46" pos:end="17:46">6</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="77:35"><if pos:start="19:5" pos:end="75:5">if <condition pos:start="19:8" pos:end="19:49">(<expr pos:start="19:9" pos:end="19:48"><name pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">frames</name><index pos:start="19:18" pos:end="19:37">[<expr pos:start="19:19" pos:end="19:36"><name pos:start="19:19" pos:end="19:36">VP56_FRAME_CURRENT</name></expr>]</index></name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:48">key_frame</name></expr>)</condition>

    <block pos:start="21:5" pos:end="75:5">{<block_content pos:start="23:9" pos:end="73:9">

        <expr_stmt pos:start="23:9" pos:end="23:28"><expr pos:start="23:9" pos:end="23:27"><call pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:21">vp56_rac_gets</name><argument_list pos:start="23:22" pos:end="23:27">(<argument pos:start="23:23" pos:end="23:23"><expr pos:start="23:23" pos:end="23:23"><name pos:start="23:23" pos:end="23:23">c</name></expr></argument>, <argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><literal type="number" pos:start="23:26" pos:end="23:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:39"><if pos:start="25:9" pos:end="27:39">if<condition pos:start="25:11" pos:end="25:35">(<expr pos:start="25:12" pos:end="25:34"><call pos:start="25:12" pos:end="25:30"><name pos:start="25:12" pos:end="25:24">vp56_rac_gets</name><argument_list pos:start="25:25" pos:end="25:30">(<argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><name pos:start="25:26" pos:end="25:26">c</name></expr></argument>, <argument pos:start="25:29" pos:end="25:29"><expr pos:start="25:29" pos:end="25:29"><literal type="number" pos:start="25:29" pos:end="25:29">5</literal></expr></argument>)</argument_list></call> <operator pos:start="25:32" pos:end="25:32">&gt;</operator> <literal type="number" pos:start="25:34" pos:end="25:34">5</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:39"><block_content pos:start="27:13" pos:end="27:39">

            <return pos:start="27:13" pos:end="27:39">return <expr pos:start="27:20" pos:end="27:38"><name pos:start="27:20" pos:end="27:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><call pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:21">vp56_rac_gets</name><argument_list pos:start="29:22" pos:end="29:27">(<argument pos:start="29:23" pos:end="29:23"><expr pos:start="29:23" pos:end="29:23"><name pos:start="29:23" pos:end="29:23">c</name></expr></argument>, <argument pos:start="29:26" pos:end="29:26"><expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:28">(<expr pos:start="31:13" pos:end="31:27"><call pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:24">vp56_rac_get</name><argument_list pos:start="31:25" pos:end="31:27">(<argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><name pos:start="31:26" pos:end="31:26">c</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:30" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:40">

            <expr_stmt pos:start="33:13" pos:end="33:74"><expr pos:start="33:13" pos:end="33:73"><call pos:start="33:13" pos:end="33:73"><name pos:start="33:13" pos:end="33:18">av_log</name><argument_list pos:start="33:19" pos:end="33:73">(<argument pos:start="33:20" pos:end="33:27"><expr pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:20">s</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:27">avctx</name></name></expr></argument>, <argument pos:start="33:30" pos:end="33:41"><expr pos:start="33:30" pos:end="33:41"><name pos:start="33:30" pos:end="33:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:44" pos:end="33:72"><expr pos:start="33:44" pos:end="33:72"><literal type="string" pos:start="33:44" pos:end="33:72">"interlacing not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:40">return <expr pos:start="35:20" pos:end="35:39"><name pos:start="35:20" pos:end="35:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:12">rows</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:28">vp56_rac_gets</name><argument_list pos:start="39:29" pos:end="39:34">(<argument pos:start="39:30" pos:end="39:30"><expr pos:start="39:30" pos:end="39:30"><name pos:start="39:30" pos:end="39:30">c</name></expr></argument>, <argument pos:start="39:33" pos:end="39:33"><expr pos:start="39:33" pos:end="39:33"><literal type="number" pos:start="39:33" pos:end="39:33">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="39:38" pos:end="39:75">/* number of stored macroblock rows */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:12">cols</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:28">vp56_rac_gets</name><argument_list pos:start="41:29" pos:end="41:34">(<argument pos:start="41:30" pos:end="41:30"><expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">c</name></expr></argument>, <argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><literal type="number" pos:start="41:33" pos:end="41:33">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="41:38" pos:end="41:75">/* number of stored macroblock cols */</comment>

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:27">(<expr pos:start="43:13" pos:end="43:26"><operator pos:start="43:13" pos:end="43:13">!</operator><name pos:start="43:14" pos:end="43:17">rows</name> <operator pos:start="43:19" pos:end="43:20">||</operator> <operator pos:start="43:22" pos:end="43:22">!</operator><name pos:start="43:23" pos:end="43:26">cols</name></expr>)</condition> <block pos:start="43:29" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:39">

            <expr_stmt pos:start="45:13" pos:end="47:41"><expr pos:start="45:13" pos:end="47:40"><call pos:start="45:13" pos:end="47:40"><name pos:start="45:13" pos:end="45:18">av_log</name><argument_list pos:start="45:19" pos:end="47:40">(<argument pos:start="45:20" pos:end="45:27"><expr pos:start="45:20" pos:end="45:27"><name pos:start="45:20" pos:end="45:27"><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:27">avctx</name></name></expr></argument>, <argument pos:start="45:30" pos:end="45:41"><expr pos:start="45:30" pos:end="45:41"><name pos:start="45:30" pos:end="45:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:44" pos:end="45:65"><expr pos:start="45:44" pos:end="45:65"><literal type="string" pos:start="45:44" pos:end="45:65">"Invalid size %dx%d\n"</literal></expr></argument>,

                   <argument pos:start="47:20" pos:end="47:28"><expr pos:start="47:20" pos:end="47:28"><name pos:start="47:20" pos:end="47:23">cols</name> <operator pos:start="47:25" pos:end="47:26">&lt;&lt;</operator> <literal type="number" pos:start="47:28" pos:end="47:28">4</literal></expr></argument>, <argument pos:start="47:31" pos:end="47:39"><expr pos:start="47:31" pos:end="47:39"><name pos:start="47:31" pos:end="47:34">rows</name> <operator pos:start="47:36" pos:end="47:37">&lt;&lt;</operator> <literal type="number" pos:start="47:39" pos:end="47:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:39">return <expr pos:start="49:20" pos:end="49:38"><name pos:start="49:20" pos:end="49:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><call pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:21">vp56_rac_gets</name><argument_list pos:start="53:22" pos:end="53:27">(<argument pos:start="53:23" pos:end="53:23"><expr pos:start="53:23" pos:end="53:23"><name pos:start="53:23" pos:end="53:23">c</name></expr></argument>, <argument pos:start="53:26" pos:end="53:26"><expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="53:31" pos:end="53:71">/* number of displayed macroblock rows */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><call pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:21">vp56_rac_gets</name><argument_list pos:start="55:22" pos:end="55:27">(<argument pos:start="55:23" pos:end="55:23"><expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">c</name></expr></argument>, <argument pos:start="55:26" pos:end="55:26"><expr pos:start="55:26" pos:end="55:26"><literal type="number" pos:start="55:26" pos:end="55:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="55:31" pos:end="55:71">/* number of displayed macroblock cols */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><call pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:21">vp56_rac_gets</name><argument_list pos:start="57:22" pos:end="57:27">(<argument pos:start="57:23" pos:end="57:23"><expr pos:start="57:23" pos:end="57:23"><name pos:start="57:23" pos:end="57:23">c</name></expr></argument>, <argument pos:start="57:26" pos:end="57:26"><expr pos:start="57:26" pos:end="57:26"><literal type="number" pos:start="57:26" pos:end="57:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="73:9"><if pos:start="59:9" pos:end="73:9">if <condition pos:start="59:12" pos:end="63:46">(<expr pos:start="59:13" pos:end="63:45"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:27"><name pos:start="59:14" pos:end="59:14">s</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:27">macroblocks</name></name> <operator pos:start="59:29" pos:end="59:30">||</operator> <comment type="block" pos:start="59:32" pos:end="59:48">/* first frame */</comment>

            <literal type="number" pos:start="61:13" pos:end="61:14">16</literal><operator pos:start="61:15" pos:end="61:15">*</operator><name pos:start="61:16" pos:end="61:19">cols</name> <operator pos:start="61:21" pos:end="61:22">!=</operator> <name pos:start="61:24" pos:end="61:44"><name pos:start="61:24" pos:end="61:24">s</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:31">avctx</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:44">coded_width</name></name> <operator pos:start="61:46" pos:end="61:47">||</operator>

            <literal type="number" pos:start="63:13" pos:end="63:14">16</literal><operator pos:start="63:15" pos:end="63:15">*</operator><name pos:start="63:16" pos:end="63:19">rows</name> <operator pos:start="63:21" pos:end="63:22">!=</operator> <name pos:start="63:24" pos:end="63:45"><name pos:start="63:24" pos:end="63:24">s</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:31">avctx</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:45">coded_height</name></name></expr>)</condition> <block pos:start="63:48" pos:end="73:9">{<block_content pos:start="65:13" pos:end="71:36">

            <decl_stmt pos:start="65:13" pos:end="65:72"><decl pos:start="65:13" pos:end="65:71"><type pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">int</name></type> <name pos:start="65:17" pos:end="65:19">ret</name> <init pos:start="65:21" pos:end="65:71">= <expr pos:start="65:23" pos:end="65:71"><call pos:start="65:23" pos:end="65:71"><name pos:start="65:23" pos:end="65:39">ff_set_dimensions</name><argument_list pos:start="65:40" pos:end="65:71">(<argument pos:start="65:41" pos:end="65:48"><expr pos:start="65:41" pos:end="65:48"><name pos:start="65:41" pos:end="65:48"><name pos:start="65:41" pos:end="65:41">s</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:48">avctx</name></name></expr></argument>, <argument pos:start="65:51" pos:end="65:59"><expr pos:start="65:51" pos:end="65:59"><literal type="number" pos:start="65:51" pos:end="65:52">16</literal> <operator pos:start="65:54" pos:end="65:54">*</operator> <name pos:start="65:56" pos:end="65:59">cols</name></expr></argument>, <argument pos:start="65:62" pos:end="65:70"><expr pos:start="65:62" pos:end="65:70"><literal type="number" pos:start="65:62" pos:end="65:63">16</literal> <operator pos:start="65:65" pos:end="65:65">*</operator> <name pos:start="65:67" pos:end="65:70">rows</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="67:13" pos:end="69:27"><if pos:start="67:13" pos:end="69:27">if <condition pos:start="67:16" pos:end="67:24">(<expr pos:start="67:17" pos:end="67:23"><name pos:start="67:17" pos:end="67:19">ret</name> <operator pos:start="67:21" pos:end="67:21">&lt;</operator> <literal type="number" pos:start="67:23" pos:end="67:23">0</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:27"><block_content pos:start="69:17" pos:end="69:27">

                <return pos:start="69:17" pos:end="69:27">return <expr pos:start="69:24" pos:end="69:26"><name pos:start="69:24" pos:end="69:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <return pos:start="71:13" pos:end="71:36">return <expr pos:start="71:20" pos:end="71:35"><name pos:start="71:20" pos:end="71:35">VP56_SIZE_CHANGE</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="75:7" pos:end="77:35">else if <condition pos:start="75:15" pos:end="75:31">(<expr pos:start="75:16" pos:end="75:30"><operator pos:start="75:16" pos:end="75:16">!</operator><name pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:30">macroblocks</name></name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:35"><block_content pos:start="77:9" pos:end="77:35">

        <return pos:start="77:9" pos:end="77:35">return <expr pos:start="77:16" pos:end="77:34"><name pos:start="77:16" pos:end="77:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
