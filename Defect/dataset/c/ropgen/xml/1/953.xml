<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/953.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">notify_guest_bh</name><parameter_list pos:start="1:28" pos:end="1:41">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:34"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:5">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">VirtIOBlockDataPlane</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:27">s</name> <init pos:start="5:29" pos:end="5:36">= <expr pos:start="5:31" pos:end="5:36"><name pos:start="5:31" pos:end="5:36">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:17">nvqs</name> <init pos:start="7:19" pos:end="7:39">= <expr pos:start="7:21" pos:end="7:39"><name pos:start="7:21" pos:end="7:39"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:27">conf</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:39">num_queues</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name></type> <name pos:start="9:19" pos:end="9:45"><name pos:start="9:19" pos:end="9:24">bitmap</name><index pos:start="9:25" pos:end="9:45">[<expr pos:start="9:26" pos:end="9:44"><call pos:start="9:26" pos:end="9:44"><name pos:start="9:26" pos:end="9:38">BITS_TO_LONGS</name><argument_list pos:start="9:39" pos:end="9:44">(<argument pos:start="9:40" pos:end="9:43"><expr pos:start="9:40" pos:end="9:43"><name pos:start="9:40" pos:end="9:43">nvqs</name></expr></argument>)</argument_list></call></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:14">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:56"><expr pos:start="15:5" pos:end="15:55"><call pos:start="15:5" pos:end="15:55"><name pos:start="15:5" pos:end="15:10">memcpy</name><argument_list pos:start="15:11" pos:end="15:55">(<argument pos:start="15:12" pos:end="15:17"><expr pos:start="15:12" pos:end="15:17"><name pos:start="15:12" pos:end="15:17">bitmap</name></expr></argument>, <argument pos:start="15:20" pos:end="15:38"><expr pos:start="15:20" pos:end="15:38"><name pos:start="15:20" pos:end="15:38"><name pos:start="15:20" pos:end="15:20">s</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:38">batch_notify_vqs</name></name></expr></argument>, <argument pos:start="15:41" pos:end="15:54"><expr pos:start="15:41" pos:end="15:54"><sizeof pos:start="15:41" pos:end="15:54">sizeof<argument_list pos:start="15:47" pos:end="15:54">(<argument pos:start="15:48" pos:end="15:53"><expr pos:start="15:48" pos:end="15:53"><name pos:start="15:48" pos:end="15:53">bitmap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:51"><expr pos:start="17:5" pos:end="17:50"><call pos:start="17:5" pos:end="17:50"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:50">(<argument pos:start="17:12" pos:end="17:30"><expr pos:start="17:12" pos:end="17:30"><name pos:start="17:12" pos:end="17:30"><name pos:start="17:12" pos:end="17:12">s</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:30">batch_notify_vqs</name></name></expr></argument>, <argument pos:start="17:33" pos:end="17:33"><expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">0</literal></expr></argument>, <argument pos:start="17:36" pos:end="17:49"><expr pos:start="17:36" pos:end="17:49"><sizeof pos:start="17:36" pos:end="17:49">sizeof<argument_list pos:start="17:42" pos:end="17:49">(<argument pos:start="17:43" pos:end="17:48"><expr pos:start="17:43" pos:end="17:48"><name pos:start="17:43" pos:end="17:48">bitmap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="47:5">for <control pos:start="21:9" pos:end="21:45">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">j</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:25"><expr pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:17">j</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:24">nvqs</name></expr>;</condition> <incr pos:start="21:27" pos:end="21:44"><expr pos:start="21:27" pos:end="21:44"><name pos:start="21:27" pos:end="21:27">j</name> <operator pos:start="21:29" pos:end="21:30">+=</operator> <name pos:start="21:32" pos:end="21:44">BITS_PER_LONG</name></expr></incr>)</control> <block pos:start="21:47" pos:end="47:5">{<block_content pos:start="23:9" pos:end="45:9">

        <decl_stmt pos:start="23:9" pos:end="23:39"><decl pos:start="23:9" pos:end="23:38"><type pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:16">unsigned</name> <name pos:start="23:18" pos:end="23:21">long</name></type> <name pos:start="23:23" pos:end="23:26">bits</name> <init pos:start="23:28" pos:end="23:38">= <expr pos:start="23:30" pos:end="23:38"><name pos:start="23:30" pos:end="23:38"><name pos:start="23:30" pos:end="23:35">bitmap</name><index pos:start="23:36" pos:end="23:38">[<expr pos:start="23:37" pos:end="23:37"><name pos:start="23:37" pos:end="23:37">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <while pos:start="27:9" pos:end="45:9">while <condition pos:start="27:15" pos:end="27:25">(<expr pos:start="27:16" pos:end="27:24"><name pos:start="27:16" pos:end="27:19">bits</name> <operator pos:start="27:21" pos:end="27:22">!=</operator> <literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>)</condition> <block pos:start="27:27" pos:end="45:9">{<block_content pos:start="29:13" pos:end="43:29">

            <decl_stmt pos:start="29:13" pos:end="29:40"><decl pos:start="29:13" pos:end="29:39"><type pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:20">unsigned</name></type> <name pos:start="29:22" pos:end="29:22">i</name> <init pos:start="29:24" pos:end="29:39">= <expr pos:start="29:26" pos:end="29:39"><name pos:start="29:26" pos:end="29:26">j</name> <operator pos:start="29:28" pos:end="29:28">+</operator> <call pos:start="29:30" pos:end="29:39"><name pos:start="29:30" pos:end="29:33">ctzl</name><argument_list pos:start="29:34" pos:end="29:39">(<argument pos:start="29:35" pos:end="29:38"><expr pos:start="29:35" pos:end="29:38"><name pos:start="29:35" pos:end="29:38">bits</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="31:13" pos:end="31:57"><decl pos:start="31:13" pos:end="31:56"><type pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:21">VirtQueue</name> <modifier pos:start="31:23" pos:end="31:23">*</modifier></type><name pos:start="31:24" pos:end="31:25">vq</name> <init pos:start="31:27" pos:end="31:56">= <expr pos:start="31:29" pos:end="31:56"><call pos:start="31:29" pos:end="31:56"><name pos:start="31:29" pos:end="31:44">virtio_get_queue</name><argument_list pos:start="31:45" pos:end="31:56">(<argument pos:start="31:46" pos:end="31:52"><expr pos:start="31:46" pos:end="31:52"><name pos:start="31:46" pos:end="31:52"><name pos:start="31:46" pos:end="31:46">s</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:52">vdev</name></name></expr></argument>, <argument pos:start="31:55" pos:end="31:55"><expr pos:start="31:55" pos:end="31:55"><name pos:start="31:55" pos:end="31:55">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:50">(<expr pos:start="35:17" pos:end="35:49"><call pos:start="35:17" pos:end="35:49"><name pos:start="35:17" pos:end="35:36">virtio_should_notify</name><argument_list pos:start="35:37" pos:end="35:49">(<argument pos:start="35:38" pos:end="35:44"><expr pos:start="35:38" pos:end="35:44"><name pos:start="35:38" pos:end="35:44"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:44">vdev</name></name></expr></argument>, <argument pos:start="35:47" pos:end="35:48"><expr pos:start="35:47" pos:end="35:48"><name pos:start="35:47" pos:end="35:48">vq</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:52" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:72">

                <expr_stmt pos:start="37:17" pos:end="37:72"><expr pos:start="37:17" pos:end="37:71"><call pos:start="37:17" pos:end="37:71"><name pos:start="37:17" pos:end="37:34">event_notifier_set</name><argument_list pos:start="37:35" pos:end="37:71">(<argument pos:start="37:36" pos:end="37:70"><expr pos:start="37:36" pos:end="37:70"><call pos:start="37:36" pos:end="37:70"><name pos:start="37:36" pos:end="37:66">virtio_queue_get_guest_notifier</name><argument_list pos:start="37:67" pos:end="37:70">(<argument pos:start="37:68" pos:end="37:69"><expr pos:start="37:68" pos:end="37:69"><name pos:start="37:68" pos:end="37:69">vq</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:16">bits</name> <operator pos:start="43:18" pos:end="43:19">&amp;=</operator> <name pos:start="43:21" pos:end="43:24">bits</name> <operator pos:start="43:26" pos:end="43:26">-</operator> <literal type="number" pos:start="43:28" pos:end="43:28">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="43:31" pos:end="43:56">/* clear right-most bit */</comment>

        </block_content>}</block></while>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
