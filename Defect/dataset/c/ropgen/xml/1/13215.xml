<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13215.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">set_hwframe_ctx</name><parameter_list pos:start="1:27" pos:end="1:75">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">ctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:74"><decl pos:start="1:49" pos:end="1:74"><type pos:start="1:49" pos:end="1:74"><name pos:start="1:49" pos:end="1:59">AVBufferRef</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:74">hw_device_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:15">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVBufferRef</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:30">hw_frames_ref</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">AVHWFramesContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:33">frames_ctx</name> <init pos:start="7:35" pos:end="7:40">= <expr pos:start="7:37" pos:end="7:40"><name pos:start="7:37" pos:end="7:40">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:63">(<expr pos:start="13:9" pos:end="13:62"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:23">hw_frames_ref</name> <operator pos:start="13:25" pos:end="13:25">=</operator> <call pos:start="13:27" pos:end="13:61"><name pos:start="13:27" pos:end="13:46">av_hwframe_ctx_alloc</name><argument_list pos:start="13:47" pos:end="13:61">(<argument pos:start="13:48" pos:end="13:60"><expr pos:start="13:48" pos:end="13:60"><name pos:start="13:48" pos:end="13:60">hw_device_ctx</name></expr></argument>)</argument_list></call><operator pos:start="13:62" pos:end="13:62">)</operator></expr>)</condition> <block pos:start="13:65" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:18">

        <expr_stmt pos:start="15:9" pos:end="15:67"><expr pos:start="15:9" pos:end="15:66"><call pos:start="15:9" pos:end="15:66"><name pos:start="15:9" pos:end="15:15">fprintf</name><argument_list pos:start="15:16" pos:end="15:66">(<argument pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:22">stderr</name></expr></argument>, <argument pos:start="15:25" pos:end="15:65"><expr pos:start="15:25" pos:end="15:65"><literal type="string" pos:start="15:25" pos:end="15:65">"Failed to create VAAPI frame context.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:59"><name pos:start="21:5" pos:end="21:14">frames_ctx</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <operator pos:start="21:18" pos:end="21:18">(</operator><name pos:start="21:19" pos:end="21:35">AVHWFramesContext</name> <operator pos:start="21:37" pos:end="21:37">*</operator><operator pos:start="21:38" pos:end="21:38">)</operator><operator pos:start="21:39" pos:end="21:39">(</operator><name pos:start="21:40" pos:end="21:58"><name pos:start="21:40" pos:end="21:52">hw_frames_ref</name><operator pos:start="21:53" pos:end="21:54">-&gt;</operator><name pos:start="21:55" pos:end="21:58">data</name></name><operator pos:start="21:59" pos:end="21:59">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:14">frames_ctx</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:22">format</name></name>    <operator pos:start="23:27" pos:end="23:27">=</operator> <name pos:start="23:29" pos:end="23:44">AV_PIX_FMT_VAAPI</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:44"><expr pos:start="25:5" pos:end="25:43"><name pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:14">frames_ctx</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:25">sw_format</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:43">AV_PIX_FMT_NV12</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:14">frames_ctx</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:21">width</name></name>     <operator pos:start="27:27" pos:end="27:27">=</operator> <name pos:start="27:29" pos:end="27:33">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:14">frames_ctx</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:22">height</name></name>    <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:34">height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:39"><expr pos:start="31:5" pos:end="31:38"><name pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:14">frames_ctx</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:33">initial_pool_size</name></name> <operator pos:start="31:35" pos:end="31:35">=</operator> <literal type="number" pos:start="31:37" pos:end="31:38">20</literal></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="42:5"><if pos:start="33:5" pos:end="42:5">if <condition pos:start="33:8" pos:end="33:55">(<expr pos:start="33:9" pos:end="33:54"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:12">err</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:49"><name pos:start="33:16" pos:end="33:34">av_hwframe_ctx_init</name><argument_list pos:start="33:35" pos:end="33:49">(<argument pos:start="33:36" pos:end="33:48"><expr pos:start="33:36" pos:end="33:48"><name pos:start="33:36" pos:end="33:48">hw_frames_ref</name></expr></argument>)</argument_list></call><operator pos:start="33:50" pos:end="33:50">)</operator> <operator pos:start="33:52" pos:end="33:52">&lt;</operator> <literal type="number" pos:start="33:54" pos:end="33:54">0</literal></expr>)</condition> <block pos:start="33:57" pos:end="42:5">{<block_content pos:start="35:9" pos:end="40:19">

        <expr_stmt pos:start="35:9" pos:end="37:52"><expr pos:start="35:9" pos:end="37:51"><call pos:start="35:9" pos:end="37:51"><name pos:start="35:9" pos:end="35:15">fprintf</name><argument_list pos:start="35:16" pos:end="37:51">(<argument pos:start="35:17" pos:end="35:22"><expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22">stderr</name></expr></argument>, <argument pos:start="35:25" pos:end="37:34"><expr pos:start="35:25" pos:end="37:34"><literal type="string" pos:start="35:25" pos:end="35:67">"Failed to initialize VAAPI frame context."</literal>

                <literal type="string" pos:start="37:17" pos:end="37:34">"Error code: %s\n"</literal></expr></argument>,<argument pos:start="37:36" pos:end="37:50"><expr pos:start="37:36" pos:end="37:50"><call pos:start="37:36" pos:end="37:50"><name pos:start="37:36" pos:end="37:45">av_err2str</name><argument_list pos:start="37:46" pos:end="37:50">(<argument pos:start="37:47" pos:end="37:49"><expr pos:start="37:47" pos:end="37:49"><name pos:start="37:47" pos:end="37:49">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <return pos:start="40:9" pos:end="40:19">return <expr pos:start="40:16" pos:end="40:18"><name pos:start="40:16" pos:end="40:18">err</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="44:5" pos:end="44:54"><expr pos:start="44:5" pos:end="44:53"><name pos:start="44:5" pos:end="44:22"><name pos:start="44:5" pos:end="44:7">ctx</name><operator pos:start="44:8" pos:end="44:9">-&gt;</operator><name pos:start="44:10" pos:end="44:22">hw_frames_ctx</name></name> <operator pos:start="44:24" pos:end="44:24">=</operator> <call pos:start="44:26" pos:end="44:53"><name pos:start="44:26" pos:end="44:38">av_buffer_ref</name><argument_list pos:start="44:39" pos:end="44:53">(<argument pos:start="44:40" pos:end="44:52"><expr pos:start="44:40" pos:end="44:52"><name pos:start="44:40" pos:end="44:52">hw_frames_ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="46:5" pos:end="48:30"><if pos:start="46:5" pos:end="48:30">if <condition pos:start="46:8" pos:end="46:28">(<expr pos:start="46:9" pos:end="46:27"><operator pos:start="46:9" pos:end="46:9">!</operator><name pos:start="46:10" pos:end="46:27"><name pos:start="46:10" pos:end="46:12">ctx</name><operator pos:start="46:13" pos:end="46:14">-&gt;</operator><name pos:start="46:15" pos:end="46:27">hw_frames_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="48:9" pos:end="48:30"><block_content pos:start="48:9" pos:end="48:30">

        <expr_stmt pos:start="48:9" pos:end="48:30"><expr pos:start="48:9" pos:end="48:29"><name pos:start="48:9" pos:end="48:11">err</name> <operator pos:start="48:13" pos:end="48:13">=</operator> <call pos:start="48:15" pos:end="48:29"><name pos:start="48:15" pos:end="48:21">AVERROR</name><argument_list pos:start="48:22" pos:end="48:29">(<argument pos:start="48:23" pos:end="48:28"><expr pos:start="48:23" pos:end="48:28"><name pos:start="48:23" pos:end="48:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>




    <return pos:start="53:5" pos:end="53:15">return <expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">err</name></expr>;</return>

</block_content>}</block></function></unit>
