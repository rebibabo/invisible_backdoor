<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3533.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:38">kvmppc_read_int_cpu_dt</name><parameter_list pos:start="1:39" pos:end="1:60">(<parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:51"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:59">propname</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:22"><name pos:start="5:10" pos:end="5:12">buf</name><index pos:start="5:13" pos:end="5:22">[<expr pos:start="5:14" pos:end="5:21"><name pos:start="5:14" pos:end="5:21">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <union pos:start="7:5" pos:end="13:8">union <block pos:start="7:11" pos:end="13:5">{

        <decl_stmt pos:start="9:9" pos:end="9:21"><decl pos:start="9:9" pos:end="9:20"><type pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:16">uint32_t</name></type> <name pos:start="9:18" pos:end="9:20">v32</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:21"><decl pos:start="11:9" pos:end="11:20"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">uint64_t</name></type> <name pos:start="11:18" pos:end="11:20">v64</name></decl>;</decl_stmt>

    }</block> <decl pos:start="13:7" pos:end="13:7"><name pos:start="13:7" pos:end="13:7">u</name></decl>;</union>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">FILE</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:11">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">len</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:45">(<expr pos:start="21:9" pos:end="21:44"><call pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:26">kvmppc_find_cpu_dt</name><argument_list pos:start="21:27" pos:end="21:44">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">buf</name></expr></argument>, <argument pos:start="21:33" pos:end="21:43"><expr pos:start="21:33" pos:end="21:43"><sizeof pos:start="21:33" pos:end="21:43">sizeof<argument_list pos:start="21:39" pos:end="21:43">(<argument pos:start="21:40" pos:end="21:42"><expr pos:start="21:40" pos:end="21:42"><name pos:start="21:40" pos:end="21:42">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:47" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:49"><expr pos:start="29:5" pos:end="29:48"><call pos:start="29:5" pos:end="29:48"><name pos:start="29:5" pos:end="29:11">strncat</name><argument_list pos:start="29:12" pos:end="29:48">(<argument pos:start="29:13" pos:end="29:15"><expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">buf</name></expr></argument>, <argument pos:start="29:18" pos:end="29:20"><expr pos:start="29:18" pos:end="29:20"><literal type="string" pos:start="29:18" pos:end="29:20">"/"</literal></expr></argument>, <argument pos:start="29:23" pos:end="29:47"><expr pos:start="29:23" pos:end="29:47"><sizeof pos:start="29:23" pos:end="29:33">sizeof<argument_list pos:start="29:29" pos:end="29:33">(<argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="29:35" pos:end="29:35">-</operator> <call pos:start="29:37" pos:end="29:47"><name pos:start="29:37" pos:end="29:42">strlen</name><argument_list pos:start="29:43" pos:end="29:47">(<argument pos:start="29:44" pos:end="29:46"><expr pos:start="29:44" pos:end="29:46"><name pos:start="29:44" pos:end="29:46">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><call pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:11">strncat</name><argument_list pos:start="31:12" pos:end="31:53">(<argument pos:start="31:13" pos:end="31:15"><expr pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">buf</name></expr></argument>, <argument pos:start="31:18" pos:end="31:25"><expr pos:start="31:18" pos:end="31:25"><name pos:start="31:18" pos:end="31:25">propname</name></expr></argument>, <argument pos:start="31:28" pos:end="31:52"><expr pos:start="31:28" pos:end="31:52"><sizeof pos:start="31:28" pos:end="31:38">sizeof<argument_list pos:start="31:34" pos:end="31:38">(<argument pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:37">buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="31:40" pos:end="31:40">-</operator> <call pos:start="31:42" pos:end="31:52"><name pos:start="31:42" pos:end="31:47">strlen</name><argument_list pos:start="31:48" pos:end="31:52">(<argument pos:start="31:49" pos:end="31:51"><expr pos:start="31:49" pos:end="31:51"><name pos:start="31:49" pos:end="31:51">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:5">f</name> <operator pos:start="35:7" pos:end="35:7">=</operator> <call pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:13">fopen</name><argument_list pos:start="35:14" pos:end="35:24">(<argument pos:start="35:15" pos:end="35:17"><expr pos:start="35:15" pos:end="35:17"><name pos:start="35:15" pos:end="35:17">buf</name></expr></argument>, <argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><literal type="string" pos:start="35:20" pos:end="35:23">"rb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:11">(<expr pos:start="37:9" pos:end="37:10"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:10">f</name></expr>)</condition> <block pos:start="37:13" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:18">

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:7">len</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:36"><name pos:start="45:11" pos:end="45:15">fread</name><argument_list pos:start="45:16" pos:end="45:36">(<argument pos:start="45:17" pos:end="45:18"><expr pos:start="45:17" pos:end="45:18"><operator pos:start="45:17" pos:end="45:17">&amp;</operator><name pos:start="45:18" pos:end="45:18">u</name></expr></argument>, <argument pos:start="45:21" pos:end="45:21"><expr pos:start="45:21" pos:end="45:21"><literal type="number" pos:start="45:21" pos:end="45:21">1</literal></expr></argument>, <argument pos:start="45:24" pos:end="45:32"><expr pos:start="45:24" pos:end="45:32"><sizeof pos:start="45:24" pos:end="45:32">sizeof<argument_list pos:start="45:30" pos:end="45:32">(<argument pos:start="45:31" pos:end="45:31"><expr pos:start="45:31" pos:end="45:31"><name pos:start="45:31" pos:end="45:31">u</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:35" pos:end="45:35"><expr pos:start="45:35" pos:end="45:35"><name pos:start="45:35" pos:end="45:35">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:14"><expr pos:start="47:5" pos:end="47:13"><call pos:start="47:5" pos:end="47:13"><name pos:start="47:5" pos:end="47:10">fclose</name><argument_list pos:start="47:11" pos:end="47:13">(<argument pos:start="47:12" pos:end="47:12"><expr pos:start="47:12" pos:end="47:12"><name pos:start="47:12" pos:end="47:12">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="49:5" pos:end="61:5">switch <condition pos:start="49:12" pos:end="49:16">(<expr pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">len</name></expr>)</condition> <block pos:start="49:18" pos:end="61:5">{<block_content pos:start="51:5" pos:end="59:34">

    <case pos:start="51:5" pos:end="51:11">case <expr pos:start="51:10" pos:end="51:10"><literal type="number" pos:start="51:10" pos:end="51:10">4</literal></expr>:</case>

        <comment type="block" pos:start="53:9" pos:end="53:43">/* property is a 32-bit quantity */</comment>

        <return pos:start="55:9" pos:end="55:34">return <expr pos:start="55:16" pos:end="55:33"><call pos:start="55:16" pos:end="55:33"><name pos:start="55:16" pos:end="55:26">be32_to_cpu</name><argument_list pos:start="55:27" pos:end="55:33">(<argument pos:start="55:28" pos:end="55:32"><expr pos:start="55:28" pos:end="55:32"><name pos:start="55:28" pos:end="55:32"><name pos:start="55:28" pos:end="55:28">u</name><operator pos:start="55:29" pos:end="55:29">.</operator><name pos:start="55:30" pos:end="55:32">v32</name></name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">8</literal></expr>:</case>

        <return pos:start="59:9" pos:end="59:34">return <expr pos:start="59:16" pos:end="59:33"><call pos:start="59:16" pos:end="59:33"><name pos:start="59:16" pos:end="59:26">be64_to_cpu</name><argument_list pos:start="59:27" pos:end="59:33">(<argument pos:start="59:28" pos:end="59:32"><expr pos:start="59:28" pos:end="59:32"><name pos:start="59:28" pos:end="59:32"><name pos:start="59:28" pos:end="59:28">u</name><operator pos:start="59:29" pos:end="59:29">.</operator><name pos:start="59:30" pos:end="59:32">v64</name></name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>



    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
