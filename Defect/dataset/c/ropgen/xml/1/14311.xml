<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14311.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:22">abi_long</name></type> <name pos:start="1:24" pos:end="1:32">do_semctl</name><parameter_list pos:start="1:33" pos:end="3:62">(<parameter pos:start="1:34" pos:end="1:42"><decl pos:start="1:34" pos:end="1:42"><type pos:start="1:34" pos:end="1:42"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:42">semid</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:54"><decl pos:start="1:45" pos:end="1:54"><type pos:start="1:45" pos:end="1:54"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:54">semnum</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:63"><decl pos:start="1:57" pos:end="1:63"><type pos:start="1:57" pos:end="1:63"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:63">cmd</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:61"><decl pos:start="3:34" pos:end="3:61"><type pos:start="3:34" pos:end="3:61"><name pos:start="3:34" pos:end="3:51"><name pos:start="3:34" pos:end="3:38">union</name> <name pos:start="3:40" pos:end="3:51">target_semun</name></name></type> <name pos:start="3:53" pos:end="3:61">target_su</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="117:1">{<block_content pos:start="7:5" pos:end="115:15">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:9">union</name> <name pos:start="7:11" pos:end="7:15">semun</name></name></type> <name pos:start="7:17" pos:end="7:19">arg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:19">semid_ds</name></name></type> <name pos:start="9:21" pos:end="9:25">dsarg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:18">short</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">array</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:18">seminfo</name></name></type> <name pos:start="13:20" pos:end="13:26">seminfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">abi_long</name></type> <name pos:start="15:14" pos:end="15:16">ret</name> <init pos:start="15:18" pos:end="15:33">= <expr pos:start="15:20" pos:end="15:33"><operator pos:start="15:20" pos:end="15:20">-</operator><name pos:start="15:21" pos:end="15:33">TARGET_EINVAL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">abi_long</name></type> <name pos:start="17:14" pos:end="17:16">err</name></decl>;</decl_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:16"><expr pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:7">cmd</name> <operator pos:start="19:9" pos:end="19:10">&amp;=</operator> <literal type="number" pos:start="19:12" pos:end="19:15">0xff</literal></expr>;</expr_stmt>



    <switch pos:start="23:5" pos:end="111:5">switch<condition pos:start="23:11" pos:end="23:17">( <expr pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">cmd</name></expr> )</condition> <block pos:start="23:19" pos:end="111:5">{<block_content pos:start="25:9" pos:end="109:18">

	<case pos:start="25:9" pos:end="25:20">case <expr pos:start="25:14" pos:end="25:19"><name pos:start="25:14" pos:end="25:19">GETVAL</name></expr>:</case>

	<case pos:start="27:9" pos:end="27:20">case <expr pos:start="27:14" pos:end="27:19"><name pos:start="27:14" pos:end="27:19">SETVAL</name></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:44"><expr pos:start="29:13" pos:end="29:43"><name pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:15">arg</name><operator pos:start="29:16" pos:end="29:16">.</operator><name pos:start="29:17" pos:end="29:19">val</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:43"><name pos:start="29:23" pos:end="29:28">tswapl</name><argument_list pos:start="29:29" pos:end="29:43">(<argument pos:start="29:30" pos:end="29:42"><expr pos:start="29:30" pos:end="29:42"><name pos:start="29:30" pos:end="29:42"><name pos:start="29:30" pos:end="29:38">target_su</name><operator pos:start="29:39" pos:end="29:39">.</operator><name pos:start="29:40" pos:end="29:42">val</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:61"><expr pos:start="31:13" pos:end="31:60"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:60"><name pos:start="31:19" pos:end="31:27">get_errno</name><argument_list pos:start="31:28" pos:end="31:60">(<argument pos:start="31:29" pos:end="31:59"><expr pos:start="31:29" pos:end="31:59"><call pos:start="31:29" pos:end="31:59"><name pos:start="31:29" pos:end="31:34">semctl</name><argument_list pos:start="31:35" pos:end="31:59">(<argument pos:start="31:36" pos:end="31:40"><expr pos:start="31:36" pos:end="31:40"><name pos:start="31:36" pos:end="31:40">semid</name></expr></argument>, <argument pos:start="31:43" pos:end="31:48"><expr pos:start="31:43" pos:end="31:48"><name pos:start="31:43" pos:end="31:48">semnum</name></expr></argument>, <argument pos:start="31:51" pos:end="31:53"><expr pos:start="31:51" pos:end="31:53"><name pos:start="31:51" pos:end="31:53">cmd</name></expr></argument>, <argument pos:start="31:56" pos:end="31:58"><expr pos:start="31:56" pos:end="31:58"><name pos:start="31:56" pos:end="31:58">arg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:44"><expr pos:start="33:13" pos:end="33:43"><name pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:21">target_su</name><operator pos:start="33:22" pos:end="33:22">.</operator><name pos:start="33:23" pos:end="33:25">val</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <call pos:start="33:29" pos:end="33:43"><name pos:start="33:29" pos:end="33:34">tswapl</name><argument_list pos:start="33:35" pos:end="33:43">(<argument pos:start="33:36" pos:end="33:42"><expr pos:start="33:36" pos:end="33:42"><name pos:start="33:36" pos:end="33:42"><name pos:start="33:36" pos:end="33:38">arg</name><operator pos:start="33:39" pos:end="33:39">.</operator><name pos:start="33:40" pos:end="33:42">val</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

	<case pos:start="37:9" pos:end="37:20">case <expr pos:start="37:14" pos:end="37:19"><name pos:start="37:14" pos:end="37:19">GETALL</name></expr>:</case>

	<case pos:start="39:9" pos:end="39:20">case <expr pos:start="39:14" pos:end="39:19"><name pos:start="39:14" pos:end="39:19">SETALL</name></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:74"><expr pos:start="41:13" pos:end="41:73"><name pos:start="41:13" pos:end="41:15">err</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:73"><name pos:start="41:19" pos:end="41:41">target_to_host_semarray</name><argument_list pos:start="41:42" pos:end="41:73">(<argument pos:start="41:43" pos:end="41:47"><expr pos:start="41:43" pos:end="41:47"><name pos:start="41:43" pos:end="41:47">semid</name></expr></argument>, <argument pos:start="41:50" pos:end="41:55"><expr pos:start="41:50" pos:end="41:55"><operator pos:start="41:50" pos:end="41:50">&amp;</operator><name pos:start="41:51" pos:end="41:55">array</name></expr></argument>, <argument pos:start="41:58" pos:end="41:72"><expr pos:start="41:58" pos:end="41:72"><name pos:start="41:58" pos:end="41:72"><name pos:start="41:58" pos:end="41:66">target_su</name><operator pos:start="41:67" pos:end="41:67">.</operator><name pos:start="41:68" pos:end="41:72">array</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="45:27"><if pos:start="43:13" pos:end="45:27">if <condition pos:start="43:16" pos:end="43:20">(<expr pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">err</name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:27"><block_content pos:start="45:17" pos:end="45:27">

                <return pos:start="45:17" pos:end="45:27">return <expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">err</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:30"><expr pos:start="47:13" pos:end="47:29"><name pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:15">arg</name><operator pos:start="47:16" pos:end="47:16">.</operator><name pos:start="47:17" pos:end="47:21">array</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:29">array</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:61"><expr pos:start="49:13" pos:end="49:60"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:60"><name pos:start="49:19" pos:end="49:27">get_errno</name><argument_list pos:start="49:28" pos:end="49:60">(<argument pos:start="49:29" pos:end="49:59"><expr pos:start="49:29" pos:end="49:59"><call pos:start="49:29" pos:end="49:59"><name pos:start="49:29" pos:end="49:34">semctl</name><argument_list pos:start="49:35" pos:end="49:59">(<argument pos:start="49:36" pos:end="49:40"><expr pos:start="49:36" pos:end="49:40"><name pos:start="49:36" pos:end="49:40">semid</name></expr></argument>, <argument pos:start="49:43" pos:end="49:48"><expr pos:start="49:43" pos:end="49:48"><name pos:start="49:43" pos:end="49:48">semnum</name></expr></argument>, <argument pos:start="49:51" pos:end="49:53"><expr pos:start="49:51" pos:end="49:53"><name pos:start="49:51" pos:end="49:53">cmd</name></expr></argument>, <argument pos:start="49:56" pos:end="49:58"><expr pos:start="49:56" pos:end="49:58"><name pos:start="49:56" pos:end="49:58">arg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:74"><expr pos:start="51:13" pos:end="51:73"><name pos:start="51:13" pos:end="51:15">err</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="51:73"><name pos:start="51:19" pos:end="51:41">host_to_target_semarray</name><argument_list pos:start="51:42" pos:end="51:73">(<argument pos:start="51:43" pos:end="51:47"><expr pos:start="51:43" pos:end="51:47"><name pos:start="51:43" pos:end="51:47">semid</name></expr></argument>, <argument pos:start="51:50" pos:end="51:64"><expr pos:start="51:50" pos:end="51:64"><name pos:start="51:50" pos:end="51:64"><name pos:start="51:50" pos:end="51:58">target_su</name><operator pos:start="51:59" pos:end="51:59">.</operator><name pos:start="51:60" pos:end="51:64">array</name></name></expr></argument>, <argument pos:start="51:67" pos:end="51:72"><expr pos:start="51:67" pos:end="51:72"><operator pos:start="51:67" pos:end="51:67">&amp;</operator><name pos:start="51:68" pos:end="51:72">array</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="55:27"><if pos:start="53:13" pos:end="55:27">if <condition pos:start="53:16" pos:end="53:20">(<expr pos:start="53:17" pos:end="53:19"><name pos:start="53:17" pos:end="53:19">err</name></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:27"><block_content pos:start="55:17" pos:end="55:27">

                <return pos:start="55:17" pos:end="55:27">return <expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">err</name></expr>;</return></block_content></block></if></if_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

	<case pos:start="59:9" pos:end="59:22">case <expr pos:start="59:14" pos:end="59:21"><name pos:start="59:14" pos:end="59:21">IPC_STAT</name></expr>:</case>

	<case pos:start="61:9" pos:end="61:21">case <expr pos:start="61:14" pos:end="61:20"><name pos:start="61:14" pos:end="61:20">IPC_SET</name></expr>:</case>

	<case pos:start="63:9" pos:end="63:22">case <expr pos:start="63:14" pos:end="63:21"><name pos:start="63:14" pos:end="63:21">SEM_STAT</name></expr>:</case>

            <expr_stmt pos:start="65:13" pos:end="65:65"><expr pos:start="65:13" pos:end="65:64"><name pos:start="65:13" pos:end="65:15">err</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:64"><name pos:start="65:19" pos:end="65:41">target_to_host_semid_ds</name><argument_list pos:start="65:42" pos:end="65:64">(<argument pos:start="65:43" pos:end="65:48"><expr pos:start="65:43" pos:end="65:48"><operator pos:start="65:43" pos:end="65:43">&amp;</operator><name pos:start="65:44" pos:end="65:48">dsarg</name></expr></argument>, <argument pos:start="65:51" pos:end="65:63"><expr pos:start="65:51" pos:end="65:63"><name pos:start="65:51" pos:end="65:63"><name pos:start="65:51" pos:end="65:59">target_su</name><operator pos:start="65:60" pos:end="65:60">.</operator><name pos:start="65:61" pos:end="65:63">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="69:27"><if pos:start="67:13" pos:end="69:27">if <condition pos:start="67:16" pos:end="67:20">(<expr pos:start="67:17" pos:end="67:19"><name pos:start="67:17" pos:end="67:19">err</name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:27"><block_content pos:start="69:17" pos:end="69:27">

                <return pos:start="69:17" pos:end="69:27">return <expr pos:start="69:24" pos:end="69:26"><name pos:start="69:24" pos:end="69:26">err</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:29"><expr pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:15">arg</name><operator pos:start="71:16" pos:end="71:16">.</operator><name pos:start="71:17" pos:end="71:19">buf</name></name> <operator pos:start="71:21" pos:end="71:21">=</operator> <operator pos:start="71:23" pos:end="71:23">&amp;</operator><name pos:start="71:24" pos:end="71:28">dsarg</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:61"><expr pos:start="73:13" pos:end="73:60"><name pos:start="73:13" pos:end="73:15">ret</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:60"><name pos:start="73:19" pos:end="73:27">get_errno</name><argument_list pos:start="73:28" pos:end="73:60">(<argument pos:start="73:29" pos:end="73:59"><expr pos:start="73:29" pos:end="73:59"><call pos:start="73:29" pos:end="73:59"><name pos:start="73:29" pos:end="73:34">semctl</name><argument_list pos:start="73:35" pos:end="73:59">(<argument pos:start="73:36" pos:end="73:40"><expr pos:start="73:36" pos:end="73:40"><name pos:start="73:36" pos:end="73:40">semid</name></expr></argument>, <argument pos:start="73:43" pos:end="73:48"><expr pos:start="73:43" pos:end="73:48"><name pos:start="73:43" pos:end="73:48">semnum</name></expr></argument>, <argument pos:start="73:51" pos:end="73:53"><expr pos:start="73:51" pos:end="73:53"><name pos:start="73:51" pos:end="73:53">cmd</name></expr></argument>, <argument pos:start="73:56" pos:end="73:58"><expr pos:start="73:56" pos:end="73:58"><name pos:start="73:56" pos:end="73:58">arg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:65"><expr pos:start="75:13" pos:end="75:64"><name pos:start="75:13" pos:end="75:15">err</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <call pos:start="75:19" pos:end="75:64"><name pos:start="75:19" pos:end="75:41">host_to_target_semid_ds</name><argument_list pos:start="75:42" pos:end="75:64">(<argument pos:start="75:43" pos:end="75:55"><expr pos:start="75:43" pos:end="75:55"><name pos:start="75:43" pos:end="75:55"><name pos:start="75:43" pos:end="75:51">target_su</name><operator pos:start="75:52" pos:end="75:52">.</operator><name pos:start="75:53" pos:end="75:55">buf</name></name></expr></argument>, <argument pos:start="75:58" pos:end="75:63"><expr pos:start="75:58" pos:end="75:63"><operator pos:start="75:58" pos:end="75:58">&amp;</operator><name pos:start="75:59" pos:end="75:63">dsarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="77:13" pos:end="79:27"><if pos:start="77:13" pos:end="79:27">if <condition pos:start="77:16" pos:end="77:20">(<expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:19">err</name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:27"><block_content pos:start="79:17" pos:end="79:27">

                <return pos:start="79:17" pos:end="79:27">return <expr pos:start="79:24" pos:end="79:26"><name pos:start="79:24" pos:end="79:26">err</name></expr>;</return></block_content></block></if></if_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

	<case pos:start="83:9" pos:end="83:22">case <expr pos:start="83:14" pos:end="83:21"><name pos:start="83:14" pos:end="83:21">IPC_INFO</name></expr>:</case>

	<case pos:start="85:9" pos:end="85:22">case <expr pos:start="85:14" pos:end="85:21"><name pos:start="85:14" pos:end="85:21">SEM_INFO</name></expr>:</case>

            <expr_stmt pos:start="87:13" pos:end="87:33"><expr pos:start="87:13" pos:end="87:32"><name pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:15">arg</name><operator pos:start="87:16" pos:end="87:16">.</operator><name pos:start="87:17" pos:end="87:21">__buf</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <operator pos:start="87:25" pos:end="87:25">&amp;</operator><name pos:start="87:26" pos:end="87:32">seminfo</name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:61"><expr pos:start="89:13" pos:end="89:60"><name pos:start="89:13" pos:end="89:15">ret</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <call pos:start="89:19" pos:end="89:60"><name pos:start="89:19" pos:end="89:27">get_errno</name><argument_list pos:start="89:28" pos:end="89:60">(<argument pos:start="89:29" pos:end="89:59"><expr pos:start="89:29" pos:end="89:59"><call pos:start="89:29" pos:end="89:59"><name pos:start="89:29" pos:end="89:34">semctl</name><argument_list pos:start="89:35" pos:end="89:59">(<argument pos:start="89:36" pos:end="89:40"><expr pos:start="89:36" pos:end="89:40"><name pos:start="89:36" pos:end="89:40">semid</name></expr></argument>, <argument pos:start="89:43" pos:end="89:48"><expr pos:start="89:43" pos:end="89:48"><name pos:start="89:43" pos:end="89:48">semnum</name></expr></argument>, <argument pos:start="89:51" pos:end="89:53"><expr pos:start="89:51" pos:end="89:53"><name pos:start="89:51" pos:end="89:53">cmd</name></expr></argument>, <argument pos:start="89:56" pos:end="89:58"><expr pos:start="89:56" pos:end="89:58"><name pos:start="89:56" pos:end="89:58">arg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:68"><expr pos:start="91:13" pos:end="91:67"><name pos:start="91:13" pos:end="91:15">err</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:67"><name pos:start="91:19" pos:end="91:40">host_to_target_seminfo</name><argument_list pos:start="91:41" pos:end="91:67">(<argument pos:start="91:42" pos:end="91:56"><expr pos:start="91:42" pos:end="91:56"><name pos:start="91:42" pos:end="91:56"><name pos:start="91:42" pos:end="91:50">target_su</name><operator pos:start="91:51" pos:end="91:51">.</operator><name pos:start="91:52" pos:end="91:56">__buf</name></name></expr></argument>, <argument pos:start="91:59" pos:end="91:66"><expr pos:start="91:59" pos:end="91:66"><operator pos:start="91:59" pos:end="91:59">&amp;</operator><name pos:start="91:60" pos:end="91:66">seminfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="95:27"><if pos:start="93:13" pos:end="95:27">if <condition pos:start="93:16" pos:end="93:20">(<expr pos:start="93:17" pos:end="93:19"><name pos:start="93:17" pos:end="93:19">err</name></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:27"><block_content pos:start="95:17" pos:end="95:27">

                <return pos:start="95:17" pos:end="95:27">return <expr pos:start="95:24" pos:end="95:26"><name pos:start="95:24" pos:end="95:26">err</name></expr>;</return></block_content></block></if></if_stmt>

            <break pos:start="97:13" pos:end="97:18">break;</break>

	<case pos:start="99:9" pos:end="99:22">case <expr pos:start="99:14" pos:end="99:21"><name pos:start="99:14" pos:end="99:21">IPC_RMID</name></expr>:</case>

	<case pos:start="101:9" pos:end="101:20">case <expr pos:start="101:14" pos:end="101:19"><name pos:start="101:14" pos:end="101:19">GETPID</name></expr>:</case>

	<case pos:start="103:9" pos:end="103:21">case <expr pos:start="103:14" pos:end="103:20"><name pos:start="103:14" pos:end="103:20">GETNCNT</name></expr>:</case>

	<case pos:start="105:9" pos:end="105:21">case <expr pos:start="105:14" pos:end="105:20"><name pos:start="105:14" pos:end="105:20">GETZCNT</name></expr>:</case>

            <expr_stmt pos:start="107:13" pos:end="107:62"><expr pos:start="107:13" pos:end="107:61"><name pos:start="107:13" pos:end="107:15">ret</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <call pos:start="107:19" pos:end="107:61"><name pos:start="107:19" pos:end="107:27">get_errno</name><argument_list pos:start="107:28" pos:end="107:61">(<argument pos:start="107:29" pos:end="107:60"><expr pos:start="107:29" pos:end="107:60"><call pos:start="107:29" pos:end="107:60"><name pos:start="107:29" pos:end="107:34">semctl</name><argument_list pos:start="107:35" pos:end="107:60">(<argument pos:start="107:36" pos:end="107:40"><expr pos:start="107:36" pos:end="107:40"><name pos:start="107:36" pos:end="107:40">semid</name></expr></argument>, <argument pos:start="107:43" pos:end="107:48"><expr pos:start="107:43" pos:end="107:48"><name pos:start="107:43" pos:end="107:48">semnum</name></expr></argument>, <argument pos:start="107:51" pos:end="107:53"><expr pos:start="107:51" pos:end="107:53"><name pos:start="107:51" pos:end="107:53">cmd</name></expr></argument>, <argument pos:start="107:56" pos:end="107:59"><expr pos:start="107:56" pos:end="107:59"><name pos:start="107:56" pos:end="107:59">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

    </block_content>}</block></switch>



    <return pos:start="115:5" pos:end="115:15">return <expr pos:start="115:12" pos:end="115:14"><name pos:start="115:12" pos:end="115:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
