<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5147.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">hls_delete_old_segments</name><parameter_list pos:start="1:35" pos:end="1:51">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:45">HLSContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">hls</name></decl></parameter>)</parameter_list> <block pos:start="1:53" pos:end="177:1">{<block_content pos:start="5:5" pos:end="175:15">



    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">HLSSegment</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:23">segment</name></decl>, <decl pos:start="5:26" pos:end="5:49"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:42">previous_segment</name> <init pos:start="5:44" pos:end="5:49">= <expr pos:start="5:46" pos:end="5:49"><name pos:start="5:46" pos:end="5:49">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">float</name></type> <name pos:start="7:11" pos:end="7:27">playlist_duration</name> <init pos:start="7:29" pos:end="7:34">= <expr pos:start="7:31" pos:end="7:34"><literal type="number" pos:start="7:31" pos:end="7:34">0.0f</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>, <decl pos:start="9:18" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:26">path_size</name></decl>, <decl pos:start="9:29" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:41">sub_path_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:17">dirname</name> <init pos:start="11:19" pos:end="11:24">= <expr pos:start="11:21" pos:end="11:24"><name pos:start="11:21" pos:end="11:24">NULL</name></expr></init></decl>, <decl pos:start="11:27" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:28">p</name></decl>, <decl pos:start="11:31" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:31" pos:end="11:31">*</modifier></type><name pos:start="11:32" pos:end="11:39">sub_path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:14">path</name> <init pos:start="13:16" pos:end="13:21">= <expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:11">segment</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:27"><name pos:start="17:15" pos:end="17:17">hls</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:27">segments</name></name></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="25:5">while <condition pos:start="19:11" pos:end="19:19">(<expr pos:start="19:12" pos:end="19:18"><name pos:start="19:12" pos:end="19:18">segment</name></expr>)</condition> <block pos:start="19:21" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:32">

        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:25">playlist_duration</name> <operator pos:start="21:27" pos:end="21:28">+=</operator> <name pos:start="21:30" pos:end="21:46"><name pos:start="21:30" pos:end="21:36">segment</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:46">duration</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:15">segment</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:31"><name pos:start="23:19" pos:end="23:25">segment</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:31">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:11">segment</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:31"><name pos:start="29:15" pos:end="29:17">hls</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:31">old_segments</name></name></expr>;</expr_stmt>

    <while pos:start="31:5" pos:end="47:5">while <condition pos:start="31:11" pos:end="31:19">(<expr pos:start="31:12" pos:end="31:18"><name pos:start="31:12" pos:end="31:18">segment</name></expr>)</condition> <block pos:start="31:21" pos:end="47:5">{<block_content pos:start="33:9" pos:end="45:9">

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:25">playlist_duration</name> <operator pos:start="33:27" pos:end="33:28">-=</operator> <name pos:start="33:30" pos:end="33:46"><name pos:start="33:30" pos:end="33:36">segment</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:46">duration</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:24">previous_segment</name> <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:34">segment</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:41"><expr pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:15">segment</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:40"><name pos:start="37:19" pos:end="37:34">previous_segment</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:40">next</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:61">(<expr pos:start="39:13" pos:end="39:60"><name pos:start="39:13" pos:end="39:29">playlist_duration</name> <operator pos:start="39:31" pos:end="39:32">&lt;=</operator> <operator pos:start="39:34" pos:end="39:34">-</operator><name pos:start="39:35" pos:end="39:60"><name pos:start="39:35" pos:end="39:50">previous_segment</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:60">duration</name></name></expr>)</condition> <block pos:start="39:63" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:18">

            <expr_stmt pos:start="41:13" pos:end="41:42"><expr pos:start="41:13" pos:end="41:41"><name pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:28">previous_segment</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:34">next</name></name> <operator pos:start="41:36" pos:end="41:36">=</operator> <name pos:start="41:38" pos:end="41:41">NULL</name></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="51:5" pos:end="75:5"><if pos:start="51:5" pos:end="75:5">if <condition pos:start="51:8" pos:end="51:45">(<expr pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:15">segment</name> <operator pos:start="51:17" pos:end="51:18">&amp;&amp;</operator> <operator pos:start="51:20" pos:end="51:20">!</operator><name pos:start="51:21" pos:end="51:44"><name pos:start="51:21" pos:end="51:23">hls</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:44">use_localtime_mkdir</name></name></expr>)</condition> <block pos:start="51:47" pos:end="75:5">{<block_content pos:start="53:9" pos:end="73:18">

        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:34">(<expr pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:15">hls</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:33">segment_filename</name></name></expr>)</condition> <block pos:start="53:36" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:55">

            <expr_stmt pos:start="55:13" pos:end="55:55"><expr pos:start="55:13" pos:end="55:54"><name pos:start="55:13" pos:end="55:19">dirname</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <call pos:start="55:23" pos:end="55:54"><name pos:start="55:23" pos:end="55:31">av_strdup</name><argument_list pos:start="55:32" pos:end="55:54">(<argument pos:start="55:33" pos:end="55:53"><expr pos:start="55:33" pos:end="55:53"><name pos:start="55:33" pos:end="55:53"><name pos:start="55:33" pos:end="55:35">hls</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:53">segment_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="61:9">else <block pos:start="57:16" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:52">

            <expr_stmt pos:start="59:13" pos:end="59:52"><expr pos:start="59:13" pos:end="59:51"><name pos:start="59:13" pos:end="59:19">dirname</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <call pos:start="59:23" pos:end="59:51"><name pos:start="59:23" pos:end="59:31">av_strdup</name><argument_list pos:start="59:32" pos:end="59:51">(<argument pos:start="59:33" pos:end="59:50"><expr pos:start="59:33" pos:end="59:50"><name pos:start="59:33" pos:end="59:50"><name pos:start="59:33" pos:end="59:35">hls</name><operator pos:start="59:36" pos:end="59:37">-&gt;</operator><name pos:start="59:38" pos:end="59:40">avf</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:50">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:21">(<expr pos:start="63:13" pos:end="63:20"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:20">dirname</name></expr>)</condition> <block pos:start="63:23" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:22">

            <expr_stmt pos:start="65:13" pos:end="65:34"><expr pos:start="65:13" pos:end="65:33"><name pos:start="65:13" pos:end="65:15">ret</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:33"><name pos:start="65:19" pos:end="65:25">AVERROR</name><argument_list pos:start="65:26" pos:end="65:33">(<argument pos:start="65:27" pos:end="65:32"><expr pos:start="65:27" pos:end="65:32"><name pos:start="65:27" pos:end="65:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="67:13" pos:end="67:22">goto <name pos:start="67:18" pos:end="67:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:41"><expr pos:start="71:9" pos:end="71:40"><name pos:start="71:9" pos:end="71:9">p</name> <operator pos:start="71:11" pos:end="71:11">=</operator> <operator pos:start="71:13" pos:end="71:13">(</operator><name pos:start="71:14" pos:end="71:17">char</name> <operator pos:start="71:19" pos:end="71:19">*</operator><operator pos:start="71:20" pos:end="71:20">)</operator><call pos:start="71:21" pos:end="71:40"><name pos:start="71:21" pos:end="71:31">av_basename</name><argument_list pos:start="71:32" pos:end="71:40">(<argument pos:start="71:33" pos:end="71:39"><expr pos:start="71:33" pos:end="71:39"><name pos:start="71:33" pos:end="71:39">dirname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:18"><expr pos:start="73:9" pos:end="73:17"><operator pos:start="73:9" pos:end="73:9">*</operator><name pos:start="73:10" pos:end="73:10">p</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="char" pos:start="73:14" pos:end="73:17">'\0'</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="79:5" pos:end="163:5">while <condition pos:start="79:11" pos:end="79:19">(<expr pos:start="79:12" pos:end="79:18"><name pos:start="79:12" pos:end="79:18">segment</name></expr>)</condition> <block pos:start="79:21" pos:end="163:5">{<block_content pos:start="81:9" pos:end="161:34">

        <expr_stmt pos:start="81:9" pos:end="83:53"><expr pos:start="81:9" pos:end="83:52"><call pos:start="81:9" pos:end="83:52"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="83:52">(<argument pos:start="81:16" pos:end="81:18"><expr pos:start="81:16" pos:end="81:18"><name pos:start="81:16" pos:end="81:18">hls</name></expr></argument>, <argument pos:start="81:21" pos:end="81:32"><expr pos:start="81:21" pos:end="81:32"><name pos:start="81:21" pos:end="81:32">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="81:35" pos:end="81:61"><expr pos:start="81:35" pos:end="81:61"><literal type="string" pos:start="81:35" pos:end="81:61">"deleting old segment %s\n"</literal></expr></argument>,

                                  <argument pos:start="83:35" pos:end="83:51"><expr pos:start="83:35" pos:end="83:51"><name pos:start="83:35" pos:end="83:51"><name pos:start="83:35" pos:end="83:41">segment</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:51">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:102"><expr pos:start="85:9" pos:end="85:101"><name pos:start="85:9" pos:end="85:17">path_size</name> <operator pos:start="85:19" pos:end="85:19">=</operator>  <operator pos:start="85:22" pos:end="85:22">(</operator><ternary pos:start="85:23" pos:end="85:68"><condition pos:start="85:23" pos:end="85:48"><expr pos:start="85:23" pos:end="85:46"><name pos:start="85:23" pos:end="85:46"><name pos:start="85:23" pos:end="85:25">hls</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:46">use_localtime_mkdir</name></name></expr> ?</condition><then pos:start="85:50" pos:end="85:50"> <expr pos:start="85:50" pos:end="85:50"><literal type="number" pos:start="85:50" pos:end="85:50">0</literal></expr> </then><else pos:start="85:52" pos:end="85:68">: <expr pos:start="85:54" pos:end="85:68"><call pos:start="85:54" pos:end="85:68"><name pos:start="85:54" pos:end="85:59">strlen</name><argument_list pos:start="85:60" pos:end="85:68">(<argument pos:start="85:61" pos:end="85:67"><expr pos:start="85:61" pos:end="85:67"><name pos:start="85:61" pos:end="85:67">dirname</name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="85:69" pos:end="85:69">)</operator> <operator pos:start="85:71" pos:end="85:71">+</operator> <call pos:start="85:73" pos:end="85:97"><name pos:start="85:73" pos:end="85:78">strlen</name><argument_list pos:start="85:79" pos:end="85:97">(<argument pos:start="85:80" pos:end="85:96"><expr pos:start="85:80" pos:end="85:96"><name pos:start="85:80" pos:end="85:96"><name pos:start="85:80" pos:end="85:86">segment</name><operator pos:start="85:87" pos:end="85:88">-&gt;</operator><name pos:start="85:89" pos:end="85:96">filename</name></name></expr></argument>)</argument_list></call> <operator pos:start="85:99" pos:end="85:99">+</operator> <literal type="number" pos:start="85:101" pos:end="85:101">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:36"><expr pos:start="87:9" pos:end="87:35"><name pos:start="87:9" pos:end="87:12">path</name> <operator pos:start="87:14" pos:end="87:14">=</operator> <call pos:start="87:16" pos:end="87:35"><name pos:start="87:16" pos:end="87:24">av_malloc</name><argument_list pos:start="87:25" pos:end="87:35">(<argument pos:start="87:26" pos:end="87:34"><expr pos:start="87:26" pos:end="87:34"><name pos:start="87:26" pos:end="87:34">path_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:18">(<expr pos:start="89:13" pos:end="89:17"><operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:17">path</name></expr>)</condition> <block pos:start="89:20" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:22">

            <expr_stmt pos:start="91:13" pos:end="91:34"><expr pos:start="91:13" pos:end="91:33"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:33"><name pos:start="91:19" pos:end="91:25">AVERROR</name><argument_list pos:start="91:26" pos:end="91:33">(<argument pos:start="91:27" pos:end="91:32"><expr pos:start="91:27" pos:end="91:32"><name pos:start="91:27" pos:end="91:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="93:13" pos:end="93:22">goto <name pos:start="93:18" pos:end="93:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="99:9" pos:end="109:9"><if pos:start="99:9" pos:end="101:59">if <condition pos:start="99:12" pos:end="99:37">(<expr pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:15">hls</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:36">use_localtime_mkdir</name></name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:59"><block_content pos:start="101:13" pos:end="101:59">

            <expr_stmt pos:start="101:13" pos:end="101:59"><expr pos:start="101:13" pos:end="101:58"><call pos:start="101:13" pos:end="101:58"><name pos:start="101:13" pos:end="101:22">av_strlcpy</name><argument_list pos:start="101:23" pos:end="101:58">(<argument pos:start="101:24" pos:end="101:27"><expr pos:start="101:24" pos:end="101:27"><name pos:start="101:24" pos:end="101:27">path</name></expr></argument>, <argument pos:start="101:30" pos:end="101:46"><expr pos:start="101:30" pos:end="101:46"><name pos:start="101:30" pos:end="101:46"><name pos:start="101:30" pos:end="101:36">segment</name><operator pos:start="101:37" pos:end="101:38">-&gt;</operator><name pos:start="101:39" pos:end="101:46">filename</name></name></expr></argument>, <argument pos:start="101:49" pos:end="101:57"><expr pos:start="101:49" pos:end="101:57"><name pos:start="101:49" pos:end="101:57">path_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="103:9" pos:end="109:9">else <block pos:start="103:14" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:59"> <comment type="line" pos:start="103:16" pos:end="103:58">// segment-&gt;filename contains basename only</comment>

            <expr_stmt pos:start="105:13" pos:end="105:49"><expr pos:start="105:13" pos:end="105:48"><call pos:start="105:13" pos:end="105:48"><name pos:start="105:13" pos:end="105:22">av_strlcpy</name><argument_list pos:start="105:23" pos:end="105:48">(<argument pos:start="105:24" pos:end="105:27"><expr pos:start="105:24" pos:end="105:27"><name pos:start="105:24" pos:end="105:27">path</name></expr></argument>, <argument pos:start="105:30" pos:end="105:36"><expr pos:start="105:30" pos:end="105:36"><name pos:start="105:30" pos:end="105:36">dirname</name></expr></argument>, <argument pos:start="105:39" pos:end="105:47"><expr pos:start="105:39" pos:end="105:47"><name pos:start="105:39" pos:end="105:47">path_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:59"><expr pos:start="107:13" pos:end="107:58"><call pos:start="107:13" pos:end="107:58"><name pos:start="107:13" pos:end="107:22">av_strlcat</name><argument_list pos:start="107:23" pos:end="107:58">(<argument pos:start="107:24" pos:end="107:27"><expr pos:start="107:24" pos:end="107:27"><name pos:start="107:24" pos:end="107:27">path</name></expr></argument>, <argument pos:start="107:30" pos:end="107:46"><expr pos:start="107:30" pos:end="107:46"><name pos:start="107:30" pos:end="107:46"><name pos:start="107:30" pos:end="107:36">segment</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:46">filename</name></name></expr></argument>, <argument pos:start="107:49" pos:end="107:57"><expr pos:start="107:49" pos:end="107:57"><name pos:start="107:49" pos:end="107:57">path_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="113:9" pos:end="119:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:29">(<expr pos:start="113:13" pos:end="113:28"><call pos:start="113:13" pos:end="113:24"><name pos:start="113:13" pos:end="113:18">unlink</name><argument_list pos:start="113:19" pos:end="113:24">(<argument pos:start="113:20" pos:end="113:23"><expr pos:start="113:20" pos:end="113:23"><name pos:start="113:20" pos:end="113:23">path</name></expr></argument>)</argument_list></call> <operator pos:start="113:26" pos:end="113:26">&lt;</operator> <literal type="number" pos:start="113:28" pos:end="113:28">0</literal></expr>)</condition> <block pos:start="113:31" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:60">

            <expr_stmt pos:start="115:13" pos:end="117:60"><expr pos:start="115:13" pos:end="117:59"><call pos:start="115:13" pos:end="117:59"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="117:59">(<argument pos:start="115:20" pos:end="115:22"><expr pos:start="115:20" pos:end="115:22"><name pos:start="115:20" pos:end="115:22">hls</name></expr></argument>, <argument pos:start="115:25" pos:end="115:36"><expr pos:start="115:25" pos:end="115:36"><name pos:start="115:25" pos:end="115:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="115:39" pos:end="115:77"><expr pos:start="115:39" pos:end="115:77"><literal type="string" pos:start="115:39" pos:end="115:77">"failed to delete old segment %s: %s\n"</literal></expr></argument>,

                                     <argument pos:start="117:38" pos:end="117:41"><expr pos:start="117:38" pos:end="117:41"><name pos:start="117:38" pos:end="117:41">path</name></expr></argument>, <argument pos:start="117:44" pos:end="117:58"><expr pos:start="117:44" pos:end="117:58"><call pos:start="117:44" pos:end="117:58"><name pos:start="117:44" pos:end="117:51">strerror</name><argument_list pos:start="117:52" pos:end="117:58">(<argument pos:start="117:53" pos:end="117:57"><expr pos:start="117:53" pos:end="117:57"><name pos:start="117:53" pos:end="117:57">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="123:9" pos:end="153:9"><if pos:start="123:9" pos:end="153:9">if <condition pos:start="123:12" pos:end="123:45">(<expr pos:start="123:13" pos:end="123:44"><name pos:start="123:13" pos:end="123:36"><name pos:start="123:13" pos:end="123:19">segment</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:33">sub_filename</name><index pos:start="123:34" pos:end="123:36">[<expr pos:start="123:35" pos:end="123:35"><literal type="number" pos:start="123:35" pos:end="123:35">0</literal></expr>]</index></name> <operator pos:start="123:38" pos:end="123:39">!=</operator> <literal type="char" pos:start="123:41" pos:end="123:44">'\0'</literal></expr>)</condition> <block pos:start="123:47" pos:end="153:9">{<block_content pos:start="125:13" pos:end="151:30">

            <expr_stmt pos:start="125:13" pos:end="125:80"><expr pos:start="125:13" pos:end="125:79"><name pos:start="125:13" pos:end="125:25">sub_path_size</name> <operator pos:start="125:27" pos:end="125:27">=</operator> <call pos:start="125:29" pos:end="125:43"><name pos:start="125:29" pos:end="125:34">strlen</name><argument_list pos:start="125:35" pos:end="125:43">(<argument pos:start="125:36" pos:end="125:42"><expr pos:start="125:36" pos:end="125:42"><name pos:start="125:36" pos:end="125:42">dirname</name></expr></argument>)</argument_list></call> <operator pos:start="125:45" pos:end="125:45">+</operator> <call pos:start="125:47" pos:end="125:75"><name pos:start="125:47" pos:end="125:52">strlen</name><argument_list pos:start="125:53" pos:end="125:75">(<argument pos:start="125:54" pos:end="125:74"><expr pos:start="125:54" pos:end="125:74"><name pos:start="125:54" pos:end="125:74"><name pos:start="125:54" pos:end="125:60">segment</name><operator pos:start="125:61" pos:end="125:62">-&gt;</operator><name pos:start="125:63" pos:end="125:74">sub_filename</name></name></expr></argument>)</argument_list></call> <operator pos:start="125:77" pos:end="125:77">+</operator> <literal type="number" pos:start="125:79" pos:end="125:79">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:48"><expr pos:start="127:13" pos:end="127:47"><name pos:start="127:13" pos:end="127:20">sub_path</name> <operator pos:start="127:22" pos:end="127:22">=</operator> <call pos:start="127:24" pos:end="127:47"><name pos:start="127:24" pos:end="127:32">av_malloc</name><argument_list pos:start="127:33" pos:end="127:47">(<argument pos:start="127:34" pos:end="127:46"><expr pos:start="127:34" pos:end="127:46"><name pos:start="127:34" pos:end="127:46">sub_path_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="135:13"><if pos:start="129:13" pos:end="135:13">if <condition pos:start="129:16" pos:end="129:26">(<expr pos:start="129:17" pos:end="129:25"><operator pos:start="129:17" pos:end="129:17">!</operator><name pos:start="129:18" pos:end="129:25">sub_path</name></expr>)</condition> <block pos:start="129:28" pos:end="135:13">{<block_content pos:start="131:17" pos:end="133:26">

                <expr_stmt pos:start="131:17" pos:end="131:38"><expr pos:start="131:17" pos:end="131:37"><name pos:start="131:17" pos:end="131:19">ret</name> <operator pos:start="131:21" pos:end="131:21">=</operator> <call pos:start="131:23" pos:end="131:37"><name pos:start="131:23" pos:end="131:29">AVERROR</name><argument_list pos:start="131:30" pos:end="131:37">(<argument pos:start="131:31" pos:end="131:36"><expr pos:start="131:31" pos:end="131:36"><name pos:start="131:31" pos:end="131:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="133:17" pos:end="133:26">goto <name pos:start="133:22" pos:end="133:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="139:13" pos:end="139:57"><expr pos:start="139:13" pos:end="139:56"><call pos:start="139:13" pos:end="139:56"><name pos:start="139:13" pos:end="139:22">av_strlcpy</name><argument_list pos:start="139:23" pos:end="139:56">(<argument pos:start="139:24" pos:end="139:31"><expr pos:start="139:24" pos:end="139:31"><name pos:start="139:24" pos:end="139:31">sub_path</name></expr></argument>, <argument pos:start="139:34" pos:end="139:40"><expr pos:start="139:34" pos:end="139:40"><name pos:start="139:34" pos:end="139:40">dirname</name></expr></argument>, <argument pos:start="139:43" pos:end="139:55"><expr pos:start="139:43" pos:end="139:55"><name pos:start="139:43" pos:end="139:55">sub_path_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:71"><expr pos:start="141:13" pos:end="141:70"><call pos:start="141:13" pos:end="141:70"><name pos:start="141:13" pos:end="141:22">av_strlcat</name><argument_list pos:start="141:23" pos:end="141:70">(<argument pos:start="141:24" pos:end="141:31"><expr pos:start="141:24" pos:end="141:31"><name pos:start="141:24" pos:end="141:31">sub_path</name></expr></argument>, <argument pos:start="141:34" pos:end="141:54"><expr pos:start="141:34" pos:end="141:54"><name pos:start="141:34" pos:end="141:54"><name pos:start="141:34" pos:end="141:40">segment</name><operator pos:start="141:41" pos:end="141:42">-&gt;</operator><name pos:start="141:43" pos:end="141:54">sub_filename</name></name></expr></argument>, <argument pos:start="141:57" pos:end="141:69"><expr pos:start="141:57" pos:end="141:69"><name pos:start="141:57" pos:end="141:69">sub_path_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="149:13"><if pos:start="143:13" pos:end="149:13">if <condition pos:start="143:16" pos:end="143:37">(<expr pos:start="143:17" pos:end="143:36"><call pos:start="143:17" pos:end="143:32"><name pos:start="143:17" pos:end="143:22">unlink</name><argument_list pos:start="143:23" pos:end="143:32">(<argument pos:start="143:24" pos:end="143:31"><expr pos:start="143:24" pos:end="143:31"><name pos:start="143:24" pos:end="143:31">sub_path</name></expr></argument>)</argument_list></call> <operator pos:start="143:34" pos:end="143:34">&lt;</operator> <literal type="number" pos:start="143:36" pos:end="143:36">0</literal></expr>)</condition> <block pos:start="143:39" pos:end="149:13">{<block_content pos:start="145:17" pos:end="147:68">

                <expr_stmt pos:start="145:17" pos:end="147:68"><expr pos:start="145:17" pos:end="147:67"><call pos:start="145:17" pos:end="147:67"><name pos:start="145:17" pos:end="145:22">av_log</name><argument_list pos:start="145:23" pos:end="147:67">(<argument pos:start="145:24" pos:end="145:26"><expr pos:start="145:24" pos:end="145:26"><name pos:start="145:24" pos:end="145:26">hls</name></expr></argument>, <argument pos:start="145:29" pos:end="145:40"><expr pos:start="145:29" pos:end="145:40"><name pos:start="145:29" pos:end="145:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="145:43" pos:end="145:81"><expr pos:start="145:43" pos:end="145:81"><literal type="string" pos:start="145:43" pos:end="145:81">"failed to delete old segment %s: %s\n"</literal></expr></argument>,

                                         <argument pos:start="147:42" pos:end="147:49"><expr pos:start="147:42" pos:end="147:49"><name pos:start="147:42" pos:end="147:49">sub_path</name></expr></argument>, <argument pos:start="147:52" pos:end="147:66"><expr pos:start="147:52" pos:end="147:66"><call pos:start="147:52" pos:end="147:66"><name pos:start="147:52" pos:end="147:59">strerror</name><argument_list pos:start="147:60" pos:end="147:66">(<argument pos:start="147:61" pos:end="147:65"><expr pos:start="147:61" pos:end="147:65"><name pos:start="147:61" pos:end="147:65">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:30"><expr pos:start="151:13" pos:end="151:29"><call pos:start="151:13" pos:end="151:29"><name pos:start="151:13" pos:end="151:19">av_free</name><argument_list pos:start="151:20" pos:end="151:29">(<argument pos:start="151:21" pos:end="151:28"><expr pos:start="151:21" pos:end="151:28"><name pos:start="151:21" pos:end="151:28">sub_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:24"><expr pos:start="155:9" pos:end="155:23"><call pos:start="155:9" pos:end="155:23"><name pos:start="155:9" pos:end="155:16">av_freep</name><argument_list pos:start="155:17" pos:end="155:23">(<argument pos:start="155:18" pos:end="155:22"><expr pos:start="155:18" pos:end="155:22"><operator pos:start="155:18" pos:end="155:18">&amp;</operator><name pos:start="155:19" pos:end="155:22">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:35"><expr pos:start="157:9" pos:end="157:34"><name pos:start="157:9" pos:end="157:24">previous_segment</name> <operator pos:start="157:26" pos:end="157:26">=</operator> <name pos:start="157:28" pos:end="157:34">segment</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:41"><expr pos:start="159:9" pos:end="159:40"><name pos:start="159:9" pos:end="159:15">segment</name> <operator pos:start="159:17" pos:end="159:17">=</operator> <name pos:start="159:19" pos:end="159:40"><name pos:start="159:19" pos:end="159:34">previous_segment</name><operator pos:start="159:35" pos:end="159:36">-&gt;</operator><name pos:start="159:37" pos:end="159:40">next</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:34"><expr pos:start="161:9" pos:end="161:33"><call pos:start="161:9" pos:end="161:33"><name pos:start="161:9" pos:end="161:15">av_free</name><argument_list pos:start="161:16" pos:end="161:33">(<argument pos:start="161:17" pos:end="161:32"><expr pos:start="161:17" pos:end="161:32"><name pos:start="161:17" pos:end="161:32">previous_segment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



<label pos:start="167:1" pos:end="167:5"><name pos:start="167:1" pos:end="167:4">fail</name>:</label>

    <expr_stmt pos:start="169:5" pos:end="169:18"><expr pos:start="169:5" pos:end="169:17"><call pos:start="169:5" pos:end="169:17"><name pos:start="169:5" pos:end="169:11">av_free</name><argument_list pos:start="169:12" pos:end="169:17">(<argument pos:start="169:13" pos:end="169:16"><expr pos:start="169:13" pos:end="169:16"><name pos:start="169:13" pos:end="169:16">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:21"><expr pos:start="171:5" pos:end="171:20"><call pos:start="171:5" pos:end="171:20"><name pos:start="171:5" pos:end="171:11">av_free</name><argument_list pos:start="171:12" pos:end="171:20">(<argument pos:start="171:13" pos:end="171:19"><expr pos:start="171:13" pos:end="171:19"><name pos:start="171:13" pos:end="171:19">dirname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="175:5" pos:end="175:15">return <expr pos:start="175:12" pos:end="175:14"><name pos:start="175:12" pos:end="175:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
