<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1637.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">ccw_init</name><parameter_list pos:start="1:21" pos:end="1:43">(<parameter pos:start="1:22" pos:end="1:42"><decl pos:start="1:22" pos:end="1:42"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">MachineState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:42">machine</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:69">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">VirtualCssBus</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:26">css_bus</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><call pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">s390_sclp_init</name><argument_list pos:start="11:19" pos:end="11:20">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><call pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:20">s390_memory_init</name><argument_list pos:start="13:21" pos:end="13:39">(<argument pos:start="13:22" pos:end="13:38"><expr pos:start="13:22" pos:end="13:38"><name pos:start="13:22" pos:end="13:38"><name pos:start="13:22" pos:end="13:28">machine</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:38">ram_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:71">/* init CPUs (incl. CPU model) early so s390_has_feature() works */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:18">s390_init_cpus</name><argument_list pos:start="19:19" pos:end="19:27">(<argument pos:start="19:20" pos:end="19:26"><expr pos:start="19:20" pos:end="19:26"><name pos:start="19:20" pos:end="19:26">machine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><call pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:18">s390_flic_init</name><argument_list pos:start="23:19" pos:end="23:20">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:19">/* get a BUS */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:37"><expr pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:11">css_bus</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:36"><name pos:start="29:15" pos:end="29:34">virtual_css_bus_init</name><argument_list pos:start="29:35" pos:end="29:36">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="35:48"><expr pos:start="31:5" pos:end="35:47"><call pos:start="31:5" pos:end="35:47"><name pos:start="31:5" pos:end="31:21">s390_init_ipl_dev</name><argument_list pos:start="31:22" pos:end="35:47">(<argument pos:start="31:23" pos:end="31:46"><expr pos:start="31:23" pos:end="31:46"><name pos:start="31:23" pos:end="31:46"><name pos:start="31:23" pos:end="31:29">machine</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:46">kernel_filename</name></name></expr></argument>, <argument pos:start="31:49" pos:end="31:71"><expr pos:start="31:49" pos:end="31:71"><name pos:start="31:49" pos:end="31:71"><name pos:start="31:49" pos:end="31:55">machine</name><operator pos:start="31:56" pos:end="31:57">-&gt;</operator><name pos:start="31:58" pos:end="31:71">kernel_cmdline</name></name></expr></argument>,

                      <argument pos:start="33:23" pos:end="33:46"><expr pos:start="33:23" pos:end="33:46"><name pos:start="33:23" pos:end="33:46"><name pos:start="33:23" pos:end="33:29">machine</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:46">initrd_filename</name></name></expr></argument>, <argument pos:start="33:49" pos:end="33:62"><expr pos:start="33:49" pos:end="33:62"><literal type="string" pos:start="33:49" pos:end="33:62">"s390-ccw.img"</literal></expr></argument>,

                      <argument pos:start="35:23" pos:end="35:40"><expr pos:start="35:23" pos:end="35:40"><literal type="string" pos:start="35:23" pos:end="35:40">"s390-netboot.img"</literal></expr></argument>, <argument pos:start="35:43" pos:end="35:46"><expr pos:start="35:43" pos:end="35:46"><name pos:start="35:43" pos:end="35:46">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="51:5"><if pos:start="39:5" pos:end="51:5">if <condition pos:start="39:8" pos:end="39:38">(<expr pos:start="39:9" pos:end="39:37"><call pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:21">s390_has_feat</name><argument_list pos:start="39:22" pos:end="39:37">(<argument pos:start="39:23" pos:end="39:36"><expr pos:start="39:23" pos:end="39:36"><name pos:start="39:23" pos:end="39:36">S390_FEAT_ZPCI</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:40" pos:end="51:5">{<block_content pos:start="41:9" pos:end="49:30">

        <decl_stmt pos:start="41:9" pos:end="41:72"><decl pos:start="41:9" pos:end="41:71"><type pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:19">DeviceState</name> <modifier pos:start="41:21" pos:end="41:21">*</modifier></type><name pos:start="41:22" pos:end="41:24">dev</name> <init pos:start="41:26" pos:end="41:71">= <expr pos:start="41:28" pos:end="41:71"><call pos:start="41:28" pos:end="41:71"><name pos:start="41:28" pos:end="41:38">qdev_create</name><argument_list pos:start="41:39" pos:end="41:71">(<argument pos:start="41:40" pos:end="41:43"><expr pos:start="41:40" pos:end="41:43"><name pos:start="41:40" pos:end="41:43">NULL</name></expr></argument>, <argument pos:start="41:46" pos:end="41:70"><expr pos:start="41:46" pos:end="41:70"><name pos:start="41:46" pos:end="41:70">TYPE_S390_PCI_HOST_BRIDGE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="43:9" pos:end="47:53"><expr pos:start="43:9" pos:end="47:52"><call pos:start="43:9" pos:end="47:52"><name pos:start="43:9" pos:end="43:33">object_property_add_child</name><argument_list pos:start="43:34" pos:end="47:52">(<argument pos:start="43:35" pos:end="43:52"><expr pos:start="43:35" pos:end="43:52"><call pos:start="43:35" pos:end="43:52"><name pos:start="43:35" pos:end="43:50">qdev_get_machine</name><argument_list pos:start="43:51" pos:end="43:52">()</argument_list></call></expr></argument>,

                                  <argument pos:start="45:35" pos:end="45:59"><expr pos:start="45:35" pos:end="45:59"><name pos:start="45:35" pos:end="45:59">TYPE_S390_PCI_HOST_BRIDGE</name></expr></argument>,

                                  <argument pos:start="47:35" pos:end="47:45"><expr pos:start="47:35" pos:end="47:45"><call pos:start="47:35" pos:end="47:45"><name pos:start="47:35" pos:end="47:40">OBJECT</name><argument_list pos:start="47:41" pos:end="47:45">(<argument pos:start="47:42" pos:end="47:44"><expr pos:start="47:42" pos:end="47:44"><name pos:start="47:42" pos:end="47:44">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:48" pos:end="47:51"><expr pos:start="47:48" pos:end="47:51"><name pos:start="47:48" pos:end="47:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:30"><expr pos:start="49:9" pos:end="49:29"><call pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:24">qdev_init_nofail</name><argument_list pos:start="49:25" pos:end="49:29">(<argument pos:start="49:26" pos:end="49:28"><expr pos:start="49:26" pos:end="49:28"><name pos:start="49:26" pos:end="49:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:29">/* register hypercalls */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:33"><expr pos:start="57:5" pos:end="57:32"><call pos:start="57:5" pos:end="57:32"><name pos:start="57:5" pos:end="57:30">virtio_ccw_register_hcalls</name><argument_list pos:start="57:31" pos:end="57:32">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:52"><expr pos:start="61:5" pos:end="61:51"><call pos:start="61:5" pos:end="61:51"><name pos:start="61:5" pos:end="61:27">s390_enable_css_support</name><argument_list pos:start="61:28" pos:end="61:51">(<argument pos:start="61:29" pos:end="61:50"><expr pos:start="61:29" pos:end="61:50"><call pos:start="61:29" pos:end="61:50"><name pos:start="61:29" pos:end="61:47">s390_cpu_addr2state</name><argument_list pos:start="61:48" pos:end="61:50">(<argument pos:start="61:49" pos:end="61:49"><expr pos:start="61:49" pos:end="61:49"><literal type="number" pos:start="61:49" pos:end="61:49">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="63:5" pos:end="71:7">/*

     * Non mcss-e enabled guests only see the devices from the default

     * css, which is determined by the value of the squash_mcss property.

     * Note: we must not squash non virtual devices to css 0xFE.

     */</comment>

    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:29">(<expr pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:15">css_bus</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:28">squash_mcss</name></name></expr>)</condition> <block pos:start="73:31" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:44">

        <expr_stmt pos:start="75:9" pos:end="75:44"><expr pos:start="75:9" pos:end="75:43"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:43"><name pos:start="75:15" pos:end="75:34">css_create_css_image</name><argument_list pos:start="75:35" pos:end="75:43">(<argument pos:start="75:36" pos:end="75:36"><expr pos:start="75:36" pos:end="75:36"><literal type="number" pos:start="75:36" pos:end="75:36">0</literal></expr></argument>, <argument pos:start="75:39" pos:end="75:42"><expr pos:start="75:39" pos:end="75:42"><name pos:start="75:39" pos:end="75:42">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="81:5">else <block pos:start="77:12" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:56">

        <expr_stmt pos:start="79:9" pos:end="79:56"><expr pos:start="79:9" pos:end="79:55"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:55"><name pos:start="79:15" pos:end="79:34">css_create_css_image</name><argument_list pos:start="79:35" pos:end="79:55">(<argument pos:start="79:36" pos:end="79:48"><expr pos:start="79:36" pos:end="79:48"><name pos:start="79:36" pos:end="79:48">VIRTUAL_CSSID</name></expr></argument>, <argument pos:start="79:51" pos:end="79:54"><expr pos:start="79:51" pos:end="79:54"><name pos:start="79:51" pos:end="79:54">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:21"><expr pos:start="83:5" pos:end="83:20"><call pos:start="83:5" pos:end="83:20"><name pos:start="83:5" pos:end="83:10">assert</name><argument_list pos:start="83:11" pos:end="83:20">(<argument pos:start="83:12" pos:end="83:19"><expr pos:start="83:12" pos:end="83:19"><name pos:start="83:12" pos:end="83:14">ret</name> <operator pos:start="83:16" pos:end="83:17">==</operator> <literal type="number" pos:start="83:19" pos:end="83:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:40">/* Create VirtIO network adapters */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:59"><expr pos:start="89:5" pos:end="89:58"><call pos:start="89:5" pos:end="89:58"><name pos:start="89:5" pos:end="89:26">s390_create_virtio_net</name><argument_list pos:start="89:27" pos:end="89:58">(<argument pos:start="89:28" pos:end="89:39"><expr pos:start="89:28" pos:end="89:39"><call pos:start="89:28" pos:end="89:39"><name pos:start="89:28" pos:end="89:30">BUS</name><argument_list pos:start="89:31" pos:end="89:39">(<argument pos:start="89:32" pos:end="89:38"><expr pos:start="89:32" pos:end="89:38"><name pos:start="89:32" pos:end="89:38">css_bus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="89:42" pos:end="89:57"><expr pos:start="89:42" pos:end="89:57"><literal type="string" pos:start="89:42" pos:end="89:57">"virtio-net-ccw"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:53">/* Register savevm handler for guest TOD clock */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:69"><expr pos:start="95:5" pos:end="95:68"><call pos:start="95:5" pos:end="95:68"><name pos:start="95:5" pos:end="95:24">register_savevm_live</name><argument_list pos:start="95:25" pos:end="95:68">(<argument pos:start="95:26" pos:end="95:29"><expr pos:start="95:26" pos:end="95:29"><name pos:start="95:26" pos:end="95:29">NULL</name></expr></argument>, <argument pos:start="95:32" pos:end="95:41"><expr pos:start="95:32" pos:end="95:41"><literal type="string" pos:start="95:32" pos:end="95:41">"todclock"</literal></expr></argument>, <argument pos:start="95:44" pos:end="95:44"><expr pos:start="95:44" pos:end="95:44"><literal type="number" pos:start="95:44" pos:end="95:44">0</literal></expr></argument>, <argument pos:start="95:47" pos:end="95:47"><expr pos:start="95:47" pos:end="95:47"><literal type="number" pos:start="95:47" pos:end="95:47">1</literal></expr></argument>, <argument pos:start="95:50" pos:end="95:61"><expr pos:start="95:50" pos:end="95:61"><operator pos:start="95:50" pos:end="95:50">&amp;</operator><name pos:start="95:51" pos:end="95:61">savevm_gtod</name></expr></argument>, <argument pos:start="95:64" pos:end="95:67"><expr pos:start="95:64" pos:end="95:67"><name pos:start="95:64" pos:end="95:67">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
