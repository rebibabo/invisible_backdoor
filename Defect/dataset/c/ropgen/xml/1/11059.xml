<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11059.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">cabac_init_decoder</name><parameter_list pos:start="1:31" pos:end="1:46">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:42">HEVCContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:55">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:38">= <expr pos:start="5:25" pos:end="5:38"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:38"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">HEVClc</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:38">gb</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:21"><expr pos:start="7:5" pos:end="7:20"><call pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:13">skip_bits</name><argument_list pos:start="7:14" pos:end="7:20">(<argument pos:start="7:15" pos:end="7:16"><expr pos:start="7:15" pos:end="7:16"><name pos:start="7:15" pos:end="7:16">gb</name></expr></argument>, <argument pos:start="7:19" pos:end="7:19"><expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:23"><expr pos:start="9:5" pos:end="9:22"><call pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:18">align_get_bits</name><argument_list pos:start="9:19" pos:end="9:22">(<argument pos:start="9:20" pos:end="9:21"><expr pos:start="9:20" pos:end="9:21"><name pos:start="9:20" pos:end="9:21">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="15:55"><expr pos:start="11:5" pos:end="15:54"><call pos:start="11:5" pos:end="15:54"><name pos:start="11:5" pos:end="11:25">ff_init_cabac_decoder</name><argument_list pos:start="11:26" pos:end="15:54">(<argument pos:start="11:27" pos:end="11:40"><expr pos:start="11:27" pos:end="11:40"><operator pos:start="11:27" pos:end="11:27">&amp;</operator><name pos:start="11:28" pos:end="11:40"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:36">HEVClc</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:40">cc</name></name></expr></argument>,

                          <argument pos:start="13:27" pos:end="13:61"><expr pos:start="13:27" pos:end="13:61"><name pos:start="13:27" pos:end="13:36"><name pos:start="13:27" pos:end="13:28">gb</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:36">buffer</name></name> <operator pos:start="13:38" pos:end="13:38">+</operator> <call pos:start="13:40" pos:end="13:57"><name pos:start="13:40" pos:end="13:53">get_bits_count</name><argument_list pos:start="13:54" pos:end="13:57">(<argument pos:start="13:55" pos:end="13:56"><expr pos:start="13:55" pos:end="13:56"><name pos:start="13:55" pos:end="13:56">gb</name></expr></argument>)</argument_list></call> <operator pos:start="13:59" pos:end="13:59">/</operator> <literal type="number" pos:start="13:61" pos:end="13:61">8</literal></expr></argument>,

                          <argument pos:start="15:27" pos:end="15:53"><expr pos:start="15:27" pos:end="15:53"><operator pos:start="15:27" pos:end="15:27">(</operator><call pos:start="15:28" pos:end="15:44"><name pos:start="15:28" pos:end="15:40">get_bits_left</name><argument_list pos:start="15:41" pos:end="15:44">(<argument pos:start="15:42" pos:end="15:43"><expr pos:start="15:42" pos:end="15:43"><name pos:start="15:42" pos:end="15:43">gb</name></expr></argument>)</argument_list></call> <operator pos:start="15:46" pos:end="15:46">+</operator> <literal type="number" pos:start="15:48" pos:end="15:48">7</literal><operator pos:start="15:49" pos:end="15:49">)</operator> <operator pos:start="15:51" pos:end="15:51">/</operator> <literal type="number" pos:start="15:53" pos:end="15:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
