<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9417.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:13"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">ff_vbv_update</name><parameter_list pos:start="1:18" pos:end="1:52">(<parameter pos:start="1:19" pos:end="1:35"><decl pos:start="1:19" pos:end="1:35"><type pos:start="1:19" pos:end="1:35"><name pos:start="1:19" pos:end="1:32">MpegEncContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:51">frame_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:13">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">RateControlContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:27">rcc</name> <init pos:start="5:29" pos:end="5:44">= <expr pos:start="5:31" pos:end="5:44"><operator pos:start="5:31" pos:end="5:31">&amp;</operator><name pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:32">s</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:44">rc_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:16">double</name></type> <name pos:start="7:18" pos:end="7:20">fps</name>        <init pos:start="7:29" pos:end="7:47">= <expr pos:start="7:31" pos:end="7:47"><call pos:start="7:31" pos:end="7:47"><name pos:start="7:31" pos:end="7:37">get_fps</name><argument_list pos:start="7:38" pos:end="7:47">(<argument pos:start="7:39" pos:end="7:46"><expr pos:start="7:39" pos:end="7:46"><name pos:start="7:39" pos:end="7:46"><name pos:start="7:39" pos:end="7:39">s</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:46">avctx</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:25">buffer_size</name>   <init pos:start="9:29" pos:end="9:54">= <expr pos:start="9:31" pos:end="9:54"><name pos:start="9:31" pos:end="9:54"><name pos:start="9:31" pos:end="9:31">s</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:38">avctx</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:54">rc_buffer_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:58"><decl pos:start="11:5" pos:end="11:57"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:16">double</name></type> <name pos:start="11:18" pos:end="11:25">min_rate</name>   <init pos:start="11:29" pos:end="11:57">= <expr pos:start="11:31" pos:end="11:57"><name pos:start="11:31" pos:end="11:51"><name pos:start="11:31" pos:end="11:31">s</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:38">avctx</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:51">rc_min_rate</name></name> <operator pos:start="11:53" pos:end="11:53">/</operator> <name pos:start="11:55" pos:end="11:57">fps</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:58"><decl pos:start="13:5" pos:end="13:57"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:16">double</name></type> <name pos:start="13:18" pos:end="13:25">max_rate</name>   <init pos:start="13:29" pos:end="13:57">= <expr pos:start="13:31" pos:end="13:57"><name pos:start="13:31" pos:end="13:51"><name pos:start="13:31" pos:end="13:31">s</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:38">avctx</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:51">rc_max_rate</name></name> <operator pos:start="13:53" pos:end="13:53">/</operator> <name pos:start="13:55" pos:end="13:57">fps</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:76"><expr pos:start="17:5" pos:end="19:75"><call pos:start="17:5" pos:end="19:75"><name pos:start="17:5" pos:end="17:11">av_dlog</name><argument_list pos:start="17:12" pos:end="19:75">(<argument pos:start="17:13" pos:end="17:13"><expr pos:start="17:13" pos:end="17:13"><name pos:start="17:13" pos:end="17:13">s</name></expr></argument>, <argument pos:start="17:16" pos:end="17:33"><expr pos:start="17:16" pos:end="17:33"><literal type="string" pos:start="17:16" pos:end="17:33">"%d %f %d %f %f\n"</literal></expr></argument>,

            <argument pos:start="19:13" pos:end="19:23"><expr pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:23">buffer_size</name></expr></argument>, <argument pos:start="19:26" pos:end="19:42"><expr pos:start="19:26" pos:end="19:42"><name pos:start="19:26" pos:end="19:42"><name pos:start="19:26" pos:end="19:28">rcc</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:42">buffer_index</name></name></expr></argument>, <argument pos:start="19:45" pos:end="19:54"><expr pos:start="19:45" pos:end="19:54"><name pos:start="19:45" pos:end="19:54">frame_size</name></expr></argument>, <argument pos:start="19:57" pos:end="19:64"><expr pos:start="19:57" pos:end="19:64"><name pos:start="19:57" pos:end="19:64">min_rate</name></expr></argument>, <argument pos:start="19:67" pos:end="19:74"><expr pos:start="19:67" pos:end="19:74"><name pos:start="19:67" pos:end="19:74">max_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="73:13"><if pos:start="23:5" pos:end="73:13">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:19">buffer_size</name></expr>)</condition> <block pos:start="23:22" pos:end="73:13">{<block_content pos:start="25:9" pos:end="73:13">

        <decl_stmt pos:start="25:9" pos:end="25:17"><decl pos:start="25:9" pos:end="25:16"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:16">left</name></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:11">rcc</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:25">buffer_index</name></name> <operator pos:start="29:27" pos:end="29:28">-=</operator> <name pos:start="29:30" pos:end="29:39">frame_size</name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="73:13"><if pos:start="31:9" pos:end="73:13">if <condition pos:start="31:12" pos:end="31:34">(<expr pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:15">rcc</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:29">buffer_index</name></name> <operator pos:start="31:31" pos:end="31:31">&lt;</operator> <literal type="number" pos:start="31:33" pos:end="31:33">0</literal></expr>)</condition> <block pos:start="31:36" pos:end="73:13">{<block_content pos:start="33:13" pos:end="73:13">

            <expr_stmt pos:start="33:13" pos:end="33:68"><expr pos:start="33:13" pos:end="33:67"><call pos:start="33:13" pos:end="33:67"><name pos:start="33:13" pos:end="33:18">av_log</name><argument_list pos:start="33:19" pos:end="33:67">(<argument pos:start="33:20" pos:end="33:27"><expr pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:20">s</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:27">avctx</name></name></expr></argument>, <argument pos:start="33:30" pos:end="33:41"><expr pos:start="33:30" pos:end="33:41"><name pos:start="33:30" pos:end="33:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:44" pos:end="33:66"><expr pos:start="33:44" pos:end="33:66"><literal type="string" pos:start="33:44" pos:end="33:66">"rc buffer underflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




            <expr_stmt pos:start="38:13" pos:end="38:34"><expr pos:start="38:13" pos:end="38:33"><name pos:start="38:13" pos:end="38:29"><name pos:start="38:13" pos:end="38:15">rcc</name><operator pos:start="38:16" pos:end="38:17">-&gt;</operator><name pos:start="38:18" pos:end="38:29">buffer_index</name></name> <operator pos:start="38:31" pos:end="38:31">=</operator> <literal type="number" pos:start="38:33" pos:end="38:33">0</literal></expr>;</expr_stmt>




        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:12">left</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:26">buffer_size</name> <operator pos:start="43:28" pos:end="43:28">-</operator> <name pos:start="43:30" pos:end="43:46"><name pos:start="43:30" pos:end="43:32">rcc</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:46">buffer_index</name></name> <operator pos:start="43:48" pos:end="43:48">-</operator> <literal type="number" pos:start="43:50" pos:end="43:50">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:63"><expr pos:start="45:9" pos:end="45:62"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:11">rcc</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:25">buffer_index</name></name> <operator pos:start="45:27" pos:end="45:28">+=</operator> <call pos:start="45:30" pos:end="45:62"><name pos:start="45:30" pos:end="45:36">av_clip</name><argument_list pos:start="45:37" pos:end="45:62">(<argument pos:start="45:38" pos:end="45:41"><expr pos:start="45:38" pos:end="45:41"><name pos:start="45:38" pos:end="45:41">left</name></expr></argument>, <argument pos:start="45:44" pos:end="45:51"><expr pos:start="45:44" pos:end="45:51"><name pos:start="45:44" pos:end="45:51">min_rate</name></expr></argument>, <argument pos:start="45:54" pos:end="45:61"><expr pos:start="45:54" pos:end="45:61"><name pos:start="45:54" pos:end="45:61">max_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="73:13"><if pos:start="49:9" pos:end="73:13">if <condition pos:start="49:12" pos:end="49:44">(<expr pos:start="49:13" pos:end="49:43"><name pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:15">rcc</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:29">buffer_index</name></name> <operator pos:start="49:31" pos:end="49:31">&gt;</operator> <name pos:start="49:33" pos:end="49:43">buffer_size</name></expr>)</condition> <block pos:start="49:46" pos:end="73:13">{<block_content pos:start="51:13" pos:end="73:13">

            <decl_stmt pos:start="51:13" pos:end="51:71"><decl pos:start="51:13" pos:end="51:70"><type pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">int</name></type> <name pos:start="51:17" pos:end="51:24">stuffing</name> <init pos:start="51:26" pos:end="51:70">= <expr pos:start="51:28" pos:end="51:70"><call pos:start="51:28" pos:end="51:70"><name pos:start="51:28" pos:end="51:31">ceil</name><argument_list pos:start="51:32" pos:end="51:70">(<argument pos:start="51:33" pos:end="51:69"><expr pos:start="51:33" pos:end="51:69"><operator pos:start="51:33" pos:end="51:33">(</operator><name pos:start="51:34" pos:end="51:50"><name pos:start="51:34" pos:end="51:36">rcc</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:50">buffer_index</name></name> <operator pos:start="51:52" pos:end="51:52">-</operator> <name pos:start="51:54" pos:end="51:64">buffer_size</name><operator pos:start="51:65" pos:end="51:65">)</operator> <operator pos:start="51:67" pos:end="51:67">/</operator> <literal type="number" pos:start="51:69" pos:end="51:69">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="55:13" pos:end="57:29"><if pos:start="55:13" pos:end="57:29">if <condition pos:start="55:16" pos:end="55:65">(<expr pos:start="55:17" pos:end="55:64"><name pos:start="55:17" pos:end="55:24">stuffing</name> <operator pos:start="55:26" pos:end="55:26">&lt;</operator> <literal type="number" pos:start="55:28" pos:end="55:28">4</literal> <operator pos:start="55:30" pos:end="55:31">&amp;&amp;</operator> <name pos:start="55:33" pos:end="55:43"><name pos:start="55:33" pos:end="55:33">s</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:43">codec_id</name></name> <operator pos:start="55:45" pos:end="55:46">==</operator> <name pos:start="55:48" pos:end="55:64">AV_CODEC_ID_MPEG4</name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:29"><block_content pos:start="57:17" pos:end="57:29">

                <expr_stmt pos:start="57:17" pos:end="57:29"><expr pos:start="57:17" pos:end="57:28"><name pos:start="57:17" pos:end="57:24">stuffing</name> <operator pos:start="57:26" pos:end="57:26">=</operator> <literal type="number" pos:start="57:28" pos:end="57:28">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:46"><expr pos:start="59:13" pos:end="59:45"><name pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:15">rcc</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:29">buffer_index</name></name> <operator pos:start="59:31" pos:end="59:32">-=</operator> <literal type="number" pos:start="59:34" pos:end="59:34">8</literal> <operator pos:start="59:36" pos:end="59:36">*</operator> <name pos:start="59:38" pos:end="59:45">stuffing</name></expr>;</expr_stmt>



            <if_stmt pos:start="63:13" pos:end="65:80"><if pos:start="63:13" pos:end="65:80">if <condition pos:start="63:16" pos:end="63:46">(<expr pos:start="63:17" pos:end="63:45"><name pos:start="63:17" pos:end="63:31"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:24">avctx</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:31">debug</name></name> <operator pos:start="63:33" pos:end="63:33">&amp;</operator> <name pos:start="63:35" pos:end="63:45">FF_DEBUG_RC</name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:80"><block_content pos:start="65:17" pos:end="65:80">

                <expr_stmt pos:start="65:17" pos:end="65:80"><expr pos:start="65:17" pos:end="65:79"><call pos:start="65:17" pos:end="65:79"><name pos:start="65:17" pos:end="65:22">av_log</name><argument_list pos:start="65:23" pos:end="65:79">(<argument pos:start="65:24" pos:end="65:31"><expr pos:start="65:24" pos:end="65:31"><name pos:start="65:24" pos:end="65:31"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:31">avctx</name></name></expr></argument>, <argument pos:start="65:34" pos:end="65:45"><expr pos:start="65:34" pos:end="65:45"><name pos:start="65:34" pos:end="65:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="65:48" pos:end="65:68"><expr pos:start="65:48" pos:end="65:68"><literal type="string" pos:start="65:48" pos:end="65:68">"stuffing %d bytes\n"</literal></expr></argument>, <argument pos:start="65:71" pos:end="65:78"><expr pos:start="65:71" pos:end="65:78"><name pos:start="65:71" pos:end="65:78">stuffing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <return pos:start="69:13" pos:end="69:28">return <expr pos:start="69:20" pos:end="69:27"><name pos:start="69:20" pos:end="69:27">stuffing</name></expr>;</return>



    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
