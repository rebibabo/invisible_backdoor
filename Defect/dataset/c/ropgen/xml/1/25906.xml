<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25906.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">BlockAIOCB</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:31">blk_aio_prwv</name><parameter_list pos:start="1:32" pos:end="7:70">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:44">BlockBackend</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">blk</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:58">int64_t</name></type> <name pos:start="1:60" pos:end="1:65">offset</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:76"><decl pos:start="1:68" pos:end="1:76"><type pos:start="1:68" pos:end="1:76"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:76">bytes</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><name pos:start="3:33" pos:end="3:44">QEMUIOVector</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:50">qiov</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:75"><decl pos:start="3:53" pos:end="3:75"><type pos:start="3:53" pos:end="3:75"><name pos:start="3:53" pos:end="3:66">CoroutineEntry</name></type> <name pos:start="3:68" pos:end="3:75">co_entry</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:54"><decl pos:start="5:33" pos:end="5:54"><type pos:start="5:33" pos:end="5:54"><name pos:start="5:33" pos:end="5:48">BdrvRequestFlags</name></type> <name pos:start="5:50" pos:end="5:54">flags</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:55"><decl pos:start="7:33" pos:end="7:55"><type pos:start="7:33" pos:end="7:55"><name pos:start="7:33" pos:end="7:51">BlockCompletionFunc</name> <modifier pos:start="7:53" pos:end="7:53">*</modifier></type><name pos:start="7:54" pos:end="7:55">cb</name></decl></parameter>, <parameter pos:start="7:58" pos:end="7:69"><decl pos:start="7:58" pos:end="7:69"><type pos:start="7:58" pos:end="7:69"><name pos:start="7:58" pos:end="7:61">void</name> <modifier pos:start="7:63" pos:end="7:63">*</modifier></type><name pos:start="7:64" pos:end="7:69">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="61:1">{<block_content pos:start="11:5" pos:end="59:24">

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">BlkAioEmAIOCB</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">acb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">Coroutine</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:17">co</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:22">bdrv_inc_in_flight</name><argument_list pos:start="17:23" pos:end="17:35">(<argument pos:start="17:24" pos:end="17:34"><expr pos:start="17:24" pos:end="17:34"><call pos:start="17:24" pos:end="17:34"><name pos:start="17:24" pos:end="17:29">blk_bs</name><argument_list pos:start="17:30" pos:end="17:34">(<argument pos:start="17:31" pos:end="17:33"><expr pos:start="17:31" pos:end="17:33"><name pos:start="17:31" pos:end="17:33">blk</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><name pos:start="19:5" pos:end="19:7">acb</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:62"><name pos:start="19:11" pos:end="19:21">blk_aio_get</name><argument_list pos:start="19:22" pos:end="19:62">(<argument pos:start="19:23" pos:end="19:44"><expr pos:start="19:23" pos:end="19:44"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:44">blk_aio_em_aiocb_info</name></expr></argument>, <argument pos:start="19:47" pos:end="19:49"><expr pos:start="19:47" pos:end="19:49"><name pos:start="19:47" pos:end="19:49">blk</name></expr></argument>, <argument pos:start="19:52" pos:end="19:53"><expr pos:start="19:52" pos:end="19:53"><name pos:start="19:52" pos:end="19:53">cb</name></expr></argument>, <argument pos:start="19:56" pos:end="19:61"><expr pos:start="19:56" pos:end="19:61"><name pos:start="19:56" pos:end="19:61">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="33:6"><expr pos:start="21:5" pos:end="33:5"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:7">acb</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:13">rwco</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <operator pos:start="21:17" pos:end="21:17">(</operator><name pos:start="21:18" pos:end="21:24">BlkRwCo</name><operator pos:start="21:25" pos:end="21:25">)</operator> <block pos:start="21:27" pos:end="33:5">{

        <expr pos:start="23:9" pos:end="23:21"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:12">blk</name>    <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:21">blk</name></expr>,

        <expr pos:start="25:9" pos:end="25:24"><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:15">offset</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:24">offset</name></expr>,

        <expr pos:start="27:9" pos:end="27:22"><operator pos:start="27:9" pos:end="27:9">.</operator><name pos:start="27:10" pos:end="27:13">qiov</name>   <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:22">qiov</name></expr>,

        <expr pos:start="29:9" pos:end="29:23"><operator pos:start="29:9" pos:end="29:9">.</operator><name pos:start="29:10" pos:end="29:14">flags</name>  <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:23">flags</name></expr>,

        <expr pos:start="31:9" pos:end="31:26"><operator pos:start="31:9" pos:end="31:9">.</operator><name pos:start="31:10" pos:end="31:12">ret</name>    <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:26">NOT_DONE</name></expr>,

    }</block></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:7">acb</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:14">bytes</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:22">bytes</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:30"><expr pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:7">acb</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:21">has_returned</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:29">false</name></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:46"><expr pos:start="41:5" pos:end="41:45"><name pos:start="41:5" pos:end="41:6">co</name> <operator pos:start="41:8" pos:end="41:8">=</operator> <call pos:start="41:10" pos:end="41:45"><name pos:start="41:10" pos:end="41:30">qemu_coroutine_create</name><argument_list pos:start="41:31" pos:end="41:45">(<argument pos:start="41:32" pos:end="41:39"><expr pos:start="41:32" pos:end="41:39"><name pos:start="41:32" pos:end="41:39">co_entry</name></expr></argument>, <argument pos:start="41:42" pos:end="41:44"><expr pos:start="41:42" pos:end="41:44"><name pos:start="41:42" pos:end="41:44">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><call pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:24">qemu_coroutine_enter</name><argument_list pos:start="43:25" pos:end="43:28">(<argument pos:start="43:26" pos:end="43:27"><expr pos:start="43:26" pos:end="43:27"><name pos:start="43:26" pos:end="43:27">co</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:7">acb</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:21">has_returned</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:28">true</name></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:34">(<expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:11">acb</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:17">rwco</name><operator pos:start="49:18" pos:end="49:18">.</operator><name pos:start="49:19" pos:end="49:21">ret</name></name> <operator pos:start="49:23" pos:end="49:24">!=</operator> <name pos:start="49:26" pos:end="49:33">NOT_DONE</name></expr>)</condition> <block pos:start="49:36" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:58">

        <expr_stmt pos:start="51:9" pos:end="53:58"><expr pos:start="51:9" pos:end="53:57"><call pos:start="51:9" pos:end="53:57"><name pos:start="51:9" pos:end="51:31">aio_bh_schedule_oneshot</name><argument_list pos:start="51:32" pos:end="53:57">(<argument pos:start="51:33" pos:end="51:56"><expr pos:start="51:33" pos:end="51:56"><call pos:start="51:33" pos:end="51:56"><name pos:start="51:33" pos:end="51:51">blk_get_aio_context</name><argument_list pos:start="51:52" pos:end="51:56">(<argument pos:start="51:53" pos:end="51:55"><expr pos:start="51:53" pos:end="51:55"><name pos:start="51:53" pos:end="51:55">blk</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="53:33" pos:end="53:51"><expr pos:start="53:33" pos:end="53:51"><name pos:start="53:33" pos:end="53:51">blk_aio_complete_bh</name></expr></argument>, <argument pos:start="53:54" pos:end="53:56"><expr pos:start="53:54" pos:end="53:56"><name pos:start="53:54" pos:end="53:56">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="59:5" pos:end="59:24">return <expr pos:start="59:12" pos:end="59:23"><operator pos:start="59:12" pos:end="59:12">&amp;</operator><name pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:15">acb</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:23">common</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
