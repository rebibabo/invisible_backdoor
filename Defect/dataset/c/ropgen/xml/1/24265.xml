<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24265.c" pos:tabs="8"><function pos:start="1:1" pos:end="30:28"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">v9fs_rename</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="30:28">{<block_content pos:start="3:5" pos:end="30:28">
    <decl_stmt pos:start="3:5" pos:end="3:16"><decl pos:start="3:5" pos:end="3:15"><type pos:start="3:5" pos:end="3:11"><name pos:start="3:5" pos:end="3:11">int32_t</name></type> <name pos:start="3:13" pos:end="3:15">fid</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:20"><decl pos:start="4:5" pos:end="4:19"><type pos:start="4:5" pos:end="4:11"><name pos:start="4:5" pos:end="4:11">ssize_t</name></type> <name pos:start="4:13" pos:end="4:15">err</name> <init pos:start="4:17" pos:end="4:19">= <expr pos:start="4:19" pos:end="4:19"><literal type="number" pos:start="4:19" pos:end="4:19">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:17">offset</name> <init pos:start="5:19" pos:end="5:21">= <expr pos:start="5:21" pos:end="5:21"><literal type="number" pos:start="5:21" pos:end="5:21">7</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:20"><decl pos:start="6:5" pos:end="6:19"><type pos:start="6:5" pos:end="6:14"><name pos:start="6:5" pos:end="6:14">V9fsString</name></type> <name pos:start="6:16" pos:end="6:19">name</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:21">newdirfid</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:23"><decl pos:start="8:5" pos:end="8:22"><type pos:start="8:5" pos:end="8:18"><name pos:start="8:5" pos:end="8:16">V9fsFidState</name> <modifier pos:start="8:18" pos:end="8:18">*</modifier></type><name pos:start="8:19" pos:end="8:22">fidp</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">V9fsPDU</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">pdu</name> <init pos:start="9:18" pos:end="9:25">= <expr pos:start="9:20" pos:end="9:25"><name pos:start="9:20" pos:end="9:25">opaque</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:26"><decl pos:start="10:5" pos:end="10:25"><type pos:start="10:5" pos:end="10:15"><name pos:start="10:5" pos:end="10:13">V9fsState</name> <modifier pos:start="10:15" pos:end="10:15">*</modifier></type><name pos:start="10:16" pos:end="10:16">s</name> <init pos:start="10:18" pos:end="10:25">= <expr pos:start="10:20" pos:end="10:25"><name pos:start="10:20" pos:end="10:25"><name pos:start="10:20" pos:end="10:22">pdu</name><operator pos:start="10:23" pos:end="10:24">-&gt;</operator><name pos:start="10:25" pos:end="10:25">s</name></name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:28"><expr pos:start="11:5" pos:end="11:27"><call pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:20">v9fs_string_init</name><argument_list pos:start="11:21" pos:end="11:27">(<argument pos:start="11:22" pos:end="11:26"><expr pos:start="11:22" pos:end="11:26"><operator pos:start="11:22" pos:end="11:22">&amp;</operator><name pos:start="11:23" pos:end="11:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:69"><expr pos:start="12:5" pos:end="12:68"><name pos:start="12:5" pos:end="12:7">err</name> <operator pos:start="12:9" pos:end="12:9">=</operator> <call pos:start="12:11" pos:end="12:68"><name pos:start="12:11" pos:end="12:23">pdu_unmarshal</name><argument_list pos:start="12:24" pos:end="12:68">(<argument pos:start="12:25" pos:end="12:27"><expr pos:start="12:25" pos:end="12:27"><name pos:start="12:25" pos:end="12:27">pdu</name></expr></argument>, <argument pos:start="12:30" pos:end="12:35"><expr pos:start="12:30" pos:end="12:35"><name pos:start="12:30" pos:end="12:35">offset</name></expr></argument>, <argument pos:start="12:38" pos:end="12:42"><expr pos:start="12:38" pos:end="12:42"><literal type="string" pos:start="12:38" pos:end="12:42">"dds"</literal></expr></argument>, <argument pos:start="12:45" pos:end="12:48"><expr pos:start="12:45" pos:end="12:48"><operator pos:start="12:45" pos:end="12:45">&amp;</operator><name pos:start="12:46" pos:end="12:48">fid</name></expr></argument>, <argument pos:start="12:51" pos:end="12:60"><expr pos:start="12:51" pos:end="12:60"><operator pos:start="12:51" pos:end="12:51">&amp;</operator><name pos:start="12:52" pos:end="12:60">newdirfid</name></expr></argument>, <argument pos:start="12:63" pos:end="12:67"><expr pos:start="12:63" pos:end="12:67"><operator pos:start="12:63" pos:end="12:63">&amp;</operator><name pos:start="12:64" pos:end="12:67">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="13:5" pos:end="30:28"><if pos:start="13:5" pos:end="30:28">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:11">err</name> <operator pos:start="13:13" pos:end="13:13">&lt;</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>)</condition> <block pos:start="13:18" pos:end="30:28">{<block_content pos:start="14:5" pos:end="30:28">
    <expr_stmt pos:start="14:5" pos:end="14:29"><expr pos:start="14:5" pos:end="14:28"><name pos:start="14:5" pos:end="14:8">fidp</name> <operator pos:start="14:10" pos:end="14:10">=</operator> <call pos:start="14:12" pos:end="14:28"><name pos:start="14:12" pos:end="14:18">get_fid</name><argument_list pos:start="14:19" pos:end="14:28">(<argument pos:start="14:20" pos:end="14:22"><expr pos:start="14:20" pos:end="14:22"><name pos:start="14:20" pos:end="14:22">pdu</name></expr></argument>, <argument pos:start="14:25" pos:end="14:27"><expr pos:start="14:25" pos:end="14:27"><name pos:start="14:25" pos:end="14:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="30:28"><if pos:start="15:5" pos:end="30:28">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:12">fidp</name> <operator pos:start="15:14" pos:end="15:15">==</operator> <name pos:start="15:17" pos:end="15:20">NULL</name></expr>)</condition> <block pos:start="15:23" pos:end="30:28">{<block_content pos:start="16:5" pos:end="30:28">
    <expr_stmt pos:start="16:5" pos:end="16:42"><expr pos:start="16:5" pos:end="16:41"><call pos:start="16:5" pos:end="16:41"><name pos:start="16:5" pos:end="16:10">BUG_ON</name><argument_list pos:start="16:11" pos:end="16:41">(<argument pos:start="16:12" pos:end="16:40"><expr pos:start="16:12" pos:end="16:40"><name pos:start="16:12" pos:end="16:25"><name pos:start="16:12" pos:end="16:15">fidp</name><operator pos:start="16:16" pos:end="16:17">-&gt;</operator><name pos:start="16:18" pos:end="16:25">fid_type</name></name> <operator pos:start="16:27" pos:end="16:28">!=</operator> <name pos:start="16:30" pos:end="16:40">P9_FID_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="17:5" pos:end="17:59">/* if fs driver is not path based, return EOPNOTSUPP */</comment>
    <if_stmt pos:start="18:5" pos:end="30:28"><if pos:start="18:5" pos:end="30:28">if <condition pos:start="18:8" pos:end="18:62">(<expr pos:start="18:9" pos:end="18:61"><operator pos:start="18:9" pos:end="18:9">!</operator><operator pos:start="18:10" pos:end="18:10">(</operator><name pos:start="18:11" pos:end="18:34"><name pos:start="18:11" pos:end="18:13">pdu</name><operator pos:start="18:14" pos:end="18:15">-&gt;</operator><name pos:start="18:16" pos:end="18:16">s</name><operator pos:start="18:17" pos:end="18:18">-&gt;</operator><name pos:start="18:19" pos:end="18:21">ctx</name><operator pos:start="18:22" pos:end="18:22">.</operator><name pos:start="18:23" pos:end="18:34">export_flags</name></name> <operator pos:start="18:36" pos:end="18:36">&amp;</operator> <name pos:start="18:38" pos:end="18:60">V9FS_PATHNAME_FSCONTEXT</name><operator pos:start="18:61" pos:end="18:61">)</operator></expr>)</condition> <block pos:start="18:64" pos:end="30:28">{<block_content pos:start="19:9" pos:end="30:28">
        <expr_stmt pos:start="19:9" pos:end="19:26"><expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:11">err</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <operator pos:start="19:15" pos:end="19:15">-</operator><name pos:start="19:16" pos:end="19:25">EOPNOTSUPP</name></expr>;</expr_stmt>
        <goto pos:start="20:9" pos:end="20:17">goto <name pos:start="20:14" pos:end="20:16">out</name>;</goto>
    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><call pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:24">v9fs_path_write_lock</name><argument_list pos:start="21:25" pos:end="21:27">(<argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><name pos:start="21:26" pos:end="21:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:60"><expr pos:start="22:5" pos:end="22:59"><name pos:start="22:5" pos:end="22:7">err</name> <operator pos:start="22:9" pos:end="22:9">=</operator> <call pos:start="22:11" pos:end="22:59"><name pos:start="22:11" pos:end="22:30">v9fs_complete_rename</name><argument_list pos:start="22:31" pos:end="22:59">(<argument pos:start="22:32" pos:end="22:34"><expr pos:start="22:32" pos:end="22:34"><name pos:start="22:32" pos:end="22:34">pdu</name></expr></argument>, <argument pos:start="22:37" pos:end="22:40"><expr pos:start="22:37" pos:end="22:40"><name pos:start="22:37" pos:end="22:40">fidp</name></expr></argument>, <argument pos:start="22:43" pos:end="22:51"><expr pos:start="22:43" pos:end="22:51"><name pos:start="22:43" pos:end="22:51">newdirfid</name></expr></argument>, <argument pos:start="22:54" pos:end="22:58"><expr pos:start="22:54" pos:end="22:58"><operator pos:start="22:54" pos:end="22:54">&amp;</operator><name pos:start="22:55" pos:end="22:58">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><call pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:20">v9fs_path_unlock</name><argument_list pos:start="23:21" pos:end="23:23">(<argument pos:start="23:22" pos:end="23:22"><expr pos:start="23:22" pos:end="23:22"><name pos:start="23:22" pos:end="23:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="24:5" pos:end="30:28"><if pos:start="24:5" pos:end="30:28">if <condition pos:start="24:8" pos:end="24:13">(<expr pos:start="24:9" pos:end="24:12"><operator pos:start="24:9" pos:end="24:9">!</operator><name pos:start="24:10" pos:end="24:12">err</name></expr>)</condition> <block pos:start="24:15" pos:end="30:28">{<block_content pos:start="25:9" pos:end="30:28">
        <expr_stmt pos:start="25:9" pos:end="25:21"><expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:11">err</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:20">offset</name></expr>;</expr_stmt>
<label pos:start="26:1" pos:end="26:4"><name pos:start="26:1" pos:end="26:3">out</name>:</label>
    <expr_stmt pos:start="27:5" pos:end="27:23"><expr pos:start="27:5" pos:end="27:22"><call pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:11">put_fid</name><argument_list pos:start="27:12" pos:end="27:22">(<argument pos:start="27:13" pos:end="27:15"><expr pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">pdu</name></expr></argument>, <argument pos:start="27:18" pos:end="27:21"><expr pos:start="27:18" pos:end="27:21"><name pos:start="27:18" pos:end="27:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label pos:start="28:1" pos:end="28:10"><name pos:start="28:1" pos:end="28:9">out_nofid</name>:</label>
    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><call pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:16">pdu_complete</name><argument_list pos:start="29:17" pos:end="29:26">(<argument pos:start="29:18" pos:end="29:20"><expr pos:start="29:18" pos:end="29:20"><name pos:start="29:18" pos:end="29:20">pdu</name></expr></argument>, <argument pos:start="29:23" pos:end="29:25"><expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:25">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:28"><expr pos:start="30:5" pos:end="30:27"><call pos:start="30:5" pos:end="30:27"><name pos:start="30:5" pos:end="30:20">v9fs_string_free</name><argument_list pos:start="30:21" pos:end="30:27">(<argument pos:start="30:22" pos:end="30:26"><expr pos:start="30:22" pos:end="30:26"><operator pos:start="30:22" pos:end="30:22">&amp;</operator><name pos:start="30:23" pos:end="30:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
