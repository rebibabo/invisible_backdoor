<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2013.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:48">virtio_pci_set_host_notifier_internal</name><parameter_list pos:start="1:49" pos:end="3:86">(<parameter pos:start="1:50" pos:end="1:70"><decl pos:start="1:50" pos:end="1:70"><type pos:start="1:50" pos:end="1:70"><name pos:start="1:50" pos:end="1:63">VirtIOPCIProxy</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:70">proxy</name></decl></parameter>,

                                                 <parameter pos:start="3:50" pos:end="3:54"><decl pos:start="3:50" pos:end="3:54"><type pos:start="3:50" pos:end="3:54"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:54">n</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:67"><decl pos:start="3:57" pos:end="3:67"><type pos:start="3:57" pos:end="3:67"><name pos:start="3:57" pos:end="3:60">bool</name></type> <name pos:start="3:62" pos:end="3:67">assign</name></decl></parameter>, <parameter pos:start="3:70" pos:end="3:85"><decl pos:start="3:70" pos:end="3:85"><type pos:start="3:70" pos:end="3:85"><name pos:start="3:70" pos:end="3:73">bool</name></type> <name pos:start="3:75" pos:end="3:85">set_handler</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:13">

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIODevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">vdev</name> <init pos:start="7:24" pos:end="7:59">= <expr pos:start="7:26" pos:end="7:59"><call pos:start="7:26" pos:end="7:59"><name pos:start="7:26" pos:end="7:46">virtio_bus_get_device</name><argument_list pos:start="7:47" pos:end="7:59">(<argument pos:start="7:48" pos:end="7:58"><expr pos:start="7:48" pos:end="7:58"><operator pos:start="7:48" pos:end="7:48">&amp;</operator><name pos:start="7:49" pos:end="7:58"><name pos:start="7:49" pos:end="7:53">proxy</name><operator pos:start="7:54" pos:end="7:55">-&gt;</operator><name pos:start="7:56" pos:end="7:58">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">VirtQueue</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:17">vq</name> <init pos:start="9:19" pos:end="9:45">= <expr pos:start="9:21" pos:end="9:45"><call pos:start="9:21" pos:end="9:45"><name pos:start="9:21" pos:end="9:36">virtio_get_queue</name><argument_list pos:start="9:37" pos:end="9:45">(<argument pos:start="9:38" pos:end="9:41"><expr pos:start="9:38" pos:end="9:41"><name pos:start="9:38" pos:end="9:41">vdev</name></expr></argument>, <argument pos:start="9:44" pos:end="9:44"><expr pos:start="9:44" pos:end="9:44"><name pos:start="9:44" pos:end="9:44">n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:65"><decl pos:start="11:5" pos:end="11:64"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">EventNotifier</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:27">notifier</name> <init pos:start="11:29" pos:end="11:64">= <expr pos:start="11:31" pos:end="11:64"><call pos:start="11:31" pos:end="11:64"><name pos:start="11:31" pos:end="11:60">virtio_queue_get_host_notifier</name><argument_list pos:start="11:61" pos:end="11:64">(<argument pos:start="11:62" pos:end="11:63"><expr pos:start="11:62" pos:end="11:63"><name pos:start="11:62" pos:end="11:63">vq</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">r</name> <init pos:start="13:11" pos:end="13:13">= <expr pos:start="13:13" pos:end="13:13"><literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="47:5"><if pos:start="17:5" pos:end="37:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">assign</name></expr>)</condition> <block pos:start="17:17" pos:end="37:5">{<block_content pos:start="19:9" pos:end="35:53">

        <expr_stmt pos:start="19:9" pos:end="19:45"><expr pos:start="19:9" pos:end="19:44"><name pos:start="19:9" pos:end="19:9">r</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:44"><name pos:start="19:13" pos:end="19:31">event_notifier_init</name><argument_list pos:start="19:32" pos:end="19:44">(<argument pos:start="19:33" pos:end="19:40"><expr pos:start="19:33" pos:end="19:40"><name pos:start="19:33" pos:end="19:40">notifier</name></expr></argument>, <argument pos:start="19:43" pos:end="19:43"><expr pos:start="19:43" pos:end="19:43"><literal type="number" pos:start="19:43" pos:end="19:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="29:9"><if pos:start="21:9" pos:end="29:9">if <condition pos:start="21:12" pos:end="21:18">(<expr pos:start="21:13" pos:end="21:17"><name pos:start="21:13" pos:end="21:13">r</name> <operator pos:start="21:15" pos:end="21:15">&lt;</operator> <literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr>)</condition> <block pos:start="21:20" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:21">

            <expr_stmt pos:start="23:13" pos:end="25:38"><expr pos:start="23:13" pos:end="25:37"><call pos:start="23:13" pos:end="25:37"><name pos:start="23:13" pos:end="23:24">error_report</name><argument_list pos:start="23:25" pos:end="25:37">(<argument pos:start="23:26" pos:end="23:64"><expr pos:start="23:26" pos:end="23:64"><literal type="string" pos:start="23:26" pos:end="23:64">"%s: unable to init event notifier: %d"</literal></expr></argument>,

                         <argument pos:start="25:26" pos:end="25:33"><expr pos:start="25:26" pos:end="25:33"><name pos:start="25:26" pos:end="25:33">__func__</name></expr></argument>, <argument pos:start="25:36" pos:end="25:36"><expr pos:start="25:36" pos:end="25:36"><name pos:start="25:36" pos:end="25:36">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:21">return <expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">r</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:73"><expr pos:start="31:9" pos:end="31:72"><call pos:start="31:9" pos:end="31:72"><name pos:start="31:9" pos:end="31:49">virtio_queue_set_host_notifier_fd_handler</name><argument_list pos:start="31:50" pos:end="31:72">(<argument pos:start="31:51" pos:end="31:52"><expr pos:start="31:51" pos:end="31:52"><name pos:start="31:51" pos:end="31:52">vq</name></expr></argument>, <argument pos:start="31:55" pos:end="31:58"><expr pos:start="31:55" pos:end="31:58"><name pos:start="31:55" pos:end="31:58">true</name></expr></argument>, <argument pos:start="31:61" pos:end="31:71"><expr pos:start="31:61" pos:end="31:71"><name pos:start="31:61" pos:end="31:71">set_handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="35:53"><expr pos:start="33:9" pos:end="35:52"><call pos:start="33:9" pos:end="35:52"><name pos:start="33:9" pos:end="33:33">memory_region_add_eventfd</name><argument_list pos:start="33:34" pos:end="35:52">(<argument pos:start="33:35" pos:end="33:45"><expr pos:start="33:35" pos:end="33:45"><operator pos:start="33:35" pos:end="33:35">&amp;</operator><name pos:start="33:36" pos:end="33:45"><name pos:start="33:36" pos:end="33:40">proxy</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:45">bar</name></name></expr></argument>, <argument pos:start="33:48" pos:end="33:70"><expr pos:start="33:48" pos:end="33:70"><name pos:start="33:48" pos:end="33:70">VIRTIO_PCI_QUEUE_NOTIFY</name></expr></argument>, <argument pos:start="33:73" pos:end="33:73"><expr pos:start="33:73" pos:end="33:73"><literal type="number" pos:start="33:73" pos:end="33:73">2</literal></expr></argument>,

                                  <argument pos:start="35:35" pos:end="35:38"><expr pos:start="35:35" pos:end="35:38"><name pos:start="35:35" pos:end="35:38">true</name></expr></argument>, <argument pos:start="35:41" pos:end="35:41"><expr pos:start="35:41" pos:end="35:41"><name pos:start="35:41" pos:end="35:41">n</name></expr></argument>, <argument pos:start="35:44" pos:end="35:51"><expr pos:start="35:44" pos:end="35:51"><name pos:start="35:44" pos:end="35:51">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="47:5">else <block pos:start="37:12" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:41">

        <expr_stmt pos:start="39:9" pos:end="41:53"><expr pos:start="39:9" pos:end="41:52"><call pos:start="39:9" pos:end="41:52"><name pos:start="39:9" pos:end="39:33">memory_region_del_eventfd</name><argument_list pos:start="39:34" pos:end="41:52">(<argument pos:start="39:35" pos:end="39:45"><expr pos:start="39:35" pos:end="39:45"><operator pos:start="39:35" pos:end="39:35">&amp;</operator><name pos:start="39:36" pos:end="39:45"><name pos:start="39:36" pos:end="39:40">proxy</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:45">bar</name></name></expr></argument>, <argument pos:start="39:48" pos:end="39:70"><expr pos:start="39:48" pos:end="39:70"><name pos:start="39:48" pos:end="39:70">VIRTIO_PCI_QUEUE_NOTIFY</name></expr></argument>, <argument pos:start="39:73" pos:end="39:73"><expr pos:start="39:73" pos:end="39:73"><literal type="number" pos:start="39:73" pos:end="39:73">2</literal></expr></argument>,

                                  <argument pos:start="41:35" pos:end="41:38"><expr pos:start="41:35" pos:end="41:38"><name pos:start="41:35" pos:end="41:38">true</name></expr></argument>, <argument pos:start="41:41" pos:end="41:41"><expr pos:start="41:41" pos:end="41:41"><name pos:start="41:41" pos:end="41:41">n</name></expr></argument>, <argument pos:start="41:44" pos:end="41:51"><expr pos:start="41:44" pos:end="41:51"><name pos:start="41:44" pos:end="41:51">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:68"><expr pos:start="43:9" pos:end="43:67"><call pos:start="43:9" pos:end="43:67"><name pos:start="43:9" pos:end="43:49">virtio_queue_set_host_notifier_fd_handler</name><argument_list pos:start="43:50" pos:end="43:67">(<argument pos:start="43:51" pos:end="43:52"><expr pos:start="43:51" pos:end="43:52"><name pos:start="43:51" pos:end="43:52">vq</name></expr></argument>, <argument pos:start="43:55" pos:end="43:59"><expr pos:start="43:55" pos:end="43:59"><name pos:start="43:55" pos:end="43:59">false</name></expr></argument>, <argument pos:start="43:62" pos:end="43:66"><expr pos:start="43:62" pos:end="43:66"><name pos:start="43:62" pos:end="43:66">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:41"><expr pos:start="45:9" pos:end="45:40"><call pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:30">event_notifier_cleanup</name><argument_list pos:start="45:31" pos:end="45:40">(<argument pos:start="45:32" pos:end="45:39"><expr pos:start="45:32" pos:end="45:39"><name pos:start="45:32" pos:end="45:39">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><name pos:start="49:12" pos:end="49:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
