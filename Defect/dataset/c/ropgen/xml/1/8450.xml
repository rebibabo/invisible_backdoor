<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8450.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:35">ff_MPV_common_frame_size_change</name><parameter_list pos:start="1:36" pos:end="1:54">(<parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">MpegEncContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="141:1">{<block_content pos:start="5:5" pos:end="139:15">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">err</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="25:34"><if pos:start="9:5" pos:end="23:5">if <condition pos:start="9:8" pos:end="9:35">(<expr pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:30">slice_context_count</name></name> <operator pos:start="9:32" pos:end="9:32">&gt;</operator> <literal type="number" pos:start="9:34" pos:end="9:34">1</literal></expr>)</condition> <block pos:start="9:37" pos:end="23:5">{<block_content pos:start="11:9" pos:end="21:9">

        <for pos:start="11:9" pos:end="15:9">for <control pos:start="11:13" pos:end="11:52">(<init pos:start="11:14" pos:end="11:19"><expr pos:start="11:14" pos:end="11:18"><name pos:start="11:14" pos:end="11:14">i</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>;</init> <condition pos:start="11:21" pos:end="11:47"><expr pos:start="11:21" pos:end="11:46"><name pos:start="11:21" pos:end="11:21">i</name> <operator pos:start="11:23" pos:end="11:23">&lt;</operator> <name pos:start="11:25" pos:end="11:46"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:46">slice_context_count</name></name></expr>;</condition> <incr pos:start="11:49" pos:end="11:51"><expr pos:start="11:49" pos:end="11:51"><name pos:start="11:49" pos:end="11:49">i</name><operator pos:start="11:50" pos:end="11:51">++</operator></expr></incr>)</control> <block pos:start="11:54" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:57">

            <expr_stmt pos:start="13:13" pos:end="13:57"><expr pos:start="13:13" pos:end="13:56"><call pos:start="13:13" pos:end="13:56"><name pos:start="13:13" pos:end="13:34">free_duplicate_context</name><argument_list pos:start="13:35" pos:end="13:56">(<argument pos:start="13:36" pos:end="13:55"><expr pos:start="13:36" pos:end="13:55"><name pos:start="13:36" pos:end="13:55"><name pos:start="13:36" pos:end="13:36">s</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:52">thread_context</name><index pos:start="13:53" pos:end="13:55">[<expr pos:start="13:54" pos:end="13:54"><name pos:start="13:54" pos:end="13:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="17:9" pos:end="21:9">for <control pos:start="17:13" pos:end="17:52">(<init pos:start="17:14" pos:end="17:19"><expr pos:start="17:14" pos:end="17:18"><name pos:start="17:14" pos:end="17:14">i</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">1</literal></expr>;</init> <condition pos:start="17:21" pos:end="17:47"><expr pos:start="17:21" pos:end="17:46"><name pos:start="17:21" pos:end="17:21">i</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <name pos:start="17:25" pos:end="17:46"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:46">slice_context_count</name></name></expr>;</condition> <incr pos:start="17:49" pos:end="17:51"><expr pos:start="17:49" pos:end="17:51"><name pos:start="17:49" pos:end="17:49">i</name><operator pos:start="17:50" pos:end="17:51">++</operator></expr></incr>)</control> <block pos:start="17:54" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:44">

            <expr_stmt pos:start="19:13" pos:end="19:44"><expr pos:start="19:13" pos:end="19:43"><call pos:start="19:13" pos:end="19:43"><name pos:start="19:13" pos:end="19:20">av_freep</name><argument_list pos:start="19:21" pos:end="19:43">(<argument pos:start="19:22" pos:end="19:42"><expr pos:start="19:22" pos:end="19:42"><operator pos:start="19:22" pos:end="19:22">&amp;</operator><name pos:start="19:23" pos:end="19:42"><name pos:start="19:23" pos:end="19:23">s</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:39">thread_context</name><index pos:start="19:40" pos:end="19:42">[<expr pos:start="19:41" pos:end="19:41"><name pos:start="19:41" pos:end="19:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="25:34">else<block type="pseudo" pos:start="25:9" pos:end="25:34"><block_content pos:start="25:9" pos:end="25:34">

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><call pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:30">free_duplicate_context</name><argument_list pos:start="25:31" pos:end="25:33">(<argument pos:start="25:32" pos:end="25:32"><expr pos:start="25:32" pos:end="25:32"><name pos:start="25:32" pos:end="25:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:19"><if pos:start="29:5" pos:end="31:19">if <condition pos:start="29:8" pos:end="29:42">(<expr pos:start="29:9" pos:end="29:41"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:12">err</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:36"><name pos:start="29:16" pos:end="29:33">free_context_frame</name><argument_list pos:start="29:34" pos:end="29:36">(<argument pos:start="29:35" pos:end="29:35"><expr pos:start="29:35" pos:end="29:35"><name pos:start="29:35" pos:end="29:35">s</name></expr></argument>)</argument_list></call><operator pos:start="29:37" pos:end="29:37">)</operator> <operator pos:start="29:39" pos:end="29:39">&lt;</operator> <literal type="number" pos:start="29:41" pos:end="29:41">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:19"><block_content pos:start="31:9" pos:end="31:19">

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">err</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:9"><if pos:start="35:5" pos:end="41:9">if <condition pos:start="35:8" pos:end="35:19">(<expr pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:18">picture</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="41:9"><block_content pos:start="37:9" pos:end="41:9">

        <for pos:start="37:9" pos:end="41:9">for <control pos:start="37:13" pos:end="37:47">(<init pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">i</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</init> <condition pos:start="37:21" pos:end="37:42"><expr pos:start="37:21" pos:end="37:41"><name pos:start="37:21" pos:end="37:21">i</name> <operator pos:start="37:23" pos:end="37:23">&lt;</operator> <name pos:start="37:25" pos:end="37:41">MAX_PICTURE_COUNT</name></expr>;</condition> <incr pos:start="37:44" pos:end="37:46"><expr pos:start="37:44" pos:end="37:46"><name pos:start="37:44" pos:end="37:44">i</name><operator pos:start="37:45" pos:end="37:46">++</operator></expr></incr>)</control> <block pos:start="37:49" pos:end="41:9">{<block_content pos:start="39:17" pos:end="39:48">

                <expr_stmt pos:start="39:17" pos:end="39:48"><expr pos:start="39:17" pos:end="39:47"><name pos:start="39:17" pos:end="39:29"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:26">picture</name><index pos:start="39:27" pos:end="39:29">[<expr pos:start="39:28" pos:end="39:28"><name pos:start="39:28" pos:end="39:28">i</name></expr>]</index></name><operator pos:start="39:30" pos:end="39:30">.</operator><name pos:start="39:31" pos:end="39:43">needs_realloc</name> <operator pos:start="39:45" pos:end="39:45">=</operator> <literal type="number" pos:start="39:47" pos:end="39:47">1</literal></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="49:39"><expr pos:start="45:5" pos:end="49:38"><name pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:23">last_picture_ptr</name></name>         <operator pos:start="45:33" pos:end="45:33">=</operator>

    <name pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:23">next_picture_ptr</name></name>         <operator pos:start="47:33" pos:end="47:33">=</operator>

    <name pos:start="49:5" pos:end="49:26"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:26">current_picture_ptr</name></name>      <operator pos:start="49:33" pos:end="49:33">=</operator> <name pos:start="49:35" pos:end="49:38">NULL</name></expr>;</expr_stmt>



    <comment type="line" pos:start="53:5" pos:end="53:11">// init</comment>

    <if_stmt pos:start="55:5" pos:end="61:45"><if pos:start="55:5" pos:end="57:49">if <condition pos:start="55:8" pos:end="55:74">(<expr pos:start="55:9" pos:end="55:73"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:19">codec_id</name></name> <operator pos:start="55:21" pos:end="55:22">==</operator> <name pos:start="55:24" pos:end="55:45">AV_CODEC_ID_MPEG2VIDEO</name> <operator pos:start="55:47" pos:end="55:48">&amp;&amp;</operator> <operator pos:start="55:50" pos:end="55:50">!</operator><name pos:start="55:51" pos:end="55:73"><name pos:start="55:51" pos:end="55:51">s</name><operator pos:start="55:52" pos:end="55:53">-&gt;</operator><name pos:start="55:54" pos:end="55:73">progressive_sequence</name></name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:49"><block_content pos:start="57:9" pos:end="57:49">

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:20">mb_height</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <operator pos:start="57:24" pos:end="57:24">(</operator><name pos:start="57:25" pos:end="57:33"><name pos:start="57:25" pos:end="57:25">s</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:33">height</name></name> <operator pos:start="57:35" pos:end="57:35">+</operator> <literal type="number" pos:start="57:37" pos:end="57:38">31</literal><operator pos:start="57:39" pos:end="57:39">)</operator> <operator pos:start="57:41" pos:end="57:41">/</operator> <literal type="number" pos:start="57:43" pos:end="57:44">32</literal> <operator pos:start="57:46" pos:end="57:46">*</operator> <literal type="number" pos:start="57:48" pos:end="57:48">2</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="59:5" pos:end="61:45">else<block type="pseudo" pos:start="61:9" pos:end="61:45"><block_content pos:start="61:9" pos:end="61:45">

        <expr_stmt pos:start="61:9" pos:end="61:45"><expr pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:20">mb_height</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <operator pos:start="61:24" pos:end="61:24">(</operator><name pos:start="61:25" pos:end="61:33"><name pos:start="61:25" pos:end="61:25">s</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:33">height</name></name> <operator pos:start="61:35" pos:end="61:35">+</operator> <literal type="number" pos:start="61:37" pos:end="61:38">15</literal><operator pos:start="61:39" pos:end="61:39">)</operator> <operator pos:start="61:41" pos:end="61:41">/</operator> <literal type="number" pos:start="61:43" pos:end="61:44">16</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="65:5" pos:end="69:35"><if pos:start="65:5" pos:end="69:35">if <condition pos:start="65:8" pos:end="67:62">(<expr pos:start="65:9" pos:end="67:61"><operator pos:start="65:9" pos:end="65:9">(</operator><name pos:start="65:10" pos:end="65:17"><name pos:start="65:10" pos:end="65:10">s</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:17">width</name></name> <operator pos:start="65:19" pos:end="65:20">||</operator> <name pos:start="65:22" pos:end="65:30"><name pos:start="65:22" pos:end="65:22">s</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:30">height</name></name><operator pos:start="65:31" pos:end="65:31">)</operator> <operator pos:start="65:33" pos:end="65:34">&amp;&amp;</operator>

        <call pos:start="67:9" pos:end="67:61"><name pos:start="67:9" pos:end="67:27">av_image_check_size</name><argument_list pos:start="67:28" pos:end="67:61">(<argument pos:start="67:29" pos:end="67:36"><expr pos:start="67:29" pos:end="67:36"><name pos:start="67:29" pos:end="67:36"><name pos:start="67:29" pos:end="67:29">s</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:36">width</name></name></expr></argument>, <argument pos:start="67:39" pos:end="67:47"><expr pos:start="67:39" pos:end="67:47"><name pos:start="67:39" pos:end="67:47"><name pos:start="67:39" pos:end="67:39">s</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:47">height</name></name></expr></argument>, <argument pos:start="67:50" pos:end="67:50"><expr pos:start="67:50" pos:end="67:50"><literal type="number" pos:start="67:50" pos:end="67:50">0</literal></expr></argument>, <argument pos:start="67:53" pos:end="67:60"><expr pos:start="67:53" pos:end="67:60"><name pos:start="67:53" pos:end="67:60"><name pos:start="67:53" pos:end="67:53">s</name><operator pos:start="67:54" pos:end="67:55">-&gt;</operator><name pos:start="67:56" pos:end="67:60">avctx</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:35"><block_content pos:start="69:9" pos:end="69:35">

        <return pos:start="69:9" pos:end="69:35">return <expr pos:start="69:16" pos:end="69:34"><name pos:start="69:16" pos:end="69:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="75:18"><if pos:start="73:5" pos:end="75:18">if <condition pos:start="73:8" pos:end="73:38">(<expr pos:start="73:9" pos:end="73:37"><operator pos:start="73:9" pos:end="73:9">(</operator><name pos:start="73:10" pos:end="73:12">err</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <call pos:start="73:16" pos:end="73:36"><name pos:start="73:16" pos:end="73:33">init_context_frame</name><argument_list pos:start="73:34" pos:end="73:36">(<argument pos:start="73:35" pos:end="73:35"><expr pos:start="73:35" pos:end="73:35"><name pos:start="73:35" pos:end="73:35">s</name></expr></argument>)</argument_list></call><operator pos:start="73:37" pos:end="73:37">)</operator></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:18"><block_content pos:start="75:9" pos:end="75:18">

        <goto pos:start="75:9" pos:end="75:18">goto <name pos:start="75:14" pos:end="75:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:31"><expr pos:start="79:5" pos:end="79:30"><name pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:21">thread_context</name><index pos:start="79:22" pos:end="79:24">[<expr pos:start="79:23" pos:end="79:23"><literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr>]</index></name>   <operator pos:start="79:28" pos:end="79:28">=</operator> <name pos:start="79:30" pos:end="79:30">s</name></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="129:5"><if pos:start="83:5" pos:end="129:5">if <condition pos:start="83:8" pos:end="83:30">(<expr pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:16">width</name></name> <operator pos:start="83:18" pos:end="83:19">&amp;&amp;</operator> <name pos:start="83:21" pos:end="83:29"><name pos:start="83:21" pos:end="83:21">s</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:29">height</name></name></expr>)</condition> <block pos:start="83:32" pos:end="129:5">{<block_content pos:start="85:9" pos:end="127:43">

        <decl_stmt pos:start="85:9" pos:end="85:47"><decl pos:start="85:9" pos:end="85:46"><type pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">int</name></type> <name pos:start="85:13" pos:end="85:21">nb_slices</name> <init pos:start="85:23" pos:end="85:46">= <expr pos:start="85:25" pos:end="85:46"><name pos:start="85:25" pos:end="85:46"><name pos:start="85:25" pos:end="85:25">s</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:46">slice_context_count</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="87:9" pos:end="125:9"><if pos:start="87:9" pos:end="115:9">if <condition pos:start="87:12" pos:end="87:26">(<expr pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:21">nb_slices</name> <operator pos:start="87:23" pos:end="87:23">&gt;</operator> <literal type="number" pos:start="87:25" pos:end="87:25">1</literal></expr>)</condition> <block pos:start="87:28" pos:end="115:9">{<block_content pos:start="89:13" pos:end="113:13">

            <for pos:start="89:13" pos:end="95:13">for <control pos:start="89:17" pos:end="89:43">(<init pos:start="89:18" pos:end="89:23"><expr pos:start="89:18" pos:end="89:22"><name pos:start="89:18" pos:end="89:18">i</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <literal type="number" pos:start="89:22" pos:end="89:22">1</literal></expr>;</init> <condition pos:start="89:25" pos:end="89:38"><expr pos:start="89:25" pos:end="89:37"><name pos:start="89:25" pos:end="89:25">i</name> <operator pos:start="89:27" pos:end="89:27">&lt;</operator> <name pos:start="89:29" pos:end="89:37">nb_slices</name></expr>;</condition> <incr pos:start="89:40" pos:end="89:42"><expr pos:start="89:40" pos:end="89:42"><name pos:start="89:40" pos:end="89:40">i</name><operator pos:start="89:41" pos:end="89:42">++</operator></expr></incr>)</control> <block pos:start="89:45" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:72">

                <expr_stmt pos:start="91:17" pos:end="91:73"><expr pos:start="91:17" pos:end="91:72"><name pos:start="91:17" pos:end="91:36"><name pos:start="91:17" pos:end="91:17">s</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:33">thread_context</name><index pos:start="91:34" pos:end="91:36">[<expr pos:start="91:35" pos:end="91:35"><name pos:start="91:35" pos:end="91:35">i</name></expr>]</index></name> <operator pos:start="91:38" pos:end="91:38">=</operator> <call pos:start="91:40" pos:end="91:72"><name pos:start="91:40" pos:end="91:48">av_malloc</name><argument_list pos:start="91:49" pos:end="91:72">(<argument pos:start="91:50" pos:end="91:71"><expr pos:start="91:50" pos:end="91:71"><sizeof pos:start="91:50" pos:end="91:71">sizeof<argument_list pos:start="91:56" pos:end="91:71">(<argument pos:start="91:57" pos:end="91:70"><expr pos:start="91:57" pos:end="91:70"><name pos:start="91:57" pos:end="91:70">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:72"><expr pos:start="93:17" pos:end="93:71"><call pos:start="93:17" pos:end="93:71"><name pos:start="93:17" pos:end="93:22">memcpy</name><argument_list pos:start="93:23" pos:end="93:71">(<argument pos:start="93:24" pos:end="93:43"><expr pos:start="93:24" pos:end="93:43"><name pos:start="93:24" pos:end="93:43"><name pos:start="93:24" pos:end="93:24">s</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:40">thread_context</name><index pos:start="93:41" pos:end="93:43">[<expr pos:start="93:42" pos:end="93:42"><name pos:start="93:42" pos:end="93:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="93:46" pos:end="93:46"><expr pos:start="93:46" pos:end="93:46"><name pos:start="93:46" pos:end="93:46">s</name></expr></argument>, <argument pos:start="93:49" pos:end="93:70"><expr pos:start="93:49" pos:end="93:70"><sizeof pos:start="93:49" pos:end="93:70">sizeof<argument_list pos:start="93:55" pos:end="93:70">(<argument pos:start="93:56" pos:end="93:69"><expr pos:start="93:56" pos:end="93:69"><name pos:start="93:56" pos:end="93:69">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <for pos:start="99:13" pos:end="113:13">for <control pos:start="99:17" pos:end="99:43">(<init pos:start="99:18" pos:end="99:23"><expr pos:start="99:18" pos:end="99:22"><name pos:start="99:18" pos:end="99:18">i</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</init> <condition pos:start="99:25" pos:end="99:38"><expr pos:start="99:25" pos:end="99:37"><name pos:start="99:25" pos:end="99:25">i</name> <operator pos:start="99:27" pos:end="99:27">&lt;</operator> <name pos:start="99:29" pos:end="99:37">nb_slices</name></expr>;</condition> <incr pos:start="99:40" pos:end="99:42"><expr pos:start="99:40" pos:end="99:42"><name pos:start="99:40" pos:end="99:40">i</name><operator pos:start="99:41" pos:end="99:42">++</operator></expr></incr>)</control> <block pos:start="99:45" pos:end="113:13">{<block_content pos:start="101:17" pos:end="111:77">

                <if_stmt pos:start="101:17" pos:end="103:30"><if pos:start="101:17" pos:end="103:30">if <condition pos:start="101:20" pos:end="101:69">(<expr pos:start="101:21" pos:end="101:68"><call pos:start="101:21" pos:end="101:64"><name pos:start="101:21" pos:end="101:42">init_duplicate_context</name><argument_list pos:start="101:43" pos:end="101:64">(<argument pos:start="101:44" pos:end="101:63"><expr pos:start="101:44" pos:end="101:63"><name pos:start="101:44" pos:end="101:63"><name pos:start="101:44" pos:end="101:44">s</name><operator pos:start="101:45" pos:end="101:46">-&gt;</operator><name pos:start="101:47" pos:end="101:60">thread_context</name><index pos:start="101:61" pos:end="101:63">[<expr pos:start="101:62" pos:end="101:62"><name pos:start="101:62" pos:end="101:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="101:66" pos:end="101:66">&lt;</operator> <literal type="number" pos:start="101:68" pos:end="101:68">0</literal></expr>)</condition><block type="pseudo" pos:start="103:21" pos:end="103:30"><block_content pos:start="103:21" pos:end="103:30">

                    <goto pos:start="103:21" pos:end="103:30">goto <name pos:start="103:26" pos:end="103:29">fail</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="105:21" pos:end="107:73"><expr pos:start="105:21" pos:end="107:72"><name pos:start="105:21" pos:end="105:40"><name pos:start="105:21" pos:end="105:21">s</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:37">thread_context</name><index pos:start="105:38" pos:end="105:40">[<expr pos:start="105:39" pos:end="105:39"><name pos:start="105:39" pos:end="105:39">i</name></expr>]</index></name><operator pos:start="105:41" pos:end="105:42">-&gt;</operator><name pos:start="105:43" pos:end="105:52">start_mb_y</name> <operator pos:start="105:54" pos:end="105:54">=</operator>

                        <operator pos:start="107:25" pos:end="107:25">(</operator><name pos:start="107:26" pos:end="107:37"><name pos:start="107:26" pos:end="107:26">s</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:37">mb_height</name></name> <operator pos:start="107:39" pos:end="107:39">*</operator> <operator pos:start="107:41" pos:end="107:41">(</operator><name pos:start="107:42" pos:end="107:42">i</name><operator pos:start="107:43" pos:end="107:43">)</operator> <operator pos:start="107:45" pos:end="107:45">+</operator> <name pos:start="107:47" pos:end="107:55">nb_slices</name> <operator pos:start="107:57" pos:end="107:57">/</operator> <literal type="number" pos:start="107:59" pos:end="107:59">2</literal><operator pos:start="107:60" pos:end="107:60">)</operator> <operator pos:start="107:62" pos:end="107:62">/</operator> <name pos:start="107:64" pos:end="107:72">nb_slices</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="111:77"><expr pos:start="109:21" pos:end="111:76"><name pos:start="109:21" pos:end="109:40"><name pos:start="109:21" pos:end="109:21">s</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:37">thread_context</name><index pos:start="109:38" pos:end="109:40">[<expr pos:start="109:39" pos:end="109:39"><name pos:start="109:39" pos:end="109:39">i</name></expr>]</index></name><operator pos:start="109:41" pos:end="109:42">-&gt;</operator><name pos:start="109:43" pos:end="109:50">end_mb_y</name>   <operator pos:start="109:54" pos:end="109:54">=</operator>

                        <operator pos:start="111:25" pos:end="111:25">(</operator><name pos:start="111:26" pos:end="111:37"><name pos:start="111:26" pos:end="111:26">s</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:37">mb_height</name></name> <operator pos:start="111:39" pos:end="111:39">*</operator> <operator pos:start="111:41" pos:end="111:41">(</operator><name pos:start="111:42" pos:end="111:42">i</name> <operator pos:start="111:44" pos:end="111:44">+</operator> <literal type="number" pos:start="111:46" pos:end="111:46">1</literal><operator pos:start="111:47" pos:end="111:47">)</operator> <operator pos:start="111:49" pos:end="111:49">+</operator> <name pos:start="111:51" pos:end="111:59">nb_slices</name> <operator pos:start="111:61" pos:end="111:61">/</operator> <literal type="number" pos:start="111:63" pos:end="111:63">2</literal><operator pos:start="111:64" pos:end="111:64">)</operator> <operator pos:start="111:66" pos:end="111:66">/</operator> <name pos:start="111:68" pos:end="111:76">nb_slices</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="115:11" pos:end="125:9">else <block pos:start="115:16" pos:end="125:9">{<block_content pos:start="117:13" pos:end="123:41">

            <if_stmt pos:start="117:13" pos:end="119:26"><if pos:start="117:13" pos:end="119:26">if <condition pos:start="117:16" pos:end="117:46">(<expr pos:start="117:17" pos:end="117:45"><call pos:start="117:17" pos:end="117:41"><name pos:start="117:17" pos:end="117:38">init_duplicate_context</name><argument_list pos:start="117:39" pos:end="117:41">(<argument pos:start="117:40" pos:end="117:40"><expr pos:start="117:40" pos:end="117:40"><name pos:start="117:40" pos:end="117:40">s</name></expr></argument>)</argument_list></call> <operator pos:start="117:43" pos:end="117:43">&lt;</operator> <literal type="number" pos:start="117:45" pos:end="117:45">0</literal></expr>)</condition><block type="pseudo" pos:start="119:17" pos:end="119:26"><block_content pos:start="119:17" pos:end="119:26">

                <goto pos:start="119:17" pos:end="119:26">goto <name pos:start="119:22" pos:end="119:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:30"><expr pos:start="121:13" pos:end="121:29"><name pos:start="121:13" pos:end="121:25"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:25">start_mb_y</name></name> <operator pos:start="121:27" pos:end="121:27">=</operator> <literal type="number" pos:start="121:29" pos:end="121:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:41"><expr pos:start="123:13" pos:end="123:40"><name pos:start="123:13" pos:end="123:23"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:23">end_mb_y</name></name>   <operator pos:start="123:27" pos:end="123:27">=</operator> <name pos:start="123:29" pos:end="123:40"><name pos:start="123:29" pos:end="123:29">s</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:40">mb_height</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:43"><expr pos:start="127:9" pos:end="127:42"><name pos:start="127:9" pos:end="127:30"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:30">slice_context_count</name></name> <operator pos:start="127:32" pos:end="127:32">=</operator> <name pos:start="127:34" pos:end="127:42">nb_slices</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="133:5" pos:end="133:13">return <expr pos:start="133:12" pos:end="133:12"><literal type="number" pos:start="133:12" pos:end="133:12">0</literal></expr>;</return>

 <label pos:start="135:2" pos:end="135:6"><name pos:start="135:2" pos:end="135:5">fail</name>:</label>

    <expr_stmt pos:start="137:5" pos:end="137:25"><expr pos:start="137:5" pos:end="137:24"><call pos:start="137:5" pos:end="137:24"><name pos:start="137:5" pos:end="137:21">ff_MPV_common_end</name><argument_list pos:start="137:22" pos:end="137:24">(<argument pos:start="137:23" pos:end="137:23"><expr pos:start="137:23" pos:end="137:23"><name pos:start="137:23" pos:end="137:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="139:5" pos:end="139:15">return <expr pos:start="139:12" pos:end="139:14"><name pos:start="139:12" pos:end="139:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
