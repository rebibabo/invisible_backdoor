<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13698.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">pcx_palette</name><parameter_list pos:start="1:24" pos:end="3:44">(<parameter pos:start="1:25" pos:end="1:43"><decl pos:start="1:25" pos:end="1:43"><type pos:start="1:25" pos:end="1:43"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:37">uint8_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier><modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">src</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">uint32_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">dst</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:43"><decl pos:start="3:25" pos:end="3:43"><type pos:start="3:25" pos:end="3:43"><name pos:start="3:25" pos:end="3:32">unsigned</name> <name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:43">pallen</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="19:1">{<block_content pos:start="7:5" pos:end="17:54">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:18">i</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="13:42">for <control pos:start="11:9" pos:end="11:32">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:27"><expr pos:start="11:17" pos:end="11:26"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:26">pallen</name></expr>;</condition> <incr pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><name pos:start="11:29" pos:end="11:29">i</name><operator pos:start="11:30" pos:end="11:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="13:9" pos:end="13:42"><block_content pos:start="13:9" pos:end="13:42">

        <expr_stmt pos:start="13:9" pos:end="13:42"><expr pos:start="13:9" pos:end="13:41"><operator pos:start="13:9" pos:end="13:9">*</operator><name pos:start="13:10" pos:end="13:12">dst</name><operator pos:start="13:13" pos:end="13:14">++</operator> <operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:41"><name pos:start="13:18" pos:end="13:36">bytestream_get_be24</name><argument_list pos:start="13:37" pos:end="13:41">(<argument pos:start="13:38" pos:end="13:40"><expr pos:start="13:38" pos:end="13:40"><name pos:start="13:38" pos:end="13:40">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <if_stmt pos:start="15:5" pos:end="17:54"><if pos:start="15:5" pos:end="17:54">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:14">pallen</name> <operator pos:start="15:16" pos:end="15:16">&lt;</operator> <literal type="number" pos:start="15:18" pos:end="15:20">256</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:54"><block_content pos:start="17:9" pos:end="17:54">

        <expr_stmt pos:start="17:9" pos:end="17:54"><expr pos:start="17:9" pos:end="17:53"><call pos:start="17:9" pos:end="17:53"><name pos:start="17:9" pos:end="17:14">memset</name><argument_list pos:start="17:15" pos:end="17:53">(<argument pos:start="17:16" pos:end="17:18"><expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">dst</name></expr></argument>, <argument pos:start="17:21" pos:end="17:21"><expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr></argument>, <argument pos:start="17:24" pos:end="17:52"><expr pos:start="17:24" pos:end="17:52"><operator pos:start="17:24" pos:end="17:24">(</operator><literal type="number" pos:start="17:25" pos:end="17:29">256</literal> <operator pos:start="17:29" pos:end="17:29">-</operator> <name pos:start="17:31" pos:end="17:36">pallen</name><operator pos:start="17:37" pos:end="17:37">)</operator> <operator pos:start="17:39" pos:end="17:39">*</operator> <sizeof pos:start="17:41" pos:end="17:52">sizeof<argument_list pos:start="17:47" pos:end="17:52">(<argument pos:start="17:48" pos:end="17:51"><expr pos:start="17:48" pos:end="17:51"><operator pos:start="17:48" pos:end="17:48">*</operator><name pos:start="17:49" pos:end="17:51">dst</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
