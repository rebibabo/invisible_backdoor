<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7738.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">grow_refcount_table</name><parameter_list pos:start="1:31" pos:end="1:66">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:65">min_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:32">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:73"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:22">new_table_size</name></decl>, <decl pos:start="7:25" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:39">new_table_size2</name></decl>, <decl pos:start="7:42" pos:end="7:64"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:42" pos:end="7:64">refcount_table_clusters</name></decl>, <decl pos:start="7:67" pos:end="7:67"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:67" pos:end="7:67">i</name></decl>, <decl pos:start="7:70" pos:end="7:72"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:70" pos:end="7:72">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint64_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:23">new_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:24">table_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:16">data</name><index pos:start="13:17" pos:end="13:20">[<expr pos:start="13:18" pos:end="13:19"><literal type="number" pos:start="13:18" pos:end="13:19">12</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:22">old_table_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:28">old_table_offset</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:43">(<expr pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:16">min_size</name> <operator pos:start="21:18" pos:end="21:19">&lt;=</operator> <name pos:start="21:21" pos:end="21:42"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:42">refcount_table_size</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <comment type="block" pos:start="25:5" pos:end="25:32">/* compute new table size */</comment>

    <expr_stmt pos:start="27:5" pos:end="30:0"><expr pos:start="27:5" pos:end="27:58"><name pos:start="27:5" pos:end="27:18">new_table_size</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:58"><name pos:start="27:22" pos:end="27:45">next_refcount_table_size</name><argument_list pos:start="27:46" pos:end="27:58">(<argument pos:start="27:47" pos:end="27:47"><expr pos:start="27:47" pos:end="27:47"><name pos:start="27:47" pos:end="27:47">s</name></expr></argument>, <argument pos:start="27:50" pos:end="27:57"><expr pos:start="27:50" pos:end="27:57"><name pos:start="27:50" pos:end="27:57">min_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="29:1" pos:end="29:19">#<cpp:directive pos:start="29:2" pos:end="29:6">ifdef</cpp:directive> <name pos:start="29:8" pos:end="29:19">DEBUG_ALLOC2</name></cpp:ifdef>

    <expr_stmt pos:start="31:5" pos:end="38:0"><expr pos:start="31:5" pos:end="35:26"><call pos:start="31:5" pos:end="35:26"><name pos:start="31:5" pos:end="31:10">printf</name><argument_list pos:start="31:11" pos:end="35:26">(<argument pos:start="31:12" pos:end="31:48"><expr pos:start="31:12" pos:end="31:48"><literal type="string" pos:start="31:12" pos:end="31:48">"grow_refcount_table from %d to %d\n"</literal></expr></argument>,

           <argument pos:start="33:12" pos:end="33:33"><expr pos:start="33:12" pos:end="33:33"><name pos:start="33:12" pos:end="33:33"><name pos:start="33:12" pos:end="33:12">s</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:33">refcount_table_size</name></name></expr></argument>,

           <argument pos:start="35:12" pos:end="35:25"><expr pos:start="35:12" pos:end="35:25"><name pos:start="35:12" pos:end="35:25">new_table_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="39:5" pos:end="39:56"><expr pos:start="39:5" pos:end="39:55"><name pos:start="39:5" pos:end="39:19">new_table_size2</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:36">new_table_size</name> <operator pos:start="39:38" pos:end="39:38">*</operator> <sizeof pos:start="39:40" pos:end="39:55">sizeof<argument_list pos:start="39:46" pos:end="39:55">(<argument pos:start="39:47" pos:end="39:54"><expr pos:start="39:47" pos:end="39:54"><name pos:start="39:47" pos:end="39:54">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:46"><expr pos:start="41:5" pos:end="41:45"><name pos:start="41:5" pos:end="41:13">new_table</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:45"><name pos:start="41:17" pos:end="41:28">qemu_mallocz</name><argument_list pos:start="41:29" pos:end="41:45">(<argument pos:start="41:30" pos:end="41:44"><expr pos:start="41:30" pos:end="41:44"><name pos:start="41:30" pos:end="41:44">new_table_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:54"><expr pos:start="43:5" pos:end="45:53"><call pos:start="43:5" pos:end="45:53"><name pos:start="43:5" pos:end="43:10">memcpy</name><argument_list pos:start="43:11" pos:end="45:53">(<argument pos:start="43:12" pos:end="43:20"><expr pos:start="43:12" pos:end="43:20"><name pos:start="43:12" pos:end="43:20">new_table</name></expr></argument>, <argument pos:start="43:23" pos:end="43:39"><expr pos:start="43:23" pos:end="43:39"><name pos:start="43:23" pos:end="43:39"><name pos:start="43:23" pos:end="43:23">s</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:39">refcount_table</name></name></expr></argument>,

           <argument pos:start="45:12" pos:end="45:52"><expr pos:start="45:12" pos:end="45:52"><name pos:start="45:12" pos:end="45:33"><name pos:start="45:12" pos:end="45:12">s</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:33">refcount_table_size</name></name> <operator pos:start="45:35" pos:end="45:35">*</operator> <sizeof pos:start="45:37" pos:end="45:52">sizeof<argument_list pos:start="45:43" pos:end="45:52">(<argument pos:start="45:44" pos:end="45:51"><expr pos:start="45:44" pos:end="45:51"><name pos:start="45:44" pos:end="45:51">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="47:5" pos:end="49:36">for<control pos:start="47:8" pos:end="47:47">(<init pos:start="47:9" pos:end="47:14"><expr pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:9">i</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <literal type="number" pos:start="47:13" pos:end="47:13">0</literal></expr>;</init> <condition pos:start="47:16" pos:end="47:42"><expr pos:start="47:16" pos:end="47:41"><name pos:start="47:16" pos:end="47:16">i</name> <operator pos:start="47:18" pos:end="47:18">&lt;</operator> <name pos:start="47:20" pos:end="47:41"><name pos:start="47:20" pos:end="47:20">s</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:41">refcount_table_size</name></name></expr>;</condition> <incr pos:start="47:44" pos:end="47:46"><expr pos:start="47:44" pos:end="47:46"><name pos:start="47:44" pos:end="47:44">i</name><operator pos:start="47:45" pos:end="47:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:9" pos:end="49:36"><block_content pos:start="49:9" pos:end="49:36">

        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><call pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:20">cpu_to_be64s</name><argument_list pos:start="49:21" pos:end="49:35">(<argument pos:start="49:22" pos:end="49:34"><expr pos:start="49:22" pos:end="49:34"><operator pos:start="49:22" pos:end="49:22">&amp;</operator><name pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:31">new_table</name><index pos:start="49:32" pos:end="49:34">[<expr pos:start="49:33" pos:end="49:33"><name pos:start="49:33" pos:end="49:33">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <comment type="block" pos:start="51:5" pos:end="51:68">/* Note: we cannot update the refcount now to avoid recursion */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:61"><expr pos:start="53:5" pos:end="53:60"><name pos:start="53:5" pos:end="53:16">table_offset</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:60"><name pos:start="53:20" pos:end="53:39">alloc_clusters_noref</name><argument_list pos:start="53:40" pos:end="53:60">(<argument pos:start="53:41" pos:end="53:42"><expr pos:start="53:41" pos:end="53:42"><name pos:start="53:41" pos:end="53:42">bs</name></expr></argument>, <argument pos:start="53:45" pos:end="53:59"><expr pos:start="53:45" pos:end="53:59"><name pos:start="53:45" pos:end="53:59">new_table_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:71"><expr pos:start="55:5" pos:end="55:70"><name pos:start="55:5" pos:end="55:7">ret</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:70"><name pos:start="55:11" pos:end="55:21">bdrv_pwrite</name><argument_list pos:start="55:22" pos:end="55:70">(<argument pos:start="55:23" pos:end="55:27"><expr pos:start="55:23" pos:end="55:27"><name pos:start="55:23" pos:end="55:27"><name pos:start="55:23" pos:end="55:23">s</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:27">hd</name></name></expr></argument>, <argument pos:start="55:30" pos:end="55:41"><expr pos:start="55:30" pos:end="55:41"><name pos:start="55:30" pos:end="55:41">table_offset</name></expr></argument>, <argument pos:start="55:44" pos:end="55:52"><expr pos:start="55:44" pos:end="55:52"><name pos:start="55:44" pos:end="55:52">new_table</name></expr></argument>, <argument pos:start="55:55" pos:end="55:69"><expr pos:start="55:55" pos:end="55:69"><name pos:start="55:55" pos:end="55:69">new_table_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="59:18"><if pos:start="57:5" pos:end="59:18">if <condition pos:start="57:8" pos:end="57:31">(<expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:14">!=</operator> <name pos:start="57:16" pos:end="57:30">new_table_size2</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:18"><block_content pos:start="59:9" pos:end="59:18">

        <goto pos:start="59:9" pos:end="59:18">goto <name pos:start="59:14" pos:end="59:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <for pos:start="61:5" pos:end="63:36">for<control pos:start="61:8" pos:end="61:47">(<init pos:start="61:9" pos:end="61:14"><expr pos:start="61:9" pos:end="61:13"><name pos:start="61:9" pos:end="61:9">i</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <literal type="number" pos:start="61:13" pos:end="61:13">0</literal></expr>;</init> <condition pos:start="61:16" pos:end="61:42"><expr pos:start="61:16" pos:end="61:41"><name pos:start="61:16" pos:end="61:16">i</name> <operator pos:start="61:18" pos:end="61:18">&lt;</operator> <name pos:start="61:20" pos:end="61:41"><name pos:start="61:20" pos:end="61:20">s</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:41">refcount_table_size</name></name></expr>;</condition> <incr pos:start="61:44" pos:end="61:46"><expr pos:start="61:44" pos:end="61:46"><name pos:start="61:44" pos:end="61:44">i</name><operator pos:start="61:45" pos:end="61:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="63:9" pos:end="63:36"><block_content pos:start="63:9" pos:end="63:36">

        <expr_stmt pos:start="63:9" pos:end="63:36"><expr pos:start="63:9" pos:end="63:35"><call pos:start="63:9" pos:end="63:35"><name pos:start="63:9" pos:end="63:20">be64_to_cpus</name><argument_list pos:start="63:21" pos:end="63:35">(<argument pos:start="63:22" pos:end="63:34"><expr pos:start="63:22" pos:end="63:34"><operator pos:start="63:22" pos:end="63:22">&amp;</operator><name pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:31">new_table</name><index pos:start="63:32" pos:end="63:34">[<expr pos:start="63:33" pos:end="63:33"><name pos:start="63:33" pos:end="63:33">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="67:5" pos:end="67:48"><expr pos:start="67:5" pos:end="67:47"><call pos:start="67:5" pos:end="67:47"><name pos:start="67:5" pos:end="67:16">cpu_to_be64w</name><argument_list pos:start="67:17" pos:end="67:47">(<argument pos:start="67:18" pos:end="67:32"><expr pos:start="67:18" pos:end="67:32"><operator pos:start="67:18" pos:end="67:18">(</operator><name pos:start="67:19" pos:end="67:26">uint64_t</name><operator pos:start="67:27" pos:end="67:27">*</operator><operator pos:start="67:28" pos:end="67:28">)</operator><name pos:start="67:29" pos:end="67:32">data</name></expr></argument>, <argument pos:start="67:35" pos:end="67:46"><expr pos:start="67:35" pos:end="67:46"><name pos:start="67:35" pos:end="67:46">table_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:65"><expr pos:start="69:5" pos:end="69:64"><call pos:start="69:5" pos:end="69:64"><name pos:start="69:5" pos:end="69:16">cpu_to_be32w</name><argument_list pos:start="69:17" pos:end="69:64">(<argument pos:start="69:18" pos:end="69:38"><expr pos:start="69:18" pos:end="69:38"><operator pos:start="69:18" pos:end="69:18">(</operator><name pos:start="69:19" pos:end="69:26">uint32_t</name><operator pos:start="69:27" pos:end="69:27">*</operator><operator pos:start="69:28" pos:end="69:28">)</operator><operator pos:start="69:29" pos:end="69:29">(</operator><name pos:start="69:30" pos:end="69:33">data</name> <operator pos:start="69:35" pos:end="69:35">+</operator> <literal type="number" pos:start="69:37" pos:end="69:37">8</literal><operator pos:start="69:38" pos:end="69:38">)</operator></expr></argument>, <argument pos:start="69:41" pos:end="69:63"><expr pos:start="69:41" pos:end="69:63"><name pos:start="69:41" pos:end="69:63">refcount_table_clusters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="73:40"><expr pos:start="71:5" pos:end="73:39"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="73:39"><name pos:start="71:11" pos:end="71:21">bdrv_pwrite</name><argument_list pos:start="71:22" pos:end="73:39">(<argument pos:start="71:23" pos:end="71:27"><expr pos:start="71:23" pos:end="71:27"><name pos:start="71:23" pos:end="71:27"><name pos:start="71:23" pos:end="71:23">s</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:27">hd</name></name></expr></argument>, <argument pos:start="71:30" pos:end="71:72"><expr pos:start="71:30" pos:end="71:72"><call pos:start="71:30" pos:end="71:72"><name pos:start="71:30" pos:end="71:37">offsetof</name><argument_list pos:start="71:38" pos:end="71:72">(<argument pos:start="71:39" pos:end="71:48"><expr pos:start="71:39" pos:end="71:48"><name pos:start="71:39" pos:end="71:48">QCowHeader</name></expr></argument>, <argument pos:start="71:51" pos:end="71:71"><expr pos:start="71:51" pos:end="71:71"><name pos:start="71:51" pos:end="71:71">refcount_table_offset</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="73:21" pos:end="73:24"><expr pos:start="73:21" pos:end="73:24"><name pos:start="73:21" pos:end="73:24">data</name></expr></argument>, <argument pos:start="73:27" pos:end="73:38"><expr pos:start="73:27" pos:end="73:38"><sizeof pos:start="73:27" pos:end="73:38">sizeof<argument_list pos:start="73:33" pos:end="73:38">(<argument pos:start="73:34" pos:end="73:37"><expr pos:start="73:34" pos:end="73:37"><name pos:start="73:34" pos:end="73:37">data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:28">(<expr pos:start="75:9" pos:end="75:27"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:14">!=</operator> <sizeof pos:start="75:16" pos:end="75:27">sizeof<argument_list pos:start="75:22" pos:end="75:27">(<argument pos:start="75:23" pos:end="75:26"><expr pos:start="75:23" pos:end="75:26"><name pos:start="75:23" pos:end="75:26">data</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="75:30" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:18">

        <goto pos:start="77:9" pos:end="77:18">goto <name pos:start="77:14" pos:end="77:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:33"><expr pos:start="83:5" pos:end="83:32"><call pos:start="83:5" pos:end="83:32"><name pos:start="83:5" pos:end="83:13">qemu_free</name><argument_list pos:start="83:14" pos:end="83:32">(<argument pos:start="83:15" pos:end="83:31"><expr pos:start="83:15" pos:end="83:31"><name pos:start="83:15" pos:end="83:31"><name pos:start="83:15" pos:end="83:15">s</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:31">refcount_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:48"><expr pos:start="85:5" pos:end="85:47"><name pos:start="85:5" pos:end="85:20">old_table_offset</name> <operator pos:start="85:22" pos:end="85:22">=</operator> <name pos:start="85:24" pos:end="85:47"><name pos:start="85:24" pos:end="85:24">s</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:47">refcount_table_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:44"><expr pos:start="87:5" pos:end="87:43"><name pos:start="87:5" pos:end="87:18">old_table_size</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <name pos:start="87:22" pos:end="87:43"><name pos:start="87:22" pos:end="87:22">s</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:43">refcount_table_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:34"><expr pos:start="89:5" pos:end="89:33"><name pos:start="89:5" pos:end="89:21"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:21">refcount_table</name></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:33">new_table</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:44"><expr pos:start="91:5" pos:end="91:43"><name pos:start="91:5" pos:end="91:26"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:26">refcount_table_size</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:43">new_table_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:44"><expr pos:start="93:5" pos:end="93:43"><name pos:start="93:5" pos:end="93:28"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:28">refcount_table_offset</name></name> <operator pos:start="93:30" pos:end="93:30">=</operator> <name pos:start="93:32" pos:end="93:43">table_offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:58"><expr pos:start="97:5" pos:end="97:57"><call pos:start="97:5" pos:end="97:57"><name pos:start="97:5" pos:end="97:19">update_refcount</name><argument_list pos:start="97:20" pos:end="97:57">(<argument pos:start="97:21" pos:end="97:22"><expr pos:start="97:21" pos:end="97:22"><name pos:start="97:21" pos:end="97:22">bs</name></expr></argument>, <argument pos:start="97:25" pos:end="97:36"><expr pos:start="97:25" pos:end="97:36"><name pos:start="97:25" pos:end="97:36">table_offset</name></expr></argument>, <argument pos:start="97:39" pos:end="97:53"><expr pos:start="97:39" pos:end="97:53"><name pos:start="97:39" pos:end="97:53">new_table_size2</name></expr></argument>, <argument pos:start="97:56" pos:end="97:56"><expr pos:start="97:56" pos:end="97:56"><literal type="number" pos:start="97:56" pos:end="97:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:81"><expr pos:start="99:5" pos:end="99:80"><call pos:start="99:5" pos:end="99:80"><name pos:start="99:5" pos:end="99:23">qcow2_free_clusters</name><argument_list pos:start="99:24" pos:end="99:80">(<argument pos:start="99:25" pos:end="99:26"><expr pos:start="99:25" pos:end="99:26"><name pos:start="99:25" pos:end="99:26">bs</name></expr></argument>, <argument pos:start="99:29" pos:end="99:44"><expr pos:start="99:29" pos:end="99:44"><name pos:start="99:29" pos:end="99:44">old_table_offset</name></expr></argument>, <argument pos:start="99:47" pos:end="99:79"><expr pos:start="99:47" pos:end="99:79"><name pos:start="99:47" pos:end="99:60">old_table_size</name> <operator pos:start="99:62" pos:end="99:62">*</operator> <sizeof pos:start="99:64" pos:end="99:79">sizeof<argument_list pos:start="99:70" pos:end="99:79">(<argument pos:start="99:71" pos:end="99:78"><expr pos:start="99:71" pos:end="99:78"><name pos:start="99:71" pos:end="99:78">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</return>

 <label pos:start="103:2" pos:end="103:6"><name pos:start="103:2" pos:end="103:5">fail</name>:</label>

    <expr_stmt pos:start="105:5" pos:end="105:25"><expr pos:start="105:5" pos:end="105:24"><call pos:start="105:5" pos:end="105:24"><name pos:start="105:5" pos:end="105:13">qemu_free</name><argument_list pos:start="105:14" pos:end="105:24">(<argument pos:start="105:15" pos:end="105:23"><expr pos:start="105:15" pos:end="105:23"><name pos:start="105:15" pos:end="105:23">new_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="107:5" pos:end="107:32">return <expr pos:start="107:12" pos:end="107:31"><ternary pos:start="107:12" pos:end="107:31"><condition pos:start="107:12" pos:end="107:20"><expr pos:start="107:12" pos:end="107:18"><name pos:start="107:12" pos:end="107:14">ret</name> <operator pos:start="107:16" pos:end="107:16">&lt;</operator> <literal type="number" pos:start="107:18" pos:end="107:18">0</literal></expr> ?</condition><then pos:start="107:22" pos:end="107:24"> <expr pos:start="107:22" pos:end="107:24"><name pos:start="107:22" pos:end="107:24">ret</name></expr> </then><else pos:start="107:26" pos:end="107:31">: <expr pos:start="107:28" pos:end="107:31"><operator pos:start="107:28" pos:end="107:28">-</operator><name pos:start="107:29" pos:end="107:31">EIO</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
