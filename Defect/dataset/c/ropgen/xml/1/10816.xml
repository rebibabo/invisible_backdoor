<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10816.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">drive_add</name><parameter_list pos:start="1:21" pos:end="1:60">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:37"><specifier pos:start="1:22" pos:end="1:26">const</specifier> <name pos:start="1:28" pos:end="1:31">char</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:37">file</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">fmt</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:59"><decl pos:start="1:57" pos:end="1:59"><type pos:start="1:57" pos:end="1:59"><modifier pos:start="1:57" pos:end="1:59">...</modifier></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:17">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">va_list</name></type> <name pos:start="5:13" pos:end="5:14">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">index</name> <init pos:start="7:15" pos:end="7:40">= <expr pos:start="7:17" pos:end="7:40"><call pos:start="7:17" pos:end="7:40"><name pos:start="7:17" pos:end="7:38">drive_opt_get_free_idx</name><argument_list pos:start="7:39" pos:end="7:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:51">(<expr pos:start="11:9" pos:end="11:50"><name pos:start="11:9" pos:end="11:21">nb_drives_opt</name> <operator pos:start="11:23" pos:end="11:24">&gt;=</operator> <name pos:start="11:26" pos:end="11:35">MAX_DRIVES</name> <operator pos:start="11:37" pos:end="11:38">||</operator> <name pos:start="11:40" pos:end="11:44">index</name> <operator pos:start="11:46" pos:end="11:47">==</operator> <operator pos:start="11:49" pos:end="11:49">-</operator><literal type="number" pos:start="11:50" pos:end="11:50">1</literal></expr>)</condition> <block pos:start="11:53" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:16">

        <expr_stmt pos:start="13:9" pos:end="13:51"><expr pos:start="13:9" pos:end="13:50"><call pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:15">fprintf</name><argument_list pos:start="13:16" pos:end="13:50">(<argument pos:start="13:17" pos:end="13:22"><expr pos:start="13:17" pos:end="13:22"><name pos:start="13:17" pos:end="13:22">stderr</name></expr></argument>, <argument pos:start="13:25" pos:end="13:49"><expr pos:start="13:25" pos:end="13:49"><literal type="string" pos:start="13:25" pos:end="13:49">"qemu: too many drives\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:16"><expr pos:start="15:9" pos:end="15:15"><call pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:12">exit</name><argument_list pos:start="15:13" pos:end="15:15">(<argument pos:start="15:14" pos:end="15:14"><expr pos:start="15:14" pos:end="15:14"><literal type="number" pos:start="15:14" pos:end="15:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:14">drives_opt</name><index pos:start="21:15" pos:end="21:21">[<expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">index</name></expr>]</index></name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:26">file</name> <operator pos:start="21:28" pos:end="21:28">=</operator> <name pos:start="21:30" pos:end="21:33">file</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><call pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:12">va_start</name><argument_list pos:start="23:13" pos:end="23:21">(<argument pos:start="23:14" pos:end="23:15"><expr pos:start="23:14" pos:end="23:15"><name pos:start="23:14" pos:end="23:15">ap</name></expr></argument>, <argument pos:start="23:18" pos:end="23:20"><expr pos:start="23:18" pos:end="23:20"><name pos:start="23:18" pos:end="23:20">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:50"><expr pos:start="25:5" pos:end="27:49"><call pos:start="25:5" pos:end="27:49"><name pos:start="25:5" pos:end="25:13">vsnprintf</name><argument_list pos:start="25:14" pos:end="27:49">(<argument pos:start="25:15" pos:end="25:35"><expr pos:start="25:15" pos:end="25:35"><name pos:start="25:15" pos:end="25:31"><name pos:start="25:15" pos:end="25:24">drives_opt</name><index pos:start="25:25" pos:end="25:31">[<expr pos:start="25:26" pos:end="25:30"><name pos:start="25:26" pos:end="25:30">index</name></expr>]</index></name><operator pos:start="25:32" pos:end="25:32">.</operator><name pos:start="25:33" pos:end="25:35">opt</name></expr></argument>,

              <argument pos:start="27:15" pos:end="27:39"><expr pos:start="27:15" pos:end="27:39"><sizeof pos:start="27:15" pos:end="27:39">sizeof<argument_list pos:start="27:21" pos:end="27:39">(<argument pos:start="27:22" pos:end="27:38"><expr pos:start="27:22" pos:end="27:38"><name pos:start="27:22" pos:end="27:34"><name pos:start="27:22" pos:end="27:31">drives_opt</name><index pos:start="27:32" pos:end="27:34">[<expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">0</literal></expr>]</index></name><operator pos:start="27:35" pos:end="27:35">.</operator><name pos:start="27:36" pos:end="27:38">opt</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:42" pos:end="27:44"><expr pos:start="27:42" pos:end="27:44"><name pos:start="27:42" pos:end="27:44">fmt</name></expr></argument>, <argument pos:start="27:47" pos:end="27:48"><expr pos:start="27:47" pos:end="27:48"><name pos:start="27:47" pos:end="27:48">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:15"><expr pos:start="29:5" pos:end="29:14"><call pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:10">va_end</name><argument_list pos:start="29:11" pos:end="29:14">(<argument pos:start="29:12" pos:end="29:13"><expr pos:start="29:12" pos:end="29:13"><name pos:start="29:12" pos:end="29:13">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:20"><expr pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:17">nb_drives_opt</name><operator pos:start="33:18" pos:end="33:19">++</operator></expr>;</expr_stmt>

    <return pos:start="35:5" pos:end="35:17">return <expr pos:start="35:12" pos:end="35:16"><name pos:start="35:12" pos:end="35:16">index</name></expr>;</return>

</block_content>}</block></function>
</unit>
