<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16217.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18"><name pos:start="1:8" pos:end="1:13">struct</name> <name pos:start="1:15" pos:end="1:18">glfs</name></name> <modifier pos:start="1:20" pos:end="1:20">*</modifier></type><name pos:start="1:21" pos:end="1:37">qemu_gluster_init</name><parameter_list pos:start="1:38" pos:end="5:67">(<parameter pos:start="1:39" pos:end="1:67"><decl pos:start="1:39" pos:end="1:67"><type pos:start="1:39" pos:end="1:67"><name pos:start="1:39" pos:end="1:60">BlockdevOptionsGluster</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">gconf</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:58"><decl pos:start="3:39" pos:end="3:58"><type pos:start="3:39" pos:end="3:58"><specifier pos:start="3:39" pos:end="3:43">const</specifier> <name pos:start="3:45" pos:end="3:48">char</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:58">filename</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:52"><decl pos:start="5:39" pos:end="5:52"><type pos:start="5:39" pos:end="5:52"><name pos:start="5:39" pos:end="5:43">QDict</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:52">options</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:66"><decl pos:start="5:55" pos:end="5:66"><type pos:start="5:55" pos:end="5:66"><name pos:start="5:55" pos:end="5:59">Error</name> <modifier pos:start="5:61" pos:end="5:61">*</modifier><modifier pos:start="5:62" pos:end="5:62">*</modifier></type><name pos:start="5:63" pos:end="5:66">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="67:1">{<block_content pos:start="9:5" pos:end="65:47">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="61:5"><if pos:start="11:5" pos:end="29:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">filename</name></expr>)</condition> <block pos:start="11:19" pos:end="29:5">{<block_content pos:start="13:9" pos:end="27:9">

        <expr_stmt pos:start="13:9" pos:end="13:54"><expr pos:start="13:9" pos:end="13:53"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:53"><name pos:start="13:15" pos:end="13:36">qemu_gluster_parse_uri</name><argument_list pos:start="13:37" pos:end="13:53">(<argument pos:start="13:38" pos:end="13:42"><expr pos:start="13:38" pos:end="13:42"><name pos:start="13:38" pos:end="13:42">gconf</name></expr></argument>, <argument pos:start="13:45" pos:end="13:52"><expr pos:start="13:45" pos:end="13:52"><name pos:start="13:45" pos:end="13:52">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="27:9"><if pos:start="15:9" pos:end="27:9">if <condition pos:start="15:12" pos:end="15:20">(<expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:15">ret</name> <operator pos:start="15:17" pos:end="15:17">&lt;</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>)</condition> <block pos:start="15:22" pos:end="27:9">{<block_content pos:start="17:13" pos:end="25:24">

            <expr_stmt pos:start="17:13" pos:end="17:44"><expr pos:start="17:13" pos:end="17:43"><call pos:start="17:13" pos:end="17:43"><name pos:start="17:13" pos:end="17:22">error_setg</name><argument_list pos:start="17:23" pos:end="17:43">(<argument pos:start="17:24" pos:end="17:27"><expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">errp</name></expr></argument>, <argument pos:start="17:30" pos:end="17:42"><expr pos:start="17:30" pos:end="17:42"><literal type="string" pos:start="17:30" pos:end="17:42">"invalid URI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="21:80"><expr pos:start="19:13" pos:end="21:79"><call pos:start="19:13" pos:end="21:79"><name pos:start="19:13" pos:end="19:29">error_append_hint</name><argument_list pos:start="19:30" pos:end="21:79">(<argument pos:start="19:31" pos:end="19:34"><expr pos:start="19:31" pos:end="19:34"><name pos:start="19:31" pos:end="19:34">errp</name></expr></argument>, <argument pos:start="19:37" pos:end="21:78"><expr pos:start="19:37" pos:end="21:78"><literal type="string" pos:start="19:37" pos:end="19:72">"Usage: file=gluster[+transport]://"</literal>

                                    <literal type="string" pos:start="21:37" pos:end="21:78">"[host[:port]]/volume/path[?socket=...]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:25"><expr pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:17">errno</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <operator pos:start="23:21" pos:end="23:21">-</operator><name pos:start="23:22" pos:end="23:24">ret</name></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:24">return <expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="61:5">else <block pos:start="29:12" pos:end="61:5">{<block_content pos:start="31:9" pos:end="57:9">

        <expr_stmt pos:start="31:9" pos:end="31:60"><expr pos:start="31:9" pos:end="31:59"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:59"><name pos:start="31:15" pos:end="31:37">qemu_gluster_parse_json</name><argument_list pos:start="31:38" pos:end="31:59">(<argument pos:start="31:39" pos:end="31:43"><expr pos:start="31:39" pos:end="31:43"><name pos:start="31:39" pos:end="31:43">gconf</name></expr></argument>, <argument pos:start="31:46" pos:end="31:52"><expr pos:start="31:46" pos:end="31:52"><name pos:start="31:46" pos:end="31:52">options</name></expr></argument>, <argument pos:start="31:55" pos:end="31:58"><expr pos:start="31:55" pos:end="31:58"><name pos:start="31:55" pos:end="31:58">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="57:9"><if pos:start="33:9" pos:end="57:9">if <condition pos:start="33:12" pos:end="33:20">(<expr pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:17">&lt;</operator> <literal type="number" pos:start="33:19" pos:end="33:19">0</literal></expr>)</condition> <block pos:start="33:22" pos:end="57:9">{<block_content pos:start="35:13" pos:end="55:24">

            <expr_stmt pos:start="35:13" pos:end="51:35"><expr pos:start="35:13" pos:end="51:34"><call pos:start="35:13" pos:end="51:34"><name pos:start="35:13" pos:end="35:29">error_append_hint</name><argument_list pos:start="35:30" pos:end="51:34">(<argument pos:start="35:31" pos:end="35:34"><expr pos:start="35:31" pos:end="35:34"><name pos:start="35:31" pos:end="35:34">errp</name></expr></argument>, <argument pos:start="35:37" pos:end="51:33"><expr pos:start="35:37" pos:end="51:33"><literal type="string" pos:start="35:37" pos:end="35:45">"Usage: "</literal>

                             <literal type="string" pos:start="37:30" pos:end="37:71">"-drive driver=qcow2,file.driver=gluster,"</literal>

                             <literal type="string" pos:start="39:30" pos:end="39:74">"file.volume=testvol,file.path=/path/a.qcow2"</literal>

                             <literal type="string" pos:start="41:30" pos:end="41:70">"[,file.debug=9],file.server.0.type=tcp,"</literal>

                             <literal type="string" pos:start="43:30" pos:end="43:58">"file.server.0.host=1.2.3.4,"</literal>

                             <literal type="string" pos:start="45:30" pos:end="45:56">"file.server.0.port=24007,"</literal>

                             <literal type="string" pos:start="47:30" pos:end="47:60">"file.server.1.transport=unix,"</literal>

                             <literal type="string" pos:start="49:30" pos:end="49:80">"file.server.1.socket=/var/run/glusterd.socket ..."</literal>

                             <literal type="string" pos:start="51:30" pos:end="51:33">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:25"><expr pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:17">errno</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <operator pos:start="53:21" pos:end="53:21">-</operator><name pos:start="53:22" pos:end="53:24">ret</name></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:24">return <expr pos:start="55:20" pos:end="55:23"><name pos:start="55:20" pos:end="55:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></else></if_stmt>



    <return pos:start="65:5" pos:end="65:47">return <expr pos:start="65:12" pos:end="65:46"><call pos:start="65:12" pos:end="65:46"><name pos:start="65:12" pos:end="65:33">qemu_gluster_glfs_init</name><argument_list pos:start="65:34" pos:end="65:46">(<argument pos:start="65:35" pos:end="65:39"><expr pos:start="65:35" pos:end="65:39"><name pos:start="65:35" pos:end="65:39">gconf</name></expr></argument>, <argument pos:start="65:42" pos:end="65:45"><expr pos:start="65:42" pos:end="65:45"><name pos:start="65:42" pos:end="65:45">errp</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
