<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16355.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">bdrv_file_open</name><parameter_list pos:start="1:19" pos:end="3:59">(<parameter pos:start="1:20" pos:end="1:41"><decl pos:start="1:20" pos:end="1:41"><type pos:start="1:20" pos:end="1:41"><name pos:start="1:20" pos:end="1:35">BlockDriverState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier><modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">pbs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:63">filename</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:33"><decl pos:start="3:20" pos:end="3:33"><type pos:start="3:20" pos:end="3:33"><name pos:start="3:20" pos:end="3:24">QDict</name> <modifier pos:start="3:26" pos:end="3:26">*</modifier></type><name pos:start="3:27" pos:end="3:33">options</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:44"><decl pos:start="3:36" pos:end="3:44"><type pos:start="3:36" pos:end="3:44"><name pos:start="3:36" pos:end="3:38">int</name></type> <name pos:start="3:40" pos:end="3:44">flags</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:58"><decl pos:start="3:47" pos:end="3:58"><type pos:start="3:47" pos:end="3:58"><name pos:start="3:47" pos:end="3:51">Error</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier><modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="199:1">{<block_content pos:start="7:5" pos:end="197:15">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">BlockDriver</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:23">drvname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:30">allow_protocol_prefix</name> <init pos:start="13:32" pos:end="13:38">= <expr pos:start="13:34" pos:end="13:38"><name pos:start="13:34" pos:end="13:38">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:20">local_err</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:44">/* NULL means an empty set of options */</comment>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:15">options</name> <operator pos:start="23:17" pos:end="23:18">==</operator> <name pos:start="23:20" pos:end="23:23">NULL</name></expr>)</condition> <block pos:start="23:26" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:30">

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:15">options</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:29"><name pos:start="25:19" pos:end="25:27">qdict_new</name><argument_list pos:start="25:28" pos:end="25:29">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:6">bs</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:21"><name pos:start="31:10" pos:end="31:17">bdrv_new</name><argument_list pos:start="31:18" pos:end="31:21">(<argument pos:start="31:19" pos:end="31:20"><expr pos:start="31:19" pos:end="31:20"><literal type="string" pos:start="31:19" pos:end="31:20">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:6">bs</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:15">options</name></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:25">options</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:43"><expr pos:start="35:5" pos:end="35:42"><name pos:start="35:5" pos:end="35:11">options</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:42"><name pos:start="35:15" pos:end="35:33">qdict_clone_shallow</name><argument_list pos:start="35:34" pos:end="35:42">(<argument pos:start="35:35" pos:end="35:41"><expr pos:start="35:35" pos:end="35:41"><name pos:start="35:35" pos:end="35:41">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:65">/* Fetch the file name from the options QDict if necessary */</comment>

    <if_stmt pos:start="41:5" pos:end="61:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:18">(<expr pos:start="41:9" pos:end="41:17"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:17">filename</name></expr>)</condition> <block pos:start="41:20" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:58">

        <expr_stmt pos:start="43:9" pos:end="43:58"><expr pos:start="43:9" pos:end="43:57"><name pos:start="43:9" pos:end="43:16">filename</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:57"><name pos:start="43:20" pos:end="43:36">qdict_get_try_str</name><argument_list pos:start="43:37" pos:end="43:57">(<argument pos:start="43:38" pos:end="43:44"><expr pos:start="43:38" pos:end="43:44"><name pos:start="43:38" pos:end="43:44">options</name></expr></argument>, <argument pos:start="43:47" pos:end="43:56"><expr pos:start="43:47" pos:end="43:56"><literal type="string" pos:start="43:47" pos:end="43:56">"filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="45:7" pos:end="51:5">else if <condition pos:start="45:15" pos:end="45:62">(<expr pos:start="45:16" pos:end="45:61"><name pos:start="45:16" pos:end="45:23">filename</name> <operator pos:start="45:25" pos:end="45:26">&amp;&amp;</operator> <operator pos:start="45:28" pos:end="45:28">!</operator><call pos:start="45:29" pos:end="45:61"><name pos:start="45:29" pos:end="45:40">qdict_haskey</name><argument_list pos:start="45:41" pos:end="45:61">(<argument pos:start="45:42" pos:end="45:48"><expr pos:start="45:42" pos:end="45:48"><name pos:start="45:42" pos:end="45:48">options</name></expr></argument>, <argument pos:start="45:51" pos:end="45:60"><expr pos:start="45:51" pos:end="45:60"><literal type="string" pos:start="45:51" pos:end="45:60">"filename"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:64" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:37">

        <expr_stmt pos:start="47:9" pos:end="47:67"><expr pos:start="47:9" pos:end="47:66"><call pos:start="47:9" pos:end="47:66"><name pos:start="47:9" pos:end="47:17">qdict_put</name><argument_list pos:start="47:18" pos:end="47:66">(<argument pos:start="47:19" pos:end="47:25"><expr pos:start="47:19" pos:end="47:25"><name pos:start="47:19" pos:end="47:25">options</name></expr></argument>, <argument pos:start="47:28" pos:end="47:37"><expr pos:start="47:28" pos:end="47:37"><literal type="string" pos:start="47:28" pos:end="47:37">"filename"</literal></expr></argument>, <argument pos:start="47:40" pos:end="47:65"><expr pos:start="47:40" pos:end="47:65"><call pos:start="47:40" pos:end="47:65"><name pos:start="47:40" pos:end="47:55">qstring_from_str</name><argument_list pos:start="47:56" pos:end="47:65">(<argument pos:start="47:57" pos:end="47:64"><expr pos:start="47:57" pos:end="47:64"><name pos:start="47:57" pos:end="47:64">filename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:29">allow_protocol_prefix</name> <operator pos:start="49:31" pos:end="49:31">=</operator> <name pos:start="49:33" pos:end="49:36">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="61:5">else <block pos:start="51:12" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:18">

        <expr_stmt pos:start="53:9" pos:end="55:32"><expr pos:start="53:9" pos:end="55:31"><call pos:start="53:9" pos:end="55:31"><name pos:start="53:9" pos:end="53:18">error_setg</name><argument_list pos:start="53:19" pos:end="55:31">(<argument pos:start="53:20" pos:end="53:23"><expr pos:start="53:20" pos:end="53:23"><name pos:start="53:20" pos:end="53:23">errp</name></expr></argument>, <argument pos:start="53:26" pos:end="55:30"><expr pos:start="53:26" pos:end="55:30"><literal type="string" pos:start="53:26" pos:end="53:78">"Can't specify 'file' and 'filename' options at the "</literal>

                   <literal type="string" pos:start="55:20" pos:end="55:30">"same time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:22"><expr pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <operator pos:start="57:15" pos:end="57:15">-</operator><name pos:start="57:16" pos:end="57:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:18">goto <name pos:start="59:14" pos:end="59:17">fail</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:37">/* Find the right block driver */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:51"><expr pos:start="67:5" pos:end="67:50"><name pos:start="67:5" pos:end="67:11">drvname</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:50"><name pos:start="67:15" pos:end="67:31">qdict_get_try_str</name><argument_list pos:start="67:32" pos:end="67:50">(<argument pos:start="67:33" pos:end="67:39"><expr pos:start="67:33" pos:end="67:39"><name pos:start="67:33" pos:end="67:39">options</name></expr></argument>, <argument pos:start="67:42" pos:end="67:49"><expr pos:start="67:42" pos:end="67:49"><literal type="string" pos:start="67:42" pos:end="67:49">"driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="97:5"><if pos:start="69:5" pos:end="81:5">if <condition pos:start="69:8" pos:end="69:16">(<expr pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:15">drvname</name></expr>)</condition> <block pos:start="69:18" pos:end="81:5">{<block_content pos:start="71:9" pos:end="79:37">

        <expr_stmt pos:start="71:9" pos:end="71:76"><expr pos:start="71:9" pos:end="71:75"><name pos:start="71:9" pos:end="71:11">drv</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:75"><name pos:start="71:15" pos:end="71:42">bdrv_find_whitelisted_format</name><argument_list pos:start="71:43" pos:end="71:75">(<argument pos:start="71:44" pos:end="71:50"><expr pos:start="71:44" pos:end="71:50"><name pos:start="71:44" pos:end="71:50">drvname</name></expr></argument>, <argument pos:start="71:53" pos:end="71:74"><expr pos:start="71:53" pos:end="71:74"><operator pos:start="71:53" pos:end="71:53">!</operator><operator pos:start="71:54" pos:end="71:54">(</operator><name pos:start="71:55" pos:end="71:59">flags</name> <operator pos:start="71:61" pos:end="71:61">&amp;</operator> <name pos:start="71:63" pos:end="71:73">BDRV_O_RDWR</name><operator pos:start="71:74" pos:end="71:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:17">(<expr pos:start="73:13" pos:end="73:16"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:16">drv</name></expr>)</condition> <block pos:start="73:19" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:61">

            <expr_stmt pos:start="75:13" pos:end="75:61"><expr pos:start="75:13" pos:end="75:60"><call pos:start="75:13" pos:end="75:60"><name pos:start="75:13" pos:end="75:22">error_setg</name><argument_list pos:start="75:23" pos:end="75:60">(<argument pos:start="75:24" pos:end="75:27"><expr pos:start="75:24" pos:end="75:27"><name pos:start="75:24" pos:end="75:27">errp</name></expr></argument>, <argument pos:start="75:30" pos:end="75:50"><expr pos:start="75:30" pos:end="75:50"><literal type="string" pos:start="75:30" pos:end="75:50">"Unknown driver '%s'"</literal></expr></argument>, <argument pos:start="75:53" pos:end="75:59"><expr pos:start="75:53" pos:end="75:59"><name pos:start="75:53" pos:end="75:59">drvname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:37"><expr pos:start="79:9" pos:end="79:36"><call pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:17">qdict_del</name><argument_list pos:start="79:18" pos:end="79:36">(<argument pos:start="79:19" pos:end="79:25"><expr pos:start="79:19" pos:end="79:25"><name pos:start="79:19" pos:end="79:25">options</name></expr></argument>, <argument pos:start="79:28" pos:end="79:35"><expr pos:start="79:28" pos:end="79:35"><literal type="string" pos:start="79:28" pos:end="79:35">"driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="81:7" pos:end="91:5">else if <condition pos:start="81:15" pos:end="81:24">(<expr pos:start="81:16" pos:end="81:23"><name pos:start="81:16" pos:end="81:23">filename</name></expr>)</condition> <block pos:start="81:26" pos:end="91:5">{<block_content pos:start="83:9" pos:end="89:9">

        <expr_stmt pos:start="83:9" pos:end="83:66"><expr pos:start="83:9" pos:end="83:65"><name pos:start="83:9" pos:end="83:11">drv</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:65"><name pos:start="83:15" pos:end="83:32">bdrv_find_protocol</name><argument_list pos:start="83:33" pos:end="83:65">(<argument pos:start="83:34" pos:end="83:41"><expr pos:start="83:34" pos:end="83:41"><name pos:start="83:34" pos:end="83:41">filename</name></expr></argument>, <argument pos:start="83:44" pos:end="83:64"><expr pos:start="83:44" pos:end="83:64"><name pos:start="83:44" pos:end="83:64">allow_protocol_prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:17">(<expr pos:start="85:13" pos:end="85:16"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:16">drv</name></expr>)</condition> <block pos:start="85:19" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:49">

            <expr_stmt pos:start="87:13" pos:end="87:49"><expr pos:start="87:13" pos:end="87:48"><call pos:start="87:13" pos:end="87:48"><name pos:start="87:13" pos:end="87:22">error_setg</name><argument_list pos:start="87:23" pos:end="87:48">(<argument pos:start="87:24" pos:end="87:27"><expr pos:start="87:24" pos:end="87:27"><name pos:start="87:24" pos:end="87:27">errp</name></expr></argument>, <argument pos:start="87:30" pos:end="87:47"><expr pos:start="87:30" pos:end="87:47"><literal type="string" pos:start="87:30" pos:end="87:47">"Unknown protocol"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="97:5">else <block pos:start="91:12" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:19">

        <expr_stmt pos:start="93:9" pos:end="93:63"><expr pos:start="93:9" pos:end="93:62"><call pos:start="93:9" pos:end="93:62"><name pos:start="93:9" pos:end="93:18">error_setg</name><argument_list pos:start="93:19" pos:end="93:62">(<argument pos:start="93:20" pos:end="93:23"><expr pos:start="93:20" pos:end="93:23"><name pos:start="93:20" pos:end="93:23">errp</name></expr></argument>, <argument pos:start="93:26" pos:end="93:61"><expr pos:start="93:26" pos:end="93:61"><literal type="string" pos:start="93:26" pos:end="93:61">"Must specify either driver or file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:19"><expr pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:11">drv</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <name pos:start="95:15" pos:end="95:18">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="101:5" pos:end="109:5"><if pos:start="101:5" pos:end="109:5">if <condition pos:start="101:8" pos:end="101:13">(<expr pos:start="101:9" pos:end="101:12"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:12">drv</name></expr>)</condition> <block pos:start="101:15" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:18">

        <comment type="block" pos:start="103:9" pos:end="103:39">/* errp has been set already */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:22"><expr pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:11">ret</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <operator pos:start="105:15" pos:end="105:15">-</operator><name pos:start="105:16" pos:end="105:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="107:9" pos:end="107:18">goto <name pos:start="107:14" pos:end="107:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="113:5" pos:end="113:40">/* Parse the filename and open it */</comment>

    <if_stmt pos:start="115:5" pos:end="141:5"><if pos:start="115:5" pos:end="131:5">if <condition pos:start="115:8" pos:end="115:45">(<expr pos:start="115:9" pos:end="115:44"><name pos:start="115:9" pos:end="115:32"><name pos:start="115:9" pos:end="115:11">drv</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:32">bdrv_parse_filename</name></name> <operator pos:start="115:34" pos:end="115:35">&amp;&amp;</operator> <name pos:start="115:37" pos:end="115:44">filename</name></expr>)</condition> <block pos:start="115:47" pos:end="131:5">{<block_content pos:start="117:9" pos:end="129:39">

        <expr_stmt pos:start="117:9" pos:end="117:64"><expr pos:start="117:9" pos:end="117:63"><call pos:start="117:9" pos:end="117:63"><name pos:start="117:9" pos:end="117:32"><name pos:start="117:9" pos:end="117:11">drv</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:32">bdrv_parse_filename</name></name><argument_list pos:start="117:33" pos:end="117:63">(<argument pos:start="117:34" pos:end="117:41"><expr pos:start="117:34" pos:end="117:41"><name pos:start="117:34" pos:end="117:41">filename</name></expr></argument>, <argument pos:start="117:44" pos:end="117:50"><expr pos:start="117:44" pos:end="117:50"><name pos:start="117:44" pos:end="117:50">options</name></expr></argument>, <argument pos:start="117:53" pos:end="117:62"><expr pos:start="117:53" pos:end="117:62"><operator pos:start="117:53" pos:end="117:53">&amp;</operator><name pos:start="117:54" pos:end="117:62">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="127:9"><if pos:start="119:9" pos:end="127:9">if <condition pos:start="119:12" pos:end="119:37">(<expr pos:start="119:13" pos:end="119:36"><call pos:start="119:13" pos:end="119:36"><name pos:start="119:13" pos:end="119:24">error_is_set</name><argument_list pos:start="119:25" pos:end="119:36">(<argument pos:start="119:26" pos:end="119:35"><expr pos:start="119:26" pos:end="119:35"><operator pos:start="119:26" pos:end="119:26">&amp;</operator><name pos:start="119:27" pos:end="119:35">local_err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:39" pos:end="127:9">{<block_content pos:start="121:13" pos:end="125:22">

            <expr_stmt pos:start="121:13" pos:end="121:45"><expr pos:start="121:13" pos:end="121:44"><call pos:start="121:13" pos:end="121:44"><name pos:start="121:13" pos:end="121:27">error_propagate</name><argument_list pos:start="121:28" pos:end="121:44">(<argument pos:start="121:29" pos:end="121:32"><expr pos:start="121:29" pos:end="121:32"><name pos:start="121:29" pos:end="121:32">errp</name></expr></argument>, <argument pos:start="121:35" pos:end="121:43"><expr pos:start="121:35" pos:end="121:43"><name pos:start="121:35" pos:end="121:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:26"><expr pos:start="123:13" pos:end="123:25"><name pos:start="123:13" pos:end="123:15">ret</name> <operator pos:start="123:17" pos:end="123:17">=</operator> <operator pos:start="123:19" pos:end="123:19">-</operator><name pos:start="123:20" pos:end="123:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="125:13" pos:end="125:22">goto <name pos:start="125:18" pos:end="125:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:39"><expr pos:start="129:9" pos:end="129:38"><call pos:start="129:9" pos:end="129:38"><name pos:start="129:9" pos:end="129:17">qdict_del</name><argument_list pos:start="129:18" pos:end="129:38">(<argument pos:start="129:19" pos:end="129:25"><expr pos:start="129:19" pos:end="129:25"><name pos:start="129:19" pos:end="129:25">options</name></expr></argument>, <argument pos:start="129:28" pos:end="129:37"><expr pos:start="129:28" pos:end="129:37"><literal type="string" pos:start="129:28" pos:end="129:37">"filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="131:7" pos:end="141:5">else if <condition pos:start="131:15" pos:end="131:53">(<expr pos:start="131:16" pos:end="131:52"><name pos:start="131:16" pos:end="131:39"><name pos:start="131:16" pos:end="131:18">drv</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:39">bdrv_needs_filename</name></name> <operator pos:start="131:41" pos:end="131:42">&amp;&amp;</operator> <operator pos:start="131:44" pos:end="131:44">!</operator><name pos:start="131:45" pos:end="131:52">filename</name></expr>)</condition> <block pos:start="131:55" pos:end="141:5">{<block_content pos:start="133:9" pos:end="139:18">

        <expr_stmt pos:start="133:9" pos:end="135:37"><expr pos:start="133:9" pos:end="135:36"><call pos:start="133:9" pos:end="135:36"><name pos:start="133:9" pos:end="133:18">error_setg</name><argument_list pos:start="133:19" pos:end="135:36">(<argument pos:start="133:20" pos:end="133:23"><expr pos:start="133:20" pos:end="133:23"><name pos:start="133:20" pos:end="133:23">errp</name></expr></argument>, <argument pos:start="133:26" pos:end="133:69"><expr pos:start="133:26" pos:end="133:69"><literal type="string" pos:start="133:26" pos:end="133:69">"The '%s' block driver requires a file name"</literal></expr></argument>,

                   <argument pos:start="135:20" pos:end="135:35"><expr pos:start="135:20" pos:end="135:35"><name pos:start="135:20" pos:end="135:35"><name pos:start="135:20" pos:end="135:22">drv</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:35">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:22"><expr pos:start="137:9" pos:end="137:21"><name pos:start="137:9" pos:end="137:11">ret</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <operator pos:start="137:15" pos:end="137:15">-</operator><name pos:start="137:16" pos:end="137:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="139:9" pos:end="139:18">goto <name pos:start="139:14" pos:end="139:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:70"><expr pos:start="145:5" pos:end="145:69"><name pos:start="145:5" pos:end="145:7">ret</name> <operator pos:start="145:9" pos:end="145:9">=</operator> <call pos:start="145:11" pos:end="145:69"><name pos:start="145:11" pos:end="145:26">bdrv_open_common</name><argument_list pos:start="145:27" pos:end="145:69">(<argument pos:start="145:28" pos:end="145:29"><expr pos:start="145:28" pos:end="145:29"><name pos:start="145:28" pos:end="145:29">bs</name></expr></argument>, <argument pos:start="145:32" pos:end="145:35"><expr pos:start="145:32" pos:end="145:35"><name pos:start="145:32" pos:end="145:35">NULL</name></expr></argument>, <argument pos:start="145:38" pos:end="145:44"><expr pos:start="145:38" pos:end="145:44"><name pos:start="145:38" pos:end="145:44">options</name></expr></argument>, <argument pos:start="145:47" pos:end="145:51"><expr pos:start="145:47" pos:end="145:51"><name pos:start="145:47" pos:end="145:51">flags</name></expr></argument>, <argument pos:start="145:54" pos:end="145:56"><expr pos:start="145:54" pos:end="145:56"><name pos:start="145:54" pos:end="145:56">drv</name></expr></argument>, <argument pos:start="145:59" pos:end="145:68"><expr pos:start="145:59" pos:end="145:68"><operator pos:start="145:59" pos:end="145:59">&amp;</operator><name pos:start="145:60" pos:end="145:68">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="147:5" pos:end="153:5"><if pos:start="147:5" pos:end="153:5">if <condition pos:start="147:8" pos:end="147:16">(<expr pos:start="147:9" pos:end="147:15"><name pos:start="147:9" pos:end="147:11">ret</name> <operator pos:start="147:13" pos:end="147:13">&lt;</operator> <literal type="number" pos:start="147:15" pos:end="147:15">0</literal></expr>)</condition> <block pos:start="147:18" pos:end="153:5">{<block_content pos:start="149:9" pos:end="151:18">

        <expr_stmt pos:start="149:9" pos:end="149:41"><expr pos:start="149:9" pos:end="149:40"><call pos:start="149:9" pos:end="149:40"><name pos:start="149:9" pos:end="149:23">error_propagate</name><argument_list pos:start="149:24" pos:end="149:40">(<argument pos:start="149:25" pos:end="149:28"><expr pos:start="149:25" pos:end="149:28"><name pos:start="149:25" pos:end="149:28">errp</name></expr></argument>, <argument pos:start="149:31" pos:end="149:39"><expr pos:start="149:31" pos:end="149:39"><name pos:start="149:31" pos:end="149:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="151:9" pos:end="151:18">goto <name pos:start="151:14" pos:end="151:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="157:5" pos:end="157:48">/* Check if any unknown options were used */</comment>

    <if_stmt pos:start="159:5" pos:end="171:5"><if pos:start="159:5" pos:end="171:5">if <condition pos:start="159:8" pos:end="159:33">(<expr pos:start="159:9" pos:end="159:32"><call pos:start="159:9" pos:end="159:27"><name pos:start="159:9" pos:end="159:18">qdict_size</name><argument_list pos:start="159:19" pos:end="159:27">(<argument pos:start="159:20" pos:end="159:26"><expr pos:start="159:20" pos:end="159:26"><name pos:start="159:20" pos:end="159:26">options</name></expr></argument>)</argument_list></call> <operator pos:start="159:29" pos:end="159:30">!=</operator> <literal type="number" pos:start="159:32" pos:end="159:32">0</literal></expr>)</condition> <block pos:start="159:35" pos:end="171:5">{<block_content pos:start="161:9" pos:end="169:18">

        <decl_stmt pos:start="161:9" pos:end="161:55"><decl pos:start="161:9" pos:end="161:54"><type pos:start="161:9" pos:end="161:26"><specifier pos:start="161:9" pos:end="161:13">const</specifier> <name pos:start="161:15" pos:end="161:24">QDictEntry</name> <modifier pos:start="161:26" pos:end="161:26">*</modifier></type><name pos:start="161:27" pos:end="161:31">entry</name> <init pos:start="161:33" pos:end="161:54">= <expr pos:start="161:35" pos:end="161:54"><call pos:start="161:35" pos:end="161:54"><name pos:start="161:35" pos:end="161:45">qdict_first</name><argument_list pos:start="161:46" pos:end="161:54">(<argument pos:start="161:47" pos:end="161:53"><expr pos:start="161:47" pos:end="161:53"><name pos:start="161:47" pos:end="161:53">options</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="163:9" pos:end="165:49"><expr pos:start="163:9" pos:end="165:48"><call pos:start="163:9" pos:end="165:48"><name pos:start="163:9" pos:end="163:18">error_setg</name><argument_list pos:start="163:19" pos:end="165:48">(<argument pos:start="163:20" pos:end="163:23"><expr pos:start="163:20" pos:end="163:23"><name pos:start="163:20" pos:end="163:23">errp</name></expr></argument>, <argument pos:start="163:26" pos:end="163:78"><expr pos:start="163:26" pos:end="163:78"><literal type="string" pos:start="163:26" pos:end="163:78">"Block protocol '%s' doesn't support the option '%s'"</literal></expr></argument>,

                   <argument pos:start="165:20" pos:end="165:35"><expr pos:start="165:20" pos:end="165:35"><name pos:start="165:20" pos:end="165:35"><name pos:start="165:20" pos:end="165:22">drv</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:35">format_name</name></name></expr></argument>, <argument pos:start="165:38" pos:end="165:47"><expr pos:start="165:38" pos:end="165:47"><name pos:start="165:38" pos:end="165:47"><name pos:start="165:38" pos:end="165:42">entry</name><operator pos:start="165:43" pos:end="165:44">-&gt;</operator><name pos:start="165:45" pos:end="165:47">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:22"><expr pos:start="167:9" pos:end="167:21"><name pos:start="167:9" pos:end="167:11">ret</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <operator pos:start="167:15" pos:end="167:15">-</operator><name pos:start="167:16" pos:end="167:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="169:9" pos:end="169:18">goto <name pos:start="169:14" pos:end="169:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:21"><expr pos:start="173:5" pos:end="173:20"><call pos:start="173:5" pos:end="173:20"><name pos:start="173:5" pos:end="173:11">QDECREF</name><argument_list pos:start="173:12" pos:end="173:20">(<argument pos:start="173:13" pos:end="173:19"><expr pos:start="173:13" pos:end="173:19"><name pos:start="173:13" pos:end="173:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:21"><expr pos:start="177:5" pos:end="177:20"><name pos:start="177:5" pos:end="177:16"><name pos:start="177:5" pos:end="177:6">bs</name><operator pos:start="177:7" pos:end="177:8">-&gt;</operator><name pos:start="177:9" pos:end="177:16">growable</name></name> <operator pos:start="177:18" pos:end="177:18">=</operator> <literal type="number" pos:start="177:20" pos:end="177:20">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:14"><expr pos:start="179:5" pos:end="179:13"><operator pos:start="179:5" pos:end="179:5">*</operator><name pos:start="179:6" pos:end="179:8">pbs</name> <operator pos:start="179:10" pos:end="179:10">=</operator> <name pos:start="179:12" pos:end="179:13">bs</name></expr>;</expr_stmt>

    <return pos:start="181:5" pos:end="181:13">return <expr pos:start="181:12" pos:end="181:12"><literal type="number" pos:start="181:12" pos:end="181:12">0</literal></expr>;</return>



<label pos:start="185:1" pos:end="185:5"><name pos:start="185:1" pos:end="185:4">fail</name>:</label>

    <expr_stmt pos:start="187:5" pos:end="187:21"><expr pos:start="187:5" pos:end="187:20"><call pos:start="187:5" pos:end="187:20"><name pos:start="187:5" pos:end="187:11">QDECREF</name><argument_list pos:start="187:12" pos:end="187:20">(<argument pos:start="187:13" pos:end="187:19"><expr pos:start="187:13" pos:end="187:19"><name pos:start="187:13" pos:end="187:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="189:5" pos:end="193:5"><if pos:start="189:5" pos:end="193:5">if <condition pos:start="189:8" pos:end="189:17">(<expr pos:start="189:9" pos:end="189:16"><operator pos:start="189:9" pos:end="189:9">!</operator><name pos:start="189:10" pos:end="189:16"><name pos:start="189:10" pos:end="189:11">bs</name><operator pos:start="189:12" pos:end="189:13">-&gt;</operator><name pos:start="189:14" pos:end="189:16">drv</name></name></expr>)</condition> <block pos:start="189:19" pos:end="193:5">{<block_content pos:start="191:9" pos:end="191:29">

        <expr_stmt pos:start="191:9" pos:end="191:29"><expr pos:start="191:9" pos:end="191:28"><call pos:start="191:9" pos:end="191:28"><name pos:start="191:9" pos:end="191:15">QDECREF</name><argument_list pos:start="191:16" pos:end="191:28">(<argument pos:start="191:17" pos:end="191:27"><expr pos:start="191:17" pos:end="191:27"><name pos:start="191:17" pos:end="191:27"><name pos:start="191:17" pos:end="191:18">bs</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:27">options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:19"><expr pos:start="195:5" pos:end="195:18"><call pos:start="195:5" pos:end="195:18"><name pos:start="195:5" pos:end="195:14">bdrv_unref</name><argument_list pos:start="195:15" pos:end="195:18">(<argument pos:start="195:16" pos:end="195:17"><expr pos:start="195:16" pos:end="195:17"><name pos:start="195:16" pos:end="195:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="197:5" pos:end="197:15">return <expr pos:start="197:12" pos:end="197:14"><name pos:start="197:12" pos:end="197:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
