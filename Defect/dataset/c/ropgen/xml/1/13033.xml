<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13033.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">virtio_scsi_device_realize</name><parameter_list pos:start="1:39" pos:end="1:70">(<parameter pos:start="1:40" pos:end="1:55"><decl pos:start="1:40" pos:end="1:55"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:50">DeviceState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">dev</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:62">Error</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:59">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VirtIODevice</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">vdev</name> <init pos:start="5:24" pos:end="5:43">= <expr pos:start="5:26" pos:end="5:43"><call pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">VIRTIO_DEVICE</name><argument_list pos:start="5:39" pos:end="5:43">(<argument pos:start="5:40" pos:end="5:42"><expr pos:start="5:40" pos:end="5:42"><name pos:start="5:40" pos:end="5:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">VirtIOSCSI</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><call pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:31">VIRTIO_SCSI</name><argument_list pos:start="7:32" pos:end="7:36">(<argument pos:start="7:33" pos:end="7:35"><expr pos:start="7:33" pos:end="7:35"><name pos:start="7:33" pos:end="7:35">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:14"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <name pos:start="9:12" pos:end="9:14">int</name></type> <name pos:start="9:16" pos:end="9:29">virtio_scsi_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">err</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><call pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:30">virtio_scsi_common_realize</name><argument_list pos:start="15:31" pos:end="15:41">(<argument pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:34">dev</name></expr></argument>, <argument pos:start="15:37" pos:end="15:40"><expr pos:start="15:37" pos:end="15:40"><operator pos:start="15:37" pos:end="15:37">&amp;</operator><name pos:start="15:38" pos:end="15:40">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:11">err</name> <operator pos:start="17:13" pos:end="17:14">!=</operator> <name pos:start="17:16" pos:end="17:19">NULL</name></expr>)</condition> <block pos:start="17:22" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:15">

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><call pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:23">error_propagate</name><argument_list pos:start="19:24" pos:end="19:34">(<argument pos:start="19:25" pos:end="19:28"><expr pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:28">errp</name></expr></argument>, <argument pos:start="19:31" pos:end="19:33"><expr pos:start="19:31" pos:end="19:33"><name pos:start="19:31" pos:end="19:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:57"><expr pos:start="27:5" pos:end="29:56"><call pos:start="27:5" pos:end="29:56"><name pos:start="27:5" pos:end="27:16">scsi_bus_new</name><argument_list pos:start="27:17" pos:end="29:56">(<argument pos:start="27:18" pos:end="27:24"><expr pos:start="27:18" pos:end="27:24"><operator pos:start="27:18" pos:end="27:18">&amp;</operator><name pos:start="27:19" pos:end="27:24"><name pos:start="27:19" pos:end="27:19">s</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:24">bus</name></name></expr></argument>, <argument pos:start="27:27" pos:end="27:40"><expr pos:start="27:27" pos:end="27:40"><sizeof pos:start="27:27" pos:end="27:40">sizeof<argument_list pos:start="27:33" pos:end="27:40">(<argument pos:start="27:34" pos:end="27:39"><expr pos:start="27:34" pos:end="27:39"><name pos:start="27:34" pos:end="27:39"><name pos:start="27:34" pos:end="27:34">s</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:39">bus</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:43" pos:end="27:45"><expr pos:start="27:43" pos:end="27:45"><name pos:start="27:43" pos:end="27:45">dev</name></expr></argument>,

                 <argument pos:start="29:18" pos:end="29:39"><expr pos:start="29:18" pos:end="29:39"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:39">virtio_scsi_scsi_info</name></expr></argument>, <argument pos:start="29:42" pos:end="29:55"><expr pos:start="29:42" pos:end="29:55"><name pos:start="29:42" pos:end="29:55"><name pos:start="29:42" pos:end="29:45">vdev</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:55">bus_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="45:5"><if pos:start="33:5" pos:end="45:5">if <condition pos:start="33:8" pos:end="33:25">(<expr pos:start="33:9" pos:end="33:24"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:24"><name pos:start="33:10" pos:end="33:12">dev</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:24">hotplugged</name></name></expr>)</condition> <block pos:start="33:27" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:9">

        <expr_stmt pos:start="35:9" pos:end="35:54"><expr pos:start="35:9" pos:end="35:53"><call pos:start="35:9" pos:end="35:53"><name pos:start="35:9" pos:end="35:38">scsi_bus_legacy_handle_cmdline</name><argument_list pos:start="35:39" pos:end="35:53">(<argument pos:start="35:40" pos:end="35:46"><expr pos:start="35:40" pos:end="35:46"><operator pos:start="35:40" pos:end="35:40">&amp;</operator><name pos:start="35:41" pos:end="35:46"><name pos:start="35:41" pos:end="35:41">s</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:46">bus</name></name></expr></argument>, <argument pos:start="35:49" pos:end="35:52"><expr pos:start="35:49" pos:end="35:52"><operator pos:start="35:49" pos:end="35:49">&amp;</operator><name pos:start="35:50" pos:end="35:52">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:24">(<expr pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:15">err</name> <operator pos:start="37:17" pos:end="37:18">!=</operator> <name pos:start="37:20" pos:end="37:23">NULL</name></expr>)</condition> <block pos:start="37:26" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:19">

            <expr_stmt pos:start="39:13" pos:end="39:39"><expr pos:start="39:13" pos:end="39:38"><call pos:start="39:13" pos:end="39:38"><name pos:start="39:13" pos:end="39:27">error_propagate</name><argument_list pos:start="39:28" pos:end="39:38">(<argument pos:start="39:29" pos:end="39:32"><expr pos:start="39:29" pos:end="39:32"><name pos:start="39:29" pos:end="39:32">errp</name></expr></argument>, <argument pos:start="39:35" pos:end="39:37"><expr pos:start="39:35" pos:end="39:37"><name pos:start="39:35" pos:end="39:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="51:59"><expr pos:start="49:5" pos:end="51:58"><call pos:start="49:5" pos:end="51:58"><name pos:start="49:5" pos:end="49:19">register_savevm</name><argument_list pos:start="49:20" pos:end="51:58">(<argument pos:start="49:21" pos:end="49:23"><expr pos:start="49:21" pos:end="49:23"><name pos:start="49:21" pos:end="49:23">dev</name></expr></argument>, <argument pos:start="49:26" pos:end="49:38"><expr pos:start="49:26" pos:end="49:38"><literal type="string" pos:start="49:26" pos:end="49:38">"virtio-scsi"</literal></expr></argument>, <argument pos:start="49:41" pos:end="49:56"><expr pos:start="49:41" pos:end="49:56"><name pos:start="49:41" pos:end="49:54">virtio_scsi_id</name><operator pos:start="49:55" pos:end="49:56">++</operator></expr></argument>, <argument pos:start="49:59" pos:end="49:59"><expr pos:start="49:59" pos:end="49:59"><literal type="number" pos:start="49:59" pos:end="49:59">1</literal></expr></argument>,

                    <argument pos:start="51:21" pos:end="51:36"><expr pos:start="51:21" pos:end="51:36"><name pos:start="51:21" pos:end="51:36">virtio_scsi_save</name></expr></argument>, <argument pos:start="51:39" pos:end="51:54"><expr pos:start="51:39" pos:end="51:54"><name pos:start="51:39" pos:end="51:54">virtio_scsi_load</name></expr></argument>, <argument pos:start="51:57" pos:end="51:57"><expr pos:start="51:57" pos:end="51:57"><name pos:start="51:57" pos:end="51:57">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
