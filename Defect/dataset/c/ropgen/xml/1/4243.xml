<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4243.c" pos:tabs="8"><function pos:start="1:1" pos:end="371:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">asf_read_stream_properties</name><parameter_list pos:start="1:38" pos:end="1:71">(<parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><name pos:start="1:39" pos:end="1:53">AVFormatContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:65">int64_t</name></type> <name pos:start="1:67" pos:end="1:70">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="371:1">{<block_content pos:start="5:5" pos:end="369:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">asf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">ASFStream</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:21">asf_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">ff_asf_guid</name></type> <name pos:start="13:17" pos:end="13:17">g</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:8">enum</name> <name pos:start="15:10" pos:end="15:20">AVMediaType</name></name></type> <name pos:start="15:22" pos:end="15:25">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:26">type_specific_size</name></decl>, <decl pos:start="17:29" pos:end="17:33"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:29" pos:end="17:33">sizeX</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:23">total_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:16">int</name></type> <name pos:start="21:18" pos:end="21:21">tag1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:35"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int64_t</name></type> <name pos:start="23:13" pos:end="23:16">pos1</name></decl>, <decl pos:start="23:19" pos:end="23:22"><type ref="prev" pos:start="23:5" pos:end="23:11"/><name pos:start="23:19" pos:end="23:22">pos2</name></decl>, <decl pos:start="23:25" pos:end="23:34"><type ref="prev" pos:start="23:5" pos:end="23:11"/><name pos:start="23:25" pos:end="23:34">start_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:53"><decl pos:start="25:5" pos:end="25:33"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:33">test_for_ext_stream_audio</name></decl>, <decl pos:start="25:36" pos:end="25:52"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:36" pos:end="25:50">is_dvr_ms_audio</name><init pos:start="25:51" pos:end="25:52">=<expr pos:start="25:52" pos:end="25:52"><literal type="number" pos:start="25:52" pos:end="25:52">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:41">(<expr pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:21">nb_streams</name></name> <operator pos:start="29:23" pos:end="29:24">==</operator> <name pos:start="29:26" pos:end="29:40">ASF_MAX_STREAMS</name></expr>)</condition> <block pos:start="29:43" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:31">

        <expr_stmt pos:start="31:9" pos:end="31:54"><expr pos:start="31:9" pos:end="31:53"><call pos:start="31:9" pos:end="31:53"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:53">(<argument pos:start="31:16" pos:end="31:16"><expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">s</name></expr></argument>, <argument pos:start="31:19" pos:end="31:30"><expr pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:33" pos:end="31:52"><expr pos:start="31:33" pos:end="31:52"><literal type="string" pos:start="31:33" pos:end="31:52">"too many streams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:31">return <expr pos:start="33:16" pos:end="33:30"><call pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:22">AVERROR</name><argument_list pos:start="33:23" pos:end="33:30">(<argument pos:start="33:24" pos:end="33:29"><expr pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:8">pos1</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="39:24"><name pos:start="39:12" pos:end="39:20">avio_tell</name><argument_list pos:start="39:21" pos:end="39:24">(<argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><name pos:start="39:22" pos:end="39:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:6">st</name> <operator pos:start="43:8" pos:end="43:8">=</operator> <call pos:start="43:10" pos:end="43:28"><name pos:start="43:10" pos:end="43:22">av_new_stream</name><argument_list pos:start="43:23" pos:end="43:28">(<argument pos:start="43:24" pos:end="43:24"><expr pos:start="43:24" pos:end="43:24"><name pos:start="43:24" pos:end="43:24">s</name></expr></argument>, <argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:31"><if pos:start="45:5" pos:end="47:31">if <condition pos:start="45:8" pos:end="45:12">(<expr pos:start="45:9" pos:end="45:11"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:11">st</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:31"><block_content pos:start="47:9" pos:end="47:31">

        <return pos:start="47:9" pos:end="47:31">return <expr pos:start="47:16" pos:end="47:30"><call pos:start="47:16" pos:end="47:30"><name pos:start="47:16" pos:end="47:22">AVERROR</name><argument_list pos:start="47:23" pos:end="47:30">(<argument pos:start="47:24" pos:end="47:29"><expr pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:37"><expr pos:start="49:5" pos:end="49:36"><call pos:start="49:5" pos:end="49:36"><name pos:start="49:5" pos:end="49:19">av_set_pts_info</name><argument_list pos:start="49:20" pos:end="49:36">(<argument pos:start="49:21" pos:end="49:22"><expr pos:start="49:21" pos:end="49:22"><name pos:start="49:21" pos:end="49:22">st</name></expr></argument>, <argument pos:start="49:25" pos:end="49:26"><expr pos:start="49:25" pos:end="49:26"><literal type="number" pos:start="49:25" pos:end="49:26">32</literal></expr></argument>, <argument pos:start="49:29" pos:end="49:29"><expr pos:start="49:29" pos:end="49:29"><literal type="number" pos:start="49:29" pos:end="49:29">1</literal></expr></argument>, <argument pos:start="49:32" pos:end="49:35"><expr pos:start="49:32" pos:end="49:35"><literal type="number" pos:start="49:32" pos:end="49:35">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:39" pos:end="49:60">/* 32 bit pts in ms */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:43"><expr pos:start="51:5" pos:end="51:42"><name pos:start="51:5" pos:end="51:10">asf_st</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <call pos:start="51:14" pos:end="51:42"><name pos:start="51:14" pos:end="51:23">av_mallocz</name><argument_list pos:start="51:24" pos:end="51:42">(<argument pos:start="51:25" pos:end="51:41"><expr pos:start="51:25" pos:end="51:41"><sizeof pos:start="51:25" pos:end="51:41">sizeof<argument_list pos:start="51:31" pos:end="51:41">(<argument pos:start="51:32" pos:end="51:40"><expr pos:start="51:32" pos:end="51:40"><name pos:start="51:32" pos:end="51:40">ASFStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:31"><if pos:start="53:5" pos:end="55:31">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:15">asf_st</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:31"><block_content pos:start="55:9" pos:end="55:31">

        <return pos:start="55:9" pos:end="55:31">return <expr pos:start="55:16" pos:end="55:30"><call pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:22">AVERROR</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:29"><expr pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:6">st</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:17">priv_data</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:26">asf_st</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:6">st</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:18">start_time</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:34"><expr pos:start="61:5" pos:end="61:33"><name pos:start="61:5" pos:end="61:14">start_time</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:33"><name pos:start="61:18" pos:end="61:20">asf</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:25">hdr</name><operator pos:start="61:26" pos:end="61:26">.</operator><name pos:start="61:27" pos:end="61:33">preroll</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:40"><expr pos:start="65:5" pos:end="65:39"><name pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:10">asf_st</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:33">stream_language_index</name></name> <operator pos:start="65:35" pos:end="65:35">=</operator> <literal type="number" pos:start="65:37" pos:end="65:39">128</literal></expr>;</expr_stmt> <comment type="line" pos:start="65:42" pos:end="65:87">// invalid stream index means no language info</comment>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if<condition pos:start="69:7" pos:end="69:32">(<expr pos:start="69:8" pos:end="69:31"><operator pos:start="69:8" pos:end="69:8">!</operator><operator pos:start="69:9" pos:end="69:9">(</operator><name pos:start="69:10" pos:end="69:23"><name pos:start="69:10" pos:end="69:12">asf</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:17">hdr</name><operator pos:start="69:18" pos:end="69:18">.</operator><name pos:start="69:19" pos:end="69:23">flags</name></name> <operator pos:start="69:25" pos:end="69:25">&amp;</operator> <literal type="number" pos:start="69:27" pos:end="69:30">0x01</literal><operator pos:start="69:31" pos:end="69:31">)</operator></expr>)</condition> <block pos:start="69:34" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:43"> <comment type="line" pos:start="69:36" pos:end="69:63">// if we aren't streaming...</comment>

        <expr_stmt pos:start="71:9" pos:end="73:43"><expr pos:start="71:9" pos:end="73:42"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:10">st</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:20">duration</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:41"><name pos:start="71:24" pos:end="71:26">asf</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:31">hdr</name><operator pos:start="71:32" pos:end="71:32">.</operator><name pos:start="71:33" pos:end="71:41">play_time</name></name> <operator pos:start="71:43" pos:end="71:43">/</operator>

            <operator pos:start="73:13" pos:end="73:13">(</operator><literal type="number" pos:start="73:14" pos:end="73:21">10000000</literal> <operator pos:start="73:23" pos:end="73:23">/</operator> <literal type="number" pos:start="73:25" pos:end="73:28">1000</literal><operator pos:start="73:29" pos:end="73:29">)</operator> <operator pos:start="73:31" pos:end="73:31">-</operator> <name pos:start="73:33" pos:end="73:42">start_time</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:24"><expr pos:start="77:5" pos:end="77:23"><call pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:15">ff_get_guid</name><argument_list pos:start="77:16" pos:end="77:23">(<argument pos:start="77:17" pos:end="77:18"><expr pos:start="77:17" pos:end="77:18"><name pos:start="77:17" pos:end="77:18">pb</name></expr></argument>, <argument pos:start="77:21" pos:end="77:22"><expr pos:start="77:21" pos:end="77:22"><operator pos:start="77:21" pos:end="77:21">&amp;</operator><name pos:start="77:22" pos:end="77:22">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:34"><expr pos:start="81:5" pos:end="81:33"><name pos:start="81:5" pos:end="81:29">test_for_ext_stream_audio</name> <operator pos:start="81:31" pos:end="81:31">=</operator> <literal type="number" pos:start="81:33" pos:end="81:33">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="111:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:46">(<expr pos:start="83:9" pos:end="83:45"><operator pos:start="83:9" pos:end="83:9">!</operator><call pos:start="83:10" pos:end="83:45"><name pos:start="83:10" pos:end="83:19">ff_guidcmp</name><argument_list pos:start="83:20" pos:end="83:45">(<argument pos:start="83:21" pos:end="83:22"><expr pos:start="83:21" pos:end="83:22"><operator pos:start="83:21" pos:end="83:21">&amp;</operator><name pos:start="83:22" pos:end="83:22">g</name></expr></argument>, <argument pos:start="83:25" pos:end="83:44"><expr pos:start="83:25" pos:end="83:44"><operator pos:start="83:25" pos:end="83:25">&amp;</operator><name pos:start="83:26" pos:end="83:44">ff_asf_audio_stream</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:48" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:34">

        <expr_stmt pos:start="85:9" pos:end="85:34"><expr pos:start="85:9" pos:end="85:33"><name pos:start="85:9" pos:end="85:12">type</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <name pos:start="85:16" pos:end="85:33">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="87:7" pos:end="91:5">else if <condition pos:start="87:15" pos:end="87:53">(<expr pos:start="87:16" pos:end="87:52"><operator pos:start="87:16" pos:end="87:16">!</operator><call pos:start="87:17" pos:end="87:52"><name pos:start="87:17" pos:end="87:26">ff_guidcmp</name><argument_list pos:start="87:27" pos:end="87:52">(<argument pos:start="87:28" pos:end="87:29"><expr pos:start="87:28" pos:end="87:29"><operator pos:start="87:28" pos:end="87:28">&amp;</operator><name pos:start="87:29" pos:end="87:29">g</name></expr></argument>, <argument pos:start="87:32" pos:end="87:51"><expr pos:start="87:32" pos:end="87:51"><operator pos:start="87:32" pos:end="87:32">&amp;</operator><name pos:start="87:33" pos:end="87:51">ff_asf_video_stream</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:55" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:34">

        <expr_stmt pos:start="89:9" pos:end="89:34"><expr pos:start="89:9" pos:end="89:33"><name pos:start="89:9" pos:end="89:12">type</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <name pos:start="89:16" pos:end="89:33">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="91:7" pos:end="97:5">else if <condition pos:start="91:15" pos:end="91:51">(<expr pos:start="91:16" pos:end="91:50"><operator pos:start="91:16" pos:end="91:16">!</operator><call pos:start="91:17" pos:end="91:50"><name pos:start="91:17" pos:end="91:26">ff_guidcmp</name><argument_list pos:start="91:27" pos:end="91:50">(<argument pos:start="91:28" pos:end="91:29"><expr pos:start="91:28" pos:end="91:29"><operator pos:start="91:28" pos:end="91:28">&amp;</operator><name pos:start="91:29" pos:end="91:29">g</name></expr></argument>, <argument pos:start="91:32" pos:end="91:49"><expr pos:start="91:32" pos:end="91:49"><operator pos:start="91:32" pos:end="91:32">&amp;</operator><name pos:start="91:33" pos:end="91:49">ff_asf_jfif_media</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:53" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:45">

        <expr_stmt pos:start="93:9" pos:end="93:34"><expr pos:start="93:9" pos:end="93:33"><name pos:start="93:9" pos:end="93:12">type</name> <operator pos:start="93:14" pos:end="93:14">=</operator> <name pos:start="93:16" pos:end="93:33">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:45"><expr pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:10">st</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:17">codec</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:27">codec_id</name></name> <operator pos:start="95:29" pos:end="95:29">=</operator> <name pos:start="95:31" pos:end="95:44">CODEC_ID_MJPEG</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="97:7" pos:end="101:5">else if <condition pos:start="97:15" pos:end="97:55">(<expr pos:start="97:16" pos:end="97:54"><operator pos:start="97:16" pos:end="97:16">!</operator><call pos:start="97:17" pos:end="97:54"><name pos:start="97:17" pos:end="97:26">ff_guidcmp</name><argument_list pos:start="97:27" pos:end="97:54">(<argument pos:start="97:28" pos:end="97:29"><expr pos:start="97:28" pos:end="97:29"><operator pos:start="97:28" pos:end="97:28">&amp;</operator><name pos:start="97:29" pos:end="97:29">g</name></expr></argument>, <argument pos:start="97:32" pos:end="97:53"><expr pos:start="97:32" pos:end="97:53"><operator pos:start="97:32" pos:end="97:32">&amp;</operator><name pos:start="97:33" pos:end="97:53">ff_asf_command_stream</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:57" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:33">

        <expr_stmt pos:start="99:9" pos:end="99:33"><expr pos:start="99:9" pos:end="99:32"><name pos:start="99:9" pos:end="99:12">type</name> <operator pos:start="99:14" pos:end="99:14">=</operator> <name pos:start="99:16" pos:end="99:32">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="101:7" pos:end="107:5">else if <condition pos:start="101:15" pos:end="101:71">(<expr pos:start="101:16" pos:end="101:70"><operator pos:start="101:16" pos:end="101:16">!</operator><call pos:start="101:17" pos:end="101:70"><name pos:start="101:17" pos:end="101:26">ff_guidcmp</name><argument_list pos:start="101:27" pos:end="101:70">(<argument pos:start="101:28" pos:end="101:29"><expr pos:start="101:28" pos:end="101:29"><operator pos:start="101:28" pos:end="101:28">&amp;</operator><name pos:start="101:29" pos:end="101:29">g</name></expr></argument>, <argument pos:start="101:32" pos:end="101:69"><expr pos:start="101:32" pos:end="101:69"><operator pos:start="101:32" pos:end="101:32">&amp;</operator><name pos:start="101:33" pos:end="101:69">ff_asf_ext_stream_embed_stream_header</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:73" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:36">

        <expr_stmt pos:start="103:9" pos:end="103:38"><expr pos:start="103:9" pos:end="103:37"><name pos:start="103:9" pos:end="103:33">test_for_ext_stream_audio</name> <operator pos:start="103:35" pos:end="103:35">=</operator> <literal type="number" pos:start="103:37" pos:end="103:37">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:36"><expr pos:start="105:9" pos:end="105:35"><name pos:start="105:9" pos:end="105:12">type</name> <operator pos:start="105:14" pos:end="105:14">=</operator> <name pos:start="105:16" pos:end="105:35">AVMEDIA_TYPE_UNKNOWN</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="107:7" pos:end="111:5">else <block pos:start="107:12" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:18">

        <return pos:start="109:9" pos:end="109:18">return <expr pos:start="109:16" pos:end="109:17"><operator pos:start="109:16" pos:end="109:16">-</operator><literal type="number" pos:start="109:17" pos:end="109:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:24"><expr pos:start="113:5" pos:end="113:23"><call pos:start="113:5" pos:end="113:23"><name pos:start="113:5" pos:end="113:15">ff_get_guid</name><argument_list pos:start="113:16" pos:end="113:23">(<argument pos:start="113:17" pos:end="113:18"><expr pos:start="113:17" pos:end="113:18"><name pos:start="113:17" pos:end="113:18">pb</name></expr></argument>, <argument pos:start="113:21" pos:end="113:22"><expr pos:start="113:21" pos:end="113:22"><operator pos:start="113:21" pos:end="113:21">&amp;</operator><name pos:start="113:22" pos:end="113:22">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:31"><expr pos:start="115:5" pos:end="115:30"><name pos:start="115:5" pos:end="115:14">total_size</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <call pos:start="115:18" pos:end="115:30"><name pos:start="115:18" pos:end="115:26">avio_rl64</name><argument_list pos:start="115:27" pos:end="115:30">(<argument pos:start="115:28" pos:end="115:29"><expr pos:start="115:28" pos:end="115:29"><name pos:start="115:28" pos:end="115:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:39"><expr pos:start="117:5" pos:end="117:38"><name pos:start="117:5" pos:end="117:22">type_specific_size</name> <operator pos:start="117:24" pos:end="117:24">=</operator> <call pos:start="117:26" pos:end="117:38"><name pos:start="117:26" pos:end="117:34">avio_rl32</name><argument_list pos:start="117:35" pos:end="117:38">(<argument pos:start="117:36" pos:end="117:37"><expr pos:start="117:36" pos:end="117:37"><name pos:start="117:36" pos:end="117:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:18"><expr pos:start="119:5" pos:end="119:17"><call pos:start="119:5" pos:end="119:17"><name pos:start="119:5" pos:end="119:13">avio_rl32</name><argument_list pos:start="119:14" pos:end="119:17">(<argument pos:start="119:15" pos:end="119:16"><expr pos:start="119:15" pos:end="119:16"><name pos:start="119:15" pos:end="119:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:34"><expr pos:start="121:5" pos:end="121:33"><name pos:start="121:5" pos:end="121:10"><name pos:start="121:5" pos:end="121:6">st</name><operator pos:start="121:7" pos:end="121:8">-&gt;</operator><name pos:start="121:9" pos:end="121:10">id</name></name> <operator pos:start="121:12" pos:end="121:12">=</operator> <call pos:start="121:14" pos:end="121:26"><name pos:start="121:14" pos:end="121:22">avio_rl16</name><argument_list pos:start="121:23" pos:end="121:26">(<argument pos:start="121:24" pos:end="121:25"><expr pos:start="121:24" pos:end="121:25"><name pos:start="121:24" pos:end="121:25">pb</name></expr></argument>)</argument_list></call> <operator pos:start="121:28" pos:end="121:28">&amp;</operator> <literal type="number" pos:start="121:30" pos:end="121:33">0x7f</literal></expr>;</expr_stmt> <comment type="block" pos:start="121:36" pos:end="121:50">/* stream id */</comment>

    <comment type="line" pos:start="123:5" pos:end="123:41">// mapping of asf ID to AV stream ID;</comment>

    <expr_stmt pos:start="125:5" pos:end="125:48"><expr pos:start="125:5" pos:end="125:47"><name pos:start="125:5" pos:end="125:27"><name pos:start="125:5" pos:end="125:7">asf</name><operator pos:start="125:8" pos:end="125:9">-&gt;</operator><name pos:start="125:10" pos:end="125:19">asfid2avid</name><index pos:start="125:20" pos:end="125:27">[<expr pos:start="125:21" pos:end="125:26"><name pos:start="125:21" pos:end="125:26"><name pos:start="125:21" pos:end="125:22">st</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:26">id</name></name></expr>]</index></name> <operator pos:start="125:29" pos:end="125:29">=</operator> <name pos:start="125:31" pos:end="125:43"><name pos:start="125:31" pos:end="125:31">s</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:43">nb_streams</name></name> <operator pos:start="125:45" pos:end="125:45">-</operator> <literal type="number" pos:start="125:47" pos:end="125:47">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:18"><expr pos:start="129:5" pos:end="129:17"><call pos:start="129:5" pos:end="129:17"><name pos:start="129:5" pos:end="129:13">avio_rl32</name><argument_list pos:start="129:14" pos:end="129:17">(<argument pos:start="129:15" pos:end="129:16"><expr pos:start="129:15" pos:end="129:16"><name pos:start="129:15" pos:end="129:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="133:5" pos:end="157:5"><if pos:start="133:5" pos:end="157:5">if <condition pos:start="133:8" pos:end="133:34">(<expr pos:start="133:9" pos:end="133:33"><name pos:start="133:9" pos:end="133:33">test_for_ext_stream_audio</name></expr>)</condition> <block pos:start="133:36" pos:end="157:5">{<block_content pos:start="135:9" pos:end="155:9">

        <expr_stmt pos:start="135:9" pos:end="135:28"><expr pos:start="135:9" pos:end="135:27"><call pos:start="135:9" pos:end="135:27"><name pos:start="135:9" pos:end="135:19">ff_get_guid</name><argument_list pos:start="135:20" pos:end="135:27">(<argument pos:start="135:21" pos:end="135:22"><expr pos:start="135:21" pos:end="135:22"><name pos:start="135:21" pos:end="135:22">pb</name></expr></argument>, <argument pos:start="135:25" pos:end="135:26"><expr pos:start="135:25" pos:end="135:26"><operator pos:start="135:25" pos:end="135:25">&amp;</operator><name pos:start="135:26" pos:end="135:26">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="155:9"><if pos:start="137:9" pos:end="155:9">if <condition pos:start="137:12" pos:end="137:61">(<expr pos:start="137:13" pos:end="137:60"><operator pos:start="137:13" pos:end="137:13">!</operator><call pos:start="137:14" pos:end="137:60"><name pos:start="137:14" pos:end="137:23">ff_guidcmp</name><argument_list pos:start="137:24" pos:end="137:60">(<argument pos:start="137:25" pos:end="137:26"><expr pos:start="137:25" pos:end="137:26"><operator pos:start="137:25" pos:end="137:25">&amp;</operator><name pos:start="137:26" pos:end="137:26">g</name></expr></argument>, <argument pos:start="137:29" pos:end="137:59"><expr pos:start="137:29" pos:end="137:59"><operator pos:start="137:29" pos:end="137:29">&amp;</operator><name pos:start="137:30" pos:end="137:59">ff_asf_ext_stream_audio_stream</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:63" pos:end="155:9">{<block_content pos:start="139:13" pos:end="153:26">

            <expr_stmt pos:start="139:13" pos:end="139:38"><expr pos:start="139:13" pos:end="139:37"><name pos:start="139:13" pos:end="139:16">type</name> <operator pos:start="139:18" pos:end="139:18">=</operator> <name pos:start="139:20" pos:end="139:37">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:30"><expr pos:start="141:13" pos:end="141:29"><name pos:start="141:13" pos:end="141:27">is_dvr_ms_audio</name><operator pos:start="141:28" pos:end="141:28">=</operator><literal type="number" pos:start="141:29" pos:end="141:29">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:32"><expr pos:start="143:13" pos:end="143:31"><call pos:start="143:13" pos:end="143:31"><name pos:start="143:13" pos:end="143:23">ff_get_guid</name><argument_list pos:start="143:24" pos:end="143:31">(<argument pos:start="143:25" pos:end="143:26"><expr pos:start="143:25" pos:end="143:26"><name pos:start="143:25" pos:end="143:26">pb</name></expr></argument>, <argument pos:start="143:29" pos:end="143:30"><expr pos:start="143:29" pos:end="143:30"><operator pos:start="143:29" pos:end="143:29">&amp;</operator><name pos:start="143:30" pos:end="143:30">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:26"><expr pos:start="145:13" pos:end="145:25"><call pos:start="145:13" pos:end="145:25"><name pos:start="145:13" pos:end="145:21">avio_rl32</name><argument_list pos:start="145:22" pos:end="145:25">(<argument pos:start="145:23" pos:end="145:24"><expr pos:start="145:23" pos:end="145:24"><name pos:start="145:23" pos:end="145:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:26"><expr pos:start="147:13" pos:end="147:25"><call pos:start="147:13" pos:end="147:25"><name pos:start="147:13" pos:end="147:21">avio_rl32</name><argument_list pos:start="147:22" pos:end="147:25">(<argument pos:start="147:23" pos:end="147:24"><expr pos:start="147:23" pos:end="147:24"><name pos:start="147:23" pos:end="147:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:26"><expr pos:start="149:13" pos:end="149:25"><call pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:21">avio_rl32</name><argument_list pos:start="149:22" pos:end="149:25">(<argument pos:start="149:23" pos:end="149:24"><expr pos:start="149:23" pos:end="149:24"><name pos:start="149:23" pos:end="149:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:32"><expr pos:start="151:13" pos:end="151:31"><call pos:start="151:13" pos:end="151:31"><name pos:start="151:13" pos:end="151:23">ff_get_guid</name><argument_list pos:start="151:24" pos:end="151:31">(<argument pos:start="151:25" pos:end="151:26"><expr pos:start="151:25" pos:end="151:26"><name pos:start="151:25" pos:end="151:26">pb</name></expr></argument>, <argument pos:start="151:29" pos:end="151:30"><expr pos:start="151:29" pos:end="151:30"><operator pos:start="151:29" pos:end="151:29">&amp;</operator><name pos:start="151:30" pos:end="151:30">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:26"><expr pos:start="153:13" pos:end="153:25"><call pos:start="153:13" pos:end="153:25"><name pos:start="153:13" pos:end="153:21">avio_rl32</name><argument_list pos:start="153:22" pos:end="153:25">(<argument pos:start="153:23" pos:end="153:24"><expr pos:start="153:23" pos:end="153:24"><name pos:start="153:23" pos:end="153:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:33"><expr pos:start="161:5" pos:end="161:32"><name pos:start="161:5" pos:end="161:25"><name pos:start="161:5" pos:end="161:6">st</name><operator pos:start="161:7" pos:end="161:8">-&gt;</operator><name pos:start="161:9" pos:end="161:13">codec</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:25">codec_type</name></name> <operator pos:start="161:27" pos:end="161:27">=</operator> <name pos:start="161:29" pos:end="161:32">type</name></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="361:5"><if pos:start="163:5" pos:end="263:5">if <condition pos:start="163:8" pos:end="163:35">(<expr pos:start="163:9" pos:end="163:34"><name pos:start="163:9" pos:end="163:12">type</name> <operator pos:start="163:14" pos:end="163:15">==</operator> <name pos:start="163:17" pos:end="163:34">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="163:37" pos:end="263:5">{<block_content pos:start="165:9" pos:end="261:9">

        <expr_stmt pos:start="165:9" pos:end="165:61"><expr pos:start="165:9" pos:end="165:60"><call pos:start="165:9" pos:end="165:60"><name pos:start="165:9" pos:end="165:25">ff_get_wav_header</name><argument_list pos:start="165:26" pos:end="165:60">(<argument pos:start="165:27" pos:end="165:28"><expr pos:start="165:27" pos:end="165:28"><name pos:start="165:27" pos:end="165:28">pb</name></expr></argument>, <argument pos:start="165:31" pos:end="165:39"><expr pos:start="165:31" pos:end="165:39"><name pos:start="165:31" pos:end="165:39"><name pos:start="165:31" pos:end="165:32">st</name><operator pos:start="165:33" pos:end="165:34">-&gt;</operator><name pos:start="165:35" pos:end="165:39">codec</name></name></expr></argument>, <argument pos:start="165:42" pos:end="165:59"><expr pos:start="165:42" pos:end="165:59"><name pos:start="165:42" pos:end="165:59">type_specific_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="177:9"><if pos:start="167:9" pos:end="177:9">if <condition pos:start="167:12" pos:end="167:28">(<expr pos:start="167:13" pos:end="167:27"><name pos:start="167:13" pos:end="167:27">is_dvr_ms_audio</name></expr>)</condition> <block pos:start="167:30" pos:end="177:9">{<block_content pos:start="173:13" pos:end="175:37">

            <comment type="line" pos:start="169:13" pos:end="169:62">// codec_id and codec_tag are unreliable in dvr_ms</comment>

            <comment type="line" pos:start="171:13" pos:end="171:55">// files. Set them later by probing stream.</comment>

            <expr_stmt pos:start="173:13" pos:end="173:49"><expr pos:start="173:13" pos:end="173:48"><name pos:start="173:13" pos:end="173:31"><name pos:start="173:13" pos:end="173:14">st</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:21">codec</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:31">codec_id</name></name> <operator pos:start="173:33" pos:end="173:33">=</operator> <name pos:start="173:35" pos:end="173:48">CODEC_ID_PROBE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:37"><expr pos:start="175:13" pos:end="175:36"><name pos:start="175:13" pos:end="175:32"><name pos:start="175:13" pos:end="175:14">st</name><operator pos:start="175:15" pos:end="175:16">-&gt;</operator><name pos:start="175:17" pos:end="175:21">codec</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:32">codec_tag</name></name> <operator pos:start="175:34" pos:end="175:34">=</operator> <literal type="number" pos:start="175:36" pos:end="175:36">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="179:9" pos:end="187:9"><if pos:start="179:9" pos:end="183:9">if <condition pos:start="179:12" pos:end="179:48">(<expr pos:start="179:13" pos:end="179:47"><name pos:start="179:13" pos:end="179:31"><name pos:start="179:13" pos:end="179:14">st</name><operator pos:start="179:15" pos:end="179:16">-&gt;</operator><name pos:start="179:17" pos:end="179:21">codec</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator><name pos:start="179:24" pos:end="179:31">codec_id</name></name> <operator pos:start="179:33" pos:end="179:34">==</operator> <name pos:start="179:36" pos:end="179:47">CODEC_ID_AAC</name></expr>)</condition> <block pos:start="179:50" pos:end="183:9">{<block_content pos:start="181:13" pos:end="181:51">

            <expr_stmt pos:start="181:13" pos:end="181:51"><expr pos:start="181:13" pos:end="181:50"><name pos:start="181:13" pos:end="181:28"><name pos:start="181:13" pos:end="181:14">st</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:28">need_parsing</name></name> <operator pos:start="181:30" pos:end="181:30">=</operator> <name pos:start="181:32" pos:end="181:50">AVSTREAM_PARSE_NONE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="183:11" pos:end="187:9">else <block pos:start="183:16" pos:end="187:9">{<block_content pos:start="185:13" pos:end="185:51">

            <expr_stmt pos:start="185:13" pos:end="185:51"><expr pos:start="185:13" pos:end="185:50"><name pos:start="185:13" pos:end="185:28"><name pos:start="185:13" pos:end="185:14">st</name><operator pos:start="185:15" pos:end="185:16">-&gt;</operator><name pos:start="185:17" pos:end="185:28">need_parsing</name></name> <operator pos:start="185:30" pos:end="185:30">=</operator> <name pos:start="185:32" pos:end="185:50">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="189:9" pos:end="189:63">/* We have to init the frame size at some point .... */</comment>

        <expr_stmt pos:start="191:9" pos:end="191:29"><expr pos:start="191:9" pos:end="191:28"><name pos:start="191:9" pos:end="191:12">pos2</name> <operator pos:start="191:14" pos:end="191:14">=</operator> <call pos:start="191:16" pos:end="191:28"><name pos:start="191:16" pos:end="191:24">avio_tell</name><argument_list pos:start="191:25" pos:end="191:28">(<argument pos:start="191:26" pos:end="191:27"><expr pos:start="191:26" pos:end="191:27"><name pos:start="191:26" pos:end="191:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="193:9" pos:end="205:9"><if pos:start="193:9" pos:end="205:9">if <condition pos:start="193:12" pos:end="193:43">(<expr pos:start="193:13" pos:end="193:42"><name pos:start="193:13" pos:end="193:16">size</name> <operator pos:start="193:18" pos:end="193:19">&gt;=</operator> <operator pos:start="193:21" pos:end="193:21">(</operator><name pos:start="193:22" pos:end="193:25">pos2</name> <operator pos:start="193:27" pos:end="193:27">+</operator> <literal type="number" pos:start="193:29" pos:end="193:31">8</literal> <operator pos:start="193:31" pos:end="193:31">-</operator> <name pos:start="193:33" pos:end="193:36">pos1</name> <operator pos:start="193:38" pos:end="193:38">+</operator> <literal type="number" pos:start="193:40" pos:end="193:41">24</literal><operator pos:start="193:42" pos:end="193:42">)</operator></expr>)</condition> <block pos:start="193:45" pos:end="205:9">{<block_content pos:start="195:13" pos:end="203:24">

            <expr_stmt pos:start="195:13" pos:end="195:42"><expr pos:start="195:13" pos:end="195:41"><name pos:start="195:13" pos:end="195:27"><name pos:start="195:13" pos:end="195:18">asf_st</name><operator pos:start="195:19" pos:end="195:20">-&gt;</operator><name pos:start="195:21" pos:end="195:27">ds_span</name></name> <operator pos:start="195:29" pos:end="195:29">=</operator> <call pos:start="195:31" pos:end="195:41"><name pos:start="195:31" pos:end="195:37">avio_r8</name><argument_list pos:start="195:38" pos:end="195:41">(<argument pos:start="195:39" pos:end="195:40"><expr pos:start="195:39" pos:end="195:40"><name pos:start="195:39" pos:end="195:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:51"><expr pos:start="197:13" pos:end="197:50"><name pos:start="197:13" pos:end="197:34"><name pos:start="197:13" pos:end="197:18">asf_st</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:34">ds_packet_size</name></name> <operator pos:start="197:36" pos:end="197:36">=</operator> <call pos:start="197:38" pos:end="197:50"><name pos:start="197:38" pos:end="197:46">avio_rl16</name><argument_list pos:start="197:47" pos:end="197:50">(<argument pos:start="197:48" pos:end="197:49"><expr pos:start="197:48" pos:end="197:49"><name pos:start="197:48" pos:end="197:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:50"><expr pos:start="199:13" pos:end="199:49"><name pos:start="199:13" pos:end="199:33"><name pos:start="199:13" pos:end="199:18">asf_st</name><operator pos:start="199:19" pos:end="199:20">-&gt;</operator><name pos:start="199:21" pos:end="199:33">ds_chunk_size</name></name> <operator pos:start="199:35" pos:end="199:35">=</operator> <call pos:start="199:37" pos:end="199:49"><name pos:start="199:37" pos:end="199:45">avio_rl16</name><argument_list pos:start="199:46" pos:end="199:49">(<argument pos:start="199:47" pos:end="199:48"><expr pos:start="199:47" pos:end="199:48"><name pos:start="199:47" pos:end="199:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:26"><expr pos:start="201:13" pos:end="201:25"><call pos:start="201:13" pos:end="201:25"><name pos:start="201:13" pos:end="201:21">avio_rl16</name><argument_list pos:start="201:22" pos:end="201:25">(<argument pos:start="201:23" pos:end="201:24"><expr pos:start="201:23" pos:end="201:24"><name pos:start="201:23" pos:end="201:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="201:28" pos:end="201:41">//ds_data_size</comment>

            <expr_stmt pos:start="203:13" pos:end="203:24"><expr pos:start="203:13" pos:end="203:23"><call pos:start="203:13" pos:end="203:23"><name pos:start="203:13" pos:end="203:19">avio_r8</name><argument_list pos:start="203:20" pos:end="203:23">(<argument pos:start="203:21" pos:end="203:22"><expr pos:start="203:21" pos:end="203:22"><name pos:start="203:21" pos:end="203:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="203:28" pos:end="203:44">//ds_silence_data</comment>

        </block_content>}</block></if></if_stmt>

        <comment type="line" pos:start="207:9" pos:end="207:65">//printf("Descrambling: ps:%d cs:%d ds:%d s:%d  sd:%d\n",</comment>

        <comment type="line" pos:start="209:9" pos:end="209:63">//       asf_st-&gt;ds_packet_size, asf_st-&gt;ds_chunk_size,</comment>

        <comment type="line" pos:start="211:9" pos:end="211:81">//       asf_st-&gt;ds_data_size, asf_st-&gt;ds_span, asf_st-&gt;ds_silence_data);</comment>

        <if_stmt pos:start="213:9" pos:end="223:9"><if pos:start="213:9" pos:end="223:9">if <condition pos:start="213:12" pos:end="213:32">(<expr pos:start="213:13" pos:end="213:31"><name pos:start="213:13" pos:end="213:27"><name pos:start="213:13" pos:end="213:18">asf_st</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:27">ds_span</name></name> <operator pos:start="213:29" pos:end="213:29">&gt;</operator> <literal type="number" pos:start="213:31" pos:end="213:31">1</literal></expr>)</condition> <block pos:start="213:34" pos:end="223:9">{<block_content pos:start="215:13" pos:end="221:36">

            <if_stmt pos:start="215:13" pos:end="221:36"><if pos:start="215:13" pos:end="221:36">if <condition pos:start="215:16" pos:end="219:70">(<expr pos:start="215:17" pos:end="219:69"><operator pos:start="215:17" pos:end="215:17">!</operator><name pos:start="215:18" pos:end="215:38"><name pos:start="215:18" pos:end="215:23">asf_st</name><operator pos:start="215:24" pos:end="215:25">-&gt;</operator><name pos:start="215:26" pos:end="215:38">ds_chunk_size</name></name>

                    <operator pos:start="217:21" pos:end="217:22">||</operator> <operator pos:start="217:24" pos:end="217:24">(</operator><name pos:start="217:25" pos:end="217:46"><name pos:start="217:25" pos:end="217:30">asf_st</name><operator pos:start="217:31" pos:end="217:32">-&gt;</operator><name pos:start="217:33" pos:end="217:46">ds_packet_size</name></name><operator pos:start="217:47" pos:end="217:47">/</operator><name pos:start="217:48" pos:end="217:68"><name pos:start="217:48" pos:end="217:53">asf_st</name><operator pos:start="217:54" pos:end="217:55">-&gt;</operator><name pos:start="217:56" pos:end="217:68">ds_chunk_size</name></name> <operator pos:start="217:70" pos:end="217:71">&lt;=</operator> <literal type="number" pos:start="217:73" pos:end="217:73">1</literal><operator pos:start="217:74" pos:end="217:74">)</operator>

                    <operator pos:start="219:21" pos:end="219:22">||</operator> <name pos:start="219:24" pos:end="219:45"><name pos:start="219:24" pos:end="219:29">asf_st</name><operator pos:start="219:30" pos:end="219:31">-&gt;</operator><name pos:start="219:32" pos:end="219:45">ds_packet_size</name></name> <operator pos:start="219:47" pos:end="219:47">%</operator> <name pos:start="219:49" pos:end="219:69"><name pos:start="219:49" pos:end="219:54">asf_st</name><operator pos:start="219:55" pos:end="219:56">-&gt;</operator><name pos:start="219:57" pos:end="219:69">ds_chunk_size</name></name></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="221:36"><block_content pos:start="221:17" pos:end="221:36">

                <expr_stmt pos:start="221:17" pos:end="221:36"><expr pos:start="221:17" pos:end="221:35"><name pos:start="221:17" pos:end="221:31"><name pos:start="221:17" pos:end="221:22">asf_st</name><operator pos:start="221:23" pos:end="221:24">-&gt;</operator><name pos:start="221:25" pos:end="221:31">ds_span</name></name> <operator pos:start="221:33" pos:end="221:33">=</operator> <literal type="number" pos:start="221:35" pos:end="221:35">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="221:38" pos:end="221:60">// disable descrambling</comment>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="225:9" pos:end="261:9">switch <condition pos:start="225:16" pos:end="225:36">(<expr pos:start="225:17" pos:end="225:35"><name pos:start="225:17" pos:end="225:35"><name pos:start="225:17" pos:end="225:18">st</name><operator pos:start="225:19" pos:end="225:20">-&gt;</operator><name pos:start="225:21" pos:end="225:25">codec</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:35">codec_id</name></name></expr>)</condition> <block pos:start="225:38" pos:end="261:9">{<block_content pos:start="227:13" pos:end="259:22">

            <case pos:start="227:13" pos:end="227:30">case <expr pos:start="227:18" pos:end="227:29"><name pos:start="227:18" pos:end="227:29">CODEC_ID_MP3</name></expr>:</case>

                <expr_stmt pos:start="229:17" pos:end="229:55"><expr pos:start="229:17" pos:end="229:54"><name pos:start="229:17" pos:end="229:37"><name pos:start="229:17" pos:end="229:18">st</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:25">codec</name><operator pos:start="229:26" pos:end="229:27">-&gt;</operator><name pos:start="229:28" pos:end="229:37">frame_size</name></name> <operator pos:start="229:39" pos:end="229:39">=</operator> <name pos:start="229:41" pos:end="229:54">MPA_FRAME_SIZE</name></expr>;</expr_stmt>

                <break pos:start="231:17" pos:end="231:22">break;</break>

            <case pos:start="233:13" pos:end="233:36">case <expr pos:start="233:18" pos:end="233:35"><name pos:start="233:18" pos:end="233:35">CODEC_ID_PCM_S16LE</name></expr>:</case>

            <case pos:start="235:13" pos:end="235:36">case <expr pos:start="235:18" pos:end="235:35"><name pos:start="235:18" pos:end="235:35">CODEC_ID_PCM_S16BE</name></expr>:</case>

            <case pos:start="237:13" pos:end="237:36">case <expr pos:start="237:18" pos:end="237:35"><name pos:start="237:18" pos:end="237:35">CODEC_ID_PCM_U16LE</name></expr>:</case>

            <case pos:start="239:13" pos:end="239:36">case <expr pos:start="239:18" pos:end="239:35"><name pos:start="239:18" pos:end="239:35">CODEC_ID_PCM_U16BE</name></expr>:</case>

            <case pos:start="241:13" pos:end="241:33">case <expr pos:start="241:18" pos:end="241:32"><name pos:start="241:18" pos:end="241:32">CODEC_ID_PCM_S8</name></expr>:</case>

            <case pos:start="243:13" pos:end="243:33">case <expr pos:start="243:18" pos:end="243:32"><name pos:start="243:18" pos:end="243:32">CODEC_ID_PCM_U8</name></expr>:</case>

            <case pos:start="245:13" pos:end="245:35">case <expr pos:start="245:18" pos:end="245:34"><name pos:start="245:18" pos:end="245:34">CODEC_ID_PCM_ALAW</name></expr>:</case>

            <case pos:start="247:13" pos:end="247:36">case <expr pos:start="247:18" pos:end="247:35"><name pos:start="247:18" pos:end="247:35">CODEC_ID_PCM_MULAW</name></expr>:</case>

                <expr_stmt pos:start="249:17" pos:end="249:42"><expr pos:start="249:17" pos:end="249:41"><name pos:start="249:17" pos:end="249:37"><name pos:start="249:17" pos:end="249:18">st</name><operator pos:start="249:19" pos:end="249:20">-&gt;</operator><name pos:start="249:21" pos:end="249:25">codec</name><operator pos:start="249:26" pos:end="249:27">-&gt;</operator><name pos:start="249:28" pos:end="249:37">frame_size</name></name> <operator pos:start="249:39" pos:end="249:39">=</operator> <literal type="number" pos:start="249:41" pos:end="249:41">1</literal></expr>;</expr_stmt>

                <break pos:start="251:17" pos:end="251:22">break;</break>

            <default pos:start="253:13" pos:end="253:20">default:</default>

                <comment type="block" pos:start="255:17" pos:end="255:75">/* This is probably wrong, but it prevents a crash later */</comment>

                <expr_stmt pos:start="257:17" pos:end="257:42"><expr pos:start="257:17" pos:end="257:41"><name pos:start="257:17" pos:end="257:37"><name pos:start="257:17" pos:end="257:18">st</name><operator pos:start="257:19" pos:end="257:20">-&gt;</operator><name pos:start="257:21" pos:end="257:25">codec</name><operator pos:start="257:26" pos:end="257:27">-&gt;</operator><name pos:start="257:28" pos:end="257:37">frame_size</name></name> <operator pos:start="257:39" pos:end="257:39">=</operator> <literal type="number" pos:start="257:41" pos:end="257:41">1</literal></expr>;</expr_stmt>

                <break pos:start="259:17" pos:end="259:22">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if> <if type="elseif" pos:start="263:7" pos:end="361:5">else if <condition pos:start="263:15" pos:end="265:53">(<expr pos:start="263:16" pos:end="265:52"><name pos:start="263:16" pos:end="263:19">type</name> <operator pos:start="263:21" pos:end="263:22">==</operator> <name pos:start="263:24" pos:end="263:41">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="263:43" pos:end="263:44">&amp;&amp;</operator>

            <name pos:start="265:13" pos:end="265:16">size</name> <operator pos:start="265:18" pos:end="265:18">-</operator> <operator pos:start="265:20" pos:end="265:20">(</operator><call pos:start="265:21" pos:end="265:33"><name pos:start="265:21" pos:end="265:29">avio_tell</name><argument_list pos:start="265:30" pos:end="265:33">(<argument pos:start="265:31" pos:end="265:32"><expr pos:start="265:31" pos:end="265:32"><name pos:start="265:31" pos:end="265:32">pb</name></expr></argument>)</argument_list></call> <operator pos:start="265:35" pos:end="265:35">-</operator> <name pos:start="265:37" pos:end="265:40">pos1</name> <operator pos:start="265:42" pos:end="265:42">+</operator> <literal type="number" pos:start="265:44" pos:end="265:45">24</literal><operator pos:start="265:46" pos:end="265:46">)</operator> <operator pos:start="265:48" pos:end="265:49">&gt;=</operator> <literal type="number" pos:start="265:51" pos:end="265:52">51</literal></expr>)</condition> <block pos:start="265:55" pos:end="361:5">{<block_content pos:start="267:9" pos:end="359:56">

        <expr_stmt pos:start="267:9" pos:end="267:22"><expr pos:start="267:9" pos:end="267:21"><call pos:start="267:9" pos:end="267:21"><name pos:start="267:9" pos:end="267:17">avio_rl32</name><argument_list pos:start="267:18" pos:end="267:21">(<argument pos:start="267:19" pos:end="267:20"><expr pos:start="267:19" pos:end="267:20"><name pos:start="267:19" pos:end="267:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:22"><expr pos:start="269:9" pos:end="269:21"><call pos:start="269:9" pos:end="269:21"><name pos:start="269:9" pos:end="269:17">avio_rl32</name><argument_list pos:start="269:18" pos:end="269:21">(<argument pos:start="269:19" pos:end="269:20"><expr pos:start="269:19" pos:end="269:20"><name pos:start="269:19" pos:end="269:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:20"><expr pos:start="271:9" pos:end="271:19"><call pos:start="271:9" pos:end="271:19"><name pos:start="271:9" pos:end="271:15">avio_r8</name><argument_list pos:start="271:16" pos:end="271:19">(<argument pos:start="271:17" pos:end="271:18"><expr pos:start="271:17" pos:end="271:18"><name pos:start="271:17" pos:end="271:18">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:22"><expr pos:start="273:9" pos:end="273:21"><call pos:start="273:9" pos:end="273:21"><name pos:start="273:9" pos:end="273:17">avio_rl16</name><argument_list pos:start="273:18" pos:end="273:21">(<argument pos:start="273:19" pos:end="273:20"><expr pos:start="273:19" pos:end="273:20"><name pos:start="273:19" pos:end="273:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>        <comment type="block" pos:start="273:31" pos:end="273:40">/* size */</comment>

        <expr_stmt pos:start="275:9" pos:end="275:29"><expr pos:start="275:9" pos:end="275:28"><name pos:start="275:9" pos:end="275:13">sizeX</name><operator pos:start="275:14" pos:end="275:14">=</operator> <call pos:start="275:16" pos:end="275:28"><name pos:start="275:16" pos:end="275:24">avio_rl32</name><argument_list pos:start="275:25" pos:end="275:28">(<argument pos:start="275:26" pos:end="275:27"><expr pos:start="275:26" pos:end="275:27"><name pos:start="275:26" pos:end="275:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="275:31" pos:end="275:40">/* size */</comment>

        <expr_stmt pos:start="277:9" pos:end="277:41"><expr pos:start="277:9" pos:end="277:40"><name pos:start="277:9" pos:end="277:24"><name pos:start="277:9" pos:end="277:10">st</name><operator pos:start="277:11" pos:end="277:12">-&gt;</operator><name pos:start="277:13" pos:end="277:17">codec</name><operator pos:start="277:18" pos:end="277:19">-&gt;</operator><name pos:start="277:20" pos:end="277:24">width</name></name> <operator pos:start="277:26" pos:end="277:26">=</operator> <call pos:start="277:28" pos:end="277:40"><name pos:start="277:28" pos:end="277:36">avio_rl32</name><argument_list pos:start="277:37" pos:end="277:40">(<argument pos:start="277:38" pos:end="277:39"><expr pos:start="277:38" pos:end="277:39"><name pos:start="277:38" pos:end="277:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:42"><expr pos:start="279:9" pos:end="279:41"><name pos:start="279:9" pos:end="279:25"><name pos:start="279:9" pos:end="279:10">st</name><operator pos:start="279:11" pos:end="279:12">-&gt;</operator><name pos:start="279:13" pos:end="279:17">codec</name><operator pos:start="279:18" pos:end="279:19">-&gt;</operator><name pos:start="279:20" pos:end="279:25">height</name></name> <operator pos:start="279:27" pos:end="279:27">=</operator> <call pos:start="279:29" pos:end="279:41"><name pos:start="279:29" pos:end="279:37">avio_rl32</name><argument_list pos:start="279:38" pos:end="279:41">(<argument pos:start="279:39" pos:end="279:40"><expr pos:start="279:39" pos:end="279:40"><name pos:start="279:39" pos:end="279:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="281:9" pos:end="281:35">/* not available for asf */</comment>

        <expr_stmt pos:start="283:9" pos:end="283:22"><expr pos:start="283:9" pos:end="283:21"><call pos:start="283:9" pos:end="283:21"><name pos:start="283:9" pos:end="283:17">avio_rl16</name><argument_list pos:start="283:18" pos:end="283:21">(<argument pos:start="283:19" pos:end="283:20"><expr pos:start="283:19" pos:end="283:20"><name pos:start="283:19" pos:end="283:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="283:24" pos:end="283:34">/* panes */</comment>

        <expr_stmt pos:start="285:9" pos:end="285:57"><expr pos:start="285:9" pos:end="285:56"><name pos:start="285:9" pos:end="285:40"><name pos:start="285:9" pos:end="285:10">st</name><operator pos:start="285:11" pos:end="285:12">-&gt;</operator><name pos:start="285:13" pos:end="285:17">codec</name><operator pos:start="285:18" pos:end="285:19">-&gt;</operator><name pos:start="285:20" pos:end="285:40">bits_per_coded_sample</name></name> <operator pos:start="285:42" pos:end="285:42">=</operator> <call pos:start="285:44" pos:end="285:56"><name pos:start="285:44" pos:end="285:52">avio_rl16</name><argument_list pos:start="285:53" pos:end="285:56">(<argument pos:start="285:54" pos:end="285:55"><expr pos:start="285:54" pos:end="285:55"><name pos:start="285:54" pos:end="285:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="285:59" pos:end="285:69">/* depth */</comment>

        <expr_stmt pos:start="287:9" pos:end="287:29"><expr pos:start="287:9" pos:end="287:28"><name pos:start="287:9" pos:end="287:12">tag1</name> <operator pos:start="287:14" pos:end="287:14">=</operator> <call pos:start="287:16" pos:end="287:28"><name pos:start="287:16" pos:end="287:24">avio_rl32</name><argument_list pos:start="287:25" pos:end="287:28">(<argument pos:start="287:26" pos:end="287:27"><expr pos:start="287:26" pos:end="287:27"><name pos:start="287:26" pos:end="287:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:26"><expr pos:start="289:9" pos:end="289:25"><call pos:start="289:9" pos:end="289:25"><name pos:start="289:9" pos:end="289:17">avio_skip</name><argument_list pos:start="289:18" pos:end="289:25">(<argument pos:start="289:19" pos:end="289:20"><expr pos:start="289:19" pos:end="289:20"><name pos:start="289:19" pos:end="289:20">pb</name></expr></argument>, <argument pos:start="289:23" pos:end="289:24"><expr pos:start="289:23" pos:end="289:24"><literal type="number" pos:start="289:23" pos:end="289:24">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="291:9" pos:end="291:106">//                av_log(s, AV_LOG_DEBUG, "size:%d tsize:%d sizeX:%d\n", size, total_size, sizeX);</comment>

        <if_stmt pos:start="293:9" pos:end="301:9"><if pos:start="293:9" pos:end="301:9">if <condition pos:start="293:12" pos:end="293:23">(<expr pos:start="293:13" pos:end="293:22"><name pos:start="293:13" pos:end="293:17">sizeX</name> <operator pos:start="293:19" pos:end="293:19">&gt;</operator> <literal type="number" pos:start="293:21" pos:end="293:22">40</literal></expr>)</condition> <block pos:start="293:25" pos:end="301:9">{<block_content pos:start="295:13" pos:end="299:75">

            <expr_stmt pos:start="295:13" pos:end="295:51"><expr pos:start="295:13" pos:end="295:50"><name pos:start="295:13" pos:end="295:37"><name pos:start="295:13" pos:end="295:14">st</name><operator pos:start="295:15" pos:end="295:16">-&gt;</operator><name pos:start="295:17" pos:end="295:21">codec</name><operator pos:start="295:22" pos:end="295:23">-&gt;</operator><name pos:start="295:24" pos:end="295:37">extradata_size</name></name> <operator pos:start="295:39" pos:end="295:39">=</operator> <name pos:start="295:41" pos:end="295:45">sizeX</name> <operator pos:start="295:47" pos:end="295:47">-</operator> <literal type="number" pos:start="295:49" pos:end="295:50">40</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:104"><expr pos:start="297:13" pos:end="297:103"><name pos:start="297:13" pos:end="297:32"><name pos:start="297:13" pos:end="297:14">st</name><operator pos:start="297:15" pos:end="297:16">-&gt;</operator><name pos:start="297:17" pos:end="297:21">codec</name><operator pos:start="297:22" pos:end="297:23">-&gt;</operator><name pos:start="297:24" pos:end="297:32">extradata</name></name> <operator pos:start="297:34" pos:end="297:34">=</operator> <call pos:start="297:36" pos:end="297:103"><name pos:start="297:36" pos:end="297:45">av_mallocz</name><argument_list pos:start="297:46" pos:end="297:103">(<argument pos:start="297:47" pos:end="297:102"><expr pos:start="297:47" pos:end="297:102"><name pos:start="297:47" pos:end="297:71"><name pos:start="297:47" pos:end="297:48">st</name><operator pos:start="297:49" pos:end="297:50">-&gt;</operator><name pos:start="297:51" pos:end="297:55">codec</name><operator pos:start="297:56" pos:end="297:57">-&gt;</operator><name pos:start="297:58" pos:end="297:71">extradata_size</name></name> <operator pos:start="297:73" pos:end="297:73">+</operator> <name pos:start="297:75" pos:end="297:102">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:75"><expr pos:start="299:13" pos:end="299:74"><call pos:start="299:13" pos:end="299:74"><name pos:start="299:13" pos:end="299:21">avio_read</name><argument_list pos:start="299:22" pos:end="299:74">(<argument pos:start="299:23" pos:end="299:24"><expr pos:start="299:23" pos:end="299:24"><name pos:start="299:23" pos:end="299:24">pb</name></expr></argument>, <argument pos:start="299:27" pos:end="299:46"><expr pos:start="299:27" pos:end="299:46"><name pos:start="299:27" pos:end="299:46"><name pos:start="299:27" pos:end="299:28">st</name><operator pos:start="299:29" pos:end="299:30">-&gt;</operator><name pos:start="299:31" pos:end="299:35">codec</name><operator pos:start="299:36" pos:end="299:37">-&gt;</operator><name pos:start="299:38" pos:end="299:46">extradata</name></name></expr></argument>, <argument pos:start="299:49" pos:end="299:73"><expr pos:start="299:49" pos:end="299:73"><name pos:start="299:49" pos:end="299:73"><name pos:start="299:49" pos:end="299:50">st</name><operator pos:start="299:51" pos:end="299:52">-&gt;</operator><name pos:start="299:53" pos:end="299:57">codec</name><operator pos:start="299:58" pos:end="299:59">-&gt;</operator><name pos:start="299:60" pos:end="299:73">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="305:9" pos:end="305:56">/* Extract palette from extradata if bpp &lt;= 8 */</comment>

        <comment type="block" pos:start="307:9" pos:end="307:68">/* This code assumes that extradata contains only palette */</comment>

        <comment type="block" pos:start="309:9" pos:end="309:72">/* This is true for all paletted codecs implemented in ffmpeg */</comment>

        <if_stmt pos:start="311:9" pos:end="333:9"><if pos:start="311:9" pos:end="333:9">if <condition pos:start="311:12" pos:end="311:81">(<expr pos:start="311:13" pos:end="311:80"><name pos:start="311:13" pos:end="311:37"><name pos:start="311:13" pos:end="311:14">st</name><operator pos:start="311:15" pos:end="311:16">-&gt;</operator><name pos:start="311:17" pos:end="311:21">codec</name><operator pos:start="311:22" pos:end="311:23">-&gt;</operator><name pos:start="311:24" pos:end="311:37">extradata_size</name></name> <operator pos:start="311:39" pos:end="311:40">&amp;&amp;</operator> <operator pos:start="311:42" pos:end="311:42">(</operator><name pos:start="311:43" pos:end="311:74"><name pos:start="311:43" pos:end="311:44">st</name><operator pos:start="311:45" pos:end="311:46">-&gt;</operator><name pos:start="311:47" pos:end="311:51">codec</name><operator pos:start="311:52" pos:end="311:53">-&gt;</operator><name pos:start="311:54" pos:end="311:74">bits_per_coded_sample</name></name> <operator pos:start="311:76" pos:end="311:77">&lt;=</operator> <literal type="number" pos:start="311:79" pos:end="311:79">8</literal><operator pos:start="311:80" pos:end="311:80">)</operator></expr>)</condition> <block pos:start="311:83" pos:end="333:9">{<block_content pos:start="313:13" pos:end="331:52">

            <decl_stmt pos:start="313:13" pos:end="313:28"><decl pos:start="313:13" pos:end="313:27"><type pos:start="313:13" pos:end="313:25"><name pos:start="313:13" pos:end="313:15">int</name> <name pos:start="313:17" pos:end="313:25">av_unused</name></type> <name pos:start="313:27" pos:end="313:27">i</name></decl>;</decl_stmt>

            <expr_stmt pos:start="315:13" pos:end="318:0"><expr pos:start="315:13" pos:end="315:69"><name pos:start="315:13" pos:end="315:30"><name pos:start="315:13" pos:end="315:14">st</name><operator pos:start="315:15" pos:end="315:16">-&gt;</operator><name pos:start="315:17" pos:end="315:21">codec</name><operator pos:start="315:22" pos:end="315:23">-&gt;</operator><name pos:start="315:24" pos:end="315:30">palctrl</name></name> <operator pos:start="315:32" pos:end="315:32">=</operator> <call pos:start="315:34" pos:end="315:69"><name pos:start="315:34" pos:end="315:43">av_mallocz</name><argument_list pos:start="315:44" pos:end="315:69">(<argument pos:start="315:45" pos:end="315:68"><expr pos:start="315:45" pos:end="315:68"><sizeof pos:start="315:45" pos:end="315:68">sizeof<argument_list pos:start="315:51" pos:end="315:68">(<argument pos:start="315:52" pos:end="315:67"><expr pos:start="315:52" pos:end="315:67"><name pos:start="315:52" pos:end="315:67">AVPaletteControl</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="317:1" pos:end="317:18">#<cpp:directive pos:start="317:2" pos:end="317:3">if</cpp:directive> <expr pos:start="317:5" pos:end="317:18"><name pos:start="317:5" pos:end="317:18">HAVE_BIGENDIAN</name></expr></cpp:if>

            <for pos:start="319:13" pos:end="324:0">for <control pos:start="319:17" pos:end="319:84">(<init pos:start="319:18" pos:end="319:23"><expr pos:start="319:18" pos:end="319:22"><name pos:start="319:18" pos:end="319:18">i</name> <operator pos:start="319:20" pos:end="319:20">=</operator> <literal type="number" pos:start="319:22" pos:end="319:22">0</literal></expr>;</init> <condition pos:start="319:25" pos:end="319:79"><expr pos:start="319:25" pos:end="319:78"><name pos:start="319:25" pos:end="319:25">i</name> <operator pos:start="319:27" pos:end="319:27">&lt;</operator> <call pos:start="319:29" pos:end="319:76"><name pos:start="319:29" pos:end="319:33">FFMIN</name><argument_list pos:start="319:34" pos:end="319:76">(<argument pos:start="319:35" pos:end="319:59"><expr pos:start="319:35" pos:end="319:59"><name pos:start="319:35" pos:end="319:59"><name pos:start="319:35" pos:end="319:36">st</name><operator pos:start="319:37" pos:end="319:38">-&gt;</operator><name pos:start="319:39" pos:end="319:43">codec</name><operator pos:start="319:44" pos:end="319:45">-&gt;</operator><name pos:start="319:46" pos:end="319:59">extradata_size</name></name></expr></argument>, <argument pos:start="319:62" pos:end="319:75"><expr pos:start="319:62" pos:end="319:75"><name pos:start="319:62" pos:end="319:75">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="319:77" pos:end="319:77">/</operator><literal type="number" pos:start="319:78" pos:end="319:78">4</literal></expr>;</condition> <incr pos:start="319:81" pos:end="319:83"><expr pos:start="319:81" pos:end="319:83"><name pos:start="319:81" pos:end="319:81">i</name><operator pos:start="319:82" pos:end="319:83">++</operator></expr></incr>)</control><block type="pseudo" pos:start="321:17" pos:end="324:0"><block_content pos:start="321:17" pos:end="324:0">

                <expr_stmt pos:start="321:17" pos:end="324:0"><expr pos:start="321:17" pos:end="321:97"><name pos:start="321:17" pos:end="321:46"><name pos:start="321:17" pos:end="321:18">st</name><operator pos:start="321:19" pos:end="321:20">-&gt;</operator><name pos:start="321:21" pos:end="321:25">codec</name><operator pos:start="321:26" pos:end="321:27">-&gt;</operator><name pos:start="321:28" pos:end="321:34">palctrl</name><operator pos:start="321:35" pos:end="321:36">-&gt;</operator><name pos:start="321:37" pos:end="321:43">palette</name><index pos:start="321:44" pos:end="321:46">[<expr pos:start="321:45" pos:end="321:45"><name pos:start="321:45" pos:end="321:45">i</name></expr>]</index></name> <operator pos:start="321:48" pos:end="321:48">=</operator> <call pos:start="321:50" pos:end="321:97"><name pos:start="321:50" pos:end="321:59">av_bswap32</name><argument_list pos:start="321:60" pos:end="321:97">(<argument pos:start="321:61" pos:end="321:96"><expr pos:start="321:61" pos:end="321:96"><operator pos:start="321:61" pos:end="321:61">(</operator><operator pos:start="321:62" pos:end="321:62">(</operator><name pos:start="321:63" pos:end="321:70">uint32_t</name><operator pos:start="321:71" pos:end="321:71">*</operator><operator pos:start="321:72" pos:end="321:72">)</operator><name pos:start="321:73" pos:end="321:92"><name pos:start="321:73" pos:end="321:74">st</name><operator pos:start="321:75" pos:end="321:76">-&gt;</operator><name pos:start="321:77" pos:end="321:81">codec</name><operator pos:start="321:82" pos:end="321:83">-&gt;</operator><name pos:start="321:84" pos:end="321:92">extradata</name></name><operator pos:start="321:93" pos:end="321:93">)</operator><index pos:start="321:94" pos:end="321:96">[<expr pos:start="321:95" pos:end="321:95"><name pos:start="321:95" pos:end="321:95">i</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<cpp:else pos:start="323:1" pos:end="323:5">#<cpp:directive pos:start="323:2" pos:end="323:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="325:13" pos:end="330:0"><expr pos:start="325:13" pos:end="327:69"><call pos:start="325:13" pos:end="327:69"><name pos:start="325:13" pos:end="325:18">memcpy</name><argument_list pos:start="325:19" pos:end="327:69">(<argument pos:start="325:20" pos:end="325:46"><expr pos:start="325:20" pos:end="325:46"><name pos:start="325:20" pos:end="325:46"><name pos:start="325:20" pos:end="325:21">st</name><operator pos:start="325:22" pos:end="325:23">-&gt;</operator><name pos:start="325:24" pos:end="325:28">codec</name><operator pos:start="325:29" pos:end="325:30">-&gt;</operator><name pos:start="325:31" pos:end="325:37">palctrl</name><operator pos:start="325:38" pos:end="325:39">-&gt;</operator><name pos:start="325:40" pos:end="325:46">palette</name></name></expr></argument>, <argument pos:start="325:49" pos:end="325:68"><expr pos:start="325:49" pos:end="325:68"><name pos:start="325:49" pos:end="325:68"><name pos:start="325:49" pos:end="325:50">st</name><operator pos:start="325:51" pos:end="325:52">-&gt;</operator><name pos:start="325:53" pos:end="325:57">codec</name><operator pos:start="325:58" pos:end="325:59">-&gt;</operator><name pos:start="325:60" pos:end="325:68">extradata</name></name></expr></argument>,

                    <argument pos:start="327:21" pos:end="327:68"><expr pos:start="327:21" pos:end="327:68"><call pos:start="327:21" pos:end="327:68"><name pos:start="327:21" pos:end="327:25">FFMIN</name><argument_list pos:start="327:26" pos:end="327:68">(<argument pos:start="327:27" pos:end="327:51"><expr pos:start="327:27" pos:end="327:51"><name pos:start="327:27" pos:end="327:51"><name pos:start="327:27" pos:end="327:28">st</name><operator pos:start="327:29" pos:end="327:30">-&gt;</operator><name pos:start="327:31" pos:end="327:35">codec</name><operator pos:start="327:36" pos:end="327:37">-&gt;</operator><name pos:start="327:38" pos:end="327:51">extradata_size</name></name></expr></argument>, <argument pos:start="327:54" pos:end="327:67"><expr pos:start="327:54" pos:end="327:67"><name pos:start="327:54" pos:end="327:67">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="329:1" pos:end="329:6">#<cpp:directive pos:start="329:2" pos:end="329:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="331:13" pos:end="331:52"><expr pos:start="331:13" pos:end="331:51"><name pos:start="331:13" pos:end="331:47"><name pos:start="331:13" pos:end="331:14">st</name><operator pos:start="331:15" pos:end="331:16">-&gt;</operator><name pos:start="331:17" pos:end="331:21">codec</name><operator pos:start="331:22" pos:end="331:23">-&gt;</operator><name pos:start="331:24" pos:end="331:30">palctrl</name><operator pos:start="331:31" pos:end="331:32">-&gt;</operator><name pos:start="331:33" pos:end="331:47">palette_changed</name></name> <operator pos:start="331:49" pos:end="331:49">=</operator> <literal type="number" pos:start="331:51" pos:end="331:51">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="337:9" pos:end="337:36"><expr pos:start="337:9" pos:end="337:35"><name pos:start="337:9" pos:end="337:28"><name pos:start="337:9" pos:end="337:10">st</name><operator pos:start="337:11" pos:end="337:12">-&gt;</operator><name pos:start="337:13" pos:end="337:17">codec</name><operator pos:start="337:18" pos:end="337:19">-&gt;</operator><name pos:start="337:20" pos:end="337:28">codec_tag</name></name> <operator pos:start="337:30" pos:end="337:30">=</operator> <name pos:start="337:32" pos:end="337:35">tag1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:71"><expr pos:start="339:9" pos:end="339:70"><name pos:start="339:9" pos:end="339:27"><name pos:start="339:9" pos:end="339:10">st</name><operator pos:start="339:11" pos:end="339:12">-&gt;</operator><name pos:start="339:13" pos:end="339:17">codec</name><operator pos:start="339:18" pos:end="339:19">-&gt;</operator><name pos:start="339:20" pos:end="339:27">codec_id</name></name> <operator pos:start="339:29" pos:end="339:29">=</operator> <call pos:start="339:31" pos:end="339:70"><name pos:start="339:31" pos:end="339:45">ff_codec_get_id</name><argument_list pos:start="339:46" pos:end="339:70">(<argument pos:start="339:47" pos:end="339:63"><expr pos:start="339:47" pos:end="339:63"><name pos:start="339:47" pos:end="339:63">ff_codec_bmp_tags</name></expr></argument>, <argument pos:start="339:66" pos:end="339:69"><expr pos:start="339:66" pos:end="339:69"><name pos:start="339:66" pos:end="339:69">tag1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="341:9" pos:end="355:9"><if pos:start="341:9" pos:end="355:9">if<condition pos:start="341:11" pos:end="341:45">(<expr pos:start="341:12" pos:end="341:44"><name pos:start="341:12" pos:end="341:15">tag1</name> <operator pos:start="341:17" pos:end="341:18">==</operator> <call pos:start="341:20" pos:end="341:44"><name pos:start="341:20" pos:end="341:24">MKTAG</name><argument_list pos:start="341:25" pos:end="341:44">(<argument pos:start="341:26" pos:end="341:28"><expr pos:start="341:26" pos:end="341:28"><literal type="char" pos:start="341:26" pos:end="341:28">'D'</literal></expr></argument>, <argument pos:start="341:31" pos:end="341:33"><expr pos:start="341:31" pos:end="341:33"><literal type="char" pos:start="341:31" pos:end="341:33">'V'</literal></expr></argument>, <argument pos:start="341:36" pos:end="341:38"><expr pos:start="341:36" pos:end="341:38"><literal type="char" pos:start="341:36" pos:end="341:38">'R'</literal></expr></argument>, <argument pos:start="341:41" pos:end="341:43"><expr pos:start="341:41" pos:end="341:43"><literal type="char" pos:start="341:41" pos:end="341:43">' '</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="341:46" pos:end="355:9">{<block_content pos:start="343:13" pos:end="353:40">

            <expr_stmt pos:start="343:13" pos:end="343:51"><expr pos:start="343:13" pos:end="343:50"><name pos:start="343:13" pos:end="343:28"><name pos:start="343:13" pos:end="343:14">st</name><operator pos:start="343:15" pos:end="343:16">-&gt;</operator><name pos:start="343:17" pos:end="343:28">need_parsing</name></name> <operator pos:start="343:30" pos:end="343:30">=</operator> <name pos:start="343:32" pos:end="343:50">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

            <comment type="line" pos:start="345:13" pos:end="345:160">// issue658 containse wrong w/h and MS even puts a fake seq header with wrong w/h in extradata while a correct one is in te stream. maximum lameness</comment>

            <expr_stmt pos:start="347:13" pos:end="349:38"><expr pos:start="347:13" pos:end="349:37"><name pos:start="347:13" pos:end="347:28"><name pos:start="347:13" pos:end="347:14">st</name><operator pos:start="347:15" pos:end="347:16">-&gt;</operator><name pos:start="347:17" pos:end="347:21">codec</name><operator pos:start="347:22" pos:end="347:23">-&gt;</operator><name pos:start="347:24" pos:end="347:28">width</name></name>  <operator pos:start="347:31" pos:end="347:31">=</operator>

                <name pos:start="349:17" pos:end="349:33"><name pos:start="349:17" pos:end="349:18">st</name><operator pos:start="349:19" pos:end="349:20">-&gt;</operator><name pos:start="349:21" pos:end="349:25">codec</name><operator pos:start="349:26" pos:end="349:27">-&gt;</operator><name pos:start="349:28" pos:end="349:33">height</name></name> <operator pos:start="349:35" pos:end="349:35">=</operator> <literal type="number" pos:start="349:37" pos:end="349:37">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:44"><expr pos:start="351:13" pos:end="351:43"><call pos:start="351:13" pos:end="351:43"><name pos:start="351:13" pos:end="351:20">av_freep</name><argument_list pos:start="351:21" pos:end="351:43">(<argument pos:start="351:22" pos:end="351:42"><expr pos:start="351:22" pos:end="351:42"><operator pos:start="351:22" pos:end="351:22">&amp;</operator><name pos:start="351:23" pos:end="351:42"><name pos:start="351:23" pos:end="351:24">st</name><operator pos:start="351:25" pos:end="351:26">-&gt;</operator><name pos:start="351:27" pos:end="351:31">codec</name><operator pos:start="351:32" pos:end="351:33">-&gt;</operator><name pos:start="351:34" pos:end="351:42">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:40"><expr pos:start="353:13" pos:end="353:39"><name pos:start="353:13" pos:end="353:37"><name pos:start="353:13" pos:end="353:14">st</name><operator pos:start="353:15" pos:end="353:16">-&gt;</operator><name pos:start="353:17" pos:end="353:21">codec</name><operator pos:start="353:22" pos:end="353:23">-&gt;</operator><name pos:start="353:24" pos:end="353:37">extradata_size</name></name><operator pos:start="353:38" pos:end="353:38">=</operator><literal type="number" pos:start="353:39" pos:end="353:39">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="357:9" pos:end="359:56"><if pos:start="357:9" pos:end="359:56">if<condition pos:start="357:11" pos:end="357:48">(<expr pos:start="357:12" pos:end="357:47"><name pos:start="357:12" pos:end="357:30"><name pos:start="357:12" pos:end="357:13">st</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:20">codec</name><operator pos:start="357:21" pos:end="357:22">-&gt;</operator><name pos:start="357:23" pos:end="357:30">codec_id</name></name> <operator pos:start="357:32" pos:end="357:33">==</operator> <name pos:start="357:35" pos:end="357:47">CODEC_ID_H264</name></expr>)</condition><block type="pseudo" pos:start="359:13" pos:end="359:56"><block_content pos:start="359:13" pos:end="359:56">

            <expr_stmt pos:start="359:13" pos:end="359:56"><expr pos:start="359:13" pos:end="359:55"><name pos:start="359:13" pos:end="359:28"><name pos:start="359:13" pos:end="359:14">st</name><operator pos:start="359:15" pos:end="359:16">-&gt;</operator><name pos:start="359:17" pos:end="359:28">need_parsing</name></name> <operator pos:start="359:30" pos:end="359:30">=</operator> <name pos:start="359:32" pos:end="359:55">AVSTREAM_PARSE_FULL_ONCE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="363:5" pos:end="363:25"><expr pos:start="363:5" pos:end="363:24"><name pos:start="363:5" pos:end="363:8">pos2</name> <operator pos:start="363:10" pos:end="363:10">=</operator> <call pos:start="363:12" pos:end="363:24"><name pos:start="363:12" pos:end="363:20">avio_tell</name><argument_list pos:start="363:21" pos:end="363:24">(<argument pos:start="363:22" pos:end="363:23"><expr pos:start="363:22" pos:end="363:23"><name pos:start="363:22" pos:end="363:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="365:5" pos:end="365:45"><expr pos:start="365:5" pos:end="365:44"><call pos:start="365:5" pos:end="365:44"><name pos:start="365:5" pos:end="365:13">avio_skip</name><argument_list pos:start="365:14" pos:end="365:44">(<argument pos:start="365:15" pos:end="365:16"><expr pos:start="365:15" pos:end="365:16"><name pos:start="365:15" pos:end="365:16">pb</name></expr></argument>, <argument pos:start="365:19" pos:end="365:43"><expr pos:start="365:19" pos:end="365:43"><name pos:start="365:19" pos:end="365:22">size</name> <operator pos:start="365:24" pos:end="365:24">-</operator> <operator pos:start="365:26" pos:end="365:26">(</operator><name pos:start="365:27" pos:end="365:30">pos2</name> <operator pos:start="365:32" pos:end="365:32">-</operator> <name pos:start="365:34" pos:end="365:37">pos1</name> <operator pos:start="365:39" pos:end="365:39">+</operator> <literal type="number" pos:start="365:41" pos:end="365:42">24</literal><operator pos:start="365:43" pos:end="365:43">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="369:5" pos:end="369:13">return <expr pos:start="369:12" pos:end="369:12"><literal type="number" pos:start="369:12" pos:end="369:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
