<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25607.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint16_t</name></type> <name pos:start="1:17" pos:end="1:32">nvme_identify_ns</name><parameter_list pos:start="1:33" pos:end="1:62">(<parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:41">NvmeCtrl</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">n</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:58">NvmeIdentify</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:20">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">NvmeNamespace</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">ns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">nsid</name> <init pos:start="7:19" pos:end="7:40">= <expr pos:start="7:21" pos:end="7:40"><call pos:start="7:21" pos:end="7:40"><name pos:start="7:21" pos:end="7:31">le32_to_cpu</name><argument_list pos:start="7:32" pos:end="7:40">(<argument pos:start="7:33" pos:end="7:39"><expr pos:start="7:33" pos:end="7:39"><name pos:start="7:33" pos:end="7:39"><name pos:start="7:33" pos:end="7:33">c</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:39">nsid</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:17">prp1</name> <init pos:start="9:19" pos:end="9:40">= <expr pos:start="9:21" pos:end="9:40"><call pos:start="9:21" pos:end="9:40"><name pos:start="9:21" pos:end="9:31">le64_to_cpu</name><argument_list pos:start="9:32" pos:end="9:40">(<argument pos:start="9:33" pos:end="9:39"><expr pos:start="9:33" pos:end="9:39"><name pos:start="9:33" pos:end="9:39"><name pos:start="9:33" pos:end="9:33">c</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:39">prp1</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:17">prp2</name> <init pos:start="11:19" pos:end="11:40">= <expr pos:start="11:21" pos:end="11:40"><call pos:start="11:21" pos:end="11:40"><name pos:start="11:21" pos:end="11:31">le64_to_cpu</name><argument_list pos:start="11:32" pos:end="11:40">(<argument pos:start="11:33" pos:end="11:39"><expr pos:start="11:33" pos:end="11:39"><name pos:start="11:33" pos:end="11:39"><name pos:start="11:33" pos:end="11:33">c</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:39">prp2</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:46">(<expr pos:start="15:9" pos:end="15:45"><name pos:start="15:9" pos:end="15:12">nsid</name> <operator pos:start="15:14" pos:end="15:15">==</operator> <literal type="number" pos:start="15:17" pos:end="15:17">0</literal> <operator pos:start="15:19" pos:end="15:20">||</operator> <name pos:start="15:22" pos:end="15:25">nsid</name> <operator pos:start="15:27" pos:end="15:27">&gt;</operator> <name pos:start="15:29" pos:end="15:45"><name pos:start="15:29" pos:end="15:29">n</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:45">num_namespaces</name></name></expr>)</condition> <block pos:start="15:48" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:44">

        <return pos:start="17:9" pos:end="17:44">return <expr pos:start="17:16" pos:end="17:43"><name pos:start="17:16" pos:end="17:32">NVME_INVALID_NSID</name> <operator pos:start="17:34" pos:end="17:34">|</operator> <name pos:start="17:36" pos:end="17:43">NVME_DNR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:6">ns</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <operator pos:start="23:10" pos:end="23:10">&amp;</operator><name pos:start="23:11" pos:end="23:33"><name pos:start="23:11" pos:end="23:11">n</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:23">namespaces</name><index pos:start="23:24" pos:end="23:33">[<expr pos:start="23:25" pos:end="23:32"><name pos:start="23:25" pos:end="23:28">nsid</name> <operator pos:start="23:30" pos:end="23:30">-</operator> <literal type="number" pos:start="23:32" pos:end="23:32">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <return pos:start="25:5" pos:end="27:20">return <expr pos:start="25:12" pos:end="27:19"><call pos:start="25:12" pos:end="27:19"><name pos:start="25:12" pos:end="25:28">nvme_dma_read_prp</name><argument_list pos:start="25:29" pos:end="27:19">(<argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">n</name></expr></argument>, <argument pos:start="25:33" pos:end="25:53"><expr pos:start="25:33" pos:end="25:53"><operator pos:start="25:33" pos:end="25:33">(</operator><name pos:start="25:34" pos:end="25:40">uint8_t</name> <operator pos:start="25:42" pos:end="25:42">*</operator><operator pos:start="25:43" pos:end="25:43">)</operator><operator pos:start="25:44" pos:end="25:44">&amp;</operator><name pos:start="25:45" pos:end="25:53"><name pos:start="25:45" pos:end="25:46">ns</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:53">id_ns</name></name></expr></argument>, <argument pos:start="25:56" pos:end="25:72"><expr pos:start="25:56" pos:end="25:72"><sizeof pos:start="25:56" pos:end="25:72">sizeof<argument_list pos:start="25:62" pos:end="25:72">(<argument pos:start="25:63" pos:end="25:71"><expr pos:start="25:63" pos:end="25:71"><name pos:start="25:63" pos:end="25:71"><name pos:start="25:63" pos:end="25:64">ns</name><operator pos:start="25:65" pos:end="25:66">-&gt;</operator><name pos:start="25:67" pos:end="25:71">id_ns</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

        <argument pos:start="27:9" pos:end="27:12"><expr pos:start="27:9" pos:end="27:12"><name pos:start="27:9" pos:end="27:12">prp1</name></expr></argument>, <argument pos:start="27:15" pos:end="27:18"><expr pos:start="27:15" pos:end="27:18"><name pos:start="27:15" pos:end="27:18">prp2</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
