<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22840.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:25"><name pos:start="1:8" pos:end="1:13">struct</name> <name pos:start="1:15" pos:end="1:25">URLProtocol</name></name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:44">url_find_protocol</name><parameter_list pos:start="1:45" pos:end="1:66">(<parameter pos:start="1:46" pos:end="1:65"><decl pos:start="1:46" pos:end="1:65"><type pos:start="1:46" pos:end="1:57"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:65">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:14">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">URLProtocol</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">up</name> <init pos:start="5:21" pos:end="5:26">= <expr pos:start="5:23" pos:end="5:26"><name pos:start="5:23" pos:end="5:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:23"><name pos:start="7:10" pos:end="7:18">proto_str</name><index pos:start="7:19" pos:end="7:23">[<expr pos:start="7:20" pos:end="7:22"><literal type="number" pos:start="7:20" pos:end="7:22">128</literal></expr>]</index></name></decl>, <decl pos:start="7:26" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:26" pos:end="7:42"><name pos:start="7:26" pos:end="7:37">proto_nested</name><index pos:start="7:38" pos:end="7:42">[<expr pos:start="7:39" pos:end="7:41"><literal type="number" pos:start="7:39" pos:end="7:41">128</literal></expr>]</index></name></decl>, <decl pos:start="7:45" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:8"><modifier pos:start="7:45" pos:end="7:45">*</modifier></type><name pos:start="7:46" pos:end="7:48">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:20">proto_len</name> <init pos:start="9:22" pos:end="9:57">= <expr pos:start="9:24" pos:end="9:57"><call pos:start="9:24" pos:end="9:57"><name pos:start="9:24" pos:end="9:29">strspn</name><argument_list pos:start="9:30" pos:end="9:57">(<argument pos:start="9:31" pos:end="9:38"><expr pos:start="9:31" pos:end="9:38"><name pos:start="9:31" pos:end="9:38">filename</name></expr></argument>, <argument pos:start="9:41" pos:end="9:56"><expr pos:start="9:41" pos:end="9:56"><name pos:start="9:41" pos:end="9:56">URL_SCHEME_CHARS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="25:60"><if pos:start="13:5" pos:end="19:34">if <condition pos:start="13:8" pos:end="17:30">(<expr pos:start="13:9" pos:end="17:29"><name pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:16">filename</name><index pos:start="13:17" pos:end="13:27">[<expr pos:start="13:18" pos:end="13:26"><name pos:start="13:18" pos:end="13:26">proto_len</name></expr>]</index></name> <operator pos:start="13:29" pos:end="13:30">!=</operator> <literal type="char" pos:start="13:32" pos:end="13:34">':'</literal> <operator pos:start="13:36" pos:end="13:37">&amp;&amp;</operator>

        <operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:28"><name pos:start="15:10" pos:end="15:17">filename</name><index pos:start="15:18" pos:end="15:28">[<expr pos:start="15:19" pos:end="15:27"><name pos:start="15:19" pos:end="15:27">proto_len</name></expr>]</index></name> <operator pos:start="15:30" pos:end="15:31">!=</operator> <literal type="char" pos:start="15:33" pos:end="15:35">','</literal> <operator pos:start="15:37" pos:end="15:38">||</operator> <operator pos:start="15:40" pos:end="15:40">!</operator><call pos:start="15:41" pos:end="15:77"><name pos:start="15:41" pos:end="15:46">strchr</name><argument_list pos:start="15:47" pos:end="15:77">(<argument pos:start="15:48" pos:end="15:71"><expr pos:start="15:48" pos:end="15:71"><name pos:start="15:48" pos:end="15:55">filename</name> <operator pos:start="15:57" pos:end="15:57">+</operator> <name pos:start="15:59" pos:end="15:67">proto_len</name> <operator pos:start="15:69" pos:end="15:69">+</operator> <literal type="number" pos:start="15:71" pos:end="15:71">1</literal></expr></argument>, <argument pos:start="15:74" pos:end="15:76"><expr pos:start="15:74" pos:end="15:76"><literal type="char" pos:start="15:74" pos:end="15:76">':'</literal></expr></argument>)</argument_list></call><operator pos:start="15:78" pos:end="15:78">)</operator> <operator pos:start="15:80" pos:end="15:81">||</operator>

        <call pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:19">is_dos_path</name><argument_list pos:start="17:20" pos:end="17:29">(<argument pos:start="17:21" pos:end="17:28"><expr pos:start="17:21" pos:end="17:28"><name pos:start="17:21" pos:end="17:28">filename</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:34"><block_content pos:start="19:9" pos:end="19:34">

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><call pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:14">strcpy</name><argument_list pos:start="19:15" pos:end="19:33">(<argument pos:start="19:16" pos:end="19:24"><expr pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:24">proto_str</name></expr></argument>, <argument pos:start="19:27" pos:end="19:32"><expr pos:start="19:27" pos:end="19:32"><literal type="string" pos:start="19:27" pos:end="19:32">"file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="21:5" pos:end="25:60">else<block type="pseudo" pos:start="23:9" pos:end="25:60"><block_content pos:start="23:9" pos:end="25:60">

        <expr_stmt pos:start="23:9" pos:end="25:60"><expr pos:start="23:9" pos:end="25:59"><call pos:start="23:9" pos:end="25:59"><name pos:start="23:9" pos:end="23:18">av_strlcpy</name><argument_list pos:start="23:19" pos:end="25:59">(<argument pos:start="23:20" pos:end="23:28"><expr pos:start="23:20" pos:end="23:28"><name pos:start="23:20" pos:end="23:28">proto_str</name></expr></argument>, <argument pos:start="23:31" pos:end="23:38"><expr pos:start="23:31" pos:end="23:38"><name pos:start="23:31" pos:end="23:38">filename</name></expr></argument>,

                   <argument pos:start="25:20" pos:end="25:58"><expr pos:start="25:20" pos:end="25:58"><call pos:start="25:20" pos:end="25:58"><name pos:start="25:20" pos:end="25:24">FFMIN</name><argument_list pos:start="25:25" pos:end="25:58">(<argument pos:start="25:26" pos:end="25:38"><expr pos:start="25:26" pos:end="25:38"><name pos:start="25:26" pos:end="25:34">proto_len</name> <operator pos:start="25:36" pos:end="25:36">+</operator> <literal type="number" pos:start="25:38" pos:end="25:38">1</literal></expr></argument>, <argument pos:start="25:41" pos:end="25:57"><expr pos:start="25:41" pos:end="25:57"><sizeof pos:start="25:41" pos:end="25:57">sizeof<argument_list pos:start="25:47" pos:end="25:57">(<argument pos:start="25:48" pos:end="25:56"><expr pos:start="25:48" pos:end="25:56"><name pos:start="25:48" pos:end="25:56">proto_str</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:20"><if pos:start="29:5" pos:end="31:20">if <condition pos:start="29:8" pos:end="29:39">(<expr pos:start="29:9" pos:end="29:38"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:12">ptr</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:37"><name pos:start="29:16" pos:end="29:21">strchr</name><argument_list pos:start="29:22" pos:end="29:37">(<argument pos:start="29:23" pos:end="29:31"><expr pos:start="29:23" pos:end="29:31"><name pos:start="29:23" pos:end="29:31">proto_str</name></expr></argument>, <argument pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><literal type="char" pos:start="29:34" pos:end="29:36">','</literal></expr></argument>)</argument_list></call><operator pos:start="29:38" pos:end="29:38">)</operator></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:20"><block_content pos:start="31:9" pos:end="31:20">

        <expr_stmt pos:start="31:9" pos:end="31:20"><expr pos:start="31:9" pos:end="31:19"><operator pos:start="31:9" pos:end="31:9">*</operator><name pos:start="31:10" pos:end="31:12">ptr</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <literal type="char" pos:start="31:16" pos:end="31:19">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:62"><expr pos:start="33:5" pos:end="33:61"><call pos:start="33:5" pos:end="33:61"><name pos:start="33:5" pos:end="33:14">av_strlcpy</name><argument_list pos:start="33:15" pos:end="33:61">(<argument pos:start="33:16" pos:end="33:27"><expr pos:start="33:16" pos:end="33:27"><name pos:start="33:16" pos:end="33:27">proto_nested</name></expr></argument>, <argument pos:start="33:30" pos:end="33:38"><expr pos:start="33:30" pos:end="33:38"><name pos:start="33:30" pos:end="33:38">proto_str</name></expr></argument>, <argument pos:start="33:41" pos:end="33:60"><expr pos:start="33:41" pos:end="33:60"><sizeof pos:start="33:41" pos:end="33:60">sizeof<argument_list pos:start="33:47" pos:end="33:60">(<argument pos:start="33:48" pos:end="33:59"><expr pos:start="33:48" pos:end="33:59"><name pos:start="33:48" pos:end="33:59">proto_nested</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:20"><if pos:start="35:5" pos:end="37:20">if <condition pos:start="35:8" pos:end="35:42">(<expr pos:start="35:9" pos:end="35:41"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:12">ptr</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:40"><name pos:start="35:16" pos:end="35:21">strchr</name><argument_list pos:start="35:22" pos:end="35:40">(<argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">proto_nested</name></expr></argument>, <argument pos:start="35:37" pos:end="35:39"><expr pos:start="35:37" pos:end="35:39"><literal type="char" pos:start="35:37" pos:end="35:39">'+'</literal></expr></argument>)</argument_list></call><operator pos:start="35:41" pos:end="35:41">)</operator></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:20"><block_content pos:start="37:9" pos:end="37:20">

        <expr_stmt pos:start="37:9" pos:end="37:20"><expr pos:start="37:9" pos:end="37:19"><operator pos:start="37:9" pos:end="37:9">*</operator><name pos:start="37:10" pos:end="37:12">ptr</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <literal type="char" pos:start="37:16" pos:end="37:19">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <while pos:start="41:5" pos:end="53:5">while <condition pos:start="41:11" pos:end="41:40">(<expr pos:start="41:12" pos:end="41:39"><name pos:start="41:12" pos:end="41:13">up</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:39"><name pos:start="41:17" pos:end="41:35">ffurl_protocol_next</name><argument_list pos:start="41:36" pos:end="41:39">(<argument pos:start="41:37" pos:end="41:38"><expr pos:start="41:37" pos:end="41:38"><name pos:start="41:37" pos:end="41:38">up</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:42" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:18">

        <if_stmt pos:start="43:9" pos:end="45:18"><if pos:start="43:9" pos:end="45:18">if <condition pos:start="43:12" pos:end="43:41">(<expr pos:start="43:13" pos:end="43:40"><operator pos:start="43:13" pos:end="43:13">!</operator><call pos:start="43:14" pos:end="43:40"><name pos:start="43:14" pos:end="43:19">strcmp</name><argument_list pos:start="43:20" pos:end="43:40">(<argument pos:start="43:21" pos:end="43:29"><expr pos:start="43:21" pos:end="43:29"><name pos:start="43:21" pos:end="43:29">proto_str</name></expr></argument>, <argument pos:start="43:32" pos:end="43:39"><expr pos:start="43:32" pos:end="43:39"><name pos:start="43:32" pos:end="43:39"><name pos:start="43:32" pos:end="43:33">up</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:39">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:18"><block_content pos:start="45:13" pos:end="45:18">

            <break pos:start="45:13" pos:end="45:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="51:18"><if pos:start="47:9" pos:end="51:18">if <condition pos:start="47:12" pos:end="49:44">(<expr pos:start="47:13" pos:end="49:43"><name pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:14">up</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:21">flags</name></name> <operator pos:start="47:23" pos:end="47:23">&amp;</operator> <name pos:start="47:25" pos:end="47:55">URL_PROTOCOL_FLAG_NESTED_SCHEME</name> <operator pos:start="47:57" pos:end="47:58">&amp;&amp;</operator>

            <operator pos:start="49:13" pos:end="49:13">!</operator><call pos:start="49:14" pos:end="49:43"><name pos:start="49:14" pos:end="49:19">strcmp</name><argument_list pos:start="49:20" pos:end="49:43">(<argument pos:start="49:21" pos:end="49:32"><expr pos:start="49:21" pos:end="49:32"><name pos:start="49:21" pos:end="49:32">proto_nested</name></expr></argument>, <argument pos:start="49:35" pos:end="49:42"><expr pos:start="49:35" pos:end="49:42"><name pos:start="49:35" pos:end="49:42"><name pos:start="49:35" pos:end="49:36">up</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:42">name</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:18"><block_content pos:start="51:13" pos:end="51:18">

            <break pos:start="51:13" pos:end="51:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="57:5" pos:end="57:14">return <expr pos:start="57:12" pos:end="57:13"><name pos:start="57:12" pos:end="57:13">up</name></expr>;</return>

</block_content>}</block></function>
</unit>
