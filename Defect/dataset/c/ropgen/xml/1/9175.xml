<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9175.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">blk_insert_bs</name><parameter_list pos:start="1:18" pos:end="1:72">(<parameter pos:start="1:19" pos:end="1:35"><decl pos:start="1:19" pos:end="1:35"><type pos:start="1:19" pos:end="1:35"><name pos:start="1:19" pos:end="1:30">BlockBackend</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">blk</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:53">BlockDriverState</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">bs</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:64">Error</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier><modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <expr_stmt pos:start="5:5" pos:end="7:79"><expr pos:start="5:5" pos:end="7:78"><name pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:7">blk</name><operator pos:start="5:8" pos:end="5:9">-&gt;</operator><name pos:start="5:10" pos:end="5:13">root</name></name> <operator pos:start="5:15" pos:end="5:15">=</operator> <call pos:start="5:17" pos:end="7:78"><name pos:start="5:17" pos:end="5:38">bdrv_root_attach_child</name><argument_list pos:start="5:39" pos:end="7:78">(<argument pos:start="5:40" pos:end="5:41"><expr pos:start="5:40" pos:end="5:41"><name pos:start="5:40" pos:end="5:41">bs</name></expr></argument>, <argument pos:start="5:44" pos:end="5:49"><expr pos:start="5:44" pos:end="5:49"><literal type="string" pos:start="5:44" pos:end="5:49">"root"</literal></expr></argument>, <argument pos:start="5:52" pos:end="5:62"><expr pos:start="5:52" pos:end="5:62"><operator pos:start="5:52" pos:end="5:52">&amp;</operator><name pos:start="5:53" pos:end="5:62">child_root</name></expr></argument>,

                                       <argument pos:start="7:40" pos:end="7:48"><expr pos:start="7:40" pos:end="7:48"><name pos:start="7:40" pos:end="7:48"><name pos:start="7:40" pos:end="7:42">blk</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:48">perm</name></name></expr></argument>, <argument pos:start="7:51" pos:end="7:66"><expr pos:start="7:51" pos:end="7:66"><name pos:start="7:51" pos:end="7:66"><name pos:start="7:51" pos:end="7:53">blk</name><operator pos:start="7:54" pos:end="7:55">-&gt;</operator><name pos:start="7:56" pos:end="7:66">shared_perm</name></name></expr></argument>, <argument pos:start="7:69" pos:end="7:71"><expr pos:start="7:69" pos:end="7:71"><name pos:start="7:69" pos:end="7:71">blk</name></expr></argument>, <argument pos:start="7:74" pos:end="7:77"><expr pos:start="7:74" pos:end="7:77"><name pos:start="7:74" pos:end="7:77">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:26">(<expr pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:11">blk</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:17">root</name></name> <operator pos:start="9:19" pos:end="9:20">==</operator> <name pos:start="9:22" pos:end="9:25">NULL</name></expr>)</condition> <block pos:start="9:28" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:22">

        <return pos:start="11:9" pos:end="11:22">return <expr pos:start="11:16" pos:end="11:21"><operator pos:start="11:16" pos:end="11:16">-</operator><name pos:start="11:17" pos:end="11:21">EPERM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><call pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">bdrv_ref</name><argument_list pos:start="15:13" pos:end="15:16">(<argument pos:start="15:14" pos:end="15:15"><expr pos:start="15:14" pos:end="15:15"><name pos:start="15:14" pos:end="15:15">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:57"><expr pos:start="19:5" pos:end="19:56"><call pos:start="19:5" pos:end="19:56"><name pos:start="19:5" pos:end="19:24">notifier_list_notify</name><argument_list pos:start="19:25" pos:end="19:56">(<argument pos:start="19:26" pos:end="19:50"><expr pos:start="19:26" pos:end="19:50"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:50"><name pos:start="19:27" pos:end="19:29">blk</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:50">insert_bs_notifiers</name></name></expr></argument>, <argument pos:start="19:53" pos:end="19:55"><expr pos:start="19:53" pos:end="19:55"><name pos:start="19:53" pos:end="19:55">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:57">(<expr pos:start="21:9" pos:end="21:56"><name pos:start="21:9" pos:end="21:56"><name pos:start="21:9" pos:end="21:11">blk</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:19">public</name><operator pos:start="21:20" pos:end="21:20">.</operator><name pos:start="21:21" pos:end="21:41">throttle_group_member</name><operator pos:start="21:42" pos:end="21:42">.</operator><name pos:start="21:43" pos:end="21:56">throttle_state</name></name></expr>)</condition> <block pos:start="21:59" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:38">

        <expr_stmt pos:start="23:9" pos:end="27:38"><expr pos:start="23:9" pos:end="27:37"><call pos:start="23:9" pos:end="27:37"><name pos:start="23:9" pos:end="23:42">throttle_timers_attach_aio_context</name><argument_list pos:start="23:43" pos:end="27:37">(

            <argument pos:start="25:13" pos:end="25:62"><expr pos:start="25:13" pos:end="25:62"><operator pos:start="25:13" pos:end="25:13">&amp;</operator><name pos:start="25:14" pos:end="25:62"><name pos:start="25:14" pos:end="25:16">blk</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:24">public</name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:46">throttle_group_member</name><operator pos:start="25:47" pos:end="25:47">.</operator><name pos:start="25:48" pos:end="25:62">throttle_timers</name></name></expr></argument>,

            <argument pos:start="27:13" pos:end="27:36"><expr pos:start="27:13" pos:end="27:36"><call pos:start="27:13" pos:end="27:36"><name pos:start="27:13" pos:end="27:32">bdrv_get_aio_context</name><argument_list pos:start="27:33" pos:end="27:36">(<argument pos:start="27:34" pos:end="27:35"><expr pos:start="27:34" pos:end="27:35"><name pos:start="27:34" pos:end="27:35">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
