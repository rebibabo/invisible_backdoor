<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17235.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">qcow2_cache_do_get</name><parameter_list pos:start="1:30" pos:end="2:55">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:46">BlockDriverState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">bs</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:62">Qcow2Cache</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">c</name></decl></parameter>,
    <parameter pos:start="2:5" pos:end="2:19"><decl pos:start="2:5" pos:end="2:19"><type pos:start="2:5" pos:end="2:19"><name pos:start="2:5" pos:end="2:12">uint64_t</name></type> <name pos:start="2:14" pos:end="2:19">offset</name></decl></parameter>, <parameter pos:start="2:22" pos:end="2:33"><decl pos:start="2:22" pos:end="2:33"><type pos:start="2:22" pos:end="2:33"><name pos:start="2:22" pos:end="2:25">void</name> <modifier pos:start="2:27" pos:end="2:27">*</modifier><modifier pos:start="2:28" pos:end="2:28">*</modifier></type><name pos:start="2:29" pos:end="2:33">table</name></decl></parameter>, <parameter pos:start="2:36" pos:end="2:54"><decl pos:start="2:36" pos:end="2:54"><type pos:start="2:36" pos:end="2:54"><name pos:start="2:36" pos:end="2:39">bool</name></type> <name pos:start="2:41" pos:end="2:54">read_from_disk</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="53:13">{<block_content pos:start="4:5" pos:end="53:13">
    <decl_stmt pos:start="4:5" pos:end="4:35"><decl pos:start="4:5" pos:end="4:34"><type pos:start="4:5" pos:end="4:20"><name pos:start="4:5" pos:end="4:18">BDRVQcow2State</name> <modifier pos:start="4:20" pos:end="4:20">*</modifier></type><name pos:start="4:21" pos:end="4:21">s</name> <init pos:start="4:23" pos:end="4:34">= <expr pos:start="4:25" pos:end="4:34"><name pos:start="4:25" pos:end="4:34"><name pos:start="4:25" pos:end="4:26">bs</name><operator pos:start="4:27" pos:end="4:28">-&gt;</operator><name pos:start="4:29" pos:end="4:34">opaque</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:12"><decl pos:start="6:5" pos:end="6:11"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:20">lookup_index</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:42"><decl pos:start="8:5" pos:end="8:41"><type pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:12">uint64_t</name></type> <name pos:start="8:14" pos:end="8:28">min_lru_counter</name> <init pos:start="8:30" pos:end="8:41">= <expr pos:start="8:32" pos:end="8:41"><name pos:start="8:32" pos:end="8:41">UINT64_MAX</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">min_lru_index</name> <init pos:start="9:23" pos:end="9:26">= <expr pos:start="9:25" pos:end="9:26"><operator pos:start="9:25" pos:end="9:25">-</operator><literal type="number" pos:start="9:26" pos:end="9:26">1</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="11:50"><expr pos:start="10:5" pos:end="11:49"><call pos:start="10:5" pos:end="11:49"><name pos:start="10:5" pos:end="10:25">trace_qcow2_cache_get</name><argument_list pos:start="10:26" pos:end="11:49">(<argument pos:start="10:27" pos:end="10:47"><expr pos:start="10:27" pos:end="10:47"><call pos:start="10:27" pos:end="10:47"><name pos:start="10:27" pos:end="10:45">qemu_coroutine_self</name><argument_list pos:start="10:46" pos:end="10:47">()</argument_list></call></expr></argument>, <argument pos:start="10:50" pos:end="10:71"><expr pos:start="10:50" pos:end="10:71"><name pos:start="10:50" pos:end="10:50">c</name> <operator pos:start="10:52" pos:end="10:53">==</operator> <name pos:start="10:55" pos:end="10:71"><name pos:start="10:55" pos:end="10:55">s</name><operator pos:start="10:56" pos:end="10:57">-&gt;</operator><name pos:start="10:58" pos:end="10:71">l2_table_cache</name></name></expr></argument>,
                          <argument pos:start="11:27" pos:end="11:32"><expr pos:start="11:27" pos:end="11:32"><name pos:start="11:27" pos:end="11:32">offset</name></expr></argument>, <argument pos:start="11:35" pos:end="11:48"><expr pos:start="11:35" pos:end="11:48"><name pos:start="11:35" pos:end="11:48">read_from_disk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="12:5" pos:end="12:46">/* Check if the table is already cached */</comment>
    <expr_stmt pos:start="13:5" pos:end="13:64"><expr pos:start="13:5" pos:end="13:63"><name pos:start="13:5" pos:end="13:5">i</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <name pos:start="13:9" pos:end="13:20">lookup_index</name> <operator pos:start="13:22" pos:end="13:22">=</operator> <operator pos:start="13:24" pos:end="13:24">(</operator><name pos:start="13:25" pos:end="13:30">offset</name> <operator pos:start="13:32" pos:end="13:32">/</operator> <name pos:start="13:34" pos:end="13:48"><name pos:start="13:34" pos:end="13:34">s</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:48">cluster_size</name></name> <operator pos:start="13:50" pos:end="13:50">*</operator> <literal type="number" pos:start="13:52" pos:end="13:52">4</literal><operator pos:start="13:53" pos:end="13:53">)</operator> <operator pos:start="13:55" pos:end="13:55">%</operator> <name pos:start="13:57" pos:end="13:63"><name pos:start="13:57" pos:end="13:57">c</name><operator pos:start="13:58" pos:end="13:59">-&gt;</operator><name pos:start="13:60" pos:end="13:63">size</name></name></expr>;</expr_stmt>
    <do pos:start="14:5" pos:end="53:13">do <block pos:start="14:8" pos:end="53:13">{<block_content pos:start="15:9" pos:end="53:13">
        <decl_stmt pos:start="15:9" pos:end="15:51"><decl pos:start="15:9" pos:end="15:50"><type pos:start="15:9" pos:end="15:32"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:30">Qcow2CachedTable</name> <modifier pos:start="15:32" pos:end="15:32">*</modifier></type><name pos:start="15:33" pos:end="15:33">t</name> <init pos:start="15:35" pos:end="15:50">= <expr pos:start="15:37" pos:end="15:50"><operator pos:start="15:37" pos:end="15:37">&amp;</operator><name pos:start="15:38" pos:end="15:50"><name pos:start="15:38" pos:end="15:38">c</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:47">entries</name><index pos:start="15:48" pos:end="15:50">[<expr pos:start="15:49" pos:end="15:49"><name pos:start="15:49" pos:end="15:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="16:9" pos:end="53:13"><if pos:start="16:9" pos:end="53:13">if <condition pos:start="16:12" pos:end="16:32">(<expr pos:start="16:13" pos:end="16:31"><name pos:start="16:13" pos:end="16:21"><name pos:start="16:13" pos:end="16:13">t</name><operator pos:start="16:14" pos:end="16:15">-&gt;</operator><name pos:start="16:16" pos:end="16:21">offset</name></name> <operator pos:start="16:23" pos:end="16:24">==</operator> <name pos:start="16:26" pos:end="16:31">offset</name></expr>)</condition> <block pos:start="16:34" pos:end="53:13">{<block_content pos:start="17:13" pos:end="53:13">
            <goto pos:start="17:13" pos:end="17:23">goto <name pos:start="17:18" pos:end="17:22">found</name>;</goto>
        <if_stmt pos:start="18:9" pos:end="53:13"><if pos:start="18:9" pos:end="53:13">if <condition pos:start="18:12" pos:end="18:60">(<expr pos:start="18:13" pos:end="18:59"><name pos:start="18:13" pos:end="18:18"><name pos:start="18:13" pos:end="18:13">t</name><operator pos:start="18:14" pos:end="18:15">-&gt;</operator><name pos:start="18:16" pos:end="18:18">ref</name></name> <operator pos:start="18:20" pos:end="18:21">==</operator> <literal type="number" pos:start="18:23" pos:end="18:23">0</literal> <operator pos:start="18:25" pos:end="18:26">&amp;&amp;</operator> <name pos:start="18:28" pos:end="18:41"><name pos:start="18:28" pos:end="18:28">t</name><operator pos:start="18:29" pos:end="18:30">-&gt;</operator><name pos:start="18:31" pos:end="18:41">lru_counter</name></name> <operator pos:start="18:43" pos:end="18:43">&lt;</operator> <name pos:start="18:45" pos:end="18:59">min_lru_counter</name></expr>)</condition> <block pos:start="18:62" pos:end="53:13">{<block_content pos:start="19:13" pos:end="53:13">
            <expr_stmt pos:start="19:13" pos:end="19:45"><expr pos:start="19:13" pos:end="19:44"><name pos:start="19:13" pos:end="19:27">min_lru_counter</name> <operator pos:start="19:29" pos:end="19:29">=</operator> <name pos:start="19:31" pos:end="19:44"><name pos:start="19:31" pos:end="19:31">t</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:44">lru_counter</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:30"><expr pos:start="20:13" pos:end="20:29"><name pos:start="20:13" pos:end="20:25">min_lru_index</name> <operator pos:start="20:27" pos:end="20:27">=</operator> <name pos:start="20:29" pos:end="20:29">i</name></expr>;</expr_stmt>
        <if_stmt pos:start="21:9" pos:end="23:5"><if pos:start="21:9" pos:end="23:5">if <condition pos:start="21:12" pos:end="21:27">(<expr pos:start="21:13" pos:end="21:26"><operator pos:start="21:13" pos:end="21:14">++</operator><name pos:start="21:15" pos:end="21:15">i</name> <operator pos:start="21:17" pos:end="21:18">==</operator> <name pos:start="21:20" pos:end="21:26"><name pos:start="21:20" pos:end="21:20">c</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:26">size</name></name></expr>)</condition> <block pos:start="21:29" pos:end="23:5">{<block_content pos:start="22:13" pos:end="22:18">
            <expr_stmt pos:start="22:13" pos:end="22:18"><expr pos:start="22:13" pos:end="22:17"><name pos:start="22:13" pos:end="22:13">i</name> <operator pos:start="22:15" pos:end="22:15">=</operator> <literal type="number" pos:start="22:17" pos:end="22:17">0</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt> <while pos:start="23:7" pos:end="23:32">while <condition pos:start="23:13" pos:end="23:31">(<expr pos:start="23:14" pos:end="23:30"><name pos:start="23:14" pos:end="23:14">i</name> <operator pos:start="23:16" pos:end="23:17">!=</operator> <name pos:start="23:19" pos:end="23:30">lookup_index</name></expr>)</condition><block type="pseudo" pos:start="23:32" pos:end="23:32"><block_content pos:start="23:32" pos:end="23:32"><empty_stmt pos:start="23:32" pos:end="23:32">;</empty_stmt></block_content></block></while>
    <if_stmt pos:start="24:5" pos:end="53:13"><if pos:start="24:5" pos:end="53:13">if <condition pos:start="24:8" pos:end="24:28">(<expr pos:start="24:9" pos:end="24:27"><name pos:start="24:9" pos:end="24:21">min_lru_index</name> <operator pos:start="24:23" pos:end="24:24">==</operator> <operator pos:start="24:26" pos:end="24:26">-</operator><literal type="number" pos:start="24:27" pos:end="24:27">1</literal></expr>)</condition> <block pos:start="24:30" pos:end="53:13">{<block_content pos:start="27:9" pos:end="53:13">
        <comment type="block" pos:start="25:9" pos:end="26:76">/* This can't happen in current synchronous code, but leave the check
         * here as a reminder for whoever starts using AIO with the cache */</comment>
        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><call pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:13">abort</name><argument_list pos:start="27:14" pos:end="27:15">()</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="28:5" pos:end="28:55">/* Cache miss: write a table back and replace it */</comment>
    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:5">i</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <name pos:start="29:9" pos:end="29:21">min_lru_index</name></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="31:67"><expr pos:start="30:5" pos:end="31:66"><call pos:start="30:5" pos:end="31:66"><name pos:start="30:5" pos:end="30:39">trace_qcow2_cache_get_replace_entry</name><argument_list pos:start="30:40" pos:end="31:66">(<argument pos:start="30:41" pos:end="30:61"><expr pos:start="30:41" pos:end="30:61"><call pos:start="30:41" pos:end="30:61"><name pos:start="30:41" pos:end="30:59">qemu_coroutine_self</name><argument_list pos:start="30:60" pos:end="30:61">()</argument_list></call></expr></argument>,
                                        <argument pos:start="31:41" pos:end="31:62"><expr pos:start="31:41" pos:end="31:62"><name pos:start="31:41" pos:end="31:41">c</name> <operator pos:start="31:43" pos:end="31:44">==</operator> <name pos:start="31:46" pos:end="31:62"><name pos:start="31:46" pos:end="31:46">s</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:62">l2_table_cache</name></name></expr></argument>, <argument pos:start="31:65" pos:end="31:65"><expr pos:start="31:65" pos:end="31:65"><name pos:start="31:65" pos:end="31:65">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:44"><expr pos:start="32:5" pos:end="32:43"><name pos:start="32:5" pos:end="32:7">ret</name> <operator pos:start="32:9" pos:end="32:9">=</operator> <call pos:start="32:11" pos:end="32:43"><name pos:start="32:11" pos:end="32:33">qcow2_cache_entry_flush</name><argument_list pos:start="32:34" pos:end="32:43">(<argument pos:start="32:35" pos:end="32:36"><expr pos:start="32:35" pos:end="32:36"><name pos:start="32:35" pos:end="32:36">bs</name></expr></argument>, <argument pos:start="32:39" pos:end="32:39"><expr pos:start="32:39" pos:end="32:39"><name pos:start="32:39" pos:end="32:39">c</name></expr></argument>, <argument pos:start="32:42" pos:end="32:42"><expr pos:start="32:42" pos:end="32:42"><name pos:start="32:42" pos:end="32:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="33:5" pos:end="53:13"><if pos:start="33:5" pos:end="53:13">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">&lt;</operator> <literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>)</condition> <block pos:start="33:18" pos:end="53:13">{<block_content pos:start="34:9" pos:end="53:13">
        <return pos:start="34:9" pos:end="34:19">return <expr pos:start="34:16" pos:end="34:18"><name pos:start="34:16" pos:end="34:18">ret</name></expr>;</return>
    <expr_stmt pos:start="35:5" pos:end="36:58"><expr pos:start="35:5" pos:end="36:57"><call pos:start="35:5" pos:end="36:57"><name pos:start="35:5" pos:end="35:30">trace_qcow2_cache_get_read</name><argument_list pos:start="35:31" pos:end="36:57">(<argument pos:start="35:32" pos:end="35:52"><expr pos:start="35:32" pos:end="35:52"><call pos:start="35:32" pos:end="35:52"><name pos:start="35:32" pos:end="35:50">qemu_coroutine_self</name><argument_list pos:start="35:51" pos:end="35:52">()</argument_list></call></expr></argument>,
                               <argument pos:start="36:32" pos:end="36:53"><expr pos:start="36:32" pos:end="36:53"><name pos:start="36:32" pos:end="36:32">c</name> <operator pos:start="36:34" pos:end="36:35">==</operator> <name pos:start="36:37" pos:end="36:53"><name pos:start="36:37" pos:end="36:37">s</name><operator pos:start="36:38" pos:end="36:39">-&gt;</operator><name pos:start="36:40" pos:end="36:53">l2_table_cache</name></name></expr></argument>, <argument pos:start="36:56" pos:end="36:56"><expr pos:start="36:56" pos:end="36:56"><name pos:start="36:56" pos:end="36:56">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:29"><expr pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:5">c</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:14">entries</name><index pos:start="37:15" pos:end="37:17">[<expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">i</name></expr>]</index></name><operator pos:start="37:18" pos:end="37:18">.</operator><name pos:start="37:19" pos:end="37:24">offset</name> <operator pos:start="37:26" pos:end="37:26">=</operator> <literal type="number" pos:start="37:28" pos:end="37:28">0</literal></expr>;</expr_stmt>
    <if_stmt pos:start="38:5" pos:end="53:13"><if pos:start="38:5" pos:end="53:13">if <condition pos:start="38:8" pos:end="38:23">(<expr pos:start="38:9" pos:end="38:22"><name pos:start="38:9" pos:end="38:22">read_from_disk</name></expr>)</condition> <block pos:start="38:25" pos:end="53:13">{<block_content pos:start="39:9" pos:end="53:13">
        <if_stmt pos:start="39:9" pos:end="53:13"><if pos:start="39:9" pos:end="53:13">if <condition pos:start="39:12" pos:end="39:35">(<expr pos:start="39:13" pos:end="39:34"><name pos:start="39:13" pos:end="39:13">c</name> <operator pos:start="39:15" pos:end="39:16">==</operator> <name pos:start="39:18" pos:end="39:34"><name pos:start="39:18" pos:end="39:18">s</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:34">l2_table_cache</name></name></expr>)</condition> <block pos:start="39:37" pos:end="53:13">{<block_content pos:start="40:13" pos:end="53:13">
            <expr_stmt pos:start="40:13" pos:end="40:51"><expr pos:start="40:13" pos:end="40:50"><call pos:start="40:13" pos:end="40:50"><name pos:start="40:13" pos:end="40:24">BLKDBG_EVENT</name><argument_list pos:start="40:25" pos:end="40:50">(<argument pos:start="40:26" pos:end="40:33"><expr pos:start="40:26" pos:end="40:33"><name pos:start="40:26" pos:end="40:33"><name pos:start="40:26" pos:end="40:27">bs</name><operator pos:start="40:28" pos:end="40:29">-&gt;</operator><name pos:start="40:30" pos:end="40:33">file</name></name></expr></argument>, <argument pos:start="40:36" pos:end="40:49"><expr pos:start="40:36" pos:end="40:49"><name pos:start="40:36" pos:end="40:49">BLKDBG_L2_LOAD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="41:9" pos:end="43:42"><expr pos:start="41:9" pos:end="43:41"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="43:41"><name pos:start="41:15" pos:end="41:24">bdrv_pread</name><argument_list pos:start="41:25" pos:end="43:41">(<argument pos:start="41:26" pos:end="41:33"><expr pos:start="41:26" pos:end="41:33"><name pos:start="41:26" pos:end="41:33"><name pos:start="41:26" pos:end="41:27">bs</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:33">file</name></name></expr></argument>, <argument pos:start="41:36" pos:end="41:41"><expr pos:start="41:36" pos:end="41:41"><name pos:start="41:36" pos:end="41:41">offset</name></expr></argument>,
                         <argument pos:start="42:26" pos:end="42:61"><expr pos:start="42:26" pos:end="42:61"><call pos:start="42:26" pos:end="42:61"><name pos:start="42:26" pos:end="42:51">qcow2_cache_get_table_addr</name><argument_list pos:start="42:52" pos:end="42:61">(<argument pos:start="42:53" pos:end="42:54"><expr pos:start="42:53" pos:end="42:54"><name pos:start="42:53" pos:end="42:54">bs</name></expr></argument>, <argument pos:start="42:57" pos:end="42:57"><expr pos:start="42:57" pos:end="42:57"><name pos:start="42:57" pos:end="42:57">c</name></expr></argument>, <argument pos:start="42:60" pos:end="42:60"><expr pos:start="42:60" pos:end="42:60"><name pos:start="42:60" pos:end="42:60">i</name></expr></argument>)</argument_list></call></expr></argument>,
                         <argument pos:start="43:26" pos:end="43:40"><expr pos:start="43:26" pos:end="43:40"><name pos:start="43:26" pos:end="43:40"><name pos:start="43:26" pos:end="43:26">s</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:40">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="44:9" pos:end="53:13"><if pos:start="44:9" pos:end="53:13">if <condition pos:start="44:12" pos:end="44:20">(<expr pos:start="44:13" pos:end="44:19"><name pos:start="44:13" pos:end="44:15">ret</name> <operator pos:start="44:17" pos:end="44:17">&lt;</operator> <literal type="number" pos:start="44:19" pos:end="44:19">0</literal></expr>)</condition> <block pos:start="44:22" pos:end="53:13">{<block_content pos:start="45:13" pos:end="53:13">
            <return pos:start="45:13" pos:end="45:23">return <expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">ret</name></expr>;</return>
    <expr_stmt pos:start="46:5" pos:end="46:34"><expr pos:start="46:5" pos:end="46:33"><name pos:start="46:5" pos:end="46:17"><name pos:start="46:5" pos:end="46:5">c</name><operator pos:start="46:6" pos:end="46:7">-&gt;</operator><name pos:start="46:8" pos:end="46:14">entries</name><index pos:start="46:15" pos:end="46:17">[<expr pos:start="46:16" pos:end="46:16"><name pos:start="46:16" pos:end="46:16">i</name></expr>]</index></name><operator pos:start="46:18" pos:end="46:18">.</operator><name pos:start="46:19" pos:end="46:24">offset</name> <operator pos:start="46:26" pos:end="46:26">=</operator> <name pos:start="46:28" pos:end="46:33">offset</name></expr>;</expr_stmt>
    <comment type="block" pos:start="47:5" pos:end="47:36">/* And return the right table */</comment>
<label pos:start="48:1" pos:end="48:6"><name pos:start="48:1" pos:end="48:5">found</name>:</label>
    <expr_stmt pos:start="49:5" pos:end="49:24"><expr pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:5">c</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:14">entries</name><index pos:start="49:15" pos:end="49:17">[<expr pos:start="49:16" pos:end="49:16"><name pos:start="49:16" pos:end="49:16">i</name></expr>]</index></name><operator pos:start="49:18" pos:end="49:18">.</operator><name pos:start="49:19" pos:end="49:21">ref</name><operator pos:start="49:22" pos:end="49:23">++</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="50:5" pos:end="50:50"><expr pos:start="50:5" pos:end="50:49"><operator pos:start="50:5" pos:end="50:5">*</operator><name pos:start="50:6" pos:end="50:10">table</name> <operator pos:start="50:12" pos:end="50:12">=</operator> <call pos:start="50:14" pos:end="50:49"><name pos:start="50:14" pos:end="50:39">qcow2_cache_get_table_addr</name><argument_list pos:start="50:40" pos:end="50:49">(<argument pos:start="50:41" pos:end="50:42"><expr pos:start="50:41" pos:end="50:42"><name pos:start="50:41" pos:end="50:42">bs</name></expr></argument>, <argument pos:start="50:45" pos:end="50:45"><expr pos:start="50:45" pos:end="50:45"><name pos:start="50:45" pos:end="50:45">c</name></expr></argument>, <argument pos:start="50:48" pos:end="50:48"><expr pos:start="50:48" pos:end="50:48"><name pos:start="50:48" pos:end="50:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="51:5" pos:end="52:58"><expr pos:start="51:5" pos:end="52:57"><call pos:start="51:5" pos:end="52:57"><name pos:start="51:5" pos:end="51:30">trace_qcow2_cache_get_done</name><argument_list pos:start="51:31" pos:end="52:57">(<argument pos:start="51:32" pos:end="51:52"><expr pos:start="51:32" pos:end="51:52"><call pos:start="51:32" pos:end="51:52"><name pos:start="51:32" pos:end="51:50">qemu_coroutine_self</name><argument_list pos:start="51:51" pos:end="51:52">()</argument_list></call></expr></argument>,
                               <argument pos:start="52:32" pos:end="52:53"><expr pos:start="52:32" pos:end="52:53"><name pos:start="52:32" pos:end="52:32">c</name> <operator pos:start="52:34" pos:end="52:35">==</operator> <name pos:start="52:37" pos:end="52:53"><name pos:start="52:37" pos:end="52:37">s</name><operator pos:start="52:38" pos:end="52:39">-&gt;</operator><name pos:start="52:40" pos:end="52:53">l2_table_cache</name></name></expr></argument>, <argument pos:start="52:56" pos:end="52:56"><expr pos:start="52:56" pos:end="52:56"><name pos:start="52:56" pos:end="52:56">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></do></block_content></block></function></unit>
