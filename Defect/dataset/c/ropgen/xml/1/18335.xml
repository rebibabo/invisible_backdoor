<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18335.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">gt_ctl_write</name><parameter_list pos:start="1:25" pos:end="3:40">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:36">CPUARMState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:65"><decl pos:start="1:44" pos:end="1:65"><type pos:start="1:44" pos:end="1:65"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:61">ARMCPRegInfo</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">ri</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:39"><decl pos:start="3:26" pos:end="3:39"><type pos:start="3:26" pos:end="3:39"><name pos:start="3:26" pos:end="3:33">uint64_t</name></type> <name pos:start="3:35" pos:end="3:39">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:5">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">ARMCPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">cpu</name> <init pos:start="7:17" pos:end="7:38">= <expr pos:start="7:19" pos:end="7:38"><call pos:start="7:19" pos:end="7:38"><name pos:start="7:19" pos:end="7:33">arm_env_get_cpu</name><argument_list pos:start="7:34" pos:end="7:38">(<argument pos:start="7:35" pos:end="7:37"><expr pos:start="7:35" pos:end="7:37"><name pos:start="7:35" pos:end="7:37">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">timeridx</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:26"><name pos:start="9:20" pos:end="9:21">ri</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:26">crm</name></name> <operator pos:start="9:28" pos:end="9:28">&amp;</operator> <literal type="number" pos:start="9:30" pos:end="9:30">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:19">oldval</name> <init pos:start="11:21" pos:end="11:55">= <expr pos:start="11:23" pos:end="11:55"><name pos:start="11:23" pos:end="11:51"><name pos:start="11:23" pos:end="11:25">env</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:31">cp15</name><operator pos:start="11:32" pos:end="11:32">.</operator><name pos:start="11:33" pos:end="11:41">c14_timer</name><index pos:start="11:42" pos:end="11:51">[<expr pos:start="11:43" pos:end="11:50"><name pos:start="11:43" pos:end="11:50">timeridx</name></expr>]</index></name><operator pos:start="11:52" pos:end="11:52">.</operator><name pos:start="11:53" pos:end="11:55">ctl</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:50"><expr pos:start="15:5" pos:end="15:49"><name pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:7">env</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:13">cp15</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">c14_timer</name><index pos:start="15:24" pos:end="15:33">[<expr pos:start="15:25" pos:end="15:32"><name pos:start="15:25" pos:end="15:32">timeridx</name></expr>]</index></name><operator pos:start="15:34" pos:end="15:34">.</operator><name pos:start="15:35" pos:end="15:37">ctl</name> <operator pos:start="15:39" pos:end="15:39">=</operator> <name pos:start="15:41" pos:end="15:45">value</name> <operator pos:start="15:47" pos:end="15:47">&amp;</operator> <literal type="number" pos:start="15:49" pos:end="15:49">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="35:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:29">(<expr pos:start="17:9" pos:end="17:28"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:15">oldval</name> <operator pos:start="17:17" pos:end="17:17">^</operator> <name pos:start="17:19" pos:end="17:23">value</name><operator pos:start="17:24" pos:end="17:24">)</operator> <operator pos:start="17:26" pos:end="17:26">&amp;</operator> <literal type="number" pos:start="17:28" pos:end="17:28">1</literal></expr>)</condition> <block pos:start="17:31" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:39">

        <comment type="block" pos:start="19:9" pos:end="19:28">/* Enable toggled */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><call pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:23">gt_recalc_timer</name><argument_list pos:start="21:24" pos:end="21:38">(<argument pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:27">cpu</name></expr></argument>, <argument pos:start="21:30" pos:end="21:37"><expr pos:start="21:30" pos:end="21:37"><name pos:start="21:30" pos:end="21:37">timeridx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="35:5">else if <condition pos:start="23:15" pos:end="23:36">(<expr pos:start="23:16" pos:end="23:35"><operator pos:start="23:16" pos:end="23:16">(</operator><name pos:start="23:17" pos:end="23:22">oldval</name> <operator pos:start="23:24" pos:end="23:24">&amp;</operator> <name pos:start="23:26" pos:end="23:30">value</name><operator pos:start="23:31" pos:end="23:31">)</operator> <operator pos:start="23:33" pos:end="23:33">&amp;</operator> <literal type="number" pos:start="23:35" pos:end="23:35">2</literal></expr>)</condition> <block pos:start="23:38" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:50">

        <comment type="block" pos:start="25:9" pos:end="29:11">/* IMASK toggled: don't need to recalculate,

         * just set the interrupt line based on ISTATUS

         */</comment>

        <expr_stmt pos:start="31:9" pos:end="33:50"><expr pos:start="31:9" pos:end="33:49"><call pos:start="31:9" pos:end="33:49"><name pos:start="31:9" pos:end="31:20">qemu_set_irq</name><argument_list pos:start="31:21" pos:end="33:49">(<argument pos:start="31:22" pos:end="31:52"><expr pos:start="31:22" pos:end="31:52"><name pos:start="31:22" pos:end="31:52"><name pos:start="31:22" pos:end="31:24">cpu</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:42">gt_timer_outputs</name><index pos:start="31:43" pos:end="31:52">[<expr pos:start="31:44" pos:end="31:51"><name pos:start="31:44" pos:end="31:51">timeridx</name></expr>]</index></name></expr></argument>,

                     <argument pos:start="33:22" pos:end="33:48"><expr pos:start="33:22" pos:end="33:48"><operator pos:start="33:22" pos:end="33:22">(</operator><name pos:start="33:23" pos:end="33:28">oldval</name> <operator pos:start="33:30" pos:end="33:30">&amp;</operator> <literal type="number" pos:start="33:32" pos:end="33:32">4</literal><operator pos:start="33:33" pos:end="33:33">)</operator> <operator pos:start="33:35" pos:end="33:36">&amp;&amp;</operator> <operator pos:start="33:38" pos:end="33:38">(</operator><name pos:start="33:39" pos:end="33:43">value</name> <operator pos:start="33:45" pos:end="33:45">&amp;</operator> <literal type="number" pos:start="33:47" pos:end="33:47">2</literal><operator pos:start="33:48" pos:end="33:48">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
