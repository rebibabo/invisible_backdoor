<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24029.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">unsigned</name></type> <name pos:start="1:10" pos:end="1:35">ff_dxva2_get_surface_index</name><parameter_list pos:start="1:36" pos:end="5:57">(<parameter pos:start="1:37" pos:end="1:63"><decl pos:start="1:37" pos:end="1:63"><type pos:start="1:37" pos:end="1:63"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:56">AVCodecContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">avctx</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:60"><decl pos:start="3:37" pos:end="3:60"><type pos:start="3:37" pos:end="3:60"><specifier pos:start="3:37" pos:end="3:41">const</specifier> <name pos:start="3:43" pos:end="3:55">AVDXVAContext</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:60">ctx</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:56"><decl pos:start="5:37" pos:end="5:56"><type pos:start="5:37" pos:end="5:56"><specifier pos:start="5:37" pos:end="5:41">const</specifier> <name pos:start="5:43" pos:end="5:49">AVFrame</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:56">frame</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="27:1">{<block_content pos:start="9:5" pos:end="25:13">

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:47"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:17">surface</name> <init pos:start="9:19" pos:end="9:47">= <expr pos:start="9:21" pos:end="9:47"><call pos:start="9:21" pos:end="9:47"><name pos:start="9:21" pos:end="9:40">ff_dxva2_get_surface</name><argument_list pos:start="9:41" pos:end="9:47">(<argument pos:start="9:42" pos:end="9:46"><expr pos:start="9:42" pos:end="9:46"><name pos:start="9:42" pos:end="9:46">frame</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:14">i</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="19:21">for <control pos:start="15:9" pos:end="15:56">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:51"><expr pos:start="15:17" pos:end="15:50"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <call pos:start="15:21" pos:end="15:50"><name pos:start="15:21" pos:end="15:38">DXVA_CONTEXT_COUNT</name><argument_list pos:start="15:39" pos:end="15:50">(<argument pos:start="15:40" pos:end="15:44"><expr pos:start="15:40" pos:end="15:44"><name pos:start="15:40" pos:end="15:44">avctx</name></expr></argument>, <argument pos:start="15:47" pos:end="15:49"><expr pos:start="15:47" pos:end="15:49"><name pos:start="15:47" pos:end="15:49">ctx</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="15:53" pos:end="15:55"><expr pos:start="15:53" pos:end="15:55"><name pos:start="15:53" pos:end="15:53">i</name><operator pos:start="15:54" pos:end="15:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:9" pos:end="19:21"><block_content pos:start="17:9" pos:end="19:21">

        <if_stmt pos:start="17:9" pos:end="19:21"><if pos:start="17:9" pos:end="19:21">if <condition pos:start="17:12" pos:end="17:59">(<expr pos:start="17:13" pos:end="17:58"><call pos:start="17:13" pos:end="17:47"><name pos:start="17:13" pos:end="17:32">DXVA_CONTEXT_SURFACE</name><argument_list pos:start="17:33" pos:end="17:47">(<argument pos:start="17:34" pos:end="17:38"><expr pos:start="17:34" pos:end="17:38"><name pos:start="17:34" pos:end="17:38">avctx</name></expr></argument>, <argument pos:start="17:41" pos:end="17:43"><expr pos:start="17:41" pos:end="17:43"><name pos:start="17:41" pos:end="17:43">ctx</name></expr></argument>, <argument pos:start="17:46" pos:end="17:46"><expr pos:start="17:46" pos:end="17:46"><name pos:start="17:46" pos:end="17:46">i</name></expr></argument>)</argument_list></call> <operator pos:start="17:49" pos:end="17:50">==</operator> <name pos:start="17:52" pos:end="17:58">surface</name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:21"><block_content pos:start="19:13" pos:end="19:21">

            <return pos:start="19:13" pos:end="19:21">return <expr pos:start="19:20" pos:end="19:20"><name pos:start="19:20" pos:end="19:20">i</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="23:5" pos:end="23:14"><expr pos:start="23:5" pos:end="23:13"><call pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:13">(<argument pos:start="23:12" pos:end="23:12"><expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="25:5" pos:end="25:13">return <expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
