<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2831.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">skip_check</name><parameter_list pos:start="1:22" pos:end="1:66">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:36">MpegEncContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:48">Picture</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">p</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:60">Picture</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">ref</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:13">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">y</name></decl>, <decl pos:start="5:15" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:19">plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">score</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:19">score64</name> <init pos:start="9:21" pos:end="9:23">= <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="51:5">for <control pos:start="13:9" pos:end="13:39">(<init pos:start="13:10" pos:end="13:19"><expr pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:14">plane</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>;</init> <condition pos:start="13:21" pos:end="13:30"><expr pos:start="13:21" pos:end="13:29"><name pos:start="13:21" pos:end="13:25">plane</name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <literal type="number" pos:start="13:29" pos:end="13:29">3</literal></expr>;</condition> <incr pos:start="13:32" pos:end="13:38"><expr pos:start="13:32" pos:end="13:38"><name pos:start="13:32" pos:end="13:36">plane</name><operator pos:start="13:37" pos:end="13:38">++</operator></expr></incr>)</control> <block pos:start="13:41" pos:end="51:5">{<block_content pos:start="15:9" pos:end="49:9">

        <decl_stmt pos:start="15:9" pos:end="15:48"><decl pos:start="15:9" pos:end="15:47"><type pos:start="15:9" pos:end="15:17"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:17">int</name></type> <name pos:start="15:19" pos:end="15:24">stride</name> <init pos:start="15:26" pos:end="15:47">= <expr pos:start="15:28" pos:end="15:47"><name pos:start="15:28" pos:end="15:47"><name pos:start="15:28" pos:end="15:28">p</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:31">f</name><operator pos:start="15:32" pos:end="15:32">.</operator><name pos:start="15:33" pos:end="15:40">linesize</name><index pos:start="15:41" pos:end="15:47">[<expr pos:start="15:42" pos:end="15:46"><name pos:start="15:42" pos:end="15:46">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:37"><decl pos:start="17:9" pos:end="17:36"><type pos:start="17:9" pos:end="17:17"><specifier pos:start="17:9" pos:end="17:13">const</specifier> <name pos:start="17:15" pos:end="17:17">int</name></type> <name pos:start="17:19" pos:end="17:20">bw</name> <init pos:start="17:22" pos:end="17:36">= <expr pos:start="17:24" pos:end="17:36"><ternary pos:start="17:24" pos:end="17:36"><condition pos:start="17:24" pos:end="17:30"><expr pos:start="17:24" pos:end="17:28"><name pos:start="17:24" pos:end="17:28">plane</name></expr> ?</condition><then pos:start="17:32" pos:end="17:32"> <expr pos:start="17:32" pos:end="17:32"><literal type="number" pos:start="17:32" pos:end="17:32">1</literal></expr> </then><else pos:start="17:34" pos:end="17:36">: <expr pos:start="17:36" pos:end="17:36"><literal type="number" pos:start="17:36" pos:end="17:36">2</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <for pos:start="19:9" pos:end="49:9">for <control pos:start="19:13" pos:end="19:47">(<init pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">y</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:42"><expr pos:start="19:21" pos:end="19:41"><name pos:start="19:21" pos:end="19:21">y</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:36"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:36">mb_height</name></name> <operator pos:start="19:38" pos:end="19:38">*</operator> <name pos:start="19:40" pos:end="19:41">bw</name></expr>;</condition> <incr pos:start="19:44" pos:end="19:46"><expr pos:start="19:44" pos:end="19:46"><name pos:start="19:44" pos:end="19:44">y</name><operator pos:start="19:45" pos:end="19:46">++</operator></expr></incr>)</control> <block pos:start="19:49" pos:end="49:9">{<block_content pos:start="21:13" pos:end="47:13">

            <for pos:start="21:13" pos:end="47:13">for <control pos:start="21:17" pos:end="21:50">(<init pos:start="21:18" pos:end="21:23"><expr pos:start="21:18" pos:end="21:22"><name pos:start="21:18" pos:end="21:18">x</name> <operator pos:start="21:20" pos:end="21:20">=</operator> <literal type="number" pos:start="21:22" pos:end="21:22">0</literal></expr>;</init> <condition pos:start="21:25" pos:end="21:45"><expr pos:start="21:25" pos:end="21:44"><name pos:start="21:25" pos:end="21:25">x</name> <operator pos:start="21:27" pos:end="21:27">&lt;</operator> <name pos:start="21:29" pos:end="21:39"><name pos:start="21:29" pos:end="21:29">s</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:39">mb_width</name></name> <operator pos:start="21:41" pos:end="21:41">*</operator> <name pos:start="21:43" pos:end="21:44">bw</name></expr>;</condition> <incr pos:start="21:47" pos:end="21:49"><expr pos:start="21:47" pos:end="21:49"><name pos:start="21:47" pos:end="21:47">x</name><operator pos:start="21:48" pos:end="21:49">++</operator></expr></incr>)</control> <block pos:start="21:52" pos:end="47:13">{<block_content pos:start="23:17" pos:end="45:17">

                <decl_stmt pos:start="23:17" pos:end="23:45"><decl pos:start="23:17" pos:end="23:44"><type pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:19">int</name></type> <name pos:start="23:21" pos:end="23:23">off</name> <init pos:start="23:25" pos:end="23:44">= <expr pos:start="23:27" pos:end="23:44"><ternary pos:start="23:27" pos:end="23:44"><condition pos:start="23:27" pos:end="23:37"><expr pos:start="23:27" pos:end="23:35"><name pos:start="23:27" pos:end="23:35"><name pos:start="23:27" pos:end="23:27">p</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:35">shared</name></name></expr> ?</condition><then pos:start="23:39" pos:end="23:39"> <expr pos:start="23:39" pos:end="23:39"><literal type="number" pos:start="23:39" pos:end="23:39">0</literal></expr> </then><else pos:start="23:41" pos:end="23:44">: <expr pos:start="23:43" pos:end="23:44"><literal type="number" pos:start="23:43" pos:end="23:44">16</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="25:17" pos:end="25:78"><decl pos:start="25:17" pos:end="25:77"><type pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:23">uint8_t</name> <modifier pos:start="25:25" pos:end="25:25">*</modifier></type><name pos:start="25:26" pos:end="25:29">dptr</name> <init pos:start="25:31" pos:end="25:77">= <expr pos:start="25:33" pos:end="25:77"><name pos:start="25:33" pos:end="25:48"><name pos:start="25:33" pos:end="25:33">p</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:36">f</name><operator pos:start="25:37" pos:end="25:37">.</operator><name pos:start="25:38" pos:end="25:41">data</name><index pos:start="25:42" pos:end="25:48">[<expr pos:start="25:43" pos:end="25:47"><name pos:start="25:43" pos:end="25:47">plane</name></expr>]</index></name> <operator pos:start="25:50" pos:end="25:50">+</operator> <literal type="number" pos:start="25:52" pos:end="25:52">8</literal> <operator pos:start="25:54" pos:end="25:54">*</operator> <operator pos:start="25:56" pos:end="25:56">(</operator><name pos:start="25:57" pos:end="25:57">x</name> <operator pos:start="25:59" pos:end="25:59">+</operator> <name pos:start="25:61" pos:end="25:61">y</name> <operator pos:start="25:63" pos:end="25:63">*</operator> <name pos:start="25:65" pos:end="25:70">stride</name><operator pos:start="25:71" pos:end="25:71">)</operator> <operator pos:start="25:73" pos:end="25:73">+</operator> <name pos:start="25:75" pos:end="25:77">off</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="27:17" pos:end="27:74"><decl pos:start="27:17" pos:end="27:73"><type pos:start="27:17" pos:end="27:25"><name pos:start="27:17" pos:end="27:23">uint8_t</name> <modifier pos:start="27:25" pos:end="27:25">*</modifier></type><name pos:start="27:26" pos:end="27:29">rptr</name> <init pos:start="27:31" pos:end="27:73">= <expr pos:start="27:33" pos:end="27:73"><name pos:start="27:33" pos:end="27:50"><name pos:start="27:33" pos:end="27:35">ref</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:38">f</name><operator pos:start="27:39" pos:end="27:39">.</operator><name pos:start="27:40" pos:end="27:43">data</name><index pos:start="27:44" pos:end="27:50">[<expr pos:start="27:45" pos:end="27:49"><name pos:start="27:45" pos:end="27:49">plane</name></expr>]</index></name> <operator pos:start="27:52" pos:end="27:52">+</operator> <literal type="number" pos:start="27:54" pos:end="27:54">8</literal> <operator pos:start="27:56" pos:end="27:56">*</operator> <operator pos:start="27:58" pos:end="27:58">(</operator><name pos:start="27:59" pos:end="27:59">x</name> <operator pos:start="27:61" pos:end="27:61">+</operator> <name pos:start="27:63" pos:end="27:63">y</name> <operator pos:start="27:65" pos:end="27:65">*</operator> <name pos:start="27:67" pos:end="27:72">stride</name><operator pos:start="27:73" pos:end="27:73">)</operator></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="29:17" pos:end="29:77"><decl pos:start="29:17" pos:end="29:76"><type pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:19">int</name></type> <name pos:start="29:21" pos:end="29:21">v</name>   <init pos:start="29:25" pos:end="29:76">= <expr pos:start="29:27" pos:end="29:76"><name pos:start="29:27" pos:end="29:50"><name pos:start="29:27" pos:end="29:27">s</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:32">dsp</name><operator pos:start="29:33" pos:end="29:33">.</operator><name pos:start="29:34" pos:end="29:47">frame_skip_cmp</name><index pos:start="29:48" pos:end="29:50">[<expr pos:start="29:49" pos:end="29:49"><literal type="number" pos:start="29:49" pos:end="29:49">1</literal></expr>]</index></name><operator pos:start="29:51" pos:end="29:51">(</operator><name pos:start="29:52" pos:end="29:52">s</name>, <name pos:start="29:55" pos:end="29:58">dptr</name>, <name pos:start="29:61" pos:end="29:64">rptr</name>, <name pos:start="29:67" pos:end="29:72">stride</name>, <literal type="number" pos:start="29:75" pos:end="29:75">8</literal><operator pos:start="29:76" pos:end="29:76">)</operator></expr></init></decl>;</decl_stmt>



                <switch pos:start="33:17" pos:end="45:17">switch <condition pos:start="33:24" pos:end="33:49">(<expr pos:start="33:25" pos:end="33:48"><name pos:start="33:25" pos:end="33:48"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:32">avctx</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:48">frame_skip_exp</name></name></expr>)</condition> <block pos:start="33:51" pos:end="45:17">{<block_content pos:start="35:17" pos:end="43:68">

                <case pos:start="35:17" pos:end="35:23">case <expr pos:start="35:22" pos:end="35:22"><literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr>:</case> <expr_stmt pos:start="35:25" pos:end="35:52"><expr pos:start="35:25" pos:end="35:51"><name pos:start="35:25" pos:end="35:29">score</name>    <operator pos:start="35:34" pos:end="35:34">=</operator>  <call pos:start="35:37" pos:end="35:51"><name pos:start="35:37" pos:end="35:41">FFMAX</name><argument_list pos:start="35:42" pos:end="35:51">(<argument pos:start="35:43" pos:end="35:47"><expr pos:start="35:43" pos:end="35:47"><name pos:start="35:43" pos:end="35:47">score</name></expr></argument>, <argument pos:start="35:50" pos:end="35:50"><expr pos:start="35:50" pos:end="35:50"><name pos:start="35:50" pos:end="35:50">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <break pos:start="35:63" pos:end="35:68">break;</break>

                <case pos:start="37:17" pos:end="37:23">case <expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr>:</case> <expr_stmt pos:start="37:25" pos:end="37:44"><expr pos:start="37:25" pos:end="37:43"><name pos:start="37:25" pos:end="37:29">score</name>   <operator pos:start="37:33" pos:end="37:34">+=</operator> <call pos:start="37:36" pos:end="37:43"><name pos:start="37:36" pos:end="37:40">FFABS</name><argument_list pos:start="37:41" pos:end="37:43">(<argument pos:start="37:42" pos:end="37:42"><expr pos:start="37:42" pos:end="37:42"><name pos:start="37:42" pos:end="37:42">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                  <break pos:start="37:63" pos:end="37:68">break;</break>

                <case pos:start="39:17" pos:end="39:23">case <expr pos:start="39:22" pos:end="39:22"><literal type="number" pos:start="39:22" pos:end="39:22">2</literal></expr>:</case> <expr_stmt pos:start="39:25" pos:end="39:41"><expr pos:start="39:25" pos:end="39:40"><name pos:start="39:25" pos:end="39:29">score</name>   <operator pos:start="39:33" pos:end="39:34">+=</operator> <name pos:start="39:36" pos:end="39:36">v</name> <operator pos:start="39:38" pos:end="39:38">*</operator> <name pos:start="39:40" pos:end="39:40">v</name></expr>;</expr_stmt>                     <break pos:start="39:63" pos:end="39:68">break;</break>

                <case pos:start="41:17" pos:end="41:23">case <expr pos:start="41:22" pos:end="41:22"><literal type="number" pos:start="41:22" pos:end="41:22">3</literal></expr>:</case> <expr_stmt pos:start="41:25" pos:end="41:61"><expr pos:start="41:25" pos:end="41:60"><name pos:start="41:25" pos:end="41:31">score64</name> <operator pos:start="41:33" pos:end="41:34">+=</operator> <call pos:start="41:36" pos:end="41:60"><name pos:start="41:36" pos:end="41:40">FFABS</name><argument_list pos:start="41:41" pos:end="41:60">(<argument pos:start="41:42" pos:end="41:59"><expr pos:start="41:42" pos:end="41:59"><name pos:start="41:42" pos:end="41:42">v</name> <operator pos:start="41:44" pos:end="41:44">*</operator> <name pos:start="41:46" pos:end="41:46">v</name> <operator pos:start="41:48" pos:end="41:48">*</operator> <operator pos:start="41:50" pos:end="41:50">(</operator><name pos:start="41:51" pos:end="41:57">int64_t</name><operator pos:start="41:58" pos:end="41:58">)</operator><name pos:start="41:59" pos:end="41:59">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="41:63" pos:end="41:68">break;</break>

                <case pos:start="43:17" pos:end="43:23">case <expr pos:start="43:22" pos:end="43:22"><literal type="number" pos:start="43:22" pos:end="43:22">4</literal></expr>:</case> <expr_stmt pos:start="43:25" pos:end="43:60"><expr pos:start="43:25" pos:end="43:59"><name pos:start="43:25" pos:end="43:31">score64</name> <operator pos:start="43:33" pos:end="43:34">+=</operator> <name pos:start="43:36" pos:end="43:36">v</name> <operator pos:start="43:38" pos:end="43:38">*</operator> <name pos:start="43:40" pos:end="43:40">v</name> <operator pos:start="43:42" pos:end="43:42">*</operator> <operator pos:start="43:44" pos:end="43:44">(</operator><name pos:start="43:45" pos:end="43:51">int64_t</name><operator pos:start="43:52" pos:end="43:52">)</operator><operator pos:start="43:53" pos:end="43:53">(</operator><name pos:start="43:54" pos:end="43:54">v</name> <operator pos:start="43:56" pos:end="43:56">*</operator> <name pos:start="43:58" pos:end="43:58">v</name><operator pos:start="43:59" pos:end="43:59">)</operator></expr>;</expr_stmt>  <break pos:start="43:63" pos:end="43:68">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="55:5" pos:end="57:24"><if pos:start="55:5" pos:end="57:24">if <condition pos:start="55:8" pos:end="55:14">(<expr pos:start="55:9" pos:end="55:13"><name pos:start="55:9" pos:end="55:13">score</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:24"><block_content pos:start="57:9" pos:end="57:24">

        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:15">score64</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:23">score</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="63:17"><if pos:start="61:5" pos:end="63:17">if <condition pos:start="61:8" pos:end="61:49">(<expr pos:start="61:9" pos:end="61:48"><name pos:start="61:9" pos:end="61:15">score64</name> <operator pos:start="61:17" pos:end="61:17">&lt;</operator> <name pos:start="61:19" pos:end="61:48"><name pos:start="61:19" pos:end="61:19">s</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:26">avctx</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:48">frame_skip_threshold</name></name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:17"><block_content pos:start="63:9" pos:end="63:17">

        <return pos:start="63:9" pos:end="63:17">return <expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="67:17"><if pos:start="65:5" pos:end="67:17">if <condition pos:start="65:8" pos:end="65:76">(<expr pos:start="65:9" pos:end="65:75"><name pos:start="65:9" pos:end="65:15">score64</name> <operator pos:start="65:17" pos:end="65:17">&lt;</operator> <operator pos:start="65:19" pos:end="65:19">(</operator><operator pos:start="65:20" pos:end="65:20">(</operator><name pos:start="65:21" pos:end="65:47"><name pos:start="65:21" pos:end="65:21">s</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:28">avctx</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:47">frame_skip_factor</name></name> <operator pos:start="65:49" pos:end="65:49">*</operator> <operator pos:start="65:51" pos:end="65:51">(</operator><name pos:start="65:52" pos:end="65:58">int64_t</name><operator pos:start="65:59" pos:end="65:59">)</operator><name pos:start="65:60" pos:end="65:68"><name pos:start="65:60" pos:end="65:60">s</name><operator pos:start="65:61" pos:end="65:62">-&gt;</operator><name pos:start="65:63" pos:end="65:68">lambda</name></name><operator pos:start="65:69" pos:end="65:69">)</operator> <operator pos:start="65:71" pos:end="65:72">&gt;&gt;</operator> <literal type="number" pos:start="65:74" pos:end="65:74">8</literal><operator pos:start="65:75" pos:end="65:75">)</operator></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:17"><block_content pos:start="67:9" pos:end="67:17">

        <return pos:start="67:9" pos:end="67:17">return <expr pos:start="67:16" pos:end="67:16"><literal type="number" pos:start="67:16" pos:end="67:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
