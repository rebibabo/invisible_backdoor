<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4083.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">test_tco_max_timeout</name><parameter_list pos:start="1:33" pos:end="1:38">(<parameter pos:start="1:34" pos:end="1:37"><decl pos:start="1:34" pos:end="1:37"><type pos:start="1:34" pos:end="1:37"><name pos:start="1:34" pos:end="1:37">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:16">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">TestData</name></type> <name pos:start="5:14" pos:end="5:14">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:18"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:18">uint16_t</name></type> <name pos:start="7:20" pos:end="7:24">ticks</name> <init pos:start="7:26" pos:end="7:33">= <expr pos:start="7:28" pos:end="7:33"><literal type="number" pos:start="7:28" pos:end="7:33">0xffff</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:18"><expr pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:5">d</name><operator pos:start="15:6" pos:end="15:6">.</operator><name pos:start="15:7" pos:end="15:10">args</name></name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:17">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:5">d</name><operator pos:start="17:6" pos:end="17:6">.</operator><name pos:start="17:7" pos:end="17:14">noreboot</name></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:21">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:18"><expr pos:start="19:5" pos:end="19:17"><call pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:13">test_init</name><argument_list pos:start="19:14" pos:end="19:17">(<argument pos:start="19:15" pos:end="19:16"><expr pos:start="19:15" pos:end="19:16"><operator pos:start="19:15" pos:end="19:15">&amp;</operator><name pos:start="19:16" pos:end="19:16">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><call pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:12">stop_tco</name><argument_list pos:start="23:13" pos:end="23:16">(<argument pos:start="23:14" pos:end="23:15"><expr pos:start="23:14" pos:end="23:15"><operator pos:start="23:14" pos:end="23:14">&amp;</operator><name pos:start="23:15" pos:end="23:15">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><call pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:20">clear_tco_status</name><argument_list pos:start="25:21" pos:end="25:24">(<argument pos:start="25:22" pos:end="25:23"><expr pos:start="25:22" pos:end="25:23"><operator pos:start="25:22" pos:end="25:22">&amp;</operator><name pos:start="25:23" pos:end="25:23">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><call pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:27">reset_on_second_timeout</name><argument_list pos:start="27:28" pos:end="27:34">(<argument pos:start="27:29" pos:end="27:33"><expr pos:start="27:29" pos:end="27:33"><name pos:start="27:29" pos:end="27:33">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><call pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:19">set_tco_timeout</name><argument_list pos:start="29:20" pos:end="29:30">(<argument pos:start="29:21" pos:end="29:22"><expr pos:start="29:21" pos:end="29:22"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:22">d</name></expr></argument>, <argument pos:start="29:25" pos:end="29:29"><expr pos:start="29:25" pos:end="29:29"><name pos:start="29:25" pos:end="29:29">ticks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><call pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:12">load_tco</name><argument_list pos:start="31:13" pos:end="31:16">(<argument pos:start="31:14" pos:end="31:15"><expr pos:start="31:14" pos:end="31:15"><operator pos:start="31:14" pos:end="31:14">&amp;</operator><name pos:start="31:15" pos:end="31:15">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><call pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:13">start_tco</name><argument_list pos:start="33:14" pos:end="33:17">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><operator pos:start="33:15" pos:end="33:15">&amp;</operator><name pos:start="33:16" pos:end="33:16">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:61"><expr pos:start="35:5" pos:end="35:60"><call pos:start="35:5" pos:end="35:60"><name pos:start="35:5" pos:end="35:14">clock_step</name><argument_list pos:start="35:15" pos:end="35:60">(<argument pos:start="35:16" pos:end="35:59"><expr pos:start="35:16" pos:end="35:59"><operator pos:start="35:16" pos:end="35:16">(</operator><operator pos:start="35:17" pos:end="35:17">(</operator><name pos:start="35:18" pos:end="35:22">ticks</name> <operator pos:start="35:24" pos:end="35:24">&amp;</operator> <name pos:start="35:26" pos:end="35:37">TCO_TMR_MASK</name><operator pos:start="35:38" pos:end="35:38">)</operator> <operator pos:start="35:40" pos:end="35:40">-</operator> <literal type="number" pos:start="35:42" pos:end="35:42">1</literal><operator pos:start="35:43" pos:end="35:43">)</operator> <operator pos:start="35:45" pos:end="35:45">*</operator> <name pos:start="35:47" pos:end="35:59">TCO_TICK_NSEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:56"><expr pos:start="39:5" pos:end="39:55"><name pos:start="39:5" pos:end="39:7">val</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:55"><name pos:start="39:11" pos:end="39:23">qpci_io_readw</name><argument_list pos:start="39:24" pos:end="39:55">(<argument pos:start="39:25" pos:end="39:29"><expr pos:start="39:25" pos:end="39:29"><name pos:start="39:25" pos:end="39:29"><name pos:start="39:25" pos:end="39:25">d</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:29">dev</name></name></expr></argument>, <argument pos:start="39:32" pos:end="39:54"><expr pos:start="39:32" pos:end="39:54"><name pos:start="39:32" pos:end="39:44"><name pos:start="39:32" pos:end="39:32">d</name><operator pos:start="39:33" pos:end="39:33">.</operator><name pos:start="39:34" pos:end="39:44">tco_io_base</name></name> <operator pos:start="39:46" pos:end="39:46">+</operator> <name pos:start="39:48" pos:end="39:54">TCO_RLD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><call pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:19">g_assert_cmpint</name><argument_list pos:start="41:20" pos:end="41:46">(<argument pos:start="41:21" pos:end="41:38"><expr pos:start="41:21" pos:end="41:38"><name pos:start="41:21" pos:end="41:23">val</name> <operator pos:start="41:25" pos:end="41:25">&amp;</operator> <name pos:start="41:27" pos:end="41:38">TCO_RLD_MASK</name></expr></argument>, <argument pos:start="41:41" pos:end="41:42"><expr pos:start="41:41" pos:end="41:42"><operator pos:start="41:41" pos:end="41:42">==</operator></expr></argument>, <argument pos:start="41:45" pos:end="41:45"><expr pos:start="41:45" pos:end="41:45"><literal type="number" pos:start="41:45" pos:end="41:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:7">val</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:56"><name pos:start="43:11" pos:end="43:23">qpci_io_readw</name><argument_list pos:start="43:24" pos:end="43:56">(<argument pos:start="43:25" pos:end="43:29"><expr pos:start="43:25" pos:end="43:29"><name pos:start="43:25" pos:end="43:29"><name pos:start="43:25" pos:end="43:25">d</name><operator pos:start="43:26" pos:end="43:26">.</operator><name pos:start="43:27" pos:end="43:29">dev</name></name></expr></argument>, <argument pos:start="43:32" pos:end="43:55"><expr pos:start="43:32" pos:end="43:55"><name pos:start="43:32" pos:end="43:44"><name pos:start="43:32" pos:end="43:32">d</name><operator pos:start="43:33" pos:end="43:33">.</operator><name pos:start="43:34" pos:end="43:44">tco_io_base</name></name> <operator pos:start="43:46" pos:end="43:46">+</operator> <name pos:start="43:48" pos:end="43:55">TCO1_STS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <ternary pos:start="45:11" pos:end="45:35"><condition pos:start="45:11" pos:end="45:29"><expr pos:start="45:11" pos:end="45:27"><name pos:start="45:11" pos:end="45:13">val</name> <operator pos:start="45:15" pos:end="45:15">&amp;</operator> <name pos:start="45:17" pos:end="45:27">TCO_TIMEOUT</name></expr> ?</condition><then pos:start="45:31" pos:end="45:31"> <expr pos:start="45:31" pos:end="45:31"><literal type="number" pos:start="45:31" pos:end="45:31">1</literal></expr> </then><else pos:start="45:33" pos:end="45:35">: <expr pos:start="45:35" pos:end="45:35"><literal type="number" pos:start="45:35" pos:end="45:35">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><call pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:12">g_assert</name><argument_list pos:start="47:13" pos:end="47:22">(<argument pos:start="47:14" pos:end="47:21"><expr pos:start="47:14" pos:end="47:21"><name pos:start="47:14" pos:end="47:16">ret</name> <operator pos:start="47:18" pos:end="47:19">==</operator> <literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><call pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:14">clock_step</name><argument_list pos:start="49:15" pos:end="49:29">(<argument pos:start="49:16" pos:end="49:28"><expr pos:start="49:16" pos:end="49:28"><name pos:start="49:16" pos:end="49:28">TCO_TICK_NSEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:57"><expr pos:start="51:5" pos:end="51:56"><name pos:start="51:5" pos:end="51:7">val</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:56"><name pos:start="51:11" pos:end="51:23">qpci_io_readw</name><argument_list pos:start="51:24" pos:end="51:56">(<argument pos:start="51:25" pos:end="51:29"><expr pos:start="51:25" pos:end="51:29"><name pos:start="51:25" pos:end="51:29"><name pos:start="51:25" pos:end="51:25">d</name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:29">dev</name></name></expr></argument>, <argument pos:start="51:32" pos:end="51:55"><expr pos:start="51:32" pos:end="51:55"><name pos:start="51:32" pos:end="51:44"><name pos:start="51:32" pos:end="51:32">d</name><operator pos:start="51:33" pos:end="51:33">.</operator><name pos:start="51:34" pos:end="51:44">tco_io_base</name></name> <operator pos:start="51:46" pos:end="51:46">+</operator> <name pos:start="51:48" pos:end="51:55">TCO1_STS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:7">ret</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <ternary pos:start="53:11" pos:end="53:35"><condition pos:start="53:11" pos:end="53:29"><expr pos:start="53:11" pos:end="53:27"><name pos:start="53:11" pos:end="53:13">val</name> <operator pos:start="53:15" pos:end="53:15">&amp;</operator> <name pos:start="53:17" pos:end="53:27">TCO_TIMEOUT</name></expr> ?</condition><then pos:start="53:31" pos:end="53:31"> <expr pos:start="53:31" pos:end="53:31"><literal type="number" pos:start="53:31" pos:end="53:31">1</literal></expr> </then><else pos:start="53:33" pos:end="53:35">: <expr pos:start="53:35" pos:end="53:35"><literal type="number" pos:start="53:35" pos:end="53:35">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:23"><expr pos:start="55:5" pos:end="55:22"><call pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:12">g_assert</name><argument_list pos:start="55:13" pos:end="55:22">(<argument pos:start="55:14" pos:end="55:21"><expr pos:start="55:14" pos:end="55:21"><name pos:start="55:14" pos:end="55:16">ret</name> <operator pos:start="55:18" pos:end="55:19">==</operator> <literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:17"><expr pos:start="59:5" pos:end="59:16"><call pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:12">stop_tco</name><argument_list pos:start="59:13" pos:end="59:16">(<argument pos:start="59:14" pos:end="59:15"><expr pos:start="59:14" pos:end="59:15"><operator pos:start="59:14" pos:end="59:14">&amp;</operator><name pos:start="59:15" pos:end="59:15">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:16"><expr pos:start="61:5" pos:end="61:15"><call pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:13">qtest_end</name><argument_list pos:start="61:14" pos:end="61:15">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
