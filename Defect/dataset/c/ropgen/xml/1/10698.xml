<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10698.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">qpeg_decode_intra</name><parameter_list pos:start="1:30" pos:end="3:62">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:37">uint8_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">src</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">dst</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:66"><decl pos:start="1:59" pos:end="1:66"><type pos:start="1:59" pos:end="1:66"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:66">size</name></decl></parameter>,

			    <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:38">stride</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:49"><decl pos:start="3:41" pos:end="3:49"><type pos:start="3:41" pos:end="3:49"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:49">width</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:61"><decl pos:start="3:52" pos:end="3:61"><type pos:start="3:52" pos:end="3:61"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:61">height</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="133:1">{<block_content pos:start="7:5" pos:end="131:5">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">c0</name></decl>, <decl pos:start="11:13" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:14">c1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">run</name></decl>, <decl pos:start="13:14" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:17">copy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">filled</name> <init pos:start="15:16" pos:end="15:18">= <expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr></init></decl>;</decl_stmt>

    

    <expr_stmt pos:start="19:5" pos:end="19:13"><expr pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:10">height</name><operator pos:start="19:11" pos:end="19:12">--</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:7">dst</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:13">dst</name> <operator pos:start="21:15" pos:end="21:15">+</operator> <name pos:start="21:17" pos:end="21:22">height</name> <operator pos:start="21:24" pos:end="21:24">*</operator> <name pos:start="21:26" pos:end="21:31">stride</name></expr>;</expr_stmt>

    

    <while pos:start="25:5" pos:end="131:5">while<condition pos:start="25:10" pos:end="25:19">(<expr pos:start="25:11" pos:end="25:18"><name pos:start="25:11" pos:end="25:14">size</name> <operator pos:start="25:16" pos:end="25:16">&gt;</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>)</condition> <block pos:start="25:21" pos:end="131:5">{<block_content pos:start="27:9" pos:end="129:9">

	<expr_stmt pos:start="27:9" pos:end="27:22"><expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:12">code</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <operator pos:start="27:16" pos:end="27:16">*</operator><name pos:start="27:17" pos:end="27:19">src</name><operator pos:start="27:20" pos:end="27:21">++</operator></expr>;</expr_stmt>

	<expr_stmt pos:start="29:9" pos:end="29:15"><expr pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:12">size</name><operator pos:start="29:13" pos:end="29:14">--</operator></expr>;</expr_stmt>

	<expr_stmt pos:start="31:9" pos:end="31:23"><expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:11">run</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:18">copy</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>;</expr_stmt>

	<if_stmt pos:start="33:9" pos:end="35:18"><if pos:start="33:9" pos:end="35:18">if<condition pos:start="33:11" pos:end="33:24">(<expr pos:start="33:12" pos:end="33:23"><name pos:start="33:12" pos:end="33:15">code</name> <operator pos:start="33:17" pos:end="33:18">==</operator> <literal type="number" pos:start="33:20" pos:end="33:23">0xFC</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:18"><block_content pos:start="35:13" pos:end="35:18"> <comment type="block" pos:start="33:26" pos:end="33:50">/* end-of-picture code */</comment>

	    <break pos:start="35:13" pos:end="35:18">break;</break></block_content></block></if></if_stmt>

	<if_stmt pos:start="37:9" pos:end="81:9"><if pos:start="37:9" pos:end="47:9">if<condition pos:start="37:11" pos:end="37:24">(<expr pos:start="37:12" pos:end="37:23"><name pos:start="37:12" pos:end="37:15">code</name> <operator pos:start="37:17" pos:end="37:18">&gt;=</operator> <literal type="number" pos:start="37:20" pos:end="37:23">0xF8</literal></expr>)</condition> <block pos:start="37:26" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:60"> <comment type="block" pos:start="37:28" pos:end="37:46">/* very long run */</comment>

	    <expr_stmt pos:start="39:13" pos:end="39:24"><expr pos:start="39:13" pos:end="39:23"><name pos:start="39:13" pos:end="39:14">c0</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <operator pos:start="39:18" pos:end="39:18">*</operator><name pos:start="39:19" pos:end="39:21">src</name><operator pos:start="39:22" pos:end="39:23">++</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="41:13" pos:end="41:24"><expr pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:14">c1</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <operator pos:start="41:18" pos:end="41:18">*</operator><name pos:start="41:19" pos:end="41:21">src</name><operator pos:start="41:22" pos:end="41:23">++</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="43:13" pos:end="43:22"><expr pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:16">size</name> <operator pos:start="43:18" pos:end="43:19">-=</operator> <literal type="number" pos:start="43:21" pos:end="43:21">2</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="45:13" pos:end="45:60"><expr pos:start="45:13" pos:end="45:59"><name pos:start="45:13" pos:end="45:15">run</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <operator pos:start="45:19" pos:end="45:19">(</operator><operator pos:start="45:20" pos:end="45:20">(</operator><name pos:start="45:21" pos:end="45:24">code</name> <operator pos:start="45:26" pos:end="45:26">&amp;</operator> <literal type="number" pos:start="45:28" pos:end="45:30">0x7</literal><operator pos:start="45:31" pos:end="45:31">)</operator> <operator pos:start="45:33" pos:end="45:34">&lt;&lt;</operator> <literal type="number" pos:start="45:36" pos:end="45:37">16</literal><operator pos:start="45:38" pos:end="45:38">)</operator> <operator pos:start="45:40" pos:end="45:40">+</operator> <operator pos:start="45:42" pos:end="45:42">(</operator><name pos:start="45:43" pos:end="45:44">c0</name> <operator pos:start="45:46" pos:end="45:47">&lt;&lt;</operator> <literal type="number" pos:start="45:49" pos:end="45:49">8</literal><operator pos:start="45:50" pos:end="45:50">)</operator> <operator pos:start="45:52" pos:end="45:52">+</operator> <name pos:start="45:54" pos:end="45:55">c1</name> <operator pos:start="45:57" pos:end="45:57">+</operator> <literal type="number" pos:start="45:59" pos:end="45:59">2</literal></expr>;</expr_stmt>

	</block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="55:9">else if <condition pos:start="47:19" pos:end="47:32">(<expr pos:start="47:20" pos:end="47:31"><name pos:start="47:20" pos:end="47:23">code</name> <operator pos:start="47:25" pos:end="47:26">&gt;=</operator> <literal type="number" pos:start="47:28" pos:end="47:31">0xF0</literal></expr>)</condition> <block pos:start="47:34" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:47"> <comment type="block" pos:start="47:36" pos:end="47:49">/* long run */</comment>

	    <expr_stmt pos:start="49:13" pos:end="49:24"><expr pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:14">c0</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <operator pos:start="49:18" pos:end="49:18">*</operator><name pos:start="49:19" pos:end="49:21">src</name><operator pos:start="49:22" pos:end="49:23">++</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="51:13" pos:end="51:19"><expr pos:start="51:13" pos:end="51:18"><name pos:start="51:13" pos:end="51:16">size</name><operator pos:start="51:17" pos:end="51:18">--</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="53:13" pos:end="53:47"><expr pos:start="53:13" pos:end="53:46"><name pos:start="53:13" pos:end="53:15">run</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <operator pos:start="53:19" pos:end="53:19">(</operator><operator pos:start="53:20" pos:end="53:20">(</operator><name pos:start="53:21" pos:end="53:24">code</name> <operator pos:start="53:26" pos:end="53:26">&amp;</operator> <literal type="number" pos:start="53:28" pos:end="53:30">0xF</literal><operator pos:start="53:31" pos:end="53:31">)</operator> <operator pos:start="53:33" pos:end="53:34">&lt;&lt;</operator> <literal type="number" pos:start="53:36" pos:end="53:36">8</literal><operator pos:start="53:37" pos:end="53:37">)</operator> <operator pos:start="53:39" pos:end="53:39">+</operator> <name pos:start="53:41" pos:end="53:42">c0</name> <operator pos:start="53:44" pos:end="53:44">+</operator> <literal type="number" pos:start="53:46" pos:end="53:46">2</literal></expr>;</expr_stmt>

	</block_content>}</block></if> <if type="elseif" pos:start="55:11" pos:end="59:9">else if <condition pos:start="55:19" pos:end="55:32">(<expr pos:start="55:20" pos:end="55:31"><name pos:start="55:20" pos:end="55:23">code</name> <operator pos:start="55:25" pos:end="55:26">&gt;=</operator> <literal type="number" pos:start="55:28" pos:end="55:31">0xE0</literal></expr>)</condition> <block pos:start="55:34" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:36"> <comment type="block" pos:start="55:36" pos:end="55:50">/* short run */</comment>

	    <expr_stmt pos:start="57:13" pos:end="57:36"><expr pos:start="57:13" pos:end="57:35"><name pos:start="57:13" pos:end="57:15">run</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <operator pos:start="57:19" pos:end="57:19">(</operator><name pos:start="57:20" pos:end="57:23">code</name> <operator pos:start="57:25" pos:end="57:25">&amp;</operator> <literal type="number" pos:start="57:27" pos:end="57:30">0x1F</literal><operator pos:start="57:31" pos:end="57:31">)</operator> <operator pos:start="57:33" pos:end="57:33">+</operator> <literal type="number" pos:start="57:35" pos:end="57:35">2</literal></expr>;</expr_stmt>

	</block_content>}</block></if> <if type="elseif" pos:start="59:11" pos:end="69:9">else if <condition pos:start="59:19" pos:end="59:32">(<expr pos:start="59:20" pos:end="59:31"><name pos:start="59:20" pos:end="59:23">code</name> <operator pos:start="59:25" pos:end="59:26">&gt;=</operator> <literal type="number" pos:start="59:28" pos:end="59:31">0xC0</literal></expr>)</condition> <block pos:start="59:34" pos:end="69:9">{<block_content pos:start="61:13" pos:end="67:62"> <comment type="block" pos:start="59:36" pos:end="59:55">/* very long copy */</comment>

	    <expr_stmt pos:start="61:13" pos:end="61:24"><expr pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:14">c0</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <operator pos:start="61:18" pos:end="61:18">*</operator><name pos:start="61:19" pos:end="61:21">src</name><operator pos:start="61:22" pos:end="61:23">++</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="63:13" pos:end="63:24"><expr pos:start="63:13" pos:end="63:23"><name pos:start="63:13" pos:end="63:14">c1</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <operator pos:start="63:18" pos:end="63:18">*</operator><name pos:start="63:19" pos:end="63:21">src</name><operator pos:start="63:22" pos:end="63:23">++</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="65:13" pos:end="65:22"><expr pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:16">size</name> <operator pos:start="65:18" pos:end="65:19">-=</operator> <literal type="number" pos:start="65:21" pos:end="65:21">2</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="67:13" pos:end="67:62"><expr pos:start="67:13" pos:end="67:61"><name pos:start="67:13" pos:end="67:16">copy</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <operator pos:start="67:20" pos:end="67:20">(</operator><operator pos:start="67:21" pos:end="67:21">(</operator><name pos:start="67:22" pos:end="67:25">code</name> <operator pos:start="67:27" pos:end="67:27">&amp;</operator> <literal type="number" pos:start="67:29" pos:end="67:32">0x3F</literal><operator pos:start="67:33" pos:end="67:33">)</operator> <operator pos:start="67:35" pos:end="67:36">&lt;&lt;</operator> <literal type="number" pos:start="67:38" pos:end="67:39">16</literal><operator pos:start="67:40" pos:end="67:40">)</operator> <operator pos:start="67:42" pos:end="67:42">+</operator> <operator pos:start="67:44" pos:end="67:44">(</operator><name pos:start="67:45" pos:end="67:46">c0</name> <operator pos:start="67:48" pos:end="67:49">&lt;&lt;</operator> <literal type="number" pos:start="67:51" pos:end="67:51">8</literal><operator pos:start="67:52" pos:end="67:52">)</operator> <operator pos:start="67:54" pos:end="67:54">+</operator> <name pos:start="67:56" pos:end="67:57">c1</name> <operator pos:start="67:59" pos:end="67:59">+</operator> <literal type="number" pos:start="67:61" pos:end="67:61">1</literal></expr>;</expr_stmt>

	</block_content>}</block></if> <if type="elseif" pos:start="69:11" pos:end="77:9">else if <condition pos:start="69:19" pos:end="69:32">(<expr pos:start="69:20" pos:end="69:31"><name pos:start="69:20" pos:end="69:23">code</name> <operator pos:start="69:25" pos:end="69:26">&gt;=</operator> <literal type="number" pos:start="69:28" pos:end="69:31">0x80</literal></expr>)</condition> <block pos:start="69:34" pos:end="77:9">{<block_content pos:start="71:13" pos:end="75:49"> <comment type="block" pos:start="69:36" pos:end="69:50">/* long copy */</comment>

	    <expr_stmt pos:start="71:13" pos:end="71:24"><expr pos:start="71:13" pos:end="71:23"><name pos:start="71:13" pos:end="71:14">c0</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <operator pos:start="71:18" pos:end="71:18">*</operator><name pos:start="71:19" pos:end="71:21">src</name><operator pos:start="71:22" pos:end="71:23">++</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="73:13" pos:end="73:19"><expr pos:start="73:13" pos:end="73:18"><name pos:start="73:13" pos:end="73:16">size</name><operator pos:start="73:17" pos:end="73:18">--</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="75:13" pos:end="75:49"><expr pos:start="75:13" pos:end="75:48"><name pos:start="75:13" pos:end="75:16">copy</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <operator pos:start="75:20" pos:end="75:20">(</operator><operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:25">code</name> <operator pos:start="75:27" pos:end="75:27">&amp;</operator> <literal type="number" pos:start="75:29" pos:end="75:32">0x7F</literal><operator pos:start="75:33" pos:end="75:33">)</operator> <operator pos:start="75:35" pos:end="75:36">&lt;&lt;</operator> <literal type="number" pos:start="75:38" pos:end="75:38">8</literal><operator pos:start="75:39" pos:end="75:39">)</operator> <operator pos:start="75:41" pos:end="75:41">+</operator> <name pos:start="75:43" pos:end="75:44">c0</name> <operator pos:start="75:46" pos:end="75:46">+</operator> <literal type="number" pos:start="75:48" pos:end="75:48">1</literal></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="77:11" pos:end="81:9">else <block pos:start="77:16" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:28"> <comment type="block" pos:start="77:18" pos:end="77:33">/* short copy */</comment>

	    <expr_stmt pos:start="79:13" pos:end="79:28"><expr pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:16">copy</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:23">code</name> <operator pos:start="79:25" pos:end="79:25">+</operator> <literal type="number" pos:start="79:27" pos:end="79:27">1</literal></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

	

	<comment type="block" pos:start="85:9" pos:end="85:40">/* perform actual run or copy */</comment>

	<if_stmt pos:start="87:9" pos:end="129:9"><if pos:start="87:9" pos:end="111:9">if<condition pos:start="87:11" pos:end="87:15">(<expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">run</name></expr>)</condition> <block pos:start="87:17" pos:end="111:9">{<block_content pos:start="89:13" pos:end="109:13">

	    <decl_stmt pos:start="89:13" pos:end="89:18"><decl pos:start="89:13" pos:end="89:17"><type pos:start="89:13" pos:end="89:15"><name pos:start="89:13" pos:end="89:15">int</name></type> <name pos:start="89:17" pos:end="89:17">p</name></decl>;</decl_stmt>

	    

	    <expr_stmt pos:start="93:13" pos:end="93:23"><expr pos:start="93:13" pos:end="93:22"><name pos:start="93:13" pos:end="93:13">p</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <operator pos:start="93:17" pos:end="93:17">*</operator><name pos:start="93:18" pos:end="93:20">src</name><operator pos:start="93:21" pos:end="93:22">++</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="95:13" pos:end="95:19"><expr pos:start="95:13" pos:end="95:18"><name pos:start="95:13" pos:end="95:16">size</name><operator pos:start="95:17" pos:end="95:18">--</operator></expr>;</expr_stmt>

	    <for pos:start="97:13" pos:end="109:13">for<control pos:start="97:16" pos:end="97:36">(<init pos:start="97:17" pos:end="97:22"><expr pos:start="97:17" pos:end="97:21"><name pos:start="97:17" pos:end="97:17">i</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <literal type="number" pos:start="97:21" pos:end="97:21">0</literal></expr>;</init> <condition pos:start="97:24" pos:end="97:31"><expr pos:start="97:24" pos:end="97:30"><name pos:start="97:24" pos:end="97:24">i</name> <operator pos:start="97:26" pos:end="97:26">&lt;</operator> <name pos:start="97:28" pos:end="97:30">run</name></expr>;</condition> <incr pos:start="97:33" pos:end="97:35"><expr pos:start="97:33" pos:end="97:35"><name pos:start="97:33" pos:end="97:33">i</name><operator pos:start="97:34" pos:end="97:35">++</operator></expr></incr>)</control> <block pos:start="97:38" pos:end="109:13">{<block_content pos:start="99:17" pos:end="107:17">

		<expr_stmt pos:start="99:17" pos:end="99:34"><expr pos:start="99:17" pos:end="99:33"><name pos:start="99:17" pos:end="99:29"><name pos:start="99:17" pos:end="99:19">dst</name><index pos:start="99:20" pos:end="99:29">[<expr pos:start="99:21" pos:end="99:28"><name pos:start="99:21" pos:end="99:26">filled</name><operator pos:start="99:27" pos:end="99:28">++</operator></expr>]</index></name> <operator pos:start="99:31" pos:end="99:31">=</operator> <name pos:start="99:33" pos:end="99:33">p</name></expr>;</expr_stmt>

		<if_stmt pos:start="101:17" pos:end="107:17"><if pos:start="101:17" pos:end="107:17">if <condition pos:start="101:20" pos:end="101:36">(<expr pos:start="101:21" pos:end="101:35"><name pos:start="101:21" pos:end="101:26">filled</name> <operator pos:start="101:28" pos:end="101:29">&gt;=</operator> <name pos:start="101:31" pos:end="101:35">width</name></expr>)</condition> <block pos:start="101:38" pos:end="107:17">{<block_content pos:start="103:21" pos:end="105:34">

		    <expr_stmt pos:start="103:21" pos:end="103:31"><expr pos:start="103:21" pos:end="103:30"><name pos:start="103:21" pos:end="103:26">filled</name> <operator pos:start="103:28" pos:end="103:28">=</operator> <literal type="number" pos:start="103:30" pos:end="103:30">0</literal></expr>;</expr_stmt>

		    <expr_stmt pos:start="105:21" pos:end="105:34"><expr pos:start="105:21" pos:end="105:33"><name pos:start="105:21" pos:end="105:23">dst</name> <operator pos:start="105:25" pos:end="105:26">-=</operator> <name pos:start="105:28" pos:end="105:33">stride</name></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>

	    </block_content>}</block></for>

	</block_content>}</block></if> <else pos:start="111:11" pos:end="129:9">else <block pos:start="111:16" pos:end="129:9">{<block_content pos:start="113:13" pos:end="127:25">

	    <for pos:start="113:13" pos:end="125:13">for<control pos:start="113:16" pos:end="113:37">(<init pos:start="113:17" pos:end="113:22"><expr pos:start="113:17" pos:end="113:21"><name pos:start="113:17" pos:end="113:17">i</name> <operator pos:start="113:19" pos:end="113:19">=</operator> <literal type="number" pos:start="113:21" pos:end="113:21">0</literal></expr>;</init> <condition pos:start="113:24" pos:end="113:32"><expr pos:start="113:24" pos:end="113:31"><name pos:start="113:24" pos:end="113:24">i</name> <operator pos:start="113:26" pos:end="113:26">&lt;</operator> <name pos:start="113:28" pos:end="113:31">copy</name></expr>;</condition> <incr pos:start="113:34" pos:end="113:36"><expr pos:start="113:34" pos:end="113:36"><name pos:start="113:34" pos:end="113:34">i</name><operator pos:start="113:35" pos:end="113:36">++</operator></expr></incr>)</control> <block pos:start="113:39" pos:end="125:13">{<block_content pos:start="115:17" pos:end="123:17">

		<expr_stmt pos:start="115:17" pos:end="115:39"><expr pos:start="115:17" pos:end="115:38"><name pos:start="115:17" pos:end="115:29"><name pos:start="115:17" pos:end="115:19">dst</name><index pos:start="115:20" pos:end="115:29">[<expr pos:start="115:21" pos:end="115:28"><name pos:start="115:21" pos:end="115:26">filled</name><operator pos:start="115:27" pos:end="115:28">++</operator></expr>]</index></name> <operator pos:start="115:31" pos:end="115:31">=</operator> <operator pos:start="115:33" pos:end="115:33">*</operator><name pos:start="115:34" pos:end="115:36">src</name><operator pos:start="115:37" pos:end="115:38">++</operator></expr>;</expr_stmt>

		<if_stmt pos:start="117:17" pos:end="123:17"><if pos:start="117:17" pos:end="123:17">if <condition pos:start="117:20" pos:end="117:36">(<expr pos:start="117:21" pos:end="117:35"><name pos:start="117:21" pos:end="117:26">filled</name> <operator pos:start="117:28" pos:end="117:29">&gt;=</operator> <name pos:start="117:31" pos:end="117:35">width</name></expr>)</condition> <block pos:start="117:38" pos:end="123:17">{<block_content pos:start="119:21" pos:end="121:34">

		    <expr_stmt pos:start="119:21" pos:end="119:31"><expr pos:start="119:21" pos:end="119:30"><name pos:start="119:21" pos:end="119:26">filled</name> <operator pos:start="119:28" pos:end="119:28">=</operator> <literal type="number" pos:start="119:30" pos:end="119:30">0</literal></expr>;</expr_stmt>

		    <expr_stmt pos:start="121:21" pos:end="121:34"><expr pos:start="121:21" pos:end="121:33"><name pos:start="121:21" pos:end="121:23">dst</name> <operator pos:start="121:25" pos:end="121:26">-=</operator> <name pos:start="121:28" pos:end="121:33">stride</name></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>

	    </block_content>}</block></for>

	    <expr_stmt pos:start="127:13" pos:end="127:25"><expr pos:start="127:13" pos:end="127:24"><name pos:start="127:13" pos:end="127:16">size</name> <operator pos:start="127:18" pos:end="127:19">-=</operator> <name pos:start="127:21" pos:end="127:24">copy</name></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
